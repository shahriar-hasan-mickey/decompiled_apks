record `com.airbnb.lottie.model.MutablePair` @kind class @AccessFlag PUBLIC {
  `java.lang.Object` `com.airbnb.lottie.model.MutablePair.a` @AccessFlag ;
  `java.lang.Object` `com.airbnb.lottie.model.MutablePair.b` @AccessFlag ;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.MutablePair` v0 @kind this) @signature `Lcom/airbnb/lottie/model/MutablePair;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L391fdc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L391fe2.  return @kind void;
}
procedure `boolean` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/airbnb/lottie/model/MutablePair;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L391f08.  if v0 == v1 then goto L391f22;
  #L391f0c.  if v0 == 0 then goto L391f1e;
  #L391f10.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L391f16.  v0:= temp;
  #L391f18.  if v0 == 0 then goto L391f1e;
  #L391f1c.  goto L391f22;
  #L391f1e.  v0:= 0I;
  #L391f20.  goto L391f24;
  #L391f22.  v0:= 1I;
  #L391f24.  return v0;
}
procedure `boolean` `equals`(`com.airbnb.lottie.model.MutablePair` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/airbnb/lottie/model/MutablePair;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L391ebc.  v0:= instanceof @variable v4 @type ^`androidx.core.util.Pair` @kind boolean;
  #L391ec0.  v1:= 0I;
  #L391ec2.  if v0 != 0 then goto L391ec8;
  #L391ec6.  return v1;
  #L391ec8.  v4:= (`androidx.core.util.Pair`) v4 @kind object;
  #L391ecc.  v0:= v4.`androidx.core.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L391ed0.  v2:= v3.`com.airbnb.lottie.model.MutablePair.a` @type ^`java.lang.Object` @kind object;
  #L391ed4.  call temp:= `a`(v0, v2) @signature `Lcom/airbnb/lottie/model/MutablePair;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L391eda.  v0:= temp;
  #L391edc.  if v0 == 0 then goto L391ef6;
  #L391ee0.  v4:= v4.`androidx.core.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L391ee4.  v0:= v3.`com.airbnb.lottie.model.MutablePair.b` @type ^`java.lang.Object` @kind object;
  #L391ee8.  call temp:= `a`(v4, v0) @signature `Lcom/airbnb/lottie/model/MutablePair;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L391eee.  v4:= temp;
  #L391ef0.  if v4 == 0 then goto L391ef6;
  #L391ef4.  v1:= 1I;
  #L391ef6.  return v1;
}
procedure `int` `hashCode`(`com.airbnb.lottie.model.MutablePair` v3 @kind this) @signature `Lcom/airbnb/lottie/model/MutablePair;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L391f38.  v0:= v3.`com.airbnb.lottie.model.MutablePair.a` @type ^`java.lang.Object` @kind object;
  #L391f3c.  v1:= 0I;
  #L391f3e.  if v0 != 0 then goto L391f46;
  #L391f42.  v0:= 0I;
  #L391f44.  goto L391f4e;
  #L391f46.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L391f4c.  v0:= temp;
  #L391f4e.  v2:= v3.`com.airbnb.lottie.model.MutablePair.b` @type ^`java.lang.Object` @kind object;
  #L391f52.  if v2 != 0 then goto L391f58;
  #L391f56.  goto L391f60;
  #L391f58.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L391f5e.  v1:= temp;
  #L391f60.  v0:= v0 ^~ v1 @kind int;
  #L391f62.  return v0;
}
procedure `void` `set`(`com.airbnb.lottie.model.MutablePair` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/airbnb/lottie/model/MutablePair;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L391ff4.  v0.`com.airbnb.lottie.model.MutablePair.a` @type ^`java.lang.Object` := v1 @kind object;
  #L391ff8.  v0.`com.airbnb.lottie.model.MutablePair.b` @type ^`java.lang.Object` := v2 @kind object;
  #L391ffc.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.airbnb.lottie.model.MutablePair` v2 @kind this) @signature `Lcom/airbnb/lottie/model/MutablePair;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L391f74.  v0:= new `java.lang.StringBuilder`;
  #L391f78.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L391f7e.  v1:= "Pair{" @kind object;
  #L391f82.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L391f88.  v1:= v2.`com.airbnb.lottie.model.MutablePair.a` @type ^`java.lang.Object` @kind object;
  #L391f8c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L391f92.  v1:= temp @kind object;
  #L391f94.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L391f9a.  v1:= " " @kind object;
  #L391f9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L391fa4.  v1:= v2.`com.airbnb.lottie.model.MutablePair.b` @type ^`java.lang.Object` @kind object;
  #L391fa8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L391fae.  v1:= temp @kind object;
  #L391fb0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L391fb6.  v1:= "}" @kind object;
  #L391fba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L391fc0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L391fc6.  v0:= temp @kind object;
  #L391fc8.  return v0 @kind object;
}
