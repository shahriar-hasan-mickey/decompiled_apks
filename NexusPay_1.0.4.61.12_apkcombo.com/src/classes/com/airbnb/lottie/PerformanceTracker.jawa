record `com.airbnb.lottie.PerformanceTracker` @kind class @AccessFlag PUBLIC {
  `boolean` `com.airbnb.lottie.PerformanceTracker.a` @AccessFlag PRIVATE;
  `java.util.Set` `com.airbnb.lottie.PerformanceTracker.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.airbnb.lottie.PerformanceTracker.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Comparator` `com.airbnb.lottie.PerformanceTracker.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.PerformanceTracker` v1 @kind this) @signature `Lcom/airbnb/lottie/PerformanceTracker;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L38a088.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38a08e.  v0:= 0I;
  #L38a090.  v1.`com.airbnb.lottie.PerformanceTracker.a` @type ^`boolean` := v0 @kind boolean;
  #L38a094.  v0:= new `androidx.collection.ArraySet`;
  #L38a098.  call `<init>`(v0) @signature `Landroidx/collection/ArraySet;.<init>:()V` @kind direct;
  #L38a09e.  v1.`com.airbnb.lottie.PerformanceTracker.b` @type ^`java.util.Set` := v0 @kind object;
  #L38a0a2.  v0:= new `java.util.HashMap`;
  #L38a0a6.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L38a0ac.  v1.`com.airbnb.lottie.PerformanceTracker.c` @type ^`java.util.Map` := v0 @kind object;
  #L38a0b0.  v0:= new `com.airbnb.lottie.PerformanceTracker$a`;
  #L38a0b4.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/PerformanceTracker$a;.<init>:(Lcom/airbnb/lottie/PerformanceTracker;)V` @kind direct;
  #L38a0ba.  v1.`com.airbnb.lottie.PerformanceTracker.d` @type ^`java.util.Comparator` := v0 @kind object;
  #L38a0be.  return @kind void;
}
procedure `void` `a`(`com.airbnb.lottie.PerformanceTracker` v0 @kind this, `boolean` v1 ) @signature `Lcom/airbnb/lottie/PerformanceTracker;.a:(Z)V` @AccessFlag  {
    temp;

  #L38a22c.  v0.`com.airbnb.lottie.PerformanceTracker.a` @type ^`boolean` := v1 @kind boolean;
  #L38a230.  return @kind void;
}
procedure `void` `addFrameListener`(`com.airbnb.lottie.PerformanceTracker` v1 @kind this, `com.airbnb.lottie.PerformanceTracker$FrameListener` v2 @kind object) @signature `Lcom/airbnb/lottie/PerformanceTracker;.addFrameListener:(Lcom/airbnb/lottie/PerformanceTracker$FrameListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a0d0.  v0:= v1.`com.airbnb.lottie.PerformanceTracker.b` @type ^`java.util.Set` @kind object;
  #L38a0d4.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38a0da.  return @kind void;
}
procedure `void` `clearRenderTimes`(`com.airbnb.lottie.PerformanceTracker` v1 @kind this) @signature `Lcom/airbnb/lottie/PerformanceTracker;.clearRenderTimes:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a0ec.  v0:= v1.`com.airbnb.lottie.PerformanceTracker.c` @type ^`java.util.Map` @kind object;
  #L38a0f0.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L38a0f6.  return @kind void;
}
procedure `java.util.List` `getSortedRenderTimes`(`com.airbnb.lottie.PerformanceTracker` v5 @kind this) @signature `Lcom/airbnb/lottie/PerformanceTracker;.getSortedRenderTimes:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L389fe0.  v0:= v5.`com.airbnb.lottie.PerformanceTracker.a` @type ^`boolean` @kind boolean;
  #L389fe4.  if v0 != 0 then goto L389ff2;
  #L389fe8.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L389fee.  v0:= temp @kind object;
  #L389ff0.  return v0 @kind object;
  #L389ff2.  v0:= new `java.util.ArrayList`;
  #L389ff6.  v1:= v5.`com.airbnb.lottie.PerformanceTracker.c` @type ^`java.util.Map` @kind object;
  #L389ffa.  call temp:= `size`(v1) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L38a000.  v1:= temp;
  #L38a002.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L38a008.  v1:= v5.`com.airbnb.lottie.PerformanceTracker.c` @type ^`java.util.Map` @kind object;
  #L38a00c.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L38a012.  v1:= temp @kind object;
  #L38a014.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L38a01a.  v1:= temp @kind object;
  #L38a01c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L38a022.  v2:= temp;
  #L38a024.  if v2 == 0 then goto L38a06a;
  #L38a028.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L38a02e.  v2:= temp @kind object;
  #L38a030.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L38a034.  v3:= new `androidx.core.util.Pair`;
  #L38a038.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L38a03e.  v4:= temp @kind object;
  #L38a040.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L38a046.  v2:= temp @kind object;
  #L38a048.  v2:= (`com.airbnb.lottie.utils.MeanCalculator`) v2 @kind object;
  #L38a04c.  call temp:= `getMean`(v2) @signature `Lcom/airbnb/lottie/utils/MeanCalculator;.getMean:()F` @kind virtual;
  #L38a052.  v2:= temp;
  #L38a054.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L38a05a.  v2:= temp @kind object;
  #L38a05c.  call `<init>`(v3, v4, v2) @signature `Landroidx/core/util/Pair;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L38a062.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38a068.  goto L38a01c;
  #L38a06a.  v1:= v5.`com.airbnb.lottie.PerformanceTracker.d` @type ^`java.util.Comparator` @kind object;
  #L38a06e.  call `sort`(v0, v1) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L38a074.  return v0 @kind object;
}
procedure `void` `logRenderTimes`(`com.airbnb.lottie.PerformanceTracker` v7 @kind this) @signature `Lcom/airbnb/lottie/PerformanceTracker;.logRenderTimes:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L38a108.  v0:= v7.`com.airbnb.lottie.PerformanceTracker.a` @type ^`boolean` @kind boolean;
  #L38a10c.  if v0 != 0 then goto L38a112;
  #L38a110.  return @kind void;
  #L38a112.  call temp:= `getSortedRenderTimes`(v7) @signature `Lcom/airbnb/lottie/PerformanceTracker;.getSortedRenderTimes:()Ljava/util/List;` @kind virtual;
  #L38a118.  v0:= temp @kind object;
  #L38a11a.  v1:= "LOTTIE" @kind object;
  #L38a11e.  v2:= "Render times:" @kind object;
  #L38a122.  call temp:= `d`(v1, v2) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L38a128.  v2:= 0I;
  #L38a12a.  v3:= 0I;
  #L38a12c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L38a132.  v4:= temp;
  #L38a134.  if v3 >= v4 then goto L38a174;
  #L38a138.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38a13e.  v4:= temp @kind object;
  #L38a140.  v4:= (`androidx.core.util.Pair`) v4 @kind object;
  #L38a144.  v5:= 2I;
  #L38a146.  v5:= new `java.lang.Object`[v5];
  #L38a14a.  v6:= v4.`androidx.core.util.Pair.first` @type ^`java.lang.Object` @kind object;
  #L38a14e.  v5[v2]:= v6 @kind object;
  #L38a152.  v4:= v4.`androidx.core.util.Pair.second` @type ^`java.lang.Object` @kind object;
  #L38a156.  v6:= 1I;
  #L38a158.  v5[v6]:= v4 @kind object;
  #L38a15c.  v4:= "\t\t%30s:%.2f" @kind object;
  #L38a160.  call temp:= `format`(v4, v5) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L38a166.  v4:= temp @kind object;
  #L38a168.  call temp:= `d`(v1, v4) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L38a16e.  v3:= v3 + 1;
  #L38a172.  goto L38a12c;
  #L38a174.  return @kind void;
}
procedure `void` `recordRenderTime`(`com.airbnb.lottie.PerformanceTracker` v2 @kind this, `java.lang.String` v3 @kind object, `float` v4 ) @signature `Lcom/airbnb/lottie/PerformanceTracker;.recordRenderTime:(Ljava/lang/String;F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38a188.  v0:= v2.`com.airbnb.lottie.PerformanceTracker.a` @type ^`boolean` @kind boolean;
  #L38a18c.  if v0 != 0 then goto L38a192;
  #L38a190.  return @kind void;
  #L38a192.  v0:= v2.`com.airbnb.lottie.PerformanceTracker.c` @type ^`java.util.Map` @kind object;
  #L38a196.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L38a19c.  v0:= temp @kind object;
  #L38a19e.  v0:= (`com.airbnb.lottie.utils.MeanCalculator`) v0 @kind object;
  #L38a1a2.  if v0 != 0 then goto L38a1ba;
  #L38a1a6.  v0:= new `com.airbnb.lottie.utils.MeanCalculator`;
  #L38a1aa.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/utils/MeanCalculator;.<init>:()V` @kind direct;
  #L38a1b0.  v1:= v2.`com.airbnb.lottie.PerformanceTracker.c` @type ^`java.util.Map` @kind object;
  #L38a1b4.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L38a1ba.  call `add`(v0, v4) @signature `Lcom/airbnb/lottie/utils/MeanCalculator;.add:(F)V` @kind virtual;
  #L38a1c0.  v0:= "__container" @kind object;
  #L38a1c4.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L38a1ca.  v3:= temp;
  #L38a1cc.  if v3 == 0 then goto L38a1fc;
  #L38a1d0.  v3:= v2.`com.airbnb.lottie.PerformanceTracker.b` @type ^`java.util.Set` @kind object;
  #L38a1d4.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L38a1da.  v3:= temp @kind object;
  #L38a1dc.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L38a1e2.  v0:= temp;
  #L38a1e4.  if v0 == 0 then goto L38a1fc;
  #L38a1e8.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L38a1ee.  v0:= temp @kind object;
  #L38a1f0.  v0:= (`com.airbnb.lottie.PerformanceTracker$FrameListener`) v0 @kind object;
  #L38a1f4.  call `onFrameRendered`(v0, v4) @signature `Lcom/airbnb/lottie/PerformanceTracker$FrameListener;.onFrameRendered:(F)V` @kind interface;
  #L38a1fa.  goto L38a1dc;
  #L38a1fc.  return @kind void;
}
procedure `void` `removeFrameListener`(`com.airbnb.lottie.PerformanceTracker` v1 @kind this, `com.airbnb.lottie.PerformanceTracker$FrameListener` v2 @kind object) @signature `Lcom/airbnb/lottie/PerformanceTracker;.removeFrameListener:(Lcom/airbnb/lottie/PerformanceTracker$FrameListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a210.  v0:= v1.`com.airbnb.lottie.PerformanceTracker.b` @type ^`java.util.Set` @kind object;
  #L38a214.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L38a21a.  return @kind void;
}
