record `com.airbnb.lottie.network.DefaultLottieFetchResult` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.network.LottieFetchResult` @kind interface {
  `java.net.HttpURLConnection` `com.airbnb.lottie.network.DefaultLottieFetchResult.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.network.DefaultLottieFetchResult` v0 @kind this, `java.net.HttpURLConnection` v1 @kind object) @signature `Lcom/airbnb/lottie/network/DefaultLottieFetchResult;.<init>:(Ljava/net/HttpURLConnection;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L397cec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L397cf2.  v0.`com.airbnb.lottie.network.DefaultLottieFetchResult.a` @type ^`java.net.HttpURLConnection` := v1 @kind object;
  #L397cf6.  return @kind void;
}
procedure `java.lang.String` `a`(`com.airbnb.lottie.network.DefaultLottieFetchResult` v2 @kind this, `java.net.HttpURLConnection` v3 @kind object) @signature `Lcom/airbnb/lottie/network/DefaultLottieFetchResult;.a:(Ljava/net/HttpURLConnection;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L397c48.  v0:= new `java.io.BufferedReader`;
  #L397c4c.  v1:= new `java.io.InputStreamReader`;
  #L397c50.  call temp:= `getErrorStream`(v3) @signature `Ljava/net/HttpURLConnection;.getErrorStream:()Ljava/io/InputStream;` @kind virtual;
  #L397c56.  v3:= temp @kind object;
  #L397c58.  call `<init>`(v1, v3) @signature `Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L397c5e.  call `<init>`(v0, v1) @signature `Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L397c64.  v3:= new `java.lang.StringBuilder`;
  #L397c68.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L397c6e.  call temp:= `readLine`(v0) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #L397c74.  v1:= temp @kind object;
  #L397c76.  if v1 == 0 then goto L397c8c;
  #L397c7a.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L397c80.  v1:= 10I;
  #L397c84.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L397c8a.  goto L397c6e;
  #L397c8c.  call `close`(v0) @signature `Ljava/io/BufferedReader;.close:()V` @kind virtual;
  #L397c92.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L397c98.  v3:= temp @kind object;
  #L397c9a.  return v3 @kind object;
  #L397c9c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L397c9e.  goto L397ca4;
  #L397ca0.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L397ca2.  throw v3;
  #L397ca4.  call `close`(v0) @signature `Ljava/io/BufferedReader;.close:()V` @kind virtual;
  #L397caa.  throw v3;
  catch `java.lang.Exception` @[L397c6e..L397c8a] goto L397ca0;
  catch `java.lang.Throwable` @[L397c6e..L397c8a] goto L397c9c;
  catch `java.lang.Exception` @[L397c8c..L397c92] goto L397c92;
  catch `java.lang.Throwable` @[L397ca2..L397ca4] goto L397c9c;
  catch `java.lang.Exception` @[L397ca4..L397caa] goto L397caa;
}
procedure `java.io.InputStream` `bodyByteStream`(`com.airbnb.lottie.network.DefaultLottieFetchResult` v1 @kind this) @signature `Lcom/airbnb/lottie/network/DefaultLottieFetchResult;.bodyByteStream:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397b58.  v0:= v1.`com.airbnb.lottie.network.DefaultLottieFetchResult.a` @type ^`java.net.HttpURLConnection` @kind object;
  #L397b5c.  call temp:= `getInputStream`(v0) @signature `Ljava/net/HttpURLConnection;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L397b62.  v0:= temp @kind object;
  #L397b64.  return v0 @kind object;
}
procedure `void` `close`(`com.airbnb.lottie.network.DefaultLottieFetchResult` v1 @kind this) @signature `Lcom/airbnb/lottie/network/DefaultLottieFetchResult;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397d08.  v0:= v1.`com.airbnb.lottie.network.DefaultLottieFetchResult.a` @type ^`java.net.HttpURLConnection` @kind object;
  #L397d0c.  call `disconnect`(v0) @signature `Ljava/net/HttpURLConnection;.disconnect:()V` @kind virtual;
  #L397d12.  return @kind void;
}
procedure `java.lang.String` `contentType`(`com.airbnb.lottie.network.DefaultLottieFetchResult` v1 @kind this) @signature `Lcom/airbnb/lottie/network/DefaultLottieFetchResult;.contentType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397b78.  v0:= v1.`com.airbnb.lottie.network.DefaultLottieFetchResult.a` @type ^`java.net.HttpURLConnection` @kind object;
  #L397b7c.  call temp:= `getContentType`(v0) @signature `Ljava/net/HttpURLConnection;.getContentType:()Ljava/lang/String;` @kind virtual;
  #L397b82.  v0:= temp @kind object;
  #L397b84.  return v0 @kind object;
}
procedure `java.lang.String` `error`(`com.airbnb.lottie.network.DefaultLottieFetchResult` v2 @kind this) @signature `Lcom/airbnb/lottie/network/DefaultLottieFetchResult;.error:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L397b98.  call temp:= `isSuccessful`(v2) @signature `Lcom/airbnb/lottie/network/DefaultLottieFetchResult;.isSuccessful:()Z` @kind virtual;
  #L397b9e.  v0:= temp;
  #L397ba0.  if v0 == 0 then goto L397ba8;
  #L397ba4.  v0:= 0I;
  #L397ba6.  goto L397c0e;
  #L397ba8.  v0:= new `java.lang.StringBuilder`;
  #L397bac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L397bb2.  v1:= "Unable to fetch " @kind object;
  #L397bb6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L397bbc.  v1:= v2.`com.airbnb.lottie.network.DefaultLottieFetchResult.a` @type ^`java.net.HttpURLConnection` @kind object;
  #L397bc0.  call temp:= `getURL`(v1) @signature `Ljava/net/HttpURLConnection;.getURL:()Ljava/net/URL;` @kind virtual;
  #L397bc6.  v1:= temp @kind object;
  #L397bc8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L397bce.  v1:= ". Failed with " @kind object;
  #L397bd2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L397bd8.  v1:= v2.`com.airbnb.lottie.network.DefaultLottieFetchResult.a` @type ^`java.net.HttpURLConnection` @kind object;
  #L397bdc.  call temp:= `getResponseCode`(v1) @signature `Ljava/net/HttpURLConnection;.getResponseCode:()I` @kind virtual;
  #L397be2.  v1:= temp;
  #L397be4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L397bea.  v1:= "\n" @kind object;
  #L397bee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L397bf4.  v1:= v2.`com.airbnb.lottie.network.DefaultLottieFetchResult.a` @type ^`java.net.HttpURLConnection` @kind object;
  #L397bf8.  call temp:= `a`(v2, v1) @signature `Lcom/airbnb/lottie/network/DefaultLottieFetchResult;.a:(Ljava/net/HttpURLConnection;)Ljava/lang/String;` @kind direct;
  #L397bfe.  v1:= temp @kind object;
  #L397c00.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L397c06.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L397c0c.  v0:= temp @kind object;
  #L397c0e.  return v0 @kind object;
  #L397c10.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L397c12.  v1:= "get error failed " @kind object;
  #L397c16.  call `warning`(v1, v0) @signature `Lcom/airbnb/lottie/utils/Logger;.warning:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L397c1c.  call temp:= `getMessage`(v0) @signature `Ljava/io/IOException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L397c22.  v0:= temp @kind object;
  #L397c24.  return v0 @kind object;
  catch `java.io.IOException` @[L397b98..L397c0e] goto L397c10;
}
procedure `boolean` `isSuccessful`(`com.airbnb.lottie.network.DefaultLottieFetchResult` v3 @kind this) @signature `Lcom/airbnb/lottie/network/DefaultLottieFetchResult;.isSuccessful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L397b1c.  v0:= 0I;
  #L397b1e.  v1:= v3.`com.airbnb.lottie.network.DefaultLottieFetchResult.a` @type ^`java.net.HttpURLConnection` @kind object;
  #L397b22.  call temp:= `getResponseCode`(v1) @signature `Ljava/net/HttpURLConnection;.getResponseCode:()I` @kind virtual;
  #L397b28.  v1:= temp;
  #L397b2a.  v1:= v1 / 100;
  #L397b2e.  v2:= 2I;
  #L397b30.  if v1 != v2 then goto L397b36;
  #L397b34.  v0:= 1I;
  #L397b36.  return v0;
  catch `java.io.IOException` @[L397b1e..L397b2e] goto L397b36;
}
