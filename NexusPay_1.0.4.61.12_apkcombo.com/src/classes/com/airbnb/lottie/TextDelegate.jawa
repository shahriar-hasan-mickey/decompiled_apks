record `com.airbnb.lottie.TextDelegate` @kind class @AccessFlag PUBLIC {
  `java.util.Map` `com.airbnb.lottie.TextDelegate.a` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.LottieAnimationView` `com.airbnb.lottie.TextDelegate.b` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.LottieDrawable` `com.airbnb.lottie.TextDelegate.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.airbnb.lottie.TextDelegate.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.airbnb.lottie.TextDelegate` v1 @kind this) @signature `Lcom/airbnb/lottie/TextDelegate;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L38afe8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38afee.  v0:= new `java.util.HashMap`;
  #L38aff2.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L38aff8.  v1.`com.airbnb.lottie.TextDelegate.a` @type ^`java.util.Map` := v0 @kind object;
  #L38affc.  v0:= 1I;
  #L38affe.  v1.`com.airbnb.lottie.TextDelegate.d` @type ^`boolean` := v0 @kind boolean;
  #L38b002.  v0:= 0I;
  #L38b004.  v1.`com.airbnb.lottie.TextDelegate.b` @type ^`com.airbnb.lottie.LottieAnimationView` := v0 @kind object;
  #L38b008.  v1.`com.airbnb.lottie.TextDelegate.c` @type ^`com.airbnb.lottie.LottieDrawable` := v0 @kind object;
  #L38b00c.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.TextDelegate` v1 @kind this, `com.airbnb.lottie.LottieAnimationView` v2 @kind object) @signature `Lcom/airbnb/lottie/TextDelegate;.<init>:(Lcom/airbnb/lottie/LottieAnimationView;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L38b020.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38b026.  v0:= new `java.util.HashMap`;
  #L38b02a.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L38b030.  v1.`com.airbnb.lottie.TextDelegate.a` @type ^`java.util.Map` := v0 @kind object;
  #L38b034.  v0:= 1I;
  #L38b036.  v1.`com.airbnb.lottie.TextDelegate.d` @type ^`boolean` := v0 @kind boolean;
  #L38b03a.  v1.`com.airbnb.lottie.TextDelegate.b` @type ^`com.airbnb.lottie.LottieAnimationView` := v2 @kind object;
  #L38b03e.  v2:= 0I;
  #L38b040.  v1.`com.airbnb.lottie.TextDelegate.c` @type ^`com.airbnb.lottie.LottieDrawable` := v2 @kind object;
  #L38b044.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.TextDelegate` v1 @kind this, `com.airbnb.lottie.LottieDrawable` v2 @kind object) @signature `Lcom/airbnb/lottie/TextDelegate;.<init>:(Lcom/airbnb/lottie/LottieDrawable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L38b058.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38b05e.  v0:= new `java.util.HashMap`;
  #L38b062.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L38b068.  v1.`com.airbnb.lottie.TextDelegate.a` @type ^`java.util.Map` := v0 @kind object;
  #L38b06c.  v0:= 1I;
  #L38b06e.  v1.`com.airbnb.lottie.TextDelegate.d` @type ^`boolean` := v0 @kind boolean;
  #L38b072.  v1.`com.airbnb.lottie.TextDelegate.c` @type ^`com.airbnb.lottie.LottieDrawable` := v2 @kind object;
  #L38b076.  v2:= 0I;
  #L38b078.  v1.`com.airbnb.lottie.TextDelegate.b` @type ^`com.airbnb.lottie.LottieAnimationView` := v2 @kind object;
  #L38b07c.  return @kind void;
}
procedure `java.lang.String` `a`(`com.airbnb.lottie.TextDelegate` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/airbnb/lottie/TextDelegate;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;

  #L38af80.  return v1 @kind object;
}
procedure `void` `b`(`com.airbnb.lottie.TextDelegate` v1 @kind this) @signature `Lcom/airbnb/lottie/TextDelegate;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L38b090.  v0:= v1.`com.airbnb.lottie.TextDelegate.b` @type ^`com.airbnb.lottie.LottieAnimationView` @kind object;
  #L38b094.  if v0 == 0 then goto L38b09e;
  #L38b098.  call `invalidate`(v0) @signature `Landroid/widget/ImageView;.invalidate:()V` @kind virtual;
  #L38b09e.  v0:= v1.`com.airbnb.lottie.TextDelegate.c` @type ^`com.airbnb.lottie.LottieDrawable` @kind object;
  #L38b0a2.  if v0 == 0 then goto L38b0ac;
  #L38b0a6.  call `invalidateSelf`(v0) @signature `Lcom/airbnb/lottie/LottieDrawable;.invalidateSelf:()V` @kind virtual;
  #L38b0ac.  return @kind void;
}
procedure `java.lang.String` `getTextInternal`(`com.airbnb.lottie.TextDelegate` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/airbnb/lottie/TextDelegate;.getTextInternal:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L38af94.  v0:= v1.`com.airbnb.lottie.TextDelegate.d` @type ^`boolean` @kind boolean;
  #L38af98.  if v0 == 0 then goto L38afbe;
  #L38af9c.  v0:= v1.`com.airbnb.lottie.TextDelegate.a` @type ^`java.util.Map` @kind object;
  #L38afa0.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L38afa6.  v0:= temp;
  #L38afa8.  if v0 == 0 then goto L38afbe;
  #L38afac.  v0:= v1.`com.airbnb.lottie.TextDelegate.a` @type ^`java.util.Map` @kind object;
  #L38afb0.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L38afb6.  v2:= temp @kind object;
  #L38afb8.  v2:= (`java.lang.String`) v2 @kind object;
  #L38afbc.  return v2 @kind object;
  #L38afbe.  call temp:= `a`(v1, v2) @signature `Lcom/airbnb/lottie/TextDelegate;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L38afc4.  v0:= v1.`com.airbnb.lottie.TextDelegate.d` @type ^`boolean` @kind boolean;
  #L38afc8.  if v0 == 0 then goto L38afd6;
  #L38afcc.  v0:= v1.`com.airbnb.lottie.TextDelegate.a` @type ^`java.util.Map` @kind object;
  #L38afd0.  call temp:= `put`(v0, v2, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L38afd6.  return v2 @kind object;
}
procedure `void` `invalidateAllText`(`com.airbnb.lottie.TextDelegate` v1 @kind this) @signature `Lcom/airbnb/lottie/TextDelegate;.invalidateAllText:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b0c0.  v0:= v1.`com.airbnb.lottie.TextDelegate.a` @type ^`java.util.Map` @kind object;
  #L38b0c4.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L38b0ca.  call `b`(v1) @signature `Lcom/airbnb/lottie/TextDelegate;.b:()V` @kind direct;
  #L38b0d0.  return @kind void;
}
procedure `void` `invalidateText`(`com.airbnb.lottie.TextDelegate` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/airbnb/lottie/TextDelegate;.invalidateText:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b0e4.  v0:= v1.`com.airbnb.lottie.TextDelegate.a` @type ^`java.util.Map` @kind object;
  #L38b0e8.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L38b0ee.  call `b`(v1) @signature `Lcom/airbnb/lottie/TextDelegate;.b:()V` @kind direct;
  #L38b0f4.  return @kind void;
}
procedure `void` `setCacheText`(`com.airbnb.lottie.TextDelegate` v0 @kind this, `boolean` v1 ) @signature `Lcom/airbnb/lottie/TextDelegate;.setCacheText:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38b108.  v0.`com.airbnb.lottie.TextDelegate.d` @type ^`boolean` := v1 @kind boolean;
  #L38b10c.  return @kind void;
}
procedure `void` `setText`(`com.airbnb.lottie.TextDelegate` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/airbnb/lottie/TextDelegate;.setText:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b120.  v0:= v1.`com.airbnb.lottie.TextDelegate.a` @type ^`java.util.Map` @kind object;
  #L38b124.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L38b12a.  call `b`(v1) @signature `Lcom/airbnb/lottie/TextDelegate;.b:()V` @kind direct;
  #L38b130.  return @kind void;
}
