record `com.airbnb.lottie.LottieConfig$Builder$b` @kind class @AccessFlag  extends `com.airbnb.lottie.network.LottieNetworkCacheProvider` @kind interface {
  `com.airbnb.lottie.network.LottieNetworkCacheProvider` `com.airbnb.lottie.LottieConfig$Builder$b.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.airbnb.lottie.LottieConfig$Builder$b` v0 @kind this, `com.airbnb.lottie.LottieConfig$Builder` v1 @kind object, `com.airbnb.lottie.network.LottieNetworkCacheProvider` v2 @kind object) @signature `Lcom/airbnb/lottie/LottieConfig$Builder$b;.<init>:(Lcom/airbnb/lottie/LottieConfig$Builder;Lcom/airbnb/lottie/network/LottieNetworkCacheProvider;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L38790c.  v0.`com.airbnb.lottie.LottieConfig$Builder$b.a` @type ^`com.airbnb.lottie.network.LottieNetworkCacheProvider` := v2 @kind object;
  #L387910.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L387916.  return @kind void;
}
procedure `java.io.File` `getCacheDir`(`com.airbnb.lottie.LottieConfig$Builder$b` v2 @kind this) @signature `Lcom/airbnb/lottie/LottieConfig$Builder$b;.getCacheDir:()Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3878d0.  v0:= v2.`com.airbnb.lottie.LottieConfig$Builder$b.a` @type ^`com.airbnb.lottie.network.LottieNetworkCacheProvider` @kind object;
  #L3878d4.  call temp:= `getCacheDir`(v0) @signature `Lcom/airbnb/lottie/network/LottieNetworkCacheProvider;.getCacheDir:()Ljava/io/File;` @kind interface;
  #L3878da.  v0:= temp @kind object;
  #L3878dc.  call temp:= `isDirectory`(v0) @signature `Ljava/io/File;.isDirectory:()Z` @kind virtual;
  #L3878e2.  v1:= temp;
  #L3878e4.  if v1 == 0 then goto L3878ea;
  #L3878e8.  return v0 @kind object;
  #L3878ea.  v0:= new `java.lang.IllegalArgumentException`;
  #L3878ee.  v1:= "cache file must be a directory" @kind object;
  #L3878f2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3878f8.  throw v0;
}
