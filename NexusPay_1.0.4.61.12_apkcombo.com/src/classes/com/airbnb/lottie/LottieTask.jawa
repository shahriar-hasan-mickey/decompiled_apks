record `com.airbnb.lottie.LottieTask` @kind class @AccessFlag PUBLIC {
  `java.util.Set` `com.airbnb.lottie.LottieTask.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.airbnb.lottie.LottieTask.b` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `com.airbnb.lottie.LottieTask.c` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.LottieResult` `com.airbnb.lottie.LottieTask.d` @AccessFlag PRIVATE_VOLATILE;
}
global `java.util.concurrent.Executor` `@@com.airbnb.lottie.LottieTask.EXECUTOR` @AccessFlag PUBLIC_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/LottieTask;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L389bbc.  call temp:= `newCachedThreadPool`() @signature `Ljava/util/concurrent/Executors;.newCachedThreadPool:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L389bc2.  v0:= temp @kind object;
  #L389bc4.  `@@com.airbnb.lottie.LottieTask.EXECUTOR` @type ^`java.util.concurrent.Executor` := v0 @kind object;
  #L389bc8.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.LottieTask` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L389bdc.  v0:= 0I;
  #L389bde.  call `<init>`(v1, v2, v0) @signature `Lcom/airbnb/lottie/LottieTask;.<init>:(Ljava/util/concurrent/Callable;Z)V` @kind direct;
  #L389be4.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.LottieTask` v2 @kind this, `java.util.concurrent.Callable` v3 @kind object, `boolean` v4 ) @signature `Lcom/airbnb/lottie/LottieTask;.<init>:(Ljava/util/concurrent/Callable;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L389bf8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L389bfe.  v0:= new `java.util.LinkedHashSet`;
  #L389c02.  v1:= 1I;
  #L389c04.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashSet;.<init>:(I)V` @kind direct;
  #L389c0a.  v2.`com.airbnb.lottie.LottieTask.a` @type ^`java.util.Set` := v0 @kind object;
  #L389c0e.  v0:= new `java.util.LinkedHashSet`;
  #L389c12.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashSet;.<init>:(I)V` @kind direct;
  #L389c18.  v2.`com.airbnb.lottie.LottieTask.b` @type ^`java.util.Set` := v0 @kind object;
  #L389c1c.  v0:= new `android.os.Handler`;
  #L389c20.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L389c26.  v1:= temp @kind object;
  #L389c28.  call `<init>`(v0, v1) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L389c2e.  v2.`com.airbnb.lottie.LottieTask.c` @type ^`android.os.Handler` := v0 @kind object;
  #L389c32.  v0:= 0I;
  #L389c34.  v2.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` := v0 @kind object;
  #L389c38.  if v4 == 0 then goto L389c64;
  #L389c3c.  call temp:= `call`(v3) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L389c42.  v3:= temp @kind object;
  #L389c44.  v3:= (`com.airbnb.lottie.LottieResult`) v3 @kind object;
  #L389c48.  call `h`(v2, v3) @signature `Lcom/airbnb/lottie/LottieTask;.h:(Lcom/airbnb/lottie/LottieResult;)V` @kind direct;
  #L389c4e.  goto L389c78;
  #L389c50.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L389c52.  v4:= new `com.airbnb.lottie.LottieResult`;
  #L389c56.  call `<init>`(v4, v3) @signature `Lcom/airbnb/lottie/LottieResult;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L389c5c.  call `h`(v2, v4) @signature `Lcom/airbnb/lottie/LottieTask;.h:(Lcom/airbnb/lottie/LottieResult;)V` @kind direct;
  #L389c62.  goto L389c78;
  #L389c64.  v4:= `@@com.airbnb.lottie.LottieTask.EXECUTOR` @type ^`java.util.concurrent.Executor` @kind object;
  #L389c68.  v0:= new `com.airbnb.lottie.LottieTask$b`;
  #L389c6c.  call `<init>`(v0, v2, v3) @signature `Lcom/airbnb/lottie/LottieTask$b;.<init>:(Lcom/airbnb/lottie/LottieTask;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L389c72.  call `execute`(v4, v0) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L389c78.  return @kind void;
  catch `java.lang.Throwable` @[L389c3c..L389c4e] goto L389c50;
}
procedure `com.airbnb.lottie.LottieResult` `a`(`com.airbnb.lottie.LottieTask` v0 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.a:(Lcom/airbnb/lottie/LottieTask;)Lcom/airbnb/lottie/LottieResult;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L389a84.  v0:= v0.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` @kind object;
  #L389a88.  return v0 @kind object;
}
procedure `void` `b`(`com.airbnb.lottie.LottieTask` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.b:(Lcom/airbnb/lottie/LottieTask;Ljava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L389c98.  call `g`(v0, v1) @signature `Lcom/airbnb/lottie/LottieTask;.g:(Ljava/lang/Object;)V` @kind direct;
  #L389c9e.  return @kind void;
}
procedure `void` `c`(`com.airbnb.lottie.LottieTask` v0 @kind object, `java.lang.Throwable` v1 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.c:(Lcom/airbnb/lottie/LottieTask;Ljava/lang/Throwable;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L389cb0.  call `e`(v0, v1) @signature `Lcom/airbnb/lottie/LottieTask;.e:(Ljava/lang/Throwable;)V` @kind direct;
  #L389cb6.  return @kind void;
}
procedure `void` `d`(`com.airbnb.lottie.LottieTask` v0 @kind object, `com.airbnb.lottie.LottieResult` v1 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.d:(Lcom/airbnb/lottie/LottieTask;Lcom/airbnb/lottie/LottieResult;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L389cc8.  call `h`(v0, v1) @signature `Lcom/airbnb/lottie/LottieTask;.h:(Lcom/airbnb/lottie/LottieResult;)V` @kind direct;
  #L389cce.  return @kind void;
}
procedure `void` `e`(`com.airbnb.lottie.LottieTask` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.e:(Ljava/lang/Throwable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L389ce0.  @monitorenter v2
  #L389ce2.  v0:= new `java.util.ArrayList`;
  #L389ce6.  v1:= v2.`com.airbnb.lottie.LottieTask.b` @type ^`java.util.Set` @kind object;
  #L389cea.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L389cf0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L389cf6.  v1:= temp;
  #L389cf8.  if v1 == 0 then goto L389d0a;
  #L389cfc.  v0:= "Lottie encountered an error but no failure listener was added:" @kind object;
  #L389d00.  call `warning`(v0, v3) @signature `Lcom/airbnb/lottie/utils/Logger;.warning:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L389d06.  @monitorexit v2
  #L389d08.  return @kind void;
  #L389d0a.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L389d10.  v0:= temp @kind object;
  #L389d12.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L389d18.  v1:= temp;
  #L389d1a.  if v1 == 0 then goto L389d32;
  #L389d1e.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L389d24.  v1:= temp @kind object;
  #L389d26.  v1:= (`com.airbnb.lottie.LottieListener`) v1 @kind object;
  #L389d2a.  call `onResult`(v1, v3) @signature `Lcom/airbnb/lottie/LottieListener;.onResult:(Ljava/lang/Object;)V` @kind interface;
  #L389d30.  goto L389d12;
  #L389d32.  @monitorexit v2
  #L389d34.  return @kind void;
  #L389d36.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L389d38.  @monitorexit v2
  #L389d3a.  throw v3;
  catch `java.lang.Throwable` @[L389ce2..L389d06] goto L389d36;
  catch `java.lang.Throwable` @[L389d0a..L389d30] goto L389d36;
}
procedure `void` `f`(`com.airbnb.lottie.LottieTask` v2 @kind this) @signature `Lcom/airbnb/lottie/LottieTask;.f:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L389d60.  v0:= v2.`com.airbnb.lottie.LottieTask.c` @type ^`android.os.Handler` @kind object;
  #L389d64.  v1:= new `com.airbnb.lottie.LottieTask$a`;
  #L389d68.  call `<init>`(v1, v2) @signature `Lcom/airbnb/lottie/LottieTask$a;.<init>:(Lcom/airbnb/lottie/LottieTask;)V` @kind direct;
  #L389d6e.  call temp:= `post`(v0, v1) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L389d74.  return @kind void;
}
procedure `void` `g`(`com.airbnb.lottie.LottieTask` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.g:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L389d88.  @monitorenter v2
  #L389d8a.  v0:= new `java.util.ArrayList`;
  #L389d8e.  v1:= v2.`com.airbnb.lottie.LottieTask.a` @type ^`java.util.Set` @kind object;
  #L389d92.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L389d98.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L389d9e.  v0:= temp @kind object;
  #L389da0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L389da6.  v1:= temp;
  #L389da8.  if v1 == 0 then goto L389dc0;
  #L389dac.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L389db2.  v1:= temp @kind object;
  #L389db4.  v1:= (`com.airbnb.lottie.LottieListener`) v1 @kind object;
  #L389db8.  call `onResult`(v1, v3) @signature `Lcom/airbnb/lottie/LottieListener;.onResult:(Ljava/lang/Object;)V` @kind interface;
  #L389dbe.  goto L389da0;
  #L389dc0.  @monitorexit v2
  #L389dc2.  return @kind void;
  #L389dc4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L389dc6.  @monitorexit v2
  #L389dc8.  throw v3;
  catch `java.lang.Throwable` @[L389d8a..L389dbe] goto L389dc4;
}
procedure `void` `h`(`com.airbnb.lottie.LottieTask` v1 @kind this, `com.airbnb.lottie.LottieResult` v2 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.h:(Lcom/airbnb/lottie/LottieResult;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L389de8.  v0:= v1.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` @kind object;
  #L389dec.  if v0 != 0 then goto L389dfc;
  #L389df0.  v1.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` := v2 @kind object;
  #L389df4.  call `f`(v1) @signature `Lcom/airbnb/lottie/LottieTask;.f:()V` @kind direct;
  #L389dfa.  return @kind void;
  #L389dfc.  v2:= new `java.lang.IllegalStateException`;
  #L389e00.  v0:= "A task may only be set once." @kind object;
  #L389e04.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L389e0a.  throw v2;
}
procedure `com.airbnb.lottie.LottieTask` `addFailureListener`(`com.airbnb.lottie.LottieTask` v1 @kind this, `com.airbnb.lottie.LottieListener` v2 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.addFailureListener:(Lcom/airbnb/lottie/LottieListener;)Lcom/airbnb/lottie/LottieTask;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L389a9c.  @monitorenter v1
  #L389a9e.  v0:= v1.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` @kind object;
  #L389aa2.  if v0 == 0 then goto L389ac8;
  #L389aa6.  v0:= v1.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` @kind object;
  #L389aaa.  call temp:= `getException`(v0) @signature `Lcom/airbnb/lottie/LottieResult;.getException:()Ljava/lang/Throwable;` @kind virtual;
  #L389ab0.  v0:= temp @kind object;
  #L389ab2.  if v0 == 0 then goto L389ac8;
  #L389ab6.  v0:= v1.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` @kind object;
  #L389aba.  call temp:= `getException`(v0) @signature `Lcom/airbnb/lottie/LottieResult;.getException:()Ljava/lang/Throwable;` @kind virtual;
  #L389ac0.  v0:= temp @kind object;
  #L389ac2.  call `onResult`(v2, v0) @signature `Lcom/airbnb/lottie/LottieListener;.onResult:(Ljava/lang/Object;)V` @kind interface;
  #L389ac8.  v0:= v1.`com.airbnb.lottie.LottieTask.b` @type ^`java.util.Set` @kind object;
  #L389acc.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L389ad2.  @monitorexit v1
  #L389ad4.  return v1 @kind object;
  #L389ad6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L389ad8.  @monitorexit v1
  #L389ada.  throw v2;
  catch `java.lang.Throwable` @[L389a9e..L389ad2] goto L389ad6;
}
procedure `com.airbnb.lottie.LottieTask` `addListener`(`com.airbnb.lottie.LottieTask` v1 @kind this, `com.airbnb.lottie.LottieListener` v2 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.addListener:(Lcom/airbnb/lottie/LottieListener;)Lcom/airbnb/lottie/LottieTask;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L389af8.  @monitorenter v1
  #L389afa.  v0:= v1.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` @kind object;
  #L389afe.  if v0 == 0 then goto L389b24;
  #L389b02.  v0:= v1.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` @kind object;
  #L389b06.  call temp:= `getValue`(v0) @signature `Lcom/airbnb/lottie/LottieResult;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L389b0c.  v0:= temp @kind object;
  #L389b0e.  if v0 == 0 then goto L389b24;
  #L389b12.  v0:= v1.`com.airbnb.lottie.LottieTask.d` @type ^`com.airbnb.lottie.LottieResult` @kind object;
  #L389b16.  call temp:= `getValue`(v0) @signature `Lcom/airbnb/lottie/LottieResult;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L389b1c.  v0:= temp @kind object;
  #L389b1e.  call `onResult`(v2, v0) @signature `Lcom/airbnb/lottie/LottieListener;.onResult:(Ljava/lang/Object;)V` @kind interface;
  #L389b24.  v0:= v1.`com.airbnb.lottie.LottieTask.a` @type ^`java.util.Set` @kind object;
  #L389b28.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L389b2e.  @monitorexit v1
  #L389b30.  return v1 @kind object;
  #L389b32.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L389b34.  @monitorexit v1
  #L389b36.  throw v2;
  catch `java.lang.Throwable` @[L389afa..L389b2e] goto L389b32;
}
procedure `com.airbnb.lottie.LottieTask` `removeFailureListener`(`com.airbnb.lottie.LottieTask` v1 @kind this, `com.airbnb.lottie.LottieListener` v2 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.removeFailureListener:(Lcom/airbnb/lottie/LottieListener;)Lcom/airbnb/lottie/LottieTask;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L389b54.  @monitorenter v1
  #L389b56.  v0:= v1.`com.airbnb.lottie.LottieTask.b` @type ^`java.util.Set` @kind object;
  #L389b5a.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L389b60.  @monitorexit v1
  #L389b62.  return v1 @kind object;
  #L389b64.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L389b66.  @monitorexit v1
  #L389b68.  throw v2;
  catch `java.lang.Throwable` @[L389b56..L389b60] goto L389b64;
}
procedure `com.airbnb.lottie.LottieTask` `removeListener`(`com.airbnb.lottie.LottieTask` v1 @kind this, `com.airbnb.lottie.LottieListener` v2 @kind object) @signature `Lcom/airbnb/lottie/LottieTask;.removeListener:(Lcom/airbnb/lottie/LottieListener;)Lcom/airbnb/lottie/LottieTask;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L389b88.  @monitorenter v1
  #L389b8a.  v0:= v1.`com.airbnb.lottie.LottieTask.a` @type ^`java.util.Set` @kind object;
  #L389b8e.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L389b94.  @monitorexit v1
  #L389b96.  return v1 @kind object;
  #L389b98.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L389b9a.  @monitorexit v1
  #L389b9c.  throw v2;
  catch `java.lang.Throwable` @[L389b8a..L389b94] goto L389b98;
}
