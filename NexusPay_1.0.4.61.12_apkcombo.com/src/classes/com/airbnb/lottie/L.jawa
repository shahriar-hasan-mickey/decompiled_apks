record `com.airbnb.lottie.L` @kind class @AccessFlag PUBLIC {
}
global `boolean` `@@com.airbnb.lottie.L.DBG` @AccessFlag PUBLIC_STATIC;
global `java.lang.String` `@@com.airbnb.lottie.L.TAG` @AccessFlag PUBLIC_STATIC_FINAL;
global `boolean` `@@com.airbnb.lottie.L.a` @AccessFlag PRIVATE_STATIC;
global `java.lang.String`[] `@@com.airbnb.lottie.L.b` @AccessFlag PRIVATE_STATIC;
global `long`[] `@@com.airbnb.lottie.L.c` @AccessFlag PRIVATE_STATIC;
global `int` `@@com.airbnb.lottie.L.d` @AccessFlag PRIVATE_STATIC;
global `int` `@@com.airbnb.lottie.L.e` @AccessFlag PRIVATE_STATIC;
global `com.airbnb.lottie.network.LottieNetworkFetcher` `@@com.airbnb.lottie.L.f` @AccessFlag PRIVATE_STATIC;
global `com.airbnb.lottie.network.LottieNetworkCacheProvider` `@@com.airbnb.lottie.L.g` @AccessFlag PRIVATE_STATIC;
global `com.airbnb.lottie.network.NetworkFetcher` `@@com.airbnb.lottie.L.h` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `com.airbnb.lottie.network.NetworkCache` `@@com.airbnb.lottie.L.i` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/L;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L389e64.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.L` v0 @kind this) @signature `Lcom/airbnb/lottie/L;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L389e78.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L389e7e.  return @kind void;
}
procedure `void` `beginSection`(`java.lang.String` v4 @kind object) @signature `Lcom/airbnb/lottie/L;.beginSection:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L389e90.  v0:= `@@com.airbnb.lottie.L.a` @type ^`boolean` @kind boolean;
  #L389e94.  if v0 != 0 then goto L389e9a;
  #L389e98.  return @kind void;
  #L389e9a.  v0:= `@@com.airbnb.lottie.L.d` @type ^`int`;
  #L389e9e.  v1:= 20I;
  #L389ea2.  if v0 != v1 then goto L389eb4;
  #L389ea6.  v4:= `@@com.airbnb.lottie.L.e` @type ^`int`;
  #L389eaa.  v4:= v4 + 1;
  #L389eae.  `@@com.airbnb.lottie.L.e` @type ^`int` := v4;
  #L389eb2.  return @kind void;
  #L389eb4.  v1:= `@@com.airbnb.lottie.L.b` @type ^`java.lang.String`[] @kind object;
  #L389eb8.  v1[v0]:= v4 @kind object;
  #L389ebc.  v1:= `@@com.airbnb.lottie.L.c` @type ^`long`[] @kind object;
  #L389ec0.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L389ec6.  v2:= temp @kind wide;
  #L389ec8.  v1[v0]:= v2 @kind wide;
  #L389ecc.  call `beginSection`(v4) @signature `Landroidx/core/os/TraceCompat;.beginSection:(Ljava/lang/String;)V` @kind static;
  #L389ed2.  v4:= `@@com.airbnb.lottie.L.d` @type ^`int`;
  #L389ed6.  v4:= v4 + 1;
  #L389eda.  `@@com.airbnb.lottie.L.d` @type ^`int` := v4;
  #L389ede.  return @kind void;
}
procedure `float` `endSection`(`java.lang.String` v4 @kind object) @signature `Lcom/airbnb/lottie/L;.endSection:(Ljava/lang/String;)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L384840.  v0:= `@@com.airbnb.lottie.L.e` @type ^`int`;
  #L384844.  v1:= 0I;
  #L384846.  if v0 <= 0 then goto L384854;
  #L38484a.  v0:= v0 + -1;
  #L38484e.  `@@com.airbnb.lottie.L.e` @type ^`int` := v0;
  #L384852.  return v1;
  #L384854.  v0:= `@@com.airbnb.lottie.L.a` @type ^`boolean` @kind boolean;
  #L384858.  if v0 != 0 then goto L38485e;
  #L38485c.  return v1;
  #L38485e.  v0:= `@@com.airbnb.lottie.L.d` @type ^`int`;
  #L384862.  v0:= v0 + -1;
  #L384866.  `@@com.airbnb.lottie.L.d` @type ^`int` := v0;
  #L38486a.  v1:= -1I;
  #L38486c.  if v0 == v1 then goto L384900;
  #L384870.  v1:= `@@com.airbnb.lottie.L.b` @type ^`java.lang.String`[] @kind object;
  #L384874.  v0:= v1[v0] @kind object;
  #L384878.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L38487e.  v0:= temp;
  #L384880.  if v0 == 0 then goto L3848ac;
  #L384884.  call `endSection`() @signature `Landroidx/core/os/TraceCompat;.endSection:()V` @kind static;
  #L38488a.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L384890.  v0:= temp @kind wide;
  #L384892.  v4:= `@@com.airbnb.lottie.L.c` @type ^`long`[] @kind object;
  #L384896.  v2:= `@@com.airbnb.lottie.L.d` @type ^`int`;
  #L38489a.  v2:= v4[v2] @kind wide;
  #L38489e.  v0:= v0 - v2 @kind long;
  #L3848a0.  v4:= (`float`) v0 @kind l2f;
  #L3848a2.  v0:= 1232348160I;
  #L3848a8.  v4:= v4 / v0 @kind float;
  #L3848aa.  return v4;
  #L3848ac.  v0:= new `java.lang.IllegalStateException`;
  #L3848b0.  v1:= new `java.lang.StringBuilder`;
  #L3848b4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3848ba.  v2:= "Unbalanced trace call " @kind object;
  #L3848be.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3848c4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3848ca.  v4:= ". Expected " @kind object;
  #L3848ce.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3848d4.  v4:= `@@com.airbnb.lottie.L.b` @type ^`java.lang.String`[] @kind object;
  #L3848d8.  v2:= `@@com.airbnb.lottie.L.d` @type ^`int`;
  #L3848dc.  v4:= v4[v2] @kind object;
  #L3848e0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3848e6.  v4:= "." @kind object;
  #L3848ea.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3848f0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3848f6.  v4:= temp @kind object;
  #L3848f8.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3848fe.  throw v0;
  #L384900.  v4:= new `java.lang.IllegalStateException`;
  #L384904.  v0:= "Can't end trace section. There are none." @kind object;
  #L384908.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38490e.  throw v4;
}
procedure `com.airbnb.lottie.network.NetworkCache` `networkCache`(`android.content.Context` v3 @kind object) @signature `Lcom/airbnb/lottie/L;.networkCache:(Landroid/content/Context;)Lcom/airbnb/lottie/network/NetworkCache;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L38476c.  v0:= `@@com.airbnb.lottie.L.i` @type ^`com.airbnb.lottie.network.NetworkCache` @kind object;
  #L384770.  if v0 != 0 then goto L3847b4;
  #L384774.  v1:= constclass @type ^`com.airbnb.lottie.network.NetworkCache` @kind object;
  #L384778.  @monitorenter v1
  #L38477a.  v0:= `@@com.airbnb.lottie.L.i` @type ^`com.airbnb.lottie.network.NetworkCache` @kind object;
  #L38477e.  if v0 != 0 then goto L3847aa;
  #L384782.  v0:= new `com.airbnb.lottie.network.NetworkCache`;
  #L384786.  v2:= `@@com.airbnb.lottie.L.g` @type ^`com.airbnb.lottie.network.LottieNetworkCacheProvider` @kind object;
  #L38478a.  if v2 == 0 then goto L384794;
  #L38478e.  v3:= `@@com.airbnb.lottie.L.g` @type ^`com.airbnb.lottie.network.LottieNetworkCacheProvider` @kind object;
  #L384792.  goto L3847a0;
  #L384794.  v2:= new `com.airbnb.lottie.L$a`;
  #L384798.  call `<init>`(v2, v3) @signature `Lcom/airbnb/lottie/L$a;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L38479e.  v3:= v2 @kind object;
  #L3847a0.  call `<init>`(v0, v3) @signature `Lcom/airbnb/lottie/network/NetworkCache;.<init>:(Lcom/airbnb/lottie/network/LottieNetworkCacheProvider;)V` @kind direct;
  #L3847a6.  `@@com.airbnb.lottie.L.i` @type ^`com.airbnb.lottie.network.NetworkCache` := v0 @kind object;
  #L3847aa.  @monitorexit v1
  #L3847ac.  goto L3847b4;
  #L3847ae.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3847b0.  @monitorexit v1
  #L3847b2.  throw v3;
  #L3847b4.  return v0 @kind object;
  catch `java.lang.Throwable` @[L38477a..L3847b2] goto L3847ae;
}
procedure `com.airbnb.lottie.network.NetworkFetcher` `networkFetcher`(`android.content.Context` v3 @kind object) @signature `Lcom/airbnb/lottie/L;.networkFetcher:(Landroid/content/Context;)Lcom/airbnb/lottie/network/NetworkFetcher;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3847d4.  v0:= `@@com.airbnb.lottie.L.h` @type ^`com.airbnb.lottie.network.NetworkFetcher` @kind object;
  #L3847d8.  if v0 != 0 then goto L384822;
  #L3847dc.  v1:= constclass @type ^`com.airbnb.lottie.network.NetworkFetcher` @kind object;
  #L3847e0.  @monitorenter v1
  #L3847e2.  v0:= `@@com.airbnb.lottie.L.h` @type ^`com.airbnb.lottie.network.NetworkFetcher` @kind object;
  #L3847e6.  if v0 != 0 then goto L384818;
  #L3847ea.  v0:= new `com.airbnb.lottie.network.NetworkFetcher`;
  #L3847ee.  call temp:= `networkCache`(v3) @signature `Lcom/airbnb/lottie/L;.networkCache:(Landroid/content/Context;)Lcom/airbnb/lottie/network/NetworkCache;` @kind static;
  #L3847f4.  v3:= temp @kind object;
  #L3847f6.  v2:= `@@com.airbnb.lottie.L.f` @type ^`com.airbnb.lottie.network.LottieNetworkFetcher` @kind object;
  #L3847fa.  if v2 == 0 then goto L384804;
  #L3847fe.  v2:= `@@com.airbnb.lottie.L.f` @type ^`com.airbnb.lottie.network.LottieNetworkFetcher` @kind object;
  #L384802.  goto L38480e;
  #L384804.  v2:= new `com.airbnb.lottie.network.DefaultLottieNetworkFetcher`;
  #L384808.  call `<init>`(v2) @signature `Lcom/airbnb/lottie/network/DefaultLottieNetworkFetcher;.<init>:()V` @kind direct;
  #L38480e.  call `<init>`(v0, v3, v2) @signature `Lcom/airbnb/lottie/network/NetworkFetcher;.<init>:(Lcom/airbnb/lottie/network/NetworkCache;Lcom/airbnb/lottie/network/LottieNetworkFetcher;)V` @kind direct;
  #L384814.  `@@com.airbnb.lottie.L.h` @type ^`com.airbnb.lottie.network.NetworkFetcher` := v0 @kind object;
  #L384818.  @monitorexit v1
  #L38481a.  goto L384822;
  #L38481c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38481e.  @monitorexit v1
  #L384820.  throw v3;
  #L384822.  return v0 @kind object;
  catch `java.lang.Throwable` @[L3847e2..L384820] goto L38481c;
}
procedure `void` `setCacheProvider`(`com.airbnb.lottie.network.LottieNetworkCacheProvider` v0 @kind object) @signature `Lcom/airbnb/lottie/L;.setCacheProvider:(Lcom/airbnb/lottie/network/LottieNetworkCacheProvider;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L389ef0.  `@@com.airbnb.lottie.L.g` @type ^`com.airbnb.lottie.network.LottieNetworkCacheProvider` := v0 @kind object;
  #L389ef4.  return @kind void;
}
procedure `void` `setFetcher`(`com.airbnb.lottie.network.LottieNetworkFetcher` v0 @kind object) @signature `Lcom/airbnb/lottie/L;.setFetcher:(Lcom/airbnb/lottie/network/LottieNetworkFetcher;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L389f08.  `@@com.airbnb.lottie.L.f` @type ^`com.airbnb.lottie.network.LottieNetworkFetcher` := v0 @kind object;
  #L389f0c.  return @kind void;
}
procedure `void` `setTraceEnabled`(`boolean` v1 ) @signature `Lcom/airbnb/lottie/L;.setTraceEnabled:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L389f20.  v0:= `@@com.airbnb.lottie.L.a` @type ^`boolean` @kind boolean;
  #L389f24.  if v0 != v1 then goto L389f2a;
  #L389f28.  return @kind void;
  #L389f2a.  `@@com.airbnb.lottie.L.a` @type ^`boolean` := v1 @kind boolean;
  #L389f2e.  if v1 == 0 then goto L389f46;
  #L389f32.  v1:= 20I;
  #L389f36.  v0:= new `java.lang.String`[v1];
  #L389f3a.  `@@com.airbnb.lottie.L.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L389f3e.  v1:= new `long`[v1];
  #L389f42.  `@@com.airbnb.lottie.L.c` @type ^`long`[] := v1 @kind object;
  #L389f46.  return @kind void;
}
