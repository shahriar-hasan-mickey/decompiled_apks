record `com.airbnb.lottie.LottieConfig$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `com.airbnb.lottie.network.LottieNetworkFetcher` `com.airbnb.lottie.LottieConfig$Builder.a` @AccessFlag PRIVATE;
  `com.airbnb.lottie.network.LottieNetworkCacheProvider` `com.airbnb.lottie.LottieConfig$Builder.b` @AccessFlag PRIVATE;
  `boolean` `com.airbnb.lottie.LottieConfig$Builder.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.airbnb.lottie.LottieConfig$Builder` v1 @kind this) @signature `Lcom/airbnb/lottie/LottieConfig$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3879f4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3879fa.  v0:= 0I;
  #L3879fc.  v1.`com.airbnb.lottie.LottieConfig$Builder.c` @type ^`boolean` := v0 @kind boolean;
  #L387a00.  return @kind void;
}
procedure `com.airbnb.lottie.LottieConfig` `build`(`com.airbnb.lottie.LottieConfig$Builder` v5 @kind this) @signature `Lcom/airbnb/lottie/LottieConfig$Builder;.build:()Lcom/airbnb/lottie/LottieConfig;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L387928.  v0:= new `com.airbnb.lottie.LottieConfig`;
  #L38792c.  v1:= v5.`com.airbnb.lottie.LottieConfig$Builder.a` @type ^`com.airbnb.lottie.network.LottieNetworkFetcher` @kind object;
  #L387930.  v2:= v5.`com.airbnb.lottie.LottieConfig$Builder.b` @type ^`com.airbnb.lottie.network.LottieNetworkCacheProvider` @kind object;
  #L387934.  v3:= v5.`com.airbnb.lottie.LottieConfig$Builder.c` @type ^`boolean` @kind boolean;
  #L387938.  v4:= 0I;
  #L38793a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/airbnb/lottie/LottieConfig;.<init>:(Lcom/airbnb/lottie/network/LottieNetworkFetcher;Lcom/airbnb/lottie/network/LottieNetworkCacheProvider;ZLcom/airbnb/lottie/LottieConfig$a;)V` @kind direct;
  #L387940.  return v0 @kind object;
}
procedure `com.airbnb.lottie.LottieConfig$Builder` `setEnableSystraceMarkers`(`com.airbnb.lottie.LottieConfig$Builder` v0 @kind this, `boolean` v1 ) @signature `Lcom/airbnb/lottie/LottieConfig$Builder;.setEnableSystraceMarkers:(Z)Lcom/airbnb/lottie/LottieConfig$Builder;` @AccessFlag PUBLIC {
    temp;

  #L387954.  v0.`com.airbnb.lottie.LottieConfig$Builder.c` @type ^`boolean` := v1 @kind boolean;
  #L387958.  return v0 @kind object;
}
procedure `com.airbnb.lottie.LottieConfig$Builder` `setNetworkCacheDir`(`com.airbnb.lottie.LottieConfig$Builder` v1 @kind this, `java.io.File` v2 @kind object) @signature `Lcom/airbnb/lottie/LottieConfig$Builder;.setNetworkCacheDir:(Ljava/io/File;)Lcom/airbnb/lottie/LottieConfig$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38796c.  v0:= v1.`com.airbnb.lottie.LottieConfig$Builder.b` @type ^`com.airbnb.lottie.network.LottieNetworkCacheProvider` @kind object;
  #L387970.  if v0 != 0 then goto L387984;
  #L387974.  v0:= new `com.airbnb.lottie.LottieConfig$Builder$a`;
  #L387978.  call `<init>`(v0, v1, v2) @signature `Lcom/airbnb/lottie/LottieConfig$Builder$a;.<init>:(Lcom/airbnb/lottie/LottieConfig$Builder;Ljava/io/File;)V` @kind direct;
  #L38797e.  v1.`com.airbnb.lottie.LottieConfig$Builder.b` @type ^`com.airbnb.lottie.network.LottieNetworkCacheProvider` := v0 @kind object;
  #L387982.  return v1 @kind object;
  #L387984.  v2:= new `java.lang.IllegalStateException`;
  #L387988.  v0:= "There is already a cache provider!" @kind object;
  #L38798c.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L387992.  throw v2;
}
procedure `com.airbnb.lottie.LottieConfig$Builder` `setNetworkCacheProvider`(`com.airbnb.lottie.LottieConfig$Builder` v1 @kind this, `com.airbnb.lottie.network.LottieNetworkCacheProvider` v2 @kind object) @signature `Lcom/airbnb/lottie/LottieConfig$Builder;.setNetworkCacheProvider:(Lcom/airbnb/lottie/network/LottieNetworkCacheProvider;)Lcom/airbnb/lottie/LottieConfig$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3879a4.  v0:= v1.`com.airbnb.lottie.LottieConfig$Builder.b` @type ^`com.airbnb.lottie.network.LottieNetworkCacheProvider` @kind object;
  #L3879a8.  if v0 != 0 then goto L3879bc;
  #L3879ac.  v0:= new `com.airbnb.lottie.LottieConfig$Builder$b`;
  #L3879b0.  call `<init>`(v0, v1, v2) @signature `Lcom/airbnb/lottie/LottieConfig$Builder$b;.<init>:(Lcom/airbnb/lottie/LottieConfig$Builder;Lcom/airbnb/lottie/network/LottieNetworkCacheProvider;)V` @kind direct;
  #L3879b6.  v1.`com.airbnb.lottie.LottieConfig$Builder.b` @type ^`com.airbnb.lottie.network.LottieNetworkCacheProvider` := v0 @kind object;
  #L3879ba.  return v1 @kind object;
  #L3879bc.  v2:= new `java.lang.IllegalStateException`;
  #L3879c0.  v0:= "There is already a cache provider!" @kind object;
  #L3879c4.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3879ca.  throw v2;
}
procedure `com.airbnb.lottie.LottieConfig$Builder` `setNetworkFetcher`(`com.airbnb.lottie.LottieConfig$Builder` v0 @kind this, `com.airbnb.lottie.network.LottieNetworkFetcher` v1 @kind object) @signature `Lcom/airbnb/lottie/LottieConfig$Builder;.setNetworkFetcher:(Lcom/airbnb/lottie/network/LottieNetworkFetcher;)Lcom/airbnb/lottie/LottieConfig$Builder;` @AccessFlag PUBLIC {
    temp;

  #L3879dc.  v0.`com.airbnb.lottie.LottieConfig$Builder.a` @type ^`com.airbnb.lottie.network.LottieNetworkFetcher` := v1 @kind object;
  #L3879e0.  return v0 @kind object;
}
