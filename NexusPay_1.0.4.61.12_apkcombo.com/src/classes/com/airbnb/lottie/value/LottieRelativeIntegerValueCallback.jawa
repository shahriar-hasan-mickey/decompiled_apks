record `com.airbnb.lottie.value.LottieRelativeIntegerValueCallback` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.value.LottieValueCallback` @kind class {
}
procedure `void` `<init>`(`com.airbnb.lottie.value.LottieRelativeIntegerValueCallback` v0 @kind this) @signature `Lcom/airbnb/lottie/value/LottieRelativeIntegerValueCallback;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a1990.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/value/LottieValueCallback;.<init>:()V` @kind direct;
  #L3a1996.  return @kind void;
}
procedure `java.lang.Integer` `getOffset`(`com.airbnb.lottie.value.LottieRelativeIntegerValueCallback` v1 @kind this, `com.airbnb.lottie.value.LottieFrameInfo` v2 @kind object) @signature `Lcom/airbnb/lottie/value/LottieRelativeIntegerValueCallback;.getOffset:(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a18e0.  v2:= v1.`com.airbnb.lottie.value.LottieValueCallback.value` @type ^`java.lang.Object` @kind object;
  #L3a18e4.  if v2 == 0 then goto L3a18ee;
  #L3a18e8.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L3a18ec.  return v2 @kind object;
  #L3a18ee.  v2:= new `java.lang.IllegalArgumentException`;
  #L3a18f2.  v0:= "You must provide a static value in the constructor , call setValue, or override getValue." @kind object;
  #L3a18f6.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a18fc.  throw v2;
}
procedure `java.lang.Integer` `getValue`(`com.airbnb.lottie.value.LottieRelativeIntegerValueCallback` v3 @kind this, `com.airbnb.lottie.value.LottieFrameInfo` v4 @kind object) @signature `Lcom/airbnb/lottie/value/LottieRelativeIntegerValueCallback;.getValue:(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a1910.  call temp:= `getStartValue`(v4) @signature `Lcom/airbnb/lottie/value/LottieFrameInfo;.getStartValue:()Ljava/lang/Object;` @kind virtual;
  #L3a1916.  v0:= temp @kind object;
  #L3a1918.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L3a191c.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3a1922.  v0:= temp;
  #L3a1924.  call temp:= `getEndValue`(v4) @signature `Lcom/airbnb/lottie/value/LottieFrameInfo;.getEndValue:()Ljava/lang/Object;` @kind virtual;
  #L3a192a.  v1:= temp @kind object;
  #L3a192c.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L3a1930.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3a1936.  v1:= temp;
  #L3a1938.  call temp:= `getInterpolatedKeyframeProgress`(v4) @signature `Lcom/airbnb/lottie/value/LottieFrameInfo;.getInterpolatedKeyframeProgress:()F` @kind virtual;
  #L3a193e.  v2:= temp;
  #L3a1940.  call temp:= `lerp`(v0, v1, v2) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(IIF)I` @kind static;
  #L3a1946.  v0:= temp;
  #L3a1948.  call temp:= `getOffset`(v3, v4) @signature `Lcom/airbnb/lottie/value/LottieRelativeIntegerValueCallback;.getOffset:(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Integer;` @kind virtual;
  #L3a194e.  v4:= temp @kind object;
  #L3a1950.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3a1956.  v4:= temp;
  #L3a1958.  v0:= v0 + v4 @kind int;
  #L3a195a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3a1960.  v4:= temp @kind object;
  #L3a1962.  return v4 @kind object;
}
procedure `java.lang.Object` `getValue`(`com.airbnb.lottie.value.LottieRelativeIntegerValueCallback` v0 @kind this, `com.airbnb.lottie.value.LottieFrameInfo` v1 @kind object) @signature `Lcom/airbnb/lottie/value/LottieRelativeIntegerValueCallback;.getValue:(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3a1974.  call temp:= `getValue`(v0, v1) @signature `Lcom/airbnb/lottie/value/LottieRelativeIntegerValueCallback;.getValue:(Lcom/airbnb/lottie/value/LottieFrameInfo;)Ljava/lang/Integer;` @kind virtual;
  #L3a197a.  v1:= temp @kind object;
  #L3a197c.  return v1 @kind object;
}
