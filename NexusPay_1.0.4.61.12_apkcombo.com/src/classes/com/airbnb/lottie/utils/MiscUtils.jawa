record `com.airbnb.lottie.utils.MiscUtils` @kind class @AccessFlag PUBLIC {
}
global `android.graphics.PointF` `@@com.airbnb.lottie.utils.MiscUtils.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/utils/MiscUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a06d0.  v0:= new `android.graphics.PointF`;
  #L3a06d4.  call `<init>`(v0) @signature `Landroid/graphics/PointF;.<init>:()V` @kind direct;
  #L3a06da.  `@@com.airbnb.lottie.utils.MiscUtils.a` @type ^`android.graphics.PointF` := v0 @kind object;
  #L3a06de.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.utils.MiscUtils` v0 @kind this) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a06f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a06f6.  return @kind void;
}
procedure `int` `a`(`int` v2 , `int` v3 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.a:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3a063c.  v0:= v2 / v3 @kind int;
  #L3a0640.  v1:= v2 ^~ v3 @kind int;
  #L3a0644.  if v1 < 0 then goto L3a064c;
  #L3a0648.  v1:= 1I;
  #L3a064a.  goto L3a064e;
  #L3a064c.  v1:= 0I;
  #L3a064e.  v2:= v2 %% v3 @kind int;
  #L3a0650.  if v1 != 0 then goto L3a065c;
  #L3a0654.  if v2 == 0 then goto L3a065c;
  #L3a0658.  v0:= v0 + -1;
  #L3a065c.  return v0;
}
procedure `android.graphics.PointF` `addPoints`(`android.graphics.PointF` v3 @kind object, `android.graphics.PointF` v4 @kind object) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.addPoints:(Landroid/graphics/PointF;Landroid/graphics/PointF;)Landroid/graphics/PointF;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0540.  v0:= new `android.graphics.PointF`;
  #L3a0544.  v1:= v3.`android.graphics.PointF.x` @type ^`float`;
  #L3a0548.  v2:= v4.`android.graphics.PointF.x` @type ^`float`;
  #L3a054c.  v1:= v1 + v2 @kind float;
  #L3a054e.  v3:= v3.`android.graphics.PointF.y` @type ^`float`;
  #L3a0552.  v4:= v4.`android.graphics.PointF.y` @type ^`float`;
  #L3a0556.  v3:= v3 + v4 @kind float;
  #L3a0558.  call `<init>`(v0, v1, v3) @signature `Landroid/graphics/PointF;.<init>:(FF)V` @kind direct;
  #L3a055e.  return v0 @kind object;
}
procedure `int` `b`(`float` v0 , `float` v1 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.b:(FF)I` @AccessFlag STATIC {
    temp;

  #L3a0670.  v0:= (`int`) v0 @kind f2i;
  #L3a0672.  v1:= (`int`) v1 @kind f2i;
  #L3a0674.  call temp:= `c`(v0, v1) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.c:(II)I` @kind static;
  #L3a067a.  v0:= temp;
  #L3a067c.  return v0;
}
procedure `int` `c`(`int` v1 , `int` v2 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.c:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3a0690.  call temp:= `a`(v1, v2) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.a:(II)I` @kind static;
  #L3a0696.  v0:= temp;
  #L3a0698.  v2:= v2 * v0 @kind int;
  #L3a069c.  v1:= v1 - v2 @kind int;
  #L3a069e.  return v1;
}
procedure `double` `clamp`(`double` v0 , `double` v2 , `double` v4 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(DDD)D` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3a0598.  call temp:= `min`(v4, v0) @signature `Ljava/lang/Math;.min:(DD)D` @kind static;
  #L3a059e.  v0:= temp @kind wide;
  #L3a05a0.  call temp:= `max`(v2, v0) @signature `Ljava/lang/Math;.max:(DD)D` @kind static;
  #L3a05a6.  v0:= temp @kind wide;
  #L3a05a8.  return v0 @kind wide;
}
procedure `float` `clamp`(`float` v0 , `float` v1 , `float` v2 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(FFF)F` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3a05d8.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L3a05de.  v0:= temp;
  #L3a05e0.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3a05e6.  v0:= temp;
  #L3a05e8.  return v0;
}
procedure `int` `clamp`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(III)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3a0618.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3a061e.  v0:= temp;
  #L3a0620.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3a0626.  v0:= temp;
  #L3a0628.  return v0;
}
procedure `boolean` `contains`(`float` v0 , `float` v1 , `float` v2 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.contains:(FFF)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3a0570.  v1:= fcmpl(v0, v1);
  #L3a0574.  if v1 < 0 then goto L3a0584;
  #L3a0578.  v0:= fcmpg(v0, v2);
  #L3a057c.  if v0 > 0 then goto L3a0584;
  #L3a0580.  v0:= 1I;
  #L3a0582.  goto L3a0586;
  #L3a0584.  v0:= 0I;
  #L3a0586.  return v0;
}
procedure `void` `getPathFromData`(`com.airbnb.lottie.model.content.ShapeData` v11 @kind object, `android.graphics.Path` v12 @kind object) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.getPathFromData:(Lcom/airbnb/lottie/model/content/ShapeData;Landroid/graphics/Path;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3a0708.  call `reset`(v12) @signature `Landroid/graphics/Path;.reset:()V` @kind virtual;
  #L3a070e.  call temp:= `getInitialPoint`(v11) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.getInitialPoint:()Landroid/graphics/PointF;` @kind virtual;
  #L3a0714.  v0:= temp @kind object;
  #L3a0716.  v1:= v0.`android.graphics.PointF.x` @type ^`float`;
  #L3a071a.  v2:= v0.`android.graphics.PointF.y` @type ^`float`;
  #L3a071e.  call `moveTo`(v12, v1, v2) @signature `Landroid/graphics/Path;.moveTo:(FF)V` @kind virtual;
  #L3a0724.  v1:= `@@com.airbnb.lottie.utils.MiscUtils.a` @type ^`android.graphics.PointF` @kind object;
  #L3a0728.  v2:= v0.`android.graphics.PointF.x` @type ^`float`;
  #L3a072c.  v0:= v0.`android.graphics.PointF.y` @type ^`float`;
  #L3a0730.  call `set`(v1, v2, v0) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L3a0736.  v0:= 0I;
  #L3a0738.  call temp:= `getCurves`(v11) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.getCurves:()Ljava/util/List;` @kind virtual;
  #L3a073e.  v1:= temp @kind object;
  #L3a0740.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a0746.  v1:= temp;
  #L3a0748.  if v0 >= v1 then goto L3a07dc;
  #L3a074c.  call temp:= `getCurves`(v11) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.getCurves:()Ljava/util/List;` @kind virtual;
  #L3a0752.  v1:= temp @kind object;
  #L3a0754.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a075a.  v1:= temp @kind object;
  #L3a075c.  v1:= (`com.airbnb.lottie.model.CubicCurveData`) v1 @kind object;
  #L3a0760.  call temp:= `getControlPoint1`(v1) @signature `Lcom/airbnb/lottie/model/CubicCurveData;.getControlPoint1:()Landroid/graphics/PointF;` @kind virtual;
  #L3a0766.  v2:= temp @kind object;
  #L3a0768.  call temp:= `getControlPoint2`(v1) @signature `Lcom/airbnb/lottie/model/CubicCurveData;.getControlPoint2:()Landroid/graphics/PointF;` @kind virtual;
  #L3a076e.  v3:= temp @kind object;
  #L3a0770.  call temp:= `getVertex`(v1) @signature `Lcom/airbnb/lottie/model/CubicCurveData;.getVertex:()Landroid/graphics/PointF;` @kind virtual;
  #L3a0776.  v1:= temp @kind object;
  #L3a0778.  v4:= `@@com.airbnb.lottie.utils.MiscUtils.a` @type ^`android.graphics.PointF` @kind object;
  #L3a077c.  call temp:= `equals`(v2, v4) @signature `Landroid/graphics/PointF;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a0782.  v4:= temp;
  #L3a0784.  if v4 == 0 then goto L3a07a4;
  #L3a0788.  call temp:= `equals`(v3, v1) @signature `Landroid/graphics/PointF;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a078e.  v4:= temp;
  #L3a0790.  if v4 == 0 then goto L3a07a4;
  #L3a0794.  v2:= v1.`android.graphics.PointF.x` @type ^`float`;
  #L3a0798.  v3:= v1.`android.graphics.PointF.y` @type ^`float`;
  #L3a079c.  call `lineTo`(v12, v2, v3) @signature `Landroid/graphics/Path;.lineTo:(FF)V` @kind virtual;
  #L3a07a2.  goto L3a07c4;
  #L3a07a4.  v5:= v2.`android.graphics.PointF.x` @type ^`float`;
  #L3a07a8.  v6:= v2.`android.graphics.PointF.y` @type ^`float`;
  #L3a07ac.  v7:= v3.`android.graphics.PointF.x` @type ^`float`;
  #L3a07b0.  v8:= v3.`android.graphics.PointF.y` @type ^`float`;
  #L3a07b4.  v9:= v1.`android.graphics.PointF.x` @type ^`float`;
  #L3a07b8.  v10:= v1.`android.graphics.PointF.y` @type ^`float`;
  #L3a07bc.  v4:= v12 @kind object;
  #L3a07be.  call `cubicTo`(v4, v5, v6, v7, v8, v9, v10) @signature `Landroid/graphics/Path;.cubicTo:(FFFFFF)V` @kind virtual;
  #L3a07c4.  v2:= `@@com.airbnb.lottie.utils.MiscUtils.a` @type ^`android.graphics.PointF` @kind object;
  #L3a07c8.  v3:= v1.`android.graphics.PointF.x` @type ^`float`;
  #L3a07cc.  v1:= v1.`android.graphics.PointF.y` @type ^`float`;
  #L3a07d0.  call `set`(v2, v3, v1) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L3a07d6.  v0:= v0 + 1;
  #L3a07da.  goto L3a0738;
  #L3a07dc.  call temp:= `isClosed`(v11) @signature `Lcom/airbnb/lottie/model/content/ShapeData;.isClosed:()Z` @kind virtual;
  #L3a07e2.  v11:= temp;
  #L3a07e4.  if v11 == 0 then goto L3a07ee;
  #L3a07e8.  call `close`(v12) @signature `Landroid/graphics/Path;.close:()V` @kind virtual;
  #L3a07ee.  return @kind void;
}
procedure `double` `lerp`(`double` v0 , `double` v2 , `double` v4 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(DDD)D` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3a05bc.  v2:= v2 - v0 @kind double;
  #L3a05be.  v4:= v4 * v2 @kind double;
  #L3a05c2.  v0:= v0 + v4 @kind double;
  #L3a05c4.  return v0 @kind wide;
}
procedure `float` `lerp`(`float` v0 , `float` v1 , `float` v2 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(FFF)F` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3a05fc.  v1:= v1 - v0 @kind float;
  #L3a05fe.  v2:= v2 * v1 @kind float;
  #L3a0602.  v0:= v0 + v2 @kind float;
  #L3a0604.  return v0;
}
procedure `int` `lerp`(`int` v1 , `int` v2 , `float` v3 ) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(IIF)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a06b0.  v0:= (`float`) v1 @kind i2f;
  #L3a06b2.  v2:= v2 - v1 @kind int;
  #L3a06b4.  v1:= (`float`) v2 @kind i2f;
  #L3a06b6.  v3:= v3 * v1 @kind float;
  #L3a06ba.  v0:= v0 + v3 @kind float;
  #L3a06bc.  v1:= (`int`) v0 @kind f2i;
  #L3a06be.  return v1;
}
procedure `void` `resolveKeyPath`(`com.airbnb.lottie.model.KeyPath` v1 @kind object, `int` v2 , `java.util.List` v3 @kind object, `com.airbnb.lottie.model.KeyPath` v4 @kind object, `com.airbnb.lottie.animation.content.KeyPathElementContent` v5 @kind object) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.resolveKeyPath:(Lcom/airbnb/lottie/model/KeyPath;ILjava/util/List;Lcom/airbnb/lottie/model/KeyPath;Lcom/airbnb/lottie/animation/content/KeyPathElementContent;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a0800.  call temp:= `getName`(v5) @signature `Lcom/airbnb/lottie/animation/content/Content;.getName:()Ljava/lang/String;` @kind interface;
  #L3a0806.  v0:= temp @kind object;
  #L3a0808.  call temp:= `fullyResolvesTo`(v1, v0, v2) @signature `Lcom/airbnb/lottie/model/KeyPath;.fullyResolvesTo:(Ljava/lang/String;I)Z` @kind virtual;
  #L3a080e.  v1:= temp;
  #L3a0810.  if v1 == 0 then goto L3a0832;
  #L3a0814.  call temp:= `getName`(v5) @signature `Lcom/airbnb/lottie/animation/content/Content;.getName:()Ljava/lang/String;` @kind interface;
  #L3a081a.  v1:= temp @kind object;
  #L3a081c.  call temp:= `addKey`(v4, v1) @signature `Lcom/airbnb/lottie/model/KeyPath;.addKey:(Ljava/lang/String;)Lcom/airbnb/lottie/model/KeyPath;` @kind virtual;
  #L3a0822.  v1:= temp @kind object;
  #L3a0824.  call temp:= `resolve`(v1, v5) @signature `Lcom/airbnb/lottie/model/KeyPath;.resolve:(Lcom/airbnb/lottie/model/KeyPathElement;)Lcom/airbnb/lottie/model/KeyPath;` @kind virtual;
  #L3a082a.  v1:= temp @kind object;
  #L3a082c.  call temp:= `add`(v3, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a0832.  return @kind void;
}
