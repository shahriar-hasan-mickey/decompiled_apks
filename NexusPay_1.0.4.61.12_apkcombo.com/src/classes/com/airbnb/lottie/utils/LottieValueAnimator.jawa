record `com.airbnb.lottie.utils.LottieValueAnimator` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.utils.BaseLottieAnimator` @kind class, `android.view.Choreographer$FrameCallback` @kind interface {
  `float` `com.airbnb.lottie.utils.LottieValueAnimator.c` @AccessFlag PRIVATE;
  `boolean` `com.airbnb.lottie.utils.LottieValueAnimator.d` @AccessFlag PRIVATE;
  `long` `com.airbnb.lottie.utils.LottieValueAnimator.e` @AccessFlag PRIVATE;
  `float` `com.airbnb.lottie.utils.LottieValueAnimator.f` @AccessFlag PRIVATE;
  `int` `com.airbnb.lottie.utils.LottieValueAnimator.g` @AccessFlag PRIVATE;
  `float` `com.airbnb.lottie.utils.LottieValueAnimator.h` @AccessFlag PRIVATE;
  `float` `com.airbnb.lottie.utils.LottieValueAnimator.i` @AccessFlag PRIVATE;
  `com.airbnb.lottie.LottieComposition` `com.airbnb.lottie.utils.LottieValueAnimator.j` @AccessFlag PRIVATE;
  `boolean` `com.airbnb.lottie.utils.LottieValueAnimator.running` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.airbnb.lottie.utils.LottieValueAnimator` v3 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L39fe30.  call `<init>`(v3) @signature `Lcom/airbnb/lottie/utils/BaseLottieAnimator;.<init>:()V` @kind direct;
  #L39fe36.  v0:= 1.0F;
  #L39fe3a.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.c` @type ^`float` := v0;
  #L39fe3e.  v0:= 0I;
  #L39fe40.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.d` @type ^`boolean` := v0 @kind boolean;
  #L39fe44.  v1:= 0L;
  #L39fe48.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.e` @type ^`long` := v1 @kind wide;
  #L39fe4c.  v1:= 0I;
  #L39fe4e.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float` := v1;
  #L39fe52.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.g` @type ^`int` := v0;
  #L39fe56.  v1:= -822083584I;
  #L39fe5a.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.h` @type ^`float` := v1;
  #L39fe5e.  v1:= 1325400064I;
  #L39fe62.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.i` @type ^`float` := v1;
  #L39fe66.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.running` @type ^`boolean` := v0 @kind boolean;
  #L39fe6a.  return @kind void;
}
procedure `float` `f`(`com.airbnb.lottie.utils.LottieValueAnimator` v2 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.f:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L39fd18.  v0:= v2.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L39fd1c.  if v0 != 0 then goto L39fd28;
  #L39fd20.  v0:= 2139095039I;
  #L39fd26.  return v0;
  #L39fd28.  v1:= 1315859240I;
  #L39fd2e.  call temp:= `getFrameRate`(v0) @signature `Lcom/airbnb/lottie/LottieComposition;.getFrameRate:()F` @kind virtual;
  #L39fd34.  v0:= temp;
  #L39fd36.  v1:= v1 / v0 @kind float;
  #L39fd38.  v0:= v2.`com.airbnb.lottie.utils.LottieValueAnimator.c` @type ^`float`;
  #L39fd3c.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L39fd42.  v0:= temp;
  #L39fd44.  v1:= v1 / v0 @kind float;
  #L39fd46.  return v1;
}
procedure `boolean` `g`(`com.airbnb.lottie.utils.LottieValueAnimator` v2 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L39fc08.  call temp:= `getSpeed`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getSpeed:()F` @kind virtual;
  #L39fc0e.  v0:= temp;
  #L39fc10.  v1:= 0I;
  #L39fc12.  v0:= fcmpg(v0, v1);
  #L39fc16.  if v0 >= 0 then goto L39fc1e;
  #L39fc1a.  v0:= 1I;
  #L39fc1c.  goto L39fc20;
  #L39fc1e.  v0:= 0I;
  #L39fc20.  return v0;
}
procedure `void` `h`(`com.airbnb.lottie.utils.LottieValueAnimator` v4 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.h:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a0430.  v0:= v4.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L3a0434.  if v0 != 0 then goto L3a043a;
  #L3a0438.  return @kind void;
  #L3a043a.  v0:= v4.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L3a043e.  v1:= v4.`com.airbnb.lottie.utils.LottieValueAnimator.h` @type ^`float`;
  #L3a0442.  v1:= fcmpg(v0, v1);
  #L3a0446.  if v1 < 0 then goto L3a0458;
  #L3a044a.  v1:= v4.`com.airbnb.lottie.utils.LottieValueAnimator.i` @type ^`float`;
  #L3a044e.  v0:= fcmpl(v0, v1);
  #L3a0452.  if v0 > 0 then goto L3a0458;
  #L3a0456.  return @kind void;
  #L3a0458.  v0:= new `java.lang.IllegalStateException`;
  #L3a045c.  v1:= 3I;
  #L3a045e.  v1:= new `java.lang.Object`[v1];
  #L3a0462.  v2:= 0I;
  #L3a0464.  v3:= v4.`com.airbnb.lottie.utils.LottieValueAnimator.h` @type ^`float`;
  #L3a0468.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3a046e.  v3:= temp @kind object;
  #L3a0470.  v1[v2]:= v3 @kind object;
  #L3a0474.  v2:= 1I;
  #L3a0476.  v3:= v4.`com.airbnb.lottie.utils.LottieValueAnimator.i` @type ^`float`;
  #L3a047a.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3a0480.  v3:= temp @kind object;
  #L3a0482.  v1[v2]:= v3 @kind object;
  #L3a0486.  v2:= 2I;
  #L3a0488.  v3:= v4.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L3a048c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3a0492.  v3:= temp @kind object;
  #L3a0494.  v1[v2]:= v3 @kind object;
  #L3a0498.  v2:= "Frame must be [%f,%f]. It is %f" @kind object;
  #L3a049c.  call temp:= `format`(v2, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3a04a2.  v1:= temp @kind object;
  #L3a04a4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a04aa.  throw v0;
}
procedure `void` `cancel`(`com.airbnb.lottie.utils.LottieValueAnimator` v0 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L39fe7c.  call `a`(v0) @signature `Lcom/airbnb/lottie/utils/BaseLottieAnimator;.a:()V` @kind virtual;
  #L39fe82.  call `removeFrameCallback`(v0) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.removeFrameCallback:()V` @kind virtual;
  #L39fe88.  return @kind void;
}
procedure `void` `clearComposition`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.clearComposition:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39fe9c.  v0:= 0I;
  #L39fe9e.  v1.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` := v0 @kind object;
  #L39fea2.  v0:= -822083584I;
  #L39fea6.  v1.`com.airbnb.lottie.utils.LottieValueAnimator.h` @type ^`float` := v0;
  #L39feaa.  v0:= 1325400064I;
  #L39feae.  v1.`com.airbnb.lottie.utils.LottieValueAnimator.i` @type ^`float` := v0;
  #L39feb2.  return @kind void;
}
procedure `void` `doFrame`(`com.airbnb.lottie.utils.LottieValueAnimator` v6 @kind this, `long` v7 ) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.doFrame:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39fec4.  call `postFrameCallback`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.postFrameCallback:()V` @kind virtual;
  #L39feca.  v0:= v6.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L39fece.  if v0 == 0 then goto L3a002e;
  #L39fed2.  call temp:= `isRunning`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.isRunning:()Z` @kind virtual;
  #L39fed8.  v0:= temp;
  #L39feda.  if v0 != 0 then goto L39fee2;
  #L39fede.  goto L3a002e;
  #L39fee2.  v0:= "LottieValueAnimator#doFrame" @kind object;
  #L39fee6.  call `beginSection`(v0) @signature `Lcom/airbnb/lottie/L;.beginSection:(Ljava/lang/String;)V` @kind static;
  #L39feec.  v1:= v6.`com.airbnb.lottie.utils.LottieValueAnimator.e` @type ^`long` @kind wide;
  #L39fef0.  v3:= 0L;
  #L39fef4.  v5:= lcmp(v1, v3);
  #L39fef8.  if v5 != 0 then goto L39fefe;
  #L39fefc.  goto L39ff02;
  #L39fefe.  v3:= v7 - v1 @kind long;
  #L39ff02.  call temp:= `f`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.f:()F` @kind direct;
  #L39ff08.  v1:= temp;
  #L39ff0a.  v2:= (`float`) v3 @kind l2f;
  #L39ff0c.  v2:= v2 / v1 @kind float;
  #L39ff0e.  v1:= v6.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L39ff12.  call temp:= `g`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @kind direct;
  #L39ff18.  v3:= temp;
  #L39ff1a.  if v3 == 0 then goto L39ff20;
  #L39ff1e.  v2:= -v2 @kind float;
  #L39ff20.  v1:= v1 + v2 @kind float;
  #L39ff22.  v6.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float` := v1;
  #L39ff26.  call temp:= `getMinFrame`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L39ff2c.  v2:= temp;
  #L39ff2e.  call temp:= `getMaxFrame`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L39ff34.  v3:= temp;
  #L39ff36.  call temp:= `contains`(v1, v2, v3) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.contains:(FFF)Z` @kind static;
  #L39ff3c.  v1:= temp;
  #L39ff3e.  v1:= v1 ^~ 1;
  #L39ff42.  v2:= v6.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L39ff46.  call temp:= `getMinFrame`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L39ff4c.  v3:= temp;
  #L39ff4e.  call temp:= `getMaxFrame`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L39ff54.  v4:= temp;
  #L39ff56.  call temp:= `clamp`(v2, v3, v4) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(FFF)F` @kind static;
  #L39ff5c.  v2:= temp;
  #L39ff5e.  v6.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float` := v2;
  #L39ff62.  v6.`com.airbnb.lottie.utils.LottieValueAnimator.e` @type ^`long` := v7 @kind wide;
  #L39ff66.  call `e`(v6) @signature `Lcom/airbnb/lottie/utils/BaseLottieAnimator;.e:()V` @kind virtual;
  #L39ff6c.  if v1 == 0 then goto L3a0022;
  #L39ff70.  call temp:= `getRepeatCount`(v6) @signature `Landroid/animation/ValueAnimator;.getRepeatCount:()I` @kind virtual;
  #L39ff76.  v1:= temp;
  #L39ff78.  v2:= -1I;
  #L39ff7a.  if v1 == v2 then goto L39ffc8;
  #L39ff7e.  v1:= v6.`com.airbnb.lottie.utils.LottieValueAnimator.g` @type ^`int`;
  #L39ff82.  call temp:= `getRepeatCount`(v6) @signature `Landroid/animation/ValueAnimator;.getRepeatCount:()I` @kind virtual;
  #L39ff88.  v2:= temp;
  #L39ff8a.  if v1 < v2 then goto L39ffc8;
  #L39ff8e.  v7:= v6.`com.airbnb.lottie.utils.LottieValueAnimator.c` @type ^`float`;
  #L39ff92.  v8:= 0I;
  #L39ff94.  v7:= fcmpg(v7, v8);
  #L39ff98.  if v7 >= 0 then goto L39ffa6;
  #L39ff9c.  call temp:= `getMinFrame`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L39ffa2.  v7:= temp;
  #L39ffa4.  goto L39ffae;
  #L39ffa6.  call temp:= `getMaxFrame`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L39ffac.  v7:= temp;
  #L39ffae.  v6.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float` := v7;
  #L39ffb2.  call `removeFrameCallback`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.removeFrameCallback:()V` @kind virtual;
  #L39ffb8.  call temp:= `g`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @kind direct;
  #L39ffbe.  v7:= temp;
  #L39ffc0.  call `b`(v6, v7) @signature `Lcom/airbnb/lottie/utils/BaseLottieAnimator;.b:(Z)V` @kind virtual;
  #L39ffc6.  goto L3a0022;
  #L39ffc8.  call `c`(v6) @signature `Lcom/airbnb/lottie/utils/BaseLottieAnimator;.c:()V` @kind virtual;
  #L39ffce.  v1:= v6.`com.airbnb.lottie.utils.LottieValueAnimator.g` @type ^`int`;
  #L39ffd2.  v1:= v1 + 1;
  #L39ffd6.  v6.`com.airbnb.lottie.utils.LottieValueAnimator.g` @type ^`int` := v1;
  #L39ffda.  call temp:= `getRepeatMode`(v6) @signature `Landroid/animation/ValueAnimator;.getRepeatMode:()I` @kind virtual;
  #L39ffe0.  v1:= temp;
  #L39ffe2.  v2:= 2I;
  #L39ffe4.  if v1 != v2 then goto L39fffc;
  #L39ffe8.  v1:= v6.`com.airbnb.lottie.utils.LottieValueAnimator.d` @type ^`boolean` @kind boolean;
  #L39ffec.  v1:= v1 ^~ 1;
  #L39fff0.  v6.`com.airbnb.lottie.utils.LottieValueAnimator.d` @type ^`boolean` := v1 @kind boolean;
  #L39fff4.  call `reverseAnimationSpeed`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.reverseAnimationSpeed:()V` @kind virtual;
  #L39fffa.  goto L3a001e;
  #L39fffc.  call temp:= `g`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @kind direct;
  #L3a0002.  v1:= temp;
  #L3a0004.  if v1 == 0 then goto L3a0012;
  #L3a0008.  call temp:= `getMaxFrame`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L3a000e.  v1:= temp;
  #L3a0010.  goto L3a001a;
  #L3a0012.  call temp:= `getMinFrame`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L3a0018.  v1:= temp;
  #L3a001a.  v6.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float` := v1;
  #L3a001e.  v6.`com.airbnb.lottie.utils.LottieValueAnimator.e` @type ^`long` := v7 @kind wide;
  #L3a0022.  call `h`(v6) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.h:()V` @kind direct;
  #L3a0028.  call temp:= `endSection`(v0) @signature `Lcom/airbnb/lottie/L;.endSection:(Ljava/lang/String;)F` @kind static;
  #L3a002e.  return @kind void;
}
procedure `void` `endAnimation`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.endAnimation:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a0040.  call `removeFrameCallback`(v1) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.removeFrameCallback:()V` @kind virtual;
  #L3a0046.  call temp:= `g`(v1) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @kind direct;
  #L3a004c.  v0:= temp;
  #L3a004e.  call `b`(v1, v0) @signature `Lcom/airbnb/lottie/utils/BaseLottieAnimator;.b:(Z)V` @kind virtual;
  #L3a0054.  return @kind void;
}
procedure `float` `getAnimatedFraction`(`com.airbnb.lottie.utils.LottieValueAnimator` v3 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getAnimatedFraction:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39fc4c.  v0:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L39fc50.  if v0 != 0 then goto L39fc58;
  #L39fc54.  v0:= 0I;
  #L39fc56.  return v0;
  #L39fc58.  call temp:= `g`(v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @kind direct;
  #L39fc5e.  v0:= temp;
  #L39fc60.  if v0 == 0 then goto L39fc88;
  #L39fc64.  call temp:= `getMaxFrame`(v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L39fc6a.  v0:= temp;
  #L39fc6c.  v1:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L39fc70.  v0:= v0 - v1 @kind float;
  #L39fc72.  call temp:= `getMaxFrame`(v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L39fc78.  v1:= temp;
  #L39fc7a.  call temp:= `getMinFrame`(v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L39fc80.  v2:= temp;
  #L39fc82.  v1:= v1 - v2 @kind float;
  #L39fc84.  v0:= v0 / v1 @kind float;
  #L39fc86.  return v0;
  #L39fc88.  v0:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L39fc8c.  call temp:= `getMinFrame`(v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L39fc92.  v1:= temp;
  #L39fc94.  v0:= v0 - v1 @kind float;
  #L39fc96.  call temp:= `getMaxFrame`(v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L39fc9c.  v1:= temp;
  #L39fc9e.  call temp:= `getMinFrame`(v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L39fca4.  v2:= temp;
  #L39fca6.  goto L39fc82;
}
procedure `java.lang.Object` `getAnimatedValue`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getAnimatedValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39fde0.  call temp:= `getAnimatedValueAbsolute`(v1) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getAnimatedValueAbsolute:()F` @kind virtual;
  #L39fde6.  v0:= temp;
  #L39fde8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L39fdee.  v0:= temp @kind object;
  #L39fdf0.  return v0 @kind object;
}
procedure `float` `getAnimatedValueAbsolute`(`com.airbnb.lottie.utils.LottieValueAnimator` v3 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getAnimatedValueAbsolute:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39fcb8.  v0:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L39fcbc.  if v0 != 0 then goto L39fcc4;
  #L39fcc0.  v0:= 0I;
  #L39fcc2.  return v0;
  #L39fcc4.  v1:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L39fcc8.  call temp:= `getStartFrame`(v0) @signature `Lcom/airbnb/lottie/LottieComposition;.getStartFrame:()F` @kind virtual;
  #L39fcce.  v0:= temp;
  #L39fcd0.  v1:= v1 - v0 @kind float;
  #L39fcd2.  v0:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L39fcd6.  call temp:= `getEndFrame`(v0) @signature `Lcom/airbnb/lottie/LottieComposition;.getEndFrame:()F` @kind virtual;
  #L39fcdc.  v0:= temp;
  #L39fcde.  v2:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L39fce2.  call temp:= `getStartFrame`(v2) @signature `Lcom/airbnb/lottie/LottieComposition;.getStartFrame:()F` @kind virtual;
  #L39fce8.  v2:= temp;
  #L39fcea.  v0:= v0 - v2 @kind float;
  #L39fcec.  v1:= v1 / v0 @kind float;
  #L39fcee.  return v1;
}
procedure `long` `getDuration`(`com.airbnb.lottie.utils.LottieValueAnimator` v2 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getDuration:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39fe04.  v0:= v2.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L39fe08.  if v0 != 0 then goto L39fe12;
  #L39fe0c.  v0:= 0L;
  #L39fe10.  goto L39fe1c;
  #L39fe12.  call temp:= `getDuration`(v0) @signature `Lcom/airbnb/lottie/LottieComposition;.getDuration:()F` @kind virtual;
  #L39fe18.  v0:= temp;
  #L39fe1a.  v0:= (`long`) v0 @kind f2l;
  #L39fe1c.  return v0 @kind wide;
}
procedure `float` `getFrame`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getFrame:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39fd00.  v0:= v1.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L39fd04.  return v0;
}
procedure `float` `getMaxFrame`(`com.airbnb.lottie.utils.LottieValueAnimator` v3 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39fd58.  v0:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L39fd5c.  if v0 != 0 then goto L39fd64;
  #L39fd60.  v0:= 0I;
  #L39fd62.  return v0;
  #L39fd64.  v1:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.i` @type ^`float`;
  #L39fd68.  v2:= 1325400064I;
  #L39fd6c.  v2:= fcmpl(v1, v2);
  #L39fd70.  if v2 != 0 then goto L39fd7c;
  #L39fd74.  call temp:= `getEndFrame`(v0) @signature `Lcom/airbnb/lottie/LottieComposition;.getEndFrame:()F` @kind virtual;
  #L39fd7a.  v1:= temp;
  #L39fd7c.  return v1;
}
procedure `float` `getMinFrame`(`com.airbnb.lottie.utils.LottieValueAnimator` v3 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39fd90.  v0:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L39fd94.  if v0 != 0 then goto L39fd9c;
  #L39fd98.  v0:= 0I;
  #L39fd9a.  return v0;
  #L39fd9c.  v1:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.h` @type ^`float`;
  #L39fda0.  v2:= -822083584I;
  #L39fda4.  v2:= fcmpl(v1, v2);
  #L39fda8.  if v2 != 0 then goto L39fdb4;
  #L39fdac.  call temp:= `getStartFrame`(v0) @signature `Lcom/airbnb/lottie/LottieComposition;.getStartFrame:()F` @kind virtual;
  #L39fdb2.  v1:= temp;
  #L39fdb4.  return v1;
}
procedure `float` `getSpeed`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getSpeed:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39fdc8.  v0:= v1.`com.airbnb.lottie.utils.LottieValueAnimator.c` @type ^`float`;
  #L39fdcc.  return v0;
}
procedure `boolean` `isRunning`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.isRunning:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39fc34.  v0:= v1.`com.airbnb.lottie.utils.LottieValueAnimator.running` @type ^`boolean` @kind boolean;
  #L39fc38.  return v0;
}
procedure `void` `pauseAnimation`(`com.airbnb.lottie.utils.LottieValueAnimator` v0 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.pauseAnimation:()V` @AccessFlag PUBLIC {
    temp;

  #L3a0068.  call `removeFrameCallback`(v0) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.removeFrameCallback:()V` @kind virtual;
  #L3a006e.  return @kind void;
}
procedure `void` `playAnimation`(`com.airbnb.lottie.utils.LottieValueAnimator` v2 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.playAnimation:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a0080.  v0:= 1I;
  #L3a0082.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.running` @type ^`boolean` := v0 @kind boolean;
  #L3a0086.  call temp:= `g`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @kind direct;
  #L3a008c.  v0:= temp;
  #L3a008e.  call `d`(v2, v0) @signature `Lcom/airbnb/lottie/utils/BaseLottieAnimator;.d:(Z)V` @kind virtual;
  #L3a0094.  call temp:= `g`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @kind direct;
  #L3a009a.  v0:= temp;
  #L3a009c.  if v0 == 0 then goto L3a00aa;
  #L3a00a0.  call temp:= `getMaxFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L3a00a6.  v0:= temp;
  #L3a00a8.  goto L3a00b2;
  #L3a00aa.  call temp:= `getMinFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L3a00b0.  v0:= temp;
  #L3a00b2.  v0:= (`int`) v0 @kind f2i;
  #L3a00b4.  v0:= (`float`) v0 @kind i2f;
  #L3a00b6.  call `setFrame`(v2, v0) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setFrame:(F)V` @kind virtual;
  #L3a00bc.  v0:= 0L;
  #L3a00c0.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.e` @type ^`long` := v0 @kind wide;
  #L3a00c4.  v0:= 0I;
  #L3a00c6.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.g` @type ^`int` := v0;
  #L3a00ca.  call `postFrameCallback`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.postFrameCallback:()V` @kind virtual;
  #L3a00d0.  return @kind void;
}
procedure `void` `postFrameCallback`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.postFrameCallback:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3a00e4.  call temp:= `isRunning`(v1) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.isRunning:()Z` @kind virtual;
  #L3a00ea.  v0:= temp;
  #L3a00ec.  if v0 == 0 then goto L3a0106;
  #L3a00f0.  v0:= 0I;
  #L3a00f2.  call `removeFrameCallback`(v1, v0) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.removeFrameCallback:(Z)V` @kind virtual;
  #L3a00f8.  call temp:= `getInstance`() @signature `Landroid/view/Choreographer;.getInstance:()Landroid/view/Choreographer;` @kind static;
  #L3a00fe.  v0:= temp @kind object;
  #L3a0100.  call `postFrameCallback`(v0, v1) @signature `Landroid/view/Choreographer;.postFrameCallback:(Landroid/view/Choreographer$FrameCallback;)V` @kind virtual;
  #L3a0106.  return @kind void;
}
procedure `void` `removeFrameCallback`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.removeFrameCallback:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3a0118.  v0:= 1I;
  #L3a011a.  call `removeFrameCallback`(v1, v0) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.removeFrameCallback:(Z)V` @kind virtual;
  #L3a0120.  return @kind void;
}
procedure `void` `removeFrameCallback`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this, `boolean` v2 ) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.removeFrameCallback:(Z)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3a0134.  call temp:= `getInstance`() @signature `Landroid/view/Choreographer;.getInstance:()Landroid/view/Choreographer;` @kind static;
  #L3a013a.  v0:= temp @kind object;
  #L3a013c.  call `removeFrameCallback`(v0, v1) @signature `Landroid/view/Choreographer;.removeFrameCallback:(Landroid/view/Choreographer$FrameCallback;)V` @kind virtual;
  #L3a0142.  if v2 == 0 then goto L3a014c;
  #L3a0146.  v2:= 0I;
  #L3a0148.  v1.`com.airbnb.lottie.utils.LottieValueAnimator.running` @type ^`boolean` := v2 @kind boolean;
  #L3a014c.  return @kind void;
}
procedure `void` `resumeAnimation`(`com.airbnb.lottie.utils.LottieValueAnimator` v2 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.resumeAnimation:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a0160.  v0:= 1I;
  #L3a0162.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.running` @type ^`boolean` := v0 @kind boolean;
  #L3a0166.  call `postFrameCallback`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.postFrameCallback:()V` @kind virtual;
  #L3a016c.  v0:= 0L;
  #L3a0170.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.e` @type ^`long` := v0 @kind wide;
  #L3a0174.  call temp:= `g`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @kind direct;
  #L3a017a.  v0:= temp;
  #L3a017c.  if v0 == 0 then goto L3a01a6;
  #L3a0180.  call temp:= `getFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getFrame:()F` @kind virtual;
  #L3a0186.  v0:= temp;
  #L3a0188.  call temp:= `getMinFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L3a018e.  v1:= temp;
  #L3a0190.  v0:= fcmpl(v0, v1);
  #L3a0194.  if v0 != 0 then goto L3a01a6;
  #L3a0198.  call temp:= `getMaxFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L3a019e.  v0:= temp;
  #L3a01a0.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float` := v0;
  #L3a01a4.  goto L3a01d6;
  #L3a01a6.  call temp:= `g`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.g:()Z` @kind direct;
  #L3a01ac.  v0:= temp;
  #L3a01ae.  if v0 != 0 then goto L3a01d6;
  #L3a01b2.  call temp:= `getFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getFrame:()F` @kind virtual;
  #L3a01b8.  v0:= temp;
  #L3a01ba.  call temp:= `getMaxFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L3a01c0.  v1:= temp;
  #L3a01c2.  v0:= fcmpl(v0, v1);
  #L3a01c6.  if v0 != 0 then goto L3a01d6;
  #L3a01ca.  call temp:= `getMinFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L3a01d0.  v0:= temp;
  #L3a01d2.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float` := v0;
  #L3a01d6.  return @kind void;
}
procedure `void` `reverseAnimationSpeed`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.reverseAnimationSpeed:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a01e8.  call temp:= `getSpeed`(v1) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getSpeed:()F` @kind virtual;
  #L3a01ee.  v0:= temp;
  #L3a01f0.  v0:= -v0 @kind float;
  #L3a01f2.  call `setSpeed`(v1, v0) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setSpeed:(F)V` @kind virtual;
  #L3a01f8.  return @kind void;
}
procedure `void` `setComposition`(`com.airbnb.lottie.utils.LottieValueAnimator` v2 @kind this, `com.airbnb.lottie.LottieComposition` v3 @kind object) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setComposition:(Lcom/airbnb/lottie/LottieComposition;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a020c.  v0:= v2.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L3a0210.  if v0 != 0 then goto L3a0218;
  #L3a0214.  v0:= 1I;
  #L3a0216.  goto L3a021a;
  #L3a0218.  v0:= 0I;
  #L3a021a.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` := v3 @kind object;
  #L3a021e.  if v0 == 0 then goto L3a025a;
  #L3a0222.  v0:= v2.`com.airbnb.lottie.utils.LottieValueAnimator.h` @type ^`float`;
  #L3a0226.  call temp:= `getStartFrame`(v3) @signature `Lcom/airbnb/lottie/LottieComposition;.getStartFrame:()F` @kind virtual;
  #L3a022c.  v1:= temp;
  #L3a022e.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3a0234.  v0:= temp;
  #L3a0236.  v0:= (`int`) v0 @kind f2i;
  #L3a0238.  v0:= (`float`) v0 @kind i2f;
  #L3a023a.  v1:= v2.`com.airbnb.lottie.utils.LottieValueAnimator.i` @type ^`float`;
  #L3a023e.  call temp:= `getEndFrame`(v3) @signature `Lcom/airbnb/lottie/LottieComposition;.getEndFrame:()F` @kind virtual;
  #L3a0244.  v3:= temp;
  #L3a0246.  call temp:= `min`(v1, v3) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L3a024c.  v3:= temp;
  #L3a024e.  v3:= (`int`) v3 @kind f2i;
  #L3a0250.  v3:= (`float`) v3 @kind i2f;
  #L3a0252.  call `setMinAndMaxFrames`(v2, v0, v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setMinAndMaxFrames:(FF)V` @kind virtual;
  #L3a0258.  goto L3a0278;
  #L3a025a.  call temp:= `getStartFrame`(v3) @signature `Lcom/airbnb/lottie/LottieComposition;.getStartFrame:()F` @kind virtual;
  #L3a0260.  v0:= temp;
  #L3a0262.  v0:= (`int`) v0 @kind f2i;
  #L3a0264.  v0:= (`float`) v0 @kind i2f;
  #L3a0266.  call temp:= `getEndFrame`(v3) @signature `Lcom/airbnb/lottie/LottieComposition;.getEndFrame:()F` @kind virtual;
  #L3a026c.  v3:= temp;
  #L3a026e.  v3:= (`int`) v3 @kind f2i;
  #L3a0270.  v3:= (`float`) v3 @kind i2f;
  #L3a0272.  call `setMinAndMaxFrames`(v2, v0, v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setMinAndMaxFrames:(FF)V` @kind virtual;
  #L3a0278.  v3:= v2.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L3a027c.  v0:= 0I;
  #L3a027e.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float` := v0;
  #L3a0282.  v3:= (`int`) v3 @kind f2i;
  #L3a0284.  v3:= (`float`) v3 @kind i2f;
  #L3a0286.  call `setFrame`(v2, v3) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setFrame:(F)V` @kind virtual;
  #L3a028c.  call `e`(v2) @signature `Lcom/airbnb/lottie/utils/BaseLottieAnimator;.e:()V` @kind virtual;
  #L3a0292.  return @kind void;
}
procedure `void` `setFrame`(`com.airbnb.lottie.utils.LottieValueAnimator` v2 @kind this, `float` v3 ) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setFrame:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a02a4.  v0:= v2.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L3a02a8.  v0:= fcmpl(v0, v3);
  #L3a02ac.  if v0 != 0 then goto L3a02b2;
  #L3a02b0.  return @kind void;
  #L3a02b2.  call temp:= `getMinFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMinFrame:()F` @kind virtual;
  #L3a02b8.  v0:= temp;
  #L3a02ba.  call temp:= `getMaxFrame`(v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.getMaxFrame:()F` @kind virtual;
  #L3a02c0.  v1:= temp;
  #L3a02c2.  call temp:= `clamp`(v3, v0, v1) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(FFF)F` @kind static;
  #L3a02c8.  v3:= temp;
  #L3a02ca.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float` := v3;
  #L3a02ce.  v0:= 0L;
  #L3a02d2.  v2.`com.airbnb.lottie.utils.LottieValueAnimator.e` @type ^`long` := v0 @kind wide;
  #L3a02d6.  call `e`(v2) @signature `Lcom/airbnb/lottie/utils/BaseLottieAnimator;.e:()V` @kind virtual;
  #L3a02dc.  return @kind void;
}
procedure `void` `setMaxFrame`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this, `float` v2 ) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setMaxFrame:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a02f0.  v0:= v1.`com.airbnb.lottie.utils.LottieValueAnimator.h` @type ^`float`;
  #L3a02f4.  call `setMinAndMaxFrames`(v1, v0, v2) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setMinAndMaxFrames:(FF)V` @kind virtual;
  #L3a02fa.  return @kind void;
}
procedure `void` `setMinAndMaxFrames`(`com.airbnb.lottie.utils.LottieValueAnimator` v3 @kind this, `float` v4 , `float` v5 ) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setMinAndMaxFrames:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a030c.  v0:= fcmpl(v4, v5);
  #L3a0310.  if v0 > 0 then goto L3a0374;
  #L3a0314.  v0:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L3a0318.  if v0 != 0 then goto L3a0324;
  #L3a031c.  v0:= -8388609I;
  #L3a0322.  goto L3a032c;
  #L3a0324.  call temp:= `getStartFrame`(v0) @signature `Lcom/airbnb/lottie/LottieComposition;.getStartFrame:()F` @kind virtual;
  #L3a032a.  v0:= temp;
  #L3a032c.  v1:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.j` @type ^`com.airbnb.lottie.LottieComposition` @kind object;
  #L3a0330.  if v1 != 0 then goto L3a033c;
  #L3a0334.  v1:= 2139095039I;
  #L3a033a.  goto L3a0344;
  #L3a033c.  call temp:= `getEndFrame`(v1) @signature `Lcom/airbnb/lottie/LottieComposition;.getEndFrame:()F` @kind virtual;
  #L3a0342.  v1:= temp;
  #L3a0344.  call temp:= `clamp`(v4, v0, v1) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(FFF)F` @kind static;
  #L3a034a.  v2:= temp;
  #L3a034c.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.h` @type ^`float` := v2;
  #L3a0350.  call temp:= `clamp`(v5, v0, v1) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(FFF)F` @kind static;
  #L3a0356.  v0:= temp;
  #L3a0358.  v3.`com.airbnb.lottie.utils.LottieValueAnimator.i` @type ^`float` := v0;
  #L3a035c.  v0:= v3.`com.airbnb.lottie.utils.LottieValueAnimator.f` @type ^`float`;
  #L3a0360.  call temp:= `clamp`(v0, v4, v5) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(FFF)F` @kind static;
  #L3a0366.  v4:= temp;
  #L3a0368.  v4:= (`int`) v4 @kind f2i;
  #L3a036a.  v4:= (`float`) v4 @kind i2f;
  #L3a036c.  call `setFrame`(v3, v4) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setFrame:(F)V` @kind virtual;
  #L3a0372.  return @kind void;
  #L3a0374.  v0:= new `java.lang.IllegalArgumentException`;
  #L3a0378.  v1:= 2I;
  #L3a037a.  v1:= new `java.lang.Object`[v1];
  #L3a037e.  v2:= 0I;
  #L3a0380.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3a0386.  v4:= temp @kind object;
  #L3a0388.  v1[v2]:= v4 @kind object;
  #L3a038c.  v4:= 1I;
  #L3a038e.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3a0394.  v5:= temp @kind object;
  #L3a0396.  v1[v4]:= v5 @kind object;
  #L3a039a.  v4:= "minFrame (%s) must be <= maxFrame (%s)" @kind object;
  #L3a039e.  call temp:= `format`(v4, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3a03a4.  v4:= temp @kind object;
  #L3a03a6.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a03ac.  throw v0;
}
procedure `void` `setMinFrame`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setMinFrame:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a03c0.  v2:= (`float`) v2 @kind i2f;
  #L3a03c2.  v0:= v1.`com.airbnb.lottie.utils.LottieValueAnimator.i` @type ^`float`;
  #L3a03c6.  v0:= (`int`) v0 @kind f2i;
  #L3a03c8.  v0:= (`float`) v0 @kind i2f;
  #L3a03ca.  call `setMinAndMaxFrames`(v1, v2, v0) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setMinAndMaxFrames:(FF)V` @kind virtual;
  #L3a03d0.  return @kind void;
}
procedure `void` `setRepeatMode`(`com.airbnb.lottie.utils.LottieValueAnimator` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setRepeatMode:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a03e4.  call `setRepeatMode`(v1, v2) @signature `Landroid/animation/ValueAnimator;.setRepeatMode:(I)V` @kind super;
  #L3a03ea.  v0:= 2I;
  #L3a03ec.  if v2 == v0 then goto L3a0404;
  #L3a03f0.  v2:= v1.`com.airbnb.lottie.utils.LottieValueAnimator.d` @type ^`boolean` @kind boolean;
  #L3a03f4.  if v2 == 0 then goto L3a0404;
  #L3a03f8.  v2:= 0I;
  #L3a03fa.  v1.`com.airbnb.lottie.utils.LottieValueAnimator.d` @type ^`boolean` := v2 @kind boolean;
  #L3a03fe.  call `reverseAnimationSpeed`(v1) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.reverseAnimationSpeed:()V` @kind virtual;
  #L3a0404.  return @kind void;
}
procedure `void` `setSpeed`(`com.airbnb.lottie.utils.LottieValueAnimator` v0 @kind this, `float` v1 ) @signature `Lcom/airbnb/lottie/utils/LottieValueAnimator;.setSpeed:(F)V` @AccessFlag PUBLIC {
    temp;

  #L3a0418.  v0.`com.airbnb.lottie.utils.LottieValueAnimator.c` @type ^`float` := v1;
  #L3a041c.  return @kind void;
}
