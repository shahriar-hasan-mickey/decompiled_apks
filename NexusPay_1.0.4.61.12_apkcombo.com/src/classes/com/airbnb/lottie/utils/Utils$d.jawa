record `com.airbnb.lottie.utils.Utils$d` @kind class @AccessFlag  extends `java.lang.ThreadLocal` @kind class {
}
procedure `void` `<init>`(`com.airbnb.lottie.utils.Utils$d` v0 @kind this) @signature `Lcom/airbnb/lottie/utils/Utils$d;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3a0968.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L3a096e.  return @kind void;
}
procedure `float`[] `a`(`com.airbnb.lottie.utils.Utils$d` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/Utils$d;.a:()[F` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3a0934.  v0:= 4I;
  #L3a0936.  v0:= new `float`[v0];
  #L3a093a.  return v0 @kind object;
}
procedure `java.lang.Object` `initialValue`(`com.airbnb.lottie.utils.Utils$d` v1 @kind this) @signature `Lcom/airbnb/lottie/utils/Utils$d;.initialValue:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L3a094c.  call temp:= `a`(v1) @signature `Lcom/airbnb/lottie/utils/Utils$d;.a:()[F` @kind virtual;
  #L3a0952.  v0:= temp @kind object;
  #L3a0954.  return v0 @kind object;
}
