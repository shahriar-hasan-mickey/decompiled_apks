record `com.airbnb.lottie.utils.Logger` @kind class @AccessFlag PUBLIC {
}
global `com.airbnb.lottie.LottieLogger` `@@com.airbnb.lottie.utils.Logger.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/utils/Logger;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L39fb2c.  v0:= new `com.airbnb.lottie.utils.LogcatLogger`;
  #L39fb30.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/utils/LogcatLogger;.<init>:()V` @kind direct;
  #L39fb36.  `@@com.airbnb.lottie.utils.Logger.a` @type ^`com.airbnb.lottie.LottieLogger` := v0 @kind object;
  #L39fb3a.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.utils.Logger` v0 @kind this) @signature `Lcom/airbnb/lottie/utils/Logger;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39fb4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39fb52.  return @kind void;
}
procedure `void` `debug`(`java.lang.String` v1 @kind object) @signature `Lcom/airbnb/lottie/utils/Logger;.debug:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39fb64.  v0:= `@@com.airbnb.lottie.utils.Logger.a` @type ^`com.airbnb.lottie.LottieLogger` @kind object;
  #L39fb68.  call `debug`(v0, v1) @signature `Lcom/airbnb/lottie/LottieLogger;.debug:(Ljava/lang/String;)V` @kind interface;
  #L39fb6e.  return @kind void;
}
procedure `void` `debug`(`java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lcom/airbnb/lottie/utils/Logger;.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39fb80.  v0:= `@@com.airbnb.lottie.utils.Logger.a` @type ^`com.airbnb.lottie.LottieLogger` @kind object;
  #L39fb84.  call `debug`(v0, v1, v2) @signature `Lcom/airbnb/lottie/LottieLogger;.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L39fb8a.  return @kind void;
}
procedure `void` `error`(`java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lcom/airbnb/lottie/utils/Logger;.error:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39fb9c.  v0:= `@@com.airbnb.lottie.utils.Logger.a` @type ^`com.airbnb.lottie.LottieLogger` @kind object;
  #L39fba0.  call `error`(v0, v1, v2) @signature `Lcom/airbnb/lottie/LottieLogger;.error:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L39fba6.  return @kind void;
}
procedure `void` `setInstance`(`com.airbnb.lottie.LottieLogger` v0 @kind object) @signature `Lcom/airbnb/lottie/utils/Logger;.setInstance:(Lcom/airbnb/lottie/LottieLogger;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L39fbb8.  `@@com.airbnb.lottie.utils.Logger.a` @type ^`com.airbnb.lottie.LottieLogger` := v0 @kind object;
  #L39fbbc.  return @kind void;
}
procedure `void` `warning`(`java.lang.String` v1 @kind object) @signature `Lcom/airbnb/lottie/utils/Logger;.warning:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39fbd0.  v0:= `@@com.airbnb.lottie.utils.Logger.a` @type ^`com.airbnb.lottie.LottieLogger` @kind object;
  #L39fbd4.  call `warning`(v0, v1) @signature `Lcom/airbnb/lottie/LottieLogger;.warning:(Ljava/lang/String;)V` @kind interface;
  #L39fbda.  return @kind void;
}
procedure `void` `warning`(`java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lcom/airbnb/lottie/utils/Logger;.warning:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39fbec.  v0:= `@@com.airbnb.lottie.utils.Logger.a` @type ^`com.airbnb.lottie.LottieLogger` @kind object;
  #L39fbf0.  call `warning`(v0, v1, v2) @signature `Lcom/airbnb/lottie/LottieLogger;.warning:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L39fbf6.  return @kind void;
}
