record `com.airbnb.lottie.animation.keyframe.ColorKeyframeAnimation` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.animation.keyframe.a` @kind class {
}
procedure `void` `<init>`(`com.airbnb.lottie.animation.keyframe.ColorKeyframeAnimation` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/airbnb/lottie/animation/keyframe/ColorKeyframeAnimation;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38f93c.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/animation/keyframe/a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L38f942.  return @kind void;
}
procedure `java.lang.Integer` `e`(`com.airbnb.lottie.animation.keyframe.ColorKeyframeAnimation` v0 @kind this, `com.airbnb.lottie.value.Keyframe` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/animation/keyframe/ColorKeyframeAnimation;.e:(Lcom/airbnb/lottie/value/Keyframe;F)Ljava/lang/Integer;` @AccessFlag  {
    temp;

  #L38f8fc.  call temp:= `getIntValue`(v0, v1, v2) @signature `Lcom/airbnb/lottie/animation/keyframe/ColorKeyframeAnimation;.getIntValue:(Lcom/airbnb/lottie/value/Keyframe;F)I` @kind virtual;
  #L38f902.  v1:= temp;
  #L38f904.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L38f90a.  v1:= temp @kind object;
  #L38f90c.  return v1 @kind object;
}
procedure `int` `getIntValue`(`com.airbnb.lottie.animation.keyframe.ColorKeyframeAnimation` v2 @kind this) @signature `Lcom/airbnb/lottie/animation/keyframe/ColorKeyframeAnimation;.getIntValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38f818.  call temp:= `getCurrentKeyframe`(v2) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation;.getCurrentKeyframe:()Lcom/airbnb/lottie/value/Keyframe;` @kind virtual;
  #L38f81e.  v0:= temp @kind object;
  #L38f820.  call temp:= `getInterpolatedCurrentKeyframeProgress`(v2) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation;.getInterpolatedCurrentKeyframeProgress:()F` @kind virtual;
  #L38f826.  v1:= temp;
  #L38f828.  call temp:= `getIntValue`(v2, v0, v1) @signature `Lcom/airbnb/lottie/animation/keyframe/ColorKeyframeAnimation;.getIntValue:(Lcom/airbnb/lottie/value/Keyframe;F)I` @kind virtual;
  #L38f82e.  v0:= temp;
  #L38f830.  return v0;
}
procedure `int` `getIntValue`(`com.airbnb.lottie.animation.keyframe.ColorKeyframeAnimation` v10 @kind this, `com.airbnb.lottie.value.Keyframe` v11 @kind object, `float` v12 ) @signature `Lcom/airbnb/lottie/animation/keyframe/ColorKeyframeAnimation;.getIntValue:(Lcom/airbnb/lottie/value/Keyframe;F)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L38f844.  v0:= v11.`com.airbnb.lottie.value.Keyframe.startValue` @type ^`java.lang.Object` @kind object;
  #L38f848.  if v0 == 0 then goto L38f8dc;
  #L38f84c.  v1:= v11.`com.airbnb.lottie.value.Keyframe.endValue` @type ^`java.lang.Object` @kind object;
  #L38f850.  if v1 == 0 then goto L38f8dc;
  #L38f854.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L38f858.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L38f85e.  v0:= temp;
  #L38f860.  v1:= v11.`com.airbnb.lottie.value.Keyframe.endValue` @type ^`java.lang.Object` @kind object;
  #L38f864.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L38f868.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L38f86e.  v1:= temp;
  #L38f870.  v2:= v10.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation.valueCallback` @type ^`com.airbnb.lottie.value.LottieValueCallback` @kind object;
  #L38f874.  if v2 == 0 then goto L38f8c4;
  #L38f878.  v3:= v11.`com.airbnb.lottie.value.Keyframe.startFrame` @type ^`float`;
  #L38f87c.  v11:= v11.`com.airbnb.lottie.value.Keyframe.endFrame` @type ^`java.lang.Float` @kind object;
  #L38f880.  call temp:= `floatValue`(v11) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L38f886.  v4:= temp;
  #L38f888.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L38f88e.  v5:= temp @kind object;
  #L38f890.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L38f896.  v6:= temp @kind object;
  #L38f898.  call temp:= `b`(v10) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation;.b:()F` @kind virtual;
  #L38f89e.  v8:= temp;
  #L38f8a0.  call temp:= `getProgress`(v10) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation;.getProgress:()F` @kind virtual;
  #L38f8a6.  v9:= temp;
  #L38f8a8.  v7:= v12;
  #L38f8aa.  call temp:= `getValueInternal`(v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/airbnb/lottie/value/LottieValueCallback;.getValueInternal:(FFLjava/lang/Object;Ljava/lang/Object;FFF)Ljava/lang/Object;` @kind virtual;
  #L38f8b0.  v11:= temp @kind object;
  #L38f8b2.  v11:= (`java.lang.Integer`) v11 @kind object;
  #L38f8b6.  if v11 == 0 then goto L38f8c4;
  #L38f8ba.  call temp:= `intValue`(v11) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L38f8c0.  v11:= temp;
  #L38f8c2.  return v11;
  #L38f8c4.  v11:= 0I;
  #L38f8c6.  v2:= 1.0F;
  #L38f8ca.  call temp:= `clamp`(v12, v11, v2) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(FFF)F` @kind static;
  #L38f8d0.  v11:= temp;
  #L38f8d2.  call temp:= `evaluate`(v11, v0, v1) @signature `Lcom/airbnb/lottie/utils/GammaEvaluator;.evaluate:(FII)I` @kind static;
  #L38f8d8.  v11:= temp;
  #L38f8da.  return v11;
  #L38f8dc.  v11:= new `java.lang.IllegalStateException`;
  #L38f8e0.  v12:= "Missing values for keyframe." @kind object;
  #L38f8e4.  call `<init>`(v11, v12) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38f8ea.  throw v11;
}
procedure `java.lang.Object` `getValue`(`com.airbnb.lottie.animation.keyframe.ColorKeyframeAnimation` v0 @kind this, `com.airbnb.lottie.value.Keyframe` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/animation/keyframe/ColorKeyframeAnimation;.getValue:(Lcom/airbnb/lottie/value/Keyframe;F)Ljava/lang/Object;` @AccessFlag SYNTHETIC {
    temp;

  #L38f920.  call temp:= `e`(v0, v1, v2) @signature `Lcom/airbnb/lottie/animation/keyframe/ColorKeyframeAnimation;.e:(Lcom/airbnb/lottie/value/Keyframe;F)Ljava/lang/Integer;` @kind virtual;
  #L38f926.  v1:= temp @kind object;
  #L38f928.  return v1 @kind object;
}
