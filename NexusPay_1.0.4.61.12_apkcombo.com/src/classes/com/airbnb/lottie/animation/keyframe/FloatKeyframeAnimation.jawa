record `com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.animation.keyframe.a` @kind class {
}
procedure `void` `<init>`(`com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/airbnb/lottie/animation/keyframe/FloatKeyframeAnimation;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38fa58.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/animation/keyframe/a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L38fa5e.  return @kind void;
}
procedure `float` `e`(`com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation` v9 @kind this, `com.airbnb.lottie.value.Keyframe` v10 @kind object, `float` v11 ) @signature `Lcom/airbnb/lottie/animation/keyframe/FloatKeyframeAnimation;.e:(Lcom/airbnb/lottie/value/Keyframe;F)F` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L38f980.  v0:= v10.`com.airbnb.lottie.value.Keyframe.startValue` @type ^`java.lang.Object` @kind object;
  #L38f984.  if v0 == 0 then goto L38f9f6;
  #L38f988.  v0:= v10.`com.airbnb.lottie.value.Keyframe.endValue` @type ^`java.lang.Object` @kind object;
  #L38f98c.  if v0 == 0 then goto L38f9f6;
  #L38f990.  v1:= v9.`com.airbnb.lottie.animation.keyframe.BaseKeyframeAnimation.valueCallback` @type ^`com.airbnb.lottie.value.LottieValueCallback` @kind object;
  #L38f994.  if v1 == 0 then goto L38f9dc;
  #L38f998.  v2:= v10.`com.airbnb.lottie.value.Keyframe.startFrame` @type ^`float`;
  #L38f99c.  v0:= v10.`com.airbnb.lottie.value.Keyframe.endFrame` @type ^`java.lang.Float` @kind object;
  #L38f9a0.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L38f9a6.  v3:= temp;
  #L38f9a8.  v4:= v10.`com.airbnb.lottie.value.Keyframe.startValue` @type ^`java.lang.Object` @kind object;
  #L38f9ac.  v5:= v10.`com.airbnb.lottie.value.Keyframe.endValue` @type ^`java.lang.Object` @kind object;
  #L38f9b0.  call temp:= `b`(v9) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation;.b:()F` @kind virtual;
  #L38f9b6.  v7:= temp;
  #L38f9b8.  call temp:= `getProgress`(v9) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation;.getProgress:()F` @kind virtual;
  #L38f9be.  v8:= temp;
  #L38f9c0.  v6:= v11;
  #L38f9c2.  call temp:= `getValueInternal`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/airbnb/lottie/value/LottieValueCallback;.getValueInternal:(FFLjava/lang/Object;Ljava/lang/Object;FFF)Ljava/lang/Object;` @kind virtual;
  #L38f9c8.  v0:= temp @kind object;
  #L38f9ca.  v0:= (`java.lang.Float`) v0 @kind object;
  #L38f9ce.  if v0 == 0 then goto L38f9dc;
  #L38f9d2.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L38f9d8.  v10:= temp;
  #L38f9da.  return v10;
  #L38f9dc.  call temp:= `getStartValueFloat`(v10) @signature `Lcom/airbnb/lottie/value/Keyframe;.getStartValueFloat:()F` @kind virtual;
  #L38f9e2.  v0:= temp;
  #L38f9e4.  call temp:= `getEndValueFloat`(v10) @signature `Lcom/airbnb/lottie/value/Keyframe;.getEndValueFloat:()F` @kind virtual;
  #L38f9ea.  v10:= temp;
  #L38f9ec.  call temp:= `lerp`(v0, v10, v11) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(FFF)F` @kind static;
  #L38f9f2.  v10:= temp;
  #L38f9f4.  return v10;
  #L38f9f6.  v10:= new `java.lang.IllegalStateException`;
  #L38f9fa.  v11:= "Missing values for keyframe." @kind object;
  #L38f9fe.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38fa04.  throw v10;
}
procedure `java.lang.Float` `f`(`com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation` v0 @kind this, `com.airbnb.lottie.value.Keyframe` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/animation/keyframe/FloatKeyframeAnimation;.f:(Lcom/airbnb/lottie/value/Keyframe;F)Ljava/lang/Float;` @AccessFlag  {
    temp;

  #L38fa18.  call temp:= `e`(v0, v1, v2) @signature `Lcom/airbnb/lottie/animation/keyframe/FloatKeyframeAnimation;.e:(Lcom/airbnb/lottie/value/Keyframe;F)F` @kind virtual;
  #L38fa1e.  v1:= temp;
  #L38fa20.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L38fa26.  v1:= temp @kind object;
  #L38fa28.  return v1 @kind object;
}
procedure `float` `getFloatValue`(`com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation` v2 @kind this) @signature `Lcom/airbnb/lottie/animation/keyframe/FloatKeyframeAnimation;.getFloatValue:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38f954.  call temp:= `getCurrentKeyframe`(v2) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation;.getCurrentKeyframe:()Lcom/airbnb/lottie/value/Keyframe;` @kind virtual;
  #L38f95a.  v0:= temp @kind object;
  #L38f95c.  call temp:= `getInterpolatedCurrentKeyframeProgress`(v2) @signature `Lcom/airbnb/lottie/animation/keyframe/BaseKeyframeAnimation;.getInterpolatedCurrentKeyframeProgress:()F` @kind virtual;
  #L38f962.  v1:= temp;
  #L38f964.  call temp:= `e`(v2, v0, v1) @signature `Lcom/airbnb/lottie/animation/keyframe/FloatKeyframeAnimation;.e:(Lcom/airbnb/lottie/value/Keyframe;F)F` @kind virtual;
  #L38f96a.  v0:= temp;
  #L38f96c.  return v0;
}
procedure `java.lang.Object` `getValue`(`com.airbnb.lottie.animation.keyframe.FloatKeyframeAnimation` v0 @kind this, `com.airbnb.lottie.value.Keyframe` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/animation/keyframe/FloatKeyframeAnimation;.getValue:(Lcom/airbnb/lottie/value/Keyframe;F)Ljava/lang/Object;` @AccessFlag SYNTHETIC {
    temp;

  #L38fa3c.  call temp:= `f`(v0, v1, v2) @signature `Lcom/airbnb/lottie/animation/keyframe/FloatKeyframeAnimation;.f:(Lcom/airbnb/lottie/value/Keyframe;F)Ljava/lang/Float;` @kind virtual;
  #L38fa42.  v1:= temp @kind object;
  #L38fa44.  return v1 @kind object;
}
