record `com.airbnb.lottie.animation.content.MergePathsContent` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.animation.content.b` @kind interface, `com.airbnb.lottie.animation.content.a` @kind interface {
  `android.graphics.Path` `com.airbnb.lottie.animation.content.MergePathsContent.a` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Path` `com.airbnb.lottie.animation.content.MergePathsContent.b` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Path` `com.airbnb.lottie.animation.content.MergePathsContent.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.airbnb.lottie.animation.content.MergePathsContent.d` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.airbnb.lottie.animation.content.MergePathsContent.e` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.lottie.model.content.MergePaths` `com.airbnb.lottie.animation.content.MergePathsContent.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.animation.content.MergePathsContent` v2 @kind this, `com.airbnb.lottie.model.content.MergePaths` v3 @kind object) @signature `Lcom/airbnb/lottie/animation/content/MergePathsContent;.<init>:(Lcom/airbnb/lottie/model/content/MergePaths;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L38d754.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38d75a.  v0:= new `android.graphics.Path`;
  #L38d75e.  call `<init>`(v0) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L38d764.  v2.`com.airbnb.lottie.animation.content.MergePathsContent.a` @type ^`android.graphics.Path` := v0 @kind object;
  #L38d768.  v0:= new `android.graphics.Path`;
  #L38d76c.  call `<init>`(v0) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L38d772.  v2.`com.airbnb.lottie.animation.content.MergePathsContent.b` @type ^`android.graphics.Path` := v0 @kind object;
  #L38d776.  v0:= new `android.graphics.Path`;
  #L38d77a.  call `<init>`(v0) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L38d780.  v2.`com.airbnb.lottie.animation.content.MergePathsContent.c` @type ^`android.graphics.Path` := v0 @kind object;
  #L38d784.  v0:= new `java.util.ArrayList`;
  #L38d788.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L38d78e.  v2.`com.airbnb.lottie.animation.content.MergePathsContent.e` @type ^`java.util.List` := v0 @kind object;
  #L38d792.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L38d796.  v1:= 19I;
  #L38d79a.  if v0 < v1 then goto L38d7b0;
  #L38d79e.  call temp:= `getName`(v3) @signature `Lcom/airbnb/lottie/model/content/MergePaths;.getName:()Ljava/lang/String;` @kind virtual;
  #L38d7a4.  v0:= temp @kind object;
  #L38d7a6.  v2.`com.airbnb.lottie.animation.content.MergePathsContent.d` @type ^`java.lang.String` := v0 @kind object;
  #L38d7aa.  v2.`com.airbnb.lottie.animation.content.MergePathsContent.f` @type ^`com.airbnb.lottie.model.content.MergePaths` := v3 @kind object;
  #L38d7ae.  return @kind void;
  #L38d7b0.  v3:= new `java.lang.IllegalStateException`;
  #L38d7b4.  v0:= "Merge paths are not supported pre-KitKat." @kind object;
  #L38d7b8.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38d7be.  throw v3;
}
procedure `void` `a`(`com.airbnb.lottie.animation.content.MergePathsContent` v3 @kind this) @signature `Lcom/airbnb/lottie/animation/content/MergePathsContent;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L38d834.  v0:= 0I;
  #L38d836.  v1:= v3.`com.airbnb.lottie.animation.content.MergePathsContent.e` @type ^`java.util.List` @kind object;
  #L38d83a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L38d840.  v1:= temp;
  #L38d842.  if v0 >= v1 then goto L38d86e;
  #L38d846.  v1:= v3.`com.airbnb.lottie.animation.content.MergePathsContent.c` @type ^`android.graphics.Path` @kind object;
  #L38d84a.  v2:= v3.`com.airbnb.lottie.animation.content.MergePathsContent.e` @type ^`java.util.List` @kind object;
  #L38d84e.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38d854.  v2:= temp @kind object;
  #L38d856.  v2:= (`com.airbnb.lottie.animation.content.b`) v2 @kind object;
  #L38d85a.  call temp:= `getPath`(v2) @signature `Lcom/airbnb/lottie/animation/content/b;.getPath:()Landroid/graphics/Path;` @kind interface;
  #L38d860.  v2:= temp @kind object;
  #L38d862.  call `addPath`(v1, v2) @signature `Landroid/graphics/Path;.addPath:(Landroid/graphics/Path;)V` @kind virtual;
  #L38d868.  v0:= v0 + 1;
  #L38d86c.  goto L38d836;
  #L38d86e.  return @kind void;
}
procedure `void` `b`(`com.airbnb.lottie.animation.content.MergePathsContent` v7 @kind this, `android.graphics.Path$Op` v8 @kind object) @signature `Lcom/airbnb/lottie/animation/content/MergePathsContent;.b:(Landroid/graphics/Path$Op;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L38d880.  v0:= v7.`com.airbnb.lottie.animation.content.MergePathsContent.b` @type ^`android.graphics.Path` @kind object;
  #L38d884.  call `reset`(v0) @signature `Landroid/graphics/Path;.reset:()V` @kind virtual;
  #L38d88a.  v0:= v7.`com.airbnb.lottie.animation.content.MergePathsContent.a` @type ^`android.graphics.Path` @kind object;
  #L38d88e.  call `reset`(v0) @signature `Landroid/graphics/Path;.reset:()V` @kind virtual;
  #L38d894.  v0:= v7.`com.airbnb.lottie.animation.content.MergePathsContent.e` @type ^`java.util.List` @kind object;
  #L38d898.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L38d89e.  v0:= temp;
  #L38d8a0.  v1:= 1I;
  #L38d8a2.  v0:= v0 - v1 @kind int;
  #L38d8a4.  if v0 < v1 then goto L38d924;
  #L38d8a8.  v2:= v7.`com.airbnb.lottie.animation.content.MergePathsContent.e` @type ^`java.util.List` @kind object;
  #L38d8ac.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38d8b2.  v2:= temp @kind object;
  #L38d8b4.  v2:= (`com.airbnb.lottie.animation.content.b`) v2 @kind object;
  #L38d8b8.  v3:= instanceof @variable v2 @type ^`com.airbnb.lottie.animation.content.ContentGroup` @kind boolean;
  #L38d8bc.  if v3 == 0 then goto L38d90c;
  #L38d8c0.  v2:= (`com.airbnb.lottie.animation.content.ContentGroup`) v2 @kind object;
  #L38d8c4.  call temp:= `c`(v2) @signature `Lcom/airbnb/lottie/animation/content/ContentGroup;.c:()Ljava/util/List;` @kind virtual;
  #L38d8ca.  v3:= temp @kind object;
  #L38d8cc.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L38d8d2.  v4:= temp;
  #L38d8d4.  v4:= v4 - v1 @kind int;
  #L38d8d6.  if v4 < 0 then goto L38d91e;
  #L38d8da.  call temp:= `get`(v3, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38d8e0.  v5:= temp @kind object;
  #L38d8e2.  v5:= (`com.airbnb.lottie.animation.content.b`) v5 @kind object;
  #L38d8e6.  call temp:= `getPath`(v5) @signature `Lcom/airbnb/lottie/animation/content/b;.getPath:()Landroid/graphics/Path;` @kind interface;
  #L38d8ec.  v5:= temp @kind object;
  #L38d8ee.  call temp:= `d`(v2) @signature `Lcom/airbnb/lottie/animation/content/ContentGroup;.d:()Landroid/graphics/Matrix;` @kind virtual;
  #L38d8f4.  v6:= temp @kind object;
  #L38d8f6.  call `transform`(v5, v6) @signature `Landroid/graphics/Path;.transform:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L38d8fc.  v6:= v7.`com.airbnb.lottie.animation.content.MergePathsContent.b` @type ^`android.graphics.Path` @kind object;
  #L38d900.  call `addPath`(v6, v5) @signature `Landroid/graphics/Path;.addPath:(Landroid/graphics/Path;)V` @kind virtual;
  #L38d906.  v4:= v4 + -1;
  #L38d90a.  goto L38d8d6;
  #L38d90c.  v3:= v7.`com.airbnb.lottie.animation.content.MergePathsContent.b` @type ^`android.graphics.Path` @kind object;
  #L38d910.  call temp:= `getPath`(v2) @signature `Lcom/airbnb/lottie/animation/content/b;.getPath:()Landroid/graphics/Path;` @kind interface;
  #L38d916.  v2:= temp @kind object;
  #L38d918.  call `addPath`(v3, v2) @signature `Landroid/graphics/Path;.addPath:(Landroid/graphics/Path;)V` @kind virtual;
  #L38d91e.  v0:= v0 + -1;
  #L38d922.  goto L38d8a4;
  #L38d924.  v0:= v7.`com.airbnb.lottie.animation.content.MergePathsContent.e` @type ^`java.util.List` @kind object;
  #L38d928.  v1:= 0I;
  #L38d92a.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38d930.  v0:= temp @kind object;
  #L38d932.  v0:= (`com.airbnb.lottie.animation.content.b`) v0 @kind object;
  #L38d936.  v2:= instanceof @variable v0 @type ^`com.airbnb.lottie.animation.content.ContentGroup` @kind boolean;
  #L38d93a.  if v2 == 0 then goto L38d988;
  #L38d93e.  v0:= (`com.airbnb.lottie.animation.content.ContentGroup`) v0 @kind object;
  #L38d942.  call temp:= `c`(v0) @signature `Lcom/airbnb/lottie/animation/content/ContentGroup;.c:()Ljava/util/List;` @kind virtual;
  #L38d948.  v2:= temp @kind object;
  #L38d94a.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L38d950.  v3:= temp;
  #L38d952.  if v1 >= v3 then goto L38d99a;
  #L38d956.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38d95c.  v3:= temp @kind object;
  #L38d95e.  v3:= (`com.airbnb.lottie.animation.content.b`) v3 @kind object;
  #L38d962.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/animation/content/b;.getPath:()Landroid/graphics/Path;` @kind interface;
  #L38d968.  v3:= temp @kind object;
  #L38d96a.  call temp:= `d`(v0) @signature `Lcom/airbnb/lottie/animation/content/ContentGroup;.d:()Landroid/graphics/Matrix;` @kind virtual;
  #L38d970.  v4:= temp @kind object;
  #L38d972.  call `transform`(v3, v4) @signature `Landroid/graphics/Path;.transform:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L38d978.  v4:= v7.`com.airbnb.lottie.animation.content.MergePathsContent.a` @type ^`android.graphics.Path` @kind object;
  #L38d97c.  call `addPath`(v4, v3) @signature `Landroid/graphics/Path;.addPath:(Landroid/graphics/Path;)V` @kind virtual;
  #L38d982.  v1:= v1 + 1;
  #L38d986.  goto L38d94a;
  #L38d988.  v1:= v7.`com.airbnb.lottie.animation.content.MergePathsContent.a` @type ^`android.graphics.Path` @kind object;
  #L38d98c.  call temp:= `getPath`(v0) @signature `Lcom/airbnb/lottie/animation/content/b;.getPath:()Landroid/graphics/Path;` @kind interface;
  #L38d992.  v0:= temp @kind object;
  #L38d994.  call `set`(v1, v0) @signature `Landroid/graphics/Path;.set:(Landroid/graphics/Path;)V` @kind virtual;
  #L38d99a.  v0:= v7.`com.airbnb.lottie.animation.content.MergePathsContent.c` @type ^`android.graphics.Path` @kind object;
  #L38d99e.  v1:= v7.`com.airbnb.lottie.animation.content.MergePathsContent.a` @type ^`android.graphics.Path` @kind object;
  #L38d9a2.  v2:= v7.`com.airbnb.lottie.animation.content.MergePathsContent.b` @type ^`android.graphics.Path` @kind object;
  #L38d9a6.  call temp:= `op`(v0, v1, v2, v8) @signature `Landroid/graphics/Path;.op:(Landroid/graphics/Path;Landroid/graphics/Path;Landroid/graphics/Path$Op;)Z` @kind virtual;
  #L38d9ac.  return @kind void;
}
procedure `void` `absorbContent`(`com.airbnb.lottie.animation.content.MergePathsContent` v2 @kind this, `java.util.ListIterator` v3 @kind object) @signature `Lcom/airbnb/lottie/animation/content/MergePathsContent;.absorbContent:(Ljava/util/ListIterator;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38d7d0.  call temp:= `hasPrevious`(v3) @signature `Ljava/util/ListIterator;.hasPrevious:()Z` @kind interface;
  #L38d7d6.  v0:= temp;
  #L38d7d8.  if v0 == 0 then goto L38d7ea;
  #L38d7dc.  call temp:= `previous`(v3) @signature `Ljava/util/ListIterator;.previous:()Ljava/lang/Object;` @kind interface;
  #L38d7e2.  v0:= temp @kind object;
  #L38d7e4.  if v0 == v2 then goto L38d7ea;
  #L38d7e8.  goto L38d7d0;
  #L38d7ea.  call temp:= `hasPrevious`(v3) @signature `Ljava/util/ListIterator;.hasPrevious:()Z` @kind interface;
  #L38d7f0.  v0:= temp;
  #L38d7f2.  if v0 == 0 then goto L38d820;
  #L38d7f6.  call temp:= `previous`(v3) @signature `Ljava/util/ListIterator;.previous:()Ljava/lang/Object;` @kind interface;
  #L38d7fc.  v0:= temp @kind object;
  #L38d7fe.  v0:= (`com.airbnb.lottie.animation.content.Content`) v0 @kind object;
  #L38d802.  v1:= instanceof @variable v0 @type ^`com.airbnb.lottie.animation.content.b` @kind boolean;
  #L38d806.  if v1 == 0 then goto L38d7ea;
  #L38d80a.  v1:= v2.`com.airbnb.lottie.animation.content.MergePathsContent.e` @type ^`java.util.List` @kind object;
  #L38d80e.  v0:= (`com.airbnb.lottie.animation.content.b`) v0 @kind object;
  #L38d812.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38d818.  call `remove`(v3) @signature `Ljava/util/ListIterator;.remove:()V` @kind interface;
  #L38d81e.  goto L38d7ea;
  #L38d820.  return @kind void;
}
procedure `java.lang.String` `getName`(`com.airbnb.lottie.animation.content.MergePathsContent` v1 @kind this) @signature `Lcom/airbnb/lottie/animation/content/MergePathsContent;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38d73c.  v0:= v1.`com.airbnb.lottie.animation.content.MergePathsContent.d` @type ^`java.lang.String` @kind object;
  #L38d740.  return v0 @kind object;
}
procedure `android.graphics.Path` `getPath`(`com.airbnb.lottie.animation.content.MergePathsContent` v2 @kind this) @signature `Lcom/airbnb/lottie/animation/content/MergePathsContent;.getPath:()Landroid/graphics/Path;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38d694.  v0:= v2.`com.airbnb.lottie.animation.content.MergePathsContent.c` @type ^`android.graphics.Path` @kind object;
  #L38d698.  call `reset`(v0) @signature `Landroid/graphics/Path;.reset:()V` @kind virtual;
  #L38d69e.  v0:= v2.`com.airbnb.lottie.animation.content.MergePathsContent.f` @type ^`com.airbnb.lottie.model.content.MergePaths` @kind object;
  #L38d6a2.  call temp:= `isHidden`(v0) @signature `Lcom/airbnb/lottie/model/content/MergePaths;.isHidden:()Z` @kind virtual;
  #L38d6a8.  v0:= temp;
  #L38d6aa.  if v0 == 0 then goto L38d6b4;
  #L38d6ae.  v0:= v2.`com.airbnb.lottie.animation.content.MergePathsContent.c` @type ^`android.graphics.Path` @kind object;
  #L38d6b2.  return v0 @kind object;
  #L38d6b4.  v0:= `@@com.airbnb.lottie.animation.content.MergePathsContent$a.a` @type ^`int`[] @kind object;
  #L38d6b8.  v1:= v2.`com.airbnb.lottie.animation.content.MergePathsContent.f` @type ^`com.airbnb.lottie.model.content.MergePaths` @kind object;
  #L38d6bc.  call temp:= `getMode`(v1) @signature `Lcom/airbnb/lottie/model/content/MergePaths;.getMode:()Lcom/airbnb/lottie/model/content/MergePaths$MergePathsMode;` @kind virtual;
  #L38d6c2.  v1:= temp @kind object;
  #L38d6c4.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L38d6ca.  v1:= temp;
  #L38d6cc.  v0:= v0[v1];
  #L38d6d0.  v1:= 1I;
  #L38d6d2.  if v0 == v1 then goto L38d720;
  #L38d6d6.  v1:= 2I;
  #L38d6d8.  if v0 == v1 then goto L38d714;
  #L38d6dc.  v1:= 3I;
  #L38d6de.  if v0 == v1 then goto L38d708;
  #L38d6e2.  v1:= 4I;
  #L38d6e4.  if v0 == v1 then goto L38d6fc;
  #L38d6e8.  v1:= 5I;
  #L38d6ea.  if v0 == v1 then goto L38d6f0;
  #L38d6ee.  goto L38d726;
  #L38d6f0.  v0:= `@@android.graphics.Path$Op.XOR` @type ^`android.graphics.Path$Op` @kind object;
  #L38d6f4.  call `b`(v2, v0) @signature `Lcom/airbnb/lottie/animation/content/MergePathsContent;.b:(Landroid/graphics/Path$Op;)V` @kind direct;
  #L38d6fa.  goto L38d726;
  #L38d6fc.  v0:= `@@android.graphics.Path$Op.INTERSECT` @type ^`android.graphics.Path$Op` @kind object;
  #L38d700.  call `b`(v2, v0) @signature `Lcom/airbnb/lottie/animation/content/MergePathsContent;.b:(Landroid/graphics/Path$Op;)V` @kind direct;
  #L38d706.  goto L38d726;
  #L38d708.  v0:= `@@android.graphics.Path$Op.REVERSE_DIFFERENCE` @type ^`android.graphics.Path$Op` @kind object;
  #L38d70c.  call `b`(v2, v0) @signature `Lcom/airbnb/lottie/animation/content/MergePathsContent;.b:(Landroid/graphics/Path$Op;)V` @kind direct;
  #L38d712.  goto L38d726;
  #L38d714.  v0:= `@@android.graphics.Path$Op.UNION` @type ^`android.graphics.Path$Op` @kind object;
  #L38d718.  call `b`(v2, v0) @signature `Lcom/airbnb/lottie/animation/content/MergePathsContent;.b:(Landroid/graphics/Path$Op;)V` @kind direct;
  #L38d71e.  goto L38d726;
  #L38d720.  call `a`(v2) @signature `Lcom/airbnb/lottie/animation/content/MergePathsContent;.a:()V` @kind direct;
  #L38d726.  v0:= v2.`com.airbnb.lottie.animation.content.MergePathsContent.c` @type ^`android.graphics.Path` @kind object;
  #L38d72a.  return v0 @kind object;
}
procedure `void` `setContents`(`com.airbnb.lottie.animation.content.MergePathsContent` v2 @kind this, `java.util.List` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lcom/airbnb/lottie/animation/content/MergePathsContent;.setContents:(Ljava/util/List;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38d9c0.  v0:= 0I;
  #L38d9c2.  v1:= v2.`com.airbnb.lottie.animation.content.MergePathsContent.e` @type ^`java.util.List` @kind object;
  #L38d9c6.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L38d9cc.  v1:= temp;
  #L38d9ce.  if v0 >= v1 then goto L38d9ee;
  #L38d9d2.  v1:= v2.`com.airbnb.lottie.animation.content.MergePathsContent.e` @type ^`java.util.List` @kind object;
  #L38d9d6.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38d9dc.  v1:= temp @kind object;
  #L38d9de.  v1:= (`com.airbnb.lottie.animation.content.b`) v1 @kind object;
  #L38d9e2.  call `setContents`(v1, v3, v4) @signature `Lcom/airbnb/lottie/animation/content/Content;.setContents:(Ljava/util/List;Ljava/util/List;)V` @kind interface;
  #L38d9e8.  v0:= v0 + 1;
  #L38d9ec.  goto L38d9c2;
  #L38d9ee.  return @kind void;
}
