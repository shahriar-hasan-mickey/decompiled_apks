record `com.airbnb.lottie.LottieTask$b` @kind class @AccessFlag  extends `java.util.concurrent.FutureTask` @kind class {
  `com.airbnb.lottie.LottieTask` `com.airbnb.lottie.LottieTask$b.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.airbnb.lottie.LottieTask$b` v0 @kind this, `com.airbnb.lottie.LottieTask` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object) @signature `Lcom/airbnb/lottie/LottieTask$b;.<init>:(Lcom/airbnb/lottie/LottieTask;Ljava/util/concurrent/Callable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L389a04.  v0.`com.airbnb.lottie.LottieTask$b.a` @type ^`com.airbnb.lottie.LottieTask` := v1 @kind object;
  #L389a08.  call `<init>`(v0, v2) @signature `Ljava/util/concurrent/FutureTask;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L389a0e.  return @kind void;
}
procedure `void` `done`(`com.airbnb.lottie.LottieTask$b` v3 @kind this) @signature `Lcom/airbnb/lottie/LottieTask$b;.done:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L389a20.  call temp:= `isCancelled`(v3) @signature `Ljava/util/concurrent/FutureTask;.isCancelled:()Z` @kind virtual;
  #L389a26.  v0:= temp;
  #L389a28.  if v0 == 0 then goto L389a2e;
  #L389a2c.  return @kind void;
  #L389a2e.  v0:= v3.`com.airbnb.lottie.LottieTask$b.a` @type ^`com.airbnb.lottie.LottieTask` @kind object;
  #L389a32.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/FutureTask;.get:()Ljava/lang/Object;` @kind virtual;
  #L389a38.  v1:= temp @kind object;
  #L389a3a.  v1:= (`com.airbnb.lottie.LottieResult`) v1 @kind object;
  #L389a3e.  call `d`(v0, v1) @signature `Lcom/airbnb/lottie/LottieTask;.d:(Lcom/airbnb/lottie/LottieTask;Lcom/airbnb/lottie/LottieResult;)V` @kind static;
  #L389a44.  goto L389a60;
  #L389a46.  v0:= Exception @type ^`java.util.concurrent.ExecutionException` @kind object;
  #L389a48.  goto L389a4c;
  #L389a4a.  v0:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L389a4c.  v1:= v3.`com.airbnb.lottie.LottieTask$b.a` @type ^`com.airbnb.lottie.LottieTask` @kind object;
  #L389a50.  v2:= new `com.airbnb.lottie.LottieResult`;
  #L389a54.  call `<init>`(v2, v0) @signature `Lcom/airbnb/lottie/LottieResult;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L389a5a.  call `d`(v1, v2) @signature `Lcom/airbnb/lottie/LottieTask;.d:(Lcom/airbnb/lottie/LottieTask;Lcom/airbnb/lottie/LottieResult;)V` @kind static;
  #L389a60.  return @kind void;
  catch `java.lang.InterruptedException` @[L389a2e..L389a44] goto L389a4a;
  catch `java.util.concurrent.ExecutionException` @[L389a2e..L389a44] goto L389a46;
}
