record `com.airbnb.lottie.parser.GradientColorParser` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.parser.u` @kind interface {
  `int` `com.airbnb.lottie.parser.GradientColorParser.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.airbnb.lottie.parser.GradientColorParser` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/lottie/parser/GradientColorParser;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L399c90.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L399c96.  v0.`com.airbnb.lottie.parser.GradientColorParser.a` @type ^`int` := v1;
  #L399c9a.  return @kind void;
}
procedure `void` `a`(`com.airbnb.lottie.parser.GradientColorParser` v7 @kind this, `com.airbnb.lottie.model.content.GradientColor` v8 @kind object, `java.util.List` v9 @kind object) @signature `Lcom/airbnb/lottie/parser/GradientColorParser;.a:(Lcom/airbnb/lottie/model/content/GradientColor;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L399cac.  v0:= v7.`com.airbnb.lottie.parser.GradientColorParser.a` @type ^`int`;
  #L399cb0.  v0:= v0 * 4;
  #L399cb4.  call temp:= `size`(v9) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L399cba.  v1:= temp;
  #L399cbc.  if v1 > v0 then goto L399cc2;
  #L399cc0.  return @kind void;
  #L399cc2.  call temp:= `size`(v9) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L399cc8.  v1:= temp;
  #L399cca.  v1:= v1 - v0 @kind int;
  #L399ccc.  v1:= v1 / 2;
  #L399cd0.  v2:= new `double`[v1];
  #L399cd4.  v1:= new `double`[v1];
  #L399cd8.  v3:= 0I;
  #L399cda.  v4:= 0I;
  #L399cdc.  call temp:= `size`(v9) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L399ce2.  v5:= temp;
  #L399ce4.  if v0 >= v5 then goto L399d30;
  #L399ce8.  v5:= v0 %% 2;
  #L399cec.  if v5 != 0 then goto L399d0c;
  #L399cf0.  call temp:= `get`(v9, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L399cf6.  v5:= temp @kind object;
  #L399cf8.  v5:= (`java.lang.Float`) v5 @kind object;
  #L399cfc.  call temp:= `floatValue`(v5) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L399d02.  v5:= temp;
  #L399d04.  v5:= (`double`) v5 @kind f2d;
  #L399d06.  v2[v4]:= v5 @kind wide;
  #L399d0a.  goto L399d2a;
  #L399d0c.  call temp:= `get`(v9, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L399d12.  v5:= temp @kind object;
  #L399d14.  v5:= (`java.lang.Float`) v5 @kind object;
  #L399d18.  call temp:= `floatValue`(v5) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L399d1e.  v5:= temp;
  #L399d20.  v5:= (`double`) v5 @kind f2d;
  #L399d22.  v1[v4]:= v5 @kind wide;
  #L399d26.  v4:= v4 + 1;
  #L399d2a.  v0:= v0 + 1;
  #L399d2e.  goto L399cdc;
  #L399d30.  call temp:= `getSize`(v8) @signature `Lcom/airbnb/lottie/model/content/GradientColor;.getSize:()I` @kind virtual;
  #L399d36.  v9:= temp;
  #L399d38.  if v3 >= v9 then goto L399d90;
  #L399d3c.  call temp:= `getColors`(v8) @signature `Lcom/airbnb/lottie/model/content/GradientColor;.getColors:()[I` @kind virtual;
  #L399d42.  v9:= temp @kind object;
  #L399d44.  v9:= v9[v3];
  #L399d48.  call temp:= `getPositions`(v8) @signature `Lcom/airbnb/lottie/model/content/GradientColor;.getPositions:()[F` @kind virtual;
  #L399d4e.  v0:= temp @kind object;
  #L399d50.  v0:= v0[v3];
  #L399d54.  v4:= (`double`) v0 @kind f2d;
  #L399d56.  call temp:= `b`(v7, v4, v2, v1) @signature `Lcom/airbnb/lottie/parser/GradientColorParser;.b:(D[D[D)I` @kind direct;
  #L399d5c.  v0:= temp;
  #L399d5e.  call temp:= `red`(v9) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L399d64.  v4:= temp;
  #L399d66.  call temp:= `green`(v9) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L399d6c.  v5:= temp;
  #L399d6e.  call temp:= `blue`(v9) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L399d74.  v9:= temp;
  #L399d76.  call temp:= `argb`(v0, v4, v5, v9) @signature `Landroid/graphics/Color;.argb:(IIII)I` @kind static;
  #L399d7c.  v9:= temp;
  #L399d7e.  call temp:= `getColors`(v8) @signature `Lcom/airbnb/lottie/model/content/GradientColor;.getColors:()[I` @kind virtual;
  #L399d84.  v0:= temp @kind object;
  #L399d86.  v0[v3]:= v9;
  #L399d8a.  v3:= v3 + 1;
  #L399d8e.  goto L399d30;
  #L399d90.  return @kind void;
}
procedure `int` `b`(`com.airbnb.lottie.parser.GradientColorParser` v19 @kind this, `double` v20 , `double`[] v22 @kind object, `double`[] v23 @kind object) @signature `Lcom/airbnb/lottie/parser/GradientColorParser;.b:(D[D[D)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L399bec.  v0:= v22 @kind object;
  #L399bf0.  v1:= v23 @kind object;
  #L399bf4.  v2:= 1I;
  #L399bf6.  v3:= 1I;
  #L399bf8.  v4:= length @variable v0;
  #L399bfa.  v5:= 255.0D;
  #L399c04.  if v3 >= v4 then goto L399c58;
  #L399c08.  v4:= v3 + -1;
  #L399c0c.  v7:= v0[v4] @kind wide;
  #L399c10.  v9:= v0[v3] @kind wide;
  #L399c14.  v11:= v0[v3] @kind wide;
  #L399c18.  v13:= dcmpl(v11, v20);
  #L399c1c.  if v13 < 0 then goto L399c52;
  #L399c20.  v11:= v20 - v7 @kind double;
  #L399c24.  v9:= v9 - v7 @kind double;
  #L399c26.  v13:= v11 / v9 @kind double;
  #L399c2a.  v15:= 0L;
  #L399c2e.  v17:= 1.0D;
  #L399c32.  call temp:= `clamp`(v13, v15, v17) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.clamp:(DDD)D` @kind static;
  #L399c38.  v11:= temp @kind wide;
  #L399c3a.  v7:= v1[v4] @kind wide;
  #L399c3e.  v9:= v1[v3] @kind wide;
  #L399c42.  call temp:= `lerp`(v7, v9, v11) @signature `Lcom/airbnb/lottie/utils/MiscUtils;.lerp:(DDD)D` @kind static;
  #L399c48.  v0:= temp @kind wide;
  #L399c4a.  v0:= v0 * v5 @kind double;
  #L399c4e.  v0:= (`int`) v0 @kind d2i;
  #L399c50.  return v0;
  #L399c52.  v3:= v3 + 1;
  #L399c56.  goto L399bf8;
  #L399c58.  v0:= length @variable v1;
  #L399c5a.  v0:= v0 - v2 @kind int;
  #L399c5c.  v0:= v1[v0] @kind wide;
  #L399c60.  goto L399c4a;
}
procedure `com.airbnb.lottie.model.content.GradientColor` `parse`(`com.airbnb.lottie.parser.GradientColorParser` v12 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v13 @kind object, `float` v14 ) @signature `Lcom/airbnb/lottie/parser/GradientColorParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Lcom/airbnb/lottie/model/content/GradientColor;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L399ac4.  v14:= new `java.util.ArrayList`;
  #L399ac8.  call `<init>`(v14) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L399ace.  call temp:= `peek`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L399ad4.  v0:= temp @kind object;
  #L399ad6.  v1:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L399ada.  v2:= 1I;
  #L399adc.  v3:= 0I;
  #L399ade.  if v0 != v1 then goto L399ae6;
  #L399ae2.  v0:= 1I;
  #L399ae4.  goto L399ae8;
  #L399ae6.  v0:= 0I;
  #L399ae8.  if v0 == 0 then goto L399af2;
  #L399aec.  call `beginArray`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L399af2.  call temp:= `hasNext`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L399af8.  v1:= temp;
  #L399afa.  if v1 == 0 then goto L399b18;
  #L399afe.  call temp:= `nextDouble`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L399b04.  v4:= temp @kind wide;
  #L399b06.  v1:= (`float`) v4 @kind d2f;
  #L399b08.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L399b0e.  v1:= temp @kind object;
  #L399b10.  call temp:= `add`(v14, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L399b16.  goto L399af2;
  #L399b18.  if v0 == 0 then goto L399b22;
  #L399b1c.  call `endArray`(v13) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L399b22.  v13:= v12.`com.airbnb.lottie.parser.GradientColorParser.a` @type ^`int`;
  #L399b26.  v0:= -1I;
  #L399b28.  if v13 != v0 then goto L399b3c;
  #L399b2c.  call temp:= `size`(v14) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L399b32.  v13:= temp;
  #L399b34.  v13:= v13 / 4;
  #L399b38.  v12.`com.airbnb.lottie.parser.GradientColorParser.a` @type ^`int` := v13;
  #L399b3c.  v13:= v12.`com.airbnb.lottie.parser.GradientColorParser.a` @type ^`int`;
  #L399b40.  v0:= new `float`[v13];
  #L399b44.  v13:= new `int`[v13];
  #L399b48.  v1:= 0I;
  #L399b4a.  v4:= 0I;
  #L399b4c.  v5:= v12.`com.airbnb.lottie.parser.GradientColorParser.a` @type ^`int`;
  #L399b50.  v5:= v5 * 4;
  #L399b54.  if v3 >= v5 then goto L399bca;
  #L399b58.  v5:= v3 / 4;
  #L399b5c.  call temp:= `get`(v14, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L399b62.  v6:= temp @kind object;
  #L399b64.  v6:= (`java.lang.Float`) v6 @kind object;
  #L399b68.  call temp:= `floatValue`(v6) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L399b6e.  v6:= temp;
  #L399b70.  v6:= (`double`) v6 @kind f2d;
  #L399b72.  v8:= v3 %% 4;
  #L399b76.  if v8 == 0 then goto L399bbe;
  #L399b7a.  v9:= 255.0D;
  #L399b84.  if v8 == v2 then goto L399bb6;
  #L399b88.  v11:= 2I;
  #L399b8a.  if v8 == v11 then goto L399bae;
  #L399b8e.  v11:= 3I;
  #L399b90.  if v8 == v11 then goto L399b96;
  #L399b94.  goto L399bc4;
  #L399b96.  v6:= v6 * v9 @kind double;
  #L399b9a.  v6:= (`int`) v6 @kind d2i;
  #L399b9c.  v7:= 255I;
  #L399ba0.  call temp:= `argb`(v7, v1, v4, v6) @signature `Landroid/graphics/Color;.argb:(IIII)I` @kind static;
  #L399ba6.  v6:= temp;
  #L399ba8.  v13[v5]:= v6;
  #L399bac.  goto L399bc4;
  #L399bae.  v6:= v6 * v9 @kind double;
  #L399bb2.  v4:= (`int`) v6 @kind d2i;
  #L399bb4.  goto L399bc4;
  #L399bb6.  v6:= v6 * v9 @kind double;
  #L399bba.  v1:= (`int`) v6 @kind d2i;
  #L399bbc.  goto L399bc4;
  #L399bbe.  v6:= (`float`) v6 @kind d2f;
  #L399bc0.  v0[v5]:= v6;
  #L399bc4.  v3:= v3 + 1;
  #L399bc8.  goto L399b4c;
  #L399bca.  v1:= new `com.airbnb.lottie.model.content.GradientColor`;
  #L399bce.  call `<init>`(v1, v0, v13) @signature `Lcom/airbnb/lottie/model/content/GradientColor;.<init>:([F[I)V` @kind direct;
  #L399bd4.  call `a`(v12, v1, v14) @signature `Lcom/airbnb/lottie/parser/GradientColorParser;.a:(Lcom/airbnb/lottie/model/content/GradientColor;Ljava/util/List;)V` @kind direct;
  #L399bda.  return v1 @kind object;
}
procedure `java.lang.Object` `parse`(`com.airbnb.lottie.parser.GradientColorParser` v0 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/parser/GradientColorParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L399c74.  call temp:= `parse`(v0, v1, v2) @signature `Lcom/airbnb/lottie/parser/GradientColorParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Lcom/airbnb/lottie/model/content/GradientColor;` @kind virtual;
  #L399c7a.  v1:= temp @kind object;
  #L399c7c.  return v1 @kind object;
}
