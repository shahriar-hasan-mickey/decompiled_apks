record `com.airbnb.lottie.parser.o` @kind class @AccessFlag  {
}
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.o.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/o;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L39c90c.  v0:= "nm" @kind object;
  #L39c910.  v1:= "c" @kind object;
  #L39c914.  v2:= "o" @kind object;
  #L39c918.  v3:= "tr" @kind object;
  #L39c91c.  v4:= "hd" @kind object;
  #L39c920.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4];
  #L39c926.  v0:= temp @kind object;
  #L39c928.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L39c92e.  v0:= temp @kind object;
  #L39c930.  `@@com.airbnb.lottie.parser.o.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L39c934.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.Repeater` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v8 @kind object, `com.airbnb.lottie.LottieComposition` v9 @kind object) @signature `Lcom/airbnb/lottie/parser/o;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/content/Repeater;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L39c870.  v0:= 0I;
  #L39c872.  v1:= 0I;
  #L39c874.  v3:= v1 @kind object;
  #L39c876.  v4:= v3 @kind object;
  #L39c878.  v5:= v4 @kind object;
  #L39c87a.  v6:= v5 @kind object;
  #L39c87c.  v7:= 0I;
  #L39c87e.  call temp:= `hasNext`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L39c884.  v1:= temp;
  #L39c886.  if v1 == 0 then goto L39c8ec;
  #L39c88a.  v1:= `@@com.airbnb.lottie.parser.o.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L39c88e.  call temp:= `selectName`(v8, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L39c894.  v1:= temp;
  #L39c896.  if v1 == 0 then goto L39c8e2;
  #L39c89a.  v2:= 1I;
  #L39c89c.  if v1 == v2 then goto L39c8d8;
  #L39c8a0.  v2:= 2I;
  #L39c8a2.  if v1 == v2 then goto L39c8ce;
  #L39c8a6.  v2:= 3I;
  #L39c8a8.  if v1 == v2 then goto L39c8c4;
  #L39c8ac.  v2:= 4I;
  #L39c8ae.  if v1 == v2 then goto L39c8ba;
  #L39c8b2.  call `skipValue`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L39c8b8.  goto L39c87e;
  #L39c8ba.  call temp:= `nextBoolean`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextBoolean:()Z` @kind virtual;
  #L39c8c0.  v7:= temp;
  #L39c8c2.  goto L39c87e;
  #L39c8c4.  call temp:= `parse`(v8, v9) @signature `Lcom/airbnb/lottie/parser/AnimatableTransformParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/animatable/AnimatableTransform;` @kind static;
  #L39c8ca.  v6:= temp @kind object;
  #L39c8cc.  goto L39c87e;
  #L39c8ce.  call temp:= `parseFloat`(v8, v9, v0) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.parseFloat:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;Z)Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;` @kind static;
  #L39c8d4.  v5:= temp @kind object;
  #L39c8d6.  goto L39c87e;
  #L39c8d8.  call temp:= `parseFloat`(v8, v9, v0) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.parseFloat:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;Z)Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;` @kind static;
  #L39c8de.  v4:= temp @kind object;
  #L39c8e0.  goto L39c87e;
  #L39c8e2.  call temp:= `nextString`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L39c8e8.  v3:= temp @kind object;
  #L39c8ea.  goto L39c87e;
  #L39c8ec.  v8:= new `com.airbnb.lottie.model.content.Repeater`;
  #L39c8f0.  v2:= v8 @kind object;
  #L39c8f2.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lcom/airbnb/lottie/model/content/Repeater;.<init>:(Ljava/lang/String;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/animatable/AnimatableTransform;Z)V` @kind direct;
  #L39c8f8.  return v8 @kind object;
}
