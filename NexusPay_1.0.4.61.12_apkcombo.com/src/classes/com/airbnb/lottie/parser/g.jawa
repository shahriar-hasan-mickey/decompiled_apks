record `com.airbnb.lottie.parser.g` @kind class @AccessFlag  {
}
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.g.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L39a74c.  v0:= "x" @kind object;
  #L39a750.  v1:= "y" @kind object;
  #L39a754.  temp:= new `java.lang.String`[v0, v1];
  #L39a75a.  v0:= temp @kind object;
  #L39a75c.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L39a762.  v0:= temp @kind object;
  #L39a764.  `@@com.airbnb.lottie.parser.g.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L39a768.  return @kind void;
}
procedure `android.graphics.PointF` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v4 @kind object, `float` v5 ) @signature `Lcom/airbnb/lottie/parser/g;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39a438.  call `beginArray`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L39a43e.  call temp:= `nextDouble`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L39a444.  v0:= temp @kind wide;
  #L39a446.  v0:= (`float`) v0 @kind d2f;
  #L39a448.  call temp:= `nextDouble`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L39a44e.  v1:= temp @kind wide;
  #L39a450.  v1:= (`float`) v1 @kind d2f;
  #L39a452.  call temp:= `peek`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39a458.  v2:= temp @kind object;
  #L39a45a.  v3:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.END_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39a45e.  if v2 == v3 then goto L39a46a;
  #L39a462.  call `skipValue`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L39a468.  goto L39a452;
  #L39a46a.  call `endArray`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L39a470.  v4:= new `android.graphics.PointF`;
  #L39a474.  v0:= v0 * v5 @kind float;
  #L39a478.  v1:= v1 * v5 @kind float;
  #L39a47c.  call `<init>`(v4, v0, v1) @signature `Landroid/graphics/PointF;.<init>:(FF)V` @kind direct;
  #L39a482.  return v4 @kind object;
}
procedure `android.graphics.PointF` `b`(`com.airbnb.lottie.parser.moshi.JsonReader` v3 @kind object, `float` v4 ) @signature `Lcom/airbnb/lottie/parser/g;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L39a494.  call temp:= `nextDouble`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L39a49a.  v0:= temp @kind wide;
  #L39a49c.  v0:= (`float`) v0 @kind d2f;
  #L39a49e.  call temp:= `nextDouble`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L39a4a4.  v1:= temp @kind wide;
  #L39a4a6.  v1:= (`float`) v1 @kind d2f;
  #L39a4a8.  call temp:= `hasNext`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L39a4ae.  v2:= temp;
  #L39a4b0.  if v2 == 0 then goto L39a4bc;
  #L39a4b4.  call `skipValue`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L39a4ba.  goto L39a4a8;
  #L39a4bc.  v3:= new `android.graphics.PointF`;
  #L39a4c0.  v0:= v0 * v4 @kind float;
  #L39a4c4.  v1:= v1 * v4 @kind float;
  #L39a4c8.  call `<init>`(v3, v0, v1) @signature `Landroid/graphics/PointF;.<init>:(FF)V` @kind direct;
  #L39a4ce.  return v3 @kind object;
}
procedure `android.graphics.PointF` `c`(`com.airbnb.lottie.parser.moshi.JsonReader` v4 @kind object, `float` v5 ) @signature `Lcom/airbnb/lottie/parser/g;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39a4e0.  call `beginObject`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginObject:()V` @kind virtual;
  #L39a4e6.  v0:= 0I;
  #L39a4e8.  v1:= 0I;
  #L39a4ea.  call temp:= `hasNext`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L39a4f0.  v2:= temp;
  #L39a4f2.  if v2 == 0 then goto L39a52e;
  #L39a4f6.  v2:= `@@com.airbnb.lottie.parser.g.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L39a4fa.  call temp:= `selectName`(v4, v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L39a500.  v2:= temp;
  #L39a502.  if v2 == 0 then goto L39a524;
  #L39a506.  v3:= 1I;
  #L39a508.  if v2 == v3 then goto L39a51a;
  #L39a50c.  call `skipName`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipName:()V` @kind virtual;
  #L39a512.  call `skipValue`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L39a518.  goto L39a4ea;
  #L39a51a.  call temp:= `g`(v4) @signature `Lcom/airbnb/lottie/parser/g;.g:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)F` @kind static;
  #L39a520.  v1:= temp;
  #L39a522.  goto L39a4ea;
  #L39a524.  call temp:= `g`(v4) @signature `Lcom/airbnb/lottie/parser/g;.g:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)F` @kind static;
  #L39a52a.  v0:= temp;
  #L39a52c.  goto L39a4ea;
  #L39a52e.  call `endObject`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endObject:()V` @kind virtual;
  #L39a534.  v4:= new `android.graphics.PointF`;
  #L39a538.  v0:= v0 * v5 @kind float;
  #L39a53c.  v1:= v1 * v5 @kind float;
  #L39a540.  call `<init>`(v4, v0, v1) @signature `Landroid/graphics/PointF;.<init>:(FF)V` @kind direct;
  #L39a546.  return v4 @kind object;
}
procedure `int` `d`(`com.airbnb.lottie.parser.moshi.JsonReader` v6 @kind object) @signature `Lcom/airbnb/lottie/parser/g;.d:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39a684.  call `beginArray`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L39a68a.  call temp:= `nextDouble`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L39a690.  v0:= temp @kind wide;
  #L39a692.  v2:= 255.0D;
  #L39a69c.  v0:= v0 * v2 @kind double;
  #L39a6a0.  v0:= (`int`) v0 @kind d2i;
  #L39a6a2.  call temp:= `nextDouble`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L39a6a8.  v4:= temp @kind wide;
  #L39a6aa.  v4:= v4 * v2 @kind double;
  #L39a6ae.  v1:= (`int`) v4 @kind d2i;
  #L39a6b0.  call temp:= `nextDouble`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L39a6b6.  v4:= temp @kind wide;
  #L39a6b8.  v4:= v4 * v2 @kind double;
  #L39a6bc.  v2:= (`int`) v4 @kind d2i;
  #L39a6be.  call temp:= `hasNext`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L39a6c4.  v3:= temp;
  #L39a6c6.  if v3 == 0 then goto L39a6d2;
  #L39a6ca.  call `skipValue`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L39a6d0.  goto L39a6be;
  #L39a6d2.  call `endArray`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L39a6d8.  v6:= 255I;
  #L39a6dc.  call temp:= `argb`(v6, v0, v1, v2) @signature `Landroid/graphics/Color;.argb:(IIII)I` @kind static;
  #L39a6e2.  v6:= temp;
  #L39a6e4.  return v6;
}
procedure `android.graphics.PointF` `e`(`com.airbnb.lottie.parser.moshi.JsonReader` v2 @kind object, `float` v3 ) @signature `Lcom/airbnb/lottie/parser/g;.e:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L39a558.  v0:= `@@com.airbnb.lottie.parser.g$a.a` @type ^`int`[] @kind object;
  #L39a55c.  call temp:= `peek`(v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39a562.  v1:= temp @kind object;
  #L39a564.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L39a56a.  v1:= temp;
  #L39a56c.  v0:= v0[v1];
  #L39a570.  v1:= 1I;
  #L39a572.  if v0 == v1 then goto L39a5cc;
  #L39a576.  v1:= 2I;
  #L39a578.  if v0 == v1 then goto L39a5c2;
  #L39a57c.  v1:= 3I;
  #L39a57e.  if v0 != v1 then goto L39a58c;
  #L39a582.  call temp:= `c`(v2, v3) @signature `Lcom/airbnb/lottie/parser/g;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @kind static;
  #L39a588.  v2:= temp @kind object;
  #L39a58a.  return v2 @kind object;
  #L39a58c.  v3:= new `java.lang.IllegalArgumentException`;
  #L39a590.  v0:= new `java.lang.StringBuilder`;
  #L39a594.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39a59a.  v1:= "Unknown point starts with " @kind object;
  #L39a59e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39a5a4.  call temp:= `peek`(v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39a5aa.  v2:= temp @kind object;
  #L39a5ac.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39a5b2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39a5b8.  v2:= temp @kind object;
  #L39a5ba.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39a5c0.  throw v3;
  #L39a5c2.  call temp:= `a`(v2, v3) @signature `Lcom/airbnb/lottie/parser/g;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @kind static;
  #L39a5c8.  v2:= temp @kind object;
  #L39a5ca.  return v2 @kind object;
  #L39a5cc.  call temp:= `b`(v2, v3) @signature `Lcom/airbnb/lottie/parser/g;.b:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @kind static;
  #L39a5d2.  v2:= temp @kind object;
  #L39a5d4.  return v2 @kind object;
}
procedure `java.util.List` `f`(`com.airbnb.lottie.parser.moshi.JsonReader` v3 @kind object, `float` v4 ) @signature `Lcom/airbnb/lottie/parser/g;.f:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L39a6f8.  v0:= new `java.util.ArrayList`;
  #L39a6fc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L39a702.  call `beginArray`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L39a708.  call temp:= `peek`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39a70e.  v1:= temp @kind object;
  #L39a710.  v2:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39a714.  if v1 != v2 then goto L39a734;
  #L39a718.  call `beginArray`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L39a71e.  call temp:= `e`(v3, v4) @signature `Lcom/airbnb/lottie/parser/g;.e:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @kind static;
  #L39a724.  v1:= temp @kind object;
  #L39a726.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39a72c.  call `endArray`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L39a732.  goto L39a708;
  #L39a734.  call `endArray`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L39a73a.  return v0 @kind object;
}
procedure `float` `g`(`com.airbnb.lottie.parser.moshi.JsonReader` v3 @kind object) @signature `Lcom/airbnb/lottie/parser/g;.g:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L39a5e8.  call temp:= `peek`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39a5ee.  v0:= temp @kind object;
  #L39a5f0.  v1:= `@@com.airbnb.lottie.parser.g$a.a` @type ^`int`[] @kind object;
  #L39a5f4.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L39a5fa.  v2:= temp;
  #L39a5fc.  v1:= v1[v2];
  #L39a600.  v2:= 1I;
  #L39a602.  if v1 == v2 then goto L39a666;
  #L39a606.  v2:= 2I;
  #L39a608.  if v1 != v2 then goto L39a638;
  #L39a60c.  call `beginArray`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L39a612.  call temp:= `nextDouble`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L39a618.  v0:= temp @kind wide;
  #L39a61a.  v0:= (`float`) v0 @kind d2f;
  #L39a61c.  call temp:= `hasNext`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L39a622.  v1:= temp;
  #L39a624.  if v1 == 0 then goto L39a630;
  #L39a628.  call `skipValue`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L39a62e.  goto L39a61c;
  #L39a630.  call `endArray`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L39a636.  return v0;
  #L39a638.  v3:= new `java.lang.IllegalArgumentException`;
  #L39a63c.  v1:= new `java.lang.StringBuilder`;
  #L39a640.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39a646.  v2:= "Unknown value for token of type " @kind object;
  #L39a64a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39a650.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39a656.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39a65c.  v0:= temp @kind object;
  #L39a65e.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39a664.  throw v3;
  #L39a666.  call temp:= `nextDouble`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L39a66c.  v0:= temp @kind wide;
  #L39a66e.  v3:= (`float`) v0 @kind d2f;
  #L39a670.  return v3;
}
