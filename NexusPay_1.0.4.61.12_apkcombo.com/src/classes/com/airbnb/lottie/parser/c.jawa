record `com.airbnb.lottie.parser.c` @kind class @AccessFlag  {
}
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.c.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.c.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39999c.  v0:= "ch" @kind object;
  #L3999a0.  v1:= "size" @kind object;
  #L3999a4.  v2:= "w" @kind object;
  #L3999a8.  v3:= "style" @kind object;
  #L3999ac.  v4:= "fFamily" @kind object;
  #L3999b0.  v5:= "data" @kind object;
  #L3999b4.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4, v5];
  #L3999ba.  v0:= temp @kind object;
  #L3999bc.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L3999c2.  v0:= temp @kind object;
  #L3999c4.  `@@com.airbnb.lottie.parser.c.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L3999c8.  v0:= "shapes" @kind object;
  #L3999cc.  temp:= new `java.lang.String`[v0];
  #L3999d2.  v0:= temp @kind object;
  #L3999d4.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L3999da.  v0:= temp @kind object;
  #L3999dc.  `@@com.airbnb.lottie.parser.c.b` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L3999e0.  return @kind void;
}
procedure `com.airbnb.lottie.model.FontCharacter` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v11 @kind object, `com.airbnb.lottie.LottieComposition` v12 @kind object) @signature `Lcom/airbnb/lottie/parser/c;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/FontCharacter;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L399864.  v1:= new `java.util.ArrayList`;
  #L399868.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L39986e.  call `beginObject`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginObject:()V` @kind virtual;
  #L399874.  v0:= 0I;
  #L399876.  v2:= 0L;
  #L39987a.  v4:= 0I;
  #L39987c.  v9:= v0 @kind object;
  #L39987e.  v10:= v9 @kind object;
  #L399880.  v5:= v2 @kind wide;
  #L399882.  v7:= v5 @kind wide;
  #L399884.  v2:= 0I;
  #L399886.  call temp:= `hasNext`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L39988c.  v0:= temp;
  #L39988e.  if v0 == 0 then goto L39996e;
  #L399892.  v0:= `@@com.airbnb.lottie.parser.c.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L399896.  call temp:= `selectName`(v11, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L39989c.  v0:= temp;
  #L39989e.  if v0 == 0 then goto L39995c;
  #L3998a2.  v3:= 1I;
  #L3998a4.  if v0 == v3 then goto L399952;
  #L3998a8.  v3:= 2I;
  #L3998aa.  if v0 == v3 then goto L399948;
  #L3998ae.  v3:= 3I;
  #L3998b0.  if v0 == v3 then goto L39993e;
  #L3998b4.  v3:= 4I;
  #L3998b6.  if v0 == v3 then goto L399934;
  #L3998ba.  v3:= 5I;
  #L3998bc.  if v0 == v3 then goto L3998ce;
  #L3998c0.  call `skipName`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipName:()V` @kind virtual;
  #L3998c6.  call `skipValue`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3998cc.  goto L399886;
  #L3998ce.  call `beginObject`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginObject:()V` @kind virtual;
  #L3998d4.  call temp:= `hasNext`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L3998da.  v0:= temp;
  #L3998dc.  if v0 == 0 then goto L39992c;
  #L3998e0.  v0:= `@@com.airbnb.lottie.parser.c.b` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L3998e4.  call temp:= `selectName`(v11, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L3998ea.  v0:= temp;
  #L3998ec.  if v0 == 0 then goto L3998fe;
  #L3998f0.  call `skipName`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipName:()V` @kind virtual;
  #L3998f6.  call `skipValue`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L3998fc.  goto L3998d4;
  #L3998fe.  call `beginArray`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L399904.  call temp:= `hasNext`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L39990a.  v0:= temp;
  #L39990c.  if v0 == 0 then goto L399924;
  #L399910.  call temp:= `a`(v11, v12) @signature `Lcom/airbnb/lottie/parser/b;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/content/ContentModel;` @kind static;
  #L399916.  v0:= temp @kind object;
  #L399918.  v0:= (`com.airbnb.lottie.model.content.ShapeGroup`) v0 @kind object;
  #L39991c.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L399922.  goto L399904;
  #L399924.  call `endArray`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L39992a.  goto L3998d4;
  #L39992c.  call `endObject`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endObject:()V` @kind virtual;
  #L399932.  goto L399886;
  #L399934.  call temp:= `nextString`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L39993a.  v10:= temp @kind object;
  #L39993c.  goto L399886;
  #L39993e.  call temp:= `nextString`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L399944.  v9:= temp @kind object;
  #L399946.  goto L399886;
  #L399948.  call temp:= `nextDouble`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L39994e.  v7:= temp @kind wide;
  #L399950.  goto L399886;
  #L399952.  call temp:= `nextDouble`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L399958.  v5:= temp @kind wide;
  #L39995a.  goto L399886;
  #L39995c.  call temp:= `nextString`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L399962.  v0:= temp @kind object;
  #L399964.  call temp:= `charAt`(v0, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L39996a.  v2:= temp;
  #L39996c.  goto L399886;
  #L39996e.  call `endObject`(v11) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endObject:()V` @kind virtual;
  #L399974.  v11:= new `com.airbnb.lottie.model.FontCharacter`;
  #L399978.  v0:= v11 @kind object;
  #L39997a.  v3:= v5 @kind wide;
  #L39997c.  v5:= v7 @kind wide;
  #L39997e.  v7:= v9 @kind object;
  #L399980.  v8:= v10 @kind object;
  #L399982.  call `<init>`(v0, v1, v2, v3, v5, v7, v8) @signature `Lcom/airbnb/lottie/model/FontCharacter;.<init>:(Ljava/util/List;CDDLjava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L399988.  return v11 @kind object;
}
