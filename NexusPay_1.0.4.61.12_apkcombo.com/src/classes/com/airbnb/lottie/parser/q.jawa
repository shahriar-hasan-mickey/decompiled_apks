record `com.airbnb.lottie.parser.q` @kind class @AccessFlag  {
}
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.q.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L39ce40.  v0:= "nm" @kind object;
  #L39ce44.  v1:= "hd" @kind object;
  #L39ce48.  v2:= "it" @kind object;
  #L39ce4c.  temp:= new `java.lang.String`[v0, v1, v2];
  #L39ce52.  v0:= temp @kind object;
  #L39ce54.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L39ce5a.  v0:= temp @kind object;
  #L39ce5c.  `@@com.airbnb.lottie.parser.q.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L39ce60.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.ShapeGroup` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v5 @kind object, `com.airbnb.lottie.LottieComposition` v6 @kind object) @signature `Lcom/airbnb/lottie/parser/q;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/content/ShapeGroup;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L39cda4.  v0:= new `java.util.ArrayList`;
  #L39cda8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L39cdae.  v1:= 0I;
  #L39cdb0.  v2:= 0I;
  #L39cdb2.  call temp:= `hasNext`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L39cdb8.  v3:= temp;
  #L39cdba.  if v3 == 0 then goto L39ce24;
  #L39cdbe.  v3:= `@@com.airbnb.lottie.parser.q.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L39cdc2.  call temp:= `selectName`(v5, v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L39cdc8.  v3:= temp;
  #L39cdca.  if v3 == 0 then goto L39ce1a;
  #L39cdce.  v4:= 1I;
  #L39cdd0.  if v3 == v4 then goto L39ce10;
  #L39cdd4.  v4:= 2I;
  #L39cdd6.  if v3 == v4 then goto L39cde2;
  #L39cdda.  call `skipValue`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L39cde0.  goto L39cdb2;
  #L39cde2.  call `beginArray`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L39cde8.  call temp:= `hasNext`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L39cdee.  v3:= temp;
  #L39cdf0.  if v3 == 0 then goto L39ce08;
  #L39cdf4.  call temp:= `a`(v5, v6) @signature `Lcom/airbnb/lottie/parser/b;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/content/ContentModel;` @kind static;
  #L39cdfa.  v3:= temp @kind object;
  #L39cdfc.  if v3 == 0 then goto L39cde8;
  #L39ce00.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39ce06.  goto L39cde8;
  #L39ce08.  call `endArray`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L39ce0e.  goto L39cdb2;
  #L39ce10.  call temp:= `nextBoolean`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextBoolean:()Z` @kind virtual;
  #L39ce16.  v2:= temp;
  #L39ce18.  goto L39cdb2;
  #L39ce1a.  call temp:= `nextString`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L39ce20.  v1:= temp @kind object;
  #L39ce22.  goto L39cdb2;
  #L39ce24.  v5:= new `com.airbnb.lottie.model.content.ShapeGroup`;
  #L39ce28.  call `<init>`(v5, v1, v0, v2) @signature `Lcom/airbnb/lottie/model/content/ShapeGroup;.<init>:(Ljava/lang/String;Ljava/util/List;Z)V` @kind direct;
  #L39ce2e.  return v5 @kind object;
}
