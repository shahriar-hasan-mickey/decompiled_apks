record `com.airbnb.lottie.parser.PointFParser` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.parser.u` @kind interface {
}
global `com.airbnb.lottie.parser.PointFParser` `@@com.airbnb.lottie.parser.PointFParser.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/PointFParser;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L39c610.  v0:= new `com.airbnb.lottie.parser.PointFParser`;
  #L39c614.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/parser/PointFParser;.<init>:()V` @kind direct;
  #L39c61a.  `@@com.airbnb.lottie.parser.PointFParser.INSTANCE` @type ^`com.airbnb.lottie.parser.PointFParser` := v0 @kind object;
  #L39c61e.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.parser.PointFParser` v0 @kind this) @signature `Lcom/airbnb/lottie/parser/PointFParser;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L39c630.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39c636.  return @kind void;
}
procedure `android.graphics.PointF` `parse`(`com.airbnb.lottie.parser.PointFParser` v4 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v5 @kind object, `float` v6 ) @signature `Lcom/airbnb/lottie/parser/PointFParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39c544.  call temp:= `peek`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39c54a.  v0:= temp @kind object;
  #L39c54c.  v1:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39c550.  if v0 != v1 then goto L39c55e;
  #L39c554.  call temp:= `e`(v5, v6) @signature `Lcom/airbnb/lottie/parser/g;.e:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @kind static;
  #L39c55a.  v5:= temp @kind object;
  #L39c55c.  return v5 @kind object;
  #L39c55e.  v1:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_OBJECT` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39c562.  if v0 != v1 then goto L39c570;
  #L39c566.  call temp:= `e`(v5, v6) @signature `Lcom/airbnb/lottie/parser/g;.e:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @kind static;
  #L39c56c.  v5:= temp @kind object;
  #L39c56e.  return v5 @kind object;
  #L39c570.  v1:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.NUMBER` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39c574.  if v0 != v1 then goto L39c5b4;
  #L39c578.  v0:= new `android.graphics.PointF`;
  #L39c57c.  call temp:= `nextDouble`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L39c582.  v1:= temp @kind wide;
  #L39c584.  v1:= (`float`) v1 @kind d2f;
  #L39c586.  v1:= v1 * v6 @kind float;
  #L39c58a.  call temp:= `nextDouble`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L39c590.  v2:= temp @kind wide;
  #L39c592.  v2:= (`float`) v2 @kind d2f;
  #L39c594.  v2:= v2 * v6 @kind float;
  #L39c598.  call `<init>`(v0, v1, v2) @signature `Landroid/graphics/PointF;.<init>:(FF)V` @kind direct;
  #L39c59e.  call temp:= `hasNext`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L39c5a4.  v6:= temp;
  #L39c5a6.  if v6 == 0 then goto L39c5b2;
  #L39c5aa.  call `skipValue`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L39c5b0.  goto L39c59e;
  #L39c5b2.  return v0 @kind object;
  #L39c5b4.  v5:= new `java.lang.IllegalArgumentException`;
  #L39c5b8.  v6:= new `java.lang.StringBuilder`;
  #L39c5bc.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39c5c2.  v1:= "Cannot convert json to point. Next token is " @kind object;
  #L39c5c6.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c5cc.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c5d2.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39c5d8.  v6:= temp @kind object;
  #L39c5da.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39c5e0.  throw v5;
}
procedure `java.lang.Object` `parse`(`com.airbnb.lottie.parser.PointFParser` v0 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/parser/PointFParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L39c5f4.  call temp:= `parse`(v0, v1, v2) @signature `Lcom/airbnb/lottie/parser/PointFParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Landroid/graphics/PointF;` @kind virtual;
  #L39c5fa.  v1:= temp @kind object;
  #L39c5fc.  return v1 @kind object;
}
