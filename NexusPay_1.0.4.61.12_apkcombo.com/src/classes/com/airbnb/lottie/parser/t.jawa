record `com.airbnb.lottie.parser.t` @kind class @AccessFlag  {
}
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.t.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/t;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39d308.  v0:= "s" @kind object;
  #L39d30c.  v1:= "e" @kind object;
  #L39d310.  v2:= "o" @kind object;
  #L39d314.  v3:= "nm" @kind object;
  #L39d318.  v4:= "m" @kind object;
  #L39d31c.  v5:= "hd" @kind object;
  #L39d320.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4, v5];
  #L39d326.  v0:= temp @kind object;
  #L39d328.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L39d32e.  v0:= temp @kind object;
  #L39d330.  `@@com.airbnb.lottie.parser.t.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L39d334.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.ShapeTrimPath` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v9 @kind object, `com.airbnb.lottie.LottieComposition` v10 @kind object) @signature `Lcom/airbnb/lottie/parser/t;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/content/ShapeTrimPath;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L39d254.  v0:= 0I;
  #L39d256.  v1:= 0I;
  #L39d258.  v3:= v1 @kind object;
  #L39d25a.  v4:= v3 @kind object;
  #L39d25c.  v5:= v4 @kind object;
  #L39d25e.  v6:= v5 @kind object;
  #L39d260.  v7:= v6 @kind object;
  #L39d262.  v8:= 0I;
  #L39d264.  call temp:= `hasNext`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L39d26a.  v1:= temp;
  #L39d26c.  if v1 == 0 then goto L39d2ea;
  #L39d270.  v1:= `@@com.airbnb.lottie.parser.t.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L39d274.  call temp:= `selectName`(v9, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L39d27a.  v1:= temp;
  #L39d27c.  if v1 == 0 then goto L39d2e0;
  #L39d280.  v2:= 1I;
  #L39d282.  if v1 == v2 then goto L39d2d6;
  #L39d286.  v2:= 2I;
  #L39d288.  if v1 == v2 then goto L39d2cc;
  #L39d28c.  v2:= 3I;
  #L39d28e.  if v1 == v2 then goto L39d2c2;
  #L39d292.  v2:= 4I;
  #L39d294.  if v1 == v2 then goto L39d2b0;
  #L39d298.  v2:= 5I;
  #L39d29a.  if v1 == v2 then goto L39d2a6;
  #L39d29e.  call `skipValue`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L39d2a4.  goto L39d264;
  #L39d2a6.  call temp:= `nextBoolean`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextBoolean:()Z` @kind virtual;
  #L39d2ac.  v8:= temp;
  #L39d2ae.  goto L39d264;
  #L39d2b0.  call temp:= `nextInt`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextInt:()I` @kind virtual;
  #L39d2b6.  v1:= temp;
  #L39d2b8.  call temp:= `forId`(v1) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.forId:(I)Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;` @kind static;
  #L39d2be.  v4:= temp @kind object;
  #L39d2c0.  goto L39d264;
  #L39d2c2.  call temp:= `nextString`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L39d2c8.  v3:= temp @kind object;
  #L39d2ca.  goto L39d264;
  #L39d2cc.  call temp:= `parseFloat`(v9, v10, v0) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.parseFloat:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;Z)Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;` @kind static;
  #L39d2d2.  v7:= temp @kind object;
  #L39d2d4.  goto L39d264;
  #L39d2d6.  call temp:= `parseFloat`(v9, v10, v0) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.parseFloat:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;Z)Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;` @kind static;
  #L39d2dc.  v6:= temp @kind object;
  #L39d2de.  goto L39d264;
  #L39d2e0.  call temp:= `parseFloat`(v9, v10, v0) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.parseFloat:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;Z)Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;` @kind static;
  #L39d2e6.  v5:= temp @kind object;
  #L39d2e8.  goto L39d264;
  #L39d2ea.  v9:= new `com.airbnb.lottie.model.content.ShapeTrimPath`;
  #L39d2ee.  v2:= v9 @kind object;
  #L39d2f0.  call `<init>`(v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath;.<init>:(Ljava/lang/String;Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Lcom/airbnb/lottie/model/animatable/AnimatableFloatValue;Z)V` @kind direct;
  #L39d2f6.  return v9 @kind object;
}
