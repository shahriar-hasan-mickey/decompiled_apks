record `com.airbnb.lottie.parser.i` @kind class @AccessFlag  {
}
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.i.a` @AccessFlag STATIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L39b044.  v0:= "k" @kind object;
  #L39b048.  temp:= new `java.lang.String`[v0];
  #L39b04e.  v0:= temp @kind object;
  #L39b050.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L39b056.  v0:= temp @kind object;
  #L39b058.  `@@com.airbnb.lottie.parser.i.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L39b05c.  return @kind void;
}
procedure `java.util.List` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v9 @kind object, `com.airbnb.lottie.LottieComposition` v10 @kind object, `float` v11 , `com.airbnb.lottie.parser.u` v12 @kind object, `boolean` v13 ) @signature `Lcom/airbnb/lottie/parser/i;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;FLcom/airbnb/lottie/parser/u;Z)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L39af48.  v0:= new `java.util.ArrayList`;
  #L39af4c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L39af52.  call temp:= `peek`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39af58.  v1:= temp @kind object;
  #L39af5a.  v2:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.STRING` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39af5e.  if v1 != v2 then goto L39af6e;
  #L39af62.  v9:= "Lottie doesn't support expressions." @kind object;
  #L39af66.  call `addWarning`(v10, v9) @signature `Lcom/airbnb/lottie/LottieComposition;.addWarning:(Ljava/lang/String;)V` @kind virtual;
  #L39af6c.  return v0 @kind object;
  #L39af6e.  call `beginObject`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginObject:()V` @kind virtual;
  #L39af74.  call temp:= `hasNext`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L39af7a.  v1:= temp;
  #L39af7c.  if v1 == 0 then goto L39b026;
  #L39af80.  v1:= `@@com.airbnb.lottie.parser.i.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L39af84.  call temp:= `selectName`(v9, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L39af8a.  v1:= temp;
  #L39af8c.  if v1 == 0 then goto L39af98;
  #L39af90.  call `skipValue`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L39af96.  goto L39af74;
  #L39af98.  call temp:= `peek`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39af9e.  v1:= temp @kind object;
  #L39afa0.  v2:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39afa4.  if v1 != v2 then goto L39b00a;
  #L39afa8.  call `beginArray`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L39afae.  call temp:= `peek`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39afb4.  v1:= temp @kind object;
  #L39afb6.  v2:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.NUMBER` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39afba.  if v1 != v2 then goto L39afda;
  #L39afbe.  v7:= 0I;
  #L39afc0.  v3:= v9 @kind object;
  #L39afc2.  v4:= v10 @kind object;
  #L39afc4.  v5:= v11;
  #L39afc6.  v6:= v12 @kind object;
  #L39afc8.  v8:= v13;
  #L39afca.  call temp:= `c`(v3, v4, v5, v6, v7, v8) @signature `Lcom/airbnb/lottie/parser/h;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;FLcom/airbnb/lottie/parser/u;ZZ)Lcom/airbnb/lottie/value/Keyframe;` @kind static;
  #L39afd0.  v1:= temp @kind object;
  #L39afd2.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39afd8.  goto L39b002;
  #L39afda.  call temp:= `hasNext`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L39afe0.  v1:= temp;
  #L39afe2.  if v1 == 0 then goto L39b002;
  #L39afe6.  v6:= 1I;
  #L39afe8.  v2:= v9 @kind object;
  #L39afea.  v3:= v10 @kind object;
  #L39afec.  v4:= v11;
  #L39afee.  v5:= v12 @kind object;
  #L39aff0.  v7:= v13;
  #L39aff2.  call temp:= `c`(v2, v3, v4, v5, v6, v7) @signature `Lcom/airbnb/lottie/parser/h;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;FLcom/airbnb/lottie/parser/u;ZZ)Lcom/airbnb/lottie/value/Keyframe;` @kind static;
  #L39aff8.  v1:= temp @kind object;
  #L39affa.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39b000.  goto L39afda;
  #L39b002.  call `endArray`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L39b008.  goto L39af74;
  #L39b00a.  v6:= 0I;
  #L39b00c.  v2:= v9 @kind object;
  #L39b00e.  v3:= v10 @kind object;
  #L39b010.  v4:= v11;
  #L39b012.  v5:= v12 @kind object;
  #L39b014.  v7:= v13;
  #L39b016.  call temp:= `c`(v2, v3, v4, v5, v6, v7) @signature `Lcom/airbnb/lottie/parser/h;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;FLcom/airbnb/lottie/parser/u;ZZ)Lcom/airbnb/lottie/value/Keyframe;` @kind static;
  #L39b01c.  v1:= temp @kind object;
  #L39b01e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39b024.  goto L39af74;
  #L39b026.  call `endObject`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endObject:()V` @kind virtual;
  #L39b02c.  call `b`(v0) @signature `Lcom/airbnb/lottie/parser/i;.b:(Ljava/util/List;)V` @kind static;
  #L39b032.  return v0 @kind object;
}
procedure `void` `b`(`java.util.List` v5 @kind object) @signature `Lcom/airbnb/lottie/parser/i;.b:(Ljava/util/List;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L39b070.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39b076.  v0:= temp;
  #L39b078.  v1:= 0I;
  #L39b07a.  v2:= 1I;
  #L39b07c.  v3:= v0 + -1;
  #L39b080.  if v1 >= v3 then goto L39b0d8;
  #L39b084.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39b08a.  v2:= temp @kind object;
  #L39b08c.  v2:= (`com.airbnb.lottie.value.Keyframe`) v2 @kind object;
  #L39b090.  v1:= v1 + 1;
  #L39b094.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39b09a.  v3:= temp @kind object;
  #L39b09c.  v3:= (`com.airbnb.lottie.value.Keyframe`) v3 @kind object;
  #L39b0a0.  v4:= v3.`com.airbnb.lottie.value.Keyframe.startFrame` @type ^`float`;
  #L39b0a4.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L39b0aa.  v4:= temp @kind object;
  #L39b0ac.  v2.`com.airbnb.lottie.value.Keyframe.endFrame` @type ^`java.lang.Float` := v4 @kind object;
  #L39b0b0.  v4:= v2.`com.airbnb.lottie.value.Keyframe.endValue` @type ^`java.lang.Object` @kind object;
  #L39b0b4.  if v4 != 0 then goto L39b07a;
  #L39b0b8.  v3:= v3.`com.airbnb.lottie.value.Keyframe.startValue` @type ^`java.lang.Object` @kind object;
  #L39b0bc.  if v3 == 0 then goto L39b07a;
  #L39b0c0.  v2.`com.airbnb.lottie.value.Keyframe.endValue` @type ^`java.lang.Object` := v3 @kind object;
  #L39b0c4.  v3:= instanceof @variable v2 @type ^`com.airbnb.lottie.animation.keyframe.PathKeyframe` @kind boolean;
  #L39b0c8.  if v3 == 0 then goto L39b07a;
  #L39b0cc.  v2:= (`com.airbnb.lottie.animation.keyframe.PathKeyframe`) v2 @kind object;
  #L39b0d0.  call `createPath`(v2) @signature `Lcom/airbnb/lottie/animation/keyframe/PathKeyframe;.createPath:()V` @kind virtual;
  #L39b0d6.  goto L39b07a;
  #L39b0d8.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39b0de.  v0:= temp @kind object;
  #L39b0e0.  v0:= (`com.airbnb.lottie.value.Keyframe`) v0 @kind object;
  #L39b0e4.  v1:= v0.`com.airbnb.lottie.value.Keyframe.startValue` @type ^`java.lang.Object` @kind object;
  #L39b0e8.  if v1 == 0 then goto L39b0f4;
  #L39b0ec.  v1:= v0.`com.airbnb.lottie.value.Keyframe.endValue` @type ^`java.lang.Object` @kind object;
  #L39b0f0.  if v1 != 0 then goto L39b106;
  #L39b0f4.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39b0fa.  v1:= temp;
  #L39b0fc.  if v1 <= v2 then goto L39b106;
  #L39b100.  call temp:= `remove`(v5, v0) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L39b106.  return @kind void;
}
