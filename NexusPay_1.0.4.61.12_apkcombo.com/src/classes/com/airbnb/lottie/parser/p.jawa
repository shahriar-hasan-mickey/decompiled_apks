record `com.airbnb.lottie.parser.p` @kind class @AccessFlag  {
}
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.p.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/p;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39cd64.  v0:= "nm" @kind object;
  #L39cd68.  v1:= "c" @kind object;
  #L39cd6c.  v2:= "o" @kind object;
  #L39cd70.  v3:= "fillEnabled" @kind object;
  #L39cd74.  v4:= "r" @kind object;
  #L39cd78.  v5:= "hd" @kind object;
  #L39cd7c.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4, v5];
  #L39cd82.  v0:= temp @kind object;
  #L39cd84.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L39cd8a.  v0:= temp @kind object;
  #L39cd8c.  `@@com.airbnb.lottie.parser.p.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L39cd90.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.ShapeFill` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v10 @kind object, `com.airbnb.lottie.LottieComposition` v11 @kind object) @signature `Lcom/airbnb/lottie/parser/p;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/content/ShapeFill;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L39cc70.  v0:= 0I;
  #L39cc72.  v1:= 1I;
  #L39cc74.  v2:= 0I;
  #L39cc76.  v4:= v2 @kind object;
  #L39cc78.  v7:= v4 @kind object;
  #L39cc7a.  v0:= 1I;
  #L39cc7c.  v5:= 0I;
  #L39cc7e.  v9:= 0I;
  #L39cc80.  call temp:= `hasNext`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L39cc86.  v3:= temp;
  #L39cc88.  if v3 == 0 then goto L39cd02;
  #L39cc8c.  v3:= `@@com.airbnb.lottie.parser.p.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L39cc90.  call temp:= `selectName`(v10, v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L39cc96.  v3:= temp;
  #L39cc98.  if v3 == 0 then goto L39ccf8;
  #L39cc9c.  if v3 == v1 then goto L39ccee;
  #L39cca0.  v6:= 2I;
  #L39cca2.  if v3 == v6 then goto L39cce4;
  #L39cca6.  v6:= 3I;
  #L39cca8.  if v3 == v6 then goto L39ccda;
  #L39ccac.  v6:= 4I;
  #L39ccae.  if v3 == v6 then goto L39ccd0;
  #L39ccb2.  v6:= 5I;
  #L39ccb4.  if v3 == v6 then goto L39ccc6;
  #L39ccb8.  call `skipName`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipName:()V` @kind virtual;
  #L39ccbe.  call `skipValue`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L39ccc4.  goto L39cc80;
  #L39ccc6.  call temp:= `nextBoolean`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextBoolean:()Z` @kind virtual;
  #L39cccc.  v9:= temp;
  #L39ccce.  goto L39cc80;
  #L39ccd0.  call temp:= `nextInt`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextInt:()I` @kind virtual;
  #L39ccd6.  v0:= temp;
  #L39ccd8.  goto L39cc80;
  #L39ccda.  call temp:= `nextBoolean`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextBoolean:()Z` @kind virtual;
  #L39cce0.  v5:= temp;
  #L39cce2.  goto L39cc80;
  #L39cce4.  call temp:= `f`(v10, v11) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.f:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;` @kind static;
  #L39ccea.  v2:= temp @kind object;
  #L39ccec.  goto L39cc80;
  #L39ccee.  call temp:= `c`(v10, v11) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/animatable/AnimatableColorValue;` @kind static;
  #L39ccf4.  v7:= temp @kind object;
  #L39ccf6.  goto L39cc80;
  #L39ccf8.  call temp:= `nextString`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L39ccfe.  v4:= temp @kind object;
  #L39cd00.  goto L39cc80;
  #L39cd02.  if v2 != 0 then goto L39cd32;
  #L39cd06.  v10:= new `com.airbnb.lottie.model.animatable.AnimatableIntegerValue`;
  #L39cd0a.  v11:= new `com.airbnb.lottie.value.Keyframe`;
  #L39cd0e.  v2:= 100I;
  #L39cd12.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L39cd18.  v2:= temp @kind object;
  #L39cd1a.  call `<init>`(v11, v2) @signature `Lcom/airbnb/lottie/value/Keyframe;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L39cd20.  call temp:= `singletonList`(v11) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L39cd26.  v11:= temp @kind object;
  #L39cd28.  call `<init>`(v10, v11) @signature `Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;.<init>:(Ljava/util/List;)V` @kind direct;
  #L39cd2e.  v8:= v10 @kind object;
  #L39cd30.  goto L39cd34;
  #L39cd32.  v8:= v2 @kind object;
  #L39cd34.  if v0 != v1 then goto L39cd3e;
  #L39cd38.  v10:= `@@android.graphics.Path$FillType.WINDING` @type ^`android.graphics.Path$FillType` @kind object;
  #L39cd3c.  goto L39cd42;
  #L39cd3e.  v10:= `@@android.graphics.Path$FillType.EVEN_ODD` @type ^`android.graphics.Path$FillType` @kind object;
  #L39cd42.  v6:= v10 @kind object;
  #L39cd44.  v10:= new `com.airbnb.lottie.model.content.ShapeFill`;
  #L39cd48.  v3:= v10 @kind object;
  #L39cd4a.  call `<init>`(v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/airbnb/lottie/model/content/ShapeFill;.<init>:(Ljava/lang/String;ZLandroid/graphics/Path$FillType;Lcom/airbnb/lottie/model/animatable/AnimatableColorValue;Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;Z)V` @kind direct;
  #L39cd50.  return v10 @kind object;
}
