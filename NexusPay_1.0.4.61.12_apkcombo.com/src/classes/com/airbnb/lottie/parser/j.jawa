record `com.airbnb.lottie.parser.j` @kind class @AccessFlag  {
}
procedure `com.airbnb.lottie.model.content.Mask` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v12 @kind object, `com.airbnb.lottie.LottieComposition` v13 @kind object) @signature `Lcom/airbnb/lottie/parser/j;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/content/Mask;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L39c1d8.  call `beginObject`(v12) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginObject:()V` @kind virtual;
  #L39c1de.  v0:= 0I;
  #L39c1e0.  v1:= 0I;
  #L39c1e2.  v2:= v1 @kind object;
  #L39c1e4.  v3:= v2 @kind object;
  #L39c1e6.  v4:= 0I;
  #L39c1e8.  call temp:= `hasNext`(v12) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L39c1ee.  v5:= temp;
  #L39c1f0.  if v5 == 0 then goto L39c3ae;
  #L39c1f4.  call temp:= `nextName`(v12) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextName:()Ljava/lang/String;` @kind virtual;
  #L39c1fa.  v5:= temp @kind object;
  #L39c1fc.  call temp:= `hashCode`(v5) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L39c202.  v6:= temp;
  #L39c204.  v7:= 111I;
  #L39c208.  v8:= -1I;
  #L39c20a.  v9:= 3I;
  #L39c20c.  v10:= 2I;
  #L39c20e.  v11:= 1I;
  #L39c210.  if v6 == v7 then goto L39c26e;
  #L39c214.  v7:= 3588I;
  #L39c218.  if v6 == v7 then goto L39c25a;
  #L39c21c.  v7:= 104433I;
  #L39c222.  if v6 == v7 then goto L39c246;
  #L39c226.  v7:= 3357091I;
  #L39c22c.  if v6 == v7 then goto L39c232;
  #L39c230.  goto L39c282;
  #L39c232.  v6:= "mode" @kind object;
  #L39c236.  call temp:= `equals`(v5, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39c23c.  v6:= temp;
  #L39c23e.  if v6 == 0 then goto L39c282;
  #L39c242.  v6:= 0I;
  #L39c244.  goto L39c284;
  #L39c246.  v6:= "inv" @kind object;
  #L39c24a.  call temp:= `equals`(v5, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39c250.  v6:= temp;
  #L39c252.  if v6 == 0 then goto L39c282;
  #L39c256.  v6:= 3I;
  #L39c258.  goto L39c284;
  #L39c25a.  v6:= "pt" @kind object;
  #L39c25e.  call temp:= `equals`(v5, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39c264.  v6:= temp;
  #L39c266.  if v6 == 0 then goto L39c282;
  #L39c26a.  v6:= 1I;
  #L39c26c.  goto L39c284;
  #L39c26e.  v6:= "o" @kind object;
  #L39c272.  call temp:= `equals`(v5, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39c278.  v6:= temp;
  #L39c27a.  if v6 == 0 then goto L39c282;
  #L39c27e.  v6:= 2I;
  #L39c280.  goto L39c284;
  #L39c282.  v6:= -1I;
  #L39c284.  if v6 == 0 then goto L39c2ba;
  #L39c288.  if v6 == v11 then goto L39c2b0;
  #L39c28c.  if v6 == v10 then goto L39c2a6;
  #L39c290.  if v6 == v9 then goto L39c29c;
  #L39c294.  call `skipValue`(v12) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L39c29a.  goto L39c1e8;
  #L39c29c.  call temp:= `nextBoolean`(v12) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextBoolean:()Z` @kind virtual;
  #L39c2a2.  v4:= temp;
  #L39c2a4.  goto L39c1e8;
  #L39c2a6.  call temp:= `f`(v12, v13) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.f:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;` @kind static;
  #L39c2ac.  v3:= temp @kind object;
  #L39c2ae.  goto L39c1e8;
  #L39c2b0.  call temp:= `i`(v12, v13) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.i:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/animatable/AnimatableShapeValue;` @kind static;
  #L39c2b6.  v2:= temp @kind object;
  #L39c2b8.  goto L39c1e8;
  #L39c2ba.  call temp:= `nextString`(v12) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L39c2c0.  v1:= temp @kind object;
  #L39c2c2.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L39c2c8.  v6:= temp;
  #L39c2ca.  v7:= 97I;
  #L39c2ce.  if v6 == v7 then goto L39c328;
  #L39c2d2.  v7:= 105I;
  #L39c2d6.  if v6 == v7 then goto L39c314;
  #L39c2da.  v7:= 110I;
  #L39c2de.  if v6 == v7 then goto L39c300;
  #L39c2e2.  v7:= 115I;
  #L39c2e6.  if v6 == v7 then goto L39c2ec;
  #L39c2ea.  goto L39c33a;
  #L39c2ec.  v6:= "s" @kind object;
  #L39c2f0.  call temp:= `equals`(v1, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39c2f6.  v1:= temp;
  #L39c2f8.  if v1 == 0 then goto L39c33a;
  #L39c2fc.  v8:= 1I;
  #L39c2fe.  goto L39c33a;
  #L39c300.  v6:= "n" @kind object;
  #L39c304.  call temp:= `equals`(v1, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39c30a.  v1:= temp;
  #L39c30c.  if v1 == 0 then goto L39c33a;
  #L39c310.  v8:= 2I;
  #L39c312.  goto L39c33a;
  #L39c314.  v6:= "i" @kind object;
  #L39c318.  call temp:= `equals`(v1, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39c31e.  v1:= temp;
  #L39c320.  if v1 == 0 then goto L39c33a;
  #L39c324.  v8:= 3I;
  #L39c326.  goto L39c33a;
  #L39c328.  v6:= "a" @kind object;
  #L39c32c.  call temp:= `equals`(v1, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39c332.  v1:= temp;
  #L39c334.  if v1 == 0 then goto L39c33a;
  #L39c338.  v8:= 0I;
  #L39c33a.  if v8 == 0 then goto L39c3a6;
  #L39c33e.  if v8 == v11 then goto L39c39e;
  #L39c342.  if v8 == v10 then goto L39c396;
  #L39c346.  if v8 == v9 then goto L39c384;
  #L39c34a.  v1:= new `java.lang.StringBuilder`;
  #L39c34e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39c354.  v6:= "Unknown mask mode " @kind object;
  #L39c358.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c35e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c364.  v5:= ". Defaulting to Add." @kind object;
  #L39c368.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39c36e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39c374.  v1:= temp @kind object;
  #L39c376.  call `warning`(v1) @signature `Lcom/airbnb/lottie/utils/Logger;.warning:(Ljava/lang/String;)V` @kind static;
  #L39c37c.  v1:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_ADD` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L39c380.  goto L39c1e8;
  #L39c384.  v1:= "Animation contains intersect masks. They are not supported but will be treated like add masks." @kind object;
  #L39c388.  call `addWarning`(v13, v1) @signature `Lcom/airbnb/lottie/LottieComposition;.addWarning:(Ljava/lang/String;)V` @kind virtual;
  #L39c38e.  v1:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_INTERSECT` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L39c392.  goto L39c1e8;
  #L39c396.  v1:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_NONE` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L39c39a.  goto L39c1e8;
  #L39c39e.  v1:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_SUBTRACT` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L39c3a2.  goto L39c1e8;
  #L39c3a6.  v1:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_ADD` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L39c3aa.  goto L39c1e8;
  #L39c3ae.  call `endObject`(v12) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endObject:()V` @kind virtual;
  #L39c3b4.  v12:= new `com.airbnb.lottie.model.content.Mask`;
  #L39c3b8.  call `<init>`(v12, v1, v2, v3, v4) @signature `Lcom/airbnb/lottie/model/content/Mask;.<init>:(Lcom/airbnb/lottie/model/content/Mask$MaskMode;Lcom/airbnb/lottie/model/animatable/AnimatableShapeValue;Lcom/airbnb/lottie/model/animatable/AnimatableIntegerValue;Z)V` @kind direct;
  #L39c3be.  return v12 @kind object;
}
