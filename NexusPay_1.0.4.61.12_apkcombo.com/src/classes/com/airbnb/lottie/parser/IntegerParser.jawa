record `com.airbnb.lottie.parser.IntegerParser` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.parser.u` @kind interface {
}
global `com.airbnb.lottie.parser.IntegerParser` `@@com.airbnb.lottie.parser.IntegerParser.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/IntegerParser;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L39a374.  v0:= new `com.airbnb.lottie.parser.IntegerParser`;
  #L39a378.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/parser/IntegerParser;.<init>:()V` @kind direct;
  #L39a37e.  `@@com.airbnb.lottie.parser.IntegerParser.INSTANCE` @type ^`com.airbnb.lottie.parser.IntegerParser` := v0 @kind object;
  #L39a382.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.parser.IntegerParser` v0 @kind this) @signature `Lcom/airbnb/lottie/parser/IntegerParser;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L39a394.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39a39a.  return @kind void;
}
procedure `java.lang.Integer` `parse`(`com.airbnb.lottie.parser.IntegerParser` v0 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/parser/IntegerParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;

  #L39a328.  call temp:= `g`(v1) @signature `Lcom/airbnb/lottie/parser/g;.g:(Lcom/airbnb/lottie/parser/moshi/JsonReader;)F` @kind static;
  #L39a32e.  v1:= temp;
  #L39a330.  v1:= v1 * v2 @kind float;
  #L39a334.  call temp:= `round`(v1) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L39a33a.  v1:= temp;
  #L39a33c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L39a342.  v1:= temp @kind object;
  #L39a344.  return v1 @kind object;
}
procedure `java.lang.Object` `parse`(`com.airbnb.lottie.parser.IntegerParser` v0 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/parser/IntegerParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L39a358.  call temp:= `parse`(v0, v1, v2) @signature `Lcom/airbnb/lottie/parser/IntegerParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Integer;` @kind virtual;
  #L39a35e.  v1:= temp @kind object;
  #L39a360.  return v1 @kind object;
}
