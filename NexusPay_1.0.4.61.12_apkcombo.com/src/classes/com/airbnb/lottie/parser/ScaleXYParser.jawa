record `com.airbnb.lottie.parser.ScaleXYParser` @kind class @AccessFlag PUBLIC extends `com.airbnb.lottie.parser.u` @kind interface {
}
global `com.airbnb.lottie.parser.ScaleXYParser` `@@com.airbnb.lottie.parser.ScaleXYParser.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/ScaleXYParser;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L39c9e4.  v0:= new `com.airbnb.lottie.parser.ScaleXYParser`;
  #L39c9e8.  call `<init>`(v0) @signature `Lcom/airbnb/lottie/parser/ScaleXYParser;.<init>:()V` @kind direct;
  #L39c9ee.  `@@com.airbnb.lottie.parser.ScaleXYParser.INSTANCE` @type ^`com.airbnb.lottie.parser.ScaleXYParser` := v0 @kind object;
  #L39c9f2.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.parser.ScaleXYParser` v0 @kind this) @signature `Lcom/airbnb/lottie/parser/ScaleXYParser;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L39ca04.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39ca0a.  return @kind void;
}
procedure `com.airbnb.lottie.value.ScaleXY` `parse`(`com.airbnb.lottie.parser.ScaleXYParser` v4 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v5 @kind object, `float` v6 ) @signature `Lcom/airbnb/lottie/parser/ScaleXYParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Lcom/airbnb/lottie/value/ScaleXY;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39c948.  call temp:= `peek`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39c94e.  v0:= temp @kind object;
  #L39c950.  v1:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39c954.  if v0 != v1 then goto L39c95c;
  #L39c958.  v0:= 1I;
  #L39c95a.  goto L39c95e;
  #L39c95c.  v0:= 0I;
  #L39c95e.  if v0 == 0 then goto L39c968;
  #L39c962.  call `beginArray`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.beginArray:()V` @kind virtual;
  #L39c968.  call temp:= `nextDouble`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L39c96e.  v1:= temp @kind wide;
  #L39c970.  v1:= (`float`) v1 @kind d2f;
  #L39c972.  call temp:= `nextDouble`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextDouble:()D` @kind virtual;
  #L39c978.  v2:= temp @kind wide;
  #L39c97a.  v2:= (`float`) v2 @kind d2f;
  #L39c97c.  call temp:= `hasNext`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L39c982.  v3:= temp;
  #L39c984.  if v3 == 0 then goto L39c990;
  #L39c988.  call `skipValue`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L39c98e.  goto L39c97c;
  #L39c990.  if v0 == 0 then goto L39c99a;
  #L39c994.  call `endArray`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.endArray:()V` @kind virtual;
  #L39c99a.  v5:= new `com.airbnb.lottie.value.ScaleXY`;
  #L39c99e.  v0:= 100.0F;
  #L39c9a2.  v1:= v1 / v0 @kind float;
  #L39c9a4.  v1:= v1 * v6 @kind float;
  #L39c9a8.  v2:= v2 / v0 @kind float;
  #L39c9aa.  v2:= v2 * v6 @kind float;
  #L39c9ae.  call `<init>`(v5, v1, v2) @signature `Lcom/airbnb/lottie/value/ScaleXY;.<init>:(FF)V` @kind direct;
  #L39c9b4.  return v5 @kind object;
}
procedure `java.lang.Object` `parse`(`com.airbnb.lottie.parser.ScaleXYParser` v0 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader` v1 @kind object, `float` v2 ) @signature `Lcom/airbnb/lottie/parser/ScaleXYParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L39c9c8.  call temp:= `parse`(v0, v1, v2) @signature `Lcom/airbnb/lottie/parser/ScaleXYParser;.parse:(Lcom/airbnb/lottie/parser/moshi/JsonReader;F)Lcom/airbnb/lottie/value/ScaleXY;` @kind virtual;
  #L39c9ce.  v1:= temp @kind object;
  #L39c9d0.  return v1 @kind object;
}
