record `com.airbnb.lottie.parser.r` @kind class @AccessFlag  {
}
global `com.airbnb.lottie.parser.moshi.JsonReader$Options` `@@com.airbnb.lottie.parser.r.a` @AccessFlag STATIC;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39cef8.  v0:= "nm" @kind object;
  #L39cefc.  v1:= "ind" @kind object;
  #L39cf00.  v2:= "ks" @kind object;
  #L39cf04.  v3:= "hd" @kind object;
  #L39cf08.  temp:= new `java.lang.String`[v0, v1, v2, v3];
  #L39cf0e.  v0:= temp @kind object;
  #L39cf10.  call temp:= `of`(v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;.of:([Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;` @kind static;
  #L39cf16.  v0:= temp @kind object;
  #L39cf18.  `@@com.airbnb.lottie.parser.r.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` := v0 @kind object;
  #L39cf1c.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.ShapePath` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v6 @kind object, `com.airbnb.lottie.LottieComposition` v7 @kind object) @signature `Lcom/airbnb/lottie/parser/r;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/content/ShapePath;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39ce74.  v0:= 0I;
  #L39ce76.  v1:= 0I;
  #L39ce78.  v2:= v1 @kind object;
  #L39ce7a.  v3:= v2 @kind object;
  #L39ce7c.  v1:= 0I;
  #L39ce7e.  call temp:= `hasNext`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.hasNext:()Z` @kind virtual;
  #L39ce84.  v4:= temp;
  #L39ce86.  if v4 == 0 then goto L39cedc;
  #L39ce8a.  v4:= `@@com.airbnb.lottie.parser.r.a` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Options` @kind object;
  #L39ce8e.  call temp:= `selectName`(v6, v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind virtual;
  #L39ce94.  v4:= temp;
  #L39ce96.  if v4 == 0 then goto L39ced2;
  #L39ce9a.  v5:= 1I;
  #L39ce9c.  if v4 == v5 then goto L39cec8;
  #L39cea0.  v5:= 2I;
  #L39cea2.  if v4 == v5 then goto L39cebe;
  #L39cea6.  v5:= 3I;
  #L39cea8.  if v4 == v5 then goto L39ceb4;
  #L39ceac.  call `skipValue`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.skipValue:()V` @kind virtual;
  #L39ceb2.  goto L39ce7e;
  #L39ceb4.  call temp:= `nextBoolean`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextBoolean:()Z` @kind virtual;
  #L39ceba.  v1:= temp;
  #L39cebc.  goto L39ce7e;
  #L39cebe.  call temp:= `i`(v6, v7) @signature `Lcom/airbnb/lottie/parser/AnimatableValueParser;.i:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/model/animatable/AnimatableShapeValue;` @kind static;
  #L39cec4.  v3:= temp @kind object;
  #L39cec6.  goto L39ce7e;
  #L39cec8.  call temp:= `nextInt`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextInt:()I` @kind virtual;
  #L39cece.  v0:= temp;
  #L39ced0.  goto L39ce7e;
  #L39ced2.  call temp:= `nextString`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L39ced8.  v2:= temp @kind object;
  #L39ceda.  goto L39ce7e;
  #L39cedc.  v6:= new `com.airbnb.lottie.model.content.ShapePath`;
  #L39cee0.  call `<init>`(v6, v2, v0, v3, v1) @signature `Lcom/airbnb/lottie/model/content/ShapePath;.<init>:(Ljava/lang/String;ILcom/airbnb/lottie/model/animatable/AnimatableShapeValue;Z)V` @kind direct;
  #L39cee6.  return v6 @kind object;
}
