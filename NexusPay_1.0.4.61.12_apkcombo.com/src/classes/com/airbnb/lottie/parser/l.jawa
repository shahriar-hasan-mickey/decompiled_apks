record `com.airbnb.lottie.parser.l` @kind class @AccessFlag  {
}
procedure `com.airbnb.lottie.animation.keyframe.PathKeyframe` `a`(`com.airbnb.lottie.parser.moshi.JsonReader` v7 @kind object, `com.airbnb.lottie.LottieComposition` v8 @kind object) @signature `Lcom/airbnb/lottie/parser/l;.a:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;)Lcom/airbnb/lottie/animation/keyframe/PathKeyframe;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L39c484.  call temp:= `peek`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39c48a.  v0:= temp @kind object;
  #L39c48c.  v1:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_OBJECT` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39c490.  if v0 != v1 then goto L39c49a;
  #L39c494.  v0:= 1I;
  #L39c496.  v5:= 1I;
  #L39c498.  goto L39c49e;
  #L39c49a.  v0:= 0I;
  #L39c49c.  v5:= 0I;
  #L39c49e.  call temp:= `dpScale`() @signature `Lcom/airbnb/lottie/utils/Utils;.dpScale:()F` @kind static;
  #L39c4a4.  v3:= temp;
  #L39c4a6.  v4:= `@@com.airbnb.lottie.parser.PathParser.INSTANCE` @type ^`com.airbnb.lottie.parser.PathParser` @kind object;
  #L39c4aa.  v6:= 0I;
  #L39c4ac.  v1:= v7 @kind object;
  #L39c4ae.  v2:= v8 @kind object;
  #L39c4b0.  call temp:= `c`(v1, v2, v3, v4, v5, v6) @signature `Lcom/airbnb/lottie/parser/h;.c:(Lcom/airbnb/lottie/parser/moshi/JsonReader;Lcom/airbnb/lottie/LottieComposition;FLcom/airbnb/lottie/parser/u;ZZ)Lcom/airbnb/lottie/value/Keyframe;` @kind static;
  #L39c4b6.  v7:= temp @kind object;
  #L39c4b8.  v0:= new `com.airbnb.lottie.animation.keyframe.PathKeyframe`;
  #L39c4bc.  call `<init>`(v0, v8, v7) @signature `Lcom/airbnb/lottie/animation/keyframe/PathKeyframe;.<init>:(Lcom/airbnb/lottie/LottieComposition;Lcom/airbnb/lottie/value/Keyframe;)V` @kind direct;
  #L39c4c2.  return v0 @kind object;
}
