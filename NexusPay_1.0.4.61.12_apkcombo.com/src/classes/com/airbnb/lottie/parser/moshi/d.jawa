record `com.airbnb.lottie.parser.moshi.d` @kind class @AccessFlag FINAL extends `com.airbnb.lottie.parser.moshi.JsonReader` @kind class {
  `okio.BufferedSource` `com.airbnb.lottie.parser.moshi.d.h` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer` `com.airbnb.lottie.parser.moshi.d.i` @AccessFlag PRIVATE_FINAL;
  `int` `com.airbnb.lottie.parser.moshi.d.j` @AccessFlag PRIVATE;
  `long` `com.airbnb.lottie.parser.moshi.d.k` @AccessFlag PRIVATE;
  `int` `com.airbnb.lottie.parser.moshi.d.l` @AccessFlag PRIVATE;
  `java.lang.String` `com.airbnb.lottie.parser.moshi.d.m` @AccessFlag PRIVATE;
}
global `okio.ByteString` `@@com.airbnb.lottie.parser.moshi.d.n` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@com.airbnb.lottie.parser.moshi.d.o` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@com.airbnb.lottie.parser.moshi.d.p` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@com.airbnb.lottie.parser.moshi.d.q` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@com.airbnb.lottie.parser.moshi.d.r` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/parser/moshi/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L39ed94.  v0:= "'\\" @kind object;
  #L39ed98.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L39ed9e.  v0:= temp @kind object;
  #L39eda0.  `@@com.airbnb.lottie.parser.moshi.d.n` @type ^`okio.ByteString` := v0 @kind object;
  #L39eda4.  v0:= "\"\\" @kind object;
  #L39eda8.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L39edae.  v0:= temp @kind object;
  #L39edb0.  `@@com.airbnb.lottie.parser.moshi.d.o` @type ^`okio.ByteString` := v0 @kind object;
  #L39edb4.  v0:= "{}[]:, \n\t\r\f/\\;#=" @kind object;
  #L39edb8.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L39edbe.  v0:= temp @kind object;
  #L39edc0.  `@@com.airbnb.lottie.parser.moshi.d.p` @type ^`okio.ByteString` := v0 @kind object;
  #L39edc4.  v0:= "\n\r" @kind object;
  #L39edc8.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L39edce.  v0:= temp @kind object;
  #L39edd0.  `@@com.airbnb.lottie.parser.moshi.d.q` @type ^`okio.ByteString` := v0 @kind object;
  #L39edd4.  v0:= "*/" @kind object;
  #L39edd8.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L39edde.  v0:= temp @kind object;
  #L39ede0.  `@@com.airbnb.lottie.parser.moshi.d.r` @type ^`okio.ByteString` := v0 @kind object;
  #L39ede4.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.parser.moshi.d` v1 @kind this, `okio.BufferedSource` v2 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/d;.<init>:(Lokio/BufferedSource;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L39edf8.  call `<init>`(v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.<init>:()V` @kind direct;
  #L39edfe.  v0:= 0I;
  #L39ee00.  v1.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v0;
  #L39ee04.  if v2 == 0 then goto L39ee22;
  #L39ee08.  v1.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` := v2 @kind object;
  #L39ee0c.  call temp:= `buffer`(v2) @signature `Lokio/BufferedSource;.buffer:()Lokio/Buffer;` @kind interface;
  #L39ee12.  v2:= temp @kind object;
  #L39ee14.  v1.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` := v2 @kind object;
  #L39ee18.  v2:= 6I;
  #L39ee1a.  call `b`(v1, v2) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.b:(I)V` @kind virtual;
  #L39ee20.  return @kind void;
  #L39ee22.  v2:= new `java.lang.NullPointerException`;
  #L39ee26.  v0:= "source == null" @kind object;
  #L39ee2a.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39ee30.  throw v2;
}
procedure `void` `e`(`com.airbnb.lottie.parser.moshi.d` v1 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L39ef5c.  v0:= v1.`com.airbnb.lottie.parser.moshi.JsonReader.e` @type ^`boolean` @kind boolean;
  #L39ef60.  if v0 == 0 then goto L39ef66;
  #L39ef64.  return @kind void;
  #L39ef66.  v0:= "Use JsonReader.setLenient(true) to accept malformed JSON" @kind object;
  #L39ef6a.  call temp:= `d`(v1, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L39ef70.  v0:= 0I;
  #L39ef72.  throw v0;
}
procedure `int` `f`(`com.airbnb.lottie.parser.moshi.d` v17 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L39dfb0.  v0:= v17 @kind object;
  #L39dfb4.  v1:= v0.`com.airbnb.lottie.parser.moshi.JsonReader.b` @type ^`int`[] @kind object;
  #L39dfb8.  v2:= v0.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39dfbc.  v3:= v2 + -1;
  #L39dfc0.  v3:= v1[v3];
  #L39dfc4.  v4:= 0L;
  #L39dfc8.  v6:= 8I;
  #L39dfcc.  v8:= 34I;
  #L39dfd0.  v9:= 93I;
  #L39dfd4.  v10:= 3I;
  #L39dfd6.  v11:= 7I;
  #L39dfd8.  v12:= 59I;
  #L39dfdc.  v13:= 44I;
  #L39dfe0.  v14:= 4I;
  #L39dfe2.  v15:= 2I;
  #L39dfe4.  v16:= 0I;
  #L39dfe8.  v7:= 1I;
  #L39dfea.  if v3 != v7 then goto L39dff8;
  #L39dfee.  v2:= v2 - v7 @kind int;
  #L39dff0.  v1[v2]:= v15;
  #L39dff4.  goto L39e0ec;
  #L39dff8.  if v3 != v15 then goto L39e034;
  #L39dffc.  call temp:= `i`(v0, v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.i:(Z)I` @kind direct;
  #L39e002.  v1:= temp;
  #L39e004.  v2:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e008.  call temp:= `readByte`(v2) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39e00e.  if v1 == v13 then goto L39e0ec;
  #L39e012.  if v1 == v12 then goto L39e02c;
  #L39e016.  if v1 != v9 then goto L39e020;
  #L39e01a.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v14;
  #L39e01e.  return v14;
  #L39e020.  v1:= "Unterminated array" @kind object;
  #L39e024.  call temp:= `d`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L39e02a.  throw v16;
  #L39e02c.  call `e`(v17) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L39e032.  goto L39e0ec;
  #L39e034.  v15:= 5I;
  #L39e036.  if v3 == v10 then goto L39e200;
  #L39e03a.  if v3 != v15 then goto L39e042;
  #L39e03e.  goto L39e200;
  #L39e042.  if v3 != v14 then goto L39e0b4;
  #L39e046.  v2:= v2 - v7 @kind int;
  #L39e048.  v1[v2]:= v15;
  #L39e04c.  call temp:= `i`(v0, v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.i:(Z)I` @kind direct;
  #L39e052.  v1:= temp;
  #L39e054.  v2:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e058.  call temp:= `readByte`(v2) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39e05e.  v2:= 58I;
  #L39e062.  if v1 == v2 then goto L39e0ec;
  #L39e066.  v2:= 61I;
  #L39e06a.  if v1 != v2 then goto L39e0a8;
  #L39e06e.  call `e`(v17) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L39e074.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L39e078.  v14:= 1L;
  #L39e07c.  call temp:= `request`(v1, v14) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L39e082.  v1:= temp;
  #L39e084.  if v1 == 0 then goto L39e0ec;
  #L39e088.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e08c.  call temp:= `getByte`(v1, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L39e092.  v1:= temp;
  #L39e094.  v2:= 62I;
  #L39e098.  if v1 != v2 then goto L39e0ec;
  #L39e09c.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e0a0.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39e0a6.  goto L39e0ec;
  #L39e0a8.  v1:= "Expected ':'" @kind object;
  #L39e0ac.  call temp:= `d`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L39e0b2.  throw v16;
  #L39e0b4.  v14:= 6I;
  #L39e0b6.  if v3 != v14 then goto L39e0c2;
  #L39e0ba.  v2:= v2 - v7 @kind int;
  #L39e0bc.  v1[v2]:= v11;
  #L39e0c0.  goto L39e0ec;
  #L39e0c2.  if v3 != v11 then goto L39e0e8;
  #L39e0c6.  v1:= 0I;
  #L39e0c8.  call temp:= `i`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/d;.i:(Z)I` @kind direct;
  #L39e0ce.  v1:= temp;
  #L39e0d0.  v2:= -1I;
  #L39e0d2.  if v1 != v2 then goto L39e0e0;
  #L39e0d6.  v1:= 18I;
  #L39e0da.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L39e0de.  return v1;
  #L39e0e0.  call `e`(v17) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L39e0e6.  goto L39e0ec;
  #L39e0e8.  if v3 == v6 then goto L39e1f0;
  #L39e0ec.  call temp:= `i`(v0, v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.i:(Z)I` @kind direct;
  #L39e0f2.  v1:= temp;
  #L39e0f4.  if v1 == v8 then goto L39e1dc;
  #L39e0f8.  v2:= 39I;
  #L39e0fc.  if v1 == v2 then goto L39e1c6;
  #L39e100.  if v1 == v13 then goto L39e1a2;
  #L39e104.  if v1 == v12 then goto L39e1a2;
  #L39e108.  v2:= 91I;
  #L39e10c.  if v1 == v2 then goto L39e192;
  #L39e110.  if v1 == v9 then goto L39e17c;
  #L39e114.  v2:= 123I;
  #L39e118.  if v1 == v2 then goto L39e16c;
  #L39e11c.  call temp:= `l`(v17) @signature `Lcom/airbnb/lottie/parser/moshi/d;.l:()I` @kind direct;
  #L39e122.  v1:= temp;
  #L39e124.  if v1 == 0 then goto L39e12a;
  #L39e128.  return v1;
  #L39e12a.  call temp:= `m`(v17) @signature `Lcom/airbnb/lottie/parser/moshi/d;.m:()I` @kind direct;
  #L39e130.  v1:= temp;
  #L39e132.  if v1 == 0 then goto L39e138;
  #L39e136.  return v1;
  #L39e138.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e13c.  call temp:= `getByte`(v1, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L39e142.  v1:= temp;
  #L39e144.  call temp:= `h`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/d;.h:(I)Z` @kind direct;
  #L39e14a.  v1:= temp;
  #L39e14c.  if v1 == 0 then goto L39e160;
  #L39e150.  call `e`(v17) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L39e156.  v1:= 10I;
  #L39e15a.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L39e15e.  return v1;
  #L39e160.  v1:= "Expected value" @kind object;
  #L39e164.  call temp:= `d`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L39e16a.  throw v16;
  #L39e16c.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e170.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39e176.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v7;
  #L39e17a.  return v7;
  #L39e17c.  if v3 != v7 then goto L39e1a2;
  #L39e180.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e184.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39e18a.  v1:= 4I;
  #L39e18c.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L39e190.  return v1;
  #L39e192.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e196.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39e19c.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v10;
  #L39e1a0.  return v10;
  #L39e1a2.  if v3 == v7 then goto L39e1ba;
  #L39e1a6.  v1:= 2I;
  #L39e1a8.  if v3 != v1 then goto L39e1ae;
  #L39e1ac.  goto L39e1ba;
  #L39e1ae.  v1:= "Unexpected value" @kind object;
  #L39e1b2.  call temp:= `d`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L39e1b8.  throw v16;
  #L39e1ba.  call `e`(v17) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L39e1c0.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v11;
  #L39e1c4.  return v11;
  #L39e1c6.  call `e`(v17) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L39e1cc.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e1d0.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39e1d6.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v6;
  #L39e1da.  return v6;
  #L39e1dc.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e1e0.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39e1e6.  v1:= 9I;
  #L39e1ea.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L39e1ee.  return v1;
  #L39e1f0.  v1:= new `java.lang.IllegalStateException`;
  #L39e1f4.  v2:= "JsonReader is closed" @kind object;
  #L39e1f8.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39e1fe.  throw v1;
  #L39e200.  v1:= v0.`com.airbnb.lottie.parser.moshi.JsonReader.b` @type ^`int`[] @kind object;
  #L39e204.  v2:= v0.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39e208.  v2:= v2 - v7 @kind int;
  #L39e20a.  v4:= 4I;
  #L39e20c.  v1[v2]:= v4;
  #L39e210.  v1:= 125I;
  #L39e214.  if v3 != v15 then goto L39e250;
  #L39e218.  call temp:= `i`(v0, v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.i:(Z)I` @kind direct;
  #L39e21e.  v2:= temp;
  #L39e220.  v4:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e224.  call temp:= `readByte`(v4) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39e22a.  if v2 == v13 then goto L39e250;
  #L39e22e.  if v2 == v12 then goto L39e24a;
  #L39e232.  if v2 != v1 then goto L39e23e;
  #L39e236.  v1:= 2I;
  #L39e238.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L39e23c.  return v1;
  #L39e23e.  v1:= "Unterminated object" @kind object;
  #L39e242.  call temp:= `d`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L39e248.  throw v16;
  #L39e24a.  call `e`(v17) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L39e250.  call temp:= `i`(v0, v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.i:(Z)I` @kind direct;
  #L39e256.  v2:= temp;
  #L39e258.  if v2 == v8 then goto L39e2ca;
  #L39e25c.  v4:= 39I;
  #L39e260.  if v2 == v4 then goto L39e2b0;
  #L39e264.  v4:= "Expected name" @kind object;
  #L39e268.  if v2 == v1 then goto L39e292;
  #L39e26c.  call `e`(v17) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L39e272.  v1:= (`char`) v2 @kind i2c;
  #L39e274.  call temp:= `h`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/d;.h:(I)Z` @kind direct;
  #L39e27a.  v1:= temp;
  #L39e27c.  if v1 == 0 then goto L39e28a;
  #L39e280.  v1:= 14I;
  #L39e284.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L39e288.  return v1;
  #L39e28a.  call temp:= `d`(v0, v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L39e290.  throw v16;
  #L39e292.  if v3 == v15 then goto L39e2a8;
  #L39e296.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e29a.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39e2a0.  v1:= 2I;
  #L39e2a2.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L39e2a6.  return v1;
  #L39e2a8.  call temp:= `d`(v0, v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L39e2ae.  throw v16;
  #L39e2b0.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e2b4.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39e2ba.  call `e`(v17) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L39e2c0.  v1:= 12I;
  #L39e2c4.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L39e2c8.  return v1;
  #L39e2ca.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e2ce.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39e2d4.  v1:= 13I;
  #L39e2d8.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L39e2dc.  return v1;
}
procedure `int` `g`(`com.airbnb.lottie.parser.moshi.d` v4 @kind this, `java.lang.String` v5 @kind object, `com.airbnb.lottie.parser.moshi.JsonReader$Options` v6 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/d;.g:(Ljava/lang/String;Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39e2f0.  v0:= v6.`com.airbnb.lottie.parser.moshi.JsonReader$Options.a` @type ^`java.lang.String`[] @kind object;
  #L39e2f4.  v0:= length @variable v0;
  #L39e2f6.  v1:= 0I;
  #L39e2f8.  v2:= 0I;
  #L39e2fa.  if v2 >= v0 then goto L39e32e;
  #L39e2fe.  v3:= v6.`com.airbnb.lottie.parser.moshi.JsonReader$Options.a` @type ^`java.lang.String`[] @kind object;
  #L39e302.  v3:= v3[v2] @kind object;
  #L39e306.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39e30c.  v3:= temp;
  #L39e30e.  if v3 == 0 then goto L39e328;
  #L39e312.  v4.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L39e316.  v6:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] @kind object;
  #L39e31a.  v0:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39e31e.  v0:= v0 + -1;
  #L39e322.  v6[v0]:= v5 @kind object;
  #L39e326.  return v2;
  #L39e328.  v2:= v2 + 1;
  #L39e32c.  goto L39e2fa;
  #L39e32e.  v5:= -1I;
  #L39e330.  return v5;
}
procedure `boolean` `h`(`com.airbnb.lottie.parser.moshi.d` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/lottie/parser/moshi/d;.h:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L39d968.  v0:= 9I;
  #L39d96c.  if v2 == v0 then goto L39d9e0;
  #L39d970.  v0:= 10I;
  #L39d974.  if v2 == v0 then goto L39d9e0;
  #L39d978.  v0:= 12I;
  #L39d97c.  if v2 == v0 then goto L39d9e0;
  #L39d980.  v0:= 13I;
  #L39d984.  if v2 == v0 then goto L39d9e0;
  #L39d988.  v0:= 32I;
  #L39d98c.  if v2 == v0 then goto L39d9e0;
  #L39d990.  v0:= 35I;
  #L39d994.  if v2 == v0 then goto L39d9da;
  #L39d998.  v0:= 44I;
  #L39d99c.  if v2 == v0 then goto L39d9e0;
  #L39d9a0.  v0:= 47I;
  #L39d9a4.  if v2 == v0 then goto L39d9da;
  #L39d9a8.  v0:= 61I;
  #L39d9ac.  if v2 == v0 then goto L39d9da;
  #L39d9b0.  v0:= 123I;
  #L39d9b4.  if v2 == v0 then goto L39d9e0;
  #L39d9b8.  v0:= 125I;
  #L39d9bc.  if v2 == v0 then goto L39d9e0;
  #L39d9c0.  v0:= 58I;
  #L39d9c4.  if v2 == v0 then goto L39d9e0;
  #L39d9c8.  v0:= 59I;
  #L39d9cc.  if v2 == v0 then goto L39d9da;
  #L39d9d0.  goto L39d9e4;
  #L39d9d6.  v2:= 1I;
  #L39d9d8.  return v2;
  #L39d9da.  call `e`(v1) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L39d9e0.  v2:= 0I;
  #L39d9e2.  return v2;
  #L39d9e4.  switch v2
                  | 91 => goto L39d9e0
                  | 92 => goto L39d9da
                  | 93 => goto L39d9e0
                  | else => goto L39d9d6;
}
procedure `int` `i`(`com.airbnb.lottie.parser.moshi.d` v6 @kind this, `boolean` v7 ) @signature `Lcom/airbnb/lottie/parser/moshi/d;.i:(Z)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39e590.  v0:= 0I;
  #L39e592.  v1:= 0I;
  #L39e594.  v2:= v6.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L39e598.  v3:= v1 + 1;
  #L39e59c.  v4:= (`long`) v3 @kind i2l;
  #L39e59e.  call temp:= `request`(v2, v4) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L39e5a4.  v2:= temp;
  #L39e5a6.  if v2 == 0 then goto L39e694;
  #L39e5aa.  v2:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e5ae.  v4:= (`long`) v1 @kind i2l;
  #L39e5b0.  call temp:= `getByte`(v2, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L39e5b6.  v1:= temp;
  #L39e5b8.  v2:= 10I;
  #L39e5bc.  if v1 == v2 then goto L39e690;
  #L39e5c0.  v2:= 32I;
  #L39e5c4.  if v1 == v2 then goto L39e690;
  #L39e5c8.  v2:= 13I;
  #L39e5cc.  if v1 == v2 then goto L39e690;
  #L39e5d0.  v2:= 9I;
  #L39e5d4.  if v1 != v2 then goto L39e5da;
  #L39e5d8.  goto L39e690;
  #L39e5da.  v2:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e5de.  v3:= v3 + -1;
  #L39e5e2.  v3:= (`long`) v3 @kind i2l;
  #L39e5e4.  call `skip`(v2, v3) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L39e5ea.  v2:= 47I;
  #L39e5ee.  if v1 != v2 then goto L39e678;
  #L39e5f2.  v3:= v6.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L39e5f6.  v4:= 2L;
  #L39e5fa.  call temp:= `request`(v3, v4) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L39e600.  v3:= temp;
  #L39e602.  if v3 != 0 then goto L39e608;
  #L39e606.  return v1;
  #L39e608.  call `e`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L39e60e.  v3:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e612.  v4:= 1L;
  #L39e616.  call temp:= `getByte`(v3, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L39e61c.  v3:= temp;
  #L39e61e.  v4:= 42I;
  #L39e622.  if v3 == v4 then goto L39e648;
  #L39e626.  if v3 == v2 then goto L39e62c;
  #L39e62a.  return v1;
  #L39e62c.  v1:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e630.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39e636.  v1:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e63a.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39e640.  call `q`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/d;.q:()V` @kind direct;
  #L39e646.  goto L39e592;
  #L39e648.  v1:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e64c.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39e652.  v1:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e656.  call temp:= `readByte`(v1) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39e65c.  call temp:= `p`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/d;.p:()Z` @kind direct;
  #L39e662.  v1:= temp;
  #L39e664.  if v1 == 0 then goto L39e66a;
  #L39e668.  goto L39e592;
  #L39e66a.  v7:= "Unterminated comment" @kind object;
  #L39e66e.  call temp:= `d`(v6, v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L39e674.  v7:= 0I;
  #L39e676.  throw v7;
  #L39e678.  v2:= 35I;
  #L39e67c.  if v1 != v2 then goto L39e68e;
  #L39e680.  call `e`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/d;.e:()V` @kind direct;
  #L39e686.  call `q`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/d;.q:()V` @kind direct;
  #L39e68c.  goto L39e592;
  #L39e68e.  return v1;
  #L39e690.  v1:= v3;
  #L39e692.  goto L39e594;
  #L39e694.  if v7 != 0 then goto L39e69c;
  #L39e698.  v7:= -1I;
  #L39e69a.  return v7;
  #L39e69c.  v7:= new `java.io.EOFException`;
  #L39e6a0.  v0:= "End of input" @kind object;
  #L39e6a4.  call `<init>`(v7, v0) @signature `Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39e6aa.  throw v7;
}
procedure `java.lang.String` `j`(`com.airbnb.lottie.parser.moshi.d` v7 @kind this, `okio.ByteString` v8 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/d;.j:(Lokio/ByteString;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L39eb30.  v0:= 0I;
  #L39eb32.  v1:= v0 @kind object;
  #L39eb34.  v2:= v7.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L39eb38.  call temp:= `indexOfElement`(v2, v8) @signature `Lokio/BufferedSource;.indexOfElement:(Lokio/ByteString;)J` @kind interface;
  #L39eb3e.  v2:= temp @kind wide;
  #L39eb40.  v4:= -1L;
  #L39eb44.  v6:= lcmp(v2, v4);
  #L39eb48.  if v6 == 0 then goto L39ebdc;
  #L39eb4c.  v4:= v7.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39eb50.  call temp:= `getByte`(v4, v2) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L39eb56.  v4:= temp;
  #L39eb58.  v5:= 92I;
  #L39eb5c.  if v4 != v5 then goto L39eb9a;
  #L39eb60.  if v1 != 0 then goto L39eb6e;
  #L39eb64.  v1:= new `java.lang.StringBuilder`;
  #L39eb68.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39eb6e.  v4:= v7.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39eb72.  call temp:= `readUtf8`(v4, v2) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L39eb78.  v2:= temp @kind object;
  #L39eb7a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39eb80.  v2:= v7.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39eb84.  call temp:= `readByte`(v2) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39eb8a.  call temp:= `n`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.n:()C` @kind direct;
  #L39eb90.  v2:= temp;
  #L39eb92.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L39eb98.  goto L39eb34;
  #L39eb9a.  if v1 != 0 then goto L39ebb6;
  #L39eb9e.  v8:= v7.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39eba2.  call temp:= `readUtf8`(v8, v2) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L39eba8.  v8:= temp @kind object;
  #L39ebaa.  v0:= v7.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39ebae.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39ebb4.  return v8 @kind object;
  #L39ebb6.  v8:= v7.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39ebba.  call temp:= `readUtf8`(v8, v2) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L39ebc0.  v8:= temp @kind object;
  #L39ebc2.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ebc8.  v8:= v7.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39ebcc.  call temp:= `readByte`(v8) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39ebd2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39ebd8.  v8:= temp @kind object;
  #L39ebda.  return v8 @kind object;
  #L39ebdc.  v8:= "Unterminated string" @kind object;
  #L39ebe0.  call temp:= `d`(v7, v8) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L39ebe6.  throw v0;
}
procedure `java.lang.String` `k`(`com.airbnb.lottie.parser.moshi.d` v5 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.k:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L39ed08.  v0:= v5.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L39ed0c.  v1:= `@@com.airbnb.lottie.parser.moshi.d.p` @type ^`okio.ByteString` @kind object;
  #L39ed10.  call temp:= `indexOfElement`(v0, v1) @signature `Lokio/BufferedSource;.indexOfElement:(Lokio/ByteString;)J` @kind interface;
  #L39ed16.  v0:= temp @kind wide;
  #L39ed18.  v2:= -1L;
  #L39ed1c.  v4:= lcmp(v0, v2);
  #L39ed20.  if v4 == 0 then goto L39ed32;
  #L39ed24.  v2:= v5.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39ed28.  call temp:= `readUtf8`(v2, v0) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L39ed2e.  v0:= temp @kind object;
  #L39ed30.  goto L39ed3e;
  #L39ed32.  v0:= v5.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39ed36.  call temp:= `readUtf8`(v0) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L39ed3c.  v0:= temp @kind object;
  #L39ed3e.  return v0 @kind object;
}
procedure `int` `l`(`com.airbnb.lottie.parser.moshi.d` v10 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.l:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L39e6bc.  v0:= v10.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e6c0.  v1:= 0L;
  #L39e6c4.  call temp:= `getByte`(v0, v1) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L39e6ca.  v0:= temp;
  #L39e6cc.  v1:= 0I;
  #L39e6ce.  v2:= 116I;
  #L39e6d2.  if v0 == v2 then goto L39e71e;
  #L39e6d6.  v2:= 84I;
  #L39e6da.  if v0 != v2 then goto L39e6e0;
  #L39e6de.  goto L39e71e;
  #L39e6e0.  v2:= 102I;
  #L39e6e4.  if v0 == v2 then goto L39e712;
  #L39e6e8.  v2:= 70I;
  #L39e6ec.  if v0 != v2 then goto L39e6f2;
  #L39e6f0.  goto L39e712;
  #L39e6f2.  v2:= 110I;
  #L39e6f6.  if v0 == v2 then goto L39e706;
  #L39e6fa.  v2:= 78I;
  #L39e6fe.  if v0 != v2 then goto L39e704;
  #L39e702.  goto L39e706;
  #L39e704.  return v1;
  #L39e706.  v0:= 7I;
  #L39e708.  v2:= "null" @kind object;
  #L39e70c.  v3:= "NULL" @kind object;
  #L39e710.  goto L39e728;
  #L39e712.  v0:= 6I;
  #L39e714.  v2:= "false" @kind object;
  #L39e718.  v3:= "FALSE" @kind object;
  #L39e71c.  goto L39e728;
  #L39e71e.  v0:= 5I;
  #L39e720.  v2:= "true" @kind object;
  #L39e724.  v3:= "TRUE" @kind object;
  #L39e728.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L39e72e.  v4:= temp;
  #L39e730.  v5:= 1I;
  #L39e732.  if v5 >= v4 then goto L39e77a;
  #L39e736.  v6:= v10.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L39e73a.  v7:= v5 + 1;
  #L39e73e.  v8:= (`long`) v7 @kind i2l;
  #L39e740.  call temp:= `request`(v6, v8) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L39e746.  v6:= temp;
  #L39e748.  if v6 != 0 then goto L39e74e;
  #L39e74c.  return v1;
  #L39e74e.  v6:= v10.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e752.  v8:= (`long`) v5 @kind i2l;
  #L39e754.  call temp:= `getByte`(v6, v8) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L39e75a.  v6:= temp;
  #L39e75c.  call temp:= `charAt`(v2, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L39e762.  v8:= temp;
  #L39e764.  if v6 == v8 then goto L39e776;
  #L39e768.  call temp:= `charAt`(v3, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L39e76e.  v5:= temp;
  #L39e770.  if v6 == v5 then goto L39e776;
  #L39e774.  return v1;
  #L39e776.  v5:= v7;
  #L39e778.  goto L39e732;
  #L39e77a.  v2:= v10.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L39e77e.  v3:= v4 + 1;
  #L39e782.  v5:= (`long`) v3 @kind i2l;
  #L39e784.  call temp:= `request`(v2, v5) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L39e78a.  v2:= temp;
  #L39e78c.  if v2 == 0 then goto L39e7ac;
  #L39e790.  v2:= v10.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e794.  v5:= (`long`) v4 @kind i2l;
  #L39e796.  call temp:= `getByte`(v2, v5) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L39e79c.  v2:= temp;
  #L39e79e.  call temp:= `h`(v10, v2) @signature `Lcom/airbnb/lottie/parser/moshi/d;.h:(I)Z` @kind direct;
  #L39e7a4.  v2:= temp;
  #L39e7a6.  if v2 == 0 then goto L39e7ac;
  #L39e7aa.  return v1;
  #L39e7ac.  v1:= v10.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e7b0.  v2:= (`long`) v4 @kind i2l;
  #L39e7b2.  call `skip`(v1, v2) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L39e7b8.  v10.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v0;
  #L39e7bc.  return v0;
}
procedure `int` `m`(`com.airbnb.lottie.parser.moshi.d` v16 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.m:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L39e7d0.  v0:= v16 @kind object;
  #L39e7d4.  v1:= 0L;
  #L39e7d8.  v3:= 1I;
  #L39e7da.  v4:= 0I;
  #L39e7dc.  v8:= v1 @kind wide;
  #L39e7de.  v5:= 0I;
  #L39e7e0.  v6:= 0I;
  #L39e7e2.  v7:= 1I;
  #L39e7e4.  v10:= 0I;
  #L39e7e6.  v11:= v0.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L39e7ea.  v12:= v5 + 1;
  #L39e7ee.  v13:= (`long`) v12 @kind i2l;
  #L39e7f0.  call temp:= `request`(v11, v13) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L39e7f6.  v11:= temp;
  #L39e7f8.  v15:= 2I;
  #L39e7fa.  if v11 != 0 then goto L39e802;
  #L39e7fe.  goto L39e8e2;
  #L39e802.  v11:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e806.  v13:= (`long`) v5 @kind i2l;
  #L39e808.  call temp:= `getByte`(v11, v13) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L39e80e.  v11:= temp;
  #L39e810.  v13:= 43I;
  #L39e814.  v14:= 5I;
  #L39e816.  if v11 == v13 then goto L39e982;
  #L39e81a.  v13:= 69I;
  #L39e81e.  if v11 == v13 then goto L39e970;
  #L39e822.  v13:= 101I;
  #L39e826.  if v11 == v13 then goto L39e970;
  #L39e82a.  v13:= 45I;
  #L39e82e.  if v11 == v13 then goto L39e95c;
  #L39e832.  v13:= 46I;
  #L39e836.  if v11 == v13 then goto L39e950;
  #L39e83a.  v13:= 48I;
  #L39e83e.  if v11 < v13 then goto L39e8d6;
  #L39e842.  v13:= 57I;
  #L39e846.  if v11 <= v13 then goto L39e84c;
  #L39e84a.  goto L39e8d6;
  #L39e84c.  if v6 == v3 then goto L39e8c8;
  #L39e850.  if v6 != 0 then goto L39e856;
  #L39e854.  goto L39e8c8;
  #L39e856.  if v6 != v15 then goto L39e8a0;
  #L39e85a.  v5:= lcmp(v8, v1);
  #L39e85e.  if v5 != 0 then goto L39e864;
  #L39e862.  return v4;
  #L39e864.  v13:= 10L;
  #L39e868.  v13:= v13 * v8 @kind long;
  #L39e86c.  v11:= v11 + -48;
  #L39e870.  v3:= (`long`) v11 @kind i2l;
  #L39e872.  v13:= v13 - v3 @kind long;
  #L39e874.  v3:= -922337203685477580L;
  #L39e87e.  v5:= lcmp(v8, v3);
  #L39e882.  if v5 > 0 then goto L39e898;
  #L39e886.  if v5 != 0 then goto L39e894;
  #L39e88a.  v3:= lcmp(v13, v8);
  #L39e88e.  if v3 >= 0 then goto L39e894;
  #L39e892.  goto L39e898;
  #L39e894.  v3:= 0I;
  #L39e896.  goto L39e89a;
  #L39e898.  v3:= 1I;
  #L39e89a.  v7:= v7 ^& v3 @kind int;
  #L39e89c.  v8:= v13 @kind wide;
  #L39e89e.  goto L39e8ba;
  #L39e8a0.  v3:= 3I;
  #L39e8a2.  if v6 != v3 then goto L39e8ae;
  #L39e8a6.  v4:= 0I;
  #L39e8a8.  v6:= 4I;
  #L39e8aa.  goto L39e98a;
  #L39e8ae.  if v6 == v14 then goto L39e8c0;
  #L39e8b2.  v3:= 6I;
  #L39e8b4.  if v6 != v3 then goto L39e8ba;
  #L39e8b8.  goto L39e8c0;
  #L39e8ba.  v4:= 0I;
  #L39e8bc.  goto L39e98a;
  #L39e8c0.  v4:= 0I;
  #L39e8c2.  v6:= 7I;
  #L39e8c4.  goto L39e98a;
  #L39e8c8.  v11:= v11 + -48;
  #L39e8cc.  v3:= -v11 @kind int;
  #L39e8ce.  v8:= (`long`) v3 @kind i2l;
  #L39e8d0.  v4:= 0I;
  #L39e8d2.  v6:= 2I;
  #L39e8d4.  goto L39e98a;
  #L39e8d6.  call temp:= `h`(v0, v11) @signature `Lcom/airbnb/lottie/parser/moshi/d;.h:(I)Z` @kind direct;
  #L39e8dc.  v3:= temp;
  #L39e8de.  if v3 != 0 then goto L39e94c;
  #L39e8e2.  if v6 != v15 then goto L39e928;
  #L39e8e6.  if v7 == 0 then goto L39e928;
  #L39e8ea.  v3:= -9223372036854775808L;
  #L39e8ee.  v7:= lcmp(v8, v3);
  #L39e8f2.  if v7 != 0 then goto L39e8fa;
  #L39e8f6.  if v10 == 0 then goto L39e928;
  #L39e8fa.  v3:= lcmp(v8, v1);
  #L39e8fe.  if v3 != 0 then goto L39e906;
  #L39e902.  if v10 != 0 then goto L39e928;
  #L39e906.  if v10 == 0 then goto L39e90c;
  #L39e90a.  goto L39e90e;
  #L39e90c.  v8:= -v8 @kind long;
  #L39e90e.  v0.`com.airbnb.lottie.parser.moshi.d.k` @type ^`long` := v8 @kind wide;
  #L39e912.  v1:= v0.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e916.  v2:= (`long`) v5 @kind i2l;
  #L39e918.  call `skip`(v1, v2) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L39e91e.  v1:= 16I;
  #L39e922.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L39e926.  return v1;
  #L39e928.  if v6 == v15 then goto L39e93e;
  #L39e92c.  v1:= 4I;
  #L39e92e.  if v6 == v1 then goto L39e93e;
  #L39e932.  v1:= 7I;
  #L39e934.  if v6 != v1 then goto L39e93a;
  #L39e938.  goto L39e93e;
  #L39e93a.  v4:= 0I;
  #L39e93c.  return v4;
  #L39e93e.  v0.`com.airbnb.lottie.parser.moshi.d.l` @type ^`int` := v5;
  #L39e942.  v1:= 17I;
  #L39e946.  v0.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L39e94a.  return v1;
  #L39e94c.  v4:= 0I;
  #L39e94e.  return v4;
  #L39e950.  v3:= 3I;
  #L39e952.  if v6 != v15 then goto L39e95a;
  #L39e956.  v6:= 3I;
  #L39e958.  goto L39e98a;
  #L39e95a.  return v4;
  #L39e95c.  v3:= 6I;
  #L39e95e.  if v6 != 0 then goto L39e968;
  #L39e962.  v6:= 1I;
  #L39e964.  v10:= 1I;
  #L39e966.  goto L39e98a;
  #L39e968.  if v6 != v14 then goto L39e96e;
  #L39e96c.  goto L39e988;
  #L39e96e.  return v4;
  #L39e970.  if v6 == v15 then goto L39e97e;
  #L39e974.  v3:= 4I;
  #L39e976.  if v6 != v3 then goto L39e97c;
  #L39e97a.  goto L39e97e;
  #L39e97c.  return v4;
  #L39e97e.  v6:= 5I;
  #L39e980.  goto L39e98a;
  #L39e982.  v3:= 6I;
  #L39e984.  if v6 != v14 then goto L39e992;
  #L39e988.  v6:= 6I;
  #L39e98a.  v5:= v12;
  #L39e98c.  v3:= 1I;
  #L39e98e.  goto L39e7e6;
  #L39e992.  return v4;
}
procedure `char` `n`(`com.airbnb.lottie.parser.moshi.d` v10 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.n:()C` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L39db18.  v0:= v10.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L39db1c.  v1:= 1L;
  #L39db20.  call temp:= `request`(v0, v1) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L39db26.  v0:= temp;
  #L39db28.  v1:= 0I;
  #L39db2a.  if v0 == 0 then goto L39dcdc;
  #L39db2e.  v0:= v10.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39db32.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L39db38.  v0:= temp;
  #L39db3a.  v2:= 10I;
  #L39db3e.  if v0 == v2 then goto L39dcd8;
  #L39db42.  v3:= 34I;
  #L39db46.  if v0 == v3 then goto L39dcd8;
  #L39db4a.  v3:= 39I;
  #L39db4e.  if v0 == v3 then goto L39dcd8;
  #L39db52.  v3:= 47I;
  #L39db56.  if v0 == v3 then goto L39dcd8;
  #L39db5a.  v3:= 92I;
  #L39db5e.  if v0 == v3 then goto L39dcd8;
  #L39db62.  v3:= 98I;
  #L39db66.  if v0 == v3 then goto L39dcd2;
  #L39db6a.  v3:= 102I;
  #L39db6e.  if v0 == v3 then goto L39dccc;
  #L39db72.  v4:= 110I;
  #L39db76.  if v0 == v4 then goto L39dcca;
  #L39db7a.  v4:= 114I;
  #L39db7e.  if v0 == v4 then goto L39dcc4;
  #L39db82.  v4:= 116I;
  #L39db86.  if v0 == v4 then goto L39dcbe;
  #L39db8a.  v4:= 117I;
  #L39db8e.  if v0 == v4 then goto L39dbca;
  #L39db92.  v2:= v10.`com.airbnb.lottie.parser.moshi.JsonReader.e` @type ^`boolean` @kind boolean;
  #L39db96.  if v2 == 0 then goto L39db9e;
  #L39db9a.  v0:= (`char`) v0 @kind i2c;
  #L39db9c.  return v0;
  #L39db9e.  v2:= new `java.lang.StringBuilder`;
  #L39dba2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39dba8.  v3:= "Invalid escape sequence: \\" @kind object;
  #L39dbac.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39dbb2.  v0:= (`char`) v0 @kind i2c;
  #L39dbb4.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L39dbba.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39dbc0.  v0:= temp @kind object;
  #L39dbc2.  call temp:= `d`(v10, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L39dbc8.  throw v1;
  #L39dbca.  v0:= v10.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L39dbce.  v4:= 4L;
  #L39dbd2.  call temp:= `request`(v0, v4) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L39dbd8.  v0:= temp;
  #L39dbda.  if v0 == 0 then goto L39dc88;
  #L39dbde.  v0:= 0I;
  #L39dbe0.  v6:= 0I;
  #L39dbe2.  v7:= 4I;
  #L39dbe4.  if v0 >= v7 then goto L39dc7c;
  #L39dbe8.  v7:= v10.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39dbec.  v8:= (`long`) v0 @kind i2l;
  #L39dbee.  call temp:= `getByte`(v7, v8) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L39dbf4.  v7:= temp;
  #L39dbf6.  v6:= v6 ^< 4;
  #L39dbfa.  v6:= (`char`) v6 @kind i2c;
  #L39dbfc.  v8:= 48I;
  #L39dc00.  if v7 < v8 then goto L39dc16;
  #L39dc04.  v8:= 57I;
  #L39dc08.  if v7 > v8 then goto L39dc16;
  #L39dc0c.  v7:= v7 + -48;
  #L39dc10.  v6:= v6 + v7 @kind int;
  #L39dc12.  v6:= (`char`) v6 @kind i2c;
  #L39dc14.  goto L39dc40;
  #L39dc16.  v8:= 97I;
  #L39dc1a.  if v7 < v8 then goto L39dc2a;
  #L39dc1e.  if v7 > v3 then goto L39dc2a;
  #L39dc22.  v7:= v7 + -97;
  #L39dc26.  v7:= v7 + v2 @kind int;
  #L39dc28.  goto L39dc10;
  #L39dc2a.  v8:= 65I;
  #L39dc2e.  if v7 < v8 then goto L39dc46;
  #L39dc32.  v8:= 70I;
  #L39dc36.  if v7 > v8 then goto L39dc46;
  #L39dc3a.  v7:= v7 + -65;
  #L39dc3e.  goto L39dc26;
  #L39dc40.  v0:= v0 + 1;
  #L39dc44.  goto L39dbe2;
  #L39dc46.  v0:= new `java.lang.StringBuilder`;
  #L39dc4a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39dc50.  v2:= "\\u" @kind object;
  #L39dc54.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39dc5a.  v2:= v10.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39dc5e.  call temp:= `readUtf8`(v2, v4) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L39dc64.  v2:= temp @kind object;
  #L39dc66.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39dc6c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39dc72.  v0:= temp @kind object;
  #L39dc74.  call temp:= `d`(v10, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L39dc7a.  throw v1;
  #L39dc7c.  v0:= v10.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39dc80.  call `skip`(v0, v4) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L39dc86.  return v6;
  #L39dc88.  v0:= new `java.io.EOFException`;
  #L39dc8c.  v1:= new `java.lang.StringBuilder`;
  #L39dc90.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39dc96.  v2:= "Unterminated escape sequence at path " @kind object;
  #L39dc9a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39dca0.  call temp:= `getPath`(v10) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39dca6.  v2:= temp @kind object;
  #L39dca8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39dcae.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39dcb4.  v1:= temp @kind object;
  #L39dcb6.  call `<init>`(v0, v1) @signature `Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39dcbc.  throw v0;
  #L39dcbe.  v0:= 9I;
  #L39dcc2.  return v0;
  #L39dcc4.  v0:= 13I;
  #L39dcc8.  return v0;
  #L39dcca.  return v2;
  #L39dccc.  v0:= 12I;
  #L39dcd0.  return v0;
  #L39dcd2.  v0:= 8I;
  #L39dcd6.  return v0;
  #L39dcd8.  v0:= (`char`) v0 @kind i2c;
  #L39dcda.  return v0;
  #L39dcdc.  v0:= "Unterminated escape sequence" @kind object;
  #L39dce0.  call temp:= `d`(v10, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L39dce6.  throw v1;
}
procedure `void` `o`(`com.airbnb.lottie.parser.moshi.d` v6 @kind this, `okio.ByteString` v7 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/d;.o:(Lokio/ByteString;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39f228.  v0:= v6.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L39f22c.  call temp:= `indexOfElement`(v0, v7) @signature `Lokio/BufferedSource;.indexOfElement:(Lokio/ByteString;)J` @kind interface;
  #L39f232.  v0:= temp @kind wide;
  #L39f234.  v2:= -1L;
  #L39f238.  v4:= lcmp(v0, v2);
  #L39f23c.  if v4 == 0 then goto L39f27a;
  #L39f240.  v2:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39f244.  call temp:= `getByte`(v2, v0) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L39f24a.  v2:= temp;
  #L39f24c.  v3:= 92I;
  #L39f250.  v4:= 1L;
  #L39f254.  if v2 != v3 then goto L39f26c;
  #L39f258.  v2:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39f25c.  v0:= v0 + v4 @kind long;
  #L39f25e.  call `skip`(v2, v0) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L39f264.  call temp:= `n`(v6) @signature `Lcom/airbnb/lottie/parser/moshi/d;.n:()C` @kind direct;
  #L39f26a.  goto L39f228;
  #L39f26c.  v7:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39f270.  v0:= v0 + v4 @kind long;
  #L39f272.  call `skip`(v7, v0) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L39f278.  return @kind void;
  #L39f27a.  v7:= "Unterminated string" @kind object;
  #L39f27e.  call temp:= `d`(v6, v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.d:(Ljava/lang/String;)Lcom/airbnb/lottie/parser/moshi/b;` @kind virtual;
  #L39f284.  v7:= 0I;
  #L39f286.  throw v7;
}
procedure `boolean` `p`(`com.airbnb.lottie.parser.moshi.d` v6 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.p:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39dabc.  v0:= v6.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L39dac0.  v1:= `@@com.airbnb.lottie.parser.moshi.d.r` @type ^`okio.ByteString` @kind object;
  #L39dac4.  call temp:= `indexOf`(v0, v1) @signature `Lokio/BufferedSource;.indexOf:(Lokio/ByteString;)J` @kind interface;
  #L39daca.  v0:= temp @kind wide;
  #L39dacc.  v2:= -1L;
  #L39dad0.  v4:= lcmp(v0, v2);
  #L39dad4.  if v4 == 0 then goto L39dadc;
  #L39dad8.  v2:= 1I;
  #L39dada.  goto L39dade;
  #L39dadc.  v2:= 0I;
  #L39dade.  v3:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39dae2.  if v2 == 0 then goto L39daf8;
  #L39dae6.  v4:= `@@com.airbnb.lottie.parser.moshi.d.r` @type ^`okio.ByteString` @kind object;
  #L39daea.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L39daf0.  v4:= temp;
  #L39daf2.  v4:= (`long`) v4 @kind i2l;
  #L39daf4.  v0:= v0 + v4 @kind long;
  #L39daf6.  goto L39db00;
  #L39daf8.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L39dafe.  v0:= temp @kind wide;
  #L39db00.  call `skip`(v3, v0) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L39db06.  return v2;
}
procedure `void` `q`(`com.airbnb.lottie.parser.moshi.d` v6 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.q:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39f298.  v0:= v6.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L39f29c.  v1:= `@@com.airbnb.lottie.parser.moshi.d.q` @type ^`okio.ByteString` @kind object;
  #L39f2a0.  call temp:= `indexOfElement`(v0, v1) @signature `Lokio/BufferedSource;.indexOfElement:(Lokio/ByteString;)J` @kind interface;
  #L39f2a6.  v0:= temp @kind wide;
  #L39f2a8.  v2:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39f2ac.  v3:= -1L;
  #L39f2b0.  v5:= lcmp(v0, v3);
  #L39f2b4.  if v5 == 0 then goto L39f2c0;
  #L39f2b8.  v3:= 1L;
  #L39f2bc.  v0:= v0 + v3 @kind long;
  #L39f2be.  goto L39f2c8;
  #L39f2c0.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L39f2c6.  v0:= temp @kind wide;
  #L39f2c8.  call `skip`(v2, v0) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L39f2ce.  return @kind void;
}
procedure `void` `r`(`com.airbnb.lottie.parser.moshi.d` v6 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.r:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39f2e0.  v0:= v6.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L39f2e4.  v1:= `@@com.airbnb.lottie.parser.moshi.d.p` @type ^`okio.ByteString` @kind object;
  #L39f2e8.  call temp:= `indexOfElement`(v0, v1) @signature `Lokio/BufferedSource;.indexOfElement:(Lokio/ByteString;)J` @kind interface;
  #L39f2ee.  v0:= temp @kind wide;
  #L39f2f0.  v2:= v6.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39f2f4.  v3:= -1L;
  #L39f2f8.  v5:= lcmp(v0, v3);
  #L39f2fc.  if v5 == 0 then goto L39f302;
  #L39f300.  goto L39f30a;
  #L39f302.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L39f308.  v0:= temp @kind wide;
  #L39f30a.  call `skip`(v2, v0) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L39f310.  return @kind void;
}
procedure `void` `beginArray`(`com.airbnb.lottie.parser.moshi.d` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.beginArray:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39ee44.  v0:= v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L39ee48.  if v0 != 0 then goto L39ee54;
  #L39ee4c.  call temp:= `f`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L39ee52.  v0:= temp;
  #L39ee54.  v1:= 3I;
  #L39ee56.  if v0 != v1 then goto L39ee78;
  #L39ee5a.  v0:= 1I;
  #L39ee5c.  call `b`(v3, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.b:(I)V` @kind virtual;
  #L39ee62.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L39ee66.  v2:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39ee6a.  v2:= v2 - v0 @kind int;
  #L39ee6c.  v0:= 0I;
  #L39ee6e.  v1[v2]:= v0;
  #L39ee72.  v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v0;
  #L39ee76.  return @kind void;
  #L39ee78.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39ee7c.  v1:= new `java.lang.StringBuilder`;
  #L39ee80.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39ee86.  v2:= "Expected BEGIN_ARRAY but was " @kind object;
  #L39ee8a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ee90.  call temp:= `peek`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39ee96.  v2:= temp @kind object;
  #L39ee98.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ee9e.  v2:= " at path " @kind object;
  #L39eea2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39eea8.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39eeae.  v2:= temp @kind object;
  #L39eeb0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39eeb6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39eebc.  v1:= temp @kind object;
  #L39eebe.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39eec4.  throw v0;
}
procedure `void` `beginObject`(`com.airbnb.lottie.parser.moshi.d` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.beginObject:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39eed8.  v0:= v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L39eedc.  if v0 != 0 then goto L39eee8;
  #L39eee0.  call temp:= `f`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L39eee6.  v0:= temp;
  #L39eee8.  v1:= 1I;
  #L39eeea.  if v0 != v1 then goto L39eefe;
  #L39eeee.  v0:= 3I;
  #L39eef0.  call `b`(v3, v0) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.b:(I)V` @kind virtual;
  #L39eef6.  v0:= 0I;
  #L39eef8.  v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v0;
  #L39eefc.  return @kind void;
  #L39eefe.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39ef02.  v1:= new `java.lang.StringBuilder`;
  #L39ef06.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39ef0c.  v2:= "Expected BEGIN_OBJECT but was " @kind object;
  #L39ef10.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ef16.  call temp:= `peek`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39ef1c.  v2:= temp @kind object;
  #L39ef1e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ef24.  v2:= " at path " @kind object;
  #L39ef28.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ef2e.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39ef34.  v2:= temp @kind object;
  #L39ef36.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ef3c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39ef42.  v1:= temp @kind object;
  #L39ef44.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39ef4a.  throw v0;
}
procedure `void` `close`(`com.airbnb.lottie.parser.moshi.d` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39ef84.  v0:= 0I;
  #L39ef86.  v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v0;
  #L39ef8a.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.b` @type ^`int`[] @kind object;
  #L39ef8e.  v2:= 8I;
  #L39ef92.  v1[v0]:= v2;
  #L39ef96.  v0:= 1I;
  #L39ef98.  v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int` := v0;
  #L39ef9c.  v0:= v3.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39efa0.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L39efa6.  v0:= v3.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L39efaa.  call `close`(v0) @signature `Lokio/Source;.close:()V` @kind interface;
  #L39efb0.  return @kind void;
}
procedure `void` `endArray`(`com.airbnb.lottie.parser.moshi.d` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.endArray:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39efc4.  v0:= v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L39efc8.  if v0 != 0 then goto L39efd4;
  #L39efcc.  call temp:= `f`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L39efd2.  v0:= temp;
  #L39efd4.  v1:= 4I;
  #L39efd6.  if v0 != v1 then goto L39f002;
  #L39efda.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39efde.  v0:= v0 + -1;
  #L39efe2.  v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int` := v0;
  #L39efe6.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L39efea.  v0:= v0 + -1;
  #L39efee.  v2:= v1[v0];
  #L39eff2.  v2:= v2 + 1;
  #L39eff6.  v1[v0]:= v2;
  #L39effa.  v0:= 0I;
  #L39effc.  v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v0;
  #L39f000.  return @kind void;
  #L39f002.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39f006.  v1:= new `java.lang.StringBuilder`;
  #L39f00a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39f010.  v2:= "Expected END_ARRAY but was " @kind object;
  #L39f014.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f01a.  call temp:= `peek`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39f020.  v2:= temp @kind object;
  #L39f022.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f028.  v2:= " at path " @kind object;
  #L39f02c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f032.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39f038.  v2:= temp @kind object;
  #L39f03a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f040.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39f046.  v1:= temp @kind object;
  #L39f048.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39f04e.  throw v0;
}
procedure `void` `endObject`(`com.airbnb.lottie.parser.moshi.d` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.endObject:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f060.  v0:= v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L39f064.  if v0 != 0 then goto L39f070;
  #L39f068.  call temp:= `f`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L39f06e.  v0:= temp;
  #L39f070.  v1:= 2I;
  #L39f072.  if v0 != v1 then goto L39f0a8;
  #L39f076.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39f07a.  v0:= v0 + -1;
  #L39f07e.  v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int` := v0;
  #L39f082.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] @kind object;
  #L39f086.  v2:= 0I;
  #L39f088.  v1[v0]:= v2 @kind object;
  #L39f08c.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L39f090.  v0:= v0 + -1;
  #L39f094.  v2:= v1[v0];
  #L39f098.  v2:= v2 + 1;
  #L39f09c.  v1[v0]:= v2;
  #L39f0a0.  v0:= 0I;
  #L39f0a2.  v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v0;
  #L39f0a6.  return @kind void;
  #L39f0a8.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39f0ac.  v1:= new `java.lang.StringBuilder`;
  #L39f0b0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39f0b6.  v2:= "Expected END_OBJECT but was " @kind object;
  #L39f0ba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f0c0.  call temp:= `peek`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39f0c6.  v2:= temp @kind object;
  #L39f0c8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f0ce.  v2:= " at path " @kind object;
  #L39f0d2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f0d8.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39f0de.  v2:= temp @kind object;
  #L39f0e0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f0e6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39f0ec.  v1:= temp @kind object;
  #L39f0ee.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39f0f4.  throw v0;
}
procedure `boolean` `hasNext`(`com.airbnb.lottie.parser.moshi.d` v2 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39d92c.  v0:= v2.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L39d930.  if v0 != 0 then goto L39d93c;
  #L39d934.  call temp:= `f`(v2) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L39d93a.  v0:= temp;
  #L39d93c.  v1:= 2I;
  #L39d93e.  if v0 == v1 then goto L39d954;
  #L39d942.  v1:= 4I;
  #L39d944.  if v0 == v1 then goto L39d954;
  #L39d948.  v1:= 18I;
  #L39d94c.  if v0 == v1 then goto L39d954;
  #L39d950.  v0:= 1I;
  #L39d952.  goto L39d956;
  #L39d954.  v0:= 0I;
  #L39d956.  return v0;
}
procedure `boolean` `nextBoolean`(`com.airbnb.lottie.parser.moshi.d` v5 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.nextBoolean:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L39da08.  v0:= v5.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L39da0c.  if v0 != 0 then goto L39da18;
  #L39da10.  call temp:= `f`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L39da16.  v0:= temp;
  #L39da18.  v1:= 5I;
  #L39da1a.  v2:= 0I;
  #L39da1c.  v3:= 1I;
  #L39da1e.  if v0 != v1 then goto L39da3c;
  #L39da22.  v5.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v2;
  #L39da26.  v0:= v5.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L39da2a.  v1:= v5.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39da2e.  v1:= v1 - v3 @kind int;
  #L39da30.  v2:= v0[v1];
  #L39da34.  v2:= v2 + v3 @kind int;
  #L39da36.  v0[v1]:= v2;
  #L39da3a.  return v3;
  #L39da3c.  v1:= 6I;
  #L39da3e.  if v0 != v1 then goto L39da5c;
  #L39da42.  v5.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v2;
  #L39da46.  v0:= v5.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L39da4a.  v1:= v5.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39da4e.  v1:= v1 - v3 @kind int;
  #L39da50.  v4:= v0[v1];
  #L39da54.  v4:= v4 + v3 @kind int;
  #L39da56.  v0[v1]:= v4;
  #L39da5a.  return v2;
  #L39da5c.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39da60.  v1:= new `java.lang.StringBuilder`;
  #L39da64.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39da6a.  v2:= "Expected a boolean but was " @kind object;
  #L39da6e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39da74.  call temp:= `peek`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39da7a.  v2:= temp @kind object;
  #L39da7c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39da82.  v2:= " at path " @kind object;
  #L39da86.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39da8c.  call temp:= `getPath`(v5) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39da92.  v2:= temp @kind object;
  #L39da94.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39da9a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39daa0.  v1:= temp @kind object;
  #L39daa2.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39daa8.  throw v0;
}
procedure `double` `nextDouble`(`com.airbnb.lottie.parser.moshi.d` v8 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.nextDouble:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L39ddb8.  v0:= v8.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L39ddbc.  if v0 != 0 then goto L39ddc8;
  #L39ddc0.  call temp:= `f`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L39ddc6.  v0:= temp;
  #L39ddc8.  v1:= 16I;
  #L39ddcc.  v2:= 0I;
  #L39ddce.  if v0 != v1 then goto L39ddf6;
  #L39ddd2.  v8.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v2;
  #L39ddd6.  v0:= v8.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L39ddda.  v1:= v8.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39ddde.  v1:= v1 + -1;
  #L39dde2.  v2:= v0[v1];
  #L39dde6.  v2:= v2 + 1;
  #L39ddea.  v0[v1]:= v2;
  #L39ddee.  v0:= v8.`com.airbnb.lottie.parser.moshi.d.k` @type ^`long` @kind wide;
  #L39ddf2.  v0:= (`double`) v0 @kind l2d;
  #L39ddf4.  return v0 @kind wide;
  #L39ddf6.  v1:= 17I;
  #L39ddfa.  v3:= "Expected a double but was " @kind object;
  #L39ddfe.  v4:= 11I;
  #L39de02.  v5:= " at path " @kind object;
  #L39de06.  if v0 != v1 then goto L39de22;
  #L39de0a.  v0:= v8.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39de0e.  v1:= v8.`com.airbnb.lottie.parser.moshi.d.l` @type ^`int`;
  #L39de12.  v6:= (`long`) v1 @kind i2l;
  #L39de14.  call temp:= `readUtf8`(v0, v6) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L39de1a.  v0:= temp @kind object;
  #L39de1c.  v8.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v0 @kind object;
  #L39de20.  goto L39de70;
  #L39de22.  v1:= 9I;
  #L39de26.  if v0 != v1 then goto L39de3c;
  #L39de2a.  v0:= `@@com.airbnb.lottie.parser.moshi.d.o` @type ^`okio.ByteString` @kind object;
  #L39de2e.  call temp:= `j`(v8, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.j:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L39de34.  v0:= temp @kind object;
  #L39de36.  v8.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v0 @kind object;
  #L39de3a.  goto L39de70;
  #L39de3c.  v1:= 8I;
  #L39de40.  if v0 != v1 then goto L39de56;
  #L39de44.  v0:= `@@com.airbnb.lottie.parser.moshi.d.n` @type ^`okio.ByteString` @kind object;
  #L39de48.  call temp:= `j`(v8, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.j:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L39de4e.  v0:= temp @kind object;
  #L39de50.  v8.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v0 @kind object;
  #L39de54.  goto L39de70;
  #L39de56.  v1:= 10I;
  #L39de5a.  if v0 != v1 then goto L39de6c;
  #L39de5e.  call temp:= `k`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/d;.k:()Ljava/lang/String;` @kind direct;
  #L39de64.  v0:= temp @kind object;
  #L39de66.  v8.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v0 @kind object;
  #L39de6a.  goto L39de70;
  #L39de6c.  if v0 != v4 then goto L39df4a;
  #L39de70.  v8.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v4;
  #L39de74.  v0:= v8.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` @kind object;
  #L39de78.  call temp:= `parseDouble`(v0) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L39de7e.  v0:= temp @kind wide;
  #L39de80.  v3:= v8.`com.airbnb.lottie.parser.moshi.JsonReader.e` @type ^`boolean` @kind boolean;
  #L39de84.  if v3 != 0 then goto L39dee4;
  #L39de88.  call temp:= `isNaN`(v0) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L39de8e.  v3:= temp;
  #L39de90.  if v3 != 0 then goto L39dea2;
  #L39de94.  call temp:= `isInfinite`(v0) @signature `Ljava/lang/Double;.isInfinite:(D)Z` @kind static;
  #L39de9a.  v3:= temp;
  #L39de9c.  if v3 != 0 then goto L39dea2;
  #L39dea0.  goto L39dee4;
  #L39dea2.  v2:= new `com.airbnb.lottie.parser.moshi.b`;
  #L39dea6.  v3:= new `java.lang.StringBuilder`;
  #L39deaa.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39deb0.  v4:= "JSON forbids NaN and infinities: " @kind object;
  #L39deb4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39deba.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L39dec0.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39dec6.  call temp:= `getPath`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39decc.  v0:= temp @kind object;
  #L39dece.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ded4.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39deda.  v0:= temp @kind object;
  #L39dedc.  call `<init>`(v2, v0) @signature `Lcom/airbnb/lottie/parser/moshi/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39dee2.  throw v2;
  #L39dee4.  v3:= 0I;
  #L39dee6.  v8.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v3 @kind object;
  #L39deea.  v8.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v2;
  #L39deee.  v2:= v8.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L39def2.  v3:= v8.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39def6.  v3:= v3 + -1;
  #L39defa.  v4:= v2[v3];
  #L39defe.  v4:= v4 + 1;
  #L39df02.  v2[v3]:= v4;
  #L39df06.  return v0 @kind wide;
  #L39df08.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39df0c.  v1:= new `java.lang.StringBuilder`;
  #L39df10.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39df16.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39df1c.  v2:= v8.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` @kind object;
  #L39df20.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39df26.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39df2c.  call temp:= `getPath`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39df32.  v2:= temp @kind object;
  #L39df34.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39df3a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39df40.  v1:= temp @kind object;
  #L39df42.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39df48.  throw v0;
  #L39df4a.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39df4e.  v1:= new `java.lang.StringBuilder`;
  #L39df52.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39df58.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39df5e.  call temp:= `peek`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39df64.  v2:= temp @kind object;
  #L39df66.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39df6c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39df72.  call temp:= `getPath`(v8) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39df78.  v2:= temp @kind object;
  #L39df7a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39df80.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39df86.  v1:= temp @kind object;
  #L39df88.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39df8e.  throw v0;
  catch `java.lang.NumberFormatException` @[L39de74..L39de80] goto L39df08;
}
procedure `int` `nextInt`(`com.airbnb.lottie.parser.moshi.d` v9 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.nextInt:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L39e344.  v0:= v9.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L39e348.  if v0 != 0 then goto L39e354;
  #L39e34c.  call temp:= `f`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L39e352.  v0:= temp;
  #L39e354.  v1:= 16I;
  #L39e358.  v2:= 0I;
  #L39e35a.  v3:= " at path " @kind object;
  #L39e35e.  v4:= "Expected an int but was " @kind object;
  #L39e362.  if v0 != v1 then goto L39e3d6;
  #L39e366.  v0:= v9.`com.airbnb.lottie.parser.moshi.d.k` @type ^`long` @kind wide;
  #L39e36a.  v5:= (`int`) v0 @kind l2i;
  #L39e36c.  v6:= (`long`) v5 @kind i2l;
  #L39e36e.  v8:= lcmp(v0, v6);
  #L39e372.  if v8 != 0 then goto L39e394;
  #L39e376.  v9.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v2;
  #L39e37a.  v0:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L39e37e.  v1:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39e382.  v1:= v1 + -1;
  #L39e386.  v2:= v0[v1];
  #L39e38a.  v2:= v2 + 1;
  #L39e38e.  v0[v1]:= v2;
  #L39e392.  return v5;
  #L39e394.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39e398.  v1:= new `java.lang.StringBuilder`;
  #L39e39c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39e3a2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e3a8.  v4:= v9.`com.airbnb.lottie.parser.moshi.d.k` @type ^`long` @kind wide;
  #L39e3ac.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e3b2.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e3b8.  call temp:= `getPath`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39e3be.  v2:= temp @kind object;
  #L39e3c0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e3c6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39e3cc.  v1:= temp @kind object;
  #L39e3ce.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39e3d4.  throw v0;
  #L39e3d6.  v1:= 17I;
  #L39e3da.  v5:= 11I;
  #L39e3de.  if v0 != v1 then goto L39e3fa;
  #L39e3e2.  v0:= v9.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39e3e6.  v1:= v9.`com.airbnb.lottie.parser.moshi.d.l` @type ^`int`;
  #L39e3ea.  v6:= (`long`) v1 @kind i2l;
  #L39e3ec.  call temp:= `readUtf8`(v0, v6) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L39e3f2.  v0:= temp @kind object;
  #L39e3f4.  v9.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v0 @kind object;
  #L39e3f8.  goto L39e4a0;
  #L39e3fa.  v1:= 9I;
  #L39e3fe.  if v0 == v1 then goto L39e458;
  #L39e402.  v6:= 8I;
  #L39e406.  if v0 != v6 then goto L39e40c;
  #L39e40a.  goto L39e458;
  #L39e40c.  if v0 != v5 then goto L39e412;
  #L39e410.  goto L39e4a0;
  #L39e412.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39e416.  v1:= new `java.lang.StringBuilder`;
  #L39e41a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39e420.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e426.  call temp:= `peek`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39e42c.  v2:= temp @kind object;
  #L39e42e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e434.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e43a.  call temp:= `getPath`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39e440.  v2:= temp @kind object;
  #L39e442.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e448.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39e44e.  v1:= temp @kind object;
  #L39e450.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39e456.  throw v0;
  #L39e458.  if v0 != v1 then goto L39e46a;
  #L39e45c.  v0:= `@@com.airbnb.lottie.parser.moshi.d.o` @type ^`okio.ByteString` @kind object;
  #L39e460.  call temp:= `j`(v9, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.j:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L39e466.  v0:= temp @kind object;
  #L39e468.  goto L39e476;
  #L39e46a.  v0:= `@@com.airbnb.lottie.parser.moshi.d.n` @type ^`okio.ByteString` @kind object;
  #L39e46e.  call temp:= `j`(v9, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.j:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L39e474.  v0:= temp @kind object;
  #L39e476.  v9.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v0 @kind object;
  #L39e47a.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L39e480.  v0:= temp;
  #L39e482.  v9.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v2;
  #L39e486.  v1:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L39e48a.  v6:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39e48e.  v6:= v6 + -1;
  #L39e492.  v7:= v1[v6];
  #L39e496.  v7:= v7 + 1;
  #L39e49a.  v1[v6]:= v7;
  #L39e49e.  return v0;
  #L39e4a0.  v9.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v5;
  #L39e4a4.  v0:= v9.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` @kind object;
  #L39e4a8.  call temp:= `parseDouble`(v0) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L39e4ae.  v0:= temp @kind wide;
  #L39e4b0.  v5:= (`int`) v0 @kind d2i;
  #L39e4b2.  v6:= (`double`) v5 @kind i2d;
  #L39e4b4.  v8:= dcmpl(v6, v0);
  #L39e4b8.  if v8 != 0 then goto L39e4e0;
  #L39e4bc.  v0:= 0I;
  #L39e4be.  v9.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v0 @kind object;
  #L39e4c2.  v9.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v2;
  #L39e4c6.  v0:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L39e4ca.  v1:= v9.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39e4ce.  v1:= v1 + -1;
  #L39e4d2.  v2:= v0[v1];
  #L39e4d6.  v2:= v2 + 1;
  #L39e4da.  v0[v1]:= v2;
  #L39e4de.  return v5;
  #L39e4e0.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39e4e4.  v1:= new `java.lang.StringBuilder`;
  #L39e4e8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39e4ee.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e4f4.  v2:= v9.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` @kind object;
  #L39e4f8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e4fe.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e504.  call temp:= `getPath`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39e50a.  v2:= temp @kind object;
  #L39e50c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e512.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39e518.  v1:= temp @kind object;
  #L39e51a.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39e520.  throw v0;
  #L39e522.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39e526.  v1:= new `java.lang.StringBuilder`;
  #L39e52a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39e530.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e536.  v2:= v9.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` @kind object;
  #L39e53a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e540.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e546.  call temp:= `getPath`(v9) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39e54c.  v2:= temp @kind object;
  #L39e54e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e554.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39e55a.  v1:= temp @kind object;
  #L39e55c.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39e562.  throw v0;
  catch `java.lang.NumberFormatException` @[L39e47a..L39e49e] goto L39e4a0;
  catch `java.lang.NumberFormatException` @[L39e4a4..L39e4b0] goto L39e522;
}
procedure `java.lang.String` `nextName`(`com.airbnb.lottie.parser.moshi.d` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.nextName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39ea60.  v0:= v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L39ea64.  if v0 != 0 then goto L39ea70;
  #L39ea68.  call temp:= `f`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L39ea6e.  v0:= temp;
  #L39ea70.  v1:= 14I;
  #L39ea74.  if v0 != v1 then goto L39ea82;
  #L39ea78.  call temp:= `k`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.k:()Ljava/lang/String;` @kind direct;
  #L39ea7e.  v0:= temp @kind object;
  #L39ea80.  goto L39eaba;
  #L39ea82.  v1:= 13I;
  #L39ea86.  if v0 != v1 then goto L39ea98;
  #L39ea8a.  v0:= `@@com.airbnb.lottie.parser.moshi.d.o` @type ^`okio.ByteString` @kind object;
  #L39ea8e.  call temp:= `j`(v3, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.j:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L39ea94.  v0:= temp @kind object;
  #L39ea96.  goto L39eaba;
  #L39ea98.  v1:= 12I;
  #L39ea9c.  if v0 != v1 then goto L39eaae;
  #L39eaa0.  v0:= `@@com.airbnb.lottie.parser.moshi.d.n` @type ^`okio.ByteString` @kind object;
  #L39eaa4.  call temp:= `j`(v3, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.j:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L39eaaa.  v0:= temp @kind object;
  #L39eaac.  goto L39eaba;
  #L39eaae.  v1:= 15I;
  #L39eab2.  if v0 != v1 then goto L39ead2;
  #L39eab6.  v0:= v3.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` @kind object;
  #L39eaba.  v1:= 0I;
  #L39eabc.  v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L39eac0.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] @kind object;
  #L39eac4.  v2:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39eac8.  v2:= v2 + -1;
  #L39eacc.  v1[v2]:= v0 @kind object;
  #L39ead0.  return v0 @kind object;
  #L39ead2.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39ead6.  v1:= new `java.lang.StringBuilder`;
  #L39eada.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39eae0.  v2:= "Expected a name but was " @kind object;
  #L39eae4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39eaea.  call temp:= `peek`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39eaf0.  v2:= temp @kind object;
  #L39eaf2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39eaf8.  v2:= " at path " @kind object;
  #L39eafc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39eb02.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39eb08.  v2:= temp @kind object;
  #L39eb0a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39eb10.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39eb16.  v1:= temp @kind object;
  #L39eb18.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39eb1e.  throw v0;
}
procedure `java.lang.String` `nextString`(`com.airbnb.lottie.parser.moshi.d` v4 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.nextString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39ebf8.  v0:= v4.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L39ebfc.  if v0 != 0 then goto L39ec08;
  #L39ec00.  call temp:= `f`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L39ec06.  v0:= temp;
  #L39ec08.  v1:= 10I;
  #L39ec0c.  if v0 != v1 then goto L39ec1a;
  #L39ec10.  call temp:= `k`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/d;.k:()Ljava/lang/String;` @kind direct;
  #L39ec16.  v0:= temp @kind object;
  #L39ec18.  goto L39ec8a;
  #L39ec1a.  v1:= 9I;
  #L39ec1e.  if v0 != v1 then goto L39ec30;
  #L39ec22.  v0:= `@@com.airbnb.lottie.parser.moshi.d.o` @type ^`okio.ByteString` @kind object;
  #L39ec26.  call temp:= `j`(v4, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.j:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L39ec2c.  v0:= temp @kind object;
  #L39ec2e.  goto L39ec8a;
  #L39ec30.  v1:= 8I;
  #L39ec34.  if v0 != v1 then goto L39ec46;
  #L39ec38.  v0:= `@@com.airbnb.lottie.parser.moshi.d.n` @type ^`okio.ByteString` @kind object;
  #L39ec3c.  call temp:= `j`(v4, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.j:(Lokio/ByteString;)Ljava/lang/String;` @kind direct;
  #L39ec42.  v0:= temp @kind object;
  #L39ec44.  goto L39ec8a;
  #L39ec46.  v1:= 11I;
  #L39ec4a.  if v0 != v1 then goto L39ec5a;
  #L39ec4e.  v0:= v4.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` @kind object;
  #L39ec52.  v1:= 0I;
  #L39ec54.  v4.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v1 @kind object;
  #L39ec58.  goto L39ec8a;
  #L39ec5a.  v1:= 16I;
  #L39ec5e.  if v0 != v1 then goto L39ec70;
  #L39ec62.  v0:= v4.`com.airbnb.lottie.parser.moshi.d.k` @type ^`long` @kind wide;
  #L39ec66.  call temp:= `toString`(v0) @signature `Ljava/lang/Long;.toString:(J)Ljava/lang/String;` @kind static;
  #L39ec6c.  v0:= temp @kind object;
  #L39ec6e.  goto L39ec8a;
  #L39ec70.  v1:= 17I;
  #L39ec74.  if v0 != v1 then goto L39ecaa;
  #L39ec78.  v0:= v4.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39ec7c.  v1:= v4.`com.airbnb.lottie.parser.moshi.d.l` @type ^`int`;
  #L39ec80.  v1:= (`long`) v1 @kind i2l;
  #L39ec82.  call temp:= `readUtf8`(v0, v1) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L39ec88.  v0:= temp @kind object;
  #L39ec8a.  v1:= 0I;
  #L39ec8c.  v4.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L39ec90.  v1:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L39ec94.  v2:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39ec98.  v2:= v2 + -1;
  #L39ec9c.  v3:= v1[v2];
  #L39eca0.  v3:= v3 + 1;
  #L39eca4.  v1[v2]:= v3;
  #L39eca8.  return v0 @kind object;
  #L39ecaa.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39ecae.  v1:= new `java.lang.StringBuilder`;
  #L39ecb2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39ecb8.  v2:= "Expected a string but was " @kind object;
  #L39ecbc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ecc2.  call temp:= `peek`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39ecc8.  v2:= temp @kind object;
  #L39ecca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ecd0.  v2:= " at path " @kind object;
  #L39ecd4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ecda.  call temp:= `getPath`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39ece0.  v2:= temp @kind object;
  #L39ece2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ece8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39ecee.  v1:= temp @kind object;
  #L39ecf0.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39ecf6.  throw v0;
}
procedure `com.airbnb.lottie.parser.moshi.JsonReader$Token` `peek`(`com.airbnb.lottie.parser.moshi.d` v1 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39dcf8.  v0:= v1.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L39dcfc.  if v0 != 0 then goto L39dd08;
  #L39dd00.  call temp:= `f`(v1) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L39dd06.  v0:= temp;
  #L39dd08.  goto L39dd58;
  #L39dd0e.  v0:= new `java.lang.AssertionError`;
  #L39dd12.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L39dd18.  throw v0;
  #L39dd1a.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.END_DOCUMENT` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39dd1e.  return v0 @kind object;
  #L39dd20.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.NUMBER` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39dd24.  return v0 @kind object;
  #L39dd26.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.NAME` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39dd2a.  return v0 @kind object;
  #L39dd2c.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.STRING` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39dd30.  return v0 @kind object;
  #L39dd32.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.NULL` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39dd36.  return v0 @kind object;
  #L39dd38.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BOOLEAN` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39dd3c.  return v0 @kind object;
  #L39dd3e.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.END_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39dd42.  return v0 @kind object;
  #L39dd44.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_ARRAY` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39dd48.  return v0 @kind object;
  #L39dd4a.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.END_OBJECT` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39dd4e.  return v0 @kind object;
  #L39dd50.  v0:= `@@com.airbnb.lottie.parser.moshi.JsonReader$Token.BEGIN_OBJECT` @type ^`com.airbnb.lottie.parser.moshi.JsonReader$Token` @kind object;
  #L39dd54.  return v0 @kind object;
  #L39dd56.  
  #L39dd58.  switch v0
                  | 1 => goto L39dd50
                  | 2 => goto L39dd4a
                  | 3 => goto L39dd44
                  | 4 => goto L39dd3e
                  | 5 => goto L39dd38
                  | 6 => goto L39dd38
                  | 7 => goto L39dd32
                  | 8 => goto L39dd2c
                  | 9 => goto L39dd2c
                  | 10 => goto L39dd2c
                  | 11 => goto L39dd2c
                  | 12 => goto L39dd26
                  | 13 => goto L39dd26
                  | 14 => goto L39dd26
                  | 15 => goto L39dd26
                  | 16 => goto L39dd20
                  | 17 => goto L39dd20
                  | 18 => goto L39dd1a
                  | else => goto L39dd0e;
}
procedure `int` `selectName`(`com.airbnb.lottie.parser.moshi.d` v4 @kind this, `com.airbnb.lottie.parser.moshi.JsonReader$Options` v5 @kind object) @signature `Lcom/airbnb/lottie/parser/moshi/d;.selectName:(Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39e9a4.  v0:= v4.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L39e9a8.  if v0 != 0 then goto L39e9b4;
  #L39e9ac.  call temp:= `f`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L39e9b2.  v0:= temp;
  #L39e9b4.  v1:= 12I;
  #L39e9b8.  v2:= -1I;
  #L39e9ba.  if v0 < v1 then goto L39ea4c;
  #L39e9be.  v1:= 15I;
  #L39e9c2.  if v0 <= v1 then goto L39e9c8;
  #L39e9c6.  goto L39ea4c;
  #L39e9c8.  if v0 != v1 then goto L39e9da;
  #L39e9cc.  v0:= v4.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` @kind object;
  #L39e9d0.  call temp:= `g`(v4, v0, v5) @signature `Lcom/airbnb/lottie/parser/moshi/d;.g:(Ljava/lang/String;Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind direct;
  #L39e9d6.  v5:= temp;
  #L39e9d8.  return v5;
  #L39e9da.  v0:= v4.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L39e9de.  v3:= v5.`com.airbnb.lottie.parser.moshi.JsonReader$Options.b` @type ^`okio.Options` @kind object;
  #L39e9e2.  call temp:= `select`(v0, v3) @signature `Lokio/BufferedSource;.select:(Lokio/Options;)I` @kind interface;
  #L39e9e8.  v0:= temp;
  #L39e9ea.  if v0 == v2 then goto L39ea0e;
  #L39e9ee.  v1:= 0I;
  #L39e9f0.  v4.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L39e9f4.  v1:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] @kind object;
  #L39e9f8.  v2:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39e9fc.  v2:= v2 + -1;
  #L39ea00.  v5:= v5.`com.airbnb.lottie.parser.moshi.JsonReader$Options.a` @type ^`java.lang.String`[] @kind object;
  #L39ea04.  v5:= v5[v0] @kind object;
  #L39ea08.  v1[v2]:= v5 @kind object;
  #L39ea0c.  return v0;
  #L39ea0e.  v0:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] @kind object;
  #L39ea12.  v3:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39ea16.  v3:= v3 + -1;
  #L39ea1a.  v0:= v0[v3] @kind object;
  #L39ea1e.  call temp:= `nextName`(v4) @signature `Lcom/airbnb/lottie/parser/moshi/d;.nextName:()Ljava/lang/String;` @kind virtual;
  #L39ea24.  v3:= temp @kind object;
  #L39ea26.  call temp:= `g`(v4, v3, v5) @signature `Lcom/airbnb/lottie/parser/moshi/d;.g:(Ljava/lang/String;Lcom/airbnb/lottie/parser/moshi/JsonReader$Options;)I` @kind direct;
  #L39ea2c.  v5:= temp;
  #L39ea2e.  if v5 != v2 then goto L39ea4a;
  #L39ea32.  v4.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v1;
  #L39ea36.  v4.`com.airbnb.lottie.parser.moshi.d.m` @type ^`java.lang.String` := v3 @kind object;
  #L39ea3a.  v1:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] @kind object;
  #L39ea3e.  v2:= v4.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39ea42.  v2:= v2 + -1;
  #L39ea46.  v1[v2]:= v0 @kind object;
  #L39ea4a.  return v5;
  #L39ea4c.  return v2;
}
procedure `void` `skipName`(`com.airbnb.lottie.parser.moshi.d` v3 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.skipName:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f108.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`boolean` @kind boolean;
  #L39f10c.  if v0 != 0 then goto L39f1ca;
  #L39f110.  v0:= v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L39f114.  if v0 != 0 then goto L39f120;
  #L39f118.  call temp:= `f`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L39f11e.  v0:= temp;
  #L39f120.  v1:= 14I;
  #L39f124.  if v0 != v1 then goto L39f130;
  #L39f128.  call `r`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.r:()V` @kind direct;
  #L39f12e.  goto L39f160;
  #L39f130.  v1:= 13I;
  #L39f134.  if v0 != v1 then goto L39f144;
  #L39f138.  v0:= `@@com.airbnb.lottie.parser.moshi.d.o` @type ^`okio.ByteString` @kind object;
  #L39f13c.  call `o`(v3, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.o:(Lokio/ByteString;)V` @kind direct;
  #L39f142.  goto L39f160;
  #L39f144.  v1:= 12I;
  #L39f148.  if v0 != v1 then goto L39f158;
  #L39f14c.  v0:= `@@com.airbnb.lottie.parser.moshi.d.n` @type ^`okio.ByteString` @kind object;
  #L39f150.  call `o`(v3, v0) @signature `Lcom/airbnb/lottie/parser/moshi/d;.o:(Lokio/ByteString;)V` @kind direct;
  #L39f156.  goto L39f160;
  #L39f158.  v1:= 15I;
  #L39f15c.  if v0 != v1 then goto L39f17c;
  #L39f160.  v0:= 0I;
  #L39f162.  v3.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v0;
  #L39f166.  v0:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] @kind object;
  #L39f16a.  v1:= v3.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39f16e.  v1:= v1 + -1;
  #L39f172.  v2:= "null" @kind object;
  #L39f176.  v0[v1]:= v2 @kind object;
  #L39f17a.  return @kind void;
  #L39f17c.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39f180.  v1:= new `java.lang.StringBuilder`;
  #L39f184.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39f18a.  v2:= "Expected a name but was " @kind object;
  #L39f18e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f194.  call temp:= `peek`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39f19a.  v2:= temp @kind object;
  #L39f19c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f1a2.  v2:= " at path " @kind object;
  #L39f1a6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f1ac.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39f1b2.  v2:= temp @kind object;
  #L39f1b4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f1ba.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39f1c0.  v1:= temp @kind object;
  #L39f1c2.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39f1c8.  throw v0;
  #L39f1ca.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39f1ce.  v1:= new `java.lang.StringBuilder`;
  #L39f1d2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39f1d8.  v2:= "Cannot skip unexpected " @kind object;
  #L39f1dc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f1e2.  call temp:= `peek`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39f1e8.  v2:= temp @kind object;
  #L39f1ea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f1f0.  v2:= " at " @kind object;
  #L39f1f4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f1fa.  call temp:= `getPath`(v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39f200.  v2:= temp @kind object;
  #L39f202.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f208.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39f20e.  v1:= temp @kind object;
  #L39f210.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39f216.  throw v0;
}
procedure `void` `skipValue`(`com.airbnb.lottie.parser.moshi.d` v7 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.skipValue:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L39f324.  v0:= v7.`com.airbnb.lottie.parser.moshi.JsonReader.f` @type ^`boolean` @kind boolean;
  #L39f328.  if v0 != 0 then goto L39f51a;
  #L39f32c.  v0:= 0I;
  #L39f32e.  v1:= 0I;
  #L39f330.  v2:= v7.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int`;
  #L39f334.  if v2 != 0 then goto L39f340;
  #L39f338.  call temp:= `f`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.f:()I` @kind direct;
  #L39f33e.  v2:= temp;
  #L39f340.  v3:= 3I;
  #L39f342.  v4:= 1I;
  #L39f344.  if v2 != v3 then goto L39f356;
  #L39f348.  call `b`(v7, v4) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.b:(I)V` @kind virtual;
  #L39f34e.  v1:= v1 + 1;
  #L39f352.  goto L39f4ec;
  #L39f356.  if v2 != v4 then goto L39f362;
  #L39f35a.  call `b`(v7, v3) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.b:(I)V` @kind virtual;
  #L39f360.  goto L39f34e;
  #L39f362.  v3:= 4I;
  #L39f364.  v5:= " at path " @kind object;
  #L39f368.  v6:= "Expected a value but was " @kind object;
  #L39f36c.  if v2 != v3 then goto L39f3cc;
  #L39f370.  v1:= v1 + -1;
  #L39f374.  if v1 < 0 then goto L39f386;
  #L39f378.  v2:= v7.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39f37c.  v2:= v2 - v4 @kind int;
  #L39f37e.  v7.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int` := v2;
  #L39f382.  goto L39f4ec;
  #L39f386.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39f38a.  v1:= new `java.lang.StringBuilder`;
  #L39f38e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39f394.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f39a.  call temp:= `peek`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39f3a0.  v2:= temp @kind object;
  #L39f3a2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f3a8.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f3ae.  call temp:= `getPath`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39f3b4.  v2:= temp @kind object;
  #L39f3b6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f3bc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39f3c2.  v1:= temp @kind object;
  #L39f3c4.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39f3ca.  throw v0;
  #L39f3cc.  v3:= 2I;
  #L39f3ce.  if v2 != v3 then goto L39f42e;
  #L39f3d2.  v1:= v1 + -1;
  #L39f3d6.  if v1 < 0 then goto L39f3e8;
  #L39f3da.  v2:= v7.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39f3de.  v2:= v2 - v4 @kind int;
  #L39f3e0.  v7.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int` := v2;
  #L39f3e4.  goto L39f4ec;
  #L39f3e8.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39f3ec.  v1:= new `java.lang.StringBuilder`;
  #L39f3f0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39f3f6.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f3fc.  call temp:= `peek`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39f402.  v2:= temp @kind object;
  #L39f404.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f40a.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f410.  call temp:= `getPath`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39f416.  v2:= temp @kind object;
  #L39f418.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f41e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39f424.  v1:= temp @kind object;
  #L39f426.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39f42c.  throw v0;
  #L39f42e.  v3:= 14I;
  #L39f432.  if v2 == v3 then goto L39f4e6;
  #L39f436.  v3:= 10I;
  #L39f43a.  if v2 != v3 then goto L39f440;
  #L39f43e.  goto L39f4e6;
  #L39f440.  v3:= 9I;
  #L39f444.  if v2 == v3 then goto L39f4da;
  #L39f448.  v3:= 13I;
  #L39f44c.  if v2 != v3 then goto L39f452;
  #L39f450.  goto L39f4da;
  #L39f452.  v3:= 8I;
  #L39f456.  if v2 == v3 then goto L39f4ce;
  #L39f45a.  v3:= 12I;
  #L39f45e.  if v2 != v3 then goto L39f464;
  #L39f462.  goto L39f4ce;
  #L39f464.  v3:= 17I;
  #L39f468.  if v2 != v3 then goto L39f47e;
  #L39f46c.  v2:= v7.`com.airbnb.lottie.parser.moshi.d.i` @type ^`okio.Buffer` @kind object;
  #L39f470.  v3:= v7.`com.airbnb.lottie.parser.moshi.d.l` @type ^`int`;
  #L39f474.  v5:= (`long`) v3 @kind i2l;
  #L39f476.  call `skip`(v2, v5) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L39f47c.  goto L39f4ec;
  #L39f47e.  v3:= 18I;
  #L39f482.  if v2 == v3 then goto L39f488;
  #L39f486.  goto L39f4ec;
  #L39f488.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39f48c.  v1:= new `java.lang.StringBuilder`;
  #L39f490.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39f496.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f49c.  call temp:= `peek`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39f4a2.  v2:= temp @kind object;
  #L39f4a4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f4aa.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f4b0.  call temp:= `getPath`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39f4b6.  v2:= temp @kind object;
  #L39f4b8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f4be.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39f4c4.  v1:= temp @kind object;
  #L39f4c6.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39f4cc.  throw v0;
  #L39f4ce.  v2:= `@@com.airbnb.lottie.parser.moshi.d.n` @type ^`okio.ByteString` @kind object;
  #L39f4d2.  call `o`(v7, v2) @signature `Lcom/airbnb/lottie/parser/moshi/d;.o:(Lokio/ByteString;)V` @kind direct;
  #L39f4d8.  goto L39f4ec;
  #L39f4da.  v2:= `@@com.airbnb.lottie.parser.moshi.d.o` @type ^`okio.ByteString` @kind object;
  #L39f4de.  call `o`(v7, v2) @signature `Lcom/airbnb/lottie/parser/moshi/d;.o:(Lokio/ByteString;)V` @kind direct;
  #L39f4e4.  goto L39f4ec;
  #L39f4e6.  call `r`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.r:()V` @kind direct;
  #L39f4ec.  v7.`com.airbnb.lottie.parser.moshi.d.j` @type ^`int` := v0;
  #L39f4f0.  if v1 != 0 then goto L39f330;
  #L39f4f4.  v0:= v7.`com.airbnb.lottie.parser.moshi.JsonReader.d` @type ^`int`[] @kind object;
  #L39f4f8.  v1:= v7.`com.airbnb.lottie.parser.moshi.JsonReader.a` @type ^`int`;
  #L39f4fc.  v2:= v1 + -1;
  #L39f500.  v3:= v0[v2];
  #L39f504.  v3:= v3 + v4 @kind int;
  #L39f506.  v0[v2]:= v3;
  #L39f50a.  v0:= v7.`com.airbnb.lottie.parser.moshi.JsonReader.c` @type ^`java.lang.String`[] @kind object;
  #L39f50e.  v1:= v1 - v4 @kind int;
  #L39f510.  v2:= "null" @kind object;
  #L39f514.  v0[v1]:= v2 @kind object;
  #L39f518.  return @kind void;
  #L39f51a.  v0:= new `com.airbnb.lottie.parser.moshi.a`;
  #L39f51e.  v1:= new `java.lang.StringBuilder`;
  #L39f522.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39f528.  v2:= "Cannot skip unexpected " @kind object;
  #L39f52c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f532.  call temp:= `peek`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/d;.peek:()Lcom/airbnb/lottie/parser/moshi/JsonReader$Token;` @kind virtual;
  #L39f538.  v2:= temp @kind object;
  #L39f53a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f540.  v2:= " at " @kind object;
  #L39f544.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f54a.  call temp:= `getPath`(v7) @signature `Lcom/airbnb/lottie/parser/moshi/JsonReader;.getPath:()Ljava/lang/String;` @kind virtual;
  #L39f550.  v2:= temp @kind object;
  #L39f552.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f558.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39f55e.  v1:= temp @kind object;
  #L39f560.  call `<init>`(v0, v1) @signature `Lcom/airbnb/lottie/parser/moshi/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39f566.  throw v0;
}
procedure `java.lang.String` `toString`(`com.airbnb.lottie.parser.moshi.d` v2 @kind this) @signature `Lcom/airbnb/lottie/parser/moshi/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39ed50.  v0:= new `java.lang.StringBuilder`;
  #L39ed54.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39ed5a.  v1:= "JsonReader(" @kind object;
  #L39ed5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ed64.  v1:= v2.`com.airbnb.lottie.parser.moshi.d.h` @type ^`okio.BufferedSource` @kind object;
  #L39ed68.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ed6e.  v1:= ")" @kind object;
  #L39ed72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ed78.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39ed7e.  v0:= temp @kind object;
  #L39ed80.  return v0 @kind object;
}
