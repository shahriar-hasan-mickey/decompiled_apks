record `com.airbnb.lottie.LottieTask$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.airbnb.lottie.LottieTask` `com.airbnb.lottie.LottieTask$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.airbnb.lottie.LottieTask$a` v0 @kind this, `com.airbnb.lottie.LottieTask` v1 @kind object) @signature `Lcom/airbnb/lottie/LottieTask$a;.<init>:(Lcom/airbnb/lottie/LottieTask;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L389984.  v0.`com.airbnb.lottie.LottieTask$a.a` @type ^`com.airbnb.lottie.LottieTask` := v1 @kind object;
  #L389988.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38998e.  return @kind void;
}
procedure `void` `run`(`com.airbnb.lottie.LottieTask$a` v2 @kind this) @signature `Lcom/airbnb/lottie/LottieTask$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3899a0.  v0:= v2.`com.airbnb.lottie.LottieTask$a.a` @type ^`com.airbnb.lottie.LottieTask` @kind object;
  #L3899a4.  call temp:= `a`(v0) @signature `Lcom/airbnb/lottie/LottieTask;.a:(Lcom/airbnb/lottie/LottieTask;)Lcom/airbnb/lottie/LottieResult;` @kind static;
  #L3899aa.  v0:= temp @kind object;
  #L3899ac.  if v0 != 0 then goto L3899b2;
  #L3899b0.  return @kind void;
  #L3899b2.  v0:= v2.`com.airbnb.lottie.LottieTask$a.a` @type ^`com.airbnb.lottie.LottieTask` @kind object;
  #L3899b6.  call temp:= `a`(v0) @signature `Lcom/airbnb/lottie/LottieTask;.a:(Lcom/airbnb/lottie/LottieTask;)Lcom/airbnb/lottie/LottieResult;` @kind static;
  #L3899bc.  v0:= temp @kind object;
  #L3899be.  call temp:= `getValue`(v0) @signature `Lcom/airbnb/lottie/LottieResult;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L3899c4.  v1:= temp @kind object;
  #L3899c6.  if v1 == 0 then goto L3899de;
  #L3899ca.  v1:= v2.`com.airbnb.lottie.LottieTask$a.a` @type ^`com.airbnb.lottie.LottieTask` @kind object;
  #L3899ce.  call temp:= `getValue`(v0) @signature `Lcom/airbnb/lottie/LottieResult;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L3899d4.  v0:= temp @kind object;
  #L3899d6.  call `b`(v1, v0) @signature `Lcom/airbnb/lottie/LottieTask;.b:(Lcom/airbnb/lottie/LottieTask;Ljava/lang/Object;)V` @kind static;
  #L3899dc.  goto L3899f0;
  #L3899de.  v1:= v2.`com.airbnb.lottie.LottieTask$a.a` @type ^`com.airbnb.lottie.LottieTask` @kind object;
  #L3899e2.  call temp:= `getException`(v0) @signature `Lcom/airbnb/lottie/LottieResult;.getException:()Ljava/lang/Throwable;` @kind virtual;
  #L3899e8.  v0:= temp @kind object;
  #L3899ea.  call `c`(v1, v0) @signature `Lcom/airbnb/lottie/LottieTask;.c:(Lcom/airbnb/lottie/LottieTask;Ljava/lang/Throwable;)V` @kind static;
  #L3899f0.  return @kind void;
}
