record `com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` @kind class @AccessFlag PUBLIC_FINAL extends `com.airbnb.paris.typed_array_wrappers.TypedArrayWrapper` @kind class {
  `kotlin.Lazy` `com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.b` @AccessFlag PRIVATE_FINAL;
  `kotlin.Lazy` `com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `java.util.List` v2 @kind object, `int`[] v3 @kind object) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.<init>:(Ljava/util/List;[I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3aaf9c.  v0:= "wrappers" @kind object;
  #L3aafa0.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3aafa6.  v0:= "styleableAttrs" @kind object;
  #L3aafaa.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3aafb0.  call `<init>`(v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.<init>:()V` @kind direct;
  #L3aafb6.  v1.`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.d` @type ^`java.util.List` := v2 @kind object;
  #L3aafba.  v2:= new `com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper$b`;
  #L3aafbe.  call `<init>`(v2, v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper$b;.<init>:(Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;)V` @kind direct;
  #L3aafc4.  call temp:= `lazy`(v2) @signature `Lkotlin/LazyKt;.lazy:(Lkotlin/jvm/functions/Function0;)Lkotlin/Lazy;` @kind static;
  #L3aafca.  v2:= temp @kind object;
  #L3aafcc.  v1.`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.b` @type ^`kotlin.Lazy` := v2 @kind object;
  #L3aafd0.  v2:= new `com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper$a`;
  #L3aafd4.  call `<init>`(v2, v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper$a;.<init>:(Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;)V` @kind direct;
  #L3aafda.  call temp:= `lazy`(v2) @signature `Lkotlin/LazyKt;.lazy:(Lkotlin/jvm/functions/Function0;)Lkotlin/Lazy;` @kind static;
  #L3aafe0.  v2:= temp @kind object;
  #L3aafe2.  v1.`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.c` @type ^`kotlin.Lazy` := v2 @kind object;
  #L3aafe6.  return @kind void;
}
procedure `java.util.HashMap` `a`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.a:()Ljava/util/HashMap;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L3aaf04.  v0:= v1.`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.c` @type ^`kotlin.Lazy` @kind object;
  #L3aaf08.  call temp:= `getValue`(v0) @signature `Lkotlin/Lazy;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3aaf0e.  v0:= temp @kind object;
  #L3aaf10.  v0:= (`java.util.HashMap`) v0 @kind object;
  #L3aaf14.  return v0 @kind object;
}
procedure `java.util.HashMap` `access$getStyleableAttrIndexToWrapperMap$p`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v0 @kind object) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.access$getStyleableAttrIndexToWrapperMap$p:(Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;)Ljava/util/HashMap;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L3aaee8.  call temp:= `a`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.a:()Ljava/util/HashMap;` @kind direct;
  #L3aaeee.  v0:= temp @kind object;
  #L3aaef0.  return v0 @kind object;
}
procedure `java.util.List` `access$getWrappers$p`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v0 @kind object) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.access$getWrappers$p:(Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L3aaf28.  v0:= v0.`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.d` @type ^`java.util.List` @kind object;
  #L3aaf2c.  return v0 @kind object;
}
procedure `java.util.List` `b`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.b:()Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L3aaf40.  v0:= v1.`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.b` @type ^`kotlin.Lazy` @kind object;
  #L3aaf44.  call temp:= `getValue`(v0) @signature `Lkotlin/Lazy;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3aaf4a.  v0:= temp @kind object;
  #L3aaf4c.  v0:= (`java.util.List`) v0 @kind object;
  #L3aaf50.  return v0 @kind object;
}
procedure `com.airbnb.paris.typed_array_wrappers.TypedArrayWrapper` `c`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @AccessFlag PRIVATE_FINAL {
    temp;

  #L3aacfc.  call temp:= `d`(v0, v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.d:(I)Ljava/util/List;` @kind direct;
  #L3aad02.  v1:= temp @kind object;
  #L3aad04.  call temp:= `last`(v1) @signature `Lkotlin/collections/CollectionsKt;.last:(Ljava/util/List;)Ljava/lang/Object;` @kind static;
  #L3aad0a.  v1:= temp @kind object;
  #L3aad0c.  v1:= (`com.airbnb.paris.typed_array_wrappers.TypedArrayWrapper`) v1 @kind object;
  #L3aad10.  return v1 @kind object;
}
procedure `java.util.List` `d`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.d:(I)Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L3aaf64.  call temp:= `a`(v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.a:()Ljava/util/HashMap;` @kind direct;
  #L3aaf6a.  v0:= temp @kind object;
  #L3aaf6c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3aaf72.  v2:= temp @kind object;
  #L3aaf74.  call temp:= `get`(v0, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3aaf7a.  v2:= temp @kind object;
  #L3aaf7c.  if v2 != 0 then goto L3aaf86;
  #L3aaf80.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L3aaf86.  v2:= (`java.util.List`) v2 @kind object;
  #L3aaf8a.  return v2 @kind object;
}
procedure `boolean` `getBoolean`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getBoolean:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aac34.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3aac3a.  v0:= temp @kind object;
  #L3aac3c.  call temp:= `getBoolean`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getBoolean:(I)Z` @kind virtual;
  #L3aac42.  v2:= temp;
  #L3aac44.  return v2;
}
procedure `int` `getColor`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getColor:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aad6c.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3aad72.  v0:= temp @kind object;
  #L3aad74.  call temp:= `getColor`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getColor:(I)I` @kind virtual;
  #L3aad7a.  v2:= temp;
  #L3aad7c.  return v2;
}
procedure `android.content.res.ColorStateList` `getColorStateList`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getColorStateList:(I)Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aabc8.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3aabce.  v0:= temp @kind object;
  #L3aabd0.  call temp:= `getColorStateList`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getColorStateList:(I)Landroid/content/res/ColorStateList;` @kind virtual;
  #L3aabd6.  v2:= temp @kind object;
  #L3aabd8.  return v2 @kind object;
}
procedure `int` `getDimensionPixelSize`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getDimensionPixelSize:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aad90.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3aad96.  v0:= temp @kind object;
  #L3aad98.  call temp:= `getDimensionPixelSize`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getDimensionPixelSize:(I)I` @kind virtual;
  #L3aad9e.  v2:= temp;
  #L3aada0.  return v2;
}
procedure `android.graphics.drawable.Drawable` `getDrawable`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getDrawable:(I)Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aac10.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3aac16.  v0:= temp @kind object;
  #L3aac18.  call temp:= `getDrawable`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getDrawable:(I)Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L3aac1e.  v2:= temp @kind object;
  #L3aac20.  return v2 @kind object;
}
procedure `float` `getFloat`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getFloat:(I)F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aad24.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3aad2a.  v0:= temp @kind object;
  #L3aad2c.  call temp:= `getFloat`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getFloat:(I)F` @kind virtual;
  #L3aad32.  v2:= temp;
  #L3aad34.  return v2;
}
procedure `android.graphics.Typeface` `getFont`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getFont:(I)Landroid/graphics/Typeface;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aabec.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3aabf2.  v0:= temp @kind object;
  #L3aabf4.  call temp:= `getFont`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getFont:(I)Landroid/graphics/Typeface;` @kind virtual;
  #L3aabfa.  v2:= temp @kind object;
  #L3aabfc.  return v2 @kind object;
}
procedure `float` `getFraction`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getFraction:(III)F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aad48.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3aad4e.  v0:= temp @kind object;
  #L3aad50.  call temp:= `getFraction`(v0, v2, v3, v4) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getFraction:(III)F` @kind virtual;
  #L3aad56.  v2:= temp;
  #L3aad58.  return v2;
}
procedure `int` `getIndex`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getIndex:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aadb4.  call temp:= `b`(v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.b:()Ljava/util/List;` @kind direct;
  #L3aadba.  v0:= temp @kind object;
  #L3aadbc.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3aadc2.  v2:= temp @kind object;
  #L3aadc4.  v0:= "styleableAttrIndexes[at]" @kind object;
  #L3aadc8.  call `checkExpressionValueIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3aadce.  v2:= (`java.lang.Number`) v2 @kind object;
  #L3aadd2.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L3aadd8.  v2:= temp;
  #L3aadda.  return v2;
}
procedure `int` `getIndexCount`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getIndexCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aadec.  call temp:= `a`(v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.a:()Ljava/util/HashMap;` @kind direct;
  #L3aadf2.  v0:= temp @kind object;
  #L3aadf4.  call temp:= `size`(v0) @signature `Ljava/util/HashMap;.size:()I` @kind virtual;
  #L3aadfa.  v0:= temp;
  #L3aadfc.  return v0;
}
procedure `int` `getInt`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getInt:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aae10.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3aae16.  v0:= temp @kind object;
  #L3aae18.  call temp:= `getInt`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getInt:(I)I` @kind virtual;
  #L3aae1e.  v2:= temp;
  #L3aae20.  return v2;
}
procedure `int` `getLayoutDimension`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getLayoutDimension:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aae34.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3aae3a.  v0:= temp @kind object;
  #L3aae3c.  call temp:= `getLayoutDimension`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getLayoutDimension:(I)I` @kind virtual;
  #L3aae42.  v2:= temp;
  #L3aae44.  return v2;
}
procedure `int` `getResourceId`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getResourceId:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aae58.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3aae5e.  v0:= temp @kind object;
  #L3aae60.  call temp:= `getResourceId`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getResourceId:(I)I` @kind virtual;
  #L3aae66.  v2:= temp;
  #L3aae68.  return v2;
}
procedure `java.lang.String` `getString`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getString:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aaec4.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3aaeca.  v0:= temp @kind object;
  #L3aaecc.  call temp:= `getString`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L3aaed2.  v2:= temp @kind object;
  #L3aaed4.  return v2 @kind object;
}
procedure `com.airbnb.paris.styles.Style` `getStyle`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v3 @kind this, `int` v4 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getStyle:(I)Lcom/airbnb/paris/styles/Style;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3aac8c.  call temp:= `d`(v3, v4) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.d:(I)Ljava/util/List;` @kind direct;
  #L3aac92.  v0:= temp @kind object;
  #L3aac94.  v1:= new `java.util.ArrayList`;
  #L3aac98.  v2:= 10I;
  #L3aac9c.  call temp:= `collectionSizeOrDefault`(v0, v2) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L3aaca2.  v2:= temp;
  #L3aaca4.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3aacaa.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3aacb0.  v0:= temp @kind object;
  #L3aacb2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3aacb8.  v2:= temp;
  #L3aacba.  if v2 == 0 then goto L3aacda;
  #L3aacbe.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3aacc4.  v2:= temp @kind object;
  #L3aacc6.  v2:= (`com.airbnb.paris.typed_array_wrappers.TypedArrayWrapper`) v2 @kind object;
  #L3aacca.  call temp:= `getStyle`(v2, v4) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getStyle:(I)Lcom/airbnb/paris/styles/Style;` @kind virtual;
  #L3aacd0.  v2:= temp @kind object;
  #L3aacd2.  call temp:= `add`(v1, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3aacd8.  goto L3aacb2;
  #L3aacda.  v4:= `@@com.airbnb.paris.styles.MultiStyle.Companion` @type ^`com.airbnb.paris.styles.MultiStyle$Companion` @kind object;
  #L3aacde.  v0:= "a_MultiTypedArrayWrapper_MultiStyle" @kind object;
  #L3aace2.  call temp:= `fromStyles`(v4, v0, v1) @signature `Lcom/airbnb/paris/styles/MultiStyle$Companion;.fromStyles:(Ljava/lang/String;Ljava/util/List;)Lcom/airbnb/paris/styles/Style;` @kind virtual;
  #L3aace8.  v4:= temp @kind object;
  #L3aacea.  return v4 @kind object;
}
procedure `java.lang.CharSequence` `getText`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getText:(I)Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aae7c.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3aae82.  v0:= temp @kind object;
  #L3aae84.  call temp:= `getText`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getText:(I)Ljava/lang/CharSequence;` @kind virtual;
  #L3aae8a.  v2:= temp @kind object;
  #L3aae8c.  return v2 @kind object;
}
procedure `java.lang.CharSequence`[] `getTextArray`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.getTextArray:(I)[Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aaea0.  call temp:= `c`(v1, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.c:(I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind direct;
  #L3aaea6.  v0:= temp @kind object;
  #L3aaea8.  call temp:= `getTextArray`(v0, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.getTextArray:(I)[Ljava/lang/CharSequence;` @kind virtual;
  #L3aaeae.  v2:= temp @kind object;
  #L3aaeb0.  return v2 @kind object;
}
procedure `boolean` `hasValue`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.hasValue:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aac58.  call temp:= `a`(v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.a:()Ljava/util/HashMap;` @kind direct;
  #L3aac5e.  v0:= temp @kind object;
  #L3aac60.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3aac66.  v2:= temp @kind object;
  #L3aac68.  call temp:= `get`(v0, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3aac6e.  v2:= temp @kind object;
  #L3aac70.  if v2 == 0 then goto L3aac78;
  #L3aac74.  v2:= 1I;
  #L3aac76.  goto L3aac7a;
  #L3aac78.  v2:= 0I;
  #L3aac7a.  return v2;
}
procedure `void` `recycle`(`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper` v2 @kind this) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.recycle:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aaff8.  v0:= v2.`com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper.d` @type ^`java.util.List` @kind object;
  #L3aaffc.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ab002.  v0:= temp @kind object;
  #L3ab004.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ab00a.  v1:= temp;
  #L3ab00c.  if v1 == 0 then goto L3ab024;
  #L3ab010.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ab016.  v1:= temp @kind object;
  #L3ab018.  v1:= (`com.airbnb.paris.typed_array_wrappers.TypedArrayWrapper`) v1 @kind object;
  #L3ab01c.  call `recycle`(v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.recycle:()V` @kind virtual;
  #L3ab022.  goto L3ab004;
  #L3ab024.  return @kind void;
}
