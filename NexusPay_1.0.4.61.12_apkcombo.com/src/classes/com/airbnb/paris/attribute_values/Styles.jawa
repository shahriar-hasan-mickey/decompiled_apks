record `com.airbnb.paris.attribute_values.Styles` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `com.airbnb.paris.attribute_values.Styles.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.paris.attribute_values.Styles` v2 @kind this) @signature `Lcom/airbnb/paris/attribute_values/Styles;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a3fd4.  v0:= 0I;
  #L3a3fd6.  v1:= 1I;
  #L3a3fd8.  call `<init>`(v2, v0, v1, v0) @signature `Lcom/airbnb/paris/attribute_values/Styles;.<init>:(Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L3a3fde.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.attribute_values.Styles` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lcom/airbnb/paris/attribute_values/Styles;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a3ff0.  v0:= "list" @kind object;
  #L3a3ff4.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a3ffa.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a4000.  v1.`com.airbnb.paris.attribute_values.Styles.a` @type ^`java.util.List` := v2 @kind object;
  #L3a4004.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.attribute_values.Styles` v0 @kind this, `java.util.List` v1 @kind object, `int` v2 , `kotlin.jvm.internal.DefaultConstructorMarker` v3 @kind object) @signature `Lcom/airbnb/paris/attribute_values/Styles;.<init>:(Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3a4018.  v2:= v2 ^& 1;
  #L3a401c.  if v2 == 0 then goto L3a402a;
  #L3a4020.  v1:= new `java.util.ArrayList`;
  #L3a4024.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3a402a.  call `<init>`(v0, v1) @signature `Lcom/airbnb/paris/attribute_values/Styles;.<init>:(Ljava/util/List;)V` @kind direct;
  #L3a4030.  return @kind void;
}
procedure `com.airbnb.paris.attribute_values.Styles` `copy$default`(`com.airbnb.paris.attribute_values.Styles` v0 @kind object, `java.util.List` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lcom/airbnb/paris/attribute_values/Styles;.copy$default:(Lcom/airbnb/paris/attribute_values/Styles;Ljava/util/List;ILjava/lang/Object;)Lcom/airbnb/paris/attribute_values/Styles;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3a3ee8.  v2:= v2 ^& 1;
  #L3a3eec.  if v2 == 0 then goto L3a3ef4;
  #L3a3ef0.  v1:= v0.`com.airbnb.paris.attribute_values.Styles.a` @type ^`java.util.List` @kind object;
  #L3a3ef4.  call temp:= `copy`(v0, v1) @signature `Lcom/airbnb/paris/attribute_values/Styles;.copy:(Ljava/util/List;)Lcom/airbnb/paris/attribute_values/Styles;` @kind virtual;
  #L3a3efa.  v0:= temp @kind object;
  #L3a3efc.  return v0 @kind object;
}
procedure `java.util.List` `component1`(`com.airbnb.paris.attribute_values.Styles` v1 @kind this) @signature `Lcom/airbnb/paris/attribute_values/Styles;.component1:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3a3fa4.  v0:= v1.`com.airbnb.paris.attribute_values.Styles.a` @type ^`java.util.List` @kind object;
  #L3a3fa8.  return v0 @kind object;
}
procedure `com.airbnb.paris.attribute_values.Styles` `copy`(`com.airbnb.paris.attribute_values.Styles` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lcom/airbnb/paris/attribute_values/Styles;.copy:(Ljava/util/List;)Lcom/airbnb/paris/attribute_values/Styles;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3a3f10.  v0:= "list" @kind object;
  #L3a3f14.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a3f1a.  v0:= new `com.airbnb.paris.attribute_values.Styles`;
  #L3a3f1e.  call `<init>`(v0, v2) @signature `Lcom/airbnb/paris/attribute_values/Styles;.<init>:(Ljava/util/List;)V` @kind direct;
  #L3a3f24.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.airbnb.paris.attribute_values.Styles` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/airbnb/paris/attribute_values/Styles;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3ea8.  if v1 == v2 then goto L3a3ed2;
  #L3a3eac.  v0:= instanceof @variable v2 @type ^`com.airbnb.paris.attribute_values.Styles` @kind boolean;
  #L3a3eb0.  if v0 == 0 then goto L3a3ece;
  #L3a3eb4.  v2:= (`com.airbnb.paris.attribute_values.Styles`) v2 @kind object;
  #L3a3eb8.  v0:= v1.`com.airbnb.paris.attribute_values.Styles.a` @type ^`java.util.List` @kind object;
  #L3a3ebc.  v2:= v2.`com.airbnb.paris.attribute_values.Styles.a` @type ^`java.util.List` @kind object;
  #L3a3ec0.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3a3ec6.  v2:= temp;
  #L3a3ec8.  if v2 == 0 then goto L3a3ece;
  #L3a3ecc.  goto L3a3ed2;
  #L3a3ece.  v2:= 0I;
  #L3a3ed0.  return v2;
  #L3a3ed2.  v2:= 1I;
  #L3a3ed4.  return v2;
}
procedure `java.util.List` `getList`(`com.airbnb.paris.attribute_values.Styles` v1 @kind this) @signature `Lcom/airbnb/paris/attribute_values/Styles;.getList:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3a3fbc.  v0:= v1.`com.airbnb.paris.attribute_values.Styles.a` @type ^`java.util.List` @kind object;
  #L3a3fc0.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.airbnb.paris.attribute_values.Styles` v1 @kind this) @signature `Lcom/airbnb/paris/attribute_values/Styles;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3f38.  v0:= v1.`com.airbnb.paris.attribute_values.Styles.a` @type ^`java.util.List` @kind object;
  #L3a3f3c.  if v0 == 0 then goto L3a3f4a;
  #L3a3f40.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3a3f46.  v0:= temp;
  #L3a3f48.  goto L3a3f4c;
  #L3a3f4a.  v0:= 0I;
  #L3a3f4c.  return v0;
}
procedure `java.lang.String` `toString`(`com.airbnb.paris.attribute_values.Styles` v2 @kind this) @signature `Lcom/airbnb/paris/attribute_values/Styles;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a3f60.  v0:= new `java.lang.StringBuilder`;
  #L3a3f64.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a3f6a.  v1:= "Styles(list=" @kind object;
  #L3a3f6e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3f74.  v1:= v2.`com.airbnb.paris.attribute_values.Styles.a` @type ^`java.util.List` @kind object;
  #L3a3f78.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3f7e.  v1:= ")" @kind object;
  #L3a3f82.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3f88.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a3f8e.  v0:= temp @kind object;
  #L3a3f90.  return v0 @kind object;
}
