record `com.airbnb.paris.attribute_values.DpValue` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `com.airbnb.paris.attribute_values.DpValue.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.paris.attribute_values.DpValue` v0 @kind this, `int` v1 ) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a3d68.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a3d6e.  v0.`com.airbnb.paris.attribute_values.DpValue.a` @type ^`int` := v1;
  #L3a3d72.  return @kind void;
}
procedure `com.airbnb.paris.attribute_values.DpValue` `copy$default`(`com.airbnb.paris.attribute_values.DpValue` v0 @kind object, `int` v1 , `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.copy$default:(Lcom/airbnb/paris/attribute_values/DpValue;IILjava/lang/Object;)Lcom/airbnb/paris/attribute_values/DpValue;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3a3c98.  v2:= v2 ^& 1;
  #L3a3c9c.  if v2 == 0 then goto L3a3ca4;
  #L3a3ca0.  v1:= v0.`com.airbnb.paris.attribute_values.DpValue.a` @type ^`int`;
  #L3a3ca4.  call temp:= `copy`(v0, v1) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.copy:(I)Lcom/airbnb/paris/attribute_values/DpValue;` @kind virtual;
  #L3a3caa.  v0:= temp @kind object;
  #L3a3cac.  return v0 @kind object;
}
procedure `int` `component1`(`com.airbnb.paris.attribute_values.DpValue` v1 @kind this) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.component1:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3a3cdc.  v0:= v1.`com.airbnb.paris.attribute_values.DpValue.a` @type ^`int`;
  #L3a3ce0.  return v0;
}
procedure `com.airbnb.paris.attribute_values.DpValue` `copy`(`com.airbnb.paris.attribute_values.DpValue` v1 @kind this, `int` v2 ) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.copy:(I)Lcom/airbnb/paris/attribute_values/DpValue;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3a3cc0.  v0:= new `com.airbnb.paris.attribute_values.DpValue`;
  #L3a3cc4.  call `<init>`(v0, v2) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.<init>:(I)V` @kind direct;
  #L3a3cca.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.airbnb.paris.attribute_values.DpValue` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3c60.  if v1 == v2 then goto L3a3c82;
  #L3a3c64.  v0:= instanceof @variable v2 @type ^`com.airbnb.paris.attribute_values.DpValue` @kind boolean;
  #L3a3c68.  if v0 == 0 then goto L3a3c7e;
  #L3a3c6c.  v2:= (`com.airbnb.paris.attribute_values.DpValue`) v2 @kind object;
  #L3a3c70.  v0:= v1.`com.airbnb.paris.attribute_values.DpValue.a` @type ^`int`;
  #L3a3c74.  v2:= v2.`com.airbnb.paris.attribute_values.DpValue.a` @type ^`int`;
  #L3a3c78.  if v0 != v2 then goto L3a3c7e;
  #L3a3c7c.  goto L3a3c82;
  #L3a3c7e.  v2:= 0I;
  #L3a3c80.  return v2;
  #L3a3c82.  v2:= 1I;
  #L3a3c84.  return v2;
}
procedure `int` `getDpValue`(`com.airbnb.paris.attribute_values.DpValue` v1 @kind this) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.getDpValue:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3a3cf4.  v0:= v1.`com.airbnb.paris.attribute_values.DpValue.a` @type ^`int`;
  #L3a3cf8.  return v0;
}
procedure `int` `hashCode`(`com.airbnb.paris.attribute_values.DpValue` v1 @kind this) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a3d0c.  v0:= v1.`com.airbnb.paris.attribute_values.DpValue.a` @type ^`int`;
  #L3a3d10.  return v0;
}
procedure `java.lang.String` `toString`(`com.airbnb.paris.attribute_values.DpValue` v2 @kind this) @signature `Lcom/airbnb/paris/attribute_values/DpValue;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a3d24.  v0:= new `java.lang.StringBuilder`;
  #L3a3d28.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a3d2e.  v1:= "DpValue(dpValue=" @kind object;
  #L3a3d32.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3d38.  v1:= v2.`com.airbnb.paris.attribute_values.DpValue.a` @type ^`int`;
  #L3a3d3c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3d42.  v1:= ")" @kind object;
  #L3a3d46.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a3d4c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a3d52.  v0:= temp @kind object;
  #L3a3d54.  return v0 @kind object;
}
