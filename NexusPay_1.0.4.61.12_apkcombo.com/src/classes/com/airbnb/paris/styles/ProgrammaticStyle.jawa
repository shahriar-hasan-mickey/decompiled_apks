record `com.airbnb.paris.styles.ProgrammaticStyle` @kind class @AccessFlag PUBLIC_FINAL extends `com.airbnb.paris.styles.Style` @kind interface {
  `boolean` `com.airbnb.paris.styles.ProgrammaticStyle.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.airbnb.paris.styles.ProgrammaticStyle.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.airbnb.paris.styles.ProgrammaticStyle.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.airbnb.paris.styles.ProgrammaticStyle.d` @AccessFlag PRIVATE;
}
global `com.airbnb.paris.styles.ProgrammaticStyle$Companion` `@@com.airbnb.paris.styles.ProgrammaticStyle.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a9528.  v0:= new `com.airbnb.paris.styles.ProgrammaticStyle$Companion`;
  #L3a952c.  v1:= 0I;
  #L3a952e.  call `<init>`(v0, v1) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L3a9534.  `@@com.airbnb.paris.styles.ProgrammaticStyle.Companion` @type ^`com.airbnb.paris.styles.ProgrammaticStyle$Companion` := v0 @kind object;
  #L3a9538.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.styles.ProgrammaticStyle` v1 @kind this, `com.airbnb.paris.styles.ProgrammaticStyle$Builder` v2 @kind object) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.<init>:(Lcom/airbnb/paris/styles/ProgrammaticStyle$Builder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a954c.  v0:= "builder" @kind object;
  #L3a9550.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a9556.  call temp:= `getAttrResToValueResMap$paris_release`(v2) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle$Builder;.getAttrResToValueResMap$paris_release:()Ljava/util/Map;` @kind virtual;
  #L3a955c.  v0:= temp @kind object;
  #L3a955e.  call temp:= `getName$paris_release`(v2) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle$Builder;.getName$paris_release:()Ljava/lang/String;` @kind virtual;
  #L3a9564.  v2:= temp @kind object;
  #L3a9566.  call `<init>`(v1, v0, v2) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.<init>:(Ljava/util/Map;Ljava/lang/String;)V` @kind direct;
  #L3a956c.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.styles.ProgrammaticStyle` v1 @kind this, `java.util.Map` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.<init>:(Ljava/util/Map;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a9580.  v0:= "attributeMap" @kind object;
  #L3a9584.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a958a.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a9590.  v1.`com.airbnb.paris.styles.ProgrammaticStyle.c` @type ^`java.util.Map` := v2 @kind object;
  #L3a9594.  v1.`com.airbnb.paris.styles.ProgrammaticStyle.d` @type ^`java.lang.String` := v3 @kind object;
  #L3a9598.  v2:= 1I;
  #L3a959a.  v1.`com.airbnb.paris.styles.ProgrammaticStyle.a` @type ^`boolean` := v2 @kind boolean;
  #L3a959e.  v1.`com.airbnb.paris.styles.ProgrammaticStyle.b` @type ^`boolean` := v2 @kind boolean;
  #L3a95a2.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.styles.ProgrammaticStyle` v0 @kind this, `java.util.Map` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `kotlin.jvm.internal.DefaultConstructorMarker` v4 @kind object) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.<init>:(Ljava/util/Map;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3a95b4.  v3:= v3 ^& 2;
  #L3a95b8.  if v3 == 0 then goto L3a95be;
  #L3a95bc.  v2:= 0I;
  #L3a95be.  call `<init>`(v0, v1, v2) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.<init>:(Ljava/util/Map;Ljava/lang/String;)V` @kind direct;
  #L3a95c4.  return @kind void;
}
procedure `com.airbnb.paris.styles.ProgrammaticStyle` `copy$default`(`com.airbnb.paris.styles.ProgrammaticStyle` v0 @kind object, `java.util.Map` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.copy$default:(Lcom/airbnb/paris/styles/ProgrammaticStyle;Ljava/util/Map;Ljava/lang/String;ILjava/lang/Object;)Lcom/airbnb/paris/styles/ProgrammaticStyle;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3a937c.  v4:= v3 ^& 1;
  #L3a9380.  if v4 == 0 then goto L3a9388;
  #L3a9384.  v1:= v0.`com.airbnb.paris.styles.ProgrammaticStyle.c` @type ^`java.util.Map` @kind object;
  #L3a9388.  v3:= v3 ^& 2;
  #L3a938c.  if v3 == 0 then goto L3a9394;
  #L3a9390.  v2:= v0.`com.airbnb.paris.styles.ProgrammaticStyle.d` @type ^`java.lang.String` @kind object;
  #L3a9394.  call temp:= `copy`(v0, v1, v2) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.copy:(Ljava/util/Map;Ljava/lang/String;)Lcom/airbnb/paris/styles/ProgrammaticStyle;` @kind virtual;
  #L3a939a.  v0:= temp @kind object;
  #L3a939c.  return v0 @kind object;
}
procedure `com.airbnb.paris.styles.ProgrammaticStyle` `copy`(`com.airbnb.paris.styles.ProgrammaticStyle` v1 @kind this, `java.util.Map` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.copy:(Ljava/util/Map;Ljava/lang/String;)Lcom/airbnb/paris/styles/ProgrammaticStyle;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3a93b0.  v0:= "attributeMap" @kind object;
  #L3a93b4.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a93ba.  v0:= new `com.airbnb.paris.styles.ProgrammaticStyle`;
  #L3a93be.  call `<init>`(v0, v2, v3) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.<init>:(Ljava/util/Map;Ljava/lang/String;)V` @kind direct;
  #L3a93c4.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.airbnb.paris.styles.ProgrammaticStyle` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a92f8.  if v2 == v3 then goto L3a9336;
  #L3a92fc.  v0:= instanceof @variable v3 @type ^`com.airbnb.paris.styles.ProgrammaticStyle` @kind boolean;
  #L3a9300.  if v0 == 0 then goto L3a9332;
  #L3a9304.  v3:= (`com.airbnb.paris.styles.ProgrammaticStyle`) v3 @kind object;
  #L3a9308.  v0:= v2.`com.airbnb.paris.styles.ProgrammaticStyle.c` @type ^`java.util.Map` @kind object;
  #L3a930c.  v1:= v3.`com.airbnb.paris.styles.ProgrammaticStyle.c` @type ^`java.util.Map` @kind object;
  #L3a9310.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3a9316.  v0:= temp;
  #L3a9318.  if v0 == 0 then goto L3a9332;
  #L3a931c.  v0:= v2.`com.airbnb.paris.styles.ProgrammaticStyle.d` @type ^`java.lang.String` @kind object;
  #L3a9320.  v3:= v3.`com.airbnb.paris.styles.ProgrammaticStyle.d` @type ^`java.lang.String` @kind object;
  #L3a9324.  call temp:= `areEqual`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3a932a.  v3:= temp;
  #L3a932c.  if v3 == 0 then goto L3a9332;
  #L3a9330.  goto L3a9336;
  #L3a9332.  v3:= 0I;
  #L3a9334.  return v3;
  #L3a9336.  v3:= 1I;
  #L3a9338.  return v3;
}
procedure `boolean` `getShouldApplyDefaults`(`com.airbnb.paris.styles.ProgrammaticStyle` v1 @kind this) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.getShouldApplyDefaults:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a934c.  v0:= v1.`com.airbnb.paris.styles.ProgrammaticStyle.b` @type ^`boolean` @kind boolean;
  #L3a9350.  return v0;
}
procedure `boolean` `getShouldApplyParent`(`com.airbnb.paris.styles.ProgrammaticStyle` v1 @kind this) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.getShouldApplyParent:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9364.  v0:= v1.`com.airbnb.paris.styles.ProgrammaticStyle.a` @type ^`boolean` @kind boolean;
  #L3a9368.  return v0;
}
procedure `int` `hashCode`(`com.airbnb.paris.styles.ProgrammaticStyle` v3 @kind this) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a945c.  v0:= v3.`com.airbnb.paris.styles.ProgrammaticStyle.c` @type ^`java.util.Map` @kind object;
  #L3a9460.  v1:= 0I;
  #L3a9462.  if v0 == 0 then goto L3a9470;
  #L3a9466.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3a946c.  v0:= temp;
  #L3a946e.  goto L3a9472;
  #L3a9470.  v0:= 0I;
  #L3a9472.  v0:= v0 * 31;
  #L3a9476.  v2:= v3.`com.airbnb.paris.styles.ProgrammaticStyle.d` @type ^`java.lang.String` @kind object;
  #L3a947a.  if v2 == 0 then goto L3a9486;
  #L3a947e.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3a9484.  v1:= temp;
  #L3a9486.  v0:= v0 + v1 @kind int;
  #L3a9488.  return v0;
}
procedure `java.lang.String` `name`(`com.airbnb.paris.styles.ProgrammaticStyle` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.name:(Landroid/content/Context;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a949c.  v0:= "context" @kind object;
  #L3a94a0.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a94a6.  v2:= v1.`com.airbnb.paris.styles.ProgrammaticStyle.d` @type ^`java.lang.String` @kind object;
  #L3a94aa.  if v2 == 0 then goto L3a94ba;
  #L3a94ae.  if v2 != 0 then goto L3a94be;
  #L3a94b2.  call `throwNpe`() @signature `Lkotlin/jvm/internal/Intrinsics;.throwNpe:()V` @kind static;
  #L3a94b8.  goto L3a94be;
  #L3a94ba.  v2:= "a programmatic style" @kind object;
  #L3a94be.  return v2 @kind object;
}
procedure `com.airbnb.paris.typed_array_wrappers.TypedArrayWrapper` `obtainStyledAttributes`(`com.airbnb.paris.styles.ProgrammaticStyle` v4 @kind this, `android.content.Context` v5 @kind object, `int`[] v6 @kind object) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.obtainStyledAttributes:(Landroid/content/Context;[I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a93d8.  v0:= "context" @kind object;
  #L3a93dc.  call `checkParameterIsNotNull`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a93e2.  v0:= "attrs" @kind object;
  #L3a93e6.  call `checkParameterIsNotNull`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a93ec.  v0:= new `com.airbnb.paris.typed_array_wrappers.TypedArrayTypedArrayWrapper`;
  #L3a93f0.  call temp:= `obtainStyledAttributes`(v5, v6) @signature `Landroid/content/Context;.obtainStyledAttributes:([I)Landroid/content/res/TypedArray;` @kind virtual;
  #L3a93f6.  v1:= temp @kind object;
  #L3a93f8.  v2:= "context.obtainStyledAttributes(attrs)" @kind object;
  #L3a93fc.  call `checkExpressionValueIsNotNull`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a9402.  call `<init>`(v0, v5, v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayTypedArrayWrapper;.<init>:(Landroid/content/Context;Landroid/content/res/TypedArray;)V` @kind direct;
  #L3a9408.  v1:= new `com.airbnb.paris.typed_array_wrappers.MapTypedArrayWrapper`;
  #L3a940c.  v2:= v4.`com.airbnb.paris.styles.ProgrammaticStyle.c` @type ^`java.util.Map` @kind object;
  #L3a9410.  call `<init>`(v1, v5, v6, v2) @signature `Lcom/airbnb/paris/typed_array_wrappers/MapTypedArrayWrapper;.<init>:(Landroid/content/Context;[ILjava/util/Map;)V` @kind direct;
  #L3a9416.  call temp:= `getIndexCount`(v0) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayTypedArrayWrapper;.getIndexCount:()I` @kind virtual;
  #L3a941c.  v5:= temp;
  #L3a941e.  if v5 <= 0 then goto L3a9448;
  #L3a9422.  v5:= new `com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper`;
  #L3a9426.  v2:= 2I;
  #L3a9428.  v2:= new `com.airbnb.paris.typed_array_wrappers.TypedArrayWrapper`[v2];
  #L3a942c.  v3:= 0I;
  #L3a942e.  v2[v3]:= v0 @kind object;
  #L3a9432.  v0:= 1I;
  #L3a9434.  v2[v0]:= v1 @kind object;
  #L3a9438.  call temp:= `listOf`(v2) @signature `Lkotlin/collections/CollectionsKt;.listOf:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3a943e.  v0:= temp @kind object;
  #L3a9440.  call `<init>`(v5, v0, v6) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.<init>:(Ljava/util/List;[I)V` @kind direct;
  #L3a9446.  v1:= v5 @kind object;
  #L3a9448.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`com.airbnb.paris.styles.ProgrammaticStyle` v2 @kind this) @signature `Lcom/airbnb/paris/styles/ProgrammaticStyle;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a94d0.  v0:= new `java.lang.StringBuilder`;
  #L3a94d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a94da.  v1:= "ProgrammaticStyle(attributeMap=" @kind object;
  #L3a94de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a94e4.  v1:= v2.`com.airbnb.paris.styles.ProgrammaticStyle.c` @type ^`java.util.Map` @kind object;
  #L3a94e8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a94ee.  v1:= ", name=" @kind object;
  #L3a94f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a94f8.  v1:= v2.`com.airbnb.paris.styles.ProgrammaticStyle.d` @type ^`java.lang.String` @kind object;
  #L3a94fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9502.  v1:= ")" @kind object;
  #L3a9506.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a950c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a9512.  v0:= temp @kind object;
  #L3a9514.  return v0 @kind object;
}
