record `com.airbnb.paris.styles.MultiStyle` @kind class @AccessFlag PUBLIC_FINAL extends `com.airbnb.paris.styles.Style` @kind interface {
  `boolean` `com.airbnb.paris.styles.MultiStyle.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.airbnb.paris.styles.MultiStyle.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.airbnb.paris.styles.MultiStyle.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.airbnb.paris.styles.MultiStyle.d` @AccessFlag PRIVATE_FINAL;
}
global `com.airbnb.paris.styles.MultiStyle$Companion` `@@com.airbnb.paris.styles.MultiStyle.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/paris/styles/MultiStyle;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a8db0.  v0:= new `com.airbnb.paris.styles.MultiStyle$Companion`;
  #L3a8db4.  v1:= 0I;
  #L3a8db6.  call `<init>`(v0, v1) @signature `Lcom/airbnb/paris/styles/MultiStyle$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L3a8dbc.  `@@com.airbnb.paris.styles.MultiStyle.Companion` @type ^`com.airbnb.paris.styles.MultiStyle$Companion` := v0 @kind object;
  #L3a8dc0.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.styles.MultiStyle` v1 @kind this, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lcom/airbnb/paris/styles/MultiStyle;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a8e68.  v0:= "name" @kind object;
  #L3a8e6c.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a8e72.  v0:= "styles" @kind object;
  #L3a8e76.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a8e7c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a8e82.  v1.`com.airbnb.paris.styles.MultiStyle.c` @type ^`java.lang.String` := v2 @kind object;
  #L3a8e86.  v1.`com.airbnb.paris.styles.MultiStyle.d` @type ^`java.util.List` := v3 @kind object;
  #L3a8e8a.  v2:= 1I;
  #L3a8e8c.  v1.`com.airbnb.paris.styles.MultiStyle.a` @type ^`boolean` := v2 @kind boolean;
  #L3a8e90.  v1.`com.airbnb.paris.styles.MultiStyle.b` @type ^`boolean` := v2 @kind boolean;
  #L3a8e94.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.styles.MultiStyle` v7 @kind this, `java.lang.String` v8 @kind object, `int`[] v9 @kind object) @signature `Lcom/airbnb/paris/styles/MultiStyle;.<init>:(Ljava/lang/String;[I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a8e08.  v0:= "name" @kind object;
  #L3a8e0c.  call `checkParameterIsNotNull`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a8e12.  v0:= "styleRes" @kind object;
  #L3a8e16.  call `checkParameterIsNotNull`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a8e1c.  v0:= new `java.util.ArrayList`;
  #L3a8e20.  v1:= length @variable v9;
  #L3a8e22.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3a8e28.  v1:= length @variable v9;
  #L3a8e2a.  v2:= 0I;
  #L3a8e2c.  if v2 >= v1 then goto L3a8e4e;
  #L3a8e30.  v3:= v9[v2];
  #L3a8e34.  v4:= new `com.airbnb.paris.styles.ResourceStyle`;
  #L3a8e38.  v5:= 2I;
  #L3a8e3a.  v6:= 0I;
  #L3a8e3c.  call `<init>`(v4, v3, v6, v5, v6) @signature `Lcom/airbnb/paris/styles/ResourceStyle;.<init>:(ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L3a8e42.  call temp:= `add`(v0, v4) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a8e48.  v2:= v2 + 1;
  #L3a8e4c.  goto L3a8e2c;
  #L3a8e4e.  call `<init>`(v7, v8, v0) @signature `Lcom/airbnb/paris/styles/MultiStyle;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L3a8e54.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.paris.styles.MultiStyle` v1 @kind this, `java.lang.String` v2 @kind object, `com.airbnb.paris.styles.Style`[] v3 @kind object) @signature `Lcom/airbnb/paris/styles/MultiStyle;.<init>:(Ljava/lang/String;[Lcom/airbnb/paris/styles/Style;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a8dd4.  v0:= "name" @kind object;
  #L3a8dd8.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a8dde.  v0:= "styles" @kind object;
  #L3a8de2.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a8de8.  call temp:= `toList`(v3) @signature `Lkotlin/collections/ArraysKt;.toList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3a8dee.  v3:= temp @kind object;
  #L3a8df0.  call `<init>`(v1, v2, v3) @signature `Lcom/airbnb/paris/styles/MultiStyle;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L3a8df6.  return @kind void;
}
procedure `com.airbnb.paris.styles.MultiStyle` `copy$default`(`com.airbnb.paris.styles.MultiStyle` v0 @kind object, `java.lang.String` v1 @kind object, `java.util.List` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lcom/airbnb/paris/styles/MultiStyle;.copy$default:(Lcom/airbnb/paris/styles/MultiStyle;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lcom/airbnb/paris/styles/MultiStyle;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3a8bec.  v4:= v3 ^& 1;
  #L3a8bf0.  if v4 == 0 then goto L3a8bf8;
  #L3a8bf4.  v1:= v0.`com.airbnb.paris.styles.MultiStyle.c` @type ^`java.lang.String` @kind object;
  #L3a8bf8.  v3:= v3 ^& 2;
  #L3a8bfc.  if v3 == 0 then goto L3a8c04;
  #L3a8c00.  v2:= v0.`com.airbnb.paris.styles.MultiStyle.d` @type ^`java.util.List` @kind object;
  #L3a8c04.  call temp:= `copy`(v0, v1, v2) @signature `Lcom/airbnb/paris/styles/MultiStyle;.copy:(Ljava/lang/String;Ljava/util/List;)Lcom/airbnb/paris/styles/MultiStyle;` @kind virtual;
  #L3a8c0a.  v0:= temp @kind object;
  #L3a8c0c.  return v0 @kind object;
}
procedure `com.airbnb.paris.styles.MultiStyle` `copy`(`com.airbnb.paris.styles.MultiStyle` v1 @kind this, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lcom/airbnb/paris/styles/MultiStyle;.copy:(Ljava/lang/String;Ljava/util/List;)Lcom/airbnb/paris/styles/MultiStyle;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3a8c20.  v0:= "name" @kind object;
  #L3a8c24.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a8c2a.  v0:= "styles" @kind object;
  #L3a8c2e.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a8c34.  v0:= new `com.airbnb.paris.styles.MultiStyle`;
  #L3a8c38.  call `<init>`(v0, v2, v3) @signature `Lcom/airbnb/paris/styles/MultiStyle;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L3a8c3e.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.airbnb.paris.styles.MultiStyle` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/airbnb/paris/styles/MultiStyle;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a8b68.  if v2 == v3 then goto L3a8ba6;
  #L3a8b6c.  v0:= instanceof @variable v3 @type ^`com.airbnb.paris.styles.MultiStyle` @kind boolean;
  #L3a8b70.  if v0 == 0 then goto L3a8ba2;
  #L3a8b74.  v3:= (`com.airbnb.paris.styles.MultiStyle`) v3 @kind object;
  #L3a8b78.  v0:= v2.`com.airbnb.paris.styles.MultiStyle.c` @type ^`java.lang.String` @kind object;
  #L3a8b7c.  v1:= v3.`com.airbnb.paris.styles.MultiStyle.c` @type ^`java.lang.String` @kind object;
  #L3a8b80.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3a8b86.  v0:= temp;
  #L3a8b88.  if v0 == 0 then goto L3a8ba2;
  #L3a8b8c.  v0:= v2.`com.airbnb.paris.styles.MultiStyle.d` @type ^`java.util.List` @kind object;
  #L3a8b90.  v3:= v3.`com.airbnb.paris.styles.MultiStyle.d` @type ^`java.util.List` @kind object;
  #L3a8b94.  call temp:= `areEqual`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3a8b9a.  v3:= temp;
  #L3a8b9c.  if v3 == 0 then goto L3a8ba2;
  #L3a8ba0.  goto L3a8ba6;
  #L3a8ba2.  v3:= 0I;
  #L3a8ba4.  return v3;
  #L3a8ba6.  v3:= 1I;
  #L3a8ba8.  return v3;
}
procedure `boolean` `getShouldApplyDefaults`(`com.airbnb.paris.styles.MultiStyle` v1 @kind this) @signature `Lcom/airbnb/paris/styles/MultiStyle;.getShouldApplyDefaults:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8bbc.  v0:= v1.`com.airbnb.paris.styles.MultiStyle.b` @type ^`boolean` @kind boolean;
  #L3a8bc0.  return v0;
}
procedure `boolean` `getShouldApplyParent`(`com.airbnb.paris.styles.MultiStyle` v1 @kind this) @signature `Lcom/airbnb/paris/styles/MultiStyle;.getShouldApplyParent:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8bd4.  v0:= v1.`com.airbnb.paris.styles.MultiStyle.a` @type ^`boolean` @kind boolean;
  #L3a8bd8.  return v0;
}
procedure `int` `hashCode`(`com.airbnb.paris.styles.MultiStyle` v3 @kind this) @signature `Lcom/airbnb/paris/styles/MultiStyle;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a8cf8.  v0:= v3.`com.airbnb.paris.styles.MultiStyle.c` @type ^`java.lang.String` @kind object;
  #L3a8cfc.  v1:= 0I;
  #L3a8cfe.  if v0 == 0 then goto L3a8d0c;
  #L3a8d02.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3a8d08.  v0:= temp;
  #L3a8d0a.  goto L3a8d0e;
  #L3a8d0c.  v0:= 0I;
  #L3a8d0e.  v0:= v0 * 31;
  #L3a8d12.  v2:= v3.`com.airbnb.paris.styles.MultiStyle.d` @type ^`java.util.List` @kind object;
  #L3a8d16.  if v2 == 0 then goto L3a8d22;
  #L3a8d1a.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3a8d20.  v1:= temp;
  #L3a8d22.  v0:= v0 + v1 @kind int;
  #L3a8d24.  return v0;
}
procedure `java.lang.String` `name`(`com.airbnb.paris.styles.MultiStyle` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/airbnb/paris/styles/MultiStyle;.name:(Landroid/content/Context;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8d38.  v0:= "context" @kind object;
  #L3a8d3c.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a8d42.  v2:= v1.`com.airbnb.paris.styles.MultiStyle.c` @type ^`java.lang.String` @kind object;
  #L3a8d46.  return v2 @kind object;
}
procedure `com.airbnb.paris.typed_array_wrappers.TypedArrayWrapper` `obtainStyledAttributes`(`com.airbnb.paris.styles.MultiStyle` v4 @kind this, `android.content.Context` v5 @kind object, `int`[] v6 @kind object) @signature `Lcom/airbnb/paris/styles/MultiStyle;.obtainStyledAttributes:(Landroid/content/Context;[I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a8c50.  v0:= "context" @kind object;
  #L3a8c54.  call `checkParameterIsNotNull`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a8c5a.  v0:= "attrs" @kind object;
  #L3a8c5e.  call `checkParameterIsNotNull`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a8c64.  v0:= new `com.airbnb.paris.typed_array_wrappers.TypedArrayTypedArrayWrapper`;
  #L3a8c68.  call temp:= `obtainStyledAttributes`(v5, v6) @signature `Landroid/content/Context;.obtainStyledAttributes:([I)Landroid/content/res/TypedArray;` @kind virtual;
  #L3a8c6e.  v1:= temp @kind object;
  #L3a8c70.  v2:= "context.obtainStyledAttributes(attrs)" @kind object;
  #L3a8c74.  call `checkExpressionValueIsNotNull`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a8c7a.  call `<init>`(v0, v5, v1) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayTypedArrayWrapper;.<init>:(Landroid/content/Context;Landroid/content/res/TypedArray;)V` @kind direct;
  #L3a8c80.  v1:= v4.`com.airbnb.paris.styles.MultiStyle.d` @type ^`java.util.List` @kind object;
  #L3a8c84.  v2:= new `java.util.ArrayList`;
  #L3a8c88.  v3:= 10I;
  #L3a8c8c.  call temp:= `collectionSizeOrDefault`(v1, v3) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L3a8c92.  v3:= temp;
  #L3a8c94.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3a8c9a.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3a8ca0.  v1:= temp @kind object;
  #L3a8ca2.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3a8ca8.  v3:= temp;
  #L3a8caa.  if v3 == 0 then goto L3a8cca;
  #L3a8cae.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3a8cb4.  v3:= temp @kind object;
  #L3a8cb6.  v3:= (`com.airbnb.paris.styles.Style`) v3 @kind object;
  #L3a8cba.  call temp:= `obtainStyledAttributes`(v3, v5, v6) @signature `Lcom/airbnb/paris/styles/Style;.obtainStyledAttributes:(Landroid/content/Context;[I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind interface;
  #L3a8cc0.  v3:= temp @kind object;
  #L3a8cc2.  call temp:= `add`(v2, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a8cc8.  goto L3a8ca2;
  #L3a8cca.  v5:= new `com.airbnb.paris.typed_array_wrappers.MultiTypedArrayWrapper`;
  #L3a8cce.  call temp:= `listOf`(v0) @signature `Lkotlin/collections/CollectionsKt;.listOf:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3a8cd4.  v0:= temp @kind object;
  #L3a8cd6.  call temp:= `plus`(v0, v2) @signature `Lkotlin/collections/CollectionsKt;.plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L3a8cdc.  v0:= temp @kind object;
  #L3a8cde.  call `<init>`(v5, v0, v6) @signature `Lcom/airbnb/paris/typed_array_wrappers/MultiTypedArrayWrapper;.<init>:(Ljava/util/List;[I)V` @kind direct;
  #L3a8ce4.  return v5 @kind object;
}
procedure `java.lang.String` `toString`(`com.airbnb.paris.styles.MultiStyle` v2 @kind this) @signature `Lcom/airbnb/paris/styles/MultiStyle;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a8d58.  v0:= new `java.lang.StringBuilder`;
  #L3a8d5c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a8d62.  v1:= "MultiStyle(name=" @kind object;
  #L3a8d66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8d6c.  v1:= v2.`com.airbnb.paris.styles.MultiStyle.c` @type ^`java.lang.String` @kind object;
  #L3a8d70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8d76.  v1:= ", styles=" @kind object;
  #L3a8d7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8d80.  v1:= v2.`com.airbnb.paris.styles.MultiStyle.d` @type ^`java.util.List` @kind object;
  #L3a8d84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8d8a.  v1:= ")" @kind object;
  #L3a8d8e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8d94.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a8d9a.  v0:= temp @kind object;
  #L3a8d9c.  return v0 @kind object;
}
