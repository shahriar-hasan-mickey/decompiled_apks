record `com.airbnb.paris.spannables.StyleConverter$MarkupItem` @kind class @AccessFlag PUBLIC_FINAL {
  `kotlin.ranges.IntRange` `com.airbnb.paris.spannables.StyleConverter$MarkupItem.a` @AccessFlag PRIVATE_FINAL;
  `com.airbnb.paris.styles.Style` `com.airbnb.paris.spannables.StyleConverter$MarkupItem.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.paris.spannables.StyleConverter$MarkupItem` v1 @kind this, `kotlin.ranges.IntRange` v2 @kind object, `com.airbnb.paris.styles.Style` v3 @kind object) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.<init>:(Lkotlin/ranges/IntRange;Lcom/airbnb/paris/styles/Style;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a8280.  v0:= "range" @kind object;
  #L3a8284.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a828a.  v0:= "style" @kind object;
  #L3a828e.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a8294.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a829a.  v1.`com.airbnb.paris.spannables.StyleConverter$MarkupItem.a` @type ^`kotlin.ranges.IntRange` := v2 @kind object;
  #L3a829e.  v1.`com.airbnb.paris.spannables.StyleConverter$MarkupItem.b` @type ^`com.airbnb.paris.styles.Style` := v3 @kind object;
  #L3a82a2.  return @kind void;
}
procedure `com.airbnb.paris.spannables.StyleConverter$MarkupItem` `copy$default`(`com.airbnb.paris.spannables.StyleConverter$MarkupItem` v0 @kind object, `kotlin.ranges.IntRange` v1 @kind object, `com.airbnb.paris.styles.Style` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.copy$default:(Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;Lkotlin/ranges/IntRange;Lcom/airbnb/paris/styles/Style;ILjava/lang/Object;)Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3a8124.  v4:= v3 ^& 1;
  #L3a8128.  if v4 == 0 then goto L3a8130;
  #L3a812c.  v1:= v0.`com.airbnb.paris.spannables.StyleConverter$MarkupItem.a` @type ^`kotlin.ranges.IntRange` @kind object;
  #L3a8130.  v3:= v3 ^& 2;
  #L3a8134.  if v3 == 0 then goto L3a813c;
  #L3a8138.  v2:= v0.`com.airbnb.paris.spannables.StyleConverter$MarkupItem.b` @type ^`com.airbnb.paris.styles.Style` @kind object;
  #L3a813c.  call temp:= `copy`(v0, v1, v2) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.copy:(Lkotlin/ranges/IntRange;Lcom/airbnb/paris/styles/Style;)Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;` @kind virtual;
  #L3a8142.  v0:= temp @kind object;
  #L3a8144.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `component1`(`com.airbnb.paris.spannables.StyleConverter$MarkupItem` v1 @kind this) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.component1:()Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3a8250.  v0:= v1.`com.airbnb.paris.spannables.StyleConverter$MarkupItem.a` @type ^`kotlin.ranges.IntRange` @kind object;
  #L3a8254.  return v0 @kind object;
}
procedure `com.airbnb.paris.styles.Style` `component2`(`com.airbnb.paris.spannables.StyleConverter$MarkupItem` v1 @kind this) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.component2:()Lcom/airbnb/paris/styles/Style;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3a8188.  v0:= v1.`com.airbnb.paris.spannables.StyleConverter$MarkupItem.b` @type ^`com.airbnb.paris.styles.Style` @kind object;
  #L3a818c.  return v0 @kind object;
}
procedure `com.airbnb.paris.spannables.StyleConverter$MarkupItem` `copy`(`com.airbnb.paris.spannables.StyleConverter$MarkupItem` v1 @kind this, `kotlin.ranges.IntRange` v2 @kind object, `com.airbnb.paris.styles.Style` v3 @kind object) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.copy:(Lkotlin/ranges/IntRange;Lcom/airbnb/paris/styles/Style;)Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3a8158.  v0:= "range" @kind object;
  #L3a815c.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a8162.  v0:= "style" @kind object;
  #L3a8166.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a816c.  v0:= new `com.airbnb.paris.spannables.StyleConverter$MarkupItem`;
  #L3a8170.  call `<init>`(v0, v2, v3) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.<init>:(Lkotlin/ranges/IntRange;Lcom/airbnb/paris/styles/Style;)V` @kind direct;
  #L3a8176.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.airbnb.paris.spannables.StyleConverter$MarkupItem` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a80d0.  if v2 == v3 then goto L3a810e;
  #L3a80d4.  v0:= instanceof @variable v3 @type ^`com.airbnb.paris.spannables.StyleConverter$MarkupItem` @kind boolean;
  #L3a80d8.  if v0 == 0 then goto L3a810a;
  #L3a80dc.  v3:= (`com.airbnb.paris.spannables.StyleConverter$MarkupItem`) v3 @kind object;
  #L3a80e0.  v0:= v2.`com.airbnb.paris.spannables.StyleConverter$MarkupItem.a` @type ^`kotlin.ranges.IntRange` @kind object;
  #L3a80e4.  v1:= v3.`com.airbnb.paris.spannables.StyleConverter$MarkupItem.a` @type ^`kotlin.ranges.IntRange` @kind object;
  #L3a80e8.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3a80ee.  v0:= temp;
  #L3a80f0.  if v0 == 0 then goto L3a810a;
  #L3a80f4.  v0:= v2.`com.airbnb.paris.spannables.StyleConverter$MarkupItem.b` @type ^`com.airbnb.paris.styles.Style` @kind object;
  #L3a80f8.  v3:= v3.`com.airbnb.paris.spannables.StyleConverter$MarkupItem.b` @type ^`com.airbnb.paris.styles.Style` @kind object;
  #L3a80fc.  call temp:= `areEqual`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3a8102.  v3:= temp;
  #L3a8104.  if v3 == 0 then goto L3a810a;
  #L3a8108.  goto L3a810e;
  #L3a810a.  v3:= 0I;
  #L3a810c.  return v3;
  #L3a810e.  v3:= 1I;
  #L3a8110.  return v3;
}
procedure `kotlin.ranges.IntRange` `getRange`(`com.airbnb.paris.spannables.StyleConverter$MarkupItem` v1 @kind this) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.getRange:()Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3a8268.  v0:= v1.`com.airbnb.paris.spannables.StyleConverter$MarkupItem.a` @type ^`kotlin.ranges.IntRange` @kind object;
  #L3a826c.  return v0 @kind object;
}
procedure `com.airbnb.paris.styles.Style` `getStyle`(`com.airbnb.paris.spannables.StyleConverter$MarkupItem` v1 @kind this) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.getStyle:()Lcom/airbnb/paris/styles/Style;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3a81a0.  v0:= v1.`com.airbnb.paris.spannables.StyleConverter$MarkupItem.b` @type ^`com.airbnb.paris.styles.Style` @kind object;
  #L3a81a4.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.airbnb.paris.spannables.StyleConverter$MarkupItem` v3 @kind this) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a81b8.  v0:= v3.`com.airbnb.paris.spannables.StyleConverter$MarkupItem.a` @type ^`kotlin.ranges.IntRange` @kind object;
  #L3a81bc.  v1:= 0I;
  #L3a81be.  if v0 == 0 then goto L3a81cc;
  #L3a81c2.  call temp:= `hashCode`(v0) @signature `Lkotlin/ranges/IntRange;.hashCode:()I` @kind virtual;
  #L3a81c8.  v0:= temp;
  #L3a81ca.  goto L3a81ce;
  #L3a81cc.  v0:= 0I;
  #L3a81ce.  v0:= v0 * 31;
  #L3a81d2.  v2:= v3.`com.airbnb.paris.spannables.StyleConverter$MarkupItem.b` @type ^`com.airbnb.paris.styles.Style` @kind object;
  #L3a81d6.  if v2 == 0 then goto L3a81e2;
  #L3a81da.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3a81e0.  v1:= temp;
  #L3a81e2.  v0:= v0 + v1 @kind int;
  #L3a81e4.  return v0;
}
procedure `java.lang.String` `toString`(`com.airbnb.paris.spannables.StyleConverter$MarkupItem` v2 @kind this) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a81f8.  v0:= new `java.lang.StringBuilder`;
  #L3a81fc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a8202.  v1:= "MarkupItem(range=" @kind object;
  #L3a8206.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a820c.  v1:= v2.`com.airbnb.paris.spannables.StyleConverter$MarkupItem.a` @type ^`kotlin.ranges.IntRange` @kind object;
  #L3a8210.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8216.  v1:= ", style=" @kind object;
  #L3a821a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8220.  v1:= v2.`com.airbnb.paris.spannables.StyleConverter$MarkupItem.b` @type ^`com.airbnb.paris.styles.Style` @kind object;
  #L3a8224.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a822a.  v1:= ")" @kind object;
  #L3a822e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8234.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a823a.  v0:= temp @kind object;
  #L3a823c.  return v0 @kind object;
}
