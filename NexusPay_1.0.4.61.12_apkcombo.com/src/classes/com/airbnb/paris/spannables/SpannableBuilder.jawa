record `com.airbnb.paris.spannables.SpannableBuilder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `com.airbnb.paris.spannables.SpannableBuilder.a` @AccessFlag PRIVATE;
  `java.lang.StringBuilder` `com.airbnb.paris.spannables.SpannableBuilder.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.paris.spannables.SpannableBuilder` v1 @kind this) @signature `Lcom/airbnb/paris/spannables/SpannableBuilder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a8040.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a8046.  v0:= new `java.util.HashSet`;
  #L3a804a.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L3a8050.  v1.`com.airbnb.paris.spannables.SpannableBuilder.a` @type ^`java.util.Set` := v0 @kind object;
  #L3a8054.  v0:= new `java.lang.StringBuilder`;
  #L3a8058.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a805e.  v1.`com.airbnb.paris.spannables.SpannableBuilder.b` @type ^`java.lang.StringBuilder` := v0 @kind object;
  #L3a8062.  return @kind void;
}
procedure `com.airbnb.paris.spannables.SpannableBuilder` `append$default`(`com.airbnb.paris.spannables.SpannableBuilder` v0 @kind object, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lcom/airbnb/paris/spannables/SpannableBuilder;.append$default:(Lcom/airbnb/paris/spannables/SpannableBuilder;Ljava/lang/String;IILjava/lang/Object;)Lcom/airbnb/paris/spannables/SpannableBuilder;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3a7ed8.  v3:= v3 ^& 2;
  #L3a7edc.  if v3 == 0 then goto L3a7ee2;
  #L3a7ee0.  v2:= 0I;
  #L3a7ee2.  call temp:= `append`(v0, v1, v2) @signature `Lcom/airbnb/paris/spannables/SpannableBuilder;.append:(Ljava/lang/String;I)Lcom/airbnb/paris/spannables/SpannableBuilder;` @kind virtual;
  #L3a7ee8.  v0:= temp @kind object;
  #L3a7eea.  return v0 @kind object;
}
procedure `com.airbnb.paris.spannables.SpannableBuilder` `append`(`com.airbnb.paris.spannables.SpannableBuilder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/airbnb/paris/spannables/SpannableBuilder;.append:(Ljava/lang/String;)Lcom/airbnb/paris/spannables/SpannableBuilder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3a7efc.  v0:= 0I;
  #L3a7efe.  v1:= 2I;
  #L3a7f00.  v2:= 0I;
  #L3a7f02.  call temp:= `append$default`(v3, v4, v0, v1, v2) @signature `Lcom/airbnb/paris/spannables/SpannableBuilder;.append$default:(Lcom/airbnb/paris/spannables/SpannableBuilder;Ljava/lang/String;IILjava/lang/Object;)Lcom/airbnb/paris/spannables/SpannableBuilder;` @kind static;
  #L3a7f08.  v4:= temp @kind object;
  #L3a7f0a.  return v4 @kind object;
}
procedure `com.airbnb.paris.spannables.SpannableBuilder` `append`(`com.airbnb.paris.spannables.SpannableBuilder` v3 @kind this, `java.lang.String` v4 @kind object, `int` v5 ) @signature `Lcom/airbnb/paris/spannables/SpannableBuilder;.append:(Ljava/lang/String;I)Lcom/airbnb/paris/spannables/SpannableBuilder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3a7f88.  v0:= "text" @kind object;
  #L3a7f8c.  call `checkParameterIsNotNull`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a7f92.  if v5 != 0 then goto L3a7fa2;
  #L3a7f96.  v5:= v3.`com.airbnb.paris.spannables.SpannableBuilder.b` @type ^`java.lang.StringBuilder` @kind object;
  #L3a7f9a.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a7fa0.  goto L3a7fb6;
  #L3a7fa2.  v0:= new `com.airbnb.paris.styles.ResourceStyle`;
  #L3a7fa6.  v1:= 2I;
  #L3a7fa8.  v2:= 0I;
  #L3a7faa.  call `<init>`(v0, v5, v2, v1, v2) @signature `Lcom/airbnb/paris/styles/ResourceStyle;.<init>:(ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L3a7fb0.  call temp:= `append`(v3, v4, v0) @signature `Lcom/airbnb/paris/spannables/SpannableBuilder;.append:(Ljava/lang/String;Lcom/airbnb/paris/styles/Style;)Lcom/airbnb/paris/spannables/SpannableBuilder;` @kind virtual;
  #L3a7fb6.  return v3 @kind object;
}
procedure `com.airbnb.paris.spannables.SpannableBuilder` `append`(`com.airbnb.paris.spannables.SpannableBuilder` v5 @kind this, `java.lang.String` v6 @kind object, `com.airbnb.paris.styles.Style` v7 @kind object) @signature `Lcom/airbnb/paris/spannables/SpannableBuilder;.append:(Ljava/lang/String;Lcom/airbnb/paris/styles/Style;)Lcom/airbnb/paris/spannables/SpannableBuilder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a7f1c.  v0:= "text" @kind object;
  #L3a7f20.  call `checkParameterIsNotNull`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a7f26.  v0:= "style" @kind object;
  #L3a7f2a.  call `checkParameterIsNotNull`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a7f30.  v0:= v5.`com.airbnb.paris.spannables.SpannableBuilder.b` @type ^`java.lang.StringBuilder` @kind object;
  #L3a7f34.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3a7f3a.  v0:= temp;
  #L3a7f3c.  v1:= v5.`com.airbnb.paris.spannables.SpannableBuilder.a` @type ^`java.util.Set` @kind object;
  #L3a7f40.  v2:= new `com.airbnb.paris.spannables.StyleConverter$MarkupItem`;
  #L3a7f44.  v3:= new `kotlin.ranges.IntRange`;
  #L3a7f48.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a7f4e.  v4:= temp;
  #L3a7f50.  v4:= v4 + v0 @kind int;
  #L3a7f52.  call `<init>`(v3, v0, v4) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L3a7f58.  call `<init>`(v2, v3, v7) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.<init>:(Lkotlin/ranges/IntRange;Lcom/airbnb/paris/styles/Style;)V` @kind direct;
  #L3a7f5e.  call temp:= `plus`(v1, v2) @signature `Lkotlin/collections/SetsKt;.plus:(Ljava/util/Set;Ljava/lang/Object;)Ljava/util/Set;` @kind static;
  #L3a7f64.  v7:= temp @kind object;
  #L3a7f66.  v5.`com.airbnb.paris.spannables.SpannableBuilder.a` @type ^`java.util.Set` := v7 @kind object;
  #L3a7f6a.  v7:= v5.`com.airbnb.paris.spannables.SpannableBuilder.b` @type ^`java.lang.StringBuilder` @kind object;
  #L3a7f6e.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a7f74.  return v5 @kind object;
}
procedure `void` `applyTo`(`com.airbnb.paris.spannables.SpannableBuilder` v2 @kind this, `android.widget.TextView` v3 @kind object) @signature `Lcom/airbnb/paris/spannables/SpannableBuilder;.applyTo:(Landroid/widget/TextView;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3a8074.  v0:= "textView" @kind object;
  #L3a8078.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a807e.  call temp:= `getContext`(v3) @signature `Landroid/widget/TextView;.getContext:()Landroid/content/Context;` @kind virtual;
  #L3a8084.  v0:= temp @kind object;
  #L3a8086.  v1:= "textView.context" @kind object;
  #L3a808a.  call `checkExpressionValueIsNotNull`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a8090.  call temp:= `build`(v2, v0) @signature `Lcom/airbnb/paris/spannables/SpannableBuilder;.build:(Landroid/content/Context;)Ljava/lang/CharSequence;` @kind virtual;
  #L3a8096.  v0:= temp @kind object;
  #L3a8098.  call `setText`(v3, v0) @signature `Landroid/widget/TextView;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L3a809e.  return @kind void;
}
procedure `java.lang.CharSequence` `build`(`com.airbnb.paris.spannables.SpannableBuilder` v2 @kind this, `android.content.Context` v3 @kind object) @signature `Lcom/airbnb/paris/spannables/SpannableBuilder;.build:(Landroid/content/Context;)Ljava/lang/CharSequence;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3a7fc8.  v0:= "context" @kind object;
  #L3a7fcc.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a7fd2.  v0:= new `com.airbnb.paris.spannables.StyleConverter`;
  #L3a7fd6.  call `<init>`(v0, v3) @signature `Lcom/airbnb/paris/spannables/StyleConverter;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L3a7fdc.  v3:= v2.`com.airbnb.paris.spannables.SpannableBuilder.b` @type ^`java.lang.StringBuilder` @kind object;
  #L3a7fe0.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a7fe6.  v3:= temp @kind object;
  #L3a7fe8.  v1:= "stringBuilder.toString()" @kind object;
  #L3a7fec.  call `checkExpressionValueIsNotNull`(v3, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a7ff2.  v1:= v2.`com.airbnb.paris.spannables.SpannableBuilder.a` @type ^`java.util.Set` @kind object;
  #L3a7ff6.  call temp:= `createSpannable`(v0, v3, v1) @signature `Lcom/airbnb/paris/spannables/StyleConverter;.createSpannable:(Ljava/lang/String;Ljava/util/Set;)Landroid/text/Spanned;` @kind virtual;
  #L3a7ffc.  v3:= temp @kind object;
  #L3a7ffe.  return v3 @kind object;
}
procedure `java.util.Set` `getMarkupItems$paris_release`(`com.airbnb.paris.spannables.SpannableBuilder` v1 @kind this) @signature `Lcom/airbnb/paris/spannables/SpannableBuilder;.getMarkupItems$paris_release:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3a8028.  v0:= v1.`com.airbnb.paris.spannables.SpannableBuilder.a` @type ^`java.util.Set` @kind object;
  #L3a802c.  return v0 @kind object;
}
procedure `java.lang.StringBuilder` `getStringBuilder$paris_release`(`com.airbnb.paris.spannables.SpannableBuilder` v1 @kind this) @signature `Lcom/airbnb/paris/spannables/SpannableBuilder;.getStringBuilder$paris_release:()Ljava/lang/StringBuilder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3a8010.  v0:= v1.`com.airbnb.paris.spannables.SpannableBuilder.b` @type ^`java.lang.StringBuilder` @kind object;
  #L3a8014.  return v0 @kind object;
}
procedure `void` `setMarkupItems$paris_release`(`com.airbnb.paris.spannables.SpannableBuilder` v1 @kind this, `java.util.Set` v2 @kind object) @signature `Lcom/airbnb/paris/spannables/SpannableBuilder;.setMarkupItems$paris_release:(Ljava/util/Set;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3a80b0.  v0:= "<set-?>" @kind object;
  #L3a80b4.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a80ba.  v1.`com.airbnb.paris.spannables.SpannableBuilder.a` @type ^`java.util.Set` := v2 @kind object;
  #L3a80be.  return @kind void;
}
