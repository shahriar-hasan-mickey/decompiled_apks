record `com.airbnb.paris.spannables.StyleConverter` @kind class @AccessFlag PUBLIC_FINAL {
  `android.content.Context` `com.airbnb.paris.spannables.StyleConverter.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.airbnb.paris.spannables.StyleConverter` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/airbnb/paris/spannables/StyleConverter;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a8838.  v0:= "context" @kind object;
  #L3a883c.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a8842.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a8848.  v1.`com.airbnb.paris.spannables.StyleConverter.a` @type ^`android.content.Context` := v2 @kind object;
  #L3a884c.  return @kind void;
}
procedure `java.util.List` `a`(`com.airbnb.paris.spannables.StyleConverter` v4 @kind this, `com.airbnb.paris.styles.Style` v5 @kind object) @signature `Lcom/airbnb/paris/spannables/StyleConverter;.a:(Lcom/airbnb/paris/styles/Style;)Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a8648.  v0:= v4.`com.airbnb.paris.spannables.StyleConverter.a` @type ^`android.content.Context` @kind object;
  #L3a864c.  v1:= `@@com.airbnb.paris.R$styleable.Paris_Spannable` @type ^`int`[] @kind object;
  #L3a8650.  v2:= "R.styleable.Paris_Spannable" @kind object;
  #L3a8654.  call `checkExpressionValueIsNotNull`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a865a.  call temp:= `obtainStyledAttributes`(v5, v0, v1) @signature `Lcom/airbnb/paris/styles/Style;.obtainStyledAttributes:(Landroid/content/Context;[I)Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;` @kind interface;
  #L3a8660.  v5:= temp @kind object;
  #L3a8662.  v0:= 6I;
  #L3a8664.  v0:= new `kotlin.Pair`[v0];
  #L3a8668.  v1:= `@@com.airbnb.paris.R$styleable.Paris_Spannable_android_textAppearance` @type ^`int`;
  #L3a866c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3a8672.  v1:= temp @kind object;
  #L3a8674.  v2:= new `com.airbnb.paris.spannables.StyleConverter$a`;
  #L3a8678.  call `<init>`(v2, v4, v5) @signature `Lcom/airbnb/paris/spannables/StyleConverter$a;.<init>:(Lcom/airbnb/paris/spannables/StyleConverter;Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;)V` @kind direct;
  #L3a867e.  call temp:= `to`(v1, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L3a8684.  v1:= temp @kind object;
  #L3a8686.  v2:= 0I;
  #L3a8688.  v0[v2]:= v1 @kind object;
  #L3a868c.  v1:= `@@com.airbnb.paris.R$styleable.Paris_Spannable_android_fontFamily` @type ^`int`;
  #L3a8690.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3a8696.  v1:= temp @kind object;
  #L3a8698.  v2:= new `com.airbnb.paris.spannables.StyleConverter$b`;
  #L3a869c.  call `<init>`(v2, v5) @signature `Lcom/airbnb/paris/spannables/StyleConverter$b;.<init>:(Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;)V` @kind direct;
  #L3a86a2.  call temp:= `to`(v1, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L3a86a8.  v1:= temp @kind object;
  #L3a86aa.  v2:= 1I;
  #L3a86ac.  v0[v2]:= v1 @kind object;
  #L3a86b0.  v1:= `@@com.airbnb.paris.R$styleable.Paris_Spannable_android_typeface` @type ^`int`;
  #L3a86b4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3a86ba.  v1:= temp @kind object;
  #L3a86bc.  v2:= new `com.airbnb.paris.spannables.StyleConverter$c`;
  #L3a86c0.  call `<init>`(v2, v5) @signature `Lcom/airbnb/paris/spannables/StyleConverter$c;.<init>:(Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;)V` @kind direct;
  #L3a86c6.  call temp:= `to`(v1, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L3a86cc.  v1:= temp @kind object;
  #L3a86ce.  v2:= 2I;
  #L3a86d0.  v0[v2]:= v1 @kind object;
  #L3a86d4.  v1:= `@@com.airbnb.paris.R$styleable.Paris_Spannable_android_textStyle` @type ^`int`;
  #L3a86d8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3a86de.  v1:= temp @kind object;
  #L3a86e0.  v2:= new `com.airbnb.paris.spannables.StyleConverter$d`;
  #L3a86e4.  call `<init>`(v2, v5) @signature `Lcom/airbnb/paris/spannables/StyleConverter$d;.<init>:(Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;)V` @kind direct;
  #L3a86ea.  call temp:= `to`(v1, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L3a86f0.  v1:= temp @kind object;
  #L3a86f2.  v2:= 3I;
  #L3a86f4.  v0[v2]:= v1 @kind object;
  #L3a86f8.  v1:= `@@com.airbnb.paris.R$styleable.Paris_Spannable_android_textSize` @type ^`int`;
  #L3a86fc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3a8702.  v1:= temp @kind object;
  #L3a8704.  v2:= new `com.airbnb.paris.spannables.StyleConverter$e`;
  #L3a8708.  call `<init>`(v2, v5) @signature `Lcom/airbnb/paris/spannables/StyleConverter$e;.<init>:(Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;)V` @kind direct;
  #L3a870e.  call temp:= `to`(v1, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L3a8714.  v1:= temp @kind object;
  #L3a8716.  v2:= 4I;
  #L3a8718.  v0[v2]:= v1 @kind object;
  #L3a871c.  v1:= `@@com.airbnb.paris.R$styleable.Paris_Spannable_android_textColor` @type ^`int`;
  #L3a8720.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3a8726.  v1:= temp @kind object;
  #L3a8728.  v2:= new `com.airbnb.paris.spannables.StyleConverter$f`;
  #L3a872c.  call `<init>`(v2, v5) @signature `Lcom/airbnb/paris/spannables/StyleConverter$f;.<init>:(Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;)V` @kind direct;
  #L3a8732.  call temp:= `to`(v1, v2) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L3a8738.  v1:= temp @kind object;
  #L3a873a.  v2:= 5I;
  #L3a873c.  v0[v2]:= v1 @kind object;
  #L3a8740.  call temp:= `mapOf`(v0) @signature `Lkotlin/collections/MapsKt;.mapOf:([Lkotlin/Pair;)Ljava/util/Map;` @kind static;
  #L3a8746.  v0:= temp @kind object;
  #L3a8748.  v1:= new `java.util.LinkedHashMap`;
  #L3a874c.  call `<init>`(v1) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L3a8752.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3a8758.  v0:= temp @kind object;
  #L3a875a.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3a8760.  v0:= temp @kind object;
  #L3a8762.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3a8768.  v2:= temp;
  #L3a876a.  if v2 == 0 then goto L3a87b2;
  #L3a876e.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3a8774.  v2:= temp @kind object;
  #L3a8776.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L3a877a.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3a8780.  v3:= temp @kind object;
  #L3a8782.  v3:= (`java.lang.Number`) v3 @kind object;
  #L3a8786.  call temp:= `intValue`(v3) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L3a878c.  v3:= temp;
  #L3a878e.  call temp:= `hasValue`(v5, v3) @signature `Lcom/airbnb/paris/typed_array_wrappers/TypedArrayWrapper;.hasValue:(I)Z` @kind virtual;
  #L3a8794.  v3:= temp;
  #L3a8796.  if v3 == 0 then goto L3a8762;
  #L3a879a.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3a87a0.  v3:= temp @kind object;
  #L3a87a2.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3a87a8.  v2:= temp @kind object;
  #L3a87aa.  call temp:= `put`(v1, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3a87b0.  goto L3a8762;
  #L3a87b2.  v5:= new `java.util.ArrayList`;
  #L3a87b6.  call temp:= `size`(v1) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3a87bc.  v0:= temp;
  #L3a87be.  call `<init>`(v5, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3a87c4.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3a87ca.  v0:= temp @kind object;
  #L3a87cc.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3a87d2.  v0:= temp @kind object;
  #L3a87d4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3a87da.  v1:= temp;
  #L3a87dc.  if v1 == 0 then goto L3a8824;
  #L3a87e0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3a87e6.  v1:= temp @kind object;
  #L3a87e8.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L3a87ec.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3a87f2.  v2:= temp @kind object;
  #L3a87f4.  v2:= (`java.lang.Number`) v2 @kind object;
  #L3a87f8.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L3a87fe.  v2:= temp;
  #L3a8800.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3a8806.  v1:= temp @kind object;
  #L3a8808.  v1:= (`kotlin.jvm.functions.Function1`) v1 @kind object;
  #L3a880c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3a8812.  v2:= temp @kind object;
  #L3a8814.  call temp:= `invoke`(v1, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3a881a.  v1:= temp @kind object;
  #L3a881c.  call temp:= `add`(v5, v1) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a8822.  goto L3a87d4;
  #L3a8824.  return v5 @kind object;
}
procedure `android.text.Spanned` `createSpannable`(`com.airbnb.paris.spannables.StyleConverter` v6 @kind this, `java.lang.String` v7 @kind object, `java.util.Set` v8 @kind object) @signature `Lcom/airbnb/paris/spannables/StyleConverter;.createSpannable:(Ljava/lang/String;Ljava/util/Set;)Landroid/text/Spanned;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a8590.  v0:= "text" @kind object;
  #L3a8594.  call `checkParameterIsNotNull`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a859a.  v0:= "markup" @kind object;
  #L3a859e.  call `checkParameterIsNotNull`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3a85a4.  v0:= new `android.text.SpannableString`;
  #L3a85a8.  call `<init>`(v0, v7) @signature `Landroid/text/SpannableString;.<init>:(Ljava/lang/CharSequence;)V` @kind direct;
  #L3a85ae.  call temp:= `iterator`(v8) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3a85b4.  v7:= temp @kind object;
  #L3a85b6.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3a85bc.  v8:= temp;
  #L3a85be.  if v8 == 0 then goto L3a8636;
  #L3a85c2.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3a85c8.  v8:= temp @kind object;
  #L3a85ca.  v8:= (`com.airbnb.paris.spannables.StyleConverter$MarkupItem`) v8 @kind object;
  #L3a85ce.  call temp:= `getStyle`(v8) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.getStyle:()Lcom/airbnb/paris/styles/Style;` @kind virtual;
  #L3a85d4.  v1:= temp @kind object;
  #L3a85d6.  call temp:= `a`(v6, v1) @signature `Lcom/airbnb/paris/spannables/StyleConverter;.a:(Lcom/airbnb/paris/styles/Style;)Ljava/util/List;` @kind direct;
  #L3a85dc.  v1:= temp @kind object;
  #L3a85de.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3a85e4.  v1:= temp @kind object;
  #L3a85e6.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3a85ec.  v2:= temp;
  #L3a85ee.  if v2 == 0 then goto L3a85b6;
  #L3a85f2.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3a85f8.  v2:= temp @kind object;
  #L3a85fa.  call temp:= `getRange`(v8) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.getRange:()Lkotlin/ranges/IntRange;` @kind virtual;
  #L3a8600.  v3:= temp @kind object;
  #L3a8602.  call temp:= `getStart`(v3) @signature `Lkotlin/ranges/IntRange;.getStart:()Ljava/lang/Integer;` @kind virtual;
  #L3a8608.  v3:= temp @kind object;
  #L3a860a.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3a8610.  v3:= temp;
  #L3a8612.  call temp:= `getRange`(v8) @signature `Lcom/airbnb/paris/spannables/StyleConverter$MarkupItem;.getRange:()Lkotlin/ranges/IntRange;` @kind virtual;
  #L3a8618.  v4:= temp @kind object;
  #L3a861a.  call temp:= `getEndInclusive`(v4) @signature `Lkotlin/ranges/IntRange;.getEndInclusive:()Ljava/lang/Integer;` @kind virtual;
  #L3a8620.  v4:= temp @kind object;
  #L3a8622.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3a8628.  v4:= temp;
  #L3a862a.  v5:= 33I;
  #L3a862e.  call `setSpan`(v0, v2, v3, v4, v5) @signature `Landroid/text/SpannableString;.setSpan:(Ljava/lang/Object;III)V` @kind virtual;
  #L3a8634.  goto L3a85e6;
  #L3a8636.  return v0 @kind object;
}
procedure `android.content.Context` `getContext`(`com.airbnb.paris.spannables.StyleConverter` v1 @kind this) @signature `Lcom/airbnb/paris/spannables/StyleConverter;.getContext:()Landroid/content/Context;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3a8578.  v0:= v1.`com.airbnb.paris.spannables.StyleConverter.a` @type ^`android.content.Context` @kind object;
  #L3a857c.  return v0 @kind object;
}
