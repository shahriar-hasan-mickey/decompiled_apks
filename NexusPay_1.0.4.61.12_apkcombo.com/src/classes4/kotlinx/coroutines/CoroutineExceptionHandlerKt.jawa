record `kotlinx.coroutines.CoroutineExceptionHandlerKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlinx.coroutines.CoroutineExceptionHandler` `CoroutineExceptionHandler`(`kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.CoroutineExceptionHandler:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/CoroutineExceptionHandler;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L156778.  v0:= `@@kotlinx.coroutines.CoroutineExceptionHandler.Key` @type ^`kotlinx.coroutines.CoroutineExceptionHandler$Key` @kind object;
  #L15677c.  v1:= new `kotlinx.coroutines.CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1`;
  #L156780.  call `<init>`(v1, v2, v0) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt$CoroutineExceptionHandler$1;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlinx/coroutines/CoroutineExceptionHandler$Key;)V` @kind direct;
  #L156786.  return v1 @kind object;
}
procedure `void` `handleCoroutineException`(`kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handleCoroutineException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L156798.  v0:= `@@kotlinx.coroutines.CoroutineExceptionHandler.Key` @type ^`kotlinx.coroutines.CoroutineExceptionHandler$Key` @kind object;
  #L15679c.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L1567a2.  v0:= temp @kind object;
  #L1567a4.  v0:= (`kotlinx.coroutines.CoroutineExceptionHandler`) v0 @kind object;
  #L1567a8.  if v0 != 0 then goto L1567b4;
  #L1567ac.  call `handleCoroutineExceptionImpl`(v1, v2) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerImplKt;.handleCoroutineExceptionImpl:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L1567b2.  return @kind void;
  #L1567b4.  call `handleException`(v0, v1, v2) @signature `Lkotlinx/coroutines/CoroutineExceptionHandler;.handleException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind interface;
  #L1567ba.  return @kind void;
  #L1567bc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1567be.  call temp:= `handlerException`(v2, v0) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handlerException:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L1567c4.  v2:= temp @kind object;
  #L1567c6.  call `handleCoroutineExceptionImpl`(v1, v2) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerImplKt;.handleCoroutineExceptionImpl:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L1567cc.  return @kind void;
  catch `java.lang.Throwable` @[L156798..L1567a8] goto L1567bc;
  catch `java.lang.Throwable` @[L1567b4..L1567ba] goto L1567bc;
}
procedure `java.lang.Throwable` `handlerException`(`java.lang.Throwable` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handlerException:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L15674c.  if v2 != v3 then goto L156752;
  #L156750.  return v2 @kind object;
  #L156752.  v0:= new `java.lang.RuntimeException`;
  #L156756.  v1:= "Exception while trying to handle coroutine exception" @kind object;
  #L15675a.  call `<init>`(v0, v1, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L156760.  call `addSuppressed`(v0, v2) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L156766.  return v0 @kind object;
}
