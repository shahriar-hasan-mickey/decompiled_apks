record `kotlinx.coroutines.EventLoopImplBase$DelayedTask` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Runnable` @kind interface, `java.lang.Comparable` @kind interface, `kotlinx.coroutines.DisposableHandle` @kind interface, `kotlinx.coroutines.internal.ThreadSafeHeapNode` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.EventLoopImplBase$DelayedTask.a` @AccessFlag PRIVATE;
  `int` `kotlinx.coroutines.EventLoopImplBase$DelayedTask.b` @AccessFlag PRIVATE;
  `long` `kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v0 @kind this, `long` v1 ) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L158bc0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L158bc6.  v0.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @type ^`long` := v1 @kind wide;
  #L158bca.  v1:= -1I;
  #L158bcc.  v0.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.b` @type ^`int` := v1;
  #L158bd0.  return @kind void;
}
procedure `int` `compareTo`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1589f0.  v1:= (`kotlinx.coroutines.EventLoopImplBase$DelayedTask`) v1 @kind object;
  #L1589f4.  call temp:= `compareTo`(v0, v1) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.compareTo:(Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;)I` @kind virtual;
  #L1589fa.  v1:= temp;
  #L1589fc.  return v1;
}
procedure `int` `compareTo`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v4 @kind this, `kotlinx.coroutines.EventLoopImplBase$DelayedTask` v5 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.compareTo:(Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L158a10.  v0:= v4.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @type ^`long` @kind wide;
  #L158a14.  v2:= v5.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @type ^`long` @kind wide;
  #L158a18.  v0:= v0 - v2 @kind long;
  #L158a1a.  v2:= 0L;
  #L158a1e.  v5:= lcmp(v0, v2);
  #L158a22.  if v5 <= 0 then goto L158a2a;
  #L158a26.  v5:= 1I;
  #L158a28.  goto L158a34;
  #L158a2a.  if v5 >= 0 then goto L158a32;
  #L158a2e.  v5:= -1I;
  #L158a30.  goto L158a34;
  #L158a32.  v5:= 0I;
  #L158a34.  return v5;
}
procedure `void` `dispose`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v2 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.dispose:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L158be4.  @monitorenter v2
  #L158be6.  v0:= v2.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.a` @type ^`java.lang.Object` @kind object;
  #L158bea.  call temp:= `access$getDISPOSED_TASK$p`() @signature `Lkotlinx/coroutines/EventLoop_commonKt;.access$getDISPOSED_TASK$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L158bf0.  v1:= temp @kind object;
  #L158bf2.  if v0 != v1 then goto L158bfa;
  #L158bf6.  @monitorexit v2
  #L158bf8.  return @kind void;
  #L158bfa.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue` @kind boolean;
  #L158bfe.  if v1 == 0 then goto L158c08;
  #L158c02.  v0:= (`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue`) v0 @kind object;
  #L158c06.  goto L158c0a;
  #L158c08.  v0:= 0I;
  #L158c0a.  if v0 != 0 then goto L158c10;
  #L158c0e.  goto L158c16;
  #L158c10.  call temp:= `remove`(v0, v2) @signature `Lkotlinx/coroutines/internal/ThreadSafeHeap;.remove:(Lkotlinx/coroutines/internal/ThreadSafeHeapNode;)Z` @kind virtual;
  #L158c16.  call temp:= `access$getDISPOSED_TASK$p`() @signature `Lkotlinx/coroutines/EventLoop_commonKt;.access$getDISPOSED_TASK$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L158c1c.  v0:= temp @kind object;
  #L158c1e.  v2.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.a` @type ^`java.lang.Object` := v0 @kind object;
  #L158c22.  @monitorexit v2
  #L158c24.  return @kind void;
  #L158c26.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L158c28.  @monitorexit v2
  #L158c2a.  throw v0;
  catch `java.lang.Throwable` @[L158be6..L158bf2] goto L158c26;
  catch `java.lang.Throwable` @[L158bfa..L158c22] goto L158c26;
}
procedure `kotlinx.coroutines.internal.ThreadSafeHeap` `getHeap`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v2 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.getHeap:()Lkotlinx/coroutines/internal/ThreadSafeHeap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L158b98.  v0:= v2.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.a` @type ^`java.lang.Object` @kind object;
  #L158b9c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.ThreadSafeHeap` @kind boolean;
  #L158ba0.  if v1 == 0 then goto L158baa;
  #L158ba4.  v0:= (`kotlinx.coroutines.internal.ThreadSafeHeap`) v0 @kind object;
  #L158ba8.  goto L158bac;
  #L158baa.  v0:= 0I;
  #L158bac.  return v0 @kind object;
}
procedure `int` `getIndex`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v1 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.getIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L158a48.  v0:= v1.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.b` @type ^`int`;
  #L158a4c.  return v0;
}
procedure `int` `scheduleTask`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v7 @kind this, `long` v8 , `kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue` v10 @kind object, `kotlinx.coroutines.EventLoopImplBase` v11 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.scheduleTask:(JLkotlinx/coroutines/EventLoopImplBase$DelayedTaskQueue;Lkotlinx/coroutines/EventLoopImplBase;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L158a60.  @monitorenter v7
  #L158a62.  v0:= v7.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.a` @type ^`java.lang.Object` @kind object;
  #L158a66.  call temp:= `access$getDISPOSED_TASK$p`() @signature `Lkotlinx/coroutines/EventLoop_commonKt;.access$getDISPOSED_TASK$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L158a6c.  v1:= temp @kind object;
  #L158a6e.  if v0 != v1 then goto L158a78;
  #L158a72.  v8:= 2I;
  #L158a74.  @monitorexit v7
  #L158a76.  return v8;
  #L158a78.  @monitorenter v10
  #L158a7a.  call temp:= `firstImpl`(v10) @signature `Lkotlinx/coroutines/internal/ThreadSafeHeap;.firstImpl:()Lkotlinx/coroutines/internal/ThreadSafeHeapNode;` @kind virtual;
  #L158a80.  v0:= temp @kind object;
  #L158a82.  v0:= (`kotlinx.coroutines.EventLoopImplBase$DelayedTask`) v0 @kind object;
  #L158a86.  call temp:= `access$isCompleted`(v11) @signature `Lkotlinx/coroutines/EventLoopImplBase;.access$isCompleted:(Lkotlinx/coroutines/EventLoopImplBase;)Z` @kind static;
  #L158a8c.  v11:= temp;
  #L158a8e.  if v11 == 0 then goto L158a9a;
  #L158a92.  v8:= 1I;
  #L158a94.  @monitorexit v10
  #L158a96.  @monitorexit v7
  #L158a98.  return v8;
  #L158a9a.  v1:= 0L;
  #L158a9e.  if v0 != 0 then goto L158aa8;
  #L158aa2.  v10.`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue.timeNow` @type ^`long` := v8 @kind wide;
  #L158aa6.  goto L158ad0;
  #L158aa8.  v3:= v0.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @type ^`long` @kind wide;
  #L158aac.  v5:= v3 - v8 @kind long;
  #L158ab0.  v11:= lcmp(v5, v1);
  #L158ab4.  if v11 < 0 then goto L158aba;
  #L158ab8.  goto L158abc;
  #L158aba.  v8:= v3 @kind wide;
  #L158abc.  v3:= v10.`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue.timeNow` @type ^`long` @kind wide;
  #L158ac0.  v3:= v8 - v3 @kind long;
  #L158ac4.  v11:= lcmp(v3, v1);
  #L158ac8.  if v11 <= 0 then goto L158ad0;
  #L158acc.  v10.`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue.timeNow` @type ^`long` := v8 @kind wide;
  #L158ad0.  v8:= v7.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @type ^`long` @kind wide;
  #L158ad4.  v3:= v10.`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue.timeNow` @type ^`long` @kind wide;
  #L158ad8.  v8:= v8 - v3 @kind long;
  #L158ada.  v11:= lcmp(v8, v1);
  #L158ade.  if v11 >= 0 then goto L158aea;
  #L158ae2.  v8:= v10.`kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue.timeNow` @type ^`long` @kind wide;
  #L158ae6.  v7.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @type ^`long` := v8 @kind wide;
  #L158aea.  call `addImpl`(v10, v7) @signature `Lkotlinx/coroutines/internal/ThreadSafeHeap;.addImpl:(Lkotlinx/coroutines/internal/ThreadSafeHeapNode;)V` @kind virtual;
  #L158af0.  @monitorexit v10
  #L158af2.  v8:= 0I;
  #L158af4.  @monitorexit v7
  #L158af6.  return v8;
  #L158af8.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L158afa.  @monitorexit v10
  #L158afc.  throw v8;
  #L158afe.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L158b00.  @monitorexit v7
  #L158b02.  throw v8;
  catch `java.lang.Throwable` @[L158a62..L158a6e] goto L158afe;
  catch `java.lang.Throwable` @[L158a78..L158a7a] goto L158afe;
  catch `java.lang.Throwable` @[L158a7a..L158a8e] goto L158af8;
  catch `java.lang.Throwable` @[L158a94..L158a96] goto L158afe;
  catch `java.lang.Throwable` @[L158aa2..L158af0] goto L158af8;
  catch `java.lang.Throwable` @[L158af0..L158af2] goto L158afe;
  catch `java.lang.Throwable` @[L158afa..L158afe] goto L158afe;
}
procedure `void` `setHeap`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v2 @kind this, `kotlinx.coroutines.internal.ThreadSafeHeap` v3 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.setHeap:(Lkotlinx/coroutines/internal/ThreadSafeHeap;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L158c50.  v0:= v2.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.a` @type ^`java.lang.Object` @kind object;
  #L158c54.  call temp:= `access$getDISPOSED_TASK$p`() @signature `Lkotlinx/coroutines/EventLoop_commonKt;.access$getDISPOSED_TASK$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L158c5a.  v1:= temp @kind object;
  #L158c5c.  if v0 == v1 then goto L158c64;
  #L158c60.  v0:= 1I;
  #L158c62.  goto L158c66;
  #L158c64.  v0:= 0I;
  #L158c66.  if v0 == 0 then goto L158c70;
  #L158c6a.  v2.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.a` @type ^`java.lang.Object` := v3 @kind object;
  #L158c6e.  return @kind void;
  #L158c70.  v3:= new `java.lang.IllegalArgumentException`;
  #L158c74.  v0:= "Failed requirement." @kind object;
  #L158c78.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L158c7e.  v0:= temp @kind object;
  #L158c80.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L158c86.  throw v3;
}
procedure `void` `setIndex`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v0 @kind this, `int` v1 ) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.setIndex:(I)V` @AccessFlag PUBLIC {
    temp;

  #L158c98.  v0.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.b` @type ^`int` := v1;
  #L158c9c.  return @kind void;
}
procedure `boolean` `timeToExecute`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v3 @kind this, `long` v4 ) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.timeToExecute:(J)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1589c4.  v0:= v3.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @type ^`long` @kind wide;
  #L1589c8.  v4:= v4 - v0 @kind long;
  #L1589ca.  v0:= 0L;
  #L1589ce.  v2:= lcmp(v4, v0);
  #L1589d2.  if v2 < 0 then goto L1589da;
  #L1589d6.  v4:= 1I;
  #L1589d8.  goto L1589dc;
  #L1589da.  v4:= 0I;
  #L1589dc.  return v4;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.EventLoopImplBase$DelayedTask` v3 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L158b54.  v0:= new `java.lang.StringBuilder`;
  #L158b58.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L158b5e.  v1:= "Delayed[nanos=" @kind object;
  #L158b62.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158b68.  v1:= v3.`kotlinx.coroutines.EventLoopImplBase$DelayedTask.nanoTime` @type ^`long` @kind wide;
  #L158b6c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L158b72.  v1:= 93I;
  #L158b76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L158b7c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L158b82.  v0:= temp @kind object;
  #L158b84.  return v0 @kind object;
}
