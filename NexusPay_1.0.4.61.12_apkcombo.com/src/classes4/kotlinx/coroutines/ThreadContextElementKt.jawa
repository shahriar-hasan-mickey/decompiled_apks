record `kotlinx.coroutines.ThreadContextElementKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlinx.coroutines.ThreadContextElement` `asContextElement`(`java.lang.ThreadLocal` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/ThreadContextElementKt;.asContextElement:(Ljava/lang/ThreadLocal;Ljava/lang/Object;)Lkotlinx/coroutines/ThreadContextElement;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L15e4b0.  v0:= new `kotlinx.coroutines.internal.ThreadLocalElement`;
  #L15e4b4.  call `<init>`(v0, v2, v1) @signature `Lkotlinx/coroutines/internal/ThreadLocalElement;.<init>:(Ljava/lang/Object;Ljava/lang/ThreadLocal;)V` @kind direct;
  #L15e4ba.  return v0 @kind object;
}
procedure `kotlinx.coroutines.ThreadContextElement` `asContextElement$default`(`java.lang.ThreadLocal` v0 @kind object, `java.lang.Object` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/ThreadContextElementKt;.asContextElement$default:(Ljava/lang/ThreadLocal;Ljava/lang/Object;ILjava/lang/Object;)Lkotlinx/coroutines/ThreadContextElement;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15e484.  v2:= v2 ^& 1;
  #L15e488.  if v2 == 0 then goto L15e494;
  #L15e48c.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L15e492.  v1:= temp @kind object;
  #L15e494.  call temp:= `asContextElement`(v0, v1) @signature `Lkotlinx/coroutines/ThreadContextElementKt;.asContextElement:(Ljava/lang/ThreadLocal;Ljava/lang/Object;)Lkotlinx/coroutines/ThreadContextElement;` @kind static;
  #L15e49a.  v0:= temp @kind object;
  #L15e49c.  return v0 @kind object;
}
procedure `java.lang.Object` `ensurePresent`(`java.lang.ThreadLocal` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/ThreadContextElementKt;.ensurePresent:(Ljava/lang/ThreadLocal;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L15e3a8.  call temp:= `getContext`(v3) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L15e3ae.  v0:= temp @kind object;
  #L15e3b0.  v1:= new `kotlinx.coroutines.internal.ThreadLocalKey`;
  #L15e3b4.  call `<init>`(v1, v2) @signature `Lkotlinx/coroutines/internal/ThreadLocalKey;.<init>:(Ljava/lang/ThreadLocal;)V` @kind direct;
  #L15e3ba.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L15e3c0.  v0:= temp @kind object;
  #L15e3c2.  if v0 == 0 then goto L15e3ca;
  #L15e3c6.  v0:= 1I;
  #L15e3c8.  goto L15e3cc;
  #L15e3ca.  v0:= 0I;
  #L15e3cc.  call temp:= `boxBoolean`(v0) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxBoolean:(Z)Ljava/lang/Boolean;` @kind static;
  #L15e3d2.  v0:= temp @kind object;
  #L15e3d4.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L15e3da.  v0:= temp;
  #L15e3dc.  if v0 == 0 then goto L15e3e6;
  #L15e3e0.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15e3e4.  return v2 @kind object;
  #L15e3e6.  v0:= new `java.lang.StringBuilder`;
  #L15e3ea.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15e3f0.  v1:= "ThreadLocal " @kind object;
  #L15e3f4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e3fa.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e400.  v2:= " is missing from context " @kind object;
  #L15e404.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e40a.  call temp:= `getContext`(v3) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L15e410.  v2:= temp @kind object;
  #L15e412.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e418.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15e41e.  v2:= temp @kind object;
  #L15e420.  v3:= new `java.lang.IllegalStateException`;
  #L15e424.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15e42a.  v2:= temp @kind object;
  #L15e42c.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15e432.  throw v3;
}
procedure `java.lang.Object` `isPresent`(`java.lang.ThreadLocal` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/ThreadContextElementKt;.isPresent:(Ljava/lang/ThreadLocal;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L15e444.  call temp:= `getContext`(v2) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L15e44a.  v2:= temp @kind object;
  #L15e44c.  v0:= new `kotlinx.coroutines.internal.ThreadLocalKey`;
  #L15e450.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/ThreadLocalKey;.<init>:(Ljava/lang/ThreadLocal;)V` @kind direct;
  #L15e456.  call temp:= `get`(v2, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L15e45c.  v1:= temp @kind object;
  #L15e45e.  if v1 == 0 then goto L15e466;
  #L15e462.  v1:= 1I;
  #L15e464.  goto L15e468;
  #L15e466.  v1:= 0I;
  #L15e468.  call temp:= `boxBoolean`(v1) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxBoolean:(Z)Ljava/lang/Boolean;` @kind static;
  #L15e46e.  v1:= temp @kind object;
  #L15e470.  return v1 @kind object;
}
