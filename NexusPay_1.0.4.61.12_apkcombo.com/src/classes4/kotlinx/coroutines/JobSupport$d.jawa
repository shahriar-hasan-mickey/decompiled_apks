record `kotlinx.coroutines.JobSupport$d` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.JobSupport$d.b` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.JobSupport$d.c` @AccessFlag ;
  `int` `kotlinx.coroutines.JobSupport$d.d` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.JobSupport$d.e` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlinx.coroutines.JobSupport` `kotlinx.coroutines.JobSupport$d.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.JobSupport$d` v0 @kind this, `kotlinx.coroutines.JobSupport` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/JobSupport$d;.<init>:(Lkotlinx/coroutines/JobSupport;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L15b748.  v0.`kotlinx.coroutines.JobSupport$d.f` @type ^`kotlinx.coroutines.JobSupport` := v1 @kind object;
  #L15b74c.  v1:= 2I;
  #L15b74e.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L15b754.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.JobSupport$d` v0 @kind this, `kotlin.sequences.SequenceScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/JobSupport$d;.a:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L15b5d8.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/JobSupport$d;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L15b5de.  v1:= temp @kind object;
  #L15b5e0.  v1:= (`kotlinx.coroutines.JobSupport$d`) v1 @kind object;
  #L15b5e4.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15b5e8.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport$d;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15b5ee.  v1:= temp @kind object;
  #L15b5f0.  return v1 @kind object;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.JobSupport$d` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport$d;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15b724.  v0:= new `kotlinx.coroutines.JobSupport$d`;
  #L15b728.  v1:= v2.`kotlinx.coroutines.JobSupport$d.f` @type ^`kotlinx.coroutines.JobSupport` @kind object;
  #L15b72c.  call `<init>`(v0, v1, v4) @signature `Lkotlinx/coroutines/JobSupport$d;.<init>:(Lkotlinx/coroutines/JobSupport;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L15b732.  v0.`kotlinx.coroutines.JobSupport$d.e` @type ^`java.lang.Object` := v3 @kind object;
  #L15b736.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.JobSupport$d` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/JobSupport$d;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L15b5b4.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L15b5b8.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L15b5bc.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/JobSupport$d;.a:(Lkotlin/sequences/SequenceScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L15b5c2.  v1:= temp @kind object;
  #L15b5c4.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.JobSupport$d` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/JobSupport$d;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L15b604.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L15b60a.  v0:= temp @kind object;
  #L15b60c.  v1:= v7.`kotlinx.coroutines.JobSupport$d.d` @type ^`int`;
  #L15b610.  v2:= 2I;
  #L15b612.  v3:= 1I;
  #L15b614.  if v1 == 0 then goto L15b65a;
  #L15b618.  if v1 == v3 then goto L15b652;
  #L15b61c.  if v1 != v2 then goto L15b642;
  #L15b620.  v1:= v7.`kotlinx.coroutines.JobSupport$d.c` @type ^`java.lang.Object` @kind object;
  #L15b624.  v1:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v1 @kind object;
  #L15b628.  v3:= v7.`kotlinx.coroutines.JobSupport$d.b` @type ^`java.lang.Object` @kind object;
  #L15b62c.  v3:= (`kotlinx.coroutines.internal.LockFreeLinkedListHead`) v3 @kind object;
  #L15b630.  v4:= v7.`kotlinx.coroutines.JobSupport$d.e` @type ^`java.lang.Object` @kind object;
  #L15b634.  v4:= (`kotlin.sequences.SequenceScope`) v4 @kind object;
  #L15b638.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L15b63e.  v8:= v7 @kind object;
  #L15b640.  goto L15b702;
  #L15b642.  v8:= new `java.lang.IllegalStateException`;
  #L15b646.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L15b64a.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b650.  throw v8;
  #L15b652.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L15b658.  goto L15b70c;
  #L15b65a.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L15b660.  v8:= v7.`kotlinx.coroutines.JobSupport$d.e` @type ^`java.lang.Object` @kind object;
  #L15b664.  v8:= (`kotlin.sequences.SequenceScope`) v8 @kind object;
  #L15b668.  v1:= v7.`kotlinx.coroutines.JobSupport$d.f` @type ^`kotlinx.coroutines.JobSupport` @kind object;
  #L15b66c.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15b672.  v1:= temp @kind object;
  #L15b674.  v4:= instanceof @variable v1 @type ^`kotlinx.coroutines.ChildHandleNode` @kind boolean;
  #L15b678.  if v4 == 0 then goto L15b696;
  #L15b67c.  v1:= (`kotlinx.coroutines.ChildHandleNode`) v1 @kind object;
  #L15b680.  v1:= v1.`kotlinx.coroutines.ChildHandleNode.childJob` @type ^`kotlinx.coroutines.ChildJob` @kind object;
  #L15b684.  v7.`kotlinx.coroutines.JobSupport$d.d` @type ^`int` := v3;
  #L15b688.  call temp:= `yield`(v8, v1, v7) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L15b68e.  v8:= temp @kind object;
  #L15b690.  if v8 != v0 then goto L15b70c;
  #L15b694.  return v0 @kind object;
  #L15b696.  v3:= instanceof @variable v1 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L15b69a.  if v3 == 0 then goto L15b70c;
  #L15b69e.  v1:= (`kotlinx.coroutines.Incomplete`) v1 @kind object;
  #L15b6a2.  call temp:= `getList`(v1) @signature `Lkotlinx/coroutines/Incomplete;.getList:()Lkotlinx/coroutines/NodeList;` @kind interface;
  #L15b6a8.  v1:= temp @kind object;
  #L15b6aa.  if v1 != 0 then goto L15b6b0;
  #L15b6ae.  goto L15b70c;
  #L15b6b0.  call temp:= `getNext`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNext:()Ljava/lang/Object;` @kind virtual;
  #L15b6b6.  v3:= temp @kind object;
  #L15b6b8.  v3:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v3 @kind object;
  #L15b6bc.  v4:= v8 @kind object;
  #L15b6be.  v8:= v7 @kind object;
  #L15b6c0.  v6:= v3 @kind object;
  #L15b6c2.  v3:= v1 @kind object;
  #L15b6c4.  v1:= v6 @kind object;
  #L15b6c6.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L15b6cc.  v5:= temp;
  #L15b6ce.  if v5 != 0 then goto L15b70c;
  #L15b6d2.  v5:= instanceof @variable v1 @type ^`kotlinx.coroutines.ChildHandleNode` @kind boolean;
  #L15b6d6.  if v5 == 0 then goto L15b702;
  #L15b6da.  v5:= v1 @kind object;
  #L15b6dc.  v5:= (`kotlinx.coroutines.ChildHandleNode`) v5 @kind object;
  #L15b6e0.  v5:= v5.`kotlinx.coroutines.ChildHandleNode.childJob` @type ^`kotlinx.coroutines.ChildJob` @kind object;
  #L15b6e4.  v8.`kotlinx.coroutines.JobSupport$d.e` @type ^`java.lang.Object` := v4 @kind object;
  #L15b6e8.  v8.`kotlinx.coroutines.JobSupport$d.b` @type ^`java.lang.Object` := v3 @kind object;
  #L15b6ec.  v8.`kotlinx.coroutines.JobSupport$d.c` @type ^`java.lang.Object` := v1 @kind object;
  #L15b6f0.  v8.`kotlinx.coroutines.JobSupport$d.d` @type ^`int` := v2;
  #L15b6f4.  call temp:= `yield`(v4, v5, v8) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L15b6fa.  v5:= temp @kind object;
  #L15b6fc.  if v5 != v0 then goto L15b702;
  #L15b700.  return v0 @kind object;
  #L15b702.  call temp:= `getNextNode`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L15b708.  v1:= temp @kind object;
  #L15b70a.  goto L15b6c6;
  #L15b70c.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15b710.  return v8 @kind object;
}
