record `kotlinx.coroutines.channels.AbstractChannel` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.channels.AbstractSendChannel` @kind class, `kotlinx.coroutines.channels.Channel` @kind interface {
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind this, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.<init>:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L160b90.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L160b96.  return @kind void;
}
procedure `boolean` `access$enqueueReceive`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind object, `kotlinx.coroutines.channels.Receive` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.access$enqueueReceive:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/channels/Receive;)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1605c0.  call temp:= `k`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.k:(Lkotlinx/coroutines/channels/Receive;)Z` @kind direct;
  #L1605c6.  v0:= temp;
  #L1605c8.  return v0;
}
procedure `java.lang.Object` `access$receiveSuspend`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind object, `int` v1 , `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.access$receiveSuspend:(Lkotlinx/coroutines/channels/AbstractChannel;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1607a4.  call temp:= `m`(v0, v1, v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.m:(ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind direct;
  #L1607aa.  v0:= temp @kind object;
  #L1607ac.  return v0 @kind object;
}
procedure `void` `access$registerSelectReceiveMode`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind object, `kotlinx.coroutines.selects.SelectInstance` v1 @kind object, `int` v2 , `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.access$registerSelectReceiveMode:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/selects/SelectInstance;ILkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L160ba8.  call `n`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.n:(Lkotlinx/coroutines/selects/SelectInstance;ILkotlin/jvm/functions/Function2;)V` @kind direct;
  #L160bae.  return @kind void;
}
procedure `void` `access$removeReceiveOnCancel`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind object, `kotlinx.coroutines.CancellableContinuation` v1 @kind object, `kotlinx.coroutines.channels.Receive` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.access$removeReceiveOnCancel:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/channels/Receive;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L160bc0.  call `o`(v0, v1, v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.o:(Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/channels/Receive;)V` @kind direct;
  #L160bc6.  return @kind void;
}
procedure `boolean` `k`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind this, `kotlinx.coroutines.channels.Receive` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.k:(Lkotlinx/coroutines/channels/Receive;)Z` @AccessFlag PRIVATE_FINAL {
    temp;

  #L160618.  call temp:= `enqueueReceiveInternal`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.enqueueReceiveInternal:(Lkotlinx/coroutines/channels/Receive;)Z` @kind virtual;
  #L16061e.  v1:= temp;
  #L160620.  if v1 == 0 then goto L16062a;
  #L160624.  call `onReceiveEnqueued`(v0) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onReceiveEnqueued:()V` @kind virtual;
  #L16062a.  return v1;
}
procedure `boolean` `l`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this, `kotlinx.coroutines.selects.SelectInstance` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object, `int` v4 ) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.l:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function2;I)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1606c4.  v0:= new `kotlinx.coroutines.channels.AbstractChannel$e`;
  #L1606c8.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel$e;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function2;I)V` @kind direct;
  #L1606ce.  call temp:= `k`(v1, v0) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.k:(Lkotlinx/coroutines/channels/Receive;)Z` @kind direct;
  #L1606d4.  v3:= temp;
  #L1606d6.  if v3 == 0 then goto L1606e0;
  #L1606da.  call `disposeOnSelect`(v2, v0) @signature `Lkotlinx/coroutines/selects/SelectInstance;.disposeOnSelect:(Lkotlinx/coroutines/DisposableHandle;)V` @kind interface;
  #L1606e0.  return v3;
}
procedure `java.lang.Object` `m`(`kotlinx.coroutines.channels.AbstractChannel` v3 @kind this, `int` v4 , `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.m:(ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1609c8.  call temp:= `intercepted`(v5) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L1609ce.  v0:= temp @kind object;
  #L1609d0.  call temp:= `getOrCreateCancellableContinuation`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationKt;.getOrCreateCancellableContinuation:(Lkotlin/coroutines/Continuation;)Lkotlinx/coroutines/CancellableContinuationImpl;` @kind static;
  #L1609d6.  v0:= temp @kind object;
  #L1609d8.  v1:= v3.`kotlinx.coroutines.channels.AbstractSendChannel.onUndeliveredElement` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L1609dc.  if v1 != 0 then goto L1609ec;
  #L1609e0.  v1:= new `kotlinx.coroutines.channels.AbstractChannel$b`;
  #L1609e4.  call `<init>`(v1, v0, v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel$b;.<init>:(Lkotlinx/coroutines/CancellableContinuation;I)V` @kind direct;
  #L1609ea.  goto L1609fa;
  #L1609ec.  v1:= new `kotlinx.coroutines.channels.AbstractChannel$c`;
  #L1609f0.  v2:= v3.`kotlinx.coroutines.channels.AbstractSendChannel.onUndeliveredElement` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L1609f4.  call `<init>`(v1, v0, v4, v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel$c;.<init>:(Lkotlinx/coroutines/CancellableContinuation;ILkotlin/jvm/functions/Function1;)V` @kind direct;
  #L1609fa.  call temp:= `access$enqueueReceive`(v3, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.access$enqueueReceive:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/channels/Receive;)Z` @kind static;
  #L160a00.  v4:= temp;
  #L160a02.  if v4 == 0 then goto L160a0e;
  #L160a06.  call `access$removeReceiveOnCancel`(v3, v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.access$removeReceiveOnCancel:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/channels/Receive;)V` @kind static;
  #L160a0c.  goto L160a48;
  #L160a0e.  call temp:= `pollInternal`(v3) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.pollInternal:()Ljava/lang/Object;` @kind virtual;
  #L160a14.  v4:= temp @kind object;
  #L160a16.  v2:= instanceof @variable v4 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L160a1a.  if v2 == 0 then goto L160a2a;
  #L160a1e.  v4:= (`kotlinx.coroutines.channels.Closed`) v4 @kind object;
  #L160a22.  call `resumeReceiveClosed`(v1, v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel$b;.resumeReceiveClosed:(Lkotlinx/coroutines/channels/Closed;)V` @kind virtual;
  #L160a28.  goto L160a48;
  #L160a2a.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L160a2e.  if v4 == v2 then goto L1609fa;
  #L160a32.  call temp:= `e`(v1, v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel$b;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L160a38.  v2:= temp @kind object;
  #L160a3a.  call temp:= `resumeOnCancellationFun`(v1, v4) @signature `Lkotlinx/coroutines/channels/Receive;.resumeOnCancellationFun:(Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;` @kind virtual;
  #L160a40.  v4:= temp @kind object;
  #L160a42.  call `resume`(v0, v2, v4) @signature `Lkotlinx/coroutines/CancellableContinuation;.resume:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V` @kind interface;
  #L160a48.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L160a4e.  v4:= temp @kind object;
  #L160a50.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L160a56.  v0:= temp @kind object;
  #L160a58.  if v4 != v0 then goto L160a62;
  #L160a5c.  call `probeCoroutineSuspended`(v5) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L160a62.  return v4 @kind object;
}
procedure `void` `n`(`kotlinx.coroutines.channels.AbstractChannel` v2 @kind this, `kotlinx.coroutines.selects.SelectInstance` v3 @kind object, `int` v4 , `kotlin.jvm.functions.Function2` v5 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.n:(Lkotlinx/coroutines/selects/SelectInstance;ILkotlin/jvm/functions/Function2;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L160d70.  call temp:= `isSelected`(v3) @signature `Lkotlinx/coroutines/selects/SelectInstance;.isSelected:()Z` @kind interface;
  #L160d76.  v0:= temp;
  #L160d78.  if v0 == 0 then goto L160d7e;
  #L160d7c.  return @kind void;
  #L160d7e.  call temp:= `isEmptyImpl`(v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isEmptyImpl:()Z` @kind virtual;
  #L160d84.  v0:= temp;
  #L160d86.  if v0 == 0 then goto L160d98;
  #L160d8a.  call temp:= `l`(v2, v3, v5, v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.l:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function2;I)Z` @kind direct;
  #L160d90.  v0:= temp;
  #L160d92.  if v0 == 0 then goto L160d70;
  #L160d96.  return @kind void;
  #L160d98.  call temp:= `pollSelectInternal`(v2, v3) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.pollSelectInternal:(Lkotlinx/coroutines/selects/SelectInstance;)Ljava/lang/Object;` @kind virtual;
  #L160d9e.  v0:= temp @kind object;
  #L160da0.  call temp:= `getALREADY_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getALREADY_SELECTED:()Ljava/lang/Object;` @kind static;
  #L160da6.  v1:= temp @kind object;
  #L160da8.  if v0 != v1 then goto L160dae;
  #L160dac.  return @kind void;
  #L160dae.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L160db2.  if v0 != v1 then goto L160db8;
  #L160db6.  goto L160d70;
  #L160db8.  v1:= `@@kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC` @type ^`java.lang.Object` @kind object;
  #L160dbc.  if v0 != v1 then goto L160dc2;
  #L160dc0.  goto L160d70;
  #L160dc2.  call `p`(v2, v5, v3, v4, v0) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.p:(Lkotlin/jvm/functions/Function2;Lkotlinx/coroutines/selects/SelectInstance;ILjava/lang/Object;)V` @kind direct;
  #L160dc8.  goto L160d70;
}
procedure `void` `o`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this, `kotlinx.coroutines.CancellableContinuation` v2 @kind object, `kotlinx.coroutines.channels.Receive` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.o:(Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/channels/Receive;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L160ddc.  v0:= new `kotlinx.coroutines.channels.AbstractChannel$f`;
  #L160de0.  call `<init>`(v0, v1, v3) @signature `Lkotlinx/coroutines/channels/AbstractChannel$f;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/channels/Receive;)V` @kind direct;
  #L160de6.  call `invokeOnCancellation`(v2, v0) @signature `Lkotlinx/coroutines/CancellableContinuation;.invokeOnCancellation:(Lkotlin/jvm/functions/Function1;)V` @kind interface;
  #L160dec.  return @kind void;
}
procedure `void` `p`(`kotlinx.coroutines.channels.AbstractChannel` v2 @kind this, `kotlin.jvm.functions.Function2` v3 @kind object, `kotlinx.coroutines.selects.SelectInstance` v4 @kind object, `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.p:(Lkotlin/jvm/functions/Function2;Lkotlinx/coroutines/selects/SelectInstance;ILjava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L160e00.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L160e04.  v1:= 1I;
  #L160e06.  if v0 == 0 then goto L160e64;
  #L160e0a.  if v5 == 0 then goto L160e4e;
  #L160e0e.  if v5 == v1 then goto L160e14;
  #L160e12.  goto L160eb0;
  #L160e14.  call temp:= `trySelect`(v4) @signature `Lkotlinx/coroutines/selects/SelectInstance;.trySelect:()Z` @kind interface;
  #L160e1a.  v5:= temp;
  #L160e1c.  if v5 != 0 then goto L160e22;
  #L160e20.  return @kind void;
  #L160e22.  v5:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L160e26.  v6:= (`kotlinx.coroutines.channels.Closed`) v6 @kind object;
  #L160e2a.  v6:= v6.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L160e2e.  call temp:= `closed-JP2dKIU`(v5, v6) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.closed-JP2dKIU:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind virtual;
  #L160e34.  v5:= temp @kind object;
  #L160e36.  call temp:= `box-impl`(v5) @signature `Lkotlinx/coroutines/channels/ChannelResult;.box-impl:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/ChannelResult;` @kind static;
  #L160e3c.  v5:= temp @kind object;
  #L160e3e.  call temp:= `getCompletion`(v4) @signature `Lkotlinx/coroutines/selects/SelectInstance;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind interface;
  #L160e44.  v4:= temp @kind object;
  #L160e46.  call `startCoroutineUnintercepted`(v3, v5, v4) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startCoroutineUnintercepted:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L160e4c.  goto L160eb0;
  #L160e4e.  v6:= (`kotlinx.coroutines.channels.Closed`) v6 @kind object;
  #L160e52.  call temp:= `getReceiveException`(v6) @signature `Lkotlinx/coroutines/channels/Closed;.getReceiveException:()Ljava/lang/Throwable;` @kind virtual;
  #L160e58.  v3:= temp @kind object;
  #L160e5a.  call temp:= `recoverStackTrace`(v3) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.recoverStackTrace:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L160e60.  v3:= temp @kind object;
  #L160e62.  throw v3;
  #L160e64.  if v5 != v1 then goto L160ea2;
  #L160e68.  v5:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L160e6c.  if v0 == 0 then goto L160e82;
  #L160e70.  v6:= (`kotlinx.coroutines.channels.Closed`) v6 @kind object;
  #L160e74.  v6:= v6.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L160e78.  call temp:= `closed-JP2dKIU`(v5, v6) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.closed-JP2dKIU:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind virtual;
  #L160e7e.  v5:= temp @kind object;
  #L160e80.  goto L160e8a;
  #L160e82.  call temp:= `success-JP2dKIU`(v5, v6) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.success-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L160e88.  v5:= temp @kind object;
  #L160e8a.  call temp:= `box-impl`(v5) @signature `Lkotlinx/coroutines/channels/ChannelResult;.box-impl:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/ChannelResult;` @kind static;
  #L160e90.  v5:= temp @kind object;
  #L160e92.  call temp:= `getCompletion`(v4) @signature `Lkotlinx/coroutines/selects/SelectInstance;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind interface;
  #L160e98.  v4:= temp @kind object;
  #L160e9a.  call `startCoroutineUnintercepted`(v3, v5, v4) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startCoroutineUnintercepted:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L160ea0.  goto L160eb0;
  #L160ea2.  call temp:= `getCompletion`(v4) @signature `Lkotlinx/coroutines/selects/SelectInstance;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind interface;
  #L160ea8.  v4:= temp @kind object;
  #L160eaa.  call `startCoroutineUnintercepted`(v3, v6, v4) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startCoroutineUnintercepted:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L160eb0.  return @kind void;
}
procedure `void` `cancel`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.cancel:()V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L160bd8.  call `cancel`(v0) @signature `Lkotlinx/coroutines/channels/Channel$DefaultImpls;.cancel:(Lkotlinx/coroutines/channels/Channel;)V` @kind static;
  #L160bde.  return @kind void;
}
procedure `void` `cancel`(`kotlinx.coroutines.channels.AbstractChannel` v2 @kind this, `java.util.concurrent.CancellationException` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.cancel:(Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L160bf0.  call temp:= `isClosedForReceive`(v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isClosedForReceive:()Z` @kind virtual;
  #L160bf6.  v0:= temp;
  #L160bf8.  if v0 == 0 then goto L160bfe;
  #L160bfc.  return @kind void;
  #L160bfe.  if v3 != 0 then goto L160c20;
  #L160c02.  v3:= new `java.util.concurrent.CancellationException`;
  #L160c06.  call temp:= `getClassSimpleName`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L160c0c.  v0:= temp @kind object;
  #L160c0e.  v1:= " was cancelled" @kind object;
  #L160c12.  call temp:= `stringPlus`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L160c18.  v0:= temp @kind object;
  #L160c1a.  call `<init>`(v3, v0) @signature `Ljava/util/concurrent/CancellationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L160c20.  call temp:= `cancelInternal$kotlinx_coroutines_core`(v2, v3) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.cancelInternal$kotlinx_coroutines_core:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L160c26.  return @kind void;
}
procedure `boolean` `cancel`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.cancel:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;

  #L1605dc.  call temp:= `cancelInternal$kotlinx_coroutines_core`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.cancelInternal$kotlinx_coroutines_core:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L1605e2.  v1:= temp;
  #L1605e4.  return v1;
}
procedure `boolean` `cancelInternal$kotlinx_coroutines_core`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.cancelInternal$kotlinx_coroutines_core:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1605f8.  call temp:= `close`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.close:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L1605fe.  v1:= temp;
  #L160600.  call `onCancelIdempotent`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onCancelIdempotent:(Z)V` @kind virtual;
  #L160606.  return v1;
}
procedure `kotlinx.coroutines.channels.AbstractChannel$TryPollDesc` `describeTryPoll`(`kotlinx.coroutines.channels.AbstractChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.describeTryPoll:()Lkotlinx/coroutines/channels/AbstractChannel$TryPollDesc;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L160ad0.  v0:= new `kotlinx.coroutines.channels.AbstractChannel$TryPollDesc`;
  #L160ad4.  call temp:= `getQueue`(v2) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getQueue:()Lkotlinx/coroutines/internal/LockFreeLinkedListHead;` @kind virtual;
  #L160ada.  v1:= temp @kind object;
  #L160adc.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel$TryPollDesc;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListHead;)V` @kind direct;
  #L160ae2.  return v0 @kind object;
}
procedure `boolean` `enqueueReceiveInternal`(`kotlinx.coroutines.channels.AbstractChannel` v6 @kind this, `kotlinx.coroutines.channels.Receive` v7 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.enqueueReceiveInternal:(Lkotlinx/coroutines/channels/Receive;)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16063c.  call temp:= `isBufferAlwaysEmpty`(v6) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isBufferAlwaysEmpty:()Z` @kind virtual;
  #L160642.  v0:= temp;
  #L160644.  v1:= 0I;
  #L160646.  v2:= 1I;
  #L160648.  if v0 == 0 then goto L160676;
  #L16064c.  call temp:= `getQueue`(v6) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getQueue:()Lkotlinx/coroutines/internal/LockFreeLinkedListHead;` @kind virtual;
  #L160652.  v0:= temp @kind object;
  #L160654.  call temp:= `getPrevNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getPrevNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L16065a.  v3:= temp @kind object;
  #L16065c.  v4:= instanceof @variable v3 @type ^`kotlinx.coroutines.channels.Send` @kind boolean;
  #L160660.  v4:= v4 ^~ v2 @kind int;
  #L160662.  if v4 != 0 then goto L160668;
  #L160666.  goto L1606b2;
  #L160668.  call temp:= `addNext`(v3, v7, v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.addNext:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Z` @kind virtual;
  #L16066e.  v3:= temp;
  #L160670.  if v3 == 0 then goto L160654;
  #L160674.  goto L1606b0;
  #L160676.  call temp:= `getQueue`(v6) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getQueue:()Lkotlinx/coroutines/internal/LockFreeLinkedListHead;` @kind virtual;
  #L16067c.  v0:= temp @kind object;
  #L16067e.  v3:= new `kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1`;
  #L160682.  call `<init>`(v3, v7, v6) @signature `Lkotlinx/coroutines/channels/AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/channels/AbstractChannel;)V` @kind direct;
  #L160688.  call temp:= `getPrevNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getPrevNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L16068e.  v4:= temp @kind object;
  #L160690.  v5:= instanceof @variable v4 @type ^`kotlinx.coroutines.channels.Send` @kind boolean;
  #L160694.  v5:= v5 ^~ v2 @kind int;
  #L160696.  if v5 != 0 then goto L16069c;
  #L16069a.  goto L1606b2;
  #L16069c.  call temp:= `tryCondAddNext`(v4, v7, v0, v3) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.tryCondAddNext:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode$CondAddOp;)I` @kind virtual;
  #L1606a2.  v4:= temp;
  #L1606a4.  if v4 == v2 then goto L1606b0;
  #L1606a8.  v5:= 2I;
  #L1606aa.  if v4 == v5 then goto L1606b2;
  #L1606ae.  goto L160688;
  #L1606b0.  v1:= 1I;
  #L1606b2.  return v1;
}
procedure `boolean` `getHasReceiveOrClosed`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.getHasReceiveOrClosed:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L1606f4.  call temp:= `getQueue`(v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getQueue:()Lkotlinx/coroutines/internal/LockFreeLinkedListHead;` @kind virtual;
  #L1606fa.  v0:= temp @kind object;
  #L1606fc.  call temp:= `getNextNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L160702.  v0:= temp @kind object;
  #L160704.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.ReceiveOrClosed` @kind boolean;
  #L160708.  return v0;
}
procedure `kotlinx.coroutines.selects.SelectClause1` `getOnReceive`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.getOnReceive:()Lkotlinx/coroutines/selects/SelectClause1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L160b3c.  v0:= new `kotlinx.coroutines.channels.AbstractChannel$onReceive$1`;
  #L160b40.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel$onReceive$1;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel;)V` @kind direct;
  #L160b46.  return v0 @kind object;
}
procedure `kotlinx.coroutines.selects.SelectClause1` `getOnReceiveCatching`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.getOnReceiveCatching:()Lkotlinx/coroutines/selects/SelectClause1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L160b58.  v0:= new `kotlinx.coroutines.channels.AbstractChannel$onReceiveCatching$1`;
  #L160b5c.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel$onReceiveCatching$1;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel;)V` @kind direct;
  #L160b62.  return v0 @kind object;
}
procedure `kotlinx.coroutines.selects.SelectClause1` `getOnReceiveOrNull`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.getOnReceiveOrNull:()Lkotlinx/coroutines/selects/SelectClause1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L160b74.  call temp:= `getOnReceiveOrNull`(v1) @signature `Lkotlinx/coroutines/channels/Channel$DefaultImpls;.getOnReceiveOrNull:(Lkotlinx/coroutines/channels/Channel;)Lkotlinx/coroutines/selects/SelectClause1;` @kind static;
  #L160b7a.  v0:= temp @kind object;
  #L160b7c.  return v0 @kind object;
}
procedure `boolean` `isBufferAlwaysEmpty`() @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isBufferAlwaysEmpty:()Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `isBufferEmpty`() @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isBufferEmpty:()Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `isClosedForReceive`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isClosedForReceive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16071c.  call temp:= `getClosedForReceive`(v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForReceive:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L160722.  v0:= temp @kind object;
  #L160724.  if v0 == 0 then goto L160738;
  #L160728.  call temp:= `isBufferEmpty`(v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isBufferEmpty:()Z` @kind virtual;
  #L16072e.  v0:= temp;
  #L160730.  if v0 == 0 then goto L160738;
  #L160734.  v0:= 1I;
  #L160736.  goto L16073a;
  #L160738.  v0:= 0I;
  #L16073a.  return v0;
}
procedure `boolean` `isEmpty`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16074c.  call temp:= `isEmptyImpl`(v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isEmptyImpl:()Z` @kind virtual;
  #L160752.  v0:= temp;
  #L160754.  return v0;
}
procedure `boolean` `isEmptyImpl`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isEmptyImpl:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L160768.  call temp:= `getQueue`(v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getQueue:()Lkotlinx/coroutines/internal/LockFreeLinkedListHead;` @kind virtual;
  #L16076e.  v0:= temp @kind object;
  #L160770.  call temp:= `getNextNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L160776.  v0:= temp @kind object;
  #L160778.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.Send` @kind boolean;
  #L16077c.  if v0 != 0 then goto L160790;
  #L160780.  call temp:= `isBufferEmpty`(v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isBufferEmpty:()Z` @kind virtual;
  #L160786.  v0:= temp;
  #L160788.  if v0 == 0 then goto L160790;
  #L16078c.  v0:= 1I;
  #L16078e.  goto L160792;
  #L160790.  v0:= 0I;
  #L160792.  return v0;
}
procedure `kotlinx.coroutines.channels.ChannelIterator` `iterator`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.iterator:()Lkotlinx/coroutines/channels/ChannelIterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L160af4.  v0:= new `kotlinx.coroutines.channels.AbstractChannel$a`;
  #L160af8.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel;)V` @kind direct;
  #L160afe.  return v0 @kind object;
}
procedure `void` `onCancelIdempotent`(`kotlinx.coroutines.channels.AbstractChannel` v3 @kind this, `boolean` v4 ) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onCancelIdempotent:(Z)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L160c38.  call temp:= `getClosedForSend`(v3) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForSend:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L160c3e.  v4:= temp @kind object;
  #L160c40.  if v4 == 0 then goto L160cac;
  #L160c44.  v0:= 1I;
  #L160c46.  v1:= 0I;
  #L160c48.  call temp:= `constructor-impl$default`(v1, v0, v1) @signature `Lkotlinx/coroutines/internal/InlineList;.constructor-impl$default:(Ljava/lang/Object;ILkotlin/jvm/internal/DefaultConstructorMarker;)Ljava/lang/Object;` @kind static;
  #L160c4e.  v0:= temp @kind object;
  #L160c50.  call temp:= `getPrevNode`(v4) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getPrevNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L160c56.  v1:= temp @kind object;
  #L160c58.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind boolean;
  #L160c5c.  if v2 == 0 then goto L160c68;
  #L160c60.  call `onCancelIdempotentList-w-w6eGU`(v3, v0, v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onCancelIdempotentList-w-w6eGU:(Ljava/lang/Object;Lkotlinx/coroutines/channels/Closed;)V` @kind virtual;
  #L160c66.  return @kind void;
  #L160c68.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L160c6e.  v2:= temp;
  #L160c70.  if v2 == 0 then goto L160c8a;
  #L160c74.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.channels.Send` @kind boolean;
  #L160c78.  if v2 == 0 then goto L160c7e;
  #L160c7c.  goto L160c8a;
  #L160c7e.  v4:= new `java.lang.AssertionError`;
  #L160c82.  call `<init>`(v4) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L160c88.  throw v4;
  #L160c8a.  call temp:= `remove`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.remove:()Z` @kind virtual;
  #L160c90.  v2:= temp;
  #L160c92.  if v2 != 0 then goto L160c9e;
  #L160c96.  call `helpRemove`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.helpRemove:()V` @kind virtual;
  #L160c9c.  goto L160c50;
  #L160c9e.  v1:= (`kotlinx.coroutines.channels.Send`) v1 @kind object;
  #L160ca2.  call temp:= `plus-FjFbRPM`(v0, v1) @signature `Lkotlinx/coroutines/internal/InlineList;.plus-FjFbRPM:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L160ca8.  v0:= temp @kind object;
  #L160caa.  goto L160c50;
  #L160cac.  v4:= new `java.lang.IllegalStateException`;
  #L160cb0.  v0:= "Cannot happen" @kind object;
  #L160cb4.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L160cba.  v0:= temp @kind object;
  #L160cbc.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L160cc2.  throw v4;
}
procedure `void` `onCancelIdempotentList-w-w6eGU`(`kotlinx.coroutines.channels.AbstractChannel` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlinx.coroutines.channels.Closed` v4 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onCancelIdempotentList-w-w6eGU:(Ljava/lang/Object;Lkotlinx/coroutines/channels/Closed;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L160cd4.  if v3 != 0 then goto L160cda;
  #L160cd8.  goto L160d26;
  #L160cda.  v0:= instanceof @variable v3 @type ^`java.util.ArrayList` @kind boolean;
  #L160cde.  if v0 != 0 then goto L160cee;
  #L160ce2.  v3:= (`kotlinx.coroutines.channels.Send`) v3 @kind object;
  #L160ce6.  call `resumeSendClosed`(v3, v4) @signature `Lkotlinx/coroutines/channels/Send;.resumeSendClosed:(Lkotlinx/coroutines/channels/Closed;)V` @kind virtual;
  #L160cec.  goto L160d26;
  #L160cee.  if v3 == 0 then goto L160d28;
  #L160cf2.  v3:= (`java.util.ArrayList`) v3 @kind object;
  #L160cf6.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L160cfc.  v0:= temp;
  #L160cfe.  v0:= v0 + -1;
  #L160d02.  if v0 < 0 then goto L160d26;
  #L160d06.  v1:= v0 + -1;
  #L160d0a.  call temp:= `get`(v3, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L160d10.  v0:= temp @kind object;
  #L160d12.  v0:= (`kotlinx.coroutines.channels.Send`) v0 @kind object;
  #L160d16.  call `resumeSendClosed`(v0, v4) @signature `Lkotlinx/coroutines/channels/Send;.resumeSendClosed:(Lkotlinx/coroutines/channels/Closed;)V` @kind virtual;
  #L160d1c.  if v1 >= 0 then goto L160d22;
  #L160d20.  goto L160d26;
  #L160d22.  v0:= v1;
  #L160d24.  goto L160d06;
  #L160d26.  return @kind void;
  #L160d28.  v3:= new `java.lang.NullPointerException`;
  #L160d2c.  v4:= "null cannot be cast to non-null type java.util.ArrayList<E of kotlinx.coroutines.internal.InlineList>{ kotlin.collections.TypeAliasesKt.ArrayList<E of kotlinx.coroutines.internal.InlineList> }" @kind object;
  #L160d30.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L160d36.  throw v3;
}
procedure `void` `onReceiveDequeued`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onReceiveDequeued:()V` @AccessFlag PROTECTED {
    temp;

  #L160d48.  return @kind void;
}
procedure `void` `onReceiveEnqueued`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onReceiveEnqueued:()V` @AccessFlag PROTECTED {
    temp;

  #L160d5c.  return @kind void;
}
procedure `java.lang.Object` `poll`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1607c0.  call temp:= `poll`(v1) @signature `Lkotlinx/coroutines/channels/Channel$DefaultImpls;.poll:(Lkotlinx/coroutines/channels/Channel;)Ljava/lang/Object;` @kind static;
  #L1607c6.  v0:= temp @kind object;
  #L1607c8.  return v0 @kind object;
}
procedure `java.lang.Object` `pollInternal`(`kotlinx.coroutines.channels.AbstractChannel` v3 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.pollInternal:()Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L1607dc.  call temp:= `takeFirstSendOrPeekClosed`(v3) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.takeFirstSendOrPeekClosed:()Lkotlinx/coroutines/channels/Send;` @kind virtual;
  #L1607e2.  v0:= temp @kind object;
  #L1607e4.  if v0 != 0 then goto L1607ee;
  #L1607e8.  v0:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L1607ec.  return v0 @kind object;
  #L1607ee.  v1:= 0I;
  #L1607f0.  call temp:= `tryResumeSend`(v0, v1) @signature `Lkotlinx/coroutines/channels/Send;.tryResumeSend:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Lkotlinx/coroutines/internal/Symbol;` @kind virtual;
  #L1607f6.  v1:= temp @kind object;
  #L1607f8.  if v1 == 0 then goto L160838;
  #L1607fc.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L160802.  v2:= temp;
  #L160804.  if v2 == 0 then goto L160828;
  #L160808.  v2:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16080c.  if v1 != v2 then goto L160814;
  #L160810.  v1:= 1I;
  #L160812.  goto L160816;
  #L160814.  v1:= 0I;
  #L160816.  if v1 == 0 then goto L16081c;
  #L16081a.  goto L160828;
  #L16081c.  v0:= new `java.lang.AssertionError`;
  #L160820.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L160826.  throw v0;
  #L160828.  call `completeResumeSend`(v0) @signature `Lkotlinx/coroutines/channels/Send;.completeResumeSend:()V` @kind virtual;
  #L16082e.  call temp:= `getPollResult`(v0) @signature `Lkotlinx/coroutines/channels/Send;.getPollResult:()Ljava/lang/Object;` @kind virtual;
  #L160834.  v0:= temp @kind object;
  #L160836.  return v0 @kind object;
  #L160838.  call `undeliveredElement`(v0) @signature `Lkotlinx/coroutines/channels/Send;.undeliveredElement:()V` @kind virtual;
  #L16083e.  goto L1607dc;
}
procedure `java.lang.Object` `pollSelectInternal`(`kotlinx.coroutines.channels.AbstractChannel` v1 @kind this, `kotlinx.coroutines.selects.SelectInstance` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.pollSelectInternal:(Lkotlinx/coroutines/selects/SelectInstance;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L160850.  call temp:= `describeTryPoll`(v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.describeTryPoll:()Lkotlinx/coroutines/channels/AbstractChannel$TryPollDesc;` @kind virtual;
  #L160856.  v0:= temp @kind object;
  #L160858.  call temp:= `performAtomicTrySelect`(v2, v0) @signature `Lkotlinx/coroutines/selects/SelectInstance;.performAtomicTrySelect:(Lkotlinx/coroutines/internal/AtomicDesc;)Ljava/lang/Object;` @kind interface;
  #L16085e.  v2:= temp @kind object;
  #L160860.  if v2 == 0 then goto L160866;
  #L160864.  return v2 @kind object;
  #L160866.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$RemoveFirstDesc;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L16086c.  v2:= temp @kind object;
  #L16086e.  v2:= (`kotlinx.coroutines.channels.Send`) v2 @kind object;
  #L160872.  call `completeResumeSend`(v2) @signature `Lkotlinx/coroutines/channels/Send;.completeResumeSend:()V` @kind virtual;
  #L160878.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$RemoveFirstDesc;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L16087e.  v2:= temp @kind object;
  #L160880.  v2:= (`kotlinx.coroutines.channels.Send`) v2 @kind object;
  #L160884.  call temp:= `getPollResult`(v2) @signature `Lkotlinx/coroutines/channels/Send;.getPollResult:()Ljava/lang/Object;` @kind virtual;
  #L16088a.  v2:= temp @kind object;
  #L16088c.  return v2 @kind object;
}
procedure `java.lang.Object` `receive`(`kotlinx.coroutines.channels.AbstractChannel` v2 @kind this, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.receive:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1608a0.  call temp:= `pollInternal`(v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.pollInternal:()Ljava/lang/Object;` @kind virtual;
  #L1608a6.  v0:= temp @kind object;
  #L1608a8.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L1608ac.  if v0 == v1 then goto L1608ba;
  #L1608b0.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L1608b4.  if v1 != 0 then goto L1608ba;
  #L1608b8.  return v0 @kind object;
  #L1608ba.  v0:= 0I;
  #L1608bc.  call temp:= `m`(v2, v0, v3) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.m:(ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind direct;
  #L1608c2.  v3:= temp @kind object;
  #L1608c4.  return v3 @kind object;
}
procedure `java.lang.Object` `receiveCatching-JP2dKIU`(`kotlinx.coroutines.channels.AbstractChannel` v4 @kind this, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.receiveCatching-JP2dKIU:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1608d8.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.channels.AbstractChannel$g` @kind boolean;
  #L1608dc.  if v0 == 0 then goto L1608fe;
  #L1608e0.  v0:= v5 @kind object;
  #L1608e2.  v0:= (`kotlinx.coroutines.channels.AbstractChannel$g`) v0 @kind object;
  #L1608e6.  v1:= v0.`kotlinx.coroutines.channels.AbstractChannel$g.c` @type ^`int`;
  #L1608ea.  v2:= -2147483648I;
  #L1608ee.  v3:= v1 ^& v2 @kind int;
  #L1608f2.  if v3 == 0 then goto L1608fe;
  #L1608f6.  v1:= v1 - v2 @kind int;
  #L1608f8.  v0.`kotlinx.coroutines.channels.AbstractChannel$g.c` @type ^`int` := v1;
  #L1608fc.  goto L160908;
  #L1608fe.  v0:= new `kotlinx.coroutines.channels.AbstractChannel$g`;
  #L160902.  call `<init>`(v0, v4, v5) @signature `Lkotlinx/coroutines/channels/AbstractChannel$g;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L160908.  v5:= v0.`kotlinx.coroutines.channels.AbstractChannel$g.a` @type ^`java.lang.Object` @kind object;
  #L16090c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L160912.  v1:= temp @kind object;
  #L160914.  v2:= v0.`kotlinx.coroutines.channels.AbstractChannel$g.c` @type ^`int`;
  #L160918.  v3:= 1I;
  #L16091a.  if v2 == 0 then goto L16093a;
  #L16091e.  if v2 != v3 then goto L16092a;
  #L160922.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L160928.  goto L16098e;
  #L16092a.  v5:= new `java.lang.IllegalStateException`;
  #L16092e.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L160932.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L160938.  throw v5;
  #L16093a.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L160940.  call temp:= `pollInternal`(v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.pollInternal:()Ljava/lang/Object;` @kind virtual;
  #L160946.  v5:= temp @kind object;
  #L160948.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16094c.  if v5 == v2 then goto L16097c;
  #L160950.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L160954.  if v0 == 0 then goto L16096e;
  #L160958.  v0:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L16095c.  v5:= (`kotlinx.coroutines.channels.Closed`) v5 @kind object;
  #L160960.  v5:= v5.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L160964.  call temp:= `closed-JP2dKIU`(v0, v5) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.closed-JP2dKIU:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind virtual;
  #L16096a.  v5:= temp @kind object;
  #L16096c.  goto L16097a;
  #L16096e.  v0:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L160972.  call temp:= `success-JP2dKIU`(v0, v5) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.success-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L160978.  v5:= temp @kind object;
  #L16097a.  return v5 @kind object;
  #L16097c.  v0.`kotlinx.coroutines.channels.AbstractChannel$g.c` @type ^`int` := v3;
  #L160980.  call temp:= `m`(v4, v3, v0) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.m:(ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind direct;
  #L160986.  v5:= temp @kind object;
  #L160988.  if v5 != v1 then goto L16098e;
  #L16098c.  return v1 @kind object;
  #L16098e.  v5:= (`kotlinx.coroutines.channels.ChannelResult`) v5 @kind object;
  #L160992.  call temp:= `unbox-impl`(v5) @signature `Lkotlinx/coroutines/channels/ChannelResult;.unbox-impl:()Ljava/lang/Object;` @kind virtual;
  #L160998.  v5:= temp @kind object;
  #L16099a.  return v5 @kind object;
}
procedure `java.lang.Object` `receiveOrNull`(`kotlinx.coroutines.channels.AbstractChannel` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.receiveOrNull:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L1609ac.  call temp:= `receiveOrNull`(v0, v1) @signature `Lkotlinx/coroutines/channels/Channel$DefaultImpls;.receiveOrNull:(Lkotlinx/coroutines/channels/Channel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L1609b2.  v1:= temp @kind object;
  #L1609b4.  return v1 @kind object;
}
procedure `kotlinx.coroutines.channels.ReceiveOrClosed` `takeFirstReceiveOrPeekClosed`(`kotlinx.coroutines.channels.AbstractChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.takeFirstReceiveOrPeekClosed:()Lkotlinx/coroutines/channels/ReceiveOrClosed;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L160b10.  call temp:= `takeFirstReceiveOrPeekClosed`(v2) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.takeFirstReceiveOrPeekClosed:()Lkotlinx/coroutines/channels/ReceiveOrClosed;` @kind super;
  #L160b16.  v0:= temp @kind object;
  #L160b18.  if v0 == 0 then goto L160b2a;
  #L160b1c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L160b20.  if v1 != 0 then goto L160b2a;
  #L160b24.  call `onReceiveDequeued`(v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onReceiveDequeued:()V` @kind virtual;
  #L160b2a.  return v0 @kind object;
}
procedure `java.lang.Object` `tryReceive-PtdJZtk`(`kotlinx.coroutines.channels.AbstractChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.tryReceive-PtdJZtk:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L160a74.  call temp:= `pollInternal`(v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.pollInternal:()Ljava/lang/Object;` @kind virtual;
  #L160a7a.  v0:= temp @kind object;
  #L160a7c.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L160a80.  if v0 != v1 then goto L160a92;
  #L160a84.  v0:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L160a88.  call temp:= `failure-PtdJZtk`(v0) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.failure-PtdJZtk:()Ljava/lang/Object;` @kind virtual;
  #L160a8e.  v0:= temp @kind object;
  #L160a90.  return v0 @kind object;
  #L160a92.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L160a96.  if v1 == 0 then goto L160ab0;
  #L160a9a.  v1:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L160a9e.  v0:= (`kotlinx.coroutines.channels.Closed`) v0 @kind object;
  #L160aa2.  v0:= v0.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L160aa6.  call temp:= `closed-JP2dKIU`(v1, v0) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.closed-JP2dKIU:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind virtual;
  #L160aac.  v0:= temp @kind object;
  #L160aae.  return v0 @kind object;
  #L160ab0.  v1:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L160ab4.  call temp:= `success-JP2dKIU`(v1, v0) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.success-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L160aba.  v0:= temp @kind object;
  #L160abc.  return v0 @kind object;
}
