record `kotlinx.coroutines.channels.TickerChannelsKt$ticker$3$WhenMappings` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
global `int`[] `@@kotlinx.coroutines.channels.TickerChannelsKt$ticker$3$WhenMappings.$EnumSwitchMapping$0` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/channels/TickerChannelsKt$ticker$3$WhenMappings;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L16c6bc.  call temp:= `values`() @signature `Lkotlinx/coroutines/channels/TickerMode;.values:()[Lkotlinx/coroutines/channels/TickerMode;` @kind static;
  #L16c6c2.  v0:= temp @kind object;
  #L16c6c4.  v0:= length @variable v0;
  #L16c6c6.  v0:= new `int`[v0];
  #L16c6ca.  v1:= `@@kotlinx.coroutines.channels.TickerMode.FIXED_PERIOD` @type ^`kotlinx.coroutines.channels.TickerMode` @kind object;
  #L16c6ce.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L16c6d4.  v1:= temp;
  #L16c6d6.  v2:= 1I;
  #L16c6d8.  v0[v1]:= v2;
  #L16c6dc.  v1:= `@@kotlinx.coroutines.channels.TickerMode.FIXED_DELAY` @type ^`kotlinx.coroutines.channels.TickerMode` @kind object;
  #L16c6e0.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L16c6e6.  v1:= temp;
  #L16c6e8.  v2:= 2I;
  #L16c6ea.  v0[v1]:= v2;
  #L16c6ee.  `@@kotlinx.coroutines.channels.TickerChannelsKt$ticker$3$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] := v0 @kind object;
  #L16c6f2.  return @kind void;
}
