record `kotlinx.coroutines.channels.AbstractChannel$e` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.channels.Receive` @kind class, `kotlinx.coroutines.DisposableHandle` @kind interface {
  `kotlinx.coroutines.channels.AbstractChannel` `kotlinx.coroutines.channels.AbstractChannel$e.d` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.selects.SelectInstance` `kotlinx.coroutines.channels.AbstractChannel$e.e` @AccessFlag PUBLIC_FINAL;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.channels.AbstractChannel$e.f` @AccessFlag PUBLIC_FINAL;
  `int` `kotlinx.coroutines.channels.AbstractChannel$e.g` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.AbstractChannel$e` v0 @kind this, `kotlinx.coroutines.channels.AbstractChannel` v1 @kind object, `kotlinx.coroutines.selects.SelectInstance` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object, `int` v4 ) @signature `Lkotlinx/coroutines/channels/AbstractChannel$e;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function2;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1600ec.  call `<init>`(v0) @signature `Lkotlinx/coroutines/channels/Receive;.<init>:()V` @kind direct;
  #L1600f2.  v0.`kotlinx.coroutines.channels.AbstractChannel$e.d` @type ^`kotlinx.coroutines.channels.AbstractChannel` := v1 @kind object;
  #L1600f6.  v0.`kotlinx.coroutines.channels.AbstractChannel$e.e` @type ^`kotlinx.coroutines.selects.SelectInstance` := v2 @kind object;
  #L1600fa.  v0.`kotlinx.coroutines.channels.AbstractChannel$e.f` @type ^`kotlin.jvm.functions.Function2` := v3 @kind object;
  #L1600fe.  v0.`kotlinx.coroutines.channels.AbstractChannel$e.g` @type ^`int` := v4;
  #L160102.  return @kind void;
}
procedure `void` `completeResumeReceive`(`kotlinx.coroutines.channels.AbstractChannel$e` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$e;.completeResumeReceive:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L160114.  v0:= v3.`kotlinx.coroutines.channels.AbstractChannel$e.f` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L160118.  v1:= v3.`kotlinx.coroutines.channels.AbstractChannel$e.g` @type ^`int`;
  #L16011c.  v2:= 1I;
  #L16011e.  if v1 != v2 then goto L160138;
  #L160122.  v1:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L160126.  call temp:= `success-JP2dKIU`(v1, v4) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.success-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16012c.  v1:= temp @kind object;
  #L16012e.  call temp:= `box-impl`(v1) @signature `Lkotlinx/coroutines/channels/ChannelResult;.box-impl:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/ChannelResult;` @kind static;
  #L160134.  v1:= temp @kind object;
  #L160136.  goto L16013a;
  #L160138.  v1:= v4 @kind object;
  #L16013a.  v2:= v3.`kotlinx.coroutines.channels.AbstractChannel$e.e` @type ^`kotlinx.coroutines.selects.SelectInstance` @kind object;
  #L16013e.  call temp:= `getCompletion`(v2) @signature `Lkotlinx/coroutines/selects/SelectInstance;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind interface;
  #L160144.  v2:= temp @kind object;
  #L160146.  call temp:= `resumeOnCancellationFun`(v3, v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel$e;.resumeOnCancellationFun:(Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;` @kind virtual;
  #L16014c.  v4:= temp @kind object;
  #L16014e.  call `startCoroutineCancellable`(v0, v1, v2, v4) @signature `Lkotlinx/coroutines/intrinsics/CancellableKt;.startCoroutineCancellable:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function1;)V` @kind static;
  #L160154.  return @kind void;
}
procedure `void` `dispose`(`kotlinx.coroutines.channels.AbstractChannel$e` v1 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel$e;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L160168.  call temp:= `remove`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.remove:()Z` @kind virtual;
  #L16016e.  v0:= temp;
  #L160170.  if v0 == 0 then goto L16017e;
  #L160174.  v0:= v1.`kotlinx.coroutines.channels.AbstractChannel$e.d` @type ^`kotlinx.coroutines.channels.AbstractChannel` @kind object;
  #L160178.  call `onReceiveDequeued`(v0) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onReceiveDequeued:()V` @kind virtual;
  #L16017e.  return @kind void;
}
procedure `kotlin.jvm.functions.Function1` `resumeOnCancellationFun`(`kotlinx.coroutines.channels.AbstractChannel$e` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$e;.resumeOnCancellationFun:(Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L160088.  v0:= v2.`kotlinx.coroutines.channels.AbstractChannel$e.d` @type ^`kotlinx.coroutines.channels.AbstractChannel` @kind object;
  #L16008c.  v0:= v0.`kotlinx.coroutines.channels.AbstractSendChannel.onUndeliveredElement` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L160090.  if v0 != 0 then goto L160098;
  #L160094.  v3:= 0I;
  #L160096.  goto L1600b4;
  #L160098.  v1:= v2.`kotlinx.coroutines.channels.AbstractChannel$e.e` @type ^`kotlinx.coroutines.selects.SelectInstance` @kind object;
  #L16009c.  call temp:= `getCompletion`(v1) @signature `Lkotlinx/coroutines/selects/SelectInstance;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind interface;
  #L1600a2.  v1:= temp @kind object;
  #L1600a4.  call temp:= `getContext`(v1) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L1600aa.  v1:= temp @kind object;
  #L1600ac.  call temp:= `bindCancellationFun`(v0, v3, v1) @signature `Lkotlinx/coroutines/internal/OnUndeliveredElementKt;.bindCancellationFun:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlin/coroutines/CoroutineContext;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L1600b2.  v3:= temp @kind object;
  #L1600b4.  return v3 @kind object;
}
procedure `void` `resumeReceiveClosed`(`kotlinx.coroutines.channels.AbstractChannel$e` v8 @kind this, `kotlinx.coroutines.channels.Closed` v9 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$e;.resumeReceiveClosed:(Lkotlinx/coroutines/channels/Closed;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L160190.  v0:= v8.`kotlinx.coroutines.channels.AbstractChannel$e.e` @type ^`kotlinx.coroutines.selects.SelectInstance` @kind object;
  #L160194.  call temp:= `trySelect`(v0) @signature `Lkotlinx/coroutines/selects/SelectInstance;.trySelect:()Z` @kind interface;
  #L16019a.  v0:= temp;
  #L16019c.  if v0 != 0 then goto L1601a2;
  #L1601a0.  return @kind void;
  #L1601a2.  v0:= v8.`kotlinx.coroutines.channels.AbstractChannel$e.g` @type ^`int`;
  #L1601a6.  if v0 == 0 then goto L1601e8;
  #L1601aa.  v1:= 1I;
  #L1601ac.  if v0 == v1 then goto L1601b2;
  #L1601b0.  goto L1601fa;
  #L1601b2.  v2:= v8.`kotlinx.coroutines.channels.AbstractChannel$e.f` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L1601b6.  v0:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L1601ba.  v9:= v9.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L1601be.  call temp:= `closed-JP2dKIU`(v0, v9) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.closed-JP2dKIU:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind virtual;
  #L1601c4.  v9:= temp @kind object;
  #L1601c6.  call temp:= `box-impl`(v9) @signature `Lkotlinx/coroutines/channels/ChannelResult;.box-impl:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/ChannelResult;` @kind static;
  #L1601cc.  v3:= temp @kind object;
  #L1601ce.  v9:= v8.`kotlinx.coroutines.channels.AbstractChannel$e.e` @type ^`kotlinx.coroutines.selects.SelectInstance` @kind object;
  #L1601d2.  call temp:= `getCompletion`(v9) @signature `Lkotlinx/coroutines/selects/SelectInstance;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind interface;
  #L1601d8.  v4:= temp @kind object;
  #L1601da.  v5:= 0I;
  #L1601dc.  v6:= 4I;
  #L1601de.  v7:= 0I;
  #L1601e0.  call `startCoroutineCancellable$default`(v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/intrinsics/CancellableKt;.startCoroutineCancellable$default:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @kind static;
  #L1601e6.  goto L1601fa;
  #L1601e8.  v0:= v8.`kotlinx.coroutines.channels.AbstractChannel$e.e` @type ^`kotlinx.coroutines.selects.SelectInstance` @kind object;
  #L1601ec.  call temp:= `getReceiveException`(v9) @signature `Lkotlinx/coroutines/channels/Closed;.getReceiveException:()Ljava/lang/Throwable;` @kind virtual;
  #L1601f2.  v9:= temp @kind object;
  #L1601f4.  call `resumeSelectWithException`(v0, v9) @signature `Lkotlinx/coroutines/selects/SelectInstance;.resumeSelectWithException:(Ljava/lang/Throwable;)V` @kind interface;
  #L1601fa.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.channels.AbstractChannel$e` v2 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel$e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L160018.  v0:= new `java.lang.StringBuilder`;
  #L16001c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L160022.  v1:= "ReceiveSelect@" @kind object;
  #L160026.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16002c.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L160032.  v1:= temp @kind object;
  #L160034.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16003a.  v1:= 91I;
  #L16003e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L160044.  v1:= v2.`kotlinx.coroutines.channels.AbstractChannel$e.e` @type ^`kotlinx.coroutines.selects.SelectInstance` @kind object;
  #L160048.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16004e.  v1:= ",receiveMode=" @kind object;
  #L160052.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L160058.  v1:= v2.`kotlinx.coroutines.channels.AbstractChannel$e.g` @type ^`int`;
  #L16005c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L160062.  v1:= 93I;
  #L160066.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16006c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L160072.  v0:= temp @kind object;
  #L160074.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.Symbol` `tryResumeReceive`(`kotlinx.coroutines.channels.AbstractChannel$e` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$e;.tryResumeReceive:(Ljava/lang/Object;Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC {
    temp;

  #L1600c8.  v1:= v0.`kotlinx.coroutines.channels.AbstractChannel$e.e` @type ^`kotlinx.coroutines.selects.SelectInstance` @kind object;
  #L1600cc.  call temp:= `trySelectOther`(v1, v2) @signature `Lkotlinx/coroutines/selects/SelectInstance;.trySelectOther:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Ljava/lang/Object;` @kind interface;
  #L1600d2.  v1:= temp @kind object;
  #L1600d4.  v1:= (`kotlinx.coroutines.internal.Symbol`) v1 @kind object;
  #L1600d8.  return v1 @kind object;
}
