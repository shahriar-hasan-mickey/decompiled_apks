record `kotlinx.coroutines.channels.BroadcastChannel` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `kotlinx.coroutines.channels.SendChannel` @kind interface {
}
procedure `void` `cancel`(`java.util.concurrent.CancellationException` v0 @kind object) @signature `Lkotlinx/coroutines/channels/BroadcastChannel;.cancel:(Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `cancel`(`java.lang.Throwable` v0 @kind object) @signature `Lkotlinx/coroutines/channels/BroadcastChannel;.cancel:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_ABSTRACT_SYNTHETIC {

  # return;
}
procedure `kotlinx.coroutines.channels.ReceiveChannel` `openSubscription`() @signature `Lkotlinx/coroutines/channels/BroadcastChannel;.openSubscription:()Lkotlinx/coroutines/channels/ReceiveChannel;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
