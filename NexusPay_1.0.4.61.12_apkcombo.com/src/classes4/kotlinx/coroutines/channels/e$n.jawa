record `kotlinx.coroutines.channels.e$n` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.channels.e$n.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.channels.e$n.b` @AccessFlag SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.e$n` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/channels/e$n;.<init>:(Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L166540.  v0:= 2I;
  #L166542.  call `<init>`(v1, v0, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L166548.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.channels.e$n` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/channels/e$n;.a:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1664a8.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/channels/e$n;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L1664ae.  v1:= temp @kind object;
  #L1664b0.  v1:= (`kotlinx.coroutines.channels.e$n`) v1 @kind object;
  #L1664b4.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1664b8.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/channels/e$n;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1664be.  v1:= temp @kind object;
  #L1664c0.  return v1 @kind object;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.channels.e$n` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/channels/e$n;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L166520.  v0:= new `kotlinx.coroutines.channels.e$n`;
  #L166524.  call `<init>`(v0, v3) @signature `Lkotlinx/coroutines/channels/e$n;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L16652a.  v0.`kotlinx.coroutines.channels.e$n.b` @type ^`java.lang.Object` := v2 @kind object;
  #L16652e.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.channels.e$n` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/channels/e$n;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L166488.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L16648c.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/channels/e$n;.a:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L166492.  v1:= temp @kind object;
  #L166494.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.channels.e$n` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/channels/e$n;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1664d4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1664da.  v0:= v1.`kotlinx.coroutines.channels.e$n.a` @type ^`int`;
  #L1664de.  if v0 != 0 then goto L166500;
  #L1664e2.  call `throwOnFailure`(v2) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1664e8.  v2:= v1.`kotlinx.coroutines.channels.e$n.b` @type ^`java.lang.Object` @kind object;
  #L1664ec.  if v2 == 0 then goto L1664f4;
  #L1664f0.  v2:= 1I;
  #L1664f2.  goto L1664f6;
  #L1664f4.  v2:= 0I;
  #L1664f6.  call temp:= `boxBoolean`(v2) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxBoolean:(Z)Ljava/lang/Boolean;` @kind static;
  #L1664fc.  v2:= temp @kind object;
  #L1664fe.  return v2 @kind object;
  #L166500.  v2:= new `java.lang.IllegalStateException`;
  #L166504.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L166508.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16650e.  throw v2;
}
