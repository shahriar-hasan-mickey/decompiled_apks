record `kotlinx.coroutines.channels.AbstractChannel$f` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.BeforeResumeCancelHandler` @kind class {
  `kotlinx.coroutines.channels.Receive` `kotlinx.coroutines.channels.AbstractChannel$f.a` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.channels.AbstractChannel` `kotlinx.coroutines.channels.AbstractChannel$f.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.AbstractChannel$f` v0 @kind this, `kotlinx.coroutines.channels.AbstractChannel` v1 @kind object, `kotlinx.coroutines.channels.Receive` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$f;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/channels/Receive;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L160270.  v0.`kotlinx.coroutines.channels.AbstractChannel$f.b` @type ^`kotlinx.coroutines.channels.AbstractChannel` := v1 @kind object;
  #L160274.  call `<init>`(v0) @signature `Lkotlinx/coroutines/BeforeResumeCancelHandler;.<init>:()V` @kind direct;
  #L16027a.  v0.`kotlinx.coroutines.channels.AbstractChannel$f.a` @type ^`kotlinx.coroutines.channels.Receive` := v2 @kind object;
  #L16027e.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.channels.AbstractChannel$f` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$f;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L16020c.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L160210.  call `invoke`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel$f;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L160216.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L16021a.  return v1 @kind object;
}
procedure `void` `invoke`(`kotlinx.coroutines.channels.AbstractChannel$f` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$f;.invoke:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L160290.  v1:= v0.`kotlinx.coroutines.channels.AbstractChannel$f.a` @type ^`kotlinx.coroutines.channels.Receive` @kind object;
  #L160294.  call temp:= `remove`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.remove:()Z` @kind virtual;
  #L16029a.  v1:= temp;
  #L16029c.  if v1 == 0 then goto L1602aa;
  #L1602a0.  v1:= v0.`kotlinx.coroutines.channels.AbstractChannel$f.b` @type ^`kotlinx.coroutines.channels.AbstractChannel` @kind object;
  #L1602a4.  call `onReceiveDequeued`(v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onReceiveDequeued:()V` @kind virtual;
  #L1602aa.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.channels.AbstractChannel$f` v2 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel$f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16022c.  v0:= new `java.lang.StringBuilder`;
  #L160230.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L160236.  v1:= "RemoveReceiveOnCancel[" @kind object;
  #L16023a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L160240.  v1:= v2.`kotlinx.coroutines.channels.AbstractChannel$f.a` @type ^`kotlinx.coroutines.channels.Receive` @kind object;
  #L160244.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16024a.  v1:= 93I;
  #L16024e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L160254.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16025a.  v0:= temp @kind object;
  #L16025c.  return v0 @kind object;
}
