record `kotlinx.coroutines.channels.ChannelCoroutine` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.AbstractCoroutine` @kind class, `kotlinx.coroutines.channels.Channel` @kind interface {
  `kotlinx.coroutines.channels.Channel` `kotlinx.coroutines.channels.ChannelCoroutine.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.ChannelCoroutine` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `kotlinx.coroutines.channels.Channel` v2 @kind object, `boolean` v3 , `boolean` v4 ) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/channels/Channel;ZZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L164344.  call `<init>`(v0, v1, v3, v4) @signature `Lkotlinx/coroutines/AbstractCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;ZZ)V` @kind direct;
  #L16434a.  v0.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` := v2 @kind object;
  #L16434e.  return @kind void;
}
procedure `void` `cancel`(`kotlinx.coroutines.channels.ChannelCoroutine` v3 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.cancel:()V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L164360.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L164364.  call temp:= `access$cancellationExceptionMessage`(v3) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L16436a.  v1:= temp @kind object;
  #L16436c.  v2:= 0I;
  #L16436e.  call `<init>`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L164374.  call `cancelInternal`(v3, v0) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L16437a.  return @kind void;
}
procedure `void` `cancel`(`kotlinx.coroutines.channels.ChannelCoroutine` v2 @kind this, `java.util.concurrent.CancellationException` v3 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.cancel:(Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L16438c.  call temp:= `isCancelled`(v2) @signature `Lkotlinx/coroutines/JobSupport;.isCancelled:()Z` @kind virtual;
  #L164392.  v0:= temp;
  #L164394.  if v0 == 0 then goto L16439a;
  #L164398.  return @kind void;
  #L16439a.  if v3 != 0 then goto L1643b4;
  #L16439e.  v3:= 0I;
  #L1643a0.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L1643a4.  call temp:= `access$cancellationExceptionMessage`(v2) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L1643aa.  v1:= temp @kind object;
  #L1643ac.  call `<init>`(v0, v1, v3, v2) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L1643b2.  v3:= v0 @kind object;
  #L1643b4.  call `cancelInternal`(v2, v3) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1643ba.  return @kind void;
}
procedure `boolean` `cancel`(`kotlinx.coroutines.channels.ChannelCoroutine` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.cancel:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L1640c0.  v3:= new `kotlinx.coroutines.JobCancellationException`;
  #L1640c4.  call temp:= `access$cancellationExceptionMessage`(v2) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L1640ca.  v0:= temp @kind object;
  #L1640cc.  v1:= 0I;
  #L1640ce.  call `<init>`(v3, v0, v1, v2) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L1640d4.  call `cancelInternal`(v2, v3) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1640da.  v3:= 1I;
  #L1640dc.  return v3;
}
procedure `void` `cancelInternal`(`kotlinx.coroutines.channels.ChannelCoroutine` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.cancelInternal:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1643cc.  v0:= 0I;
  #L1643ce.  v1:= 1I;
  #L1643d0.  call temp:= `toCancellationException$default`(v2, v3, v0, v1, v0) @signature `Lkotlinx/coroutines/JobSupport;.toCancellationException$default:(Lkotlinx/coroutines/JobSupport;Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CancellationException;` @kind static;
  #L1643d6.  v3:= temp @kind object;
  #L1643d8.  v0:= v2.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L1643dc.  call `cancel`(v0, v3) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L1643e2.  call temp:= `cancelCoroutine`(v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.cancelCoroutine:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L1643e8.  return @kind void;
}
procedure `boolean` `close`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.close:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1640f0.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L1640f4.  call temp:= `close`(v0, v2) @signature `Lkotlinx/coroutines/channels/SendChannel;.close:(Ljava/lang/Throwable;)Z` @kind interface;
  #L1640fa.  v2:= temp;
  #L1640fc.  return v2;
}
procedure `kotlinx.coroutines.channels.Channel` `getChannel`(`kotlinx.coroutines.channels.ChannelCoroutine` v0 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.getChannel:()Lkotlinx/coroutines/channels/Channel;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L164278.  return v0 @kind object;
}
procedure `kotlinx.coroutines.selects.SelectClause1` `getOnReceive`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.getOnReceive:()Lkotlinx/coroutines/selects/SelectClause1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1642c4.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L1642c8.  call temp:= `getOnReceive`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.getOnReceive:()Lkotlinx/coroutines/selects/SelectClause1;` @kind interface;
  #L1642ce.  v0:= temp @kind object;
  #L1642d0.  return v0 @kind object;
}
procedure `kotlinx.coroutines.selects.SelectClause1` `getOnReceiveCatching`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.getOnReceiveCatching:()Lkotlinx/coroutines/selects/SelectClause1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1642e4.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L1642e8.  call temp:= `getOnReceiveCatching`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.getOnReceiveCatching:()Lkotlinx/coroutines/selects/SelectClause1;` @kind interface;
  #L1642ee.  v0:= temp @kind object;
  #L1642f0.  return v0 @kind object;
}
procedure `kotlinx.coroutines.selects.SelectClause1` `getOnReceiveOrNull`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.getOnReceiveOrNull:()Lkotlinx/coroutines/selects/SelectClause1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164304.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L164308.  call temp:= `getOnReceiveOrNull`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.getOnReceiveOrNull:()Lkotlinx/coroutines/selects/SelectClause1;` @kind interface;
  #L16430e.  v0:= temp @kind object;
  #L164310.  return v0 @kind object;
}
procedure `kotlinx.coroutines.selects.SelectClause2` `getOnSend`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.getOnSend:()Lkotlinx/coroutines/selects/SelectClause2;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164324.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L164328.  call temp:= `getOnSend`(v0) @signature `Lkotlinx/coroutines/channels/SendChannel;.getOnSend:()Lkotlinx/coroutines/selects/SelectClause2;` @kind interface;
  #L16432e.  v0:= temp @kind object;
  #L164330.  return v0 @kind object;
}
procedure `kotlinx.coroutines.channels.Channel` `get_channel`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.get_channel:()Lkotlinx/coroutines/channels/Channel;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L16428c.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L164290.  return v0 @kind object;
}
procedure `void` `invokeOnClose`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.invokeOnClose:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1643fc.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L164400.  call `invokeOnClose`(v0, v2) @signature `Lkotlinx/coroutines/channels/SendChannel;.invokeOnClose:(Lkotlin/jvm/functions/Function1;)V` @kind interface;
  #L164406.  return @kind void;
}
procedure `boolean` `isClosedForReceive`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.isClosedForReceive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164110.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L164114.  call temp:= `isClosedForReceive`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.isClosedForReceive:()Z` @kind interface;
  #L16411a.  v0:= temp;
  #L16411c.  return v0;
}
procedure `boolean` `isClosedForSend`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.isClosedForSend:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164130.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L164134.  call temp:= `isClosedForSend`(v0) @signature `Lkotlinx/coroutines/channels/SendChannel;.isClosedForSend:()Z` @kind interface;
  #L16413a.  v0:= temp;
  #L16413c.  return v0;
}
procedure `boolean` `isEmpty`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164150.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L164154.  call temp:= `isEmpty`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.isEmpty:()Z` @kind interface;
  #L16415a.  v0:= temp;
  #L16415c.  return v0;
}
procedure `kotlinx.coroutines.channels.ChannelIterator` `iterator`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.iterator:()Lkotlinx/coroutines/channels/ChannelIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1642a4.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L1642a8.  call temp:= `iterator`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.iterator:()Lkotlinx/coroutines/channels/ChannelIterator;` @kind interface;
  #L1642ae.  v0:= temp @kind object;
  #L1642b0.  return v0 @kind object;
}
procedure `boolean` `offer`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164170.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L164174.  call temp:= `offer`(v0, v2) @signature `Lkotlinx/coroutines/channels/SendChannel;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L16417a.  v2:= temp;
  #L16417c.  return v2;
}
procedure `java.lang.Object` `poll`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164190.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L164194.  call temp:= `poll`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.poll:()Ljava/lang/Object;` @kind interface;
  #L16419a.  v0:= temp @kind object;
  #L16419c.  return v0 @kind object;
}
procedure `java.lang.Object` `receive`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.receive:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1641b0.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L1641b4.  call temp:= `receive`(v0, v2) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.receive:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L1641ba.  v2:= temp @kind object;
  #L1641bc.  return v2 @kind object;
}
procedure `java.lang.Object` `receiveCatching-JP2dKIU`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.receiveCatching-JP2dKIU:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1641d0.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L1641d4.  call temp:= `receiveCatching-JP2dKIU`(v0, v2) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.receiveCatching-JP2dKIU:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L1641da.  v2:= temp @kind object;
  #L1641dc.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1641e2.  v0:= temp @kind object;
  #L1641e4.  return v2 @kind object;
}
procedure `java.lang.Object` `receiveOrNull`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.receiveOrNull:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1641f8.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L1641fc.  call temp:= `receiveOrNull`(v0, v2) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.receiveOrNull:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L164202.  v2:= temp @kind object;
  #L164204.  return v2 @kind object;
}
procedure `java.lang.Object` `send`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.send:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164218.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L16421c.  call temp:= `send`(v0, v2, v3) @signature `Lkotlinx/coroutines/channels/SendChannel;.send:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L164222.  v2:= temp @kind object;
  #L164224.  return v2 @kind object;
}
procedure `java.lang.Object` `tryReceive-PtdJZtk`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.tryReceive-PtdJZtk:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164238.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L16423c.  call temp:= `tryReceive-PtdJZtk`(v0) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.tryReceive-PtdJZtk:()Ljava/lang/Object;` @kind interface;
  #L164242.  v0:= temp @kind object;
  #L164244.  return v0 @kind object;
}
procedure `java.lang.Object` `trySend-JP2dKIU`(`kotlinx.coroutines.channels.ChannelCoroutine` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ChannelCoroutine;.trySend-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L164258.  v0:= v1.`kotlinx.coroutines.channels.ChannelCoroutine.c` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L16425c.  call temp:= `trySend-JP2dKIU`(v0, v2) @signature `Lkotlinx/coroutines/channels/SendChannel;.trySend-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L164262.  v2:= temp @kind object;
  #L164264.  return v2 @kind object;
}
