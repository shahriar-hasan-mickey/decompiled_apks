record `kotlinx.coroutines.channels.Closed` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.channels.Send` @kind class, `kotlinx.coroutines.channels.ReceiveOrClosed` @kind interface {
  `java.lang.Throwable` `kotlinx.coroutines.channels.Closed.closeCause` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.Closed` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/channels/Closed;.<init>:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L16a858.  call `<init>`(v0) @signature `Lkotlinx/coroutines/channels/Send;.<init>:()V` @kind direct;
  #L16a85e.  v0.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` := v1 @kind object;
  #L16a862.  return @kind void;
}
procedure `void` `completeResumeReceive`(`kotlinx.coroutines.channels.Closed` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/channels/Closed;.completeResumeReceive:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L16a874.  return @kind void;
}
procedure `void` `completeResumeSend`(`kotlinx.coroutines.channels.Closed` v0 @kind this) @signature `Lkotlinx/coroutines/channels/Closed;.completeResumeSend:()V` @AccessFlag PUBLIC {
    temp;

  #L16a888.  return @kind void;
}
procedure `java.lang.Object` `getOfferResult`(`kotlinx.coroutines.channels.Closed` v1 @kind this) @signature `Lkotlinx/coroutines/channels/Closed;.getOfferResult:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L16a704.  call temp:= `getOfferResult`(v1) @signature `Lkotlinx/coroutines/channels/Closed;.getOfferResult:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L16a70a.  v0:= temp @kind object;
  #L16a70c.  return v0 @kind object;
}
procedure `kotlinx.coroutines.channels.Closed` `getOfferResult`(`kotlinx.coroutines.channels.Closed` v0 @kind this) @signature `Lkotlinx/coroutines/channels/Closed;.getOfferResult:()Lkotlinx/coroutines/channels/Closed;` @AccessFlag PUBLIC {
    temp;

  #L16a7e8.  return v0 @kind object;
}
procedure `java.lang.Object` `getPollResult`(`kotlinx.coroutines.channels.Closed` v1 @kind this) @signature `Lkotlinx/coroutines/channels/Closed;.getPollResult:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L16a720.  call temp:= `getPollResult`(v1) @signature `Lkotlinx/coroutines/channels/Closed;.getPollResult:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L16a726.  v0:= temp @kind object;
  #L16a728.  return v0 @kind object;
}
procedure `kotlinx.coroutines.channels.Closed` `getPollResult`(`kotlinx.coroutines.channels.Closed` v0 @kind this) @signature `Lkotlinx/coroutines/channels/Closed;.getPollResult:()Lkotlinx/coroutines/channels/Closed;` @AccessFlag PUBLIC {
    temp;

  #L16a7fc.  return v0 @kind object;
}
procedure `java.lang.Throwable` `getReceiveException`(`kotlinx.coroutines.channels.Closed` v2 @kind this) @signature `Lkotlinx/coroutines/channels/Closed;.getReceiveException:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L16a798.  v0:= v2.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L16a79c.  if v0 != 0 then goto L16a7ae;
  #L16a7a0.  v0:= new `kotlinx.coroutines.channels.ClosedReceiveChannelException`;
  #L16a7a4.  v1:= "Channel was closed" @kind object;
  #L16a7a8.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/channels/ClosedReceiveChannelException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16a7ae.  return v0 @kind object;
}
procedure `java.lang.Throwable` `getSendException`(`kotlinx.coroutines.channels.Closed` v2 @kind this) @signature `Lkotlinx/coroutines/channels/Closed;.getSendException:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L16a7c0.  v0:= v2.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L16a7c4.  if v0 != 0 then goto L16a7d6;
  #L16a7c8.  v0:= new `kotlinx.coroutines.channels.ClosedSendChannelException`;
  #L16a7cc.  v1:= "Channel was closed" @kind object;
  #L16a7d0.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/channels/ClosedSendChannelException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16a7d6.  return v0 @kind object;
}
procedure `void` `resumeSendClosed`(`kotlinx.coroutines.channels.Closed` v0 @kind this, `kotlinx.coroutines.channels.Closed` v1 @kind object) @signature `Lkotlinx/coroutines/channels/Closed;.resumeSendClosed:(Lkotlinx/coroutines/channels/Closed;)V` @AccessFlag PUBLIC {
    temp;

  #L16a89c.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L16a8a2.  v1:= temp;
  #L16a8a4.  if v1 == 0 then goto L16a8b4;
  #L16a8a8.  v1:= new `java.lang.AssertionError`;
  #L16a8ac.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L16a8b2.  throw v1;
  #L16a8b4.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.channels.Closed` v2 @kind this) @signature `Lkotlinx/coroutines/channels/Closed;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16a73c.  v0:= new `java.lang.StringBuilder`;
  #L16a740.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16a746.  v1:= "Closed@" @kind object;
  #L16a74a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a750.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16a756.  v1:= temp @kind object;
  #L16a758.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a75e.  v1:= 91I;
  #L16a762.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a768.  v1:= v2.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L16a76c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a772.  v1:= 93I;
  #L16a776.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16a77c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16a782.  v0:= temp @kind object;
  #L16a784.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.Symbol` `tryResumeReceive`(`kotlinx.coroutines.channels.Closed` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp` v2 @kind object) @signature `Lkotlinx/coroutines/channels/Closed;.tryResumeReceive:(Ljava/lang/Object;Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC {
    temp;

  #L16a810.  v1:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16a814.  if v2 != 0 then goto L16a81a;
  #L16a818.  goto L16a820;
  #L16a81a.  call `finishPrepare`(v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;.finishPrepare:()V` @kind virtual;
  #L16a820.  return v1 @kind object;
}
procedure `kotlinx.coroutines.internal.Symbol` `tryResumeSend`(`kotlinx.coroutines.channels.Closed` v1 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp` v2 @kind object) @signature `Lkotlinx/coroutines/channels/Closed;.tryResumeSend:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16a834.  v0:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16a838.  if v2 != 0 then goto L16a83e;
  #L16a83c.  goto L16a844;
  #L16a83e.  call `finishPrepare`(v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;.finishPrepare:()V` @kind virtual;
  #L16a844.  return v0 @kind object;
}
