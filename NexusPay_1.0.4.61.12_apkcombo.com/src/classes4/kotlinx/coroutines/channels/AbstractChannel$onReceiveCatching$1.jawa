record `kotlinx.coroutines.channels.AbstractChannel$onReceiveCatching$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.selects.SelectClause1` @kind interface {
  `kotlinx.coroutines.channels.AbstractChannel` `kotlinx.coroutines.channels.AbstractChannel$onReceiveCatching$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.AbstractChannel$onReceiveCatching$1` v0 @kind this, `kotlinx.coroutines.channels.AbstractChannel` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$onReceiveCatching$1;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L160428.  v0.`kotlinx.coroutines.channels.AbstractChannel$onReceiveCatching$1.a` @type ^`kotlinx.coroutines.channels.AbstractChannel` := v1 @kind object;
  #L16042c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L160432.  return @kind void;
}
procedure `void` `registerSelectClause1`(`kotlinx.coroutines.channels.AbstractChannel$onReceiveCatching$1` v2 @kind this, `kotlinx.coroutines.selects.SelectInstance` v3 @kind object, `kotlin.jvm.functions.Function2` v4 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$onReceiveCatching$1;.registerSelectClause1:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L160444.  v0:= v2.`kotlinx.coroutines.channels.AbstractChannel$onReceiveCatching$1.a` @type ^`kotlinx.coroutines.channels.AbstractChannel` @kind object;
  #L160448.  v1:= 1I;
  #L16044a.  call `access$registerSelectReceiveMode`(v0, v3, v1, v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.access$registerSelectReceiveMode:(Lkotlinx/coroutines/channels/AbstractChannel;Lkotlinx/coroutines/selects/SelectInstance;ILkotlin/jvm/functions/Function2;)V` @kind static;
  #L160450.  return @kind void;
}
