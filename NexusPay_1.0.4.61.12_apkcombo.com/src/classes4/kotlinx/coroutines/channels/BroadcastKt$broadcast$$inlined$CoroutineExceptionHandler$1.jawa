record `kotlinx.coroutines.channels.BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.AbstractCoroutineContextElement` @kind class, `kotlinx.coroutines.CoroutineExceptionHandler` @kind interface {
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1` v0 @kind this, `kotlinx.coroutines.CoroutineExceptionHandler$Key` v1 @kind object) @signature `Lkotlinx/coroutines/channels/BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1;.<init>:(Lkotlinx/coroutines/CoroutineExceptionHandler$Key;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L163b88.  call `<init>`(v0, v1) @signature `Lkotlin/coroutines/AbstractCoroutineContextElement;.<init>:(Lkotlin/coroutines/CoroutineContext$Key;)V` @kind direct;
  #L163b8e.  return @kind void;
}
procedure `void` `handleException`(`kotlinx.coroutines.channels.BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/channels/BroadcastKt$broadcast$$inlined$CoroutineExceptionHandler$1;.handleException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L163ba0.  return @kind void;
}
