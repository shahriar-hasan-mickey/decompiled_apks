record `kotlinx.coroutines.channels.ConflatedChannel` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.channels.AbstractChannel` @kind class {
  `java.util.concurrent.locks.ReentrantLock` `kotlinx.coroutines.channels.ConflatedChannel.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `kotlinx.coroutines.channels.ConflatedChannel.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.ConflatedChannel` v0 @kind this, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedChannel;.<init>:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L16b5e8.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L16b5ee.  v1:= new `java.util.concurrent.locks.ReentrantLock`;
  #L16b5f2.  call `<init>`(v1) @signature `Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V` @kind direct;
  #L16b5f8.  v0.`kotlinx.coroutines.channels.ConflatedChannel.c` @type ^`java.util.concurrent.locks.ReentrantLock` := v1 @kind object;
  #L16b5fc.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.EMPTY` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b600.  v0.`kotlinx.coroutines.channels.ConflatedChannel.d` @type ^`java.lang.Object` := v1 @kind object;
  #L16b604.  return @kind void;
}
procedure `kotlinx.coroutines.internal.UndeliveredElementException` `q`(`kotlinx.coroutines.channels.ConflatedChannel` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedChannel;.q:(Ljava/lang/Object;)Lkotlinx/coroutines/internal/UndeliveredElementException;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16b5ac.  v0:= v4.`kotlinx.coroutines.channels.ConflatedChannel.d` @type ^`java.lang.Object` @kind object;
  #L16b5b0.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.EMPTY` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b5b4.  v2:= 0I;
  #L16b5b6.  if v0 != v1 then goto L16b5bc;
  #L16b5ba.  goto L16b5d0;
  #L16b5bc.  v1:= v4.`kotlinx.coroutines.channels.AbstractSendChannel.onUndeliveredElement` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L16b5c0.  if v1 != 0 then goto L16b5c6;
  #L16b5c4.  goto L16b5d0;
  #L16b5c6.  v3:= 2I;
  #L16b5c8.  call temp:= `callUndeliveredElementCatchingException$default`(v1, v0, v2, v3, v2) @signature `Lkotlinx/coroutines/internal/OnUndeliveredElementKt;.callUndeliveredElementCatchingException$default:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlinx/coroutines/internal/UndeliveredElementException;ILjava/lang/Object;)Lkotlinx/coroutines/internal/UndeliveredElementException;` @kind static;
  #L16b5ce.  v2:= temp @kind object;
  #L16b5d0.  v4.`kotlinx.coroutines.channels.ConflatedChannel.d` @type ^`java.lang.Object` := v5 @kind object;
  #L16b5d4.  return v2 @kind object;
}
procedure `boolean` `enqueueReceiveInternal`(`kotlinx.coroutines.channels.ConflatedChannel` v1 @kind this, `kotlinx.coroutines.channels.Receive` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedChannel;.enqueueReceiveInternal:(Lkotlinx/coroutines/channels/Receive;)Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L16b150.  v0:= v1.`kotlinx.coroutines.channels.ConflatedChannel.c` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L16b154.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L16b15a.  call temp:= `enqueueReceiveInternal`(v1, v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.enqueueReceiveInternal:(Lkotlinx/coroutines/channels/Receive;)Z` @kind super;
  #L16b160.  v2:= temp;
  #L16b162.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b168.  return v2;
  #L16b16a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16b16c.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b172.  throw v2;
  catch `java.lang.Throwable` @[L16b15a..L16b162] goto L16b16a;
}
procedure `java.lang.String` `getBufferDebugString`(`kotlinx.coroutines.channels.ConflatedChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/ConflatedChannel;.getBufferDebugString:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L16b568.  v0:= new `java.lang.StringBuilder`;
  #L16b56c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16b572.  v1:= "(value=" @kind object;
  #L16b576.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b57c.  v1:= v2.`kotlinx.coroutines.channels.ConflatedChannel.d` @type ^`java.lang.Object` @kind object;
  #L16b580.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b586.  v1:= 41I;
  #L16b58a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16b590.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16b596.  v0:= temp @kind object;
  #L16b598.  return v0 @kind object;
}
procedure `boolean` `isBufferAlwaysEmpty`(`kotlinx.coroutines.channels.ConflatedChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ConflatedChannel;.isBufferAlwaysEmpty:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L16b190.  v0:= 0I;
  #L16b192.  return v0;
}
procedure `boolean` `isBufferAlwaysFull`(`kotlinx.coroutines.channels.ConflatedChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ConflatedChannel;.isBufferAlwaysFull:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L16b1a4.  v0:= 0I;
  #L16b1a6.  return v0;
}
procedure `boolean` `isBufferEmpty`(`kotlinx.coroutines.channels.ConflatedChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/ConflatedChannel;.isBufferEmpty:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L16b1b8.  v0:= v2.`kotlinx.coroutines.channels.ConflatedChannel.d` @type ^`java.lang.Object` @kind object;
  #L16b1bc.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.EMPTY` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b1c0.  if v0 != v1 then goto L16b1c8;
  #L16b1c4.  v0:= 1I;
  #L16b1c6.  goto L16b1ca;
  #L16b1c8.  v0:= 0I;
  #L16b1ca.  return v0;
}
procedure `boolean` `isBufferFull`(`kotlinx.coroutines.channels.ConflatedChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ConflatedChannel;.isBufferFull:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L16b1dc.  v0:= 0I;
  #L16b1de.  return v0;
}
procedure `boolean` `isEmpty`(`kotlinx.coroutines.channels.ConflatedChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/ConflatedChannel;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L16b1f0.  v0:= v2.`kotlinx.coroutines.channels.ConflatedChannel.c` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L16b1f4.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L16b1fa.  call temp:= `isEmptyImpl`(v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isEmptyImpl:()Z` @kind virtual;
  #L16b200.  v1:= temp;
  #L16b202.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b208.  return v1;
  #L16b20a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16b20c.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b212.  throw v1;
  catch `java.lang.Throwable` @[L16b1fa..L16b202] goto L16b20a;
}
procedure `java.lang.Object` `offerInternal`(`kotlinx.coroutines.channels.ConflatedChannel` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedChannel;.offerInternal:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16b230.  v0:= v4.`kotlinx.coroutines.channels.ConflatedChannel.c` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L16b234.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L16b23a.  call temp:= `getClosedForSend`(v4) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForSend:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L16b240.  v1:= temp @kind object;
  #L16b242.  if v1 != 0 then goto L16b2de;
  #L16b246.  v1:= v4.`kotlinx.coroutines.channels.ConflatedChannel.d` @type ^`java.lang.Object` @kind object;
  #L16b24a.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.EMPTY` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b24e.  if v1 != v2 then goto L16b2c4;
  #L16b252.  call temp:= `takeFirstReceiveOrPeekClosed`(v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.takeFirstReceiveOrPeekClosed:()Lkotlinx/coroutines/channels/ReceiveOrClosed;` @kind virtual;
  #L16b258.  v1:= temp @kind object;
  #L16b25a.  if v1 != 0 then goto L16b260;
  #L16b25e.  goto L16b2c4;
  #L16b260.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L16b264.  if v2 == 0 then goto L16b270;
  #L16b268.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b26e.  return v1 @kind object;
  #L16b270.  v2:= 0I;
  #L16b272.  call temp:= `tryResumeReceive`(v1, v5, v2) @signature `Lkotlinx/coroutines/channels/ReceiveOrClosed;.tryResumeReceive:(Ljava/lang/Object;Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Lkotlinx/coroutines/internal/Symbol;` @kind interface;
  #L16b278.  v2:= temp @kind object;
  #L16b27a.  if v2 == 0 then goto L16b252;
  #L16b27e.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L16b284.  v3:= temp;
  #L16b286.  if v3 == 0 then goto L16b2aa;
  #L16b28a.  v3:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b28e.  if v2 != v3 then goto L16b296;
  #L16b292.  v2:= 1I;
  #L16b294.  goto L16b298;
  #L16b296.  v2:= 0I;
  #L16b298.  if v2 == 0 then goto L16b29e;
  #L16b29c.  goto L16b2aa;
  #L16b29e.  v5:= new `java.lang.AssertionError`;
  #L16b2a2.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L16b2a8.  throw v5;
  #L16b2aa.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L16b2ae.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b2b4.  call `completeResumeReceive`(v1, v5) @signature `Lkotlinx/coroutines/channels/ReceiveOrClosed;.completeResumeReceive:(Ljava/lang/Object;)V` @kind interface;
  #L16b2ba.  call temp:= `getOfferResult`(v1) @signature `Lkotlinx/coroutines/channels/ReceiveOrClosed;.getOfferResult:()Ljava/lang/Object;` @kind interface;
  #L16b2c0.  v5:= temp @kind object;
  #L16b2c2.  return v5 @kind object;
  #L16b2c4.  call temp:= `q`(v4, v5) @signature `Lkotlinx/coroutines/channels/ConflatedChannel;.q:(Ljava/lang/Object;)Lkotlinx/coroutines/internal/UndeliveredElementException;` @kind direct;
  #L16b2ca.  v5:= temp @kind object;
  #L16b2cc.  if v5 != 0 then goto L16b2dc;
  #L16b2d0.  v5:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b2d4.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b2da.  return v5 @kind object;
  #L16b2dc.  throw v5;
  #L16b2de.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b2e4.  return v1 @kind object;
  #L16b2e6.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16b2e8.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b2ee.  throw v5;
  catch `java.lang.Throwable` @[L16b23a..L16b264] goto L16b2e6;
  catch `java.lang.Throwable` @[L16b272..L16b2ae] goto L16b2e6;
  catch `java.lang.Throwable` @[L16b2c4..L16b2d4] goto L16b2e6;
  catch `java.lang.Throwable` @[L16b2dc..L16b2de] goto L16b2e6;
}
procedure `java.lang.Object` `offerSelectInternal`(`kotlinx.coroutines.channels.ConflatedChannel` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlinx.coroutines.selects.SelectInstance` v5 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedChannel;.offerSelectInternal:(Ljava/lang/Object;Lkotlinx/coroutines/selects/SelectInstance;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L16b324.  v0:= v3.`kotlinx.coroutines.channels.ConflatedChannel.c` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L16b328.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L16b32e.  call temp:= `getClosedForSend`(v3) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForSend:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L16b334.  v1:= temp @kind object;
  #L16b336.  if v1 != 0 then goto L16b40e;
  #L16b33a.  v1:= v3.`kotlinx.coroutines.channels.ConflatedChannel.d` @type ^`java.lang.Object` @kind object;
  #L16b33e.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.EMPTY` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b342.  if v1 != v2 then goto L16b3d8;
  #L16b346.  call temp:= `describeTryOffer`(v3, v4) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.describeTryOffer:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/AbstractSendChannel$TryOfferDesc;` @kind virtual;
  #L16b34c.  v1:= temp @kind object;
  #L16b34e.  call temp:= `performAtomicTrySelect`(v5, v1) @signature `Lkotlinx/coroutines/selects/SelectInstance;.performAtomicTrySelect:(Lkotlinx/coroutines/internal/AtomicDesc;)Ljava/lang/Object;` @kind interface;
  #L16b354.  v2:= temp @kind object;
  #L16b356.  if v2 != 0 then goto L16b386;
  #L16b35a.  call temp:= `getResult`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$RemoveFirstDesc;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L16b360.  v5:= temp @kind object;
  #L16b362.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L16b366.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b36c.  call `checkNotNull`(v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L16b372.  v5:= (`kotlinx.coroutines.channels.ReceiveOrClosed`) v5 @kind object;
  #L16b376.  call `completeResumeReceive`(v5, v4) @signature `Lkotlinx/coroutines/channels/ReceiveOrClosed;.completeResumeReceive:(Ljava/lang/Object;)V` @kind interface;
  #L16b37c.  call temp:= `getOfferResult`(v5) @signature `Lkotlinx/coroutines/channels/ReceiveOrClosed;.getOfferResult:()Ljava/lang/Object;` @kind interface;
  #L16b382.  v4:= temp @kind object;
  #L16b384.  return v4 @kind object;
  #L16b386.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b38a.  if v2 != v1 then goto L16b390;
  #L16b38e.  goto L16b3d8;
  #L16b390.  v1:= `@@kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC` @type ^`java.lang.Object` @kind object;
  #L16b394.  if v2 != v1 then goto L16b39a;
  #L16b398.  goto L16b346;
  #L16b39a.  call temp:= `getALREADY_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getALREADY_SELECTED:()Ljava/lang/Object;` @kind static;
  #L16b3a0.  v4:= temp @kind object;
  #L16b3a2.  if v2 == v4 then goto L16b3d0;
  #L16b3a6.  v4:= instanceof @variable v2 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L16b3aa.  if v4 == 0 then goto L16b3b0;
  #L16b3ae.  goto L16b3d0;
  #L16b3b0.  v4:= "performAtomicTrySelect(describeTryOffer) returned " @kind object;
  #L16b3b4.  call temp:= `stringPlus`(v4, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16b3ba.  v4:= temp @kind object;
  #L16b3bc.  v5:= new `java.lang.IllegalStateException`;
  #L16b3c0.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16b3c6.  v4:= temp @kind object;
  #L16b3c8.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b3ce.  throw v5;
  #L16b3d0.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b3d6.  return v2 @kind object;
  #L16b3d8.  call temp:= `trySelect`(v5) @signature `Lkotlinx/coroutines/selects/SelectInstance;.trySelect:()Z` @kind interface;
  #L16b3de.  v5:= temp;
  #L16b3e0.  if v5 != 0 then goto L16b3f4;
  #L16b3e4.  call temp:= `getALREADY_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getALREADY_SELECTED:()Ljava/lang/Object;` @kind static;
  #L16b3ea.  v4:= temp @kind object;
  #L16b3ec.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b3f2.  return v4 @kind object;
  #L16b3f4.  call temp:= `q`(v3, v4) @signature `Lkotlinx/coroutines/channels/ConflatedChannel;.q:(Ljava/lang/Object;)Lkotlinx/coroutines/internal/UndeliveredElementException;` @kind direct;
  #L16b3fa.  v4:= temp @kind object;
  #L16b3fc.  if v4 != 0 then goto L16b40c;
  #L16b400.  v4:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b404.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b40a.  return v4 @kind object;
  #L16b40c.  throw v4;
  #L16b40e.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b414.  return v1 @kind object;
  #L16b416.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16b418.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b41e.  throw v4;
  catch `java.lang.Throwable` @[L16b32e..L16b366] goto L16b416;
  catch `java.lang.Throwable` @[L16b386..L16b3d0] goto L16b416;
  catch `java.lang.Throwable` @[L16b3d8..L16b3ec] goto L16b416;
  catch `java.lang.Throwable` @[L16b3f4..L16b404] goto L16b416;
  catch `java.lang.Throwable` @[L16b40c..L16b40e] goto L16b416;
}
procedure `void` `onCancelIdempotent`(`kotlinx.coroutines.channels.ConflatedChannel` v3 @kind this, `boolean` v4 ) @signature `Lkotlinx/coroutines/channels/ConflatedChannel;.onCancelIdempotent:(Z)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L16b618.  v0:= v3.`kotlinx.coroutines.channels.ConflatedChannel.c` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L16b61c.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L16b622.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.EMPTY` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b626.  call temp:= `q`(v3, v1) @signature `Lkotlinx/coroutines/channels/ConflatedChannel;.q:(Ljava/lang/Object;)Lkotlinx/coroutines/internal/UndeliveredElementException;` @kind direct;
  #L16b62c.  v1:= temp @kind object;
  #L16b62e.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L16b632.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b638.  call `onCancelIdempotent`(v3, v4) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onCancelIdempotent:(Z)V` @kind super;
  #L16b63e.  if v1 != 0 then goto L16b644;
  #L16b642.  return @kind void;
  #L16b644.  throw v1;
  #L16b646.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16b648.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b64e.  throw v4;
  catch `java.lang.Throwable` @[L16b622..L16b632] goto L16b646;
}
procedure `java.lang.Object` `pollInternal`(`kotlinx.coroutines.channels.ConflatedChannel` v3 @kind this) @signature `Lkotlinx/coroutines/channels/ConflatedChannel;.pollInternal:()Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L16b45c.  v0:= v3.`kotlinx.coroutines.channels.ConflatedChannel.c` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L16b460.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L16b466.  v1:= v3.`kotlinx.coroutines.channels.ConflatedChannel.d` @type ^`java.lang.Object` @kind object;
  #L16b46a.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.EMPTY` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b46e.  if v1 != v2 then goto L16b48a;
  #L16b472.  call temp:= `getClosedForSend`(v3) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForSend:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L16b478.  v1:= temp @kind object;
  #L16b47a.  if v1 != 0 then goto L16b482;
  #L16b47e.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b482.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b488.  return v1 @kind object;
  #L16b48a.  v1:= v3.`kotlinx.coroutines.channels.ConflatedChannel.d` @type ^`java.lang.Object` @kind object;
  #L16b48e.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.EMPTY` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b492.  v3.`kotlinx.coroutines.channels.ConflatedChannel.d` @type ^`java.lang.Object` := v2 @kind object;
  #L16b496.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L16b49a.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b4a0.  return v1 @kind object;
  #L16b4a2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16b4a4.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b4aa.  throw v1;
  catch `java.lang.Throwable` @[L16b466..L16b482] goto L16b4a2;
  catch `java.lang.Throwable` @[L16b48a..L16b49a] goto L16b4a2;
}
procedure `java.lang.Object` `pollSelectInternal`(`kotlinx.coroutines.channels.ConflatedChannel` v3 @kind this, `kotlinx.coroutines.selects.SelectInstance` v4 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedChannel;.pollSelectInternal:(Lkotlinx/coroutines/selects/SelectInstance;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L16b4d0.  v0:= v3.`kotlinx.coroutines.channels.ConflatedChannel.c` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L16b4d4.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L16b4da.  v1:= v3.`kotlinx.coroutines.channels.ConflatedChannel.d` @type ^`java.lang.Object` @kind object;
  #L16b4de.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.EMPTY` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b4e2.  if v1 != v2 then goto L16b4fe;
  #L16b4e6.  call temp:= `getClosedForSend`(v3) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForSend:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L16b4ec.  v4:= temp @kind object;
  #L16b4ee.  if v4 != 0 then goto L16b4f6;
  #L16b4f2.  v4:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b4f6.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b4fc.  return v4 @kind object;
  #L16b4fe.  call temp:= `trySelect`(v4) @signature `Lkotlinx/coroutines/selects/SelectInstance;.trySelect:()Z` @kind interface;
  #L16b504.  v4:= temp;
  #L16b506.  if v4 != 0 then goto L16b51a;
  #L16b50a.  call temp:= `getALREADY_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getALREADY_SELECTED:()Ljava/lang/Object;` @kind static;
  #L16b510.  v4:= temp @kind object;
  #L16b512.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b518.  return v4 @kind object;
  #L16b51a.  v4:= v3.`kotlinx.coroutines.channels.ConflatedChannel.d` @type ^`java.lang.Object` @kind object;
  #L16b51e.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.EMPTY` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b522.  v3.`kotlinx.coroutines.channels.ConflatedChannel.d` @type ^`java.lang.Object` := v1 @kind object;
  #L16b526.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L16b52a.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b530.  return v4 @kind object;
  #L16b532.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16b534.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16b53a.  throw v4;
  catch `java.lang.Throwable` @[L16b4da..L16b4f6] goto L16b532;
  catch `java.lang.Throwable` @[L16b4fe..L16b512] goto L16b532;
  catch `java.lang.Throwable` @[L16b51a..L16b52a] goto L16b532;
}
