record `kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp` @kind class {
  `kotlinx.coroutines.channels.AbstractSendChannel` `kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1` v0 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v1 @kind object, `kotlinx.coroutines.channels.AbstractSendChannel` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/channels/AbstractSendChannel;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1612c8.  v0.`kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1.b` @type ^`kotlinx.coroutines.channels.AbstractSendChannel` := v2 @kind object;
  #L1612cc.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$CondAddOp;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @kind direct;
  #L1612d2.  return @kind void;
}
procedure `java.lang.Object` `prepare`(`kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1;.prepare:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L161278.  v1:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v1 @kind object;
  #L16127c.  call temp:= `prepare`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1;.prepare:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Ljava/lang/Object;` @kind virtual;
  #L161282.  v1:= temp @kind object;
  #L161284.  return v1 @kind object;
}
procedure `java.lang.Object` `prepare`(`kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1` v0 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v1 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1;.prepare:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L161298.  v1:= v0.`kotlinx.coroutines.channels.AbstractSendChannel$enqueueSend$$inlined$addLastIfPrevAndIf$1.b` @type ^`kotlinx.coroutines.channels.AbstractSendChannel` @kind object;
  #L16129c.  call temp:= `isBufferFull`(v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.isBufferFull:()Z` @kind virtual;
  #L1612a2.  v1:= temp;
  #L1612a4.  if v1 == 0 then goto L1612ac;
  #L1612a8.  v1:= 0I;
  #L1612aa.  goto L1612b4;
  #L1612ac.  call temp:= `getCONDITION_FALSE`() @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListKt;.getCONDITION_FALSE:()Ljava/lang/Object;` @kind static;
  #L1612b2.  v1:= temp @kind object;
  #L1612b4.  return v1 @kind object;
}
