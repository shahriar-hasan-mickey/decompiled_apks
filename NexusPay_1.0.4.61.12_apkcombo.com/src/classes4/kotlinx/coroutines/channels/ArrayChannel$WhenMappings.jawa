record `kotlinx.coroutines.channels.ArrayChannel$WhenMappings` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
global `int`[] `@@kotlinx.coroutines.channels.ArrayChannel$WhenMappings.$EnumSwitchMapping$0` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/channels/ArrayChannel$WhenMappings;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L162dcc.  call temp:= `values`() @signature `Lkotlinx/coroutines/channels/BufferOverflow;.values:()[Lkotlinx/coroutines/channels/BufferOverflow;` @kind static;
  #L162dd2.  v0:= temp @kind object;
  #L162dd4.  v0:= length @variable v0;
  #L162dd6.  v0:= new `int`[v0];
  #L162dda.  v1:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L162dde.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L162de4.  v1:= temp;
  #L162de6.  v2:= 1I;
  #L162de8.  v0[v1]:= v2;
  #L162dec.  v1:= `@@kotlinx.coroutines.channels.BufferOverflow.DROP_LATEST` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L162df0.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L162df6.  v1:= temp;
  #L162df8.  v2:= 2I;
  #L162dfa.  v0[v1]:= v2;
  #L162dfe.  v1:= `@@kotlinx.coroutines.channels.BufferOverflow.DROP_OLDEST` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L162e02.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L162e08.  v1:= temp;
  #L162e0a.  v2:= 3I;
  #L162e0c.  v0[v1]:= v2;
  #L162e10.  `@@kotlinx.coroutines.channels.ArrayChannel$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] := v0 @kind object;
  #L162e14.  return @kind void;
}
