record `kotlinx.coroutines.channels.AbstractChannel$b` @kind class @AccessFlag  extends `kotlinx.coroutines.channels.Receive` @kind class {
  `kotlinx.coroutines.CancellableContinuation` `kotlinx.coroutines.channels.AbstractChannel$b.d` @AccessFlag PUBLIC_FINAL;
  `int` `kotlinx.coroutines.channels.AbstractChannel$b.e` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.AbstractChannel$b` v0 @kind this, `kotlinx.coroutines.CancellableContinuation` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/channels/AbstractChannel$b;.<init>:(Lkotlinx/coroutines/CancellableContinuation;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15fddc.  call `<init>`(v0) @signature `Lkotlinx/coroutines/channels/Receive;.<init>:()V` @kind direct;
  #L15fde2.  v0.`kotlinx.coroutines.channels.AbstractChannel$b.d` @type ^`kotlinx.coroutines.CancellableContinuation` := v1 @kind object;
  #L15fde6.  v0.`kotlinx.coroutines.channels.AbstractChannel$b.e` @type ^`int` := v2;
  #L15fdea.  return @kind void;
}
procedure `void` `completeResumeReceive`(`kotlinx.coroutines.channels.AbstractChannel$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$b;.completeResumeReceive:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15fdfc.  v2:= v1.`kotlinx.coroutines.channels.AbstractChannel$b.d` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L15fe00.  v0:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L15fe04.  call `completeResume`(v2, v0) @signature `Lkotlinx/coroutines/CancellableContinuation;.completeResume:(Ljava/lang/Object;)V` @kind interface;
  #L15fe0a.  return @kind void;
}
procedure `java.lang.Object` `e`(`kotlinx.coroutines.channels.AbstractChannel$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$b;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15fcd0.  v0:= v2.`kotlinx.coroutines.channels.AbstractChannel$b.e` @type ^`int`;
  #L15fcd4.  v1:= 1I;
  #L15fcd6.  if v0 != v1 then goto L15fcee;
  #L15fcda.  v0:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L15fcde.  call temp:= `success-JP2dKIU`(v0, v3) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.success-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15fce4.  v3:= temp @kind object;
  #L15fce6.  call temp:= `box-impl`(v3) @signature `Lkotlinx/coroutines/channels/ChannelResult;.box-impl:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/ChannelResult;` @kind static;
  #L15fcec.  v3:= temp @kind object;
  #L15fcee.  return v3 @kind object;
}
procedure `void` `resumeReceiveClosed`(`kotlinx.coroutines.channels.AbstractChannel$b` v2 @kind this, `kotlinx.coroutines.channels.Closed` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$b;.resumeReceiveClosed:(Lkotlinx/coroutines/channels/Closed;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15fe1c.  v0:= v2.`kotlinx.coroutines.channels.AbstractChannel$b.e` @type ^`int`;
  #L15fe20.  v1:= 1I;
  #L15fe22.  if v0 != v1 then goto L15fe56;
  #L15fe26.  v0:= v2.`kotlinx.coroutines.channels.AbstractChannel$b.d` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L15fe2a.  v1:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L15fe2e.  v3:= v3.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L15fe32.  call temp:= `closed-JP2dKIU`(v1, v3) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.closed-JP2dKIU:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind virtual;
  #L15fe38.  v3:= temp @kind object;
  #L15fe3a.  call temp:= `box-impl`(v3) @signature `Lkotlinx/coroutines/channels/ChannelResult;.box-impl:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/ChannelResult;` @kind static;
  #L15fe40.  v3:= temp @kind object;
  #L15fe42.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L15fe46.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15fe4c.  v3:= temp @kind object;
  #L15fe4e.  call `resumeWith`(v0, v3) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L15fe54.  goto L15fe7c;
  #L15fe56.  v0:= v2.`kotlinx.coroutines.channels.AbstractChannel$b.d` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L15fe5a.  call temp:= `getReceiveException`(v3) @signature `Lkotlinx/coroutines/channels/Closed;.getReceiveException:()Ljava/lang/Throwable;` @kind virtual;
  #L15fe60.  v3:= temp @kind object;
  #L15fe62.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L15fe66.  call temp:= `createFailure`(v3) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L15fe6c.  v3:= temp @kind object;
  #L15fe6e.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15fe74.  v3:= temp @kind object;
  #L15fe76.  call `resumeWith`(v0, v3) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L15fe7c.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.channels.AbstractChannel$b` v2 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15fd00.  v0:= new `java.lang.StringBuilder`;
  #L15fd04.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15fd0a.  v1:= "ReceiveElement@" @kind object;
  #L15fd0e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fd14.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15fd1a.  v1:= temp @kind object;
  #L15fd1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fd22.  v1:= "[receiveMode=" @kind object;
  #L15fd26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fd2c.  v1:= v2.`kotlinx.coroutines.channels.AbstractChannel$b.e` @type ^`int`;
  #L15fd30.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fd36.  v1:= 93I;
  #L15fd3a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15fd40.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15fd46.  v0:= temp @kind object;
  #L15fd48.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.Symbol` `tryResumeReceive`(`kotlinx.coroutines.channels.AbstractChannel$b` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp` v6 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$b;.tryResumeReceive:(Ljava/lang/Object;Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15fd5c.  v0:= v4.`kotlinx.coroutines.channels.AbstractChannel$b.d` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L15fd60.  call temp:= `e`(v4, v5) @signature `Lkotlinx/coroutines/channels/AbstractChannel$b;.e:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15fd66.  v1:= temp @kind object;
  #L15fd68.  v2:= 0I;
  #L15fd6a.  if v6 != 0 then goto L15fd72;
  #L15fd6e.  v3:= v2 @kind object;
  #L15fd70.  goto L15fd76;
  #L15fd72.  v3:= v6.`kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp.desc` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc` @kind object;
  #L15fd76.  call temp:= `resumeOnCancellationFun`(v4, v5) @signature `Lkotlinx/coroutines/channels/Receive;.resumeOnCancellationFun:(Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;` @kind virtual;
  #L15fd7c.  v5:= temp @kind object;
  #L15fd7e.  call temp:= `tryResume`(v0, v1, v3, v5) @signature `Lkotlinx/coroutines/CancellableContinuation;.tryResume:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @kind interface;
  #L15fd84.  v5:= temp @kind object;
  #L15fd86.  if v5 != 0 then goto L15fd8c;
  #L15fd8a.  return v2 @kind object;
  #L15fd8c.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L15fd92.  v0:= temp;
  #L15fd94.  if v0 == 0 then goto L15fdb8;
  #L15fd98.  v0:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L15fd9c.  if v5 != v0 then goto L15fda4;
  #L15fda0.  v5:= 1I;
  #L15fda2.  goto L15fda6;
  #L15fda4.  v5:= 0I;
  #L15fda6.  if v5 == 0 then goto L15fdac;
  #L15fdaa.  goto L15fdb8;
  #L15fdac.  v5:= new `java.lang.AssertionError`;
  #L15fdb0.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L15fdb6.  throw v5;
  #L15fdb8.  if v6 != 0 then goto L15fdbe;
  #L15fdbc.  goto L15fdc4;
  #L15fdbe.  call `finishPrepare`(v6) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;.finishPrepare:()V` @kind virtual;
  #L15fdc4.  v5:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L15fdc8.  return v5 @kind object;
}
