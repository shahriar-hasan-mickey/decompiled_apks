record `kotlinx.coroutines.channels.AbstractChannel$d` @kind class @AccessFlag  extends `kotlinx.coroutines.channels.Receive` @kind class {
  `kotlinx.coroutines.channels.AbstractChannel$a` `kotlinx.coroutines.channels.AbstractChannel$d.d` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.CancellableContinuation` `kotlinx.coroutines.channels.AbstractChannel$d.e` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.AbstractChannel$d` v0 @kind this, `kotlinx.coroutines.channels.AbstractChannel$a` v1 @kind object, `kotlinx.coroutines.CancellableContinuation` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$d;.<init>:(Lkotlinx/coroutines/channels/AbstractChannel$a;Lkotlinx/coroutines/CancellableContinuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15ff70.  call `<init>`(v0) @signature `Lkotlinx/coroutines/channels/Receive;.<init>:()V` @kind direct;
  #L15ff76.  v0.`kotlinx.coroutines.channels.AbstractChannel$d.d` @type ^`kotlinx.coroutines.channels.AbstractChannel$a` := v1 @kind object;
  #L15ff7a.  v0.`kotlinx.coroutines.channels.AbstractChannel$d.e` @type ^`kotlinx.coroutines.CancellableContinuation` := v2 @kind object;
  #L15ff7e.  return @kind void;
}
procedure `void` `completeResumeReceive`(`kotlinx.coroutines.channels.AbstractChannel$d` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$d;.completeResumeReceive:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15ff90.  v0:= v1.`kotlinx.coroutines.channels.AbstractChannel$d.d` @type ^`kotlinx.coroutines.channels.AbstractChannel$a` @kind object;
  #L15ff94.  call `d`(v0, v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L15ff9a.  v2:= v1.`kotlinx.coroutines.channels.AbstractChannel$d.e` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L15ff9e.  v0:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L15ffa2.  call `completeResume`(v2, v0) @signature `Lkotlinx/coroutines/CancellableContinuation;.completeResume:(Ljava/lang/Object;)V` @kind interface;
  #L15ffa8.  return @kind void;
}
procedure `kotlin.jvm.functions.Function1` `resumeOnCancellationFun`(`kotlinx.coroutines.channels.AbstractChannel$d` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$d;.resumeOnCancellationFun:(Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15feb8.  v0:= v2.`kotlinx.coroutines.channels.AbstractChannel$d.d` @type ^`kotlinx.coroutines.channels.AbstractChannel$a` @kind object;
  #L15febc.  v0:= v0.`kotlinx.coroutines.channels.AbstractChannel$a.a` @type ^`kotlinx.coroutines.channels.AbstractChannel` @kind object;
  #L15fec0.  v0:= v0.`kotlinx.coroutines.channels.AbstractSendChannel.onUndeliveredElement` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L15fec4.  if v0 != 0 then goto L15fecc;
  #L15fec8.  v3:= 0I;
  #L15feca.  goto L15fee0;
  #L15fecc.  v1:= v2.`kotlinx.coroutines.channels.AbstractChannel$d.e` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L15fed0.  call temp:= `getContext`(v1) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L15fed6.  v1:= temp @kind object;
  #L15fed8.  call temp:= `bindCancellationFun`(v0, v3, v1) @signature `Lkotlinx/coroutines/internal/OnUndeliveredElementKt;.bindCancellationFun:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlin/coroutines/CoroutineContext;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L15fede.  v3:= temp @kind object;
  #L15fee0.  return v3 @kind object;
}
procedure `void` `resumeReceiveClosed`(`kotlinx.coroutines.channels.AbstractChannel$d` v4 @kind this, `kotlinx.coroutines.channels.Closed` v5 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$d;.resumeReceiveClosed:(Lkotlinx/coroutines/channels/Closed;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15ffbc.  v0:= v5.`kotlinx.coroutines.channels.Closed.closeCause` @type ^`java.lang.Throwable` @kind object;
  #L15ffc0.  if v0 != 0 then goto L15ffda;
  #L15ffc4.  v0:= v4.`kotlinx.coroutines.channels.AbstractChannel$d.e` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L15ffc8.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L15ffcc.  v2:= 2I;
  #L15ffce.  v3:= 0I;
  #L15ffd0.  call temp:= `tryResume$default`(v0, v1, v3, v2, v3) @signature `Lkotlinx/coroutines/CancellableContinuation$DefaultImpls;.tryResume$default:(Lkotlinx/coroutines/CancellableContinuation;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15ffd6.  v0:= temp @kind object;
  #L15ffd8.  goto L15ffee;
  #L15ffda.  v0:= v4.`kotlinx.coroutines.channels.AbstractChannel$d.e` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L15ffde.  call temp:= `getReceiveException`(v5) @signature `Lkotlinx/coroutines/channels/Closed;.getReceiveException:()Ljava/lang/Throwable;` @kind virtual;
  #L15ffe4.  v1:= temp @kind object;
  #L15ffe6.  call temp:= `tryResumeWithException`(v0, v1) @signature `Lkotlinx/coroutines/CancellableContinuation;.tryResumeWithException:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind interface;
  #L15ffec.  v0:= temp @kind object;
  #L15ffee.  if v0 == 0 then goto L160006;
  #L15fff2.  v1:= v4.`kotlinx.coroutines.channels.AbstractChannel$d.d` @type ^`kotlinx.coroutines.channels.AbstractChannel$a` @kind object;
  #L15fff6.  call `d`(v1, v5) @signature `Lkotlinx/coroutines/channels/AbstractChannel$a;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L15fffc.  v5:= v4.`kotlinx.coroutines.channels.AbstractChannel$d.e` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L160000.  call `completeResume`(v5, v0) @signature `Lkotlinx/coroutines/CancellableContinuation;.completeResume:(Ljava/lang/Object;)V` @kind interface;
  #L160006.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.channels.AbstractChannel$d` v2 @kind this) @signature `Lkotlinx/coroutines/channels/AbstractChannel$d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15fe90.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15fe96.  v0:= temp @kind object;
  #L15fe98.  v1:= "ReceiveHasNext@" @kind object;
  #L15fe9c.  call temp:= `stringPlus`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15fea2.  v0:= temp @kind object;
  #L15fea4.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.Symbol` `tryResumeReceive`(`kotlinx.coroutines.channels.AbstractChannel$d` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp` v6 @kind object) @signature `Lkotlinx/coroutines/channels/AbstractChannel$d;.tryResumeReceive:(Ljava/lang/Object;Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15fef4.  v0:= v4.`kotlinx.coroutines.channels.AbstractChannel$d.e` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L15fef8.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L15fefc.  v2:= 0I;
  #L15fefe.  if v6 != 0 then goto L15ff06;
  #L15ff02.  v3:= v2 @kind object;
  #L15ff04.  goto L15ff0a;
  #L15ff06.  v3:= v6.`kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp.desc` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc` @kind object;
  #L15ff0a.  call temp:= `resumeOnCancellationFun`(v4, v5) @signature `Lkotlinx/coroutines/channels/AbstractChannel$d;.resumeOnCancellationFun:(Ljava/lang/Object;)Lkotlin/jvm/functions/Function1;` @kind virtual;
  #L15ff10.  v5:= temp @kind object;
  #L15ff12.  call temp:= `tryResume`(v0, v1, v3, v5) @signature `Lkotlinx/coroutines/CancellableContinuation;.tryResume:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @kind interface;
  #L15ff18.  v5:= temp @kind object;
  #L15ff1a.  if v5 != 0 then goto L15ff20;
  #L15ff1e.  return v2 @kind object;
  #L15ff20.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L15ff26.  v0:= temp;
  #L15ff28.  if v0 == 0 then goto L15ff4c;
  #L15ff2c.  v0:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L15ff30.  if v5 != v0 then goto L15ff38;
  #L15ff34.  v5:= 1I;
  #L15ff36.  goto L15ff3a;
  #L15ff38.  v5:= 0I;
  #L15ff3a.  if v5 == 0 then goto L15ff40;
  #L15ff3e.  goto L15ff4c;
  #L15ff40.  v5:= new `java.lang.AssertionError`;
  #L15ff44.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L15ff4a.  throw v5;
  #L15ff4c.  if v6 != 0 then goto L15ff52;
  #L15ff50.  goto L15ff58;
  #L15ff52.  call `finishPrepare`(v6) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;.finishPrepare:()V` @kind virtual;
  #L15ff58.  v5:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L15ff5c.  return v5 @kind object;
}
