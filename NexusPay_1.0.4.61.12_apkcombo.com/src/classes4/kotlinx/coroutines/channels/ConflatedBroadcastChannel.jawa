record `kotlinx.coroutines.channels.ConflatedBroadcastChannel` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.channels.BroadcastChannel` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.channels.ConflatedBroadcastChannel._state` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `int` `kotlinx.coroutines.channels.ConflatedBroadcastChannel._updating` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.channels.ConflatedBroadcastChannel.onCloseHandler` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.b` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.c` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlinx.coroutines.channels.ConflatedBroadcastChannel$a` `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.Symbol` `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.channels.ConflatedBroadcastChannel$b` `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L16ae80.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L16ae84.  v1:= constclass @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel` @kind object;
  #L16ae88.  v2:= new `kotlinx.coroutines.channels.ConflatedBroadcastChannel$a`;
  #L16ae8c.  v3:= 0I;
  #L16ae8e.  call `<init>`(v2, v3) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$a;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L16ae94.  `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.d` @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$a` := v2 @kind object;
  #L16ae98.  v2:= new `kotlinx.coroutines.internal.Symbol`;
  #L16ae9c.  v4:= "UNDEFINED" @kind object;
  #L16aea0.  call `<init>`(v2, v4) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16aea6.  `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.e` @type ^`kotlinx.coroutines.internal.Symbol` := v2 @kind object;
  #L16aeaa.  v4:= new `kotlinx.coroutines.channels.ConflatedBroadcastChannel$b`;
  #L16aeae.  call `<init>`(v4, v2, v3) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$b;.<init>:(Ljava/lang/Object;[Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;)V` @kind direct;
  #L16aeb4.  `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.f` @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b` := v4 @kind object;
  #L16aeb8.  v2:= "_state" @kind object;
  #L16aebc.  call temp:= `newUpdater`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L16aec2.  v2:= temp @kind object;
  #L16aec4.  `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v2 @kind object;
  #L16aec8.  v2:= "_updating" @kind object;
  #L16aecc.  call temp:= `newUpdater`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;` @kind static;
  #L16aed2.  v2:= temp @kind object;
  #L16aed4.  `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.b` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v2 @kind object;
  #L16aed8.  v2:= "onCloseHandler" @kind object;
  #L16aedc.  call temp:= `newUpdater`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L16aee2.  v0:= temp @kind object;
  #L16aee4.  `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.c` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L16aee8.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L16aefc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16af02.  v0:= `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.f` @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b` @kind object;
  #L16af06.  v1.`kotlinx.coroutines.channels.ConflatedBroadcastChannel._state` @type ^`java.lang.Object` := v0 @kind object;
  #L16af0a.  v0:= 0I;
  #L16af0c.  v1.`kotlinx.coroutines.channels.ConflatedBroadcastChannel._updating` @type ^`int` := v0;
  #L16af10.  v0:= 0I;
  #L16af12.  v1.`kotlinx.coroutines.channels.ConflatedBroadcastChannel.onCloseHandler` @type ^`java.lang.Object` := v0 @kind object;
  #L16af16.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L16af28.  call `<init>`(v3) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.<init>:()V` @kind direct;
  #L16af2e.  v0:= `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L16af32.  v1:= new `kotlinx.coroutines.channels.ConflatedBroadcastChannel$b`;
  #L16af36.  v2:= 0I;
  #L16af38.  call `<init>`(v1, v4, v2) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$b;.<init>:(Ljava/lang/Object;[Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;)V` @kind direct;
  #L16af3e.  call `lazySet`(v0, v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.lazySet:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L16af44.  return @kind void;
}
procedure `kotlinx.coroutines.channels.ConflatedBroadcastChannel$c`[] `a`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v2 @kind this, `kotlinx.coroutines.channels.ConflatedBroadcastChannel$c`[] v3 @kind object, `kotlinx.coroutines.channels.ConflatedBroadcastChannel$c` v4 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.a:([Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;)[Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L16ad08.  if v3 != 0 then goto L16ad24;
  #L16ad0c.  v3:= 0I;
  #L16ad0e.  v0:= 1I;
  #L16ad10.  v1:= new `kotlinx.coroutines.channels.ConflatedBroadcastChannel$c`[v0];
  #L16ad14.  if v3 >= v0 then goto L16ad22;
  #L16ad18.  v1[v3]:= v4 @kind object;
  #L16ad1c.  v3:= v3 + 1;
  #L16ad20.  goto L16ad14;
  #L16ad22.  return v1 @kind object;
  #L16ad24.  call temp:= `plus`(v3, v4) @signature `Lkotlin/collections/ArraysKt;.plus:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L16ad2a.  v3:= temp @kind object;
  #L16ad2c.  v3:= (`kotlinx.coroutines.channels.ConflatedBroadcastChannel$c`[]) v3 @kind object;
  #L16ad30.  return v3 @kind object;
}
procedure `void` `access$closeSubscriber`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v0 @kind object, `kotlinx.coroutines.channels.ConflatedBroadcastChannel$c` v1 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.access$closeSubscriber:(Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L16af58.  call `b`(v0, v1) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.b:(Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;)V` @kind direct;
  #L16af5e.  return @kind void;
}
procedure `void` `access$registerSelectSend`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v0 @kind object, `kotlinx.coroutines.selects.SelectInstance` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.access$registerSelectSend:(Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;Lkotlinx/coroutines/selects/SelectInstance;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L16af70.  call `e`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.e:(Lkotlinx/coroutines/selects/SelectInstance;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L16af76.  return @kind void;
}
procedure `void` `b`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v4 @kind this, `kotlinx.coroutines.channels.ConflatedBroadcastChannel$c` v5 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.b:(Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16afa0.  v0:= v4.`kotlinx.coroutines.channels.ConflatedBroadcastChannel._state` @type ^`java.lang.Object` @kind object;
  #L16afa4.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$a` @kind boolean;
  #L16afa8.  if v1 == 0 then goto L16afae;
  #L16afac.  return @kind void;
  #L16afae.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b` @kind boolean;
  #L16afb2.  if v1 == 0 then goto L16afee;
  #L16afb6.  v1:= new `kotlinx.coroutines.channels.ConflatedBroadcastChannel$b`;
  #L16afba.  v2:= v0 @kind object;
  #L16afbc.  v2:= (`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b`) v2 @kind object;
  #L16afc0.  v3:= v2.`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b.a` @type ^`java.lang.Object` @kind object;
  #L16afc4.  v2:= v2.`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b.b` @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$c`[] @kind object;
  #L16afc8.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L16afce.  call temp:= `f`(v4, v2, v5) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.f:([Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;)[Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;` @kind direct;
  #L16afd4.  v2:= temp @kind object;
  #L16afd6.  call `<init>`(v1, v3, v2) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$b;.<init>:(Ljava/lang/Object;[Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;)V` @kind direct;
  #L16afdc.  v2:= `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L16afe0.  call temp:= `compareAndSet`(v2, v4, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L16afe6.  v0:= temp;
  #L16afe8.  if v0 == 0 then goto L16afa0;
  #L16afec.  return @kind void;
  #L16afee.  v5:= "Invalid state " @kind object;
  #L16aff2.  call temp:= `stringPlus`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16aff8.  v5:= temp @kind object;
  #L16affa.  v0:= new `java.lang.IllegalStateException`;
  #L16affe.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16b004.  v5:= temp @kind object;
  #L16b006.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b00c.  throw v0;
}
procedure `void` `c`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.c:(Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L16b0bc.  v0:= v3.`kotlinx.coroutines.channels.ConflatedBroadcastChannel.onCloseHandler` @type ^`java.lang.Object` @kind object;
  #L16b0c0.  if v0 == 0 then goto L16b0f0;
  #L16b0c4.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.HANDLER_INVOKED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b0c8.  if v0 == v1 then goto L16b0f0;
  #L16b0cc.  v2:= `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.c` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L16b0d0.  call temp:= `compareAndSet`(v2, v3, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L16b0d6.  v1:= temp;
  #L16b0d8.  if v1 == 0 then goto L16b0f0;
  #L16b0dc.  v1:= 1I;
  #L16b0de.  call temp:= `beforeCheckcastToFunctionOfArity`(v0, v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.beforeCheckcastToFunctionOfArity:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L16b0e4.  v0:= temp @kind object;
  #L16b0e6.  v0:= (`kotlin.jvm.functions.Function1`) v0 @kind object;
  #L16b0ea.  call temp:= `invoke`(v0, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L16b0f0.  return @kind void;
}
procedure `kotlinx.coroutines.channels.ConflatedBroadcastChannel$a` `d`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.d:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$a;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16ac2c.  v0:= `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.b` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L16ac30.  v1:= 0I;
  #L16ac32.  v2:= 1I;
  #L16ac34.  call temp:= `compareAndSet`(v0, v6, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L16ac3a.  v0:= temp;
  #L16ac3c.  v2:= 0I;
  #L16ac3e.  if v0 != 0 then goto L16ac44;
  #L16ac42.  return v2 @kind object;
  #L16ac44.  v0:= v6.`kotlinx.coroutines.channels.ConflatedBroadcastChannel._state` @type ^`java.lang.Object` @kind object;
  #L16ac48.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$a` @kind boolean;
  #L16ac4c.  if v3 == 0 then goto L16ac5a;
  #L16ac50.  v0:= (`kotlinx.coroutines.channels.ConflatedBroadcastChannel$a`) v0 @kind object;
  #L16ac54.  v6.`kotlinx.coroutines.channels.ConflatedBroadcastChannel._updating` @type ^`int` := v1;
  #L16ac58.  return v0 @kind object;
  #L16ac5a.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b` @kind boolean;
  #L16ac5e.  if v3 == 0 then goto L16acb2;
  #L16ac62.  v3:= new `kotlinx.coroutines.channels.ConflatedBroadcastChannel$b`;
  #L16ac66.  v4:= v0 @kind object;
  #L16ac68.  v4:= (`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b`) v4 @kind object;
  #L16ac6c.  v4:= v4.`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b.b` @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$c`[] @kind object;
  #L16ac70.  call `<init>`(v3, v7, v4) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$b;.<init>:(Ljava/lang/Object;[Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;)V` @kind direct;
  #L16ac76.  v4:= `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L16ac7a.  call temp:= `compareAndSet`(v4, v6, v0, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L16ac80.  v3:= temp;
  #L16ac82.  if v3 == 0 then goto L16ac44;
  #L16ac86.  v0:= (`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b`) v0 @kind object;
  #L16ac8a.  v0:= v0.`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b.b` @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$c`[] @kind object;
  #L16ac8e.  if v0 != 0 then goto L16ac94;
  #L16ac92.  goto L16acac;
  #L16ac94.  v3:= length @variable v0;
  #L16ac96.  v4:= 0I;
  #L16ac98.  if v4 >= v3 then goto L16acac;
  #L16ac9c.  v5:= v0[v4] @kind object;
  #L16aca0.  call temp:= `offerInternal`(v5, v7) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;.offerInternal:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16aca6.  v4:= v4 + 1;
  #L16acaa.  goto L16ac98;
  #L16acac.  v6.`kotlinx.coroutines.channels.ConflatedBroadcastChannel._updating` @type ^`int` := v1;
  #L16acb0.  return v2 @kind object;
  #L16acb2.  v7:= "Invalid state " @kind object;
  #L16acb6.  call temp:= `stringPlus`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16acbc.  v7:= temp @kind object;
  #L16acbe.  v0:= new `java.lang.IllegalStateException`;
  #L16acc2.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16acc8.  v7:= temp @kind object;
  #L16acca.  call `<init>`(v0, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16acd0.  throw v0;
  #L16acd2.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16acd4.  v6.`kotlinx.coroutines.channels.ConflatedBroadcastChannel._updating` @type ^`int` := v1;
  #L16acd8.  throw v7;
  catch `java.lang.Throwable` @[L16ac44..L16ac54] goto L16acd2;
  catch `java.lang.Throwable` @[L16ac5a..L16aca6] goto L16acd2;
  catch `java.lang.Throwable` @[L16acb2..L16acd2] goto L16acd2;
}
procedure `void` `e`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v1 @kind this, `kotlinx.coroutines.selects.SelectInstance` v2 @kind object, `java.lang.Object` v3 @kind object, `kotlin.jvm.functions.Function2` v4 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.e:(Lkotlinx/coroutines/selects/SelectInstance;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L16b104.  call temp:= `trySelect`(v2) @signature `Lkotlinx/coroutines/selects/SelectInstance;.trySelect:()Z` @kind interface;
  #L16b10a.  v0:= temp;
  #L16b10c.  if v0 != 0 then goto L16b112;
  #L16b110.  return @kind void;
  #L16b112.  call temp:= `d`(v1, v3) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.d:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$a;` @kind direct;
  #L16b118.  v3:= temp @kind object;
  #L16b11a.  if v3 != 0 then goto L16b12e;
  #L16b11e.  call temp:= `getCompletion`(v2) @signature `Lkotlinx/coroutines/selects/SelectInstance;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind interface;
  #L16b124.  v2:= temp @kind object;
  #L16b126.  call `startCoroutineUnintercepted`(v4, v1, v2) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startCoroutineUnintercepted:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L16b12c.  return @kind void;
  #L16b12e.  call temp:= `a`(v3) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$a;.a:()Ljava/lang/Throwable;` @kind virtual;
  #L16b134.  v3:= temp @kind object;
  #L16b136.  call `resumeSelectWithException`(v2, v3) @signature `Lkotlinx/coroutines/selects/SelectInstance;.resumeSelectWithException:(Ljava/lang/Throwable;)V` @kind interface;
  #L16b13c.  return @kind void;
}
procedure `kotlinx.coroutines.channels.ConflatedBroadcastChannel$c`[] `f`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v8 @kind this, `kotlinx.coroutines.channels.ConflatedBroadcastChannel$c`[] v9 @kind object, `kotlinx.coroutines.channels.ConflatedBroadcastChannel$c` v10 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.f:([Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;)[Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L16ad44.  v0:= length @variable v9;
  #L16ad46.  call temp:= `indexOf`(v9, v10) @signature `Lkotlin/collections/ArraysKt;.indexOf:([Ljava/lang/Object;Ljava/lang/Object;)I` @kind static;
  #L16ad4c.  v10:= temp;
  #L16ad4e.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L16ad54.  v1:= temp;
  #L16ad56.  v2:= 1I;
  #L16ad58.  if v1 == 0 then goto L16ad78;
  #L16ad5c.  if v10 < 0 then goto L16ad64;
  #L16ad60.  v1:= 1I;
  #L16ad62.  goto L16ad66;
  #L16ad64.  v1:= 0I;
  #L16ad66.  if v1 == 0 then goto L16ad6c;
  #L16ad6a.  goto L16ad78;
  #L16ad6c.  v9:= new `java.lang.AssertionError`;
  #L16ad70.  call `<init>`(v9) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L16ad76.  throw v9;
  #L16ad78.  if v0 != v2 then goto L16ad80;
  #L16ad7c.  v9:= 0I;
  #L16ad7e.  return v9 @kind object;
  #L16ad80.  v0:= v0 - v2 @kind int;
  #L16ad82.  v0:= new `kotlinx.coroutines.channels.ConflatedBroadcastChannel$c`[v0];
  #L16ad86.  v3:= 0I;
  #L16ad88.  v4:= 0I;
  #L16ad8a.  v6:= 6I;
  #L16ad8c.  v7:= 0I;
  #L16ad8e.  v1:= v9 @kind object;
  #L16ad90.  v2:= v0 @kind object;
  #L16ad92.  v5:= v10;
  #L16ad94.  call temp:= `copyInto$default`(v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlin/collections/ArraysKt;.copyInto$default:([Ljava/lang/Object;[Ljava/lang/Object;IIIILjava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L16ad9a.  v4:= v10 + 1;
  #L16ad9e.  v5:= 0I;
  #L16ada0.  v6:= 8I;
  #L16ada4.  v3:= v10;
  #L16ada6.  call temp:= `copyInto$default`(v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlin/collections/ArraysKt;.copyInto$default:([Ljava/lang/Object;[Ljava/lang/Object;IIIILjava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L16adac.  return v0 @kind object;
}
procedure `void` `getValue$annotations`() @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.getValue$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L16b020.  return @kind void;
}
procedure `void` `cancel`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v0 @kind this, `java.util.concurrent.CancellationException` v1 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.cancel:(Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC {
    temp;

  #L16af88.  call temp:= `close`(v0, v1) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.close:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L16af8e.  return @kind void;
}
procedure `boolean` `cancel`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.cancel:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L16a9e8.  call temp:= `close`(v0, v1) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.close:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L16a9ee.  v1:= temp;
  #L16a9f0.  return v1;
}
procedure `boolean` `close`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.close:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16aa04.  v0:= v4.`kotlinx.coroutines.channels.ConflatedBroadcastChannel._state` @type ^`java.lang.Object` @kind object;
  #L16aa08.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$a` @kind boolean;
  #L16aa0c.  v2:= 0I;
  #L16aa0e.  if v1 == 0 then goto L16aa14;
  #L16aa12.  return v2;
  #L16aa14.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b` @kind boolean;
  #L16aa18.  if v1 == 0 then goto L16aa6e;
  #L16aa1c.  if v5 != 0 then goto L16aa26;
  #L16aa20.  v1:= `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.d` @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$a` @kind object;
  #L16aa24.  goto L16aa30;
  #L16aa26.  v1:= new `kotlinx.coroutines.channels.ConflatedBroadcastChannel$a`;
  #L16aa2a.  call `<init>`(v1, v5) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$a;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L16aa30.  v3:= `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L16aa34.  call temp:= `compareAndSet`(v3, v4, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L16aa3a.  v1:= temp;
  #L16aa3c.  if v1 == 0 then goto L16aa04;
  #L16aa40.  v0:= (`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b`) v0 @kind object;
  #L16aa44.  v0:= v0.`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b.b` @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$c`[] @kind object;
  #L16aa48.  if v0 != 0 then goto L16aa4e;
  #L16aa4c.  goto L16aa64;
  #L16aa4e.  v1:= length @variable v0;
  #L16aa50.  if v2 >= v1 then goto L16aa64;
  #L16aa54.  v3:= v0[v2] @kind object;
  #L16aa58.  call temp:= `close`(v3, v5) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.close:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L16aa5e.  v2:= v2 + 1;
  #L16aa62.  goto L16aa50;
  #L16aa64.  call `c`(v4, v5) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.c:(Ljava/lang/Throwable;)V` @kind direct;
  #L16aa6a.  v5:= 1I;
  #L16aa6c.  return v5;
  #L16aa6e.  v5:= "Invalid state " @kind object;
  #L16aa72.  call temp:= `stringPlus`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16aa78.  v5:= temp @kind object;
  #L16aa7a.  v0:= new `java.lang.IllegalStateException`;
  #L16aa7e.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16aa84.  v5:= temp @kind object;
  #L16aa86.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16aa8c.  throw v0;
}
procedure `kotlinx.coroutines.selects.SelectClause2` `getOnSend`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.getOnSend:()Lkotlinx/coroutines/selects/SelectClause2;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16ae64.  v0:= new `kotlinx.coroutines.channels.ConflatedBroadcastChannel$onSend$1`;
  #L16ae68.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$onSend$1;.<init>:(Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;)V` @kind direct;
  #L16ae6e.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L16aad8.  v0:= v2.`kotlinx.coroutines.channels.ConflatedBroadcastChannel._state` @type ^`java.lang.Object` @kind object;
  #L16aadc.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$a` @kind boolean;
  #L16aae0.  if v1 != 0 then goto L16ab2e;
  #L16aae4.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b` @kind boolean;
  #L16aae8.  if v1 == 0 then goto L16ab0e;
  #L16aaec.  v0:= (`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b`) v0 @kind object;
  #L16aaf0.  v0:= v0.`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b.a` @type ^`java.lang.Object` @kind object;
  #L16aaf4.  v1:= `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.e` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16aaf8.  if v0 == v1 then goto L16aafe;
  #L16aafc.  return v0 @kind object;
  #L16aafe.  v0:= new `java.lang.IllegalStateException`;
  #L16ab02.  v1:= "No value" @kind object;
  #L16ab06.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16ab0c.  throw v0;
  #L16ab0e.  v1:= "Invalid state " @kind object;
  #L16ab12.  call temp:= `stringPlus`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16ab18.  v0:= temp @kind object;
  #L16ab1a.  v1:= new `java.lang.IllegalStateException`;
  #L16ab1e.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16ab24.  v0:= temp @kind object;
  #L16ab26.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16ab2c.  throw v1;
  #L16ab2e.  v0:= (`kotlinx.coroutines.channels.ConflatedBroadcastChannel$a`) v0 @kind object;
  #L16ab32.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$a;.b:()Ljava/lang/Throwable;` @kind virtual;
  #L16ab38.  v0:= temp @kind object;
  #L16ab3a.  throw v0;
}
procedure `java.lang.Object` `getValueOrNull`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v3 @kind this) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.getValueOrNull:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L16ab4c.  v0:= v3.`kotlinx.coroutines.channels.ConflatedBroadcastChannel._state` @type ^`java.lang.Object` @kind object;
  #L16ab50.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$a` @kind boolean;
  #L16ab54.  v2:= 0I;
  #L16ab56.  if v1 == 0 then goto L16ab5c;
  #L16ab5a.  goto L16ab78;
  #L16ab5c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b` @kind boolean;
  #L16ab60.  if v1 == 0 then goto L16ab7a;
  #L16ab64.  v1:= `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.e` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16ab68.  v0:= (`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b`) v0 @kind object;
  #L16ab6c.  v0:= v0.`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b.a` @type ^`java.lang.Object` @kind object;
  #L16ab70.  if v0 != v1 then goto L16ab76;
  #L16ab74.  goto L16ab78;
  #L16ab76.  v2:= v0 @kind object;
  #L16ab78.  return v2 @kind object;
  #L16ab7a.  v1:= "Invalid state " @kind object;
  #L16ab7e.  call temp:= `stringPlus`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16ab84.  v0:= temp @kind object;
  #L16ab86.  v1:= new `java.lang.IllegalStateException`;
  #L16ab8a.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16ab90.  v0:= temp @kind object;
  #L16ab92.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16ab98.  throw v1;
}
procedure `void` `invokeOnClose`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v3 @kind this, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.invokeOnClose:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L16b034.  v0:= `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.c` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L16b038.  v1:= 0I;
  #L16b03a.  call temp:= `compareAndSet`(v0, v3, v1, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L16b040.  v0:= temp;
  #L16b042.  if v0 != 0 then goto L16b07a;
  #L16b046.  v4:= v3.`kotlinx.coroutines.channels.ConflatedBroadcastChannel.onCloseHandler` @type ^`java.lang.Object` @kind object;
  #L16b04a.  v0:= `@@kotlinx.coroutines.channels.AbstractChannelKt.HANDLER_INVOKED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b04e.  if v4 != v0 then goto L16b062;
  #L16b052.  v4:= new `java.lang.IllegalStateException`;
  #L16b056.  v0:= "Another handler was already registered and successfully invoked" @kind object;
  #L16b05a.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b060.  throw v4;
  #L16b062.  v0:= new `java.lang.IllegalStateException`;
  #L16b066.  v1:= "Another handler was already registered: " @kind object;
  #L16b06a.  call temp:= `stringPlus`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16b070.  v4:= temp @kind object;
  #L16b072.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16b078.  throw v0;
  #L16b07a.  v0:= v3.`kotlinx.coroutines.channels.ConflatedBroadcastChannel._state` @type ^`java.lang.Object` @kind object;
  #L16b07e.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$a` @kind boolean;
  #L16b082.  if v1 == 0 then goto L16b0a8;
  #L16b086.  v1:= `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.c` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L16b08a.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.HANDLER_INVOKED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16b08e.  call temp:= `compareAndSet`(v1, v3, v4, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L16b094.  v1:= temp;
  #L16b096.  if v1 == 0 then goto L16b0a8;
  #L16b09a.  v0:= (`kotlinx.coroutines.channels.ConflatedBroadcastChannel$a`) v0 @kind object;
  #L16b09e.  v0:= v0.`kotlinx.coroutines.channels.ConflatedBroadcastChannel$a.a` @type ^`java.lang.Throwable` @kind object;
  #L16b0a2.  call temp:= `invoke`(v4, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L16b0a8.  return @kind void;
}
procedure `boolean` `isClosedForSend`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.isClosedForSend:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16aaa0.  v0:= v1.`kotlinx.coroutines.channels.ConflatedBroadcastChannel._state` @type ^`java.lang.Object` @kind object;
  #L16aaa4.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$a` @kind boolean;
  #L16aaa8.  return v0;
}
procedure `boolean` `offer`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L16aabc.  call temp:= `offer`(v0, v1) @signature `Lkotlinx/coroutines/channels/BroadcastChannel$DefaultImpls;.offer:(Lkotlinx/coroutines/channels/BroadcastChannel;Ljava/lang/Object;)Z` @kind static;
  #L16aac2.  v1:= temp;
  #L16aac4.  return v1;
}
procedure `kotlinx.coroutines.channels.ReceiveChannel` `openSubscription`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v5 @kind this) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.openSubscription:()Lkotlinx/coroutines/channels/ReceiveChannel;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L16adc0.  v0:= new `kotlinx.coroutines.channels.ConflatedBroadcastChannel$c`;
  #L16adc4.  call `<init>`(v0, v5) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;.<init>:(Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;)V` @kind direct;
  #L16adca.  v1:= v5.`kotlinx.coroutines.channels.ConflatedBroadcastChannel._state` @type ^`java.lang.Object` @kind object;
  #L16adce.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$a` @kind boolean;
  #L16add2.  if v2 == 0 then goto L16ade6;
  #L16add6.  v1:= (`kotlinx.coroutines.channels.ConflatedBroadcastChannel$a`) v1 @kind object;
  #L16adda.  v1:= v1.`kotlinx.coroutines.channels.ConflatedBroadcastChannel$a.a` @type ^`java.lang.Throwable` @kind object;
  #L16adde.  call temp:= `close`(v0, v1) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.close:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L16ade4.  return v0 @kind object;
  #L16ade6.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b` @kind boolean;
  #L16adea.  if v2 == 0 then goto L16ae32;
  #L16adee.  v2:= v1 @kind object;
  #L16adf0.  v2:= (`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b`) v2 @kind object;
  #L16adf4.  v3:= v2.`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b.a` @type ^`java.lang.Object` @kind object;
  #L16adf8.  v4:= `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.e` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16adfc.  if v3 == v4 then goto L16ae06;
  #L16ae00.  call temp:= `offerInternal`(v0, v3) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;.offerInternal:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16ae06.  v3:= new `kotlinx.coroutines.channels.ConflatedBroadcastChannel$b`;
  #L16ae0a.  v4:= v2.`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b.a` @type ^`java.lang.Object` @kind object;
  #L16ae0e.  v2:= v2.`kotlinx.coroutines.channels.ConflatedBroadcastChannel$b.b` @type ^`kotlinx.coroutines.channels.ConflatedBroadcastChannel$c`[] @kind object;
  #L16ae12.  call temp:= `a`(v5, v2, v0) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.a:([Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;)[Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;` @kind direct;
  #L16ae18.  v2:= temp @kind object;
  #L16ae1a.  call `<init>`(v3, v4, v2) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$b;.<init>:(Ljava/lang/Object;[Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$c;)V` @kind direct;
  #L16ae20.  v2:= `@@kotlinx.coroutines.channels.ConflatedBroadcastChannel.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L16ae24.  call temp:= `compareAndSet`(v2, v5, v1, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L16ae2a.  v1:= temp;
  #L16ae2c.  if v1 == 0 then goto L16adca;
  #L16ae30.  return v0 @kind object;
  #L16ae32.  v0:= "Invalid state " @kind object;
  #L16ae36.  call temp:= `stringPlus`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16ae3c.  v0:= temp @kind object;
  #L16ae3e.  v1:= new `java.lang.IllegalStateException`;
  #L16ae42.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16ae48.  v0:= temp @kind object;
  #L16ae4a.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16ae50.  throw v1;
}
procedure `java.lang.Object` `send`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.send:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L16abac.  call temp:= `d`(v0, v1) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.d:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$a;` @kind direct;
  #L16abb2.  v1:= temp @kind object;
  #L16abb4.  if v1 != 0 then goto L16abce;
  #L16abb8.  v1:= 0I;
  #L16abba.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L16abc0.  v2:= temp @kind object;
  #L16abc2.  if v2 != 0 then goto L16abc8;
  #L16abc6.  return v1 @kind object;
  #L16abc8.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L16abcc.  return v1 @kind object;
  #L16abce.  call temp:= `a`(v1) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$a;.a:()Ljava/lang/Throwable;` @kind virtual;
  #L16abd4.  v1:= temp @kind object;
  #L16abd6.  throw v1;
}
procedure `java.lang.Object` `trySend-JP2dKIU`(`kotlinx.coroutines.channels.ConflatedBroadcastChannel` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.trySend-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16abe8.  call temp:= `d`(v1, v2) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel;.d:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$a;` @kind direct;
  #L16abee.  v2:= temp @kind object;
  #L16abf0.  if v2 != 0 then goto L16ac06;
  #L16abf4.  v2:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L16abf8.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L16abfc.  call temp:= `success-JP2dKIU`(v2, v0) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.success-JP2dKIU:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16ac02.  v2:= temp @kind object;
  #L16ac04.  return v2 @kind object;
  #L16ac06.  v0:= `@@kotlinx.coroutines.channels.ChannelResult.Companion` @type ^`kotlinx.coroutines.channels.ChannelResult$Companion` @kind object;
  #L16ac0a.  call temp:= `a`(v2) @signature `Lkotlinx/coroutines/channels/ConflatedBroadcastChannel$a;.a:()Ljava/lang/Throwable;` @kind virtual;
  #L16ac10.  v2:= temp @kind object;
  #L16ac12.  call temp:= `closed-JP2dKIU`(v0, v2) @signature `Lkotlinx/coroutines/channels/ChannelResult$Companion;.closed-JP2dKIU:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind virtual;
  #L16ac18.  v2:= temp @kind object;
  #L16ac1a.  return v2 @kind object;
}
