record `kotlinx.coroutines.channels.ArrayChannel` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.channels.AbstractChannel` @kind class {
  `int` `kotlinx.coroutines.channels.ArrayChannel.c` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.channels.BufferOverflow` `kotlinx.coroutines.channels.ArrayChannel.d` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.locks.ReentrantLock` `kotlinx.coroutines.channels.ArrayChannel.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object`[] `kotlinx.coroutines.channels.ArrayChannel.f` @AccessFlag PRIVATE;
  `int` `kotlinx.coroutines.channels.ArrayChannel.g` @AccessFlag PRIVATE;
  `int` `kotlinx.coroutines.channels.ArrayChannel.size` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.ArrayChannel` v6 @kind this, `int` v7 , `kotlinx.coroutines.channels.BufferOverflow` v8 @kind object, `kotlin.jvm.functions.Function1` v9 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.<init>:(ILkotlinx/coroutines/channels/BufferOverflow;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16359c.  call `<init>`(v6, v9) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L1635a2.  v6.`kotlinx.coroutines.channels.ArrayChannel.c` @type ^`int` := v7;
  #L1635a6.  v6.`kotlinx.coroutines.channels.ArrayChannel.d` @type ^`kotlinx.coroutines.channels.BufferOverflow` := v8 @kind object;
  #L1635aa.  v8:= 0I;
  #L1635ac.  v9:= 1I;
  #L1635ae.  if v7 < v9 then goto L1635b4;
  #L1635b2.  goto L1635b6;
  #L1635b4.  v9:= 0I;
  #L1635b6.  if v9 == 0 then goto L1635fe;
  #L1635ba.  v7:= new `java.util.concurrent.locks.ReentrantLock`;
  #L1635be.  call `<init>`(v7) @signature `Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V` @kind direct;
  #L1635c4.  v6.`kotlinx.coroutines.channels.ArrayChannel.e` @type ^`java.util.concurrent.locks.ReentrantLock` := v7 @kind object;
  #L1635c8.  v7:= v6.`kotlinx.coroutines.channels.ArrayChannel.c` @type ^`int`;
  #L1635cc.  v9:= 8I;
  #L1635d0.  call temp:= `min`(v7, v9) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1635d6.  v7:= temp;
  #L1635d8.  v7:= new `java.lang.Object`[v7];
  #L1635dc.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.EMPTY` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L1635e0.  v2:= 0I;
  #L1635e2.  v3:= 0I;
  #L1635e4.  v4:= 6I;
  #L1635e6.  v5:= 0I;
  #L1635e8.  v0:= v7 @kind object;
  #L1635ea.  call `fill$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/collections/ArraysKt;.fill$default:([Ljava/lang/Object;Ljava/lang/Object;IIILjava/lang/Object;)V` @kind static;
  #L1635f0.  v9:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1635f4.  v6.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] := v7 @kind object;
  #L1635f8.  v6.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int` := v8;
  #L1635fc.  return @kind void;
  #L1635fe.  v7:= new `java.lang.StringBuilder`;
  #L163602.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L163608.  v8:= "ArrayChannel capacity must be at least 1, but " @kind object;
  #L16360c.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L163612.  v8:= v6.`kotlinx.coroutines.channels.ArrayChannel.c` @type ^`int`;
  #L163616.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L16361c.  v8:= " was specified" @kind object;
  #L163620.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L163626.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16362c.  v7:= temp @kind object;
  #L16362e.  v8:= new `java.lang.IllegalArgumentException`;
  #L163632.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L163638.  v7:= temp @kind object;
  #L16363a.  call `<init>`(v8, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L163640.  throw v8;
}
procedure `void` `q`(`kotlinx.coroutines.channels.ArrayChannel` v5 @kind this, `int` v6 , `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.q:(ILjava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L163654.  v0:= v5.`kotlinx.coroutines.channels.ArrayChannel.c` @type ^`int`;
  #L163658.  if v6 >= v0 then goto L163676;
  #L16365c.  call `r`(v5, v6) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.r:(I)V` @kind direct;
  #L163662.  v0:= v5.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L163666.  v1:= v5.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int`;
  #L16366a.  v1:= v1 + v6 @kind int;
  #L16366c.  v6:= length @variable v0;
  #L16366e.  v1:= v1 %% v6 @kind int;
  #L163670.  v0[v1]:= v7 @kind object;
  #L163674.  goto L1636d0;
  #L163676.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L16367c.  v0:= temp;
  #L16367e.  v1:= 1I;
  #L163680.  if v0 == 0 then goto L1636a8;
  #L163684.  v0:= v5.`kotlinx.coroutines.channels.ArrayChannel.d` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L163688.  v2:= `@@kotlinx.coroutines.channels.BufferOverflow.DROP_OLDEST` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L16368c.  if v0 != v2 then goto L163694;
  #L163690.  v0:= 1I;
  #L163692.  goto L163696;
  #L163694.  v0:= 0I;
  #L163696.  if v0 == 0 then goto L16369c;
  #L16369a.  goto L1636a8;
  #L16369c.  v6:= new `java.lang.AssertionError`;
  #L1636a0.  call `<init>`(v6) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1636a6.  throw v6;
  #L1636a8.  v0:= v5.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L1636ac.  v2:= v5.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int`;
  #L1636b0.  v3:= length @variable v0;
  #L1636b2.  v3:= v2 %% v3 @kind int;
  #L1636b6.  v4:= 0I;
  #L1636b8.  v0[v3]:= v4 @kind object;
  #L1636bc.  v6:= v6 + v2 @kind int;
  #L1636be.  v3:= length @variable v0;
  #L1636c0.  v6:= v6 %% v3 @kind int;
  #L1636c2.  v0[v6]:= v7 @kind object;
  #L1636c6.  v2:= v2 + v1 @kind int;
  #L1636c8.  v6:= length @variable v0;
  #L1636ca.  v2:= v2 %% v6 @kind int;
  #L1636cc.  v5.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int` := v2;
  #L1636d0.  return @kind void;
}
procedure `void` `r`(`kotlinx.coroutines.channels.ArrayChannel` v8 @kind this, `int` v9 ) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.r:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1636e4.  v0:= v8.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L1636e8.  v1:= length @variable v0;
  #L1636ea.  if v9 < v1 then goto L163742;
  #L1636ee.  v0:= length @variable v0;
  #L1636f0.  v0:= v0 * 2;
  #L1636f4.  v1:= v8.`kotlinx.coroutines.channels.ArrayChannel.c` @type ^`int`;
  #L1636f8.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1636fe.  v0:= temp;
  #L163700.  v1:= new `java.lang.Object`[v0];
  #L163704.  v2:= 0I;
  #L163706.  if v9 <= 0 then goto L163730;
  #L16370a.  v3:= 0I;
  #L16370c.  v4:= v3 + 1;
  #L163710.  v5:= v8.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L163714.  v6:= v8.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int`;
  #L163718.  v6:= v6 + v3 @kind int;
  #L16371a.  v7:= length @variable v5;
  #L16371c.  v6:= v6 %% v7 @kind int;
  #L16371e.  v5:= v5[v6] @kind object;
  #L163722.  v1[v3]:= v5 @kind object;
  #L163726.  if v4 < v9 then goto L16372c;
  #L16372a.  goto L163730;
  #L16372c.  v3:= v4;
  #L16372e.  goto L16370c;
  #L163730.  v3:= `@@kotlinx.coroutines.channels.AbstractChannelKt.EMPTY` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L163734.  call `fill`(v1, v3, v9, v0) @signature `Lkotlin/collections/ArraysKt;.fill:([Ljava/lang/Object;Ljava/lang/Object;II)V` @kind static;
  #L16373a.  v8.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] := v1 @kind object;
  #L16373e.  v8.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int` := v2;
  #L163742.  return @kind void;
}
procedure `kotlinx.coroutines.internal.Symbol` `s`(`kotlinx.coroutines.channels.ArrayChannel` v3 @kind this, `int` v4 ) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.s:(I)Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L163538.  v0:= v3.`kotlinx.coroutines.channels.ArrayChannel.c` @type ^`int`;
  #L16353c.  v1:= 0I;
  #L16353e.  v2:= 1I;
  #L163540.  if v4 >= v0 then goto L16354c;
  #L163544.  v4:= v4 + v2 @kind int;
  #L163546.  v3.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int` := v4;
  #L16354a.  return v1 @kind object;
  #L16354c.  v4:= v3.`kotlinx.coroutines.channels.ArrayChannel.d` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L163550.  v0:= `@@kotlinx.coroutines.channels.ArrayChannel$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L163554.  call temp:= `ordinal`(v4) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L16355a.  v4:= temp;
  #L16355c.  v4:= v0[v4];
  #L163560.  if v4 == v2 then goto L163584;
  #L163564.  v0:= 2I;
  #L163566.  if v4 == v0 then goto L16357e;
  #L16356a.  v0:= 3I;
  #L16356c.  if v4 != v0 then goto L163572;
  #L163570.  goto L163588;
  #L163572.  v4:= new `kotlin.NoWhenBranchMatchedException`;
  #L163576.  call `<init>`(v4) @signature `Lkotlin/NoWhenBranchMatchedException;.<init>:()V` @kind direct;
  #L16357c.  throw v4;
  #L16357e.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L163582.  goto L163588;
  #L163584.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L163588.  return v1 @kind object;
}
procedure `boolean` `enqueueReceiveInternal`(`kotlinx.coroutines.channels.ArrayChannel` v1 @kind this, `kotlinx.coroutines.channels.Receive` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.enqueueReceiveInternal:(Lkotlinx/coroutines/channels/Receive;)Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L162e28.  v0:= v1.`kotlinx.coroutines.channels.ArrayChannel.e` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L162e2c.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L162e32.  call temp:= `enqueueReceiveInternal`(v1, v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.enqueueReceiveInternal:(Lkotlinx/coroutines/channels/Receive;)Z` @kind super;
  #L162e38.  v2:= temp;
  #L162e3a.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L162e40.  return v2;
  #L162e42.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L162e44.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L162e4a.  throw v2;
  catch `java.lang.Throwable` @[L162e32..L162e3a] goto L162e42;
}
procedure `java.lang.Object` `enqueueSend`(`kotlinx.coroutines.channels.ArrayChannel` v1 @kind this, `kotlinx.coroutines.channels.Send` v2 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.enqueueSend:(Lkotlinx/coroutines/channels/Send;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L162f60.  v0:= v1.`kotlinx.coroutines.channels.ArrayChannel.e` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L162f64.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L162f6a.  call temp:= `enqueueSend`(v1, v2) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.enqueueSend:(Lkotlinx/coroutines/channels/Send;)Ljava/lang/Object;` @kind super;
  #L162f70.  v2:= temp @kind object;
  #L162f72.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L162f78.  return v2 @kind object;
  #L162f7a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L162f7c.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L162f82.  throw v2;
  catch `java.lang.Throwable` @[L162f6a..L162f72] goto L162f7a;
}
procedure `java.lang.String` `getBufferDebugString`(`kotlinx.coroutines.channels.ArrayChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.getBufferDebugString:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1634e0.  v0:= new `java.lang.StringBuilder`;
  #L1634e4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1634ea.  v1:= "(buffer:capacity=" @kind object;
  #L1634ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1634f4.  v1:= v2.`kotlinx.coroutines.channels.ArrayChannel.c` @type ^`int`;
  #L1634f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1634fe.  v1:= ",size=" @kind object;
  #L163502.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L163508.  v1:= v2.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int`;
  #L16350c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L163512.  v1:= 41I;
  #L163516.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16351c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L163522.  v0:= temp @kind object;
  #L163524.  return v0 @kind object;
}
procedure `boolean` `isBufferAlwaysEmpty`(`kotlinx.coroutines.channels.ArrayChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.isBufferAlwaysEmpty:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L162e68.  v0:= 0I;
  #L162e6a.  return v0;
}
procedure `boolean` `isBufferAlwaysFull`(`kotlinx.coroutines.channels.ArrayChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.isBufferAlwaysFull:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L162e7c.  v0:= 0I;
  #L162e7e.  return v0;
}
procedure `boolean` `isBufferEmpty`(`kotlinx.coroutines.channels.ArrayChannel` v1 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.isBufferEmpty:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L162e90.  v0:= v1.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int`;
  #L162e94.  if v0 != 0 then goto L162e9c;
  #L162e98.  v0:= 1I;
  #L162e9a.  goto L162e9e;
  #L162e9c.  v0:= 0I;
  #L162e9e.  return v0;
}
procedure `boolean` `isBufferFull`(`kotlinx.coroutines.channels.ArrayChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.isBufferFull:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L162eb0.  v0:= v2.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int`;
  #L162eb4.  v1:= v2.`kotlinx.coroutines.channels.ArrayChannel.c` @type ^`int`;
  #L162eb8.  if v0 != v1 then goto L162ecc;
  #L162ebc.  v0:= v2.`kotlinx.coroutines.channels.ArrayChannel.d` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L162ec0.  v1:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L162ec4.  if v0 != v1 then goto L162ecc;
  #L162ec8.  v0:= 1I;
  #L162eca.  goto L162ece;
  #L162ecc.  v0:= 0I;
  #L162ece.  return v0;
}
procedure `boolean` `isClosedForReceive`(`kotlinx.coroutines.channels.ArrayChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.isClosedForReceive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L162ee0.  v0:= v2.`kotlinx.coroutines.channels.ArrayChannel.e` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L162ee4.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L162eea.  call temp:= `isClosedForReceive`(v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isClosedForReceive:()Z` @kind super;
  #L162ef0.  v1:= temp;
  #L162ef2.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L162ef8.  return v1;
  #L162efa.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L162efc.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L162f02.  throw v1;
  catch `java.lang.Throwable` @[L162eea..L162ef2] goto L162efa;
}
procedure `boolean` `isEmpty`(`kotlinx.coroutines.channels.ArrayChannel` v2 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L162f20.  v0:= v2.`kotlinx.coroutines.channels.ArrayChannel.e` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L162f24.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L162f2a.  call temp:= `isEmptyImpl`(v2) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.isEmptyImpl:()Z` @kind virtual;
  #L162f30.  v1:= temp;
  #L162f32.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L162f38.  return v1;
  #L162f3a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L162f3c.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L162f42.  throw v1;
  catch `java.lang.Throwable` @[L162f2a..L162f32] goto L162f3a;
}
procedure `java.lang.Object` `offerInternal`(`kotlinx.coroutines.channels.ArrayChannel` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.offerInternal:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L162fa0.  v0:= v5.`kotlinx.coroutines.channels.ArrayChannel.e` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L162fa4.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L162faa.  v1:= v5.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int`;
  #L162fae.  call temp:= `getClosedForSend`(v5) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForSend:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L162fb4.  v2:= temp @kind object;
  #L162fb6.  if v2 != 0 then goto L16305e;
  #L162fba.  call temp:= `s`(v5, v1) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.s:(I)Lkotlinx/coroutines/internal/Symbol;` @kind direct;
  #L162fc0.  v2:= temp @kind object;
  #L162fc2.  if v2 != 0 then goto L163056;
  #L162fc6.  if v1 != 0 then goto L163044;
  #L162fca.  call temp:= `takeFirstReceiveOrPeekClosed`(v5) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.takeFirstReceiveOrPeekClosed:()Lkotlinx/coroutines/channels/ReceiveOrClosed;` @kind virtual;
  #L162fd0.  v2:= temp @kind object;
  #L162fd2.  if v2 != 0 then goto L162fd8;
  #L162fd6.  goto L163044;
  #L162fd8.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L162fdc.  if v3 == 0 then goto L162fec;
  #L162fe0.  v5.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int` := v1;
  #L162fe4.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L162fea.  return v2 @kind object;
  #L162fec.  v3:= 0I;
  #L162fee.  call temp:= `tryResumeReceive`(v2, v6, v3) @signature `Lkotlinx/coroutines/channels/ReceiveOrClosed;.tryResumeReceive:(Ljava/lang/Object;Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Lkotlinx/coroutines/internal/Symbol;` @kind interface;
  #L162ff4.  v3:= temp @kind object;
  #L162ff6.  if v3 == 0 then goto L162fca;
  #L162ffa.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L163000.  v4:= temp;
  #L163002.  if v4 == 0 then goto L163026;
  #L163006.  v4:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16300a.  if v3 != v4 then goto L163012;
  #L16300e.  v3:= 1I;
  #L163010.  goto L163014;
  #L163012.  v3:= 0I;
  #L163014.  if v3 == 0 then goto L16301a;
  #L163018.  goto L163026;
  #L16301a.  v6:= new `java.lang.AssertionError`;
  #L16301e.  call `<init>`(v6) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L163024.  throw v6;
  #L163026.  v5.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int` := v1;
  #L16302a.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L16302e.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L163034.  call `completeResumeReceive`(v2, v6) @signature `Lkotlinx/coroutines/channels/ReceiveOrClosed;.completeResumeReceive:(Ljava/lang/Object;)V` @kind interface;
  #L16303a.  call temp:= `getOfferResult`(v2) @signature `Lkotlinx/coroutines/channels/ReceiveOrClosed;.getOfferResult:()Ljava/lang/Object;` @kind interface;
  #L163040.  v6:= temp @kind object;
  #L163042.  return v6 @kind object;
  #L163044.  call `q`(v5, v1, v6) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.q:(ILjava/lang/Object;)V` @kind direct;
  #L16304a.  v6:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16304e.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L163054.  return v6 @kind object;
  #L163056.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16305c.  return v2 @kind object;
  #L16305e.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L163064.  return v2 @kind object;
  #L163066.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L163068.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16306e.  throw v6;
  catch `java.lang.Throwable` @[L162faa..L162fe4] goto L163066;
  catch `java.lang.Throwable` @[L162fee..L16302e] goto L163066;
  catch `java.lang.Throwable` @[L163044..L16304e] goto L163066;
}
procedure `java.lang.Object` `offerSelectInternal`(`kotlinx.coroutines.channels.ArrayChannel` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlinx.coroutines.selects.SelectInstance` v6 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.offerSelectInternal:(Ljava/lang/Object;Lkotlinx/coroutines/selects/SelectInstance;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16309c.  v0:= v4.`kotlinx.coroutines.channels.ArrayChannel.e` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1630a0.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L1630a6.  v1:= v4.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int`;
  #L1630aa.  call temp:= `getClosedForSend`(v4) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForSend:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L1630b0.  v2:= temp @kind object;
  #L1630b2.  if v2 != 0 then goto L16319a;
  #L1630b6.  call temp:= `s`(v4, v1) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.s:(I)Lkotlinx/coroutines/internal/Symbol;` @kind direct;
  #L1630bc.  v2:= temp @kind object;
  #L1630be.  if v2 != 0 then goto L163192;
  #L1630c2.  if v1 != 0 then goto L163160;
  #L1630c6.  call temp:= `describeTryOffer`(v4, v5) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.describeTryOffer:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/AbstractSendChannel$TryOfferDesc;` @kind virtual;
  #L1630cc.  v2:= temp @kind object;
  #L1630ce.  call temp:= `performAtomicTrySelect`(v6, v2) @signature `Lkotlinx/coroutines/selects/SelectInstance;.performAtomicTrySelect:(Lkotlinx/coroutines/internal/AtomicDesc;)Ljava/lang/Object;` @kind interface;
  #L1630d4.  v3:= temp @kind object;
  #L1630d6.  if v3 != 0 then goto L16310a;
  #L1630da.  v4.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int` := v1;
  #L1630de.  call temp:= `getResult`(v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$RemoveFirstDesc;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L1630e4.  v6:= temp @kind object;
  #L1630e6.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1630ea.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L1630f0.  call `checkNotNull`(v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1630f6.  v6:= (`kotlinx.coroutines.channels.ReceiveOrClosed`) v6 @kind object;
  #L1630fa.  call `completeResumeReceive`(v6, v5) @signature `Lkotlinx/coroutines/channels/ReceiveOrClosed;.completeResumeReceive:(Ljava/lang/Object;)V` @kind interface;
  #L163100.  call temp:= `getOfferResult`(v6) @signature `Lkotlinx/coroutines/channels/ReceiveOrClosed;.getOfferResult:()Ljava/lang/Object;` @kind interface;
  #L163106.  v5:= temp @kind object;
  #L163108.  return v5 @kind object;
  #L16310a.  v2:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16310e.  if v3 != v2 then goto L163114;
  #L163112.  goto L163160;
  #L163114.  v2:= `@@kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC` @type ^`java.lang.Object` @kind object;
  #L163118.  if v3 != v2 then goto L16311e;
  #L16311c.  goto L1630c6;
  #L16311e.  call temp:= `getALREADY_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getALREADY_SELECTED:()Ljava/lang/Object;` @kind static;
  #L163124.  v5:= temp @kind object;
  #L163126.  if v3 == v5 then goto L163154;
  #L16312a.  v5:= instanceof @variable v3 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L16312e.  if v5 == 0 then goto L163134;
  #L163132.  goto L163154;
  #L163134.  v5:= "performAtomicTrySelect(describeTryOffer) returned " @kind object;
  #L163138.  call temp:= `stringPlus`(v5, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16313e.  v5:= temp @kind object;
  #L163140.  v6:= new `java.lang.IllegalStateException`;
  #L163144.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16314a.  v5:= temp @kind object;
  #L16314c.  call `<init>`(v6, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L163152.  throw v6;
  #L163154.  v4.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int` := v1;
  #L163158.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16315e.  return v3 @kind object;
  #L163160.  call temp:= `trySelect`(v6) @signature `Lkotlinx/coroutines/selects/SelectInstance;.trySelect:()Z` @kind interface;
  #L163166.  v6:= temp;
  #L163168.  if v6 != 0 then goto L163180;
  #L16316c.  v4.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int` := v1;
  #L163170.  call temp:= `getALREADY_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getALREADY_SELECTED:()Ljava/lang/Object;` @kind static;
  #L163176.  v5:= temp @kind object;
  #L163178.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16317e.  return v5 @kind object;
  #L163180.  call `q`(v4, v1, v5) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.q:(ILjava/lang/Object;)V` @kind direct;
  #L163186.  v5:= `@@kotlinx.coroutines.channels.AbstractChannelKt.OFFER_SUCCESS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16318a.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L163190.  return v5 @kind object;
  #L163192.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L163198.  return v2 @kind object;
  #L16319a.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L1631a0.  return v2 @kind object;
  #L1631a2.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1631a4.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L1631aa.  throw v5;
  catch `java.lang.Throwable` @[L1630a6..L1630ea] goto L1631a2;
  catch `java.lang.Throwable` @[L16310a..L163158] goto L1631a2;
  catch `java.lang.Throwable` @[L163160..L163178] goto L1631a2;
  catch `java.lang.Throwable` @[L163180..L16318a] goto L1631a2;
}
procedure `void` `onCancelIdempotent`(`kotlinx.coroutines.channels.ArrayChannel` v9 @kind this, `boolean` v10 ) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.onCancelIdempotent:(Z)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L163754.  v0:= v9.`kotlinx.coroutines.channels.AbstractSendChannel.onUndeliveredElement` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L163758.  v1:= v9.`kotlinx.coroutines.channels.ArrayChannel.e` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L16375c.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L163762.  v2:= v9.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int`;
  #L163766.  v3:= 0I;
  #L163768.  v4:= 0I;
  #L16376a.  v5:= 0I;
  #L16376c.  if v5 >= v2 then goto L1637ba;
  #L163770.  v6:= v9.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L163774.  v7:= v9.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int`;
  #L163778.  v6:= v6[v7] @kind object;
  #L16377c.  if v0 == 0 then goto L163790;
  #L163780.  v7:= `@@kotlinx.coroutines.channels.AbstractChannelKt.EMPTY` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L163784.  if v6 == v7 then goto L163790;
  #L163788.  call temp:= `callUndeliveredElementCatchingException`(v0, v6, v4) @signature `Lkotlinx/coroutines/internal/OnUndeliveredElementKt;.callUndeliveredElementCatchingException:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlinx/coroutines/internal/UndeliveredElementException;)Lkotlinx/coroutines/internal/UndeliveredElementException;` @kind static;
  #L16378e.  v4:= temp @kind object;
  #L163790.  v6:= v9.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L163794.  v7:= v9.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int`;
  #L163798.  v8:= `@@kotlinx.coroutines.channels.AbstractChannelKt.EMPTY` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16379c.  v6[v7]:= v8 @kind object;
  #L1637a0.  v6:= v9.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int`;
  #L1637a4.  v6:= v6 + 1;
  #L1637a8.  v7:= v9.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L1637ac.  v7:= length @variable v7;
  #L1637ae.  v6:= v6 %% v7 @kind int;
  #L1637b0.  v9.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int` := v6;
  #L1637b4.  v5:= v5 + 1;
  #L1637b8.  goto L16376c;
  #L1637ba.  v9.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int` := v3;
  #L1637be.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1637c2.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L1637c8.  call `onCancelIdempotent`(v9, v10) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.onCancelIdempotent:(Z)V` @kind super;
  #L1637ce.  if v4 != 0 then goto L1637d4;
  #L1637d2.  return @kind void;
  #L1637d4.  throw v4;
  #L1637d6.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1637d8.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L1637de.  throw v10;
  catch `java.lang.Throwable` @[L163762..L1637c2] goto L1637d6;
}
procedure `java.lang.Object` `pollInternal`(`kotlinx.coroutines.channels.ArrayChannel` v9 @kind this) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.pollInternal:()Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1631e0.  v0:= v9.`kotlinx.coroutines.channels.ArrayChannel.e` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1631e4.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L1631ea.  v1:= v9.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int`;
  #L1631ee.  if v1 != 0 then goto L16320a;
  #L1631f2.  call temp:= `getClosedForSend`(v9) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForSend:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L1631f8.  v1:= temp @kind object;
  #L1631fa.  if v1 != 0 then goto L163202;
  #L1631fe.  v1:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L163202.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L163208.  return v1 @kind object;
  #L16320a.  v2:= v9.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L16320e.  v3:= v9.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int`;
  #L163212.  v2:= v2[v3] @kind object;
  #L163216.  v3:= v9.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L16321a.  v4:= v9.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int`;
  #L16321e.  v5:= 0I;
  #L163220.  v3[v4]:= v5 @kind object;
  #L163224.  v3:= v1 + -1;
  #L163228.  v9.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int` := v3;
  #L16322c.  v3:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L163230.  v4:= v9.`kotlinx.coroutines.channels.ArrayChannel.c` @type ^`int`;
  #L163234.  v6:= 0I;
  #L163236.  v7:= 1I;
  #L163238.  if v1 != v4 then goto L16329a;
  #L16323c.  v4:= v5 @kind object;
  #L16323e.  call temp:= `takeFirstSendOrPeekClosed`(v9) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.takeFirstSendOrPeekClosed:()Lkotlinx/coroutines/channels/Send;` @kind virtual;
  #L163244.  v8:= temp @kind object;
  #L163246.  if v8 != 0 then goto L16324e;
  #L16324a.  v5:= v4 @kind object;
  #L16324c.  goto L16329a;
  #L16324e.  call temp:= `tryResumeSend`(v8, v5) @signature `Lkotlinx/coroutines/channels/Send;.tryResumeSend:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Lkotlinx/coroutines/internal/Symbol;` @kind virtual;
  #L163254.  v4:= temp @kind object;
  #L163256.  if v4 == 0 then goto L163290;
  #L16325a.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L163260.  v3:= temp;
  #L163262.  if v3 == 0 then goto L163282;
  #L163266.  v3:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16326a.  if v4 != v3 then goto L163270;
  #L16326e.  v6:= 1I;
  #L163270.  if v6 == 0 then goto L163276;
  #L163274.  goto L163282;
  #L163276.  v1:= new `java.lang.AssertionError`;
  #L16327a.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L163280.  throw v1;
  #L163282.  call temp:= `getPollResult`(v8) @signature `Lkotlinx/coroutines/channels/Send;.getPollResult:()Ljava/lang/Object;` @kind virtual;
  #L163288.  v3:= temp @kind object;
  #L16328a.  v5:= v8 @kind object;
  #L16328c.  v6:= 1I;
  #L16328e.  goto L16329a;
  #L163290.  call `undeliveredElement`(v8) @signature `Lkotlinx/coroutines/channels/Send;.undeliveredElement:()V` @kind virtual;
  #L163296.  v4:= v8 @kind object;
  #L163298.  goto L16323e;
  #L16329a.  v4:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16329e.  if v3 == v4 then goto L1632c4;
  #L1632a2.  v4:= instanceof @variable v3 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L1632a6.  if v4 != 0 then goto L1632c4;
  #L1632aa.  v9.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int` := v1;
  #L1632ae.  v4:= v9.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L1632b2.  v8:= v9.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int`;
  #L1632b6.  v8:= v8 + v1 @kind int;
  #L1632b8.  v1:= v9.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L1632bc.  v1:= length @variable v1;
  #L1632be.  v8:= v8 %% v1 @kind int;
  #L1632c0.  v4[v8]:= v3 @kind object;
  #L1632c4.  v1:= v9.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int`;
  #L1632c8.  v1:= v1 + v7 @kind int;
  #L1632ca.  v3:= v9.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L1632ce.  v3:= length @variable v3;
  #L1632d0.  v1:= v1 %% v3 @kind int;
  #L1632d2.  v9.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int` := v1;
  #L1632d6.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1632da.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L1632e0.  if v6 == 0 then goto L1632f0;
  #L1632e4.  call `checkNotNull`(v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1632ea.  call `completeResumeSend`(v5) @signature `Lkotlinx/coroutines/channels/Send;.completeResumeSend:()V` @kind virtual;
  #L1632f0.  return v2 @kind object;
  #L1632f2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1632f4.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L1632fa.  throw v1;
  catch `java.lang.Throwable` @[L1631ea..L163202] goto L1632f2;
  catch `java.lang.Throwable` @[L16320a..L1632da] goto L1632f2;
}
procedure `java.lang.Object` `pollSelectInternal`(`kotlinx.coroutines.channels.ArrayChannel` v8 @kind this, `kotlinx.coroutines.selects.SelectInstance` v9 @kind object) @signature `Lkotlinx/coroutines/channels/ArrayChannel;.pollSelectInternal:(Lkotlinx/coroutines/selects/SelectInstance;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L163320.  v0:= v8.`kotlinx.coroutines.channels.ArrayChannel.e` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L163324.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L16332a.  v1:= v8.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int`;
  #L16332e.  if v1 != 0 then goto L16334a;
  #L163332.  call temp:= `getClosedForSend`(v8) @signature `Lkotlinx/coroutines/channels/AbstractSendChannel;.getClosedForSend:()Lkotlinx/coroutines/channels/Closed;` @kind virtual;
  #L163338.  v9:= temp @kind object;
  #L16333a.  if v9 != 0 then goto L163342;
  #L16333e.  v9:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L163342.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L163348.  return v9 @kind object;
  #L16334a.  v2:= v8.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L16334e.  v3:= v8.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int`;
  #L163352.  v2:= v2[v3] @kind object;
  #L163356.  v3:= v8.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L16335a.  v4:= v8.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int`;
  #L16335e.  v5:= 0I;
  #L163360.  v3[v4]:= v5 @kind object;
  #L163364.  v3:= v1 + -1;
  #L163368.  v8.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int` := v3;
  #L16336c.  v3:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L163370.  v4:= v8.`kotlinx.coroutines.channels.ArrayChannel.c` @type ^`int`;
  #L163374.  v6:= 1I;
  #L163376.  if v1 != v4 then goto L163414;
  #L16337a.  call temp:= `describeTryPoll`(v8) @signature `Lkotlinx/coroutines/channels/AbstractChannel;.describeTryPoll:()Lkotlinx/coroutines/channels/AbstractChannel$TryPollDesc;` @kind virtual;
  #L163380.  v4:= temp @kind object;
  #L163382.  call temp:= `performAtomicTrySelect`(v9, v4) @signature `Lkotlinx/coroutines/selects/SelectInstance;.performAtomicTrySelect:(Lkotlinx/coroutines/internal/AtomicDesc;)Ljava/lang/Object;` @kind interface;
  #L163388.  v7:= temp @kind object;
  #L16338a.  if v7 != 0 then goto L1633ae;
  #L16338e.  call temp:= `getResult`(v4) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$RemoveFirstDesc;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L163394.  v5:= temp @kind object;
  #L163396.  call `checkNotNull`(v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L16339c.  v3:= v5 @kind object;
  #L16339e.  v3:= (`kotlinx.coroutines.channels.Send`) v3 @kind object;
  #L1633a2.  call temp:= `getPollResult`(v3) @signature `Lkotlinx/coroutines/channels/Send;.getPollResult:()Ljava/lang/Object;` @kind virtual;
  #L1633a8.  v3:= temp @kind object;
  #L1633aa.  v4:= 1I;
  #L1633ac.  goto L163416;
  #L1633ae.  v4:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L1633b2.  if v7 != v4 then goto L1633b8;
  #L1633b6.  goto L163414;
  #L1633b8.  v4:= `@@kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC` @type ^`java.lang.Object` @kind object;
  #L1633bc.  if v7 != v4 then goto L1633c2;
  #L1633c0.  goto L16337a;
  #L1633c2.  call temp:= `getALREADY_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getALREADY_SELECTED:()Ljava/lang/Object;` @kind static;
  #L1633c8.  v3:= temp @kind object;
  #L1633ca.  if v7 != v3 then goto L1633e6;
  #L1633ce.  v8.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int` := v1;
  #L1633d2.  v9:= v8.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L1633d6.  v1:= v8.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int`;
  #L1633da.  v9[v1]:= v2 @kind object;
  #L1633de.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L1633e4.  return v7 @kind object;
  #L1633e6.  v3:= instanceof @variable v7 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L1633ea.  if v3 == 0 then goto L1633f4;
  #L1633ee.  v3:= v7 @kind object;
  #L1633f0.  v5:= v3 @kind object;
  #L1633f2.  goto L1633aa;
  #L1633f4.  v9:= "performAtomicTrySelect(describeTryOffer) returned " @kind object;
  #L1633f8.  call temp:= `stringPlus`(v9, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1633fe.  v9:= temp @kind object;
  #L163400.  v1:= new `java.lang.IllegalStateException`;
  #L163404.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16340a.  v9:= temp @kind object;
  #L16340c.  call `<init>`(v1, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L163412.  throw v1;
  #L163414.  v4:= 0I;
  #L163416.  v7:= `@@kotlinx.coroutines.channels.AbstractChannelKt.POLL_FAILED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L16341a.  if v3 == v7 then goto L163442;
  #L16341e.  v7:= instanceof @variable v3 @type ^`kotlinx.coroutines.channels.Closed` @kind boolean;
  #L163422.  if v7 != 0 then goto L163442;
  #L163426.  v8.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int` := v1;
  #L16342a.  v9:= v8.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L16342e.  v7:= v8.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int`;
  #L163432.  v7:= v7 + v1 @kind int;
  #L163434.  v1:= v8.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L163438.  v1:= length @variable v1;
  #L16343a.  v7:= v7 %% v1 @kind int;
  #L16343c.  v9[v7]:= v3 @kind object;
  #L163440.  goto L16346e;
  #L163442.  call temp:= `trySelect`(v9) @signature `Lkotlinx/coroutines/selects/SelectInstance;.trySelect:()Z` @kind interface;
  #L163448.  v9:= temp;
  #L16344a.  if v9 != 0 then goto L16346e;
  #L16344e.  v8.`kotlinx.coroutines.channels.ArrayChannel.size` @type ^`int` := v1;
  #L163452.  v9:= v8.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L163456.  v1:= v8.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int`;
  #L16345a.  v9[v1]:= v2 @kind object;
  #L16345e.  call temp:= `getALREADY_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getALREADY_SELECTED:()Ljava/lang/Object;` @kind static;
  #L163464.  v9:= temp @kind object;
  #L163466.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16346c.  return v9 @kind object;
  #L16346e.  v9:= v8.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int`;
  #L163472.  v9:= v9 + v6 @kind int;
  #L163474.  v1:= v8.`kotlinx.coroutines.channels.ArrayChannel.f` @type ^`java.lang.Object`[] @kind object;
  #L163478.  v1:= length @variable v1;
  #L16347a.  v9:= v9 %% v1 @kind int;
  #L16347c.  v8.`kotlinx.coroutines.channels.ArrayChannel.g` @type ^`int` := v9;
  #L163480.  v9:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L163484.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L16348a.  if v4 == 0 then goto L16349e;
  #L16348e.  call `checkNotNull`(v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L163494.  v5:= (`kotlinx.coroutines.channels.Send`) v5 @kind object;
  #L163498.  call `completeResumeSend`(v5) @signature `Lkotlinx/coroutines/channels/Send;.completeResumeSend:()V` @kind virtual;
  #L16349e.  return v2 @kind object;
  #L1634a0.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1634a2.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L1634a8.  throw v9;
  catch `java.lang.Throwable` @[L16332a..L163342] goto L1634a0;
  catch `java.lang.Throwable` @[L16334a..L1633de] goto L1634a0;
  catch `java.lang.Throwable` @[L1633e6..L163466] goto L1634a0;
  catch `java.lang.Throwable` @[L16346e..L163484] goto L1634a0;
}
