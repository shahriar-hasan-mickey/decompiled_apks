record `kotlinx.coroutines.channels.TickerChannelsKt$ticker$3` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.b` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlinx.coroutines.channels.TickerMode` `kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.c` @AccessFlag FINAL_SYNTHETIC;
  `long` `kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.d` @AccessFlag FINAL_SYNTHETIC;
  `long` `kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3` v0 @kind this, `kotlinx.coroutines.channels.TickerMode` v1 @kind object, `long` v2 , `long` v4 , `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/channels/TickerChannelsKt$ticker$3;.<init>:(Lkotlinx/coroutines/channels/TickerMode;JJLkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L16c848.  v0.`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.c` @type ^`kotlinx.coroutines.channels.TickerMode` := v1 @kind object;
  #L16c84c.  v0.`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.d` @type ^`long` := v2 @kind wide;
  #L16c850.  v0.`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.e` @type ^`long` := v4 @kind wide;
  #L16c854.  v1:= 2I;
  #L16c856.  call `<init>`(v0, v1, v6) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L16c85c.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3` v0 @kind this, `kotlinx.coroutines.channels.ProducerScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/channels/TickerChannelsKt$ticker$3;.a:(Lkotlinx/coroutines/channels/ProducerScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L16c728.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/channels/TickerChannelsKt$ticker$3;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L16c72e.  v1:= temp @kind object;
  #L16c730.  v1:= (`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3`) v1 @kind object;
  #L16c734.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L16c738.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/channels/TickerChannelsKt$ticker$3;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16c73e.  v1:= temp @kind object;
  #L16c740.  return v1 @kind object;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3` v8 @kind this, `java.lang.Object` v9 @kind object, `kotlin.coroutines.Continuation` v10 @kind object) @signature `Lkotlinx/coroutines/channels/TickerChannelsKt$ticker$3;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L16c818.  v7:= new `kotlinx.coroutines.channels.TickerChannelsKt$ticker$3`;
  #L16c81c.  v1:= v8.`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.c` @type ^`kotlinx.coroutines.channels.TickerMode` @kind object;
  #L16c820.  v2:= v8.`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.d` @type ^`long` @kind wide;
  #L16c824.  v4:= v8.`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.e` @type ^`long` @kind wide;
  #L16c828.  v0:= v7 @kind object;
  #L16c82a.  v6:= v10 @kind object;
  #L16c82c.  call `<init>`(v0, v1, v2, v4, v6) @signature `Lkotlinx/coroutines/channels/TickerChannelsKt$ticker$3;.<init>:(Lkotlinx/coroutines/channels/TickerMode;JJLkotlin/coroutines/Continuation;)V` @kind direct;
  #L16c832.  v7.`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.b` @type ^`java.lang.Object` := v9 @kind object;
  #L16c836.  return v7 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/channels/TickerChannelsKt$ticker$3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L16c704.  v1:= (`kotlinx.coroutines.channels.ProducerScope`) v1 @kind object;
  #L16c708.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L16c70c.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/channels/TickerChannelsKt$ticker$3;.a:(Lkotlinx/coroutines/channels/ProducerScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L16c712.  v1:= temp @kind object;
  #L16c714.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3` v10 @kind this, `java.lang.Object` v11 @kind object) @signature `Lkotlinx/coroutines/channels/TickerChannelsKt$ticker$3;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L16c754.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L16c75a.  v0:= temp @kind object;
  #L16c75c.  v1:= v10.`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.a` @type ^`int`;
  #L16c760.  v2:= 2I;
  #L16c762.  v3:= 1I;
  #L16c764.  if v1 == 0 then goto L16c788;
  #L16c768.  if v1 == v3 then goto L16c770;
  #L16c76c.  if v1 != v2 then goto L16c778;
  #L16c770.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L16c776.  goto L16c800;
  #L16c778.  v11:= new `java.lang.IllegalStateException`;
  #L16c77c.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L16c780.  call `<init>`(v11, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16c786.  throw v11;
  #L16c788.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L16c78e.  v11:= v10.`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.b` @type ^`java.lang.Object` @kind object;
  #L16c792.  v11:= (`kotlinx.coroutines.channels.ProducerScope`) v11 @kind object;
  #L16c796.  v1:= v10.`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.c` @type ^`kotlinx.coroutines.channels.TickerMode` @kind object;
  #L16c79a.  v4:= `@@kotlinx.coroutines.channels.TickerChannelsKt$ticker$3$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L16c79e.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L16c7a4.  v1:= temp;
  #L16c7a6.  v1:= v4[v1];
  #L16c7aa.  if v1 == v3 then goto L16c7d8;
  #L16c7ae.  if v1 == v2 then goto L16c7b4;
  #L16c7b2.  goto L16c800;
  #L16c7b4.  v4:= v10.`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.d` @type ^`long` @kind wide;
  #L16c7b8.  v6:= v10.`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.e` @type ^`long` @kind wide;
  #L16c7bc.  call temp:= `getChannel`(v11) @signature `Lkotlinx/coroutines/channels/ProducerScope;.getChannel:()Lkotlinx/coroutines/channels/SendChannel;` @kind interface;
  #L16c7c2.  v8:= temp @kind object;
  #L16c7c4.  v10.`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.a` @type ^`int` := v2;
  #L16c7c8.  v9:= v10 @kind object;
  #L16c7ca.  call temp:= `access$fixedDelayTicker`(v4, v6, v8, v9) @signature `Lkotlinx/coroutines/channels/TickerChannelsKt;.access$fixedDelayTicker:(JJLkotlinx/coroutines/channels/SendChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L16c7d0.  v11:= temp @kind object;
  #L16c7d2.  if v11 != v0 then goto L16c800;
  #L16c7d6.  return v0 @kind object;
  #L16c7d8.  v1:= v10.`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.d` @type ^`long` @kind wide;
  #L16c7dc.  v4:= v10.`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.e` @type ^`long` @kind wide;
  #L16c7e0.  call temp:= `getChannel`(v11) @signature `Lkotlinx/coroutines/channels/ProducerScope;.getChannel:()Lkotlinx/coroutines/channels/SendChannel;` @kind interface;
  #L16c7e6.  v11:= temp @kind object;
  #L16c7e8.  v10.`kotlinx.coroutines.channels.TickerChannelsKt$ticker$3.a` @type ^`int` := v3;
  #L16c7ec.  v3:= v4 @kind wide;
  #L16c7ee.  v5:= v11 @kind object;
  #L16c7f0.  v6:= v10 @kind object;
  #L16c7f2.  call temp:= `access$fixedPeriodTicker`(v1, v3, v5, v6) @signature `Lkotlinx/coroutines/channels/TickerChannelsKt;.access$fixedPeriodTicker:(JJLkotlinx/coroutines/channels/SendChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L16c7f8.  v11:= temp @kind object;
  #L16c7fa.  if v11 != v0 then goto L16c800;
  #L16c7fe.  return v0 @kind object;
  #L16c800.  v11:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L16c804.  return v11 @kind object;
}
