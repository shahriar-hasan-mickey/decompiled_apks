record `kotlinx.coroutines.CoroutineName` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.AbstractCoroutineContextElement` @kind class {
  `java.lang.String` `kotlinx.coroutines.CoroutineName.a` @AccessFlag PRIVATE_FINAL;
}
global `kotlinx.coroutines.CoroutineName$Key` `@@kotlinx.coroutines.CoroutineName.Key` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CoroutineName;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L156c30.  v0:= new `kotlinx.coroutines.CoroutineName$Key`;
  #L156c34.  v1:= 0I;
  #L156c36.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/CoroutineName$Key;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L156c3c.  `@@kotlinx.coroutines.CoroutineName.Key` @type ^`kotlinx.coroutines.CoroutineName$Key` := v0 @kind object;
  #L156c40.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.CoroutineName` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineName;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L156c54.  v0:= `@@kotlinx.coroutines.CoroutineName.Key` @type ^`kotlinx.coroutines.CoroutineName$Key` @kind object;
  #L156c58.  call `<init>`(v1, v0) @signature `Lkotlin/coroutines/AbstractCoroutineContextElement;.<init>:(Lkotlin/coroutines/CoroutineContext$Key;)V` @kind direct;
  #L156c5e.  v1.`kotlinx.coroutines.CoroutineName.a` @type ^`java.lang.String` := v2 @kind object;
  #L156c62.  return @kind void;
}
procedure `kotlinx.coroutines.CoroutineName` `copy$default`(`kotlinx.coroutines.CoroutineName` v0 @kind object, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/CoroutineName;.copy$default:(Lkotlinx/coroutines/CoroutineName;Ljava/lang/String;ILjava/lang/Object;)Lkotlinx/coroutines/CoroutineName;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L156bec.  v2:= v2 ^& 1;
  #L156bf0.  if v2 == 0 then goto L156bf8;
  #L156bf4.  v1:= v0.`kotlinx.coroutines.CoroutineName.a` @type ^`java.lang.String` @kind object;
  #L156bf8.  call temp:= `copy`(v0, v1) @signature `Lkotlinx/coroutines/CoroutineName;.copy:(Ljava/lang/String;)Lkotlinx/coroutines/CoroutineName;` @kind virtual;
  #L156bfe.  v0:= temp @kind object;
  #L156c00.  return v0 @kind object;
}
procedure `java.lang.String` `component1`(`kotlinx.coroutines.CoroutineName` v1 @kind this) @signature `Lkotlinx/coroutines/CoroutineName;.component1:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L156b78.  v0:= v1.`kotlinx.coroutines.CoroutineName.a` @type ^`java.lang.String` @kind object;
  #L156b7c.  return v0 @kind object;
}
procedure `kotlinx.coroutines.CoroutineName` `copy`(`kotlinx.coroutines.CoroutineName` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineName;.copy:(Ljava/lang/String;)Lkotlinx/coroutines/CoroutineName;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L156c14.  v0:= new `kotlinx.coroutines.CoroutineName`;
  #L156c18.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/CoroutineName;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L156c1e.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlinx.coroutines.CoroutineName` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/CoroutineName;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L156b18.  v0:= 1I;
  #L156b1a.  if v3 != v4 then goto L156b20;
  #L156b1e.  return v0;
  #L156b20.  v1:= instanceof @variable v4 @type ^`kotlinx.coroutines.CoroutineName` @kind boolean;
  #L156b24.  v2:= 0I;
  #L156b26.  if v1 != 0 then goto L156b2c;
  #L156b2a.  return v2;
  #L156b2c.  v4:= (`kotlinx.coroutines.CoroutineName`) v4 @kind object;
  #L156b30.  v1:= v3.`kotlinx.coroutines.CoroutineName.a` @type ^`java.lang.String` @kind object;
  #L156b34.  v4:= v4.`kotlinx.coroutines.CoroutineName.a` @type ^`java.lang.String` @kind object;
  #L156b38.  call temp:= `areEqual`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L156b3e.  v4:= temp;
  #L156b40.  if v4 != 0 then goto L156b46;
  #L156b44.  return v2;
  #L156b46.  return v0;
}
procedure `java.lang.String` `getName`(`kotlinx.coroutines.CoroutineName` v1 @kind this) @signature `Lkotlinx/coroutines/CoroutineName;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L156b90.  v0:= v1.`kotlinx.coroutines.CoroutineName.a` @type ^`java.lang.String` @kind object;
  #L156b94.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlinx.coroutines.CoroutineName` v1 @kind this) @signature `Lkotlinx/coroutines/CoroutineName;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L156b58.  v0:= v1.`kotlinx.coroutines.CoroutineName.a` @type ^`java.lang.String` @kind object;
  #L156b5c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L156b62.  v0:= temp;
  #L156b64.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.CoroutineName` v2 @kind this) @signature `Lkotlinx/coroutines/CoroutineName;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L156ba8.  v0:= new `java.lang.StringBuilder`;
  #L156bac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L156bb2.  v1:= "CoroutineName(" @kind object;
  #L156bb6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L156bbc.  v1:= v2.`kotlinx.coroutines.CoroutineName.a` @type ^`java.lang.String` @kind object;
  #L156bc0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L156bc6.  v1:= 41I;
  #L156bca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L156bd0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L156bd6.  v0:= temp @kind object;
  #L156bd8.  return v0 @kind object;
}
