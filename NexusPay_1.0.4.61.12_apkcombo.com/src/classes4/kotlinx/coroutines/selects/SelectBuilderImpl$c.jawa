record `kotlinx.coroutines.selects.SelectBuilderImpl$c` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.internal.OpDescriptor` @kind class {
  `kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp` `kotlinx.coroutines.selects.SelectBuilderImpl$c.a` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.selects.SelectBuilderImpl$c` v0 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp` v1 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl$c;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L18dea4.  call `<init>`(v0) @signature `Lkotlinx/coroutines/internal/OpDescriptor;.<init>:()V` @kind direct;
  #L18deaa.  v0.`kotlinx.coroutines.selects.SelectBuilderImpl$c.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp` := v1 @kind object;
  #L18deae.  return @kind void;
}
procedure `kotlinx.coroutines.internal.AtomicOp` `getAtomicOp`(`kotlinx.coroutines.selects.SelectBuilderImpl$c` v1 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl$c;.getAtomicOp:()Lkotlinx/coroutines/internal/AtomicOp;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18de84.  v0:= v1.`kotlinx.coroutines.selects.SelectBuilderImpl$c.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp` @kind object;
  #L18de88.  call temp:= `getAtomicOp`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;.getAtomicOp:()Lkotlinx/coroutines/internal/AtomicOp;` @kind virtual;
  #L18de8e.  v0:= temp @kind object;
  #L18de90.  return v0 @kind object;
}
procedure `java.lang.Object` `perform`(`kotlinx.coroutines.selects.SelectBuilderImpl$c` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl$c;.perform:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L18de18.  if v4 == 0 then goto L18de62;
  #L18de1c.  v4:= (`kotlinx.coroutines.selects.SelectBuilderImpl`) v4 @kind object;
  #L18de20.  v0:= v3.`kotlinx.coroutines.selects.SelectBuilderImpl$c.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp` @kind object;
  #L18de24.  call `finishPrepare`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;.finishPrepare:()V` @kind virtual;
  #L18de2a.  v0:= v3.`kotlinx.coroutines.selects.SelectBuilderImpl$c.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp` @kind object;
  #L18de2e.  call temp:= `getAtomicOp`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;.getAtomicOp:()Lkotlinx/coroutines/internal/AtomicOp;` @kind virtual;
  #L18de34.  v0:= temp @kind object;
  #L18de36.  v1:= 0I;
  #L18de38.  call temp:= `decide`(v0, v1) @signature `Lkotlinx/coroutines/internal/AtomicOp;.decide:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L18de3e.  v0:= temp @kind object;
  #L18de40.  if v0 != 0 then goto L18de4e;
  #L18de44.  v1:= v3.`kotlinx.coroutines.selects.SelectBuilderImpl$c.a` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp` @kind object;
  #L18de48.  v1:= v1.`kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp.desc` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc` @kind object;
  #L18de4c.  goto L18de56;
  #L18de4e.  call temp:= `getNOT_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getNOT_SELECTED:()Ljava/lang/Object;` @kind static;
  #L18de54.  v1:= temp @kind object;
  #L18de56.  v2:= `@@kotlinx.coroutines.selects.SelectBuilderImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L18de5a.  call temp:= `compareAndSet`(v2, v4, v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L18de60.  return v0 @kind object;
  #L18de62.  v4:= new `java.lang.NullPointerException`;
  #L18de66.  v0:= "null cannot be cast to non-null type kotlinx.coroutines.selects.SelectBuilderImpl<*>" @kind object;
  #L18de6a.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L18de70.  throw v4;
}
