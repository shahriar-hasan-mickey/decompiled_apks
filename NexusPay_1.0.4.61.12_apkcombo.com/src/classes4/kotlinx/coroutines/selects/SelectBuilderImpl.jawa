record `kotlinx.coroutines.selects.SelectBuilderImpl` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind class, `kotlinx.coroutines.selects.SelectBuilder` @kind interface, `kotlinx.coroutines.selects.SelectInstance` @kind interface, `kotlin.coroutines.Continuation` @kind interface, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.selects.SelectBuilderImpl._parentHandle` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.selects.SelectBuilderImpl._result` @AccessFlag VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.selects.SelectBuilderImpl._state` @AccessFlag VOLATILE_SYNTHETIC;
  `kotlin.coroutines.Continuation` `kotlinx.coroutines.selects.SelectBuilderImpl.d` @AccessFlag PRIVATE_FINAL;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.selects.SelectBuilderImpl.e` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.selects.SelectBuilderImpl.f` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L18e2b4.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L18e2b8.  v1:= constclass @type ^`kotlinx.coroutines.selects.SelectBuilderImpl` @kind object;
  #L18e2bc.  v2:= "_state" @kind object;
  #L18e2c0.  call temp:= `newUpdater`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L18e2c6.  v2:= temp @kind object;
  #L18e2c8.  `@@kotlinx.coroutines.selects.SelectBuilderImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v2 @kind object;
  #L18e2cc.  v2:= "_result" @kind object;
  #L18e2d0.  call temp:= `newUpdater`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L18e2d6.  v0:= temp @kind object;
  #L18e2d8.  `@@kotlinx.coroutines.selects.SelectBuilderImpl.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L18e2dc.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.selects.SelectBuilderImpl` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.<init>:(Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L18e2f0.  call `<init>`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListHead;.<init>:()V` @kind direct;
  #L18e2f6.  v0.`kotlinx.coroutines.selects.SelectBuilderImpl.d` @type ^`kotlin.coroutines.Continuation` := v1 @kind object;
  #L18e2fa.  call temp:= `getNOT_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getNOT_SELECTED:()Ljava/lang/Object;` @kind static;
  #L18e300.  v1:= temp @kind object;
  #L18e302.  v0.`kotlinx.coroutines.selects.SelectBuilderImpl._state` @type ^`java.lang.Object` := v1 @kind object;
  #L18e306.  call temp:= `access$getUNDECIDED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getUNDECIDED$p:()Ljava/lang/Object;` @kind static;
  #L18e30c.  v1:= temp @kind object;
  #L18e30e.  v0.`kotlinx.coroutines.selects.SelectBuilderImpl._result` @type ^`java.lang.Object` := v1 @kind object;
  #L18e312.  v1:= 0I;
  #L18e314.  v0.`kotlinx.coroutines.selects.SelectBuilderImpl._parentHandle` @type ^`java.lang.Object` := v1 @kind object;
  #L18e318.  return @kind void;
}
procedure `void` `access$doAfterSelect`(`kotlinx.coroutines.selects.SelectBuilderImpl` v0 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.access$doAfterSelect:(Lkotlinx/coroutines/selects/SelectBuilderImpl;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L18e32c.  call `e`(v0) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.e:()V` @kind direct;
  #L18e332.  return @kind void;
}
procedure `void` `e`(`kotlinx.coroutines.selects.SelectBuilderImpl` v2 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.e:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L18e388.  call temp:= `f`(v2) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.f:()Lkotlinx/coroutines/DisposableHandle;` @kind direct;
  #L18e38e.  v0:= temp @kind object;
  #L18e390.  if v0 != 0 then goto L18e396;
  #L18e394.  goto L18e39c;
  #L18e396.  call `dispose`(v0) @signature `Lkotlinx/coroutines/DisposableHandle;.dispose:()V` @kind interface;
  #L18e39c.  call temp:= `getNext`(v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNext:()Ljava/lang/Object;` @kind virtual;
  #L18e3a2.  v0:= temp @kind object;
  #L18e3a4.  v0:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v0 @kind object;
  #L18e3a8.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L18e3ae.  v1:= temp;
  #L18e3b0.  if v1 != 0 then goto L18e3d6;
  #L18e3b4.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.selects.SelectBuilderImpl$b` @kind boolean;
  #L18e3b8.  if v1 == 0 then goto L18e3cc;
  #L18e3bc.  v1:= v0 @kind object;
  #L18e3be.  v1:= (`kotlinx.coroutines.selects.SelectBuilderImpl$b`) v1 @kind object;
  #L18e3c2.  v1:= v1.`kotlinx.coroutines.selects.SelectBuilderImpl$b.d` @type ^`kotlinx.coroutines.DisposableHandle` @kind object;
  #L18e3c6.  call `dispose`(v1) @signature `Lkotlinx/coroutines/DisposableHandle;.dispose:()V` @kind interface;
  #L18e3cc.  call temp:= `getNextNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L18e3d2.  v0:= temp @kind object;
  #L18e3d4.  goto L18e3a8;
  #L18e3d6.  return @kind void;
}
procedure `kotlinx.coroutines.DisposableHandle` `f`(`kotlinx.coroutines.selects.SelectBuilderImpl` v1 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.f:()Lkotlinx/coroutines/DisposableHandle;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L18e298.  v0:= v1.`kotlinx.coroutines.selects.SelectBuilderImpl._parentHandle` @type ^`java.lang.Object` @kind object;
  #L18e29c.  v0:= (`kotlinx.coroutines.DisposableHandle`) v0 @kind object;
  #L18e2a0.  return v0 @kind object;
}
procedure `void` `g`(`kotlinx.coroutines.selects.SelectBuilderImpl` v0 @kind this, `kotlinx.coroutines.DisposableHandle` v1 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.g:(Lkotlinx/coroutines/DisposableHandle;)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L18e7c8.  v0.`kotlinx.coroutines.selects.SelectBuilderImpl._parentHandle` @type ^`java.lang.Object` := v1 @kind object;
  #L18e7cc.  return @kind void;
}
procedure `void` `initCancellability`(`kotlinx.coroutines.selects.SelectBuilderImpl` v7 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.initCancellability:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L18e484.  call temp:= `getContext`(v7) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L18e48a.  v0:= temp @kind object;
  #L18e48c.  v1:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L18e490.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L18e496.  v0:= temp @kind object;
  #L18e498.  v1:= v0 @kind object;
  #L18e49a.  v1:= (`kotlinx.coroutines.Job`) v1 @kind object;
  #L18e49e.  if v1 != 0 then goto L18e4a4;
  #L18e4a2.  return @kind void;
  #L18e4a4.  v2:= 1I;
  #L18e4a6.  v3:= 0I;
  #L18e4a8.  v4:= new `kotlinx.coroutines.selects.SelectBuilderImpl$d`;
  #L18e4ac.  call `<init>`(v4, v7) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl$d;.<init>:(Lkotlinx/coroutines/selects/SelectBuilderImpl;)V` @kind direct;
  #L18e4b2.  v5:= 2I;
  #L18e4b4.  v6:= 0I;
  #L18e4b6.  call temp:= `invokeOnCompletion$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.invokeOnCompletion$default:(Lkotlinx/coroutines/Job;ZZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/DisposableHandle;` @kind static;
  #L18e4bc.  v0:= temp @kind object;
  #L18e4be.  call `g`(v7, v0) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.g:(Lkotlinx/coroutines/DisposableHandle;)V` @kind direct;
  #L18e4c4.  call temp:= `isSelected`(v7) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.isSelected:()Z` @kind virtual;
  #L18e4ca.  v1:= temp;
  #L18e4cc.  if v1 == 0 then goto L18e4d6;
  #L18e4d0.  call `dispose`(v0) @signature `Lkotlinx/coroutines/DisposableHandle;.dispose:()V` @kind interface;
  #L18e4d6.  return @kind void;
}
procedure `void` `disposeOnSelect`(`kotlinx.coroutines.selects.SelectBuilderImpl` v2 @kind this, `kotlinx.coroutines.DisposableHandle` v3 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.disposeOnSelect:(Lkotlinx/coroutines/DisposableHandle;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18e344.  v0:= new `kotlinx.coroutines.selects.SelectBuilderImpl$b`;
  #L18e348.  call `<init>`(v0, v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl$b;.<init>:(Lkotlinx/coroutines/DisposableHandle;)V` @kind direct;
  #L18e34e.  call temp:= `isSelected`(v2) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.isSelected:()Z` @kind virtual;
  #L18e354.  v1:= temp;
  #L18e356.  if v1 != 0 then goto L18e36e;
  #L18e35a.  call `addLast`(v2, v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.addLast:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @kind virtual;
  #L18e360.  call temp:= `isSelected`(v2) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.isSelected:()Z` @kind virtual;
  #L18e366.  v0:= temp;
  #L18e368.  if v0 != 0 then goto L18e36e;
  #L18e36c.  return @kind void;
  #L18e36e.  call `dispose`(v3) @signature `Lkotlinx/coroutines/DisposableHandle;.dispose:()V` @kind interface;
  #L18e374.  return @kind void;
}
procedure `kotlin.coroutines.jvm.internal.CoroutineStackFrame` `getCallerFrame`(`kotlinx.coroutines.selects.SelectBuilderImpl` v2 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18e270.  v0:= v2.`kotlinx.coroutines.selects.SelectBuilderImpl.d` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L18e274.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L18e278.  if v1 == 0 then goto L18e282;
  #L18e27c.  v0:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v0 @kind object;
  #L18e280.  goto L18e284;
  #L18e282.  v0:= 0I;
  #L18e284.  return v0 @kind object;
}
procedure `kotlin.coroutines.Continuation` `getCompletion`(`kotlinx.coroutines.selects.SelectBuilderImpl` v0 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getCompletion:()Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC {
    temp;

  #L18e23c.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlinx.coroutines.selects.SelectBuilderImpl` v1 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18e250.  v0:= v1.`kotlinx.coroutines.selects.SelectBuilderImpl.d` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L18e254.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L18e25a.  v0:= temp @kind object;
  #L18e25c.  return v0 @kind object;
}
procedure `java.lang.Object` `getResult`(`kotlinx.coroutines.selects.SelectBuilderImpl` v3 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getResult:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L18e01c.  call temp:= `isSelected`(v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.isSelected:()Z` @kind virtual;
  #L18e022.  v0:= temp;
  #L18e024.  if v0 != 0 then goto L18e02e;
  #L18e028.  call `initCancellability`(v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.initCancellability:()V` @kind direct;
  #L18e02e.  v0:= v3.`kotlinx.coroutines.selects.SelectBuilderImpl._result` @type ^`java.lang.Object` @kind object;
  #L18e032.  call temp:= `access$getUNDECIDED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getUNDECIDED$p:()Ljava/lang/Object;` @kind static;
  #L18e038.  v1:= temp @kind object;
  #L18e03a.  if v0 != v1 then goto L18e06c;
  #L18e03e.  v0:= `@@kotlinx.coroutines.selects.SelectBuilderImpl.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L18e042.  call temp:= `access$getUNDECIDED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getUNDECIDED$p:()Ljava/lang/Object;` @kind static;
  #L18e048.  v1:= temp @kind object;
  #L18e04a.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L18e050.  v2:= temp @kind object;
  #L18e052.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L18e058.  v0:= temp;
  #L18e05a.  if v0 == 0 then goto L18e068;
  #L18e05e.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L18e064.  v0:= temp @kind object;
  #L18e066.  return v0 @kind object;
  #L18e068.  v0:= v3.`kotlinx.coroutines.selects.SelectBuilderImpl._result` @type ^`java.lang.Object` @kind object;
  #L18e06c.  call temp:= `access$getRESUMED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getRESUMED$p:()Ljava/lang/Object;` @kind static;
  #L18e072.  v1:= temp @kind object;
  #L18e074.  if v0 == v1 then goto L18e08c;
  #L18e078.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L18e07c.  if v1 != 0 then goto L18e082;
  #L18e080.  return v0 @kind object;
  #L18e082.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L18e086.  v0:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L18e08a.  throw v0;
  #L18e08c.  v0:= new `java.lang.IllegalStateException`;
  #L18e090.  v1:= "Already resumed" @kind object;
  #L18e094.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L18e09a.  throw v0;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.selects.SelectBuilderImpl` v1 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18e1d0.  v0:= 0I;
  #L18e1d2.  return v0 @kind object;
}
procedure `void` `handleBuilderException`(`kotlinx.coroutines.selects.SelectBuilderImpl` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.handleBuilderException:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L18e3e8.  call temp:= `trySelect`(v2) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.trySelect:()Z` @kind virtual;
  #L18e3ee.  v0:= temp;
  #L18e3f0.  if v0 == 0 then goto L18e410;
  #L18e3f4.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L18e3f8.  call temp:= `createFailure`(v3) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L18e3fe.  v3:= temp @kind object;
  #L18e400.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L18e406.  v3:= temp @kind object;
  #L18e408.  call `resumeWith`(v2, v3) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L18e40e.  goto L18e470;
  #L18e410.  v0:= instanceof @variable v3 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L18e414.  if v0 != 0 then goto L18e470;
  #L18e418.  call temp:= `getResult`(v2) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L18e41e.  v0:= temp @kind object;
  #L18e420.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L18e424.  if v1 == 0 then goto L18e462;
  #L18e428.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L18e42c.  v0:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L18e430.  call temp:= `getRECOVER_STACK_TRACES`() @signature `Lkotlinx/coroutines/DebugKt;.getRECOVER_STACK_TRACES:()Z` @kind static;
  #L18e436.  v1:= temp;
  #L18e438.  if v1 != 0 then goto L18e43e;
  #L18e43c.  goto L18e446;
  #L18e43e.  call temp:= `unwrapImpl`(v0) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.unwrapImpl:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L18e444.  v0:= temp @kind object;
  #L18e446.  call temp:= `getRECOVER_STACK_TRACES`() @signature `Lkotlinx/coroutines/DebugKt;.getRECOVER_STACK_TRACES:()Z` @kind static;
  #L18e44c.  v1:= temp;
  #L18e44e.  if v1 != 0 then goto L18e456;
  #L18e452.  v1:= v3 @kind object;
  #L18e454.  goto L18e45e;
  #L18e456.  call temp:= `unwrapImpl`(v3) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.unwrapImpl:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L18e45c.  v1:= temp @kind object;
  #L18e45e.  if v0 == v1 then goto L18e470;
  #L18e462.  call temp:= `getContext`(v2) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L18e468.  v0:= temp @kind object;
  #L18e46a.  call `handleCoroutineException`(v0, v3) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handleCoroutineException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L18e470.  return @kind void;
}
procedure `void` `invoke`(`kotlinx.coroutines.selects.SelectBuilderImpl` v0 @kind this, `kotlinx.coroutines.selects.SelectClause0` v1 @kind object, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.invoke:(Lkotlinx/coroutines/selects/SelectClause0;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC {
    temp;

  #L18e4e8.  call `registerSelectClause0`(v1, v0, v2) @signature `Lkotlinx/coroutines/selects/SelectClause0;.registerSelectClause0:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function1;)V` @kind interface;
  #L18e4ee.  return @kind void;
}
procedure `void` `invoke`(`kotlinx.coroutines.selects.SelectBuilderImpl` v0 @kind this, `kotlinx.coroutines.selects.SelectClause1` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.invoke:(Lkotlinx/coroutines/selects/SelectClause1;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC {
    temp;

  #L18e500.  call `registerSelectClause1`(v1, v0, v2) @signature `Lkotlinx/coroutines/selects/SelectClause1;.registerSelectClause1:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function2;)V` @kind interface;
  #L18e506.  return @kind void;
}
procedure `void` `invoke`(`kotlinx.coroutines.selects.SelectBuilderImpl` v0 @kind this, `kotlinx.coroutines.selects.SelectClause2` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.invoke:(Lkotlinx/coroutines/selects/SelectClause2;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC {
    temp;

  #L18e518.  call `registerSelectClause2`(v1, v0, v2, v3) @signature `Lkotlinx/coroutines/selects/SelectClause2;.registerSelectClause2:(Lkotlinx/coroutines/selects/SelectInstance;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V` @kind interface;
  #L18e51e.  return @kind void;
}
procedure `void` `invoke`(`kotlinx.coroutines.selects.SelectBuilderImpl` v0 @kind this, `kotlinx.coroutines.selects.SelectClause2` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.invoke:(Lkotlinx/coroutines/selects/SelectClause2;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC {
    temp;

  #L18e530.  call `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/selects/SelectBuilder$DefaultImpls;.invoke:(Lkotlinx/coroutines/selects/SelectBuilder;Lkotlinx/coroutines/selects/SelectClause2;Lkotlin/jvm/functions/Function2;)V` @kind static;
  #L18e536.  return @kind void;
}
procedure `boolean` `isSelected`(`kotlinx.coroutines.selects.SelectBuilderImpl` v2 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.isSelected:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18df90.  v0:= v2.`kotlinx.coroutines.selects.SelectBuilderImpl._state` @type ^`java.lang.Object` @kind object;
  #L18df94.  call temp:= `getNOT_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getNOT_SELECTED:()Ljava/lang/Object;` @kind static;
  #L18df9a.  v1:= temp @kind object;
  #L18df9c.  if v0 != v1 then goto L18dfa4;
  #L18dfa0.  v0:= 0I;
  #L18dfa2.  return v0;
  #L18dfa4.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.OpDescriptor` @kind boolean;
  #L18dfa8.  if v1 == 0 then goto L18dfb8;
  #L18dfac.  v0:= (`kotlinx.coroutines.internal.OpDescriptor`) v0 @kind object;
  #L18dfb0.  call temp:= `perform`(v0, v2) @signature `Lkotlinx/coroutines/internal/OpDescriptor;.perform:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L18dfb6.  goto L18df90;
  #L18dfb8.  v0:= 1I;
  #L18dfba.  return v0;
}
procedure `void` `onTimeout`(`kotlinx.coroutines.selects.SelectBuilderImpl` v3 @kind this, `long` v4 , `kotlin.jvm.functions.Function1` v6 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.onTimeout:(JLkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L18e548.  v0:= 0L;
  #L18e54c.  v2:= lcmp(v4, v0);
  #L18e550.  if v2 > 0 then goto L18e570;
  #L18e554.  call temp:= `trySelect`(v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.trySelect:()Z` @kind virtual;
  #L18e55a.  v4:= temp;
  #L18e55c.  if v4 == 0 then goto L18e56e;
  #L18e560.  call temp:= `getCompletion`(v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind virtual;
  #L18e566.  v4:= temp @kind object;
  #L18e568.  call `startCoroutineUnintercepted`(v6, v4) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startCoroutineUnintercepted:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L18e56e.  return @kind void;
  #L18e570.  v0:= new `kotlinx.coroutines.selects.SelectBuilderImpl$onTimeout$$inlined$Runnable$1`;
  #L18e574.  call `<init>`(v0, v3, v6) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl$onTimeout$$inlined$Runnable$1;.<init>:(Lkotlinx/coroutines/selects/SelectBuilderImpl;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L18e57a.  call temp:= `getContext`(v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L18e580.  v6:= temp @kind object;
  #L18e582.  call temp:= `getDelay`(v6) @signature `Lkotlinx/coroutines/DelayKt;.getDelay:(Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/Delay;` @kind static;
  #L18e588.  v6:= temp @kind object;
  #L18e58a.  call temp:= `getContext`(v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L18e590.  v1:= temp @kind object;
  #L18e592.  call temp:= `invokeOnTimeout`(v6, v4, v0, v1) @signature `Lkotlinx/coroutines/Delay;.invokeOnTimeout:(JLjava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/DisposableHandle;` @kind interface;
  #L18e598.  v4:= temp @kind object;
  #L18e59a.  call `disposeOnSelect`(v3, v4) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.disposeOnSelect:(Lkotlinx/coroutines/DisposableHandle;)V` @kind virtual;
  #L18e5a0.  return @kind void;
}
procedure `java.lang.Object` `performAtomicTrySelect`(`kotlinx.coroutines.selects.SelectBuilderImpl` v1 @kind this, `kotlinx.coroutines.internal.AtomicDesc` v2 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.performAtomicTrySelect:(Lkotlinx/coroutines/internal/AtomicDesc;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18e0ac.  v0:= new `kotlinx.coroutines.selects.SelectBuilderImpl$a`;
  #L18e0b0.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl$a;.<init>:(Lkotlinx/coroutines/selects/SelectBuilderImpl;Lkotlinx/coroutines/internal/AtomicDesc;)V` @kind direct;
  #L18e0b6.  v2:= 0I;
  #L18e0b8.  call temp:= `perform`(v0, v2) @signature `Lkotlinx/coroutines/internal/AtomicOp;.perform:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L18e0be.  v2:= temp @kind object;
  #L18e0c0.  return v2 @kind object;
}
procedure `void` `resumeSelectWithException`(`kotlinx.coroutines.selects.SelectBuilderImpl` v5 @kind this, `java.lang.Throwable` v6 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.resumeSelectWithException:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L18e5b4.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L18e5ba.  v0:= temp;
  #L18e5bc.  if v0 == 0 then goto L18e5da;
  #L18e5c0.  call temp:= `isSelected`(v5) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.isSelected:()Z` @kind virtual;
  #L18e5c6.  v0:= temp;
  #L18e5c8.  if v0 == 0 then goto L18e5ce;
  #L18e5cc.  goto L18e5da;
  #L18e5ce.  v6:= new `java.lang.AssertionError`;
  #L18e5d2.  call `<init>`(v6) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L18e5d8.  throw v6;
  #L18e5da.  v0:= v5.`kotlinx.coroutines.selects.SelectBuilderImpl._result` @type ^`java.lang.Object` @kind object;
  #L18e5de.  call temp:= `access$getUNDECIDED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getUNDECIDED$p:()Ljava/lang/Object;` @kind static;
  #L18e5e4.  v1:= temp @kind object;
  #L18e5e6.  if v0 != v1 then goto L18e63e;
  #L18e5ea.  v0:= new `kotlinx.coroutines.CompletedExceptionally`;
  #L18e5ee.  v1:= v5.`kotlinx.coroutines.selects.SelectBuilderImpl.d` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L18e5f2.  call temp:= `getRECOVER_STACK_TRACES`() @signature `Lkotlinx/coroutines/DebugKt;.getRECOVER_STACK_TRACES:()Z` @kind static;
  #L18e5f8.  v2:= temp;
  #L18e5fa.  if v2 == 0 then goto L18e616;
  #L18e5fe.  v2:= instanceof @variable v1 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L18e602.  if v2 != 0 then goto L18e608;
  #L18e606.  goto L18e616;
  #L18e608.  v1:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v1 @kind object;
  #L18e60c.  call temp:= `access$recoverFromStackFrame`(v6, v1) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.access$recoverFromStackFrame:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @kind static;
  #L18e612.  v1:= temp @kind object;
  #L18e614.  goto L18e618;
  #L18e616.  v1:= v6 @kind object;
  #L18e618.  v2:= 0I;
  #L18e61a.  v3:= 2I;
  #L18e61c.  v4:= 0I;
  #L18e61e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lkotlinx/coroutines/CompletedExceptionally;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L18e624.  v1:= `@@kotlinx.coroutines.selects.SelectBuilderImpl.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L18e628.  call temp:= `access$getUNDECIDED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getUNDECIDED$p:()Ljava/lang/Object;` @kind static;
  #L18e62e.  v2:= temp @kind object;
  #L18e630.  call temp:= `compareAndSet`(v1, v5, v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L18e636.  v0:= temp;
  #L18e638.  if v0 == 0 then goto L18e5da;
  #L18e63c.  goto L18e690;
  #L18e63e.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L18e644.  v1:= temp @kind object;
  #L18e646.  if v0 != v1 then goto L18e692;
  #L18e64a.  v0:= `@@kotlinx.coroutines.selects.SelectBuilderImpl.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L18e64e.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L18e654.  v1:= temp @kind object;
  #L18e656.  call temp:= `access$getRESUMED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getRESUMED$p:()Ljava/lang/Object;` @kind static;
  #L18e65c.  v2:= temp @kind object;
  #L18e65e.  call temp:= `compareAndSet`(v0, v5, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L18e664.  v0:= temp;
  #L18e666.  if v0 == 0 then goto L18e5da;
  #L18e66a.  v0:= v5.`kotlinx.coroutines.selects.SelectBuilderImpl.d` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L18e66e.  call temp:= `intercepted`(v0) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L18e674.  v0:= temp @kind object;
  #L18e676.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L18e67a.  call temp:= `createFailure`(v6) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L18e680.  v6:= temp @kind object;
  #L18e682.  call temp:= `constructor-impl`(v6) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L18e688.  v6:= temp @kind object;
  #L18e68a.  call `resumeWith`(v0, v6) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L18e690.  return @kind void;
  #L18e692.  v6:= new `java.lang.IllegalStateException`;
  #L18e696.  v0:= "Already resumed" @kind object;
  #L18e69a.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L18e6a0.  throw v6;
}
procedure `void` `resumeWith`(`kotlinx.coroutines.selects.SelectBuilderImpl` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L18e6b4.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L18e6ba.  v0:= temp;
  #L18e6bc.  if v0 == 0 then goto L18e6da;
  #L18e6c0.  call temp:= `isSelected`(v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.isSelected:()Z` @kind virtual;
  #L18e6c6.  v0:= temp;
  #L18e6c8.  if v0 == 0 then goto L18e6ce;
  #L18e6cc.  goto L18e6da;
  #L18e6ce.  v4:= new `java.lang.AssertionError`;
  #L18e6d2.  call `<init>`(v4) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L18e6d8.  throw v4;
  #L18e6da.  v0:= v3.`kotlinx.coroutines.selects.SelectBuilderImpl._result` @type ^`java.lang.Object` @kind object;
  #L18e6de.  call temp:= `access$getUNDECIDED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getUNDECIDED$p:()Ljava/lang/Object;` @kind static;
  #L18e6e4.  v1:= temp @kind object;
  #L18e6e6.  if v0 != v1 then goto L18e710;
  #L18e6ea.  v0:= 1I;
  #L18e6ec.  v1:= 0I;
  #L18e6ee.  call temp:= `toState$default`(v4, v1, v0, v1) @signature `Lkotlinx/coroutines/CompletionStateKt;.toState$default:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L18e6f4.  v0:= temp @kind object;
  #L18e6f6.  v1:= `@@kotlinx.coroutines.selects.SelectBuilderImpl.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L18e6fa.  call temp:= `access$getUNDECIDED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getUNDECIDED$p:()Ljava/lang/Object;` @kind static;
  #L18e700.  v2:= temp @kind object;
  #L18e702.  call temp:= `compareAndSet`(v1, v3, v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L18e708.  v0:= temp;
  #L18e70a.  if v0 == 0 then goto L18e6da;
  #L18e70e.  goto L18e7a4;
  #L18e710.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L18e716.  v1:= temp @kind object;
  #L18e718.  if v0 != v1 then goto L18e7a6;
  #L18e71c.  v0:= `@@kotlinx.coroutines.selects.SelectBuilderImpl.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L18e720.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L18e726.  v1:= temp @kind object;
  #L18e728.  call temp:= `access$getRESUMED$p`() @signature `Lkotlinx/coroutines/selects/SelectKt;.access$getRESUMED$p:()Ljava/lang/Object;` @kind static;
  #L18e72e.  v2:= temp @kind object;
  #L18e730.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L18e736.  v0:= temp;
  #L18e738.  if v0 == 0 then goto L18e6da;
  #L18e73c.  call temp:= `isFailure-impl`(v4) @signature `Lkotlin/Result;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L18e742.  v0:= temp;
  #L18e744.  if v0 == 0 then goto L18e79a;
  #L18e748.  v0:= v3.`kotlinx.coroutines.selects.SelectBuilderImpl.d` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L18e74c.  call temp:= `exceptionOrNull-impl`(v4) @signature `Lkotlin/Result;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L18e752.  v4:= temp @kind object;
  #L18e754.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L18e75a.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L18e75e.  call temp:= `getRECOVER_STACK_TRACES`() @signature `Lkotlinx/coroutines/DebugKt;.getRECOVER_STACK_TRACES:()Z` @kind static;
  #L18e764.  v1:= temp;
  #L18e766.  if v1 == 0 then goto L18e782;
  #L18e76a.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L18e76e.  if v1 != 0 then goto L18e774;
  #L18e772.  goto L18e782;
  #L18e774.  v1:= v0 @kind object;
  #L18e776.  v1:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v1 @kind object;
  #L18e77a.  call temp:= `access$recoverFromStackFrame`(v4, v1) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.access$recoverFromStackFrame:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @kind static;
  #L18e780.  v4:= temp @kind object;
  #L18e782.  call temp:= `createFailure`(v4) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L18e788.  v4:= temp @kind object;
  #L18e78a.  call temp:= `constructor-impl`(v4) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L18e790.  v4:= temp @kind object;
  #L18e792.  call `resumeWith`(v0, v4) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L18e798.  goto L18e7a4;
  #L18e79a.  v0:= v3.`kotlinx.coroutines.selects.SelectBuilderImpl.d` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L18e79e.  call `resumeWith`(v0, v4) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L18e7a4.  return @kind void;
  #L18e7a6.  v4:= new `java.lang.IllegalStateException`;
  #L18e7aa.  v0:= "Already resumed" @kind object;
  #L18e7ae.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L18e7b4.  throw v4;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.selects.SelectBuilderImpl` v2 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18e1e4.  v0:= new `java.lang.StringBuilder`;
  #L18e1e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L18e1ee.  v1:= "SelectInstance(state=" @kind object;
  #L18e1f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18e1f8.  v1:= v2.`kotlinx.coroutines.selects.SelectBuilderImpl._state` @type ^`java.lang.Object` @kind object;
  #L18e1fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18e202.  v1:= ", result=" @kind object;
  #L18e206.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18e20c.  v1:= v2.`kotlinx.coroutines.selects.SelectBuilderImpl._result` @type ^`java.lang.Object` @kind object;
  #L18e210.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18e216.  v1:= 41I;
  #L18e21a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L18e220.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L18e226.  v0:= temp @kind object;
  #L18e228.  return v0 @kind object;
}
procedure `boolean` `trySelect`(`kotlinx.coroutines.selects.SelectBuilderImpl` v2 @kind this) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.trySelect:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18dfcc.  v0:= 0I;
  #L18dfce.  call temp:= `trySelectOther`(v2, v0) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.trySelectOther:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Ljava/lang/Object;` @kind virtual;
  #L18dfd4.  v0:= temp @kind object;
  #L18dfd6.  v1:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L18dfda.  if v0 != v1 then goto L18dfe2;
  #L18dfde.  v0:= 1I;
  #L18dfe0.  goto L18dfe8;
  #L18dfe2.  if v0 != 0 then goto L18dfea;
  #L18dfe6.  v0:= 0I;
  #L18dfe8.  return v0;
  #L18dfea.  v1:= "Unexpected trySelectIdempotent result " @kind object;
  #L18dfee.  call temp:= `stringPlus`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L18dff4.  v0:= temp @kind object;
  #L18dff6.  v1:= new `java.lang.IllegalStateException`;
  #L18dffa.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L18e000.  v0:= temp @kind object;
  #L18e002.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L18e008.  throw v1;
}
procedure `java.lang.Object` `trySelectOther`(`kotlinx.coroutines.selects.SelectBuilderImpl` v3 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp` v4 @kind object) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.trySelectOther:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L18e0d4.  v0:= v3.`kotlinx.coroutines.selects.SelectBuilderImpl._state` @type ^`java.lang.Object` @kind object;
  #L18e0d8.  call temp:= `getNOT_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getNOT_SELECTED:()Ljava/lang/Object;` @kind static;
  #L18e0de.  v1:= temp @kind object;
  #L18e0e0.  v2:= 0I;
  #L18e0e2.  if v0 != v1 then goto L18e142;
  #L18e0e6.  if v4 != 0 then goto L18e104;
  #L18e0ea.  v0:= `@@kotlinx.coroutines.selects.SelectBuilderImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L18e0ee.  call temp:= `getNOT_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getNOT_SELECTED:()Ljava/lang/Object;` @kind static;
  #L18e0f4.  v1:= temp @kind object;
  #L18e0f6.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L18e0fc.  v0:= temp;
  #L18e0fe.  if v0 != 0 then goto L18e136;
  #L18e102.  goto L18e0d4;
  #L18e104.  v0:= new `kotlinx.coroutines.selects.SelectBuilderImpl$c`;
  #L18e108.  call `<init>`(v0, v4) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl$c;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;)V` @kind direct;
  #L18e10e.  v1:= `@@kotlinx.coroutines.selects.SelectBuilderImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L18e112.  call temp:= `getNOT_SELECTED`() @signature `Lkotlinx/coroutines/selects/SelectKt;.getNOT_SELECTED:()Ljava/lang/Object;` @kind static;
  #L18e118.  v2:= temp @kind object;
  #L18e11a.  call temp:= `compareAndSet`(v1, v3, v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L18e120.  v1:= temp;
  #L18e122.  if v1 != 0 then goto L18e128;
  #L18e126.  goto L18e0d4;
  #L18e128.  call temp:= `perform`(v0, v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl$c;.perform:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L18e12e.  v4:= temp @kind object;
  #L18e130.  if v4 == 0 then goto L18e136;
  #L18e134.  return v4 @kind object;
  #L18e136.  call `e`(v3) @signature `Lkotlinx/coroutines/selects/SelectBuilderImpl;.e:()V` @kind direct;
  #L18e13c.  v4:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L18e140.  return v4 @kind object;
  #L18e142.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.OpDescriptor` @kind boolean;
  #L18e146.  if v1 == 0 then goto L18e1aa;
  #L18e14a.  if v4 == 0 then goto L18e19e;
  #L18e14e.  call temp:= `getAtomicOp`(v4) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$PrepareOp;.getAtomicOp:()Lkotlinx/coroutines/internal/AtomicOp;` @kind virtual;
  #L18e154.  v1:= temp @kind object;
  #L18e156.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.selects.SelectBuilderImpl$a` @kind boolean;
  #L18e15a.  if v2 == 0 then goto L18e186;
  #L18e15e.  v2:= v1 @kind object;
  #L18e160.  v2:= (`kotlinx.coroutines.selects.SelectBuilderImpl$a`) v2 @kind object;
  #L18e164.  v2:= v2.`kotlinx.coroutines.selects.SelectBuilderImpl$a.b` @type ^`kotlinx.coroutines.selects.SelectBuilderImpl` @kind object;
  #L18e168.  if v2 == v3 then goto L18e16e;
  #L18e16c.  goto L18e186;
  #L18e16e.  v4:= new `java.lang.IllegalStateException`;
  #L18e172.  v0:= "Cannot use matching select clauses on the same object" @kind object;
  #L18e176.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L18e17c.  v0:= temp @kind object;
  #L18e17e.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L18e184.  throw v4;
  #L18e186.  v2:= v0 @kind object;
  #L18e188.  v2:= (`kotlinx.coroutines.internal.OpDescriptor`) v2 @kind object;
  #L18e18c.  call temp:= `isEarlierThan`(v1, v2) @signature `Lkotlinx/coroutines/internal/OpDescriptor;.isEarlierThan:(Lkotlinx/coroutines/internal/OpDescriptor;)Z` @kind virtual;
  #L18e192.  v1:= temp;
  #L18e194.  if v1 == 0 then goto L18e19e;
  #L18e198.  v4:= `@@kotlinx.coroutines.internal.AtomicKt.RETRY_ATOMIC` @type ^`java.lang.Object` @kind object;
  #L18e19c.  return v4 @kind object;
  #L18e19e.  v0:= (`kotlinx.coroutines.internal.OpDescriptor`) v0 @kind object;
  #L18e1a2.  call temp:= `perform`(v0, v3) @signature `Lkotlinx/coroutines/internal/OpDescriptor;.perform:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L18e1a8.  goto L18e0d4;
  #L18e1aa.  if v4 != 0 then goto L18e1b0;
  #L18e1ae.  return v2 @kind object;
  #L18e1b0.  v4:= v4.`kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp.desc` @type ^`kotlinx.coroutines.internal.LockFreeLinkedListNode$AbstractAtomicDesc` @kind object;
  #L18e1b4.  if v0 != v4 then goto L18e1be;
  #L18e1b8.  v4:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L18e1bc.  return v4 @kind object;
  #L18e1be.  return v2 @kind object;
}
