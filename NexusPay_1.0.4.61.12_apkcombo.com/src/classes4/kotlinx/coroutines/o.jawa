record `kotlinx.coroutines.o` @kind class @AccessFlag FINAL extends `java.util.concurrent.Executor` @kind interface {
  `kotlinx.coroutines.CoroutineDispatcher` `kotlinx.coroutines.o.a` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.o` v0 @kind this, `kotlinx.coroutines.CoroutineDispatcher` v1 @kind object) @signature `Lkotlinx/coroutines/o;.<init>:(Lkotlinx/coroutines/CoroutineDispatcher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L158584.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15858a.  v0.`kotlinx.coroutines.o.a` @type ^`kotlinx.coroutines.CoroutineDispatcher` := v1 @kind object;
  #L15858e.  return @kind void;
}
procedure `void` `execute`(`kotlinx.coroutines.o` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lkotlinx/coroutines/o;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1585a0.  v0:= v2.`kotlinx.coroutines.o.a` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L1585a4.  v1:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L1585a8.  call `dispatch`(v0, v1, v3) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.dispatch:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L1585ae.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.o` v1 @kind this) @signature `Lkotlinx/coroutines/o;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L158564.  v0:= v1.`kotlinx.coroutines.o.a` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L158568.  call temp:= `toString`(v0) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.toString:()Ljava/lang/String;` @kind virtual;
  #L15856e.  v0:= temp @kind object;
  #L158570.  return v0 @kind object;
}
