record `kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L17a0d4.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2.a` @type ^`kotlinx.coroutines.flow.FlowCollector` := v1 @kind object;
  #L17a0d8.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2.b` @type ^`kotlin.jvm.functions.Function2` := v2 @kind object;
  #L17a0dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17a0e2.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2` v6 @kind this, `java.lang.Object` v7 @kind object, `kotlin.coroutines.Continuation` v8 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L179ffc.  v0:= instanceof @variable v8 @type ^`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1` @kind boolean;
  #L17a000.  if v0 == 0 then goto L17a022;
  #L17a004.  v0:= v8 @kind object;
  #L17a006.  v0:= (`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1`) v0 @kind object;
  #L17a00a.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1.b` @type ^`int`;
  #L17a00e.  v2:= -2147483648I;
  #L17a012.  v3:= v1 ^& v2 @kind int;
  #L17a016.  if v3 == 0 then goto L17a022;
  #L17a01a.  v1:= v1 - v2 @kind int;
  #L17a01c.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1.b` @type ^`int` := v1;
  #L17a020.  goto L17a02c;
  #L17a022.  v0:= new `kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1`;
  #L17a026.  call `<init>`(v0, v6, v8) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L17a02c.  v8:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1.a` @type ^`java.lang.Object` @kind object;
  #L17a030.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L17a036.  v1:= temp @kind object;
  #L17a038.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1.b` @type ^`int`;
  #L17a03c.  v3:= 2I;
  #L17a03e.  v4:= 1I;
  #L17a040.  if v2 == 0 then goto L17a074;
  #L17a044.  if v2 == v4 then goto L17a064;
  #L17a048.  if v2 != v3 then goto L17a054;
  #L17a04c.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17a052.  goto L17a0bc;
  #L17a054.  v7:= new `java.lang.IllegalStateException`;
  #L17a058.  v8:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L17a05c.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17a062.  throw v7;
  #L17a064.  v7:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1.d` @type ^`java.lang.Object` @kind object;
  #L17a068.  v7:= (`kotlinx.coroutines.flow.FlowCollector`) v7 @kind object;
  #L17a06c.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17a072.  goto L17a09e;
  #L17a074.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17a07a.  v8:= v6.`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2.a` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L17a07e.  v2:= v6.`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L17a082.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1.d` @type ^`java.lang.Object` := v8 @kind object;
  #L17a086.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1.b` @type ^`int` := v4;
  #L17a08a.  call temp:= `invoke`(v2, v7, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L17a090.  v7:= temp @kind object;
  #L17a092.  if v7 != v1 then goto L17a098;
  #L17a096.  return v1 @kind object;
  #L17a098.  v5:= v8 @kind object;
  #L17a09a.  v8:= v7 @kind object;
  #L17a09c.  v7:= v5 @kind object;
  #L17a09e.  if v8 != 0 then goto L17a0a4;
  #L17a0a2.  goto L17a0bc;
  #L17a0a4.  v2:= 0I;
  #L17a0a6.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1.d` @type ^`java.lang.Object` := v2 @kind object;
  #L17a0aa.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1.b` @type ^`int` := v3;
  #L17a0ae.  call temp:= `emit`(v7, v8, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L17a0b4.  v7:= temp @kind object;
  #L17a0b6.  if v7 != v1 then goto L17a0bc;
  #L17a0ba.  return v1 @kind object;
  #L17a0bc.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17a0c0.  return v7 @kind object;
}
procedure `java.lang.Object` `emit$$forInline`(`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2;.emit$$forInline:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L179fa0.  v0:= 4I;
  #L179fa2.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L179fa8.  v0:= new `kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1`;
  #L179fac.  call `<init>`(v0, v2, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L179fb2.  v0:= 5I;
  #L179fb4.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L179fba.  v0:= v2.`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2.a` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L179fbe.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__TransformKt$mapNotNull$$inlined$unsafeTransform$1$2.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L179fc2.  call temp:= `invoke`(v1, v3, v4) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L179fc8.  v3:= temp @kind object;
  #L179fca.  if v3 != 0 then goto L179fd0;
  #L179fce.  goto L179fe6;
  #L179fd0.  v1:= 0I;
  #L179fd2.  call `mark`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L179fd8.  call temp:= `emit`(v0, v3, v4) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L179fde.  v3:= 1I;
  #L179fe0.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L179fe6.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L179fea.  return v3 @kind object;
}
