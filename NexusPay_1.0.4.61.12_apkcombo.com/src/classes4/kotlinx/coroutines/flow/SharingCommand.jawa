record `kotlinx.coroutines.flow.SharingCommand` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlinx.coroutines.flow.SharingCommand`[] `@@kotlinx.coroutines.flow.SharingCommand.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlinx.coroutines.flow.SharingCommand` `@@kotlinx.coroutines.flow.SharingCommand.START` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.flow.SharingCommand` `@@kotlinx.coroutines.flow.SharingCommand.STOP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.flow.SharingCommand` `@@kotlinx.coroutines.flow.SharingCommand.STOP_AND_RESET_REPLAY_CACHE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `kotlinx.coroutines.flow.SharingCommand`[] `$values`() @signature `Lkotlinx/coroutines/flow/SharingCommand;.$values:()[Lkotlinx/coroutines/flow/SharingCommand;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L17fce8.  v0:= 3I;
  #L17fcea.  v0:= new `kotlinx.coroutines.flow.SharingCommand`[v0];
  #L17fcee.  v1:= `@@kotlinx.coroutines.flow.SharingCommand.START` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L17fcf2.  v2:= 0I;
  #L17fcf4.  v0[v2]:= v1 @kind object;
  #L17fcf8.  v1:= `@@kotlinx.coroutines.flow.SharingCommand.STOP` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L17fcfc.  v2:= 1I;
  #L17fcfe.  v0[v2]:= v1 @kind object;
  #L17fd02.  v1:= `@@kotlinx.coroutines.flow.SharingCommand.STOP_AND_RESET_REPLAY_CACHE` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L17fd06.  v2:= 2I;
  #L17fd08.  v0[v2]:= v1 @kind object;
  #L17fd0c.  return v0 @kind object;
}
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/SharingCommand;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L17fd44.  v0:= new `kotlinx.coroutines.flow.SharingCommand`;
  #L17fd48.  v1:= "START" @kind object;
  #L17fd4c.  v2:= 0I;
  #L17fd4e.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/SharingCommand;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L17fd54.  `@@kotlinx.coroutines.flow.SharingCommand.START` @type ^`kotlinx.coroutines.flow.SharingCommand` := v0 @kind object;
  #L17fd58.  v0:= new `kotlinx.coroutines.flow.SharingCommand`;
  #L17fd5c.  v1:= "STOP" @kind object;
  #L17fd60.  v2:= 1I;
  #L17fd62.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/SharingCommand;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L17fd68.  `@@kotlinx.coroutines.flow.SharingCommand.STOP` @type ^`kotlinx.coroutines.flow.SharingCommand` := v0 @kind object;
  #L17fd6c.  v0:= new `kotlinx.coroutines.flow.SharingCommand`;
  #L17fd70.  v1:= "STOP_AND_RESET_REPLAY_CACHE" @kind object;
  #L17fd74.  v2:= 2I;
  #L17fd76.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/SharingCommand;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L17fd7c.  `@@kotlinx.coroutines.flow.SharingCommand.STOP_AND_RESET_REPLAY_CACHE` @type ^`kotlinx.coroutines.flow.SharingCommand` := v0 @kind object;
  #L17fd80.  call temp:= `$values`() @signature `Lkotlinx/coroutines/flow/SharingCommand;.$values:()[Lkotlinx/coroutines/flow/SharingCommand;` @kind static;
  #L17fd86.  v0:= temp @kind object;
  #L17fd88.  `@@kotlinx.coroutines.flow.SharingCommand.$VALUES` @type ^`kotlinx.coroutines.flow.SharingCommand`[] := v0 @kind object;
  #L17fd8c.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.SharingCommand` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/flow/SharingCommand;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L17fda0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L17fda6.  return @kind void;
}
procedure `kotlinx.coroutines.flow.SharingCommand` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlinx/coroutines/flow/SharingCommand;.valueOf:(Ljava/lang/String;)Lkotlinx/coroutines/flow/SharingCommand;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L17fcc4.  v0:= constclass @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L17fcc8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L17fcce.  v1:= temp @kind object;
  #L17fcd0.  v1:= (`kotlinx.coroutines.flow.SharingCommand`) v1 @kind object;
  #L17fcd4.  return v1 @kind object;
}
procedure `kotlinx.coroutines.flow.SharingCommand`[] `values`() @signature `Lkotlinx/coroutines/flow/SharingCommand;.values:()[Lkotlinx/coroutines/flow/SharingCommand;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L17fd20.  v0:= `@@kotlinx.coroutines.flow.SharingCommand.$VALUES` @type ^`kotlinx.coroutines.flow.SharingCommand`[] @kind object;
  #L17fd24.  v1:= length @variable v0;
  #L17fd26.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L17fd2c.  v0:= temp @kind object;
  #L17fd2e.  v0:= (`kotlinx.coroutines.flow.SharingCommand`[]) v0 @kind object;
  #L17fd32.  return v0 @kind object;
}
