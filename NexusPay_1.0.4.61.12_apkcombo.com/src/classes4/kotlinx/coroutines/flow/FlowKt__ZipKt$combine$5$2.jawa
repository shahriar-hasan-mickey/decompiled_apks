record `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.c` @AccessFlag SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L17b544.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.d` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L17b548.  v1:= 3I;
  #L17b54a.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L17b550.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L17b3fc.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L17b400.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L17b404.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L17b408.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L17b40e.  v1:= temp @kind object;
  #L17b410.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2` v2 @kind this, `kotlinx.coroutines.flow.FlowCollector` v3 @kind object, `java.lang.Object`[] v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L17b424.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2`;
  #L17b428.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.d` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L17b42c.  call `<init>`(v0, v1, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L17b432.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.b` @type ^`java.lang.Object` := v3 @kind object;
  #L17b436.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.c` @type ^`java.lang.Object` := v4 @kind object;
  #L17b43a.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17b43e.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L17b444.  v3:= temp @kind object;
  #L17b446.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L17b4a0.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L17b4a6.  v0:= temp @kind object;
  #L17b4a8.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.a` @type ^`int`;
  #L17b4ac.  v2:= 2I;
  #L17b4ae.  v3:= 1I;
  #L17b4b0.  if v1 == 0 then goto L17b4e4;
  #L17b4b4.  if v1 == v3 then goto L17b4d4;
  #L17b4b8.  if v1 != v2 then goto L17b4c4;
  #L17b4bc.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17b4c2.  goto L17b52e;
  #L17b4c4.  v6:= new `java.lang.IllegalStateException`;
  #L17b4c8.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L17b4cc.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17b4d2.  throw v6;
  #L17b4d4.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.b` @type ^`java.lang.Object` @kind object;
  #L17b4d8.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L17b4dc.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17b4e2.  goto L17b516;
  #L17b4e4.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17b4ea.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.b` @type ^`java.lang.Object` @kind object;
  #L17b4ee.  v1:= v6 @kind object;
  #L17b4f0.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L17b4f4.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.c` @type ^`java.lang.Object` @kind object;
  #L17b4f8.  v6:= (`java.lang.Object`[]) v6 @kind object;
  #L17b4fc.  v4:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.d` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L17b500.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.b` @type ^`java.lang.Object` := v1 @kind object;
  #L17b504.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.a` @type ^`int` := v3;
  #L17b508.  call temp:= `invoke`(v4, v6, v5) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L17b50e.  v6:= temp @kind object;
  #L17b510.  if v6 != v0 then goto L17b516;
  #L17b514.  return v0 @kind object;
  #L17b516.  v3:= 0I;
  #L17b518.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.b` @type ^`java.lang.Object` := v3 @kind object;
  #L17b51c.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.a` @type ^`int` := v2;
  #L17b520.  call temp:= `emit`(v1, v6, v5) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L17b526.  v6:= temp @kind object;
  #L17b528.  if v6 != v0 then goto L17b52e;
  #L17b52c.  return v0 @kind object;
  #L17b52e.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17b532.  return v6 @kind object;
}
procedure `java.lang.Object` `invokeSuspend$$forInline`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$5$2;.invokeSuspend$$forInline:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L17b458.  v3:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.b` @type ^`java.lang.Object` @kind object;
  #L17b45c.  v3:= (`kotlinx.coroutines.flow.FlowCollector`) v3 @kind object;
  #L17b460.  v0:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.c` @type ^`java.lang.Object` @kind object;
  #L17b464.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L17b468.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$5$2.d` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L17b46c.  call temp:= `invoke`(v1, v0, v2) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L17b472.  v0:= temp @kind object;
  #L17b474.  v1:= 0I;
  #L17b476.  call `mark`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L17b47c.  call temp:= `emit`(v3, v0, v2) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L17b482.  v3:= 1I;
  #L17b484.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L17b48a.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17b48e.  return v3 @kind object;
}
