record `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.c` @AccessFlag SYNTHETIC;
  `kotlin.jvm.functions.Function4` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object, `kotlin.jvm.functions.Function4` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1;.<init>:(Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function4;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L17b818.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.d` @type ^`kotlin.jvm.functions.Function4` := v2 @kind object;
  #L17b81c.  v2:= 3I;
  #L17b81e.  call `<init>`(v0, v2, v1) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L17b824.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L17b730.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L17b734.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L17b738.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L17b73c.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L17b742.  v1:= temp @kind object;
  #L17b744.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1` v2 @kind this, `kotlinx.coroutines.flow.FlowCollector` v3 @kind object, `java.lang.Object`[] v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L17b758.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1`;
  #L17b75c.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.d` @type ^`kotlin.jvm.functions.Function4` @kind object;
  #L17b760.  call `<init>`(v0, v5, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1;.<init>:(Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function4;)V` @kind direct;
  #L17b766.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.b` @type ^`java.lang.Object` := v3 @kind object;
  #L17b76a.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.c` @type ^`java.lang.Object` := v4 @kind object;
  #L17b76e.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17b772.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L17b778.  v3:= temp @kind object;
  #L17b77a.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L17b78c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L17b792.  v0:= temp @kind object;
  #L17b794.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.a` @type ^`int`;
  #L17b798.  v2:= 1I;
  #L17b79a.  if v1 == 0 then goto L17b7ba;
  #L17b79e.  if v1 != v2 then goto L17b7aa;
  #L17b7a2.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17b7a8.  goto L17b800;
  #L17b7aa.  v6:= new `java.lang.IllegalStateException`;
  #L17b7ae.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L17b7b2.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17b7b8.  throw v6;
  #L17b7ba.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17b7c0.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.b` @type ^`java.lang.Object` @kind object;
  #L17b7c4.  v6:= (`kotlinx.coroutines.flow.FlowCollector`) v6 @kind object;
  #L17b7c8.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.c` @type ^`java.lang.Object` @kind object;
  #L17b7cc.  v1:= (`java.lang.Object`[]) v1 @kind object;
  #L17b7d0.  v3:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.d` @type ^`kotlin.jvm.functions.Function4` @kind object;
  #L17b7d4.  v4:= 0I;
  #L17b7d6.  v4:= v1[v4] @kind object;
  #L17b7da.  v1:= v1[v2] @kind object;
  #L17b7de.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1$1.a` @type ^`int` := v2;
  #L17b7e2.  v2:= 6I;
  #L17b7e4.  call `mark`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L17b7ea.  call temp:= `invoke`(v3, v6, v4, v1, v5) @signature `Lkotlin/jvm/functions/Function4;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L17b7f0.  v6:= temp @kind object;
  #L17b7f2.  v1:= 7I;
  #L17b7f4.  call `mark`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L17b7fa.  if v6 != v0 then goto L17b800;
  #L17b7fe.  return v0 @kind object;
  #L17b800.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17b804.  return v6 @kind object;
}
