record `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.c` @AccessFlag SYNTHETIC;
  `kotlin.jvm.functions.Function4` `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object, `kotlin.jvm.functions.Function4` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;.<init>:(Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function4;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L17ab94.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.d` @type ^`kotlin.jvm.functions.Function4` := v2 @kind object;
  #L17ab98.  v2:= 3I;
  #L17ab9a.  call `<init>`(v0, v2, v1) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L17aba0.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L17aa74.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L17aa78.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L17aa7c.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L17aa80.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L17aa86.  v1:= temp @kind object;
  #L17aa88.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2` v2 @kind this, `kotlinx.coroutines.flow.FlowCollector` v3 @kind object, `java.lang.Object`[] v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L17aa9c.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2`;
  #L17aaa0.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.d` @type ^`kotlin.jvm.functions.Function4` @kind object;
  #L17aaa4.  call `<init>`(v0, v5, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;.<init>:(Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function4;)V` @kind direct;
  #L17aaaa.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.b` @type ^`java.lang.Object` := v3 @kind object;
  #L17aaae.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.c` @type ^`java.lang.Object` := v4 @kind object;
  #L17aab2.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17aab6.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L17aabc.  v3:= temp @kind object;
  #L17aabe.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L17aad0.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L17aad6.  v0:= temp @kind object;
  #L17aad8.  v1:= v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.a` @type ^`int`;
  #L17aadc.  v2:= 2I;
  #L17aade.  v3:= 1I;
  #L17aae0.  if v1 == 0 then goto L17ab14;
  #L17aae4.  if v1 == v3 then goto L17ab04;
  #L17aae8.  if v1 != v2 then goto L17aaf4;
  #L17aaec.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17aaf2.  goto L17ab7c;
  #L17aaf4.  v8:= new `java.lang.IllegalStateException`;
  #L17aaf8.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L17aafc.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17ab02.  throw v8;
  #L17ab04.  v1:= v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.b` @type ^`java.lang.Object` @kind object;
  #L17ab08.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L17ab0c.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17ab12.  goto L17ab64;
  #L17ab14.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17ab1a.  v8:= v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.b` @type ^`java.lang.Object` @kind object;
  #L17ab1e.  v1:= v8 @kind object;
  #L17ab20.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L17ab24.  v8:= v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.c` @type ^`java.lang.Object` @kind object;
  #L17ab28.  v8:= (`java.lang.Object`[]) v8 @kind object;
  #L17ab2c.  v4:= v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.d` @type ^`kotlin.jvm.functions.Function4` @kind object;
  #L17ab30.  v5:= 0I;
  #L17ab32.  v5:= v8[v5] @kind object;
  #L17ab36.  v6:= v8[v3] @kind object;
  #L17ab3a.  v8:= v8[v2] @kind object;
  #L17ab3e.  v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.b` @type ^`java.lang.Object` := v1 @kind object;
  #L17ab42.  v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.a` @type ^`int` := v3;
  #L17ab46.  v3:= 6I;
  #L17ab48.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L17ab4e.  call temp:= `invoke`(v4, v5, v6, v8, v7) @signature `Lkotlin/jvm/functions/Function4;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L17ab54.  v8:= temp @kind object;
  #L17ab56.  v3:= 7I;
  #L17ab58.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L17ab5e.  if v8 != v0 then goto L17ab64;
  #L17ab62.  return v0 @kind object;
  #L17ab64.  v3:= 0I;
  #L17ab66.  v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.b` @type ^`java.lang.Object` := v3 @kind object;
  #L17ab6a.  v7.`kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1$2.a` @type ^`int` := v2;
  #L17ab6e.  call temp:= `emit`(v1, v8, v7) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L17ab74.  v8:= temp @kind object;
  #L17ab76.  if v8 != v0 then goto L17ab7c;
  #L17ab7a.  return v0 @kind object;
  #L17ab7c.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17ab80.  return v8 @kind object;
}
