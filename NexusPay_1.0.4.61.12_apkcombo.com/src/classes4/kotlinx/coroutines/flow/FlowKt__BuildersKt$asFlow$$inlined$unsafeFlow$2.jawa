record `kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.Flow` @kind interface {
  `kotlin.jvm.functions.Function1` `kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2` v0 @kind this, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2;.<init>:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L170914.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2.a` @type ^`kotlin.jvm.functions.Function1` := v1 @kind object;
  #L170918.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17091e.  return @kind void;
}
procedure `java.lang.Object` `collect`(`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2` v5 @kind this, `kotlinx.coroutines.flow.FlowCollector` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L17083c.  v0:= instanceof @variable v7 @type ^`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1` @kind boolean;
  #L170840.  if v0 == 0 then goto L170862;
  #L170844.  v0:= v7 @kind object;
  #L170846.  v0:= (`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1`) v0 @kind object;
  #L17084a.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1.b` @type ^`int`;
  #L17084e.  v2:= -2147483648I;
  #L170852.  v3:= v1 ^& v2 @kind int;
  #L170856.  if v3 == 0 then goto L170862;
  #L17085a.  v1:= v1 - v2 @kind int;
  #L17085c.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1.b` @type ^`int` := v1;
  #L170860.  goto L17086c;
  #L170862.  v0:= new `kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1`;
  #L170866.  call `<init>`(v0, v5, v7) @signature `Lkotlinx/coroutines/flow/FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L17086c.  v7:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1.a` @type ^`java.lang.Object` @kind object;
  #L170870.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L170876.  v1:= temp @kind object;
  #L170878.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1.b` @type ^`int`;
  #L17087c.  v3:= 2I;
  #L17087e.  v4:= 1I;
  #L170880.  if v2 == 0 then goto L1708b4;
  #L170884.  if v2 == v4 then goto L1708a4;
  #L170888.  if v2 != v3 then goto L170894;
  #L17088c.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L170892.  goto L1708fc;
  #L170894.  v6:= new `java.lang.IllegalStateException`;
  #L170898.  v7:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L17089c.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1708a2.  throw v6;
  #L1708a4.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1.d` @type ^`java.lang.Object` @kind object;
  #L1708a8.  v6:= (`kotlinx.coroutines.flow.FlowCollector`) v6 @kind object;
  #L1708ac.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1708b2.  goto L1708e4;
  #L1708b4.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1708ba.  v7:= v5.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2.a` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L1708be.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1.d` @type ^`java.lang.Object` := v6 @kind object;
  #L1708c2.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1.b` @type ^`int` := v4;
  #L1708c6.  v2:= 6I;
  #L1708c8.  call `mark`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L1708ce.  call temp:= `invoke`(v7, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1708d4.  v7:= temp @kind object;
  #L1708d6.  v2:= 7I;
  #L1708d8.  call `mark`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L1708de.  if v7 != v1 then goto L1708e4;
  #L1708e2.  return v1 @kind object;
  #L1708e4.  v2:= 0I;
  #L1708e6.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1.d` @type ^`java.lang.Object` := v2 @kind object;
  #L1708ea.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$2$1.b` @type ^`int` := v3;
  #L1708ee.  call temp:= `emit`(v6, v7, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L1708f4.  v6:= temp @kind object;
  #L1708f6.  if v6 != v1 then goto L1708fc;
  #L1708fa.  return v1 @kind object;
  #L1708fc.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L170900.  return v6 @kind object;
}
