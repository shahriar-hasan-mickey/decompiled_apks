record `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$a.a` @AccessFlag ;
  `int` `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$a.b` @AccessFlag SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$a` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1$a;.<init>:(Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L178ac8.  v0:= 2I;
  #L178aca.  call `<init>`(v1, v0, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L178ad0.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$a` v0 @kind this, `int` v1 , `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1$a;.a:(ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1789f0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1789f6.  v1:= temp @kind object;
  #L1789f8.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L1789fe.  v1:= temp @kind object;
  #L178a00.  v1:= (`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$a`) v1 @kind object;
  #L178a04.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L178a08.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L178a0e.  v1:= temp @kind object;
  #L178a10.  return v1 @kind object;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$a` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L178a9c.  v0:= new `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$a`;
  #L178aa0.  call `<init>`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1$a;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L178aa6.  v2:= (`java.lang.Number`) v2 @kind object;
  #L178aaa.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L178ab0.  v2:= temp;
  #L178ab2.  v0.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$a.b` @type ^`int` := v2;
  #L178ab6.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L178a24.  v1:= (`java.lang.Number`) v1 @kind object;
  #L178a28.  call temp:= `intValue`(v1) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L178a2e.  v1:= temp;
  #L178a30.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L178a34.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1$a;.a:(ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L178a3a.  v1:= temp @kind object;
  #L178a3c.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L178a50.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L178a56.  v0:= v1.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$a.a` @type ^`int`;
  #L178a5a.  if v0 != 0 then goto L178a7c;
  #L178a5e.  call `throwOnFailure`(v2) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L178a64.  v2:= v1.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1$a.b` @type ^`int`;
  #L178a68.  if v2 <= 0 then goto L178a70;
  #L178a6c.  v2:= 1I;
  #L178a6e.  goto L178a72;
  #L178a70.  v2:= 0I;
  #L178a72.  call temp:= `boxBoolean`(v2) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxBoolean:(Z)Ljava/lang/Boolean;` @kind static;
  #L178a78.  v2:= temp @kind object;
  #L178a7a.  return v2 @kind object;
  #L178a7c.  v2:= new `java.lang.IllegalStateException`;
  #L178a80.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L178a84.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L178a8a.  throw v2;
}
