record `kotlinx.coroutines.flow.FlowKt__MergeKt` @kind class @AccessFlag FINAL_SYNTHETIC {
}
global `int` `@@kotlinx.coroutines.flow.FlowKt__MergeKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L176cc4.  v0:= "kotlinx.coroutines.flow.defaultConcurrency" @kind object;
  #L176cc8.  v1:= 16I;
  #L176ccc.  v2:= 1I;
  #L176cce.  v3:= 2147483647I;
  #L176cd4.  call temp:= `systemProp`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/internal/SystemPropsKt;.systemProp:(Ljava/lang/String;III)I` @kind static;
  #L176cda.  v0:= temp;
  #L176cdc.  `@@kotlinx.coroutines.flow.FlowKt__MergeKt.a` @type ^`int` := v0;
  #L176ce0.  return @kind void;
}
procedure `kotlinx.coroutines.flow.Flow` `a`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.a:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L176ac8.  v0:= new `kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1`;
  #L176acc.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$flatMapConcat$$inlined$map$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L176ad2.  call temp:= `flattenConcat`(v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.flattenConcat:(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L176ad8.  v1:= temp @kind object;
  #L176ada.  return v1 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `b`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.b:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L176aec.  v0:= new `kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapLatest$1`;
  #L176af0.  v1:= 0I;
  #L176af2.  call `<init>`(v0, v3, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$flatMapLatest$1;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L176af8.  call temp:= `transformLatest`(v2, v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.transformLatest:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L176afe.  v2:= temp @kind object;
  #L176b00.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `c`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `int` v2 , `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.c:(Lkotlinx/coroutines/flow/Flow;ILkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L176b3c.  v0:= new `kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapMerge$$inlined$map$1`;
  #L176b40.  call `<init>`(v0, v1, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$flatMapMerge$$inlined$map$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L176b46.  call temp:= `flattenMerge`(v0, v2) @signature `Lkotlinx/coroutines/flow/FlowKt;.flattenMerge:(Lkotlinx/coroutines/flow/Flow;I)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L176b4c.  v1:= temp @kind object;
  #L176b4e.  return v1 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `d`(`kotlinx.coroutines.flow.Flow` v0 @kind object, `int` v1 , `kotlin.jvm.functions.Function2` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.d:(Lkotlinx/coroutines/flow/Flow;ILkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L176b14.  v3:= v3 ^& 1;
  #L176b18.  if v3 == 0 then goto L176b20;
  #L176b1c.  v1:= `@@kotlinx.coroutines.flow.FlowKt__MergeKt.a` @type ^`int`;
  #L176b20.  call temp:= `flatMapMerge`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt;.flatMapMerge:(Lkotlinx/coroutines/flow/Flow;ILkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L176b26.  v0:= temp @kind object;
  #L176b28.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `e`(`kotlinx.coroutines.flow.Flow` v1 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.e:(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L176b60.  v0:= new `kotlinx.coroutines.flow.FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1`;
  #L176b64.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$flattenConcat$$inlined$unsafeFlow$1;.<init>:(Lkotlinx/coroutines/flow/Flow;)V` @kind direct;
  #L176b6a.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `f`(`kotlinx.coroutines.flow.Flow` v9 @kind object, `int` v10 ) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.f:(Lkotlinx/coroutines/flow/Flow;I)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L176ba4.  v0:= 1I;
  #L176ba6.  if v10 <= 0 then goto L176bae;
  #L176baa.  v1:= 1I;
  #L176bac.  goto L176bb0;
  #L176bae.  v1:= 0I;
  #L176bb0.  if v1 == 0 then goto L176be2;
  #L176bb4.  if v10 != v0 then goto L176bc2;
  #L176bb8.  call temp:= `flattenConcat`(v9) @signature `Lkotlinx/coroutines/flow/FlowKt;.flattenConcat:(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L176bbe.  v9:= temp @kind object;
  #L176bc0.  goto L176be0;
  #L176bc2.  v8:= new `kotlinx.coroutines.flow.internal.ChannelFlowMerge`;
  #L176bc6.  v3:= 0I;
  #L176bc8.  v4:= 0I;
  #L176bca.  v5:= 0I;
  #L176bcc.  v6:= 28I;
  #L176bd0.  v7:= 0I;
  #L176bd2.  v0:= v8 @kind object;
  #L176bd4.  v1:= v9 @kind object;
  #L176bd6.  v2:= v10;
  #L176bd8.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowMerge;.<init>:(Lkotlinx/coroutines/flow/Flow;ILkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L176bde.  v9:= v8 @kind object;
  #L176be0.  return v9 @kind object;
  #L176be2.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L176be8.  v9:= temp @kind object;
  #L176bea.  v10:= "Expected positive concurrency level, but had " @kind object;
  #L176bee.  call temp:= `stringPlus`(v10, v9) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L176bf4.  v9:= temp @kind object;
  #L176bf6.  v10:= new `java.lang.IllegalArgumentException`;
  #L176bfa.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L176c00.  v9:= temp @kind object;
  #L176c02.  call `<init>`(v10, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L176c08.  throw v10;
}
procedure `kotlinx.coroutines.flow.Flow` `g`(`kotlinx.coroutines.flow.Flow` v0 @kind object, `int` v1 , `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.g:(Lkotlinx/coroutines/flow/Flow;IILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L176b7c.  v2:= v2 ^& 1;
  #L176b80.  if v2 == 0 then goto L176b88;
  #L176b84.  v1:= `@@kotlinx.coroutines.flow.FlowKt__MergeKt.a` @type ^`int`;
  #L176b88.  call temp:= `flattenMerge`(v0, v1) @signature `Lkotlinx/coroutines/flow/FlowKt;.flattenMerge:(Lkotlinx/coroutines/flow/Flow;I)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L176b8e.  v0:= temp @kind object;
  #L176b90.  return v0 @kind object;
}
procedure `int` `h`() @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.h:()I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L176ab0.  v0:= `@@kotlinx.coroutines.flow.FlowKt__MergeKt.a` @type ^`int`;
  #L176ab4.  return v0;
}
procedure `void` `i`() @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.i:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L176cf4.  return @kind void;
}
procedure `kotlinx.coroutines.flow.Flow` `j`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.j:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L176c1c.  v0:= new `kotlinx.coroutines.flow.FlowKt__MergeKt$a`;
  #L176c20.  v1:= 0I;
  #L176c22.  call `<init>`(v0, v3, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$a;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L176c28.  call temp:= `transformLatest`(v2, v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.transformLatest:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L176c2e.  v2:= temp @kind object;
  #L176c30.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `k`(`java.lang.Iterable` v8 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.k:(Ljava/lang/Iterable;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L176c44.  v7:= new `kotlinx.coroutines.flow.internal.ChannelLimitedFlowMerge`;
  #L176c48.  v2:= 0I;
  #L176c4a.  v3:= 0I;
  #L176c4c.  v4:= 0I;
  #L176c4e.  v5:= 14I;
  #L176c52.  v6:= 0I;
  #L176c54.  v0:= v7 @kind object;
  #L176c56.  v1:= v8 @kind object;
  #L176c58.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlinx/coroutines/flow/internal/ChannelLimitedFlowMerge;.<init>:(Ljava/lang/Iterable;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L176c5e.  return v7 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `l`(`kotlinx.coroutines.flow.Flow`[] v0 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.l:([Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L176c70.  call temp:= `asIterable`(v0) @signature `Lkotlin/collections/ArraysKt;.asIterable:([Ljava/lang/Object;)Ljava/lang/Iterable;` @kind static;
  #L176c76.  v0:= temp @kind object;
  #L176c78.  call temp:= `merge`(v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.merge:(Ljava/lang/Iterable;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L176c7e.  v0:= temp @kind object;
  #L176c80.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `m`(`kotlinx.coroutines.flow.Flow` v9 @kind object, `kotlin.jvm.functions.Function3` v10 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt;.m:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L176c94.  v8:= new `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest`;
  #L176c98.  v3:= 0I;
  #L176c9a.  v4:= 0I;
  #L176c9c.  v5:= 0I;
  #L176c9e.  v6:= 28I;
  #L176ca2.  v7:= 0I;
  #L176ca4.  v0:= v8 @kind object;
  #L176ca6.  v1:= v10 @kind object;
  #L176ca8.  v2:= v9 @kind object;
  #L176caa.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L176cb0.  return v8 @kind object;
}
