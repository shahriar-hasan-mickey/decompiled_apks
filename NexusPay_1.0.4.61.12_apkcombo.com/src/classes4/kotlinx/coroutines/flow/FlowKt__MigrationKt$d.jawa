record `kotlinx.coroutines.flow.FlowKt__MigrationKt$d` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__MigrationKt$d.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__MigrationKt$d.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__MigrationKt$d.c` @AccessFlag SYNTHETIC;
  `kotlin.jvm.functions.Function1` `kotlinx.coroutines.flow.FlowKt__MigrationKt$d.d` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__MigrationKt$d.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$d` v0 @kind this, `kotlin.jvm.functions.Function1` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$d;.<init>:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L177048.  v0.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.d` @type ^`kotlin.jvm.functions.Function1` := v1 @kind object;
  #L17704c.  v0.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.e` @type ^`java.lang.Object` := v2 @kind object;
  #L177050.  v1:= 3I;
  #L177052.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L177058.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$d` v3 @kind this, `kotlinx.coroutines.flow.FlowCollector` v4 @kind object, `java.lang.Throwable` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$d;.a:(Lkotlinx/coroutines/flow/FlowCollector;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L176f7c.  v0:= new `kotlinx.coroutines.flow.FlowKt__MigrationKt$d`;
  #L176f80.  v1:= v3.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.d` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L176f84.  v2:= v3.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.e` @type ^`java.lang.Object` @kind object;
  #L176f88.  call `<init>`(v0, v1, v2, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$d;.<init>:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L176f8e.  v0.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.b` @type ^`java.lang.Object` := v4 @kind object;
  #L176f92.  v0.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.c` @type ^`java.lang.Object` := v5 @kind object;
  #L176f96.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L176f9a.  call temp:= `invokeSuspend`(v0, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$d;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L176fa0.  v4:= temp @kind object;
  #L176fa2.  return v4 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$d` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$d;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L176f54.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L176f58.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L176f5c.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L176f60.  call temp:= `a`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$d;.a:(Lkotlinx/coroutines/flow/FlowCollector;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L176f66.  v1:= temp @kind object;
  #L176f68.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$d` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$d;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L176fb4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L176fba.  v0:= temp @kind object;
  #L176fbc.  v1:= v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.a` @type ^`int`;
  #L176fc0.  v2:= 1I;
  #L176fc2.  if v1 == 0 then goto L176fe2;
  #L176fc6.  if v1 != v2 then goto L176fd2;
  #L176fca.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L176fd0.  goto L177030;
  #L176fd2.  v5:= new `java.lang.IllegalStateException`;
  #L176fd6.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L176fda.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L176fe0.  throw v5;
  #L176fe2.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L176fe8.  v5:= v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.b` @type ^`java.lang.Object` @kind object;
  #L176fec.  v5:= (`kotlinx.coroutines.flow.FlowCollector`) v5 @kind object;
  #L176ff0.  v1:= v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.c` @type ^`java.lang.Object` @kind object;
  #L176ff4.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L176ff8.  v3:= v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.d` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L176ffc.  call temp:= `invoke`(v3, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L177002.  v3:= temp @kind object;
  #L177004.  v3:= (`java.lang.Boolean`) v3 @kind object;
  #L177008.  call temp:= `booleanValue`(v3) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L17700e.  v3:= temp;
  #L177010.  if v3 == 0 then goto L177036;
  #L177014.  v1:= v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.e` @type ^`java.lang.Object` @kind object;
  #L177018.  v3:= 0I;
  #L17701a.  v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.b` @type ^`java.lang.Object` := v3 @kind object;
  #L17701e.  v4.`kotlinx.coroutines.flow.FlowKt__MigrationKt$d.a` @type ^`int` := v2;
  #L177022.  call temp:= `emit`(v5, v1, v4) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L177028.  v5:= temp @kind object;
  #L17702a.  if v5 != v0 then goto L177030;
  #L17702e.  return v0 @kind object;
  #L177030.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L177034.  return v5 @kind object;
  #L177036.  throw v1;
}
