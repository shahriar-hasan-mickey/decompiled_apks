record `kotlinx.coroutines.flow.l` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.SharingStarted` @kind interface {
  `long` `kotlinx.coroutines.flow.l.a` @AccessFlag PRIVATE_FINAL;
  `long` `kotlinx.coroutines.flow.l.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.l` v4 @kind this, `long` v5 , `long` v7 ) @signature `Lkotlinx/coroutines/flow/l;.<init>:(JJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1806b4.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1806ba.  v4.`kotlinx.coroutines.flow.l.a` @type ^`long` := v5 @kind wide;
  #L1806be.  v4.`kotlinx.coroutines.flow.l.b` @type ^`long` := v7 @kind wide;
  #L1806c2.  v7:= 1I;
  #L1806c4.  v8:= 0I;
  #L1806c6.  v0:= 0L;
  #L1806ca.  v2:= lcmp(v5, v0);
  #L1806ce.  if v2 < 0 then goto L1806d6;
  #L1806d2.  v5:= 1I;
  #L1806d4.  goto L1806d8;
  #L1806d6.  v5:= 0I;
  #L1806d8.  v6:= " ms) cannot be negative" @kind object;
  #L1806dc.  if v5 == 0 then goto L180736;
  #L1806e0.  v2:= v4.`kotlinx.coroutines.flow.l.b` @type ^`long` @kind wide;
  #L1806e4.  v5:= lcmp(v2, v0);
  #L1806e8.  if v5 < 0 then goto L1806ee;
  #L1806ec.  goto L1806f0;
  #L1806ee.  v7:= 0I;
  #L1806f0.  if v7 == 0 then goto L1806f6;
  #L1806f4.  return @kind void;
  #L1806f6.  v5:= new `java.lang.StringBuilder`;
  #L1806fa.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L180700.  v7:= "replayExpiration(" @kind object;
  #L180704.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18070a.  v7:= v4.`kotlinx.coroutines.flow.l.b` @type ^`long` @kind wide;
  #L18070e.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L180714.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18071a.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L180720.  v5:= temp @kind object;
  #L180722.  v6:= new `java.lang.IllegalArgumentException`;
  #L180726.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L18072c.  v5:= temp @kind object;
  #L18072e.  call `<init>`(v6, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L180734.  throw v6;
  #L180736.  v5:= new `java.lang.StringBuilder`;
  #L18073a.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L180740.  v7:= "stopTimeout(" @kind object;
  #L180744.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18074a.  v7:= v4.`kotlinx.coroutines.flow.l.a` @type ^`long` @kind wide;
  #L18074e.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L180754.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18075a.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L180760.  v5:= temp @kind object;
  #L180762.  v6:= new `java.lang.IllegalArgumentException`;
  #L180766.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L18076c.  v5:= temp @kind object;
  #L18076e.  call `<init>`(v6, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L180774.  throw v6;
}
procedure `long` `a`(`kotlinx.coroutines.flow.l` v2 @kind object) @signature `Lkotlinx/coroutines/flow/l;.a:(Lkotlinx/coroutines/flow/l;)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L180684.  v0:= v2.`kotlinx.coroutines.flow.l.b` @type ^`long` @kind wide;
  #L180688.  return v0 @kind wide;
}
procedure `long` `b`(`kotlinx.coroutines.flow.l` v2 @kind object) @signature `Lkotlinx/coroutines/flow/l;.b:(Lkotlinx/coroutines/flow/l;)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L18069c.  v0:= v2.`kotlinx.coroutines.flow.l.a` @type ^`long` @kind wide;
  #L1806a0.  return v0 @kind wide;
}
procedure `kotlinx.coroutines.flow.Flow` `command`(`kotlinx.coroutines.flow.l` v2 @kind this, `kotlinx.coroutines.flow.StateFlow` v3 @kind object) @signature `Lkotlinx/coroutines/flow/l;.command:(Lkotlinx/coroutines/flow/StateFlow;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L180644.  v0:= new `kotlinx.coroutines.flow.l$a`;
  #L180648.  v1:= 0I;
  #L18064a.  call `<init>`(v0, v2, v1) @signature `Lkotlinx/coroutines/flow/l$a;.<init>:(Lkotlinx/coroutines/flow/l;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L180650.  call temp:= `transformLatest`(v3, v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.transformLatest:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L180656.  v3:= temp @kind object;
  #L180658.  v0:= new `kotlinx.coroutines.flow.l$b`;
  #L18065c.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/flow/l$b;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L180662.  call temp:= `dropWhile`(v3, v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.dropWhile:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L180668.  v3:= temp @kind object;
  #L18066a.  call temp:= `distinctUntilChanged`(v3) @signature `Lkotlinx/coroutines/flow/FlowKt;.distinctUntilChanged:(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L180670.  v3:= temp @kind object;
  #L180672.  return v3 @kind object;
}
procedure `boolean` `equals`(`kotlinx.coroutines.flow.l` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/l;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1804d8.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.l` @kind boolean;
  #L1804dc.  if v0 == 0 then goto L180508;
  #L1804e0.  v0:= v5.`kotlinx.coroutines.flow.l.a` @type ^`long` @kind wide;
  #L1804e4.  v6:= (`kotlinx.coroutines.flow.l`) v6 @kind object;
  #L1804e8.  v2:= v6.`kotlinx.coroutines.flow.l.a` @type ^`long` @kind wide;
  #L1804ec.  v4:= lcmp(v0, v2);
  #L1804f0.  if v4 != 0 then goto L180508;
  #L1804f4.  v0:= v5.`kotlinx.coroutines.flow.l.b` @type ^`long` @kind wide;
  #L1804f8.  v2:= v6.`kotlinx.coroutines.flow.l.b` @type ^`long` @kind wide;
  #L1804fc.  v6:= lcmp(v0, v2);
  #L180500.  if v6 != 0 then goto L180508;
  #L180504.  v6:= 1I;
  #L180506.  goto L18050a;
  #L180508.  v6:= 0I;
  #L18050a.  return v6;
}
procedure `int` `hashCode`(`kotlinx.coroutines.flow.l` v3 @kind this) @signature `Lkotlinx/coroutines/flow/l;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L18051c.  v0:= v3.`kotlinx.coroutines.flow.l.a` @type ^`long` @kind wide;
  #L180520.  call temp:= `a`(v0) @signature `Lb;.a:(J)I` @kind static;
  #L180526.  v0:= temp;
  #L180528.  v0:= v0 * 31;
  #L18052c.  v1:= v3.`kotlinx.coroutines.flow.l.b` @type ^`long` @kind wide;
  #L180530.  call temp:= `a`(v1) @signature `Lb;.a:(J)I` @kind static;
  #L180536.  v1:= temp;
  #L180538.  v0:= v0 + v1 @kind int;
  #L18053a.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.flow.l` v11 @kind this) @signature `Lkotlinx/coroutines/flow/l;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L18054c.  v0:= 2I;
  #L18054e.  call temp:= `createListBuilder`(v0) @signature `Lkotlin/collections/CollectionsKt;.createListBuilder:(I)Ljava/util/List;` @kind static;
  #L180554.  v0:= temp @kind object;
  #L180556.  v1:= v11.`kotlinx.coroutines.flow.l.a` @type ^`long` @kind wide;
  #L18055a.  v3:= "ms" @kind object;
  #L18055e.  v4:= 0L;
  #L180562.  v6:= lcmp(v1, v4);
  #L180566.  if v6 <= 0 then goto L18059c;
  #L18056a.  v1:= new `java.lang.StringBuilder`;
  #L18056e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L180574.  v2:= "stopTimeout=" @kind object;
  #L180578.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18057e.  v4:= v11.`kotlinx.coroutines.flow.l.a` @type ^`long` @kind wide;
  #L180582.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L180588.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18058e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L180594.  v1:= temp @kind object;
  #L180596.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L18059c.  v1:= v11.`kotlinx.coroutines.flow.l.b` @type ^`long` @kind wide;
  #L1805a0.  v4:= 9223372036854775807L;
  #L1805aa.  v6:= lcmp(v1, v4);
  #L1805ae.  if v6 >= 0 then goto L1805e4;
  #L1805b2.  v1:= new `java.lang.StringBuilder`;
  #L1805b6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1805bc.  v2:= "replayExpiration=" @kind object;
  #L1805c0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1805c6.  v4:= v11.`kotlinx.coroutines.flow.l.b` @type ^`long` @kind wide;
  #L1805ca.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1805d0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1805d6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1805dc.  v1:= temp @kind object;
  #L1805de.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1805e4.  call temp:= `build`(v0) @signature `Lkotlin/collections/CollectionsKt;.build:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1805ea.  v2:= temp @kind object;
  #L1805ec.  v0:= new `java.lang.StringBuilder`;
  #L1805f0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1805f6.  v1:= "SharingStarted.WhileSubscribed(" @kind object;
  #L1805fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L180600.  v3:= 0I;
  #L180602.  v4:= 0I;
  #L180604.  v5:= 0I;
  #L180606.  v6:= 0I;
  #L180608.  v7:= 0I;
  #L18060a.  v8:= 0I;
  #L18060c.  v9:= 63I;
  #L180610.  v10:= 0I;
  #L180612.  call temp:= `joinToString$default`(v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lkotlin/collections/CollectionsKt;.joinToString$default:(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L180618.  v1:= temp @kind object;
  #L18061a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L180620.  v1:= 41I;
  #L180624.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L18062a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L180630.  v0:= temp @kind object;
  #L180632.  return v0 @kind object;
}
