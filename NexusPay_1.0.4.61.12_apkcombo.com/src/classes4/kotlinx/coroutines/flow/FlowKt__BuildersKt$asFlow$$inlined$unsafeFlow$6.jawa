record `kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.Flow` @kind interface {
  `java.lang.Object`[] `kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6;.<init>:([Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L170e00.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6.a` @type ^`java.lang.Object`[] := v1 @kind object;
  #L170e04.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L170e0a.  return @kind void;
}
procedure `java.lang.Object` `collect`(`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6` v6 @kind this, `kotlinx.coroutines.flow.FlowCollector` v7 @kind object, `kotlin.coroutines.Continuation` v8 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L170d2c.  v0:= instanceof @variable v8 @type ^`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1` @kind boolean;
  #L170d30.  if v0 == 0 then goto L170d52;
  #L170d34.  v0:= v8 @kind object;
  #L170d36.  v0:= (`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1`) v0 @kind object;
  #L170d3a.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1.b` @type ^`int`;
  #L170d3e.  v2:= -2147483648I;
  #L170d42.  v3:= v1 ^& v2 @kind int;
  #L170d46.  if v3 == 0 then goto L170d52;
  #L170d4a.  v1:= v1 - v2 @kind int;
  #L170d4c.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1.b` @type ^`int` := v1;
  #L170d50.  goto L170d5c;
  #L170d52.  v0:= new `kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1`;
  #L170d56.  call `<init>`(v0, v6, v8) @signature `Lkotlinx/coroutines/flow/FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L170d5c.  v8:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1.a` @type ^`java.lang.Object` @kind object;
  #L170d60.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L170d66.  v1:= temp @kind object;
  #L170d68.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1.b` @type ^`int`;
  #L170d6c.  v3:= 1I;
  #L170d6e.  if v2 == 0 then goto L170da8;
  #L170d72.  if v2 != v3 then goto L170d98;
  #L170d76.  v7:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1.g` @type ^`int`;
  #L170d7a.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1.f` @type ^`int`;
  #L170d7e.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1.e` @type ^`java.lang.Object` @kind object;
  #L170d82.  v4:= (`java.lang.Object`[]) v4 @kind object;
  #L170d86.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1.d` @type ^`java.lang.Object` @kind object;
  #L170d8a.  v5:= (`kotlinx.coroutines.flow.FlowCollector`) v5 @kind object;
  #L170d8e.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L170d94.  v8:= v5 @kind object;
  #L170d96.  goto L170de6;
  #L170d98.  v7:= new `java.lang.IllegalStateException`;
  #L170d9c.  v8:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L170da0.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L170da6.  throw v7;
  #L170da8.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L170dae.  v8:= v6.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6.a` @type ^`java.lang.Object`[] @kind object;
  #L170db2.  v2:= length @variable v8;
  #L170db4.  v4:= 0I;
  #L170db6.  v4:= v8 @kind object;
  #L170db8.  v8:= v7 @kind object;
  #L170dba.  v7:= 0I;
  #L170dbc.  if v7 >= v2 then goto L170dea;
  #L170dc0.  v5:= v4[v7] @kind object;
  #L170dc4.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1.d` @type ^`java.lang.Object` := v8 @kind object;
  #L170dc8.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1.e` @type ^`java.lang.Object` := v4 @kind object;
  #L170dcc.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1.f` @type ^`int` := v2;
  #L170dd0.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1.g` @type ^`int` := v7;
  #L170dd4.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$6$1.b` @type ^`int` := v3;
  #L170dd8.  call temp:= `emit`(v8, v5, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L170dde.  v5:= temp @kind object;
  #L170de0.  if v5 != v1 then goto L170de6;
  #L170de4.  return v1 @kind object;
  #L170de6.  v7:= v7 + v3 @kind int;
  #L170de8.  goto L170dbc;
  #L170dea.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L170dee.  return v7 @kind object;
}
