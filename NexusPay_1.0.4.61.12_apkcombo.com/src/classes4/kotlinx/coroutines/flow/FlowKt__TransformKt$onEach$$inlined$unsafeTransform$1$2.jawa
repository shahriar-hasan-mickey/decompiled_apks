record `kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L17a2e8.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2.a` @type ^`kotlinx.coroutines.flow.FlowCollector` := v1 @kind object;
  #L17a2ec.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2.b` @type ^`kotlin.jvm.functions.Function2` := v2 @kind object;
  #L17a2f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17a2f6.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2` v5 @kind this, `java.lang.Object` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L17a1fc.  v0:= instanceof @variable v7 @type ^`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1` @kind boolean;
  #L17a200.  if v0 == 0 then goto L17a222;
  #L17a204.  v0:= v7 @kind object;
  #L17a206.  v0:= (`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1`) v0 @kind object;
  #L17a20a.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.b` @type ^`int`;
  #L17a20e.  v2:= -2147483648I;
  #L17a212.  v3:= v1 ^& v2 @kind int;
  #L17a216.  if v3 == 0 then goto L17a222;
  #L17a21a.  v1:= v1 - v2 @kind int;
  #L17a21c.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.b` @type ^`int` := v1;
  #L17a220.  goto L17a22c;
  #L17a222.  v0:= new `kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1`;
  #L17a226.  call `<init>`(v0, v5, v7) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L17a22c.  v7:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.a` @type ^`java.lang.Object` @kind object;
  #L17a230.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L17a236.  v1:= temp @kind object;
  #L17a238.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.b` @type ^`int`;
  #L17a23c.  v3:= 2I;
  #L17a23e.  v4:= 1I;
  #L17a240.  if v2 == 0 then goto L17a278;
  #L17a244.  if v2 == v4 then goto L17a264;
  #L17a248.  if v2 != v3 then goto L17a254;
  #L17a24c.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17a252.  goto L17a2d0;
  #L17a254.  v6:= new `java.lang.IllegalStateException`;
  #L17a258.  v7:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L17a25c.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17a262.  throw v6;
  #L17a264.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.e` @type ^`java.lang.Object` @kind object;
  #L17a268.  v6:= (`kotlinx.coroutines.flow.FlowCollector`) v6 @kind object;
  #L17a26c.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.d` @type ^`java.lang.Object` @kind object;
  #L17a270.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17a276.  goto L17a2b4;
  #L17a278.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17a27e.  v7:= v5.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2.a` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L17a282.  v2:= v5.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L17a286.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.d` @type ^`java.lang.Object` := v6 @kind object;
  #L17a28a.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.e` @type ^`java.lang.Object` := v7 @kind object;
  #L17a28e.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.b` @type ^`int` := v4;
  #L17a292.  v4:= 6I;
  #L17a294.  call `mark`(v4) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L17a29a.  call temp:= `invoke`(v2, v6, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L17a2a0.  v2:= temp @kind object;
  #L17a2a2.  v4:= 7I;
  #L17a2a4.  call `mark`(v4) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L17a2aa.  if v2 != v1 then goto L17a2b0;
  #L17a2ae.  return v1 @kind object;
  #L17a2b0.  v2:= v6 @kind object;
  #L17a2b2.  v6:= v7 @kind object;
  #L17a2b4.  v7:= 0I;
  #L17a2b6.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.d` @type ^`java.lang.Object` := v7 @kind object;
  #L17a2ba.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.e` @type ^`java.lang.Object` := v7 @kind object;
  #L17a2be.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1$2$1.b` @type ^`int` := v3;
  #L17a2c2.  call temp:= `emit`(v6, v2, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L17a2c8.  v6:= temp @kind object;
  #L17a2ca.  if v6 != v1 then goto L17a2d0;
  #L17a2ce.  return v1 @kind object;
  #L17a2d0.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17a2d4.  return v6 @kind object;
}
