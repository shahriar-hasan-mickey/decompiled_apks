record `kotlinx.coroutines.flow.FlowKt__ShareKt` @kind class @AccessFlag FINAL_SYNTHETIC {
}
procedure `kotlinx.coroutines.flow.SharedFlow` `a`(`kotlinx.coroutines.flow.MutableSharedFlow` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt;.a:(Lkotlinx/coroutines/flow/MutableSharedFlow;)Lkotlinx/coroutines/flow/SharedFlow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1790c0.  v0:= new `kotlinx.coroutines.flow.f`;
  #L1790c4.  v1:= 0I;
  #L1790c6.  call `<init>`(v0, v2, v1) @signature `Lkotlinx/coroutines/flow/f;.<init>:(Lkotlinx/coroutines/flow/SharedFlow;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L1790cc.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.StateFlow` `b`(`kotlinx.coroutines.flow.MutableStateFlow` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt;.b:(Lkotlinx/coroutines/flow/MutableStateFlow;)Lkotlinx/coroutines/flow/StateFlow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L179240.  v0:= new `kotlinx.coroutines.flow.g`;
  #L179244.  v1:= 0I;
  #L179246.  call `<init>`(v0, v2, v1) @signature `Lkotlinx/coroutines/flow/g;.<init>:(Lkotlinx/coroutines/flow/StateFlow;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L17924c.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.j` `c`(`kotlinx.coroutines.flow.Flow` v7 @kind object, `int` v8 ) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt;.c:(Lkotlinx/coroutines/flow/Flow;I)Lkotlinx/coroutines/flow/j;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L179170.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L179176.  v0:= temp;
  #L179178.  v1:= 1I;
  #L17917a.  v2:= 0I;
  #L17917c.  if v0 == 0 then goto L17919c;
  #L179180.  if v8 < 0 then goto L179188;
  #L179184.  v0:= 1I;
  #L179186.  goto L17918a;
  #L179188.  v0:= 0I;
  #L17918a.  if v0 == 0 then goto L179190;
  #L17918e.  goto L17919c;
  #L179190.  v7:= new `java.lang.AssertionError`;
  #L179194.  call `<init>`(v7) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L17919a.  throw v7;
  #L17919c.  v0:= `@@kotlinx.coroutines.channels.Channel.Factory` @type ^`kotlinx.coroutines.channels.Channel$Factory` @kind object;
  #L1791a0.  call temp:= `getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/channels/Channel$Factory;.getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core:()I` @kind virtual;
  #L1791a6.  v0:= temp;
  #L1791a8.  call temp:= `coerceAtLeast`(v8, v0) @signature `Lkotlin/ranges/RangesKt;.coerceAtLeast:(II)I` @kind static;
  #L1791ae.  v0:= temp;
  #L1791b0.  v0:= v0 - v8 @kind int;
  #L1791b2.  v3:= instanceof @variable v7 @type ^`kotlinx.coroutines.flow.internal.ChannelFlow` @kind boolean;
  #L1791b6.  if v3 == 0 then goto L17921a;
  #L1791ba.  v3:= v7 @kind object;
  #L1791bc.  v3:= (`kotlinx.coroutines.flow.internal.ChannelFlow`) v3 @kind object;
  #L1791c0.  call temp:= `dropChannelOperators`(v3) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlow;.dropChannelOperators:()Lkotlinx/coroutines/flow/Flow;` @kind virtual;
  #L1791c6.  v4:= temp @kind object;
  #L1791c8.  if v4 == 0 then goto L17921a;
  #L1791cc.  v7:= new `kotlinx.coroutines.flow.j`;
  #L1791d0.  v5:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow.capacity` @type ^`int`;
  #L1791d4.  v6:= -3I;
  #L1791d6.  if v5 == v6 then goto L1791e8;
  #L1791da.  v6:= -2I;
  #L1791dc.  if v5 == v6 then goto L1791e8;
  #L1791e0.  if v5 == 0 then goto L1791e8;
  #L1791e4.  v1:= v5;
  #L1791e6.  goto L17920a;
  #L1791e8.  v5:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow.onBufferOverflow` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L1791ec.  v6:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L1791f0.  if v5 != v6 then goto L179202;
  #L1791f4.  v8:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow.capacity` @type ^`int`;
  #L1791f8.  if v8 != 0 then goto L1791fe;
  #L1791fc.  goto L179208;
  #L1791fe.  v1:= v0;
  #L179200.  goto L17920a;
  #L179202.  if v8 != 0 then goto L179208;
  #L179206.  goto L17920a;
  #L179208.  v1:= 0I;
  #L17920a.  v8:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow.onBufferOverflow` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L17920e.  v0:= v3.`kotlinx.coroutines.flow.internal.ChannelFlow.context` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L179212.  call `<init>`(v7, v4, v1, v8, v0) @signature `Lkotlinx/coroutines/flow/j;.<init>:(Lkotlinx/coroutines/flow/Flow;ILkotlinx/coroutines/channels/BufferOverflow;Lkotlin/coroutines/CoroutineContext;)V` @kind direct;
  #L179218.  return v7 @kind object;
  #L17921a.  v8:= new `kotlinx.coroutines.flow.j`;
  #L17921e.  v1:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L179222.  v2:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L179226.  call `<init>`(v8, v7, v0, v1, v2) @signature `Lkotlinx/coroutines/flow/j;.<init>:(Lkotlinx/coroutines/flow/Flow;ILkotlinx/coroutines/channels/BufferOverflow;Lkotlin/coroutines/CoroutineContext;)V` @kind direct;
  #L17922c.  return v8 @kind object;
}
procedure `kotlinx.coroutines.Job` `d`(`kotlinx.coroutines.CoroutineScope` v7 @kind object, `kotlin.coroutines.CoroutineContext` v8 @kind object, `kotlinx.coroutines.flow.Flow` v9 @kind object, `kotlinx.coroutines.flow.MutableSharedFlow` v10 @kind object, `kotlinx.coroutines.flow.SharingStarted` v11 @kind object, `java.lang.Object` v12 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt;.d:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/MutableSharedFlow;Lkotlinx/coroutines/flow/SharingStarted;Ljava/lang/Object;)Lkotlinx/coroutines/Job;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L179084.  v6:= new `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharing$1`;
  #L179088.  v5:= 0I;
  #L17908a.  v0:= v6 @kind object;
  #L17908c.  v1:= v11 @kind object;
  #L17908e.  v2:= v9 @kind object;
  #L179090.  v3:= v10 @kind object;
  #L179092.  v4:= v12 @kind object;
  #L179094.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharing$1;.<init>:(Lkotlinx/coroutines/flow/SharingStarted;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/MutableSharedFlow;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L17909a.  v2:= 0I;
  #L17909c.  v4:= 2I;
  #L17909e.  v0:= v7 @kind object;
  #L1790a0.  v1:= v8 @kind object;
  #L1790a2.  v3:= v6 @kind object;
  #L1790a4.  call temp:= `launch$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/BuildersKt;.launch$default:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;` @kind static;
  #L1790aa.  v7:= temp @kind object;
  #L1790ac.  return v7 @kind object;
}
procedure `void` `e`(`kotlinx.coroutines.CoroutineScope` v6 @kind object, `kotlin.coroutines.CoroutineContext` v7 @kind object, `kotlinx.coroutines.flow.Flow` v8 @kind object, `kotlinx.coroutines.CompletableDeferred` v9 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt;.e:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CompletableDeferred;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1792a8.  v3:= new `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1`;
  #L1792ac.  v0:= 0I;
  #L1792ae.  call `<init>`(v3, v8, v9, v0) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharingDeferred$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CompletableDeferred;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1792b4.  v2:= 0I;
  #L1792b6.  v4:= 2I;
  #L1792b8.  v5:= 0I;
  #L1792ba.  v0:= v6 @kind object;
  #L1792bc.  v1:= v7 @kind object;
  #L1792be.  call temp:= `launch$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/BuildersKt;.launch$default:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;` @kind static;
  #L1792c4.  return @kind void;
}
procedure `kotlinx.coroutines.flow.SharedFlow` `f`(`kotlinx.coroutines.flow.SharedFlow` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt;.f:(Lkotlinx/coroutines/flow/SharedFlow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/SharedFlow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1790e0.  v0:= new `kotlinx.coroutines.flow.o`;
  #L1790e4.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/o;.<init>:(Lkotlinx/coroutines/flow/SharedFlow;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L1790ea.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.SharedFlow` `g`(`kotlinx.coroutines.flow.Flow` v8 @kind object, `kotlinx.coroutines.CoroutineScope` v9 @kind object, `kotlinx.coroutines.flow.SharingStarted` v10 @kind object, `int` v11 ) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt;.g:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/SharingStarted;I)Lkotlinx/coroutines/flow/SharedFlow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L179120.  call temp:= `c`(v8, v11) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt;.c:(Lkotlinx/coroutines/flow/Flow;I)Lkotlinx/coroutines/flow/j;` @kind static;
  #L179126.  v8:= temp @kind object;
  #L179128.  v0:= v8.`kotlinx.coroutines.flow.j.b` @type ^`int`;
  #L17912c.  v1:= v8.`kotlinx.coroutines.flow.j.c` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L179130.  call temp:= `MutableSharedFlow`(v11, v0, v1) @signature `Lkotlinx/coroutines/flow/SharedFlowKt;.MutableSharedFlow:(IILkotlinx/coroutines/channels/BufferOverflow;)Lkotlinx/coroutines/flow/MutableSharedFlow;` @kind static;
  #L179136.  v11:= temp @kind object;
  #L179138.  v3:= v8.`kotlinx.coroutines.flow.j.d` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L17913c.  v4:= v8.`kotlinx.coroutines.flow.j.a` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L179140.  v7:= `@@kotlinx.coroutines.flow.SharedFlowKt.NO_VALUE` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L179144.  v2:= v9 @kind object;
  #L179146.  v5:= v11 @kind object;
  #L179148.  v6:= v10 @kind object;
  #L17914a.  call temp:= `d`(v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt;.d:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/MutableSharedFlow;Lkotlinx/coroutines/flow/SharingStarted;Ljava/lang/Object;)Lkotlinx/coroutines/Job;` @kind static;
  #L179150.  v8:= temp @kind object;
  #L179152.  v9:= new `kotlinx.coroutines.flow.f`;
  #L179156.  call `<init>`(v9, v11, v8) @signature `Lkotlinx/coroutines/flow/f;.<init>:(Lkotlinx/coroutines/flow/SharedFlow;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L17915c.  return v9 @kind object;
}
procedure `kotlinx.coroutines.flow.SharedFlow` `h`(`kotlinx.coroutines.flow.Flow` v0 @kind object, `kotlinx.coroutines.CoroutineScope` v1 @kind object, `kotlinx.coroutines.flow.SharingStarted` v2 @kind object, `int` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt;.h:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/SharingStarted;IILjava/lang/Object;)Lkotlinx/coroutines/flow/SharedFlow;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1790fc.  v4:= v4 ^& 4;
  #L179100.  if v4 == 0 then goto L179106;
  #L179104.  v3:= 0I;
  #L179106.  call temp:= `shareIn`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt;.shareIn:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/SharingStarted;I)Lkotlinx/coroutines/flow/SharedFlow;` @kind static;
  #L17910c.  v0:= temp @kind object;
  #L17910e.  return v0 @kind object;
}
procedure `java.lang.Object` `i`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlinx.coroutines.CoroutineScope` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt;.i:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L179048.  v0:= 1I;
  #L17904a.  call temp:= `c`(v2, v0) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt;.c:(Lkotlinx/coroutines/flow/Flow;I)Lkotlinx/coroutines/flow/j;` @kind static;
  #L179050.  v2:= temp @kind object;
  #L179052.  v1:= 0I;
  #L179054.  call temp:= `CompletableDeferred$default`(v1, v0, v1) @signature `Lkotlinx/coroutines/CompletableDeferredKt;.CompletableDeferred$default:(Lkotlinx/coroutines/Job;ILjava/lang/Object;)Lkotlinx/coroutines/CompletableDeferred;` @kind static;
  #L17905a.  v0:= temp @kind object;
  #L17905c.  v1:= v2.`kotlinx.coroutines.flow.j.d` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L179060.  v2:= v2.`kotlinx.coroutines.flow.j.a` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L179064.  call `e`(v3, v1, v2, v0) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt;.e:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CompletableDeferred;)V` @kind static;
  #L17906a.  call temp:= `await`(v0, v4) @signature `Lkotlinx/coroutines/Deferred;.await:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L179070.  v2:= temp @kind object;
  #L179072.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.StateFlow` `j`(`kotlinx.coroutines.flow.Flow` v7 @kind object, `kotlinx.coroutines.CoroutineScope` v8 @kind object, `kotlinx.coroutines.flow.SharingStarted` v9 @kind object, `java.lang.Object` v10 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt;.j:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/SharingStarted;Ljava/lang/Object;)Lkotlinx/coroutines/flow/StateFlow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L179260.  v0:= 1I;
  #L179262.  call temp:= `c`(v7, v0) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt;.c:(Lkotlinx/coroutines/flow/Flow;I)Lkotlinx/coroutines/flow/j;` @kind static;
  #L179268.  v7:= temp @kind object;
  #L17926a.  call temp:= `MutableStateFlow`(v10) @signature `Lkotlinx/coroutines/flow/StateFlowKt;.MutableStateFlow:(Ljava/lang/Object;)Lkotlinx/coroutines/flow/MutableStateFlow;` @kind static;
  #L179270.  v6:= temp @kind object;
  #L179272.  v1:= v7.`kotlinx.coroutines.flow.j.d` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L179276.  v2:= v7.`kotlinx.coroutines.flow.j.a` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L17927a.  v0:= v8 @kind object;
  #L17927c.  v3:= v6 @kind object;
  #L17927e.  v4:= v9 @kind object;
  #L179280.  v5:= v10 @kind object;
  #L179282.  call temp:= `d`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt;.d:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/MutableSharedFlow;Lkotlinx/coroutines/flow/SharingStarted;Ljava/lang/Object;)Lkotlinx/coroutines/Job;` @kind static;
  #L179288.  v7:= temp @kind object;
  #L17928a.  v8:= new `kotlinx.coroutines.flow.g`;
  #L17928e.  call `<init>`(v8, v6, v7) @signature `Lkotlinx/coroutines/flow/g;.<init>:(Lkotlinx/coroutines/flow/StateFlow;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L179294.  return v8 @kind object;
}
