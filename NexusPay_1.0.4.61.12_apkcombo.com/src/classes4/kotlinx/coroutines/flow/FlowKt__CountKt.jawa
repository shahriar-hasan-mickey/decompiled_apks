record `kotlinx.coroutines.flow.FlowKt__CountKt` @kind class @AccessFlag FINAL_SYNTHETIC {
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CountKt;.a:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L172800.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.flow.FlowKt__CountKt$a` @kind boolean;
  #L172804.  if v0 == 0 then goto L172826;
  #L172808.  v0:= v5 @kind object;
  #L17280a.  v0:= (`kotlinx.coroutines.flow.FlowKt__CountKt$a`) v0 @kind object;
  #L17280e.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$a.c` @type ^`int`;
  #L172812.  v2:= -2147483648I;
  #L172816.  v3:= v1 ^& v2 @kind int;
  #L17281a.  if v3 == 0 then goto L172826;
  #L17281e.  v1:= v1 - v2 @kind int;
  #L172820.  v0.`kotlinx.coroutines.flow.FlowKt__CountKt$a.c` @type ^`int` := v1;
  #L172824.  goto L172830;
  #L172826.  v0:= new `kotlinx.coroutines.flow.FlowKt__CountKt$a`;
  #L17282a.  call `<init>`(v0, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__CountKt$a;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L172830.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$a.b` @type ^`java.lang.Object` @kind object;
  #L172834.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L17283a.  v1:= temp @kind object;
  #L17283c.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$a.c` @type ^`int`;
  #L172840.  v3:= 1I;
  #L172842.  if v2 == 0 then goto L17286a;
  #L172846.  if v2 != v3 then goto L17285a;
  #L17284a.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$a.a` @type ^`java.lang.Object` @kind object;
  #L17284e.  v4:= (`kotlin.jvm.internal.Ref$IntRef`) v4 @kind object;
  #L172852.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L172858.  goto L17289c;
  #L17285a.  v4:= new `java.lang.IllegalStateException`;
  #L17285e.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L172862.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172868.  throw v4;
  #L17286a.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L172870.  v5:= new `kotlin.jvm.internal.Ref$IntRef`;
  #L172874.  call `<init>`(v5) @signature `Lkotlin/jvm/internal/Ref$IntRef;.<init>:()V` @kind direct;
  #L17287a.  v2:= new `kotlinx.coroutines.flow.FlowKt__CountKt$count$$inlined$collect$1`;
  #L17287e.  call `<init>`(v2, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__CountKt$count$$inlined$collect$1;.<init>:(Lkotlin/jvm/internal/Ref$IntRef;)V` @kind direct;
  #L172884.  v0.`kotlinx.coroutines.flow.FlowKt__CountKt$a.a` @type ^`java.lang.Object` := v5 @kind object;
  #L172888.  v0.`kotlinx.coroutines.flow.FlowKt__CountKt$a.c` @type ^`int` := v3;
  #L17288c.  call temp:= `collect`(v4, v2, v0) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L172892.  v4:= temp @kind object;
  #L172894.  if v4 != v1 then goto L17289a;
  #L172898.  return v1 @kind object;
  #L17289a.  v4:= v5 @kind object;
  #L17289c.  v4:= v4.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int`;
  #L1728a0.  call temp:= `boxInt`(v4) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxInt:(I)Ljava/lang/Integer;` @kind static;
  #L1728a6.  v4:= temp @kind object;
  #L1728a8.  return v4 @kind object;
}
procedure `java.lang.Object` `b`(`kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlin.jvm.functions.Function2` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CountKt;.b:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1728bc.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__CountKt$b` @kind boolean;
  #L1728c0.  if v0 == 0 then goto L1728e2;
  #L1728c4.  v0:= v6 @kind object;
  #L1728c6.  v0:= (`kotlinx.coroutines.flow.FlowKt__CountKt$b`) v0 @kind object;
  #L1728ca.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$b.c` @type ^`int`;
  #L1728ce.  v2:= -2147483648I;
  #L1728d2.  v3:= v1 ^& v2 @kind int;
  #L1728d6.  if v3 == 0 then goto L1728e2;
  #L1728da.  v1:= v1 - v2 @kind int;
  #L1728dc.  v0.`kotlinx.coroutines.flow.FlowKt__CountKt$b.c` @type ^`int` := v1;
  #L1728e0.  goto L1728ec;
  #L1728e2.  v0:= new `kotlinx.coroutines.flow.FlowKt__CountKt$b`;
  #L1728e6.  call `<init>`(v0, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__CountKt$b;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1728ec.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$b.b` @type ^`java.lang.Object` @kind object;
  #L1728f0.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1728f6.  v1:= temp @kind object;
  #L1728f8.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$b.c` @type ^`int`;
  #L1728fc.  v3:= 1I;
  #L1728fe.  if v2 == 0 then goto L172926;
  #L172902.  if v2 != v3 then goto L172916;
  #L172906.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__CountKt$b.a` @type ^`java.lang.Object` @kind object;
  #L17290a.  v4:= (`kotlin.jvm.internal.Ref$IntRef`) v4 @kind object;
  #L17290e.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L172914.  goto L172958;
  #L172916.  v4:= new `java.lang.IllegalStateException`;
  #L17291a.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L17291e.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L172924.  throw v4;
  #L172926.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17292c.  v6:= new `kotlin.jvm.internal.Ref$IntRef`;
  #L172930.  call `<init>`(v6) @signature `Lkotlin/jvm/internal/Ref$IntRef;.<init>:()V` @kind direct;
  #L172936.  v2:= new `kotlinx.coroutines.flow.FlowKt__CountKt$count$$inlined$collect$2`;
  #L17293a.  call `<init>`(v2, v5, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__CountKt$count$$inlined$collect$2;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/jvm/internal/Ref$IntRef;)V` @kind direct;
  #L172940.  v0.`kotlinx.coroutines.flow.FlowKt__CountKt$b.a` @type ^`java.lang.Object` := v6 @kind object;
  #L172944.  v0.`kotlinx.coroutines.flow.FlowKt__CountKt$b.c` @type ^`int` := v3;
  #L172948.  call temp:= `collect`(v4, v2, v0) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L17294e.  v4:= temp @kind object;
  #L172950.  if v4 != v1 then goto L172956;
  #L172954.  return v1 @kind object;
  #L172956.  v4:= v6 @kind object;
  #L172958.  v4:= v4.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int`;
  #L17295c.  call temp:= `boxInt`(v4) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxInt:(I)Ljava/lang/Integer;` @kind static;
  #L172962.  v4:= temp @kind object;
  #L172964.  return v4 @kind object;
}
