record `kotlinx.coroutines.flow.MutableStateFlow` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `kotlinx.coroutines.flow.StateFlow` @kind interface, `kotlinx.coroutines.flow.MutableSharedFlow` @kind interface {
}
procedure `boolean` `compareAndSet`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/flow/MutableStateFlow;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getValue`() @signature `Lkotlinx/coroutines/flow/MutableStateFlow;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setValue`(`java.lang.Object` v0 @kind object) @signature `Lkotlinx/coroutines/flow/MutableStateFlow;.setValue:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
