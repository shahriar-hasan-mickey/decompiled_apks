record `kotlinx.coroutines.flow.k` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.SharingStarted` @kind interface {
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.k` v0 @kind this) @signature `Lkotlinx/coroutines/flow/k;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L17ff7c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17ff82.  return @kind void;
}
procedure `kotlinx.coroutines.flow.Flow` `command`(`kotlinx.coroutines.flow.k` v0 @kind this, `kotlinx.coroutines.flow.StateFlow` v1 @kind object) @signature `Lkotlinx/coroutines/flow/k;.command:(Lkotlinx/coroutines/flow/StateFlow;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC {
    temp;

  #L17ff5c.  v1:= `@@kotlinx.coroutines.flow.SharingCommand.START` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L17ff60.  call temp:= `flowOf`(v1) @signature `Lkotlinx/coroutines/flow/FlowKt;.flowOf:(Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L17ff66.  v1:= temp @kind object;
  #L17ff68.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.flow.k` v1 @kind this) @signature `Lkotlinx/coroutines/flow/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17ff44.  v0:= "SharingStarted.Eagerly" @kind object;
  #L17ff48.  return v0 @kind object;
}
