record `kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.Flow` @kind interface {
  `kotlinx.coroutines.flow.Flow`[] `kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1` v0 @kind this, `kotlinx.coroutines.flow.Flow`[] v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L17cbb4.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1.a` @type ^`kotlinx.coroutines.flow.Flow`[] := v1 @kind object;
  #L17cbb8.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1.b` @type ^`kotlin.jvm.functions.Function2` := v2 @kind object;
  #L17cbbc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17cbc2.  return @kind void;
}
procedure `java.lang.Object` `collect`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1` v5 @kind this, `kotlinx.coroutines.flow.FlowCollector` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L17cb6c.  v0:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1.a` @type ^`kotlinx.coroutines.flow.Flow`[] @kind object;
  #L17cb70.  call temp:= `a`() @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.a:()Lkotlin/jvm/functions/Function0;` @kind static;
  #L17cb76.  v1:= temp @kind object;
  #L17cb78.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1`;
  #L17cb7c.  v3:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L17cb80.  v4:= 0I;
  #L17cb82.  call `<init>`(v2, v3, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$1$1;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L17cb88.  call temp:= `combineInternal`(v6, v0, v1, v2, v7) @signature `Lkotlinx/coroutines/flow/internal/CombineKt;.combineInternal:(Lkotlinx/coroutines/flow/FlowCollector;[Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L17cb8e.  v6:= temp @kind object;
  #L17cb90.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L17cb96.  v7:= temp @kind object;
  #L17cb98.  if v6 != v7 then goto L17cb9e;
  #L17cb9c.  return v6 @kind object;
  #L17cb9e.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17cba2.  return v6 @kind object;
}
procedure `java.lang.Object` `collect$$forInline`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1` v5 @kind this, `kotlinx.coroutines.flow.FlowCollector` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1;.collect$$forInline:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L17cb08.  v0:= 4I;
  #L17cb0a.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L17cb10.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1`;
  #L17cb14.  call `<init>`(v0, v5, v7) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L17cb1a.  v0:= 5I;
  #L17cb1c.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L17cb22.  v0:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1.a` @type ^`kotlinx.coroutines.flow.Flow`[] @kind object;
  #L17cb26.  call temp:= `a`() @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.a:()Lkotlin/jvm/functions/Function0;` @kind static;
  #L17cb2c.  v1:= temp @kind object;
  #L17cb2e.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1`;
  #L17cb32.  v3:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$$inlined$unsafeFlow$1.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L17cb36.  v4:= 0I;
  #L17cb38.  call `<init>`(v2, v3, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$1$1;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L17cb3e.  v3:= 0I;
  #L17cb40.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L17cb46.  call temp:= `combineInternal`(v6, v0, v1, v2, v7) @signature `Lkotlinx/coroutines/flow/internal/CombineKt;.combineInternal:(Lkotlinx/coroutines/flow/FlowCollector;[Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L17cb4c.  v6:= 1I;
  #L17cb4e.  call `mark`(v6) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L17cb54.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17cb58.  return v6 @kind object;
}
