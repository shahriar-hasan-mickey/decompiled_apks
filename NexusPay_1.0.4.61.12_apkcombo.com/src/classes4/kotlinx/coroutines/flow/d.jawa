record `kotlinx.coroutines.flow.d` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.Flow` @kind interface {
}
global `kotlinx.coroutines.flow.d` `@@kotlinx.coroutines.flow.d.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L170610.  v0:= new `kotlinx.coroutines.flow.d`;
  #L170614.  call `<init>`(v0) @signature `Lkotlinx/coroutines/flow/d;.<init>:()V` @kind direct;
  #L17061a.  `@@kotlinx.coroutines.flow.d.a` @type ^`kotlinx.coroutines.flow.d` := v0 @kind object;
  #L17061e.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.d` v0 @kind this) @signature `Lkotlinx/coroutines/flow/d;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L170630.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L170636.  return @kind void;
}
procedure `java.lang.Object` `collect`(`kotlinx.coroutines.flow.d` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/d;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L1705f8.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1705fc.  return v1 @kind object;
}
