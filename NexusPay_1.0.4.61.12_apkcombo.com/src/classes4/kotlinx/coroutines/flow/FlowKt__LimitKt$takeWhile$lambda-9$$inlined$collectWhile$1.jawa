record `kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlinx.coroutines.flow.FlowCollector` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlinx/coroutines/flow/FlowCollector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L175ef0.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1.a` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L175ef4.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` := v2 @kind object;
  #L175ef8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L175efe.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1` v7 @kind this, `java.lang.Object` v8 @kind object, `kotlin.coroutines.Continuation` v9 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L175dc0.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1$1` @kind boolean;
  #L175dc4.  if v0 == 0 then goto L175de6;
  #L175dc8.  v0:= v9 @kind object;
  #L175dca.  v0:= (`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1$1`) v0 @kind object;
  #L175dce.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1$1.c` @type ^`int`;
  #L175dd2.  v2:= -2147483648I;
  #L175dd6.  v3:= v1 ^& v2 @kind int;
  #L175dda.  if v3 == 0 then goto L175de6;
  #L175dde.  v1:= v1 - v2 @kind int;
  #L175de0.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1$1.c` @type ^`int` := v1;
  #L175de4.  goto L175df0;
  #L175de6.  v0:= new `kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1$1`;
  #L175dea.  call `<init>`(v0, v7, v9) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L175df0.  v9:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1$1.b` @type ^`java.lang.Object` @kind object;
  #L175df4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L175dfa.  v1:= temp @kind object;
  #L175dfc.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1$1.c` @type ^`int`;
  #L175e00.  v3:= 2I;
  #L175e02.  v4:= 1I;
  #L175e04.  if v2 == 0 then goto L175e4c;
  #L175e08.  if v2 == v4 then goto L175e30;
  #L175e0c.  if v2 != v3 then goto L175e20;
  #L175e10.  v8:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1$1.a` @type ^`java.lang.Object` @kind object;
  #L175e14.  v8:= (`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1`) v8 @kind object;
  #L175e18.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L175e1e.  goto L175eb8;
  #L175e20.  v8:= new `java.lang.IllegalStateException`;
  #L175e24.  v9:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L175e28.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L175e2e.  throw v8;
  #L175e30.  v8:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1$1.e` @type ^`java.lang.Object` @kind object;
  #L175e34.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1$1.a` @type ^`java.lang.Object` @kind object;
  #L175e38.  v2:= (`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1`) v2 @kind object;
  #L175e3c.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L175e42.  v6:= v9 @kind object;
  #L175e44.  v9:= v8 @kind object;
  #L175e46.  v8:= v2 @kind object;
  #L175e48.  v2:= v6 @kind object;
  #L175e4a.  goto L175e86;
  #L175e4c.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L175e52.  v9:= v7.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1.a` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L175e56.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1$1.a` @type ^`java.lang.Object` := v7 @kind object;
  #L175e5a.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1$1.e` @type ^`java.lang.Object` := v8 @kind object;
  #L175e5e.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1$1.c` @type ^`int` := v4;
  #L175e62.  v2:= 6I;
  #L175e64.  call `mark`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L175e6a.  call temp:= `invoke`(v9, v8, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L175e70.  v9:= temp @kind object;
  #L175e72.  v2:= 7I;
  #L175e74.  call `mark`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L175e7a.  if v9 != v1 then goto L175e80;
  #L175e7e.  return v1 @kind object;
  #L175e80.  v2:= v9 @kind object;
  #L175e82.  v9:= v8 @kind object;
  #L175e84.  v8:= v7 @kind object;
  #L175e86.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L175e8a.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L175e90.  v2:= temp;
  #L175e92.  if v2 == 0 then goto L175eb6;
  #L175e96.  v2:= v8.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L175e9a.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1$1.a` @type ^`java.lang.Object` := v8 @kind object;
  #L175e9e.  v5:= 0I;
  #L175ea0.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1$1.e` @type ^`java.lang.Object` := v5 @kind object;
  #L175ea4.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1$1.c` @type ^`int` := v3;
  #L175ea8.  call temp:= `emit`(v2, v9, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L175eae.  v9:= temp @kind object;
  #L175eb0.  if v9 != v1 then goto L175eb8;
  #L175eb4.  return v1 @kind object;
  #L175eb6.  v4:= 0I;
  #L175eb8.  call temp:= `boxBoolean`(v4) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxBoolean:(Z)Ljava/lang/Boolean;` @kind static;
  #L175ebe.  v9:= temp @kind object;
  #L175ec0.  call temp:= `booleanValue`(v9) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L175ec6.  v9:= temp;
  #L175ec8.  if v9 == 0 then goto L175ed2;
  #L175ecc.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L175ed0.  return v8 @kind object;
  #L175ed2.  v9:= new `kotlinx.coroutines.flow.internal.AbortFlowException`;
  #L175ed6.  call `<init>`(v9, v8) @signature `Lkotlinx/coroutines/flow/internal/AbortFlowException;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;)V` @kind direct;
  #L175edc.  throw v9;
}
