record `kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.Flow` @kind interface {
  `kotlinx.coroutines.flow.Flow` `kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1` v0 @kind this, `kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L175d50.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1.a` @type ^`kotlinx.coroutines.flow.Flow` := v1 @kind object;
  #L175d54.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1.b` @type ^`kotlin.jvm.functions.Function2` := v2 @kind object;
  #L175d58.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L175d5e.  return @kind void;
}
procedure `java.lang.Object` `collect`(`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1` v5 @kind this, `kotlinx.coroutines.flow.FlowCollector` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L175c78.  v0:= instanceof @variable v7 @type ^`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1` @kind boolean;
  #L175c7c.  if v0 == 0 then goto L175c9e;
  #L175c80.  v0:= v7 @kind object;
  #L175c82.  v0:= (`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1`) v0 @kind object;
  #L175c86.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1.b` @type ^`int`;
  #L175c8a.  v2:= -2147483648I;
  #L175c8e.  v3:= v1 ^& v2 @kind int;
  #L175c92.  if v3 == 0 then goto L175c9e;
  #L175c96.  v1:= v1 - v2 @kind int;
  #L175c98.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1.b` @type ^`int` := v1;
  #L175c9c.  goto L175ca8;
  #L175c9e.  v0:= new `kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1`;
  #L175ca2.  call `<init>`(v0, v5, v7) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L175ca8.  v7:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1.a` @type ^`java.lang.Object` @kind object;
  #L175cac.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L175cb2.  v1:= temp @kind object;
  #L175cb4.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1.b` @type ^`int`;
  #L175cb8.  v3:= 1I;
  #L175cba.  if v2 == 0 then goto L175ce6;
  #L175cbe.  if v2 != v3 then goto L175cd6;
  #L175cc2.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1.d` @type ^`java.lang.Object` @kind object;
  #L175cc6.  v6:= (`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1`) v6 @kind object;
  #L175cca.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L175cd0.  goto L175d1e;
  #L175cd2.  v7:= Exception @type ^`kotlinx.coroutines.flow.internal.AbortFlowException` @kind object;
  #L175cd4.  goto L175d18;
  #L175cd6.  v6:= new `java.lang.IllegalStateException`;
  #L175cda.  v7:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L175cde.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L175ce4.  throw v6;
  #L175ce6.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L175cec.  v7:= v5.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1.a` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L175cf0.  v2:= new `kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1`;
  #L175cf4.  v4:= v5.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L175cf8.  call `<init>`(v2, v4, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$takeWhile$lambda-9$$inlined$collectWhile$1;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlinx/coroutines/flow/FlowCollector;)V` @kind direct;
  #L175cfe.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1.d` @type ^`java.lang.Object` := v2 @kind object;
  #L175d02.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$takeWhile$$inlined$unsafeFlow$1$1.b` @type ^`int` := v3;
  #L175d06.  call temp:= `collect`(v7, v2, v0) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L175d0c.  v6:= temp @kind object;
  #L175d0e.  if v6 != v1 then goto L175d1e;
  #L175d12.  return v1 @kind object;
  #L175d14.  v7:= Exception @type ^`kotlinx.coroutines.flow.internal.AbortFlowException` @kind object;
  #L175d16.  v6:= v2 @kind object;
  #L175d18.  call `checkOwnership`(v7, v6) @signature `Lkotlinx/coroutines/flow/internal/FlowExceptions_commonKt;.checkOwnership:(Lkotlinx/coroutines/flow/internal/AbortFlowException;Lkotlinx/coroutines/flow/FlowCollector;)V` @kind static;
  #L175d1e.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L175d22.  return v6 @kind object;
  catch `kotlinx.coroutines.flow.internal.AbortFlowException` @[L175cca..L175cd0] goto L175cd2;
  catch `kotlinx.coroutines.flow.internal.AbortFlowException` @[L175cfe..L175d0e] goto L175d14;
}
