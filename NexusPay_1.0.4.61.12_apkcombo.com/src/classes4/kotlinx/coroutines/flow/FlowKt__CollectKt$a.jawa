record `kotlinx.coroutines.flow.FlowKt__CollectKt$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__CollectKt$a.a` @AccessFlag ;
  `kotlinx.coroutines.flow.Flow` `kotlinx.coroutines.flow.FlowKt__CollectKt$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__CollectKt$a` v0 @kind this, `kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L171f3c.  v0.`kotlinx.coroutines.flow.FlowKt__CollectKt$a.b` @type ^`kotlinx.coroutines.flow.Flow` := v1 @kind object;
  #L171f40.  v1:= 2I;
  #L171f42.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L171f48.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.FlowKt__CollectKt$a` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L171f1c.  v2:= new `kotlinx.coroutines.flow.FlowKt__CollectKt$a`;
  #L171f20.  v0:= v1.`kotlinx.coroutines.flow.FlowKt__CollectKt$a.b` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L171f24.  call `<init>`(v2, v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L171f2a.  return v2 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__CollectKt$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L171e6c.  v1:= (`kotlinx.coroutines.CoroutineScope`) v1 @kind object;
  #L171e70.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L171e74.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L171e7a.  v1:= temp @kind object;
  #L171e7c.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__CollectKt$a` v0 @kind this, `kotlinx.coroutines.CoroutineScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L171e90.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L171e96.  v1:= temp @kind object;
  #L171e98.  v1:= (`kotlinx.coroutines.flow.FlowKt__CollectKt$a`) v1 @kind object;
  #L171e9c.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L171ea0.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L171ea6.  v1:= temp @kind object;
  #L171ea8.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__CollectKt$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__CollectKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L171ebc.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L171ec2.  v0:= temp @kind object;
  #L171ec4.  v1:= v3.`kotlinx.coroutines.flow.FlowKt__CollectKt$a.a` @type ^`int`;
  #L171ec8.  v2:= 1I;
  #L171eca.  if v1 == 0 then goto L171eea;
  #L171ece.  if v1 != v2 then goto L171eda;
  #L171ed2.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L171ed8.  goto L171f06;
  #L171eda.  v4:= new `java.lang.IllegalStateException`;
  #L171ede.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L171ee2.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L171ee8.  throw v4;
  #L171eea.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L171ef0.  v4:= v3.`kotlinx.coroutines.flow.FlowKt__CollectKt$a.b` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L171ef4.  v3.`kotlinx.coroutines.flow.FlowKt__CollectKt$a.a` @type ^`int` := v2;
  #L171ef8.  call temp:= `collect`(v4, v3) @signature `Lkotlinx/coroutines/flow/FlowKt;.collect:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L171efe.  v4:= temp @kind object;
  #L171f00.  if v4 != v0 then goto L171f06;
  #L171f04.  return v0 @kind object;
  #L171f06.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L171f0a.  return v4 @kind object;
}
