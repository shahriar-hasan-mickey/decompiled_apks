record `kotlinx.coroutines.flow.FlowKt__MergeKt$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__MergeKt$a.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__MergeKt$a.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__MergeKt$a.c` @AccessFlag SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__MergeKt$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__MergeKt$a` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$a;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L176a90.  v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$a.d` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L176a94.  v1:= 3I;
  #L176a96.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L176a9c.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__MergeKt$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L176998.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L17699c.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L1769a0.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$a;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L1769a6.  v1:= temp @kind object;
  #L1769a8.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__MergeKt$a` v2 @kind this, `kotlinx.coroutines.flow.FlowCollector` v3 @kind object, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$a;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1769bc.  v0:= new `kotlinx.coroutines.flow.FlowKt__MergeKt$a`;
  #L1769c0.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__MergeKt$a.d` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L1769c4.  call `<init>`(v0, v1, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$a;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1769ca.  v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$a.b` @type ^`java.lang.Object` := v3 @kind object;
  #L1769ce.  v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$a.c` @type ^`java.lang.Object` := v4 @kind object;
  #L1769d2.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1769d6.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1769dc.  v3:= temp @kind object;
  #L1769de.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__MergeKt$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1769f0.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1769f6.  v0:= temp @kind object;
  #L1769f8.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__MergeKt$a.a` @type ^`int`;
  #L1769fc.  v2:= 2I;
  #L1769fe.  v3:= 1I;
  #L176a00.  if v1 == 0 then goto L176a34;
  #L176a04.  if v1 == v3 then goto L176a24;
  #L176a08.  if v1 != v2 then goto L176a14;
  #L176a0c.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L176a12.  goto L176a7a;
  #L176a14.  v6:= new `java.lang.IllegalStateException`;
  #L176a18.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L176a1c.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L176a22.  throw v6;
  #L176a24.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__MergeKt$a.b` @type ^`java.lang.Object` @kind object;
  #L176a28.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L176a2c.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L176a32.  goto L176a62;
  #L176a34.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L176a3a.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__MergeKt$a.b` @type ^`java.lang.Object` @kind object;
  #L176a3e.  v1:= v6 @kind object;
  #L176a40.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L176a44.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__MergeKt$a.c` @type ^`java.lang.Object` @kind object;
  #L176a48.  v4:= v5.`kotlinx.coroutines.flow.FlowKt__MergeKt$a.d` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L176a4c.  v5.`kotlinx.coroutines.flow.FlowKt__MergeKt$a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L176a50.  v5.`kotlinx.coroutines.flow.FlowKt__MergeKt$a.a` @type ^`int` := v3;
  #L176a54.  call temp:= `invoke`(v4, v6, v5) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L176a5a.  v6:= temp @kind object;
  #L176a5c.  if v6 != v0 then goto L176a62;
  #L176a60.  return v0 @kind object;
  #L176a62.  v3:= 0I;
  #L176a64.  v5.`kotlinx.coroutines.flow.FlowKt__MergeKt$a.b` @type ^`java.lang.Object` := v3 @kind object;
  #L176a68.  v5.`kotlinx.coroutines.flow.FlowKt__MergeKt$a.a` @type ^`int` := v2;
  #L176a6c.  call temp:= `emit`(v1, v6, v5) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L176a72.  v6:= temp @kind object;
  #L176a74.  if v6 != v0 then goto L176a7a;
  #L176a78.  return v0 @kind object;
  #L176a7a.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L176a7e.  return v6 @kind object;
}
