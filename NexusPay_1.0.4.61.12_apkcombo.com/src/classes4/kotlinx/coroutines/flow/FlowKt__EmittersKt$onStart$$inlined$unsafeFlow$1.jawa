record `kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.Flow` @kind interface {
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.Flow` `kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlinx.coroutines.flow.Flow` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlinx/coroutines/flow/Flow;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L174260.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1.a` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L174264.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1.b` @type ^`kotlinx.coroutines.flow.Flow` := v2 @kind object;
  #L174268.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17426e.  return @kind void;
}
procedure `java.lang.Object` `collect`(`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1` v6 @kind this, `kotlinx.coroutines.flow.FlowCollector` v7 @kind object, `kotlin.coroutines.Continuation` v8 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L17411c.  v0:= instanceof @variable v8 @type ^`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1` @kind boolean;
  #L174120.  if v0 == 0 then goto L174142;
  #L174124.  v0:= v8 @kind object;
  #L174126.  v0:= (`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1`) v0 @kind object;
  #L17412a.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1.b` @type ^`int`;
  #L17412e.  v2:= -2147483648I;
  #L174132.  v3:= v1 ^& v2 @kind int;
  #L174136.  if v3 == 0 then goto L174142;
  #L17413a.  v1:= v1 - v2 @kind int;
  #L17413c.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1.b` @type ^`int` := v1;
  #L174140.  goto L17414c;
  #L174142.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1`;
  #L174146.  call `<init>`(v0, v6, v8) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L17414c.  v8:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1.a` @type ^`java.lang.Object` @kind object;
  #L174150.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L174156.  v1:= temp @kind object;
  #L174158.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1.b` @type ^`int`;
  #L17415c.  v3:= 2I;
  #L17415e.  v4:= 1I;
  #L174160.  if v2 == 0 then goto L1741a8;
  #L174164.  if v2 == v4 then goto L174184;
  #L174168.  if v2 != v3 then goto L174174;
  #L17416c.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L174172.  goto L174224;
  #L174174.  v7:= new `java.lang.IllegalStateException`;
  #L174178.  v8:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L17417c.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L174182.  throw v7;
  #L174184.  v7:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1.f` @type ^`java.lang.Object` @kind object;
  #L174188.  v7:= (`kotlinx.coroutines.flow.internal.SafeCollector`) v7 @kind object;
  #L17418c.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1.e` @type ^`java.lang.Object` @kind object;
  #L174190.  v2:= (`kotlinx.coroutines.flow.FlowCollector`) v2 @kind object;
  #L174194.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1.d` @type ^`java.lang.Object` @kind object;
  #L174198.  v4:= (`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1`) v4 @kind object;
  #L17419c.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1741a2.  goto L1741fa;
  #L1741a4.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1741a6.  goto L17422e;
  #L1741a8.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1741ae.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L1741b4.  v8:= temp @kind object;
  #L1741b6.  v2:= new `kotlinx.coroutines.flow.internal.SafeCollector`;
  #L1741ba.  call `<init>`(v2, v7, v8) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/CoroutineContext;)V` @kind direct;
  #L1741c0.  v8:= v6.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1.a` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L1741c4.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1.d` @type ^`java.lang.Object` := v6 @kind object;
  #L1741c8.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1.e` @type ^`java.lang.Object` := v7 @kind object;
  #L1741cc.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1.f` @type ^`java.lang.Object` := v2 @kind object;
  #L1741d0.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1.b` @type ^`int` := v4;
  #L1741d4.  v4:= 6I;
  #L1741d6.  call `mark`(v4) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L1741dc.  call temp:= `invoke`(v8, v2, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1741e2.  v8:= temp @kind object;
  #L1741e4.  v4:= 7I;
  #L1741e6.  call `mark`(v4) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L1741ec.  if v8 != v1 then goto L1741f2;
  #L1741f0.  return v1 @kind object;
  #L1741f2.  v4:= v6 @kind object;
  #L1741f4.  v5:= v2 @kind object;
  #L1741f6.  v2:= v7 @kind object;
  #L1741f8.  v7:= v5 @kind object;
  #L1741fa.  call `releaseIntercepted`(v7) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector;.releaseIntercepted:()V` @kind virtual;
  #L174200.  v7:= v4.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1.b` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L174204.  v8:= 0I;
  #L174206.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1.d` @type ^`java.lang.Object` := v8 @kind object;
  #L17420a.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1.e` @type ^`java.lang.Object` := v8 @kind object;
  #L17420e.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1.f` @type ^`java.lang.Object` := v8 @kind object;
  #L174212.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1$1.b` @type ^`int` := v3;
  #L174216.  call temp:= `collect`(v7, v2, v0) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L17421c.  v7:= temp @kind object;
  #L17421e.  if v7 != v1 then goto L174224;
  #L174222.  return v1 @kind object;
  #L174224.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L174228.  return v7 @kind object;
  #L17422a.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L17422c.  v7:= v2 @kind object;
  #L17422e.  call `releaseIntercepted`(v7) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector;.releaseIntercepted:()V` @kind virtual;
  #L174234.  throw v8;
  catch `java.lang.Throwable` @[L17419c..L1741a2] goto L1741a4;
  catch `java.lang.Throwable` @[L1741c0..L1741ec] goto L17422a;
}
