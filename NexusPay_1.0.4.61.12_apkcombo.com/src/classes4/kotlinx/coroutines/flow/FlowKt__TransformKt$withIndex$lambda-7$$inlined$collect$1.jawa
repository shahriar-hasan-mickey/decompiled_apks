record `kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.internal.Ref$IntRef` `kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.jvm.internal.Ref$IntRef` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/internal/Ref$IntRef;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L17a918.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1.a` @type ^`kotlinx.coroutines.flow.FlowCollector` := v1 @kind object;
  #L17a91c.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1.b` @type ^`kotlin.jvm.internal.Ref$IntRef` := v2 @kind object;
  #L17a920.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17a926.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1` v5 @kind this, `java.lang.Object` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L17a8b8.  v0:= v5.`kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1.a` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L17a8bc.  v1:= new `kotlin.collections.IndexedValue`;
  #L17a8c0.  v2:= v5.`kotlinx.coroutines.flow.FlowKt__TransformKt$withIndex$lambda-7$$inlined$collect$1.b` @type ^`kotlin.jvm.internal.Ref$IntRef` @kind object;
  #L17a8c4.  v3:= v2.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int`;
  #L17a8c8.  v4:= v3 + 1;
  #L17a8cc.  v2.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int` := v4;
  #L17a8d0.  if v3 < 0 then goto L17a8f6;
  #L17a8d4.  call `<init>`(v1, v3, v6) @signature `Lkotlin/collections/IndexedValue;.<init>:(ILjava/lang/Object;)V` @kind direct;
  #L17a8da.  call temp:= `emit`(v0, v1, v7) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L17a8e0.  v6:= temp @kind object;
  #L17a8e2.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L17a8e8.  v7:= temp @kind object;
  #L17a8ea.  if v6 != v7 then goto L17a8f0;
  #L17a8ee.  return v6 @kind object;
  #L17a8f0.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17a8f4.  return v6 @kind object;
  #L17a8f6.  v6:= new `java.lang.ArithmeticException`;
  #L17a8fa.  v7:= "Index overflow has happened" @kind object;
  #L17a8fe.  call `<init>`(v6, v7) @signature `Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17a904.  throw v6;
}
