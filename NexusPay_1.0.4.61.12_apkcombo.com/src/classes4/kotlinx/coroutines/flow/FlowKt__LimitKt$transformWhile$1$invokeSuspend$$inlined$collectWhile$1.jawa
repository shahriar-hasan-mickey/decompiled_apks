record `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1` v0 @kind this, `kotlin.jvm.functions.Function3` v1 @kind object, `kotlinx.coroutines.flow.FlowCollector` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/FlowCollector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L176034.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1.a` @type ^`kotlin.jvm.functions.Function3` := v1 @kind object;
  #L176038.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` := v2 @kind object;
  #L17603c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L176042.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L175f60.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1` @kind boolean;
  #L175f64.  if v0 == 0 then goto L175f86;
  #L175f68.  v0:= v6 @kind object;
  #L175f6a.  v0:= (`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1`) v0 @kind object;
  #L175f6e.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1.c` @type ^`int`;
  #L175f72.  v2:= -2147483648I;
  #L175f76.  v3:= v1 ^& v2 @kind int;
  #L175f7a.  if v3 == 0 then goto L175f86;
  #L175f7e.  v1:= v1 - v2 @kind int;
  #L175f80.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1.c` @type ^`int` := v1;
  #L175f84.  goto L175f90;
  #L175f86.  v0:= new `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1`;
  #L175f8a.  call `<init>`(v0, v4, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L175f90.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1.b` @type ^`java.lang.Object` @kind object;
  #L175f94.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L175f9a.  v1:= temp @kind object;
  #L175f9c.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1.c` @type ^`int`;
  #L175fa0.  v3:= 1I;
  #L175fa2.  if v2 == 0 then goto L175fca;
  #L175fa6.  if v2 != v3 then goto L175fba;
  #L175faa.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1.a` @type ^`java.lang.Object` @kind object;
  #L175fae.  v5:= (`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1`) v5 @kind object;
  #L175fb2.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L175fb8.  goto L176000;
  #L175fba.  v5:= new `java.lang.IllegalStateException`;
  #L175fbe.  v6:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L175fc2.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L175fc8.  throw v5;
  #L175fca.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L175fd0.  v6:= v4.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1.a` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L175fd4.  v2:= v4.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L175fd8.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1.a` @type ^`java.lang.Object` := v4 @kind object;
  #L175fdc.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1$1.c` @type ^`int` := v3;
  #L175fe0.  v3:= 6I;
  #L175fe2.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L175fe8.  call temp:= `invoke`(v6, v2, v5, v0) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L175fee.  v6:= temp @kind object;
  #L175ff0.  v5:= 7I;
  #L175ff2.  call `mark`(v5) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L175ff8.  if v6 != v1 then goto L175ffe;
  #L175ffc.  return v1 @kind object;
  #L175ffe.  v5:= v4 @kind object;
  #L176000.  v6:= (`java.lang.Boolean`) v6 @kind object;
  #L176004.  call temp:= `booleanValue`(v6) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L17600a.  v6:= temp;
  #L17600c.  if v6 == 0 then goto L176016;
  #L176010.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L176014.  return v5 @kind object;
  #L176016.  v6:= new `kotlinx.coroutines.flow.internal.AbortFlowException`;
  #L17601a.  call `<init>`(v6, v5) @signature `Lkotlinx/coroutines/flow/internal/AbortFlowException;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;)V` @kind direct;
  #L176020.  throw v6;
}
