record `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b.a` @AccessFlag ;
  `kotlin.jvm.internal.Ref$ObjectRef` `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b.b` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b` v0 @kind this, `kotlin.jvm.internal.Ref$ObjectRef` v1 @kind object, `kotlinx.coroutines.flow.FlowCollector` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$b;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1734e8.  v0.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b.b` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v1 @kind object;
  #L1734ec.  v0.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b.c` @type ^`kotlinx.coroutines.flow.FlowCollector` := v2 @kind object;
  #L1734f0.  v1:= 2I;
  #L1734f2.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L1734f8.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b` v0 @kind this, `kotlin.Unit` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$b;.a:(Lkotlin/Unit;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L173414.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$b;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L17341a.  v1:= temp @kind object;
  #L17341c.  v1:= (`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b`) v1 @kind object;
  #L173420.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L173424.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$b;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L17342a.  v1:= temp @kind object;
  #L17342c.  return v1 @kind object;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$b;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1734c4.  v3:= new `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b`;
  #L1734c8.  v0:= v2.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b.b` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L1734cc.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b.c` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L1734d0.  call `<init>`(v3, v0, v1, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$b;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1734d6.  return v3 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$b;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1733f0.  v1:= (`kotlin.Unit`) v1 @kind object;
  #L1733f4.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L1733f8.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$b;.a:(Lkotlin/Unit;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L1733fe.  v1:= temp @kind object;
  #L173400.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$b;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L173440.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L173446.  v0:= temp @kind object;
  #L173448.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b.a` @type ^`int`;
  #L17344c.  v2:= 1I;
  #L17344e.  if v1 == 0 then goto L17346e;
  #L173452.  if v1 != v2 then goto L17345e;
  #L173456.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17345c.  goto L1734ac;
  #L17345e.  v6:= new `java.lang.IllegalStateException`;
  #L173462.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L173466.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17346c.  throw v6;
  #L17346e.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L173474.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b.b` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L173478.  v1:= v6.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L17347c.  if v1 != 0 then goto L173486;
  #L173480.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L173484.  return v6 @kind object;
  #L173486.  v3:= 0I;
  #L173488.  v6.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v3 @kind object;
  #L17348c.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b.c` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L173490.  v4:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L173494.  if v1 != v4 then goto L17349a;
  #L173498.  v1:= v3 @kind object;
  #L17349a.  v5.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$b.a` @type ^`int` := v2;
  #L17349e.  call temp:= `emit`(v6, v1, v5) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L1734a4.  v6:= temp @kind object;
  #L1734a6.  if v6 != v0 then goto L1734ac;
  #L1734aa.  return v0 @kind object;
  #L1734ac.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1734b0.  return v6 @kind object;
}
