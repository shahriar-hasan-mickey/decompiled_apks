record `kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.c` @AccessFlag SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1` v0 @kind this, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$1$1;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L17cd1c.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.d` @type ^`kotlin.jvm.functions.Function2` := v1 @kind object;
  #L17cd20.  v1:= 3I;
  #L17cd22.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L17cd28.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$1$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L17cbd4.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L17cbd8.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L17cbdc.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L17cbe0.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$1$1;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L17cbe6.  v1:= temp @kind object;
  #L17cbe8.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1` v2 @kind this, `kotlinx.coroutines.flow.FlowCollector` v3 @kind object, `java.lang.Object`[] v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$1$1;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L17cbfc.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1`;
  #L17cc00.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.d` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L17cc04.  call `<init>`(v0, v1, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$1$1;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L17cc0a.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.b` @type ^`java.lang.Object` := v3 @kind object;
  #L17cc0e.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.c` @type ^`java.lang.Object` := v4 @kind object;
  #L17cc12.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17cc16.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$1$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L17cc1c.  v3:= temp @kind object;
  #L17cc1e.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$1$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L17cc78.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L17cc7e.  v0:= temp @kind object;
  #L17cc80.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.a` @type ^`int`;
  #L17cc84.  v2:= 2I;
  #L17cc86.  v3:= 1I;
  #L17cc88.  if v1 == 0 then goto L17ccbc;
  #L17cc8c.  if v1 == v3 then goto L17ccac;
  #L17cc90.  if v1 != v2 then goto L17cc9c;
  #L17cc94.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17cc9a.  goto L17cd06;
  #L17cc9c.  v6:= new `java.lang.IllegalStateException`;
  #L17cca0.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L17cca4.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17ccaa.  throw v6;
  #L17ccac.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.b` @type ^`java.lang.Object` @kind object;
  #L17ccb0.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L17ccb4.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17ccba.  goto L17ccee;
  #L17ccbc.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17ccc2.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.b` @type ^`java.lang.Object` @kind object;
  #L17ccc6.  v1:= v6 @kind object;
  #L17ccc8.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L17cccc.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.c` @type ^`java.lang.Object` @kind object;
  #L17ccd0.  v6:= (`java.lang.Object`[]) v6 @kind object;
  #L17ccd4.  v4:= v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.d` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L17ccd8.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.b` @type ^`java.lang.Object` := v1 @kind object;
  #L17ccdc.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.a` @type ^`int` := v3;
  #L17cce0.  call temp:= `invoke`(v4, v6, v5) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L17cce6.  v6:= temp @kind object;
  #L17cce8.  if v6 != v0 then goto L17ccee;
  #L17ccec.  return v0 @kind object;
  #L17ccee.  v3:= 0I;
  #L17ccf0.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.b` @type ^`java.lang.Object` := v3 @kind object;
  #L17ccf4.  v5.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.a` @type ^`int` := v2;
  #L17ccf8.  call temp:= `emit`(v1, v6, v5) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L17ccfe.  v6:= temp @kind object;
  #L17cd00.  if v6 != v0 then goto L17cd06;
  #L17cd04.  return v0 @kind object;
  #L17cd06.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17cd0a.  return v6 @kind object;
}
procedure `java.lang.Object` `invokeSuspend$$forInline`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineUnsafe$1$1;.invokeSuspend$$forInline:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L17cc30.  v3:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.b` @type ^`java.lang.Object` @kind object;
  #L17cc34.  v3:= (`kotlinx.coroutines.flow.FlowCollector`) v3 @kind object;
  #L17cc38.  v0:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.c` @type ^`java.lang.Object` @kind object;
  #L17cc3c.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L17cc40.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineUnsafe$1$1.d` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L17cc44.  call temp:= `invoke`(v1, v0, v2) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L17cc4a.  v0:= temp @kind object;
  #L17cc4c.  v1:= 0I;
  #L17cc4e.  call `mark`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L17cc54.  call temp:= `emit`(v3, v0, v2) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L17cc5a.  v3:= 1I;
  #L17cc5c.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L17cc62.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17cc66.  return v3 @kind object;
}
