record `kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlin.jvm.internal.Ref$BooleanRef` `kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1` v0 @kind this, `kotlin.jvm.internal.Ref$BooleanRef` v1 @kind object, `kotlinx.coroutines.flow.FlowCollector` v2 @kind object) @signature `Lkotlinx/coroutines/flow/StartedLazily$command$1$invokeSuspend$$inlined$collect$1;.<init>:(Lkotlin/jvm/internal/Ref$BooleanRef;Lkotlinx/coroutines/flow/FlowCollector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L18009c.  v0.`kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1.a` @type ^`kotlin.jvm.internal.Ref$BooleanRef` := v1 @kind object;
  #L1800a0.  v0.`kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` := v2 @kind object;
  #L1800a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1800aa.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/StartedLazily$command$1$invokeSuspend$$inlined$collect$1;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L17ffe4.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1` @kind boolean;
  #L17ffe8.  if v0 == 0 then goto L18000a;
  #L17ffec.  v0:= v6 @kind object;
  #L17ffee.  v0:= (`kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1`) v0 @kind object;
  #L17fff2.  v1:= v0.`kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1.b` @type ^`int`;
  #L17fff6.  v2:= -2147483648I;
  #L17fffa.  v3:= v1 ^& v2 @kind int;
  #L17fffe.  if v3 == 0 then goto L18000a;
  #L180002.  v1:= v1 - v2 @kind int;
  #L180004.  v0.`kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1.b` @type ^`int` := v1;
  #L180008.  goto L180014;
  #L18000a.  v0:= new `kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1`;
  #L18000e.  call `<init>`(v0, v4, v6) @signature `Lkotlinx/coroutines/flow/StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1;.<init>:(Lkotlinx/coroutines/flow/StartedLazily$command$1$invokeSuspend$$inlined$collect$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L180014.  v6:= v0.`kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1.a` @type ^`java.lang.Object` @kind object;
  #L180018.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L18001e.  v1:= temp @kind object;
  #L180020.  v2:= v0.`kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1.b` @type ^`int`;
  #L180024.  v3:= 1I;
  #L180026.  if v2 == 0 then goto L180046;
  #L18002a.  if v2 != v3 then goto L180036;
  #L18002e.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L180034.  goto L180086;
  #L180036.  v5:= new `java.lang.IllegalStateException`;
  #L18003a.  v6:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L18003e.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L180044.  throw v5;
  #L180046.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L18004c.  v5:= (`java.lang.Number`) v5 @kind object;
  #L180050.  call temp:= `intValue`(v5) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L180056.  v5:= temp;
  #L180058.  if v5 <= 0 then goto L180086;
  #L18005c.  v5:= v4.`kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1.a` @type ^`kotlin.jvm.internal.Ref$BooleanRef` @kind object;
  #L180060.  v6:= v5.`kotlin.jvm.internal.Ref$BooleanRef.element` @type ^`boolean` @kind boolean;
  #L180064.  if v6 != 0 then goto L180086;
  #L180068.  v5.`kotlin.jvm.internal.Ref$BooleanRef.element` @type ^`boolean` := v3 @kind boolean;
  #L18006c.  v5:= v4.`kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L180070.  v6:= `@@kotlinx.coroutines.flow.SharingCommand.START` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L180074.  v0.`kotlinx.coroutines.flow.StartedLazily$command$1$invokeSuspend$$inlined$collect$1$1.b` @type ^`int` := v3;
  #L180078.  call temp:= `emit`(v5, v6, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L18007e.  v5:= temp @kind object;
  #L180080.  if v5 != v1 then goto L180086;
  #L180084.  return v1 @kind object;
  #L180086.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L18008a.  return v5 @kind object;
}
