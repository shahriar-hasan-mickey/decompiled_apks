record `kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.internal.Ref$ObjectRef` `kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.jvm.internal.Ref$ObjectRef` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$catchImpl$$inlined$collect$1;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/internal/Ref$ObjectRef;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L174ac8.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1.a` @type ^`kotlinx.coroutines.flow.FlowCollector` := v1 @kind object;
  #L174acc.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1.b` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v2 @kind object;
  #L174ad0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L174ad6.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$catchImpl$$inlined$collect$1;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1749fc.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1$1` @kind boolean;
  #L174a00.  if v0 == 0 then goto L174a22;
  #L174a04.  v0:= v6 @kind object;
  #L174a06.  v0:= (`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1$1`) v0 @kind object;
  #L174a0a.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1$1.b` @type ^`int`;
  #L174a0e.  v2:= -2147483648I;
  #L174a12.  v3:= v1 ^& v2 @kind int;
  #L174a16.  if v3 == 0 then goto L174a22;
  #L174a1a.  v1:= v1 - v2 @kind int;
  #L174a1c.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1$1.b` @type ^`int` := v1;
  #L174a20.  goto L174a2c;
  #L174a22.  v0:= new `kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1$1`;
  #L174a26.  call `<init>`(v0, v4, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$catchImpl$$inlined$collect$1$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$catchImpl$$inlined$collect$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L174a2c.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1$1.a` @type ^`java.lang.Object` @kind object;
  #L174a30.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L174a36.  v1:= temp @kind object;
  #L174a38.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1$1.b` @type ^`int`;
  #L174a3c.  v3:= 1I;
  #L174a3e.  if v2 == 0 then goto L174a6a;
  #L174a42.  if v2 != v3 then goto L174a5a;
  #L174a46.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1$1.d` @type ^`java.lang.Object` @kind object;
  #L174a4a.  v5:= (`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1`) v5 @kind object;
  #L174a4e.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L174a54.  goto L174a8a;
  #L174a56.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L174a58.  goto L174a94;
  #L174a5a.  v5:= new `java.lang.IllegalStateException`;
  #L174a5e.  v6:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L174a62.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L174a68.  throw v5;
  #L174a6a.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L174a70.  v6:= v4.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1.a` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L174a74.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1$1.d` @type ^`java.lang.Object` := v4 @kind object;
  #L174a78.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1$1.b` @type ^`int` := v3;
  #L174a7c.  call temp:= `emit`(v6, v5, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L174a82.  v5:= temp @kind object;
  #L174a84.  if v5 != v1 then goto L174a8a;
  #L174a88.  return v1 @kind object;
  #L174a8a.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L174a8e.  return v5 @kind object;
  #L174a90.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L174a92.  v5:= v4 @kind object;
  #L174a94.  v5:= v5.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catchImpl$$inlined$collect$1.b` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L174a98.  v5.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v6 @kind object;
  #L174a9c.  throw v6;
  catch `java.lang.Throwable` @[L174a4e..L174a54] goto L174a56;
  catch `java.lang.Throwable` @[L174a70..L174a84] goto L174a90;
}
