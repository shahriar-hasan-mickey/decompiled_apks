record `kotlinx.coroutines.flow.o` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.flow.SharedFlow` @kind interface {
  `kotlinx.coroutines.flow.SharedFlow` `kotlinx.coroutines.flow.o.a` @AccessFlag PRIVATE_FINAL;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.o.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.o` v0 @kind this, `kotlinx.coroutines.flow.SharedFlow` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/o;.<init>:(Lkotlinx/coroutines/flow/SharedFlow;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1812ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1812b2.  v0.`kotlinx.coroutines.flow.o.a` @type ^`kotlinx.coroutines.flow.SharedFlow` := v1 @kind object;
  #L1812b6.  v0.`kotlinx.coroutines.flow.o.b` @type ^`kotlin.jvm.functions.Function2` := v2 @kind object;
  #L1812ba.  return @kind void;
}
procedure `java.lang.Object` `collect`(`kotlinx.coroutines.flow.o` v3 @kind this, `kotlinx.coroutines.flow.FlowCollector` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/o;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L18124c.  v0:= v3.`kotlinx.coroutines.flow.o.a` @type ^`kotlinx.coroutines.flow.SharedFlow` @kind object;
  #L181250.  v1:= new `kotlinx.coroutines.flow.SubscribedFlowCollector`;
  #L181254.  v2:= v3.`kotlinx.coroutines.flow.o.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L181258.  call `<init>`(v1, v4, v2) @signature `Lkotlinx/coroutines/flow/SubscribedFlowCollector;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L18125e.  call temp:= `collect`(v0, v1, v5) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L181264.  v4:= temp @kind object;
  #L181266.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L18126c.  v5:= temp @kind object;
  #L18126e.  if v4 != v5 then goto L181274;
  #L181272.  return v4 @kind object;
  #L181274.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L181278.  return v4 @kind object;
}
procedure `java.util.List` `getReplayCache`(`kotlinx.coroutines.flow.o` v1 @kind this) @signature `Lkotlinx/coroutines/flow/o;.getReplayCache:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18128c.  v0:= v1.`kotlinx.coroutines.flow.o.a` @type ^`kotlinx.coroutines.flow.SharedFlow` @kind object;
  #L181290.  call temp:= `getReplayCache`(v0) @signature `Lkotlinx/coroutines/flow/SharedFlow;.getReplayCache:()Ljava/util/List;` @kind interface;
  #L181296.  v0:= temp @kind object;
  #L181298.  return v0 @kind object;
}
