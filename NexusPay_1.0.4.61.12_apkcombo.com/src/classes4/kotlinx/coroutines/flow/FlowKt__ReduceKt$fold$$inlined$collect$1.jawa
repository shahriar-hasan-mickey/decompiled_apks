record `kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlin.jvm.internal.Ref$ObjectRef` `kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1` v0 @kind this, `kotlin.jvm.internal.Ref$ObjectRef` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$fold$$inlined$collect$1;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlin/jvm/functions/Function3;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L177c90.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1.a` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v1 @kind object;
  #L177c94.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1.b` @type ^`kotlin.jvm.functions.Function3` := v2 @kind object;
  #L177c98.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L177c9e.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1` v6 @kind this, `java.lang.Object` v7 @kind object, `kotlin.coroutines.Continuation` v8 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$fold$$inlined$collect$1;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L177bdc.  v0:= instanceof @variable v8 @type ^`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1` @kind boolean;
  #L177be0.  if v0 == 0 then goto L177c02;
  #L177be4.  v0:= v8 @kind object;
  #L177be6.  v0:= (`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1`) v0 @kind object;
  #L177bea.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1.b` @type ^`int`;
  #L177bee.  v2:= -2147483648I;
  #L177bf2.  v3:= v1 ^& v2 @kind int;
  #L177bf6.  if v3 == 0 then goto L177c02;
  #L177bfa.  v1:= v1 - v2 @kind int;
  #L177bfc.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1.b` @type ^`int` := v1;
  #L177c00.  goto L177c0c;
  #L177c02.  v0:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1`;
  #L177c06.  call `<init>`(v0, v6, v8) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$fold$$inlined$collect$1$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__ReduceKt$fold$$inlined$collect$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L177c0c.  v8:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1.a` @type ^`java.lang.Object` @kind object;
  #L177c10.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L177c16.  v1:= temp @kind object;
  #L177c18.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1.b` @type ^`int`;
  #L177c1c.  v3:= 1I;
  #L177c1e.  if v2 == 0 then goto L177c46;
  #L177c22.  if v2 != v3 then goto L177c36;
  #L177c26.  v7:= v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1.d` @type ^`java.lang.Object` @kind object;
  #L177c2a.  v7:= (`kotlin.jvm.internal.Ref$ObjectRef`) v7 @kind object;
  #L177c2e.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L177c34.  goto L177c74;
  #L177c36.  v7:= new `java.lang.IllegalStateException`;
  #L177c3a.  v8:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L177c3e.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L177c44.  throw v7;
  #L177c46.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L177c4c.  v8:= v6.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1.a` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L177c50.  v2:= v6.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1.b` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L177c54.  v4:= v8.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L177c58.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1.d` @type ^`java.lang.Object` := v8 @kind object;
  #L177c5c.  v0.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1.b` @type ^`int` := v3;
  #L177c60.  call temp:= `invoke`(v2, v4, v7, v0) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L177c66.  v7:= temp @kind object;
  #L177c68.  if v7 != v1 then goto L177c6e;
  #L177c6c.  return v1 @kind object;
  #L177c6e.  v5:= v8 @kind object;
  #L177c70.  v8:= v7 @kind object;
  #L177c72.  v7:= v5 @kind object;
  #L177c74.  v7.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v8 @kind object;
  #L177c78.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L177c7c.  return v7 @kind object;
}
procedure `java.lang.Object` `emit$$forInline`(`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$fold$$inlined$collect$1;.emit$$forInline:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L177b94.  v0:= 4I;
  #L177b96.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L177b9c.  v0:= new `kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1$1`;
  #L177ba0.  call `<init>`(v0, v3, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ReduceKt$fold$$inlined$collect$1$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__ReduceKt$fold$$inlined$collect$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L177ba6.  v0:= 5I;
  #L177ba8.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L177bae.  v0:= v3.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1.a` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L177bb2.  v1:= v3.`kotlinx.coroutines.flow.FlowKt__ReduceKt$fold$$inlined$collect$1.b` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L177bb6.  v2:= v0.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L177bba.  call temp:= `invoke`(v1, v2, v4, v5) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L177bc0.  v4:= temp @kind object;
  #L177bc2.  v0.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v4 @kind object;
  #L177bc6.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L177bca.  return v4 @kind object;
}
