record `kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.Flow` @kind interface {
  `java.lang.Object`[] `kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1;.<init>:([Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L171344.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1.a` @type ^`java.lang.Object`[] := v1 @kind object;
  #L171348.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17134e.  return @kind void;
}
procedure `java.lang.Object` `collect`(`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1` v7 @kind this, `kotlinx.coroutines.flow.FlowCollector` v8 @kind object, `kotlin.coroutines.Continuation` v9 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L17126c.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1` @kind boolean;
  #L171270.  if v0 == 0 then goto L171292;
  #L171274.  v0:= v9 @kind object;
  #L171276.  v0:= (`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1`) v0 @kind object;
  #L17127a.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.b` @type ^`int`;
  #L17127e.  v2:= -2147483648I;
  #L171282.  v3:= v1 ^& v2 @kind int;
  #L171286.  if v3 == 0 then goto L171292;
  #L17128a.  v1:= v1 - v2 @kind int;
  #L17128c.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.b` @type ^`int` := v1;
  #L171290.  goto L17129c;
  #L171292.  v0:= new `kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1`;
  #L171296.  call `<init>`(v0, v7, v9) @signature `Lkotlinx/coroutines/flow/FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L17129c.  v9:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.a` @type ^`java.lang.Object` @kind object;
  #L1712a0.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1712a6.  v1:= temp @kind object;
  #L1712a8.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.b` @type ^`int`;
  #L1712ac.  v3:= 1I;
  #L1712ae.  if v2 == 0 then goto L1712e8;
  #L1712b2.  if v2 != v3 then goto L1712d8;
  #L1712b6.  v8:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.g` @type ^`int`;
  #L1712ba.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.f` @type ^`int`;
  #L1712be.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.e` @type ^`java.lang.Object` @kind object;
  #L1712c2.  v4:= (`java.lang.Object`[]) v4 @kind object;
  #L1712c6.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.d` @type ^`java.lang.Object` @kind object;
  #L1712ca.  v5:= (`kotlinx.coroutines.flow.FlowCollector`) v5 @kind object;
  #L1712ce.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1712d4.  v9:= v5 @kind object;
  #L1712d6.  goto L1712fe;
  #L1712d8.  v8:= new `java.lang.IllegalStateException`;
  #L1712dc.  v9:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L1712e0.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1712e6.  throw v8;
  #L1712e8.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1712ee.  v9:= v7.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1.a` @type ^`java.lang.Object`[] @kind object;
  #L1712f2.  v2:= 0I;
  #L1712f4.  v4:= length @variable v9;
  #L1712f6.  v6:= v9 @kind object;
  #L1712f8.  v9:= v8 @kind object;
  #L1712fa.  v8:= v4;
  #L1712fc.  v4:= v6 @kind object;
  #L1712fe.  if v2 >= v8 then goto L17132c;
  #L171302.  v5:= v4[v2] @kind object;
  #L171306.  v2:= v2 + 1;
  #L17130a.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.d` @type ^`java.lang.Object` := v9 @kind object;
  #L17130e.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.e` @type ^`java.lang.Object` := v4 @kind object;
  #L171312.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.f` @type ^`int` := v2;
  #L171316.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.g` @type ^`int` := v8;
  #L17131a.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$flowOf$$inlined$unsafeFlow$1$1.b` @type ^`int` := v3;
  #L17131e.  call temp:= `emit`(v9, v5, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L171324.  v5:= temp @kind object;
  #L171326.  if v5 != v1 then goto L1712fe;
  #L17132a.  return v1 @kind object;
  #L17132c.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L171330.  return v8 @kind object;
}
