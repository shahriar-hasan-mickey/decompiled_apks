record `kotlinx.coroutines.flow.SubscribedFlowCollector` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.SubscribedFlowCollector.a` @AccessFlag PRIVATE_FINAL;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.SubscribedFlowCollector.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.SubscribedFlowCollector` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/SubscribedFlowCollector;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L18122c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L181232.  v0.`kotlinx.coroutines.flow.SubscribedFlowCollector.a` @type ^`kotlinx.coroutines.flow.FlowCollector` := v1 @kind object;
  #L181236.  v0.`kotlinx.coroutines.flow.SubscribedFlowCollector.b` @type ^`kotlin.jvm.functions.Function2` := v2 @kind object;
  #L18123a.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.SubscribedFlowCollector` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/SubscribedFlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1810d8.  v0:= v1.`kotlinx.coroutines.flow.SubscribedFlowCollector.a` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L1810dc.  call temp:= `emit`(v0, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L1810e2.  v2:= temp @kind object;
  #L1810e4.  return v2 @kind object;
}
procedure `java.lang.Object` `onSubscription`(`kotlinx.coroutines.flow.SubscribedFlowCollector` v6 @kind this, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/flow/SubscribedFlowCollector;.onSubscription:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1810f8.  v0:= instanceof @variable v7 @type ^`kotlinx.coroutines.flow.SubscribedFlowCollector$a` @kind boolean;
  #L1810fc.  if v0 == 0 then goto L18111e;
  #L181100.  v0:= v7 @kind object;
  #L181102.  v0:= (`kotlinx.coroutines.flow.SubscribedFlowCollector$a`) v0 @kind object;
  #L181106.  v1:= v0.`kotlinx.coroutines.flow.SubscribedFlowCollector$a.e` @type ^`int`;
  #L18110a.  v2:= -2147483648I;
  #L18110e.  v3:= v1 ^& v2 @kind int;
  #L181112.  if v3 == 0 then goto L18111e;
  #L181116.  v1:= v1 - v2 @kind int;
  #L181118.  v0.`kotlinx.coroutines.flow.SubscribedFlowCollector$a.e` @type ^`int` := v1;
  #L18111c.  goto L181128;
  #L18111e.  v0:= new `kotlinx.coroutines.flow.SubscribedFlowCollector$a`;
  #L181122.  call `<init>`(v0, v6, v7) @signature `Lkotlinx/coroutines/flow/SubscribedFlowCollector$a;.<init>:(Lkotlinx/coroutines/flow/SubscribedFlowCollector;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L181128.  v7:= v0.`kotlinx.coroutines.flow.SubscribedFlowCollector$a.c` @type ^`java.lang.Object` @kind object;
  #L18112c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L181132.  v1:= temp @kind object;
  #L181134.  v2:= v0.`kotlinx.coroutines.flow.SubscribedFlowCollector$a.e` @type ^`int`;
  #L181138.  v3:= 2I;
  #L18113a.  v4:= 1I;
  #L18113c.  if v2 == 0 then goto L18117c;
  #L181140.  if v2 == v4 then goto L181160;
  #L181144.  if v2 != v3 then goto L181150;
  #L181148.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L18114e.  goto L1811ec;
  #L181150.  v7:= new `java.lang.IllegalStateException`;
  #L181154.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L181158.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L18115e.  throw v7;
  #L181160.  v2:= v0.`kotlinx.coroutines.flow.SubscribedFlowCollector$a.b` @type ^`java.lang.Object` @kind object;
  #L181164.  v2:= (`kotlinx.coroutines.flow.internal.SafeCollector`) v2 @kind object;
  #L181168.  v4:= v0.`kotlinx.coroutines.flow.SubscribedFlowCollector$a.a` @type ^`java.lang.Object` @kind object;
  #L18116c.  v4:= (`kotlinx.coroutines.flow.SubscribedFlowCollector`) v4 @kind object;
  #L181170.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L181176.  goto L1811ba;
  #L181178.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L18117a.  goto L1811fc;
  #L18117c.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L181182.  v7:= v6.`kotlinx.coroutines.flow.SubscribedFlowCollector.a` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L181186.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L18118c.  v2:= temp @kind object;
  #L18118e.  v5:= new `kotlinx.coroutines.flow.internal.SafeCollector`;
  #L181192.  call `<init>`(v5, v7, v2) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/CoroutineContext;)V` @kind direct;
  #L181198.  v7:= v6.`kotlinx.coroutines.flow.SubscribedFlowCollector.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L18119c.  v0.`kotlinx.coroutines.flow.SubscribedFlowCollector$a.a` @type ^`java.lang.Object` := v6 @kind object;
  #L1811a0.  v0.`kotlinx.coroutines.flow.SubscribedFlowCollector$a.b` @type ^`java.lang.Object` := v5 @kind object;
  #L1811a4.  v0.`kotlinx.coroutines.flow.SubscribedFlowCollector$a.e` @type ^`int` := v4;
  #L1811a8.  call temp:= `invoke`(v7, v5, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1811ae.  v7:= temp @kind object;
  #L1811b0.  if v7 != v1 then goto L1811b6;
  #L1811b4.  return v1 @kind object;
  #L1811b6.  v4:= v6 @kind object;
  #L1811b8.  v2:= v5 @kind object;
  #L1811ba.  call `releaseIntercepted`(v2) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector;.releaseIntercepted:()V` @kind virtual;
  #L1811c0.  v7:= v4.`kotlinx.coroutines.flow.SubscribedFlowCollector.a` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L1811c4.  v2:= instanceof @variable v7 @type ^`kotlinx.coroutines.flow.SubscribedFlowCollector` @kind boolean;
  #L1811c8.  if v2 == 0 then goto L1811f2;
  #L1811cc.  v7:= (`kotlinx.coroutines.flow.SubscribedFlowCollector`) v7 @kind object;
  #L1811d0.  v2:= 0I;
  #L1811d2.  v0.`kotlinx.coroutines.flow.SubscribedFlowCollector$a.a` @type ^`java.lang.Object` := v2 @kind object;
  #L1811d6.  v0.`kotlinx.coroutines.flow.SubscribedFlowCollector$a.b` @type ^`java.lang.Object` := v2 @kind object;
  #L1811da.  v0.`kotlinx.coroutines.flow.SubscribedFlowCollector$a.e` @type ^`int` := v3;
  #L1811de.  call temp:= `onSubscription`(v7, v0) @signature `Lkotlinx/coroutines/flow/SubscribedFlowCollector;.onSubscription:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L1811e4.  v7:= temp @kind object;
  #L1811e6.  if v7 != v1 then goto L1811ec;
  #L1811ea.  return v1 @kind object;
  #L1811ec.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1811f0.  return v7 @kind object;
  #L1811f2.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1811f6.  return v7 @kind object;
  #L1811f8.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1811fa.  v2:= v5 @kind object;
  #L1811fc.  call `releaseIntercepted`(v2) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector;.releaseIntercepted:()V` @kind virtual;
  #L181202.  throw v7;
  catch `java.lang.Throwable` @[L181170..L181176] goto L181178;
  catch `java.lang.Throwable` @[L181198..L1811b0] goto L1811f8;
}
