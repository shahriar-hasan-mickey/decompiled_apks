record `kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.Flow` @kind interface {
  `int`[] `kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7` v0 @kind this, `int`[] v1 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7;.<init>:([I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L170f58.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7.a` @type ^`int`[] := v1 @kind object;
  #L170f5c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L170f62.  return @kind void;
}
procedure `java.lang.Object` `collect`(`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7` v6 @kind this, `kotlinx.coroutines.flow.FlowCollector` v7 @kind object, `kotlin.coroutines.Continuation` v8 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L170e6c.  v0:= instanceof @variable v8 @type ^`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1` @kind boolean;
  #L170e70.  if v0 == 0 then goto L170e92;
  #L170e74.  v0:= v8 @kind object;
  #L170e76.  v0:= (`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1`) v0 @kind object;
  #L170e7a.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1.b` @type ^`int`;
  #L170e7e.  v2:= -2147483648I;
  #L170e82.  v3:= v1 ^& v2 @kind int;
  #L170e86.  if v3 == 0 then goto L170e92;
  #L170e8a.  v1:= v1 - v2 @kind int;
  #L170e8c.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1.b` @type ^`int` := v1;
  #L170e90.  goto L170e9c;
  #L170e92.  v0:= new `kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1`;
  #L170e96.  call `<init>`(v0, v6, v8) @signature `Lkotlinx/coroutines/flow/FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L170e9c.  v8:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1.a` @type ^`java.lang.Object` @kind object;
  #L170ea0.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L170ea6.  v1:= temp @kind object;
  #L170ea8.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1.b` @type ^`int`;
  #L170eac.  v3:= 1I;
  #L170eae.  if v2 == 0 then goto L170ee8;
  #L170eb2.  if v2 != v3 then goto L170ed8;
  #L170eb6.  v7:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1.g` @type ^`int`;
  #L170eba.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1.f` @type ^`int`;
  #L170ebe.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1.e` @type ^`java.lang.Object` @kind object;
  #L170ec2.  v4:= (`int`[]) v4 @kind object;
  #L170ec6.  v5:= v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1.d` @type ^`java.lang.Object` @kind object;
  #L170eca.  v5:= (`kotlinx.coroutines.flow.FlowCollector`) v5 @kind object;
  #L170ece.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L170ed4.  v8:= v5 @kind object;
  #L170ed6.  goto L170f3e;
  #L170ed8.  v7:= new `java.lang.IllegalStateException`;
  #L170edc.  v8:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L170ee0.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L170ee6.  throw v7;
  #L170ee8.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L170eee.  v8:= v6.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7.a` @type ^`int`[] @kind object;
  #L170ef2.  v2:= length @variable v8;
  #L170ef4.  v4:= 0I;
  #L170ef6.  v4:= v8 @kind object;
  #L170ef8.  v8:= v7 @kind object;
  #L170efa.  v7:= 0I;
  #L170efc.  if v7 >= v2 then goto L170f42;
  #L170f00.  v5:= v4[v7];
  #L170f04.  call temp:= `boxInt`(v5) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxInt:(I)Ljava/lang/Integer;` @kind static;
  #L170f0a.  v5:= temp @kind object;
  #L170f0c.  call temp:= `intValue`(v5) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L170f12.  v5:= temp;
  #L170f14.  call temp:= `boxInt`(v5) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxInt:(I)Ljava/lang/Integer;` @kind static;
  #L170f1a.  v5:= temp @kind object;
  #L170f1c.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1.d` @type ^`java.lang.Object` := v8 @kind object;
  #L170f20.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1.e` @type ^`java.lang.Object` := v4 @kind object;
  #L170f24.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1.f` @type ^`int` := v2;
  #L170f28.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1.g` @type ^`int` := v7;
  #L170f2c.  v0.`kotlinx.coroutines.flow.FlowKt__BuildersKt$asFlow$$inlined$unsafeFlow$7$1.b` @type ^`int` := v3;
  #L170f30.  call temp:= `emit`(v8, v5, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L170f36.  v5:= temp @kind object;
  #L170f38.  if v5 != v1 then goto L170f3e;
  #L170f3c.  return v1 @kind object;
  #L170f3e.  v7:= v7 + v3 @kind int;
  #L170f40.  goto L170efc;
  #L170f42.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L170f46.  return v7 @kind object;
}
