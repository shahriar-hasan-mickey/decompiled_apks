record `kotlinx.coroutines.flow.SubscribedFlowCollector$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.ContinuationImpl` @kind class {
  `java.lang.Object` `kotlinx.coroutines.flow.SubscribedFlowCollector$a.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.SubscribedFlowCollector$a.b` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.SubscribedFlowCollector$a.c` @AccessFlag SYNTHETIC;
  `kotlinx.coroutines.flow.SubscribedFlowCollector` `kotlinx.coroutines.flow.SubscribedFlowCollector$a.d` @AccessFlag FINAL_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.SubscribedFlowCollector$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.SubscribedFlowCollector$a` v0 @kind this, `kotlinx.coroutines.flow.SubscribedFlowCollector` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/SubscribedFlowCollector$a;.<init>:(Lkotlinx/coroutines/flow/SubscribedFlowCollector;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1810bc.  v0.`kotlinx.coroutines.flow.SubscribedFlowCollector$a.d` @type ^`kotlinx.coroutines.flow.SubscribedFlowCollector` := v1 @kind object;
  #L1810c0.  call `<init>`(v0, v2) @signature `Lkotlin/coroutines/jvm/internal/ContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1810c6.  return @kind void;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.SubscribedFlowCollector$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/SubscribedFlowCollector$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L18108c.  v1.`kotlinx.coroutines.flow.SubscribedFlowCollector$a.c` @type ^`java.lang.Object` := v2 @kind object;
  #L181090.  v2:= v1.`kotlinx.coroutines.flow.SubscribedFlowCollector$a.e` @type ^`int`;
  #L181094.  v0:= -2147483648I;
  #L181098.  v2:= v2 ^| v0 @kind int;
  #L18109a.  v1.`kotlinx.coroutines.flow.SubscribedFlowCollector$a.e` @type ^`int` := v2;
  #L18109e.  v2:= v1.`kotlinx.coroutines.flow.SubscribedFlowCollector$a.d` @type ^`kotlinx.coroutines.flow.SubscribedFlowCollector` @kind object;
  #L1810a2.  call temp:= `onSubscription`(v2, v1) @signature `Lkotlinx/coroutines/flow/SubscribedFlowCollector;.onSubscription:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L1810a8.  v2:= temp @kind object;
  #L1810aa.  return v2 @kind object;
}
