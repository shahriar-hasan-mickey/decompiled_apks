record `kotlinx.coroutines.flow.FlowKt__ZipKt$b` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function0` @kind interface {
}
global `kotlinx.coroutines.flow.FlowKt__ZipKt$b` `@@kotlinx.coroutines.flow.FlowKt__ZipKt$b.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L17cd6c.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$b`;
  #L17cd70.  call `<init>`(v0) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$b;.<init>:()V` @kind direct;
  #L17cd76.  `@@kotlinx.coroutines.flow.FlowKt__ZipKt$b.a` @type ^`kotlinx.coroutines.flow.FlowKt__ZipKt$b` := v0 @kind object;
  #L17cd7a.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$b` v1 @kind this) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L17cd8c.  v0:= 0I;
  #L17cd8e.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L17cd94.  return @kind void;
}
procedure `java.lang.Void` `a`(`kotlinx.coroutines.flow.FlowKt__ZipKt$b` v1 @kind this) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$b;.a:()Ljava/lang/Void;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L17cd58.  v0:= 0I;
  #L17cd5a.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$b` v1 @kind this) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$b;.invoke:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L17cd3c.  call temp:= `a`(v1) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$b;.a:()Ljava/lang/Void;` @kind virtual;
  #L17cd42.  v0:= temp @kind object;
  #L17cd44.  return v0 @kind object;
}
