record `kotlinx.coroutines.flow.FlowKt__ZipKt` @kind class @AccessFlag FINAL_SYNTHETIC {
}
procedure `kotlin.jvm.functions.Function0` `a`() @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.a:()Lkotlin/jvm/functions/Function0;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L17cda8.  call temp:= `p`() @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.p:()Lkotlin/jvm/functions/Function0;` @kind static;
  #L17cdae.  v0:= temp @kind object;
  #L17cdb0.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `b`(`java.lang.Iterable` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.b:(Ljava/lang/Iterable;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L17cddc.  call temp:= `toList`(v1) @signature `Lkotlin/collections/CollectionsKt;.toList:(Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L17cde2.  v1:= temp @kind object;
  #L17cde4.  v0:= 0I;
  #L17cde6.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L17cdea.  call temp:= `toArray`(v1, v0) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L17cdf0.  v1:= temp @kind object;
  #L17cdf2.  if v1 == 0 then goto L17ce06;
  #L17cdf6.  v1:= (`kotlinx.coroutines.flow.Flow`[]) v1 @kind object;
  #L17cdfa.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$3`;
  #L17cdfe.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$unsafeFlow$3;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L17ce04.  return v0 @kind object;
  #L17ce06.  v1:= new `java.lang.NullPointerException`;
  #L17ce0a.  v2:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L17ce0e.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17ce14.  throw v1;
}
procedure `kotlinx.coroutines.flow.Flow` `c`(`kotlinx.coroutines.flow.Flow` v0 @kind object, `kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.c:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L17ce28.  call temp:= `flowCombine`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt;.flowCombine:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L17ce2e.  v0:= temp @kind object;
  #L17ce30.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `d`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlinx.coroutines.flow.Flow` v3 @kind object, `kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlin.jvm.functions.Function4` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.d:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function4;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L17ce44.  v0:= 3I;
  #L17ce46.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L17ce4a.  v1:= 0I;
  #L17ce4c.  v0[v1]:= v2 @kind object;
  #L17ce50.  v2:= 1I;
  #L17ce52.  v0[v2]:= v3 @kind object;
  #L17ce56.  v2:= 2I;
  #L17ce58.  v0[v2]:= v4 @kind object;
  #L17ce5c.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1`;
  #L17ce60.  call `<init>`(v2, v0, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$1;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function4;)V` @kind direct;
  #L17ce66.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `e`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlinx.coroutines.flow.Flow` v3 @kind object, `kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlinx.coroutines.flow.Flow` v5 @kind object, `kotlin.jvm.functions.Function5` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.e:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function5;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L17ce78.  v0:= 4I;
  #L17ce7a.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L17ce7e.  v1:= 0I;
  #L17ce80.  v0[v1]:= v2 @kind object;
  #L17ce84.  v2:= 1I;
  #L17ce86.  v0[v2]:= v3 @kind object;
  #L17ce8a.  v2:= 2I;
  #L17ce8c.  v0[v2]:= v4 @kind object;
  #L17ce90.  v2:= 3I;
  #L17ce92.  v0[v2]:= v5 @kind object;
  #L17ce96.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2`;
  #L17ce9a.  call `<init>`(v2, v0, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$2;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function5;)V` @kind direct;
  #L17cea0.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `f`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlinx.coroutines.flow.Flow` v3 @kind object, `kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlinx.coroutines.flow.Flow` v5 @kind object, `kotlinx.coroutines.flow.Flow` v6 @kind object, `kotlin.jvm.functions.Function6` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.f:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function6;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L17ceb4.  v0:= 5I;
  #L17ceb6.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L17ceba.  v1:= 0I;
  #L17cebc.  v0[v1]:= v2 @kind object;
  #L17cec0.  v2:= 1I;
  #L17cec2.  v0[v2]:= v3 @kind object;
  #L17cec6.  v2:= 2I;
  #L17cec8.  v0[v2]:= v4 @kind object;
  #L17cecc.  v2:= 3I;
  #L17cece.  v0[v2]:= v5 @kind object;
  #L17ced2.  v2:= 4I;
  #L17ced4.  v0[v2]:= v6 @kind object;
  #L17ced8.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3`;
  #L17cedc.  call `<init>`(v2, v0, v7) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$combineUnsafe$FlowKt__ZipKt$3;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function6;)V` @kind direct;
  #L17cee2.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `g`(`kotlinx.coroutines.flow.Flow`[] v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.g:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L17cef4.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$2`;
  #L17cef8.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$unsafeFlow$2;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L17cefe.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `h`(`java.lang.Iterable` v2 @kind object, `kotlin.jvm.functions.Function3` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.h:(Ljava/lang/Iterable;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L17cf10.  call temp:= `toList`(v2) @signature `Lkotlin/collections/CollectionsKt;.toList:(Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L17cf16.  v2:= temp @kind object;
  #L17cf18.  v0:= 0I;
  #L17cf1a.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L17cf1e.  call temp:= `toArray`(v2, v0) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L17cf24.  v2:= temp @kind object;
  #L17cf26.  if v2 == 0 then goto L17cf4a;
  #L17cf2a.  v2:= (`kotlinx.coroutines.flow.Flow`[]) v2 @kind object;
  #L17cf2e.  call `needClassReification`() @signature `Lkotlin/jvm/internal/Intrinsics;.needClassReification:()V` @kind static;
  #L17cf34.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$7`;
  #L17cf38.  v1:= 0I;
  #L17cf3a.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$7;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L17cf40.  call temp:= `flow`(v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.flow:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L17cf46.  v2:= temp @kind object;
  #L17cf48.  return v2 @kind object;
  #L17cf4a.  v2:= new `java.lang.NullPointerException`;
  #L17cf4e.  v3:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L17cf52.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17cf58.  throw v2;
}
procedure `kotlinx.coroutines.flow.Flow` `i`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlinx.coroutines.flow.Flow` v3 @kind object, `kotlin.jvm.functions.Function4` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.i:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function4;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L17cf6c.  v0:= 2I;
  #L17cf6e.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L17cf72.  v1:= 0I;
  #L17cf74.  v0[v1]:= v2 @kind object;
  #L17cf78.  v2:= 1I;
  #L17cf7a.  v0[v2]:= v3 @kind object;
  #L17cf7e.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2`;
  #L17cf82.  v3:= 0I;
  #L17cf84.  call `<init>`(v2, v0, v3, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$2;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function4;)V` @kind direct;
  #L17cf8a.  call temp:= `flow`(v2) @signature `Lkotlinx/coroutines/flow/FlowKt;.flow:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L17cf90.  v2:= temp @kind object;
  #L17cf92.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `j`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlinx.coroutines.flow.Flow` v3 @kind object, `kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlin.jvm.functions.Function5` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.j:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function5;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L17cfa4.  v0:= 3I;
  #L17cfa6.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L17cfaa.  v1:= 0I;
  #L17cfac.  v0[v1]:= v2 @kind object;
  #L17cfb0.  v2:= 1I;
  #L17cfb2.  v0[v2]:= v3 @kind object;
  #L17cfb6.  v2:= 2I;
  #L17cfb8.  v0[v2]:= v4 @kind object;
  #L17cfbc.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3`;
  #L17cfc0.  v3:= 0I;
  #L17cfc2.  call `<init>`(v2, v0, v3, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function5;)V` @kind direct;
  #L17cfc8.  call temp:= `flow`(v2) @signature `Lkotlinx/coroutines/flow/FlowKt;.flow:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L17cfce.  v2:= temp @kind object;
  #L17cfd0.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `k`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlinx.coroutines.flow.Flow` v3 @kind object, `kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlinx.coroutines.flow.Flow` v5 @kind object, `kotlin.jvm.functions.Function6` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.k:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function6;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L17cfe4.  v0:= 4I;
  #L17cfe6.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L17cfea.  v1:= 0I;
  #L17cfec.  v0[v1]:= v2 @kind object;
  #L17cff0.  v2:= 1I;
  #L17cff2.  v0[v2]:= v3 @kind object;
  #L17cff6.  v2:= 2I;
  #L17cff8.  v0[v2]:= v4 @kind object;
  #L17cffc.  v2:= 3I;
  #L17cffe.  v0[v2]:= v5 @kind object;
  #L17d002.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4`;
  #L17d006.  v3:= 0I;
  #L17d008.  call `<init>`(v2, v0, v3, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$4;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function6;)V` @kind direct;
  #L17d00e.  call temp:= `flow`(v2) @signature `Lkotlinx/coroutines/flow/FlowKt;.flow:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L17d014.  v2:= temp @kind object;
  #L17d016.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `l`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlinx.coroutines.flow.Flow` v3 @kind object, `kotlinx.coroutines.flow.Flow` v4 @kind object, `kotlinx.coroutines.flow.Flow` v5 @kind object, `kotlinx.coroutines.flow.Flow` v6 @kind object, `kotlin.jvm.functions.Function7` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.l:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function7;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L17d028.  v0:= 5I;
  #L17d02a.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L17d02e.  v1:= 0I;
  #L17d030.  v0[v1]:= v2 @kind object;
  #L17d034.  v2:= 1I;
  #L17d036.  v0[v2]:= v3 @kind object;
  #L17d03a.  v2:= 2I;
  #L17d03c.  v0[v2]:= v4 @kind object;
  #L17d040.  v2:= 3I;
  #L17d042.  v0[v2]:= v5 @kind object;
  #L17d046.  v2:= 4I;
  #L17d048.  v0[v2]:= v6 @kind object;
  #L17d04c.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5`;
  #L17d050.  v3:= 0I;
  #L17d052.  call `<init>`(v2, v0, v3, v7) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$5;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function7;)V` @kind direct;
  #L17d058.  call temp:= `flow`(v2) @signature `Lkotlinx/coroutines/flow/FlowKt;.flow:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L17d05e.  v2:= temp @kind object;
  #L17d060.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `m`(`kotlinx.coroutines.flow.Flow`[] v2 @kind object, `kotlin.jvm.functions.Function3` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.m:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L17d074.  call `needClassReification`() @signature `Lkotlin/jvm/internal/Intrinsics;.needClassReification:()V` @kind static;
  #L17d07a.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$6`;
  #L17d07e.  v1:= 0I;
  #L17d080.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$6;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L17d086.  call temp:= `flow`(v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.flow:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L17d08c.  v2:= temp @kind object;
  #L17d08e.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `n`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlin.jvm.functions.Function3` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.n:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L17d0a0.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combine$$inlined$unsafeFlow$1`;
  #L17d0a4.  call `<init>`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combine$$inlined$unsafeFlow$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)V` @kind direct;
  #L17d0aa.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `o`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlinx.coroutines.flow.Flow` v3 @kind object, `kotlin.jvm.functions.Function4` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.o:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function4;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L17d0bc.  v0:= 2I;
  #L17d0be.  v0:= new `kotlinx.coroutines.flow.Flow`[v0];
  #L17d0c2.  v1:= 0I;
  #L17d0c4.  v0[v1]:= v2 @kind object;
  #L17d0c8.  v2:= 1I;
  #L17d0ca.  v0[v2]:= v3 @kind object;
  #L17d0ce.  v2:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1`;
  #L17d0d2.  v3:= 0I;
  #L17d0d4.  call `<init>`(v2, v0, v3, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$1;.<init>:([Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function4;)V` @kind direct;
  #L17d0da.  call temp:= `flow`(v2) @signature `Lkotlinx/coroutines/flow/FlowKt;.flow:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L17d0e0.  v2:= temp @kind object;
  #L17d0e2.  return v2 @kind object;
}
procedure `kotlin.jvm.functions.Function0` `p`() @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.p:()Lkotlin/jvm/functions/Function0;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L17cdc4.  v0:= `@@kotlinx.coroutines.flow.FlowKt__ZipKt$b.a` @type ^`kotlinx.coroutines.flow.FlowKt__ZipKt$b` @kind object;
  #L17cdc8.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `q`(`kotlinx.coroutines.flow.Flow` v0 @kind object, `kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt;.q:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L17d0f4.  call temp:= `zipImpl`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt;.zipImpl:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L17d0fa.  v0:= temp @kind object;
  #L17d0fc.  return v0 @kind object;
}
