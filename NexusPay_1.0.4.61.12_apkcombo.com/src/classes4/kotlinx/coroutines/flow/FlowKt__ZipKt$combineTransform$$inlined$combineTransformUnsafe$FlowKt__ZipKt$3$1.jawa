record `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.c` @AccessFlag SYNTHETIC;
  `kotlin.jvm.functions.Function5` `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object, `kotlin.jvm.functions.Function5` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1;.<init>:(Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function5;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L17bc68.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.d` @type ^`kotlin.jvm.functions.Function5` := v2 @kind object;
  #L17bc6c.  v2:= 3I;
  #L17bc6e.  call `<init>`(v0, v2, v1) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L17bc74.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L17bb78.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L17bb7c.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L17bb80.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L17bb84.  call temp:= `invoke`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L17bb8a.  v1:= temp @kind object;
  #L17bb8c.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1` v2 @kind this, `kotlinx.coroutines.flow.FlowCollector` v3 @kind object, `java.lang.Object`[] v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L17bba0.  v0:= new `kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1`;
  #L17bba4.  v1:= v2.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.d` @type ^`kotlin.jvm.functions.Function5` @kind object;
  #L17bba8.  call `<init>`(v0, v5, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1;.<init>:(Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function5;)V` @kind direct;
  #L17bbae.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.b` @type ^`java.lang.Object` := v3 @kind object;
  #L17bbb2.  v0.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.c` @type ^`java.lang.Object` := v4 @kind object;
  #L17bbb6.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17bbba.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L17bbc0.  v3:= temp @kind object;
  #L17bbc2.  return v3 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1` v9 @kind this, `java.lang.Object` v10 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L17bbd4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L17bbda.  v0:= temp @kind object;
  #L17bbdc.  v1:= v9.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.a` @type ^`int`;
  #L17bbe0.  v2:= 1I;
  #L17bbe2.  if v1 == 0 then goto L17bc02;
  #L17bbe6.  if v1 != v2 then goto L17bbf2;
  #L17bbea.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17bbf0.  goto L17bc52;
  #L17bbf2.  v10:= new `java.lang.IllegalStateException`;
  #L17bbf6.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L17bbfa.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17bc00.  throw v10;
  #L17bc02.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17bc08.  v10:= v9.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.b` @type ^`java.lang.Object` @kind object;
  #L17bc0c.  v4:= v10 @kind object;
  #L17bc0e.  v4:= (`kotlinx.coroutines.flow.FlowCollector`) v4 @kind object;
  #L17bc12.  v10:= v9.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.c` @type ^`java.lang.Object` @kind object;
  #L17bc16.  v10:= (`java.lang.Object`[]) v10 @kind object;
  #L17bc1a.  v3:= v9.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.d` @type ^`kotlin.jvm.functions.Function5` @kind object;
  #L17bc1e.  v1:= 0I;
  #L17bc20.  v5:= v10[v1] @kind object;
  #L17bc24.  v6:= v10[v2] @kind object;
  #L17bc28.  v1:= 2I;
  #L17bc2a.  v7:= v10[v1] @kind object;
  #L17bc2e.  v9.`kotlinx.coroutines.flow.FlowKt__ZipKt$combineTransform$$inlined$combineTransformUnsafe$FlowKt__ZipKt$3$1.a` @type ^`int` := v2;
  #L17bc32.  v10:= 6I;
  #L17bc34.  call `mark`(v10) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L17bc3a.  v8:= v9 @kind object;
  #L17bc3c.  call temp:= `invoke`(v3, v4, v5, v6, v7, v8) @signature `Lkotlin/jvm/functions/Function5;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L17bc42.  v10:= temp @kind object;
  #L17bc44.  v1:= 7I;
  #L17bc46.  call `mark`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L17bc4c.  if v10 != v0 then goto L17bc52;
  #L17bc50.  return v0 @kind object;
  #L17bc52.  v10:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17bc56.  return v10 @kind object;
}
