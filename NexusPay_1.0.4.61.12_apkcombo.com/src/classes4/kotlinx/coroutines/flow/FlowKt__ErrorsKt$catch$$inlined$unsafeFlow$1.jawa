record `kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.Flow` @kind interface {
  `kotlinx.coroutines.flow.Flow` `kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1` v0 @kind this, `kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L17498c.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1.a` @type ^`kotlinx.coroutines.flow.Flow` := v1 @kind object;
  #L174990.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1.b` @type ^`kotlin.jvm.functions.Function3` := v2 @kind object;
  #L174994.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17499a.  return @kind void;
}
procedure `java.lang.Object` `collect`(`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1` v5 @kind this, `kotlinx.coroutines.flow.FlowCollector` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L174898.  v0:= instanceof @variable v7 @type ^`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1` @kind boolean;
  #L17489c.  if v0 == 0 then goto L1748be;
  #L1748a0.  v0:= v7 @kind object;
  #L1748a2.  v0:= (`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1`) v0 @kind object;
  #L1748a6.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1.b` @type ^`int`;
  #L1748aa.  v2:= -2147483648I;
  #L1748ae.  v3:= v1 ^& v2 @kind int;
  #L1748b2.  if v3 == 0 then goto L1748be;
  #L1748b6.  v1:= v1 - v2 @kind int;
  #L1748b8.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1.b` @type ^`int` := v1;
  #L1748bc.  goto L1748c8;
  #L1748be.  v0:= new `kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1`;
  #L1748c2.  call `<init>`(v0, v5, v7) @signature `Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1748c8.  v7:= v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1.a` @type ^`java.lang.Object` @kind object;
  #L1748cc.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1748d2.  v1:= temp @kind object;
  #L1748d4.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1.b` @type ^`int`;
  #L1748d8.  v3:= 2I;
  #L1748da.  v4:= 1I;
  #L1748dc.  if v2 == 0 then goto L174918;
  #L1748e0.  if v2 == v4 then goto L174900;
  #L1748e4.  if v2 != v3 then goto L1748f0;
  #L1748e8.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1748ee.  goto L174976;
  #L1748f0.  v6:= new `java.lang.IllegalStateException`;
  #L1748f4.  v7:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L1748f8.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1748fe.  throw v6;
  #L174900.  v6:= v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1.e` @type ^`java.lang.Object` @kind object;
  #L174904.  v6:= (`kotlinx.coroutines.flow.FlowCollector`) v6 @kind object;
  #L174908.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1.d` @type ^`java.lang.Object` @kind object;
  #L17490c.  v2:= (`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1`) v2 @kind object;
  #L174910.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L174916.  goto L17493e;
  #L174918.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17491e.  v7:= v5.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1.a` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L174922.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1.d` @type ^`java.lang.Object` := v5 @kind object;
  #L174926.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1.e` @type ^`java.lang.Object` := v6 @kind object;
  #L17492a.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1.b` @type ^`int` := v4;
  #L17492e.  call temp:= `catchImpl`(v7, v6, v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.catchImpl:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L174934.  v7:= temp @kind object;
  #L174936.  if v7 != v1 then goto L17493c;
  #L17493a.  return v1 @kind object;
  #L17493c.  v2:= v5 @kind object;
  #L17493e.  v7:= (`java.lang.Throwable`) v7 @kind object;
  #L174942.  if v7 == 0 then goto L174976;
  #L174946.  v2:= v2.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1.b` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L17494a.  v4:= 0I;
  #L17494c.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1.d` @type ^`java.lang.Object` := v4 @kind object;
  #L174950.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1.e` @type ^`java.lang.Object` := v4 @kind object;
  #L174954.  v0.`kotlinx.coroutines.flow.FlowKt__ErrorsKt$catch$$inlined$unsafeFlow$1$1.b` @type ^`int` := v3;
  #L174958.  v3:= 6I;
  #L17495a.  call `mark`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L174960.  call temp:= `invoke`(v2, v6, v7, v0) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L174966.  v6:= temp @kind object;
  #L174968.  v7:= 7I;
  #L17496a.  call `mark`(v7) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L174970.  if v6 != v1 then goto L174976;
  #L174974.  return v1 @kind object;
  #L174976.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17497a.  return v6 @kind object;
}
