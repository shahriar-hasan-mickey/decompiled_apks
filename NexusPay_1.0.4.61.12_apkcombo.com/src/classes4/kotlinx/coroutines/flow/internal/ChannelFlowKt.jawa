record `kotlinx.coroutines.flow.internal.ChannelFlowKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlinx.coroutines.flow.FlowCollector` `a`(`kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.coroutines.CoroutineContext` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowKt;.a:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/flow/FlowCollector;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L18190c.  v0:= instanceof @variable v1 @type ^`kotlinx.coroutines.flow.internal.SendingCollector` @kind boolean;
  #L181910.  if v0 == 0 then goto L181918;
  #L181914.  v0:= 1I;
  #L181916.  goto L18191c;
  #L181918.  v0:= instanceof @variable v1 @type ^`kotlinx.coroutines.flow.internal.NopCollector` @kind boolean;
  #L18191c.  if v0 == 0 then goto L181922;
  #L181920.  goto L18192e;
  #L181922.  v0:= new `kotlinx.coroutines.flow.internal.e`;
  #L181926.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/e;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/CoroutineContext;)V` @kind direct;
  #L18192c.  v1:= v0 @kind object;
  #L18192e.  return v1 @kind object;
}
procedure `kotlinx.coroutines.flow.FlowCollector` `access$withUndispatchedContextCollector`(`kotlinx.coroutines.flow.FlowCollector` v0 @kind object, `kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowKt;.access$withUndispatchedContextCollector:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/flow/FlowCollector;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1818f0.  call temp:= `a`(v0, v1) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowKt;.a:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/flow/FlowCollector;` @kind static;
  #L1818f6.  v0:= temp @kind object;
  #L1818f8.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.internal.ChannelFlow` `asChannelFlow`(`kotlinx.coroutines.flow.Flow` v8 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowKt;.asChannelFlow:(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/internal/ChannelFlow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L181940.  v0:= instanceof @variable v8 @type ^`kotlinx.coroutines.flow.internal.ChannelFlow` @kind boolean;
  #L181944.  if v0 == 0 then goto L181950;
  #L181948.  v0:= v8 @kind object;
  #L18194a.  v0:= (`kotlinx.coroutines.flow.internal.ChannelFlow`) v0 @kind object;
  #L18194e.  goto L181952;
  #L181950.  v0:= 0I;
  #L181952.  if v0 != 0 then goto L181970;
  #L181956.  v0:= new `kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl`;
  #L18195a.  v3:= 0I;
  #L18195c.  v4:= 0I;
  #L18195e.  v5:= 0I;
  #L181960.  v6:= 14I;
  #L181964.  v7:= 0I;
  #L181966.  v1:= v0 @kind object;
  #L181968.  v2:= v8 @kind object;
  #L18196a.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowOperatorImpl;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L181970.  return v0 @kind object;
}
procedure `java.lang.Object` `withContextUndispatched`(`kotlin.coroutines.CoroutineContext` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `kotlin.jvm.functions.Function2` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowKt;.withContextUndispatched:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L18186c.  call temp:= `updateThreadContext`(v2, v4) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L181872.  v4:= temp @kind object;
  #L181874.  v0:= new `kotlinx.coroutines.flow.internal.d`;
  #L181878.  call `<init>`(v0, v6, v2) @signature `Lkotlinx/coroutines/flow/internal/d;.<init>:(Lkotlin/coroutines/Continuation;Lkotlin/coroutines/CoroutineContext;)V` @kind direct;
  #L18187e.  if v5 == 0 then goto L1818b2;
  #L181882.  v1:= 2I;
  #L181884.  call temp:= `beforeCheckcastToFunctionOfArity`(v5, v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.beforeCheckcastToFunctionOfArity:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L18188a.  v5:= temp @kind object;
  #L18188c.  v5:= (`kotlin.jvm.functions.Function2`) v5 @kind object;
  #L181890.  call temp:= `invoke`(v5, v3, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L181896.  v3:= temp @kind object;
  #L181898.  call `restoreThreadContext`(v2, v4) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L18189e.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1818a4.  v2:= temp @kind object;
  #L1818a6.  if v3 != v2 then goto L1818b0;
  #L1818aa.  call `probeCoroutineSuspended`(v6) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L1818b0.  return v3 @kind object;
  #L1818b2.  v3:= new `java.lang.NullPointerException`;
  #L1818b6.  v5:= "null cannot be cast to non-null type (R, kotlin.coroutines.Continuation<T>) -> kotlin.Any?" @kind object;
  #L1818ba.  call `<init>`(v3, v5) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1818c0.  throw v3;
  #L1818c2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1818c4.  call `restoreThreadContext`(v2, v4) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L1818ca.  throw v3;
  catch `java.lang.Throwable` @[L181874..L181898] goto L1818c2;
  catch `java.lang.Throwable` @[L1818b2..L1818c2] goto L1818c2;
}
procedure `java.lang.Object` `withContextUndispatched$default`(`kotlin.coroutines.CoroutineContext` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object, `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowKt;.withContextUndispatched$default:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L181840.  v5:= v5 ^& 4;
  #L181844.  if v5 == 0 then goto L181850;
  #L181848.  call temp:= `threadContextElements`(v0) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.threadContextElements:(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/Object;` @kind static;
  #L18184e.  v2:= temp @kind object;
  #L181850.  call temp:= `withContextUndispatched`(v0, v1, v2, v3, v4) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowKt;.withContextUndispatched:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L181856.  v0:= temp @kind object;
  #L181858.  return v0 @kind object;
}
