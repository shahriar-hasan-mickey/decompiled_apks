record `kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.a` @AccessFlag ;
  `kotlinx.coroutines.flow.Flow`[] `kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.b` @AccessFlag FINAL_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.c` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.atomic.AtomicInteger` `kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.d` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.channels.Channel` `kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1` v0 @kind this, `kotlinx.coroutines.flow.Flow`[] v1 @kind object, `int` v2 , `java.util.concurrent.atomic.AtomicInteger` v3 @kind object, `kotlinx.coroutines.channels.Channel` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1;.<init>:([Lkotlinx/coroutines/flow/Flow;ILjava/util/concurrent/atomic/AtomicInteger;Lkotlinx/coroutines/channels/Channel;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L182e00.  v0.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.b` @type ^`kotlinx.coroutines.flow.Flow`[] := v1 @kind object;
  #L182e04.  v0.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.c` @type ^`int` := v2;
  #L182e08.  v0.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.d` @type ^`java.util.concurrent.atomic.AtomicInteger` := v3 @kind object;
  #L182e0c.  v0.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.e` @type ^`kotlinx.coroutines.channels.Channel` := v4 @kind object;
  #L182e10.  v1:= 2I;
  #L182e12.  call `<init>`(v0, v1, v5) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L182e18.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1` v6 @kind this, `java.lang.Object` v7 @kind object, `kotlin.coroutines.Continuation` v8 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L182dd0.  v7:= new `kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1`;
  #L182dd4.  v1:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.b` @type ^`kotlinx.coroutines.flow.Flow`[] @kind object;
  #L182dd8.  v2:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.c` @type ^`int`;
  #L182ddc.  v3:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.d` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L182de0.  v4:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.e` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L182de4.  v0:= v7 @kind object;
  #L182de6.  v5:= v8 @kind object;
  #L182de8.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1;.<init>:([Lkotlinx/coroutines/flow/Flow;ILjava/util/concurrent/atomic/AtomicInteger;Lkotlinx/coroutines/channels/Channel;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L182dee.  return v7 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L182cb8.  v1:= (`kotlinx.coroutines.CoroutineScope`) v1 @kind object;
  #L182cbc.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L182cc0.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L182cc6.  v1:= temp @kind object;
  #L182cc8.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1` v0 @kind this, `kotlinx.coroutines.CoroutineScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L182cdc.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L182ce2.  v1:= temp @kind object;
  #L182ce4.  v1:= (`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1`) v1 @kind object;
  #L182ce8.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L182cec.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L182cf2.  v1:= temp @kind object;
  #L182cf4.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L182d08.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L182d0e.  v0:= temp @kind object;
  #L182d10.  v1:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.a` @type ^`int`;
  #L182d14.  v2:= 0I;
  #L182d16.  v3:= 1I;
  #L182d18.  if v1 == 0 then goto L182d38;
  #L182d1c.  if v1 != v3 then goto L182d28;
  #L182d20.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L182d26.  goto L182d6e;
  #L182d28.  v7:= new `java.lang.IllegalStateException`;
  #L182d2c.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L182d30.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L182d36.  throw v7;
  #L182d38.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L182d3e.  v7:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.b` @type ^`kotlinx.coroutines.flow.Flow`[] @kind object;
  #L182d42.  v1:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.c` @type ^`int`;
  #L182d46.  v7:= v7[v1] @kind object;
  #L182d4a.  v1:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.e` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L182d4e.  v4:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.c` @type ^`int`;
  #L182d52.  v5:= new `kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$invokeSuspend$$inlined$collect$1`;
  #L182d56.  call `<init>`(v5, v1, v4) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$combineInternal$2$1$invokeSuspend$$inlined$collect$1;.<init>:(Lkotlinx/coroutines/channels/Channel;I)V` @kind direct;
  #L182d5c.  v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.a` @type ^`int` := v3;
  #L182d60.  call temp:= `collect`(v7, v5, v6) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L182d66.  v7:= temp @kind object;
  #L182d68.  if v7 != v0 then goto L182d6e;
  #L182d6c.  return v0 @kind object;
  #L182d6e.  v7:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.d` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L182d72.  call temp:= `decrementAndGet`(v7) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L182d78.  v7:= temp;
  #L182d7a.  if v7 != 0 then goto L182d88;
  #L182d7e.  v7:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.e` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L182d82.  call temp:= `close$default`(v7, v2, v3, v2) @signature `Lkotlinx/coroutines/channels/SendChannel$DefaultImpls;.close$default:(Lkotlinx/coroutines/channels/SendChannel;Ljava/lang/Throwable;ILjava/lang/Object;)Z` @kind static;
  #L182d88.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L182d8c.  return v7 @kind object;
  #L182d8e.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L182d90.  v0:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.d` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L182d94.  call temp:= `decrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L182d9a.  v0:= temp;
  #L182d9c.  if v0 != 0 then goto L182daa;
  #L182da0.  v0:= v6.`kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1.e` @type ^`kotlinx.coroutines.channels.Channel` @kind object;
  #L182da4.  call temp:= `close$default`(v0, v2, v3, v2) @signature `Lkotlinx/coroutines/channels/SendChannel$DefaultImpls;.close$default:(Lkotlinx/coroutines/channels/SendChannel;Ljava/lang/Throwable;ILjava/lang/Object;)Z` @kind static;
  #L182daa.  throw v7;
  catch `java.lang.Throwable` @[L182d20..L182d26] goto L182d8e;
  catch `java.lang.Throwable` @[L182d3e..L182d68] goto L182d8e;
}
