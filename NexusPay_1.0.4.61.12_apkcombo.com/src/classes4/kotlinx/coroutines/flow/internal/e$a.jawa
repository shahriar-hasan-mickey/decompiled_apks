record `kotlinx.coroutines.flow.internal.e$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.internal.e$a.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.internal.e$a.b` @AccessFlag SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.internal.e$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.e$a` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/e$a;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1847bc.  v0.`kotlinx.coroutines.flow.internal.e$a.c` @type ^`kotlinx.coroutines.flow.FlowCollector` := v1 @kind object;
  #L1847c0.  v1:= 2I;
  #L1847c2.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L1847c8.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.internal.e$a` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/e$a;.a:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L184708.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/e$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L18470e.  v1:= temp @kind object;
  #L184710.  v1:= (`kotlinx.coroutines.flow.internal.e$a`) v1 @kind object;
  #L184714.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L184718.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/internal/e$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L18471e.  v1:= temp @kind object;
  #L184720.  return v1 @kind object;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.internal.e$a` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/internal/e$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L184798.  v0:= new `kotlinx.coroutines.flow.internal.e$a`;
  #L18479c.  v1:= v2.`kotlinx.coroutines.flow.internal.e$a.c` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L1847a0.  call `<init>`(v0, v1, v4) @signature `Lkotlinx/coroutines/flow/internal/e$a;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1847a6.  v0.`kotlinx.coroutines.flow.internal.e$a.b` @type ^`java.lang.Object` := v3 @kind object;
  #L1847aa.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.e$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/e$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1846e8.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L1846ec.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/e$a;.a:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L1846f2.  v1:= temp @kind object;
  #L1846f4.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.internal.e$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/flow/internal/e$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L184734.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L18473a.  v0:= temp @kind object;
  #L18473c.  v1:= v3.`kotlinx.coroutines.flow.internal.e$a.a` @type ^`int`;
  #L184740.  v2:= 1I;
  #L184742.  if v1 == 0 then goto L184762;
  #L184746.  if v1 != v2 then goto L184752;
  #L18474a.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L184750.  goto L184782;
  #L184752.  v4:= new `java.lang.IllegalStateException`;
  #L184756.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L18475a.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L184760.  throw v4;
  #L184762.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L184768.  v4:= v3.`kotlinx.coroutines.flow.internal.e$a.b` @type ^`java.lang.Object` @kind object;
  #L18476c.  v1:= v3.`kotlinx.coroutines.flow.internal.e$a.c` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L184770.  v3.`kotlinx.coroutines.flow.internal.e$a.a` @type ^`int` := v2;
  #L184774.  call temp:= `emit`(v1, v4, v3) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L18477a.  v4:= temp @kind object;
  #L18477c.  if v4 != v0 then goto L184782;
  #L184780.  return v0 @kind object;
  #L184782.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L184786.  return v4 @kind object;
}
