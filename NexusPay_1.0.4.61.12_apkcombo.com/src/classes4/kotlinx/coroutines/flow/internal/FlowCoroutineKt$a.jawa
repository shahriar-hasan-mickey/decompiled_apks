record `kotlinx.coroutines.flow.internal.FlowCoroutineKt$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.b` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.c` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a` v0 @kind this, `kotlin.jvm.functions.Function3` v1 @kind object, `kotlinx.coroutines.flow.FlowCollector` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L183c5c.  v0.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.c` @type ^`kotlin.jvm.functions.Function3` := v1 @kind object;
  #L183c60.  v0.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.d` @type ^`kotlinx.coroutines.flow.FlowCollector` := v2 @kind object;
  #L183c64.  v1:= 2I;
  #L183c66.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L183c6c.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L183c34.  v0:= new `kotlinx.coroutines.flow.internal.FlowCoroutineKt$a`;
  #L183c38.  v1:= v3.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.c` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L183c3c.  v2:= v3.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.d` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L183c40.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L183c46.  v0.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.b` @type ^`java.lang.Object` := v4 @kind object;
  #L183c4a.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L183b78.  v1:= (`kotlinx.coroutines.CoroutineScope`) v1 @kind object;
  #L183b7c.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L183b80.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L183b86.  v1:= temp @kind object;
  #L183b88.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a` v0 @kind this, `kotlinx.coroutines.CoroutineScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L183b9c.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L183ba2.  v1:= temp @kind object;
  #L183ba4.  v1:= (`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a`) v1 @kind object;
  #L183ba8.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L183bac.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L183bb2.  v1:= temp @kind object;
  #L183bb4.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L183bc8.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L183bce.  v0:= temp @kind object;
  #L183bd0.  v1:= v4.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.a` @type ^`int`;
  #L183bd4.  v2:= 1I;
  #L183bd6.  if v1 == 0 then goto L183bf6;
  #L183bda.  if v1 != v2 then goto L183be6;
  #L183bde.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L183be4.  goto L183c1e;
  #L183be6.  v5:= new `java.lang.IllegalStateException`;
  #L183bea.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L183bee.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L183bf4.  throw v5;
  #L183bf6.  call `throwOnFailure`(v5) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L183bfc.  v5:= v4.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.b` @type ^`java.lang.Object` @kind object;
  #L183c00.  v5:= (`kotlinx.coroutines.CoroutineScope`) v5 @kind object;
  #L183c04.  v1:= v4.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.c` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L183c08.  v3:= v4.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.d` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L183c0c.  v4.`kotlinx.coroutines.flow.internal.FlowCoroutineKt$a.a` @type ^`int` := v2;
  #L183c10.  call temp:= `invoke`(v1, v5, v3, v4) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L183c16.  v5:= temp @kind object;
  #L183c18.  if v5 != v0 then goto L183c1e;
  #L183c1c.  return v0 @kind object;
  #L183c1e.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L183c22.  return v5 @kind object;
}
