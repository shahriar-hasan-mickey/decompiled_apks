record `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.internal.ChannelFlowOperator` @kind class {
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` v0 @kind this, `kotlin.jvm.functions.Function3` v1 @kind object, `kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlin.coroutines.CoroutineContext` v3 @kind object, `int` v4 , `kotlinx.coroutines.channels.BufferOverflow` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L182584.  call `<init>`(v0, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowOperator;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)V` @kind direct;
  #L18258a.  v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest.a` @type ^`kotlin.jvm.functions.Function3` := v1 @kind object;
  #L18258e.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` v6 @kind this, `kotlin.jvm.functions.Function3` v7 @kind object, `kotlinx.coroutines.flow.Flow` v8 @kind object, `kotlin.coroutines.CoroutineContext` v9 @kind object, `int` v10 , `kotlinx.coroutines.channels.BufferOverflow` v11 @kind object, `int` v12 , `kotlin.jvm.internal.DefaultConstructorMarker` v13 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1825a0.  v13:= v12 ^& 4;
  #L1825a4.  if v13 == 0 then goto L1825ac;
  #L1825a8.  v9:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L1825ac.  v3:= v9 @kind object;
  #L1825ae.  v9:= v12 ^& 8;
  #L1825b2.  if v9 == 0 then goto L1825bc;
  #L1825b6.  v10:= -2I;
  #L1825b8.  v4:= -2I;
  #L1825ba.  goto L1825be;
  #L1825bc.  v4:= v10;
  #L1825be.  v9:= v12 ^& 16;
  #L1825c2.  if v9 == 0 then goto L1825ca;
  #L1825c6.  v11:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L1825ca.  v5:= v11 @kind object;
  #L1825cc.  v0:= v6 @kind object;
  #L1825ce.  v1:= v7 @kind object;
  #L1825d0.  v2:= v8 @kind object;
  #L1825d2.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)V` @kind direct;
  #L1825d8.  return @kind void;
}
procedure `kotlin.jvm.functions.Function3` `access$getTransform$p`(`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` v0 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;.access$getTransform$p:(Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;)Lkotlin/jvm/functions/Function3;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L182540.  v0:= v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest.a` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L182544.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.internal.ChannelFlow` `create`(`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` v7 @kind this, `kotlin.coroutines.CoroutineContext` v8 @kind object, `int` v9 , `kotlinx.coroutines.channels.BufferOverflow` v10 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;.create:(Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)Lkotlinx/coroutines/flow/internal/ChannelFlow;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L182558.  v6:= new `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest`;
  #L18255c.  v1:= v7.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest.a` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L182560.  v2:= v7.`kotlinx.coroutines.flow.internal.ChannelFlowOperator.flow` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L182564.  v0:= v6 @kind object;
  #L182566.  v3:= v8 @kind object;
  #L182568.  v4:= v9;
  #L18256a.  v5:= v10 @kind object;
  #L18256c.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)V` @kind direct;
  #L182572.  return v6 @kind object;
}
procedure `java.lang.Object` `flowCollect`(`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` v2 @kind this, `kotlinx.coroutines.flow.FlowCollector` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;.flowCollect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1824d4.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1824da.  v0:= temp;
  #L1824dc.  if v0 == 0 then goto L182506;
  #L1824e0.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.flow.internal.SendingCollector` @kind boolean;
  #L1824e4.  call temp:= `boxBoolean`(v0) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxBoolean:(Z)Ljava/lang/Boolean;` @kind static;
  #L1824ea.  v0:= temp @kind object;
  #L1824ec.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L1824f2.  v0:= temp;
  #L1824f4.  if v0 == 0 then goto L1824fa;
  #L1824f8.  goto L182506;
  #L1824fa.  v3:= new `java.lang.AssertionError`;
  #L1824fe.  call `<init>`(v3) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L182504.  throw v3;
  #L182506.  v0:= new `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3`;
  #L18250a.  v1:= 0I;
  #L18250c.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.<init>:(Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L182512.  call temp:= `flowScope`(v0, v4) @signature `Lkotlinx/coroutines/flow/internal/FlowCoroutineKt;.flowScope:(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L182518.  v3:= temp @kind object;
  #L18251a.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L182520.  v4:= temp @kind object;
  #L182522.  if v3 != v4 then goto L182528;
  #L182526.  return v3 @kind object;
  #L182528.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L18252c.  return v3 @kind object;
}
