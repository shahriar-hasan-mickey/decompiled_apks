record `kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot` v0 @kind this) @signature `Lkotlinx/coroutines/flow/internal/AbstractSharedFlowSlot;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L18139c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1813a2.  return @kind void;
}
procedure `boolean` `allocateLocked`(`java.lang.Object` v0 @kind object) @signature `Lkotlinx/coroutines/flow/internal/AbstractSharedFlowSlot;.allocateLocked:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlin.coroutines.Continuation`[] `freeLocked`(`java.lang.Object` v0 @kind object) @signature `Lkotlinx/coroutines/flow/internal/AbstractSharedFlowSlot;.freeLocked:(Ljava/lang/Object;)[Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
