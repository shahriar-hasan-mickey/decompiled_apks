record `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.a` @AccessFlag ;
  `kotlinx.coroutines.flow.Flow` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.b` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.coroutines.CoroutineContext` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.c` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.d` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.channels.ReceiveChannel` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.e` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.f` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2` v0 @kind this, `kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.coroutines.CoroutineContext` v2 @kind object, `java.lang.Object` v3 @kind object, `kotlinx.coroutines.channels.ReceiveChannel` v4 @kind object, `kotlinx.coroutines.flow.FlowCollector` v5 @kind object, `kotlin.jvm.functions.Function3` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1835ec.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.b` @type ^`kotlinx.coroutines.flow.Flow` := v1 @kind object;
  #L1835f0.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.c` @type ^`kotlin.coroutines.CoroutineContext` := v2 @kind object;
  #L1835f4.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.d` @type ^`java.lang.Object` := v3 @kind object;
  #L1835f8.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.e` @type ^`kotlinx.coroutines.channels.ReceiveChannel` := v4 @kind object;
  #L1835fc.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.f` @type ^`kotlinx.coroutines.flow.FlowCollector` := v5 @kind object;
  #L183600.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.g` @type ^`kotlin.jvm.functions.Function3` := v6 @kind object;
  #L183604.  v1:= 2I;
  #L183606.  call `<init>`(v0, v1, v7) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L18360c.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2` v0 @kind this, `kotlin.Unit` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2;.a:(Lkotlin/Unit;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L183508.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L18350e.  v1:= temp @kind object;
  #L183510.  v1:= (`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2`) v1 @kind object;
  #L183514.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L183518.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L18351e.  v1:= temp @kind object;
  #L183520.  return v1 @kind object;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2` v8 @kind this, `java.lang.Object` v9 @kind object, `kotlin.coroutines.Continuation` v10 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1835b4.  v9:= new `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2`;
  #L1835b8.  v1:= v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.b` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L1835bc.  v2:= v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.c` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L1835c0.  v3:= v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.d` @type ^`java.lang.Object` @kind object;
  #L1835c4.  v4:= v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.e` @type ^`kotlinx.coroutines.channels.ReceiveChannel` @kind object;
  #L1835c8.  v5:= v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.f` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L1835cc.  v6:= v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.g` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L1835d0.  v0:= v9 @kind object;
  #L1835d2.  v7:= v10 @kind object;
  #L1835d4.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1835da.  return v9 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1834e4.  v1:= (`kotlin.Unit`) v1 @kind object;
  #L1834e8.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L1834ec.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2;.a:(Lkotlin/Unit;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L1834f2.  v1:= temp @kind object;
  #L1834f4.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2` v9 @kind this, `java.lang.Object` v10 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L183534.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L18353a.  v0:= temp @kind object;
  #L18353c.  v1:= v9.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.a` @type ^`int`;
  #L183540.  v2:= 1I;
  #L183542.  if v1 == 0 then goto L183562;
  #L183546.  if v1 != v2 then goto L183552;
  #L18354a.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L183550.  goto L18359e;
  #L183552.  v10:= new `java.lang.IllegalStateException`;
  #L183556.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L18355a.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L183560.  throw v10;
  #L183562.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L183568.  v10:= v9.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.b` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L18356c.  v4:= v9.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.c` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L183570.  v5:= v9.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.d` @type ^`java.lang.Object` @kind object;
  #L183574.  v6:= v9.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.e` @type ^`kotlinx.coroutines.channels.ReceiveChannel` @kind object;
  #L183578.  v7:= v9.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.f` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L18357c.  v8:= v9.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.g` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L183580.  v1:= new `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$invokeSuspend$$inlined$collect$1`;
  #L183584.  v3:= v1 @kind object;
  #L183586.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2$invokeSuspend$$inlined$collect$1;.<init>:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function3;)V` @kind direct;
  #L18358c.  v9.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2.a` @type ^`int` := v2;
  #L183590.  call temp:= `collect`(v10, v1, v9) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L183596.  v10:= temp @kind object;
  #L183598.  if v10 != v0 then goto L18359e;
  #L18359c.  return v0 @kind object;
  #L18359e.  v10:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1835a2.  return v10 @kind object;
}
