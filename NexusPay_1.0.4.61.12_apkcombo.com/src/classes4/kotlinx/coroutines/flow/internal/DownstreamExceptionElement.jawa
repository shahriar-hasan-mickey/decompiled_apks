record `kotlinx.coroutines.flow.internal.DownstreamExceptionElement` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.CoroutineContext$Element` @kind interface {
  `kotlin.coroutines.CoroutineContext$Key` `kotlinx.coroutines.flow.internal.DownstreamExceptionElement.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Throwable` `kotlinx.coroutines.flow.internal.DownstreamExceptionElement.e` @AccessFlag PUBLIC_FINAL;
}
global `kotlinx.coroutines.flow.internal.DownstreamExceptionElement$Key` `@@kotlinx.coroutines.flow.internal.DownstreamExceptionElement.Key` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/internal/DownstreamExceptionElement;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L183ad8.  v0:= new `kotlinx.coroutines.flow.internal.DownstreamExceptionElement$Key`;
  #L183adc.  v1:= 0I;
  #L183ade.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/flow/internal/DownstreamExceptionElement$Key;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L183ae4.  `@@kotlinx.coroutines.flow.internal.DownstreamExceptionElement.Key` @type ^`kotlinx.coroutines.flow.internal.DownstreamExceptionElement$Key` := v0 @kind object;
  #L183ae8.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.DownstreamExceptionElement` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/flow/internal/DownstreamExceptionElement;.<init>:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L183afc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L183b02.  v0.`kotlinx.coroutines.flow.internal.DownstreamExceptionElement.e` @type ^`java.lang.Throwable` := v1 @kind object;
  #L183b06.  v1:= `@@kotlinx.coroutines.flow.internal.DownstreamExceptionElement.Key` @type ^`kotlinx.coroutines.flow.internal.DownstreamExceptionElement$Key` @kind object;
  #L183b0a.  v0.`kotlinx.coroutines.flow.internal.DownstreamExceptionElement.a` @type ^`kotlin.coroutines.CoroutineContext$Key` := v1 @kind object;
  #L183b0e.  return @kind void;
}
procedure `java.lang.Object` `fold`(`kotlinx.coroutines.flow.internal.DownstreamExceptionElement` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/DownstreamExceptionElement;.fold:(Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L183a50.  call temp:= `fold`(v0, v1, v2) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.fold:(Lkotlin/coroutines/CoroutineContext$Element;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind static;
  #L183a56.  v1:= temp @kind object;
  #L183a58.  return v1 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext$Element` `get`(`kotlinx.coroutines.flow.internal.DownstreamExceptionElement` v0 @kind this, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/flow/internal/DownstreamExceptionElement;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @AccessFlag PUBLIC {
    temp;

  #L183aa4.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.get:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind static;
  #L183aaa.  v1:= temp @kind object;
  #L183aac.  return v1 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext$Key` `getKey`(`kotlinx.coroutines.flow.internal.DownstreamExceptionElement` v1 @kind this) @signature `Lkotlinx/coroutines/flow/internal/DownstreamExceptionElement;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L183ac0.  v0:= v1.`kotlinx.coroutines.flow.internal.DownstreamExceptionElement.a` @type ^`kotlin.coroutines.CoroutineContext$Key` @kind object;
  #L183ac4.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `minusKey`(`kotlinx.coroutines.flow.internal.DownstreamExceptionElement` v0 @kind this, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/flow/internal/DownstreamExceptionElement;.minusKey:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;

  #L183a6c.  call temp:= `minusKey`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.minusKey:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L183a72.  v1:= temp @kind object;
  #L183a74.  return v1 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `plus`(`kotlinx.coroutines.flow.internal.DownstreamExceptionElement` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/flow/internal/DownstreamExceptionElement;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;

  #L183a88.  call temp:= `plus`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.plus:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L183a8e.  v1:= temp @kind object;
  #L183a90.  return v1 @kind object;
}
