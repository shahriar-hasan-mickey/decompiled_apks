record `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.a` @AccessFlag ;
  `int` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.b` @AccessFlag ;
  `kotlinx.coroutines.channels.ReceiveChannel` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.c` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.d` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.e` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a` v0 @kind this, `kotlinx.coroutines.channels.ReceiveChannel` v1 @kind object, `kotlinx.coroutines.flow.FlowCollector` v2 @kind object, `kotlin.jvm.functions.Function3` v3 @kind object, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2$a;.<init>:(Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function3;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L183438.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.c` @type ^`kotlinx.coroutines.channels.ReceiveChannel` := v1 @kind object;
  #L18343c.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.d` @type ^`kotlinx.coroutines.flow.FlowCollector` := v2 @kind object;
  #L183440.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.e` @type ^`kotlin.jvm.functions.Function3` := v3 @kind object;
  #L183444.  v0.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.f` @type ^`java.lang.Object` := v4 @kind object;
  #L183448.  v1:= 2I;
  #L18344a.  call `<init>`(v0, v1, v5) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L183450.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a` v0 @kind this, `kotlin.Unit` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2$a;.a:(Lkotlin/Unit;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1832e8.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L1832ee.  v1:= temp @kind object;
  #L1832f0.  v1:= (`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a`) v1 @kind object;
  #L1832f4.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1832f8.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1832fe.  v1:= temp @kind object;
  #L183300.  return v1 @kind object;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a` v6 @kind this, `java.lang.Object` v7 @kind object, `kotlin.coroutines.Continuation` v8 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L183408.  v7:= new `kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a`;
  #L18340c.  v1:= v6.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.c` @type ^`kotlinx.coroutines.channels.ReceiveChannel` @kind object;
  #L183410.  v2:= v6.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.d` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L183414.  v3:= v6.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.e` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L183418.  v4:= v6.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.f` @type ^`java.lang.Object` @kind object;
  #L18341c.  v0:= v7 @kind object;
  #L18341e.  v5:= v8 @kind object;
  #L183420.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2$a;.<init>:(Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function3;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L183426.  return v7 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1832c4.  v1:= (`kotlin.Unit`) v1 @kind object;
  #L1832c8.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L1832cc.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2$a;.a:(Lkotlin/Unit;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L1832d2.  v1:= temp @kind object;
  #L1832d4.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lkotlinx/coroutines/flow/internal/CombineKt$zipImpl$1$1$2$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L183314.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L18331a.  v0:= temp @kind object;
  #L18331c.  v1:= v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.b` @type ^`int`;
  #L183320.  v2:= 0I;
  #L183322.  v3:= 3I;
  #L183324.  v4:= 2I;
  #L183326.  v5:= 1I;
  #L183328.  if v1 == 0 then goto L183374;
  #L18332c.  if v1 == v5 then goto L183360;
  #L183330.  if v1 == v4 then goto L183350;
  #L183334.  if v1 != v3 then goto L183340;
  #L183338.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L18333e.  goto L1833f2;
  #L183340.  v9:= new `java.lang.IllegalStateException`;
  #L183344.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L183348.  call `<init>`(v9, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L18334e.  throw v9;
  #L183350.  v1:= v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.a` @type ^`java.lang.Object` @kind object;
  #L183354.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L183358.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L18335e.  goto L1833dc;
  #L183360.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L183366.  v9:= (`kotlinx.coroutines.channels.ChannelResult`) v9 @kind object;
  #L18336a.  call temp:= `unbox-impl`(v9) @signature `Lkotlinx/coroutines/channels/ChannelResult;.unbox-impl:()Ljava/lang/Object;` @kind virtual;
  #L183370.  v9:= temp @kind object;
  #L183372.  goto L183390;
  #L183374.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L18337a.  v9:= v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.c` @type ^`kotlinx.coroutines.channels.ReceiveChannel` @kind object;
  #L18337e.  v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.b` @type ^`int` := v5;
  #L183382.  call temp:= `receiveCatching-JP2dKIU`(v9, v8) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.receiveCatching-JP2dKIU:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L183388.  v9:= temp @kind object;
  #L18338a.  if v9 != v0 then goto L183390;
  #L18338e.  return v0 @kind object;
  #L183390.  v1:= v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.d` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L183394.  v5:= instanceof @variable v9 @type ^`kotlinx.coroutines.channels.ChannelResult$Failed` @kind boolean;
  #L183398.  if v5 == 0 then goto L1833b4;
  #L18339c.  call temp:= `exceptionOrNull-impl`(v9) @signature `Lkotlinx/coroutines/channels/ChannelResult;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L1833a2.  v9:= temp @kind object;
  #L1833a4.  if v9 != 0 then goto L1833b2;
  #L1833a8.  v9:= new `kotlinx.coroutines.flow.internal.AbortFlowException`;
  #L1833ac.  call `<init>`(v9, v1) @signature `Lkotlinx/coroutines/flow/internal/AbortFlowException;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;)V` @kind direct;
  #L1833b2.  throw v9;
  #L1833b4.  v5:= v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.e` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L1833b8.  v6:= v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.f` @type ^`java.lang.Object` @kind object;
  #L1833bc.  v7:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L1833c0.  if v9 != v7 then goto L1833c6;
  #L1833c4.  v9:= v2 @kind object;
  #L1833c6.  v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.a` @type ^`java.lang.Object` := v1 @kind object;
  #L1833ca.  v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.b` @type ^`int` := v4;
  #L1833ce.  call temp:= `invoke`(v5, v6, v9, v8) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1833d4.  v9:= temp @kind object;
  #L1833d6.  if v9 != v0 then goto L1833dc;
  #L1833da.  return v0 @kind object;
  #L1833dc.  v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.a` @type ^`java.lang.Object` := v2 @kind object;
  #L1833e0.  v8.`kotlinx.coroutines.flow.internal.CombineKt$zipImpl$1$1$2$a.b` @type ^`int` := v3;
  #L1833e4.  call temp:= `emit`(v1, v9, v8) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L1833ea.  v9:= temp @kind object;
  #L1833ec.  if v9 != v0 then goto L1833f2;
  #L1833f0.  return v0 @kind object;
  #L1833f2.  v9:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1833f6.  return v9 @kind object;
}
