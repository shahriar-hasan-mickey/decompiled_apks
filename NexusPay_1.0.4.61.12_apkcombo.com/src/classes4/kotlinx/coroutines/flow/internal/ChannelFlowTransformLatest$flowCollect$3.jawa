record `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.b` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.c` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3` v0 @kind this, `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` v1 @kind object, `kotlinx.coroutines.flow.FlowCollector` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.<init>:(Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1824b0.  v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.c` @type ^`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` := v1 @kind object;
  #L1824b4.  v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.d` @type ^`kotlinx.coroutines.flow.FlowCollector` := v2 @kind object;
  #L1824b8.  v1:= 2I;
  #L1824ba.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L1824c0.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L182488.  v0:= new `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3`;
  #L18248c.  v1:= v3.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.c` @type ^`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` @kind object;
  #L182490.  v2:= v3.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.d` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L182494.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.<init>:(Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L18249a.  v0.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.b` @type ^`java.lang.Object` := v4 @kind object;
  #L18249e.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1823b4.  v1:= (`kotlinx.coroutines.CoroutineScope`) v1 @kind object;
  #L1823b8.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L1823bc.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L1823c2.  v1:= temp @kind object;
  #L1823c4.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3` v0 @kind this, `kotlinx.coroutines.CoroutineScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1823d8.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L1823de.  v1:= temp @kind object;
  #L1823e0.  v1:= (`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3`) v1 @kind object;
  #L1823e4.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1823e8.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1823ee.  v1:= temp @kind object;
  #L1823f0.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L182404.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L18240a.  v0:= temp @kind object;
  #L18240c.  v1:= v7.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.a` @type ^`int`;
  #L182410.  v2:= 1I;
  #L182412.  if v1 == 0 then goto L182432;
  #L182416.  if v1 != v2 then goto L182422;
  #L18241a.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L182420.  goto L182472;
  #L182422.  v8:= new `java.lang.IllegalStateException`;
  #L182426.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L18242a.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L182430.  throw v8;
  #L182432.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L182438.  v8:= v7.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.b` @type ^`java.lang.Object` @kind object;
  #L18243c.  v8:= (`kotlinx.coroutines.CoroutineScope`) v8 @kind object;
  #L182440.  v1:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L182444.  call `<init>`(v1) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L18244a.  v3:= v7.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.c` @type ^`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest` @kind object;
  #L18244e.  v4:= v3.`kotlinx.coroutines.flow.internal.ChannelFlowOperator.flow` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L182452.  v5:= v7.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.d` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L182456.  v6:= new `kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3$invokeSuspend$$inlined$collect$1`;
  #L18245a.  call `<init>`(v6, v1, v8, v3, v5) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest$flowCollect$3$invokeSuspend$$inlined$collect$1;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/internal/ChannelFlowTransformLatest;Lkotlinx/coroutines/flow/FlowCollector;)V` @kind direct;
  #L182460.  v7.`kotlinx.coroutines.flow.internal.ChannelFlowTransformLatest$flowCollect$3.a` @type ^`int` := v2;
  #L182464.  call temp:= `collect`(v4, v6, v7) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L18246a.  v8:= temp @kind object;
  #L18246c.  if v8 != v0 then goto L182472;
  #L182470.  return v0 @kind object;
  #L182472.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L182476.  return v8 @kind object;
}
