record `kotlinx.coroutines.flow.FlowKt__MigrationKt$b` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__MigrationKt$b.a` @AccessFlag ;
  `long` `kotlinx.coroutines.flow.FlowKt__MigrationKt$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$b` v0 @kind this, `long` v1 , `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$b;.<init>:(JLkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L176ec4.  v0.`kotlinx.coroutines.flow.FlowKt__MigrationKt$b.b` @type ^`long` := v1 @kind wide;
  #L176ec8.  v1:= 2I;
  #L176eca.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L176ed0.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$b` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$b;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L176ea4.  v3:= new `kotlinx.coroutines.flow.FlowKt__MigrationKt$b`;
  #L176ea8.  v0:= v2.`kotlinx.coroutines.flow.FlowKt__MigrationKt$b.b` @type ^`long` @kind wide;
  #L176eac.  call `<init>`(v3, v0, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$b;.<init>:(JLkotlin/coroutines/Continuation;)V` @kind direct;
  #L176eb2.  return v3 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$b` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$b;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L176df4.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L176df8.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L176dfc.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$b;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L176e02.  v1:= temp @kind object;
  #L176e04.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$b` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$b;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L176e18.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$b;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L176e1e.  v1:= temp @kind object;
  #L176e20.  v1:= (`kotlinx.coroutines.flow.FlowKt__MigrationKt$b`) v1 @kind object;
  #L176e24.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L176e28.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$b;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L176e2e.  v1:= temp @kind object;
  #L176e30.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__MigrationKt$b` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MigrationKt$b;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L176e44.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L176e4a.  v0:= temp @kind object;
  #L176e4c.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__MigrationKt$b.a` @type ^`int`;
  #L176e50.  v2:= 1I;
  #L176e52.  if v1 == 0 then goto L176e72;
  #L176e56.  if v1 != v2 then goto L176e62;
  #L176e5a.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L176e60.  goto L176e8e;
  #L176e62.  v6:= new `java.lang.IllegalStateException`;
  #L176e66.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L176e6a.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L176e70.  throw v6;
  #L176e72.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L176e78.  v3:= v5.`kotlinx.coroutines.flow.FlowKt__MigrationKt$b.b` @type ^`long` @kind wide;
  #L176e7c.  v5.`kotlinx.coroutines.flow.FlowKt__MigrationKt$b.a` @type ^`int` := v2;
  #L176e80.  call temp:= `delay`(v3, v5) @signature `Lkotlinx/coroutines/DelayKt;.delay:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L176e86.  v6:= temp @kind object;
  #L176e88.  if v6 != v0 then goto L176e8e;
  #L176e8c.  return v0 @kind object;
  #L176e8e.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L176e92.  return v6 @kind object;
}
