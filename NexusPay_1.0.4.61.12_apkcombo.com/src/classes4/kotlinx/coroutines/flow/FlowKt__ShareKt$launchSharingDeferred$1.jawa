record `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1.b` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlinx.coroutines.flow.Flow` `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1.c` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.CompletableDeferred` `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1` v0 @kind this, `kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlinx.coroutines.CompletableDeferred` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharingDeferred$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CompletableDeferred;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L179024.  v0.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1.c` @type ^`kotlinx.coroutines.flow.Flow` := v1 @kind object;
  #L179028.  v0.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1.d` @type ^`kotlinx.coroutines.CompletableDeferred` := v2 @kind object;
  #L17902c.  v1:= 2I;
  #L17902e.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L179034.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharingDeferred$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L178ffc.  v0:= new `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1`;
  #L179000.  v1:= v3.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1.c` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L179004.  v2:= v3.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1.d` @type ^`kotlinx.coroutines.CompletableDeferred` @kind object;
  #L179008.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharingDeferred$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CompletableDeferred;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L17900e.  v0.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1.b` @type ^`java.lang.Object` := v4 @kind object;
  #L179012.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharingDeferred$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L178f08.  v1:= (`kotlinx.coroutines.CoroutineScope`) v1 @kind object;
  #L178f0c.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L178f10.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharingDeferred$1;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L178f16.  v1:= temp @kind object;
  #L178f18.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1` v0 @kind this, `kotlinx.coroutines.CoroutineScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharingDeferred$1;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L178f2c.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharingDeferred$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L178f32.  v1:= temp @kind object;
  #L178f34.  v1:= (`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1`) v1 @kind object;
  #L178f38.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L178f3c.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharingDeferred$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L178f42.  v1:= temp @kind object;
  #L178f44.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharingDeferred$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L178f58.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L178f5e.  v0:= temp @kind object;
  #L178f60.  v1:= v6.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1.a` @type ^`int`;
  #L178f64.  v2:= 1I;
  #L178f66.  if v1 == 0 then goto L178f86;
  #L178f6a.  if v1 != v2 then goto L178f76;
  #L178f6e.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L178f74.  goto L178fc2;
  #L178f76.  v7:= new `java.lang.IllegalStateException`;
  #L178f7a.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L178f7e.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L178f84.  throw v7;
  #L178f86.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L178f8c.  v7:= v6.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1.b` @type ^`java.lang.Object` @kind object;
  #L178f90.  v7:= (`kotlinx.coroutines.CoroutineScope`) v7 @kind object;
  #L178f94.  v1:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L178f98.  call `<init>`(v1) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L178f9e.  v3:= v6.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1.c` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L178fa2.  v4:= v6.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1.d` @type ^`kotlinx.coroutines.CompletableDeferred` @kind object;
  #L178fa6.  v5:= new `kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1$invokeSuspend$$inlined$collect$1`;
  #L178faa.  call `<init>`(v5, v1, v7, v4) @signature `Lkotlinx/coroutines/flow/FlowKt__ShareKt$launchSharingDeferred$1$invokeSuspend$$inlined$collect$1;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/CompletableDeferred;)V` @kind direct;
  #L178fb0.  v6.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1.a` @type ^`int` := v2;
  #L178fb4.  call temp:= `collect`(v3, v5, v6) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L178fba.  v7:= temp @kind object;
  #L178fbc.  if v7 != v0 then goto L178fc2;
  #L178fc0.  return v0 @kind object;
  #L178fc2.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L178fc6.  return v7 @kind object;
  #L178fc8.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L178fca.  v0:= v6.`kotlinx.coroutines.flow.FlowKt__ShareKt$launchSharingDeferred$1.d` @type ^`kotlinx.coroutines.CompletableDeferred` @kind object;
  #L178fce.  call temp:= `completeExceptionally`(v0, v7) @signature `Lkotlinx/coroutines/CompletableDeferred;.completeExceptionally:(Ljava/lang/Throwable;)Z` @kind interface;
  #L178fd4.  throw v7;
  catch `java.lang.Throwable` @[L178f6e..L178f74] goto L178fc8;
  catch `java.lang.Throwable` @[L178f94..L178fbc] goto L178fc8;
}
