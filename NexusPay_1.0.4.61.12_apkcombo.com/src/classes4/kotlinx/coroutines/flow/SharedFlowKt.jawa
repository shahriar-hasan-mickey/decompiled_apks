record `kotlinx.coroutines.flow.SharedFlowKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlinx.coroutines.internal.Symbol` `@@kotlinx.coroutines.flow.SharedFlowKt.NO_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/SharedFlowKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L17fb60.  v0:= new `kotlinx.coroutines.internal.Symbol`;
  #L17fb64.  v1:= "NO_VALUE" @kind object;
  #L17fb68.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17fb6e.  `@@kotlinx.coroutines.flow.SharedFlowKt.NO_VALUE` @type ^`kotlinx.coroutines.internal.Symbol` := v0 @kind object;
  #L17fb72.  return @kind void;
}
procedure `kotlinx.coroutines.flow.MutableSharedFlow` `MutableSharedFlow`(`int` v3 , `int` v4 , `kotlinx.coroutines.channels.BufferOverflow` v5 @kind object) @signature `Lkotlinx/coroutines/flow/SharedFlowKt;.MutableSharedFlow:(IILkotlinx/coroutines/channels/BufferOverflow;)Lkotlinx/coroutines/flow/MutableSharedFlow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L17fa90.  v0:= 1I;
  #L17fa92.  v1:= 0I;
  #L17fa94.  if v3 < 0 then goto L17fa9c;
  #L17fa98.  v2:= 1I;
  #L17fa9a.  goto L17fa9e;
  #L17fa9c.  v2:= 0I;
  #L17fa9e.  if v2 == 0 then goto L17fb28;
  #L17faa2.  if v4 < 0 then goto L17faaa;
  #L17faa6.  v2:= 1I;
  #L17faa8.  goto L17faac;
  #L17faaa.  v2:= 0I;
  #L17faac.  if v2 == 0 then goto L17fb00;
  #L17fab0.  if v3 > 0 then goto L17fac4;
  #L17fab4.  if v4 > 0 then goto L17fac4;
  #L17fab8.  v2:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L17fabc.  if v5 != v2 then goto L17fac2;
  #L17fac0.  goto L17fac4;
  #L17fac2.  v0:= 0I;
  #L17fac4.  if v0 == 0 then goto L17fae0;
  #L17fac8.  v4:= v4 + v3 @kind int;
  #L17faca.  if v4 >= 0 then goto L17fad4;
  #L17face.  v4:= 2147483647I;
  #L17fad4.  v0:= new `kotlinx.coroutines.flow.SharedFlowImpl`;
  #L17fad8.  call `<init>`(v0, v3, v4, v5) @signature `Lkotlinx/coroutines/flow/SharedFlowImpl;.<init>:(IILkotlinx/coroutines/channels/BufferOverflow;)V` @kind direct;
  #L17fade.  return v0 @kind object;
  #L17fae0.  v3:= "replay or extraBufferCapacity must be positive with non-default onBufferOverflow strategy " @kind object;
  #L17fae4.  call temp:= `stringPlus`(v3, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L17faea.  v3:= temp @kind object;
  #L17faec.  v4:= new `java.lang.IllegalArgumentException`;
  #L17faf0.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L17faf6.  v3:= temp @kind object;
  #L17faf8.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17fafe.  throw v4;
  #L17fb00.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L17fb06.  v3:= temp @kind object;
  #L17fb08.  v4:= "extraBufferCapacity cannot be negative, but was " @kind object;
  #L17fb0c.  call temp:= `stringPlus`(v4, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L17fb12.  v3:= temp @kind object;
  #L17fb14.  v4:= new `java.lang.IllegalArgumentException`;
  #L17fb18.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L17fb1e.  v3:= temp @kind object;
  #L17fb20.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17fb26.  throw v4;
  #L17fb28.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L17fb2e.  v3:= temp @kind object;
  #L17fb30.  v4:= "replay cannot be negative, but was " @kind object;
  #L17fb34.  call temp:= `stringPlus`(v4, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L17fb3a.  v3:= temp @kind object;
  #L17fb3c.  v4:= new `java.lang.IllegalArgumentException`;
  #L17fb40.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L17fb46.  v3:= temp @kind object;
  #L17fb48.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17fb4e.  throw v4;
}
procedure `kotlinx.coroutines.flow.MutableSharedFlow` `MutableSharedFlow$default`(`int` v1 , `int` v2 , `kotlinx.coroutines.channels.BufferOverflow` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/flow/SharedFlowKt;.MutableSharedFlow$default:(IILkotlinx/coroutines/channels/BufferOverflow;ILjava/lang/Object;)Lkotlinx/coroutines/flow/MutableSharedFlow;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L17fa54.  v5:= v4 ^& 1;
  #L17fa58.  v0:= 0I;
  #L17fa5a.  if v5 == 0 then goto L17fa60;
  #L17fa5e.  v1:= 0I;
  #L17fa60.  v5:= v4 ^& 2;
  #L17fa64.  if v5 == 0 then goto L17fa6a;
  #L17fa68.  v2:= 0I;
  #L17fa6a.  v4:= v4 ^& 4;
  #L17fa6e.  if v4 == 0 then goto L17fa76;
  #L17fa72.  v3:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L17fa76.  call temp:= `MutableSharedFlow`(v1, v2, v3) @signature `Lkotlinx/coroutines/flow/SharedFlowKt;.MutableSharedFlow:(IILkotlinx/coroutines/channels/BufferOverflow;)Lkotlinx/coroutines/flow/MutableSharedFlow;` @kind static;
  #L17fa7c.  v1:= temp @kind object;
  #L17fa7e.  return v1 @kind object;
}
procedure `java.lang.Object` `a`(`java.lang.Object`[] v0 @kind object, `long` v1 ) @signature `Lkotlinx/coroutines/flow/SharedFlowKt;.a:([Ljava/lang/Object;J)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L17fa04.  v2:= (`int`) v1 @kind l2i;
  #L17fa06.  v1:= length @variable v0;
  #L17fa08.  v1:= v1 + -1;
  #L17fa0c.  v1:= v1 ^& v2 @kind int;
  #L17fa0e.  v0:= v0[v1] @kind object;
  #L17fa12.  return v0 @kind object;
}
procedure `java.lang.Object` `access$getBufferAt`(`java.lang.Object`[] v0 @kind object, `long` v1 ) @signature `Lkotlinx/coroutines/flow/SharedFlowKt;.access$getBufferAt:([Ljava/lang/Object;J)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L17f9e8.  call temp:= `a`(v0, v1) @signature `Lkotlinx/coroutines/flow/SharedFlowKt;.a:([Ljava/lang/Object;J)Ljava/lang/Object;` @kind static;
  #L17f9ee.  v0:= temp @kind object;
  #L17f9f0.  return v0 @kind object;
}
procedure `void` `access$setBufferAt`(`java.lang.Object`[] v0 @kind object, `long` v1 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/SharedFlowKt;.access$setBufferAt:([Ljava/lang/Object;JLjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L17fb84.  call `b`(v0, v1, v3) @signature `Lkotlinx/coroutines/flow/SharedFlowKt;.b:([Ljava/lang/Object;JLjava/lang/Object;)V` @kind static;
  #L17fb8a.  return @kind void;
}
procedure `void` `b`(`java.lang.Object`[] v0 @kind object, `long` v1 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/SharedFlowKt;.b:([Ljava/lang/Object;JLjava/lang/Object;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L17fbb0.  v2:= (`int`) v1 @kind l2i;
  #L17fbb2.  v1:= length @variable v0;
  #L17fbb4.  v1:= v1 + -1;
  #L17fbb8.  v1:= v1 ^& v2 @kind int;
  #L17fbba.  v0[v1]:= v3 @kind object;
  #L17fbbe.  return @kind void;
}
procedure `kotlinx.coroutines.flow.Flow` `fuseSharedFlow`(`kotlinx.coroutines.flow.SharedFlow` v1 @kind object, `kotlin.coroutines.CoroutineContext` v2 @kind object, `int` v3 , `kotlinx.coroutines.channels.BufferOverflow` v4 @kind object) @signature `Lkotlinx/coroutines/flow/SharedFlowKt;.fuseSharedFlow:(Lkotlinx/coroutines/flow/SharedFlow;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L17fa24.  if v3 == 0 then goto L17fa2e;
  #L17fa28.  v0:= -3I;
  #L17fa2a.  if v3 != v0 then goto L17fa38;
  #L17fa2e.  v0:= `@@kotlinx.coroutines.channels.BufferOverflow.SUSPEND` @type ^`kotlinx.coroutines.channels.BufferOverflow` @kind object;
  #L17fa32.  if v4 != v0 then goto L17fa38;
  #L17fa36.  return v1 @kind object;
  #L17fa38.  v0:= new `kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl`;
  #L17fa3c.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lkotlinx/coroutines/flow/internal/ChannelFlowOperatorImpl;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/channels/BufferOverflow;)V` @kind direct;
  #L17fa42.  return v0 @kind object;
}
procedure `void` `getNO_VALUE$annotations`() @signature `Lkotlinx/coroutines/flow/SharedFlowKt;.getNO_VALUE$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L17fb9c.  return @kind void;
}
