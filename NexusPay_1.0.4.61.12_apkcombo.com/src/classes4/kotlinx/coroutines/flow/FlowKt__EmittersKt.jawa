record `kotlinx.coroutines.flow.FlowKt__EmittersKt` @kind class @AccessFlag FINAL_SYNTHETIC {
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.FlowCollector` v0 @kind object, `kotlin.jvm.functions.Function3` v1 @kind object, `java.lang.Throwable` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt;.a:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function3;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1746ac.  call temp:= `c`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt;.c:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function3;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L1746b2.  v0:= temp @kind object;
  #L1746b4.  return v0 @kind object;
}
procedure `void` `b`(`kotlinx.coroutines.flow.FlowCollector` v1 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt;.b:(Lkotlinx/coroutines/flow/FlowCollector;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L174824.  v0:= instanceof @variable v1 @type ^`kotlinx.coroutines.flow.ThrowingCollector` @kind boolean;
  #L174828.  if v0 != 0 then goto L17482e;
  #L17482c.  return @kind void;
  #L17482e.  v1:= (`kotlinx.coroutines.flow.ThrowingCollector`) v1 @kind object;
  #L174832.  v1:= v1.`kotlinx.coroutines.flow.ThrowingCollector.e` @type ^`java.lang.Throwable` @kind object;
  #L174836.  throw v1;
}
procedure `java.lang.Object` `c`(`kotlinx.coroutines.flow.FlowCollector` v4 @kind object, `kotlin.jvm.functions.Function3` v5 @kind object, `java.lang.Throwable` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt;.c:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function3;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1746c8.  v0:= instanceof @variable v7 @type ^`kotlinx.coroutines.flow.FlowKt__EmittersKt$a` @kind boolean;
  #L1746cc.  if v0 == 0 then goto L1746ee;
  #L1746d0.  v0:= v7 @kind object;
  #L1746d2.  v0:= (`kotlinx.coroutines.flow.FlowKt__EmittersKt$a`) v0 @kind object;
  #L1746d6.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$a.c` @type ^`int`;
  #L1746da.  v2:= -2147483648I;
  #L1746de.  v3:= v1 ^& v2 @kind int;
  #L1746e2.  if v3 == 0 then goto L1746ee;
  #L1746e6.  v1:= v1 - v2 @kind int;
  #L1746e8.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$a.c` @type ^`int` := v1;
  #L1746ec.  goto L1746f8;
  #L1746ee.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$a`;
  #L1746f2.  call `<init>`(v0, v7) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$a;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1746f8.  v7:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$a.b` @type ^`java.lang.Object` @kind object;
  #L1746fc.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L174702.  v1:= temp @kind object;
  #L174704.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$a.c` @type ^`int`;
  #L174708.  v3:= 1I;
  #L17470a.  if v2 == 0 then goto L174734;
  #L17470e.  if v2 != v3 then goto L174724;
  #L174712.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$a.a` @type ^`java.lang.Object` @kind object;
  #L174716.  v6:= v4 @kind object;
  #L174718.  v6:= (`java.lang.Throwable`) v6 @kind object;
  #L17471c.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L174722.  goto L174750;
  #L174724.  v4:= new `java.lang.IllegalStateException`;
  #L174728.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L17472c.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L174732.  throw v4;
  #L174734.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17473a.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$a.a` @type ^`java.lang.Object` := v6 @kind object;
  #L17473e.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$a.c` @type ^`int` := v3;
  #L174742.  call temp:= `invoke`(v5, v4, v6, v0) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L174748.  v4:= temp @kind object;
  #L17474a.  if v4 != v1 then goto L174750;
  #L17474e.  return v1 @kind object;
  #L174750.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L174754.  return v4 @kind object;
  #L174756.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L174758.  if v6 == 0 then goto L174766;
  #L17475c.  if v6 == v4 then goto L174766;
  #L174760.  call `addSuppressed`(v4, v6) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L174766.  throw v4;
  catch `java.lang.Throwable` @[L17471c..L174722] goto L174756;
  catch `java.lang.Throwable` @[L17473a..L17474a] goto L174756;
}
procedure `kotlinx.coroutines.flow.Flow` `d`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt;.d:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L17478c.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1`;
  #L174790.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$onCompletion$$inlined$unsafeFlow$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)V` @kind direct;
  #L174796.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `e`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt;.e:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1747a8.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1`;
  #L1747ac.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L1747b2.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `f`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt;.f:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1747c4.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1`;
  #L1747c8.  call `<init>`(v0, v2, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$onStart$$inlined$unsafeFlow$1;.<init>:(Lkotlin/jvm/functions/Function2;Lkotlinx/coroutines/flow/Flow;)V` @kind direct;
  #L1747ce.  return v0 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `g`(`kotlinx.coroutines.flow.Flow` v2 @kind object, `kotlin.jvm.functions.Function3` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt;.g:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1747e0.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$transform$1`;
  #L1747e4.  v1:= 0I;
  #L1747e6.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$transform$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1747ec.  call temp:= `flow`(v0) @signature `Lkotlinx/coroutines/flow/FlowKt;.flow:(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;` @kind static;
  #L1747f2.  v2:= temp @kind object;
  #L1747f4.  return v2 @kind object;
}
procedure `kotlinx.coroutines.flow.Flow` `h`(`kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt;.h:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L174808.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1`;
  #L17480c.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$unsafeTransform$$inlined$unsafeFlow$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)V` @kind direct;
  #L174812.  return v0 @kind object;
}
