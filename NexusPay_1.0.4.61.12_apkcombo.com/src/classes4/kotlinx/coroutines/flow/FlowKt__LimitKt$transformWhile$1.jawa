record `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.b` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlinx.coroutines.flow.Flow` `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.c` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1` v0 @kind this, `kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L176178.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.c` @type ^`kotlinx.coroutines.flow.Flow` := v1 @kind object;
  #L17617c.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.d` @type ^`kotlin.jvm.functions.Function3` := v2 @kind object;
  #L176180.  v1:= 2I;
  #L176182.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L176188.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L176150.  v0:= new `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1`;
  #L176154.  v1:= v3.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.c` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L176158.  v2:= v3.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.d` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L17615c.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L176162.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.b` @type ^`java.lang.Object` := v4 @kind object;
  #L176166.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L176054.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L176058.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L17605c.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L176062.  v1:= temp @kind object;
  #L176064.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1;.invoke:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L176078.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L17607e.  v1:= temp @kind object;
  #L176080.  v1:= (`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1`) v1 @kind object;
  #L176084.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L176088.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L17608e.  v1:= temp @kind object;
  #L176090.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1760a4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1760aa.  v0:= temp @kind object;
  #L1760ac.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.a` @type ^`int`;
  #L1760b0.  v2:= 1I;
  #L1760b2.  if v1 == 0 then goto L1760de;
  #L1760b6.  if v1 != v2 then goto L1760ce;
  #L1760ba.  v0:= v5.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.b` @type ^`java.lang.Object` @kind object;
  #L1760be.  v0:= (`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1`) v0 @kind object;
  #L1760c2.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1760c8.  goto L17611e;
  #L1760ca.  v6:= Exception @type ^`kotlinx.coroutines.flow.internal.AbortFlowException` @kind object;
  #L1760cc.  goto L176118;
  #L1760ce.  v6:= new `java.lang.IllegalStateException`;
  #L1760d2.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L1760d6.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1760dc.  throw v6;
  #L1760de.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1760e4.  v6:= v5.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.b` @type ^`java.lang.Object` @kind object;
  #L1760e8.  v6:= (`kotlinx.coroutines.flow.FlowCollector`) v6 @kind object;
  #L1760ec.  v1:= v5.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.c` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L1760f0.  v3:= v5.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.d` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L1760f4.  v4:= new `kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1`;
  #L1760f8.  call `<init>`(v4, v3, v6) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$transformWhile$1$invokeSuspend$$inlined$collectWhile$1;.<init>:(Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/FlowCollector;)V` @kind direct;
  #L1760fe.  v5.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.b` @type ^`java.lang.Object` := v4 @kind object;
  #L176102.  v5.`kotlinx.coroutines.flow.FlowKt__LimitKt$transformWhile$1.a` @type ^`int` := v2;
  #L176106.  call temp:= `collect`(v1, v4, v5) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L17610c.  v6:= temp @kind object;
  #L17610e.  if v6 != v0 then goto L17611e;
  #L176112.  return v0 @kind object;
  #L176114.  v6:= Exception @type ^`kotlinx.coroutines.flow.internal.AbortFlowException` @kind object;
  #L176116.  v0:= v4 @kind object;
  #L176118.  call `checkOwnership`(v6, v0) @signature `Lkotlinx/coroutines/flow/internal/FlowExceptions_commonKt;.checkOwnership:(Lkotlinx/coroutines/flow/internal/AbortFlowException;Lkotlinx/coroutines/flow/FlowCollector;)V` @kind static;
  #L17611e.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L176122.  return v6 @kind object;
  catch `kotlinx.coroutines.flow.internal.AbortFlowException` @[L1760c2..L1760c8] goto L1760ca;
  catch `kotlinx.coroutines.flow.internal.AbortFlowException` @[L1760fe..L17610e] goto L176114;
}
