record `kotlinx.coroutines.flow.FlowKt__LimitKt$drop$lambda-2$$inlined$collect$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlin.jvm.internal.Ref$IntRef` `kotlinx.coroutines.flow.FlowKt__LimitKt$drop$lambda-2$$inlined$collect$1.a` @AccessFlag FINAL_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.FlowKt__LimitKt$drop$lambda-2$$inlined$collect$1.b` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__LimitKt$drop$lambda-2$$inlined$collect$1.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__LimitKt$drop$lambda-2$$inlined$collect$1` v0 @kind this, `kotlin.jvm.internal.Ref$IntRef` v1 @kind object, `int` v2 , `kotlinx.coroutines.flow.FlowCollector` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$drop$lambda-2$$inlined$collect$1;.<init>:(Lkotlin/jvm/internal/Ref$IntRef;ILkotlinx/coroutines/flow/FlowCollector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1757e0.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$drop$lambda-2$$inlined$collect$1.a` @type ^`kotlin.jvm.internal.Ref$IntRef` := v1 @kind object;
  #L1757e4.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$drop$lambda-2$$inlined$collect$1.b` @type ^`int` := v2;
  #L1757e8.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$drop$lambda-2$$inlined$collect$1.c` @type ^`kotlinx.coroutines.flow.FlowCollector` := v3 @kind object;
  #L1757ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1757f2.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__LimitKt$drop$lambda-2$$inlined$collect$1` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$drop$lambda-2$$inlined$collect$1;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L175798.  v0:= v3.`kotlinx.coroutines.flow.FlowKt__LimitKt$drop$lambda-2$$inlined$collect$1.a` @type ^`kotlin.jvm.internal.Ref$IntRef` @kind object;
  #L17579c.  v1:= v0.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int`;
  #L1757a0.  v2:= v3.`kotlinx.coroutines.flow.FlowKt__LimitKt$drop$lambda-2$$inlined$collect$1.b` @type ^`int`;
  #L1757a4.  if v1 < v2 then goto L1757c2;
  #L1757a8.  v0:= v3.`kotlinx.coroutines.flow.FlowKt__LimitKt$drop$lambda-2$$inlined$collect$1.c` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L1757ac.  call temp:= `emit`(v0, v4, v5) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L1757b2.  v4:= temp @kind object;
  #L1757b4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1757ba.  v5:= temp @kind object;
  #L1757bc.  if v4 != v5 then goto L1757ca;
  #L1757c0.  return v4 @kind object;
  #L1757c2.  v1:= v1 + 1;
  #L1757c6.  v0.`kotlin.jvm.internal.Ref$IntRef.element` @type ^`int` := v1;
  #L1757ca.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1757ce.  return v4 @kind object;
}
