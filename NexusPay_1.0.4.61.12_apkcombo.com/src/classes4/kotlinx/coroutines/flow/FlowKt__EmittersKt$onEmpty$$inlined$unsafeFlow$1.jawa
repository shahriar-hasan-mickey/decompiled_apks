record `kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.Flow` @kind interface {
  `kotlinx.coroutines.flow.Flow` `kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1` v0 @kind this, `kotlinx.coroutines.flow.Flow` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1;.<init>:(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L174050.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1.a` @type ^`kotlinx.coroutines.flow.Flow` := v1 @kind object;
  #L174054.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1.b` @type ^`kotlin.jvm.functions.Function2` := v2 @kind object;
  #L174058.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17405e.  return @kind void;
}
procedure `java.lang.Object` `collect`(`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1` v7 @kind this, `kotlinx.coroutines.flow.FlowCollector` v8 @kind object, `kotlin.coroutines.Continuation` v9 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L173edc.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1` @kind boolean;
  #L173ee0.  if v0 == 0 then goto L173f02;
  #L173ee4.  v0:= v9 @kind object;
  #L173ee6.  v0:= (`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1`) v0 @kind object;
  #L173eea.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1.b` @type ^`int`;
  #L173eee.  v2:= -2147483648I;
  #L173ef2.  v3:= v1 ^& v2 @kind int;
  #L173ef6.  if v3 == 0 then goto L173f02;
  #L173efa.  v1:= v1 - v2 @kind int;
  #L173efc.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1.b` @type ^`int` := v1;
  #L173f00.  goto L173f0c;
  #L173f02.  v0:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1`;
  #L173f06.  call `<init>`(v0, v7, v9) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L173f0c.  v9:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1.a` @type ^`java.lang.Object` @kind object;
  #L173f10.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L173f16.  v1:= temp @kind object;
  #L173f18.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1.b` @type ^`int`;
  #L173f1c.  v3:= 2I;
  #L173f1e.  v4:= 1I;
  #L173f20.  if v2 == 0 then goto L173f72;
  #L173f24.  if v2 == v4 then goto L173f52;
  #L173f28.  if v2 != v3 then goto L173f42;
  #L173f2c.  v8:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1.d` @type ^`java.lang.Object` @kind object;
  #L173f30.  v8:= (`kotlinx.coroutines.flow.internal.SafeCollector`) v8 @kind object;
  #L173f34.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L173f3a.  goto L174008;
  #L173f3c.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L173f3e.  goto L174018;
  #L173f42.  v8:= new `java.lang.IllegalStateException`;
  #L173f46.  v9:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L173f4a.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L173f50.  throw v8;
  #L173f52.  v8:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1.f` @type ^`java.lang.Object` @kind object;
  #L173f56.  v8:= (`kotlin.jvm.internal.Ref$BooleanRef`) v8 @kind object;
  #L173f5a.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1.e` @type ^`java.lang.Object` @kind object;
  #L173f5e.  v2:= (`kotlinx.coroutines.flow.FlowCollector`) v2 @kind object;
  #L173f62.  v4:= v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1.d` @type ^`java.lang.Object` @kind object;
  #L173f66.  v4:= (`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1`) v4 @kind object;
  #L173f6a.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L173f70.  goto L173fb8;
  #L173f72.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L173f78.  v9:= new `kotlin.jvm.internal.Ref$BooleanRef`;
  #L173f7c.  call `<init>`(v9) @signature `Lkotlin/jvm/internal/Ref$BooleanRef;.<init>:()V` @kind direct;
  #L173f82.  v9.`kotlin.jvm.internal.Ref$BooleanRef.element` @type ^`boolean` := v4 @kind boolean;
  #L173f86.  v2:= v7.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1.a` @type ^`kotlinx.coroutines.flow.Flow` @kind object;
  #L173f8a.  v5:= new `kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$lambda-5$$inlined$collect$1`;
  #L173f8e.  call `<init>`(v5, v9, v8) @signature `Lkotlinx/coroutines/flow/FlowKt__EmittersKt$onEmpty$lambda-5$$inlined$collect$1;.<init>:(Lkotlin/jvm/internal/Ref$BooleanRef;Lkotlinx/coroutines/flow/FlowCollector;)V` @kind direct;
  #L173f94.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1.d` @type ^`java.lang.Object` := v7 @kind object;
  #L173f98.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1.e` @type ^`java.lang.Object` := v8 @kind object;
  #L173f9c.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1.f` @type ^`java.lang.Object` := v9 @kind object;
  #L173fa0.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1.b` @type ^`int` := v4;
  #L173fa4.  call temp:= `collect`(v2, v5, v0) @signature `Lkotlinx/coroutines/flow/Flow;.collect:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L173faa.  v2:= temp @kind object;
  #L173fac.  if v2 != v1 then goto L173fb2;
  #L173fb0.  return v1 @kind object;
  #L173fb2.  v4:= v7 @kind object;
  #L173fb4.  v2:= v8 @kind object;
  #L173fb6.  v8:= v9 @kind object;
  #L173fb8.  v8:= v8.`kotlin.jvm.internal.Ref$BooleanRef.element` @type ^`boolean` @kind boolean;
  #L173fbc.  if v8 == 0 then goto L174020;
  #L173fc0.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L173fc6.  v8:= temp @kind object;
  #L173fc8.  v9:= new `kotlinx.coroutines.flow.internal.SafeCollector`;
  #L173fcc.  call `<init>`(v9, v2, v8) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/CoroutineContext;)V` @kind direct;
  #L173fd2.  v8:= v4.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L173fd6.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1.d` @type ^`java.lang.Object` := v9 @kind object;
  #L173fda.  v2:= 0I;
  #L173fdc.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1.e` @type ^`java.lang.Object` := v2 @kind object;
  #L173fe0.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1.f` @type ^`java.lang.Object` := v2 @kind object;
  #L173fe4.  v0.`kotlinx.coroutines.flow.FlowKt__EmittersKt$onEmpty$$inlined$unsafeFlow$1$1.b` @type ^`int` := v3;
  #L173fe8.  v2:= 6I;
  #L173fea.  call `mark`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L173ff0.  call temp:= `invoke`(v8, v9, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L173ff6.  v8:= temp @kind object;
  #L173ff8.  v0:= 7I;
  #L173ffa.  call `mark`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L174000.  if v8 != v1 then goto L174006;
  #L174004.  return v1 @kind object;
  #L174006.  v8:= v9 @kind object;
  #L174008.  call `releaseIntercepted`(v8) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector;.releaseIntercepted:()V` @kind virtual;
  #L17400e.  goto L174020;
  #L174010.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L174012.  v6:= v9 @kind object;
  #L174014.  v9:= v8 @kind object;
  #L174016.  v8:= v6 @kind object;
  #L174018.  call `releaseIntercepted`(v8) @signature `Lkotlinx/coroutines/flow/internal/SafeCollector;.releaseIntercepted:()V` @kind virtual;
  #L17401e.  throw v9;
  #L174020.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L174024.  return v8 @kind object;
  catch `java.lang.Throwable` @[L173f34..L173f3a] goto L173f3c;
  catch `java.lang.Throwable` @[L173fd2..L174000] goto L174010;
}
