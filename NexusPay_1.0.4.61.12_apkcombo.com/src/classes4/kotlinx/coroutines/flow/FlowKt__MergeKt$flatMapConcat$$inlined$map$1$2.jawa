record `kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2` v0 @kind this, `kotlinx.coroutines.flow.FlowCollector` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2;.<init>:(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L17656c.  v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2.a` @type ^`kotlinx.coroutines.flow.FlowCollector` := v1 @kind object;
  #L176570.  v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2.b` @type ^`kotlin.jvm.functions.Function2` := v2 @kind object;
  #L176574.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17657a.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2` v6 @kind this, `java.lang.Object` v7 @kind object, `kotlin.coroutines.Continuation` v8 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L17649c.  v0:= instanceof @variable v8 @type ^`kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1` @kind boolean;
  #L1764a0.  if v0 == 0 then goto L1764c2;
  #L1764a4.  v0:= v8 @kind object;
  #L1764a6.  v0:= (`kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1`) v0 @kind object;
  #L1764aa.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1.b` @type ^`int`;
  #L1764ae.  v2:= -2147483648I;
  #L1764b2.  v3:= v1 ^& v2 @kind int;
  #L1764b6.  if v3 == 0 then goto L1764c2;
  #L1764ba.  v1:= v1 - v2 @kind int;
  #L1764bc.  v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1.b` @type ^`int` := v1;
  #L1764c0.  goto L1764cc;
  #L1764c2.  v0:= new `kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1`;
  #L1764c6.  call `<init>`(v0, v6, v8) @signature `Lkotlinx/coroutines/flow/FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1764cc.  v8:= v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1.a` @type ^`java.lang.Object` @kind object;
  #L1764d0.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1764d6.  v1:= temp @kind object;
  #L1764d8.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1.b` @type ^`int`;
  #L1764dc.  v3:= 2I;
  #L1764de.  v4:= 1I;
  #L1764e0.  if v2 == 0 then goto L176514;
  #L1764e4.  if v2 == v4 then goto L176504;
  #L1764e8.  if v2 != v3 then goto L1764f4;
  #L1764ec.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1764f2.  goto L176556;
  #L1764f4.  v7:= new `java.lang.IllegalStateException`;
  #L1764f8.  v8:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L1764fc.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L176502.  throw v7;
  #L176504.  v7:= v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1.c` @type ^`java.lang.Object` @kind object;
  #L176508.  v7:= (`kotlinx.coroutines.flow.FlowCollector`) v7 @kind object;
  #L17650c.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L176512.  goto L17653e;
  #L176514.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17651a.  v8:= v6.`kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2.a` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L17651e.  v2:= v6.`kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L176522.  v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1.c` @type ^`java.lang.Object` := v8 @kind object;
  #L176526.  v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1.b` @type ^`int` := v4;
  #L17652a.  call temp:= `invoke`(v2, v7, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L176530.  v7:= temp @kind object;
  #L176532.  if v7 != v1 then goto L176538;
  #L176536.  return v1 @kind object;
  #L176538.  v5:= v8 @kind object;
  #L17653a.  v8:= v7 @kind object;
  #L17653c.  v7:= v5 @kind object;
  #L17653e.  v2:= 0I;
  #L176540.  v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1.c` @type ^`java.lang.Object` := v2 @kind object;
  #L176544.  v0.`kotlinx.coroutines.flow.FlowKt__MergeKt$flatMapConcat$$inlined$map$1$2$1.b` @type ^`int` := v3;
  #L176548.  call temp:= `emit`(v7, v8, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L17654e.  v7:= temp @kind object;
  #L176550.  if v7 != v1 then goto L176556;
  #L176554.  return v1 @kind object;
  #L176556.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17655a.  return v7 @kind object;
}
