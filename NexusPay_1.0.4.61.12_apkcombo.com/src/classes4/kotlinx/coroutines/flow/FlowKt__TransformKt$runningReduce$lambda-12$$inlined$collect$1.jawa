record `kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlin.jvm.internal.Ref$ObjectRef` `kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1.b` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1` v0 @kind this, `kotlin.jvm.internal.Ref$ObjectRef` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object, `kotlinx.coroutines.flow.FlowCollector` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlin/jvm/functions/Function3;Lkotlinx/coroutines/flow/FlowCollector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L17a834.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1.a` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v1 @kind object;
  #L17a838.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1.b` @type ^`kotlin.jvm.functions.Function3` := v2 @kind object;
  #L17a83c.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1.c` @type ^`kotlinx.coroutines.flow.FlowCollector` := v3 @kind object;
  #L17a840.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17a846.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1` v7 @kind this, `java.lang.Object` v8 @kind object, `kotlin.coroutines.Continuation` v9 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L17a724.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1$1` @kind boolean;
  #L17a728.  if v0 == 0 then goto L17a74a;
  #L17a72c.  v0:= v9 @kind object;
  #L17a72e.  v0:= (`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1$1`) v0 @kind object;
  #L17a732.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1$1.b` @type ^`int`;
  #L17a736.  v2:= -2147483648I;
  #L17a73a.  v3:= v1 ^& v2 @kind int;
  #L17a73e.  if v3 == 0 then goto L17a74a;
  #L17a742.  v1:= v1 - v2 @kind int;
  #L17a744.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1$1.b` @type ^`int` := v1;
  #L17a748.  goto L17a754;
  #L17a74a.  v0:= new `kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1$1`;
  #L17a74e.  call `<init>`(v0, v7, v9) @signature `Lkotlinx/coroutines/flow/FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L17a754.  v9:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1$1.a` @type ^`java.lang.Object` @kind object;
  #L17a758.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L17a75e.  v1:= temp @kind object;
  #L17a760.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1$1.b` @type ^`int`;
  #L17a764.  v3:= 2I;
  #L17a766.  v4:= 1I;
  #L17a768.  if v2 == 0 then goto L17a7aa;
  #L17a76c.  if v2 == v4 then goto L17a78c;
  #L17a770.  if v2 != v3 then goto L17a77c;
  #L17a774.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17a77a.  goto L17a81e;
  #L17a77c.  v8:= new `java.lang.IllegalStateException`;
  #L17a780.  v9:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L17a784.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L17a78a.  throw v8;
  #L17a78c.  v8:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1$1.e` @type ^`java.lang.Object` @kind object;
  #L17a790.  v8:= (`kotlin.jvm.internal.Ref$ObjectRef`) v8 @kind object;
  #L17a794.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1$1.d` @type ^`java.lang.Object` @kind object;
  #L17a798.  v2:= (`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1`) v2 @kind object;
  #L17a79c.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17a7a2.  v6:= v9 @kind object;
  #L17a7a4.  v9:= v8 @kind object;
  #L17a7a6.  v8:= v6 @kind object;
  #L17a7a8.  goto L17a7f2;
  #L17a7aa.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17a7b0.  v9:= v7.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1.a` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L17a7b4.  v2:= v9.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L17a7b8.  v5:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L17a7bc.  if v2 != v5 then goto L17a7c4;
  #L17a7c0.  v2:= v7 @kind object;
  #L17a7c2.  goto L17a7f2;
  #L17a7c4.  v5:= v7.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1.b` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L17a7c8.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1$1.d` @type ^`java.lang.Object` := v7 @kind object;
  #L17a7cc.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1$1.e` @type ^`java.lang.Object` := v9 @kind object;
  #L17a7d0.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1$1.b` @type ^`int` := v4;
  #L17a7d4.  v4:= 6I;
  #L17a7d6.  call `mark`(v4) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L17a7dc.  call temp:= `invoke`(v5, v2, v8, v0) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L17a7e2.  v8:= temp @kind object;
  #L17a7e4.  v2:= 7I;
  #L17a7e6.  call `mark`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L17a7ec.  if v8 != v1 then goto L17a7c0;
  #L17a7f0.  return v1 @kind object;
  #L17a7f2.  v9.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v8 @kind object;
  #L17a7f6.  v8:= v2.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1.c` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L17a7fa.  v9:= v2.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1.a` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L17a7fe.  v9:= v9.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L17a802.  v2:= 0I;
  #L17a804.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1$1.d` @type ^`java.lang.Object` := v2 @kind object;
  #L17a808.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1$1.e` @type ^`java.lang.Object` := v2 @kind object;
  #L17a80c.  v0.`kotlinx.coroutines.flow.FlowKt__TransformKt$runningReduce$lambda-12$$inlined$collect$1$1.b` @type ^`int` := v3;
  #L17a810.  call temp:= `emit`(v8, v9, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L17a816.  v8:= temp @kind object;
  #L17a818.  if v8 != v1 then goto L17a81e;
  #L17a81c.  return v1 @kind object;
  #L17a81e.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L17a822.  return v8 @kind object;
}
