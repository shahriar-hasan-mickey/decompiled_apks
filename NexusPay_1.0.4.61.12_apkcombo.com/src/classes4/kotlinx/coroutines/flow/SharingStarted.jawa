record `kotlinx.coroutines.flow.SharingStarted` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `kotlinx.coroutines.flow.SharingStarted$Companion` `@@kotlinx.coroutines.flow.SharingStarted.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/SharingStarted;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L17ff28.  v0:= `@@kotlinx.coroutines.flow.SharingStarted$Companion.a` @type ^`kotlinx.coroutines.flow.SharingStarted$Companion` @kind object;
  #L17ff2c.  `@@kotlinx.coroutines.flow.SharingStarted.Companion` @type ^`kotlinx.coroutines.flow.SharingStarted$Companion` := v0 @kind object;
  #L17ff30.  return @kind void;
}
procedure `kotlinx.coroutines.flow.Flow` `command`(`kotlinx.coroutines.flow.StateFlow` v0 @kind object) @signature `Lkotlinx/coroutines/flow/SharingStarted;.command:(Lkotlinx/coroutines/flow/StateFlow;)Lkotlinx/coroutines/flow/Flow;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
