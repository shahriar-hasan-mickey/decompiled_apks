record `kotlinx.coroutines.flow.l$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function3` @kind interface {
  `int` `kotlinx.coroutines.flow.l$a.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.l$a.b` @AccessFlag PRIVATE_SYNTHETIC;
  `int` `kotlinx.coroutines.flow.l$a.c` @AccessFlag SYNTHETIC;
  `kotlinx.coroutines.flow.l` `kotlinx.coroutines.flow.l$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.l$a` v0 @kind this, `kotlinx.coroutines.flow.l` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/l$a;.<init>:(Lkotlinx/coroutines/flow/l;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1803d8.  v0.`kotlinx.coroutines.flow.l$a.d` @type ^`kotlinx.coroutines.flow.l` := v1 @kind object;
  #L1803dc.  v1:= 3I;
  #L1803de.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L1803e4.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.l$a` v2 @kind this, `kotlinx.coroutines.flow.FlowCollector` v3 @kind object, `int` v4 , `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/l$a;.a:(Lkotlinx/coroutines/flow/FlowCollector;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L180254.  v0:= new `kotlinx.coroutines.flow.l$a`;
  #L180258.  v1:= v2.`kotlinx.coroutines.flow.l$a.d` @type ^`kotlinx.coroutines.flow.l` @kind object;
  #L18025c.  call `<init>`(v0, v1, v5) @signature `Lkotlinx/coroutines/flow/l$a;.<init>:(Lkotlinx/coroutines/flow/l;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L180262.  v0.`kotlinx.coroutines.flow.l$a.b` @type ^`java.lang.Object` := v3 @kind object;
  #L180266.  v0.`kotlinx.coroutines.flow.l$a.c` @type ^`int` := v4;
  #L18026a.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L18026e.  call temp:= `invokeSuspend`(v0, v3) @signature `Lkotlinx/coroutines/flow/l$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L180274.  v3:= temp @kind object;
  #L180276.  return v3 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.l$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/flow/l$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L180224.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L180228.  v2:= (`java.lang.Number`) v2 @kind object;
  #L18022c.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L180232.  v2:= temp;
  #L180234.  v3:= (`kotlin.coroutines.Continuation`) v3 @kind object;
  #L180238.  call temp:= `a`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/flow/l$a;.a:(Lkotlinx/coroutines/flow/FlowCollector;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L18023e.  v1:= temp @kind object;
  #L180240.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.l$a` v9 @kind this, `java.lang.Object` v10 @kind object) @signature `Lkotlinx/coroutines/flow/l$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L180288.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L18028e.  v0:= temp @kind object;
  #L180290.  v1:= v9.`kotlinx.coroutines.flow.l$a.a` @type ^`int`;
  #L180294.  v2:= 5I;
  #L180296.  v3:= 4I;
  #L180298.  v4:= 3I;
  #L18029a.  v5:= 2I;
  #L18029c.  v6:= 1I;
  #L18029e.  if v1 == 0 then goto L180300;
  #L1802a2.  if v1 == v6 then goto L1802f8;
  #L1802a6.  if v1 == v5 then goto L1802e8;
  #L1802aa.  if v1 == v4 then goto L1802d8;
  #L1802ae.  if v1 == v3 then goto L1802c8;
  #L1802b2.  if v1 != v2 then goto L1802b8;
  #L1802b6.  goto L1802f8;
  #L1802b8.  v10:= new `java.lang.IllegalStateException`;
  #L1802bc.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L1802c0.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1802c6.  throw v10;
  #L1802c8.  v1:= v9.`kotlinx.coroutines.flow.l$a.b` @type ^`java.lang.Object` @kind object;
  #L1802cc.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L1802d0.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1802d6.  goto L1803a4;
  #L1802d8.  v1:= v9.`kotlinx.coroutines.flow.l$a.b` @type ^`java.lang.Object` @kind object;
  #L1802dc.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L1802e0.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1802e6.  goto L180382;
  #L1802e8.  v1:= v9.`kotlinx.coroutines.flow.l$a.b` @type ^`java.lang.Object` @kind object;
  #L1802ec.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L1802f0.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1802f6.  goto L180350;
  #L1802f8.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L1802fe.  goto L1803c0;
  #L180300.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L180306.  v10:= v9.`kotlinx.coroutines.flow.l$a.b` @type ^`java.lang.Object` @kind object;
  #L18030a.  v1:= v10 @kind object;
  #L18030c.  v1:= (`kotlinx.coroutines.flow.FlowCollector`) v1 @kind object;
  #L180310.  v10:= v9.`kotlinx.coroutines.flow.l$a.c` @type ^`int`;
  #L180314.  if v10 <= 0 then goto L18032e;
  #L180318.  v10:= `@@kotlinx.coroutines.flow.SharingCommand.START` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L18031c.  v9.`kotlinx.coroutines.flow.l$a.a` @type ^`int` := v6;
  #L180320.  call temp:= `emit`(v1, v10, v9) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L180326.  v10:= temp @kind object;
  #L180328.  if v10 != v0 then goto L1803c0;
  #L18032c.  return v0 @kind object;
  #L18032e.  v10:= v9.`kotlinx.coroutines.flow.l$a.d` @type ^`kotlinx.coroutines.flow.l` @kind object;
  #L180332.  call temp:= `b`(v10) @signature `Lkotlinx/coroutines/flow/l;.b:(Lkotlinx/coroutines/flow/l;)J` @kind static;
  #L180338.  v6:= temp @kind wide;
  #L18033a.  v9.`kotlinx.coroutines.flow.l$a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L18033e.  v9.`kotlinx.coroutines.flow.l$a.a` @type ^`int` := v5;
  #L180342.  call temp:= `delay`(v6, v9) @signature `Lkotlinx/coroutines/DelayKt;.delay:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L180348.  v10:= temp @kind object;
  #L18034a.  if v10 != v0 then goto L180350;
  #L18034e.  return v0 @kind object;
  #L180350.  v10:= v9.`kotlinx.coroutines.flow.l$a.d` @type ^`kotlinx.coroutines.flow.l` @kind object;
  #L180354.  call temp:= `a`(v10) @signature `Lkotlinx/coroutines/flow/l;.a:(Lkotlinx/coroutines/flow/l;)J` @kind static;
  #L18035a.  v5:= temp @kind wide;
  #L18035c.  v7:= 0L;
  #L180360.  v10:= lcmp(v5, v7);
  #L180364.  if v10 <= 0 then goto L1803a4;
  #L180368.  v10:= `@@kotlinx.coroutines.flow.SharingCommand.STOP` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L18036c.  v9.`kotlinx.coroutines.flow.l$a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L180370.  v9.`kotlinx.coroutines.flow.l$a.a` @type ^`int` := v4;
  #L180374.  call temp:= `emit`(v1, v10, v9) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L18037a.  v10:= temp @kind object;
  #L18037c.  if v10 != v0 then goto L180382;
  #L180380.  return v0 @kind object;
  #L180382.  v10:= v9.`kotlinx.coroutines.flow.l$a.d` @type ^`kotlinx.coroutines.flow.l` @kind object;
  #L180386.  call temp:= `a`(v10) @signature `Lkotlinx/coroutines/flow/l;.a:(Lkotlinx/coroutines/flow/l;)J` @kind static;
  #L18038c.  v4:= temp @kind wide;
  #L18038e.  v9.`kotlinx.coroutines.flow.l$a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L180392.  v9.`kotlinx.coroutines.flow.l$a.a` @type ^`int` := v3;
  #L180396.  call temp:= `delay`(v4, v9) @signature `Lkotlinx/coroutines/DelayKt;.delay:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L18039c.  v10:= temp @kind object;
  #L18039e.  if v10 != v0 then goto L1803a4;
  #L1803a2.  return v0 @kind object;
  #L1803a4.  v10:= `@@kotlinx.coroutines.flow.SharingCommand.STOP_AND_RESET_REPLAY_CACHE` @type ^`kotlinx.coroutines.flow.SharingCommand` @kind object;
  #L1803a8.  v3:= 0I;
  #L1803aa.  v9.`kotlinx.coroutines.flow.l$a.b` @type ^`java.lang.Object` := v3 @kind object;
  #L1803ae.  v9.`kotlinx.coroutines.flow.l$a.a` @type ^`int` := v2;
  #L1803b2.  call temp:= `emit`(v1, v10, v9) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L1803b8.  v10:= temp @kind object;
  #L1803ba.  if v10 != v0 then goto L1803c0;
  #L1803be.  return v0 @kind object;
  #L1803c0.  v10:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1803c4.  return v10 @kind object;
}
