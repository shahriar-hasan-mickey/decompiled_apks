record `kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.flow.FlowCollector` @kind interface {
  `kotlin.jvm.internal.Ref$BooleanRef` `kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1.a` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.flow.FlowCollector` `kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1.b` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1` v0 @kind this, `kotlin.jvm.internal.Ref$BooleanRef` v1 @kind object, `kotlinx.coroutines.flow.FlowCollector` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1;.<init>:(Lkotlin/jvm/internal/Ref$BooleanRef;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1759ec.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1.a` @type ^`kotlin.jvm.internal.Ref$BooleanRef` := v1 @kind object;
  #L1759f0.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` := v2 @kind object;
  #L1759f4.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1.c` @type ^`kotlin.jvm.functions.Function2` := v3 @kind object;
  #L1759f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1759fe.  return @kind void;
}
procedure `java.lang.Object` `emit`(`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1` v6 @kind this, `java.lang.Object` v7 @kind object, `kotlin.coroutines.Continuation` v8 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1758bc.  v0:= instanceof @variable v8 @type ^`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1$1` @kind boolean;
  #L1758c0.  if v0 == 0 then goto L1758e2;
  #L1758c4.  v0:= v8 @kind object;
  #L1758c6.  v0:= (`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1$1`) v0 @kind object;
  #L1758ca.  v1:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1$1.b` @type ^`int`;
  #L1758ce.  v2:= -2147483648I;
  #L1758d2.  v3:= v1 ^& v2 @kind int;
  #L1758d6.  if v3 == 0 then goto L1758e2;
  #L1758da.  v1:= v1 - v2 @kind int;
  #L1758dc.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1$1.b` @type ^`int` := v1;
  #L1758e0.  goto L1758ec;
  #L1758e2.  v0:= new `kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1$1`;
  #L1758e6.  call `<init>`(v0, v6, v8) @signature `Lkotlinx/coroutines/flow/FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1$1;.<init>:(Lkotlinx/coroutines/flow/FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1758ec.  v8:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1$1.a` @type ^`java.lang.Object` @kind object;
  #L1758f0.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1758f6.  v1:= temp @kind object;
  #L1758f8.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1$1.b` @type ^`int`;
  #L1758fc.  v3:= 3I;
  #L1758fe.  v4:= 2I;
  #L175900.  v5:= 1I;
  #L175902.  if v2 == 0 then goto L175946;
  #L175906.  if v2 == v5 then goto L17593e;
  #L17590a.  if v2 == v4 then goto L17592a;
  #L17590e.  if v2 != v3 then goto L17591a;
  #L175912.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L175918.  goto L1759d6;
  #L17591a.  v7:= new `java.lang.IllegalStateException`;
  #L17591e.  v8:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L175922.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L175928.  throw v7;
  #L17592a.  v7:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1$1.e` @type ^`java.lang.Object` @kind object;
  #L17592e.  v2:= v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1$1.d` @type ^`java.lang.Object` @kind object;
  #L175932.  v2:= (`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1`) v2 @kind object;
  #L175936.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17593c.  goto L17599e;
  #L17593e.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L175944.  goto L1759d6;
  #L175946.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L17594c.  v8:= v6.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1.a` @type ^`kotlin.jvm.internal.Ref$BooleanRef` @kind object;
  #L175950.  v8:= v8.`kotlin.jvm.internal.Ref$BooleanRef.element` @type ^`boolean` @kind boolean;
  #L175954.  if v8 == 0 then goto L17596e;
  #L175958.  v8:= v6.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L17595c.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1$1.b` @type ^`int` := v5;
  #L175960.  call temp:= `emit`(v8, v7, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L175966.  v7:= temp @kind object;
  #L175968.  if v7 != v1 then goto L1759d6;
  #L17596c.  return v1 @kind object;
  #L17596e.  v8:= v6.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1.c` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L175972.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1$1.d` @type ^`java.lang.Object` := v6 @kind object;
  #L175976.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1$1.e` @type ^`java.lang.Object` := v7 @kind object;
  #L17597a.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1$1.b` @type ^`int` := v4;
  #L17597e.  v2:= 6I;
  #L175980.  call `mark`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L175986.  call temp:= `invoke`(v8, v7, v0) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L17598c.  v8:= temp @kind object;
  #L17598e.  v2:= 7I;
  #L175990.  call `mark`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L175996.  if v8 != v1 then goto L17599c;
  #L17599a.  return v1 @kind object;
  #L17599c.  v2:= v6 @kind object;
  #L17599e.  v8:= (`java.lang.Boolean`) v8 @kind object;
  #L1759a2.  call temp:= `booleanValue`(v8) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L1759a8.  v8:= temp;
  #L1759aa.  if v8 != 0 then goto L1759d6;
  #L1759ae.  v8:= v2.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1.a` @type ^`kotlin.jvm.internal.Ref$BooleanRef` @kind object;
  #L1759b2.  v8.`kotlin.jvm.internal.Ref$BooleanRef.element` @type ^`boolean` := v5 @kind boolean;
  #L1759b6.  v8:= v2.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1.b` @type ^`kotlinx.coroutines.flow.FlowCollector` @kind object;
  #L1759ba.  v2:= 0I;
  #L1759bc.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1$1.d` @type ^`java.lang.Object` := v2 @kind object;
  #L1759c0.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1$1.e` @type ^`java.lang.Object` := v2 @kind object;
  #L1759c4.  v0.`kotlinx.coroutines.flow.FlowKt__LimitKt$dropWhile$lambda-4$$inlined$collect$1$1.b` @type ^`int` := v3;
  #L1759c8.  call temp:= `emit`(v8, v7, v0) @signature `Lkotlinx/coroutines/flow/FlowCollector;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L1759ce.  v7:= temp @kind object;
  #L1759d0.  if v7 != v1 then goto L1759d6;
  #L1759d4.  return v1 @kind object;
  #L1759d6.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1759da.  return v7 @kind object;
}
