record `kotlinx.coroutines.flow.MutableSharedFlow` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `kotlinx.coroutines.flow.SharedFlow` @kind interface, `kotlinx.coroutines.flow.FlowCollector` @kind interface {
}
procedure `java.lang.Object` `emit`(`java.lang.Object` v0 @kind object, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/flow/MutableSharedFlow;.emit:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlinx.coroutines.flow.StateFlow` `getSubscriptionCount`() @signature `Lkotlinx/coroutines/flow/MutableSharedFlow;.getSubscriptionCount:()Lkotlinx/coroutines/flow/StateFlow;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `resetReplayCache`() @signature `Lkotlinx/coroutines/flow/MutableSharedFlow;.resetReplayCache:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `tryEmit`(`java.lang.Object` v0 @kind object) @signature `Lkotlinx/coroutines/flow/MutableSharedFlow;.tryEmit:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
