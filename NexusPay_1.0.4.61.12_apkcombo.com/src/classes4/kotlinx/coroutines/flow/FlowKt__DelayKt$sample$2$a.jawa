record `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a.b` @AccessFlag SYNTHETIC;
  `kotlin.jvm.internal.Ref$ObjectRef` `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a.c` @AccessFlag FINAL_SYNTHETIC;
  `kotlinx.coroutines.channels.ReceiveChannel` `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a` v0 @kind this, `kotlin.jvm.internal.Ref$ObjectRef` v1 @kind object, `kotlinx.coroutines.channels.ReceiveChannel` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$a;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1733cc.  v0.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a.c` @type ^`kotlin.jvm.internal.Ref$ObjectRef` := v1 @kind object;
  #L1733d0.  v0.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a.d` @type ^`kotlinx.coroutines.channels.ReceiveChannel` := v2 @kind object;
  #L1733d4.  v1:= 2I;
  #L1733d6.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L1733dc.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$a;.a:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1732e0.  call temp:= `box-impl`(v1) @signature `Lkotlinx/coroutines/channels/ChannelResult;.box-impl:(Ljava/lang/Object;)Lkotlinx/coroutines/channels/ChannelResult;` @kind static;
  #L1732e6.  v1:= temp @kind object;
  #L1732e8.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L1732ee.  v1:= temp @kind object;
  #L1732f0.  v1:= (`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a`) v1 @kind object;
  #L1732f4.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1732f8.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1732fe.  v1:= temp @kind object;
  #L173300.  return v1 @kind object;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1733a4.  v0:= new `kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a`;
  #L1733a8.  v1:= v3.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a.c` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L1733ac.  v2:= v3.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a.d` @type ^`kotlinx.coroutines.channels.ReceiveChannel` @kind object;
  #L1733b0.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$a;.<init>:(Lkotlin/jvm/internal/Ref$ObjectRef;Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1733b6.  v0.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a.b` @type ^`java.lang.Object` := v4 @kind object;
  #L1733ba.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1732b4.  v1:= (`kotlinx.coroutines.channels.ChannelResult`) v1 @kind object;
  #L1732b8.  call temp:= `unbox-impl`(v1) @signature `Lkotlinx/coroutines/channels/ChannelResult;.unbox-impl:()Ljava/lang/Object;` @kind virtual;
  #L1732be.  v1:= temp @kind object;
  #L1732c0.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L1732c4.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$a;.a:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L1732ca.  v1:= temp @kind object;
  #L1732cc.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/flow/FlowKt__DelayKt$sample$2$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L173314.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L17331a.  v0:= v3.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a.a` @type ^`int`;
  #L17331e.  if v0 != 0 then goto L173382;
  #L173322.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L173328.  v4:= v3.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a.b` @type ^`java.lang.Object` @kind object;
  #L17332c.  v4:= (`kotlinx.coroutines.channels.ChannelResult`) v4 @kind object;
  #L173330.  call temp:= `unbox-impl`(v4) @signature `Lkotlinx/coroutines/channels/ChannelResult;.unbox-impl:()Ljava/lang/Object;` @kind virtual;
  #L173336.  v4:= temp @kind object;
  #L173338.  v0:= v3.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a.c` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L17333c.  v1:= instanceof @variable v4 @type ^`kotlinx.coroutines.channels.ChannelResult$Failed` @kind boolean;
  #L173340.  if v1 != 0 then goto L173348;
  #L173344.  v0.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v4 @kind object;
  #L173348.  v0:= v3.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a.d` @type ^`kotlinx.coroutines.channels.ReceiveChannel` @kind object;
  #L17334c.  v2:= v3.`kotlinx.coroutines.flow.FlowKt__DelayKt$sample$2$a.c` @type ^`kotlin.jvm.internal.Ref$ObjectRef` @kind object;
  #L173350.  if v1 == 0 then goto L17337c;
  #L173354.  call temp:= `exceptionOrNull-impl`(v4) @signature `Lkotlinx/coroutines/channels/ChannelResult;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L17335a.  v4:= temp @kind object;
  #L17335c.  if v4 != 0 then goto L17337a;
  #L173360.  v4:= new `kotlinx.coroutines.flow.internal.ChildCancelledException`;
  #L173364.  call `<init>`(v4) @signature `Lkotlinx/coroutines/flow/internal/ChildCancelledException;.<init>:()V` @kind direct;
  #L17336a.  call `cancel`(v0, v4) @signature `Lkotlinx/coroutines/channels/ReceiveChannel;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L173370.  v4:= `@@kotlinx.coroutines.flow.internal.NullSurrogateKt.DONE` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L173374.  v2.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v4 @kind object;
  #L173378.  goto L17337c;
  #L17337a.  throw v4;
  #L17337c.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L173380.  return v4 @kind object;
  #L173382.  v4:= new `java.lang.IllegalStateException`;
  #L173386.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L17338a.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L173390.  throw v4;
}
