record `kotlinx.coroutines.CancellableContinuationImpl` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.DispatchedTask` @kind class, `kotlinx.coroutines.CancellableContinuation` @kind interface, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind interface {
  `int` `kotlinx.coroutines.CancellableContinuationImpl._decision` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.CancellableContinuationImpl._state` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `kotlin.coroutines.Continuation` `kotlinx.coroutines.CancellableContinuationImpl.a` @AccessFlag PRIVATE_FINAL;
  `kotlin.coroutines.CoroutineContext` `kotlinx.coroutines.CancellableContinuationImpl.b` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.DisposableHandle` `kotlinx.coroutines.CancellableContinuationImpl.c` @AccessFlag PRIVATE;
}
global `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `@@kotlinx.coroutines.CancellableContinuationImpl.d` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.CancellableContinuationImpl.e` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L15459c.  v0:= constclass @type ^`kotlinx.coroutines.CancellableContinuationImpl` @kind object;
  #L1545a0.  v1:= "_decision" @kind object;
  #L1545a4.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;` @kind static;
  #L1545aa.  v0:= temp @kind object;
  #L1545ac.  `@@kotlinx.coroutines.CancellableContinuationImpl.d` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v0 @kind object;
  #L1545b0.  v0:= constclass @type ^`kotlinx.coroutines.CancellableContinuationImpl` @kind object;
  #L1545b4.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L1545b8.  v2:= "_state" @kind object;
  #L1545bc.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L1545c2.  v0:= temp @kind object;
  #L1545c4.  `@@kotlinx.coroutines.CancellableContinuationImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L1545c8.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object, `int` v3 ) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1545dc.  call `<init>`(v1, v3) @signature `Lkotlinx/coroutines/DispatchedTask;.<init>:(I)V` @kind direct;
  #L1545e2.  v1.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` := v2 @kind object;
  #L1545e6.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1545ec.  v2:= temp;
  #L1545ee.  v0:= 0I;
  #L1545f0.  if v2 == 0 then goto L154612;
  #L1545f4.  v2:= -1I;
  #L1545f6.  if v3 == v2 then goto L1545fe;
  #L1545fa.  v2:= 1I;
  #L1545fc.  goto L154600;
  #L1545fe.  v2:= 0I;
  #L154600.  if v2 == 0 then goto L154606;
  #L154604.  goto L154612;
  #L154606.  v2:= new `java.lang.AssertionError`;
  #L15460a.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L154610.  throw v2;
  #L154612.  v2:= v1.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L154616.  call temp:= `getContext`(v2) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L15461c.  v2:= temp @kind object;
  #L15461e.  v1.`kotlinx.coroutines.CancellableContinuationImpl.b` @type ^`kotlin.coroutines.CoroutineContext` := v2 @kind object;
  #L154622.  v1.`kotlinx.coroutines.CancellableContinuationImpl._decision` @type ^`int` := v0;
  #L154626.  v2:= `@@kotlinx.coroutines.e.a` @type ^`kotlinx.coroutines.e` @kind object;
  #L15462a.  v1.`kotlinx.coroutines.CancellableContinuationImpl._state` @type ^`java.lang.Object` := v2 @kind object;
  #L15462e.  return @kind void;
}
procedure `java.lang.Void` `a`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.a:(Ljava/lang/Object;)Ljava/lang/Void;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1543f4.  v0:= "Already resumed, but proposed with update " @kind object;
  #L1543f8.  call temp:= `stringPlus`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1543fe.  v2:= temp @kind object;
  #L154400.  v0:= new `java.lang.IllegalStateException`;
  #L154404.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15440a.  v2:= temp @kind object;
  #L15440c.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L154412.  throw v0;
}
procedure `void` `b`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this, `kotlin.jvm.functions.Function1` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.b:(Lkotlin/jvm/functions/Function1;Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L154640.  call temp:= `invoke`(v3, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L154646.  goto L15466e;
  #L154648.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15464a.  call temp:= `getContext`(v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L154650.  v4:= temp @kind object;
  #L154652.  v0:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L154656.  v1:= "Exception in invokeOnCancellation handler for " @kind object;
  #L15465a.  call temp:= `stringPlus`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L154660.  v1:= temp @kind object;
  #L154662.  call `<init>`(v0, v1, v3) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L154668.  call `handleCoroutineException`(v4, v0) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handleCoroutineException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L15466e.  return @kind void;
  catch `java.lang.Throwable` @[L154640..L154646] goto L154648;
}
procedure `boolean` `c`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.c:(Ljava/lang/Throwable;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L153e00.  v0:= v2.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L153e04.  call temp:= `isReusableMode`(v0) @signature `Lkotlinx/coroutines/DispatchedTaskKt;.isReusableMode:(I)Z` @kind static;
  #L153e0a.  v0:= temp;
  #L153e0c.  v1:= 0I;
  #L153e0e.  if v0 != 0 then goto L153e14;
  #L153e12.  return v1;
  #L153e14.  call temp:= `h`(v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.h:()Z` @kind direct;
  #L153e1a.  v0:= temp;
  #L153e1c.  if v0 != 0 then goto L153e22;
  #L153e20.  return v1;
  #L153e22.  v0:= v2.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L153e26.  v0:= (`kotlinx.coroutines.internal.DispatchedContinuation`) v0 @kind object;
  #L153e2a.  call temp:= `postponeCancellation`(v0, v3) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.postponeCancellation:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L153e30.  v3:= temp;
  #L153e32.  return v3;
}
procedure `void` `d`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.d:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L15486c.  call temp:= `h`(v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.h:()Z` @kind direct;
  #L154872.  v0:= temp;
  #L154874.  if v0 != 0 then goto L15487e;
  #L154878.  call `detachChild$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.detachChild$kotlinx_coroutines_core:()V` @kind virtual;
  #L15487e.  return @kind void;
}
procedure `void` `e`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this, `int` v2 ) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.e:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L154890.  call temp:= `o`(v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.o:()Z` @kind direct;
  #L154896.  v0:= temp;
  #L154898.  if v0 == 0 then goto L15489e;
  #L15489c.  return @kind void;
  #L15489e.  call `dispatch`(v1, v2) @signature `Lkotlinx/coroutines/DispatchedTaskKt;.dispatch:(Lkotlinx/coroutines/DispatchedTask;I)V` @kind static;
  #L1548a4.  return @kind void;
}
procedure `java.lang.String` `f`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.f:()Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1542b8.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1542be.  v0:= temp @kind object;
  #L1542c0.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.NotCompleted` @kind boolean;
  #L1542c4.  if v1 == 0 then goto L1542ce;
  #L1542c8.  v0:= "Active" @kind object;
  #L1542cc.  goto L1542e0;
  #L1542ce.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.CancelledContinuation` @kind boolean;
  #L1542d2.  if v0 == 0 then goto L1542dc;
  #L1542d6.  v0:= "Cancelled" @kind object;
  #L1542da.  goto L1542e0;
  #L1542dc.  v0:= "Completed" @kind object;
  #L1542e0.  return v0 @kind object;
}
procedure `kotlinx.coroutines.DisposableHandle` `g`(`kotlinx.coroutines.CancellableContinuationImpl` v7 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.g:()Lkotlinx/coroutines/DisposableHandle;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1544a8.  call temp:= `getContext`(v7) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L1544ae.  v0:= temp @kind object;
  #L1544b0.  v1:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L1544b4.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L1544ba.  v0:= temp @kind object;
  #L1544bc.  v1:= v0 @kind object;
  #L1544be.  v1:= (`kotlinx.coroutines.Job`) v1 @kind object;
  #L1544c2.  if v1 != 0 then goto L1544ca;
  #L1544c6.  v0:= 0I;
  #L1544c8.  return v0 @kind object;
  #L1544ca.  v2:= 1I;
  #L1544cc.  v3:= 0I;
  #L1544ce.  v4:= new `kotlinx.coroutines.ChildContinuation`;
  #L1544d2.  call `<init>`(v4, v7) @signature `Lkotlinx/coroutines/ChildContinuation;.<init>:(Lkotlinx/coroutines/CancellableContinuationImpl;)V` @kind direct;
  #L1544d8.  v5:= 2I;
  #L1544da.  v6:= 0I;
  #L1544dc.  call temp:= `invokeOnCompletion$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.invokeOnCompletion$default:(Lkotlinx/coroutines/Job;ZZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/DisposableHandle;` @kind static;
  #L1544e2.  v0:= temp @kind object;
  #L1544e4.  v7.`kotlinx.coroutines.CancellableContinuationImpl.c` @type ^`kotlinx.coroutines.DisposableHandle` := v0 @kind object;
  #L1544e8.  return v0 @kind object;
}
procedure `boolean` `h`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.h:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L153ea8.  v0:= v2.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L153eac.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.DispatchedContinuation` @kind boolean;
  #L153eb0.  if v1 == 0 then goto L153ec8;
  #L153eb4.  v0:= (`kotlinx.coroutines.internal.DispatchedContinuation`) v0 @kind object;
  #L153eb8.  call temp:= `isReusable`(v0, v2) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.isReusable:(Lkotlinx/coroutines/CancellableContinuationImpl;)Z` @kind virtual;
  #L153ebe.  v0:= temp;
  #L153ec0.  if v0 == 0 then goto L153ec8;
  #L153ec4.  v0:= 1I;
  #L153ec6.  goto L153eca;
  #L153ec8.  v0:= 0I;
  #L153eca.  return v0;
}
procedure `kotlinx.coroutines.CancelHandler` `i`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this, `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.i:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/CancelHandler;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L15447c.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.CancelHandler` @kind boolean;
  #L154480.  if v0 == 0 then goto L15448a;
  #L154484.  v2:= (`kotlinx.coroutines.CancelHandler`) v2 @kind object;
  #L154488.  goto L154496;
  #L15448a.  v0:= new `kotlinx.coroutines.u`;
  #L15448e.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/u;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L154494.  v2:= v0 @kind object;
  #L154496.  return v2 @kind object;
}
procedure `void` `j`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this, `kotlin.jvm.functions.Function1` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.j:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L154a24.  v0:= new `java.lang.StringBuilder`;
  #L154a28.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L154a2e.  v1:= "It's prohibited to register multiple handlers, tried to register " @kind object;
  #L154a32.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154a38.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154a3e.  v3:= ", already has " @kind object;
  #L154a42.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154a48.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154a4e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L154a54.  v3:= temp @kind object;
  #L154a56.  v4:= new `java.lang.IllegalStateException`;
  #L154a5a.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L154a60.  v3:= temp @kind object;
  #L154a62.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L154a68.  throw v4;
}
procedure `void` `k`(`kotlinx.coroutines.CancellableContinuationImpl` v3 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.k:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L154aa8.  v0:= v3.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L154aac.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.DispatchedContinuation` @kind boolean;
  #L154ab0.  v2:= 0I;
  #L154ab2.  if v1 == 0 then goto L154abc;
  #L154ab6.  v0:= (`kotlinx.coroutines.internal.DispatchedContinuation`) v0 @kind object;
  #L154aba.  goto L154abe;
  #L154abc.  v0:= v2 @kind object;
  #L154abe.  if v0 != 0 then goto L154ac4;
  #L154ac2.  goto L154acc;
  #L154ac4.  call temp:= `tryReleaseClaimedContinuation`(v0, v3) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.tryReleaseClaimedContinuation:(Lkotlinx/coroutines/CancellableContinuation;)Ljava/lang/Throwable;` @kind virtual;
  #L154aca.  v2:= temp @kind object;
  #L154acc.  if v2 != 0 then goto L154ad2;
  #L154ad0.  return @kind void;
  #L154ad2.  call `detachChild$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.detachChild$kotlinx_coroutines_core:()V` @kind virtual;
  #L154ad8.  call temp:= `cancel`(v3, v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.cancel:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L154ade.  return @kind void;
}
procedure `void` `l`(`kotlinx.coroutines.CancellableContinuationImpl` v8 @kind this, `java.lang.Object` v9 @kind object, `int` v10 , `kotlin.jvm.functions.Function1` v11 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.l:(Ljava/lang/Object;ILkotlin/jvm/functions/Function1;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L154b44.  v0:= v8.`kotlinx.coroutines.CancellableContinuationImpl._state` @type ^`java.lang.Object` @kind object;
  #L154b48.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.NotCompleted` @kind boolean;
  #L154b4c.  if v1 == 0 then goto L154b88;
  #L154b50.  v3:= v0 @kind object;
  #L154b52.  v3:= (`kotlinx.coroutines.NotCompleted`) v3 @kind object;
  #L154b56.  v7:= 0I;
  #L154b58.  v2:= v8 @kind object;
  #L154b5a.  v4:= v9 @kind object;
  #L154b5c.  v5:= v10;
  #L154b5e.  v6:= v11 @kind object;
  #L154b60.  call temp:= `n`(v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.n:(Lkotlinx/coroutines/NotCompleted;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L154b66.  v1:= temp @kind object;
  #L154b68.  v2:= `@@kotlinx.coroutines.CancellableContinuationImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L154b6c.  call temp:= `compareAndSet`(v2, v8, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L154b72.  v0:= temp;
  #L154b74.  if v0 != 0 then goto L154b7a;
  #L154b78.  goto L154b44;
  #L154b7a.  call `d`(v8) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.d:()V` @kind direct;
  #L154b80.  call `e`(v8, v10) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.e:(I)V` @kind direct;
  #L154b86.  return @kind void;
  #L154b88.  v10:= instanceof @variable v0 @type ^`kotlinx.coroutines.CancelledContinuation` @kind boolean;
  #L154b8c.  if v10 == 0 then goto L154bb2;
  #L154b90.  v0:= (`kotlinx.coroutines.CancelledContinuation`) v0 @kind object;
  #L154b94.  call temp:= `makeResumed`(v0) @signature `Lkotlinx/coroutines/CancelledContinuation;.makeResumed:()Z` @kind virtual;
  #L154b9a.  v10:= temp;
  #L154b9c.  if v10 == 0 then goto L154bb2;
  #L154ba0.  if v11 != 0 then goto L154ba6;
  #L154ba4.  goto L154bb0;
  #L154ba6.  v9:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L154baa.  call `callOnCancellation`(v8, v11, v9) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.callOnCancellation:(Lkotlin/jvm/functions/Function1;Ljava/lang/Throwable;)V` @kind virtual;
  #L154bb0.  return @kind void;
  #L154bb2.  call temp:= `a`(v8, v9) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.a:(Ljava/lang/Object;)Ljava/lang/Void;` @kind direct;
  #L154bb8.  v9:= 0I;
  #L154bba.  throw v9;
}
procedure `void` `m`(`kotlinx.coroutines.CancellableContinuationImpl` v0 @kind object, `java.lang.Object` v1 @kind object, `int` v2 , `kotlin.jvm.functions.Function1` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.m:(Lkotlinx/coroutines/CancellableContinuationImpl;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L154b0c.  if v5 != 0 then goto L154b22;
  #L154b10.  v4:= v4 ^& 4;
  #L154b14.  if v4 == 0 then goto L154b1a;
  #L154b18.  v3:= 0I;
  #L154b1a.  call `l`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.l:(Ljava/lang/Object;ILkotlin/jvm/functions/Function1;)V` @kind direct;
  #L154b20.  return @kind void;
  #L154b22.  v0:= new `java.lang.UnsupportedOperationException`;
  #L154b26.  v1:= "Super calls with default arguments not supported in this target, function: resumeImpl" @kind object;
  #L154b2a.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L154b30.  throw v0;
}
procedure `java.lang.Object` `n`(`kotlinx.coroutines.CancellableContinuationImpl` v8 @kind this, `kotlinx.coroutines.NotCompleted` v9 @kind object, `java.lang.Object` v10 @kind object, `int` v11 , `kotlin.jvm.functions.Function1` v12 @kind object, `java.lang.Object` v13 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.n:(Lkotlinx/coroutines/NotCompleted;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L154160.  v0:= instanceof @variable v10 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L154164.  if v0 == 0 then goto L1541ba;
  #L154168.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L15416e.  v9:= temp;
  #L154170.  v11:= 1I;
  #L154172.  v0:= 0I;
  #L154174.  if v9 == 0 then goto L154194;
  #L154178.  if v13 != 0 then goto L154180;
  #L15417c.  v9:= 1I;
  #L15417e.  goto L154182;
  #L154180.  v9:= 0I;
  #L154182.  if v9 == 0 then goto L154188;
  #L154186.  goto L154194;
  #L154188.  v9:= new `java.lang.AssertionError`;
  #L15418c.  call `<init>`(v9) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L154192.  throw v9;
  #L154194.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L15419a.  v9:= temp;
  #L15419c.  if v9 == 0 then goto L154212;
  #L1541a0.  if v12 != 0 then goto L1541a6;
  #L1541a4.  goto L1541a8;
  #L1541a6.  v11:= 0I;
  #L1541a8.  if v11 == 0 then goto L1541ae;
  #L1541ac.  goto L154212;
  #L1541ae.  v9:= new `java.lang.AssertionError`;
  #L1541b2.  call `<init>`(v9) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1541b8.  throw v9;
  #L1541ba.  call temp:= `isCancellableMode`(v11) @signature `Lkotlinx/coroutines/DispatchedTaskKt;.isCancellableMode:(I)Z` @kind static;
  #L1541c0.  v11:= temp;
  #L1541c2.  if v11 != 0 then goto L1541cc;
  #L1541c6.  if v13 != 0 then goto L1541cc;
  #L1541ca.  goto L154212;
  #L1541cc.  if v12 != 0 then goto L1541e4;
  #L1541d0.  v11:= instanceof @variable v9 @type ^`kotlinx.coroutines.CancelHandler` @kind boolean;
  #L1541d4.  if v11 == 0 then goto L1541e0;
  #L1541d8.  v11:= instanceof @variable v9 @type ^`kotlinx.coroutines.BeforeResumeCancelHandler` @kind boolean;
  #L1541dc.  if v11 == 0 then goto L1541e4;
  #L1541e0.  if v13 == 0 then goto L154212;
  #L1541e4.  v11:= new `kotlinx.coroutines.m`;
  #L1541e8.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.CancelHandler` @kind boolean;
  #L1541ec.  if v0 == 0 then goto L1541f6;
  #L1541f0.  v9:= (`kotlinx.coroutines.CancelHandler`) v9 @kind object;
  #L1541f4.  goto L1541f8;
  #L1541f6.  v9:= 0I;
  #L1541f8.  v2:= v9 @kind object;
  #L1541fa.  v5:= 0I;
  #L1541fc.  v6:= 16I;
  #L154200.  v7:= 0I;
  #L154202.  v0:= v11 @kind object;
  #L154204.  v1:= v10 @kind object;
  #L154206.  v3:= v12 @kind object;
  #L154208.  v4:= v13 @kind object;
  #L15420a.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/m;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/CancelHandler;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L154210.  v10:= v11 @kind object;
  #L154212.  return v10 @kind object;
}
procedure `boolean` `o`(`kotlinx.coroutines.CancellableContinuationImpl` v4 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.o:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L153fa0.  v0:= v4.`kotlinx.coroutines.CancellableContinuationImpl._decision` @type ^`int`;
  #L153fa4.  v1:= 0I;
  #L153fa6.  v2:= 1I;
  #L153fa8.  if v0 == 0 then goto L153fca;
  #L153fac.  if v0 != v2 then goto L153fb2;
  #L153fb0.  return v1;
  #L153fb2.  v0:= new `java.lang.IllegalStateException`;
  #L153fb6.  v1:= "Already resumed" @kind object;
  #L153fba.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L153fc0.  v1:= temp @kind object;
  #L153fc2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L153fc8.  throw v0;
  #L153fca.  v0:= `@@kotlinx.coroutines.CancellableContinuationImpl.d` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L153fce.  v3:= 2I;
  #L153fd0.  call temp:= `compareAndSet`(v0, v4, v1, v3) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L153fd6.  v0:= temp;
  #L153fd8.  if v0 == 0 then goto L153fa0;
  #L153fdc.  return v2;
}
procedure `kotlinx.coroutines.internal.Symbol` `p`(`kotlinx.coroutines.CancellableContinuationImpl` v8 @kind this, `java.lang.Object` v9 @kind object, `java.lang.Object` v10 @kind object, `kotlin.jvm.functions.Function1` v11 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.p:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1544fc.  v0:= v8.`kotlinx.coroutines.CancellableContinuationImpl._state` @type ^`java.lang.Object` @kind object;
  #L154500.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.NotCompleted` @kind boolean;
  #L154504.  if v1 == 0 then goto L154540;
  #L154508.  v3:= v0 @kind object;
  #L15450a.  v3:= (`kotlinx.coroutines.NotCompleted`) v3 @kind object;
  #L15450e.  v5:= v8.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L154512.  v2:= v8 @kind object;
  #L154514.  v4:= v9 @kind object;
  #L154516.  v6:= v11 @kind object;
  #L154518.  v7:= v10 @kind object;
  #L15451a.  call temp:= `n`(v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.n:(Lkotlinx/coroutines/NotCompleted;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L154520.  v1:= temp @kind object;
  #L154522.  v2:= `@@kotlinx.coroutines.CancellableContinuationImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L154526.  call temp:= `compareAndSet`(v2, v8, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L15452c.  v0:= temp;
  #L15452e.  if v0 != 0 then goto L154534;
  #L154532.  goto L1544fc;
  #L154534.  call `d`(v8) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.d:()V` @kind direct;
  #L15453a.  v9:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L15453e.  return v9 @kind object;
  #L154540.  v11:= instanceof @variable v0 @type ^`kotlinx.coroutines.m` @kind boolean;
  #L154544.  v1:= 0I;
  #L154546.  if v11 == 0 then goto L154588;
  #L15454a.  if v10 == 0 then goto L154588;
  #L15454e.  v0:= (`kotlinx.coroutines.m`) v0 @kind object;
  #L154552.  v11:= v0.`kotlinx.coroutines.m.d` @type ^`java.lang.Object` @kind object;
  #L154556.  if v11 != v10 then goto L154588;
  #L15455a.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L154560.  v10:= temp;
  #L154562.  if v10 == 0 then goto L154584;
  #L154566.  v10:= v0.`kotlinx.coroutines.m.a` @type ^`java.lang.Object` @kind object;
  #L15456a.  call temp:= `areEqual`(v10, v9) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L154570.  v9:= temp;
  #L154572.  if v9 == 0 then goto L154578;
  #L154576.  goto L154584;
  #L154578.  v9:= new `java.lang.AssertionError`;
  #L15457c.  call `<init>`(v9) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L154582.  throw v9;
  #L154584.  v1:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L154588.  return v1 @kind object;
}
procedure `boolean` `q`(`kotlinx.coroutines.CancellableContinuationImpl` v3 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.q:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L153ff0.  v0:= v3.`kotlinx.coroutines.CancellableContinuationImpl._decision` @type ^`int`;
  #L153ff4.  v1:= 0I;
  #L153ff6.  if v0 == 0 then goto L15401a;
  #L153ffa.  v2:= 2I;
  #L153ffc.  if v0 != v2 then goto L154002;
  #L154000.  return v1;
  #L154002.  v0:= new `java.lang.IllegalStateException`;
  #L154006.  v1:= "Already suspended" @kind object;
  #L15400a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L154010.  v1:= temp @kind object;
  #L154012.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L154018.  throw v0;
  #L15401a.  v0:= `@@kotlinx.coroutines.CancellableContinuationImpl.d` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L15401e.  v2:= 1I;
  #L154020.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L154026.  v0:= temp;
  #L154028.  if v0 == 0 then goto L153ff0;
  #L15402c.  return v2;
}
procedure `void` `callCancelHandler`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this, `kotlinx.coroutines.CancelHandler` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.callCancelHandler:(Lkotlinx/coroutines/CancelHandler;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15468c.  call `invoke`(v3, v4) @signature `Lkotlinx/coroutines/CancelHandlerBase;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L154692.  goto L1546ba;
  #L154694.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L154696.  call temp:= `getContext`(v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L15469c.  v4:= temp @kind object;
  #L15469e.  v0:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L1546a2.  v1:= "Exception in invokeOnCancellation handler for " @kind object;
  #L1546a6.  call temp:= `stringPlus`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1546ac.  v1:= temp @kind object;
  #L1546ae.  call `<init>`(v0, v1, v3) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1546b4.  call `handleCoroutineException`(v4, v0) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handleCoroutineException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L1546ba.  return @kind void;
  catch `java.lang.Throwable` @[L15468c..L154692] goto L154694;
}
procedure `void` `callOnCancellation`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this, `kotlin.jvm.functions.Function1` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.callOnCancellation:(Lkotlin/jvm/functions/Function1;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1546d8.  call temp:= `invoke`(v3, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1546de.  goto L154706;
  #L1546e0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1546e2.  call temp:= `getContext`(v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L1546e8.  v4:= temp @kind object;
  #L1546ea.  v0:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L1546ee.  v1:= "Exception in resume onCancellation handler for " @kind object;
  #L1546f2.  call temp:= `stringPlus`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1546f8.  v1:= temp @kind object;
  #L1546fa.  call `<init>`(v0, v1, v3) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L154700.  call `handleCoroutineException`(v4, v0) @signature `Lkotlinx/coroutines/CoroutineExceptionHandlerKt;.handleCoroutineException:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L154706.  return @kind void;
  catch `java.lang.Throwable` @[L1546d8..L1546de] goto L1546e0;
}
procedure `boolean` `cancel`(`kotlinx.coroutines.CancellableContinuationImpl` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.cancel:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L153d94.  v0:= v4.`kotlinx.coroutines.CancellableContinuationImpl._state` @type ^`java.lang.Object` @kind object;
  #L153d98.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.NotCompleted` @kind boolean;
  #L153d9c.  if v1 != 0 then goto L153da4;
  #L153da0.  v5:= 0I;
  #L153da2.  return v5;
  #L153da4.  v1:= new `kotlinx.coroutines.CancelledContinuation`;
  #L153da8.  v2:= instanceof @variable v0 @type ^`kotlinx.coroutines.CancelHandler` @kind boolean;
  #L153dac.  call `<init>`(v1, v4, v5, v2) @signature `Lkotlinx/coroutines/CancelledContinuation;.<init>:(Lkotlin/coroutines/Continuation;Ljava/lang/Throwable;Z)V` @kind direct;
  #L153db2.  v3:= `@@kotlinx.coroutines.CancellableContinuationImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L153db6.  call temp:= `compareAndSet`(v3, v4, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L153dbc.  v1:= temp;
  #L153dbe.  if v1 != 0 then goto L153dc4;
  #L153dc2.  goto L153d94;
  #L153dc4.  if v2 == 0 then goto L153dce;
  #L153dc8.  v0:= (`kotlinx.coroutines.CancelHandler`) v0 @kind object;
  #L153dcc.  goto L153dd0;
  #L153dce.  v0:= 0I;
  #L153dd0.  if v0 != 0 then goto L153dd6;
  #L153dd4.  goto L153ddc;
  #L153dd6.  call `callCancelHandler`(v4, v0, v5) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.callCancelHandler:(Lkotlinx/coroutines/CancelHandler;Ljava/lang/Throwable;)V` @kind virtual;
  #L153ddc.  call `d`(v4) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.d:()V` @kind direct;
  #L153de2.  v5:= v4.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L153de6.  call `e`(v4, v5) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.e:(I)V` @kind direct;
  #L153dec.  v5:= 1I;
  #L153dee.  return v5;
}
procedure `void` `cancelCompletedResult$kotlinx_coroutines_core`(`kotlinx.coroutines.CancellableContinuationImpl` v10 @kind this, `java.lang.Object` v11 @kind object, `java.lang.Throwable` v12 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.cancelCompletedResult$kotlinx_coroutines_core:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L154724.  v11:= v10.`kotlinx.coroutines.CancellableContinuationImpl._state` @type ^`java.lang.Object` @kind object;
  #L154728.  v0:= instanceof @variable v11 @type ^`kotlinx.coroutines.NotCompleted` @kind boolean;
  #L15472c.  if v0 != 0 then goto L1547d0;
  #L154730.  v0:= instanceof @variable v11 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L154734.  if v0 == 0 then goto L15473a;
  #L154738.  return @kind void;
  #L15473a.  v0:= instanceof @variable v11 @type ^`kotlinx.coroutines.m` @kind boolean;
  #L15473e.  if v0 == 0 then goto L1547a2;
  #L154742.  v0:= v11 @kind object;
  #L154744.  v0:= (`kotlinx.coroutines.m`) v0 @kind object;
  #L154748.  call temp:= `c`(v0) @signature `Lkotlinx/coroutines/m;.c:()Z` @kind virtual;
  #L15474e.  v1:= temp;
  #L154750.  v1:= v1 ^~ 1;
  #L154754.  if v1 == 0 then goto L15478a;
  #L154758.  v2:= 0I;
  #L15475a.  v3:= 0I;
  #L15475c.  v4:= 0I;
  #L15475e.  v5:= 0I;
  #L154760.  v7:= 15I;
  #L154764.  v8:= 0I;
  #L154766.  v1:= v0 @kind object;
  #L154768.  v6:= v12 @kind object;
  #L15476a.  call temp:= `b`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lkotlinx/coroutines/m;.b:(Lkotlinx/coroutines/m;Ljava/lang/Object;Lkotlinx/coroutines/CancelHandler;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/Throwable;ILjava/lang/Object;)Lkotlinx/coroutines/m;` @kind static;
  #L154770.  v1:= temp @kind object;
  #L154772.  v2:= `@@kotlinx.coroutines.CancellableContinuationImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L154776.  call temp:= `compareAndSet`(v2, v10, v11, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L15477c.  v11:= temp;
  #L15477e.  if v11 == 0 then goto L154724;
  #L154782.  call `d`(v0, v10, v12) @signature `Lkotlinx/coroutines/m;.d:(Lkotlinx/coroutines/CancellableContinuationImpl;Ljava/lang/Throwable;)V` @kind virtual;
  #L154788.  return @kind void;
  #L15478a.  v11:= new `java.lang.IllegalStateException`;
  #L15478e.  v12:= "Must be called at most once" @kind object;
  #L154792.  call temp:= `toString`(v12) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L154798.  v12:= temp @kind object;
  #L15479a.  call `<init>`(v11, v12) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1547a0.  throw v11;
  #L1547a2.  v8:= `@@kotlinx.coroutines.CancellableContinuationImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1547a6.  v9:= new `kotlinx.coroutines.m`;
  #L1547aa.  v2:= 0I;
  #L1547ac.  v3:= 0I;
  #L1547ae.  v4:= 0I;
  #L1547b0.  v6:= 14I;
  #L1547b4.  v7:= 0I;
  #L1547b6.  v0:= v9 @kind object;
  #L1547b8.  v1:= v11 @kind object;
  #L1547ba.  v5:= v12 @kind object;
  #L1547bc.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/m;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/CancelHandler;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1547c2.  call temp:= `compareAndSet`(v8, v10, v11, v9) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1547c8.  v11:= temp;
  #L1547ca.  if v11 == 0 then goto L154724;
  #L1547ce.  return @kind void;
  #L1547d0.  v11:= new `java.lang.IllegalStateException`;
  #L1547d4.  v12:= "Not completed" @kind object;
  #L1547d8.  call temp:= `toString`(v12) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1547de.  v12:= temp @kind object;
  #L1547e0.  call `<init>`(v11, v12) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1547e6.  throw v11;
}
procedure `void` `completeResume`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.completeResume:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1547f8.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1547fe.  v0:= temp;
  #L154800.  if v0 == 0 then goto L154824;
  #L154804.  v0:= `@@kotlinx.coroutines.CancellableContinuationImplKt.RESUME_TOKEN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L154808.  if v2 != v0 then goto L154810;
  #L15480c.  v2:= 1I;
  #L15480e.  goto L154812;
  #L154810.  v2:= 0I;
  #L154812.  if v2 == 0 then goto L154818;
  #L154816.  goto L154824;
  #L154818.  v2:= new `java.lang.AssertionError`;
  #L15481c.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L154822.  throw v2;
  #L154824.  v2:= v1.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L154828.  call `e`(v1, v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.e:(I)V` @kind direct;
  #L15482e.  return @kind void;
}
procedure `void` `detachChild$kotlinx_coroutines_core`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.detachChild$kotlinx_coroutines_core:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L154840.  v0:= v1.`kotlinx.coroutines.CancellableContinuationImpl.c` @type ^`kotlinx.coroutines.DisposableHandle` @kind object;
  #L154844.  if v0 != 0 then goto L15484a;
  #L154848.  return @kind void;
  #L15484a.  call `dispose`(v0) @signature `Lkotlinx/coroutines/DisposableHandle;.dispose:()V` @kind interface;
  #L154850.  v0:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L154854.  v1.`kotlinx.coroutines.CancellableContinuationImpl.c` @type ^`kotlinx.coroutines.DisposableHandle` := v0 @kind object;
  #L154858.  return @kind void;
}
procedure `kotlin.coroutines.jvm.internal.CoroutineStackFrame` `getCallerFrame`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L154454.  v0:= v2.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L154458.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L15445c.  if v1 == 0 then goto L154466;
  #L154460.  v0:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v0 @kind object;
  #L154464.  goto L154468;
  #L154466.  v0:= 0I;
  #L154468.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15443c.  v0:= v1.`kotlinx.coroutines.CancellableContinuationImpl.b` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L154440.  return v0 @kind object;
}
procedure `java.lang.Throwable` `getContinuationCancellationCause`(`kotlinx.coroutines.CancellableContinuationImpl` v0 @kind this, `kotlinx.coroutines.Job` v1 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getContinuationCancellationCause:(Lkotlinx/coroutines/Job;)Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;

  #L15438c.  call temp:= `getCancellationException`(v1) @signature `Lkotlinx/coroutines/Job;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L154392.  v1:= temp @kind object;
  #L154394.  return v1 @kind object;
}
procedure `kotlin.coroutines.Continuation` `getDelegate$kotlinx_coroutines_core`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getDelegate$kotlinx_coroutines_core:()Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L154424.  v0:= v1.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L154428.  return v0 @kind object;
}
procedure `java.lang.Throwable` `getExceptionalResult$kotlinx_coroutines_core`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getExceptionalResult$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1543a8.  call temp:= `getExceptionalResult$kotlinx_coroutines_core`(v2, v3) @signature `Lkotlinx/coroutines/DispatchedTask;.getExceptionalResult$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind super;
  #L1543ae.  v3:= temp @kind object;
  #L1543b0.  if v3 != 0 then goto L1543b8;
  #L1543b4.  v3:= 0I;
  #L1543b6.  goto L1543e2;
  #L1543b8.  call temp:= `getDelegate$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getDelegate$kotlinx_coroutines_core:()Lkotlin/coroutines/Continuation;` @kind virtual;
  #L1543be.  v0:= temp @kind object;
  #L1543c0.  call temp:= `getRECOVER_STACK_TRACES`() @signature `Lkotlinx/coroutines/DebugKt;.getRECOVER_STACK_TRACES:()Z` @kind static;
  #L1543c6.  v1:= temp;
  #L1543c8.  if v1 == 0 then goto L1543e2;
  #L1543cc.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L1543d0.  if v1 != 0 then goto L1543d6;
  #L1543d4.  goto L1543e2;
  #L1543d6.  v0:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v0 @kind object;
  #L1543da.  call temp:= `access$recoverFromStackFrame`(v3, v0) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.access$recoverFromStackFrame:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @kind static;
  #L1543e0.  v3:= temp @kind object;
  #L1543e2.  return v3 @kind object;
}
procedure `java.lang.Object` `getResult`(`kotlinx.coroutines.CancellableContinuationImpl` v3 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getResult:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L154040.  call temp:= `h`(v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.h:()Z` @kind direct;
  #L154046.  v0:= temp;
  #L154048.  call temp:= `q`(v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.q:()Z` @kind direct;
  #L15404e.  v1:= temp;
  #L154050.  if v1 == 0 then goto L154076;
  #L154054.  v1:= v3.`kotlinx.coroutines.CancellableContinuationImpl.c` @type ^`kotlinx.coroutines.DisposableHandle` @kind object;
  #L154058.  if v1 != 0 then goto L154062;
  #L15405c.  call temp:= `g`(v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.g:()Lkotlinx/coroutines/DisposableHandle;` @kind direct;
  #L154062.  if v0 == 0 then goto L15406c;
  #L154066.  call `k`(v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.k:()V` @kind direct;
  #L15406c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L154072.  v0:= temp @kind object;
  #L154074.  return v0 @kind object;
  #L154076.  if v0 == 0 then goto L154080;
  #L15407a.  call `k`(v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.k:()V` @kind direct;
  #L154080.  call temp:= `getState$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L154086.  v0:= temp @kind object;
  #L154088.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15408c.  if v1 == 0 then goto L1540ae;
  #L154090.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L154094.  v0:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L154098.  call temp:= `getRECOVER_STACK_TRACES`() @signature `Lkotlinx/coroutines/DebugKt;.getRECOVER_STACK_TRACES:()Z` @kind static;
  #L15409e.  v1:= temp;
  #L1540a0.  if v1 == 0 then goto L1540ac;
  #L1540a4.  call temp:= `access$recoverFromStackFrame`(v0, v3) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.access$recoverFromStackFrame:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @kind static;
  #L1540aa.  v0:= temp @kind object;
  #L1540ac.  throw v0;
  #L1540ae.  v1:= v3.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L1540b2.  call temp:= `isCancellableMode`(v1) @signature `Lkotlinx/coroutines/DispatchedTaskKt;.isCancellableMode:(I)Z` @kind static;
  #L1540b8.  v1:= temp;
  #L1540ba.  if v1 == 0 then goto L15410a;
  #L1540be.  call temp:= `getContext`(v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L1540c4.  v1:= temp @kind object;
  #L1540c6.  v2:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L1540ca.  call temp:= `get`(v1, v2) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L1540d0.  v1:= temp @kind object;
  #L1540d2.  v1:= (`kotlinx.coroutines.Job`) v1 @kind object;
  #L1540d6.  if v1 == 0 then goto L15410a;
  #L1540da.  call temp:= `isActive`(v1) @signature `Lkotlinx/coroutines/Job;.isActive:()Z` @kind interface;
  #L1540e0.  v2:= temp;
  #L1540e2.  if v2 != 0 then goto L15410a;
  #L1540e6.  call temp:= `getCancellationException`(v1) @signature `Lkotlinx/coroutines/Job;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L1540ec.  v1:= temp @kind object;
  #L1540ee.  call `cancelCompletedResult$kotlinx_coroutines_core`(v3, v0, v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.cancelCompletedResult$kotlinx_coroutines_core:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @kind virtual;
  #L1540f4.  call temp:= `getRECOVER_STACK_TRACES`() @signature `Lkotlinx/coroutines/DebugKt;.getRECOVER_STACK_TRACES:()Z` @kind static;
  #L1540fa.  v0:= temp;
  #L1540fc.  if v0 == 0 then goto L154108;
  #L154100.  call temp:= `access$recoverFromStackFrame`(v1, v3) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.access$recoverFromStackFrame:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @kind static;
  #L154106.  v1:= temp @kind object;
  #L154108.  throw v1;
  #L15410a.  call temp:= `getSuccessfulResult$kotlinx_coroutines_core`(v3, v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getSuccessfulResult$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L154110.  v0:= temp @kind object;
  #L154112.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1542a4.  v0:= 0I;
  #L1542a6.  return v0 @kind object;
}
procedure `java.lang.Object` `getState$kotlinx_coroutines_core`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L154124.  v0:= v1.`kotlinx.coroutines.CancellableContinuationImpl._state` @type ^`java.lang.Object` @kind object;
  #L154128.  return v0 @kind object;
}
procedure `java.lang.Object` `getSuccessfulResult$kotlinx_coroutines_core`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getSuccessfulResult$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15413c.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.m` @kind boolean;
  #L154140.  if v0 == 0 then goto L15414c;
  #L154144.  v2:= (`kotlinx.coroutines.m`) v2 @kind object;
  #L154148.  v2:= v2.`kotlinx.coroutines.m.a` @type ^`java.lang.Object` @kind object;
  #L15414c.  return v2 @kind object;
}
procedure `void` `initCancellability`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.initCancellability:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1548b8.  call temp:= `g`(v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.g:()Lkotlinx/coroutines/DisposableHandle;` @kind direct;
  #L1548be.  v0:= temp @kind object;
  #L1548c0.  if v0 != 0 then goto L1548c6;
  #L1548c4.  return @kind void;
  #L1548c6.  call temp:= `isCompleted`(v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.isCompleted:()Z` @kind virtual;
  #L1548cc.  v1:= temp;
  #L1548ce.  if v1 == 0 then goto L1548e0;
  #L1548d2.  call `dispose`(v0) @signature `Lkotlinx/coroutines/DisposableHandle;.dispose:()V` @kind interface;
  #L1548d8.  v0:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L1548dc.  v2.`kotlinx.coroutines.CancellableContinuationImpl.c` @type ^`kotlinx.coroutines.DisposableHandle` := v0 @kind object;
  #L1548e0.  return @kind void;
}
procedure `void` `invokeOnCancellation`(`kotlinx.coroutines.CancellableContinuationImpl` v11 @kind this, `kotlin.jvm.functions.Function1` v12 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.invokeOnCancellation:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1548f4.  call temp:= `i`(v11, v12) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.i:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/CancelHandler;` @kind direct;
  #L1548fa.  v8:= temp @kind object;
  #L1548fc.  v9:= v11.`kotlinx.coroutines.CancellableContinuationImpl._state` @type ^`java.lang.Object` @kind object;
  #L154900.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.e` @kind boolean;
  #L154904.  if v0 == 0 then goto L15491a;
  #L154908.  v0:= `@@kotlinx.coroutines.CancellableContinuationImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L15490c.  call temp:= `compareAndSet`(v0, v11, v9, v8) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L154912.  v0:= temp;
  #L154914.  if v0 == 0 then goto L1548fc;
  #L154918.  return @kind void;
  #L15491a.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.CancelHandler` @kind boolean;
  #L15491e.  v1:= 0I;
  #L154920.  if v0 != 0 then goto L154a0a;
  #L154924.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L154928.  if v0 == 0 then goto L154968;
  #L15492c.  v2:= v9 @kind object;
  #L15492e.  v2:= (`kotlinx.coroutines.CompletedExceptionally`) v2 @kind object;
  #L154932.  call temp:= `makeHandled`(v2) @signature `Lkotlinx/coroutines/CompletedExceptionally;.makeHandled:()Z` @kind virtual;
  #L154938.  v3:= temp;
  #L15493a.  if v3 == 0 then goto L154960;
  #L15493e.  v3:= instanceof @variable v9 @type ^`kotlinx.coroutines.CancelledContinuation` @kind boolean;
  #L154942.  if v3 == 0 then goto L15495e;
  #L154946.  if v0 == 0 then goto L15494c;
  #L15494a.  goto L15494e;
  #L15494c.  v2:= v1 @kind object;
  #L15494e.  if v2 != 0 then goto L154954;
  #L154952.  goto L154958;
  #L154954.  v1:= v2.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L154958.  call `b`(v11, v12, v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.b:(Lkotlin/jvm/functions/Function1;Ljava/lang/Throwable;)V` @kind direct;
  #L15495e.  return @kind void;
  #L154960.  call `j`(v11, v12, v9) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.j:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)V` @kind direct;
  #L154966.  throw v1;
  #L154968.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.m` @kind boolean;
  #L15496c.  if v0 == 0 then goto L1549d2;
  #L154970.  v0:= v9 @kind object;
  #L154972.  v0:= (`kotlinx.coroutines.m`) v0 @kind object;
  #L154976.  v2:= v0.`kotlinx.coroutines.m.b` @type ^`kotlinx.coroutines.CancelHandler` @kind object;
  #L15497a.  if v2 != 0 then goto L1549ca;
  #L15497e.  v1:= instanceof @variable v8 @type ^`kotlinx.coroutines.BeforeResumeCancelHandler` @kind boolean;
  #L154982.  if v1 == 0 then goto L154988;
  #L154986.  return @kind void;
  #L154988.  call temp:= `c`(v0) @signature `Lkotlinx/coroutines/m;.c:()Z` @kind virtual;
  #L15498e.  v1:= temp;
  #L154990.  if v1 == 0 then goto L1549a0;
  #L154994.  v0:= v0.`kotlinx.coroutines.m.e` @type ^`java.lang.Throwable` @kind object;
  #L154998.  call `b`(v11, v12, v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.b:(Lkotlin/jvm/functions/Function1;Ljava/lang/Throwable;)V` @kind direct;
  #L15499e.  return @kind void;
  #L1549a0.  v1:= 0I;
  #L1549a2.  v3:= 0I;
  #L1549a4.  v4:= 0I;
  #L1549a6.  v5:= 0I;
  #L1549a8.  v6:= 29I;
  #L1549ac.  v7:= 0I;
  #L1549ae.  v2:= v8 @kind object;
  #L1549b0.  call temp:= `b`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/m;.b:(Lkotlinx/coroutines/m;Ljava/lang/Object;Lkotlinx/coroutines/CancelHandler;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/Throwable;ILjava/lang/Object;)Lkotlinx/coroutines/m;` @kind static;
  #L1549b6.  v0:= temp @kind object;
  #L1549b8.  v1:= `@@kotlinx.coroutines.CancellableContinuationImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1549bc.  call temp:= `compareAndSet`(v1, v11, v9, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1549c2.  v0:= temp;
  #L1549c4.  if v0 == 0 then goto L1548fc;
  #L1549c8.  return @kind void;
  #L1549ca.  call `j`(v11, v12, v9) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.j:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)V` @kind direct;
  #L1549d0.  throw v1;
  #L1549d2.  v0:= instanceof @variable v8 @type ^`kotlinx.coroutines.BeforeResumeCancelHandler` @kind boolean;
  #L1549d6.  if v0 == 0 then goto L1549dc;
  #L1549da.  return @kind void;
  #L1549dc.  v10:= new `kotlinx.coroutines.m`;
  #L1549e0.  v3:= 0I;
  #L1549e2.  v4:= 0I;
  #L1549e4.  v5:= 0I;
  #L1549e6.  v6:= 28I;
  #L1549ea.  v7:= 0I;
  #L1549ec.  v0:= v10 @kind object;
  #L1549ee.  v1:= v9 @kind object;
  #L1549f0.  v2:= v8 @kind object;
  #L1549f2.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/m;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/CancelHandler;Lkotlin/jvm/functions/Function1;Ljava/lang/Object;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1549f8.  v0:= `@@kotlinx.coroutines.CancellableContinuationImpl.e` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1549fc.  call temp:= `compareAndSet`(v0, v11, v9, v10) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L154a02.  v0:= temp;
  #L154a04.  if v0 == 0 then goto L1548fc;
  #L154a08.  return @kind void;
  #L154a0a.  call `j`(v11, v12, v9) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.j:(Lkotlin/jvm/functions/Function1;Ljava/lang/Object;)V` @kind direct;
  #L154a10.  throw v1;
}
procedure `boolean` `isActive`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.isActive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L153e44.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L153e4a.  v0:= temp @kind object;
  #L153e4c.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.NotCompleted` @kind boolean;
  #L153e50.  return v0;
}
procedure `boolean` `isCancelled`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.isCancelled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L153e64.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L153e6a.  v0:= temp @kind object;
  #L153e6c.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.CancelledContinuation` @kind boolean;
  #L153e70.  return v0;
}
procedure `boolean` `isCompleted`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.isCompleted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L153e84.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L153e8a.  v0:= temp @kind object;
  #L153e8c.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.NotCompleted` @kind boolean;
  #L153e90.  v0:= v0 ^~ 1;
  #L153e94.  return v0;
}
procedure `java.lang.String` `nameString`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.nameString:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1542f4.  v0:= "CancellableContinuation" @kind object;
  #L1542f8.  return v0 @kind object;
}
procedure `void` `parentCancelled$kotlinx_coroutines_core`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.parentCancelled$kotlinx_coroutines_core:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L154a7c.  call temp:= `c`(v1, v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.c:(Ljava/lang/Throwable;)Z` @kind direct;
  #L154a82.  v0:= temp;
  #L154a84.  if v0 == 0 then goto L154a8a;
  #L154a88.  return @kind void;
  #L154a8a.  call temp:= `cancel`(v1, v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.cancel:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L154a90.  call `d`(v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.d:()V` @kind direct;
  #L154a96.  return @kind void;
}
procedure `boolean` `resetStateReusable`(`kotlinx.coroutines.CancellableContinuationImpl` v4 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.resetStateReusable:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L153edc.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L153ee2.  v0:= temp;
  #L153ee4.  v1:= 1I;
  #L153ee6.  v2:= 0I;
  #L153ee8.  if v0 == 0 then goto L153f0e;
  #L153eec.  v0:= v4.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L153ef0.  v3:= 2I;
  #L153ef2.  if v0 != v3 then goto L153efa;
  #L153ef6.  v0:= 1I;
  #L153ef8.  goto L153efc;
  #L153efa.  v0:= 0I;
  #L153efc.  if v0 == 0 then goto L153f02;
  #L153f00.  goto L153f0e;
  #L153f02.  v0:= new `java.lang.AssertionError`;
  #L153f06.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L153f0c.  throw v0;
  #L153f0e.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L153f14.  v0:= temp;
  #L153f16.  if v0 == 0 then goto L153f3e;
  #L153f1a.  v0:= v4.`kotlinx.coroutines.CancellableContinuationImpl.c` @type ^`kotlinx.coroutines.DisposableHandle` @kind object;
  #L153f1e.  v3:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L153f22.  if v0 == v3 then goto L153f2a;
  #L153f26.  v0:= 1I;
  #L153f28.  goto L153f2c;
  #L153f2a.  v0:= 0I;
  #L153f2c.  if v0 == 0 then goto L153f32;
  #L153f30.  goto L153f3e;
  #L153f32.  v0:= new `java.lang.AssertionError`;
  #L153f36.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L153f3c.  throw v0;
  #L153f3e.  v0:= v4.`kotlinx.coroutines.CancellableContinuationImpl._state` @type ^`java.lang.Object` @kind object;
  #L153f42.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L153f48.  v3:= temp;
  #L153f4a.  if v3 == 0 then goto L153f66;
  #L153f4e.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.NotCompleted` @kind boolean;
  #L153f52.  v3:= v3 ^~ v1 @kind int;
  #L153f54.  if v3 == 0 then goto L153f5a;
  #L153f58.  goto L153f66;
  #L153f5a.  v0:= new `java.lang.AssertionError`;
  #L153f5e.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L153f64.  throw v0;
  #L153f66.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.m` @kind boolean;
  #L153f6a.  if v3 == 0 then goto L153f82;
  #L153f6e.  v0:= (`kotlinx.coroutines.m`) v0 @kind object;
  #L153f72.  v0:= v0.`kotlinx.coroutines.m.d` @type ^`java.lang.Object` @kind object;
  #L153f76.  if v0 == 0 then goto L153f82;
  #L153f7a.  call `detachChild$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.detachChild$kotlinx_coroutines_core:()V` @kind virtual;
  #L153f80.  return v2;
  #L153f82.  v4.`kotlinx.coroutines.CancellableContinuationImpl._decision` @type ^`int` := v2;
  #L153f86.  v0:= `@@kotlinx.coroutines.e.a` @type ^`kotlinx.coroutines.e` @kind object;
  #L153f8a.  v4.`kotlinx.coroutines.CancellableContinuationImpl._state` @type ^`java.lang.Object` := v0 @kind object;
  #L153f8e.  return v1;
}
procedure `void` `resume`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.resume:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L154af0.  v0:= v1.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L154af4.  call `l`(v1, v2, v0, v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.l:(Ljava/lang/Object;ILkotlin/jvm/functions/Function1;)V` @kind direct;
  #L154afa.  return @kind void;
}
procedure `void` `resumeUndispatched`(`kotlinx.coroutines.CancellableContinuationImpl` v6 @kind this, `kotlinx.coroutines.CoroutineDispatcher` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.resumeUndispatched:(Lkotlinx/coroutines/CoroutineDispatcher;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L154bcc.  v0:= v6.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L154bd0.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.DispatchedContinuation` @kind boolean;
  #L154bd4.  v2:= 0I;
  #L154bd6.  if v1 == 0 then goto L154be0;
  #L154bda.  v0:= (`kotlinx.coroutines.internal.DispatchedContinuation`) v0 @kind object;
  #L154bde.  goto L154be2;
  #L154be0.  v0:= v2 @kind object;
  #L154be2.  if v0 != 0 then goto L154be8;
  #L154be6.  goto L154bec;
  #L154be8.  v2:= v0.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L154bec.  if v2 != v7 then goto L154bf6;
  #L154bf0.  v7:= 4I;
  #L154bf2.  v2:= 4I;
  #L154bf4.  goto L154bfc;
  #L154bf6.  v7:= v6.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L154bfa.  v2:= v7;
  #L154bfc.  v3:= 0I;
  #L154bfe.  v4:= 4I;
  #L154c00.  v5:= 0I;
  #L154c02.  v0:= v6 @kind object;
  #L154c04.  v1:= v8 @kind object;
  #L154c06.  call `m`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.m:(Lkotlinx/coroutines/CancellableContinuationImpl;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @kind static;
  #L154c0c.  return @kind void;
}
procedure `void` `resumeUndispatchedWithException`(`kotlinx.coroutines.CancellableContinuationImpl` v9 @kind this, `kotlinx.coroutines.CoroutineDispatcher` v10 @kind object, `java.lang.Throwable` v11 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.resumeUndispatchedWithException:(Lkotlinx/coroutines/CoroutineDispatcher;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L154c20.  v0:= v9.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L154c24.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.DispatchedContinuation` @kind boolean;
  #L154c28.  v2:= 0I;
  #L154c2a.  if v1 == 0 then goto L154c34;
  #L154c2e.  v0:= (`kotlinx.coroutines.internal.DispatchedContinuation`) v0 @kind object;
  #L154c32.  goto L154c36;
  #L154c34.  v0:= v2 @kind object;
  #L154c36.  v4:= new `kotlinx.coroutines.CompletedExceptionally`;
  #L154c3a.  v1:= 0I;
  #L154c3c.  v3:= 2I;
  #L154c3e.  call `<init>`(v4, v11, v1, v3, v2) @signature `Lkotlinx/coroutines/CompletedExceptionally;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L154c44.  if v0 != 0 then goto L154c4a;
  #L154c48.  goto L154c4e;
  #L154c4a.  v2:= v0.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L154c4e.  if v2 != v10 then goto L154c58;
  #L154c52.  v10:= 4I;
  #L154c54.  v5:= 4I;
  #L154c56.  goto L154c5e;
  #L154c58.  v10:= v9.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L154c5c.  v5:= v10;
  #L154c5e.  v6:= 0I;
  #L154c60.  v7:= 4I;
  #L154c62.  v8:= 0I;
  #L154c64.  v3:= v9 @kind object;
  #L154c66.  call `m`(v3, v4, v5, v6, v7, v8) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.m:(Lkotlinx/coroutines/CancellableContinuationImpl;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @kind static;
  #L154c6c.  return @kind void;
}
procedure `void` `resumeWith`(`kotlinx.coroutines.CancellableContinuationImpl` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L154c80.  call temp:= `toState`(v7, v6) @signature `Lkotlinx/coroutines/CompletionStateKt;.toState:(Ljava/lang/Object;Lkotlinx/coroutines/CancellableContinuation;)Ljava/lang/Object;` @kind static;
  #L154c86.  v1:= temp @kind object;
  #L154c88.  v2:= v6.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int`;
  #L154c8c.  v3:= 0I;
  #L154c8e.  v4:= 4I;
  #L154c90.  v5:= 0I;
  #L154c92.  v0:= v6 @kind object;
  #L154c94.  call `m`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.m:(Lkotlinx/coroutines/CancellableContinuationImpl;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @kind static;
  #L154c9a.  return @kind void;
}
procedure `java.lang.Object` `takeState$kotlinx_coroutines_core`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.takeState$kotlinx_coroutines_core:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L154224.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15422a.  v0:= temp @kind object;
  #L15422c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.CancellableContinuationImpl` v2 @kind this) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15430c.  v0:= new `java.lang.StringBuilder`;
  #L154310.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L154316.  call temp:= `nameString`(v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.nameString:()Ljava/lang/String;` @kind virtual;
  #L15431c.  v1:= temp @kind object;
  #L15431e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154324.  v1:= 40I;
  #L154328.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15432e.  v1:= v2.`kotlinx.coroutines.CancellableContinuationImpl.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L154332.  call temp:= `toDebugString`(v1) @signature `Lkotlinx/coroutines/DebugStringsKt;.toDebugString:(Lkotlin/coroutines/Continuation;)Ljava/lang/String;` @kind static;
  #L154338.  v1:= temp @kind object;
  #L15433a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154340.  v1:= "){" @kind object;
  #L154344.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15434a.  call temp:= `f`(v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.f:()Ljava/lang/String;` @kind direct;
  #L154350.  v1:= temp @kind object;
  #L154352.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154358.  v1:= "}@" @kind object;
  #L15435c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154362.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L154368.  v1:= temp @kind object;
  #L15436a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154370.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L154376.  v0:= temp @kind object;
  #L154378.  return v0 @kind object;
}
procedure `java.lang.Object` `tryResume`(`kotlinx.coroutines.CancellableContinuationImpl` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.tryResume:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L154240.  v0:= 0I;
  #L154242.  call temp:= `p`(v1, v2, v3, v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.p:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/internal/Symbol;` @kind direct;
  #L154248.  v2:= temp @kind object;
  #L15424a.  return v2 @kind object;
}
procedure `java.lang.Object` `tryResume`(`kotlinx.coroutines.CancellableContinuationImpl` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.tryResume:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L15425c.  call temp:= `p`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.p:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/internal/Symbol;` @kind direct;
  #L154262.  v1:= temp @kind object;
  #L154264.  return v1 @kind object;
}
procedure `java.lang.Object` `tryResumeWithException`(`kotlinx.coroutines.CancellableContinuationImpl` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.tryResumeWithException:(Ljava/lang/Throwable;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L154278.  v0:= new `kotlinx.coroutines.CompletedExceptionally`;
  #L15427c.  v1:= 0I;
  #L15427e.  v2:= 2I;
  #L154280.  v3:= 0I;
  #L154282.  call `<init>`(v0, v5, v1, v2, v3) @signature `Lkotlinx/coroutines/CompletedExceptionally;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L154288.  call temp:= `p`(v4, v0, v3, v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.p:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/internal/Symbol;` @kind direct;
  #L15428e.  v5:= temp @kind object;
  #L154290.  return v5 @kind object;
}
