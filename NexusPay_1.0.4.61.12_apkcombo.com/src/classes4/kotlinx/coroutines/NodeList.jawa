record `kotlinx.coroutines.NodeList` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.LockFreeLinkedListHead` @kind class, `kotlinx.coroutines.Incomplete` @kind interface {
}
procedure `void` `<init>`(`kotlinx.coroutines.NodeList` v0 @kind this) @signature `Lkotlinx/coroutines/NodeList;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15dabc.  call `<init>`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListHead;.<init>:()V` @kind direct;
  #L15dac2.  return @kind void;
}
procedure `kotlinx.coroutines.NodeList` `getList`(`kotlinx.coroutines.NodeList` v0 @kind this) @signature `Lkotlinx/coroutines/NodeList;.getList:()Lkotlinx/coroutines/NodeList;` @AccessFlag PUBLIC {
    temp;

  #L15daa8.  return v0 @kind object;
}
procedure `java.lang.String` `getString`(`kotlinx.coroutines.NodeList` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lkotlinx/coroutines/NodeList;.getString:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15d9d8.  v0:= new `java.lang.StringBuilder`;
  #L15d9dc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15d9e2.  v1:= "List{" @kind object;
  #L15d9e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d9ec.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d9f2.  v5:= "}[" @kind object;
  #L15d9f6.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d9fc.  call temp:= `getNext`(v4) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNext:()Ljava/lang/Object;` @kind virtual;
  #L15da02.  v5:= temp @kind object;
  #L15da04.  v5:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v5 @kind object;
  #L15da08.  v1:= 1I;
  #L15da0a.  call temp:= `areEqual`(v5, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L15da10.  v2:= temp;
  #L15da12.  if v2 != 0 then goto L15da46;
  #L15da16.  v2:= instanceof @variable v5 @type ^`kotlinx.coroutines.JobNode` @kind boolean;
  #L15da1a.  if v2 == 0 then goto L15da3c;
  #L15da1e.  v2:= v5 @kind object;
  #L15da20.  v2:= (`kotlinx.coroutines.JobNode`) v2 @kind object;
  #L15da24.  if v1 == 0 then goto L15da2c;
  #L15da28.  v1:= 0I;
  #L15da2a.  goto L15da36;
  #L15da2c.  v3:= ", " @kind object;
  #L15da30.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15da36.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15da3c.  call temp:= `getNextNode`(v5) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L15da42.  v5:= temp @kind object;
  #L15da44.  goto L15da0a;
  #L15da46.  v5:= "]" @kind object;
  #L15da4a.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15da50.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15da56.  v5:= temp @kind object;
  #L15da58.  v0:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L15da5c.  call `checkNotNullExpressionValue`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15da62.  return v5 @kind object;
}
procedure `boolean` `isActive`(`kotlinx.coroutines.NodeList` v1 @kind this) @signature `Lkotlinx/coroutines/NodeList;.isActive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15d9c4.  v0:= 1I;
  #L15d9c6.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.NodeList` v1 @kind this) @signature `Lkotlinx/coroutines/NodeList;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15da74.  call temp:= `getDEBUG`() @signature `Lkotlinx/coroutines/DebugKt;.getDEBUG:()Z` @kind static;
  #L15da7a.  v0:= temp;
  #L15da7c.  if v0 == 0 then goto L15da8e;
  #L15da80.  v0:= "Active" @kind object;
  #L15da84.  call temp:= `getString`(v1, v0) @signature `Lkotlinx/coroutines/NodeList;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L15da8a.  v0:= temp @kind object;
  #L15da8c.  goto L15da96;
  #L15da8e.  call temp:= `toString`(v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.toString:()Ljava/lang/String;` @kind super;
  #L15da94.  v0:= temp @kind object;
  #L15da96.  return v0 @kind object;
}
