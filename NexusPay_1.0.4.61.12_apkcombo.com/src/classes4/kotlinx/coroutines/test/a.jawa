record `kotlinx.coroutines.test.a` @kind class @AccessFlag FINAL extends `java.lang.Comparable` @kind interface, `java.lang.Runnable` @kind interface, `kotlinx.coroutines.internal.ThreadSafeHeapNode` @kind interface {
  `java.lang.Runnable` `kotlinx.coroutines.test.a.a` @AccessFlag PRIVATE_FINAL;
  `long` `kotlinx.coroutines.test.a.b` @AccessFlag PRIVATE_FINAL;
  `long` `kotlinx.coroutines.test.a.c` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.internal.ThreadSafeHeap` `kotlinx.coroutines.test.a.d` @AccessFlag PRIVATE;
  `int` `kotlinx.coroutines.test.a.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlinx.coroutines.test.a` v0 @kind this, `java.lang.Runnable` v1 @kind object, `long` v2 , `long` v4 ) @signature `Lkotlinx/coroutines/test/a;.<init>:(Ljava/lang/Runnable;JJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L19185c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L191862.  v0.`kotlinx.coroutines.test.a.a` @type ^`java.lang.Runnable` := v1 @kind object;
  #L191866.  v0.`kotlinx.coroutines.test.a.b` @type ^`long` := v2 @kind wide;
  #L19186a.  v0.`kotlinx.coroutines.test.a.c` @type ^`long` := v4 @kind wide;
  #L19186e.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.test.a` v8 @kind this, `java.lang.Runnable` v9 @kind object, `long` v10 , `long` v12 , `int` v14 , `kotlin.jvm.internal.DefaultConstructorMarker` v15 @kind object) @signature `Lkotlinx/coroutines/test/a;.<init>:(Ljava/lang/Runnable;JJILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L191880.  v15:= v14 ^& 2;
  #L191884.  v0:= 0L;
  #L191888.  if v15 == 0 then goto L191890;
  #L19188c.  v4:= v0 @kind wide;
  #L19188e.  goto L191892;
  #L191890.  v4:= v10 @kind wide;
  #L191892.  v10:= v14 ^& 4;
  #L191896.  if v10 == 0 then goto L19189e;
  #L19189a.  v6:= v0 @kind wide;
  #L19189c.  goto L1918a0;
  #L19189e.  v6:= v12 @kind wide;
  #L1918a0.  v2:= v8 @kind object;
  #L1918a2.  v3:= v9 @kind object;
  #L1918a4.  call `<init>`(v2, v3, v4, v6) @signature `Lkotlinx/coroutines/test/a;.<init>:(Ljava/lang/Runnable;JJ)V` @kind direct;
  #L1918aa.  return @kind void;
}
procedure `int` `a`(`kotlinx.coroutines.test.a` v5 @kind this, `kotlinx.coroutines.test.a` v6 @kind object) @signature `Lkotlinx/coroutines/test/a;.a:(Lkotlinx/coroutines/test/a;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L191798.  v0:= v5.`kotlinx.coroutines.test.a.c` @type ^`long` @kind wide;
  #L19179c.  v2:= v6.`kotlinx.coroutines.test.a.c` @type ^`long` @kind wide;
  #L1917a0.  v4:= lcmp(v0, v2);
  #L1917a4.  if v4 != 0 then goto L1917ba;
  #L1917a8.  v0:= v5.`kotlinx.coroutines.test.a.b` @type ^`long` @kind wide;
  #L1917ac.  v2:= v6.`kotlinx.coroutines.test.a.b` @type ^`long` @kind wide;
  #L1917b0.  call temp:= `compare`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(JJ)I` @kind static;
  #L1917b6.  v6:= temp;
  #L1917b8.  goto L1917c2;
  #L1917ba.  call temp:= `compare`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(JJ)I` @kind static;
  #L1917c0.  v6:= temp;
  #L1917c2.  return v6;
}
procedure `int` `compareTo`(`kotlinx.coroutines.test.a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/test/a;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L191778.  v1:= (`kotlinx.coroutines.test.a`) v1 @kind object;
  #L19177c.  call temp:= `a`(v0, v1) @signature `Lkotlinx/coroutines/test/a;.a:(Lkotlinx/coroutines/test/a;)I` @kind virtual;
  #L191782.  v1:= temp;
  #L191784.  return v1;
}
procedure `kotlinx.coroutines.internal.ThreadSafeHeap` `getHeap`(`kotlinx.coroutines.test.a` v1 @kind this) @signature `Lkotlinx/coroutines/test/a;.getHeap:()Lkotlinx/coroutines/internal/ThreadSafeHeap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L191844.  v0:= v1.`kotlinx.coroutines.test.a.d` @type ^`kotlinx.coroutines.internal.ThreadSafeHeap` @kind object;
  #L191848.  return v0 @kind object;
}
procedure `int` `getIndex`(`kotlinx.coroutines.test.a` v1 @kind this) @signature `Lkotlinx/coroutines/test/a;.getIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1917d4.  v0:= v1.`kotlinx.coroutines.test.a.e` @type ^`int`;
  #L1917d8.  return v0;
}
procedure `void` `run`(`kotlinx.coroutines.test.a` v1 @kind this) @signature `Lkotlinx/coroutines/test/a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1918bc.  v0:= v1.`kotlinx.coroutines.test.a.a` @type ^`java.lang.Runnable` @kind object;
  #L1918c0.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L1918c6.  return @kind void;
}
procedure `void` `setHeap`(`kotlinx.coroutines.test.a` v0 @kind this, `kotlinx.coroutines.internal.ThreadSafeHeap` v1 @kind object) @signature `Lkotlinx/coroutines/test/a;.setHeap:(Lkotlinx/coroutines/internal/ThreadSafeHeap;)V` @AccessFlag PUBLIC {
    temp;

  #L1918d8.  v0.`kotlinx.coroutines.test.a.d` @type ^`kotlinx.coroutines.internal.ThreadSafeHeap` := v1 @kind object;
  #L1918dc.  return @kind void;
}
procedure `void` `setIndex`(`kotlinx.coroutines.test.a` v0 @kind this, `int` v1 ) @signature `Lkotlinx/coroutines/test/a;.setIndex:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1918f0.  v0.`kotlinx.coroutines.test.a.e` @type ^`int` := v1;
  #L1918f4.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.test.a` v3 @kind this) @signature `Lkotlinx/coroutines/test/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1917ec.  v0:= new `java.lang.StringBuilder`;
  #L1917f0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1917f6.  v1:= "TimedRunnable(time=" @kind object;
  #L1917fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L191800.  v1:= v3.`kotlinx.coroutines.test.a.c` @type ^`long` @kind wide;
  #L191804.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L19180a.  v1:= ", run=" @kind object;
  #L19180e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L191814.  v1:= v3.`kotlinx.coroutines.test.a.a` @type ^`java.lang.Runnable` @kind object;
  #L191818.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19181e.  v1:= 41I;
  #L191822.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L191828.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19182e.  v0:= temp @kind object;
  #L191830.  return v0 @kind object;
}
