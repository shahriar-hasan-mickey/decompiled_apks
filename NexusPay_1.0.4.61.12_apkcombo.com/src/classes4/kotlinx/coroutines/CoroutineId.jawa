record `kotlinx.coroutines.CoroutineId` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.AbstractCoroutineContextElement` @kind class, `kotlinx.coroutines.ThreadContextElement` @kind interface {
  `long` `kotlinx.coroutines.CoroutineId.a` @AccessFlag PRIVATE_FINAL;
}
global `kotlinx.coroutines.CoroutineId$Key` `@@kotlinx.coroutines.CoroutineId.Key` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CoroutineId;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L156a68.  v0:= new `kotlinx.coroutines.CoroutineId$Key`;
  #L156a6c.  v1:= 0I;
  #L156a6e.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/CoroutineId$Key;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L156a74.  `@@kotlinx.coroutines.CoroutineId.Key` @type ^`kotlinx.coroutines.CoroutineId$Key` := v0 @kind object;
  #L156a78.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.CoroutineId` v1 @kind this, `long` v2 ) @signature `Lkotlinx/coroutines/CoroutineId;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L156a8c.  v0:= `@@kotlinx.coroutines.CoroutineId.Key` @type ^`kotlinx.coroutines.CoroutineId$Key` @kind object;
  #L156a90.  call `<init>`(v1, v0) @signature `Lkotlin/coroutines/AbstractCoroutineContextElement;.<init>:(Lkotlin/coroutines/CoroutineContext$Key;)V` @kind direct;
  #L156a96.  v1.`kotlinx.coroutines.CoroutineId.a` @type ^`long` := v2 @kind wide;
  #L156a9a.  return @kind void;
}
procedure `kotlinx.coroutines.CoroutineId` `copy$default`(`kotlinx.coroutines.CoroutineId` v0 @kind object, `long` v1 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/CoroutineId;.copy$default:(Lkotlinx/coroutines/CoroutineId;JILjava/lang/Object;)Lkotlinx/coroutines/CoroutineId;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1569f4.  v3:= v3 ^& 1;
  #L1569f8.  if v3 == 0 then goto L156a00;
  #L1569fc.  v1:= v0.`kotlinx.coroutines.CoroutineId.a` @type ^`long` @kind wide;
  #L156a00.  call temp:= `copy`(v0, v1) @signature `Lkotlinx/coroutines/CoroutineId;.copy:(J)Lkotlinx/coroutines/CoroutineId;` @kind virtual;
  #L156a06.  v0:= temp @kind object;
  #L156a08.  return v0 @kind object;
}
procedure `long` `component1`(`kotlinx.coroutines.CoroutineId` v2 @kind this) @signature `Lkotlinx/coroutines/CoroutineId;.component1:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L156a38.  v0:= v2.`kotlinx.coroutines.CoroutineId.a` @type ^`long` @kind wide;
  #L156a3c.  return v0 @kind wide;
}
procedure `kotlinx.coroutines.CoroutineId` `copy`(`kotlinx.coroutines.CoroutineId` v1 @kind this, `long` v2 ) @signature `Lkotlinx/coroutines/CoroutineId;.copy:(J)Lkotlinx/coroutines/CoroutineId;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L156a1c.  v0:= new `kotlinx.coroutines.CoroutineId`;
  #L156a20.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/CoroutineId;.<init>:(J)V` @kind direct;
  #L156a26.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlinx.coroutines.CoroutineId` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/CoroutineId;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L156840.  v0:= 1I;
  #L156842.  if v7 != v8 then goto L156848;
  #L156846.  return v0;
  #L156848.  v1:= instanceof @variable v8 @type ^`kotlinx.coroutines.CoroutineId` @kind boolean;
  #L15684c.  v2:= 0I;
  #L15684e.  if v1 != 0 then goto L156854;
  #L156852.  return v2;
  #L156854.  v8:= (`kotlinx.coroutines.CoroutineId`) v8 @kind object;
  #L156858.  v3:= v7.`kotlinx.coroutines.CoroutineId.a` @type ^`long` @kind wide;
  #L15685c.  v5:= v8.`kotlinx.coroutines.CoroutineId.a` @type ^`long` @kind wide;
  #L156860.  v8:= lcmp(v3, v5);
  #L156864.  if v8 == 0 then goto L15686a;
  #L156868.  return v2;
  #L15686a.  return v0;
}
procedure `long` `getId`(`kotlinx.coroutines.CoroutineId` v2 @kind this) @signature `Lkotlinx/coroutines/CoroutineId;.getId:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L156a50.  v0:= v2.`kotlinx.coroutines.CoroutineId.a` @type ^`long` @kind wide;
  #L156a54.  return v0 @kind wide;
}
procedure `int` `hashCode`(`kotlinx.coroutines.CoroutineId` v2 @kind this) @signature `Lkotlinx/coroutines/CoroutineId;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15687c.  v0:= v2.`kotlinx.coroutines.CoroutineId.a` @type ^`long` @kind wide;
  #L156880.  call temp:= `a`(v0) @signature `Lb;.a:(J)I` @kind static;
  #L156886.  v0:= temp;
  #L156888.  return v0;
}
procedure `void` `restoreThreadContext`(`kotlinx.coroutines.CoroutineId` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineId;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L156aac.  v2:= (`java.lang.String`) v2 @kind object;
  #L156ab0.  call `restoreThreadContext`(v0, v1, v2) @signature `Lkotlinx/coroutines/CoroutineId;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/String;)V` @kind virtual;
  #L156ab6.  return @kind void;
}
procedure `void` `restoreThreadContext`(`kotlinx.coroutines.CoroutineId` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineId;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L156ac8.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L156ace.  v1:= temp @kind object;
  #L156ad0.  call `setName`(v1, v2) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L156ad6.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.CoroutineId` v3 @kind this) @signature `Lkotlinx/coroutines/CoroutineId;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1568b8.  v0:= new `java.lang.StringBuilder`;
  #L1568bc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1568c2.  v1:= "CoroutineId(" @kind object;
  #L1568c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1568cc.  v1:= v3.`kotlinx.coroutines.CoroutineId.a` @type ^`long` @kind wide;
  #L1568d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1568d6.  v1:= 41I;
  #L1568da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1568e0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1568e6.  v0:= temp @kind object;
  #L1568e8.  return v0 @kind object;
}
procedure `java.lang.Object` `updateThreadContext`(`kotlinx.coroutines.CoroutineId` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/CoroutineId;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L15689c.  call temp:= `updateThreadContext`(v0, v1) @signature `Lkotlinx/coroutines/CoroutineId;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/String;` @kind virtual;
  #L1568a2.  v1:= temp @kind object;
  #L1568a4.  return v1 @kind object;
}
procedure `java.lang.String` `updateThreadContext`(`kotlinx.coroutines.CoroutineId` v8 @kind this, `kotlin.coroutines.CoroutineContext` v9 @kind object) @signature `Lkotlinx/coroutines/CoroutineId;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1568fc.  v0:= `@@kotlinx.coroutines.CoroutineName.Key` @type ^`kotlinx.coroutines.CoroutineName$Key` @kind object;
  #L156900.  call temp:= `get`(v9, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L156906.  v9:= temp @kind object;
  #L156908.  v9:= (`kotlinx.coroutines.CoroutineName`) v9 @kind object;
  #L15690c.  v0:= "coroutine" @kind object;
  #L156910.  if v9 != 0 then goto L156916;
  #L156914.  goto L156926;
  #L156916.  call temp:= `getName`(v9) @signature `Lkotlinx/coroutines/CoroutineName;.getName:()Ljava/lang/String;` @kind virtual;
  #L15691c.  v9:= temp @kind object;
  #L15691e.  if v9 != 0 then goto L156924;
  #L156922.  goto L156926;
  #L156924.  v0:= v9 @kind object;
  #L156926.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L15692c.  v9:= temp @kind object;
  #L15692e.  call temp:= `getName`(v9) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L156934.  v7:= temp @kind object;
  #L156936.  v3:= 0I;
  #L156938.  v4:= 0I;
  #L15693a.  v5:= 6I;
  #L15693c.  v6:= 0I;
  #L15693e.  v2:= " @" @kind object;
  #L156942.  v1:= v7 @kind object;
  #L156944.  call temp:= `lastIndexOf$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.lastIndexOf$default:(Ljava/lang/CharSequence;Ljava/lang/String;IZILjava/lang/Object;)I` @kind static;
  #L15694a.  v1:= temp;
  #L15694c.  if v1 >= 0 then goto L156958;
  #L156950.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L156956.  v1:= temp;
  #L156958.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15695e.  v2:= temp;
  #L156960.  v2:= v2 + v1 @kind int;
  #L156962.  v2:= v2 + 10;
  #L156966.  v3:= new `java.lang.StringBuilder`;
  #L15696a.  call `<init>`(v3, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L156970.  v2:= 0I;
  #L156972.  if v7 == 0 then goto L1569d4;
  #L156976.  call temp:= `substring`(v7, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L15697c.  v1:= temp @kind object;
  #L15697e.  v2:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L156982.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L156988.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15698e.  v1:= " @" @kind object;
  #L156992.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L156998.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15699e.  v0:= 35I;
  #L1569a2.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1569a8.  call temp:= `getId`(v8) @signature `Lkotlinx/coroutines/CoroutineId;.getId:()J` @kind virtual;
  #L1569ae.  v0:= temp @kind wide;
  #L1569b0.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1569b6.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1569ba.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1569c0.  v0:= temp @kind object;
  #L1569c2.  v1:= "StringBuilder(capacity).…builderAction).toString()" @kind object;
  #L1569c6.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1569cc.  call `setName`(v9, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L1569d2.  return v7 @kind object;
  #L1569d4.  v9:= new `java.lang.NullPointerException`;
  #L1569d8.  v0:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L1569dc.  call `<init>`(v9, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1569e2.  throw v9;
}
