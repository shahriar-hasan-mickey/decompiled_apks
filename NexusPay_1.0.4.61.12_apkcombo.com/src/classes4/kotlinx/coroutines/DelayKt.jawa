record `kotlinx.coroutines.DelayKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `awaitCancellation`(`kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/DelayKt;.awaitCancellation:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L157b60.  v0:= instanceof @variable v4 @type ^`kotlinx.coroutines.DelayKt$a` @kind boolean;
  #L157b64.  if v0 == 0 then goto L157b86;
  #L157b68.  v0:= v4 @kind object;
  #L157b6a.  v0:= (`kotlinx.coroutines.DelayKt$a`) v0 @kind object;
  #L157b6e.  v1:= v0.`kotlinx.coroutines.DelayKt$a.b` @type ^`int`;
  #L157b72.  v2:= -2147483648I;
  #L157b76.  v3:= v1 ^& v2 @kind int;
  #L157b7a.  if v3 == 0 then goto L157b86;
  #L157b7e.  v1:= v1 - v2 @kind int;
  #L157b80.  v0.`kotlinx.coroutines.DelayKt$a.b` @type ^`int` := v1;
  #L157b84.  goto L157b90;
  #L157b86.  v0:= new `kotlinx.coroutines.DelayKt$a`;
  #L157b8a.  call `<init>`(v0, v4) @signature `Lkotlinx/coroutines/DelayKt$a;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L157b90.  v4:= v0.`kotlinx.coroutines.DelayKt$a.a` @type ^`java.lang.Object` @kind object;
  #L157b94.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L157b9a.  v1:= temp @kind object;
  #L157b9c.  v2:= v0.`kotlinx.coroutines.DelayKt$a.b` @type ^`int`;
  #L157ba0.  v3:= 1I;
  #L157ba2.  if v2 == 0 then goto L157bc2;
  #L157ba6.  if v2 == v3 then goto L157bba;
  #L157baa.  v4:= new `java.lang.IllegalStateException`;
  #L157bae.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L157bb2.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L157bb8.  throw v4;
  #L157bba.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L157bc0.  goto L157c04;
  #L157bc2.  call `throwOnFailure`(v4) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L157bc8.  v0.`kotlinx.coroutines.DelayKt$a.b` @type ^`int` := v3;
  #L157bcc.  v4:= new `kotlinx.coroutines.CancellableContinuationImpl`;
  #L157bd0.  call temp:= `intercepted`(v0) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L157bd6.  v2:= temp @kind object;
  #L157bd8.  call `<init>`(v4, v2, v3) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;I)V` @kind direct;
  #L157bde.  call `initCancellability`(v4) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.initCancellability:()V` @kind virtual;
  #L157be4.  call temp:= `getResult`(v4) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L157bea.  v4:= temp @kind object;
  #L157bec.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L157bf2.  v2:= temp @kind object;
  #L157bf4.  if v4 != v2 then goto L157bfe;
  #L157bf8.  call `probeCoroutineSuspended`(v0) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L157bfe.  if v4 != v1 then goto L157c04;
  #L157c02.  return v1 @kind object;
  #L157c04.  v4:= new `kotlin.KotlinNothingValueException`;
  #L157c08.  call `<init>`(v4) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L157c0e.  throw v4;
}
procedure `java.lang.Object` `delay`(`long` v4 , `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlinx/coroutines/DelayKt;.delay:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L157c20.  v0:= 0L;
  #L157c24.  v2:= lcmp(v4, v0);
  #L157c28.  if v2 > 0 then goto L157c32;
  #L157c2c.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L157c30.  return v4 @kind object;
  #L157c32.  v0:= new `kotlinx.coroutines.CancellableContinuationImpl`;
  #L157c36.  call temp:= `intercepted`(v6) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L157c3c.  v1:= temp @kind object;
  #L157c3e.  v2:= 1I;
  #L157c40.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;I)V` @kind direct;
  #L157c46.  call `initCancellability`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.initCancellability:()V` @kind virtual;
  #L157c4c.  v1:= 9223372036854775807L;
  #L157c56.  v3:= lcmp(v4, v1);
  #L157c5a.  if v3 >= 0 then goto L157c74;
  #L157c5e.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L157c64.  v1:= temp @kind object;
  #L157c66.  call temp:= `getDelay`(v1) @signature `Lkotlinx/coroutines/DelayKt;.getDelay:(Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/Delay;` @kind static;
  #L157c6c.  v1:= temp @kind object;
  #L157c6e.  call `scheduleResumeAfterDelay`(v1, v4, v0) @signature `Lkotlinx/coroutines/Delay;.scheduleResumeAfterDelay:(JLkotlinx/coroutines/CancellableContinuation;)V` @kind interface;
  #L157c74.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L157c7a.  v4:= temp @kind object;
  #L157c7c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L157c82.  v5:= temp @kind object;
  #L157c84.  if v4 != v5 then goto L157c8e;
  #L157c88.  call `probeCoroutineSuspended`(v6) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L157c8e.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L157c94.  v5:= temp @kind object;
  #L157c96.  if v4 != v5 then goto L157c9c;
  #L157c9a.  return v4 @kind object;
  #L157c9c.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L157ca0.  return v4 @kind object;
}
procedure `java.lang.Object` `delay-VtjQ1oo`(`long` v0 , `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/DelayKt;.delay-VtjQ1oo:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L157cb4.  call temp:= `toDelayMillis-LRDsOJo`(v0) @signature `Lkotlinx/coroutines/DelayKt;.toDelayMillis-LRDsOJo:(J)J` @kind static;
  #L157cba.  v0:= temp @kind wide;
  #L157cbc.  call temp:= `delay`(v0, v2) @signature `Lkotlinx/coroutines/DelayKt;.delay:(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L157cc2.  v0:= temp @kind object;
  #L157cc4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L157cca.  v1:= temp @kind object;
  #L157ccc.  if v0 != v1 then goto L157cd2;
  #L157cd0.  return v0 @kind object;
  #L157cd2.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L157cd6.  return v0 @kind object;
}
procedure `kotlinx.coroutines.Delay` `getDelay`(`kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/DelayKt;.getDelay:(Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/Delay;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L157ce8.  v0:= `@@kotlin.coroutines.ContinuationInterceptor.Key` @type ^`kotlin.coroutines.ContinuationInterceptor$Key` @kind object;
  #L157cec.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L157cf2.  v1:= temp @kind object;
  #L157cf4.  v0:= instanceof @variable v1 @type ^`kotlinx.coroutines.Delay` @kind boolean;
  #L157cf8.  if v0 == 0 then goto L157d02;
  #L157cfc.  v1:= (`kotlinx.coroutines.Delay`) v1 @kind object;
  #L157d00.  goto L157d04;
  #L157d02.  v1:= 0I;
  #L157d04.  if v1 != 0 then goto L157d10;
  #L157d08.  call temp:= `getDefaultDelay`() @signature `Lkotlinx/coroutines/DefaultExecutorKt;.getDefaultDelay:()Lkotlinx/coroutines/Delay;` @kind static;
  #L157d0e.  v1:= temp @kind object;
  #L157d10.  return v1 @kind object;
}
procedure `long` `toDelayMillis-LRDsOJo`(`long` v2 ) @signature `Lkotlinx/coroutines/DelayKt;.toDelayMillis-LRDsOJo:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L157d24.  v0:= `@@kotlin.time.Duration.Companion` @type ^`kotlin.time.Duration$Companion` @kind object;
  #L157d28.  call temp:= `getZERO-UwyO8pc`(v0) @signature `Lkotlin/time/Duration$Companion;.getZERO-UwyO8pc:()J` @kind virtual;
  #L157d2e.  v0:= temp @kind wide;
  #L157d30.  call temp:= `compareTo-LRDsOJo`(v2, v0) @signature `Lkotlin/time/Duration;.compareTo-LRDsOJo:(JJ)I` @kind static;
  #L157d36.  v0:= temp;
  #L157d38.  if v0 <= 0 then goto L157d52;
  #L157d3c.  call temp:= `toLongMilliseconds-impl`(v2) @signature `Lkotlin/time/Duration;.toLongMilliseconds-impl:(J)J` @kind static;
  #L157d42.  v2:= temp @kind wide;
  #L157d44.  v0:= 1L;
  #L157d48.  call temp:= `coerceAtLeast`(v2, v0) @signature `Lkotlin/ranges/RangesKt;.coerceAtLeast:(JJ)J` @kind static;
  #L157d4e.  v2:= temp @kind wide;
  #L157d50.  goto L157d56;
  #L157d52.  v2:= 0L;
  #L157d56.  return v2 @kind wide;
}
