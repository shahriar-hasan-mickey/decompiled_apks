record `kotlinx.coroutines.MainCoroutineDispatcher` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.CoroutineDispatcher` @kind class {
}
procedure `void` `<init>`(`kotlinx.coroutines.MainCoroutineDispatcher` v0 @kind this) @signature `Lkotlinx/coroutines/MainCoroutineDispatcher;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15d9ac.  call `<init>`(v0) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.<init>:()V` @kind direct;
  #L15d9b2.  return @kind void;
}
procedure `kotlinx.coroutines.MainCoroutineDispatcher` `getImmediate`() @signature `Lkotlinx/coroutines/MainCoroutineDispatcher;.getImmediate:()Lkotlinx/coroutines/MainCoroutineDispatcher;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.MainCoroutineDispatcher` v2 @kind this) @signature `Lkotlinx/coroutines/MainCoroutineDispatcher;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15d904.  call temp:= `toStringInternalImpl`(v2) @signature `Lkotlinx/coroutines/MainCoroutineDispatcher;.toStringInternalImpl:()Ljava/lang/String;` @kind virtual;
  #L15d90a.  v0:= temp @kind object;
  #L15d90c.  if v0 != 0 then goto L15d948;
  #L15d910.  v0:= new `java.lang.StringBuilder`;
  #L15d914.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15d91a.  call temp:= `getClassSimpleName`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15d920.  v1:= temp @kind object;
  #L15d922.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d928.  v1:= 64I;
  #L15d92c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d932.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15d938.  v1:= temp @kind object;
  #L15d93a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d940.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15d946.  v0:= temp @kind object;
  #L15d948.  return v0 @kind object;
}
procedure `java.lang.String` `toStringInternalImpl`(`kotlinx.coroutines.MainCoroutineDispatcher` v2 @kind this) @signature `Lkotlinx/coroutines/MainCoroutineDispatcher;.toStringInternalImpl:()Ljava/lang/String;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L15d95c.  v0:= `@@kotlinx.coroutines.Dispatchers.INSTANCE` @type ^`kotlinx.coroutines.Dispatchers` @kind object;
  #L15d960.  call temp:= `getMain`() @signature `Lkotlinx/coroutines/Dispatchers;.getMain:()Lkotlinx/coroutines/MainCoroutineDispatcher;` @kind static;
  #L15d966.  v0:= temp @kind object;
  #L15d968.  if v2 != v0 then goto L15d972;
  #L15d96c.  v0:= "Dispatchers.Main" @kind object;
  #L15d970.  return v0 @kind object;
  #L15d972.  v1:= 0I;
  #L15d974.  call temp:= `getImmediate`(v0) @signature `Lkotlinx/coroutines/MainCoroutineDispatcher;.getImmediate:()Lkotlinx/coroutines/MainCoroutineDispatcher;` @kind virtual;
  #L15d97a.  v0:= temp @kind object;
  #L15d97c.  goto L15d980;
  #L15d97e.  v0:= v1 @kind object;
  #L15d980.  if v2 != v0 then goto L15d98a;
  #L15d984.  v0:= "Dispatchers.Main.immediate" @kind object;
  #L15d988.  return v0 @kind object;
  #L15d98a.  return v1 @kind object;
  catch `java.lang.UnsupportedOperationException` @[L15d974..L15d97c] goto L15d97e;
}
