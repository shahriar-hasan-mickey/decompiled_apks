record `kotlinx.coroutines.c` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
}
global `kotlinx.coroutines.c` `@@kotlinx.coroutines.c.a` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/c;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L152cac.  v0:= new `kotlinx.coroutines.c`;
  #L152cb0.  call `<init>`(v0) @signature `Lkotlinx/coroutines/c;.<init>:()V` @kind direct;
  #L152cb6.  `@@kotlinx.coroutines.c.a` @type ^`kotlinx.coroutines.c` := v0 @kind object;
  #L152cba.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.c` v0 @kind this) @signature `Lkotlinx/coroutines/c;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L152ccc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L152cd2.  return @kind void;
}
procedure `void` `run`(`kotlinx.coroutines.c` v0 @kind this) @signature `Lkotlinx/coroutines/c;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L152ce4.  call `i`() @signature `Lkotlinx/coroutines/CommonPool;.i:()V` @kind static;
  #L152cea.  return @kind void;
}
