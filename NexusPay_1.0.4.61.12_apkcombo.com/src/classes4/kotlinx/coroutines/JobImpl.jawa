record `kotlinx.coroutines.JobImpl` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.JobSupport` @kind class, `kotlinx.coroutines.CompletableJob` @kind interface {
  `boolean` `kotlinx.coroutines.JobImpl.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.JobImpl` v1 @kind this, `kotlinx.coroutines.Job` v2 @kind object) @signature `Lkotlinx/coroutines/JobImpl;.<init>:(Lkotlinx/coroutines/Job;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15a6b8.  v0:= 1I;
  #L15a6ba.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/JobSupport;.<init>:(Z)V` @kind direct;
  #L15a6c0.  call `initParentJob`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.initParentJob:(Lkotlinx/coroutines/Job;)V` @kind virtual;
  #L15a6c6.  call temp:= `D`(v1) @signature `Lkotlinx/coroutines/JobImpl;.D:()Z` @kind direct;
  #L15a6cc.  v2:= temp;
  #L15a6ce.  v1.`kotlinx.coroutines.JobImpl.b` @type ^`boolean` := v2 @kind boolean;
  #L15a6d2.  return @kind void;
}
procedure `boolean` `D`(`kotlinx.coroutines.JobImpl` v4 @kind this) @signature `Lkotlinx/coroutines/JobImpl;.D:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15a644.  call temp:= `getParentHandle$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/JobSupport;.getParentHandle$kotlinx_coroutines_core:()Lkotlinx/coroutines/ChildHandle;` @kind virtual;
  #L15a64a.  v0:= temp @kind object;
  #L15a64c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.ChildHandleNode` @kind boolean;
  #L15a650.  v2:= 0I;
  #L15a652.  if v1 == 0 then goto L15a65c;
  #L15a656.  v0:= (`kotlinx.coroutines.ChildHandleNode`) v0 @kind object;
  #L15a65a.  goto L15a65e;
  #L15a65c.  v0:= v2 @kind object;
  #L15a65e.  v1:= 0I;
  #L15a660.  if v0 != 0 then goto L15a666;
  #L15a664.  return v1;
  #L15a666.  call temp:= `getJob`(v0) @signature `Lkotlinx/coroutines/JobNode;.getJob:()Lkotlinx/coroutines/JobSupport;` @kind virtual;
  #L15a66c.  v0:= temp @kind object;
  #L15a66e.  call temp:= `getHandlesException$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/JobSupport;.getHandlesException$kotlinx_coroutines_core:()Z` @kind virtual;
  #L15a674.  v3:= temp;
  #L15a676.  if v3 == 0 then goto L15a67e;
  #L15a67a.  v0:= 1I;
  #L15a67c.  return v0;
  #L15a67e.  call temp:= `getParentHandle$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/JobSupport;.getParentHandle$kotlinx_coroutines_core:()Lkotlinx/coroutines/ChildHandle;` @kind virtual;
  #L15a684.  v0:= temp @kind object;
  #L15a686.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.ChildHandleNode` @kind boolean;
  #L15a68a.  if v3 == 0 then goto L15a694;
  #L15a68e.  v0:= (`kotlinx.coroutines.ChildHandleNode`) v0 @kind object;
  #L15a692.  goto L15a696;
  #L15a694.  v0:= v2 @kind object;
  #L15a696.  if v0 != 0 then goto L15a69c;
  #L15a69a.  return v1;
  #L15a69c.  call temp:= `getJob`(v0) @signature `Lkotlinx/coroutines/JobNode;.getJob:()Lkotlinx/coroutines/JobSupport;` @kind virtual;
  #L15a6a2.  v0:= temp @kind object;
  #L15a6a4.  goto L15a66e;
}
procedure `boolean` `complete`(`kotlinx.coroutines.JobImpl` v1 @kind this) @signature `Lkotlinx/coroutines/JobImpl;.complete:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15a5cc.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15a5d0.  call temp:= `makeCompleting$kotlinx_coroutines_core`(v1, v0) @signature `Lkotlinx/coroutines/JobSupport;.makeCompleting$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @kind virtual;
  #L15a5d6.  v0:= temp;
  #L15a5d8.  return v0;
}
procedure `boolean` `completeExceptionally`(`kotlinx.coroutines.JobImpl` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/JobImpl;.completeExceptionally:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15a5ec.  v0:= new `kotlinx.coroutines.CompletedExceptionally`;
  #L15a5f0.  v1:= 0I;
  #L15a5f2.  v2:= 2I;
  #L15a5f4.  v3:= 0I;
  #L15a5f6.  call `<init>`(v0, v5, v1, v2, v3) @signature `Lkotlinx/coroutines/CompletedExceptionally;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L15a5fc.  call temp:= `makeCompleting$kotlinx_coroutines_core`(v4, v0) @signature `Lkotlinx/coroutines/JobSupport;.makeCompleting$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @kind virtual;
  #L15a602.  v5:= temp;
  #L15a604.  return v5;
}
procedure `boolean` `getHandlesException$kotlinx_coroutines_core`(`kotlinx.coroutines.JobImpl` v1 @kind this) @signature `Lkotlinx/coroutines/JobImpl;.getHandlesException$kotlinx_coroutines_core:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15a618.  v0:= v1.`kotlinx.coroutines.JobImpl.b` @type ^`boolean` @kind boolean;
  #L15a61c.  return v0;
}
procedure `boolean` `getOnCancelComplete$kotlinx_coroutines_core`(`kotlinx.coroutines.JobImpl` v1 @kind this) @signature `Lkotlinx/coroutines/JobImpl;.getOnCancelComplete$kotlinx_coroutines_core:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15a630.  v0:= 1I;
  #L15a632.  return v0;
}
