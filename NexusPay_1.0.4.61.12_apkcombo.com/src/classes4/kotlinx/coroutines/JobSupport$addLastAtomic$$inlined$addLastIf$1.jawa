record `kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp` @kind class {
  `kotlinx.coroutines.JobSupport` `kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1.b` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1` v0 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v1 @kind object, `kotlinx.coroutines.JobSupport` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport$addLastAtomic$$inlined$addLastIf$1;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/JobSupport;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15b594.  v0.`kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1.b` @type ^`kotlinx.coroutines.JobSupport` := v2 @kind object;
  #L15b598.  v0.`kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1.c` @type ^`java.lang.Object` := v3 @kind object;
  #L15b59c.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$CondAddOp;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @kind direct;
  #L15b5a2.  return @kind void;
}
procedure `java.lang.Object` `prepare`(`kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport$addLastAtomic$$inlined$addLastIf$1;.prepare:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L15b538.  v1:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v1 @kind object;
  #L15b53c.  call temp:= `prepare`(v0, v1) @signature `Lkotlinx/coroutines/JobSupport$addLastAtomic$$inlined$addLastIf$1;.prepare:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Ljava/lang/Object;` @kind virtual;
  #L15b542.  v1:= temp @kind object;
  #L15b544.  return v1 @kind object;
}
procedure `java.lang.Object` `prepare`(`kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1` v1 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v2 @kind object) @signature `Lkotlinx/coroutines/JobSupport$addLastAtomic$$inlined$addLastIf$1;.prepare:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b558.  v2:= v1.`kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1.b` @type ^`kotlinx.coroutines.JobSupport` @kind object;
  #L15b55c.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15b562.  v2:= temp @kind object;
  #L15b564.  v0:= v1.`kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1.c` @type ^`java.lang.Object` @kind object;
  #L15b568.  if v2 != v0 then goto L15b570;
  #L15b56c.  v2:= 1I;
  #L15b56e.  goto L15b572;
  #L15b570.  v2:= 0I;
  #L15b572.  if v2 == 0 then goto L15b57a;
  #L15b576.  v2:= 0I;
  #L15b578.  goto L15b582;
  #L15b57a.  call temp:= `getCONDITION_FALSE`() @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListKt;.getCONDITION_FALSE:()Ljava/lang/Object;` @kind static;
  #L15b580.  v2:= temp @kind object;
  #L15b582.  return v2 @kind object;
}
