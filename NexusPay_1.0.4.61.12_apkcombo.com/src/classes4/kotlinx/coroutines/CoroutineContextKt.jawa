record `kotlinx.coroutines.CoroutineContextKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@kotlinx.coroutines.CoroutineContextKt.COROUTINES_SCHEDULER_PROPERTY_NAME` @AccessFlag PUBLIC_STATIC_FINAL;
global `boolean` `@@kotlinx.coroutines.CoroutineContextKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CoroutineContextKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1562f0.  v0:= "kotlinx.coroutines.scheduler" @kind object;
  #L1562f4.  call temp:= `systemProp`(v0) @signature `Lkotlinx/coroutines/internal/SystemPropsKt;.systemProp:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1562fa.  v0:= temp @kind object;
  #L1562fc.  if v0 == 0 then goto L156396;
  #L156300.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L156306.  v1:= temp;
  #L156308.  if v1 == 0 then goto L156344;
  #L15630c.  v2:= 3551I;
  #L156310.  if v1 == v2 then goto L156332;
  #L156314.  v2:= 109935I;
  #L15631a.  if v1 != v2 then goto L156356;
  #L15631e.  v1:= "off" @kind object;
  #L156322.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L156328.  v1:= temp;
  #L15632a.  if v1 == 0 then goto L156356;
  #L15632e.  v0:= 0I;
  #L156330.  goto L156398;
  #L156332.  v1:= "on" @kind object;
  #L156336.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15633c.  v1:= temp;
  #L15633e.  if v1 == 0 then goto L156356;
  #L156342.  goto L156396;
  #L156344.  v1:= "" @kind object;
  #L156348.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L15634e.  v1:= temp;
  #L156350.  if v1 == 0 then goto L156356;
  #L156354.  goto L156396;
  #L156356.  v1:= new `java.lang.StringBuilder`;
  #L15635a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L156360.  v2:= "System property 'kotlinx.coroutines.scheduler' has unrecognized value '" @kind object;
  #L156364.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15636a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L156370.  v0:= 39I;
  #L156374.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15637a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L156380.  v0:= temp @kind object;
  #L156382.  v1:= new `java.lang.IllegalStateException`;
  #L156386.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15638c.  v0:= temp @kind object;
  #L15638e.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L156394.  throw v1;
  #L156396.  v0:= 1I;
  #L156398.  `@@kotlinx.coroutines.CoroutineContextKt.a` @type ^`boolean` := v0 @kind boolean;
  #L15639c.  return @kind void;
}
procedure `kotlinx.coroutines.CoroutineDispatcher` `createDefaultDispatcher`() @signature `Lkotlinx/coroutines/CoroutineContextKt;.createDefaultDispatcher:()Lkotlinx/coroutines/CoroutineDispatcher;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L156240.  v0:= `@@kotlinx.coroutines.CoroutineContextKt.a` @type ^`boolean` @kind boolean;
  #L156244.  if v0 == 0 then goto L15624e;
  #L156248.  v0:= `@@kotlinx.coroutines.scheduling.DefaultScheduler.INSTANCE` @type ^`kotlinx.coroutines.scheduling.DefaultScheduler` @kind object;
  #L15624c.  goto L156252;
  #L15624e.  v0:= `@@kotlinx.coroutines.CommonPool.INSTANCE` @type ^`kotlinx.coroutines.CommonPool` @kind object;
  #L156252.  return v0 @kind object;
}
procedure `java.lang.String` `getCoroutineName`(`kotlin.coroutines.CoroutineContext` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineContextKt;.getCoroutineName:(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L156124.  call temp:= `getDEBUG`() @signature `Lkotlinx/coroutines/DebugKt;.getDEBUG:()Z` @kind static;
  #L15612a.  v0:= temp;
  #L15612c.  v1:= 0I;
  #L15612e.  if v0 != 0 then goto L156134;
  #L156132.  return v1 @kind object;
  #L156134.  v0:= `@@kotlinx.coroutines.CoroutineId.Key` @type ^`kotlinx.coroutines.CoroutineId$Key` @kind object;
  #L156138.  call temp:= `get`(v2, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L15613e.  v0:= temp @kind object;
  #L156140.  v0:= (`kotlinx.coroutines.CoroutineId`) v0 @kind object;
  #L156144.  if v0 != 0 then goto L15614a;
  #L156148.  return v1 @kind object;
  #L15614a.  v1:= `@@kotlinx.coroutines.CoroutineName.Key` @type ^`kotlinx.coroutines.CoroutineName$Key` @kind object;
  #L15614e.  call temp:= `get`(v2, v1) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L156154.  v2:= temp @kind object;
  #L156156.  v2:= (`kotlinx.coroutines.CoroutineName`) v2 @kind object;
  #L15615a.  v1:= "coroutine" @kind object;
  #L15615e.  if v2 != 0 then goto L156164;
  #L156162.  goto L156174;
  #L156164.  call temp:= `getName`(v2) @signature `Lkotlinx/coroutines/CoroutineName;.getName:()Ljava/lang/String;` @kind virtual;
  #L15616a.  v2:= temp @kind object;
  #L15616c.  if v2 != 0 then goto L156172;
  #L156170.  goto L156174;
  #L156172.  v1:= v2 @kind object;
  #L156174.  v2:= new `java.lang.StringBuilder`;
  #L156178.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15617e.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L156184.  v1:= 35I;
  #L156188.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15618e.  call temp:= `getId`(v0) @signature `Lkotlinx/coroutines/CoroutineId;.getId:()J` @kind virtual;
  #L156194.  v0:= temp @kind wide;
  #L156196.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L15619c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1561a2.  v2:= temp @kind object;
  #L1561a4.  return v2 @kind object;
}
procedure `boolean` `getUseCoroutinesScheduler`() @signature `Lkotlinx/coroutines/CoroutineContextKt;.getUseCoroutinesScheduler:()Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L156020.  v0:= `@@kotlinx.coroutines.CoroutineContextKt.a` @type ^`boolean` @kind boolean;
  #L156024.  return v0;
}
procedure `kotlin.coroutines.CoroutineContext` `newCoroutineContext`(`kotlinx.coroutines.CoroutineScope` v2 @kind object, `kotlin.coroutines.CoroutineContext` v3 @kind object) @signature `Lkotlinx/coroutines/CoroutineContextKt;.newCoroutineContext:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1561b8.  call temp:= `getCoroutineContext`(v2) @signature `Lkotlinx/coroutines/CoroutineScope;.getCoroutineContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L1561be.  v2:= temp @kind object;
  #L1561c0.  call temp:= `plus`(v2, v3) @signature `Lkotlin/coroutines/CoroutineContext;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L1561c6.  v2:= temp @kind object;
  #L1561c8.  call temp:= `getDEBUG`() @signature `Lkotlinx/coroutines/DebugKt;.getDEBUG:()Z` @kind static;
  #L1561ce.  v3:= temp;
  #L1561d0.  if v3 == 0 then goto L1561f8;
  #L1561d4.  v3:= new `kotlinx.coroutines.CoroutineId`;
  #L1561d8.  call temp:= `getCOROUTINE_ID`() @signature `Lkotlinx/coroutines/DebugKt;.getCOROUTINE_ID:()Ljava/util/concurrent/atomic/AtomicLong;` @kind static;
  #L1561de.  v0:= temp @kind object;
  #L1561e0.  call temp:= `incrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.incrementAndGet:()J` @kind virtual;
  #L1561e6.  v0:= temp @kind wide;
  #L1561e8.  call `<init>`(v3, v0) @signature `Lkotlinx/coroutines/CoroutineId;.<init>:(J)V` @kind direct;
  #L1561ee.  call temp:= `plus`(v2, v3) @signature `Lkotlin/coroutines/CoroutineContext;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L1561f4.  v3:= temp @kind object;
  #L1561f6.  goto L1561fa;
  #L1561f8.  v3:= v2 @kind object;
  #L1561fa.  v0:= `@@kotlinx.coroutines.Dispatchers.INSTANCE` @type ^`kotlinx.coroutines.Dispatchers` @kind object;
  #L1561fe.  call temp:= `getDefault`() @signature `Lkotlinx/coroutines/Dispatchers;.getDefault:()Lkotlinx/coroutines/CoroutineDispatcher;` @kind static;
  #L156204.  v0:= temp @kind object;
  #L156206.  if v2 == v0 then goto L15622e;
  #L15620a.  v0:= `@@kotlin.coroutines.ContinuationInterceptor.Key` @type ^`kotlin.coroutines.ContinuationInterceptor$Key` @kind object;
  #L15620e.  call temp:= `get`(v2, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L156214.  v2:= temp @kind object;
  #L156216.  if v2 != 0 then goto L15622e;
  #L15621a.  v2:= `@@kotlinx.coroutines.Dispatchers.INSTANCE` @type ^`kotlinx.coroutines.Dispatchers` @kind object;
  #L15621e.  call temp:= `getDefault`() @signature `Lkotlinx/coroutines/Dispatchers;.getDefault:()Lkotlinx/coroutines/CoroutineDispatcher;` @kind static;
  #L156224.  v2:= temp @kind object;
  #L156226.  call temp:= `plus`(v3, v2) @signature `Lkotlin/coroutines/CoroutineContext;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L15622c.  v3:= temp @kind object;
  #L15622e.  return v3 @kind object;
}
procedure `kotlinx.coroutines.UndispatchedCoroutine` `undispatchedCompletion`(`kotlin.coroutines.jvm.internal.CoroutineStackFrame` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineContextKt;.undispatchedCompletion:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Lkotlinx/coroutines/UndispatchedCoroutine;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L156264.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.DispatchedCoroutine` @kind boolean;
  #L156268.  v1:= 0I;
  #L15626a.  if v0 == 0 then goto L156270;
  #L15626e.  return v1 @kind object;
  #L156270.  call temp:= `getCallerFrame`(v2) @signature `Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind interface;
  #L156276.  v2:= temp @kind object;
  #L156278.  if v2 != 0 then goto L15627e;
  #L15627c.  return v1 @kind object;
  #L15627e.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.UndispatchedCoroutine` @kind boolean;
  #L156282.  if v0 == 0 then goto L156264;
  #L156286.  v2:= (`kotlinx.coroutines.UndispatchedCoroutine`) v2 @kind object;
  #L15628a.  return v2 @kind object;
}
procedure `kotlinx.coroutines.UndispatchedCoroutine` `updateUndispatchedCompletion`(`kotlin.coroutines.Continuation` v2 @kind object, `kotlin.coroutines.CoroutineContext` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/CoroutineContextKt;.updateUndispatchedCompletion:(Lkotlin/coroutines/Continuation;Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Lkotlinx/coroutines/UndispatchedCoroutine;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L15629c.  v0:= instanceof @variable v2 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L1562a0.  v1:= 0I;
  #L1562a2.  if v0 != 0 then goto L1562a8;
  #L1562a6.  return v1 @kind object;
  #L1562a8.  v0:= `@@kotlinx.coroutines.l0.a` @type ^`kotlinx.coroutines.l0` @kind object;
  #L1562ac.  call temp:= `get`(v3, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L1562b2.  v0:= temp @kind object;
  #L1562b4.  if v0 == 0 then goto L1562bc;
  #L1562b8.  v0:= 1I;
  #L1562ba.  goto L1562be;
  #L1562bc.  v0:= 0I;
  #L1562be.  if v0 != 0 then goto L1562c4;
  #L1562c2.  return v1 @kind object;
  #L1562c4.  v2:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v2 @kind object;
  #L1562c8.  call temp:= `undispatchedCompletion`(v2) @signature `Lkotlinx/coroutines/CoroutineContextKt;.undispatchedCompletion:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Lkotlinx/coroutines/UndispatchedCoroutine;` @kind static;
  #L1562ce.  v2:= temp @kind object;
  #L1562d0.  if v2 != 0 then goto L1562d6;
  #L1562d4.  goto L1562dc;
  #L1562d6.  call `saveThreadContext`(v2, v3, v4) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.saveThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind virtual;
  #L1562dc.  return v2 @kind object;
}
procedure `java.lang.Object` `withContinuationContext`(`kotlin.coroutines.Continuation` v2 @kind object, `java.lang.Object` v3 @kind object, `kotlin.jvm.functions.Function0` v4 @kind object) @signature `Lkotlinx/coroutines/CoroutineContextKt;.withContinuationContext:(Lkotlin/coroutines/Continuation;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L156038.  call temp:= `getContext`(v2) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L15603e.  v0:= temp @kind object;
  #L156040.  call temp:= `updateThreadContext`(v0, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L156046.  v3:= temp @kind object;
  #L156048.  v1:= `@@kotlinx.coroutines.internal.ThreadContextKt.NO_THREAD_ELEMENTS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L15604c.  if v3 == v1 then goto L15605a;
  #L156050.  call temp:= `updateUndispatchedCompletion`(v2, v0, v3) @signature `Lkotlinx/coroutines/CoroutineContextKt;.updateUndispatchedCompletion:(Lkotlin/coroutines/Continuation;Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Lkotlinx/coroutines/UndispatchedCoroutine;` @kind static;
  #L156056.  v2:= temp @kind object;
  #L156058.  goto L15605c;
  #L15605a.  v2:= 0I;
  #L15605c.  v1:= 1I;
  #L15605e.  call temp:= `invoke`(v4) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L156064.  v4:= temp @kind object;
  #L156066.  call `finallyStart`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L15606c.  if v2 == 0 then goto L15607c;
  #L156070.  call temp:= `clearThreadContext`(v2) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L156076.  v2:= temp;
  #L156078.  if v2 == 0 then goto L156082;
  #L15607c.  call `restoreThreadContext`(v0, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L156082.  call `finallyEnd`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L156088.  return v4 @kind object;
  #L15608a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15608c.  call `finallyStart`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L156092.  if v2 == 0 then goto L1560a2;
  #L156096.  call temp:= `clearThreadContext`(v2) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L15609c.  v2:= temp;
  #L15609e.  if v2 == 0 then goto L1560a8;
  #L1560a2.  call `restoreThreadContext`(v0, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L1560a8.  call `finallyEnd`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L1560ae.  throw v4;
  catch `java.lang.Throwable` @[L15605e..L156066] goto L15608a;
}
procedure `java.lang.Object` `withCoroutineContext`(`kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function0` v3 @kind object) @signature `Lkotlinx/coroutines/CoroutineContextKt;.withCoroutineContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1560cc.  call temp:= `updateThreadContext`(v1, v2) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1560d2.  v2:= temp @kind object;
  #L1560d4.  v0:= 1I;
  #L1560d6.  call temp:= `invoke`(v3) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L1560dc.  v3:= temp @kind object;
  #L1560de.  call `finallyStart`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L1560e4.  call `restoreThreadContext`(v1, v2) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L1560ea.  call `finallyEnd`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L1560f0.  return v3 @kind object;
  #L1560f2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1560f4.  call `finallyStart`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L1560fa.  call `restoreThreadContext`(v1, v2) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L156100.  call `finallyEnd`(v0) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L156106.  throw v3;
  catch `java.lang.Throwable` @[L1560d6..L1560de] goto L1560f2;
}
