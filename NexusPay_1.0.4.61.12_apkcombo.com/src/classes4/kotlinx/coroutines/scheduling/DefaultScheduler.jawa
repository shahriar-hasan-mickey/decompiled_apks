record `kotlinx.coroutines.scheduling.DefaultScheduler` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` @kind class {
}
global `kotlinx.coroutines.scheduling.DefaultScheduler` `@@kotlinx.coroutines.scheduling.DefaultScheduler.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `kotlinx.coroutines.CoroutineDispatcher` `@@kotlinx.coroutines.scheduling.DefaultScheduler.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/scheduling/DefaultScheduler;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L18cc5c.  v0:= new `kotlinx.coroutines.scheduling.DefaultScheduler`;
  #L18cc60.  call `<init>`(v0) @signature `Lkotlinx/coroutines/scheduling/DefaultScheduler;.<init>:()V` @kind direct;
  #L18cc66.  `@@kotlinx.coroutines.scheduling.DefaultScheduler.INSTANCE` @type ^`kotlinx.coroutines.scheduling.DefaultScheduler` := v0 @kind object;
  #L18cc6a.  v0:= new `kotlinx.coroutines.scheduling.a`;
  #L18cc6e.  v1:= `@@kotlinx.coroutines.scheduling.DefaultScheduler.INSTANCE` @type ^`kotlinx.coroutines.scheduling.DefaultScheduler` @kind object;
  #L18cc72.  call temp:= `getAVAILABLE_PROCESSORS`() @signature `Lkotlinx/coroutines/internal/SystemPropsKt;.getAVAILABLE_PROCESSORS:()I` @kind static;
  #L18cc78.  v2:= temp;
  #L18cc7a.  v3:= 64I;
  #L18cc7e.  call temp:= `coerceAtLeast`(v3, v2) @signature `Lkotlin/ranges/RangesKt;.coerceAtLeast:(II)I` @kind static;
  #L18cc84.  v5:= temp;
  #L18cc86.  v4:= "kotlinx.coroutines.io.parallelism" @kind object;
  #L18cc8a.  v6:= 0I;
  #L18cc8c.  v7:= 0I;
  #L18cc8e.  v8:= 12I;
  #L18cc92.  v9:= 0I;
  #L18cc94.  call temp:= `systemProp$default`(v4, v5, v6, v7, v8, v9) @signature `Lkotlinx/coroutines/internal/SystemPropsKt;.systemProp$default:(Ljava/lang/String;IIIILjava/lang/Object;)I` @kind static;
  #L18cc9a.  v2:= temp;
  #L18cc9c.  v3:= "Dispatchers.IO" @kind object;
  #L18cca0.  v4:= 1I;
  #L18cca2.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lkotlinx/coroutines/scheduling/a;.<init>:(Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;ILjava/lang/String;I)V` @kind direct;
  #L18cca8.  `@@kotlinx.coroutines.scheduling.DefaultScheduler.f` @type ^`kotlinx.coroutines.CoroutineDispatcher` := v0 @kind object;
  #L18ccac.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.DefaultScheduler` v6 @kind this) @signature `Lkotlinx/coroutines/scheduling/DefaultScheduler;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L18ccc0.  v1:= 0I;
  #L18ccc2.  v2:= 0I;
  #L18ccc4.  v3:= 0I;
  #L18ccc6.  v4:= 7I;
  #L18ccc8.  v5:= 0I;
  #L18ccca.  v0:= v6 @kind object;
  #L18cccc.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L18ccd2.  return @kind void;
}
procedure `void` `close`(`kotlinx.coroutines.scheduling.DefaultScheduler` v2 @kind this) @signature `Lkotlinx/coroutines/scheduling/DefaultScheduler;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18cce4.  v0:= new `java.lang.UnsupportedOperationException`;
  #L18cce8.  v1:= "Dispatchers.Default cannot be closed" @kind object;
  #L18ccec.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L18ccf2.  throw v0;
}
procedure `kotlinx.coroutines.CoroutineDispatcher` `getIO`(`kotlinx.coroutines.scheduling.DefaultScheduler` v1 @kind this) @signature `Lkotlinx/coroutines/scheduling/DefaultScheduler;.getIO:()Lkotlinx/coroutines/CoroutineDispatcher;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L18cc44.  v0:= `@@kotlinx.coroutines.scheduling.DefaultScheduler.f` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L18cc48.  return v0 @kind object;
}
procedure `java.lang.String` `toDebugString`(`kotlinx.coroutines.scheduling.DefaultScheduler` v1 @kind this) @signature `Lkotlinx/coroutines/scheduling/DefaultScheduler;.toDebugString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L18cc10.  call temp:= `toString`(v1) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.toString:()Ljava/lang/String;` @kind super;
  #L18cc16.  v0:= temp @kind object;
  #L18cc18.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.scheduling.DefaultScheduler` v1 @kind this) @signature `Lkotlinx/coroutines/scheduling/DefaultScheduler;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18cc2c.  v0:= "Dispatchers.Default" @kind object;
  #L18cc30.  return v0 @kind object;
}
