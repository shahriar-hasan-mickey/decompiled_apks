record `kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.ExecutorCoroutineDispatcher` @kind class {
  `int` `kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.a` @AccessFlag PRIVATE_FINAL;
  `int` `kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.b` @AccessFlag PRIVATE_FINAL;
  `long` `kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.d` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.scheduling.CoroutineScheduler` `kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v8 @kind this, `int` v9 , `int` v10 ) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(II)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L18cee4.  v3:= `@@kotlinx.coroutines.scheduling.TasksKt.IDLE_WORKER_KEEP_ALIVE_NS` @type ^`long` @kind wide;
  #L18cee8.  v5:= 0I;
  #L18ceea.  v6:= 8I;
  #L18ceee.  v7:= 0I;
  #L18cef0.  v0:= v8 @kind object;
  #L18cef2.  v1:= v9;
  #L18cef4.  v2:= v10;
  #L18cef6.  call `<init>`(v0, v1, v2, v3, v5, v6, v7) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IIJLjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L18cefc.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `kotlin.jvm.internal.DefaultConstructorMarker` v4 @kind object) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IIILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L18cf10.  v4:= v3 ^& 1;
  #L18cf14.  if v4 == 0 then goto L18cf1c;
  #L18cf18.  v1:= `@@kotlinx.coroutines.scheduling.TasksKt.CORE_POOL_SIZE` @type ^`int`;
  #L18cf1c.  v3:= v3 ^& 2;
  #L18cf20.  if v3 == 0 then goto L18cf28;
  #L18cf24.  v2:= `@@kotlinx.coroutines.scheduling.TasksKt.MAX_POOL_SIZE` @type ^`int`;
  #L18cf28.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(II)V` @kind direct;
  #L18cf2e.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v0 @kind this, `int` v1 , `int` v2 , `long` v3 , `java.lang.String` v5 @kind object) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IIJLjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L18cfa0.  call `<init>`(v0) @signature `Lkotlinx/coroutines/ExecutorCoroutineDispatcher;.<init>:()V` @kind direct;
  #L18cfa6.  v0.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.a` @type ^`int` := v1;
  #L18cfaa.  v0.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.b` @type ^`int` := v2;
  #L18cfae.  v0.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.c` @type ^`long` := v3 @kind wide;
  #L18cfb2.  v0.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.d` @type ^`java.lang.String` := v5 @kind object;
  #L18cfb6.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.a:()Lkotlinx/coroutines/scheduling/CoroutineScheduler;` @kind direct;
  #L18cfbc.  v1:= temp @kind object;
  #L18cfbe.  v0.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` := v1 @kind object;
  #L18cfc2.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v6 @kind this, `int` v7 , `int` v8 , `long` v9 , `java.lang.String` v11 @kind object, `int` v12 , `kotlin.jvm.internal.DefaultConstructorMarker` v13 @kind object) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IIJLjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L18cfd4.  v12:= v12 ^& 8;
  #L18cfd8.  if v12 == 0 then goto L18cfe0;
  #L18cfdc.  v11:= "CoroutineScheduler" @kind object;
  #L18cfe0.  v5:= v11 @kind object;
  #L18cfe2.  v0:= v6 @kind object;
  #L18cfe4.  v1:= v7;
  #L18cfe6.  v2:= v8;
  #L18cfe8.  v3:= v9 @kind wide;
  #L18cfea.  call `<init>`(v0, v1, v2, v3, v5) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IIJLjava/lang/String;)V` @kind direct;
  #L18cff0.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v6 @kind this, `int` v7 , `int` v8 , `java.lang.String` v9 @kind object) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L18cf40.  v3:= `@@kotlinx.coroutines.scheduling.TasksKt.IDLE_WORKER_KEEP_ALIVE_NS` @type ^`long` @kind wide;
  #L18cf44.  v0:= v6 @kind object;
  #L18cf46.  v1:= v7;
  #L18cf48.  v2:= v8;
  #L18cf4a.  v5:= v9 @kind object;
  #L18cf4c.  call `<init>`(v0, v1, v2, v3, v5) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IIJLjava/lang/String;)V` @kind direct;
  #L18cf52.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v0 @kind this, `int` v1 , `int` v2 , `java.lang.String` v3 @kind object, `int` v4 , `kotlin.jvm.internal.DefaultConstructorMarker` v5 @kind object) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L18cf64.  v5:= v4 ^& 1;
  #L18cf68.  if v5 == 0 then goto L18cf70;
  #L18cf6c.  v1:= `@@kotlinx.coroutines.scheduling.TasksKt.CORE_POOL_SIZE` @type ^`int`;
  #L18cf70.  v5:= v4 ^& 2;
  #L18cf74.  if v5 == 0 then goto L18cf7c;
  #L18cf78.  v2:= `@@kotlinx.coroutines.scheduling.TasksKt.MAX_POOL_SIZE` @type ^`int`;
  #L18cf7c.  v4:= v4 ^& 4;
  #L18cf80.  if v4 == 0 then goto L18cf88;
  #L18cf84.  v3:= "DefaultDispatcher" @kind object;
  #L18cf88.  call `<init>`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.<init>:(IILjava/lang/String;)V` @kind direct;
  #L18cf8e.  return @kind void;
}
procedure `kotlinx.coroutines.scheduling.CoroutineScheduler` `a`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v7 @kind this) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.a:()Lkotlinx/coroutines/scheduling/CoroutineScheduler;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L18ceb4.  v6:= new `kotlinx.coroutines.scheduling.CoroutineScheduler`;
  #L18ceb8.  v1:= v7.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.a` @type ^`int`;
  #L18cebc.  v2:= v7.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.b` @type ^`int`;
  #L18cec0.  v3:= v7.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.c` @type ^`long` @kind wide;
  #L18cec4.  v5:= v7.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.d` @type ^`java.lang.String` @kind object;
  #L18cec8.  v0:= v6 @kind object;
  #L18ceca.  call `<init>`(v0, v1, v2, v3, v5) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.<init>:(IIJLjava/lang/String;)V` @kind direct;
  #L18ced0.  return v6 @kind object;
}
procedure `kotlinx.coroutines.CoroutineDispatcher` `blocking$default`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v0 @kind object, `int` v1 , `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.blocking$default:(Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;IILjava/lang/Object;)Lkotlinx/coroutines/CoroutineDispatcher;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L18cd6c.  if v3 != 0 then goto L18cd86;
  #L18cd70.  v2:= v2 ^& 1;
  #L18cd74.  if v2 == 0 then goto L18cd7c;
  #L18cd78.  v1:= `@@kotlinx.coroutines.scheduling.TasksKt.BLOCKING_DEFAULT_PARALLELISM` @type ^`int`;
  #L18cd7c.  call temp:= `blocking`(v0, v1) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.blocking:(I)Lkotlinx/coroutines/CoroutineDispatcher;` @kind virtual;
  #L18cd82.  v0:= temp @kind object;
  #L18cd84.  return v0 @kind object;
  #L18cd86.  v0:= new `java.lang.UnsupportedOperationException`;
  #L18cd8a.  v1:= "Super calls with default arguments not supported in this target, function: blocking" @kind object;
  #L18cd8e.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L18cd94.  throw v0;
}
procedure `kotlinx.coroutines.CoroutineDispatcher` `blocking`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v3 @kind this, `int` v4 ) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.blocking:(I)Lkotlinx/coroutines/CoroutineDispatcher;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L18cda8.  v0:= 1I;
  #L18cdaa.  if v4 <= 0 then goto L18cdb2;
  #L18cdae.  v1:= 1I;
  #L18cdb0.  goto L18cdb4;
  #L18cdb2.  v1:= 0I;
  #L18cdb4.  if v1 == 0 then goto L18cdc6;
  #L18cdb8.  v1:= new `kotlinx.coroutines.scheduling.a`;
  #L18cdbc.  v2:= 0I;
  #L18cdbe.  call `<init>`(v1, v3, v4, v2, v0) @signature `Lkotlinx/coroutines/scheduling/a;.<init>:(Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;ILjava/lang/String;I)V` @kind direct;
  #L18cdc4.  return v1 @kind object;
  #L18cdc6.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L18cdcc.  v4:= temp @kind object;
  #L18cdce.  v0:= "Expected positive parallelism level, but have " @kind object;
  #L18cdd2.  call temp:= `stringPlus`(v0, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L18cdd8.  v4:= temp @kind object;
  #L18cdda.  v0:= new `java.lang.IllegalArgumentException`;
  #L18cdde.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L18cde4.  v4:= temp @kind object;
  #L18cde6.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L18cdec.  throw v0;
}
procedure `void` `close`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v1 @kind this) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18d004.  v0:= v1.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L18d008.  call `close`(v0) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.close:()V` @kind virtual;
  #L18d00e.  return @kind void;
}
procedure `void` `dispatch`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v6 @kind this, `kotlin.coroutines.CoroutineContext` v7 @kind object, `java.lang.Runnable` v8 @kind object) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.dispatch:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L18d020.  v0:= v6.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L18d024.  v2:= 0I;
  #L18d026.  v3:= 0I;
  #L18d028.  v4:= 6I;
  #L18d02a.  v5:= 0I;
  #L18d02c.  v1:= v8 @kind object;
  #L18d02e.  call `dispatch$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.dispatch$default:(Lkotlinx/coroutines/scheduling/CoroutineScheduler;Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/TaskContext;ZILjava/lang/Object;)V` @kind static;
  #L18d034.  goto L18d040;
  #L18d036.  v0:= `@@kotlinx.coroutines.DefaultExecutor.INSTANCE` @type ^`kotlinx.coroutines.DefaultExecutor` @kind object;
  #L18d03a.  call `dispatch`(v0, v7, v8) @signature `Lkotlinx/coroutines/EventLoopImplBase;.dispatch:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L18d040.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L18d020..L18d034] goto L18d036;
}
procedure `void` `dispatchWithContext$kotlinx_coroutines_core`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v1 @kind this, `java.lang.Runnable` v2 @kind object, `kotlinx.coroutines.scheduling.TaskContext` v3 @kind object, `boolean` v4 ) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.dispatchWithContext$kotlinx_coroutines_core:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/TaskContext;Z)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L18d064.  v0:= v1.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L18d068.  call `dispatch`(v0, v2, v3, v4) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.dispatch:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/TaskContext;Z)V` @kind virtual;
  #L18d06e.  goto L18d086;
  #L18d070.  v4:= `@@kotlinx.coroutines.DefaultExecutor.INSTANCE` @type ^`kotlinx.coroutines.DefaultExecutor` @kind object;
  #L18d074.  v0:= v1.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L18d078.  call temp:= `createTask`(v0, v2, v3) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.createTask:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/TaskContext;)Lkotlinx/coroutines/scheduling/Task;` @kind virtual;
  #L18d07e.  v2:= temp @kind object;
  #L18d080.  call `enqueue`(v4, v2) @signature `Lkotlinx/coroutines/EventLoopImplBase;.enqueue:(Ljava/lang/Runnable;)V` @kind virtual;
  #L18d086.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L18d064..L18d06e] goto L18d070;
}
procedure `void` `dispatchYield`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v6 @kind this, `kotlin.coroutines.CoroutineContext` v7 @kind object, `java.lang.Runnable` v8 @kind object) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.dispatchYield:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L18d0a8.  v0:= v6.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L18d0ac.  v2:= 0I;
  #L18d0ae.  v3:= 1I;
  #L18d0b0.  v4:= 2I;
  #L18d0b2.  v5:= 0I;
  #L18d0b4.  v1:= v8 @kind object;
  #L18d0b6.  call `dispatch$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.dispatch$default:(Lkotlinx/coroutines/scheduling/CoroutineScheduler;Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/TaskContext;ZILjava/lang/Object;)V` @kind static;
  #L18d0bc.  goto L18d0c8;
  #L18d0be.  v0:= `@@kotlinx.coroutines.DefaultExecutor.INSTANCE` @type ^`kotlinx.coroutines.DefaultExecutor` @kind object;
  #L18d0c2.  call `dispatchYield`(v0, v7, v8) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.dispatchYield:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L18d0c8.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L18d0a8..L18d0bc] goto L18d0be;
}
procedure `java.util.concurrent.Executor` `getExecutor`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v1 @kind this) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.getExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18cd54.  v0:= v1.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L18cd58.  return v0 @kind object;
}
procedure `kotlinx.coroutines.CoroutineDispatcher` `limited`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v3 @kind this, `int` v4 ) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.limited:(I)Lkotlinx/coroutines/CoroutineDispatcher;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L18ce00.  v0:= 1I;
  #L18ce02.  v1:= 0I;
  #L18ce04.  if v4 <= 0 then goto L18ce0c;
  #L18ce08.  v2:= 1I;
  #L18ce0a.  goto L18ce0e;
  #L18ce0c.  v2:= 0I;
  #L18ce0e.  if v2 == 0 then goto L18ce7a;
  #L18ce12.  v2:= v3.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.a` @type ^`int`;
  #L18ce16.  if v4 > v2 then goto L18ce1c;
  #L18ce1a.  goto L18ce1e;
  #L18ce1c.  v0:= 0I;
  #L18ce1e.  if v0 == 0 then goto L18ce30;
  #L18ce22.  v0:= new `kotlinx.coroutines.scheduling.a`;
  #L18ce26.  v2:= 0I;
  #L18ce28.  call `<init>`(v0, v3, v4, v2, v1) @signature `Lkotlinx/coroutines/scheduling/a;.<init>:(Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;ILjava/lang/String;I)V` @kind direct;
  #L18ce2e.  return v0 @kind object;
  #L18ce30.  v0:= new `java.lang.StringBuilder`;
  #L18ce34.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L18ce3a.  v1:= "Expected parallelism level lesser than core pool size (" @kind object;
  #L18ce3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18ce44.  v1:= v3.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.a` @type ^`int`;
  #L18ce48.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L18ce4e.  v1:= "), but have " @kind object;
  #L18ce52.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18ce58.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L18ce5e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L18ce64.  v4:= temp @kind object;
  #L18ce66.  v0:= new `java.lang.IllegalArgumentException`;
  #L18ce6a.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L18ce70.  v4:= temp @kind object;
  #L18ce72.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L18ce78.  throw v0;
  #L18ce7a.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L18ce80.  v4:= temp @kind object;
  #L18ce82.  v0:= "Expected positive parallelism level, but have " @kind object;
  #L18ce86.  call temp:= `stringPlus`(v0, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L18ce8c.  v4:= temp @kind object;
  #L18ce8e.  v0:= new `java.lang.IllegalArgumentException`;
  #L18ce92.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L18ce98.  v4:= temp @kind object;
  #L18ce9a.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L18cea0.  throw v0;
}
procedure `void` `restore$kotlinx_coroutines_core`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v0 @kind this) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.restore$kotlinx_coroutines_core:()V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L18d0ec.  call `usePrivateScheduler$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.usePrivateScheduler$kotlinx_coroutines_core:()V` @kind virtual;
  #L18d0f2.  return @kind void;
}
procedure `void` `shutdown$kotlinx_coroutines_core`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v1 @kind this, `long` v2 ) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.shutdown$kotlinx_coroutines_core:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L18d104.  @monitorenter v1
  #L18d106.  v0:= v1.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L18d10a.  call `shutdown`(v0, v2) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.shutdown:(J)V` @kind virtual;
  #L18d110.  @monitorexit v1
  #L18d112.  return @kind void;
  #L18d114.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L18d116.  @monitorexit v1
  #L18d118.  throw v2;
  catch `java.lang.Throwable` @[L18d106..L18d110] goto L18d114;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v2 @kind this) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18cd04.  v0:= new `java.lang.StringBuilder`;
  #L18cd08.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L18cd0e.  call temp:= `toString`(v2) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.toString:()Ljava/lang/String;` @kind super;
  #L18cd14.  v1:= temp @kind object;
  #L18cd16.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18cd1c.  v1:= "[scheduler = " @kind object;
  #L18cd20.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18cd26.  v1:= v2.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L18cd2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18cd30.  v1:= 93I;
  #L18cd34.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L18cd3a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L18cd40.  v0:= temp @kind object;
  #L18cd42.  return v0 @kind object;
}
procedure `void` `usePrivateScheduler$kotlinx_coroutines_core`(`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher` v3 @kind this) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.usePrivateScheduler$kotlinx_coroutines_core:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L18d138.  @monitorenter v3
  #L18d13a.  v0:= v3.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` @kind object;
  #L18d13e.  v1:= 1000L;
  #L18d142.  call `shutdown`(v0, v1) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler;.shutdown:(J)V` @kind virtual;
  #L18d148.  call temp:= `a`(v3) @signature `Lkotlinx/coroutines/scheduling/ExperimentalCoroutineDispatcher;.a:()Lkotlinx/coroutines/scheduling/CoroutineScheduler;` @kind direct;
  #L18d14e.  v0:= temp @kind object;
  #L18d150.  v3.`kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher.e` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler` := v0 @kind object;
  #L18d154.  @monitorexit v3
  #L18d156.  return @kind void;
  #L18d158.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L18d15a.  @monitorexit v3
  #L18d15c.  throw v0;
  catch `java.lang.Throwable` @[L18d13a..L18d154] goto L18d158;
}
