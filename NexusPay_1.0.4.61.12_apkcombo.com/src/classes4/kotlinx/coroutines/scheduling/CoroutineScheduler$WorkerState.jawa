record `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`[] `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.BLOCKING` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.CPU_ACQUIRED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.DORMANT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.PARKING` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.TERMINATED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`[] `$values`() @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.$values:()[Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L18b35c.  v0:= 5I;
  #L18b35e.  v0:= new `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`[v0];
  #L18b362.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.CPU_ACQUIRED` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L18b366.  v2:= 0I;
  #L18b368.  v0[v2]:= v1 @kind object;
  #L18b36c.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.BLOCKING` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L18b370.  v2:= 1I;
  #L18b372.  v0[v2]:= v1 @kind object;
  #L18b376.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.PARKING` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L18b37a.  v2:= 2I;
  #L18b37c.  v0[v2]:= v1 @kind object;
  #L18b380.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.DORMANT` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L18b384.  v2:= 3I;
  #L18b386.  v0[v2]:= v1 @kind object;
  #L18b38a.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.TERMINATED` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L18b38e.  v2:= 4I;
  #L18b390.  v0[v2]:= v1 @kind object;
  #L18b394.  return v0 @kind object;
}
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L18b3cc.  v0:= new `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`;
  #L18b3d0.  v1:= "CPU_ACQUIRED" @kind object;
  #L18b3d4.  v2:= 0I;
  #L18b3d6.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L18b3dc.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.CPU_ACQUIRED` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` := v0 @kind object;
  #L18b3e0.  v0:= new `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`;
  #L18b3e4.  v1:= "BLOCKING" @kind object;
  #L18b3e8.  v2:= 1I;
  #L18b3ea.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L18b3f0.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.BLOCKING` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` := v0 @kind object;
  #L18b3f4.  v0:= new `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`;
  #L18b3f8.  v1:= "PARKING" @kind object;
  #L18b3fc.  v2:= 2I;
  #L18b3fe.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L18b404.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.PARKING` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` := v0 @kind object;
  #L18b408.  v0:= new `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`;
  #L18b40c.  v1:= "DORMANT" @kind object;
  #L18b410.  v2:= 3I;
  #L18b412.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L18b418.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.DORMANT` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` := v0 @kind object;
  #L18b41c.  v0:= new `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`;
  #L18b420.  v1:= "TERMINATED" @kind object;
  #L18b424.  v2:= 4I;
  #L18b426.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L18b42c.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.TERMINATED` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` := v0 @kind object;
  #L18b430.  call temp:= `$values`() @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.$values:()[Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;` @kind static;
  #L18b436.  v0:= temp @kind object;
  #L18b438.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.$VALUES` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`[] := v0 @kind object;
  #L18b43c.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L18b450.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L18b456.  return @kind void;
}
procedure `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.valueOf:(Ljava/lang/String;)Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L18b338.  v0:= constclass @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L18b33c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L18b342.  v1:= temp @kind object;
  #L18b344.  v1:= (`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`) v1 @kind object;
  #L18b348.  return v1 @kind object;
}
procedure `kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`[] `values`() @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.values:()[Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L18b3a8.  v0:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.$VALUES` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`[] @kind object;
  #L18b3ac.  v1:= length @variable v0;
  #L18b3ae.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L18b3b4.  v0:= temp @kind object;
  #L18b3b6.  v0:= (`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState`[]) v0 @kind object;
  #L18b3ba.  return v0 @kind object;
}
