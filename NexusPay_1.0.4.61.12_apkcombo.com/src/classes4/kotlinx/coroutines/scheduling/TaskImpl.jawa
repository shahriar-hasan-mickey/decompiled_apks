record `kotlinx.coroutines.scheduling.TaskImpl` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.scheduling.Task` @kind class {
  `java.lang.Runnable` `kotlinx.coroutines.scheduling.TaskImpl.block` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.TaskImpl` v0 @kind this, `java.lang.Runnable` v1 @kind object, `long` v2 , `kotlinx.coroutines.scheduling.TaskContext` v4 @kind object) @signature `Lkotlinx/coroutines/scheduling/TaskImpl;.<init>:(Ljava/lang/Runnable;JLkotlinx/coroutines/scheduling/TaskContext;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L18d51c.  call `<init>`(v0, v2, v4) @signature `Lkotlinx/coroutines/scheduling/Task;.<init>:(JLkotlinx/coroutines/scheduling/TaskContext;)V` @kind direct;
  #L18d522.  v0.`kotlinx.coroutines.scheduling.TaskImpl.block` @type ^`java.lang.Runnable` := v1 @kind object;
  #L18d526.  return @kind void;
}
procedure `void` `run`(`kotlinx.coroutines.scheduling.TaskImpl` v2 @kind this) @signature `Lkotlinx/coroutines/scheduling/TaskImpl;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18d538.  v0:= v2.`kotlinx.coroutines.scheduling.TaskImpl.block` @type ^`java.lang.Runnable` @kind object;
  #L18d53c.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L18d542.  v0:= v2.`kotlinx.coroutines.scheduling.Task.taskContext` @type ^`kotlinx.coroutines.scheduling.TaskContext` @kind object;
  #L18d546.  call `afterTask`(v0) @signature `Lkotlinx/coroutines/scheduling/TaskContext;.afterTask:()V` @kind interface;
  #L18d54c.  return @kind void;
  #L18d54e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L18d550.  v1:= v2.`kotlinx.coroutines.scheduling.Task.taskContext` @type ^`kotlinx.coroutines.scheduling.TaskContext` @kind object;
  #L18d554.  call `afterTask`(v1) @signature `Lkotlinx/coroutines/scheduling/TaskContext;.afterTask:()V` @kind interface;
  #L18d55a.  throw v0;
  catch `java.lang.Throwable` @[L18d538..L18d542] goto L18d54e;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.scheduling.TaskImpl` v4 @kind this) @signature `Lkotlinx/coroutines/scheduling/TaskImpl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L18d490.  v0:= new `java.lang.StringBuilder`;
  #L18d494.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L18d49a.  v1:= "Task[" @kind object;
  #L18d49e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18d4a4.  v1:= v4.`kotlinx.coroutines.scheduling.TaskImpl.block` @type ^`java.lang.Runnable` @kind object;
  #L18d4a8.  call temp:= `getClassSimpleName`(v1) @signature `Lkotlinx/coroutines/DebugStringsKt;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L18d4ae.  v1:= temp @kind object;
  #L18d4b0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18d4b6.  v1:= 64I;
  #L18d4ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L18d4c0.  v1:= v4.`kotlinx.coroutines.scheduling.TaskImpl.block` @type ^`java.lang.Runnable` @kind object;
  #L18d4c4.  call temp:= `getHexAddress`(v1) @signature `Lkotlinx/coroutines/DebugStringsKt;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L18d4ca.  v1:= temp @kind object;
  #L18d4cc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18d4d2.  v1:= ", " @kind object;
  #L18d4d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18d4dc.  v2:= v4.`kotlinx.coroutines.scheduling.Task.submissionTime` @type ^`long` @kind wide;
  #L18d4e0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L18d4e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18d4ec.  v1:= v4.`kotlinx.coroutines.scheduling.Task.taskContext` @type ^`kotlinx.coroutines.scheduling.TaskContext` @kind object;
  #L18d4f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18d4f6.  v1:= 93I;
  #L18d4fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L18d500.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L18d506.  v0:= temp @kind object;
  #L18d508.  return v0 @kind object;
}
