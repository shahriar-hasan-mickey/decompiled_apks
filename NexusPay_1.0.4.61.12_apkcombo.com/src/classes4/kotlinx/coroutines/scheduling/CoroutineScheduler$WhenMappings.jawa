record `kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
global `int`[] `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings.$EnumSwitchMapping$0` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WhenMappings;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L18b2b8.  call temp:= `values`() @signature `Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;.values:()[Lkotlinx/coroutines/scheduling/CoroutineScheduler$WorkerState;` @kind static;
  #L18b2be.  v0:= temp @kind object;
  #L18b2c0.  v0:= length @variable v0;
  #L18b2c2.  v0:= new `int`[v0];
  #L18b2c6.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.PARKING` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L18b2ca.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L18b2d0.  v1:= temp;
  #L18b2d2.  v2:= 1I;
  #L18b2d4.  v0[v1]:= v2;
  #L18b2d8.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.BLOCKING` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L18b2dc.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L18b2e2.  v1:= temp;
  #L18b2e4.  v2:= 2I;
  #L18b2e6.  v0[v1]:= v2;
  #L18b2ea.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.CPU_ACQUIRED` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L18b2ee.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L18b2f4.  v1:= temp;
  #L18b2f6.  v2:= 3I;
  #L18b2f8.  v0[v1]:= v2;
  #L18b2fc.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.DORMANT` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L18b300.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L18b306.  v1:= temp;
  #L18b308.  v2:= 4I;
  #L18b30a.  v0[v1]:= v2;
  #L18b30e.  v1:= `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState.TERMINATED` @type ^`kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState` @kind object;
  #L18b312.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L18b318.  v1:= temp;
  #L18b31a.  v2:= 5I;
  #L18b31c.  v0[v1]:= v2;
  #L18b320.  `@@kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] := v0 @kind object;
  #L18b324.  return @kind void;
}
