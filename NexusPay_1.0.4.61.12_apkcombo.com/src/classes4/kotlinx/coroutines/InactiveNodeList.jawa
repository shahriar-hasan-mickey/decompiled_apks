record `kotlinx.coroutines.InactiveNodeList` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.Incomplete` @kind interface {
  `kotlinx.coroutines.NodeList` `kotlinx.coroutines.InactiveNodeList.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.InactiveNodeList` v0 @kind this, `kotlinx.coroutines.NodeList` v1 @kind object) @signature `Lkotlinx/coroutines/InactiveNodeList;.<init>:(Lkotlinx/coroutines/NodeList;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L159ea0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L159ea6.  v0.`kotlinx.coroutines.InactiveNodeList.a` @type ^`kotlinx.coroutines.NodeList` := v1 @kind object;
  #L159eaa.  return @kind void;
}
procedure `kotlinx.coroutines.NodeList` `getList`(`kotlinx.coroutines.InactiveNodeList` v1 @kind this) @signature `Lkotlinx/coroutines/InactiveNodeList;.getList:()Lkotlinx/coroutines/NodeList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L159e88.  v0:= v1.`kotlinx.coroutines.InactiveNodeList.a` @type ^`kotlinx.coroutines.NodeList` @kind object;
  #L159e8c.  return v0 @kind object;
}
procedure `boolean` `isActive`(`kotlinx.coroutines.InactiveNodeList` v1 @kind this) @signature `Lkotlinx/coroutines/InactiveNodeList;.isActive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L159e38.  v0:= 0I;
  #L159e3a.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.InactiveNodeList` v2 @kind this) @signature `Lkotlinx/coroutines/InactiveNodeList;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L159e4c.  call temp:= `getDEBUG`() @signature `Lkotlinx/coroutines/DebugKt;.getDEBUG:()Z` @kind static;
  #L159e52.  v0:= temp;
  #L159e54.  if v0 == 0 then goto L159e6e;
  #L159e58.  call temp:= `getList`(v2) @signature `Lkotlinx/coroutines/InactiveNodeList;.getList:()Lkotlinx/coroutines/NodeList;` @kind virtual;
  #L159e5e.  v0:= temp @kind object;
  #L159e60.  v1:= "New" @kind object;
  #L159e64.  call temp:= `getString`(v0, v1) @signature `Lkotlinx/coroutines/NodeList;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L159e6a.  v0:= temp @kind object;
  #L159e6c.  goto L159e76;
  #L159e6e.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind super;
  #L159e74.  v0:= temp @kind object;
  #L159e76.  return v0 @kind object;
}
