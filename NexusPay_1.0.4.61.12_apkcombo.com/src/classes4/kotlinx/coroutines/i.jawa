record `kotlinx.coroutines.i` @kind class @AccessFlag FINAL_SYNTHETIC {
}
procedure `kotlinx.coroutines.Deferred` `a`(`kotlinx.coroutines.CoroutineScope` v1 @kind object, `kotlin.coroutines.CoroutineContext` v2 @kind object, `kotlinx.coroutines.CoroutineStart` v3 @kind object, `kotlin.jvm.functions.Function2` v4 @kind object) @signature `Lkotlinx/coroutines/i;.a:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Deferred;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L153a24.  call temp:= `newCoroutineContext`(v1, v2) @signature `Lkotlinx/coroutines/CoroutineContextKt;.newCoroutineContext:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L153a2a.  v1:= temp @kind object;
  #L153a2c.  call temp:= `isLazy`(v3) @signature `Lkotlinx/coroutines/CoroutineStart;.isLazy:()Z` @kind virtual;
  #L153a32.  v2:= temp;
  #L153a34.  if v2 == 0 then goto L153a44;
  #L153a38.  v2:= new `kotlinx.coroutines.y`;
  #L153a3c.  call `<init>`(v2, v1, v4) @signature `Lkotlinx/coroutines/y;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L153a42.  goto L153a50;
  #L153a44.  v2:= new `kotlinx.coroutines.n`;
  #L153a48.  v0:= 1I;
  #L153a4a.  call `<init>`(v2, v1, v0) @signature `Lkotlinx/coroutines/n;.<init>:(Lkotlin/coroutines/CoroutineContext;Z)V` @kind direct;
  #L153a50.  call `start`(v2, v3, v2, v4) @signature `Lkotlinx/coroutines/AbstractCoroutine;.start:(Lkotlinx/coroutines/CoroutineStart;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V` @kind virtual;
  #L153a56.  return v2 @kind object;
}
procedure `kotlinx.coroutines.Deferred` `b`(`kotlinx.coroutines.CoroutineScope` v0 @kind object, `kotlin.coroutines.CoroutineContext` v1 @kind object, `kotlinx.coroutines.CoroutineStart` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/i;.b:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Deferred;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1539f0.  v5:= v4 ^& 1;
  #L1539f4.  if v5 == 0 then goto L1539fc;
  #L1539f8.  v1:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L1539fc.  v4:= v4 ^& 2;
  #L153a00.  if v4 == 0 then goto L153a08;
  #L153a04.  v2:= `@@kotlinx.coroutines.CoroutineStart.DEFAULT` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L153a08.  call temp:= `async`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/BuildersKt;.async:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Deferred;` @kind static;
  #L153a0e.  v0:= temp @kind object;
  #L153a10.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`kotlinx.coroutines.CoroutineDispatcher` v0 @kind object, `kotlin.jvm.functions.Function2` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/i;.c:(Lkotlinx/coroutines/CoroutineDispatcher;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L1538fc.  call temp:= `withContext`(v0, v1, v2) @signature `Lkotlinx/coroutines/BuildersKt;.withContext:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L153902.  v0:= temp @kind object;
  #L153904.  return v0 @kind object;
}
procedure `kotlinx.coroutines.Job` `d`(`kotlinx.coroutines.CoroutineScope` v1 @kind object, `kotlin.coroutines.CoroutineContext` v2 @kind object, `kotlinx.coroutines.CoroutineStart` v3 @kind object, `kotlin.jvm.functions.Function2` v4 @kind object) @signature `Lkotlinx/coroutines/i;.d:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L153a9c.  call temp:= `newCoroutineContext`(v1, v2) @signature `Lkotlinx/coroutines/CoroutineContextKt;.newCoroutineContext:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L153aa2.  v1:= temp @kind object;
  #L153aa4.  call temp:= `isLazy`(v3) @signature `Lkotlinx/coroutines/CoroutineStart;.isLazy:()Z` @kind virtual;
  #L153aaa.  v2:= temp;
  #L153aac.  if v2 == 0 then goto L153abc;
  #L153ab0.  v2:= new `kotlinx.coroutines.z`;
  #L153ab4.  call `<init>`(v2, v1, v4) @signature `Lkotlinx/coroutines/z;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L153aba.  goto L153ac8;
  #L153abc.  v2:= new `kotlinx.coroutines.g0`;
  #L153ac0.  v0:= 1I;
  #L153ac2.  call `<init>`(v2, v1, v0) @signature `Lkotlinx/coroutines/g0;.<init>:(Lkotlin/coroutines/CoroutineContext;Z)V` @kind direct;
  #L153ac8.  call `start`(v2, v3, v2, v4) @signature `Lkotlinx/coroutines/AbstractCoroutine;.start:(Lkotlinx/coroutines/CoroutineStart;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V` @kind virtual;
  #L153ace.  return v2 @kind object;
}
procedure `kotlinx.coroutines.Job` `e`(`kotlinx.coroutines.CoroutineScope` v0 @kind object, `kotlin.coroutines.CoroutineContext` v1 @kind object, `kotlinx.coroutines.CoroutineStart` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/i;.e:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L153a68.  v5:= v4 ^& 1;
  #L153a6c.  if v5 == 0 then goto L153a74;
  #L153a70.  v1:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L153a74.  v4:= v4 ^& 2;
  #L153a78.  if v4 == 0 then goto L153a80;
  #L153a7c.  v2:= `@@kotlinx.coroutines.CoroutineStart.DEFAULT` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L153a80.  call temp:= `launch`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/BuildersKt;.launch:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;` @kind static;
  #L153a86.  v0:= temp @kind object;
  #L153a88.  return v0 @kind object;
}
procedure `java.lang.Object` `f`(`kotlin.coroutines.CoroutineContext` v8 @kind object, `kotlin.jvm.functions.Function2` v9 @kind object, `kotlin.coroutines.Continuation` v10 @kind object) @signature `Lkotlinx/coroutines/i;.f:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L153918.  call temp:= `getContext`(v10) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L15391e.  v0:= temp @kind object;
  #L153920.  call temp:= `plus`(v0, v8) @signature `Lkotlin/coroutines/CoroutineContext;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L153926.  v8:= temp @kind object;
  #L153928.  call `ensureActive`(v8) @signature `Lkotlinx/coroutines/JobKt;.ensureActive:(Lkotlin/coroutines/CoroutineContext;)V` @kind static;
  #L15392e.  if v8 != v0 then goto L153946;
  #L153932.  v0:= new `kotlinx.coroutines.internal.ScopeCoroutine`;
  #L153936.  call `<init>`(v0, v8, v10) @signature `Lkotlinx/coroutines/internal/ScopeCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L15393c.  call temp:= `startUndispatchedOrReturn`(v0, v0, v9) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startUndispatchedOrReturn:(Lkotlinx/coroutines/internal/ScopeCoroutine;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind static;
  #L153942.  v8:= temp @kind object;
  #L153944.  goto L1539be;
  #L153946.  v1:= `@@kotlin.coroutines.ContinuationInterceptor.Key` @type ^`kotlin.coroutines.ContinuationInterceptor$Key` @kind object;
  #L15394a.  call temp:= `get`(v8, v1) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L153950.  v1:= temp @kind object;
  #L153952.  v2:= `@@kotlin.coroutines.ContinuationInterceptor.Key` @type ^`kotlin.coroutines.ContinuationInterceptor$Key` @kind object;
  #L153956.  call temp:= `get`(v0, v2) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L15395c.  v0:= temp @kind object;
  #L15395e.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L153964.  v0:= temp;
  #L153966.  if v0 == 0 then goto L15399a;
  #L15396a.  v0:= new `kotlinx.coroutines.UndispatchedCoroutine`;
  #L15396e.  call `<init>`(v0, v8, v10) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L153974.  v1:= 0I;
  #L153976.  call temp:= `updateThreadContext`(v8, v1) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15397c.  v1:= temp @kind object;
  #L15397e.  call temp:= `startUndispatchedOrReturn`(v0, v0, v9) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startUndispatchedOrReturn:(Lkotlinx/coroutines/internal/ScopeCoroutine;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind static;
  #L153984.  v9:= temp @kind object;
  #L153986.  call `restoreThreadContext`(v8, v1) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L15398c.  v8:= v9 @kind object;
  #L15398e.  goto L1539be;
  #L153990.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L153992.  call `restoreThreadContext`(v8, v1) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L153998.  throw v9;
  #L15399a.  v0:= new `kotlinx.coroutines.DispatchedCoroutine`;
  #L15399e.  call `<init>`(v0, v8, v10) @signature `Lkotlinx/coroutines/DispatchedCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1539a4.  v5:= 0I;
  #L1539a6.  v6:= 4I;
  #L1539a8.  v7:= 0I;
  #L1539aa.  v2:= v9 @kind object;
  #L1539ac.  v3:= v0 @kind object;
  #L1539ae.  v4:= v0 @kind object;
  #L1539b0.  call `startCoroutineCancellable$default`(v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/intrinsics/CancellableKt;.startCoroutineCancellable$default:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @kind static;
  #L1539b6.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/DispatchedCoroutine;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L1539bc.  v8:= temp @kind object;
  #L1539be.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1539c4.  v9:= temp @kind object;
  #L1539c6.  if v8 != v9 then goto L1539d0;
  #L1539ca.  call `probeCoroutineSuspended`(v10) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L1539d0.  return v8 @kind object;
  catch `java.lang.Throwable` @[L15397e..L153986] goto L153990;
}
