record `kotlinx.coroutines.CoroutineStart` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlinx.coroutines.CoroutineStart`[] `@@kotlinx.coroutines.CoroutineStart.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlinx.coroutines.CoroutineStart` `@@kotlinx.coroutines.CoroutineStart.ATOMIC` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.CoroutineStart` `@@kotlinx.coroutines.CoroutineStart.DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.CoroutineStart` `@@kotlinx.coroutines.CoroutineStart.LAZY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.CoroutineStart` `@@kotlinx.coroutines.CoroutineStart.UNDISPATCHED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `kotlinx.coroutines.CoroutineStart`[] `$values`() @signature `Lkotlinx/coroutines/CoroutineStart;.$values:()[Lkotlinx/coroutines/CoroutineStart;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L156f58.  v0:= 4I;
  #L156f5a.  v0:= new `kotlinx.coroutines.CoroutineStart`[v0];
  #L156f5e.  v1:= `@@kotlinx.coroutines.CoroutineStart.DEFAULT` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L156f62.  v2:= 0I;
  #L156f64.  v0[v2]:= v1 @kind object;
  #L156f68.  v1:= `@@kotlinx.coroutines.CoroutineStart.LAZY` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L156f6c.  v2:= 1I;
  #L156f6e.  v0[v2]:= v1 @kind object;
  #L156f72.  v1:= `@@kotlinx.coroutines.CoroutineStart.ATOMIC` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L156f76.  v2:= 2I;
  #L156f78.  v0[v2]:= v1 @kind object;
  #L156f7c.  v1:= `@@kotlinx.coroutines.CoroutineStart.UNDISPATCHED` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L156f80.  v2:= 3I;
  #L156f82.  v0[v2]:= v1 @kind object;
  #L156f86.  return v0 @kind object;
}
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CoroutineStart;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L156fbc.  v0:= new `kotlinx.coroutines.CoroutineStart`;
  #L156fc0.  v1:= "DEFAULT" @kind object;
  #L156fc4.  v2:= 0I;
  #L156fc6.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/CoroutineStart;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L156fcc.  `@@kotlinx.coroutines.CoroutineStart.DEFAULT` @type ^`kotlinx.coroutines.CoroutineStart` := v0 @kind object;
  #L156fd0.  v0:= new `kotlinx.coroutines.CoroutineStart`;
  #L156fd4.  v1:= "LAZY" @kind object;
  #L156fd8.  v2:= 1I;
  #L156fda.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/CoroutineStart;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L156fe0.  `@@kotlinx.coroutines.CoroutineStart.LAZY` @type ^`kotlinx.coroutines.CoroutineStart` := v0 @kind object;
  #L156fe4.  v0:= new `kotlinx.coroutines.CoroutineStart`;
  #L156fe8.  v1:= "ATOMIC" @kind object;
  #L156fec.  v2:= 2I;
  #L156fee.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/CoroutineStart;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L156ff4.  `@@kotlinx.coroutines.CoroutineStart.ATOMIC` @type ^`kotlinx.coroutines.CoroutineStart` := v0 @kind object;
  #L156ff8.  v0:= new `kotlinx.coroutines.CoroutineStart`;
  #L156ffc.  v1:= "UNDISPATCHED" @kind object;
  #L157000.  v2:= 3I;
  #L157002.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/CoroutineStart;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L157008.  `@@kotlinx.coroutines.CoroutineStart.UNDISPATCHED` @type ^`kotlinx.coroutines.CoroutineStart` := v0 @kind object;
  #L15700c.  call temp:= `$values`() @signature `Lkotlinx/coroutines/CoroutineStart;.$values:()[Lkotlinx/coroutines/CoroutineStart;` @kind static;
  #L157012.  v0:= temp @kind object;
  #L157014.  `@@kotlinx.coroutines.CoroutineStart.$VALUES` @type ^`kotlinx.coroutines.CoroutineStart`[] := v0 @kind object;
  #L157018.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.CoroutineStart` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/CoroutineStart;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L15702c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L157032.  return @kind void;
}
procedure `void` `isLazy$annotations`() @signature `Lkotlinx/coroutines/CoroutineStart;.isLazy$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L157110.  return @kind void;
}
procedure `kotlinx.coroutines.CoroutineStart` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlinx/coroutines/CoroutineStart;.valueOf:(Ljava/lang/String;)Lkotlinx/coroutines/CoroutineStart;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L156f34.  v0:= constclass @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L156f38.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L156f3e.  v1:= temp @kind object;
  #L156f40.  v1:= (`kotlinx.coroutines.CoroutineStart`) v1 @kind object;
  #L156f44.  return v1 @kind object;
}
procedure `kotlinx.coroutines.CoroutineStart`[] `values`() @signature `Lkotlinx/coroutines/CoroutineStart;.values:()[Lkotlinx/coroutines/CoroutineStart;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L156f98.  v0:= `@@kotlinx.coroutines.CoroutineStart.$VALUES` @type ^`kotlinx.coroutines.CoroutineStart`[] @kind object;
  #L156f9c.  v1:= length @variable v0;
  #L156f9e.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L156fa4.  v0:= temp @kind object;
  #L156fa6.  v0:= (`kotlinx.coroutines.CoroutineStart`[]) v0 @kind object;
  #L156faa.  return v0 @kind object;
}
procedure `void` `invoke`(`kotlinx.coroutines.CoroutineStart` v2 @kind this, `kotlin.jvm.functions.Function1` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/CoroutineStart;.invoke:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L157044.  v0:= `@@kotlinx.coroutines.CoroutineStart$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L157048.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L15704e.  v1:= temp;
  #L157050.  v0:= v0[v1];
  #L157054.  v1:= 1I;
  #L157056.  if v0 == v1 then goto L15708a;
  #L15705a.  v1:= 2I;
  #L15705c.  if v0 == v1 then goto L157082;
  #L157060.  v1:= 3I;
  #L157062.  if v0 == v1 then goto L15707a;
  #L157066.  v3:= 4I;
  #L157068.  if v0 != v3 then goto L15706e;
  #L15706c.  goto L157090;
  #L15706e.  v3:= new `kotlin.NoWhenBranchMatchedException`;
  #L157072.  call `<init>`(v3) @signature `Lkotlin/NoWhenBranchMatchedException;.<init>:()V` @kind direct;
  #L157078.  throw v3;
  #L15707a.  call `startCoroutineUndispatched`(v3, v4) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startCoroutineUndispatched:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L157080.  goto L157090;
  #L157082.  call `startCoroutine`(v3, v4) @signature `Lkotlin/coroutines/ContinuationKt;.startCoroutine:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L157088.  goto L157090;
  #L15708a.  call `startCoroutineCancellable`(v3, v4) @signature `Lkotlinx/coroutines/intrinsics/CancellableKt;.startCoroutineCancellable:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L157090.  return @kind void;
}
procedure `void` `invoke`(`kotlinx.coroutines.CoroutineStart` v6 @kind this, `kotlin.jvm.functions.Function2` v7 @kind object, `java.lang.Object` v8 @kind object, `kotlin.coroutines.Continuation` v9 @kind object) @signature `Lkotlinx/coroutines/CoroutineStart;.invoke:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1570a4.  v0:= `@@kotlinx.coroutines.CoroutineStart$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L1570a8.  call temp:= `ordinal`(v6) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1570ae.  v1:= temp;
  #L1570b0.  v0:= v0[v1];
  #L1570b4.  v1:= 1I;
  #L1570b6.  if v0 == v1 then goto L1570ea;
  #L1570ba.  v1:= 2I;
  #L1570bc.  if v0 == v1 then goto L1570e2;
  #L1570c0.  v1:= 3I;
  #L1570c2.  if v0 == v1 then goto L1570da;
  #L1570c6.  v7:= 4I;
  #L1570c8.  if v0 != v7 then goto L1570ce;
  #L1570cc.  goto L1570fc;
  #L1570ce.  v7:= new `kotlin.NoWhenBranchMatchedException`;
  #L1570d2.  call `<init>`(v7) @signature `Lkotlin/NoWhenBranchMatchedException;.<init>:()V` @kind direct;
  #L1570d8.  throw v7;
  #L1570da.  call `startCoroutineUndispatched`(v7, v8, v9) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startCoroutineUndispatched:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L1570e0.  goto L1570fc;
  #L1570e2.  call `startCoroutine`(v7, v8, v9) @signature `Lkotlin/coroutines/ContinuationKt;.startCoroutine:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L1570e8.  goto L1570fc;
  #L1570ea.  v3:= 0I;
  #L1570ec.  v4:= 4I;
  #L1570ee.  v5:= 0I;
  #L1570f0.  v0:= v7 @kind object;
  #L1570f2.  v1:= v8 @kind object;
  #L1570f4.  v2:= v9 @kind object;
  #L1570f6.  call `startCoroutineCancellable$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/intrinsics/CancellableKt;.startCoroutineCancellable$default:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @kind static;
  #L1570fc.  return @kind void;
}
procedure `boolean` `isLazy`(`kotlinx.coroutines.CoroutineStart` v1 @kind this) @signature `Lkotlinx/coroutines/CoroutineStart;.isLazy:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L156f14.  v0:= `@@kotlinx.coroutines.CoroutineStart.LAZY` @type ^`kotlinx.coroutines.CoroutineStart` @kind object;
  #L156f18.  if v1 != v0 then goto L156f20;
  #L156f1c.  v0:= 1I;
  #L156f1e.  goto L156f22;
  #L156f20.  v0:= 0I;
  #L156f22.  return v0;
}
