record `kotlinx.coroutines.JobCancellationException` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.CancellationException` @kind class, `kotlinx.coroutines.CopyableThrowable` @kind interface {
  `kotlinx.coroutines.Job` `kotlinx.coroutines.JobCancellationException.job` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.JobCancellationException` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object, `kotlinx.coroutines.Job` v3 @kind object) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15a58c.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CancellationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15a592.  v0.`kotlinx.coroutines.JobCancellationException.job` @type ^`kotlinx.coroutines.Job` := v3 @kind object;
  #L15a596.  if v2 == 0 then goto L15a5a0;
  #L15a59a.  call temp:= `initCause`(v0, v2) @signature `Ljava/util/concurrent/CancellationException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L15a5a0.  return @kind void;
}
procedure `java.lang.Throwable` `createCopy`(`kotlinx.coroutines.JobCancellationException` v1 @kind this) @signature `Lkotlinx/coroutines/JobCancellationException;.createCopy:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L15a4fc.  call temp:= `createCopy`(v1) @signature `Lkotlinx/coroutines/JobCancellationException;.createCopy:()Lkotlinx/coroutines/JobCancellationException;` @kind virtual;
  #L15a502.  v0:= temp @kind object;
  #L15a504.  return v0 @kind object;
}
procedure `kotlinx.coroutines.JobCancellationException` `createCopy`(`kotlinx.coroutines.JobCancellationException` v3 @kind this) @signature `Lkotlinx/coroutines/JobCancellationException;.createCopy:()Lkotlinx/coroutines/JobCancellationException;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15a54c.  call temp:= `getDEBUG`() @signature `Lkotlinx/coroutines/DebugKt;.getDEBUG:()Z` @kind static;
  #L15a552.  v0:= temp;
  #L15a554.  if v0 == 0 then goto L15a576;
  #L15a558.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L15a55c.  call temp:= `getMessage`(v3) @signature `Ljava/util/concurrent/CancellationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L15a562.  v1:= temp @kind object;
  #L15a564.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15a56a.  v2:= v3.`kotlinx.coroutines.JobCancellationException.job` @type ^`kotlinx.coroutines.Job` @kind object;
  #L15a56e.  call `<init>`(v0, v1, v3, v2) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L15a574.  return v0 @kind object;
  #L15a576.  v0:= 0I;
  #L15a578.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlinx.coroutines.JobCancellationException` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobCancellationException;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15a3e4.  if v3 == v2 then goto L15a446;
  #L15a3e8.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.JobCancellationException` @kind boolean;
  #L15a3ec.  if v0 == 0 then goto L15a442;
  #L15a3f0.  v3:= (`kotlinx.coroutines.JobCancellationException`) v3 @kind object;
  #L15a3f4.  call temp:= `getMessage`(v3) @signature `Ljava/util/concurrent/CancellationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L15a3fa.  v0:= temp @kind object;
  #L15a3fc.  call temp:= `getMessage`(v2) @signature `Ljava/util/concurrent/CancellationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L15a402.  v1:= temp @kind object;
  #L15a404.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L15a40a.  v0:= temp;
  #L15a40c.  if v0 == 0 then goto L15a442;
  #L15a410.  v0:= v3.`kotlinx.coroutines.JobCancellationException.job` @type ^`kotlinx.coroutines.Job` @kind object;
  #L15a414.  v1:= v2.`kotlinx.coroutines.JobCancellationException.job` @type ^`kotlinx.coroutines.Job` @kind object;
  #L15a418.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L15a41e.  v0:= temp;
  #L15a420.  if v0 == 0 then goto L15a442;
  #L15a424.  call temp:= `getCause`(v3) @signature `Ljava/util/concurrent/CancellationException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L15a42a.  v3:= temp @kind object;
  #L15a42c.  call temp:= `getCause`(v2) @signature `Ljava/util/concurrent/CancellationException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L15a432.  v0:= temp @kind object;
  #L15a434.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L15a43a.  v3:= temp;
  #L15a43c.  if v3 == 0 then goto L15a442;
  #L15a440.  goto L15a446;
  #L15a442.  v3:= 0I;
  #L15a444.  goto L15a448;
  #L15a446.  v3:= 1I;
  #L15a448.  return v3;
}
procedure `java.lang.Throwable` `fillInStackTrace`(`kotlinx.coroutines.JobCancellationException` v1 @kind this) @signature `Lkotlinx/coroutines/JobCancellationException;.fillInStackTrace:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15a518.  call temp:= `getDEBUG`() @signature `Lkotlinx/coroutines/DebugKt;.getDEBUG:()Z` @kind static;
  #L15a51e.  v0:= temp;
  #L15a520.  if v0 == 0 then goto L15a52e;
  #L15a524.  call temp:= `fillInStackTrace`(v1) @signature `Ljava/util/concurrent/CancellationException;.fillInStackTrace:()Ljava/lang/Throwable;` @kind super;
  #L15a52a.  v0:= temp @kind object;
  #L15a52c.  return v0 @kind object;
  #L15a52e.  v0:= 0I;
  #L15a530.  v0:= new `java.lang.StackTraceElement`[v0];
  #L15a534.  call `setStackTrace`(v1, v0) @signature `Ljava/util/concurrent/CancellationException;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L15a53a.  return v1 @kind object;
}
procedure `int` `hashCode`(`kotlinx.coroutines.JobCancellationException` v2 @kind this) @signature `Lkotlinx/coroutines/JobCancellationException;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15a45c.  call temp:= `getMessage`(v2) @signature `Ljava/util/concurrent/CancellationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L15a462.  v0:= temp @kind object;
  #L15a464.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L15a46a.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L15a470.  v0:= temp;
  #L15a472.  v0:= v0 * 31;
  #L15a476.  v1:= v2.`kotlinx.coroutines.JobCancellationException.job` @type ^`kotlinx.coroutines.Job` @kind object;
  #L15a47a.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L15a480.  v1:= temp;
  #L15a482.  v0:= v0 + v1 @kind int;
  #L15a484.  v0:= v0 * 31;
  #L15a488.  call temp:= `getCause`(v2) @signature `Ljava/util/concurrent/CancellationException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L15a48e.  v1:= temp @kind object;
  #L15a490.  if v1 != 0 then goto L15a498;
  #L15a494.  v1:= 0I;
  #L15a496.  goto L15a4a0;
  #L15a498.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Throwable;.hashCode:()I` @kind virtual;
  #L15a49e.  v1:= temp;
  #L15a4a0.  v0:= v0 + v1 @kind int;
  #L15a4a2.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.JobCancellationException` v2 @kind this) @signature `Lkotlinx/coroutines/JobCancellationException;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15a4b4.  v0:= new `java.lang.StringBuilder`;
  #L15a4b8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15a4be.  call temp:= `toString`(v2) @signature `Ljava/util/concurrent/CancellationException;.toString:()Ljava/lang/String;` @kind super;
  #L15a4c4.  v1:= temp @kind object;
  #L15a4c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15a4cc.  v1:= "; job=" @kind object;
  #L15a4d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15a4d6.  v1:= v2.`kotlinx.coroutines.JobCancellationException.job` @type ^`kotlinx.coroutines.Job` @kind object;
  #L15a4da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15a4e0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15a4e6.  v0:= temp @kind object;
  #L15a4e8.  return v0 @kind object;
}
