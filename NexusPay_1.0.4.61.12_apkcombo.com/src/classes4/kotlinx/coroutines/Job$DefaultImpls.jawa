record `kotlinx.coroutines.Job$DefaultImpls` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `cancel`(`kotlinx.coroutines.Job` v1 @kind object) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.cancel:(Lkotlinx/coroutines/Job;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L15a390.  v0:= 0I;
  #L15a392.  call `cancel`(v1, v0) @signature `Lkotlinx/coroutines/Job;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L15a398.  return @kind void;
}
procedure `void` `cancel$default`(`kotlinx.coroutines.Job` v0 @kind object, `java.util.concurrent.CancellationException` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.cancel$default:(Lkotlinx/coroutines/Job;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15a358.  if v3 != 0 then goto L15a36e;
  #L15a35c.  v2:= v2 ^& 1;
  #L15a360.  if v2 == 0 then goto L15a366;
  #L15a364.  v1:= 0I;
  #L15a366.  call `cancel`(v0, v1) @signature `Lkotlinx/coroutines/Job;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L15a36c.  return @kind void;
  #L15a36e.  v0:= new `java.lang.UnsupportedOperationException`;
  #L15a372.  v1:= "Super calls with default arguments not supported in this target, function: cancel" @kind object;
  #L15a376.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15a37c.  throw v0;
}
procedure `boolean` `cancel$default`(`kotlinx.coroutines.Job` v0 @kind object, `java.lang.Throwable` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.cancel$default:(Lkotlinx/coroutines/Job;Ljava/lang/Throwable;ILjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15a258.  if v3 != 0 then goto L15a270;
  #L15a25c.  v2:= v2 ^& 1;
  #L15a260.  if v2 == 0 then goto L15a266;
  #L15a264.  v1:= 0I;
  #L15a266.  call temp:= `cancel`(v0, v1) @signature `Lkotlinx/coroutines/Job;.cancel:(Ljava/lang/Throwable;)Z` @kind interface;
  #L15a26c.  v0:= temp;
  #L15a26e.  return v0;
  #L15a270.  v0:= new `java.lang.UnsupportedOperationException`;
  #L15a274.  v1:= "Super calls with default arguments not supported in this target, function: cancel" @kind object;
  #L15a278.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15a27e.  throw v0;
}
procedure `java.lang.Object` `fold`(`kotlinx.coroutines.Job` v0 @kind object, `java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.fold:(Lkotlinx/coroutines/Job;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L15a290.  call temp:= `fold`(v0, v1, v2) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.fold:(Lkotlin/coroutines/CoroutineContext$Element;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind static;
  #L15a296.  v0:= temp @kind object;
  #L15a298.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext$Element` `get`(`kotlinx.coroutines.Job` v0 @kind object, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.get:(Lkotlinx/coroutines/Job;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L15a2e4.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.get:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind static;
  #L15a2ea.  v0:= temp @kind object;
  #L15a2ec.  return v0 @kind object;
}
procedure `kotlinx.coroutines.DisposableHandle` `invokeOnCompletion$default`(`kotlinx.coroutines.Job` v0 @kind object, `boolean` v1 , `boolean` v2 , `kotlin.jvm.functions.Function1` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.invokeOnCompletion$default:(Lkotlinx/coroutines/Job;ZZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/DisposableHandle;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15a300.  if v5 != 0 then goto L15a322;
  #L15a304.  v5:= v4 ^& 1;
  #L15a308.  if v5 == 0 then goto L15a30e;
  #L15a30c.  v1:= 0I;
  #L15a30e.  v4:= v4 ^& 2;
  #L15a312.  if v4 == 0 then goto L15a318;
  #L15a316.  v2:= 1I;
  #L15a318.  call temp:= `invokeOnCompletion`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/Job;.invokeOnCompletion:(ZZLkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @kind interface;
  #L15a31e.  v0:= temp @kind object;
  #L15a320.  return v0 @kind object;
  #L15a322.  v0:= new `java.lang.UnsupportedOperationException`;
  #L15a326.  v1:= "Super calls with default arguments not supported in this target, function: invokeOnCompletion" @kind object;
  #L15a32a.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15a330.  throw v0;
}
procedure `kotlin.coroutines.CoroutineContext` `minusKey`(`kotlinx.coroutines.Job` v0 @kind object, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.minusKey:(Lkotlinx/coroutines/Job;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L15a2ac.  call temp:= `minusKey`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.minusKey:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L15a2b2.  v0:= temp @kind object;
  #L15a2b4.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `plus`(`kotlinx.coroutines.Job` v0 @kind object, `kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.plus:(Lkotlinx/coroutines/Job;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L15a2c8.  call temp:= `plus`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.plus:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L15a2ce.  v0:= temp @kind object;
  #L15a2d0.  return v0 @kind object;
}
procedure `kotlinx.coroutines.Job` `plus`(`kotlinx.coroutines.Job` v0 @kind object, `kotlinx.coroutines.Job` v1 @kind object) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.plus:(Lkotlinx/coroutines/Job;Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L15a344.  return v1 @kind object;
}
