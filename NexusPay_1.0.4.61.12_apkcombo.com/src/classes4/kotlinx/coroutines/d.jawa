record `kotlinx.coroutines.d` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.concurrent.ThreadFactory` @kind interface {
  `kotlinx.coroutines.ThreadPoolDispatcher` `kotlinx.coroutines.d.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.d` v0 @kind this, `kotlinx.coroutines.ThreadPoolDispatcher` v1 @kind object) @signature `Lkotlinx/coroutines/d;.<init>:(Lkotlinx/coroutines/ThreadPoolDispatcher;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L152d1c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L152d22.  v0.`kotlinx.coroutines.d.a` @type ^`kotlinx.coroutines.ThreadPoolDispatcher` := v1 @kind object;
  #L152d26.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`kotlinx.coroutines.d` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/d;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L152cfc.  v0:= v1.`kotlinx.coroutines.d.a` @type ^`kotlinx.coroutines.ThreadPoolDispatcher` @kind object;
  #L152d00.  call temp:= `d`(v0, v2) @signature `Lkotlinx/coroutines/ThreadPoolDispatcher;.d:(Lkotlinx/coroutines/ThreadPoolDispatcher;Ljava/lang/Runnable;)Ljava/lang/Thread;` @kind static;
  #L152d06.  v2:= temp @kind object;
  #L152d08.  return v2 @kind object;
}
