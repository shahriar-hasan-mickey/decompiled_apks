record `kotlinx.coroutines.ThreadContextElement$DefaultImpls` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `fold`(`kotlinx.coroutines.ThreadContextElement` v0 @kind object, `java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/ThreadContextElement$DefaultImpls;.fold:(Lkotlinx/coroutines/ThreadContextElement;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L15e338.  call temp:= `fold`(v0, v1, v2) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.fold:(Lkotlin/coroutines/CoroutineContext$Element;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind static;
  #L15e33e.  v0:= temp @kind object;
  #L15e340.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext$Element` `get`(`kotlinx.coroutines.ThreadContextElement` v0 @kind object, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/ThreadContextElement$DefaultImpls;.get:(Lkotlinx/coroutines/ThreadContextElement;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L15e38c.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.get:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind static;
  #L15e392.  v0:= temp @kind object;
  #L15e394.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `minusKey`(`kotlinx.coroutines.ThreadContextElement` v0 @kind object, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/ThreadContextElement$DefaultImpls;.minusKey:(Lkotlinx/coroutines/ThreadContextElement;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L15e354.  call temp:= `minusKey`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.minusKey:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L15e35a.  v0:= temp @kind object;
  #L15e35c.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `plus`(`kotlinx.coroutines.ThreadContextElement` v0 @kind object, `kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/ThreadContextElement$DefaultImpls;.plus:(Lkotlinx/coroutines/ThreadContextElement;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L15e370.  call temp:= `plus`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext$Element$DefaultImpls;.plus:(Lkotlin/coroutines/CoroutineContext$Element;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L15e376.  v0:= temp @kind object;
  #L15e378.  return v0 @kind object;
}
