record `kotlinx.coroutines.f` @kind class @AccessFlag FINAL {
  `kotlinx.coroutines.Deferred`[] `kotlinx.coroutines.f.a` @AccessFlag PRIVATE_FINAL;
  `int` `kotlinx.coroutines.f.notCompletedCount` @AccessFlag VOLATILE_SYNTHETIC;
}
global `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `@@kotlinx.coroutines.f.b` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L153310.  v0:= constclass @type ^`kotlinx.coroutines.f` @kind object;
  #L153314.  v1:= "notCompletedCount" @kind object;
  #L153318.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;` @kind static;
  #L15331e.  v0:= temp @kind object;
  #L153320.  `@@kotlinx.coroutines.f.b` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v0 @kind object;
  #L153324.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.f` v0 @kind this, `kotlinx.coroutines.Deferred`[] v1 @kind object) @signature `Lkotlinx/coroutines/f;.<init>:([Lkotlinx/coroutines/Deferred;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L153338.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15333e.  v0.`kotlinx.coroutines.f.a` @type ^`kotlinx.coroutines.Deferred`[] := v1 @kind object;
  #L153342.  v1:= length @variable v1;
  #L153344.  v0.`kotlinx.coroutines.f.notCompletedCount` @type ^`int` := v1;
  #L153348.  return @kind void;
}
procedure `kotlinx.coroutines.Deferred`[] `a`(`kotlinx.coroutines.f` v0 @kind object) @signature `Lkotlinx/coroutines/f;.a:(Lkotlinx/coroutines/f;)[Lkotlinx/coroutines/Deferred;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1532f8.  v0:= v0.`kotlinx.coroutines.f.a` @type ^`kotlinx.coroutines.Deferred`[] @kind object;
  #L1532fc.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`kotlinx.coroutines.f` v7 @kind this, `kotlin.coroutines.Continuation` v8 @kind object) @signature `Lkotlinx/coroutines/f;.b:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L15322c.  v0:= new `kotlinx.coroutines.CancellableContinuationImpl`;
  #L153230.  call temp:= `intercepted`(v8) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L153236.  v1:= temp @kind object;
  #L153238.  v2:= 1I;
  #L15323a.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;I)V` @kind direct;
  #L153240.  call `initCancellability`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.initCancellability:()V` @kind virtual;
  #L153246.  call temp:= `a`(v7) @signature `Lkotlinx/coroutines/f;.a:(Lkotlinx/coroutines/f;)[Lkotlinx/coroutines/Deferred;` @kind static;
  #L15324c.  v1:= temp @kind object;
  #L15324e.  v1:= length @variable v1;
  #L153250.  v2:= new `kotlinx.coroutines.f$a`[v1];
  #L153254.  v3:= 0I;
  #L153256.  v4:= 0I;
  #L153258.  if v4 >= v1 then goto L153294;
  #L15325c.  call temp:= `a`(v7) @signature `Lkotlinx/coroutines/f;.a:(Lkotlinx/coroutines/f;)[Lkotlinx/coroutines/Deferred;` @kind static;
  #L153262.  v5:= temp @kind object;
  #L153264.  v5:= v5[v4] @kind object;
  #L153268.  call temp:= `start`(v5) @signature `Lkotlinx/coroutines/Job;.start:()Z` @kind interface;
  #L15326e.  v6:= new `kotlinx.coroutines.f$a`;
  #L153272.  call `<init>`(v6, v7, v0) @signature `Lkotlinx/coroutines/f$a;.<init>:(Lkotlinx/coroutines/f;Lkotlinx/coroutines/CancellableContinuation;)V` @kind direct;
  #L153278.  call temp:= `invokeOnCompletion`(v5, v6) @signature `Lkotlinx/coroutines/Job;.invokeOnCompletion:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @kind interface;
  #L15327e.  v5:= temp @kind object;
  #L153280.  call `h`(v6, v5) @signature `Lkotlinx/coroutines/f$a;.h:(Lkotlinx/coroutines/DisposableHandle;)V` @kind virtual;
  #L153286.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15328a.  v2[v4]:= v6 @kind object;
  #L15328e.  v4:= v4 + 1;
  #L153292.  goto L153258;
  #L153294.  v4:= new `kotlinx.coroutines.f$b`;
  #L153298.  call `<init>`(v4, v7, v2) @signature `Lkotlinx/coroutines/f$b;.<init>:(Lkotlinx/coroutines/f;[Lkotlinx/coroutines/f$a;)V` @kind direct;
  #L15329e.  if v3 >= v1 then goto L1532b2;
  #L1532a2.  v5:= v2[v3] @kind object;
  #L1532a6.  call `g`(v5, v4) @signature `Lkotlinx/coroutines/f$a;.g:(Lkotlinx/coroutines/f$b;)V` @kind virtual;
  #L1532ac.  v3:= v3 + 1;
  #L1532b0.  goto L15329e;
  #L1532b2.  call temp:= `isCompleted`(v0) @signature `Lkotlinx/coroutines/CancellableContinuation;.isCompleted:()Z` @kind interface;
  #L1532b8.  v1:= temp;
  #L1532ba.  if v1 == 0 then goto L1532c6;
  #L1532be.  call `a`(v4) @signature `Lkotlinx/coroutines/f$b;.a:()V` @kind virtual;
  #L1532c4.  goto L1532cc;
  #L1532c6.  call `invokeOnCancellation`(v0, v4) @signature `Lkotlinx/coroutines/CancellableContinuation;.invokeOnCancellation:(Lkotlin/jvm/functions/Function1;)V` @kind interface;
  #L1532cc.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L1532d2.  v0:= temp @kind object;
  #L1532d4.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1532da.  v1:= temp @kind object;
  #L1532dc.  if v0 != v1 then goto L1532e6;
  #L1532e0.  call `probeCoroutineSuspended`(v8) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L1532e6.  return v0 @kind object;
}
