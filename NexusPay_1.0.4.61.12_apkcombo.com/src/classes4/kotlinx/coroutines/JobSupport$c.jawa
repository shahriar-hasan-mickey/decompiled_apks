record `kotlinx.coroutines.JobSupport$c` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.Incomplete` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.JobSupport$c._exceptionsHolder` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `int` `kotlinx.coroutines.JobSupport$c._isCompleting` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.JobSupport$c._rootCause` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `kotlinx.coroutines.NodeList` `kotlinx.coroutines.JobSupport$c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.JobSupport$c` v0 @kind this, `kotlinx.coroutines.NodeList` v1 @kind object, `boolean` v2 , `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport$c;.<init>:(Lkotlinx/coroutines/NodeList;ZLjava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15b424.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15b42a.  v0.`kotlinx.coroutines.JobSupport$c.a` @type ^`kotlinx.coroutines.NodeList` := v1 @kind object;
  #L15b42e.  v0.`kotlinx.coroutines.JobSupport$c._isCompleting` @type ^`int` := v2;
  #L15b432.  v0.`kotlinx.coroutines.JobSupport$c._rootCause` @type ^`java.lang.Object` := v3 @kind object;
  #L15b436.  v1:= 0I;
  #L15b438.  v0.`kotlinx.coroutines.JobSupport$c._exceptionsHolder` @type ^`java.lang.Object` := v1 @kind object;
  #L15b43c.  return @kind void;
}
procedure `java.util.ArrayList` `b`(`kotlinx.coroutines.JobSupport$c` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport$c;.b:()Ljava/util/ArrayList;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L15b344.  v0:= new `java.util.ArrayList`;
  #L15b348.  v1:= 4I;
  #L15b34a.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L15b350.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`kotlinx.coroutines.JobSupport$c` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport$c;.c:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L15b268.  v0:= v1.`kotlinx.coroutines.JobSupport$c._exceptionsHolder` @type ^`java.lang.Object` @kind object;
  #L15b26c.  return v0 @kind object;
}
procedure `void` `j`(`kotlinx.coroutines.JobSupport$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport$c;.j:(Ljava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L15b508.  v0.`kotlinx.coroutines.JobSupport$c._exceptionsHolder` @type ^`java.lang.Object` := v1 @kind object;
  #L15b50c.  return @kind void;
}
procedure `void` `a`(`kotlinx.coroutines.JobSupport$c` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport$c;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15b450.  call temp:= `d`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L15b456.  v0:= temp @kind object;
  #L15b458.  if v0 != 0 then goto L15b464;
  #L15b45c.  call `k`(v2, v3) @signature `Lkotlinx/coroutines/JobSupport$c;.k:(Ljava/lang/Throwable;)V` @kind virtual;
  #L15b462.  return @kind void;
  #L15b464.  if v3 != v0 then goto L15b46a;
  #L15b468.  return @kind void;
  #L15b46a.  call temp:= `c`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.c:()Ljava/lang/Object;` @kind direct;
  #L15b470.  v0:= temp @kind object;
  #L15b472.  if v0 != 0 then goto L15b47e;
  #L15b476.  call `j`(v2, v3) @signature `Lkotlinx/coroutines/JobSupport$c;.j:(Ljava/lang/Object;)V` @kind direct;
  #L15b47c.  goto L15b4be;
  #L15b47e.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L15b482.  if v1 == 0 then goto L15b4ac;
  #L15b486.  if v3 != v0 then goto L15b48c;
  #L15b48a.  return @kind void;
  #L15b48c.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.b:()Ljava/util/ArrayList;` @kind direct;
  #L15b492.  v1:= temp @kind object;
  #L15b494.  call temp:= `add`(v1, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L15b49a.  call temp:= `add`(v1, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L15b4a0.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15b4a4.  call `j`(v2, v1) @signature `Lkotlinx/coroutines/JobSupport$c;.j:(Ljava/lang/Object;)V` @kind direct;
  #L15b4aa.  goto L15b4be;
  #L15b4ac.  v1:= instanceof @variable v0 @type ^`java.util.ArrayList` @kind boolean;
  #L15b4b0.  if v1 == 0 then goto L15b4c0;
  #L15b4b4.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L15b4b8.  call temp:= `add`(v0, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L15b4be.  return @kind void;
  #L15b4c0.  v3:= "State is " @kind object;
  #L15b4c4.  call temp:= `stringPlus`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15b4ca.  v3:= temp @kind object;
  #L15b4cc.  v0:= new `java.lang.IllegalStateException`;
  #L15b4d0.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15b4d6.  v3:= temp @kind object;
  #L15b4d8.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b4de.  throw v0;
}
procedure `java.lang.Throwable` `d`(`kotlinx.coroutines.JobSupport$c` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15b328.  v0:= v1.`kotlinx.coroutines.JobSupport$c._rootCause` @type ^`java.lang.Object` @kind object;
  #L15b32c.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L15b330.  return v0 @kind object;
}
procedure `boolean` `e`(`kotlinx.coroutines.JobSupport$c` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport$c;.e:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15b200.  call temp:= `d`(v1) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L15b206.  v0:= temp @kind object;
  #L15b208.  if v0 == 0 then goto L15b210;
  #L15b20c.  v0:= 1I;
  #L15b20e.  goto L15b212;
  #L15b210.  v0:= 0I;
  #L15b212.  return v0;
}
procedure `boolean` `f`(`kotlinx.coroutines.JobSupport$c` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport$c;.f:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15b224.  v0:= v1.`kotlinx.coroutines.JobSupport$c._isCompleting` @type ^`int`;
  #L15b228.  return v0;
}
procedure `boolean` `g`(`kotlinx.coroutines.JobSupport$c` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport$c;.g:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15b23c.  call temp:= `c`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.c:()Ljava/lang/Object;` @kind direct;
  #L15b242.  v0:= temp @kind object;
  #L15b244.  call temp:= `access$getSEALED$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getSEALED$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15b24a.  v1:= temp @kind object;
  #L15b24c.  if v0 != v1 then goto L15b254;
  #L15b250.  v0:= 1I;
  #L15b252.  goto L15b256;
  #L15b254.  v0:= 0I;
  #L15b256.  return v0;
}
procedure `kotlinx.coroutines.NodeList` `getList`(`kotlinx.coroutines.JobSupport$c` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport$c;.getList:()Lkotlinx/coroutines/NodeList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b40c.  v0:= v1.`kotlinx.coroutines.JobSupport$c.a` @type ^`kotlinx.coroutines.NodeList` @kind object;
  #L15b410.  return v0 @kind object;
}
procedure `java.util.List` `h`(`kotlinx.coroutines.JobSupport$c` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport$c;.h:(Ljava/lang/Throwable;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L15b364.  call temp:= `c`(v3) @signature `Lkotlinx/coroutines/JobSupport$c;.c:()Ljava/lang/Object;` @kind direct;
  #L15b36a.  v0:= temp @kind object;
  #L15b36c.  if v0 != 0 then goto L15b37a;
  #L15b370.  call temp:= `b`(v3) @signature `Lkotlinx/coroutines/JobSupport$c;.b:()Ljava/util/ArrayList;` @kind direct;
  #L15b376.  v0:= temp @kind object;
  #L15b378.  goto L15b3a0;
  #L15b37a.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L15b37e.  if v1 == 0 then goto L15b394;
  #L15b382.  call temp:= `b`(v3) @signature `Lkotlinx/coroutines/JobSupport$c;.b:()Ljava/util/ArrayList;` @kind direct;
  #L15b388.  v1:= temp @kind object;
  #L15b38a.  call temp:= `add`(v1, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L15b390.  v0:= v1 @kind object;
  #L15b392.  goto L15b3a0;
  #L15b394.  v1:= instanceof @variable v0 @type ^`java.util.ArrayList` @kind boolean;
  #L15b398.  if v1 == 0 then goto L15b3dc;
  #L15b39c.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L15b3a0.  call temp:= `d`(v3) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L15b3a6.  v1:= temp @kind object;
  #L15b3a8.  if v1 != 0 then goto L15b3ae;
  #L15b3ac.  goto L15b3b6;
  #L15b3ae.  v2:= 0I;
  #L15b3b0.  call `add`(v0, v2, v1) @signature `Ljava/util/ArrayList;.add:(ILjava/lang/Object;)V` @kind virtual;
  #L15b3b6.  if v4 == 0 then goto L15b3cc;
  #L15b3ba.  call temp:= `areEqual`(v4, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L15b3c0.  v1:= temp;
  #L15b3c2.  if v1 != 0 then goto L15b3cc;
  #L15b3c6.  call temp:= `add`(v0, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L15b3cc.  call temp:= `access$getSEALED$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getSEALED$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15b3d2.  v4:= temp @kind object;
  #L15b3d4.  call `j`(v3, v4) @signature `Lkotlinx/coroutines/JobSupport$c;.j:(Ljava/lang/Object;)V` @kind direct;
  #L15b3da.  return v0 @kind object;
  #L15b3dc.  v4:= "State is " @kind object;
  #L15b3e0.  call temp:= `stringPlus`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15b3e6.  v4:= temp @kind object;
  #L15b3e8.  v0:= new `java.lang.IllegalStateException`;
  #L15b3ec.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15b3f2.  v4:= temp @kind object;
  #L15b3f4.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15b3fa.  throw v0;
}
procedure `void` `i`(`kotlinx.coroutines.JobSupport$c` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/JobSupport$c;.i:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L15b4f0.  v0.`kotlinx.coroutines.JobSupport$c._isCompleting` @type ^`int` := v1;
  #L15b4f4.  return @kind void;
}
procedure `boolean` `isActive`(`kotlinx.coroutines.JobSupport$c` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport$c;.isActive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15b1dc.  call temp:= `d`(v1) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L15b1e2.  v0:= temp @kind object;
  #L15b1e4.  if v0 != 0 then goto L15b1ec;
  #L15b1e8.  v0:= 1I;
  #L15b1ea.  goto L15b1ee;
  #L15b1ec.  v0:= 0I;
  #L15b1ee.  return v0;
}
procedure `void` `k`(`kotlinx.coroutines.JobSupport$c` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport$c;.k:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L15b520.  v0.`kotlinx.coroutines.JobSupport$c._rootCause` @type ^`java.lang.Object` := v1 @kind object;
  #L15b524.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.JobSupport$c` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport$c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15b280.  v0:= new `java.lang.StringBuilder`;
  #L15b284.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15b28a.  v1:= "Finishing[cancelling=" @kind object;
  #L15b28e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b294.  call temp:= `e`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.e:()Z` @kind virtual;
  #L15b29a.  v1:= temp;
  #L15b29c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b2a2.  v1:= ", completing=" @kind object;
  #L15b2a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b2ac.  call temp:= `f`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.f:()Z` @kind virtual;
  #L15b2b2.  v1:= temp;
  #L15b2b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b2ba.  v1:= ", rootCause=" @kind object;
  #L15b2be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b2c4.  call temp:= `d`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L15b2ca.  v1:= temp @kind object;
  #L15b2cc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b2d2.  v1:= ", exceptions=" @kind object;
  #L15b2d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b2dc.  call temp:= `c`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.c:()Ljava/lang/Object;` @kind direct;
  #L15b2e2.  v1:= temp @kind object;
  #L15b2e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b2ea.  v1:= ", list=" @kind object;
  #L15b2ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b2f4.  call temp:= `getList`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.getList:()Lkotlinx/coroutines/NodeList;` @kind virtual;
  #L15b2fa.  v1:= temp @kind object;
  #L15b2fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b302.  v1:= 93I;
  #L15b306.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15b30c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15b312.  v0:= temp @kind object;
  #L15b314.  return v0 @kind object;
}
