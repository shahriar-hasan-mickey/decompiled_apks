record `kotlinx.coroutines.r` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.Incomplete` @kind interface {
  `boolean` `kotlinx.coroutines.r.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.r` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/r;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1588c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1588c6.  v0.`kotlinx.coroutines.r.a` @type ^`boolean` := v1 @kind boolean;
  #L1588ca.  return @kind void;
}
procedure `kotlinx.coroutines.NodeList` `getList`(`kotlinx.coroutines.r` v1 @kind this) @signature `Lkotlinx/coroutines/r;.getList:()Lkotlinx/coroutines/NodeList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1588ac.  v0:= 0I;
  #L1588ae.  return v0 @kind object;
}
procedure `boolean` `isActive`(`kotlinx.coroutines.r` v1 @kind this) @signature `Lkotlinx/coroutines/r;.isActive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L158840.  v0:= v1.`kotlinx.coroutines.r.a` @type ^`boolean` @kind boolean;
  #L158844.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.r` v2 @kind this) @signature `Lkotlinx/coroutines/r;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L158858.  v0:= new `java.lang.StringBuilder`;
  #L15885c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L158862.  v1:= "Empty{" @kind object;
  #L158866.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15886c.  call temp:= `isActive`(v2) @signature `Lkotlinx/coroutines/r;.isActive:()Z` @kind virtual;
  #L158872.  v1:= temp;
  #L158874.  if v1 == 0 then goto L15887e;
  #L158878.  v1:= "Active" @kind object;
  #L15887c.  goto L158882;
  #L15887e.  v1:= "New" @kind object;
  #L158882.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L158888.  v1:= 125I;
  #L15888c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L158892.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L158898.  v0:= temp @kind object;
  #L15889a.  return v0 @kind object;
}
