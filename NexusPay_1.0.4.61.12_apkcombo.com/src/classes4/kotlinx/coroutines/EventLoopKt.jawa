record `kotlinx.coroutines.EventLoopKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlinx.coroutines.EventLoop` `createEventLoop`() @signature `Lkotlinx/coroutines/EventLoopKt;.createEventLoop:()Lkotlinx/coroutines/EventLoop;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L15953c.  v0:= new `kotlinx.coroutines.BlockingEventLoop`;
  #L159540.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L159546.  v1:= temp @kind object;
  #L159548.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/BlockingEventLoop;.<init>:(Ljava/lang/Thread;)V` @kind direct;
  #L15954e.  return v0 @kind object;
}
procedure `long` `processNextEventInCurrentThread`() @signature `Lkotlinx/coroutines/EventLoopKt;.processNextEventInCurrentThread:()J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L159560.  v0:= `@@kotlinx.coroutines.ThreadLocalEventLoop.INSTANCE` @type ^`kotlinx.coroutines.ThreadLocalEventLoop` @kind object;
  #L159564.  call temp:= `currentOrNull$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/ThreadLocalEventLoop;.currentOrNull$kotlinx_coroutines_core:()Lkotlinx/coroutines/EventLoop;` @kind virtual;
  #L15956a.  v0:= temp @kind object;
  #L15956c.  if v0 != 0 then goto L15957c;
  #L159570.  v0:= 9223372036854775807L;
  #L15957a.  goto L159584;
  #L15957c.  call temp:= `processNextEvent`(v0) @signature `Lkotlinx/coroutines/EventLoop;.processNextEvent:()J` @kind virtual;
  #L159582.  v0:= temp @kind wide;
  #L159584.  return v0 @kind wide;
}
