record `kotlinx.coroutines.y` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.n` @kind class {
  `kotlin.coroutines.Continuation` `kotlinx.coroutines.y.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.y` v1 @kind this, `kotlin.coroutines.CoroutineContext` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlinx/coroutines/y;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15d87c.  v0:= 0I;
  #L15d87e.  call `<init>`(v1, v2, v0) @signature `Lkotlinx/coroutines/n;.<init>:(Lkotlin/coroutines/CoroutineContext;Z)V` @kind direct;
  #L15d884.  call temp:= `createCoroutineUnintercepted`(v3, v1, v1) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.createCoroutineUnintercepted:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L15d88a.  v2:= temp @kind object;
  #L15d88c.  v1.`kotlinx.coroutines.y.c` @type ^`kotlin.coroutines.Continuation` := v2 @kind object;
  #L15d890.  return @kind void;
}
procedure `void` `onStart`(`kotlinx.coroutines.y` v1 @kind this) @signature `Lkotlinx/coroutines/y;.onStart:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L15d8a4.  v0:= v1.`kotlinx.coroutines.y.c` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L15d8a8.  call `startCoroutineCancellable`(v0, v1) @signature `Lkotlinx/coroutines/intrinsics/CancellableKt;.startCoroutineCancellable:(Lkotlin/coroutines/Continuation;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L15d8ae.  return @kind void;
}
