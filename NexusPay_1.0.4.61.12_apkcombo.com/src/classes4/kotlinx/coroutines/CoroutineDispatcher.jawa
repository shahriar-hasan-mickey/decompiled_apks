record `kotlinx.coroutines.CoroutineDispatcher` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.coroutines.AbstractCoroutineContextElement` @kind class, `kotlin.coroutines.ContinuationInterceptor` @kind interface {
}
global `kotlinx.coroutines.CoroutineDispatcher$Key` `@@kotlinx.coroutines.CoroutineDispatcher.Key` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CoroutineDispatcher;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L156530.  v0:= new `kotlinx.coroutines.CoroutineDispatcher$Key`;
  #L156534.  v1:= 0I;
  #L156536.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/CoroutineDispatcher$Key;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L15653c.  `@@kotlinx.coroutines.CoroutineDispatcher.Key` @type ^`kotlinx.coroutines.CoroutineDispatcher$Key` := v0 @kind object;
  #L156540.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.CoroutineDispatcher` v1 @kind this) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L156554.  v0:= `@@kotlin.coroutines.ContinuationInterceptor.Key` @type ^`kotlin.coroutines.ContinuationInterceptor$Key` @kind object;
  #L156558.  call `<init>`(v1, v0) @signature `Lkotlin/coroutines/AbstractCoroutineContextElement;.<init>:(Lkotlin/coroutines/CoroutineContext$Key;)V` @kind direct;
  #L15655e.  return @kind void;
}
procedure `void` `dispatch`(`kotlin.coroutines.CoroutineContext` v0 @kind object, `java.lang.Runnable` v1 @kind object) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.dispatch:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `dispatchYield`(`kotlinx.coroutines.CoroutineDispatcher` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.dispatchYield:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;

  #L156570.  call `dispatch`(v0, v1, v2) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.dispatch:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L156576.  return @kind void;
}
procedure `kotlin.coroutines.CoroutineContext$Element` `get`(`kotlinx.coroutines.CoroutineDispatcher` v0 @kind this, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @AccessFlag PUBLIC {
    temp;

  #L156500.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/ContinuationInterceptor$DefaultImpls;.get:(Lkotlin/coroutines/ContinuationInterceptor;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind static;
  #L156506.  v1:= temp @kind object;
  #L156508.  return v1 @kind object;
}
procedure `kotlin.coroutines.Continuation` `interceptContinuation`(`kotlinx.coroutines.CoroutineDispatcher` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.interceptContinuation:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1564c8.  v0:= new `kotlinx.coroutines.internal.DispatchedContinuation`;
  #L1564cc.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.<init>:(Lkotlinx/coroutines/CoroutineDispatcher;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L1564d2.  return v0 @kind object;
}
procedure `boolean` `isDispatchNeeded`(`kotlinx.coroutines.CoroutineDispatcher` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.isDispatchNeeded:(Lkotlin/coroutines/CoroutineContext;)Z` @AccessFlag PUBLIC {
    temp;

  #L156468.  v1:= 1I;
  #L15646a.  return v1;
}
procedure `kotlin.coroutines.CoroutineContext` `minusKey`(`kotlinx.coroutines.CoroutineDispatcher` v0 @kind this, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.minusKey:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;

  #L1564e4.  call temp:= `minusKey`(v0, v1) @signature `Lkotlin/coroutines/ContinuationInterceptor$DefaultImpls;.minusKey:(Lkotlin/coroutines/ContinuationInterceptor;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L1564ea.  v1:= temp @kind object;
  #L1564ec.  return v1 @kind object;
}
procedure `kotlinx.coroutines.CoroutineDispatcher` `plus`(`kotlinx.coroutines.CoroutineDispatcher` v0 @kind this, `kotlinx.coroutines.CoroutineDispatcher` v1 @kind object) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.plus:(Lkotlinx/coroutines/CoroutineDispatcher;)Lkotlinx/coroutines/CoroutineDispatcher;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L15651c.  return v1 @kind object;
}
procedure `void` `releaseInterceptedContinuation`(`kotlinx.coroutines.CoroutineDispatcher` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.releaseInterceptedContinuation:(Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC {
    temp;

  #L156588.  v1:= (`kotlinx.coroutines.internal.DispatchedContinuation`) v1 @kind object;
  #L15658c.  call `release`(v1) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.release:()V` @kind virtual;
  #L156592.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.CoroutineDispatcher` v2 @kind this) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15647c.  v0:= new `java.lang.StringBuilder`;
  #L156480.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L156486.  call temp:= `getClassSimpleName`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15648c.  v1:= temp @kind object;
  #L15648e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L156494.  v1:= 64I;
  #L156498.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15649e.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1564a4.  v1:= temp @kind object;
  #L1564a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1564ac.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1564b2.  v0:= temp @kind object;
  #L1564b4.  return v0 @kind object;
}
