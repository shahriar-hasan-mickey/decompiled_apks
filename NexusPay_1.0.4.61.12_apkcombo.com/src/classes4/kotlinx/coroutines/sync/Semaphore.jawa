record `kotlinx.coroutines.sync.Semaphore` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `java.lang.Object` `acquire`(`kotlin.coroutines.Continuation` v0 @kind object) @signature `Lkotlinx/coroutines/sync/Semaphore;.acquire:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getAvailablePermits`() @signature `Lkotlinx/coroutines/sync/Semaphore;.getAvailablePermits:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `release`() @signature `Lkotlinx/coroutines/sync/Semaphore;.release:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `tryAcquire`() @signature `Lkotlinx/coroutines/sync/Semaphore;.tryAcquire:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
