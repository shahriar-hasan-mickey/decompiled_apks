record `kotlinx.coroutines.sync.MutexKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlinx.coroutines.internal.Symbol` `@@kotlinx.coroutines.sync.MutexKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.Symbol` `@@kotlinx.coroutines.sync.MutexKt.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.Symbol` `@@kotlinx.coroutines.sync.MutexKt.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.Symbol` `@@kotlinx.coroutines.sync.MutexKt.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.Symbol` `@@kotlinx.coroutines.sync.MutexKt.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.sync.b` `@@kotlinx.coroutines.sync.MutexKt.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.sync.b` `@@kotlinx.coroutines.sync.MutexKt.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/sync/MutexKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1901ec.  v0:= new `kotlinx.coroutines.internal.Symbol`;
  #L1901f0.  v1:= "LOCK_FAIL" @kind object;
  #L1901f4.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1901fa.  `@@kotlinx.coroutines.sync.MutexKt.a` @type ^`kotlinx.coroutines.internal.Symbol` := v0 @kind object;
  #L1901fe.  v0:= new `kotlinx.coroutines.internal.Symbol`;
  #L190202.  v1:= "UNLOCK_FAIL" @kind object;
  #L190206.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19020c.  `@@kotlinx.coroutines.sync.MutexKt.b` @type ^`kotlinx.coroutines.internal.Symbol` := v0 @kind object;
  #L190210.  v0:= new `kotlinx.coroutines.internal.Symbol`;
  #L190214.  v1:= "SELECT_SUCCESS" @kind object;
  #L190218.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19021e.  `@@kotlinx.coroutines.sync.MutexKt.c` @type ^`kotlinx.coroutines.internal.Symbol` := v0 @kind object;
  #L190222.  v0:= new `kotlinx.coroutines.internal.Symbol`;
  #L190226.  v1:= "LOCKED" @kind object;
  #L19022a.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L190230.  `@@kotlinx.coroutines.sync.MutexKt.d` @type ^`kotlinx.coroutines.internal.Symbol` := v0 @kind object;
  #L190234.  v0:= new `kotlinx.coroutines.internal.Symbol`;
  #L190238.  v1:= "UNLOCKED" @kind object;
  #L19023c.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L190242.  `@@kotlinx.coroutines.sync.MutexKt.e` @type ^`kotlinx.coroutines.internal.Symbol` := v0 @kind object;
  #L190246.  v0:= new `kotlinx.coroutines.sync.b`;
  #L19024a.  v1:= `@@kotlinx.coroutines.sync.MutexKt.d` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L19024e.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/sync/b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L190254.  `@@kotlinx.coroutines.sync.MutexKt.f` @type ^`kotlinx.coroutines.sync.b` := v0 @kind object;
  #L190258.  v0:= new `kotlinx.coroutines.sync.b`;
  #L19025c.  v1:= `@@kotlinx.coroutines.sync.MutexKt.e` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L190260.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/sync/b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L190266.  `@@kotlinx.coroutines.sync.MutexKt.g` @type ^`kotlinx.coroutines.sync.b` := v0 @kind object;
  #L19026a.  return @kind void;
}
procedure `kotlinx.coroutines.sync.Mutex` `Mutex`(`boolean` v1 ) @signature `Lkotlinx/coroutines/sync/MutexKt;.Mutex:(Z)Lkotlinx/coroutines/sync/Mutex;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1901d0.  v0:= new `kotlinx.coroutines.sync.MutexImpl`;
  #L1901d4.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/sync/MutexImpl;.<init>:(Z)V` @kind direct;
  #L1901da.  return v0 @kind object;
}
procedure `kotlinx.coroutines.sync.Mutex` `Mutex$default`(`boolean` v0 , `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/sync/MutexKt;.Mutex$default:(ZILjava/lang/Object;)Lkotlinx/coroutines/sync/Mutex;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1901ac.  v1:= v1 ^& 1;
  #L1901b0.  if v1 == 0 then goto L1901b6;
  #L1901b4.  v0:= 0I;
  #L1901b6.  call temp:= `Mutex`(v0) @signature `Lkotlinx/coroutines/sync/MutexKt;.Mutex:(Z)Lkotlinx/coroutines/sync/Mutex;` @kind static;
  #L1901bc.  v0:= temp @kind object;
  #L1901be.  return v0 @kind object;
}
procedure `kotlinx.coroutines.sync.b` `access$getEMPTY_LOCKED$p`() @signature `Lkotlinx/coroutines/sync/MutexKt;.access$getEMPTY_LOCKED$p:()Lkotlinx/coroutines/sync/b;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L19017c.  v0:= `@@kotlinx.coroutines.sync.MutexKt.f` @type ^`kotlinx.coroutines.sync.b` @kind object;
  #L190180.  return v0 @kind object;
}
procedure `kotlinx.coroutines.sync.b` `access$getEMPTY_UNLOCKED$p`() @signature `Lkotlinx/coroutines/sync/MutexKt;.access$getEMPTY_UNLOCKED$p:()Lkotlinx/coroutines/sync/b;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L190194.  v0:= `@@kotlinx.coroutines.sync.MutexKt.g` @type ^`kotlinx.coroutines.sync.b` @kind object;
  #L190198.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.Symbol` `access$getLOCKED$p`() @signature `Lkotlinx/coroutines/sync/MutexKt;.access$getLOCKED$p:()Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L190104.  v0:= `@@kotlinx.coroutines.sync.MutexKt.d` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L190108.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.Symbol` `access$getLOCK_FAIL$p`() @signature `Lkotlinx/coroutines/sync/MutexKt;.access$getLOCK_FAIL$p:()Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L19011c.  v0:= `@@kotlinx.coroutines.sync.MutexKt.a` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L190120.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.Symbol` `access$getSELECT_SUCCESS$p`() @signature `Lkotlinx/coroutines/sync/MutexKt;.access$getSELECT_SUCCESS$p:()Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L190134.  v0:= `@@kotlinx.coroutines.sync.MutexKt.c` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L190138.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.Symbol` `access$getUNLOCKED$p`() @signature `Lkotlinx/coroutines/sync/MutexKt;.access$getUNLOCKED$p:()Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L19014c.  v0:= `@@kotlinx.coroutines.sync.MutexKt.e` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L190150.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.Symbol` `access$getUNLOCK_FAIL$p`() @signature `Lkotlinx/coroutines/sync/MutexKt;.access$getUNLOCK_FAIL$p:()Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L190164.  v0:= `@@kotlinx.coroutines.sync.MutexKt.b` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L190168.  return v0 @kind object;
}
procedure `java.lang.Object` `withLock`(`kotlinx.coroutines.sync.Mutex` v4 @kind object, `java.lang.Object` v5 @kind object, `kotlin.jvm.functions.Function0` v6 @kind object, `kotlin.coroutines.Continuation` v7 @kind object) @signature `Lkotlinx/coroutines/sync/MutexKt;.withLock:(Lkotlinx/coroutines/sync/Mutex;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L190018.  v0:= instanceof @variable v7 @type ^`kotlinx.coroutines.sync.MutexKt$a` @kind boolean;
  #L19001c.  if v0 == 0 then goto L19003e;
  #L190020.  v0:= v7 @kind object;
  #L190022.  v0:= (`kotlinx.coroutines.sync.MutexKt$a`) v0 @kind object;
  #L190026.  v1:= v0.`kotlinx.coroutines.sync.MutexKt$a.e` @type ^`int`;
  #L19002a.  v2:= -2147483648I;
  #L19002e.  v3:= v1 ^& v2 @kind int;
  #L190032.  if v3 == 0 then goto L19003e;
  #L190036.  v1:= v1 - v2 @kind int;
  #L190038.  v0.`kotlinx.coroutines.sync.MutexKt$a.e` @type ^`int` := v1;
  #L19003c.  goto L190048;
  #L19003e.  v0:= new `kotlinx.coroutines.sync.MutexKt$a`;
  #L190042.  call `<init>`(v0, v7) @signature `Lkotlinx/coroutines/sync/MutexKt$a;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L190048.  v7:= v0.`kotlinx.coroutines.sync.MutexKt$a.d` @type ^`java.lang.Object` @kind object;
  #L19004c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L190052.  v1:= temp @kind object;
  #L190054.  v2:= v0.`kotlinx.coroutines.sync.MutexKt$a.e` @type ^`int`;
  #L190058.  v3:= 1I;
  #L19005a.  if v2 == 0 then goto L190090;
  #L19005e.  if v2 != v3 then goto L190080;
  #L190062.  v4:= v0.`kotlinx.coroutines.sync.MutexKt$a.c` @type ^`java.lang.Object` @kind object;
  #L190066.  v6:= v4 @kind object;
  #L190068.  v6:= (`kotlin.jvm.functions.Function0`) v6 @kind object;
  #L19006c.  v5:= v0.`kotlinx.coroutines.sync.MutexKt$a.b` @type ^`java.lang.Object` @kind object;
  #L190070.  v4:= v0.`kotlinx.coroutines.sync.MutexKt$a.a` @type ^`java.lang.Object` @kind object;
  #L190074.  v4:= (`kotlinx.coroutines.sync.Mutex`) v4 @kind object;
  #L190078.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L19007e.  goto L1900b4;
  #L190080.  v4:= new `java.lang.IllegalStateException`;
  #L190084.  v5:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L190088.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19008e.  throw v4;
  #L190090.  call `throwOnFailure`(v7) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L190096.  v0.`kotlinx.coroutines.sync.MutexKt$a.a` @type ^`java.lang.Object` := v4 @kind object;
  #L19009a.  v0.`kotlinx.coroutines.sync.MutexKt$a.b` @type ^`java.lang.Object` := v5 @kind object;
  #L19009e.  v0.`kotlinx.coroutines.sync.MutexKt$a.c` @type ^`java.lang.Object` := v6 @kind object;
  #L1900a2.  v0.`kotlinx.coroutines.sync.MutexKt$a.e` @type ^`int` := v3;
  #L1900a6.  call temp:= `lock`(v4, v5, v0) @signature `Lkotlinx/coroutines/sync/Mutex;.lock:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L1900ac.  v7:= temp @kind object;
  #L1900ae.  if v7 != v1 then goto L1900b4;
  #L1900b2.  return v1 @kind object;
  #L1900b4.  call temp:= `invoke`(v6) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L1900ba.  v6:= temp @kind object;
  #L1900bc.  call `finallyStart`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L1900c2.  call `unlock`(v4, v5) @signature `Lkotlinx/coroutines/sync/Mutex;.unlock:(Ljava/lang/Object;)V` @kind interface;
  #L1900c8.  call `finallyEnd`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L1900ce.  return v6 @kind object;
  #L1900d0.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1900d2.  call `finallyStart`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L1900d8.  call `unlock`(v4, v5) @signature `Lkotlinx/coroutines/sync/Mutex;.unlock:(Ljava/lang/Object;)V` @kind interface;
  #L1900de.  call `finallyEnd`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L1900e4.  throw v6;
  catch `java.lang.Throwable` @[L1900b4..L1900bc] goto L1900d0;
}
procedure `java.lang.Object` `withLock$default`(`kotlinx.coroutines.sync.Mutex` v0 @kind object, `java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function0` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/sync/MutexKt;.withLock$default:(Lkotlinx/coroutines/sync/Mutex;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L18ffac.  v5:= 1I;
  #L18ffae.  v4:= v4 ^& v5 @kind int;
  #L18ffb0.  if v4 == 0 then goto L18ffb6;
  #L18ffb4.  v1:= 0I;
  #L18ffb6.  v4:= 0I;
  #L18ffb8.  call `mark`(v4) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L18ffbe.  call temp:= `lock`(v0, v1, v3) @signature `Lkotlinx/coroutines/sync/Mutex;.lock:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L18ffc4.  call `mark`(v5) @signature `Lkotlin/jvm/internal/InlineMarker;.mark:(I)V` @kind static;
  #L18ffca.  call temp:= `invoke`(v2) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L18ffd0.  v2:= temp @kind object;
  #L18ffd2.  call `finallyStart`(v5) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L18ffd8.  call `unlock`(v0, v1) @signature `Lkotlinx/coroutines/sync/Mutex;.unlock:(Ljava/lang/Object;)V` @kind interface;
  #L18ffde.  call `finallyEnd`(v5) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L18ffe4.  return v2 @kind object;
  #L18ffe6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L18ffe8.  call `finallyStart`(v5) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L18ffee.  call `unlock`(v0, v1) @signature `Lkotlinx/coroutines/sync/Mutex;.unlock:(Ljava/lang/Object;)V` @kind interface;
  #L18fff4.  call `finallyEnd`(v5) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L18fffa.  throw v2;
  catch `java.lang.Throwable` @[L18ffca..L18ffd2] goto L18ffe6;
}
