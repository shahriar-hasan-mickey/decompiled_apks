record `kotlinx.coroutines.sync.SemaphoreKt$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.ContinuationImpl` @kind class {
  `java.lang.Object` `kotlinx.coroutines.sync.SemaphoreKt$a.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.sync.SemaphoreKt$a.b` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.sync.SemaphoreKt$a.c` @AccessFlag SYNTHETIC;
  `int` `kotlinx.coroutines.sync.SemaphoreKt$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`kotlinx.coroutines.sync.SemaphoreKt$a` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/sync/SemaphoreKt$a;.<init>:(Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L190a60.  call `<init>`(v0, v1) @signature `Lkotlin/coroutines/jvm/internal/ContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L190a66.  return @kind void;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.sync.SemaphoreKt$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/sync/SemaphoreKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L190a30.  v1.`kotlinx.coroutines.sync.SemaphoreKt$a.c` @type ^`java.lang.Object` := v2 @kind object;
  #L190a34.  v2:= v1.`kotlinx.coroutines.sync.SemaphoreKt$a.d` @type ^`int`;
  #L190a38.  v0:= -2147483648I;
  #L190a3c.  v2:= v2 ^| v0 @kind int;
  #L190a3e.  v1.`kotlinx.coroutines.sync.SemaphoreKt$a.d` @type ^`int` := v2;
  #L190a42.  v2:= 0I;
  #L190a44.  call temp:= `withPermit`(v2, v2, v1) @signature `Lkotlinx/coroutines/sync/SemaphoreKt;.withPermit:(Lkotlinx/coroutines/sync/Semaphore;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L190a4a.  v2:= temp @kind object;
  #L190a4c.  return v2 @kind object;
}
