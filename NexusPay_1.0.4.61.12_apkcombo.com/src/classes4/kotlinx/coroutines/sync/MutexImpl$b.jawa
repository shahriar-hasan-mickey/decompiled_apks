record `kotlinx.coroutines.sync.MutexImpl$b` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.sync.MutexImpl$c` @kind class {
  `kotlinx.coroutines.selects.SelectInstance` `kotlinx.coroutines.sync.MutexImpl$b.e` @AccessFlag PUBLIC_FINAL;
  `kotlin.jvm.functions.Function2` `kotlinx.coroutines.sync.MutexImpl$b.f` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.sync.MutexImpl` `kotlinx.coroutines.sync.MutexImpl$b.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.sync.MutexImpl$b` v0 @kind this, `kotlinx.coroutines.sync.MutexImpl` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlinx.coroutines.selects.SelectInstance` v3 @kind object, `kotlin.jvm.functions.Function2` v4 @kind object) @signature `Lkotlinx/coroutines/sync/MutexImpl$b;.<init>:(Lkotlinx/coroutines/sync/MutexImpl;Ljava/lang/Object;Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L18f2b4.  v0.`kotlinx.coroutines.sync.MutexImpl$b.g` @type ^`kotlinx.coroutines.sync.MutexImpl` := v1 @kind object;
  #L18f2b8.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/sync/MutexImpl$c;.<init>:(Lkotlinx/coroutines/sync/MutexImpl;Ljava/lang/Object;)V` @kind direct;
  #L18f2be.  v0.`kotlinx.coroutines.sync.MutexImpl$b.e` @type ^`kotlinx.coroutines.selects.SelectInstance` := v3 @kind object;
  #L18f2c2.  v0.`kotlinx.coroutines.sync.MutexImpl$b.f` @type ^`kotlin.jvm.functions.Function2` := v4 @kind object;
  #L18f2c6.  return @kind void;
}
procedure `void` `e`(`kotlinx.coroutines.sync.MutexImpl$b` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/sync/MutexImpl$b;.e:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L18f2d8.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L18f2de.  v0:= temp;
  #L18f2e0.  if v0 == 0 then goto L18f308;
  #L18f2e4.  call temp:= `access$getSELECT_SUCCESS$p`() @signature `Lkotlinx/coroutines/sync/MutexKt;.access$getSELECT_SUCCESS$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L18f2ea.  v0:= temp @kind object;
  #L18f2ec.  if v5 != v0 then goto L18f2f4;
  #L18f2f0.  v5:= 1I;
  #L18f2f2.  goto L18f2f6;
  #L18f2f4.  v5:= 0I;
  #L18f2f6.  if v5 == 0 then goto L18f2fc;
  #L18f2fa.  goto L18f308;
  #L18f2fc.  v5:= new `java.lang.AssertionError`;
  #L18f300.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L18f306.  throw v5;
  #L18f308.  v5:= v4.`kotlinx.coroutines.sync.MutexImpl$b.f` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L18f30c.  v0:= v4.`kotlinx.coroutines.sync.MutexImpl$b.g` @type ^`kotlinx.coroutines.sync.MutexImpl` @kind object;
  #L18f310.  v1:= v4.`kotlinx.coroutines.sync.MutexImpl$b.e` @type ^`kotlinx.coroutines.selects.SelectInstance` @kind object;
  #L18f314.  call temp:= `getCompletion`(v1) @signature `Lkotlinx/coroutines/selects/SelectInstance;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind interface;
  #L18f31a.  v1:= temp @kind object;
  #L18f31c.  v2:= new `kotlinx.coroutines.sync.MutexImpl$b$a`;
  #L18f320.  v3:= v4.`kotlinx.coroutines.sync.MutexImpl$b.g` @type ^`kotlinx.coroutines.sync.MutexImpl` @kind object;
  #L18f324.  call `<init>`(v2, v3, v4) @signature `Lkotlinx/coroutines/sync/MutexImpl$b$a;.<init>:(Lkotlinx/coroutines/sync/MutexImpl;Lkotlinx/coroutines/sync/MutexImpl$b;)V` @kind direct;
  #L18f32a.  call `startCoroutineCancellable`(v5, v0, v1, v2) @signature `Lkotlinx/coroutines/intrinsics/CancellableKt;.startCoroutineCancellable:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function1;)V` @kind static;
  #L18f330.  return @kind void;
}
procedure `java.lang.Object` `f`(`kotlinx.coroutines.sync.MutexImpl$b` v1 @kind this) @signature `Lkotlinx/coroutines/sync/MutexImpl$b;.f:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f224.  v0:= v1.`kotlinx.coroutines.sync.MutexImpl$b.e` @type ^`kotlinx.coroutines.selects.SelectInstance` @kind object;
  #L18f228.  call temp:= `trySelect`(v0) @signature `Lkotlinx/coroutines/selects/SelectInstance;.trySelect:()Z` @kind interface;
  #L18f22e.  v0:= temp;
  #L18f230.  if v0 == 0 then goto L18f23e;
  #L18f234.  call temp:= `access$getSELECT_SUCCESS$p`() @signature `Lkotlinx/coroutines/sync/MutexKt;.access$getSELECT_SUCCESS$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L18f23a.  v0:= temp @kind object;
  #L18f23c.  goto L18f240;
  #L18f23e.  v0:= 0I;
  #L18f240.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.sync.MutexImpl$b` v2 @kind this) @signature `Lkotlinx/coroutines/sync/MutexImpl$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18f254.  v0:= new `java.lang.StringBuilder`;
  #L18f258.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L18f25e.  v1:= "LockSelect[" @kind object;
  #L18f262.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18f268.  v1:= v2.`kotlinx.coroutines.sync.MutexImpl$c.d` @type ^`java.lang.Object` @kind object;
  #L18f26c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18f272.  v1:= ", " @kind object;
  #L18f276.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18f27c.  v1:= v2.`kotlinx.coroutines.sync.MutexImpl$b.e` @type ^`kotlinx.coroutines.selects.SelectInstance` @kind object;
  #L18f280.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18f286.  v1:= "] for " @kind object;
  #L18f28a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18f290.  v1:= v2.`kotlinx.coroutines.sync.MutexImpl$b.g` @type ^`kotlinx.coroutines.sync.MutexImpl` @kind object;
  #L18f294.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18f29a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L18f2a0.  v0:= temp @kind object;
  #L18f2a2.  return v0 @kind object;
}
