record `kotlinx.coroutines.sync.MutexImpl$registerSelectClause2$$inlined$addLastIf$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp` @kind class {
  `kotlinx.coroutines.sync.MutexImpl` `kotlinx.coroutines.sync.MutexImpl$registerSelectClause2$$inlined$addLastIf$1.b` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.sync.MutexImpl$registerSelectClause2$$inlined$addLastIf$1.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.sync.MutexImpl$registerSelectClause2$$inlined$addLastIf$1` v0 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v1 @kind object, `kotlinx.coroutines.sync.MutexImpl` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/sync/MutexImpl$registerSelectClause2$$inlined$addLastIf$1;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/sync/MutexImpl;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L18f710.  v0.`kotlinx.coroutines.sync.MutexImpl$registerSelectClause2$$inlined$addLastIf$1.b` @type ^`kotlinx.coroutines.sync.MutexImpl` := v2 @kind object;
  #L18f714.  v0.`kotlinx.coroutines.sync.MutexImpl$registerSelectClause2$$inlined$addLastIf$1.c` @type ^`java.lang.Object` := v3 @kind object;
  #L18f718.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode$CondAddOp;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)V` @kind direct;
  #L18f71e.  return @kind void;
}
procedure `java.lang.Object` `prepare`(`kotlinx.coroutines.sync.MutexImpl$registerSelectClause2$$inlined$addLastIf$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/sync/MutexImpl$registerSelectClause2$$inlined$addLastIf$1;.prepare:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L18f6b8.  v1:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v1 @kind object;
  #L18f6bc.  call temp:= `prepare`(v0, v1) @signature `Lkotlinx/coroutines/sync/MutexImpl$registerSelectClause2$$inlined$addLastIf$1;.prepare:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Ljava/lang/Object;` @kind virtual;
  #L18f6c2.  v1:= temp @kind object;
  #L18f6c4.  return v1 @kind object;
}
procedure `java.lang.Object` `prepare`(`kotlinx.coroutines.sync.MutexImpl$registerSelectClause2$$inlined$addLastIf$1` v1 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v2 @kind object) @signature `Lkotlinx/coroutines/sync/MutexImpl$registerSelectClause2$$inlined$addLastIf$1;.prepare:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f6d8.  v2:= v1.`kotlinx.coroutines.sync.MutexImpl$registerSelectClause2$$inlined$addLastIf$1.b` @type ^`kotlinx.coroutines.sync.MutexImpl` @kind object;
  #L18f6dc.  v2:= v2.`kotlinx.coroutines.sync.MutexImpl._state` @type ^`java.lang.Object` @kind object;
  #L18f6e0.  v0:= v1.`kotlinx.coroutines.sync.MutexImpl$registerSelectClause2$$inlined$addLastIf$1.c` @type ^`java.lang.Object` @kind object;
  #L18f6e4.  if v2 != v0 then goto L18f6ec;
  #L18f6e8.  v2:= 1I;
  #L18f6ea.  goto L18f6ee;
  #L18f6ec.  v2:= 0I;
  #L18f6ee.  if v2 == 0 then goto L18f6f6;
  #L18f6f2.  v2:= 0I;
  #L18f6f4.  goto L18f6fe;
  #L18f6f6.  call temp:= `getCONDITION_FALSE`() @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListKt;.getCONDITION_FALSE:()Ljava/lang/Object;` @kind static;
  #L18f6fc.  v2:= temp @kind object;
  #L18f6fe.  return v2 @kind object;
}
