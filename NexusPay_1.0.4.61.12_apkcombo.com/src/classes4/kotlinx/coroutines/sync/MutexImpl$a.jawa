record `kotlinx.coroutines.sync.MutexImpl$a` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.sync.MutexImpl$c` @kind class {
  `kotlinx.coroutines.CancellableContinuation` `kotlinx.coroutines.sync.MutexImpl$a.e` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.sync.MutexImpl` `kotlinx.coroutines.sync.MutexImpl$a.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.sync.MutexImpl$a` v0 @kind this, `kotlinx.coroutines.sync.MutexImpl` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlinx.coroutines.CancellableContinuation` v3 @kind object) @signature `Lkotlinx/coroutines/sync/MutexImpl$a;.<init>:(Lkotlinx/coroutines/sync/MutexImpl;Ljava/lang/Object;Lkotlinx/coroutines/CancellableContinuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L18f180.  v0.`kotlinx.coroutines.sync.MutexImpl$a.f` @type ^`kotlinx.coroutines.sync.MutexImpl` := v1 @kind object;
  #L18f184.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/sync/MutexImpl$c;.<init>:(Lkotlinx/coroutines/sync/MutexImpl;Ljava/lang/Object;)V` @kind direct;
  #L18f18a.  v0.`kotlinx.coroutines.sync.MutexImpl$a.e` @type ^`kotlinx.coroutines.CancellableContinuation` := v3 @kind object;
  #L18f18e.  return @kind void;
}
procedure `void` `e`(`kotlinx.coroutines.sync.MutexImpl$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/sync/MutexImpl$a;.e:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18f1a0.  v0:= v1.`kotlinx.coroutines.sync.MutexImpl$a.e` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L18f1a4.  call `completeResume`(v0, v2) @signature `Lkotlinx/coroutines/CancellableContinuation;.completeResume:(Ljava/lang/Object;)V` @kind interface;
  #L18f1aa.  return @kind void;
}
procedure `java.lang.Object` `f`(`kotlinx.coroutines.sync.MutexImpl$a` v4 @kind this) @signature `Lkotlinx/coroutines/sync/MutexImpl$a;.f:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L18f0ec.  v0:= v4.`kotlinx.coroutines.sync.MutexImpl$a.e` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L18f0f0.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L18f0f4.  v2:= new `kotlinx.coroutines.sync.MutexImpl$a$a`;
  #L18f0f8.  v3:= v4.`kotlinx.coroutines.sync.MutexImpl$a.f` @type ^`kotlinx.coroutines.sync.MutexImpl` @kind object;
  #L18f0fc.  call `<init>`(v2, v3, v4) @signature `Lkotlinx/coroutines/sync/MutexImpl$a$a;.<init>:(Lkotlinx/coroutines/sync/MutexImpl;Lkotlinx/coroutines/sync/MutexImpl$a;)V` @kind direct;
  #L18f102.  v3:= 0I;
  #L18f104.  call temp:= `tryResume`(v0, v1, v3, v2) @signature `Lkotlinx/coroutines/CancellableContinuation;.tryResume:(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @kind interface;
  #L18f10a.  v0:= temp @kind object;
  #L18f10c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.sync.MutexImpl$a` v2 @kind this) @signature `Lkotlinx/coroutines/sync/MutexImpl$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18f120.  v0:= new `java.lang.StringBuilder`;
  #L18f124.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L18f12a.  v1:= "LockCont[" @kind object;
  #L18f12e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18f134.  v1:= v2.`kotlinx.coroutines.sync.MutexImpl$c.d` @type ^`java.lang.Object` @kind object;
  #L18f138.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18f13e.  v1:= ", " @kind object;
  #L18f142.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18f148.  v1:= v2.`kotlinx.coroutines.sync.MutexImpl$a.e` @type ^`kotlinx.coroutines.CancellableContinuation` @kind object;
  #L18f14c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18f152.  v1:= "] for " @kind object;
  #L18f156.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18f15c.  v1:= v2.`kotlinx.coroutines.sync.MutexImpl$a.f` @type ^`kotlinx.coroutines.sync.MutexImpl` @kind object;
  #L18f160.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18f166.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L18f16c.  v0:= temp @kind object;
  #L18f16e.  return v0 @kind object;
}
