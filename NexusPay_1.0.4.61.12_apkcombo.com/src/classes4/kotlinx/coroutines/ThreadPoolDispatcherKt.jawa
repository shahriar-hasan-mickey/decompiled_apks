record `kotlinx.coroutines.ThreadPoolDispatcherKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlinx.coroutines.ExecutorCoroutineDispatcher` `newFixedThreadPoolContext`(`int` v1 , `java.lang.String` v2 @kind object) @signature `Lkotlinx/coroutines/ThreadPoolDispatcherKt;.newFixedThreadPoolContext:(ILjava/lang/String;)Lkotlinx/coroutines/ExecutorCoroutineDispatcher;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L15e5ac.  v0:= 1I;
  #L15e5ae.  if v1 < v0 then goto L15e5b4;
  #L15e5b2.  goto L15e5b6;
  #L15e5b4.  v0:= 0I;
  #L15e5b6.  if v0 == 0 then goto L15e5c6;
  #L15e5ba.  v0:= new `kotlinx.coroutines.ThreadPoolDispatcher`;
  #L15e5be.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/ThreadPoolDispatcher;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L15e5c4.  return v0 @kind object;
  #L15e5c6.  v2:= new `java.lang.StringBuilder`;
  #L15e5ca.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15e5d0.  v0:= "Expected at least one thread, but " @kind object;
  #L15e5d4.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e5da.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e5e0.  v1:= " specified" @kind object;
  #L15e5e4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15e5ea.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15e5f0.  v1:= temp @kind object;
  #L15e5f2.  v2:= new `java.lang.IllegalArgumentException`;
  #L15e5f6.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15e5fc.  v1:= temp @kind object;
  #L15e5fe.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15e604.  throw v2;
}
procedure `kotlinx.coroutines.ExecutorCoroutineDispatcher` `newSingleThreadContext`(`java.lang.String` v1 @kind object) @signature `Lkotlinx/coroutines/ThreadPoolDispatcherKt;.newSingleThreadContext:(Ljava/lang/String;)Lkotlinx/coroutines/ExecutorCoroutineDispatcher;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L15e618.  v0:= 1I;
  #L15e61a.  call temp:= `newFixedThreadPoolContext`(v0, v1) @signature `Lkotlinx/coroutines/ThreadPoolDispatcherKt;.newFixedThreadPoolContext:(ILjava/lang/String;)Lkotlinx/coroutines/ExecutorCoroutineDispatcher;` @kind static;
  #L15e620.  v1:= temp @kind object;
  #L15e622.  return v1 @kind object;
}
