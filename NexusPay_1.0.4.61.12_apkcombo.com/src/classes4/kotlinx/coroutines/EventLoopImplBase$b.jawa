record `kotlinx.coroutines.EventLoopImplBase$b` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.EventLoopImplBase$DelayedTask` @kind class {
  `java.lang.Runnable` `kotlinx.coroutines.EventLoopImplBase$b.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.EventLoopImplBase$b` v0 @kind this, `long` v1 , `java.lang.Runnable` v3 @kind object) @signature `Lkotlinx/coroutines/EventLoopImplBase$b;.<init>:(JLjava/lang/Runnable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L158970.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.<init>:(J)V` @kind direct;
  #L158976.  v0.`kotlinx.coroutines.EventLoopImplBase$b.c` @type ^`java.lang.Runnable` := v3 @kind object;
  #L15897a.  return @kind void;
}
procedure `void` `run`(`kotlinx.coroutines.EventLoopImplBase$b` v1 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase$b;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15898c.  v0:= v1.`kotlinx.coroutines.EventLoopImplBase$b.c` @type ^`java.lang.Runnable` @kind object;
  #L158990.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L158996.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.EventLoopImplBase$b` v2 @kind this) @signature `Lkotlinx/coroutines/EventLoopImplBase$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L158948.  call temp:= `toString`(v2) @signature `Lkotlinx/coroutines/EventLoopImplBase$DelayedTask;.toString:()Ljava/lang/String;` @kind super;
  #L15894e.  v0:= temp @kind object;
  #L158950.  v1:= v2.`kotlinx.coroutines.EventLoopImplBase$b.c` @type ^`java.lang.Runnable` @kind object;
  #L158954.  call temp:= `stringPlus`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15895a.  v0:= temp @kind object;
  #L15895c.  return v0 @kind object;
}
