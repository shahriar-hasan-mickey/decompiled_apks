record `kotlinx.coroutines.internal.DispatchedContinuation` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.DispatchedTask` @kind class, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind interface, `kotlin.coroutines.Continuation` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.internal.DispatchedContinuation._state` @AccessFlag PUBLIC;
  `kotlin.coroutines.Continuation` `kotlinx.coroutines.internal.DispatchedContinuation.continuation` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `kotlinx.coroutines.internal.DispatchedContinuation.countOrElement` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.CoroutineDispatcher` `kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @AccessFlag PUBLIC_FINAL;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.internal.DispatchedContinuation.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L185710.  v0:= constclass @type ^`kotlinx.coroutines.internal.DispatchedContinuation` @kind object;
  #L185714.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L185718.  v2:= "_reusableCancellableContinuation" @kind object;
  #L18571c.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L185722.  v0:= temp @kind object;
  #L185724.  `@@kotlinx.coroutines.internal.DispatchedContinuation.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L185728.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.DispatchedContinuation` v1 @kind this, `kotlinx.coroutines.CoroutineDispatcher` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.<init>:(Lkotlinx/coroutines/CoroutineDispatcher;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L18573c.  v0:= -1I;
  #L18573e.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/DispatchedTask;.<init>:(I)V` @kind direct;
  #L185744.  v1.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` := v2 @kind object;
  #L185748.  v1.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` := v3 @kind object;
  #L18574c.  call temp:= `access$getUNDEFINED$p`() @signature `Lkotlinx/coroutines/internal/DispatchedContinuationKt;.access$getUNDEFINED$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L185752.  v2:= temp @kind object;
  #L185754.  v1.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` := v2 @kind object;
  #L185758.  call temp:= `getContext`(v1) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L18575e.  v2:= temp @kind object;
  #L185760.  call temp:= `threadContextElements`(v2) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.threadContextElements:(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/Object;` @kind static;
  #L185766.  v2:= temp @kind object;
  #L185768.  v1.`kotlinx.coroutines.internal.DispatchedContinuation.countOrElement` @type ^`java.lang.Object` := v2 @kind object;
  #L18576c.  v2:= 0I;
  #L18576e.  v1.`kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation` @type ^`java.lang.Object` := v2 @kind object;
  #L185772.  return @kind void;
}
procedure `void` `get_state$kotlinx_coroutines_core$annotations`() @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.get_state$kotlinx_coroutines_core$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1857f4.  return @kind void;
}
procedure `void` `awaitReusability`(`kotlinx.coroutines.internal.DispatchedContinuation` v2 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.awaitReusability:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L185784.  v0:= v2.`kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L185788.  v1:= `@@kotlinx.coroutines.internal.DispatchedContinuationKt.REUSABLE_CLAIMED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L18578c.  if v0 == v1 then goto L185784;
  #L185790.  return @kind void;
}
procedure `void` `cancelCompletedResult$kotlinx_coroutines_core`(`kotlinx.coroutines.internal.DispatchedContinuation` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.cancelCompletedResult$kotlinx_coroutines_core:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1857a4.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.CompletedWithCancellation` @kind boolean;
  #L1857a8.  if v0 == 0 then goto L1857ba;
  #L1857ac.  v2:= (`kotlinx.coroutines.CompletedWithCancellation`) v2 @kind object;
  #L1857b0.  v2:= v2.`kotlinx.coroutines.CompletedWithCancellation.onCancellation` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L1857b4.  call temp:= `invoke`(v2, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1857ba.  return @kind void;
}
procedure `kotlinx.coroutines.CancellableContinuationImpl` `claimReusableCancellableContinuation`(`kotlinx.coroutines.internal.DispatchedContinuation` v3 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.claimReusableCancellableContinuation:()Lkotlinx/coroutines/CancellableContinuationImpl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L18566c.  v0:= v3.`kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L185670.  if v0 != 0 then goto L185680;
  #L185674.  v0:= `@@kotlinx.coroutines.internal.DispatchedContinuationKt.REUSABLE_CLAIMED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L185678.  v3.`kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation` @type ^`java.lang.Object` := v0 @kind object;
  #L18567c.  v0:= 0I;
  #L18567e.  return v0 @kind object;
  #L185680.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CancellableContinuationImpl` @kind boolean;
  #L185684.  if v1 == 0 then goto L1856a2;
  #L185688.  v1:= `@@kotlinx.coroutines.internal.DispatchedContinuation.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L18568c.  v2:= `@@kotlinx.coroutines.internal.DispatchedContinuationKt.REUSABLE_CLAIMED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L185690.  call temp:= `compareAndSet`(v1, v3, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L185696.  v1:= temp;
  #L185698.  if v1 == 0 then goto L18566c;
  #L18569c.  v0:= (`kotlinx.coroutines.CancellableContinuationImpl`) v0 @kind object;
  #L1856a0.  return v0 @kind object;
  #L1856a2.  v1:= `@@kotlinx.coroutines.internal.DispatchedContinuationKt.REUSABLE_CLAIMED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L1856a6.  if v0 != v1 then goto L1856ac;
  #L1856aa.  goto L18566c;
  #L1856ac.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L1856b0.  if v1 == 0 then goto L1856b6;
  #L1856b4.  goto L18566c;
  #L1856b6.  v1:= "Inconsistent state " @kind object;
  #L1856ba.  call temp:= `stringPlus`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1856c0.  v0:= temp @kind object;
  #L1856c2.  v1:= new `java.lang.IllegalStateException`;
  #L1856c6.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1856cc.  v0:= temp @kind object;
  #L1856ce.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1856d4.  throw v1;
}
procedure `void` `dispatchYield$kotlinx_coroutines_core`(`kotlinx.coroutines.internal.DispatchedContinuation` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.dispatchYield$kotlinx_coroutines_core:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1857cc.  v0.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` := v2 @kind object;
  #L1857d0.  v2:= 1I;
  #L1857d2.  v0.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int` := v2;
  #L1857d6.  v2:= v0.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L1857da.  call `dispatchYield`(v2, v1, v0) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.dispatchYield:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L1857e0.  return @kind void;
}
procedure `kotlin.coroutines.jvm.internal.CoroutineStackFrame` `getCallerFrame`(`kotlinx.coroutines.internal.DispatchedContinuation` v2 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L185644.  v0:= v2.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L185648.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L18564c.  if v1 == 0 then goto L185656;
  #L185650.  v0:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v0 @kind object;
  #L185654.  goto L185658;
  #L185656.  v0:= 0I;
  #L185658.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlinx.coroutines.internal.DispatchedContinuation` v1 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L185624.  v0:= v1.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L185628.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L18562e.  v0:= temp @kind object;
  #L185630.  return v0 @kind object;
}
procedure `kotlin.coroutines.Continuation` `getDelegate$kotlinx_coroutines_core`(`kotlinx.coroutines.internal.DispatchedContinuation` v0 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getDelegate$kotlinx_coroutines_core:()Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC {
    temp;

  #L185610.  return v0 @kind object;
}
procedure `kotlinx.coroutines.CancellableContinuationImpl` `getReusableCancellableContinuation`(`kotlinx.coroutines.internal.DispatchedContinuation` v2 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getReusableCancellableContinuation:()Lkotlinx/coroutines/CancellableContinuationImpl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1856e8.  v0:= v2.`kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L1856ec.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CancellableContinuationImpl` @kind boolean;
  #L1856f0.  if v1 == 0 then goto L1856fa;
  #L1856f4.  v0:= (`kotlinx.coroutines.CancellableContinuationImpl`) v0 @kind object;
  #L1856f8.  goto L1856fc;
  #L1856fa.  v0:= 0I;
  #L1856fc.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.internal.DispatchedContinuation` v1 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L185514.  v0:= 0I;
  #L185516.  return v0 @kind object;
}
procedure `boolean` `isReusable`(`kotlinx.coroutines.internal.DispatchedContinuation` v4 @kind this, `kotlinx.coroutines.CancellableContinuationImpl` v5 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.isReusable:(Lkotlinx/coroutines/CancellableContinuationImpl;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1853cc.  v0:= v4.`kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L1853d0.  v1:= 0I;
  #L1853d2.  if v0 != 0 then goto L1853d8;
  #L1853d6.  return v1;
  #L1853d8.  v2:= instanceof @variable v0 @type ^`kotlinx.coroutines.CancellableContinuationImpl` @kind boolean;
  #L1853dc.  v3:= 1I;
  #L1853de.  if v2 == 0 then goto L1853ea;
  #L1853e2.  if v0 != v5 then goto L1853e8;
  #L1853e6.  v1:= 1I;
  #L1853e8.  return v1;
  #L1853ea.  return v3;
}
procedure `boolean` `postponeCancellation`(`kotlinx.coroutines.internal.DispatchedContinuation` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.postponeCancellation:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1853fc.  v0:= v3.`kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L185400.  v1:= `@@kotlinx.coroutines.internal.DispatchedContinuationKt.REUSABLE_CLAIMED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L185404.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L18540a.  v1:= temp;
  #L18540c.  v2:= 1I;
  #L18540e.  if v1 == 0 then goto L185428;
  #L185412.  v0:= `@@kotlinx.coroutines.internal.DispatchedContinuation.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L185416.  v1:= `@@kotlinx.coroutines.internal.DispatchedContinuationKt.REUSABLE_CLAIMED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L18541a.  call temp:= `compareAndSet`(v0, v3, v1, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L185420.  v0:= temp;
  #L185422.  if v0 == 0 then goto L1853fc;
  #L185426.  return v2;
  #L185428.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L18542c.  if v1 == 0 then goto L185432;
  #L185430.  return v2;
  #L185432.  v1:= `@@kotlinx.coroutines.internal.DispatchedContinuation.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L185436.  v2:= 0I;
  #L185438.  call temp:= `compareAndSet`(v1, v3, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L18543e.  v0:= temp;
  #L185440.  if v0 == 0 then goto L1853fc;
  #L185444.  v4:= 0I;
  #L185446.  return v4;
}
procedure `void` `release`(`kotlinx.coroutines.internal.DispatchedContinuation` v1 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.release:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L185808.  call `awaitReusability`(v1) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.awaitReusability:()V` @kind virtual;
  #L18580e.  call temp:= `getReusableCancellableContinuation`(v1) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getReusableCancellableContinuation:()Lkotlinx/coroutines/CancellableContinuationImpl;` @kind virtual;
  #L185814.  v0:= temp @kind object;
  #L185816.  if v0 != 0 then goto L18581c;
  #L18581a.  goto L185822;
  #L18581c.  call `detachChild$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.detachChild$kotlinx_coroutines_core:()V` @kind virtual;
  #L185822.  return @kind void;
}
procedure `void` `resumeCancellableWith`(`kotlinx.coroutines.internal.DispatchedContinuation` v6 @kind this, `java.lang.Object` v7 @kind object, `kotlin.jvm.functions.Function1` v8 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.resumeCancellableWith:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L185834.  call temp:= `toState`(v7, v8) @signature `Lkotlinx/coroutines/CompletionStateKt;.toState:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @kind static;
  #L18583a.  v8:= temp @kind object;
  #L18583c.  v0:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L185840.  call temp:= `getContext`(v6) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L185846.  v1:= temp @kind object;
  #L185848.  call temp:= `isDispatchNeeded`(v0, v1) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.isDispatchNeeded:(Lkotlin/coroutines/CoroutineContext;)Z` @kind virtual;
  #L18584e.  v0:= temp;
  #L185850.  v1:= 1I;
  #L185852.  if v0 == 0 then goto L185874;
  #L185856.  v6.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` := v8 @kind object;
  #L18585a.  v6.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int` := v1;
  #L18585e.  v7:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L185862.  call temp:= `getContext`(v6) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L185868.  v8:= temp @kind object;
  #L18586a.  call `dispatch`(v7, v8, v6) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.dispatch:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L185870.  goto L1859ba;
  #L185874.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L18587a.  v0:= temp;
  #L18587c.  v0:= `@@kotlinx.coroutines.ThreadLocalEventLoop.INSTANCE` @type ^`kotlinx.coroutines.ThreadLocalEventLoop` @kind object;
  #L185880.  call temp:= `getEventLoop$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/ThreadLocalEventLoop;.getEventLoop$kotlinx_coroutines_core:()Lkotlinx/coroutines/EventLoop;` @kind virtual;
  #L185886.  v0:= temp @kind object;
  #L185888.  call temp:= `isUnconfinedLoopActive`(v0) @signature `Lkotlinx/coroutines/EventLoop;.isUnconfinedLoopActive:()Z` @kind virtual;
  #L18588e.  v2:= temp;
  #L185890.  if v2 == 0 then goto L1858a6;
  #L185894.  v6.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` := v8 @kind object;
  #L185898.  v6.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int` := v1;
  #L18589c.  call `dispatchUnconfined`(v0, v6) @signature `Lkotlinx/coroutines/EventLoop;.dispatchUnconfined:(Lkotlinx/coroutines/DispatchedTask;)V` @kind virtual;
  #L1858a2.  goto L1859ba;
  #L1858a6.  call `incrementUseCount`(v0, v1) @signature `Lkotlinx/coroutines/EventLoop;.incrementUseCount:(Z)V` @kind virtual;
  #L1858ac.  v2:= 0I;
  #L1858ae.  call temp:= `getContext`(v6) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L1858b4.  v3:= temp @kind object;
  #L1858b6.  v4:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L1858ba.  call temp:= `get`(v3, v4) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L1858c0.  v3:= temp @kind object;
  #L1858c2.  v3:= (`kotlinx.coroutines.Job`) v3 @kind object;
  #L1858c6.  if v3 == 0 then goto L185902;
  #L1858ca.  call temp:= `isActive`(v3) @signature `Lkotlinx/coroutines/Job;.isActive:()Z` @kind interface;
  #L1858d0.  v4:= temp;
  #L1858d2.  if v4 != 0 then goto L185902;
  #L1858d6.  call temp:= `getCancellationException`(v3) @signature `Lkotlinx/coroutines/Job;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L1858dc.  v3:= temp @kind object;
  #L1858de.  call `cancelCompletedResult$kotlinx_coroutines_core`(v6, v8, v3) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.cancelCompletedResult$kotlinx_coroutines_core:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @kind virtual;
  #L1858e4.  v8:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L1858e8.  call temp:= `createFailure`(v3) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L1858ee.  v8:= temp @kind object;
  #L1858f0.  call temp:= `constructor-impl`(v8) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1858f6.  v8:= temp @kind object;
  #L1858f8.  call `resumeWith`(v6, v8) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L1858fe.  v8:= 1I;
  #L185900.  goto L185904;
  #L185902.  v8:= 0I;
  #L185904.  if v8 != 0 then goto L18598c;
  #L185908.  v8:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L18590c.  v3:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.countOrElement` @type ^`java.lang.Object` @kind object;
  #L185910.  call temp:= `getContext`(v8) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L185916.  v4:= temp @kind object;
  #L185918.  call temp:= `updateThreadContext`(v4, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L18591e.  v3:= temp @kind object;
  #L185920.  v5:= `@@kotlinx.coroutines.internal.ThreadContextKt.NO_THREAD_ELEMENTS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L185924.  if v3 == v5 then goto L185932;
  #L185928.  call temp:= `updateUndispatchedCompletion`(v8, v4, v3) @signature `Lkotlinx/coroutines/CoroutineContextKt;.updateUndispatchedCompletion:(Lkotlin/coroutines/Continuation;Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Lkotlinx/coroutines/UndispatchedCoroutine;` @kind static;
  #L18592e.  v8:= temp @kind object;
  #L185930.  goto L185934;
  #L185932.  v8:= v2 @kind object;
  #L185934.  v5:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L185938.  call `resumeWith`(v5, v7) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L18593e.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L185942.  call `finallyStart`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L185948.  if v8 == 0 then goto L185958;
  #L18594c.  call temp:= `clearThreadContext`(v8) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L185952.  v7:= temp;
  #L185954.  if v7 == 0 then goto L18595e;
  #L185958.  call `restoreThreadContext`(v4, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L18595e.  call `finallyEnd`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L185964.  goto L18598c;
  #L185966.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L185968.  call `finallyStart`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L18596e.  if v8 == 0 then goto L18597e;
  #L185972.  call temp:= `clearThreadContext`(v8) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L185978.  v8:= temp;
  #L18597a.  if v8 == 0 then goto L185984;
  #L18597e.  call `restoreThreadContext`(v4, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L185984.  call `finallyEnd`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L18598a.  throw v7;
  #L18598c.  call temp:= `processUnconfinedEvent`(v0) @signature `Lkotlinx/coroutines/EventLoop;.processUnconfinedEvent:()Z` @kind virtual;
  #L185992.  v7:= temp;
  #L185994.  if v7 != 0 then goto L18598c;
  #L185998.  call `finallyStart`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L18599e.  goto L1859ae;
  #L1859a0.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1859a2.  call `handleFatalException`(v6, v7, v2) @signature `Lkotlinx/coroutines/DispatchedTask;.handleFatalException:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind virtual;
  #L1859a8.  call `finallyStart`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L1859ae.  call `decrementUseCount`(v0, v1) @signature `Lkotlinx/coroutines/EventLoop;.decrementUseCount:(Z)V` @kind virtual;
  #L1859b4.  call `finallyEnd`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L1859ba.  return @kind void;
  #L1859bc.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1859be.  call `finallyStart`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L1859c4.  call `decrementUseCount`(v0, v1) @signature `Lkotlinx/coroutines/EventLoop;.decrementUseCount:(Z)V` @kind virtual;
  #L1859ca.  call `finallyEnd`(v1) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L1859d0.  throw v7;
  catch `java.lang.Throwable` @[L1858ae..L185930] goto L1859a0;
  catch `java.lang.Throwable` @[L185934..L185942] goto L185966;
  catch `java.lang.Throwable` @[L185942..L185994] goto L1859a0;
  catch `java.lang.Throwable` @[L1859a2..L1859a8] goto L1859bc;
}
procedure `boolean` `resumeCancelled`(`kotlinx.coroutines.internal.DispatchedContinuation` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.resumeCancelled:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L185458.  call temp:= `getContext`(v2) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L18545e.  v0:= temp @kind object;
  #L185460.  v1:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L185464.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L18546a.  v0:= temp @kind object;
  #L18546c.  v0:= (`kotlinx.coroutines.Job`) v0 @kind object;
  #L185470.  if v0 == 0 then goto L1854ac;
  #L185474.  call temp:= `isActive`(v0) @signature `Lkotlinx/coroutines/Job;.isActive:()Z` @kind interface;
  #L18547a.  v1:= temp;
  #L18547c.  if v1 != 0 then goto L1854ac;
  #L185480.  call temp:= `getCancellationException`(v0) @signature `Lkotlinx/coroutines/Job;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L185486.  v0:= temp @kind object;
  #L185488.  call `cancelCompletedResult$kotlinx_coroutines_core`(v2, v3, v0) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.cancelCompletedResult$kotlinx_coroutines_core:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @kind virtual;
  #L18548e.  v3:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L185492.  call temp:= `createFailure`(v0) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L185498.  v3:= temp @kind object;
  #L18549a.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1854a0.  v3:= temp @kind object;
  #L1854a2.  call `resumeWith`(v2, v3) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L1854a8.  v3:= 1I;
  #L1854aa.  return v3;
  #L1854ac.  v3:= 0I;
  #L1854ae.  return v3;
}
procedure `void` `resumeUndispatchedWith`(`kotlinx.coroutines.internal.DispatchedContinuation` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.resumeUndispatchedWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L185a10.  v0:= v5.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L185a14.  v1:= v5.`kotlinx.coroutines.internal.DispatchedContinuation.countOrElement` @type ^`java.lang.Object` @kind object;
  #L185a18.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L185a1e.  v2:= temp @kind object;
  #L185a20.  call temp:= `updateThreadContext`(v2, v1) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L185a26.  v1:= temp @kind object;
  #L185a28.  v3:= `@@kotlinx.coroutines.internal.ThreadContextKt.NO_THREAD_ELEMENTS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L185a2c.  if v1 == v3 then goto L185a3a;
  #L185a30.  call temp:= `updateUndispatchedCompletion`(v0, v2, v1) @signature `Lkotlinx/coroutines/CoroutineContextKt;.updateUndispatchedCompletion:(Lkotlin/coroutines/Continuation;Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Lkotlinx/coroutines/UndispatchedCoroutine;` @kind static;
  #L185a36.  v0:= temp @kind object;
  #L185a38.  goto L185a3c;
  #L185a3a.  v0:= 0I;
  #L185a3c.  v3:= 1I;
  #L185a3e.  v4:= v5.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L185a42.  call `resumeWith`(v4, v6) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L185a48.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L185a4c.  call `finallyStart`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L185a52.  if v0 == 0 then goto L185a62;
  #L185a56.  call temp:= `clearThreadContext`(v0) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L185a5c.  v6:= temp;
  #L185a5e.  if v6 == 0 then goto L185a68;
  #L185a62.  call `restoreThreadContext`(v2, v1) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L185a68.  call `finallyEnd`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L185a6e.  return @kind void;
  #L185a70.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L185a72.  call `finallyStart`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L185a78.  if v0 == 0 then goto L185a88;
  #L185a7c.  call temp:= `clearThreadContext`(v0) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L185a82.  v0:= temp;
  #L185a84.  if v0 == 0 then goto L185a8e;
  #L185a88.  call `restoreThreadContext`(v2, v1) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L185a8e.  call `finallyEnd`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L185a94.  throw v6;
  catch `java.lang.Throwable` @[L185a3e..L185a4c] goto L185a70;
}
procedure `void` `resumeWith`(`kotlinx.coroutines.internal.DispatchedContinuation` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L185ab4.  v0:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L185ab8.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L185abe.  v0:= temp @kind object;
  #L185ac0.  v1:= 0I;
  #L185ac2.  v2:= 1I;
  #L185ac4.  call temp:= `toState$default`(v7, v1, v2, v1) @signature `Lkotlinx/coroutines/CompletionStateKt;.toState$default:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L185aca.  v3:= temp @kind object;
  #L185acc.  v4:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L185ad0.  call temp:= `isDispatchNeeded`(v4, v0) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.isDispatchNeeded:(Lkotlin/coroutines/CoroutineContext;)Z` @kind virtual;
  #L185ad6.  v4:= temp;
  #L185ad8.  v5:= 0I;
  #L185ada.  if v4 == 0 then goto L185af2;
  #L185ade.  v6.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` := v3 @kind object;
  #L185ae2.  v6.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int` := v5;
  #L185ae6.  v7:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L185aea.  call `dispatch`(v7, v0, v6) @signature `Lkotlinx/coroutines/CoroutineDispatcher;.dispatch:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V` @kind virtual;
  #L185af0.  goto L185b76;
  #L185af2.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L185af8.  v0:= temp;
  #L185afa.  v0:= `@@kotlinx.coroutines.ThreadLocalEventLoop.INSTANCE` @type ^`kotlinx.coroutines.ThreadLocalEventLoop` @kind object;
  #L185afe.  call temp:= `getEventLoop$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/ThreadLocalEventLoop;.getEventLoop$kotlinx_coroutines_core:()Lkotlinx/coroutines/EventLoop;` @kind virtual;
  #L185b04.  v0:= temp @kind object;
  #L185b06.  call temp:= `isUnconfinedLoopActive`(v0) @signature `Lkotlinx/coroutines/EventLoop;.isUnconfinedLoopActive:()Z` @kind virtual;
  #L185b0c.  v4:= temp;
  #L185b0e.  if v4 == 0 then goto L185b22;
  #L185b12.  v6.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` := v3 @kind object;
  #L185b16.  v6.`kotlinx.coroutines.DispatchedTask.resumeMode` @type ^`int` := v5;
  #L185b1a.  call `dispatchUnconfined`(v0, v6) @signature `Lkotlinx/coroutines/EventLoop;.dispatchUnconfined:(Lkotlinx/coroutines/DispatchedTask;)V` @kind virtual;
  #L185b20.  goto L185b76;
  #L185b22.  call `incrementUseCount`(v0, v2) @signature `Lkotlinx/coroutines/EventLoop;.incrementUseCount:(Z)V` @kind virtual;
  #L185b28.  call temp:= `getContext`(v6) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L185b2e.  v3:= temp @kind object;
  #L185b30.  v4:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.countOrElement` @type ^`java.lang.Object` @kind object;
  #L185b34.  call temp:= `updateThreadContext`(v3, v4) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L185b3a.  v4:= temp @kind object;
  #L185b3c.  v5:= v6.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L185b40.  call `resumeWith`(v5, v7) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L185b46.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L185b4a.  call `restoreThreadContext`(v3, v4) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L185b50.  call temp:= `processUnconfinedEvent`(v0) @signature `Lkotlinx/coroutines/EventLoop;.processUnconfinedEvent:()Z` @kind virtual;
  #L185b56.  v7:= temp;
  #L185b58.  if v7 != 0 then goto L185b50;
  #L185b5c.  goto L185b70;
  #L185b5e.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L185b60.  call `restoreThreadContext`(v3, v4) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L185b66.  throw v7;
  #L185b68.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L185b6a.  call `handleFatalException`(v6, v7, v1) @signature `Lkotlinx/coroutines/DispatchedTask;.handleFatalException:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind virtual;
  #L185b70.  call `decrementUseCount`(v0, v2) @signature `Lkotlinx/coroutines/EventLoop;.decrementUseCount:(Z)V` @kind virtual;
  #L185b76.  return @kind void;
  #L185b78.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L185b7a.  call `decrementUseCount`(v0, v2) @signature `Lkotlinx/coroutines/EventLoop;.decrementUseCount:(Z)V` @kind virtual;
  #L185b80.  throw v7;
  catch `java.lang.Throwable` @[L185b28..L185b3c] goto L185b68;
  catch `java.lang.Throwable` @[L185b3c..L185b4a] goto L185b5e;
  catch `java.lang.Throwable` @[L185b4a..L185b68] goto L185b68;
  catch `java.lang.Throwable` @[L185b6a..L185b70] goto L185b78;
}
procedure `java.lang.Object` `takeState$kotlinx_coroutines_core`(`kotlinx.coroutines.internal.DispatchedContinuation` v2 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.takeState$kotlinx_coroutines_core:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1854c0.  v0:= v2.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` @kind object;
  #L1854c4.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1854ca.  v1:= temp;
  #L1854cc.  if v1 == 0 then goto L1854f4;
  #L1854d0.  call temp:= `access$getUNDEFINED$p`() @signature `Lkotlinx/coroutines/internal/DispatchedContinuationKt;.access$getUNDEFINED$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L1854d6.  v1:= temp @kind object;
  #L1854d8.  if v0 == v1 then goto L1854e0;
  #L1854dc.  v1:= 1I;
  #L1854de.  goto L1854e2;
  #L1854e0.  v1:= 0I;
  #L1854e2.  if v1 == 0 then goto L1854e8;
  #L1854e6.  goto L1854f4;
  #L1854e8.  v0:= new `java.lang.AssertionError`;
  #L1854ec.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1854f2.  throw v0;
  #L1854f4.  call temp:= `access$getUNDEFINED$p`() @signature `Lkotlinx/coroutines/internal/DispatchedContinuationKt;.access$getUNDEFINED$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L1854fa.  v1:= temp @kind object;
  #L1854fc.  v2.`kotlinx.coroutines.internal.DispatchedContinuation._state` @type ^`java.lang.Object` := v1 @kind object;
  #L185500.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.internal.DispatchedContinuation` v2 @kind this) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L185528.  v0:= new `java.lang.StringBuilder`;
  #L18552c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L185532.  v1:= "DispatchedContinuation[" @kind object;
  #L185536.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18553c.  v1:= v2.`kotlinx.coroutines.internal.DispatchedContinuation.dispatcher` @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind object;
  #L185540.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L185546.  v1:= ", " @kind object;
  #L18554a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L185550.  v1:= v2.`kotlinx.coroutines.internal.DispatchedContinuation.continuation` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L185554.  call temp:= `toDebugString`(v1) @signature `Lkotlinx/coroutines/DebugStringsKt;.toDebugString:(Lkotlin/coroutines/Continuation;)Ljava/lang/String;` @kind static;
  #L18555a.  v1:= temp @kind object;
  #L18555c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L185562.  v1:= 93I;
  #L185566.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L18556c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L185572.  v0:= temp @kind object;
  #L185574.  return v0 @kind object;
}
procedure `java.lang.Throwable` `tryReleaseClaimedContinuation`(`kotlinx.coroutines.internal.DispatchedContinuation` v3 @kind this, `kotlinx.coroutines.CancellableContinuation` v4 @kind object) @signature `Lkotlinx/coroutines/internal/DispatchedContinuation;.tryReleaseClaimedContinuation:(Lkotlinx/coroutines/CancellableContinuation;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L185588.  v0:= v3.`kotlinx.coroutines.internal.DispatchedContinuation._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L18558c.  v1:= `@@kotlinx.coroutines.internal.DispatchedContinuationKt.REUSABLE_CLAIMED` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L185590.  v2:= 0I;
  #L185592.  if v0 != v1 then goto L1855a8;
  #L185596.  v0:= `@@kotlinx.coroutines.internal.DispatchedContinuation.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L18559a.  call temp:= `compareAndSet`(v0, v3, v1, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1855a0.  v0:= temp;
  #L1855a2.  if v0 == 0 then goto L185588;
  #L1855a6.  return v2 @kind object;
  #L1855a8.  v4:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L1855ac.  if v4 == 0 then goto L1855de;
  #L1855b0.  v4:= `@@kotlinx.coroutines.internal.DispatchedContinuation.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1855b4.  call temp:= `compareAndSet`(v4, v3, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1855ba.  v4:= temp;
  #L1855bc.  if v4 == 0 then goto L1855c6;
  #L1855c0.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L1855c4.  return v0 @kind object;
  #L1855c6.  v4:= new `java.lang.IllegalArgumentException`;
  #L1855ca.  v0:= "Failed requirement." @kind object;
  #L1855ce.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1855d4.  v0:= temp @kind object;
  #L1855d6.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1855dc.  throw v4;
  #L1855de.  v4:= "Inconsistent state " @kind object;
  #L1855e2.  call temp:= `stringPlus`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1855e8.  v4:= temp @kind object;
  #L1855ea.  v0:= new `java.lang.IllegalStateException`;
  #L1855ee.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1855f4.  v4:= temp @kind object;
  #L1855f6.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1855fc.  throw v0;
}
