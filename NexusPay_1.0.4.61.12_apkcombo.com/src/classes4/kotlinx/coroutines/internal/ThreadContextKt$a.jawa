record `kotlinx.coroutines.internal.ThreadContextKt$a` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
}
global `kotlinx.coroutines.internal.ThreadContextKt$a` `@@kotlinx.coroutines.internal.ThreadContextKt$a.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/ThreadContextKt$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L18a07c.  v0:= new `kotlinx.coroutines.internal.ThreadContextKt$a`;
  #L18a080.  call `<init>`(v0) @signature `Lkotlinx/coroutines/internal/ThreadContextKt$a;.<init>:()V` @kind direct;
  #L18a086.  `@@kotlinx.coroutines.internal.ThreadContextKt$a.a` @type ^`kotlinx.coroutines.internal.ThreadContextKt$a` := v0 @kind object;
  #L18a08a.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.ThreadContextKt$a` v1 @kind this) @signature `Lkotlinx/coroutines/internal/ThreadContextKt$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L18a09c.  v0:= 2I;
  #L18a09e.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L18a0a4.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.internal.ThreadContextKt$a` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.coroutines.CoroutineContext$Element` v3 @kind object) @signature `Lkotlinx/coroutines/internal/ThreadContextKt$a;.a:(Ljava/lang/Object;Lkotlin/coroutines/CoroutineContext$Element;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L18a02c.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.ThreadContextElement` @kind boolean;
  #L18a030.  if v0 == 0 then goto L18a068;
  #L18a034.  v0:= instanceof @variable v2 @type ^`java.lang.Integer` @kind boolean;
  #L18a038.  if v0 == 0 then goto L18a042;
  #L18a03c.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L18a040.  goto L18a044;
  #L18a042.  v2:= 0I;
  #L18a044.  v0:= 1I;
  #L18a046.  if v2 != 0 then goto L18a04e;
  #L18a04a.  v2:= 1I;
  #L18a04c.  goto L18a056;
  #L18a04e.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L18a054.  v2:= temp;
  #L18a056.  if v2 != 0 then goto L18a05c;
  #L18a05a.  goto L18a066;
  #L18a05c.  v2:= v2 + v0 @kind int;
  #L18a05e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L18a064.  v3:= temp @kind object;
  #L18a066.  return v3 @kind object;
  #L18a068.  return v2 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.internal.ThreadContextKt$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/internal/ThreadContextKt$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L18a00c.  v2:= (`kotlin.coroutines.CoroutineContext$Element`) v2 @kind object;
  #L18a010.  call temp:= `a`(v0, v1, v2) @signature `Lkotlinx/coroutines/internal/ThreadContextKt$a;.a:(Ljava/lang/Object;Lkotlin/coroutines/CoroutineContext$Element;)Ljava/lang/Object;` @kind virtual;
  #L18a016.  v1:= temp @kind object;
  #L18a018.  return v1 @kind object;
}
