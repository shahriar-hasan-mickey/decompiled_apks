record `kotlinx.coroutines.internal.ThreadLocalElement` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.ThreadContextElement` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.internal.ThreadLocalElement.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.ThreadLocal` `kotlinx.coroutines.internal.ThreadLocalElement.b` @AccessFlag PRIVATE_FINAL;
  `kotlin.coroutines.CoroutineContext$Key` `kotlinx.coroutines.internal.ThreadLocalElement.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.ThreadLocalElement` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.ThreadLocal` v2 @kind object) @signature `Lkotlinx/coroutines/internal/ThreadLocalElement;.<init>:(Ljava/lang/Object;Ljava/lang/ThreadLocal;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L18a430.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L18a436.  v0.`kotlinx.coroutines.internal.ThreadLocalElement.a` @type ^`java.lang.Object` := v1 @kind object;
  #L18a43a.  v0.`kotlinx.coroutines.internal.ThreadLocalElement.b` @type ^`java.lang.ThreadLocal` := v2 @kind object;
  #L18a43e.  v1:= new `kotlinx.coroutines.internal.ThreadLocalKey`;
  #L18a442.  call `<init>`(v1, v2) @signature `Lkotlinx/coroutines/internal/ThreadLocalKey;.<init>:(Ljava/lang/ThreadLocal;)V` @kind direct;
  #L18a448.  v0.`kotlinx.coroutines.internal.ThreadLocalElement.c` @type ^`kotlin.coroutines.CoroutineContext$Key` := v1 @kind object;
  #L18a44c.  return @kind void;
}
procedure `java.lang.Object` `fold`(`kotlinx.coroutines.internal.ThreadLocalElement` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/internal/ThreadLocalElement;.fold:(Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L18a300.  call temp:= `fold`(v0, v1, v2) @signature `Lkotlinx/coroutines/ThreadContextElement$DefaultImpls;.fold:(Lkotlinx/coroutines/ThreadContextElement;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind static;
  #L18a306.  v1:= temp @kind object;
  #L18a308.  return v1 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext$Element` `get`(`kotlinx.coroutines.internal.ThreadLocalElement` v1 @kind this, `kotlin.coroutines.CoroutineContext$Key` v2 @kind object) @signature `Lkotlinx/coroutines/internal/ThreadLocalElement;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18a3ec.  call temp:= `getKey`(v1) @signature `Lkotlinx/coroutines/internal/ThreadLocalElement;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @kind virtual;
  #L18a3f2.  v0:= temp @kind object;
  #L18a3f4.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L18a3fa.  v2:= temp;
  #L18a3fc.  if v2 == 0 then goto L18a404;
  #L18a400.  v2:= v1 @kind object;
  #L18a402.  goto L18a406;
  #L18a404.  v2:= 0I;
  #L18a406.  return v2 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext$Key` `getKey`(`kotlinx.coroutines.internal.ThreadLocalElement` v1 @kind this) @signature `Lkotlinx/coroutines/internal/ThreadLocalElement;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18a418.  v0:= v1.`kotlinx.coroutines.internal.ThreadLocalElement.c` @type ^`kotlin.coroutines.CoroutineContext$Key` @kind object;
  #L18a41c.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `minusKey`(`kotlinx.coroutines.internal.ThreadLocalElement` v1 @kind this, `kotlin.coroutines.CoroutineContext$Key` v2 @kind object) @signature `Lkotlinx/coroutines/internal/ThreadLocalElement;.minusKey:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L18a3a0.  call temp:= `getKey`(v1) @signature `Lkotlinx/coroutines/internal/ThreadLocalElement;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @kind virtual;
  #L18a3a6.  v0:= temp @kind object;
  #L18a3a8.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L18a3ae.  v2:= temp;
  #L18a3b0.  if v2 == 0 then goto L18a3ba;
  #L18a3b4.  v2:= `@@kotlin.coroutines.EmptyCoroutineContext.INSTANCE` @type ^`kotlin.coroutines.EmptyCoroutineContext` @kind object;
  #L18a3b8.  goto L18a3bc;
  #L18a3ba.  v2:= v1 @kind object;
  #L18a3bc.  return v2 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `plus`(`kotlinx.coroutines.internal.ThreadLocalElement` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/internal/ThreadLocalElement;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;

  #L18a3d0.  call temp:= `plus`(v0, v1) @signature `Lkotlinx/coroutines/ThreadContextElement$DefaultImpls;.plus:(Lkotlinx/coroutines/ThreadContextElement;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L18a3d6.  v1:= temp @kind object;
  #L18a3d8.  return v1 @kind object;
}
procedure `void` `restoreThreadContext`(`kotlinx.coroutines.internal.ThreadLocalElement` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/internal/ThreadLocalElement;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L18a460.  v1:= v0.`kotlinx.coroutines.internal.ThreadLocalElement.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L18a464.  call `set`(v1, v2) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L18a46a.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.internal.ThreadLocalElement` v2 @kind this) @signature `Lkotlinx/coroutines/internal/ThreadLocalElement;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18a348.  v0:= new `java.lang.StringBuilder`;
  #L18a34c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L18a352.  v1:= "ThreadLocal(value=" @kind object;
  #L18a356.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18a35c.  v1:= v2.`kotlinx.coroutines.internal.ThreadLocalElement.a` @type ^`java.lang.Object` @kind object;
  #L18a360.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18a366.  v1:= ", threadLocal = " @kind object;
  #L18a36a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18a370.  v1:= v2.`kotlinx.coroutines.internal.ThreadLocalElement.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L18a374.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L18a37a.  v1:= 41I;
  #L18a37e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L18a384.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L18a38a.  v0:= temp @kind object;
  #L18a38c.  return v0 @kind object;
}
procedure `java.lang.Object` `updateThreadContext`(`kotlinx.coroutines.internal.ThreadLocalElement` v2 @kind this, `kotlin.coroutines.CoroutineContext` v3 @kind object) @signature `Lkotlinx/coroutines/internal/ThreadLocalElement;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L18a31c.  v3:= v2.`kotlinx.coroutines.internal.ThreadLocalElement.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L18a320.  call temp:= `get`(v3) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L18a326.  v3:= temp @kind object;
  #L18a328.  v0:= v2.`kotlinx.coroutines.internal.ThreadLocalElement.b` @type ^`java.lang.ThreadLocal` @kind object;
  #L18a32c.  v1:= v2.`kotlinx.coroutines.internal.ThreadLocalElement.a` @type ^`java.lang.Object` @kind object;
  #L18a330.  call `set`(v0, v1) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L18a336.  return v3 @kind object;
}
