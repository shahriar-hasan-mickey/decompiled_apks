record `kotlinx.coroutines.internal.ExceptionsConstuctorKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@kotlinx.coroutines.internal.ExceptionsConstuctorKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.locks.ReentrantReadWriteLock` `@@kotlinx.coroutines.internal.ExceptionsConstuctorKt.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.WeakHashMap` `@@kotlinx.coroutines.internal.ExceptionsConstuctorKt.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/ExceptionsConstuctorKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1864f4.  v0:= constclass @type ^`java.lang.Throwable` @kind object;
  #L1864f8.  v1:= -1I;
  #L1864fa.  call temp:= `d`(v0, v1) @signature `Lkotlinx/coroutines/internal/ExceptionsConstuctorKt;.d:(Ljava/lang/Class;I)I` @kind static;
  #L186500.  v0:= temp;
  #L186502.  `@@kotlinx.coroutines.internal.ExceptionsConstuctorKt.a` @type ^`int` := v0;
  #L186506.  v0:= new `java.util.concurrent.locks.ReentrantReadWriteLock`;
  #L18650a.  call `<init>`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.<init>:()V` @kind direct;
  #L186510.  `@@kotlinx.coroutines.internal.ExceptionsConstuctorKt.b` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` := v0 @kind object;
  #L186514.  v0:= new `java.util.WeakHashMap`;
  #L186518.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L18651e.  `@@kotlinx.coroutines.internal.ExceptionsConstuctorKt.c` @type ^`java.util.WeakHashMap` := v0 @kind object;
  #L186522.  return @kind void;
}
procedure `kotlin.jvm.functions.Function1` `a`(`java.lang.reflect.Constructor` v7 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstuctorKt;.a:(Ljava/lang/reflect/Constructor;)Lkotlin/jvm/functions/Function1;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L18644c.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L186450.  call temp:= `getParameterTypes`(v7) @signature `Ljava/lang/reflect/Constructor;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L186456.  v1:= temp @kind object;
  #L186458.  v2:= length @variable v1;
  #L18645a.  v3:= 0I;
  #L18645c.  if v2 == 0 then goto L1864d8;
  #L186460.  v4:= 0I;
  #L186462.  v5:= 1I;
  #L186464.  if v2 == v5 then goto L1864a0;
  #L186468.  v6:= 2I;
  #L18646a.  if v2 == v6 then goto L186470;
  #L18646e.  goto L1864e2;
  #L186470.  v2:= v1[v4] @kind object;
  #L186474.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L18647a.  v0:= temp;
  #L18647c.  if v0 == 0 then goto L1864e2;
  #L186480.  v0:= v1[v5] @kind object;
  #L186484.  v1:= constclass @type ^`java.lang.Throwable` @kind object;
  #L186488.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L18648e.  v0:= temp;
  #L186490.  if v0 == 0 then goto L1864e2;
  #L186494.  v3:= new `kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1`;
  #L186498.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L18649e.  goto L1864e2;
  #L1864a0.  v1:= v1[v4] @kind object;
  #L1864a4.  v2:= constclass @type ^`java.lang.Throwable` @kind object;
  #L1864a8.  call temp:= `areEqual`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1864ae.  v2:= temp;
  #L1864b0.  if v2 == 0 then goto L1864c0;
  #L1864b4.  v3:= new `kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2`;
  #L1864b8.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L1864be.  goto L1864e2;
  #L1864c0.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1864c6.  v0:= temp;
  #L1864c8.  if v0 == 0 then goto L1864e2;
  #L1864cc.  v3:= new `kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3`;
  #L1864d0.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L1864d6.  goto L1864e2;
  #L1864d8.  v3:= new `kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4`;
  #L1864dc.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L1864e2.  return v3 @kind object;
}
procedure `int` `b`(`java.lang.Class` v5 @kind object, `int` v6 ) @signature `Lkotlinx/coroutines/internal/ExceptionsConstuctorKt;.b:(Ljava/lang/Class;I)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1860f4.  call temp:= `getDeclaredFields`(v5) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L1860fa.  v0:= temp @kind object;
  #L1860fc.  v1:= length @variable v0;
  #L1860fe.  v2:= 0I;
  #L186100.  v3:= 0I;
  #L186102.  if v2 >= v1 then goto L18612c;
  #L186106.  v4:= v0[v2] @kind object;
  #L18610a.  call temp:= `getModifiers`(v4) @signature `Ljava/lang/reflect/Field;.getModifiers:()I` @kind virtual;
  #L186110.  v4:= temp;
  #L186112.  call temp:= `isStatic`(v4) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L186118.  v4:= temp;
  #L18611a.  v4:= v4 ^~ 1;
  #L18611e.  if v4 == 0 then goto L186126;
  #L186122.  v3:= v3 + 1;
  #L186126.  v2:= v2 + 1;
  #L18612a.  goto L186102;
  #L18612c.  v6:= v6 + v3 @kind int;
  #L18612e.  call temp:= `getSuperclass`(v5) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L186134.  v5:= temp @kind object;
  #L186136.  if v5 != 0 then goto L1860f4;
  #L18613a.  return v6;
}
procedure `int` `c`(`java.lang.Class` v0 @kind object, `int` v1 , `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstuctorKt;.c:(Ljava/lang/Class;IILjava/lang/Object;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1860d0.  v2:= v2 ^& 1;
  #L1860d4.  if v2 == 0 then goto L1860da;
  #L1860d8.  v1:= 0I;
  #L1860da.  call temp:= `b`(v0, v1) @signature `Lkotlinx/coroutines/internal/ExceptionsConstuctorKt;.b:(Ljava/lang/Class;I)I` @kind static;
  #L1860e0.  v0:= temp;
  #L1860e2.  return v0;
}
procedure `int` `d`(`java.lang.Class` v3 @kind object, `int` v4 ) @signature `Lkotlinx/coroutines/internal/ExceptionsConstuctorKt;.d:(Ljava/lang/Class;I)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L18614c.  call temp:= `getKotlinClass`(v3) @signature `Lkotlin/jvm/JvmClassMappingKt;.getKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L186152.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L186156.  v0:= 0I;
  #L186158.  v1:= 1I;
  #L18615a.  v2:= 0I;
  #L18615c.  call temp:= `c`(v3, v0, v1, v2) @signature `Lkotlinx/coroutines/internal/ExceptionsConstuctorKt;.c:(Ljava/lang/Class;IILjava/lang/Object;)I` @kind static;
  #L186162.  v3:= temp;
  #L186164.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L18616a.  v3:= temp @kind object;
  #L18616c.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L186172.  v3:= temp @kind object;
  #L186174.  goto L18618c;
  #L186176.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L186178.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L18617c.  call temp:= `createFailure`(v3) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L186182.  v3:= temp @kind object;
  #L186184.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L18618a.  v3:= temp @kind object;
  #L18618c.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L186192.  v4:= temp @kind object;
  #L186194.  call temp:= `isFailure-impl`(v3) @signature `Lkotlin/Result;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L18619a.  v0:= temp;
  #L18619c.  if v0 == 0 then goto L1861a2;
  #L1861a0.  v3:= v4 @kind object;
  #L1861a2.  v3:= (`java.lang.Number`) v3 @kind object;
  #L1861a6.  call temp:= `intValue`(v3) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L1861ac.  v3:= temp;
  #L1861ae.  return v3;
  catch `java.lang.Throwable` @[L186152..L186174] goto L186176;
}
procedure `java.lang.Throwable` `tryCopyException`(`java.lang.Throwable` v9 @kind object) @signature `Lkotlinx/coroutines/internal/ExceptionsConstuctorKt;.tryCopyException:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1861cc.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.CopyableThrowable` @kind boolean;
  #L1861d0.  v1:= 0I;
  #L1861d2.  if v0 == 0 then goto L18621c;
  #L1861d6.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L1861da.  v9:= (`kotlinx.coroutines.CopyableThrowable`) v9 @kind object;
  #L1861de.  call temp:= `createCopy`(v9) @signature `Lkotlinx/coroutines/CopyableThrowable;.createCopy:()Ljava/lang/Throwable;` @kind interface;
  #L1861e4.  v9:= temp @kind object;
  #L1861e6.  call temp:= `constructor-impl`(v9) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1861ec.  v9:= temp @kind object;
  #L1861ee.  goto L186206;
  #L1861f0.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1861f2.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L1861f6.  call temp:= `createFailure`(v9) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L1861fc.  v9:= temp @kind object;
  #L1861fe.  call temp:= `constructor-impl`(v9) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L186204.  v9:= temp @kind object;
  #L186206.  call temp:= `isFailure-impl`(v9) @signature `Lkotlin/Result;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L18620c.  v0:= temp;
  #L18620e.  if v0 == 0 then goto L186214;
  #L186212.  goto L186216;
  #L186214.  v1:= v9 @kind object;
  #L186216.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L18621a.  return v1 @kind object;
  #L18621c.  v0:= `@@kotlinx.coroutines.internal.ExceptionsConstuctorKt.b` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` @kind object;
  #L186220.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L186226.  v0:= temp @kind object;
  #L186228.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L18622e.  v2:= `@@kotlinx.coroutines.internal.ExceptionsConstuctorKt.c` @type ^`java.util.WeakHashMap` @kind object;
  #L186232.  call temp:= `getClass`(v9) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L186238.  v3:= temp @kind object;
  #L18623a.  call temp:= `get`(v2, v3) @signature `Ljava/util/WeakHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L186240.  v2:= temp @kind object;
  #L186242.  v2:= (`kotlin.jvm.functions.Function1`) v2 @kind object;
  #L186246.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L18624c.  if v2 != 0 then goto L1863f6;
  #L186250.  v0:= `@@kotlinx.coroutines.internal.ExceptionsConstuctorKt.a` @type ^`int`;
  #L186254.  call temp:= `getClass`(v9) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L18625a.  v2:= temp @kind object;
  #L18625c.  v3:= 0I;
  #L18625e.  call temp:= `d`(v2, v3) @signature `Lkotlinx/coroutines/internal/ExceptionsConstuctorKt;.d:(Ljava/lang/Class;I)I` @kind static;
  #L186264.  v2:= temp;
  #L186266.  if v0 == v2 then goto L1862fa;
  #L18626a.  v0:= `@@kotlinx.coroutines.internal.ExceptionsConstuctorKt.b` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` @kind object;
  #L18626e.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L186274.  v2:= temp @kind object;
  #L186276.  call temp:= `getWriteHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWriteHoldCount:()I` @kind virtual;
  #L18627c.  v4:= temp;
  #L18627e.  if v4 != 0 then goto L18628c;
  #L186282.  call temp:= `getReadHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getReadHoldCount:()I` @kind virtual;
  #L186288.  v4:= temp;
  #L18628a.  goto L18628e;
  #L18628c.  v4:= 0I;
  #L18628e.  v5:= 0I;
  #L186290.  if v5 >= v4 then goto L1862a0;
  #L186294.  call `unlock`(v2) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L18629a.  v5:= v5 + 1;
  #L18629e.  goto L186290;
  #L1862a0.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;` @kind virtual;
  #L1862a6.  v0:= temp @kind object;
  #L1862a8.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.lock:()V` @kind virtual;
  #L1862ae.  v5:= `@@kotlinx.coroutines.internal.ExceptionsConstuctorKt.c` @type ^`java.util.WeakHashMap` @kind object;
  #L1862b2.  call temp:= `getClass`(v9) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1862b8.  v9:= temp @kind object;
  #L1862ba.  v6:= `@@kotlinx.coroutines.internal.ExceptionsConstuctorKt$a.a` @type ^`kotlinx.coroutines.internal.ExceptionsConstuctorKt$a` @kind object;
  #L1862be.  call temp:= `put`(v5, v9, v6) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1862c4.  v9:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1862c8.  if v3 >= v4 then goto L1862d8;
  #L1862cc.  call `lock`(v2) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L1862d2.  v3:= v3 + 1;
  #L1862d6.  goto L1862c8;
  #L1862d8.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L1862de.  return v1 @kind object;
  #L1862e0.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1862e2.  if v3 >= v4 then goto L1862f2;
  #L1862e6.  call `lock`(v2) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L1862ec.  v3:= v3 + 1;
  #L1862f0.  goto L1862e2;
  #L1862f2.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L1862f8.  throw v9;
  #L1862fa.  call temp:= `getClass`(v9) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L186300.  v0:= temp @kind object;
  #L186302.  call temp:= `getConstructors`(v0) @signature `Ljava/lang/Class;.getConstructors:()[Ljava/lang/reflect/Constructor;` @kind virtual;
  #L186308.  v0:= temp @kind object;
  #L18630a.  v2:= new `kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$$inlined$sortedByDescending$1`;
  #L18630e.  call `<init>`(v2) @signature `Lkotlinx/coroutines/internal/ExceptionsConstuctorKt$tryCopyException$$inlined$sortedByDescending$1;.<init>:()V` @kind direct;
  #L186314.  call temp:= `sortedWith`(v0, v2) @signature `Lkotlin/collections/ArraysKt;.sortedWith:([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/util/List;` @kind static;
  #L18631a.  v0:= temp @kind object;
  #L18631c.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L186322.  v0:= temp @kind object;
  #L186324.  v2:= v1 @kind object;
  #L186326.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L18632c.  v4:= temp;
  #L18632e.  if v4 == 0 then goto L18634a;
  #L186332.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L186338.  v2:= temp @kind object;
  #L18633a.  v2:= (`java.lang.reflect.Constructor`) v2 @kind object;
  #L18633e.  call temp:= `a`(v2) @signature `Lkotlinx/coroutines/internal/ExceptionsConstuctorKt;.a:(Ljava/lang/reflect/Constructor;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L186344.  v2:= temp @kind object;
  #L186346.  if v2 == 0 then goto L186326;
  #L18634a.  v0:= `@@kotlinx.coroutines.internal.ExceptionsConstuctorKt.b` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` @kind object;
  #L18634e.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L186354.  v4:= temp @kind object;
  #L186356.  call temp:= `getWriteHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWriteHoldCount:()I` @kind virtual;
  #L18635c.  v5:= temp;
  #L18635e.  if v5 != 0 then goto L18636c;
  #L186362.  call temp:= `getReadHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getReadHoldCount:()I` @kind virtual;
  #L186368.  v5:= temp;
  #L18636a.  goto L18636e;
  #L18636c.  v5:= 0I;
  #L18636e.  v6:= 0I;
  #L186370.  if v6 >= v5 then goto L186380;
  #L186374.  call `unlock`(v4) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L18637a.  v6:= v6 + 1;
  #L18637e.  goto L186370;
  #L186380.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;` @kind virtual;
  #L186386.  v0:= temp @kind object;
  #L186388.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.lock:()V` @kind virtual;
  #L18638e.  v6:= `@@kotlinx.coroutines.internal.ExceptionsConstuctorKt.c` @type ^`java.util.WeakHashMap` @kind object;
  #L186392.  call temp:= `getClass`(v9) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L186398.  v7:= temp @kind object;
  #L18639a.  if v2 != 0 then goto L1863a4;
  #L18639e.  v8:= `@@kotlinx.coroutines.internal.ExceptionsConstuctorKt$b.a` @type ^`kotlinx.coroutines.internal.ExceptionsConstuctorKt$b` @kind object;
  #L1863a2.  goto L1863a6;
  #L1863a4.  v8:= v2 @kind object;
  #L1863a6.  call temp:= `put`(v6, v7, v8) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1863ac.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1863b0.  if v3 >= v5 then goto L1863c0;
  #L1863b4.  call `lock`(v4) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L1863ba.  v3:= v3 + 1;
  #L1863be.  goto L1863b0;
  #L1863c0.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L1863c6.  if v2 != 0 then goto L1863cc;
  #L1863ca.  goto L1863da;
  #L1863cc.  call temp:= `invoke`(v2, v9) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1863d2.  v9:= temp @kind object;
  #L1863d4.  v1:= v9 @kind object;
  #L1863d6.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L1863da.  return v1 @kind object;
  #L1863dc.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1863de.  if v3 >= v5 then goto L1863ee;
  #L1863e2.  call `lock`(v4) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L1863e8.  v3:= v3 + 1;
  #L1863ec.  goto L1863de;
  #L1863ee.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L1863f4.  throw v9;
  #L1863f6.  call temp:= `invoke`(v2, v9) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1863fc.  v9:= temp @kind object;
  #L1863fe.  v9:= (`java.lang.Throwable`) v9 @kind object;
  #L186402.  return v9 @kind object;
  #L186404.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L186406.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L18640c.  throw v9;
  catch `java.lang.Throwable` @[L1861d6..L1861ee] goto L1861f0;
  catch `java.lang.Throwable` @[L18622e..L186246] goto L186404;
  catch `java.lang.Throwable` @[L1862ae..L1862c8] goto L1862e0;
  catch `java.lang.Throwable` @[L18638e..L1863b0] goto L1863dc;
}
