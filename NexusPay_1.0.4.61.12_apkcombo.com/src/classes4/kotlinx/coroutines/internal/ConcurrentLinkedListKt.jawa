record `kotlinx.coroutines.internal.ConcurrentLinkedListKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlinx.coroutines.internal.Symbol` `@@kotlinx.coroutines.internal.ConcurrentLinkedListKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/ConcurrentLinkedListKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L184d60.  v0:= new `kotlinx.coroutines.internal.Symbol`;
  #L184d64.  v1:= "CLOSED" @kind object;
  #L184d68.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/Symbol;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L184d6e.  `@@kotlinx.coroutines.internal.ConcurrentLinkedListKt.a` @type ^`kotlinx.coroutines.internal.Symbol` := v0 @kind object;
  #L184d72.  return @kind void;
}
procedure `kotlinx.coroutines.internal.Symbol` `access$getCLOSED$p`() @signature `Lkotlinx/coroutines/internal/ConcurrentLinkedListKt;.access$getCLOSED$p:()Lkotlinx/coroutines/internal/Symbol;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L184d48.  v0:= `@@kotlinx.coroutines.internal.ConcurrentLinkedListKt.a` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L184d4c.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.ConcurrentLinkedListNode` `close`(`kotlinx.coroutines.internal.ConcurrentLinkedListNode` v2 @kind object) @signature `Lkotlinx/coroutines/internal/ConcurrentLinkedListKt;.close:(Lkotlinx/coroutines/internal/ConcurrentLinkedListNode;)Lkotlinx/coroutines/internal/ConcurrentLinkedListNode;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L184d08.  call temp:= `access$getNextOrClosed`(v2) @signature `Lkotlinx/coroutines/internal/ConcurrentLinkedListNode;.access$getNextOrClosed:(Lkotlinx/coroutines/internal/ConcurrentLinkedListNode;)Ljava/lang/Object;` @kind static;
  #L184d0e.  v0:= temp @kind object;
  #L184d10.  call temp:= `access$getCLOSED$p`() @signature `Lkotlinx/coroutines/internal/ConcurrentLinkedListKt;.access$getCLOSED$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L184d16.  v1:= temp @kind object;
  #L184d18.  if v0 != v1 then goto L184d1e;
  #L184d1c.  return v2 @kind object;
  #L184d1e.  v0:= (`kotlinx.coroutines.internal.ConcurrentLinkedListNode`) v0 @kind object;
  #L184d22.  if v0 != 0 then goto L184d34;
  #L184d26.  call temp:= `markAsClosed`(v2) @signature `Lkotlinx/coroutines/internal/ConcurrentLinkedListNode;.markAsClosed:()Z` @kind virtual;
  #L184d2c.  v0:= temp;
  #L184d2e.  if v0 == 0 then goto L184d08;
  #L184d32.  return v2 @kind object;
  #L184d34.  v2:= v0 @kind object;
  #L184d36.  goto L184d08;
}
