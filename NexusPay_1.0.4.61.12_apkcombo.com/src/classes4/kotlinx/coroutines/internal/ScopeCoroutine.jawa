record `kotlinx.coroutines.internal.ScopeCoroutine` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.AbstractCoroutine` @kind class, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind interface {
  `kotlin.coroutines.Continuation` `kotlinx.coroutines.internal.ScopeCoroutine.uCont` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.ScopeCoroutine` v1 @kind this, `kotlin.coroutines.CoroutineContext` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/internal/ScopeCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L189168.  v0:= 1I;
  #L18916a.  call `<init>`(v1, v2, v0, v0) @signature `Lkotlinx/coroutines/AbstractCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;ZZ)V` @kind direct;
  #L189170.  v1.`kotlinx.coroutines.internal.ScopeCoroutine.uCont` @type ^`kotlin.coroutines.Continuation` := v3 @kind object;
  #L189174.  return @kind void;
}
procedure `void` `afterCompletion`(`kotlinx.coroutines.internal.ScopeCoroutine` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/internal/ScopeCoroutine;.afterCompletion:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L189188.  v0:= v3.`kotlinx.coroutines.internal.ScopeCoroutine.uCont` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L18918c.  call temp:= `intercepted`(v0) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L189192.  v0:= temp @kind object;
  #L189194.  v1:= v3.`kotlinx.coroutines.internal.ScopeCoroutine.uCont` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L189198.  call temp:= `recoverResult`(v4, v1) @signature `Lkotlinx/coroutines/CompletionStateKt;.recoverResult:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L18919e.  v4:= temp @kind object;
  #L1891a0.  v1:= 0I;
  #L1891a2.  v2:= 2I;
  #L1891a4.  call `resumeCancellableWith$default`(v0, v4, v1, v2, v1) @signature `Lkotlinx/coroutines/internal/DispatchedContinuationKt;.resumeCancellableWith$default:(Lkotlin/coroutines/Continuation;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @kind static;
  #L1891aa.  return @kind void;
}
procedure `void` `afterResume`(`kotlinx.coroutines.internal.ScopeCoroutine` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/internal/ScopeCoroutine;.afterResume:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1891bc.  v0:= v1.`kotlinx.coroutines.internal.ScopeCoroutine.uCont` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L1891c0.  call temp:= `recoverResult`(v2, v0) @signature `Lkotlinx/coroutines/CompletionStateKt;.recoverResult:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L1891c6.  v2:= temp @kind object;
  #L1891c8.  call `resumeWith`(v0, v2) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L1891ce.  return @kind void;
}
procedure `kotlin.coroutines.jvm.internal.CoroutineStackFrame` `getCallerFrame`(`kotlinx.coroutines.internal.ScopeCoroutine` v2 @kind this) @signature `Lkotlinx/coroutines/internal/ScopeCoroutine;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L189114.  v0:= v2.`kotlinx.coroutines.internal.ScopeCoroutine.uCont` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L189118.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L18911c.  if v1 == 0 then goto L189126;
  #L189120.  v0:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v0 @kind object;
  #L189124.  goto L189128;
  #L189126.  v0:= 0I;
  #L189128.  return v0 @kind object;
}
procedure `kotlinx.coroutines.Job` `getParent$kotlinx_coroutines_core`(`kotlinx.coroutines.internal.ScopeCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/internal/ScopeCoroutine;.getParent$kotlinx_coroutines_core:()Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L18913c.  call temp:= `getParentHandle$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/JobSupport;.getParentHandle$kotlinx_coroutines_core:()Lkotlinx/coroutines/ChildHandle;` @kind virtual;
  #L189142.  v0:= temp @kind object;
  #L189144.  if v0 != 0 then goto L18914c;
  #L189148.  v0:= 0I;
  #L18914a.  goto L189154;
  #L18914c.  call temp:= `getParent`(v0) @signature `Lkotlinx/coroutines/ChildHandle;.getParent:()Lkotlinx/coroutines/Job;` @kind interface;
  #L189152.  v0:= temp @kind object;
  #L189154.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.internal.ScopeCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/internal/ScopeCoroutine;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L189100.  v0:= 0I;
  #L189102.  return v0 @kind object;
}
procedure `boolean` `isScopedCoroutine`(`kotlinx.coroutines.internal.ScopeCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/internal/ScopeCoroutine;.isScopedCoroutine:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L1890ec.  v0:= 1I;
  #L1890ee.  return v0;
}
