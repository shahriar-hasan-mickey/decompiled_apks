record `kotlinx.coroutines.JobKt__JobKt` @kind class @AccessFlag FINAL_SYNTHETIC {
}
procedure `kotlinx.coroutines.Job` `A`(`kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.A:(Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L15a938.  v0:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L15a93c.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L15a942.  v0:= temp @kind object;
  #L15a944.  v0:= (`kotlinx.coroutines.Job`) v0 @kind object;
  #L15a948.  if v0 == 0 then goto L15a94e;
  #L15a94c.  return v0 @kind object;
  #L15a94e.  v0:= "Current context doesn't contain Job in it: " @kind object;
  #L15a952.  call temp:= `stringPlus`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15a958.  v1:= temp @kind object;
  #L15a95a.  v0:= new `java.lang.IllegalStateException`;
  #L15a95e.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15a964.  v1:= temp @kind object;
  #L15a966.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15a96c.  throw v0;
}
procedure `boolean` `B`(`kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.B:(Lkotlin/coroutines/CoroutineContext;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L15a7d0.  v0:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L15a7d4.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L15a7da.  v1:= temp @kind object;
  #L15a7dc.  v1:= (`kotlinx.coroutines.Job`) v1 @kind object;
  #L15a7e0.  if v1 != 0 then goto L15a7e8;
  #L15a7e4.  v1:= 0I;
  #L15a7e6.  goto L15a7f8;
  #L15a7e8.  call temp:= `isActive`(v1) @signature `Lkotlinx/coroutines/Job;.isActive:()Z` @kind interface;
  #L15a7ee.  v1:= temp;
  #L15a7f0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L15a7f6.  v1:= temp @kind object;
  #L15a7f8.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L15a7fc.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L15a802.  v1:= temp;
  #L15a804.  return v1;
}
procedure `java.lang.Throwable` `C`(`java.lang.Throwable` v2 @kind object, `kotlinx.coroutines.Job` v3 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.C:(Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L15a850.  if v2 != 0 then goto L15a864;
  #L15a854.  v2:= new `kotlinx.coroutines.JobCancellationException`;
  #L15a858.  v0:= 0I;
  #L15a85a.  v1:= "Job was cancelled" @kind object;
  #L15a85e.  call `<init>`(v2, v1, v0, v3) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L15a864.  return v2 @kind object;
}
procedure `kotlinx.coroutines.DisposableHandle` `a`(`kotlin.jvm.functions.Function0` v1 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.a:(Lkotlin/jvm/functions/Function0;)Lkotlinx/coroutines/DisposableHandle;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L15a8b8.  v0:= new `kotlinx.coroutines.JobKt__JobKt$DisposableHandle$1`;
  #L15a8bc.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/JobKt__JobKt$DisposableHandle$1;.<init>:(Lkotlin/jvm/functions/Function0;)V` @kind direct;
  #L15a8c2.  return v0 @kind object;
}
procedure `kotlinx.coroutines.CompletableJob` `b`(`kotlinx.coroutines.Job` v1 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.b:(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/CompletableJob;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L15a89c.  v0:= new `kotlinx.coroutines.JobImpl`;
  #L15a8a0.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/JobImpl;.<init>:(Lkotlinx/coroutines/Job;)V` @kind direct;
  #L15a8a6.  return v0 @kind object;
}
procedure `kotlinx.coroutines.Job` `c`(`kotlinx.coroutines.Job` v0 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.c:(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L15a91c.  call temp:= `Job`(v0) @signature `Lkotlinx/coroutines/JobKt;.Job:(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/CompletableJob;` @kind static;
  #L15a922.  v0:= temp @kind object;
  #L15a924.  return v0 @kind object;
}
procedure `kotlinx.coroutines.CompletableJob` `d`(`kotlinx.coroutines.Job` v0 @kind object, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.d:(Lkotlinx/coroutines/Job;ILjava/lang/Object;)Lkotlinx/coroutines/CompletableJob;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15a878.  v1:= v1 ^& 1;
  #L15a87c.  if v1 == 0 then goto L15a882;
  #L15a880.  v0:= 0I;
  #L15a882.  call temp:= `Job`(v0) @signature `Lkotlinx/coroutines/JobKt;.Job:(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/CompletableJob;` @kind static;
  #L15a888.  v0:= temp @kind object;
  #L15a88a.  return v0 @kind object;
}
procedure `kotlinx.coroutines.Job` `e`(`kotlinx.coroutines.Job` v0 @kind object, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.e:(Lkotlinx/coroutines/Job;ILjava/lang/Object;)Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15a8f8.  v1:= v1 ^& 1;
  #L15a8fc.  if v1 == 0 then goto L15a902;
  #L15a900.  v0:= 0I;
  #L15a902.  call temp:= `Job`(v0) @signature `Lkotlinx/coroutines/JobKt;.Job:(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;` @kind static;
  #L15a908.  v0:= temp @kind object;
  #L15a90a.  return v0 @kind object;
}
procedure `void` `f`(`kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.f:(Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L15a9c8.  v0:= 0I;
  #L15a9ca.  call `cancel`(v1, v0) @signature `Lkotlinx/coroutines/JobKt;.cancel:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;)V` @kind static;
  #L15a9d0.  return @kind void;
}
procedure `void` `g`(`kotlin.coroutines.CoroutineContext` v1 @kind object, `java.util.concurrent.CancellationException` v2 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.g:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L15a9e4.  v0:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L15a9e8.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L15a9ee.  v1:= temp @kind object;
  #L15a9f0.  v1:= (`kotlinx.coroutines.Job`) v1 @kind object;
  #L15a9f4.  if v1 != 0 then goto L15a9fa;
  #L15a9f8.  goto L15aa00;
  #L15a9fa.  call `cancel`(v1, v2) @signature `Lkotlinx/coroutines/Job;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L15aa00.  return @kind void;
}
procedure `void` `h`(`kotlinx.coroutines.Job` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.h:(Lkotlinx/coroutines/Job;Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L15aa14.  call temp:= `CancellationException`(v1, v2) @signature `Lkotlinx/coroutines/ExceptionsKt;.CancellationException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;` @kind static;
  #L15aa1a.  v1:= temp @kind object;
  #L15aa1c.  call `cancel`(v0, v1) @signature `Lkotlinx/coroutines/Job;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L15aa22.  return @kind void;
}
procedure `boolean` `i`(`kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.i:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L15a788.  v0:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L15a78c.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L15a792.  v1:= temp @kind object;
  #L15a794.  v0:= instanceof @variable v1 @type ^`kotlinx.coroutines.JobSupport` @kind boolean;
  #L15a798.  if v0 == 0 then goto L15a7a2;
  #L15a79c.  v1:= (`kotlinx.coroutines.JobSupport`) v1 @kind object;
  #L15a7a0.  goto L15a7a4;
  #L15a7a2.  v1:= 0I;
  #L15a7a4.  if v1 != 0 then goto L15a7ac;
  #L15a7a8.  v1:= 0I;
  #L15a7aa.  return v1;
  #L15a7ac.  call temp:= `C`(v2, v1) @signature `Lkotlinx/coroutines/JobKt__JobKt;.C:(Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)Ljava/lang/Throwable;` @kind static;
  #L15a7b2.  v2:= temp @kind object;
  #L15a7b4.  call `cancelInternal`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L15a7ba.  v1:= 1I;
  #L15a7bc.  return v1;
}
procedure `void` `j`(`kotlin.coroutines.CoroutineContext` v0 @kind object, `java.util.concurrent.CancellationException` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.j:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15a980.  v2:= v2 ^& 1;
  #L15a984.  if v2 == 0 then goto L15a98a;
  #L15a988.  v1:= 0I;
  #L15a98a.  call `cancel`(v0, v1) @signature `Lkotlinx/coroutines/JobKt;.cancel:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;)V` @kind static;
  #L15a990.  return @kind void;
}
procedure `void` `k`(`kotlinx.coroutines.Job` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.k:(Lkotlinx/coroutines/Job;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15a9a4.  v3:= v3 ^& 2;
  #L15a9a8.  if v3 == 0 then goto L15a9ae;
  #L15a9ac.  v2:= 0I;
  #L15a9ae.  call `cancel`(v0, v1, v2) @signature `Lkotlinx/coroutines/JobKt;.cancel:(Lkotlinx/coroutines/Job;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L15a9b4.  return @kind void;
}
procedure `boolean` `l`(`kotlin.coroutines.CoroutineContext` v0 @kind object, `java.lang.Throwable` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.l:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;ILjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15a764.  v2:= v2 ^& 1;
  #L15a768.  if v2 == 0 then goto L15a76e;
  #L15a76c.  v1:= 0I;
  #L15a76e.  call temp:= `cancel`(v0, v1) @signature `Lkotlinx/coroutines/JobKt;.cancel:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)Z` @kind static;
  #L15a774.  v0:= temp;
  #L15a776.  return v0;
}
procedure `java.lang.Object` `m`(`kotlinx.coroutines.Job` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.m:(Lkotlinx/coroutines/Job;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L15a818.  v0:= 0I;
  #L15a81a.  v1:= 1I;
  #L15a81c.  call `cancel$default`(v2, v0, v1, v0) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.cancel$default:(Lkotlinx/coroutines/Job;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V` @kind static;
  #L15a822.  call temp:= `join`(v2, v3) @signature `Lkotlinx/coroutines/Job;.join:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind interface;
  #L15a828.  v2:= temp @kind object;
  #L15a82a.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L15a830.  v3:= temp @kind object;
  #L15a832.  if v2 != v3 then goto L15a838;
  #L15a836.  return v2 @kind object;
  #L15a838.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15a83c.  return v2 @kind object;
}
procedure `void` `n`(`kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.n:(Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L15aac4.  v0:= 0I;
  #L15aac6.  call `cancelChildren`(v1, v0) @signature `Lkotlinx/coroutines/JobKt;.cancelChildren:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;)V` @kind static;
  #L15aacc.  return @kind void;
}
procedure `void` `o`(`kotlin.coroutines.CoroutineContext` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.o:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L15aae0.  v0:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L15aae4.  call temp:= `get`(v3, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L15aaea.  v3:= temp @kind object;
  #L15aaec.  v3:= (`kotlinx.coroutines.Job`) v3 @kind object;
  #L15aaf0.  if v3 != 0 then goto L15aaf6;
  #L15aaf4.  return @kind void;
  #L15aaf6.  call temp:= `getChildren`(v3) @signature `Lkotlinx/coroutines/Job;.getChildren:()Lkotlin/sequences/Sequence;` @kind interface;
  #L15aafc.  v0:= temp @kind object;
  #L15aafe.  call temp:= `iterator`(v0) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15ab04.  v0:= temp @kind object;
  #L15ab06.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15ab0c.  v1:= temp;
  #L15ab0e.  if v1 == 0 then goto L15ab44;
  #L15ab12.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15ab18.  v1:= temp @kind object;
  #L15ab1a.  v1:= (`kotlinx.coroutines.Job`) v1 @kind object;
  #L15ab1e.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.JobSupport` @kind boolean;
  #L15ab22.  if v2 == 0 then goto L15ab2c;
  #L15ab26.  v1:= (`kotlinx.coroutines.JobSupport`) v1 @kind object;
  #L15ab2a.  goto L15ab2e;
  #L15ab2c.  v1:= 0I;
  #L15ab2e.  if v1 != 0 then goto L15ab34;
  #L15ab32.  goto L15ab06;
  #L15ab34.  call temp:= `C`(v4, v3) @signature `Lkotlinx/coroutines/JobKt__JobKt;.C:(Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)Ljava/lang/Throwable;` @kind static;
  #L15ab3a.  v2:= temp @kind object;
  #L15ab3c.  call `cancelInternal`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L15ab42.  goto L15ab06;
  #L15ab44.  return @kind void;
}
procedure `void` `p`(`kotlin.coroutines.CoroutineContext` v1 @kind object, `java.util.concurrent.CancellationException` v2 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.p:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L15ab58.  v0:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L15ab5c.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L15ab62.  v1:= temp @kind object;
  #L15ab64.  v1:= (`kotlinx.coroutines.Job`) v1 @kind object;
  #L15ab68.  if v1 != 0 then goto L15ab6e;
  #L15ab6c.  goto L15ab9e;
  #L15ab6e.  call temp:= `getChildren`(v1) @signature `Lkotlinx/coroutines/Job;.getChildren:()Lkotlin/sequences/Sequence;` @kind interface;
  #L15ab74.  v1:= temp @kind object;
  #L15ab76.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15ab7c.  v1:= temp @kind object;
  #L15ab7e.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15ab84.  v0:= temp;
  #L15ab86.  if v0 == 0 then goto L15ab9e;
  #L15ab8a.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15ab90.  v0:= temp @kind object;
  #L15ab92.  v0:= (`kotlinx.coroutines.Job`) v0 @kind object;
  #L15ab96.  call `cancel`(v0, v2) @signature `Lkotlinx/coroutines/Job;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L15ab9c.  goto L15ab7e;
  #L15ab9e.  return @kind void;
}
procedure `void` `q`(`kotlinx.coroutines.Job` v1 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.q:(Lkotlinx/coroutines/Job;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L15abb0.  v0:= 0I;
  #L15abb2.  call `cancelChildren`(v1, v0) @signature `Lkotlinx/coroutines/JobKt;.cancelChildren:(Lkotlinx/coroutines/Job;Ljava/util/concurrent/CancellationException;)V` @kind static;
  #L15abb8.  return @kind void;
}
procedure `void` `r`(`kotlinx.coroutines.Job` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.r:(Lkotlinx/coroutines/Job;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L15abcc.  call temp:= `getChildren`(v3) @signature `Lkotlinx/coroutines/Job;.getChildren:()Lkotlin/sequences/Sequence;` @kind interface;
  #L15abd2.  v0:= temp @kind object;
  #L15abd4.  call temp:= `iterator`(v0) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15abda.  v0:= temp @kind object;
  #L15abdc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15abe2.  v1:= temp;
  #L15abe4.  if v1 == 0 then goto L15ac1a;
  #L15abe8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15abee.  v1:= temp @kind object;
  #L15abf0.  v1:= (`kotlinx.coroutines.Job`) v1 @kind object;
  #L15abf4.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.JobSupport` @kind boolean;
  #L15abf8.  if v2 == 0 then goto L15ac02;
  #L15abfc.  v1:= (`kotlinx.coroutines.JobSupport`) v1 @kind object;
  #L15ac00.  goto L15ac04;
  #L15ac02.  v1:= 0I;
  #L15ac04.  if v1 != 0 then goto L15ac0a;
  #L15ac08.  goto L15abdc;
  #L15ac0a.  call temp:= `C`(v4, v3) @signature `Lkotlinx/coroutines/JobKt__JobKt;.C:(Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)Ljava/lang/Throwable;` @kind static;
  #L15ac10.  v2:= temp @kind object;
  #L15ac12.  call `cancelInternal`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L15ac18.  goto L15abdc;
  #L15ac1a.  return @kind void;
}
procedure `void` `s`(`kotlinx.coroutines.Job` v1 @kind object, `java.util.concurrent.CancellationException` v2 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.s:(Lkotlinx/coroutines/Job;Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L15ac2c.  call temp:= `getChildren`(v1) @signature `Lkotlinx/coroutines/Job;.getChildren:()Lkotlin/sequences/Sequence;` @kind interface;
  #L15ac32.  v1:= temp @kind object;
  #L15ac34.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15ac3a.  v1:= temp @kind object;
  #L15ac3c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15ac42.  v0:= temp;
  #L15ac44.  if v0 == 0 then goto L15ac5c;
  #L15ac48.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15ac4e.  v0:= temp @kind object;
  #L15ac50.  v0:= (`kotlinx.coroutines.Job`) v0 @kind object;
  #L15ac54.  call `cancel`(v0, v2) @signature `Lkotlinx/coroutines/Job;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L15ac5a.  goto L15ac3c;
  #L15ac5c.  return @kind void;
}
procedure `void` `t`(`kotlin.coroutines.CoroutineContext` v0 @kind object, `java.lang.Throwable` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.t:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15aa34.  v2:= v2 ^& 1;
  #L15aa38.  if v2 == 0 then goto L15aa3e;
  #L15aa3c.  v1:= 0I;
  #L15aa3e.  call `cancelChildren`(v0, v1) @signature `Lkotlinx/coroutines/JobKt;.cancelChildren:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V` @kind static;
  #L15aa44.  return @kind void;
}
procedure `void` `u`(`kotlin.coroutines.CoroutineContext` v0 @kind object, `java.util.concurrent.CancellationException` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.u:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15aa58.  v2:= v2 ^& 1;
  #L15aa5c.  if v2 == 0 then goto L15aa62;
  #L15aa60.  v1:= 0I;
  #L15aa62.  call `cancelChildren`(v0, v1) @signature `Lkotlinx/coroutines/JobKt;.cancelChildren:(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;)V` @kind static;
  #L15aa68.  return @kind void;
}
procedure `void` `v`(`kotlinx.coroutines.Job` v0 @kind object, `java.lang.Throwable` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.v:(Lkotlinx/coroutines/Job;Ljava/lang/Throwable;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15aa7c.  v2:= v2 ^& 1;
  #L15aa80.  if v2 == 0 then goto L15aa86;
  #L15aa84.  v1:= 0I;
  #L15aa86.  call `cancelChildren`(v0, v1) @signature `Lkotlinx/coroutines/JobKt;.cancelChildren:(Lkotlinx/coroutines/Job;Ljava/lang/Throwable;)V` @kind static;
  #L15aa8c.  return @kind void;
}
procedure `void` `w`(`kotlinx.coroutines.Job` v0 @kind object, `java.util.concurrent.CancellationException` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.w:(Lkotlinx/coroutines/Job;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15aaa0.  v2:= v2 ^& 1;
  #L15aaa4.  if v2 == 0 then goto L15aaaa;
  #L15aaa8.  v1:= 0I;
  #L15aaaa.  call `cancelChildren`(v0, v1) @signature `Lkotlinx/coroutines/JobKt;.cancelChildren:(Lkotlinx/coroutines/Job;Ljava/util/concurrent/CancellationException;)V` @kind static;
  #L15aab0.  return @kind void;
}
procedure `kotlinx.coroutines.DisposableHandle` `x`(`kotlinx.coroutines.Job` v1 @kind object, `kotlinx.coroutines.DisposableHandle` v2 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.x:(Lkotlinx/coroutines/Job;Lkotlinx/coroutines/DisposableHandle;)Lkotlinx/coroutines/DisposableHandle;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L15a8d4.  v0:= new `kotlinx.coroutines.DisposeOnCompletion`;
  #L15a8d8.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/DisposeOnCompletion;.<init>:(Lkotlinx/coroutines/DisposableHandle;)V` @kind direct;
  #L15a8de.  call temp:= `invokeOnCompletion`(v1, v0) @signature `Lkotlinx/coroutines/Job;.invokeOnCompletion:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @kind interface;
  #L15a8e4.  v1:= temp @kind object;
  #L15a8e6.  return v1 @kind object;
}
procedure `void` `y`(`kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.y:(Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L15ac70.  v0:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L15ac74.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L15ac7a.  v1:= temp @kind object;
  #L15ac7c.  v1:= (`kotlinx.coroutines.Job`) v1 @kind object;
  #L15ac80.  if v1 != 0 then goto L15ac86;
  #L15ac84.  goto L15ac8c;
  #L15ac86.  call `ensureActive`(v1) @signature `Lkotlinx/coroutines/JobKt;.ensureActive:(Lkotlinx/coroutines/Job;)V` @kind static;
  #L15ac8c.  return @kind void;
}
procedure `void` `z`(`kotlinx.coroutines.Job` v1 @kind object) @signature `Lkotlinx/coroutines/JobKt__JobKt;.z:(Lkotlinx/coroutines/Job;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L15aca0.  call temp:= `isActive`(v1) @signature `Lkotlinx/coroutines/Job;.isActive:()Z` @kind interface;
  #L15aca6.  v0:= temp;
  #L15aca8.  if v0 == 0 then goto L15acae;
  #L15acac.  return @kind void;
  #L15acae.  call temp:= `getCancellationException`(v1) @signature `Lkotlinx/coroutines/Job;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L15acb4.  v1:= temp @kind object;
  #L15acb6.  throw v1;
}
