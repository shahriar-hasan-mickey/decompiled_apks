record `kotlinx.coroutines.ChildHandleNode` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.JobCancellingNode` @kind class, `kotlinx.coroutines.ChildHandle` @kind interface {
  `kotlinx.coroutines.ChildJob` `kotlinx.coroutines.ChildHandleNode.childJob` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.ChildHandleNode` v0 @kind this, `kotlinx.coroutines.ChildJob` v1 @kind object) @signature `Lkotlinx/coroutines/ChildHandleNode;.<init>:(Lkotlinx/coroutines/ChildJob;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L154f60.  call `<init>`(v0) @signature `Lkotlinx/coroutines/JobCancellingNode;.<init>:()V` @kind direct;
  #L154f66.  v0.`kotlinx.coroutines.ChildHandleNode.childJob` @type ^`kotlinx.coroutines.ChildJob` := v1 @kind object;
  #L154f6a.  return @kind void;
}
procedure `boolean` `childCancelled`(`kotlinx.coroutines.ChildHandleNode` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/ChildHandleNode;.childCancelled:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L154f00.  call temp:= `getJob`(v1) @signature `Lkotlinx/coroutines/JobNode;.getJob:()Lkotlinx/coroutines/JobSupport;` @kind virtual;
  #L154f06.  v0:= temp @kind object;
  #L154f08.  call temp:= `childCancelled`(v0, v2) @signature `Lkotlinx/coroutines/JobSupport;.childCancelled:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L154f0e.  v2:= temp;
  #L154f10.  return v2;
}
procedure `kotlinx.coroutines.Job` `getParent`(`kotlinx.coroutines.ChildHandleNode` v1 @kind this) @signature `Lkotlinx/coroutines/ChildHandleNode;.getParent:()Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L154f44.  call temp:= `getJob`(v1) @signature `Lkotlinx/coroutines/JobNode;.getJob:()Lkotlinx/coroutines/JobSupport;` @kind virtual;
  #L154f4a.  v0:= temp @kind object;
  #L154f4c.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.ChildHandleNode` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/ChildHandleNode;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L154f24.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L154f28.  call `invoke`(v0, v1) @signature `Lkotlinx/coroutines/ChildHandleNode;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L154f2e.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L154f32.  return v1 @kind object;
}
procedure `void` `invoke`(`kotlinx.coroutines.ChildHandleNode` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/ChildHandleNode;.invoke:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L154f7c.  v2:= v1.`kotlinx.coroutines.ChildHandleNode.childJob` @type ^`kotlinx.coroutines.ChildJob` @kind object;
  #L154f80.  call temp:= `getJob`(v1) @signature `Lkotlinx/coroutines/JobNode;.getJob:()Lkotlinx/coroutines/JobSupport;` @kind virtual;
  #L154f86.  v0:= temp @kind object;
  #L154f88.  call `parentCancelled`(v2, v0) @signature `Lkotlinx/coroutines/ChildJob;.parentCancelled:(Lkotlinx/coroutines/ParentJob;)V` @kind interface;
  #L154f8e.  return @kind void;
}
