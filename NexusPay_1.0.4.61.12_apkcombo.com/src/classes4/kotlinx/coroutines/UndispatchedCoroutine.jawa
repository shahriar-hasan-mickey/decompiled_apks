record `kotlinx.coroutines.UndispatchedCoroutine` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.ScopeCoroutine` @kind class {
  `kotlin.coroutines.CoroutineContext` `kotlinx.coroutines.UndispatchedCoroutine.c` @AccessFlag PRIVATE;
  `java.lang.Object` `kotlinx.coroutines.UndispatchedCoroutine.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlinx.coroutines.UndispatchedCoroutine` v1 @kind this, `kotlin.coroutines.CoroutineContext` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L15edd8.  v0:= `@@kotlinx.coroutines.l0.a` @type ^`kotlinx.coroutines.l0` @kind object;
  #L15eddc.  call temp:= `get`(v2, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L15ede2.  v0:= temp @kind object;
  #L15ede4.  if v0 != 0 then goto L15edf4;
  #L15ede8.  v0:= `@@kotlinx.coroutines.l0.a` @type ^`kotlinx.coroutines.l0` @kind object;
  #L15edec.  call temp:= `plus`(v2, v0) @signature `Lkotlin/coroutines/CoroutineContext;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L15edf2.  v2:= temp @kind object;
  #L15edf4.  call `<init>`(v1, v2, v3) @signature `Lkotlinx/coroutines/internal/ScopeCoroutine;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L15edfa.  return @kind void;
}
procedure `void` `afterResume`(`kotlinx.coroutines.UndispatchedCoroutine` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.afterResume:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15ee0c.  v0:= v5.`kotlinx.coroutines.UndispatchedCoroutine.c` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L15ee10.  v1:= 0I;
  #L15ee12.  if v0 != 0 then goto L15ee18;
  #L15ee16.  goto L15ee2a;
  #L15ee18.  v2:= v5.`kotlinx.coroutines.UndispatchedCoroutine.d` @type ^`java.lang.Object` @kind object;
  #L15ee1c.  call `restoreThreadContext`(v0, v2) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L15ee22.  v5.`kotlinx.coroutines.UndispatchedCoroutine.c` @type ^`kotlin.coroutines.CoroutineContext` := v1 @kind object;
  #L15ee26.  v5.`kotlinx.coroutines.UndispatchedCoroutine.d` @type ^`java.lang.Object` := v1 @kind object;
  #L15ee2a.  v0:= v5.`kotlinx.coroutines.internal.ScopeCoroutine.uCont` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L15ee2e.  call temp:= `recoverResult`(v6, v0) @signature `Lkotlinx/coroutines/CompletionStateKt;.recoverResult:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind static;
  #L15ee34.  v6:= temp @kind object;
  #L15ee36.  v0:= v5.`kotlinx.coroutines.internal.ScopeCoroutine.uCont` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L15ee3a.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L15ee40.  v2:= temp @kind object;
  #L15ee42.  call temp:= `updateThreadContext`(v2, v1) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.updateThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15ee48.  v3:= temp @kind object;
  #L15ee4a.  v4:= `@@kotlinx.coroutines.internal.ThreadContextKt.NO_THREAD_ELEMENTS` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L15ee4e.  if v3 == v4 then goto L15ee5a;
  #L15ee52.  call temp:= `updateUndispatchedCompletion`(v0, v2, v3) @signature `Lkotlinx/coroutines/CoroutineContextKt;.updateUndispatchedCompletion:(Lkotlin/coroutines/Continuation;Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)Lkotlinx/coroutines/UndispatchedCoroutine;` @kind static;
  #L15ee58.  v1:= temp @kind object;
  #L15ee5a.  v0:= v5.`kotlinx.coroutines.internal.ScopeCoroutine.uCont` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L15ee5e.  call `resumeWith`(v0, v6) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L15ee64.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15ee68.  if v1 == 0 then goto L15ee78;
  #L15ee6c.  call temp:= `clearThreadContext`(v1) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L15ee72.  v6:= temp;
  #L15ee74.  if v6 == 0 then goto L15ee7e;
  #L15ee78.  call `restoreThreadContext`(v2, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L15ee7e.  return @kind void;
  #L15ee80.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15ee82.  if v1 == 0 then goto L15ee92;
  #L15ee86.  call temp:= `clearThreadContext`(v1) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @kind virtual;
  #L15ee8c.  v0:= temp;
  #L15ee8e.  if v0 == 0 then goto L15ee98;
  #L15ee92.  call `restoreThreadContext`(v2, v3) @signature `Lkotlinx/coroutines/internal/ThreadContextKt;.restoreThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @kind static;
  #L15ee98.  throw v6;
  catch `java.lang.Throwable` @[L15ee5a..L15ee68] goto L15ee80;
}
procedure `boolean` `clearThreadContext`(`kotlinx.coroutines.UndispatchedCoroutine` v1 @kind this) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.clearThreadContext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15edac.  v0:= v1.`kotlinx.coroutines.UndispatchedCoroutine.c` @type ^`kotlin.coroutines.CoroutineContext` @kind object;
  #L15edb0.  if v0 != 0 then goto L15edb8;
  #L15edb4.  v0:= 0I;
  #L15edb6.  return v0;
  #L15edb8.  v0:= 0I;
  #L15edba.  v1.`kotlinx.coroutines.UndispatchedCoroutine.c` @type ^`kotlin.coroutines.CoroutineContext` := v0 @kind object;
  #L15edbe.  v1.`kotlinx.coroutines.UndispatchedCoroutine.d` @type ^`java.lang.Object` := v0 @kind object;
  #L15edc2.  v0:= 1I;
  #L15edc4.  return v0;
}
procedure `void` `saveThreadContext`(`kotlinx.coroutines.UndispatchedCoroutine` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/UndispatchedCoroutine;.saveThreadContext:(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L15eeb8.  v0.`kotlinx.coroutines.UndispatchedCoroutine.c` @type ^`kotlin.coroutines.CoroutineContext` := v1 @kind object;
  #L15eebc.  v0.`kotlinx.coroutines.UndispatchedCoroutine.d` @type ^`java.lang.Object` := v2 @kind object;
  #L15eec0.  return @kind void;
}
