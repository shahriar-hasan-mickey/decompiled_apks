record `kotlinx.coroutines.InterruptibleKt$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.SuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `int` `kotlinx.coroutines.InterruptibleKt$a.a` @AccessFlag ;
  `java.lang.Object` `kotlinx.coroutines.InterruptibleKt$a.b` @AccessFlag PRIVATE_SYNTHETIC;
  `kotlin.jvm.functions.Function0` `kotlinx.coroutines.InterruptibleKt$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.InterruptibleKt$a` v0 @kind this, `kotlin.jvm.functions.Function0` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/InterruptibleKt$a;.<init>:(Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L159fa0.  v0.`kotlinx.coroutines.InterruptibleKt$a.c` @type ^`kotlin.jvm.functions.Function0` := v1 @kind object;
  #L159fa4.  v1:= 2I;
  #L159fa6.  call `<init>`(v0, v1, v2) @signature `Lkotlin/coroutines/jvm/internal/SuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L159fac.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlinx.coroutines.InterruptibleKt$a` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/InterruptibleKt$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L159f7c.  v0:= new `kotlinx.coroutines.InterruptibleKt$a`;
  #L159f80.  v1:= v2.`kotlinx.coroutines.InterruptibleKt$a.c` @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L159f84.  call `<init>`(v0, v1, v4) @signature `Lkotlinx/coroutines/InterruptibleKt$a;.<init>:(Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L159f8a.  v0.`kotlinx.coroutines.InterruptibleKt$a.b` @type ^`java.lang.Object` := v3 @kind object;
  #L159f8e.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.InterruptibleKt$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/InterruptibleKt$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L159ed8.  v1:= (`kotlinx.coroutines.CoroutineScope`) v1 @kind object;
  #L159edc.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L159ee0.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/InterruptibleKt$a;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L159ee6.  v1:= temp @kind object;
  #L159ee8.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.InterruptibleKt$a` v0 @kind this, `kotlinx.coroutines.CoroutineScope` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/InterruptibleKt$a;.invoke:(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L159efc.  call temp:= `create`(v0, v1, v2) @signature `Lkotlinx/coroutines/InterruptibleKt$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L159f02.  v1:= temp @kind object;
  #L159f04.  v1:= (`kotlinx.coroutines.InterruptibleKt$a`) v1 @kind object;
  #L159f08.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L159f0c.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlinx/coroutines/InterruptibleKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L159f12.  v1:= temp @kind object;
  #L159f14.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlinx.coroutines.InterruptibleKt$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/InterruptibleKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L159f28.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L159f2e.  v0:= v1.`kotlinx.coroutines.InterruptibleKt$a.a` @type ^`int`;
  #L159f32.  if v0 != 0 then goto L159f5a;
  #L159f36.  call `throwOnFailure`(v2) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L159f3c.  v2:= v1.`kotlinx.coroutines.InterruptibleKt$a.b` @type ^`java.lang.Object` @kind object;
  #L159f40.  v2:= (`kotlinx.coroutines.CoroutineScope`) v2 @kind object;
  #L159f44.  call temp:= `getCoroutineContext`(v2) @signature `Lkotlinx/coroutines/CoroutineScope;.getCoroutineContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L159f4a.  v2:= temp @kind object;
  #L159f4c.  v0:= v1.`kotlinx.coroutines.InterruptibleKt$a.c` @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L159f50.  call temp:= `access$runInterruptibleInExpectedContext`(v2, v0) @signature `Lkotlinx/coroutines/InterruptibleKt;.access$runInterruptibleInExpectedContext:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;` @kind static;
  #L159f56.  v2:= temp @kind object;
  #L159f58.  return v2 @kind object;
  #L159f5a.  v2:= new `java.lang.IllegalStateException`;
  #L159f5e.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L159f62.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L159f68.  throw v2;
}
