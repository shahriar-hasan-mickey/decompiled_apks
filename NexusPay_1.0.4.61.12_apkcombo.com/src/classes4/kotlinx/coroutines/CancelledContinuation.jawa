record `kotlinx.coroutines.CancelledContinuation` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.CompletedExceptionally` @kind class {
  `int` `kotlinx.coroutines.CancelledContinuation._resumed` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
}
global `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `@@kotlinx.coroutines.CancelledContinuation.b` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CancelledContinuation;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L154e04.  v0:= constclass @type ^`kotlinx.coroutines.CancelledContinuation` @kind object;
  #L154e08.  v1:= "_resumed" @kind object;
  #L154e0c.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;` @kind static;
  #L154e12.  v0:= temp @kind object;
  #L154e14.  `@@kotlinx.coroutines.CancelledContinuation.b` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v0 @kind object;
  #L154e18.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.CancelledContinuation` v2 @kind this, `kotlin.coroutines.Continuation` v3 @kind object, `java.lang.Throwable` v4 @kind object, `boolean` v5 ) @signature `Lkotlinx/coroutines/CancelledContinuation;.<init>:(Lkotlin/coroutines/Continuation;Ljava/lang/Throwable;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L154e2c.  if v4 != 0 then goto L154e66;
  #L154e30.  v4:= new `java.util.concurrent.CancellationException`;
  #L154e34.  v0:= new `java.lang.StringBuilder`;
  #L154e38.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L154e3e.  v1:= "Continuation " @kind object;
  #L154e42.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154e48.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154e4e.  v3:= " was cancelled normally" @kind object;
  #L154e52.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L154e58.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L154e5e.  v3:= temp @kind object;
  #L154e60.  call `<init>`(v4, v3) @signature `Ljava/util/concurrent/CancellationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L154e66.  call `<init>`(v2, v4, v5) @signature `Lkotlinx/coroutines/CompletedExceptionally;.<init>:(Ljava/lang/Throwable;Z)V` @kind direct;
  #L154e6c.  v3:= 0I;
  #L154e6e.  v2.`kotlinx.coroutines.CancelledContinuation._resumed` @type ^`int` := v3;
  #L154e72.  return @kind void;
}
procedure `boolean` `makeResumed`(`kotlinx.coroutines.CancelledContinuation` v3 @kind this) @signature `Lkotlinx/coroutines/CancelledContinuation;.makeResumed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L154de0.  v0:= `@@kotlinx.coroutines.CancelledContinuation.b` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L154de4.  v1:= 0I;
  #L154de6.  v2:= 1I;
  #L154de8.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L154dee.  v0:= temp;
  #L154df0.  return v0;
}
