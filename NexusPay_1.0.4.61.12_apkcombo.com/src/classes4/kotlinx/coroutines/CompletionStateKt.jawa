record `kotlinx.coroutines.CompletionStateKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `recoverResult`(`java.lang.Object` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/CompletionStateKt;.recoverResult:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L155f00.  v0:= instanceof @variable v1 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L155f04.  if v0 == 0 then goto L155f48;
  #L155f08.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L155f0c.  v1:= (`kotlinx.coroutines.CompletedExceptionally`) v1 @kind object;
  #L155f10.  v1:= v1.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L155f14.  call temp:= `getRECOVER_STACK_TRACES`() @signature `Lkotlinx/coroutines/DebugKt;.getRECOVER_STACK_TRACES:()Z` @kind static;
  #L155f1a.  v0:= temp;
  #L155f1c.  if v0 == 0 then goto L155f36;
  #L155f20.  v0:= instanceof @variable v2 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L155f24.  if v0 != 0 then goto L155f2a;
  #L155f28.  goto L155f36;
  #L155f2a.  v2:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v2 @kind object;
  #L155f2e.  call temp:= `access$recoverFromStackFrame`(v1, v2) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.access$recoverFromStackFrame:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @kind static;
  #L155f34.  v1:= temp @kind object;
  #L155f36.  call temp:= `createFailure`(v1) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L155f3c.  v1:= temp @kind object;
  #L155f3e.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L155f44.  v1:= temp @kind object;
  #L155f46.  goto L155f54;
  #L155f48.  v2:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L155f4c.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L155f52.  v1:= temp @kind object;
  #L155f54.  return v1 @kind object;
}
procedure `java.lang.Object` `toState`(`java.lang.Object` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlinx/coroutines/CompletionStateKt;.toState:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L155f8c.  call temp:= `exceptionOrNull-impl`(v3) @signature `Lkotlin/Result;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L155f92.  v0:= temp @kind object;
  #L155f94.  if v0 != 0 then goto L155faa;
  #L155f98.  if v4 == 0 then goto L155fba;
  #L155f9c.  v0:= new `kotlinx.coroutines.CompletedWithCancellation`;
  #L155fa0.  call `<init>`(v0, v3, v4) @signature `Lkotlinx/coroutines/CompletedWithCancellation;.<init>:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L155fa6.  v3:= v0 @kind object;
  #L155fa8.  goto L155fba;
  #L155faa.  v3:= new `kotlinx.coroutines.CompletedExceptionally`;
  #L155fae.  v4:= 0I;
  #L155fb0.  v1:= 2I;
  #L155fb2.  v2:= 0I;
  #L155fb4.  call `<init>`(v3, v0, v4, v1, v2) @signature `Lkotlinx/coroutines/CompletedExceptionally;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L155fba.  return v3 @kind object;
}
procedure `java.lang.Object` `toState`(`java.lang.Object` v3 @kind object, `kotlinx.coroutines.CancellableContinuation` v4 @kind object) @signature `Lkotlinx/coroutines/CompletionStateKt;.toState:(Ljava/lang/Object;Lkotlinx/coroutines/CancellableContinuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L155fcc.  call temp:= `exceptionOrNull-impl`(v3) @signature `Lkotlin/Result;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L155fd2.  v0:= temp @kind object;
  #L155fd4.  if v0 != 0 then goto L155fda;
  #L155fd8.  goto L15600c;
  #L155fda.  v3:= new `kotlinx.coroutines.CompletedExceptionally`;
  #L155fde.  call temp:= `getRECOVER_STACK_TRACES`() @signature `Lkotlinx/coroutines/DebugKt;.getRECOVER_STACK_TRACES:()Z` @kind static;
  #L155fe4.  v1:= temp;
  #L155fe6.  if v1 == 0 then goto L156000;
  #L155fea.  v1:= instanceof @variable v4 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L155fee.  if v1 != 0 then goto L155ff4;
  #L155ff2.  goto L156000;
  #L155ff4.  v4:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v4 @kind object;
  #L155ff8.  call temp:= `access$recoverFromStackFrame`(v0, v4) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.access$recoverFromStackFrame:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @kind static;
  #L155ffe.  v0:= temp @kind object;
  #L156000.  v4:= 0I;
  #L156002.  v1:= 2I;
  #L156004.  v2:= 0I;
  #L156006.  call `<init>`(v3, v0, v4, v1, v2) @signature `Lkotlinx/coroutines/CompletedExceptionally;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L15600c.  return v3 @kind object;
}
procedure `java.lang.Object` `toState$default`(`java.lang.Object` v0 @kind object, `kotlin.jvm.functions.Function1` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/CompletionStateKt;.toState$default:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L155f68.  v2:= v2 ^& 1;
  #L155f6c.  if v2 == 0 then goto L155f72;
  #L155f70.  v1:= 0I;
  #L155f72.  call temp:= `toState`(v0, v1) @signature `Lkotlinx/coroutines/CompletionStateKt;.toState:(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;` @kind static;
  #L155f78.  v0:= temp @kind object;
  #L155f7a.  return v0 @kind object;
}
