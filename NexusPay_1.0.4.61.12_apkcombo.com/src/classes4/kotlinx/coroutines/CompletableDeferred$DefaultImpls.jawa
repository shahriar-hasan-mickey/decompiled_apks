record `kotlinx.coroutines.CompletableDeferred$DefaultImpls` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `cancel`(`kotlinx.coroutines.CompletableDeferred` v0 @kind object) @signature `Lkotlinx/coroutines/CompletableDeferred$DefaultImpls;.cancel:(Lkotlinx/coroutines/CompletableDeferred;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L155694.  call `cancel`(v0) @signature `Lkotlinx/coroutines/Deferred$DefaultImpls;.cancel:(Lkotlinx/coroutines/Deferred;)V` @kind static;
  #L15569a.  return @kind void;
}
procedure `java.lang.Object` `fold`(`kotlinx.coroutines.CompletableDeferred` v0 @kind object, `java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/CompletableDeferred$DefaultImpls;.fold:(Lkotlinx/coroutines/CompletableDeferred;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L155608.  call temp:= `fold`(v0, v1, v2) @signature `Lkotlinx/coroutines/Deferred$DefaultImpls;.fold:(Lkotlinx/coroutines/Deferred;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind static;
  #L15560e.  v0:= temp @kind object;
  #L155610.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext$Element` `get`(`kotlinx.coroutines.CompletableDeferred` v0 @kind object, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/CompletableDeferred$DefaultImpls;.get:(Lkotlinx/coroutines/CompletableDeferred;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L15565c.  call temp:= `get`(v0, v1) @signature `Lkotlinx/coroutines/Deferred$DefaultImpls;.get:(Lkotlinx/coroutines/Deferred;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind static;
  #L155662.  v0:= temp @kind object;
  #L155664.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `minusKey`(`kotlinx.coroutines.CompletableDeferred` v0 @kind object, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/CompletableDeferred$DefaultImpls;.minusKey:(Lkotlinx/coroutines/CompletableDeferred;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L155624.  call temp:= `minusKey`(v0, v1) @signature `Lkotlinx/coroutines/Deferred$DefaultImpls;.minusKey:(Lkotlinx/coroutines/Deferred;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L15562a.  v0:= temp @kind object;
  #L15562c.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `plus`(`kotlinx.coroutines.CompletableDeferred` v0 @kind object, `kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/CompletableDeferred$DefaultImpls;.plus:(Lkotlinx/coroutines/CompletableDeferred;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L155640.  call temp:= `plus`(v0, v1) @signature `Lkotlinx/coroutines/Deferred$DefaultImpls;.plus:(Lkotlinx/coroutines/Deferred;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L155646.  v0:= temp @kind object;
  #L155648.  return v0 @kind object;
}
procedure `kotlinx.coroutines.Job` `plus`(`kotlinx.coroutines.CompletableDeferred` v0 @kind object, `kotlinx.coroutines.Job` v1 @kind object) @signature `Lkotlinx/coroutines/CompletableDeferred$DefaultImpls;.plus:(Lkotlinx/coroutines/CompletableDeferred;Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L155678.  call temp:= `plus`(v0, v1) @signature `Lkotlinx/coroutines/Deferred$DefaultImpls;.plus:(Lkotlinx/coroutines/Deferred;Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;` @kind static;
  #L15567e.  v0:= temp @kind object;
  #L155680.  return v0 @kind object;
}
