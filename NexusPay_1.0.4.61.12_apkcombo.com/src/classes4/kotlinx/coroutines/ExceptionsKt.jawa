record `kotlinx.coroutines.ExceptionsKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.util.concurrent.CancellationException` `CancellationException`(`java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/ExceptionsKt;.CancellationException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L159944.  v0:= new `java.util.concurrent.CancellationException`;
  #L159948.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CancellationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15994e.  call temp:= `initCause`(v0, v2) @signature `Ljava/util/concurrent/CancellationException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L159954.  return v0 @kind object;
}
procedure `void` `addSuppressedThrowable`(`java.lang.Throwable` v0 @kind object, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/ExceptionsKt;.addSuppressedThrowable:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L159968.  call `addSuppressed`(v0, v1) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L15996e.  return @kind void;
}
