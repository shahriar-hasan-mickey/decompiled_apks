record `kotlinx.coroutines.JobSupport` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.Job` @kind interface, `kotlinx.coroutines.ChildJob` @kind interface, `kotlinx.coroutines.ParentJob` @kind interface, `kotlinx.coroutines.selects.SelectClause0` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.JobSupport._parentHandle` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.JobSupport._state` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.JobSupport.a` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/JobSupport;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L15d0e4.  v0:= constclass @type ^`kotlinx.coroutines.JobSupport` @kind object;
  #L15d0e8.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L15d0ec.  v2:= "_state" @kind object;
  #L15d0f0.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L15d0f6.  v0:= temp @kind object;
  #L15d0f8.  `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L15d0fc.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.JobSupport` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/JobSupport;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15d110.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15d116.  if v1 == 0 then goto L15d124;
  #L15d11a.  call temp:= `access$getEMPTY_ACTIVE$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getEMPTY_ACTIVE$p:()Lkotlinx/coroutines/r;` @kind static;
  #L15d120.  v1:= temp @kind object;
  #L15d122.  goto L15d12c;
  #L15d124.  call temp:= `access$getEMPTY_NEW$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getEMPTY_NEW$p:()Lkotlinx/coroutines/r;` @kind static;
  #L15d12a.  v1:= temp @kind object;
  #L15d12c.  v0.`kotlinx.coroutines.JobSupport._state` @type ^`java.lang.Object` := v1 @kind object;
  #L15d130.  v1:= 0I;
  #L15d132.  v0.`kotlinx.coroutines.JobSupport._parentHandle` @type ^`java.lang.Object` := v1 @kind object;
  #L15d136.  return @kind void;
}
procedure `java.lang.Object` `A`(`kotlinx.coroutines.JobSupport` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.A:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L15c4fc.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L15c500.  if v0 != 0 then goto L15c50e;
  #L15c504.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15c50a.  v2:= temp @kind object;
  #L15c50c.  return v2 @kind object;
  #L15c50e.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L15c512.  if v0 != 0 then goto L15c51e;
  #L15c516.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.JobNode` @kind boolean;
  #L15c51a.  if v0 == 0 then goto L15c54a;
  #L15c51e.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.ChildHandleNode` @kind boolean;
  #L15c522.  if v0 != 0 then goto L15c54a;
  #L15c526.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15c52a.  if v0 != 0 then goto L15c54a;
  #L15c52e.  v2:= (`kotlinx.coroutines.Incomplete`) v2 @kind object;
  #L15c532.  call temp:= `y`(v1, v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.y:(Lkotlinx/coroutines/Incomplete;Ljava/lang/Object;)Z` @kind direct;
  #L15c538.  v2:= temp;
  #L15c53a.  if v2 == 0 then goto L15c540;
  #L15c53e.  return v3 @kind object;
  #L15c540.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15c546.  v2:= temp @kind object;
  #L15c548.  return v2 @kind object;
  #L15c54a.  v2:= (`kotlinx.coroutines.Incomplete`) v2 @kind object;
  #L15c54e.  call temp:= `B`(v1, v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.B:(Lkotlinx/coroutines/Incomplete;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L15c554.  v2:= temp @kind object;
  #L15c556.  return v2 @kind object;
}
procedure `java.lang.Object` `B`(`kotlinx.coroutines.JobSupport` v6 @kind this, `kotlinx.coroutines.Incomplete` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.B:(Lkotlinx/coroutines/Incomplete;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15c568.  call temp:= `m`(v6, v7) @signature `Lkotlinx/coroutines/JobSupport;.m:(Lkotlinx/coroutines/Incomplete;)Lkotlinx/coroutines/NodeList;` @kind direct;
  #L15c56e.  v0:= temp @kind object;
  #L15c570.  if v0 != 0 then goto L15c57e;
  #L15c574.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15c57a.  v7:= temp @kind object;
  #L15c57c.  return v7 @kind object;
  #L15c57e.  v1:= instanceof @variable v7 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L15c582.  v2:= 0I;
  #L15c584.  if v1 == 0 then goto L15c590;
  #L15c588.  v1:= v7 @kind object;
  #L15c58a.  v1:= (`kotlinx.coroutines.JobSupport$c`) v1 @kind object;
  #L15c58e.  goto L15c592;
  #L15c590.  v1:= v2 @kind object;
  #L15c592.  if v1 != 0 then goto L15c5a2;
  #L15c596.  v1:= new `kotlinx.coroutines.JobSupport$c`;
  #L15c59a.  v3:= 0I;
  #L15c59c.  call `<init>`(v1, v0, v3, v2) @signature `Lkotlinx/coroutines/JobSupport$c;.<init>:(Lkotlinx/coroutines/NodeList;ZLjava/lang/Throwable;)V` @kind direct;
  #L15c5a2.  @monitorenter v1
  #L15c5a4.  call temp:= `f`(v1) @signature `Lkotlinx/coroutines/JobSupport$c;.f:()Z` @kind virtual;
  #L15c5aa.  v3:= temp;
  #L15c5ac.  if v3 == 0 then goto L15c5bc;
  #L15c5b0.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15c5b6.  v7:= temp @kind object;
  #L15c5b8.  @monitorexit v1
  #L15c5ba.  return v7 @kind object;
  #L15c5bc.  v3:= 1I;
  #L15c5be.  call `i`(v1, v3) @signature `Lkotlinx/coroutines/JobSupport$c;.i:(Z)V` @kind virtual;
  #L15c5c4.  if v1 == v7 then goto L15c5e4;
  #L15c5c8.  v4:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L15c5cc.  call temp:= `compareAndSet`(v4, v6, v7, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L15c5d2.  v4:= temp;
  #L15c5d4.  if v4 != 0 then goto L15c5e4;
  #L15c5d8.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15c5de.  v7:= temp @kind object;
  #L15c5e0.  @monitorexit v1
  #L15c5e2.  return v7 @kind object;
  #L15c5e4.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L15c5ea.  v4:= temp;
  #L15c5ec.  if v4 == 0 then goto L15c60c;
  #L15c5f0.  call temp:= `g`(v1) @signature `Lkotlinx/coroutines/JobSupport$c;.g:()Z` @kind virtual;
  #L15c5f6.  v4:= temp;
  #L15c5f8.  v4:= v4 ^~ v3 @kind int;
  #L15c5fa.  if v4 == 0 then goto L15c600;
  #L15c5fe.  goto L15c60c;
  #L15c600.  v7:= new `java.lang.AssertionError`;
  #L15c604.  call `<init>`(v7) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L15c60a.  throw v7;
  #L15c60c.  call temp:= `e`(v1) @signature `Lkotlinx/coroutines/JobSupport$c;.e:()Z` @kind virtual;
  #L15c612.  v4:= temp;
  #L15c614.  v5:= instanceof @variable v8 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15c618.  if v5 == 0 then goto L15c624;
  #L15c61c.  v5:= v8 @kind object;
  #L15c61e.  v5:= (`kotlinx.coroutines.CompletedExceptionally`) v5 @kind object;
  #L15c622.  goto L15c626;
  #L15c624.  v5:= v2 @kind object;
  #L15c626.  if v5 != 0 then goto L15c62c;
  #L15c62a.  goto L15c636;
  #L15c62c.  v5:= v5.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L15c630.  call `a`(v1, v5) @signature `Lkotlinx/coroutines/JobSupport$c;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L15c636.  call temp:= `d`(v1) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L15c63c.  v5:= temp @kind object;
  #L15c63e.  v3:= v3 ^~ v4 @kind int;
  #L15c640.  if v3 == 0 then goto L15c646;
  #L15c644.  v2:= v5 @kind object;
  #L15c646.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15c64a.  @monitorexit v1
  #L15c64c.  if v2 != 0 then goto L15c652;
  #L15c650.  goto L15c658;
  #L15c652.  call `s`(v6, v0, v2) @signature `Lkotlinx/coroutines/JobSupport;.s:(Lkotlinx/coroutines/NodeList;Ljava/lang/Throwable;)V` @kind direct;
  #L15c658.  call temp:= `j`(v6, v7) @signature `Lkotlinx/coroutines/JobSupport;.j:(Lkotlinx/coroutines/Incomplete;)Lkotlinx/coroutines/ChildHandleNode;` @kind direct;
  #L15c65e.  v7:= temp @kind object;
  #L15c660.  if v7 == 0 then goto L15c676;
  #L15c664.  call temp:= `C`(v6, v1, v7, v8) @signature `Lkotlinx/coroutines/JobSupport;.C:(Lkotlinx/coroutines/JobSupport$c;Lkotlinx/coroutines/ChildHandleNode;Ljava/lang/Object;)Z` @kind direct;
  #L15c66a.  v7:= temp;
  #L15c66c.  if v7 == 0 then goto L15c676;
  #L15c670.  v7:= `@@kotlinx.coroutines.JobSupportKt.COMPLETING_WAITING_CHILDREN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L15c674.  return v7 @kind object;
  #L15c676.  call temp:= `i`(v6, v1, v8) @signature `Lkotlinx/coroutines/JobSupport;.i:(Lkotlinx/coroutines/JobSupport$c;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L15c67c.  v7:= temp @kind object;
  #L15c67e.  return v7 @kind object;
  #L15c680.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15c682.  @monitorexit v1
  #L15c684.  throw v7;
  catch `java.lang.Throwable` @[L15c5a4..L15c5b8] goto L15c680;
  catch `java.lang.Throwable` @[L15c5be..L15c5e0] goto L15c680;
  catch `java.lang.Throwable` @[L15c5e4..L15c64a] goto L15c680;
}
procedure `boolean` `C`(`kotlinx.coroutines.JobSupport` v6 @kind this, `kotlinx.coroutines.JobSupport$c` v7 @kind object, `kotlinx.coroutines.ChildHandleNode` v8 @kind object, `java.lang.Object` v9 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.C:(Lkotlinx/coroutines/JobSupport$c;Lkotlinx/coroutines/ChildHandleNode;Ljava/lang/Object;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15bdd0.  v0:= v8.`kotlinx.coroutines.ChildHandleNode.childJob` @type ^`kotlinx.coroutines.ChildJob` @kind object;
  #L15bdd4.  v1:= 0I;
  #L15bdd6.  v2:= 0I;
  #L15bdd8.  v3:= new `kotlinx.coroutines.JobSupport$b`;
  #L15bddc.  call `<init>`(v3, v6, v7, v8, v9) @signature `Lkotlinx/coroutines/JobSupport$b;.<init>:(Lkotlinx/coroutines/JobSupport;Lkotlinx/coroutines/JobSupport$c;Lkotlinx/coroutines/ChildHandleNode;Ljava/lang/Object;)V` @kind direct;
  #L15bde2.  v4:= 1I;
  #L15bde4.  v5:= 0I;
  #L15bde6.  call temp:= `invokeOnCompletion$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.invokeOnCompletion$default:(Lkotlinx/coroutines/Job;ZZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/DisposableHandle;` @kind static;
  #L15bdec.  v0:= temp @kind object;
  #L15bdee.  v1:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L15bdf2.  if v0 == v1 then goto L15bdfa;
  #L15bdf6.  v7:= 1I;
  #L15bdf8.  return v7;
  #L15bdfa.  call temp:= `r`(v6, v8) @signature `Lkotlinx/coroutines/JobSupport;.r:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Lkotlinx/coroutines/ChildHandleNode;` @kind direct;
  #L15be00.  v8:= temp @kind object;
  #L15be02.  if v8 != 0 then goto L15bdd0;
  #L15be06.  v7:= 0I;
  #L15be08.  return v7;
}
procedure `boolean` `a`(`kotlinx.coroutines.JobSupport` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlinx.coroutines.NodeList` v4 @kind object, `kotlinx.coroutines.JobNode` v5 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.a:(Ljava/lang/Object;Lkotlinx/coroutines/NodeList;Lkotlinx/coroutines/JobNode;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L15b8fc.  v0:= new `kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1`;
  #L15b900.  call `<init>`(v0, v5, v2, v3) @signature `Lkotlinx/coroutines/JobSupport$addLastAtomic$$inlined$addLastIf$1;.<init>:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/JobSupport;Ljava/lang/Object;)V` @kind direct;
  #L15b906.  call temp:= `getPrevNode`(v4) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getPrevNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L15b90c.  v3:= temp @kind object;
  #L15b90e.  call temp:= `tryCondAddNext`(v3, v5, v4, v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.tryCondAddNext:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode;Lkotlinx/coroutines/internal/LockFreeLinkedListNode$CondAddOp;)I` @kind virtual;
  #L15b914.  v3:= temp;
  #L15b916.  v1:= 1I;
  #L15b918.  if v3 == v1 then goto L15b926;
  #L15b91c.  v1:= 2I;
  #L15b91e.  if v3 == v1 then goto L15b924;
  #L15b922.  goto L15b906;
  #L15b924.  v1:= 0I;
  #L15b926.  return v1;
}
procedure `java.lang.Object` `access$awaitSuspend`(`kotlinx.coroutines.JobSupport` v0 @kind object, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.access$awaitSuspend:(Lkotlinx/coroutines/JobSupport;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L15bea4.  call temp:= `c`(v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.c:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind direct;
  #L15beaa.  v0:= temp @kind object;
  #L15beac.  return v0 @kind object;
}
procedure `java.lang.String` `access$cancellationExceptionMessage`(`kotlinx.coroutines.JobSupport` v0 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L15c6b4.  call temp:= `cancellationExceptionMessage`(v0) @signature `Lkotlinx/coroutines/JobSupport;.cancellationExceptionMessage:()Ljava/lang/String;` @kind virtual;
  #L15c6ba.  v0:= temp @kind object;
  #L15c6bc.  return v0 @kind object;
}
procedure `void` `access$continueCompleting`(`kotlinx.coroutines.JobSupport` v0 @kind object, `kotlinx.coroutines.JobSupport$c` v1 @kind object, `kotlinx.coroutines.ChildHandleNode` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.access$continueCompleting:(Lkotlinx/coroutines/JobSupport;Lkotlinx/coroutines/JobSupport$c;Lkotlinx/coroutines/ChildHandleNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L15d148.  call `g`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.g:(Lkotlinx/coroutines/JobSupport$c;Lkotlinx/coroutines/ChildHandleNode;Ljava/lang/Object;)V` @kind direct;
  #L15d14e.  return @kind void;
}
procedure `java.lang.Object` `access$joinSuspend`(`kotlinx.coroutines.JobSupport` v0 @kind object, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.access$joinSuspend:(Lkotlinx/coroutines/JobSupport;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L15bec0.  call temp:= `o`(v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.o:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind direct;
  #L15bec6.  v0:= temp @kind object;
  #L15bec8.  return v0 @kind object;
}
procedure `void` `b`(`kotlinx.coroutines.JobSupport` v4 @kind this, `java.lang.Throwable` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.b:(Ljava/lang/Throwable;Ljava/util/List;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15d160.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L15d166.  v0:= temp;
  #L15d168.  v1:= 1I;
  #L15d16a.  if v0 > v1 then goto L15d170;
  #L15d16e.  return @kind void;
  #L15d170.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L15d176.  v0:= temp;
  #L15d178.  v1:= new `java.util.IdentityHashMap`;
  #L15d17c.  call `<init>`(v1, v0) @signature `Ljava/util/IdentityHashMap;.<init>:(I)V` @kind direct;
  #L15d182.  call temp:= `newSetFromMap`(v1) @signature `Ljava/util/Collections;.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;` @kind static;
  #L15d188.  v0:= temp @kind object;
  #L15d18a.  call temp:= `getRECOVER_STACK_TRACES`() @signature `Lkotlinx/coroutines/DebugKt;.getRECOVER_STACK_TRACES:()Z` @kind static;
  #L15d190.  v1:= temp;
  #L15d192.  if v1 != 0 then goto L15d19a;
  #L15d196.  v1:= v5 @kind object;
  #L15d198.  goto L15d1a2;
  #L15d19a.  call temp:= `unwrapImpl`(v5) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.unwrapImpl:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L15d1a0.  v1:= temp @kind object;
  #L15d1a2.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15d1a8.  v6:= temp @kind object;
  #L15d1aa.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15d1b0.  v2:= temp;
  #L15d1b2.  if v2 == 0 then goto L15d1fc;
  #L15d1b6.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15d1bc.  v2:= temp @kind object;
  #L15d1be.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L15d1c2.  call temp:= `getRECOVER_STACK_TRACES`() @signature `Lkotlinx/coroutines/DebugKt;.getRECOVER_STACK_TRACES:()Z` @kind static;
  #L15d1c8.  v3:= temp;
  #L15d1ca.  if v3 != 0 then goto L15d1d0;
  #L15d1ce.  goto L15d1d8;
  #L15d1d0.  call temp:= `unwrapImpl`(v2) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.unwrapImpl:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L15d1d6.  v2:= temp @kind object;
  #L15d1d8.  if v2 == v5 then goto L15d1aa;
  #L15d1dc.  if v2 == v1 then goto L15d1aa;
  #L15d1e0.  v3:= instanceof @variable v2 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L15d1e4.  if v3 != 0 then goto L15d1aa;
  #L15d1e8.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L15d1ee.  v3:= temp;
  #L15d1f0.  if v3 == 0 then goto L15d1aa;
  #L15d1f4.  call `addSuppressed`(v5, v2) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L15d1fa.  goto L15d1aa;
  #L15d1fc.  return @kind void;
}
procedure `java.lang.Object` `c`(`kotlinx.coroutines.JobSupport` v2 @kind this, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.c:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L15bf54.  v0:= new `kotlinx.coroutines.JobSupport$a`;
  #L15bf58.  call temp:= `intercepted`(v3) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L15bf5e.  v1:= temp @kind object;
  #L15bf60.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/JobSupport$a;.<init>:(Lkotlin/coroutines/Continuation;Lkotlinx/coroutines/JobSupport;)V` @kind direct;
  #L15bf66.  call `initCancellability`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.initCancellability:()V` @kind virtual;
  #L15bf6c.  v1:= new `kotlinx.coroutines.b0`;
  #L15bf70.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/b0;.<init>:(Lkotlinx/coroutines/CancellableContinuationImpl;)V` @kind direct;
  #L15bf76.  call temp:= `invokeOnCompletion`(v2, v1) @signature `Lkotlinx/coroutines/JobSupport;.invokeOnCompletion:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @kind virtual;
  #L15bf7c.  v1:= temp @kind object;
  #L15bf7e.  call `disposeOnCancellation`(v0, v1) @signature `Lkotlinx/coroutines/CancellableContinuationKt;.disposeOnCancellation:(Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/DisposableHandle;)V` @kind static;
  #L15bf84.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L15bf8a.  v0:= temp @kind object;
  #L15bf8c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L15bf92.  v1:= temp @kind object;
  #L15bf94.  if v0 != v1 then goto L15bf9e;
  #L15bf98.  call `probeCoroutineSuspended`(v3) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L15bf9e.  return v0 @kind object;
}
procedure `java.lang.Object` `d`(`kotlinx.coroutines.JobSupport` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15bfb0.  call temp:= `getState$kotlinx_coroutines_core`(v6) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15bfb6.  v0:= temp @kind object;
  #L15bfb8.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L15bfbc.  if v1 == 0 then goto L15c00a;
  #L15bfc0.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L15bfc4.  if v1 == 0 then goto L15bfdc;
  #L15bfc8.  v1:= v0 @kind object;
  #L15bfca.  v1:= (`kotlinx.coroutines.JobSupport$c`) v1 @kind object;
  #L15bfce.  call temp:= `f`(v1) @signature `Lkotlinx/coroutines/JobSupport$c;.f:()Z` @kind virtual;
  #L15bfd4.  v1:= temp;
  #L15bfd6.  if v1 == 0 then goto L15bfdc;
  #L15bfda.  goto L15c00a;
  #L15bfdc.  v1:= new `kotlinx.coroutines.CompletedExceptionally`;
  #L15bfe0.  call temp:= `h`(v6, v7) @signature `Lkotlinx/coroutines/JobSupport;.h:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind direct;
  #L15bfe6.  v2:= temp @kind object;
  #L15bfe8.  v3:= 0I;
  #L15bfea.  v4:= 2I;
  #L15bfec.  v5:= 0I;
  #L15bfee.  call `<init>`(v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/CompletedExceptionally;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L15bff4.  call temp:= `A`(v6, v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.A:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L15bffa.  v0:= temp @kind object;
  #L15bffc.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15c002.  v1:= temp @kind object;
  #L15c004.  if v0 == v1 then goto L15bfb0;
  #L15c008.  return v0 @kind object;
  #L15c00a.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15c010.  v7:= temp @kind object;
  #L15c012.  return v7 @kind object;
}
procedure `kotlinx.coroutines.JobCancellationException` `defaultCancellationException$kotlinx_coroutines_core$default`(`kotlinx.coroutines.JobSupport` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Throwable` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.defaultCancellationException$kotlinx_coroutines_core$default:(Lkotlinx/coroutines/JobSupport;Ljava/lang/String;Ljava/lang/Throwable;ILjava/lang/Object;)Lkotlinx/coroutines/JobCancellationException;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L15cf60.  if v5 != 0 then goto L15cf92;
  #L15cf64.  v5:= v4 ^& 1;
  #L15cf68.  v0:= 0I;
  #L15cf6a.  if v5 == 0 then goto L15cf70;
  #L15cf6e.  v2:= v0 @kind object;
  #L15cf70.  v4:= v4 ^& 2;
  #L15cf74.  if v4 == 0 then goto L15cf7a;
  #L15cf78.  v3:= v0 @kind object;
  #L15cf7a.  v4:= new `kotlinx.coroutines.JobCancellationException`;
  #L15cf7e.  if v2 != 0 then goto L15cf8a;
  #L15cf82.  call temp:= `access$cancellationExceptionMessage`(v1) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L15cf88.  v2:= temp @kind object;
  #L15cf8a.  call `<init>`(v4, v2, v3, v1) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L15cf90.  return v4 @kind object;
  #L15cf92.  v1:= new `java.lang.UnsupportedOperationException`;
  #L15cf96.  v2:= "Super calls with default arguments not supported in this target, function: defaultCancellationException" @kind object;
  #L15cf9a.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15cfa0.  throw v1;
}
procedure `boolean` `e`(`kotlinx.coroutines.JobSupport` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.e:(Ljava/lang/Throwable;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15ba0c.  call temp:= `isScopedCoroutine`(v4) @signature `Lkotlinx/coroutines/JobSupport;.isScopedCoroutine:()Z` @kind virtual;
  #L15ba12.  v0:= temp;
  #L15ba14.  v1:= 1I;
  #L15ba16.  if v0 == 0 then goto L15ba1c;
  #L15ba1a.  return v1;
  #L15ba1c.  v0:= instanceof @variable v5 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L15ba20.  call temp:= `getParentHandle$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/JobSupport;.getParentHandle$kotlinx_coroutines_core:()Lkotlinx/coroutines/ChildHandle;` @kind virtual;
  #L15ba26.  v2:= temp @kind object;
  #L15ba28.  if v2 == 0 then goto L15ba4c;
  #L15ba2c.  v3:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L15ba30.  if v2 != v3 then goto L15ba36;
  #L15ba34.  goto L15ba4c;
  #L15ba36.  call temp:= `childCancelled`(v2, v5) @signature `Lkotlinx/coroutines/ChildHandle;.childCancelled:(Ljava/lang/Throwable;)Z` @kind interface;
  #L15ba3c.  v5:= temp;
  #L15ba3e.  if v5 != 0 then goto L15ba4a;
  #L15ba42.  if v0 == 0 then goto L15ba48;
  #L15ba46.  goto L15ba4a;
  #L15ba48.  v1:= 0I;
  #L15ba4a.  return v1;
  #L15ba4c.  return v0;
}
procedure `void` `f`(`kotlinx.coroutines.JobSupport` v3 @kind this, `kotlinx.coroutines.Incomplete` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.f:(Lkotlinx/coroutines/Incomplete;Ljava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L15d288.  call temp:= `getParentHandle$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/JobSupport;.getParentHandle$kotlinx_coroutines_core:()Lkotlinx/coroutines/ChildHandle;` @kind virtual;
  #L15d28e.  v0:= temp @kind object;
  #L15d290.  if v0 != 0 then goto L15d296;
  #L15d294.  goto L15d2a6;
  #L15d296.  call `dispose`(v0) @signature `Lkotlinx/coroutines/DisposableHandle;.dispose:()V` @kind interface;
  #L15d29c.  v0:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L15d2a0.  call `setParentHandle$kotlinx_coroutines_core`(v3, v0) @signature `Lkotlinx/coroutines/JobSupport;.setParentHandle$kotlinx_coroutines_core:(Lkotlinx/coroutines/ChildHandle;)V` @kind virtual;
  #L15d2a6.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15d2aa.  v1:= 0I;
  #L15d2ac.  if v0 == 0 then goto L15d2b6;
  #L15d2b0.  v5:= (`kotlinx.coroutines.CompletedExceptionally`) v5 @kind object;
  #L15d2b4.  goto L15d2b8;
  #L15d2b6.  v5:= v1 @kind object;
  #L15d2b8.  if v5 != 0 then goto L15d2be;
  #L15d2bc.  goto L15d2c2;
  #L15d2be.  v1:= v5.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L15d2c2.  v5:= instanceof @variable v4 @type ^`kotlinx.coroutines.JobNode` @kind boolean;
  #L15d2c6.  if v5 == 0 then goto L15d31e;
  #L15d2ca.  v5:= v4 @kind object;
  #L15d2cc.  v5:= (`kotlinx.coroutines.JobNode`) v5 @kind object;
  #L15d2d0.  call `invoke`(v5, v1) @signature `Lkotlinx/coroutines/CompletionHandlerBase;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L15d2d6.  goto L15d332;
  #L15d2d8.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15d2da.  v0:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L15d2de.  v1:= new `java.lang.StringBuilder`;
  #L15d2e2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15d2e8.  v2:= "Exception in completion handler " @kind object;
  #L15d2ec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d2f2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d2f8.  v4:= " for " @kind object;
  #L15d2fc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d302.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d308.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15d30e.  v4:= temp @kind object;
  #L15d310.  call `<init>`(v0, v4, v5) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L15d316.  call `handleOnCompletionException$kotlinx_coroutines_core`(v3, v0) @signature `Lkotlinx/coroutines/JobSupport;.handleOnCompletionException$kotlinx_coroutines_core:(Ljava/lang/Throwable;)V` @kind virtual;
  #L15d31c.  goto L15d332;
  #L15d31e.  call temp:= `getList`(v4) @signature `Lkotlinx/coroutines/Incomplete;.getList:()Lkotlinx/coroutines/NodeList;` @kind interface;
  #L15d324.  v4:= temp @kind object;
  #L15d326.  if v4 != 0 then goto L15d32c;
  #L15d32a.  goto L15d332;
  #L15d32c.  call `t`(v3, v4, v1) @signature `Lkotlinx/coroutines/JobSupport;.t:(Lkotlinx/coroutines/NodeList;Ljava/lang/Throwable;)V` @kind direct;
  #L15d332.  return @kind void;
  catch `java.lang.Throwable` @[L15d2ca..L15d2d6] goto L15d2d8;
}
procedure `void` `g`(`kotlinx.coroutines.JobSupport` v1 @kind this, `kotlinx.coroutines.JobSupport$c` v2 @kind object, `kotlinx.coroutines.ChildHandleNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.g:(Lkotlinx/coroutines/JobSupport$c;Lkotlinx/coroutines/ChildHandleNode;Ljava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L15d350.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L15d356.  v0:= temp;
  #L15d358.  if v0 == 0 then goto L15d380;
  #L15d35c.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15d362.  v0:= temp @kind object;
  #L15d364.  if v0 != v2 then goto L15d36c;
  #L15d368.  v0:= 1I;
  #L15d36a.  goto L15d36e;
  #L15d36c.  v0:= 0I;
  #L15d36e.  if v0 == 0 then goto L15d374;
  #L15d372.  goto L15d380;
  #L15d374.  v2:= new `java.lang.AssertionError`;
  #L15d378.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L15d37e.  throw v2;
  #L15d380.  call temp:= `r`(v1, v3) @signature `Lkotlinx/coroutines/JobSupport;.r:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Lkotlinx/coroutines/ChildHandleNode;` @kind direct;
  #L15d386.  v3:= temp @kind object;
  #L15d388.  if v3 == 0 then goto L15d39a;
  #L15d38c.  call temp:= `C`(v1, v2, v3, v4) @signature `Lkotlinx/coroutines/JobSupport;.C:(Lkotlinx/coroutines/JobSupport$c;Lkotlinx/coroutines/ChildHandleNode;Ljava/lang/Object;)Z` @kind direct;
  #L15d392.  v3:= temp;
  #L15d394.  if v3 == 0 then goto L15d39a;
  #L15d398.  return @kind void;
  #L15d39a.  call temp:= `i`(v1, v2, v4) @signature `Lkotlinx/coroutines/JobSupport;.i:(Lkotlinx/coroutines/JobSupport$c;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L15d3a0.  v2:= temp @kind object;
  #L15d3a2.  call `afterCompletion`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.afterCompletion:(Ljava/lang/Object;)V` @kind virtual;
  #L15d3a8.  return @kind void;
}
procedure `java.lang.Throwable` `h`(`kotlinx.coroutines.JobSupport` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.h:(Ljava/lang/Object;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L15c824.  if v3 != 0 then goto L15c82c;
  #L15c828.  v0:= 1I;
  #L15c82a.  goto L15c830;
  #L15c82c.  v0:= instanceof @variable v3 @type ^`java.lang.Throwable` @kind boolean;
  #L15c830.  if v0 == 0 then goto L15c854;
  #L15c834.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L15c838.  if v3 != 0 then goto L15c864;
  #L15c83c.  v3:= 0I;
  #L15c83e.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L15c842.  call temp:= `access$cancellationExceptionMessage`(v2) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L15c848.  v1:= temp @kind object;
  #L15c84a.  call `<init>`(v0, v1, v3, v2) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L15c850.  v3:= v0 @kind object;
  #L15c852.  goto L15c864;
  #L15c854.  if v3 == 0 then goto L15c866;
  #L15c858.  v3:= (`kotlinx.coroutines.ParentJob`) v3 @kind object;
  #L15c85c.  call temp:= `getChildJobCancellationCause`(v3) @signature `Lkotlinx/coroutines/ParentJob;.getChildJobCancellationCause:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L15c862.  v3:= temp @kind object;
  #L15c864.  return v3 @kind object;
  #L15c866.  v3:= new `java.lang.NullPointerException`;
  #L15c86a.  v0:= "null cannot be cast to non-null type kotlinx.coroutines.ParentJob" @kind object;
  #L15c86e.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15c874.  throw v3;
}
procedure `java.lang.Object` `i`(`kotlinx.coroutines.JobSupport` v7 @kind this, `kotlinx.coroutines.JobSupport$c` v8 @kind object, `java.lang.Object` v9 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.i:(Lkotlinx/coroutines/JobSupport$c;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L15c024.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L15c02a.  v0:= temp;
  #L15c02c.  v1:= 1I;
  #L15c02e.  v2:= 0I;
  #L15c030.  if v0 == 0 then goto L15c058;
  #L15c034.  call temp:= `getState$kotlinx_coroutines_core`(v7) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15c03a.  v0:= temp @kind object;
  #L15c03c.  if v0 != v8 then goto L15c044;
  #L15c040.  v0:= 1I;
  #L15c042.  goto L15c046;
  #L15c044.  v0:= 0I;
  #L15c046.  if v0 == 0 then goto L15c04c;
  #L15c04a.  goto L15c058;
  #L15c04c.  v8:= new `java.lang.AssertionError`;
  #L15c050.  call `<init>`(v8) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L15c056.  throw v8;
  #L15c058.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L15c05e.  v0:= temp;
  #L15c060.  if v0 == 0 then goto L15c080;
  #L15c064.  call temp:= `g`(v8) @signature `Lkotlinx/coroutines/JobSupport$c;.g:()Z` @kind virtual;
  #L15c06a.  v0:= temp;
  #L15c06c.  v0:= v0 ^~ v1 @kind int;
  #L15c06e.  if v0 == 0 then goto L15c074;
  #L15c072.  goto L15c080;
  #L15c074.  v8:= new `java.lang.AssertionError`;
  #L15c078.  call `<init>`(v8) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L15c07e.  throw v8;
  #L15c080.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L15c086.  v0:= temp;
  #L15c088.  if v0 == 0 then goto L15c0a6;
  #L15c08c.  call temp:= `f`(v8) @signature `Lkotlinx/coroutines/JobSupport$c;.f:()Z` @kind virtual;
  #L15c092.  v0:= temp;
  #L15c094.  if v0 == 0 then goto L15c09a;
  #L15c098.  goto L15c0a6;
  #L15c09a.  v8:= new `java.lang.AssertionError`;
  #L15c09e.  call `<init>`(v8) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L15c0a4.  throw v8;
  #L15c0a6.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15c0aa.  v3:= 0I;
  #L15c0ac.  if v0 == 0 then goto L15c0b8;
  #L15c0b0.  v0:= v9 @kind object;
  #L15c0b2.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L15c0b6.  goto L15c0ba;
  #L15c0b8.  v0:= v3 @kind object;
  #L15c0ba.  if v0 != 0 then goto L15c0c2;
  #L15c0be.  v0:= v3 @kind object;
  #L15c0c0.  goto L15c0c6;
  #L15c0c2.  v0:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L15c0c6.  @monitorenter v8
  #L15c0c8.  call temp:= `e`(v8) @signature `Lkotlinx/coroutines/JobSupport$c;.e:()Z` @kind virtual;
  #L15c0ce.  v4:= temp;
  #L15c0d0.  call temp:= `h`(v8, v0) @signature `Lkotlinx/coroutines/JobSupport$c;.h:(Ljava/lang/Throwable;)Ljava/util/List;` @kind virtual;
  #L15c0d6.  v5:= temp @kind object;
  #L15c0d8.  call temp:= `l`(v7, v8, v5) @signature `Lkotlinx/coroutines/JobSupport;.l:(Lkotlinx/coroutines/JobSupport$c;Ljava/util/List;)Ljava/lang/Throwable;` @kind direct;
  #L15c0de.  v6:= temp @kind object;
  #L15c0e0.  if v6 == 0 then goto L15c0ea;
  #L15c0e4.  call `b`(v7, v6, v5) @signature `Lkotlinx/coroutines/JobSupport;.b:(Ljava/lang/Throwable;Ljava/util/List;)V` @kind direct;
  #L15c0ea.  @monitorexit v8
  #L15c0ec.  if v6 != 0 then goto L15c0f2;
  #L15c0f0.  goto L15c104;
  #L15c0f2.  if v6 != v0 then goto L15c0f8;
  #L15c0f6.  goto L15c104;
  #L15c0f8.  v9:= new `kotlinx.coroutines.CompletedExceptionally`;
  #L15c0fc.  v0:= 2I;
  #L15c0fe.  call `<init>`(v9, v6, v2, v0, v3) @signature `Lkotlinx/coroutines/CompletedExceptionally;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L15c104.  if v6 == 0 then goto L15c14a;
  #L15c108.  call temp:= `e`(v7, v6) @signature `Lkotlinx/coroutines/JobSupport;.e:(Ljava/lang/Throwable;)Z` @kind direct;
  #L15c10e.  v0:= temp;
  #L15c110.  if v0 != 0 then goto L15c124;
  #L15c114.  call temp:= `handleJobException`(v7, v6) @signature `Lkotlinx/coroutines/JobSupport;.handleJobException:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L15c11a.  v0:= temp;
  #L15c11c.  if v0 == 0 then goto L15c122;
  #L15c120.  goto L15c124;
  #L15c122.  v1:= 0I;
  #L15c124.  if v1 == 0 then goto L15c14a;
  #L15c128.  if v9 == 0 then goto L15c13a;
  #L15c12c.  v0:= v9 @kind object;
  #L15c12e.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L15c132.  call temp:= `makeHandled`(v0) @signature `Lkotlinx/coroutines/CompletedExceptionally;.makeHandled:()Z` @kind virtual;
  #L15c138.  goto L15c14a;
  #L15c13a.  v8:= new `java.lang.NullPointerException`;
  #L15c13e.  v9:= "null cannot be cast to non-null type kotlinx.coroutines.CompletedExceptionally" @kind object;
  #L15c142.  call `<init>`(v8, v9) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15c148.  throw v8;
  #L15c14a.  if v4 != 0 then goto L15c154;
  #L15c14e.  call `onCancelling`(v7, v6) @signature `Lkotlinx/coroutines/JobSupport;.onCancelling:(Ljava/lang/Throwable;)V` @kind virtual;
  #L15c154.  call `onCompletionInternal`(v7, v9) @signature `Lkotlinx/coroutines/JobSupport;.onCompletionInternal:(Ljava/lang/Object;)V` @kind virtual;
  #L15c15a.  v0:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L15c15e.  call temp:= `boxIncomplete`(v9) @signature `Lkotlinx/coroutines/JobSupportKt;.boxIncomplete:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15c164.  v1:= temp @kind object;
  #L15c166.  call temp:= `compareAndSet`(v0, v7, v8, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L15c16c.  v0:= temp;
  #L15c16e.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L15c174.  v1:= temp;
  #L15c176.  if v1 == 0 then goto L15c18c;
  #L15c17a.  if v0 == 0 then goto L15c180;
  #L15c17e.  goto L15c18c;
  #L15c180.  v8:= new `java.lang.AssertionError`;
  #L15c184.  call `<init>`(v8) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L15c18a.  throw v8;
  #L15c18c.  call `f`(v7, v8, v9) @signature `Lkotlinx/coroutines/JobSupport;.f:(Lkotlinx/coroutines/Incomplete;Ljava/lang/Object;)V` @kind direct;
  #L15c192.  return v9 @kind object;
  #L15c194.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15c196.  @monitorexit v8
  #L15c198.  throw v9;
  catch `java.lang.Throwable` @[L15c0c8..L15c0ea] goto L15c194;
}
procedure `kotlinx.coroutines.ChildHandleNode` `j`(`kotlinx.coroutines.JobSupport` v2 @kind this, `kotlinx.coroutines.Incomplete` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.j:(Lkotlinx/coroutines/Incomplete;)Lkotlinx/coroutines/ChildHandleNode;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L15cd34.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.ChildHandleNode` @kind boolean;
  #L15cd38.  v1:= 0I;
  #L15cd3a.  if v0 == 0 then goto L15cd46;
  #L15cd3e.  v0:= v3 @kind object;
  #L15cd40.  v0:= (`kotlinx.coroutines.ChildHandleNode`) v0 @kind object;
  #L15cd44.  goto L15cd48;
  #L15cd46.  v0:= v1 @kind object;
  #L15cd48.  if v0 != 0 then goto L15cd64;
  #L15cd4c.  call temp:= `getList`(v3) @signature `Lkotlinx/coroutines/Incomplete;.getList:()Lkotlinx/coroutines/NodeList;` @kind interface;
  #L15cd52.  v3:= temp @kind object;
  #L15cd54.  if v3 != 0 then goto L15cd5a;
  #L15cd58.  goto L15cd66;
  #L15cd5a.  call temp:= `r`(v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.r:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Lkotlinx/coroutines/ChildHandleNode;` @kind direct;
  #L15cd60.  v1:= temp @kind object;
  #L15cd62.  goto L15cd66;
  #L15cd64.  v1:= v0 @kind object;
  #L15cd66.  return v1 @kind object;
}
procedure `java.lang.Throwable` `k`(`kotlinx.coroutines.JobSupport` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.k:(Ljava/lang/Object;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L15c95c.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15c960.  v1:= 0I;
  #L15c962.  if v0 == 0 then goto L15c96c;
  #L15c966.  v3:= (`kotlinx.coroutines.CompletedExceptionally`) v3 @kind object;
  #L15c96a.  goto L15c96e;
  #L15c96c.  v3:= v1 @kind object;
  #L15c96e.  if v3 != 0 then goto L15c974;
  #L15c972.  goto L15c978;
  #L15c974.  v1:= v3.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L15c978.  return v1 @kind object;
}
procedure `java.lang.Throwable` `l`(`kotlinx.coroutines.JobSupport` v5 @kind this, `kotlinx.coroutines.JobSupport$c` v6 @kind object, `java.util.List` v7 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.l:(Lkotlinx/coroutines/JobSupport$c;Ljava/util/List;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15c98c.  call temp:= `isEmpty`(v7) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L15c992.  v0:= temp;
  #L15c994.  v1:= 0I;
  #L15c996.  if v0 == 0 then goto L15c9bc;
  #L15c99a.  call temp:= `e`(v6) @signature `Lkotlinx/coroutines/JobSupport$c;.e:()Z` @kind virtual;
  #L15c9a0.  v6:= temp;
  #L15c9a2.  if v6 == 0 then goto L15c9ba;
  #L15c9a6.  v6:= new `kotlinx.coroutines.JobCancellationException`;
  #L15c9aa.  call temp:= `access$cancellationExceptionMessage`(v5) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L15c9b0.  v7:= temp @kind object;
  #L15c9b2.  call `<init>`(v6, v7, v1, v5) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L15c9b8.  return v6 @kind object;
  #L15c9ba.  return v1 @kind object;
  #L15c9bc.  call temp:= `iterator`(v7) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15c9c2.  v6:= temp @kind object;
  #L15c9c4.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15c9ca.  v0:= temp;
  #L15c9cc.  v2:= 1I;
  #L15c9ce.  if v0 == 0 then goto L15c9ec;
  #L15c9d2.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15c9d8.  v0:= temp @kind object;
  #L15c9da.  v3:= v0 @kind object;
  #L15c9dc.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L15c9e0.  v3:= instanceof @variable v3 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L15c9e4.  v3:= v3 ^~ v2 @kind int;
  #L15c9e6.  if v3 == 0 then goto L15c9c4;
  #L15c9ea.  goto L15c9ee;
  #L15c9ec.  v0:= v1 @kind object;
  #L15c9ee.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L15c9f2.  if v0 == 0 then goto L15c9f8;
  #L15c9f6.  return v0 @kind object;
  #L15c9f8.  v6:= 0I;
  #L15c9fa.  call temp:= `get`(v7, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L15ca00.  v0:= temp @kind object;
  #L15ca02.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L15ca06.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.TimeoutCancellationException` @kind boolean;
  #L15ca0a.  if v3 == 0 then goto L15ca52;
  #L15ca0e.  call temp:= `iterator`(v7) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15ca14.  v7:= temp @kind object;
  #L15ca16.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L15ca1c.  v3:= temp;
  #L15ca1e.  if v3 == 0 then goto L15ca48;
  #L15ca22.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L15ca28.  v3:= temp @kind object;
  #L15ca2a.  v4:= v3 @kind object;
  #L15ca2c.  v4:= (`java.lang.Throwable`) v4 @kind object;
  #L15ca30.  if v4 == v0 then goto L15ca40;
  #L15ca34.  v4:= instanceof @variable v4 @type ^`kotlinx.coroutines.TimeoutCancellationException` @kind boolean;
  #L15ca38.  if v4 == 0 then goto L15ca40;
  #L15ca3c.  v4:= 1I;
  #L15ca3e.  goto L15ca42;
  #L15ca40.  v4:= 0I;
  #L15ca42.  if v4 == 0 then goto L15ca16;
  #L15ca46.  v1:= v3 @kind object;
  #L15ca48.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L15ca4c.  if v1 == 0 then goto L15ca52;
  #L15ca50.  return v1 @kind object;
  #L15ca52.  return v0 @kind object;
}
procedure `kotlinx.coroutines.NodeList` `m`(`kotlinx.coroutines.JobSupport` v1 @kind this, `kotlinx.coroutines.Incomplete` v2 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.m:(Lkotlinx/coroutines/Incomplete;)Lkotlinx/coroutines/NodeList;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L15d068.  call temp:= `getList`(v2) @signature `Lkotlinx/coroutines/Incomplete;.getList:()Lkotlinx/coroutines/NodeList;` @kind interface;
  #L15d06e.  v0:= temp @kind object;
  #L15d070.  if v0 != 0 then goto L15d0be;
  #L15d074.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L15d078.  if v0 == 0 then goto L15d088;
  #L15d07c.  v0:= new `kotlinx.coroutines.NodeList`;
  #L15d080.  call `<init>`(v0) @signature `Lkotlinx/coroutines/NodeList;.<init>:()V` @kind direct;
  #L15d086.  goto L15d0be;
  #L15d088.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.JobNode` @kind boolean;
  #L15d08c.  if v0 == 0 then goto L15d09e;
  #L15d090.  v2:= (`kotlinx.coroutines.JobNode`) v2 @kind object;
  #L15d094.  call `v`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.v:(Lkotlinx/coroutines/JobNode;)V` @kind direct;
  #L15d09a.  v0:= 0I;
  #L15d09c.  goto L15d0be;
  #L15d09e.  v0:= "State should have list: " @kind object;
  #L15d0a2.  call temp:= `stringPlus`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15d0a8.  v2:= temp @kind object;
  #L15d0aa.  v0:= new `java.lang.IllegalStateException`;
  #L15d0ae.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15d0b4.  v2:= temp @kind object;
  #L15d0b6.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15d0bc.  throw v0;
  #L15d0be.  return v0 @kind object;
}
procedure `boolean` `n`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.n:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L15bbe4.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15bbea.  v0:= temp @kind object;
  #L15bbec.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L15bbf0.  if v1 != 0 then goto L15bbf8;
  #L15bbf4.  v0:= 0I;
  #L15bbf6.  return v0;
  #L15bbf8.  call temp:= `w`(v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.w:(Ljava/lang/Object;)I` @kind direct;
  #L15bbfe.  v0:= temp;
  #L15bc00.  if v0 < 0 then goto L15bbe4;
  #L15bc04.  v0:= 1I;
  #L15bc06.  return v0;
}
procedure `java.lang.Object` `o`(`kotlinx.coroutines.JobSupport` v3 @kind this, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.o:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L15c2a4.  v0:= new `kotlinx.coroutines.CancellableContinuationImpl`;
  #L15c2a8.  call temp:= `intercepted`(v4) @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.intercepted:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind static;
  #L15c2ae.  v1:= temp @kind object;
  #L15c2b0.  v2:= 1I;
  #L15c2b2.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.<init>:(Lkotlin/coroutines/Continuation;I)V` @kind direct;
  #L15c2b8.  call `initCancellability`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.initCancellability:()V` @kind virtual;
  #L15c2be.  v1:= new `kotlinx.coroutines.c0`;
  #L15c2c2.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/c0;.<init>:(Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L15c2c8.  call temp:= `invokeOnCompletion`(v3, v1) @signature `Lkotlinx/coroutines/JobSupport;.invokeOnCompletion:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @kind virtual;
  #L15c2ce.  v1:= temp @kind object;
  #L15c2d0.  call `disposeOnCancellation`(v0, v1) @signature `Lkotlinx/coroutines/CancellableContinuationKt;.disposeOnCancellation:(Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/DisposableHandle;)V` @kind static;
  #L15c2d6.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/CancellableContinuationImpl;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L15c2dc.  v0:= temp @kind object;
  #L15c2de.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L15c2e4.  v1:= temp @kind object;
  #L15c2e6.  if v0 != v1 then goto L15c2f0;
  #L15c2ea.  call `probeCoroutineSuspended`(v4) @signature `Lkotlin/coroutines/jvm/internal/DebugProbesKt;.probeCoroutineSuspended:(Lkotlin/coroutines/Continuation;)V` @kind static;
  #L15c2f0.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L15c2f6.  v4:= temp @kind object;
  #L15c2f8.  if v0 != v4 then goto L15c2fe;
  #L15c2fc.  return v0 @kind object;
  #L15c2fe.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15c302.  return v4 @kind object;
}
procedure `java.lang.Object` `p`(`kotlinx.coroutines.JobSupport` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.p:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15c314.  v0:= 0I;
  #L15c316.  v1:= v0 @kind object;
  #L15c318.  call temp:= `getState$kotlinx_coroutines_core`(v6) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15c31e.  v2:= temp @kind object;
  #L15c320.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L15c324.  if v3 == 0 then goto L15c3b8;
  #L15c328.  @monitorenter v2
  #L15c32a.  v3:= v2 @kind object;
  #L15c32c.  v3:= (`kotlinx.coroutines.JobSupport$c`) v3 @kind object;
  #L15c330.  call temp:= `g`(v3) @signature `Lkotlinx/coroutines/JobSupport$c;.g:()Z` @kind virtual;
  #L15c336.  v3:= temp;
  #L15c338.  if v3 == 0 then goto L15c348;
  #L15c33c.  call temp:= `access$getTOO_LATE_TO_CANCEL$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getTOO_LATE_TO_CANCEL$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15c342.  v7:= temp @kind object;
  #L15c344.  @monitorexit v2
  #L15c346.  return v7 @kind object;
  #L15c348.  v3:= v2 @kind object;
  #L15c34a.  v3:= (`kotlinx.coroutines.JobSupport$c`) v3 @kind object;
  #L15c34e.  call temp:= `e`(v3) @signature `Lkotlinx/coroutines/JobSupport$c;.e:()Z` @kind virtual;
  #L15c354.  v3:= temp;
  #L15c356.  if v7 != 0 then goto L15c35e;
  #L15c35a.  if v3 != 0 then goto L15c376;
  #L15c35e.  if v1 != 0 then goto L15c36a;
  #L15c362.  call temp:= `h`(v6, v7) @signature `Lkotlinx/coroutines/JobSupport;.h:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind direct;
  #L15c368.  v1:= temp @kind object;
  #L15c36a.  v7:= v2 @kind object;
  #L15c36c.  v7:= (`kotlinx.coroutines.JobSupport$c`) v7 @kind object;
  #L15c370.  call `a`(v7, v1) @signature `Lkotlinx/coroutines/JobSupport$c;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L15c376.  v7:= v2 @kind object;
  #L15c378.  v7:= (`kotlinx.coroutines.JobSupport$c`) v7 @kind object;
  #L15c37c.  call temp:= `d`(v7) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L15c382.  v7:= temp @kind object;
  #L15c384.  v1:= v3 ^~ 1;
  #L15c388.  if v1 == 0 then goto L15c38e;
  #L15c38c.  v0:= v7 @kind object;
  #L15c38e.  @monitorexit v2
  #L15c390.  if v0 != 0 then goto L15c396;
  #L15c394.  goto L15c3a8;
  #L15c396.  v2:= (`kotlinx.coroutines.JobSupport$c`) v2 @kind object;
  #L15c39a.  call temp:= `getList`(v2) @signature `Lkotlinx/coroutines/JobSupport$c;.getList:()Lkotlinx/coroutines/NodeList;` @kind virtual;
  #L15c3a0.  v7:= temp @kind object;
  #L15c3a2.  call `s`(v6, v7, v0) @signature `Lkotlinx/coroutines/JobSupport;.s:(Lkotlinx/coroutines/NodeList;Ljava/lang/Throwable;)V` @kind direct;
  #L15c3a8.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15c3ae.  v7:= temp @kind object;
  #L15c3b0.  return v7 @kind object;
  #L15c3b2.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15c3b4.  @monitorexit v2
  #L15c3b6.  throw v7;
  #L15c3b8.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L15c3bc.  if v3 == 0 then goto L15c448;
  #L15c3c0.  if v1 != 0 then goto L15c3cc;
  #L15c3c4.  call temp:= `h`(v6, v7) @signature `Lkotlinx/coroutines/JobSupport;.h:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind direct;
  #L15c3ca.  v1:= temp @kind object;
  #L15c3cc.  v3:= v2 @kind object;
  #L15c3ce.  v3:= (`kotlinx.coroutines.Incomplete`) v3 @kind object;
  #L15c3d2.  call temp:= `isActive`(v3) @signature `Lkotlinx/coroutines/Incomplete;.isActive:()Z` @kind interface;
  #L15c3d8.  v4:= temp;
  #L15c3da.  if v4 == 0 then goto L15c3f4;
  #L15c3de.  call temp:= `z`(v6, v3, v1) @signature `Lkotlinx/coroutines/JobSupport;.z:(Lkotlinx/coroutines/Incomplete;Ljava/lang/Throwable;)Z` @kind direct;
  #L15c3e4.  v2:= temp;
  #L15c3e6.  if v2 == 0 then goto L15c318;
  #L15c3ea.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15c3f0.  v7:= temp @kind object;
  #L15c3f2.  return v7 @kind object;
  #L15c3f4.  v3:= new `kotlinx.coroutines.CompletedExceptionally`;
  #L15c3f8.  v4:= 0I;
  #L15c3fa.  v5:= 2I;
  #L15c3fc.  call `<init>`(v3, v1, v4, v5, v0) @signature `Lkotlinx/coroutines/CompletedExceptionally;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L15c402.  call temp:= `A`(v6, v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.A:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L15c408.  v3:= temp @kind object;
  #L15c40a.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15c410.  v4:= temp @kind object;
  #L15c412.  if v3 == v4 then goto L15c428;
  #L15c416.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15c41c.  v2:= temp @kind object;
  #L15c41e.  if v3 != v2 then goto L15c426;
  #L15c422.  goto L15c318;
  #L15c426.  return v3 @kind object;
  #L15c428.  v7:= "Cannot happen in " @kind object;
  #L15c42c.  call temp:= `stringPlus`(v7, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15c432.  v7:= temp @kind object;
  #L15c434.  v0:= new `java.lang.IllegalStateException`;
  #L15c438.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c43e.  v7:= temp @kind object;
  #L15c440.  call `<init>`(v0, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15c446.  throw v0;
  #L15c448.  call temp:= `access$getTOO_LATE_TO_CANCEL$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getTOO_LATE_TO_CANCEL$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15c44e.  v7:= temp @kind object;
  #L15c450.  return v7 @kind object;
  catch `java.lang.Throwable` @[L15c32a..L15c344] goto L15c3b2;
  catch `java.lang.Throwable` @[L15c348..L15c384] goto L15c3b2;
}
procedure `kotlinx.coroutines.JobNode` `q`(`kotlinx.coroutines.JobSupport` v1 @kind this, `kotlin.jvm.functions.Function1` v2 @kind object, `boolean` v3 ) @signature `Lkotlinx/coroutines/JobSupport;.q:(Lkotlin/jvm/functions/Function1;Z)Lkotlinx/coroutines/JobNode;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L15cfdc.  v0:= 0I;
  #L15cfde.  if v3 == 0 then goto L15d000;
  #L15cfe2.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.JobCancellingNode` @kind boolean;
  #L15cfe6.  if v3 == 0 then goto L15cff0;
  #L15cfea.  v0:= v2 @kind object;
  #L15cfec.  v0:= (`kotlinx.coroutines.JobCancellingNode`) v0 @kind object;
  #L15cff0.  if v0 != 0 then goto L15d04e;
  #L15cff4.  v0:= new `kotlinx.coroutines.v`;
  #L15cff8.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/v;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L15cffe.  goto L15d04e;
  #L15d000.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.JobNode` @kind boolean;
  #L15d004.  if v3 == 0 then goto L15d010;
  #L15d008.  v3:= v2 @kind object;
  #L15d00a.  v3:= (`kotlinx.coroutines.JobNode`) v3 @kind object;
  #L15d00e.  goto L15d012;
  #L15d010.  v3:= v0 @kind object;
  #L15d012.  if v3 != 0 then goto L15d018;
  #L15d016.  goto L15d040;
  #L15d018.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L15d01e.  v0:= temp;
  #L15d020.  if v0 == 0 then goto L15d03e;
  #L15d024.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.JobCancellingNode` @kind boolean;
  #L15d028.  v0:= v0 ^~ 1;
  #L15d02c.  if v0 == 0 then goto L15d032;
  #L15d030.  goto L15d03e;
  #L15d032.  v2:= new `java.lang.AssertionError`;
  #L15d036.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L15d03c.  throw v2;
  #L15d03e.  v0:= v3 @kind object;
  #L15d040.  if v0 != 0 then goto L15d04e;
  #L15d044.  v0:= new `kotlinx.coroutines.w`;
  #L15d048.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/w;.<init>:(Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L15d04e.  call `setJob`(v0, v1) @signature `Lkotlinx/coroutines/JobNode;.setJob:(Lkotlinx/coroutines/JobSupport;)V` @kind virtual;
  #L15d054.  return v0 @kind object;
}
procedure `kotlinx.coroutines.ChildHandleNode` `r`(`kotlinx.coroutines.JobSupport` v1 @kind this, `kotlinx.coroutines.internal.LockFreeLinkedListNode` v2 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.r:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Lkotlinx/coroutines/ChildHandleNode;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L15cd78.  call temp:= `isRemoved`(v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.isRemoved:()Z` @kind virtual;
  #L15cd7e.  v0:= temp;
  #L15cd80.  if v0 == 0 then goto L15cd8e;
  #L15cd84.  call temp:= `getPrevNode`(v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getPrevNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L15cd8a.  v2:= temp @kind object;
  #L15cd8c.  goto L15cd78;
  #L15cd8e.  call temp:= `getNextNode`(v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L15cd94.  v2:= temp @kind object;
  #L15cd96.  call temp:= `isRemoved`(v2) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.isRemoved:()Z` @kind virtual;
  #L15cd9c.  v0:= temp;
  #L15cd9e.  if v0 == 0 then goto L15cda4;
  #L15cda2.  goto L15cd8e;
  #L15cda4.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.ChildHandleNode` @kind boolean;
  #L15cda8.  if v0 == 0 then goto L15cdb2;
  #L15cdac.  v2:= (`kotlinx.coroutines.ChildHandleNode`) v2 @kind object;
  #L15cdb0.  return v2 @kind object;
  #L15cdb2.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.NodeList` @kind boolean;
  #L15cdb6.  if v0 == 0 then goto L15cd8e;
  #L15cdba.  v2:= 0I;
  #L15cdbc.  return v2 @kind object;
}
procedure `void` `s`(`kotlinx.coroutines.JobSupport` v7 @kind this, `kotlinx.coroutines.NodeList` v8 @kind object, `java.lang.Throwable` v9 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.s:(Lkotlinx/coroutines/NodeList;Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L15d454.  call `onCancelling`(v7, v9) @signature `Lkotlinx/coroutines/JobSupport;.onCancelling:(Ljava/lang/Throwable;)V` @kind virtual;
  #L15d45a.  call temp:= `getNext`(v8) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNext:()Ljava/lang/Object;` @kind virtual;
  #L15d460.  v0:= temp @kind object;
  #L15d462.  v0:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v0 @kind object;
  #L15d466.  v1:= 0I;
  #L15d468.  v2:= v1 @kind object;
  #L15d46a.  call temp:= `areEqual`(v0, v8) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L15d470.  v3:= temp;
  #L15d472.  if v3 != 0 then goto L15d4e8;
  #L15d476.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.JobCancellingNode` @kind boolean;
  #L15d47a.  if v3 == 0 then goto L15d4de;
  #L15d47e.  v3:= v0 @kind object;
  #L15d480.  v3:= (`kotlinx.coroutines.JobNode`) v3 @kind object;
  #L15d484.  call `invoke`(v3, v9) @signature `Lkotlinx/coroutines/CompletionHandlerBase;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L15d48a.  goto L15d4de;
  #L15d48c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15d48e.  if v2 != 0 then goto L15d496;
  #L15d492.  v5:= v1 @kind object;
  #L15d494.  goto L15d49e;
  #L15d496.  call `addSuppressed`(v2, v4) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L15d49c.  v5:= v2 @kind object;
  #L15d49e.  if v5 != 0 then goto L15d4de;
  #L15d4a2.  v2:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L15d4a6.  v5:= new `java.lang.StringBuilder`;
  #L15d4aa.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15d4b0.  v6:= "Exception in completion handler " @kind object;
  #L15d4b4.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d4ba.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d4c0.  v3:= " for " @kind object;
  #L15d4c4.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d4ca.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d4d0.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15d4d6.  v3:= temp @kind object;
  #L15d4d8.  call `<init>`(v2, v3, v4) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L15d4de.  call temp:= `getNextNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L15d4e4.  v0:= temp @kind object;
  #L15d4e6.  goto L15d46a;
  #L15d4e8.  if v2 != 0 then goto L15d4ee;
  #L15d4ec.  goto L15d4f4;
  #L15d4ee.  call `handleOnCompletionException$kotlinx_coroutines_core`(v7, v2) @signature `Lkotlinx/coroutines/JobSupport;.handleOnCompletionException$kotlinx_coroutines_core:(Ljava/lang/Throwable;)V` @kind virtual;
  #L15d4f4.  call temp:= `e`(v7, v9) @signature `Lkotlinx/coroutines/JobSupport;.e:(Ljava/lang/Throwable;)Z` @kind direct;
  #L15d4fa.  return @kind void;
  catch `java.lang.Throwable` @[L15d484..L15d48a] goto L15d48c;
}
procedure `void` `t`(`kotlinx.coroutines.JobSupport` v7 @kind this, `kotlinx.coroutines.NodeList` v8 @kind object, `java.lang.Throwable` v9 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.t:(Lkotlinx/coroutines/NodeList;Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L15d518.  call temp:= `getNext`(v8) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNext:()Ljava/lang/Object;` @kind virtual;
  #L15d51e.  v0:= temp @kind object;
  #L15d520.  v0:= (`kotlinx.coroutines.internal.LockFreeLinkedListNode`) v0 @kind object;
  #L15d524.  v1:= 0I;
  #L15d526.  v2:= v1 @kind object;
  #L15d528.  call temp:= `areEqual`(v0, v8) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L15d52e.  v3:= temp;
  #L15d530.  if v3 != 0 then goto L15d5a6;
  #L15d534.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.JobNode` @kind boolean;
  #L15d538.  if v3 == 0 then goto L15d59c;
  #L15d53c.  v3:= v0 @kind object;
  #L15d53e.  v3:= (`kotlinx.coroutines.JobNode`) v3 @kind object;
  #L15d542.  call `invoke`(v3, v9) @signature `Lkotlinx/coroutines/CompletionHandlerBase;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L15d548.  goto L15d59c;
  #L15d54a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15d54c.  if v2 != 0 then goto L15d554;
  #L15d550.  v5:= v1 @kind object;
  #L15d552.  goto L15d55c;
  #L15d554.  call `addSuppressed`(v2, v4) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L15d55a.  v5:= v2 @kind object;
  #L15d55c.  if v5 != 0 then goto L15d59c;
  #L15d560.  v2:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L15d564.  v5:= new `java.lang.StringBuilder`;
  #L15d568.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15d56e.  v6:= "Exception in completion handler " @kind object;
  #L15d572.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d578.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d57e.  v3:= " for " @kind object;
  #L15d582.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d588.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15d58e.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15d594.  v3:= temp @kind object;
  #L15d596.  call `<init>`(v2, v3, v4) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L15d59c.  call temp:= `getNextNode`(v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L15d5a2.  v0:= temp @kind object;
  #L15d5a4.  goto L15d528;
  #L15d5a6.  if v2 != 0 then goto L15d5ac;
  #L15d5aa.  goto L15d5b2;
  #L15d5ac.  call `handleOnCompletionException$kotlinx_coroutines_core`(v7, v2) @signature `Lkotlinx/coroutines/JobSupport;.handleOnCompletionException$kotlinx_coroutines_core:(Ljava/lang/Throwable;)V` @kind virtual;
  #L15d5b2.  return @kind void;
  catch `java.lang.Throwable` @[L15d542..L15d548] goto L15d54a;
}
procedure `java.util.concurrent.CancellationException` `toCancellationException$default`(`kotlinx.coroutines.JobSupport` v0 @kind object, `java.lang.Throwable` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.toCancellationException$default:(Lkotlinx/coroutines/JobSupport;Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CancellationException;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15cbd8.  if v4 != 0 then goto L15cbf0;
  #L15cbdc.  v3:= v3 ^& 1;
  #L15cbe0.  if v3 == 0 then goto L15cbe6;
  #L15cbe4.  v2:= 0I;
  #L15cbe6.  call temp:= `toCancellationException`(v0, v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.toCancellationException:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/util/concurrent/CancellationException;` @kind virtual;
  #L15cbec.  v0:= temp @kind object;
  #L15cbee.  return v0 @kind object;
  #L15cbf0.  v0:= new `java.lang.UnsupportedOperationException`;
  #L15cbf4.  v1:= "Super calls with default arguments not supported in this target, function: toCancellationException" @kind object;
  #L15cbf8.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15cbfe.  throw v0;
}
procedure `void` `u`(`kotlinx.coroutines.JobSupport` v2 @kind this, `kotlinx.coroutines.r` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.u:(Lkotlinx/coroutines/r;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L15d624.  v0:= new `kotlinx.coroutines.NodeList`;
  #L15d628.  call `<init>`(v0) @signature `Lkotlinx/coroutines/NodeList;.<init>:()V` @kind direct;
  #L15d62e.  call temp:= `isActive`(v3) @signature `Lkotlinx/coroutines/r;.isActive:()Z` @kind virtual;
  #L15d634.  v1:= temp;
  #L15d636.  if v1 == 0 then goto L15d63c;
  #L15d63a.  goto L15d648;
  #L15d63c.  v1:= new `kotlinx.coroutines.InactiveNodeList`;
  #L15d640.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/InactiveNodeList;.<init>:(Lkotlinx/coroutines/NodeList;)V` @kind direct;
  #L15d646.  v0:= v1 @kind object;
  #L15d648.  v1:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L15d64c.  call temp:= `compareAndSet`(v1, v2, v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L15d652.  return @kind void;
}
procedure `void` `v`(`kotlinx.coroutines.JobSupport` v2 @kind this, `kotlinx.coroutines.JobNode` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.v:(Lkotlinx/coroutines/JobNode;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L15d664.  v0:= new `kotlinx.coroutines.NodeList`;
  #L15d668.  call `<init>`(v0) @signature `Lkotlinx/coroutines/NodeList;.<init>:()V` @kind direct;
  #L15d66e.  call temp:= `addOneIfEmpty`(v3, v0) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.addOneIfEmpty:(Lkotlinx/coroutines/internal/LockFreeLinkedListNode;)Z` @kind virtual;
  #L15d674.  call temp:= `getNextNode`(v3) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.getNextNode:()Lkotlinx/coroutines/internal/LockFreeLinkedListNode;` @kind virtual;
  #L15d67a.  v0:= temp @kind object;
  #L15d67c.  v1:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L15d680.  call temp:= `compareAndSet`(v1, v2, v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L15d686.  return @kind void;
}
procedure `int` `w`(`kotlinx.coroutines.JobSupport` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.w:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15be1c.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L15be20.  v1:= -1I;
  #L15be22.  v2:= 1I;
  #L15be24.  v3:= 0I;
  #L15be26.  if v0 == 0 then goto L15be60;
  #L15be2a.  v0:= v5 @kind object;
  #L15be2c.  v0:= (`kotlinx.coroutines.r`) v0 @kind object;
  #L15be30.  call temp:= `isActive`(v0) @signature `Lkotlinx/coroutines/r;.isActive:()Z` @kind virtual;
  #L15be36.  v0:= temp;
  #L15be38.  if v0 == 0 then goto L15be3e;
  #L15be3c.  return v3;
  #L15be3e.  v0:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L15be42.  call temp:= `access$getEMPTY_ACTIVE$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getEMPTY_ACTIVE$p:()Lkotlinx/coroutines/r;` @kind static;
  #L15be48.  v3:= temp @kind object;
  #L15be4a.  call temp:= `compareAndSet`(v0, v4, v5, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L15be50.  v5:= temp;
  #L15be52.  if v5 != 0 then goto L15be58;
  #L15be56.  return v1;
  #L15be58.  call `onStart`(v4) @signature `Lkotlinx/coroutines/JobSupport;.onStart:()V` @kind virtual;
  #L15be5e.  return v2;
  #L15be60.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.InactiveNodeList` @kind boolean;
  #L15be64.  if v0 == 0 then goto L15be90;
  #L15be68.  v0:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L15be6c.  v3:= v5 @kind object;
  #L15be6e.  v3:= (`kotlinx.coroutines.InactiveNodeList`) v3 @kind object;
  #L15be72.  call temp:= `getList`(v3) @signature `Lkotlinx/coroutines/InactiveNodeList;.getList:()Lkotlinx/coroutines/NodeList;` @kind virtual;
  #L15be78.  v3:= temp @kind object;
  #L15be7a.  call temp:= `compareAndSet`(v0, v4, v5, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L15be80.  v5:= temp;
  #L15be82.  if v5 != 0 then goto L15be88;
  #L15be86.  return v1;
  #L15be88.  call `onStart`(v4) @signature `Lkotlinx/coroutines/JobSupport;.onStart:()V` @kind virtual;
  #L15be8e.  return v2;
  #L15be90.  return v3;
}
procedure `java.lang.String` `x`(`kotlinx.coroutines.JobSupport` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.x:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L15c704.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L15c708.  v1:= "Active" @kind object;
  #L15c70c.  if v0 == 0 then goto L15c738;
  #L15c710.  v3:= (`kotlinx.coroutines.JobSupport$c`) v3 @kind object;
  #L15c714.  call temp:= `e`(v3) @signature `Lkotlinx/coroutines/JobSupport$c;.e:()Z` @kind virtual;
  #L15c71a.  v0:= temp;
  #L15c71c.  if v0 == 0 then goto L15c726;
  #L15c720.  v1:= "Cancelling" @kind object;
  #L15c724.  goto L15c76a;
  #L15c726.  call temp:= `f`(v3) @signature `Lkotlinx/coroutines/JobSupport$c;.f:()Z` @kind virtual;
  #L15c72c.  v3:= temp;
  #L15c72e.  if v3 == 0 then goto L15c76a;
  #L15c732.  v1:= "Completing" @kind object;
  #L15c736.  goto L15c76a;
  #L15c738.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L15c73c.  if v0 == 0 then goto L15c758;
  #L15c740.  v3:= (`kotlinx.coroutines.Incomplete`) v3 @kind object;
  #L15c744.  call temp:= `isActive`(v3) @signature `Lkotlinx/coroutines/Incomplete;.isActive:()Z` @kind interface;
  #L15c74a.  v3:= temp;
  #L15c74c.  if v3 == 0 then goto L15c752;
  #L15c750.  goto L15c76a;
  #L15c752.  v1:= "New" @kind object;
  #L15c756.  goto L15c76a;
  #L15c758.  v3:= instanceof @variable v3 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15c75c.  if v3 == 0 then goto L15c766;
  #L15c760.  v1:= "Cancelled" @kind object;
  #L15c764.  goto L15c76a;
  #L15c766.  v1:= "Completed" @kind object;
  #L15c76a.  return v1 @kind object;
}
procedure `boolean` `y`(`kotlinx.coroutines.JobSupport` v4 @kind this, `kotlinx.coroutines.Incomplete` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.y:(Lkotlinx/coroutines/Incomplete;Ljava/lang/Object;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15bca0.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L15bca6.  v0:= temp;
  #L15bca8.  v1:= 0I;
  #L15bcaa.  v2:= 1I;
  #L15bcac.  if v0 == 0 then goto L15bcda;
  #L15bcb0.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L15bcb4.  if v0 != 0 then goto L15bcc6;
  #L15bcb8.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.JobNode` @kind boolean;
  #L15bcbc.  if v0 == 0 then goto L15bcc2;
  #L15bcc0.  goto L15bcc6;
  #L15bcc2.  v0:= 0I;
  #L15bcc4.  goto L15bcc8;
  #L15bcc6.  v0:= 1I;
  #L15bcc8.  if v0 == 0 then goto L15bcce;
  #L15bccc.  goto L15bcda;
  #L15bcce.  v5:= new `java.lang.AssertionError`;
  #L15bcd2.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L15bcd8.  throw v5;
  #L15bcda.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L15bce0.  v0:= temp;
  #L15bce2.  if v0 == 0 then goto L15bcfe;
  #L15bce6.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15bcea.  v0:= v0 ^~ v2 @kind int;
  #L15bcec.  if v0 == 0 then goto L15bcf2;
  #L15bcf0.  goto L15bcfe;
  #L15bcf2.  v5:= new `java.lang.AssertionError`;
  #L15bcf6.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L15bcfc.  throw v5;
  #L15bcfe.  v0:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L15bd02.  call temp:= `boxIncomplete`(v6) @signature `Lkotlinx/coroutines/JobSupportKt;.boxIncomplete:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15bd08.  v3:= temp @kind object;
  #L15bd0a.  call temp:= `compareAndSet`(v0, v4, v5, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L15bd10.  v0:= temp;
  #L15bd12.  if v0 != 0 then goto L15bd18;
  #L15bd16.  return v1;
  #L15bd18.  v0:= 0I;
  #L15bd1a.  call `onCancelling`(v4, v0) @signature `Lkotlinx/coroutines/JobSupport;.onCancelling:(Ljava/lang/Throwable;)V` @kind virtual;
  #L15bd20.  call `onCompletionInternal`(v4, v6) @signature `Lkotlinx/coroutines/JobSupport;.onCompletionInternal:(Ljava/lang/Object;)V` @kind virtual;
  #L15bd26.  call `f`(v4, v5, v6) @signature `Lkotlinx/coroutines/JobSupport;.f:(Lkotlinx/coroutines/Incomplete;Ljava/lang/Object;)V` @kind direct;
  #L15bd2c.  return v2;
}
procedure `boolean` `z`(`kotlinx.coroutines.JobSupport` v5 @kind this, `kotlinx.coroutines.Incomplete` v6 @kind object, `java.lang.Throwable` v7 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.z:(Lkotlinx/coroutines/Incomplete;Ljava/lang/Throwable;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15bd40.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L15bd46.  v0:= temp;
  #L15bd48.  v1:= 1I;
  #L15bd4a.  if v0 == 0 then goto L15bd66;
  #L15bd4e.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L15bd52.  v0:= v0 ^~ v1 @kind int;
  #L15bd54.  if v0 == 0 then goto L15bd5a;
  #L15bd58.  goto L15bd66;
  #L15bd5a.  v6:= new `java.lang.AssertionError`;
  #L15bd5e.  call `<init>`(v6) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L15bd64.  throw v6;
  #L15bd66.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L15bd6c.  v0:= temp;
  #L15bd6e.  if v0 == 0 then goto L15bd8c;
  #L15bd72.  call temp:= `isActive`(v6) @signature `Lkotlinx/coroutines/Incomplete;.isActive:()Z` @kind interface;
  #L15bd78.  v0:= temp;
  #L15bd7a.  if v0 == 0 then goto L15bd80;
  #L15bd7e.  goto L15bd8c;
  #L15bd80.  v6:= new `java.lang.AssertionError`;
  #L15bd84.  call `<init>`(v6) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L15bd8a.  throw v6;
  #L15bd8c.  call temp:= `m`(v5, v6) @signature `Lkotlinx/coroutines/JobSupport;.m:(Lkotlinx/coroutines/Incomplete;)Lkotlinx/coroutines/NodeList;` @kind direct;
  #L15bd92.  v0:= temp @kind object;
  #L15bd94.  v2:= 0I;
  #L15bd96.  if v0 != 0 then goto L15bd9c;
  #L15bd9a.  return v2;
  #L15bd9c.  v3:= new `kotlinx.coroutines.JobSupport$c`;
  #L15bda0.  call `<init>`(v3, v0, v2, v7) @signature `Lkotlinx/coroutines/JobSupport$c;.<init>:(Lkotlinx/coroutines/NodeList;ZLjava/lang/Throwable;)V` @kind direct;
  #L15bda6.  v4:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L15bdaa.  call temp:= `compareAndSet`(v4, v5, v6, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L15bdb0.  v6:= temp;
  #L15bdb2.  if v6 != 0 then goto L15bdb8;
  #L15bdb6.  return v2;
  #L15bdb8.  call `s`(v5, v0, v7) @signature `Lkotlinx/coroutines/JobSupport;.s:(Lkotlinx/coroutines/NodeList;Ljava/lang/Throwable;)V` @kind direct;
  #L15bdbe.  return v1;
}
procedure `void` `afterCompletion`(`kotlinx.coroutines.JobSupport` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.afterCompletion:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L15d210.  return @kind void;
}
procedure `kotlinx.coroutines.ChildHandle` `attachChild`(`kotlinx.coroutines.JobSupport` v6 @kind this, `kotlinx.coroutines.ChildJob` v7 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.attachChild:(Lkotlinx/coroutines/ChildJob;)Lkotlinx/coroutines/ChildHandle;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15cce4.  v3:= new `kotlinx.coroutines.ChildHandleNode`;
  #L15cce8.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/ChildHandleNode;.<init>:(Lkotlinx/coroutines/ChildJob;)V` @kind direct;
  #L15ccee.  v1:= 1I;
  #L15ccf0.  v2:= 0I;
  #L15ccf2.  v4:= 2I;
  #L15ccf4.  v5:= 0I;
  #L15ccf6.  v0:= v6 @kind object;
  #L15ccf8.  call temp:= `invokeOnCompletion$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.invokeOnCompletion$default:(Lkotlinx/coroutines/Job;ZZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/coroutines/DisposableHandle;` @kind static;
  #L15ccfe.  v7:= temp @kind object;
  #L15cd00.  v7:= (`kotlinx.coroutines.ChildHandle`) v7 @kind object;
  #L15cd04.  return v7 @kind object;
}
procedure `java.lang.Object` `awaitInternal$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v2 @kind this, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.awaitInternal$kotlinx_coroutines_core:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15bedc.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15bee2.  v0:= temp @kind object;
  #L15bee4.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L15bee8.  if v1 != 0 then goto L15bf2c;
  #L15beec.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15bef0.  if v1 == 0 then goto L15bf22;
  #L15bef4.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L15bef8.  v0:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L15befc.  call temp:= `getRECOVER_STACK_TRACES`() @signature `Lkotlinx/coroutines/DebugKt;.getRECOVER_STACK_TRACES:()Z` @kind static;
  #L15bf02.  v1:= temp;
  #L15bf04.  if v1 == 0 then goto L15bf20;
  #L15bf08.  v1:= instanceof @variable v3 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L15bf0c.  if v1 != 0 then goto L15bf12;
  #L15bf10.  throw v0;
  #L15bf12.  v3:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v3 @kind object;
  #L15bf16.  call temp:= `access$recoverFromStackFrame`(v0, v3) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.access$recoverFromStackFrame:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Ljava/lang/Throwable;` @kind static;
  #L15bf1c.  v3:= temp @kind object;
  #L15bf1e.  throw v3;
  #L15bf20.  throw v0;
  #L15bf22.  call temp:= `unboxState`(v0) @signature `Lkotlinx/coroutines/JobSupportKt;.unboxState:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15bf28.  v3:= temp @kind object;
  #L15bf2a.  return v3 @kind object;
  #L15bf2c.  call temp:= `w`(v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.w:(Ljava/lang/Object;)I` @kind direct;
  #L15bf32.  v0:= temp;
  #L15bf34.  if v0 < 0 then goto L15bedc;
  #L15bf38.  call temp:= `c`(v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.c:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind direct;
  #L15bf3e.  v3:= temp @kind object;
  #L15bf40.  return v3 @kind object;
}
procedure `void` `cancel`(`kotlinx.coroutines.JobSupport` v0 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.cancel:()V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L15d224.  call `cancel`(v0) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.cancel:(Lkotlinx/coroutines/Job;)V` @kind static;
  #L15d22a.  return @kind void;
}
procedure `void` `cancel`(`kotlinx.coroutines.JobSupport` v2 @kind this, `java.util.concurrent.CancellationException` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.cancel:(Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15d23c.  if v3 != 0 then goto L15d256;
  #L15d240.  v3:= 0I;
  #L15d242.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L15d246.  call temp:= `access$cancellationExceptionMessage`(v2) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L15d24c.  v1:= temp @kind object;
  #L15d24e.  call `<init>`(v0, v1, v3, v2) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L15d254.  v3:= v0 @kind object;
  #L15d256.  call `cancelInternal`(v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L15d25c.  return @kind void;
}
procedure `boolean` `cancel`(`kotlinx.coroutines.JobSupport` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.cancel:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L15b938.  v0:= 1I;
  #L15b93a.  v1:= 0I;
  #L15b93c.  if v4 != 0 then goto L15b954;
  #L15b940.  v4:= new `kotlinx.coroutines.JobCancellationException`;
  #L15b944.  call temp:= `access$cancellationExceptionMessage`(v3) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L15b94a.  v2:= temp @kind object;
  #L15b94c.  call `<init>`(v4, v2, v1, v3) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L15b952.  goto L15b95c;
  #L15b954.  call temp:= `toCancellationException$default`(v3, v4, v1, v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.toCancellationException$default:(Lkotlinx/coroutines/JobSupport;Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CancellationException;` @kind static;
  #L15b95a.  v4:= temp @kind object;
  #L15b95c.  call `cancelInternal`(v3, v4) @signature `Lkotlinx/coroutines/JobSupport;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L15b962.  return v0;
}
procedure `boolean` `cancelCoroutine`(`kotlinx.coroutines.JobSupport` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.cancelCoroutine:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L15b974.  call temp:= `cancelImpl$kotlinx_coroutines_core`(v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.cancelImpl$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @kind virtual;
  #L15b97a.  v1:= temp;
  #L15b97c.  return v1;
}
procedure `boolean` `cancelImpl$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.cancelImpl$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L15b990.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15b996.  v0:= temp @kind object;
  #L15b998.  call temp:= `getOnCancelComplete$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/JobSupport;.getOnCancelComplete$kotlinx_coroutines_core:()Z` @kind virtual;
  #L15b99e.  v1:= temp;
  #L15b9a0.  v2:= 1I;
  #L15b9a2.  if v1 == 0 then goto L15b9b8;
  #L15b9a6.  call temp:= `d`(v3, v4) @signature `Lkotlinx/coroutines/JobSupport;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L15b9ac.  v0:= temp @kind object;
  #L15b9ae.  v1:= `@@kotlinx.coroutines.JobSupportKt.COMPLETING_WAITING_CHILDREN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L15b9b2.  if v0 != v1 then goto L15b9b8;
  #L15b9b6.  return v2;
  #L15b9b8.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15b9be.  v1:= temp @kind object;
  #L15b9c0.  if v0 != v1 then goto L15b9cc;
  #L15b9c4.  call temp:= `p`(v3, v4) @signature `Lkotlinx/coroutines/JobSupport;.p:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L15b9ca.  v0:= temp @kind object;
  #L15b9cc.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15b9d2.  v4:= temp @kind object;
  #L15b9d4.  if v0 != v4 then goto L15b9da;
  #L15b9d8.  goto L15b9fa;
  #L15b9da.  v4:= `@@kotlinx.coroutines.JobSupportKt.COMPLETING_WAITING_CHILDREN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L15b9de.  if v0 != v4 then goto L15b9e4;
  #L15b9e2.  goto L15b9fa;
  #L15b9e4.  call temp:= `access$getTOO_LATE_TO_CANCEL$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getTOO_LATE_TO_CANCEL$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15b9ea.  v4:= temp @kind object;
  #L15b9ec.  if v0 != v4 then goto L15b9f4;
  #L15b9f0.  v2:= 0I;
  #L15b9f2.  goto L15b9fa;
  #L15b9f4.  call `afterCompletion`(v3, v0) @signature `Lkotlinx/coroutines/JobSupport;.afterCompletion:(Ljava/lang/Object;)V` @kind virtual;
  #L15b9fa.  return v2;
}
procedure `void` `cancelInternal`(`kotlinx.coroutines.JobSupport` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.cancelInternal:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L15d270.  call temp:= `cancelImpl$kotlinx_coroutines_core`(v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.cancelImpl$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d276.  return @kind void;
}
procedure `java.lang.String` `cancellationExceptionMessage`(`kotlinx.coroutines.JobSupport` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.cancellationExceptionMessage:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L15c6d0.  v0:= "Job was cancelled" @kind object;
  #L15c6d4.  return v0 @kind object;
}
procedure `boolean` `childCancelled`(`kotlinx.coroutines.JobSupport` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.childCancelled:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15ba60.  v0:= instanceof @variable v3 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L15ba64.  v1:= 1I;
  #L15ba66.  if v0 == 0 then goto L15ba6c;
  #L15ba6a.  return v1;
  #L15ba6c.  call temp:= `cancelImpl$kotlinx_coroutines_core`(v2, v3) @signature `Lkotlinx/coroutines/JobSupport;.cancelImpl$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @kind virtual;
  #L15ba72.  v3:= temp;
  #L15ba74.  if v3 == 0 then goto L15ba86;
  #L15ba78.  call temp:= `getHandlesException$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getHandlesException$kotlinx_coroutines_core:()Z` @kind virtual;
  #L15ba7e.  v3:= temp;
  #L15ba80.  if v3 == 0 then goto L15ba86;
  #L15ba84.  goto L15ba88;
  #L15ba86.  v1:= 0I;
  #L15ba88.  return v1;
}
procedure `kotlinx.coroutines.JobCancellationException` `defaultCancellationException$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.defaultCancellationException$kotlinx_coroutines_core:(Ljava/lang/String;Ljava/lang/Throwable;)Lkotlinx/coroutines/JobCancellationException;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15cfb4.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L15cfb8.  if v2 != 0 then goto L15cfc4;
  #L15cfbc.  call temp:= `access$cancellationExceptionMessage`(v1) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L15cfc2.  v2:= temp @kind object;
  #L15cfc4.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L15cfca.  return v0 @kind object;
}
procedure `java.lang.Object` `fold`(`kotlinx.coroutines.JobSupport` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.fold:(Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L15c1b8.  call temp:= `fold`(v0, v1, v2) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.fold:(Lkotlinx/coroutines/Job;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @kind static;
  #L15c1be.  v1:= temp @kind object;
  #L15c1c0.  return v1 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext$Element` `get`(`kotlinx.coroutines.JobSupport` v0 @kind this, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @AccessFlag PUBLIC {
    temp;

  #L15cc88.  call temp:= `get`(v0, v1) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.get:(Lkotlinx/coroutines/Job;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind static;
  #L15cc8e.  v1:= temp @kind object;
  #L15cc90.  return v1 @kind object;
}
procedure `java.util.concurrent.CancellationException` `getCancellationException`(`kotlinx.coroutines.JobSupport` v4 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15ca64.  call temp:= `getState$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15ca6a.  v0:= temp @kind object;
  #L15ca6c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L15ca70.  v2:= "Job is still new or active: " @kind object;
  #L15ca74.  if v1 == 0 then goto L15cac2;
  #L15ca78.  v0:= (`kotlinx.coroutines.JobSupport$c`) v0 @kind object;
  #L15ca7c.  call temp:= `d`(v0) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L15ca82.  v0:= temp @kind object;
  #L15ca84.  if v0 == 0 then goto L15caa6;
  #L15ca88.  call temp:= `getClassSimpleName`(v4) @signature `Lkotlinx/coroutines/DebugStringsKt;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15ca8e.  v1:= temp @kind object;
  #L15ca90.  v2:= " is cancelling" @kind object;
  #L15ca94.  call temp:= `stringPlus`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15ca9a.  v1:= temp @kind object;
  #L15ca9c.  call temp:= `toCancellationException`(v4, v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.toCancellationException:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/util/concurrent/CancellationException;` @kind virtual;
  #L15caa2.  v0:= temp @kind object;
  #L15caa4.  goto L15cb06;
  #L15caa6.  call temp:= `stringPlus`(v2, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15caac.  v0:= temp @kind object;
  #L15caae.  v1:= new `java.lang.IllegalStateException`;
  #L15cab2.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15cab8.  v0:= temp @kind object;
  #L15caba.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15cac0.  throw v1;
  #L15cac2.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L15cac6.  if v1 != 0 then goto L15cb08;
  #L15caca.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15cace.  v2:= 0I;
  #L15cad0.  if v1 == 0 then goto L15cae8;
  #L15cad4.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L15cad8.  v0:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L15cadc.  v1:= 1I;
  #L15cade.  call temp:= `toCancellationException$default`(v4, v0, v2, v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.toCancellationException$default:(Lkotlinx/coroutines/JobSupport;Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CancellationException;` @kind static;
  #L15cae4.  v0:= temp @kind object;
  #L15cae6.  goto L15cb06;
  #L15cae8.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L15caec.  call temp:= `getClassSimpleName`(v4) @signature `Lkotlinx/coroutines/DebugStringsKt;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15caf2.  v1:= temp @kind object;
  #L15caf4.  v3:= " has completed normally" @kind object;
  #L15caf8.  call temp:= `stringPlus`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15cafe.  v1:= temp @kind object;
  #L15cb00.  call `<init>`(v0, v1, v2, v4) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L15cb06.  return v0 @kind object;
  #L15cb08.  call temp:= `stringPlus`(v2, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15cb0e.  v0:= temp @kind object;
  #L15cb10.  v1:= new `java.lang.IllegalStateException`;
  #L15cb14.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15cb1a.  v0:= temp @kind object;
  #L15cb1c.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15cb22.  throw v1;
}
procedure `java.util.concurrent.CancellationException` `getChildJobCancellationCause`(`kotlinx.coroutines.JobSupport` v4 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getChildJobCancellationCause:()Ljava/util/concurrent/CancellationException;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15cb34.  call temp:= `getState$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15cb3a.  v0:= temp @kind object;
  #L15cb3c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L15cb40.  v2:= 0I;
  #L15cb42.  if v1 == 0 then goto L15cb56;
  #L15cb46.  v1:= v0 @kind object;
  #L15cb48.  v1:= (`kotlinx.coroutines.JobSupport$c`) v1 @kind object;
  #L15cb4c.  call temp:= `d`(v1) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L15cb52.  v1:= temp @kind object;
  #L15cb54.  goto L15cb74;
  #L15cb56.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15cb5a.  if v1 == 0 then goto L15cb6a;
  #L15cb5e.  v1:= v0 @kind object;
  #L15cb60.  v1:= (`kotlinx.coroutines.CompletedExceptionally`) v1 @kind object;
  #L15cb64.  v1:= v1.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L15cb68.  goto L15cb74;
  #L15cb6a.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L15cb6e.  if v1 != 0 then goto L15cba6;
  #L15cb72.  v1:= v2 @kind object;
  #L15cb74.  v3:= instanceof @variable v1 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L15cb78.  if v3 == 0 then goto L15cb82;
  #L15cb7c.  v2:= v1 @kind object;
  #L15cb7e.  v2:= (`java.util.concurrent.CancellationException`) v2 @kind object;
  #L15cb82.  if v2 != 0 then goto L15cba4;
  #L15cb86.  v2:= new `kotlinx.coroutines.JobCancellationException`;
  #L15cb8a.  call temp:= `x`(v4, v0) @signature `Lkotlinx/coroutines/JobSupport;.x:(Ljava/lang/Object;)Ljava/lang/String;` @kind direct;
  #L15cb90.  v0:= temp @kind object;
  #L15cb92.  v3:= "Parent job is " @kind object;
  #L15cb96.  call temp:= `stringPlus`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15cb9c.  v0:= temp @kind object;
  #L15cb9e.  call `<init>`(v2, v0, v1, v4) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L15cba4.  return v2 @kind object;
  #L15cba6.  v1:= "Cannot be cancelling child in this state: " @kind object;
  #L15cbaa.  call temp:= `stringPlus`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15cbb0.  v0:= temp @kind object;
  #L15cbb2.  v1:= new `java.lang.IllegalStateException`;
  #L15cbb6.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15cbbc.  v0:= temp @kind object;
  #L15cbbe.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15cbc4.  throw v1;
}
procedure `kotlin.sequences.Sequence` `getChildren`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getChildren:()Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15ccbc.  v0:= new `kotlinx.coroutines.JobSupport$d`;
  #L15ccc0.  v1:= 0I;
  #L15ccc2.  call `<init>`(v0, v2, v1) @signature `Lkotlinx/coroutines/JobSupport$d;.<init>:(Lkotlinx/coroutines/JobSupport;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L15ccc8.  call temp:= `sequence`(v0) @signature `Lkotlin/sequences/SequencesKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L15ccce.  v0:= temp @kind object;
  #L15ccd0.  return v0 @kind object;
}
procedure `java.lang.Object` `getCompletedInternal$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getCompletedInternal$kotlinx_coroutines_core:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15c1d4.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15c1da.  v0:= temp @kind object;
  #L15c1dc.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L15c1e0.  v1:= v1 ^~ 1;
  #L15c1e4.  if v1 == 0 then goto L15c204;
  #L15c1e8.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15c1ec.  if v1 != 0 then goto L15c1fa;
  #L15c1f0.  call temp:= `unboxState`(v0) @signature `Lkotlinx/coroutines/JobSupportKt;.unboxState:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15c1f6.  v0:= temp @kind object;
  #L15c1f8.  return v0 @kind object;
  #L15c1fa.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L15c1fe.  v0:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L15c202.  throw v0;
  #L15c204.  v0:= new `java.lang.IllegalStateException`;
  #L15c208.  v1:= "This job has not completed yet" @kind object;
  #L15c20c.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c212.  v1:= temp @kind object;
  #L15c214.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15c21a.  throw v0;
}
procedure `java.lang.Throwable` `getCompletionCause`(`kotlinx.coroutines.JobSupport` v3 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getCompletionCause:()Ljava/lang/Throwable;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L15c888.  call temp:= `getState$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15c88e.  v0:= temp @kind object;
  #L15c890.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L15c894.  v2:= "Job is still new or active: " @kind object;
  #L15c898.  if v1 == 0 then goto L15c8ca;
  #L15c89c.  v0:= (`kotlinx.coroutines.JobSupport$c`) v0 @kind object;
  #L15c8a0.  call temp:= `d`(v0) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L15c8a6.  v0:= temp @kind object;
  #L15c8a8.  if v0 == 0 then goto L15c8ae;
  #L15c8ac.  goto L15c8e6;
  #L15c8ae.  call temp:= `stringPlus`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15c8b4.  v0:= temp @kind object;
  #L15c8b6.  v1:= new `java.lang.IllegalStateException`;
  #L15c8ba.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c8c0.  v0:= temp @kind object;
  #L15c8c2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15c8c8.  throw v1;
  #L15c8ca.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L15c8ce.  if v1 != 0 then goto L15c8e8;
  #L15c8d2.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15c8d6.  if v1 == 0 then goto L15c8e4;
  #L15c8da.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L15c8de.  v0:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L15c8e2.  goto L15c8e6;
  #L15c8e4.  v0:= 0I;
  #L15c8e6.  return v0 @kind object;
  #L15c8e8.  call temp:= `stringPlus`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15c8ee.  v0:= temp @kind object;
  #L15c8f0.  v1:= new `java.lang.IllegalStateException`;
  #L15c8f4.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c8fa.  v0:= temp @kind object;
  #L15c8fc.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15c902.  throw v1;
}
procedure `boolean` `getCompletionCauseHandled`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getCompletionCauseHandled:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L15ba9c.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15baa2.  v0:= temp @kind object;
  #L15baa4.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15baa8.  if v1 == 0 then goto L15bac0;
  #L15baac.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L15bab0.  call temp:= `getHandled`(v0) @signature `Lkotlinx/coroutines/CompletedExceptionally;.getHandled:()Z` @kind virtual;
  #L15bab6.  v0:= temp;
  #L15bab8.  if v0 == 0 then goto L15bac0;
  #L15babc.  v0:= 1I;
  #L15babe.  goto L15bac2;
  #L15bac0.  v0:= 0I;
  #L15bac2.  return v0;
}
procedure `java.lang.Throwable` `getCompletionExceptionOrNull`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getCompletionExceptionOrNull:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15c914.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15c91a.  v0:= temp @kind object;
  #L15c91c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L15c920.  v1:= v1 ^~ 1;
  #L15c924.  if v1 == 0 then goto L15c932;
  #L15c928.  call temp:= `k`(v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.k:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind direct;
  #L15c92e.  v0:= temp @kind object;
  #L15c930.  return v0 @kind object;
  #L15c932.  v0:= new `java.lang.IllegalStateException`;
  #L15c936.  v1:= "This job has not completed yet" @kind object;
  #L15c93a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c940.  v1:= temp @kind object;
  #L15c942.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15c948.  throw v0;
}
procedure `boolean` `getHandlesException$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getHandlesException$kotlinx_coroutines_core:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15bad4.  v0:= 1I;
  #L15bad6.  return v0;
}
procedure `kotlin.coroutines.CoroutineContext$Key` `getKey`(`kotlinx.coroutines.JobSupport` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getKey:()Lkotlin/coroutines/CoroutineContext$Key;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15cca4.  v0:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L15cca8.  return v0 @kind object;
}
procedure `boolean` `getOnCancelComplete$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getOnCancelComplete$kotlinx_coroutines_core:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15bae8.  v0:= 0I;
  #L15baea.  return v0;
}
procedure `kotlinx.coroutines.selects.SelectClause0` `getOnJoin`(`kotlinx.coroutines.JobSupport` v0 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getOnJoin:()Lkotlinx/coroutines/selects/SelectClause0;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L15d0d0.  return v0 @kind object;
}
procedure `kotlinx.coroutines.ChildHandle` `getParentHandle$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getParentHandle$kotlinx_coroutines_core:()Lkotlinx/coroutines/ChildHandle;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15cd18.  v0:= v1.`kotlinx.coroutines.JobSupport._parentHandle` @type ^`java.lang.Object` @kind object;
  #L15cd1c.  v0:= (`kotlinx.coroutines.ChildHandle`) v0 @kind object;
  #L15cd20.  return v0 @kind object;
}
procedure `java.lang.Object` `getState$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15c22c.  v0:= v2.`kotlinx.coroutines.JobSupport._state` @type ^`java.lang.Object` @kind object;
  #L15c230.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.OpDescriptor` @kind boolean;
  #L15c234.  if v1 != 0 then goto L15c23a;
  #L15c238.  return v0 @kind object;
  #L15c23a.  v0:= (`kotlinx.coroutines.internal.OpDescriptor`) v0 @kind object;
  #L15c23e.  call temp:= `perform`(v0, v2) @signature `Lkotlinx/coroutines/internal/OpDescriptor;.perform:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L15c244.  goto L15c22c;
}
procedure `boolean` `handleJobException`(`kotlinx.coroutines.JobSupport` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.handleJobException:(Ljava/lang/Throwable;)Z` @AccessFlag PROTECTED {
    temp;

  #L15bafc.  v1:= 0I;
  #L15bafe.  return v1;
}
procedure `void` `handleOnCompletionException$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.handleOnCompletionException$kotlinx_coroutines_core:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L15d3bc.  throw v1;
}
procedure `void` `initParentJob`(`kotlinx.coroutines.JobSupport` v1 @kind this, `kotlinx.coroutines.Job` v2 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.initParentJob:(Lkotlinx/coroutines/Job;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L15d3d0.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/DebugKt;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L15d3d6.  v0:= temp;
  #L15d3d8.  if v0 == 0 then goto L15d400;
  #L15d3dc.  call temp:= `getParentHandle$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/JobSupport;.getParentHandle$kotlinx_coroutines_core:()Lkotlinx/coroutines/ChildHandle;` @kind virtual;
  #L15d3e2.  v0:= temp @kind object;
  #L15d3e4.  if v0 != 0 then goto L15d3ec;
  #L15d3e8.  v0:= 1I;
  #L15d3ea.  goto L15d3ee;
  #L15d3ec.  v0:= 0I;
  #L15d3ee.  if v0 == 0 then goto L15d3f4;
  #L15d3f2.  goto L15d400;
  #L15d3f4.  v2:= new `java.lang.AssertionError`;
  #L15d3f8.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L15d3fe.  throw v2;
  #L15d400.  if v2 != 0 then goto L15d410;
  #L15d404.  v2:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L15d408.  call `setParentHandle$kotlinx_coroutines_core`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.setParentHandle$kotlinx_coroutines_core:(Lkotlinx/coroutines/ChildHandle;)V` @kind virtual;
  #L15d40e.  return @kind void;
  #L15d410.  call temp:= `start`(v2) @signature `Lkotlinx/coroutines/Job;.start:()Z` @kind interface;
  #L15d416.  call temp:= `attachChild`(v2, v1) @signature `Lkotlinx/coroutines/Job;.attachChild:(Lkotlinx/coroutines/ChildJob;)Lkotlinx/coroutines/ChildHandle;` @kind interface;
  #L15d41c.  v2:= temp @kind object;
  #L15d41e.  call `setParentHandle$kotlinx_coroutines_core`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.setParentHandle$kotlinx_coroutines_core:(Lkotlinx/coroutines/ChildHandle;)V` @kind virtual;
  #L15d424.  call temp:= `isCompleted`(v1) @signature `Lkotlinx/coroutines/JobSupport;.isCompleted:()Z` @kind virtual;
  #L15d42a.  v0:= temp;
  #L15d42c.  if v0 == 0 then goto L15d440;
  #L15d430.  call `dispose`(v2) @signature `Lkotlinx/coroutines/DisposableHandle;.dispose:()V` @kind interface;
  #L15d436.  v2:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L15d43a.  call `setParentHandle$kotlinx_coroutines_core`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.setParentHandle$kotlinx_coroutines_core:(Lkotlinx/coroutines/ChildHandle;)V` @kind virtual;
  #L15d440.  return @kind void;
}
procedure `kotlinx.coroutines.DisposableHandle` `invokeOnCompletion`(`kotlinx.coroutines.JobSupport` v2 @kind this, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.invokeOnCompletion:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15cf24.  v0:= 0I;
  #L15cf26.  v1:= 1I;
  #L15cf28.  call temp:= `invokeOnCompletion`(v2, v0, v1, v3) @signature `Lkotlinx/coroutines/JobSupport;.invokeOnCompletion:(ZZLkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @kind virtual;
  #L15cf2e.  v3:= temp @kind object;
  #L15cf30.  return v3 @kind object;
}
procedure `kotlinx.coroutines.DisposableHandle` `invokeOnCompletion`(`kotlinx.coroutines.JobSupport` v6 @kind this, `boolean` v7 , `boolean` v8 , `kotlin.jvm.functions.Function1` v9 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.invokeOnCompletion:(ZZLkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15cdd0.  call temp:= `q`(v6, v9, v7) @signature `Lkotlinx/coroutines/JobSupport;.q:(Lkotlin/jvm/functions/Function1;Z)Lkotlinx/coroutines/JobNode;` @kind direct;
  #L15cdd6.  v0:= temp @kind object;
  #L15cdd8.  call temp:= `getState$kotlinx_coroutines_core`(v6) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15cdde.  v1:= temp @kind object;
  #L15cde0.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L15cde4.  if v2 == 0 then goto L15ce14;
  #L15cde8.  v2:= v1 @kind object;
  #L15cdea.  v2:= (`kotlinx.coroutines.r`) v2 @kind object;
  #L15cdee.  call temp:= `isActive`(v2) @signature `Lkotlinx/coroutines/r;.isActive:()Z` @kind virtual;
  #L15cdf4.  v3:= temp;
  #L15cdf6.  if v3 == 0 then goto L15ce0c;
  #L15cdfa.  v2:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L15cdfe.  call temp:= `compareAndSet`(v2, v6, v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L15ce04.  v1:= temp;
  #L15ce06.  if v1 == 0 then goto L15cdd8;
  #L15ce0a.  return v0 @kind object;
  #L15ce0c.  call `u`(v6, v2) @signature `Lkotlinx/coroutines/JobSupport;.u:(Lkotlinx/coroutines/r;)V` @kind direct;
  #L15ce12.  goto L15cdd8;
  #L15ce14.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L15ce18.  v3:= 0I;
  #L15ce1a.  if v2 == 0 then goto L15ced4;
  #L15ce1e.  v2:= v1 @kind object;
  #L15ce20.  v2:= (`kotlinx.coroutines.Incomplete`) v2 @kind object;
  #L15ce24.  call temp:= `getList`(v2) @signature `Lkotlinx/coroutines/Incomplete;.getList:()Lkotlinx/coroutines/NodeList;` @kind interface;
  #L15ce2a.  v2:= temp @kind object;
  #L15ce2c.  if v2 != 0 then goto L15ce50;
  #L15ce30.  if v1 == 0 then goto L15ce40;
  #L15ce34.  v1:= (`kotlinx.coroutines.JobNode`) v1 @kind object;
  #L15ce38.  call `v`(v6, v1) @signature `Lkotlinx/coroutines/JobSupport;.v:(Lkotlinx/coroutines/JobNode;)V` @kind direct;
  #L15ce3e.  goto L15cdd8;
  #L15ce40.  v7:= new `java.lang.NullPointerException`;
  #L15ce44.  v8:= "null cannot be cast to non-null type kotlinx.coroutines.JobNode" @kind object;
  #L15ce48.  call `<init>`(v7, v8) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15ce4e.  throw v7;
  #L15ce50.  v4:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L15ce54.  if v7 == 0 then goto L15ceb6;
  #L15ce58.  v5:= instanceof @variable v1 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L15ce5c.  if v5 == 0 then goto L15ceb6;
  #L15ce60.  @monitorenter v1
  #L15ce62.  v3:= v1 @kind object;
  #L15ce64.  v3:= (`kotlinx.coroutines.JobSupport$c`) v3 @kind object;
  #L15ce68.  call temp:= `d`(v3) @signature `Lkotlinx/coroutines/JobSupport$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L15ce6e.  v3:= temp @kind object;
  #L15ce70.  if v3 == 0 then goto L15ce8e;
  #L15ce74.  v5:= instanceof @variable v9 @type ^`kotlinx.coroutines.ChildHandleNode` @kind boolean;
  #L15ce78.  if v5 == 0 then goto L15cea8;
  #L15ce7c.  v5:= v1 @kind object;
  #L15ce7e.  v5:= (`kotlinx.coroutines.JobSupport$c`) v5 @kind object;
  #L15ce82.  call temp:= `f`(v5) @signature `Lkotlinx/coroutines/JobSupport$c;.f:()Z` @kind virtual;
  #L15ce88.  v5:= temp;
  #L15ce8a.  if v5 != 0 then goto L15cea8;
  #L15ce8e.  call temp:= `a`(v6, v1, v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.a:(Ljava/lang/Object;Lkotlinx/coroutines/NodeList;Lkotlinx/coroutines/JobNode;)Z` @kind direct;
  #L15ce94.  v4:= temp;
  #L15ce96.  if v4 != 0 then goto L15ce9e;
  #L15ce9a.  @monitorexit v1
  #L15ce9c.  goto L15cdd8;
  #L15ce9e.  if v3 != 0 then goto L15cea6;
  #L15cea2.  @monitorexit v1
  #L15cea4.  return v0 @kind object;
  #L15cea6.  v4:= v0 @kind object;
  #L15cea8.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15ceac.  @monitorexit v1
  #L15ceae.  goto L15ceb6;
  #L15ceb0.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15ceb2.  @monitorexit v1
  #L15ceb4.  throw v7;
  #L15ceb6.  if v3 == 0 then goto L15cec6;
  #L15ceba.  if v8 == 0 then goto L15cec4;
  #L15cebe.  call temp:= `invoke`(v9, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L15cec4.  return v4 @kind object;
  #L15cec6.  call temp:= `a`(v6, v1, v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.a:(Ljava/lang/Object;Lkotlinx/coroutines/NodeList;Lkotlinx/coroutines/JobNode;)Z` @kind direct;
  #L15cecc.  v1:= temp;
  #L15cece.  if v1 == 0 then goto L15cdd8;
  #L15ced2.  return v0 @kind object;
  #L15ced4.  if v8 == 0 then goto L15cef8;
  #L15ced8.  v7:= instanceof @variable v1 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15cedc.  if v7 == 0 then goto L15cee6;
  #L15cee0.  v1:= (`kotlinx.coroutines.CompletedExceptionally`) v1 @kind object;
  #L15cee4.  goto L15cee8;
  #L15cee6.  v1:= v3 @kind object;
  #L15cee8.  if v1 != 0 then goto L15ceee;
  #L15ceec.  goto L15cef2;
  #L15ceee.  v3:= v1.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L15cef2.  call temp:= `invoke`(v9, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L15cef8.  v7:= `@@kotlinx.coroutines.NonDisposableHandle.INSTANCE` @type ^`kotlinx.coroutines.NonDisposableHandle` @kind object;
  #L15cefc.  return v7 @kind object;
  catch `java.lang.Throwable` @[L15ce62..L15ce96] goto L15ceb0;
  catch `java.lang.Throwable` @[L15cea8..L15ceac] goto L15ceb0;
}
procedure `boolean` `isActive`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.isActive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15bb10.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15bb16.  v0:= temp @kind object;
  #L15bb18.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L15bb1c.  if v1 == 0 then goto L15bb34;
  #L15bb20.  v0:= (`kotlinx.coroutines.Incomplete`) v0 @kind object;
  #L15bb24.  call temp:= `isActive`(v0) @signature `Lkotlinx/coroutines/Incomplete;.isActive:()Z` @kind interface;
  #L15bb2a.  v0:= temp;
  #L15bb2c.  if v0 == 0 then goto L15bb34;
  #L15bb30.  v0:= 1I;
  #L15bb32.  goto L15bb36;
  #L15bb34.  v0:= 0I;
  #L15bb36.  return v0;
}
procedure `boolean` `isCancelled`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.isCancelled:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15bb48.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15bb4e.  v0:= temp @kind object;
  #L15bb50.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15bb54.  if v1 != 0 then goto L15bb76;
  #L15bb58.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.JobSupport$c` @kind boolean;
  #L15bb5c.  if v1 == 0 then goto L15bb72;
  #L15bb60.  v0:= (`kotlinx.coroutines.JobSupport$c`) v0 @kind object;
  #L15bb64.  call temp:= `e`(v0) @signature `Lkotlinx/coroutines/JobSupport$c;.e:()Z` @kind virtual;
  #L15bb6a.  v0:= temp;
  #L15bb6c.  if v0 == 0 then goto L15bb72;
  #L15bb70.  goto L15bb76;
  #L15bb72.  v0:= 0I;
  #L15bb74.  goto L15bb78;
  #L15bb76.  v0:= 1I;
  #L15bb78.  return v0;
}
procedure `boolean` `isCompleted`(`kotlinx.coroutines.JobSupport` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.isCompleted:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15bb8c.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15bb92.  v0:= temp @kind object;
  #L15bb94.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L15bb98.  v0:= v0 ^~ 1;
  #L15bb9c.  return v0;
}
procedure `boolean` `isCompletedExceptionally`(`kotlinx.coroutines.JobSupport` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.isCompletedExceptionally:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15bbb0.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15bbb6.  v0:= temp @kind object;
  #L15bbb8.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15bbbc.  return v0;
}
procedure `boolean` `isScopedCoroutine`(`kotlinx.coroutines.JobSupport` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.isScopedCoroutine:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L15bbd0.  v0:= 0I;
  #L15bbd2.  return v0;
}
procedure `java.lang.Object` `join`(`kotlinx.coroutines.JobSupport` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.join:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L15c258.  call temp:= `n`(v1) @signature `Lkotlinx/coroutines/JobSupport;.n:()Z` @kind direct;
  #L15c25e.  v0:= temp;
  #L15c260.  if v0 != 0 then goto L15c278;
  #L15c264.  call temp:= `getContext`(v2) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L15c26a.  v2:= temp @kind object;
  #L15c26c.  call `ensureActive`(v2) @signature `Lkotlinx/coroutines/JobKt;.ensureActive:(Lkotlin/coroutines/CoroutineContext;)V` @kind static;
  #L15c272.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15c276.  return v2 @kind object;
  #L15c278.  call temp:= `o`(v1, v2) @signature `Lkotlinx/coroutines/JobSupport;.o:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind direct;
  #L15c27e.  v2:= temp @kind object;
  #L15c280.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L15c286.  v0:= temp @kind object;
  #L15c288.  if v2 != v0 then goto L15c28e;
  #L15c28c.  return v2 @kind object;
  #L15c28e.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L15c292.  return v2 @kind object;
}
procedure `boolean` `makeCompleting$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.makeCompleting$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L15bc18.  call temp:= `getState$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15bc1e.  v0:= temp @kind object;
  #L15bc20.  call temp:= `A`(v3, v0, v4) @signature `Lkotlinx/coroutines/JobSupport;.A:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L15bc26.  v0:= temp @kind object;
  #L15bc28.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15bc2e.  v1:= temp @kind object;
  #L15bc30.  if v0 != v1 then goto L15bc38;
  #L15bc34.  v4:= 0I;
  #L15bc36.  return v4;
  #L15bc38.  v1:= `@@kotlinx.coroutines.JobSupportKt.COMPLETING_WAITING_CHILDREN` @type ^`kotlinx.coroutines.internal.Symbol` @kind object;
  #L15bc3c.  v2:= 1I;
  #L15bc3e.  if v0 != v1 then goto L15bc44;
  #L15bc42.  return v2;
  #L15bc44.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15bc4a.  v1:= temp @kind object;
  #L15bc4c.  if v0 != v1 then goto L15bc52;
  #L15bc50.  goto L15bc18;
  #L15bc52.  call `afterCompletion`(v3, v0) @signature `Lkotlinx/coroutines/JobSupport;.afterCompletion:(Ljava/lang/Object;)V` @kind virtual;
  #L15bc58.  return v2;
}
procedure `java.lang.Object` `makeCompletingOnce$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.makeCompletingOnce$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L15c478.  call temp:= `getState$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15c47e.  v0:= temp @kind object;
  #L15c480.  call temp:= `A`(v3, v0, v4) @signature `Lkotlinx/coroutines/JobSupport;.A:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L15c486.  v0:= temp @kind object;
  #L15c488.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15c48e.  v1:= temp @kind object;
  #L15c490.  if v0 == v1 then goto L15c4a4;
  #L15c494.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/Symbol;` @kind static;
  #L15c49a.  v1:= temp @kind object;
  #L15c49c.  if v0 != v1 then goto L15c4a2;
  #L15c4a0.  goto L15c478;
  #L15c4a2.  return v0 @kind object;
  #L15c4a4.  v0:= new `java.lang.IllegalStateException`;
  #L15c4a8.  v1:= new `java.lang.StringBuilder`;
  #L15c4ac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15c4b2.  v2:= "Job " @kind object;
  #L15c4b6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c4bc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c4c2.  v2:= " is already complete or completing, but is being completed with " @kind object;
  #L15c4c6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c4cc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c4d2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c4d8.  v1:= temp @kind object;
  #L15c4da.  call temp:= `k`(v3, v4) @signature `Lkotlinx/coroutines/JobSupport;.k:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind direct;
  #L15c4e0.  v4:= temp @kind object;
  #L15c4e2.  call `<init>`(v0, v1, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L15c4e8.  throw v0;
}
procedure `kotlin.coroutines.CoroutineContext` `minusKey`(`kotlinx.coroutines.JobSupport` v0 @kind this, `kotlin.coroutines.CoroutineContext$Key` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.minusKey:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;

  #L15cc50.  call temp:= `minusKey`(v0, v1) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.minusKey:(Lkotlinx/coroutines/Job;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L15cc56.  v1:= temp @kind object;
  #L15cc58.  return v1 @kind object;
}
procedure `java.lang.String` `nameString$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v1 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.nameString$kotlinx_coroutines_core:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L15c6e8.  call temp:= `getClassSimpleName`(v1) @signature `Lkotlinx/coroutines/DebugStringsKt;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15c6ee.  v0:= temp @kind object;
  #L15c6f0.  return v0 @kind object;
}
procedure `void` `onCancelling`(`kotlinx.coroutines.JobSupport` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.onCancelling:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED {
    temp;

  #L15d5d0.  return @kind void;
}
procedure `void` `onCompletionInternal`(`kotlinx.coroutines.JobSupport` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.onCompletionInternal:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L15d5e4.  return @kind void;
}
procedure `void` `onStart`(`kotlinx.coroutines.JobSupport` v0 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.onStart:()V` @AccessFlag PROTECTED {
    temp;

  #L15d5f8.  return @kind void;
}
procedure `void` `parentCancelled`(`kotlinx.coroutines.JobSupport` v0 @kind this, `kotlinx.coroutines.ParentJob` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.parentCancelled:(Lkotlinx/coroutines/ParentJob;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L15d60c.  call temp:= `cancelImpl$kotlinx_coroutines_core`(v0, v1) @signature `Lkotlinx/coroutines/JobSupport;.cancelImpl$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @kind virtual;
  #L15d612.  return @kind void;
}
procedure `kotlin.coroutines.CoroutineContext` `plus`(`kotlinx.coroutines.JobSupport` v0 @kind this, `kotlin.coroutines.CoroutineContext` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.plus:(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;

  #L15cc6c.  call temp:= `plus`(v0, v1) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.plus:(Lkotlinx/coroutines/Job;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;` @kind static;
  #L15cc72.  v1:= temp @kind object;
  #L15cc74.  return v1 @kind object;
}
procedure `kotlinx.coroutines.Job` `plus`(`kotlinx.coroutines.JobSupport` v0 @kind this, `kotlinx.coroutines.Job` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.plus:(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;` @AccessFlag PUBLIC {
    temp;

  #L15cf44.  call temp:= `plus`(v0, v1) @signature `Lkotlinx/coroutines/Job$DefaultImpls;.plus:(Lkotlinx/coroutines/Job;Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;` @kind static;
  #L15cf4a.  v1:= temp @kind object;
  #L15cf4c.  return v1 @kind object;
}
procedure `void` `registerSelectClause0`(`kotlinx.coroutines.JobSupport` v2 @kind this, `kotlinx.coroutines.selects.SelectInstance` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.registerSelectClause0:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15d698.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15d69e.  v0:= temp @kind object;
  #L15d6a0.  call temp:= `isSelected`(v3) @signature `Lkotlinx/coroutines/selects/SelectInstance;.isSelected:()Z` @kind interface;
  #L15d6a6.  v1:= temp;
  #L15d6a8.  if v1 == 0 then goto L15d6ae;
  #L15d6ac.  return @kind void;
  #L15d6ae.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L15d6b2.  if v1 != 0 then goto L15d6d2;
  #L15d6b6.  call temp:= `trySelect`(v3) @signature `Lkotlinx/coroutines/selects/SelectInstance;.trySelect:()Z` @kind interface;
  #L15d6bc.  v0:= temp;
  #L15d6be.  if v0 == 0 then goto L15d6d0;
  #L15d6c2.  call temp:= `getCompletion`(v3) @signature `Lkotlinx/coroutines/selects/SelectInstance;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind interface;
  #L15d6c8.  v3:= temp @kind object;
  #L15d6ca.  call `startCoroutineUnintercepted`(v4, v3) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startCoroutineUnintercepted:(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L15d6d0.  return @kind void;
  #L15d6d2.  call temp:= `w`(v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.w:(Ljava/lang/Object;)I` @kind direct;
  #L15d6d8.  v0:= temp;
  #L15d6da.  if v0 != 0 then goto L15d698;
  #L15d6de.  v0:= new `kotlinx.coroutines.f0`;
  #L15d6e2.  call `<init>`(v0, v3, v4) @signature `Lkotlinx/coroutines/f0;.<init>:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L15d6e8.  call temp:= `invokeOnCompletion`(v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.invokeOnCompletion:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @kind virtual;
  #L15d6ee.  v4:= temp @kind object;
  #L15d6f0.  call `disposeOnSelect`(v3, v4) @signature `Lkotlinx/coroutines/selects/SelectInstance;.disposeOnSelect:(Lkotlinx/coroutines/DisposableHandle;)V` @kind interface;
  #L15d6f6.  return @kind void;
}
procedure `void` `registerSelectClause1Internal$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v2 @kind this, `kotlinx.coroutines.selects.SelectInstance` v3 @kind object, `kotlin.jvm.functions.Function2` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.registerSelectClause1Internal$kotlinx_coroutines_core:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15d708.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15d70e.  v0:= temp @kind object;
  #L15d710.  call temp:= `isSelected`(v3) @signature `Lkotlinx/coroutines/selects/SelectInstance;.isSelected:()Z` @kind interface;
  #L15d716.  v1:= temp;
  #L15d718.  if v1 == 0 then goto L15d71e;
  #L15d71c.  return @kind void;
  #L15d71e.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L15d722.  if v1 != 0 then goto L15d762;
  #L15d726.  call temp:= `trySelect`(v3) @signature `Lkotlinx/coroutines/selects/SelectInstance;.trySelect:()Z` @kind interface;
  #L15d72c.  v1:= temp;
  #L15d72e.  if v1 == 0 then goto L15d760;
  #L15d732.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15d736.  if v1 == 0 then goto L15d74a;
  #L15d73a.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L15d73e.  v4:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L15d742.  call `resumeSelectWithException`(v3, v4) @signature `Lkotlinx/coroutines/selects/SelectInstance;.resumeSelectWithException:(Ljava/lang/Throwable;)V` @kind interface;
  #L15d748.  goto L15d760;
  #L15d74a.  call temp:= `unboxState`(v0) @signature `Lkotlinx/coroutines/JobSupportKt;.unboxState:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15d750.  v0:= temp @kind object;
  #L15d752.  call temp:= `getCompletion`(v3) @signature `Lkotlinx/coroutines/selects/SelectInstance;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind interface;
  #L15d758.  v3:= temp @kind object;
  #L15d75a.  call `startCoroutineUnintercepted`(v4, v0, v3) @signature `Lkotlinx/coroutines/intrinsics/UndispatchedKt;.startCoroutineUnintercepted:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V` @kind static;
  #L15d760.  return @kind void;
  #L15d762.  call temp:= `w`(v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.w:(Ljava/lang/Object;)I` @kind direct;
  #L15d768.  v0:= temp;
  #L15d76a.  if v0 != 0 then goto L15d708;
  #L15d76e.  v0:= new `kotlinx.coroutines.e0`;
  #L15d772.  call `<init>`(v0, v3, v4) @signature `Lkotlinx/coroutines/e0;.<init>:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function2;)V` @kind direct;
  #L15d778.  call temp:= `invokeOnCompletion`(v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.invokeOnCompletion:(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;` @kind virtual;
  #L15d77e.  v4:= temp @kind object;
  #L15d780.  call `disposeOnSelect`(v3, v4) @signature `Lkotlinx/coroutines/selects/SelectInstance;.disposeOnSelect:(Lkotlinx/coroutines/DisposableHandle;)V` @kind interface;
  #L15d786.  return @kind void;
}
procedure `void` `removeNode$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v3 @kind this, `kotlinx.coroutines.JobNode` v4 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.removeNode$kotlinx_coroutines_core:(Lkotlinx/coroutines/JobNode;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L15d798.  call temp:= `getState$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15d79e.  v0:= temp @kind object;
  #L15d7a0.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.JobNode` @kind boolean;
  #L15d7a4.  if v1 == 0 then goto L15d7c8;
  #L15d7a8.  if v0 == v4 then goto L15d7ae;
  #L15d7ac.  return @kind void;
  #L15d7ae.  v1:= `@@kotlinx.coroutines.JobSupport.a` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L15d7b2.  call temp:= `access$getEMPTY_ACTIVE$p`() @signature `Lkotlinx/coroutines/JobSupportKt;.access$getEMPTY_ACTIVE$p:()Lkotlinx/coroutines/r;` @kind static;
  #L15d7b8.  v2:= temp @kind object;
  #L15d7ba.  call temp:= `compareAndSet`(v1, v3, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L15d7c0.  v0:= temp;
  #L15d7c2.  if v0 == 0 then goto L15d798;
  #L15d7c6.  return @kind void;
  #L15d7c8.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.Incomplete` @kind boolean;
  #L15d7cc.  if v1 == 0 then goto L15d7e6;
  #L15d7d0.  v0:= (`kotlinx.coroutines.Incomplete`) v0 @kind object;
  #L15d7d4.  call temp:= `getList`(v0) @signature `Lkotlinx/coroutines/Incomplete;.getList:()Lkotlinx/coroutines/NodeList;` @kind interface;
  #L15d7da.  v0:= temp @kind object;
  #L15d7dc.  if v0 == 0 then goto L15d7e6;
  #L15d7e0.  call temp:= `remove`(v4) @signature `Lkotlinx/coroutines/internal/LockFreeLinkedListNode;.remove:()Z` @kind virtual;
  #L15d7e6.  return @kind void;
}
procedure `void` `selectAwaitCompletion$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v6 @kind this, `kotlinx.coroutines.selects.SelectInstance` v7 @kind object, `kotlin.jvm.functions.Function2` v8 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.selectAwaitCompletion$kotlinx_coroutines_core:(Lkotlinx/coroutines/selects/SelectInstance;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L15d7f8.  call temp:= `getState$kotlinx_coroutines_core`(v6) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15d7fe.  v0:= temp @kind object;
  #L15d800.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.CompletedExceptionally` @kind boolean;
  #L15d804.  if v1 == 0 then goto L15d818;
  #L15d808.  v0:= (`kotlinx.coroutines.CompletedExceptionally`) v0 @kind object;
  #L15d80c.  v8:= v0.`kotlinx.coroutines.CompletedExceptionally.cause` @type ^`java.lang.Throwable` @kind object;
  #L15d810.  call `resumeSelectWithException`(v7, v8) @signature `Lkotlinx/coroutines/selects/SelectInstance;.resumeSelectWithException:(Ljava/lang/Throwable;)V` @kind interface;
  #L15d816.  goto L15d836;
  #L15d818.  call temp:= `unboxState`(v0) @signature `Lkotlinx/coroutines/JobSupportKt;.unboxState:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L15d81e.  v1:= temp @kind object;
  #L15d820.  call temp:= `getCompletion`(v7) @signature `Lkotlinx/coroutines/selects/SelectInstance;.getCompletion:()Lkotlin/coroutines/Continuation;` @kind interface;
  #L15d826.  v2:= temp @kind object;
  #L15d828.  v3:= 0I;
  #L15d82a.  v4:= 4I;
  #L15d82c.  v5:= 0I;
  #L15d82e.  v0:= v8 @kind object;
  #L15d830.  call `startCoroutineCancellable$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/intrinsics/CancellableKt;.startCoroutineCancellable$default:(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V` @kind static;
  #L15d836.  return @kind void;
}
procedure `void` `setParentHandle$kotlinx_coroutines_core`(`kotlinx.coroutines.JobSupport` v0 @kind this, `kotlinx.coroutines.ChildHandle` v1 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.setParentHandle$kotlinx_coroutines_core:(Lkotlinx/coroutines/ChildHandle;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L15d848.  v0.`kotlinx.coroutines.JobSupport._parentHandle` @type ^`java.lang.Object` := v1 @kind object;
  #L15d84c.  return @kind void;
}
procedure `boolean` `start`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.start:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15bc6c.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15bc72.  v0:= temp @kind object;
  #L15bc74.  call temp:= `w`(v2, v0) @signature `Lkotlinx/coroutines/JobSupport;.w:(Ljava/lang/Object;)I` @kind direct;
  #L15bc7a.  v0:= temp;
  #L15bc7c.  if v0 == 0 then goto L15bc8a;
  #L15bc80.  v1:= 1I;
  #L15bc82.  if v0 == v1 then goto L15bc88;
  #L15bc86.  goto L15bc6c;
  #L15bc88.  return v1;
  #L15bc8a.  v0:= 0I;
  #L15bc8c.  return v0;
}
procedure `java.util.concurrent.CancellationException` `toCancellationException`(`kotlinx.coroutines.JobSupport` v1 @kind this, `java.lang.Throwable` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lkotlinx/coroutines/JobSupport;.toCancellationException:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/util/concurrent/CancellationException;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L15cc10.  v0:= instanceof @variable v2 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L15cc14.  if v0 == 0 then goto L15cc20;
  #L15cc18.  v0:= v2 @kind object;
  #L15cc1a.  v0:= (`java.util.concurrent.CancellationException`) v0 @kind object;
  #L15cc1e.  goto L15cc22;
  #L15cc20.  v0:= 0I;
  #L15cc22.  if v0 != 0 then goto L15cc3c;
  #L15cc26.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L15cc2a.  if v3 != 0 then goto L15cc36;
  #L15cc2e.  call temp:= `access$cancellationExceptionMessage`(v1) @signature `Lkotlinx/coroutines/JobSupport;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/JobSupport;)Ljava/lang/String;` @kind static;
  #L15cc34.  v3:= temp @kind object;
  #L15cc36.  call `<init>`(v0, v3, v2, v1) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/Job;)V` @kind direct;
  #L15cc3c.  return v0 @kind object;
}
procedure `java.lang.String` `toDebugString`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.toDebugString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L15c77c.  v0:= new `java.lang.StringBuilder`;
  #L15c780.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15c786.  call temp:= `nameString$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.nameString$kotlinx_coroutines_core:()Ljava/lang/String;` @kind virtual;
  #L15c78c.  v1:= temp @kind object;
  #L15c78e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c794.  v1:= 123I;
  #L15c798.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c79e.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/JobSupport;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L15c7a4.  v1:= temp @kind object;
  #L15c7a6.  call temp:= `x`(v2, v1) @signature `Lkotlinx/coroutines/JobSupport;.x:(Ljava/lang/Object;)Ljava/lang/String;` @kind direct;
  #L15c7ac.  v1:= temp @kind object;
  #L15c7ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c7b4.  v1:= 125I;
  #L15c7b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c7be.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c7c4.  v0:= temp @kind object;
  #L15c7c6.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.JobSupport` v2 @kind this) @signature `Lkotlinx/coroutines/JobSupport;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15c7d8.  v0:= new `java.lang.StringBuilder`;
  #L15c7dc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15c7e2.  call temp:= `toDebugString`(v2) @signature `Lkotlinx/coroutines/JobSupport;.toDebugString:()Ljava/lang/String;` @kind virtual;
  #L15c7e8.  v1:= temp @kind object;
  #L15c7ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c7f0.  v1:= 64I;
  #L15c7f4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c7fa.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/DebugStringsKt;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L15c800.  v1:= temp @kind object;
  #L15c802.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15c808.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15c80e.  v0:= temp @kind object;
  #L15c810.  return v0 @kind object;
}
