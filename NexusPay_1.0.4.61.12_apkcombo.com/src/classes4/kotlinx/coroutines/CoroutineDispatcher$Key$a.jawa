record `kotlinx.coroutines.CoroutineDispatcher$Key$a` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
}
global `kotlinx.coroutines.CoroutineDispatcher$Key$a` `@@kotlinx.coroutines.CoroutineDispatcher$Key$a.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CoroutineDispatcher$Key$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1563f4.  v0:= new `kotlinx.coroutines.CoroutineDispatcher$Key$a`;
  #L1563f8.  call `<init>`(v0) @signature `Lkotlinx/coroutines/CoroutineDispatcher$Key$a;.<init>:()V` @kind direct;
  #L1563fe.  `@@kotlinx.coroutines.CoroutineDispatcher$Key$a.a` @type ^`kotlinx.coroutines.CoroutineDispatcher$Key$a` := v0 @kind object;
  #L156402.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.CoroutineDispatcher$Key$a` v1 @kind this) @signature `Lkotlinx/coroutines/CoroutineDispatcher$Key$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L156414.  v0:= 1I;
  #L156416.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L15641c.  return @kind void;
}
procedure `kotlinx.coroutines.CoroutineDispatcher` `a`(`kotlinx.coroutines.CoroutineDispatcher$Key$a` v1 @kind this, `kotlin.coroutines.CoroutineContext$Element` v2 @kind object) @signature `Lkotlinx/coroutines/CoroutineDispatcher$Key$a;.a:(Lkotlin/coroutines/CoroutineContext$Element;)Lkotlinx/coroutines/CoroutineDispatcher;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1563d0.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.CoroutineDispatcher` @kind boolean;
  #L1563d4.  if v0 == 0 then goto L1563de;
  #L1563d8.  v2:= (`kotlinx.coroutines.CoroutineDispatcher`) v2 @kind object;
  #L1563dc.  goto L1563e0;
  #L1563de.  v2:= 0I;
  #L1563e0.  return v2 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.CoroutineDispatcher$Key$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/CoroutineDispatcher$Key$a;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1563b0.  v1:= (`kotlin.coroutines.CoroutineContext$Element`) v1 @kind object;
  #L1563b4.  call temp:= `a`(v0, v1) @signature `Lkotlinx/coroutines/CoroutineDispatcher$Key$a;.a:(Lkotlin/coroutines/CoroutineContext$Element;)Lkotlinx/coroutines/CoroutineDispatcher;` @kind virtual;
  #L1563ba.  v1:= temp @kind object;
  #L1563bc.  return v1 @kind object;
}
