record `kotlinx.coroutines.debug.AgentPremain` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlinx.coroutines.debug.AgentPremain` `@@kotlinx.coroutines.debug.AgentPremain.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `boolean` `@@kotlinx.coroutines.debug.AgentPremain.a` @AccessFlag PRIVATE_STATIC;
global `boolean` `@@kotlinx.coroutines.debug.AgentPremain.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/debug/AgentPremain;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L16cebc.  v0:= new `kotlinx.coroutines.debug.AgentPremain`;
  #L16cec0.  call `<init>`(v0) @signature `Lkotlinx/coroutines/debug/AgentPremain;.<init>:()V` @kind direct;
  #L16cec6.  `@@kotlinx.coroutines.debug.AgentPremain.INSTANCE` @type ^`kotlinx.coroutines.debug.AgentPremain` := v0 @kind object;
  #L16ceca.  v0:= 0I;
  #L16cecc.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L16ced0.  v1:= "kotlinx.coroutines.debug.enable.creation.stack.trace" @kind object;
  #L16ced4.  call temp:= `getProperty`(v1) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L16ceda.  v1:= temp @kind object;
  #L16cedc.  if v1 != 0 then goto L16cee4;
  #L16cee0.  v1:= v0 @kind object;
  #L16cee2.  goto L16cef4;
  #L16cee4.  call temp:= `parseBoolean`(v1) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L16ceea.  v1:= temp;
  #L16ceec.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L16cef2.  v1:= temp @kind object;
  #L16cef4.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L16cefa.  v1:= temp @kind object;
  #L16cefc.  goto L16cf14;
  #L16cefe.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16cf00.  v2:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L16cf04.  call temp:= `createFailure`(v1) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L16cf0a.  v1:= temp @kind object;
  #L16cf0c.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L16cf12.  v1:= temp @kind object;
  #L16cf14.  call temp:= `isFailure-impl`(v1) @signature `Lkotlin/Result;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L16cf1a.  v2:= temp;
  #L16cf1c.  if v2 == 0 then goto L16cf22;
  #L16cf20.  goto L16cf24;
  #L16cf22.  v0:= v1 @kind object;
  #L16cf24.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L16cf28.  if v0 != 0 then goto L16cf3a;
  #L16cf2c.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16cf30.  call temp:= `getEnableCreationStackTraces`(v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.getEnableCreationStackTraces:()Z` @kind virtual;
  #L16cf36.  v0:= temp;
  #L16cf38.  goto L16cf42;
  #L16cf3a.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L16cf40.  v0:= temp;
  #L16cf42.  `@@kotlinx.coroutines.debug.AgentPremain.b` @type ^`boolean` := v0 @kind boolean;
  #L16cf46.  return @kind void;
  catch `java.lang.Throwable` @[L16cecc..L16cefc] goto L16cefe;
}
procedure `void` `<init>`(`kotlinx.coroutines.debug.AgentPremain` v0 @kind this) @signature `Lkotlinx/coroutines/debug/AgentPremain;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L16cf64.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16cf6a.  return @kind void;
}
procedure `void` `a`(`kotlinx.coroutines.debug.AgentPremain` v2 @kind this) @signature `Lkotlinx/coroutines/debug/AgentPremain;.a:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L16cf7c.  v0:= new `sun.misc.Signal`;
  #L16cf80.  v1:= "TRAP" @kind object;
  #L16cf84.  call `<init>`(v0, v1) @signature `Lsun/misc/Signal;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16cf8a.  v1:= `@@kotlinx.coroutines.debug.a.a` @type ^`kotlinx.coroutines.debug.a` @kind object;
  #L16cf8e.  call temp:= `handle`(v0, v1) @signature `Lsun/misc/Signal;.handle:(Lsun/misc/Signal;Lsun/misc/SignalHandler;)Lsun/misc/SignalHandler;` @kind static;
  #L16cf94.  return @kind void;
  catch `java.lang.Throwable` @[L16cf7c..L16cf94] goto L16cf94;
}
procedure `void` `premain`(`java.lang.String` v0 @kind object, `java.lang.instrument.Instrumentation` v1 @kind object) @signature `Lkotlinx/coroutines/debug/AgentPremain;.premain:(Ljava/lang/String;Ljava/lang/instrument/Instrumentation;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L16cfb4.  v0:= 1I;
  #L16cfb6.  `@@kotlinx.coroutines.debug.AgentPremain.a` @type ^`boolean` := v0 @kind boolean;
  #L16cfba.  v0:= `@@kotlinx.coroutines.debug.AgentPremain$DebugProbesTransformer.INSTANCE` @type ^`kotlinx.coroutines.debug.AgentPremain$DebugProbesTransformer` @kind object;
  #L16cfbe.  v0:= (`java.lang.instrument.ClassFileTransformer`) v0 @kind object;
  #L16cfc2.  call `addTransformer`(v1, v0) @signature `Ljava/lang/instrument/Instrumentation;.addTransformer:(Ljava/lang/instrument/ClassFileTransformer;)V` @kind interface;
  #L16cfc8.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16cfcc.  v1:= `@@kotlinx.coroutines.debug.AgentPremain.b` @type ^`boolean` @kind boolean;
  #L16cfd0.  call `setEnableCreationStackTraces`(v0, v1) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.setEnableCreationStackTraces:(Z)V` @kind virtual;
  #L16cfd6.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16cfda.  call `install`(v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.install:()V` @kind virtual;
  #L16cfe0.  v0:= `@@kotlinx.coroutines.debug.AgentPremain.INSTANCE` @type ^`kotlinx.coroutines.debug.AgentPremain` @kind object;
  #L16cfe4.  call `a`(v0) @signature `Lkotlinx/coroutines/debug/AgentPremain;.a:()V` @kind direct;
  #L16cfea.  return @kind void;
}
procedure `boolean` `isInstalledStatically`(`kotlinx.coroutines.debug.AgentPremain` v1 @kind this) @signature `Lkotlinx/coroutines/debug/AgentPremain;.isInstalledStatically:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16cea4.  v0:= `@@kotlinx.coroutines.debug.AgentPremain.a` @type ^`boolean` @kind boolean;
  #L16cea8.  return v0;
}
procedure `void` `setInstalledStatically`(`kotlinx.coroutines.debug.AgentPremain` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/debug/AgentPremain;.setInstalledStatically:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L16cffc.  `@@kotlinx.coroutines.debug.AgentPremain.a` @type ^`boolean` := v1 @kind boolean;
  #L16d000.  return @kind void;
}
