record `kotlinx.coroutines.debug.internal.DebuggerInfo` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Serializable` @kind interface {
  `java.lang.Long` `kotlinx.coroutines.debug.internal.DebuggerInfo.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlinx.coroutines.debug.internal.DebuggerInfo.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlinx.coroutines.debug.internal.DebuggerInfo.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlinx.coroutines.debug.internal.DebuggerInfo.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlinx.coroutines.debug.internal.DebuggerInfo.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlinx.coroutines.debug.internal.DebuggerInfo.f` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `kotlinx.coroutines.debug.internal.DebuggerInfo.g` @AccessFlag PRIVATE_FINAL;
  `long` `kotlinx.coroutines.debug.internal.DebuggerInfo.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.debug.internal.DebuggerInfo` v4 @kind this, `kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` v5 @kind object, `kotlin.coroutines.CoroutineContext` v6 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.<init>:(Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;Lkotlin/coroutines/CoroutineContext;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16fbe0.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16fbe6.  v0:= `@@kotlinx.coroutines.CoroutineId.Key` @type ^`kotlinx.coroutines.CoroutineId$Key` @kind object;
  #L16fbea.  call temp:= `get`(v6, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L16fbf0.  v0:= temp @kind object;
  #L16fbf2.  v0:= (`kotlinx.coroutines.CoroutineId`) v0 @kind object;
  #L16fbf6.  v1:= 0I;
  #L16fbf8.  if v0 != 0 then goto L16fc00;
  #L16fbfc.  v0:= v1 @kind object;
  #L16fbfe.  goto L16fc10;
  #L16fc00.  call temp:= `getId`(v0) @signature `Lkotlinx/coroutines/CoroutineId;.getId:()J` @kind virtual;
  #L16fc06.  v2:= temp @kind wide;
  #L16fc08.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L16fc0e.  v0:= temp @kind object;
  #L16fc10.  v4.`kotlinx.coroutines.debug.internal.DebuggerInfo.a` @type ^`java.lang.Long` := v0 @kind object;
  #L16fc14.  v0:= `@@kotlin.coroutines.ContinuationInterceptor.Key` @type ^`kotlin.coroutines.ContinuationInterceptor$Key` @kind object;
  #L16fc18.  call temp:= `get`(v6, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L16fc1e.  v0:= temp @kind object;
  #L16fc20.  v0:= (`kotlin.coroutines.ContinuationInterceptor`) v0 @kind object;
  #L16fc24.  if v0 != 0 then goto L16fc2c;
  #L16fc28.  v0:= v1 @kind object;
  #L16fc2a.  goto L16fc34;
  #L16fc2c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16fc32.  v0:= temp @kind object;
  #L16fc34.  v4.`kotlinx.coroutines.debug.internal.DebuggerInfo.b` @type ^`java.lang.String` := v0 @kind object;
  #L16fc38.  v0:= `@@kotlinx.coroutines.CoroutineName.Key` @type ^`kotlinx.coroutines.CoroutineName$Key` @kind object;
  #L16fc3c.  call temp:= `get`(v6, v0) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L16fc42.  v6:= temp @kind object;
  #L16fc44.  v6:= (`kotlinx.coroutines.CoroutineName`) v6 @kind object;
  #L16fc48.  if v6 != 0 then goto L16fc50;
  #L16fc4c.  v6:= v1 @kind object;
  #L16fc4e.  goto L16fc58;
  #L16fc50.  call temp:= `getName`(v6) @signature `Lkotlinx/coroutines/CoroutineName;.getName:()Ljava/lang/String;` @kind virtual;
  #L16fc56.  v6:= temp @kind object;
  #L16fc58.  v4.`kotlinx.coroutines.debug.internal.DebuggerInfo.c` @type ^`java.lang.String` := v6 @kind object;
  #L16fc5c.  call temp:= `getState`(v5) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getState:()Ljava/lang/String;` @kind virtual;
  #L16fc62.  v6:= temp @kind object;
  #L16fc64.  v4.`kotlinx.coroutines.debug.internal.DebuggerInfo.d` @type ^`java.lang.String` := v6 @kind object;
  #L16fc68.  v6:= v5.`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.lastObservedThread` @type ^`java.lang.Thread` @kind object;
  #L16fc6c.  if v6 != 0 then goto L16fc74;
  #L16fc70.  v6:= v1 @kind object;
  #L16fc72.  goto L16fc8a;
  #L16fc74.  call temp:= `getState`(v6) @signature `Ljava/lang/Thread;.getState:()Ljava/lang/Thread$State;` @kind virtual;
  #L16fc7a.  v6:= temp @kind object;
  #L16fc7c.  if v6 != 0 then goto L16fc82;
  #L16fc80.  goto L16fc70;
  #L16fc82.  call temp:= `toString`(v6) @signature `Ljava/lang/Thread$State;.toString:()Ljava/lang/String;` @kind virtual;
  #L16fc88.  v6:= temp @kind object;
  #L16fc8a.  v4.`kotlinx.coroutines.debug.internal.DebuggerInfo.e` @type ^`java.lang.String` := v6 @kind object;
  #L16fc8e.  v6:= v5.`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.lastObservedThread` @type ^`java.lang.Thread` @kind object;
  #L16fc92.  if v6 != 0 then goto L16fc98;
  #L16fc96.  goto L16fca0;
  #L16fc98.  call temp:= `getName`(v6) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L16fc9e.  v1:= temp @kind object;
  #L16fca0.  v4.`kotlinx.coroutines.debug.internal.DebuggerInfo.f` @type ^`java.lang.String` := v1 @kind object;
  #L16fca4.  call temp:= `lastObservedStackTrace`(v5) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.lastObservedStackTrace:()Ljava/util/List;` @kind virtual;
  #L16fcaa.  v6:= temp @kind object;
  #L16fcac.  v4.`kotlinx.coroutines.debug.internal.DebuggerInfo.g` @type ^`java.util.List` := v6 @kind object;
  #L16fcb0.  v5:= v5.`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.sequenceNumber` @type ^`long` @kind wide;
  #L16fcb4.  v4.`kotlinx.coroutines.debug.internal.DebuggerInfo.h` @type ^`long` := v5 @kind wide;
  #L16fcb8.  return @kind void;
}
procedure `java.lang.Long` `getCoroutineId`(`kotlinx.coroutines.debug.internal.DebuggerInfo` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.getCoroutineId:()Ljava/lang/Long;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16fb20.  v0:= v1.`kotlinx.coroutines.debug.internal.DebuggerInfo.a` @type ^`java.lang.Long` @kind object;
  #L16fb24.  return v0 @kind object;
}
procedure `java.lang.String` `getDispatcher`(`kotlinx.coroutines.debug.internal.DebuggerInfo` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.getDispatcher:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16fb38.  v0:= v1.`kotlinx.coroutines.debug.internal.DebuggerInfo.b` @type ^`java.lang.String` @kind object;
  #L16fb3c.  return v0 @kind object;
}
procedure `java.util.List` `getLastObservedStackTrace`(`kotlinx.coroutines.debug.internal.DebuggerInfo` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.getLastObservedStackTrace:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16fbb0.  v0:= v1.`kotlinx.coroutines.debug.internal.DebuggerInfo.g` @type ^`java.util.List` @kind object;
  #L16fbb4.  return v0 @kind object;
}
procedure `java.lang.String` `getLastObservedThreadName`(`kotlinx.coroutines.debug.internal.DebuggerInfo` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.getLastObservedThreadName:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16fb50.  v0:= v1.`kotlinx.coroutines.debug.internal.DebuggerInfo.f` @type ^`java.lang.String` @kind object;
  #L16fb54.  return v0 @kind object;
}
procedure `java.lang.String` `getLastObservedThreadState`(`kotlinx.coroutines.debug.internal.DebuggerInfo` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.getLastObservedThreadState:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16fb68.  v0:= v1.`kotlinx.coroutines.debug.internal.DebuggerInfo.e` @type ^`java.lang.String` @kind object;
  #L16fb6c.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`kotlinx.coroutines.debug.internal.DebuggerInfo` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16fb80.  v0:= v1.`kotlinx.coroutines.debug.internal.DebuggerInfo.c` @type ^`java.lang.String` @kind object;
  #L16fb84.  return v0 @kind object;
}
procedure `long` `getSequenceNumber`(`kotlinx.coroutines.debug.internal.DebuggerInfo` v2 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.getSequenceNumber:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L16fbc8.  v0:= v2.`kotlinx.coroutines.debug.internal.DebuggerInfo.h` @type ^`long` @kind wide;
  #L16fbcc.  return v0 @kind wide;
}
procedure `java.lang.String` `getState`(`kotlinx.coroutines.debug.internal.DebuggerInfo` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.getState:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16fb98.  v0:= v1.`kotlinx.coroutines.debug.internal.DebuggerInfo.d` @type ^`java.lang.String` @kind object;
  #L16fb9c.  return v0 @kind object;
}
