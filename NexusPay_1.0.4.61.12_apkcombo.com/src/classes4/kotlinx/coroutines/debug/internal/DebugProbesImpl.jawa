record `kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlinx.coroutines.debug.internal.DebugProbesImpl` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.text.SimpleDateFormat` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Thread` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.b` @AccessFlag PRIVATE_STATIC;
global `kotlinx.coroutines.debug.internal.ConcurrentWeakMap` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.debug.internal.a` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.d` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicLongFieldUpdater` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.e` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.locks.ReentrantReadWriteLock` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.g` @AccessFlag PRIVATE_STATIC;
global `boolean` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.h` @AccessFlag PRIVATE_STATIC;
global `kotlin.jvm.functions.Function1` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.installations` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `kotlinx.coroutines.debug.internal.ConcurrentWeakMap` `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.j` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L16f114.  v0:= new `kotlinx.coroutines.debug.internal.DebugProbesImpl`;
  #L16f118.  call `<init>`(v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.<init>:()V` @kind direct;
  #L16f11e.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` := v0 @kind object;
  #L16f122.  v0:= new `java.text.SimpleDateFormat`;
  #L16f126.  v1:= "yyyy/MM/dd HH:mm:ss" @kind object;
  #L16f12a.  call `<init>`(v0, v1) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16f130.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.a` @type ^`java.text.SimpleDateFormat` := v0 @kind object;
  #L16f134.  v0:= new `kotlinx.coroutines.debug.internal.ConcurrentWeakMap`;
  #L16f138.  v1:= 0I;
  #L16f13a.  v2:= 1I;
  #L16f13c.  v3:= 0I;
  #L16f13e.  call `<init>`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.<init>:(ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L16f144.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.c` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` := v0 @kind object;
  #L16f148.  v0:= new `kotlinx.coroutines.debug.internal.a`;
  #L16f14c.  v3:= 0L;
  #L16f150.  call `<init>`(v0, v3) @signature `Lkotlinx/coroutines/debug/internal/a;.<init>:(J)V` @kind direct;
  #L16f156.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.d` @type ^`kotlinx.coroutines.debug.internal.a` := v0 @kind object;
  #L16f15a.  v0:= new `java.util.concurrent.locks.ReentrantReadWriteLock`;
  #L16f15e.  call `<init>`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.<init>:()V` @kind direct;
  #L16f164.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` := v0 @kind object;
  #L16f168.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.g` @type ^`boolean` := v2 @kind boolean;
  #L16f16c.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.h` @type ^`boolean` := v2 @kind boolean;
  #L16f170.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16f174.  call temp:= `i`(v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.i:()Lkotlin/jvm/functions/Function1;` @kind direct;
  #L16f17a.  v0:= temp @kind object;
  #L16f17c.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.i` @type ^`kotlin.jvm.functions.Function1` := v0 @kind object;
  #L16f180.  v0:= new `kotlinx.coroutines.debug.internal.ConcurrentWeakMap`;
  #L16f184.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.<init>:(Z)V` @kind direct;
  #L16f18a.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.j` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` := v0 @kind object;
  #L16f18e.  v0:= constclass @type ^`kotlinx.coroutines.debug.internal.a` @kind object;
  #L16f192.  v1:= "sequenceNumber" @kind object;
  #L16f196.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;` @kind static;
  #L16f19c.  v0:= temp @kind object;
  #L16f19e.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.e` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` := v0 @kind object;
  #L16f1a2.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v0 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L16f1b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16f1ba.  return @kind void;
}
procedure `void` `a`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v6 @kind this, `kotlinx.coroutines.Job` v7 @kind object, `java.util.Map` v8 @kind object, `java.lang.StringBuilder` v9 @kind object, `java.lang.String` v10 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.a:(Lkotlinx/coroutines/Job;Ljava/util/Map;Ljava/lang/StringBuilder;Ljava/lang/String;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16f1e4.  call temp:= `get`(v8, v7) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L16f1ea.  v0:= temp @kind object;
  #L16f1ec.  v0:= (`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl`) v0 @kind object;
  #L16f1f0.  v1:= "\t" @kind object;
  #L16f1f4.  v2:= 10I;
  #L16f1f8.  if v0 != 0 then goto L16f240;
  #L16f1fc.  v0:= instanceof @variable v7 @type ^`kotlinx.coroutines.internal.ScopeCoroutine` @kind boolean;
  #L16f200.  if v0 != 0 then goto L16f2b6;
  #L16f204.  v0:= new `java.lang.StringBuilder`;
  #L16f208.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16f20e.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f214.  call temp:= `h`(v6, v7) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.h:(Lkotlinx/coroutines/Job;)Ljava/lang/String;` @kind direct;
  #L16f21a.  v3:= temp @kind object;
  #L16f21c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f222.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f228.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16f22e.  v0:= temp @kind object;
  #L16f230.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f236.  call temp:= `stringPlus`(v10, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16f23c.  v10:= temp @kind object;
  #L16f23e.  goto L16f2b6;
  #L16f240.  call temp:= `lastObservedStackTrace`(v0) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.lastObservedStackTrace:()Ljava/util/List;` @kind virtual;
  #L16f246.  v3:= temp @kind object;
  #L16f248.  call temp:= `firstOrNull`(v3) @signature `Lkotlin/collections/CollectionsKt;.firstOrNull:(Ljava/util/List;)Ljava/lang/Object;` @kind static;
  #L16f24e.  v3:= temp @kind object;
  #L16f250.  v3:= (`java.lang.StackTraceElement`) v3 @kind object;
  #L16f254.  call temp:= `getState`(v0) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getState:()Ljava/lang/String;` @kind virtual;
  #L16f25a.  v0:= temp @kind object;
  #L16f25c.  v4:= new `java.lang.StringBuilder`;
  #L16f260.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16f266.  call temp:= `append`(v4, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f26c.  call temp:= `h`(v6, v7) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.h:(Lkotlinx/coroutines/Job;)Ljava/lang/String;` @kind direct;
  #L16f272.  v5:= temp @kind object;
  #L16f274.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f27a.  v5:= ", continuation is " @kind object;
  #L16f27e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f284.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f28a.  v0:= " at line " @kind object;
  #L16f28e.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f294.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f29a.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f2a0.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16f2a6.  v0:= temp @kind object;
  #L16f2a8.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f2ae.  call temp:= `stringPlus`(v10, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16f2b4.  v10:= temp @kind object;
  #L16f2b6.  call temp:= `getChildren`(v7) @signature `Lkotlinx/coroutines/Job;.getChildren:()Lkotlin/sequences/Sequence;` @kind interface;
  #L16f2bc.  v7:= temp @kind object;
  #L16f2be.  call temp:= `iterator`(v7) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16f2c4.  v7:= temp @kind object;
  #L16f2c6.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16f2cc.  v0:= temp;
  #L16f2ce.  if v0 == 0 then goto L16f2e6;
  #L16f2d2.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16f2d8.  v0:= temp @kind object;
  #L16f2da.  v0:= (`kotlinx.coroutines.Job`) v0 @kind object;
  #L16f2de.  call `a`(v6, v0, v8, v9, v10) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.a:(Lkotlinx/coroutines/Job;Ljava/util/Map;Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind direct;
  #L16f2e4.  goto L16f2c6;
  #L16f2e6.  return @kind void;
}
procedure `kotlinx.coroutines.debug.internal.ConcurrentWeakMap` `access$getCallerInfoCache$p`() @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.access$getCallerInfoCache$p:()Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L16f040.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.j` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L16f044.  return v0 @kind object;
}
procedure `java.util.Set` `access$getCapturedCoroutines`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v0 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.access$getCapturedCoroutines:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L16ede8.  call temp:= `g`(v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.g:()Ljava/util/Set;` @kind direct;
  #L16edee.  v0:= temp @kind object;
  #L16edf0.  return v0 @kind object;
}
procedure `java.util.concurrent.locks.ReentrantReadWriteLock` `access$getCoroutineStateLock$p`() @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.access$getCoroutineStateLock$p:()Ljava/util/concurrent/locks/ReentrantReadWriteLock;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L16ee24.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` @kind object;
  #L16ee28.  return v0 @kind object;
}
procedure `boolean` `access$isFinished`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v0 @kind object, `kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v1 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.access$isFinished:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl;Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L16e4c4.  call temp:= `j`(v0, v1) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.j:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)Z` @kind direct;
  #L16e4ca.  v0:= temp;
  #L16e4cc.  return v0;
}
procedure `void` `access$probeCoroutineCompleted`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v0 @kind object, `kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v1 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.access$probeCoroutineCompleted:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl;Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L16f1cc.  call `o`(v0, v1) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.o:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)V` @kind direct;
  #L16f1d2.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `b`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v4 @kind this, `kotlin.coroutines.Continuation` v5 @kind object, `kotlinx.coroutines.debug.internal.StackTraceFrame` v6 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.b:(Lkotlin/coroutines/Continuation;Lkotlinx/coroutines/debug/internal/StackTraceFrame;)Lkotlin/coroutines/Continuation;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16eea8.  call temp:= `isInstalled$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L16eeae.  v0:= temp;
  #L16eeb0.  if v0 != 0 then goto L16eeb6;
  #L16eeb4.  return v5 @kind object;
  #L16eeb6.  v0:= new `kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl`;
  #L16eeba.  call temp:= `getContext`(v5) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L16eec0.  v1:= temp @kind object;
  #L16eec2.  v2:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.e` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L16eec6.  v3:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.d` @type ^`kotlinx.coroutines.debug.internal.a` @kind object;
  #L16eeca.  call temp:= `incrementAndGet`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.incrementAndGet:(Ljava/lang/Object;)J` @kind virtual;
  #L16eed0.  v2:= temp @kind wide;
  #L16eed2.  call `<init>`(v0, v1, v6, v2) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.<init>:(Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/debug/internal/StackTraceFrame;J)V` @kind direct;
  #L16eed8.  v1:= new `kotlinx.coroutines.debug.internal.DebugProbesImpl$a`;
  #L16eedc.  call `<init>`(v1, v5, v0, v6) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;.<init>:(Lkotlin/coroutines/Continuation;Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)V` @kind direct;
  #L16eee2.  v5:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.c` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L16eee6.  v6:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L16eeea.  call temp:= `put`(v5, v1, v6) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L16eef0.  call temp:= `isInstalled$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L16eef6.  v5:= temp;
  #L16eef8.  if v5 != 0 then goto L16ef06;
  #L16eefc.  v5:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.c` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L16ef00.  call `clear`(v5) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.clear:()V` @kind virtual;
  #L16ef06.  return v1 @kind object;
}
procedure `void` `c`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v12 @kind this, `java.io.PrintStream` v13 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.c:(Ljava/io/PrintStream;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L16f330.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` @kind object;
  #L16f334.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L16f33a.  v1:= temp @kind object;
  #L16f33c.  call temp:= `getWriteHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWriteHoldCount:()I` @kind virtual;
  #L16f342.  v2:= temp;
  #L16f344.  v3:= 0I;
  #L16f346.  if v2 != 0 then goto L16f354;
  #L16f34a.  call temp:= `getReadHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getReadHoldCount:()I` @kind virtual;
  #L16f350.  v2:= temp;
  #L16f352.  goto L16f356;
  #L16f354.  v2:= 0I;
  #L16f356.  v4:= 0I;
  #L16f358.  if v4 >= v2 then goto L16f368;
  #L16f35c.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L16f362.  v4:= v4 + 1;
  #L16f366.  goto L16f358;
  #L16f368.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;` @kind virtual;
  #L16f36e.  v0:= temp @kind object;
  #L16f370.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.lock:()V` @kind virtual;
  #L16f376.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16f37a.  call temp:= `isInstalled$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L16f380.  v4:= temp;
  #L16f382.  if v4 == 0 then goto L16f506;
  #L16f386.  v4:= "Coroutines dump " @kind object;
  #L16f38a.  v5:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.a` @type ^`java.text.SimpleDateFormat` @kind object;
  #L16f38e.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L16f394.  v6:= temp @kind wide;
  #L16f396.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L16f39c.  v6:= temp @kind object;
  #L16f39e.  call temp:= `format`(v5, v6) @signature `Ljava/text/SimpleDateFormat;.format:(Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L16f3a4.  v5:= temp @kind object;
  #L16f3a6.  call temp:= `stringPlus`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16f3ac.  v4:= temp @kind object;
  #L16f3ae.  call `print`(v13, v4) @signature `Ljava/io/PrintStream;.print:(Ljava/lang/String;)V` @kind virtual;
  #L16f3b4.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16f3b8.  call temp:= `g`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.g:()Ljava/util/Set;` @kind direct;
  #L16f3be.  v4:= temp @kind object;
  #L16f3c0.  call temp:= `asSequence`(v4) @signature `Lkotlin/collections/CollectionsKt;.asSequence:(Ljava/lang/Iterable;)Lkotlin/sequences/Sequence;` @kind static;
  #L16f3c6.  v4:= temp @kind object;
  #L16f3c8.  v5:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl$b.a` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl$b` @kind object;
  #L16f3cc.  call temp:= `filter`(v4, v5) @signature `Lkotlin/sequences/SequencesKt;.filter:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L16f3d2.  v4:= temp @kind object;
  #L16f3d4.  v5:= new `kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesSynchronized$lambda-21$$inlined$sortedBy$1`;
  #L16f3d8.  call `<init>`(v5) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesSynchronized$lambda-21$$inlined$sortedBy$1;.<init>:()V` @kind direct;
  #L16f3de.  call temp:= `sortedWith`(v4, v5) @signature `Lkotlin/sequences/SequencesKt;.sortedWith:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Lkotlin/sequences/Sequence;` @kind static;
  #L16f3e4.  v4:= temp @kind object;
  #L16f3e6.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16f3ec.  v4:= temp @kind object;
  #L16f3ee.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16f3f4.  v5:= temp;
  #L16f3f6.  if v5 == 0 then goto L16f4ea;
  #L16f3fa.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16f400.  v5:= temp @kind object;
  #L16f402.  v5:= (`kotlinx.coroutines.debug.internal.DebugProbesImpl$a`) v5 @kind object;
  #L16f406.  v6:= v5.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L16f40a.  call temp:= `lastObservedStackTrace`(v6) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.lastObservedStackTrace:()Ljava/util/List;` @kind virtual;
  #L16f410.  v7:= temp @kind object;
  #L16f412.  v8:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16f416.  call temp:= `getState`(v6) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getState:()Ljava/lang/String;` @kind virtual;
  #L16f41c.  v9:= temp @kind object;
  #L16f41e.  v10:= v6.`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl.lastObservedThread` @type ^`java.lang.Thread` @kind object;
  #L16f422.  call temp:= `d`(v8, v9, v10, v7) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.d:(Ljava/lang/String;Ljava/lang/Thread;Ljava/util/List;)Ljava/util/List;` @kind direct;
  #L16f428.  v8:= temp @kind object;
  #L16f42a.  call temp:= `getState`(v6) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getState:()Ljava/lang/String;` @kind virtual;
  #L16f430.  v9:= temp @kind object;
  #L16f432.  v10:= "RUNNING" @kind object;
  #L16f436.  call temp:= `areEqual`(v9, v10) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L16f43c.  v9:= temp;
  #L16f43e.  if v9 == 0 then goto L16f45c;
  #L16f442.  if v8 != v7 then goto L16f45c;
  #L16f446.  call temp:= `getState`(v6) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getState:()Ljava/lang/String;` @kind virtual;
  #L16f44c.  v9:= temp @kind object;
  #L16f44e.  v10:= " (Last suspension stacktrace, not an actual stacktrace)" @kind object;
  #L16f452.  call temp:= `stringPlus`(v9, v10) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16f458.  v9:= temp @kind object;
  #L16f45a.  goto L16f464;
  #L16f45c.  call temp:= `getState`(v6) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getState:()Ljava/lang/String;` @kind virtual;
  #L16f462.  v9:= temp @kind object;
  #L16f464.  v10:= new `java.lang.StringBuilder`;
  #L16f468.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16f46e.  v11:= "\n\nCoroutine " @kind object;
  #L16f472.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f478.  v5:= v5.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L16f47c.  call temp:= `append`(v10, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f482.  v5:= ", state: " @kind object;
  #L16f486.  call temp:= `append`(v10, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f48c.  call temp:= `append`(v10, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16f492.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16f498.  v5:= temp @kind object;
  #L16f49a.  call `print`(v13, v5) @signature `Ljava/io/PrintStream;.print:(Ljava/lang/String;)V` @kind virtual;
  #L16f4a0.  call temp:= `isEmpty`(v7) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L16f4a6.  v5:= temp;
  #L16f4a8.  if v5 == 0 then goto L16f4de;
  #L16f4ac.  v5:= "\n\tat " @kind object;
  #L16f4b0.  v7:= "Coroutine creation stacktrace" @kind object;
  #L16f4b4.  call temp:= `artificialFrame`(v7) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.artificialFrame:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @kind static;
  #L16f4ba.  v7:= temp @kind object;
  #L16f4bc.  call temp:= `stringPlus`(v5, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16f4c2.  v5:= temp @kind object;
  #L16f4c4.  call `print`(v13, v5) @signature `Ljava/io/PrintStream;.print:(Ljava/lang/String;)V` @kind virtual;
  #L16f4ca.  v5:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16f4ce.  call temp:= `getCreationStackTrace`(v6) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getCreationStackTrace:()Ljava/util/List;` @kind virtual;
  #L16f4d4.  v6:= temp @kind object;
  #L16f4d6.  call `n`(v5, v13, v6) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.n:(Ljava/io/PrintStream;Ljava/util/List;)V` @kind direct;
  #L16f4dc.  goto L16f3ee;
  #L16f4de.  v5:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16f4e2.  call `n`(v5, v13, v8) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.n:(Ljava/io/PrintStream;Ljava/util/List;)V` @kind direct;
  #L16f4e8.  goto L16f3ee;
  #L16f4ea.  v13:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L16f4ee.  if v3 >= v2 then goto L16f4fe;
  #L16f4f2.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L16f4f8.  v3:= v3 + 1;
  #L16f4fc.  goto L16f4ee;
  #L16f4fe.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L16f504.  return @kind void;
  #L16f506.  v13:= "Debug probes are not installed" @kind object;
  #L16f50a.  v4:= new `java.lang.IllegalStateException`;
  #L16f50e.  call temp:= `toString`(v13) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16f514.  v13:= temp @kind object;
  #L16f516.  call `<init>`(v4, v13) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16f51c.  throw v4;
  #L16f51e.  v13:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16f520.  if v3 >= v2 then goto L16f530;
  #L16f524.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L16f52a.  v3:= v3 + 1;
  #L16f52e.  goto L16f520;
  #L16f530.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L16f536.  throw v13;
  catch `java.lang.Throwable` @[L16f376..L16f4ee] goto L16f51e;
  catch `java.lang.Throwable` @[L16f506..L16f51e] goto L16f51e;
}
procedure `java.util.List` `d`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.Thread` v9 @kind object, `java.util.List` v10 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.d:(Ljava/lang/String;Ljava/lang/Thread;Ljava/util/List;)Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L16eb28.  v0:= "RUNNING" @kind object;
  #L16eb2c.  call temp:= `areEqual`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L16eb32.  v8:= temp;
  #L16eb34.  if v8 == 0 then goto L16ec8c;
  #L16eb38.  if v9 != 0 then goto L16eb40;
  #L16eb3c.  goto L16ec8c;
  #L16eb40.  v8:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L16eb44.  call temp:= `getStackTrace`(v9) @signature `Ljava/lang/Thread;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L16eb4a.  v8:= temp @kind object;
  #L16eb4c.  call temp:= `constructor-impl`(v8) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L16eb52.  v8:= temp @kind object;
  #L16eb54.  goto L16eb6c;
  #L16eb56.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16eb58.  v9:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L16eb5c.  call temp:= `createFailure`(v8) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L16eb62.  v8:= temp @kind object;
  #L16eb64.  call temp:= `constructor-impl`(v8) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L16eb6a.  v8:= temp @kind object;
  #L16eb6c.  call temp:= `isFailure-impl`(v8) @signature `Lkotlin/Result;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L16eb72.  v9:= temp;
  #L16eb74.  if v9 == 0 then goto L16eb7a;
  #L16eb78.  v8:= 0I;
  #L16eb7a.  v8:= (`java.lang.StackTraceElement`[]) v8 @kind object;
  #L16eb7e.  if v8 != 0 then goto L16eb84;
  #L16eb82.  return v10 @kind object;
  #L16eb84.  v9:= length @variable v8;
  #L16eb86.  v0:= 0I;
  #L16eb88.  v1:= 0I;
  #L16eb8a.  v2:= -1I;
  #L16eb8c.  v3:= 1I;
  #L16eb8e.  if v1 >= v9 then goto L16ebf0;
  #L16eb92.  v4:= v8[v1] @kind object;
  #L16eb96.  call temp:= `getClassName`(v4) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L16eb9c.  v5:= temp @kind object;
  #L16eb9e.  v6:= "kotlin.coroutines.jvm.internal.BaseContinuationImpl" @kind object;
  #L16eba2.  call temp:= `areEqual`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L16eba8.  v5:= temp;
  #L16ebaa.  if v5 == 0 then goto L16ebe2;
  #L16ebae.  call temp:= `getMethodName`(v4) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L16ebb4.  v5:= temp @kind object;
  #L16ebb6.  v6:= "resumeWith" @kind object;
  #L16ebba.  call temp:= `areEqual`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L16ebc0.  v5:= temp;
  #L16ebc2.  if v5 == 0 then goto L16ebe2;
  #L16ebc6.  call temp:= `getFileName`(v4) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L16ebcc.  v4:= temp @kind object;
  #L16ebce.  v5:= "ContinuationImpl.kt" @kind object;
  #L16ebd2.  call temp:= `areEqual`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L16ebd8.  v4:= temp;
  #L16ebda.  if v4 == 0 then goto L16ebe2;
  #L16ebde.  v4:= 1I;
  #L16ebe0.  goto L16ebe4;
  #L16ebe2.  v4:= 0I;
  #L16ebe4.  if v4 == 0 then goto L16ebea;
  #L16ebe8.  goto L16ebf2;
  #L16ebea.  v1:= v1 + 1;
  #L16ebee.  goto L16eb8a;
  #L16ebf0.  v1:= -1I;
  #L16ebf2.  call temp:= `e`(v7, v1, v8, v10) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.e:(I[Ljava/lang/StackTraceElement;Ljava/util/List;)Lkotlin/Pair;` @kind direct;
  #L16ebf8.  v9:= temp @kind object;
  #L16ebfa.  call temp:= `component1`(v9) @signature `Lkotlin/Pair;.component1:()Ljava/lang/Object;` @kind virtual;
  #L16ec00.  v4:= temp @kind object;
  #L16ec02.  v4:= (`java.lang.Number`) v4 @kind object;
  #L16ec06.  call temp:= `intValue`(v4) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L16ec0c.  v4:= temp;
  #L16ec0e.  call temp:= `component2`(v9) @signature `Lkotlin/Pair;.component2:()Ljava/lang/Object;` @kind virtual;
  #L16ec14.  v9:= temp @kind object;
  #L16ec16.  v9:= (`java.lang.Number`) v9 @kind object;
  #L16ec1a.  call temp:= `intValue`(v9) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L16ec20.  v9:= temp;
  #L16ec22.  if v4 != v2 then goto L16ec28;
  #L16ec26.  return v10 @kind object;
  #L16ec28.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L16ec2e.  v2:= temp;
  #L16ec30.  v2:= v2 + v1 @kind int;
  #L16ec32.  v2:= v2 - v4 @kind int;
  #L16ec34.  v2:= v2 - v3 @kind int;
  #L16ec36.  v2:= v2 - v9 @kind int;
  #L16ec38.  v5:= new `java.util.ArrayList`;
  #L16ec3c.  call `<init>`(v5, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L16ec42.  v1:= v1 - v9 @kind int;
  #L16ec44.  if v1 <= 0 then goto L16ec60;
  #L16ec48.  v9:= v0 + 1;
  #L16ec4c.  v0:= v8[v0] @kind object;
  #L16ec50.  call temp:= `add`(v5, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16ec56.  if v9 < v1 then goto L16ec5c;
  #L16ec5a.  goto L16ec60;
  #L16ec5c.  v0:= v9;
  #L16ec5e.  goto L16ec48;
  #L16ec60.  v4:= v4 + v3 @kind int;
  #L16ec62.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L16ec68.  v8:= temp;
  #L16ec6a.  if v4 >= v8 then goto L16ec8a;
  #L16ec6e.  v9:= v4 + 1;
  #L16ec72.  call temp:= `get`(v10, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L16ec78.  v0:= temp @kind object;
  #L16ec7a.  call temp:= `add`(v5, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16ec80.  if v9 < v8 then goto L16ec86;
  #L16ec84.  goto L16ec8a;
  #L16ec86.  v4:= v9;
  #L16ec88.  goto L16ec6e;
  #L16ec8a.  return v5 @kind object;
  #L16ec8c.  return v10 @kind object;
  catch `java.lang.Throwable` @[L16eb40..L16eb54] goto L16eb56;
}
procedure `kotlin.Pair` `e`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v5 @kind this, `int` v6 , `java.lang.StackTraceElement`[] v7 @kind object, `java.util.List` v8 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.e:(I[Ljava/lang/StackTraceElement;Ljava/util/List;)Lkotlin/Pair;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L16ee3c.  v0:= 0I;
  #L16ee3e.  v1:= 0I;
  #L16ee40.  v2:= -1I;
  #L16ee42.  v3:= 3I;
  #L16ee44.  if v1 >= v3 then goto L16ee7e;
  #L16ee48.  v3:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16ee4c.  v4:= v6 + -1;
  #L16ee50.  v4:= v4 - v1 @kind int;
  #L16ee52.  call temp:= `f`(v3, v4, v7, v8) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.f:(I[Ljava/lang/StackTraceElement;Ljava/util/List;)I` @kind direct;
  #L16ee58.  v3:= temp;
  #L16ee5a.  if v3 == v2 then goto L16ee78;
  #L16ee5e.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L16ee64.  v6:= temp @kind object;
  #L16ee66.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L16ee6c.  v7:= temp @kind object;
  #L16ee6e.  call temp:= `to`(v6, v7) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L16ee74.  v6:= temp @kind object;
  #L16ee76.  return v6 @kind object;
  #L16ee78.  v1:= v1 + 1;
  #L16ee7c.  goto L16ee40;
  #L16ee7e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L16ee84.  v6:= temp @kind object;
  #L16ee86.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L16ee8c.  v7:= temp @kind object;
  #L16ee8e.  call temp:= `to`(v6, v7) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L16ee94.  v6:= temp @kind object;
  #L16ee96.  return v6 @kind object;
}
procedure `int` `f`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v5 @kind this, `int` v6 , `java.lang.StackTraceElement`[] v7 @kind object, `java.util.List` v8 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.f:(I[Ljava/lang/StackTraceElement;Ljava/util/List;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L16e5b4.  call temp:= `getOrNull`(v7, v6) @signature `Lkotlin/collections/ArraysKt;.getOrNull:([Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L16e5ba.  v6:= temp @kind object;
  #L16e5bc.  v6:= (`java.lang.StackTraceElement`) v6 @kind object;
  #L16e5c0.  v7:= -1I;
  #L16e5c2.  if v6 != 0 then goto L16e5c8;
  #L16e5c6.  return v7;
  #L16e5c8.  call temp:= `iterator`(v8) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16e5ce.  v8:= temp @kind object;
  #L16e5d0.  v0:= 0I;
  #L16e5d2.  v1:= 0I;
  #L16e5d4.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16e5da.  v2:= temp;
  #L16e5dc.  if v2 == 0 then goto L16e654;
  #L16e5e0.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16e5e6.  v2:= temp @kind object;
  #L16e5e8.  v2:= (`java.lang.StackTraceElement`) v2 @kind object;
  #L16e5ec.  call temp:= `getFileName`(v2) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L16e5f2.  v3:= temp @kind object;
  #L16e5f4.  call temp:= `getFileName`(v6) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L16e5fa.  v4:= temp @kind object;
  #L16e5fc.  call temp:= `areEqual`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L16e602.  v3:= temp;
  #L16e604.  if v3 == 0 then goto L16e644;
  #L16e608.  call temp:= `getClassName`(v2) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L16e60e.  v3:= temp @kind object;
  #L16e610.  call temp:= `getClassName`(v6) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L16e616.  v4:= temp @kind object;
  #L16e618.  call temp:= `areEqual`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L16e61e.  v3:= temp;
  #L16e620.  if v3 == 0 then goto L16e644;
  #L16e624.  call temp:= `getMethodName`(v2) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L16e62a.  v2:= temp @kind object;
  #L16e62c.  call temp:= `getMethodName`(v6) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L16e632.  v3:= temp @kind object;
  #L16e634.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L16e63a.  v2:= temp;
  #L16e63c.  if v2 == 0 then goto L16e644;
  #L16e640.  v2:= 1I;
  #L16e642.  goto L16e646;
  #L16e644.  v2:= 0I;
  #L16e646.  if v2 == 0 then goto L16e64e;
  #L16e64a.  v7:= v1;
  #L16e64c.  goto L16e654;
  #L16e64e.  v1:= v1 + 1;
  #L16e652.  goto L16e5d4;
  #L16e654.  return v7;
}
procedure `java.util.Set` `g`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.g:()Ljava/util/Set;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L16ee04.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.c` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L16ee08.  call temp:= `keySet`(v0) @signature `Lkotlin/collections/AbstractMutableMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L16ee0e.  v0:= temp @kind object;
  #L16ee10.  return v0 @kind object;
}
procedure `java.lang.String` `h`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this, `kotlinx.coroutines.Job` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.h:(Lkotlinx/coroutines/Job;)Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L16e668.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.JobSupport` @kind boolean;
  #L16e66c.  if v0 == 0 then goto L16e67e;
  #L16e670.  v2:= (`kotlinx.coroutines.JobSupport`) v2 @kind object;
  #L16e674.  call temp:= `toDebugString`(v2) @signature `Lkotlinx/coroutines/JobSupport;.toDebugString:()Ljava/lang/String;` @kind virtual;
  #L16e67a.  v2:= temp @kind object;
  #L16e67c.  goto L16e686;
  #L16e67e.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16e684.  v2:= temp @kind object;
  #L16e686.  return v2 @kind object;
}
procedure `kotlin.jvm.functions.Function1` `i`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v2 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.i:()Lkotlin/jvm/functions/Function1;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L16efa4.  v0:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L16efa8.  v0:= "kotlinx.coroutines.debug.internal.ByteBuddyDynamicAttach" @kind object;
  #L16efac.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L16efb2.  v0:= temp @kind object;
  #L16efb4.  call temp:= `getConstructors`(v0) @signature `Ljava/lang/Class;.getConstructors:()[Ljava/lang/reflect/Constructor;` @kind virtual;
  #L16efba.  v0:= temp @kind object;
  #L16efbc.  v1:= 0I;
  #L16efbe.  v0:= v0[v1] @kind object;
  #L16efc2.  v1:= new `java.lang.Object`[v1];
  #L16efc6.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16efcc.  v0:= temp @kind object;
  #L16efce.  if v0 == 0 then goto L16efea;
  #L16efd2.  v1:= 1I;
  #L16efd4.  call temp:= `beforeCheckcastToFunctionOfArity`(v0, v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.beforeCheckcastToFunctionOfArity:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L16efda.  v0:= temp @kind object;
  #L16efdc.  v0:= (`kotlin.jvm.functions.Function1`) v0 @kind object;
  #L16efe0.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L16efe6.  v0:= temp @kind object;
  #L16efe8.  goto L16f010;
  #L16efea.  v0:= new `java.lang.NullPointerException`;
  #L16efee.  v1:= "null cannot be cast to non-null type kotlin.Function1<kotlin.Boolean, kotlin.Unit>" @kind object;
  #L16eff2.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16eff8.  throw v0;
  #L16effa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16effc.  v1:= `@@kotlin.Result.Companion` @type ^`kotlin.Result$Companion` @kind object;
  #L16f000.  call temp:= `createFailure`(v0) @signature `Lkotlin/ResultKt;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L16f006.  v0:= temp @kind object;
  #L16f008.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/Result;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L16f00e.  v0:= temp @kind object;
  #L16f010.  call temp:= `isFailure-impl`(v0) @signature `Lkotlin/Result;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L16f016.  v1:= temp;
  #L16f018.  if v1 == 0 then goto L16f01e;
  #L16f01c.  v0:= 0I;
  #L16f01e.  v0:= (`kotlin.jvm.functions.Function1`) v0 @kind object;
  #L16f022.  return v0 @kind object;
  catch `java.lang.Throwable` @[L16efa4..L16effa] goto L16effa;
}
procedure `boolean` `j`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v2 @kind this, `kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v3 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.j:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L16e510.  v0:= v3.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L16e514.  call temp:= `getContext`(v0) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L16e51a.  v0:= temp @kind object;
  #L16e51c.  if v0 != 0 then goto L16e524;
  #L16e520.  v0:= 0I;
  #L16e522.  goto L16e534;
  #L16e524.  v1:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L16e528.  call temp:= `get`(v0, v1) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L16e52e.  v0:= temp @kind object;
  #L16e530.  v0:= (`kotlinx.coroutines.Job`) v0 @kind object;
  #L16e534.  v1:= 0I;
  #L16e536.  if v0 != 0 then goto L16e53c;
  #L16e53a.  return v1;
  #L16e53c.  call temp:= `isCompleted`(v0) @signature `Lkotlinx/coroutines/Job;.isCompleted:()Z` @kind interface;
  #L16e542.  v0:= temp;
  #L16e544.  if v0 != 0 then goto L16e54a;
  #L16e548.  return v1;
  #L16e54a.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.c` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L16e54e.  call temp:= `remove`(v0, v3) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16e554.  v3:= 1I;
  #L16e556.  return v3;
}
procedure `boolean` `k`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v4 @kind this, `java.lang.StackTraceElement` v5 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.k:(Ljava/lang/StackTraceElement;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16e588.  call temp:= `getClassName`(v5) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L16e58e.  v5:= temp @kind object;
  #L16e590.  v0:= "kotlinx.coroutines" @kind object;
  #L16e594.  v1:= 0I;
  #L16e596.  v2:= 2I;
  #L16e598.  v3:= 0I;
  #L16e59a.  call temp:= `startsWith$default`(v5, v0, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L16e5a0.  v5:= temp;
  #L16e5a2.  return v5;
}
procedure `kotlinx.coroutines.debug.internal.DebugProbesImpl$a` `l`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v2 @kind this, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.l:(Lkotlin/coroutines/Continuation;)Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L16f058.  v0:= instanceof @variable v3 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L16f05c.  v1:= 0I;
  #L16f05e.  if v0 == 0 then goto L16f068;
  #L16f062.  v3:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v3 @kind object;
  #L16f066.  goto L16f06a;
  #L16f068.  v3:= v1 @kind object;
  #L16f06a.  if v3 != 0 then goto L16f070;
  #L16f06e.  goto L16f078;
  #L16f070.  call temp:= `m`(v2, v3) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.m:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;` @kind direct;
  #L16f076.  v1:= temp @kind object;
  #L16f078.  return v1 @kind object;
}
procedure `kotlinx.coroutines.debug.internal.DebugProbesImpl$a` `m`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.m:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L16f08c.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl$a` @kind boolean;
  #L16f090.  if v0 == 0 then goto L16f09a;
  #L16f094.  v2:= (`kotlinx.coroutines.debug.internal.DebugProbesImpl$a`) v2 @kind object;
  #L16f098.  goto L16f0a8;
  #L16f09a.  call temp:= `getCallerFrame`(v2) @signature `Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind interface;
  #L16f0a0.  v2:= temp @kind object;
  #L16f0a2.  if v2 != 0 then goto L16f08c;
  #L16f0a6.  v2:= 0I;
  #L16f0a8.  return v2 @kind object;
}
procedure `void` `n`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v2 @kind this, `java.io.PrintStream` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.n:(Ljava/io/PrintStream;Ljava/util/List;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L16f678.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16f67e.  v4:= temp @kind object;
  #L16f680.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16f686.  v0:= temp;
  #L16f688.  if v0 == 0 then goto L16f6ac;
  #L16f68c.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16f692.  v0:= temp @kind object;
  #L16f694.  v0:= (`java.lang.StackTraceElement`) v0 @kind object;
  #L16f698.  v1:= "\n\tat " @kind object;
  #L16f69c.  call temp:= `stringPlus`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L16f6a2.  v0:= temp @kind object;
  #L16f6a4.  call `print`(v3, v0) @signature `Ljava/io/PrintStream;.print:(Ljava/lang/String;)V` @kind virtual;
  #L16f6aa.  goto L16f680;
  #L16f6ac.  return @kind void;
}
procedure `void` `o`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this, `kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.o:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L16f6c0.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.c` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L16f6c4.  call temp:= `remove`(v0, v2) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16f6ca.  v2:= v2.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L16f6ce.  call temp:= `getLastObservedFrame$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getLastObservedFrame$kotlinx_coroutines_core:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind virtual;
  #L16f6d4.  v2:= temp @kind object;
  #L16f6d6.  if v2 != 0 then goto L16f6de;
  #L16f6da.  v2:= 0I;
  #L16f6dc.  goto L16f6e6;
  #L16f6de.  call temp:= `p`(v1, v2) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.p:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind direct;
  #L16f6e4.  v2:= temp @kind object;
  #L16f6e6.  if v2 != 0 then goto L16f6ec;
  #L16f6ea.  return @kind void;
  #L16f6ec.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.j` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L16f6f0.  call temp:= `remove`(v0, v2) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16f6f6.  return @kind void;
}
procedure `kotlin.coroutines.jvm.internal.CoroutineStackFrame` `p`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.p:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L16ef74.  call temp:= `getCallerFrame`(v2) @signature `Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind interface;
  #L16ef7a.  v2:= temp @kind object;
  #L16ef7c.  if v2 != 0 then goto L16ef84;
  #L16ef80.  v2:= 0I;
  #L16ef82.  return v2 @kind object;
  #L16ef84.  call temp:= `getStackTraceElement`(v2) @signature `Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @kind interface;
  #L16ef8a.  v0:= temp @kind object;
  #L16ef8c.  if v0 == 0 then goto L16ef74;
  #L16ef90.  return v2 @kind object;
}
procedure `java.util.List` `q`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v7 @kind this, `java.lang.Throwable` v8 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.q:(Ljava/lang/Throwable;)Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L16ecac.  call temp:= `getStackTrace`(v8) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L16ecb2.  v8:= temp @kind object;
  #L16ecb4.  v0:= length @variable v8;
  #L16ecb6.  v1:= length @variable v8;
  #L16ecb8.  v2:= -1I;
  #L16ecba.  v1:= v1 + v2 @kind int;
  #L16ecbc.  if v1 < 0 then goto L16ece6;
  #L16ecc0.  v3:= v8[v1] @kind object;
  #L16ecc4.  call temp:= `getClassName`(v3) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L16ecca.  v3:= temp @kind object;
  #L16eccc.  v4:= "kotlin.coroutines.jvm.internal.DebugProbesKt" @kind object;
  #L16ecd0.  call temp:= `areEqual`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L16ecd6.  v3:= temp;
  #L16ecd8.  if v3 == 0 then goto L16ece0;
  #L16ecdc.  v2:= v1;
  #L16ecde.  goto L16ece6;
  #L16ece0.  v1:= v1 + -1;
  #L16ece4.  goto L16ecbc;
  #L16ece6.  v1:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.g` @type ^`boolean` @kind boolean;
  #L16ecea.  v3:= "Coroutine creation stacktrace" @kind object;
  #L16ecee.  if v1 != 0 then goto L16ed28;
  #L16ecf2.  v0:= v0 - v2 @kind int;
  #L16ecf4.  v1:= new `java.util.ArrayList`;
  #L16ecf8.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L16ecfe.  v4:= 0I;
  #L16ed00.  if v4 >= v0 then goto L16ed26;
  #L16ed04.  if v4 != 0 then goto L16ed12;
  #L16ed08.  call temp:= `artificialFrame`(v3) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.artificialFrame:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @kind static;
  #L16ed0e.  v5:= temp @kind object;
  #L16ed10.  goto L16ed1a;
  #L16ed12.  v5:= v4 + v2 @kind int;
  #L16ed16.  v5:= v8[v5] @kind object;
  #L16ed1a.  call temp:= `add`(v1, v5) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L16ed20.  v4:= v4 + 1;
  #L16ed24.  goto L16ed00;
  #L16ed26.  return v1 @kind object;
  #L16ed28.  v1:= new `java.util.ArrayList`;
  #L16ed2c.  v4:= v0 - v2 @kind int;
  #L16ed30.  v4:= v4 + 1;
  #L16ed34.  call `<init>`(v1, v4) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L16ed3a.  call temp:= `artificialFrame`(v3) @signature `Lkotlinx/coroutines/internal/StackTraceRecoveryKt;.artificialFrame:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @kind static;
  #L16ed40.  v3:= temp @kind object;
  #L16ed42.  call temp:= `add`(v1, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16ed48.  v2:= v2 + 1;
  #L16ed4c.  if v2 >= v0 then goto L16edd4;
  #L16ed50.  v3:= v8[v2] @kind object;
  #L16ed54.  call temp:= `k`(v7, v3) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.k:(Ljava/lang/StackTraceElement;)Z` @kind direct;
  #L16ed5a.  v3:= temp;
  #L16ed5c.  if v3 == 0 then goto L16edc8;
  #L16ed60.  v3:= v8[v2] @kind object;
  #L16ed64.  call temp:= `add`(v1, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16ed6a.  v3:= v2 + 1;
  #L16ed6e.  if v3 >= v0 then goto L16ed88;
  #L16ed72.  v4:= v8[v3] @kind object;
  #L16ed76.  call temp:= `k`(v7, v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.k:(Ljava/lang/StackTraceElement;)Z` @kind direct;
  #L16ed7c.  v4:= temp;
  #L16ed7e.  if v4 == 0 then goto L16ed88;
  #L16ed82.  v3:= v3 + 1;
  #L16ed86.  goto L16ed6e;
  #L16ed88.  v4:= v3 + -1;
  #L16ed8c.  v5:= v4;
  #L16ed8e.  if v5 <= v2 then goto L16eda8;
  #L16ed92.  v6:= v8[v5] @kind object;
  #L16ed96.  call temp:= `getFileName`(v6) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L16ed9c.  v6:= temp @kind object;
  #L16ed9e.  if v6 != 0 then goto L16eda8;
  #L16eda2.  v5:= v5 + -1;
  #L16eda6.  goto L16ed8e;
  #L16eda8.  if v5 <= v2 then goto L16edba;
  #L16edac.  if v5 >= v4 then goto L16edba;
  #L16edb0.  v2:= v8[v5] @kind object;
  #L16edb4.  call temp:= `add`(v1, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16edba.  v2:= v8[v4] @kind object;
  #L16edbe.  call temp:= `add`(v1, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16edc4.  v2:= v3;
  #L16edc6.  goto L16ed4c;
  #L16edc8.  v3:= v8[v2] @kind object;
  #L16edcc.  call temp:= `add`(v1, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16edd2.  goto L16ed48;
  #L16edd4.  return v1 @kind object;
}
procedure `void` `r`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v8 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.r:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L16f770.  v5:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl$c.a` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl$c` @kind object;
  #L16f774.  v0:= 0I;
  #L16f776.  v1:= 1I;
  #L16f778.  v2:= 0I;
  #L16f77a.  v3:= "Coroutines Debugger Cleaner" @kind object;
  #L16f77e.  v4:= 0I;
  #L16f780.  v6:= 21I;
  #L16f784.  v7:= 0I;
  #L16f786.  call temp:= `thread$default`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlin/concurrent/ThreadsKt;.thread$default:(ZZLjava/lang/ClassLoader;Ljava/lang/String;ILkotlin/jvm/functions/Function0;ILjava/lang/Object;)Ljava/lang/Thread;` @kind static;
  #L16f78c.  v0:= temp @kind object;
  #L16f78e.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.b` @type ^`java.lang.Thread` := v0 @kind object;
  #L16f792.  return @kind void;
}
procedure `void` `s`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.s:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L16f7a4.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.b` @type ^`java.lang.Thread` @kind object;
  #L16f7a8.  if v0 != 0 then goto L16f7ae;
  #L16f7ac.  goto L16f7b4;
  #L16f7ae.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L16f7b4.  v0:= 0I;
  #L16f7b6.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.b` @type ^`java.lang.Thread` := v0 @kind object;
  #L16f7ba.  return @kind void;
}
procedure `kotlinx.coroutines.debug.internal.StackTraceFrame` `t`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.t:(Ljava/util/List;)Lkotlinx/coroutines/debug/internal/StackTraceFrame;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L16f0bc.  call temp:= `isEmpty`(v4) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L16f0c2.  v0:= temp;
  #L16f0c4.  v1:= 0I;
  #L16f0c6.  if v0 != 0 then goto L16f100;
  #L16f0ca.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L16f0d0.  v0:= temp;
  #L16f0d2.  call temp:= `listIterator`(v4, v0) @signature `Ljava/util/List;.listIterator:(I)Ljava/util/ListIterator;` @kind interface;
  #L16f0d8.  v4:= temp @kind object;
  #L16f0da.  call temp:= `hasPrevious`(v4) @signature `Ljava/util/ListIterator;.hasPrevious:()Z` @kind interface;
  #L16f0e0.  v0:= temp;
  #L16f0e2.  if v0 == 0 then goto L16f100;
  #L16f0e6.  call temp:= `previous`(v4) @signature `Ljava/util/ListIterator;.previous:()Ljava/lang/Object;` @kind interface;
  #L16f0ec.  v0:= temp @kind object;
  #L16f0ee.  v0:= (`java.lang.StackTraceElement`) v0 @kind object;
  #L16f0f2.  v2:= new `kotlinx.coroutines.debug.internal.StackTraceFrame`;
  #L16f0f6.  call `<init>`(v2, v1, v0) @signature `Lkotlinx/coroutines/debug/internal/StackTraceFrame;.<init>:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;Ljava/lang/StackTraceElement;)V` @kind direct;
  #L16f0fc.  v1:= v2 @kind object;
  #L16f0fe.  goto L16f0da;
  #L16f100.  return v1 @kind object;
}
procedure `void` `u`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v4 @kind this, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.u:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;Ljava/lang/String;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16f92c.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` @kind object;
  #L16f930.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L16f936.  v0:= temp @kind object;
  #L16f938.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L16f93e.  v1:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16f942.  call temp:= `isInstalled$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L16f948.  v1:= temp;
  #L16f94a.  if v1 != 0 then goto L16f956;
  #L16f94e.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L16f954.  return @kind void;
  #L16f956.  v1:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.j` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L16f95a.  call temp:= `remove`(v1, v5) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16f960.  v1:= temp @kind object;
  #L16f962.  v1:= (`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl`) v1 @kind object;
  #L16f966.  if v1 == 0 then goto L16f96c;
  #L16f96a.  goto L16f9ba;
  #L16f96c.  v1:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16f970.  call temp:= `m`(v1, v5) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.m:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;` @kind direct;
  #L16f976.  v1:= temp @kind object;
  #L16f978.  v2:= 0I;
  #L16f97a.  if v1 != 0 then goto L16f982;
  #L16f97e.  v1:= v2 @kind object;
  #L16f980.  goto L16f986;
  #L16f982.  v1:= v1.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L16f986.  if v1 != 0 then goto L16f992;
  #L16f98a.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L16f990.  return @kind void;
  #L16f992.  call temp:= `getLastObservedFrame$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getLastObservedFrame$kotlinx_coroutines_core:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind virtual;
  #L16f998.  v3:= temp @kind object;
  #L16f99a.  if v3 != 0 then goto L16f9a0;
  #L16f99e.  goto L16f9ac;
  #L16f9a0.  v2:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16f9a4.  call temp:= `p`(v2, v3) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.p:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind direct;
  #L16f9aa.  v2:= temp @kind object;
  #L16f9ac.  if v2 == 0 then goto L16f9ba;
  #L16f9b0.  v3:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.j` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L16f9b4.  call temp:= `remove`(v3, v2) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L16f9ba.  v2:= v5 @kind object;
  #L16f9bc.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L16f9c0.  call `updateState$kotlinx_coroutines_core`(v1, v6, v2) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.updateState$kotlinx_coroutines_core:(Ljava/lang/String;Lkotlin/coroutines/Continuation;)V` @kind virtual;
  #L16f9c6.  v6:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16f9ca.  call temp:= `p`(v6, v5) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.p:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind direct;
  #L16f9d0.  v5:= temp @kind object;
  #L16f9d2.  if v5 != 0 then goto L16f9de;
  #L16f9d6.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L16f9dc.  return @kind void;
  #L16f9de.  v6:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.j` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L16f9e2.  call temp:= `put`(v6, v5, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L16f9e8.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L16f9ec.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L16f9f2.  return @kind void;
  #L16f9f4.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16f9f6.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L16f9fc.  throw v5;
  catch `java.lang.Throwable` @[L16f93e..L16f94a] goto L16f9f4;
  catch `java.lang.Throwable` @[L16f956..L16f986] goto L16f9f4;
  catch `java.lang.Throwable` @[L16f992..L16f9d2] goto L16f9f4;
  catch `java.lang.Throwable` @[L16f9de..L16f9ec] goto L16f9f4;
}
procedure `void` `v`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v4 @kind this, `kotlin.coroutines.Continuation` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.v:(Lkotlin/coroutines/Continuation;Ljava/lang/String;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L16fa34.  call temp:= `isInstalled$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L16fa3a.  v0:= temp;
  #L16fa3c.  if v0 != 0 then goto L16fa42;
  #L16fa40.  return @kind void;
  #L16fa42.  v0:= "RUNNING" @kind object;
  #L16fa46.  call temp:= `areEqual`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L16fa4c.  v0:= temp;
  #L16fa4e.  if v0 == 0 then goto L16fa88;
  #L16fa52.  v0:= `@@kotlin.KotlinVersion.CURRENT` @type ^`kotlin.KotlinVersion` @kind object;
  #L16fa56.  v1:= 1I;
  #L16fa58.  v2:= 3I;
  #L16fa5a.  v3:= 30I;
  #L16fa5e.  call temp:= `isAtLeast`(v0, v1, v2, v3) @signature `Lkotlin/KotlinVersion;.isAtLeast:(III)Z` @kind virtual;
  #L16fa64.  v0:= temp;
  #L16fa66.  if v0 == 0 then goto L16fa88;
  #L16fa6a.  v0:= instanceof @variable v5 @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind boolean;
  #L16fa6e.  if v0 == 0 then goto L16fa78;
  #L16fa72.  v5:= (`kotlin.coroutines.jvm.internal.CoroutineStackFrame`) v5 @kind object;
  #L16fa76.  goto L16fa7a;
  #L16fa78.  v5:= 0I;
  #L16fa7a.  if v5 != 0 then goto L16fa80;
  #L16fa7e.  return @kind void;
  #L16fa80.  call `u`(v4, v5, v6) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.u:(Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;Ljava/lang/String;)V` @kind direct;
  #L16fa86.  return @kind void;
  #L16fa88.  call temp:= `l`(v4, v5) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.l:(Lkotlin/coroutines/Continuation;)Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;` @kind direct;
  #L16fa8e.  v0:= temp @kind object;
  #L16fa90.  if v0 != 0 then goto L16fa96;
  #L16fa94.  return @kind void;
  #L16fa96.  call `w`(v4, v0, v5, v6) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.w:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;Lkotlin/coroutines/Continuation;Ljava/lang/String;)V` @kind direct;
  #L16fa9c.  return @kind void;
}
procedure `void` `w`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v2 @kind this, `kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.w:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;Lkotlin/coroutines/Continuation;Ljava/lang/String;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L16fab0.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` @kind object;
  #L16fab4.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L16faba.  v0:= temp @kind object;
  #L16fabc.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L16fac2.  v1:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16fac6.  call temp:= `isInstalled$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L16facc.  v1:= temp;
  #L16face.  if v1 != 0 then goto L16fada;
  #L16fad2.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L16fad8.  return @kind void;
  #L16fada.  v3:= v3.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L16fade.  call `updateState$kotlinx_coroutines_core`(v3, v5, v4) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.updateState$kotlinx_coroutines_core:(Ljava/lang/String;Lkotlin/coroutines/Continuation;)V` @kind virtual;
  #L16fae4.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L16fae8.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L16faee.  return @kind void;
  #L16faf0.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16faf2.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L16faf8.  throw v3;
  catch `java.lang.Throwable` @[L16fac2..L16face] goto L16faf0;
  catch `java.lang.Throwable` @[L16fada..L16fae8] goto L16faf0;
}
procedure `void` `dumpCoroutines`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this, `java.io.PrintStream` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.dumpCoroutines:(Ljava/io/PrintStream;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16f2f8.  @monitorenter v2
  #L16f2fa.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16f2fe.  call `c`(v0, v2) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.c:(Ljava/io/PrintStream;)V` @kind direct;
  #L16f304.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L16f308.  @monitorexit v2
  #L16f30a.  return @kind void;
  #L16f30c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16f30e.  @monitorexit v2
  #L16f310.  throw v0;
  catch `java.lang.Throwable` @[L16f2fa..L16f308] goto L16f30c;
}
procedure `java.util.List` `dumpCoroutinesInfo`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v9 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.dumpCoroutinesInfo:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L16e85c.  call temp:= `access$getCoroutineStateLock$p`() @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.access$getCoroutineStateLock$p:()Ljava/util/concurrent/locks/ReentrantReadWriteLock;` @kind static;
  #L16e862.  v0:= temp @kind object;
  #L16e864.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L16e86a.  v1:= temp @kind object;
  #L16e86c.  call temp:= `getWriteHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWriteHoldCount:()I` @kind virtual;
  #L16e872.  v2:= temp;
  #L16e874.  v3:= 0I;
  #L16e876.  if v2 != 0 then goto L16e884;
  #L16e87a.  call temp:= `getReadHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getReadHoldCount:()I` @kind virtual;
  #L16e880.  v2:= temp;
  #L16e882.  goto L16e886;
  #L16e884.  v2:= 0I;
  #L16e886.  v4:= 0I;
  #L16e888.  if v4 >= v2 then goto L16e898;
  #L16e88c.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L16e892.  v4:= v4 + 1;
  #L16e896.  goto L16e888;
  #L16e898.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;` @kind virtual;
  #L16e89e.  v0:= temp @kind object;
  #L16e8a0.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.lock:()V` @kind virtual;
  #L16e8a6.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16e8aa.  call temp:= `isInstalled$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L16e8b0.  v4:= temp;
  #L16e8b2.  if v4 == 0 then goto L16e956;
  #L16e8b6.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16e8ba.  call temp:= `access$getCapturedCoroutines`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.access$getCapturedCoroutines:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl;)Ljava/util/Set;` @kind static;
  #L16e8c0.  v4:= temp @kind object;
  #L16e8c2.  v5:= new `kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$lambda-14$$inlined$sortedBy$1`;
  #L16e8c6.  call `<init>`(v5) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesInfoImpl$lambda-14$$inlined$sortedBy$1;.<init>:()V` @kind direct;
  #L16e8cc.  call temp:= `sortedWith`(v4, v5) @signature `Lkotlin/collections/CollectionsKt;.sortedWith:(Ljava/lang/Iterable;Ljava/util/Comparator;)Ljava/util/List;` @kind static;
  #L16e8d2.  v4:= temp @kind object;
  #L16e8d4.  v5:= new `java.util.ArrayList`;
  #L16e8d8.  call `<init>`(v5) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L16e8de.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16e8e4.  v4:= temp @kind object;
  #L16e8e6.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16e8ec.  v6:= temp;
  #L16e8ee.  if v6 == 0 then goto L16e93e;
  #L16e8f2.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16e8f8.  v6:= temp @kind object;
  #L16e8fa.  v6:= (`kotlinx.coroutines.debug.internal.DebugProbesImpl$a`) v6 @kind object;
  #L16e8fe.  v7:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16e902.  call temp:= `access$isFinished`(v7, v6) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.access$isFinished:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl;Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)Z` @kind static;
  #L16e908.  v7:= temp;
  #L16e90a.  v8:= 0I;
  #L16e90c.  if v7 == 0 then goto L16e912;
  #L16e910.  goto L16e932;
  #L16e912.  v7:= v6.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L16e916.  call temp:= `getContext`(v7) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L16e91c.  v7:= temp @kind object;
  #L16e91e.  if v7 != 0 then goto L16e924;
  #L16e922.  goto L16e932;
  #L16e924.  v8:= new `kotlinx.coroutines.debug.internal.DebugCoroutineInfo`;
  #L16e928.  v6:= v6.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L16e92c.  call `<init>`(v8, v6, v7) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfo;.<init>:(Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;Lkotlin/coroutines/CoroutineContext;)V` @kind direct;
  #L16e932.  if v8 == 0 then goto L16e8e6;
  #L16e936.  call temp:= `add`(v5, v8) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16e93c.  goto L16e8e6;
  #L16e93e.  if v3 >= v2 then goto L16e94e;
  #L16e942.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L16e948.  v3:= v3 + 1;
  #L16e94c.  goto L16e93e;
  #L16e94e.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L16e954.  return v5 @kind object;
  #L16e956.  v4:= "Debug probes are not installed" @kind object;
  #L16e95a.  v5:= new `java.lang.IllegalStateException`;
  #L16e95e.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16e964.  v4:= temp @kind object;
  #L16e966.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16e96c.  throw v5;
  #L16e96e.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16e970.  if v3 >= v2 then goto L16e980;
  #L16e974.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L16e97a.  v3:= v3 + 1;
  #L16e97e.  goto L16e970;
  #L16e980.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L16e986.  throw v4;
  catch `java.lang.Throwable` @[L16e8a6..L16e93c] goto L16e96e;
  catch `java.lang.Throwable` @[L16e956..L16e96e] goto L16e96e;
}
procedure `java.util.List` `dumpDebuggerInfo`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v9 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.dumpDebuggerInfo:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L16e9ac.  call temp:= `access$getCoroutineStateLock$p`() @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.access$getCoroutineStateLock$p:()Ljava/util/concurrent/locks/ReentrantReadWriteLock;` @kind static;
  #L16e9b2.  v0:= temp @kind object;
  #L16e9b4.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L16e9ba.  v1:= temp @kind object;
  #L16e9bc.  call temp:= `getWriteHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWriteHoldCount:()I` @kind virtual;
  #L16e9c2.  v2:= temp;
  #L16e9c4.  v3:= 0I;
  #L16e9c6.  if v2 != 0 then goto L16e9d4;
  #L16e9ca.  call temp:= `getReadHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getReadHoldCount:()I` @kind virtual;
  #L16e9d0.  v2:= temp;
  #L16e9d2.  goto L16e9d6;
  #L16e9d4.  v2:= 0I;
  #L16e9d6.  v4:= 0I;
  #L16e9d8.  if v4 >= v2 then goto L16e9e8;
  #L16e9dc.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L16e9e2.  v4:= v4 + 1;
  #L16e9e6.  goto L16e9d8;
  #L16e9e8.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;` @kind virtual;
  #L16e9ee.  v0:= temp @kind object;
  #L16e9f0.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.lock:()V` @kind virtual;
  #L16e9f6.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16e9fa.  call temp:= `isInstalled$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L16ea00.  v4:= temp;
  #L16ea02.  if v4 == 0 then goto L16eaa6;
  #L16ea06.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16ea0a.  call temp:= `access$getCapturedCoroutines`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.access$getCapturedCoroutines:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl;)Ljava/util/Set;` @kind static;
  #L16ea10.  v4:= temp @kind object;
  #L16ea12.  v5:= new `kotlinx.coroutines.debug.internal.DebugProbesImpl$dumpCoroutinesInfoImpl$lambda-14$$inlined$sortedBy$1`;
  #L16ea16.  call `<init>`(v5) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$dumpCoroutinesInfoImpl$lambda-14$$inlined$sortedBy$1;.<init>:()V` @kind direct;
  #L16ea1c.  call temp:= `sortedWith`(v4, v5) @signature `Lkotlin/collections/CollectionsKt;.sortedWith:(Ljava/lang/Iterable;Ljava/util/Comparator;)Ljava/util/List;` @kind static;
  #L16ea22.  v4:= temp @kind object;
  #L16ea24.  v5:= new `java.util.ArrayList`;
  #L16ea28.  call `<init>`(v5) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L16ea2e.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16ea34.  v4:= temp @kind object;
  #L16ea36.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16ea3c.  v6:= temp;
  #L16ea3e.  if v6 == 0 then goto L16ea8e;
  #L16ea42.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16ea48.  v6:= temp @kind object;
  #L16ea4a.  v6:= (`kotlinx.coroutines.debug.internal.DebugProbesImpl$a`) v6 @kind object;
  #L16ea4e.  v7:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16ea52.  call temp:= `access$isFinished`(v7, v6) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.access$isFinished:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl;Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)Z` @kind static;
  #L16ea58.  v7:= temp;
  #L16ea5a.  v8:= 0I;
  #L16ea5c.  if v7 == 0 then goto L16ea62;
  #L16ea60.  goto L16ea82;
  #L16ea62.  v7:= v6.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L16ea66.  call temp:= `getContext`(v7) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind virtual;
  #L16ea6c.  v7:= temp @kind object;
  #L16ea6e.  if v7 != 0 then goto L16ea74;
  #L16ea72.  goto L16ea82;
  #L16ea74.  v8:= new `kotlinx.coroutines.debug.internal.DebuggerInfo`;
  #L16ea78.  v6:= v6.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L16ea7c.  call `<init>`(v8, v6, v7) @signature `Lkotlinx/coroutines/debug/internal/DebuggerInfo;.<init>:(Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;Lkotlin/coroutines/CoroutineContext;)V` @kind direct;
  #L16ea82.  if v8 == 0 then goto L16ea36;
  #L16ea86.  call temp:= `add`(v5, v8) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16ea8c.  goto L16ea36;
  #L16ea8e.  if v3 >= v2 then goto L16ea9e;
  #L16ea92.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L16ea98.  v3:= v3 + 1;
  #L16ea9c.  goto L16ea8e;
  #L16ea9e.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L16eaa4.  return v5 @kind object;
  #L16eaa6.  v4:= "Debug probes are not installed" @kind object;
  #L16eaaa.  v5:= new `java.lang.IllegalStateException`;
  #L16eaae.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16eab4.  v4:= temp @kind object;
  #L16eab6.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16eabc.  throw v5;
  #L16eabe.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16eac0.  if v3 >= v2 then goto L16ead0;
  #L16eac4.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L16eaca.  v3:= v3 + 1;
  #L16eace.  goto L16eac0;
  #L16ead0.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L16ead6.  throw v4;
  catch `java.lang.Throwable` @[L16e9f6..L16ea8c] goto L16eabe;
  catch `java.lang.Throwable` @[L16eaa6..L16eabe] goto L16eabe;
}
procedure `java.util.List` `enhanceStackTraceWithThreadDump`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this, `kotlinx.coroutines.debug.internal.DebugCoroutineInfo` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.enhanceStackTraceWithThreadDump:(Lkotlinx/coroutines/debug/internal/DebugCoroutineInfo;Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16eafc.  call temp:= `getState`(v2) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfo;.getState:()Ljava/lang/String;` @kind virtual;
  #L16eb02.  v0:= temp @kind object;
  #L16eb04.  call temp:= `getLastObservedThread`(v2) @signature `Lkotlinx/coroutines/debug/internal/DebugCoroutineInfo;.getLastObservedThread:()Ljava/lang/Thread;` @kind virtual;
  #L16eb0a.  v2:= temp @kind object;
  #L16eb0c.  call temp:= `d`(v1, v0, v2, v3) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.d:(Ljava/lang/String;Ljava/lang/Thread;Ljava/util/List;)Ljava/util/List;` @kind direct;
  #L16eb12.  v2:= temp @kind object;
  #L16eb14.  return v2 @kind object;
}
procedure `boolean` `getEnableCreationStackTraces`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.getEnableCreationStackTraces:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16e4e0.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.h` @type ^`boolean` @kind boolean;
  #L16e4e4.  return v0;
}
procedure `boolean` `getSanitizeStackTraces`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.getSanitizeStackTraces:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16e4f8.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.g` @type ^`boolean` @kind boolean;
  #L16e4fc.  return v0;
}
procedure `java.lang.String` `hierarchyToString`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v9 @kind this, `kotlinx.coroutines.Job` v10 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.hierarchyToString:(Lkotlinx/coroutines/Job;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L16e698.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` @kind object;
  #L16e69c.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L16e6a2.  v1:= temp @kind object;
  #L16e6a4.  call temp:= `getWriteHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWriteHoldCount:()I` @kind virtual;
  #L16e6aa.  v2:= temp;
  #L16e6ac.  v3:= 0I;
  #L16e6ae.  if v2 != 0 then goto L16e6bc;
  #L16e6b2.  call temp:= `getReadHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getReadHoldCount:()I` @kind virtual;
  #L16e6b8.  v2:= temp;
  #L16e6ba.  goto L16e6be;
  #L16e6bc.  v2:= 0I;
  #L16e6be.  v4:= 0I;
  #L16e6c0.  if v4 >= v2 then goto L16e6d0;
  #L16e6c4.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L16e6ca.  v4:= v4 + 1;
  #L16e6ce.  goto L16e6c0;
  #L16e6d0.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;` @kind virtual;
  #L16e6d6.  v0:= temp @kind object;
  #L16e6d8.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.lock:()V` @kind virtual;
  #L16e6de.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16e6e2.  call temp:= `isInstalled$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L16e6e8.  v4:= temp;
  #L16e6ea.  if v4 == 0 then goto L16e806;
  #L16e6ee.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16e6f2.  call temp:= `g`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.g:()Ljava/util/Set;` @kind direct;
  #L16e6f8.  v4:= temp @kind object;
  #L16e6fa.  v5:= new `java.util.ArrayList`;
  #L16e6fe.  call `<init>`(v5) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L16e704.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16e70a.  v4:= temp @kind object;
  #L16e70c.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16e712.  v6:= temp;
  #L16e714.  if v6 == 0 then goto L16e754;
  #L16e718.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16e71e.  v6:= temp @kind object;
  #L16e720.  v7:= v6 @kind object;
  #L16e722.  v7:= (`kotlinx.coroutines.debug.internal.DebugProbesImpl$a`) v7 @kind object;
  #L16e726.  v7:= v7.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L16e72a.  call temp:= `getContext`(v7) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L16e730.  v7:= temp @kind object;
  #L16e732.  v8:= `@@kotlinx.coroutines.Job.Key` @type ^`kotlinx.coroutines.Job$Key` @kind object;
  #L16e736.  call temp:= `get`(v7, v8) @signature `Lkotlin/coroutines/CoroutineContext;.get:(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;` @kind interface;
  #L16e73c.  v7:= temp @kind object;
  #L16e73e.  if v7 == 0 then goto L16e746;
  #L16e742.  v7:= 1I;
  #L16e744.  goto L16e748;
  #L16e746.  v7:= 0I;
  #L16e748.  if v7 == 0 then goto L16e70c;
  #L16e74c.  call temp:= `add`(v5, v6) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L16e752.  goto L16e70c;
  #L16e754.  v4:= 10I;
  #L16e758.  call temp:= `collectionSizeOrDefault`(v5, v4) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L16e75e.  v4:= temp;
  #L16e760.  call temp:= `mapCapacity`(v4) @signature `Lkotlin/collections/MapsKt;.mapCapacity:(I)I` @kind static;
  #L16e766.  v4:= temp;
  #L16e768.  v6:= 16I;
  #L16e76c.  call temp:= `coerceAtLeast`(v4, v6) @signature `Lkotlin/ranges/RangesKt;.coerceAtLeast:(II)I` @kind static;
  #L16e772.  v4:= temp;
  #L16e774.  v6:= new `java.util.LinkedHashMap`;
  #L16e778.  call `<init>`(v6, v4) @signature `Ljava/util/LinkedHashMap;.<init>:(I)V` @kind direct;
  #L16e77e.  call temp:= `iterator`(v5) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L16e784.  v4:= temp @kind object;
  #L16e786.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L16e78c.  v5:= temp;
  #L16e78e.  if v5 == 0 then goto L16e7c4;
  #L16e792.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L16e798.  v5:= temp @kind object;
  #L16e79a.  v7:= v5 @kind object;
  #L16e79c.  v7:= (`kotlinx.coroutines.debug.internal.DebugProbesImpl$a`) v7 @kind object;
  #L16e7a0.  v7:= v7.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L16e7a4.  call temp:= `getContext`(v7) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L16e7aa.  v7:= temp @kind object;
  #L16e7ac.  call temp:= `getJob`(v7) @signature `Lkotlinx/coroutines/JobKt;.getJob:(Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/Job;` @kind static;
  #L16e7b2.  v7:= temp @kind object;
  #L16e7b4.  v5:= (`kotlinx.coroutines.debug.internal.DebugProbesImpl$a`) v5 @kind object;
  #L16e7b8.  v5:= v5.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` @kind object;
  #L16e7bc.  call temp:= `put`(v6, v7, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L16e7c2.  goto L16e786;
  #L16e7c4.  v4:= new `java.lang.StringBuilder`;
  #L16e7c8.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16e7ce.  v5:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16e7d2.  v7:= "" @kind object;
  #L16e7d6.  call `a`(v5, v10, v6, v4, v7) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.a:(Lkotlinx/coroutines/Job;Ljava/util/Map;Ljava/lang/StringBuilder;Ljava/lang/String;)V` @kind direct;
  #L16e7dc.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L16e7e2.  v10:= temp @kind object;
  #L16e7e4.  v4:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L16e7e8.  call `checkNotNullExpressionValue`(v10, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L16e7ee.  if v3 >= v2 then goto L16e7fe;
  #L16e7f2.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L16e7f8.  v3:= v3 + 1;
  #L16e7fc.  goto L16e7ee;
  #L16e7fe.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L16e804.  return v10 @kind object;
  #L16e806.  v10:= "Debug probes are not installed" @kind object;
  #L16e80a.  v4:= new `java.lang.IllegalStateException`;
  #L16e80e.  call temp:= `toString`(v10) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16e814.  v10:= temp @kind object;
  #L16e816.  call `<init>`(v4, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16e81c.  throw v4;
  #L16e81e.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16e820.  if v3 >= v2 then goto L16e830;
  #L16e824.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L16e82a.  v3:= v3 + 1;
  #L16e82e.  goto L16e820;
  #L16e830.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L16e836.  throw v10;
  catch `java.lang.Throwable` @[L16e6de..L16e7ee] goto L16e81e;
  catch `java.lang.Throwable` @[L16e806..L16e81e] goto L16e81e;
}
procedure `void` `install`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v6 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.install:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16f55c.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` @kind object;
  #L16f560.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L16f566.  v1:= temp @kind object;
  #L16f568.  call temp:= `getWriteHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWriteHoldCount:()I` @kind virtual;
  #L16f56e.  v2:= temp;
  #L16f570.  v3:= 0I;
  #L16f572.  if v2 != 0 then goto L16f580;
  #L16f576.  call temp:= `getReadHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getReadHoldCount:()I` @kind virtual;
  #L16f57c.  v2:= temp;
  #L16f57e.  goto L16f582;
  #L16f580.  v2:= 0I;
  #L16f582.  v4:= 0I;
  #L16f584.  if v4 >= v2 then goto L16f594;
  #L16f588.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L16f58e.  v4:= v4 + 1;
  #L16f592.  goto L16f584;
  #L16f594.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;` @kind virtual;
  #L16f59a.  v0:= temp @kind object;
  #L16f59c.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.lock:()V` @kind virtual;
  #L16f5a2.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.installations` @type ^`int`;
  #L16f5a6.  v5:= 1I;
  #L16f5a8.  v4:= v4 + v5 @kind int;
  #L16f5aa.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.installations` @type ^`int` := v4;
  #L16f5ae.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.installations` @type ^`int`;
  #L16f5b2.  if v4 <= v5 then goto L16f5ce;
  #L16f5b6.  if v3 >= v2 then goto L16f5c6;
  #L16f5ba.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L16f5c0.  v3:= v3 + 1;
  #L16f5c4.  goto L16f5b6;
  #L16f5c6.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L16f5cc.  return @kind void;
  #L16f5ce.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16f5d2.  call `r`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.r:()V` @kind direct;
  #L16f5d8.  v4:= `@@kotlinx.coroutines.debug.AgentPremain.INSTANCE` @type ^`kotlinx.coroutines.debug.AgentPremain` @kind object;
  #L16f5dc.  call temp:= `isInstalledStatically`(v4) @signature `Lkotlinx/coroutines/debug/AgentPremain;.isInstalledStatically:()Z` @kind virtual;
  #L16f5e2.  v4:= temp;
  #L16f5e4.  if v4 == 0 then goto L16f600;
  #L16f5e8.  if v3 >= v2 then goto L16f5f8;
  #L16f5ec.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L16f5f2.  v3:= v3 + 1;
  #L16f5f6.  goto L16f5e8;
  #L16f5f8.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L16f5fe.  return @kind void;
  #L16f600.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.i` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L16f604.  if v4 != 0 then goto L16f60a;
  #L16f608.  goto L16f614;
  #L16f60a.  v5:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L16f60e.  call temp:= `invoke`(v4, v5) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L16f614.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L16f618.  if v3 >= v2 then goto L16f628;
  #L16f61c.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L16f622.  v3:= v3 + 1;
  #L16f626.  goto L16f618;
  #L16f628.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L16f62e.  return @kind void;
  #L16f630.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16f632.  if v3 >= v2 then goto L16f642;
  #L16f636.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L16f63c.  v3:= v3 + 1;
  #L16f640.  goto L16f632;
  #L16f642.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L16f648.  throw v4;
  catch `java.lang.Throwable` @[L16f5a2..L16f5b2] goto L16f630;
  catch `java.lang.Throwable` @[L16f5ce..L16f5e4] goto L16f630;
  catch `java.lang.Throwable` @[L16f600..L16f618] goto L16f630;
}
procedure `boolean` `isInstalled$kotlinx_coroutines_core`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16e568.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.installations` @type ^`int`;
  #L16e56c.  if v0 <= 0 then goto L16e574;
  #L16e570.  v0:= 1I;
  #L16e572.  goto L16e576;
  #L16e574.  v0:= 0I;
  #L16e576.  return v0;
}
procedure `kotlin.coroutines.Continuation` `probeCoroutineCreated$kotlinx_coroutines_core`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.probeCoroutineCreated$kotlinx_coroutines_core:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16ef18.  call temp:= `isInstalled$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L16ef1e.  v0:= temp;
  #L16ef20.  if v0 != 0 then goto L16ef26;
  #L16ef24.  return v2 @kind object;
  #L16ef26.  call temp:= `l`(v1, v2) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.l:(Lkotlin/coroutines/Continuation;)Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;` @kind direct;
  #L16ef2c.  v0:= temp @kind object;
  #L16ef2e.  if v0 == 0 then goto L16ef34;
  #L16ef32.  return v2 @kind object;
  #L16ef34.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.h` @type ^`boolean` @kind boolean;
  #L16ef38.  if v0 == 0 then goto L16ef58;
  #L16ef3c.  v0:= new `java.lang.Exception`;
  #L16ef40.  call `<init>`(v0) @signature `Ljava/lang/Exception;.<init>:()V` @kind direct;
  #L16ef46.  call temp:= `q`(v1, v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.q:(Ljava/lang/Throwable;)Ljava/util/List;` @kind direct;
  #L16ef4c.  v0:= temp @kind object;
  #L16ef4e.  call temp:= `t`(v1, v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.t:(Ljava/util/List;)Lkotlinx/coroutines/debug/internal/StackTraceFrame;` @kind direct;
  #L16ef54.  v0:= temp @kind object;
  #L16ef56.  goto L16ef5a;
  #L16ef58.  v0:= 0I;
  #L16ef5a.  call temp:= `b`(v1, v2, v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.b:(Lkotlin/coroutines/Continuation;Lkotlinx/coroutines/debug/internal/StackTraceFrame;)Lkotlin/coroutines/Continuation;` @kind direct;
  #L16ef60.  v2:= temp @kind object;
  #L16ef62.  return v2 @kind object;
}
procedure `void` `probeCoroutineResumed$kotlinx_coroutines_core`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.probeCoroutineResumed$kotlinx_coroutines_core:(Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16f708.  v0:= "RUNNING" @kind object;
  #L16f70c.  call `v`(v1, v2, v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.v:(Lkotlin/coroutines/Continuation;Ljava/lang/String;)V` @kind direct;
  #L16f712.  return @kind void;
}
procedure `void` `probeCoroutineSuspended$kotlinx_coroutines_core`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v1 @kind this, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.probeCoroutineSuspended$kotlinx_coroutines_core:(Lkotlin/coroutines/Continuation;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L16f724.  v0:= "SUSPENDED" @kind object;
  #L16f728.  call `v`(v1, v2, v0) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.v:(Lkotlin/coroutines/Continuation;Ljava/lang/String;)V` @kind direct;
  #L16f72e.  return @kind void;
}
procedure `void` `setEnableCreationStackTraces`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.setEnableCreationStackTraces:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L16f740.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.h` @type ^`boolean` := v1 @kind boolean;
  #L16f744.  return @kind void;
}
procedure `void` `setSanitizeStackTraces`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.setSanitizeStackTraces:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L16f758.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.g` @type ^`boolean` := v1 @kind boolean;
  #L16f75c.  return @kind void;
}
procedure `void` `uninstall`(`kotlinx.coroutines.debug.internal.DebugProbesImpl` v6 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.uninstall:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L16f7cc.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.f` @type ^`java.util.concurrent.locks.ReentrantReadWriteLock` @kind object;
  #L16f7d0.  call temp:= `readLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;` @kind virtual;
  #L16f7d6.  v1:= temp @kind object;
  #L16f7d8.  call temp:= `getWriteHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWriteHoldCount:()I` @kind virtual;
  #L16f7de.  v2:= temp;
  #L16f7e0.  v3:= 0I;
  #L16f7e2.  if v2 != 0 then goto L16f7f0;
  #L16f7e6.  call temp:= `getReadHoldCount`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getReadHoldCount:()I` @kind virtual;
  #L16f7ec.  v2:= temp;
  #L16f7ee.  goto L16f7f2;
  #L16f7f0.  v2:= 0I;
  #L16f7f2.  v4:= 0I;
  #L16f7f4.  if v4 >= v2 then goto L16f804;
  #L16f7f8.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock:()V` @kind virtual;
  #L16f7fe.  v4:= v4 + 1;
  #L16f802.  goto L16f7f4;
  #L16f804.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;` @kind virtual;
  #L16f80a.  v0:= temp @kind object;
  #L16f80c.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.lock:()V` @kind virtual;
  #L16f812.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16f816.  call temp:= `isInstalled$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.isInstalled$kotlinx_coroutines_core:()Z` @kind virtual;
  #L16f81c.  v4:= temp;
  #L16f81e.  if v4 == 0 then goto L16f8c4;
  #L16f822.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.installations` @type ^`int`;
  #L16f826.  v4:= v4 + -1;
  #L16f82a.  `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.installations` @type ^`int` := v4;
  #L16f82e.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.installations` @type ^`int`;
  #L16f832.  if v4 == 0 then goto L16f84e;
  #L16f836.  if v3 >= v2 then goto L16f846;
  #L16f83a.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L16f840.  v3:= v3 + 1;
  #L16f844.  goto L16f836;
  #L16f846.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L16f84c.  return @kind void;
  #L16f84e.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16f852.  call `s`(v4) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.s:()V` @kind direct;
  #L16f858.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.c` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L16f85c.  call `clear`(v4) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.clear:()V` @kind virtual;
  #L16f862.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.j` @type ^`kotlinx.coroutines.debug.internal.ConcurrentWeakMap` @kind object;
  #L16f866.  call `clear`(v4) @signature `Lkotlinx/coroutines/debug/internal/ConcurrentWeakMap;.clear:()V` @kind virtual;
  #L16f86c.  v4:= `@@kotlinx.coroutines.debug.AgentPremain.INSTANCE` @type ^`kotlinx.coroutines.debug.AgentPremain` @kind object;
  #L16f870.  call temp:= `isInstalledStatically`(v4) @signature `Lkotlinx/coroutines/debug/AgentPremain;.isInstalledStatically:()Z` @kind virtual;
  #L16f876.  v4:= temp;
  #L16f878.  if v4 == 0 then goto L16f894;
  #L16f87c.  if v3 >= v2 then goto L16f88c;
  #L16f880.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L16f886.  v3:= v3 + 1;
  #L16f88a.  goto L16f87c;
  #L16f88c.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L16f892.  return @kind void;
  #L16f894.  v4:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.i` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L16f898.  if v4 != 0 then goto L16f89e;
  #L16f89c.  goto L16f8a8;
  #L16f89e.  v5:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L16f8a2.  call temp:= `invoke`(v4, v5) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L16f8a8.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L16f8ac.  if v3 >= v2 then goto L16f8bc;
  #L16f8b0.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L16f8b6.  v3:= v3 + 1;
  #L16f8ba.  goto L16f8ac;
  #L16f8bc.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L16f8c2.  return @kind void;
  #L16f8c4.  v4:= "Agent was not installed" @kind object;
  #L16f8c8.  v5:= new `java.lang.IllegalStateException`;
  #L16f8cc.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16f8d2.  v4:= temp @kind object;
  #L16f8d4.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L16f8da.  throw v5;
  #L16f8dc.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L16f8de.  if v3 >= v2 then goto L16f8ee;
  #L16f8e2.  call `lock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock:()V` @kind virtual;
  #L16f8e8.  v3:= v3 + 1;
  #L16f8ec.  goto L16f8de;
  #L16f8ee.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock:()V` @kind virtual;
  #L16f8f4.  throw v4;
  catch `java.lang.Throwable` @[L16f812..L16f832] goto L16f8dc;
  catch `java.lang.Throwable` @[L16f84e..L16f878] goto L16f8dc;
  catch `java.lang.Throwable` @[L16f894..L16f8ac] goto L16f8dc;
  catch `java.lang.Throwable` @[L16f8c4..L16f8dc] goto L16f8dc;
}
