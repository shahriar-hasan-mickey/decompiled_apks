record `kotlinx.coroutines.debug.internal.DebugProbesImpl$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.Continuation` @kind interface, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind interface {
  `kotlin.coroutines.Continuation` `kotlinx.coroutines.debug.internal.DebugProbesImpl$a.a` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` `kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @AccessFlag PUBLIC_FINAL;
  `kotlin.coroutines.jvm.internal.CoroutineStackFrame` `kotlinx.coroutines.debug.internal.DebugProbesImpl$a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v0 @kind this, `kotlin.coroutines.Continuation` v1 @kind object, `kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` v2 @kind object, `kotlin.coroutines.jvm.internal.CoroutineStackFrame` v3 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;.<init>:(Lkotlin/coroutines/Continuation;Lkotlinx/coroutines/debug/internal/DebugCoroutineInfoImpl;Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L16e2a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16e2aa.  v0.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.a` @type ^`kotlin.coroutines.Continuation` := v1 @kind object;
  #L16e2ae.  v0.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.b` @type ^`kotlinx.coroutines.debug.internal.DebugCoroutineInfoImpl` := v2 @kind object;
  #L16e2b2.  v0.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.c` @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` := v3 @kind object;
  #L16e2b6.  return @kind void;
}
procedure `kotlin.coroutines.jvm.internal.CoroutineStackFrame` `getCallerFrame`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e27c.  v0:= v1.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.c` @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind object;
  #L16e280.  if v0 != 0 then goto L16e288;
  #L16e284.  v0:= 0I;
  #L16e286.  goto L16e290;
  #L16e288.  call temp:= `getCallerFrame`(v0) @signature `Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;` @kind interface;
  #L16e28e.  v0:= temp @kind object;
  #L16e290.  return v0 @kind object;
}
procedure `kotlin.coroutines.CoroutineContext` `getContext`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;.getContext:()Lkotlin/coroutines/CoroutineContext;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e25c.  v0:= v1.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L16e260.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/Continuation;.getContext:()Lkotlin/coroutines/CoroutineContext;` @kind interface;
  #L16e266.  v0:= temp @kind object;
  #L16e268.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e214.  v0:= v1.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.c` @type ^`kotlin.coroutines.jvm.internal.CoroutineStackFrame` @kind object;
  #L16e218.  if v0 != 0 then goto L16e220;
  #L16e21c.  v0:= 0I;
  #L16e21e.  goto L16e228;
  #L16e220.  call temp:= `getStackTraceElement`(v0) @signature `Lkotlin/coroutines/jvm/internal/CoroutineStackFrame;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @kind interface;
  #L16e226.  v0:= temp @kind object;
  #L16e228.  return v0 @kind object;
}
procedure `void` `resumeWith`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e2c8.  v0:= `@@kotlinx.coroutines.debug.internal.DebugProbesImpl.INSTANCE` @type ^`kotlinx.coroutines.debug.internal.DebugProbesImpl` @kind object;
  #L16e2cc.  call `access$probeCoroutineCompleted`(v0, v1) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl;.access$probeCoroutineCompleted:(Lkotlinx/coroutines/debug/internal/DebugProbesImpl;Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;)V` @kind static;
  #L16e2d2.  v0:= v1.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L16e2d6.  call `resumeWith`(v0, v2) @signature `Lkotlin/coroutines/Continuation;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L16e2dc.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.debug.internal.DebugProbesImpl$a` v1 @kind this) @signature `Lkotlinx/coroutines/debug/internal/DebugProbesImpl$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L16e23c.  v0:= v1.`kotlinx.coroutines.debug.internal.DebugProbesImpl$a.a` @type ^`kotlin.coroutines.Continuation` @kind object;
  #L16e240.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L16e246.  v0:= temp @kind object;
  #L16e248.  return v0 @kind object;
}
