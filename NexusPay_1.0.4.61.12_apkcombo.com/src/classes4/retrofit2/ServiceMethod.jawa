record `retrofit2.ServiceMethod` @kind class @AccessFlag ABSTRACT {
}
procedure `void` `<init>`(`retrofit2.ServiceMethod` v0 @kind this) @signature `Lretrofit2/ServiceMethod;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4985ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4985f2.  return @kind void;
}
procedure `retrofit2.ServiceMethod` `parseAnnotations`(`retrofit2.Retrofit` v4 @kind object, `java.lang.reflect.Method` v5 @kind object) @signature `Lretrofit2/ServiceMethod;.parseAnnotations:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)Lretrofit2/ServiceMethod;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L498580.  call temp:= `parseAnnotations`(v4, v5) @signature `Lretrofit2/RequestFactory;.parseAnnotations:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)Lretrofit2/RequestFactory;` @kind static;
  #L498586.  v0:= temp @kind object;
  #L498588.  call temp:= `getGenericReturnType`(v5) @signature `Ljava/lang/reflect/Method;.getGenericReturnType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L49858e.  v1:= temp @kind object;
  #L498590.  call temp:= `hasUnresolvableType`(v1) @signature `Lretrofit2/Utils;.hasUnresolvableType:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L498596.  v2:= temp;
  #L498598.  v3:= 0I;
  #L49859a.  if v2 != 0 then goto L4985c2;
  #L49859e.  v2:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L4985a2.  if v1 == v2 then goto L4985b0;
  #L4985a6.  call temp:= `parseAnnotations`(v4, v5, v0) @signature `Lretrofit2/HttpServiceMethod;.parseAnnotations:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;Lretrofit2/RequestFactory;)Lretrofit2/HttpServiceMethod;` @kind static;
  #L4985ac.  v4:= temp @kind object;
  #L4985ae.  return v4 @kind object;
  #L4985b0.  v4:= new `java.lang.Object`[v3];
  #L4985b4.  v0:= "Service methods cannot return void." @kind object;
  #L4985b8.  call temp:= `methodError`(v5, v0, v4) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4985be.  v4:= temp @kind object;
  #L4985c0.  throw v4;
  #L4985c2.  v4:= 1I;
  #L4985c4.  v4:= new `java.lang.Object`[v4];
  #L4985c8.  v4[v3]:= v1 @kind object;
  #L4985cc.  v0:= "Method return type must not include a type variable or wildcard: %s" @kind object;
  #L4985d0.  call temp:= `methodError`(v5, v0, v4) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4985d6.  v4:= temp @kind object;
  #L4985d8.  throw v4;
}
procedure `java.lang.Object` `invoke`(`java.lang.Object`[] v0 @kind object) @signature `Lretrofit2/ServiceMethod;.invoke:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag ABSTRACT {

  # return;
}
