record `retrofit2.converter.scalars.ScalarRequestBodyConverter` @kind class @AccessFlag FINAL extends `retrofit2.Converter` @kind interface {
}
global `retrofit2.converter.scalars.ScalarRequestBodyConverter` `@@retrofit2.converter.scalars.ScalarRequestBodyConverter.INSTANCE` @AccessFlag STATIC_FINAL;
global `okhttp3.MediaType` `@@retrofit2.converter.scalars.ScalarRequestBodyConverter.MEDIA_TYPE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/converter/scalars/ScalarRequestBodyConverter;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L49a2d8.  v0:= new `retrofit2.converter.scalars.ScalarRequestBodyConverter`;
  #L49a2dc.  call `<init>`(v0) @signature `Lretrofit2/converter/scalars/ScalarRequestBodyConverter;.<init>:()V` @kind direct;
  #L49a2e2.  `@@retrofit2.converter.scalars.ScalarRequestBodyConverter.INSTANCE` @type ^`retrofit2.converter.scalars.ScalarRequestBodyConverter` := v0 @kind object;
  #L49a2e6.  v0:= "text/plain; charset=UTF-8" @kind object;
  #L49a2ea.  call temp:= `get`(v0) @signature `Lokhttp3/MediaType;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L49a2f0.  v0:= temp @kind object;
  #L49a2f2.  `@@retrofit2.converter.scalars.ScalarRequestBodyConverter.MEDIA_TYPE` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L49a2f6.  return @kind void;
}
procedure `void` `<init>`(`retrofit2.converter.scalars.ScalarRequestBodyConverter` v0 @kind this) @signature `Lretrofit2/converter/scalars/ScalarRequestBodyConverter;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L49a308.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49a30e.  return @kind void;
}
procedure `java.lang.Object` `convert`(`retrofit2.converter.scalars.ScalarRequestBodyConverter` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lretrofit2/converter/scalars/ScalarRequestBodyConverter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L49a294.  call temp:= `convert`(v0, v1) @signature `Lretrofit2/converter/scalars/ScalarRequestBodyConverter;.convert:(Ljava/lang/Object;)Lokhttp3/RequestBody;` @kind virtual;
  #L49a29a.  v1:= temp @kind object;
  #L49a29c.  return v1 @kind object;
}
procedure `okhttp3.RequestBody` `convert`(`retrofit2.converter.scalars.ScalarRequestBodyConverter` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lretrofit2/converter/scalars/ScalarRequestBodyConverter;.convert:(Ljava/lang/Object;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49a2b0.  v0:= `@@retrofit2.converter.scalars.ScalarRequestBodyConverter.MEDIA_TYPE` @type ^`okhttp3.MediaType` @kind object;
  #L49a2b4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L49a2ba.  v2:= temp @kind object;
  #L49a2bc.  call temp:= `create`(v0, v2) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/RequestBody;` @kind static;
  #L49a2c2.  v2:= temp @kind object;
  #L49a2c4.  return v2 @kind object;
}
