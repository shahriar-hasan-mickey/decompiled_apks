record `retrofit2.converter.simplexml.SimpleXmlRequestBodyConverter` @kind class @AccessFlag FINAL extends `retrofit2.Converter` @kind interface {
  `org.simpleframework.xml.Serializer` `retrofit2.converter.simplexml.SimpleXmlRequestBodyConverter.serializer` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@retrofit2.converter.simplexml.SimpleXmlRequestBodyConverter.CHARSET` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.MediaType` `@@retrofit2.converter.simplexml.SimpleXmlRequestBodyConverter.MEDIA_TYPE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/converter/simplexml/SimpleXmlRequestBodyConverter;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L49ab64.  v0:= "application/xml; charset=UTF-8" @kind object;
  #L49ab68.  call temp:= `get`(v0) @signature `Lokhttp3/MediaType;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L49ab6e.  v0:= temp @kind object;
  #L49ab70.  `@@retrofit2.converter.simplexml.SimpleXmlRequestBodyConverter.MEDIA_TYPE` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L49ab74.  return @kind void;
}
procedure `void` `<init>`(`retrofit2.converter.simplexml.SimpleXmlRequestBodyConverter` v0 @kind this, `org.simpleframework.xml.Serializer` v1 @kind object) @signature `Lretrofit2/converter/simplexml/SimpleXmlRequestBodyConverter;.<init>:(Lorg/simpleframework/xml/Serializer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49ab88.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49ab8e.  v0.`retrofit2.converter.simplexml.SimpleXmlRequestBodyConverter.serializer` @type ^`org.simpleframework.xml.Serializer` := v1 @kind object;
  #L49ab92.  return @kind void;
}
procedure `java.lang.Object` `convert`(`retrofit2.converter.simplexml.SimpleXmlRequestBodyConverter` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lretrofit2/converter/simplexml/SimpleXmlRequestBodyConverter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L49aac8.  call temp:= `convert`(v0, v1) @signature `Lretrofit2/converter/simplexml/SimpleXmlRequestBodyConverter;.convert:(Ljava/lang/Object;)Lokhttp3/RequestBody;` @kind virtual;
  #L49aace.  v1:= temp @kind object;
  #L49aad0.  return v1 @kind object;
}
procedure `okhttp3.RequestBody` `convert`(`retrofit2.converter.simplexml.SimpleXmlRequestBodyConverter` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lretrofit2/converter/simplexml/SimpleXmlRequestBodyConverter;.convert:(Ljava/lang/Object;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L49aae4.  v0:= new `okio.Buffer`;
  #L49aae8.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L49aaee.  v1:= new `java.io.OutputStreamWriter`;
  #L49aaf2.  call temp:= `outputStream`(v0) @signature `Lokio/Buffer;.outputStream:()Ljava/io/OutputStream;` @kind virtual;
  #L49aaf8.  v2:= temp @kind object;
  #L49aafa.  v3:= "UTF-8" @kind object;
  #L49aafe.  call `<init>`(v1, v2, v3) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/lang/String;)V` @kind direct;
  #L49ab04.  v2:= v4.`retrofit2.converter.simplexml.SimpleXmlRequestBodyConverter.serializer` @type ^`org.simpleframework.xml.Serializer` @kind object;
  #L49ab08.  call `write`(v2, v5, v1) @signature `Lorg/simpleframework/xml/Serializer;.write:(Ljava/lang/Object;Ljava/io/Writer;)V` @kind interface;
  #L49ab0e.  call `flush`(v1) @signature `Ljava/io/OutputStreamWriter;.flush:()V` @kind virtual;
  #L49ab14.  v5:= `@@retrofit2.converter.simplexml.SimpleXmlRequestBodyConverter.MEDIA_TYPE` @type ^`okhttp3.MediaType` @kind object;
  #L49ab18.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L49ab1e.  v0:= temp @kind object;
  #L49ab20.  call temp:= `create`(v5, v0) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;Lokio/ByteString;)Lokhttp3/RequestBody;` @kind static;
  #L49ab26.  v5:= temp @kind object;
  #L49ab28.  return v5 @kind object;
  #L49ab2a.  v5:= Exception @type ^`java.lang.Exception` @kind object;
  #L49ab2c.  v0:= new `java.lang.RuntimeException`;
  #L49ab30.  call `<init>`(v0, v5) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L49ab36.  throw v0;
  #L49ab38.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L49ab3a.  goto L49ab3e;
  #L49ab3c.  v5:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L49ab3e.  throw v5;
  catch `java.lang.RuntimeException` @[L49aaee..L49ab14] goto L49ab3c;
  catch `java.io.IOException` @[L49aaee..L49ab14] goto L49ab38;
  catch `java.lang.Exception` @[L49aaee..L49ab14] goto L49ab2a;
}
