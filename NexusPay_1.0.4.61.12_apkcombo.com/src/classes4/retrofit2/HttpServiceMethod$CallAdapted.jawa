record `retrofit2.HttpServiceMethod$CallAdapted` @kind class @AccessFlag FINAL extends `retrofit2.HttpServiceMethod` @kind class {
  `retrofit2.CallAdapter` `retrofit2.HttpServiceMethod$CallAdapted.callAdapter` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.HttpServiceMethod$CallAdapted` v0 @kind this, `retrofit2.RequestFactory` v1 @kind object, `okhttp3.Call$Factory` v2 @kind object, `retrofit2.Converter` v3 @kind object, `retrofit2.CallAdapter` v4 @kind object) @signature `Lretrofit2/HttpServiceMethod$CallAdapted;.<init>:(Lretrofit2/RequestFactory;Lokhttp3/Call$Factory;Lretrofit2/Converter;Lretrofit2/CallAdapter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4933dc.  call `<init>`(v0, v1, v2, v3) @signature `Lretrofit2/HttpServiceMethod;.<init>:(Lretrofit2/RequestFactory;Lokhttp3/Call$Factory;Lretrofit2/Converter;)V` @kind direct;
  #L4933e2.  v0.`retrofit2.HttpServiceMethod$CallAdapted.callAdapter` @type ^`retrofit2.CallAdapter` := v4 @kind object;
  #L4933e6.  return @kind void;
}
procedure `java.lang.Object` `adapt`(`retrofit2.HttpServiceMethod$CallAdapted` v0 @kind this, `retrofit2.Call` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lretrofit2/HttpServiceMethod$CallAdapted;.adapt:(Lretrofit2/Call;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;

  #L4933bc.  v2:= v0.`retrofit2.HttpServiceMethod$CallAdapted.callAdapter` @type ^`retrofit2.CallAdapter` @kind object;
  #L4933c0.  call temp:= `adapt`(v2, v1) @signature `Lretrofit2/CallAdapter;.adapt:(Lretrofit2/Call;)Ljava/lang/Object;` @kind interface;
  #L4933c6.  v1:= temp @kind object;
  #L4933c8.  return v1 @kind object;
}
