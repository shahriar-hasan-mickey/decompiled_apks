record `retrofit2.RequestBuilder` @kind class @AccessFlag FINAL {
  `okhttp3.HttpUrl` `retrofit2.RequestBuilder.baseUrl` @AccessFlag PRIVATE_FINAL;
  `okhttp3.RequestBody` `retrofit2.RequestBuilder.body` @AccessFlag PRIVATE;
  `okhttp3.MediaType` `retrofit2.RequestBuilder.contentType` @AccessFlag PRIVATE;
  `okhttp3.FormBody$Builder` `retrofit2.RequestBuilder.formBuilder` @AccessFlag PRIVATE;
  `boolean` `retrofit2.RequestBuilder.hasBody` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers$Builder` `retrofit2.RequestBuilder.headersBuilder` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit2.RequestBuilder.method` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MultipartBody$Builder` `retrofit2.RequestBuilder.multipartBuilder` @AccessFlag PRIVATE;
  `java.lang.String` `retrofit2.RequestBuilder.relativeUrl` @AccessFlag PRIVATE;
  `okhttp3.Request$Builder` `retrofit2.RequestBuilder.requestBuilder` @AccessFlag PRIVATE_FINAL;
  `okhttp3.HttpUrl$Builder` `retrofit2.RequestBuilder.urlBuilder` @AccessFlag PRIVATE;
}
global `char`[] `@@retrofit2.RequestBuilder.HEX_DIGITS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@retrofit2.RequestBuilder.PATH_SEGMENT_ALWAYS_ENCODE_SET` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@retrofit2.RequestBuilder.PATH_TRAVERSAL` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/RequestBuilder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L495910.  v0:= 16I;
  #L495914.  v0:= new `char`[v0];
  #L495918.  goto L495934;
  #L49591e.  `@@retrofit2.RequestBuilder.HEX_DIGITS` @type ^`char`[] := v0 @kind object;
  #L495922.  v0:= "(.*/)?(\\.|%2e|%2E){1,2}(/.*)?" @kind object;
  #L495926.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L49592c.  v0:= temp @kind object;
  #L49592e.  `@@retrofit2.RequestBuilder.PATH_TRAVERSAL` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L495932.  return @kind void;
  #L495934.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L49595b.  goto L49591e;
}
procedure `void` `<init>`(`retrofit2.RequestBuilder` v0 @kind this, `java.lang.String` v1 @kind object, `okhttp3.HttpUrl` v2 @kind object, `java.lang.String` v3 @kind object, `okhttp3.Headers` v4 @kind object, `okhttp3.MediaType` v5 @kind object, `boolean` v6 , `boolean` v7 , `boolean` v8 ) @signature `Lretrofit2/RequestBuilder;.<init>:(Ljava/lang/String;Lokhttp3/HttpUrl;Ljava/lang/String;Lokhttp3/Headers;Lokhttp3/MediaType;ZZZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L49596c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L495972.  v0.`retrofit2.RequestBuilder.method` @type ^`java.lang.String` := v1 @kind object;
  #L495976.  v0.`retrofit2.RequestBuilder.baseUrl` @type ^`okhttp3.HttpUrl` := v2 @kind object;
  #L49597a.  v0.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` := v3 @kind object;
  #L49597e.  v1:= new `okhttp3.Request$Builder`;
  #L495982.  call `<init>`(v1) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L495988.  v0.`retrofit2.RequestBuilder.requestBuilder` @type ^`okhttp3.Request$Builder` := v1 @kind object;
  #L49598c.  v0.`retrofit2.RequestBuilder.contentType` @type ^`okhttp3.MediaType` := v5 @kind object;
  #L495990.  v0.`retrofit2.RequestBuilder.hasBody` @type ^`boolean` := v6 @kind boolean;
  #L495994.  if v4 == 0 then goto L4959a6;
  #L495998.  call temp:= `newBuilder`(v4) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L49599e.  v1:= temp @kind object;
  #L4959a0.  v0.`retrofit2.RequestBuilder.headersBuilder` @type ^`okhttp3.Headers$Builder` := v1 @kind object;
  #L4959a4.  goto L4959b4;
  #L4959a6.  v1:= new `okhttp3.Headers$Builder`;
  #L4959aa.  call `<init>`(v1) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L4959b0.  v0.`retrofit2.RequestBuilder.headersBuilder` @type ^`okhttp3.Headers$Builder` := v1 @kind object;
  #L4959b4.  if v7 == 0 then goto L4959c8;
  #L4959b8.  v1:= new `okhttp3.FormBody$Builder`;
  #L4959bc.  call `<init>`(v1) @signature `Lokhttp3/FormBody$Builder;.<init>:()V` @kind direct;
  #L4959c2.  v0.`retrofit2.RequestBuilder.formBuilder` @type ^`okhttp3.FormBody$Builder` := v1 @kind object;
  #L4959c6.  goto L4959e4;
  #L4959c8.  if v8 == 0 then goto L4959e4;
  #L4959cc.  v1:= new `okhttp3.MultipartBody$Builder`;
  #L4959d0.  call `<init>`(v1) @signature `Lokhttp3/MultipartBody$Builder;.<init>:()V` @kind direct;
  #L4959d6.  v0.`retrofit2.RequestBuilder.multipartBuilder` @type ^`okhttp3.MultipartBody$Builder` := v1 @kind object;
  #L4959da.  v2:= `@@okhttp3.MultipartBody.FORM` @type ^`okhttp3.MediaType` @kind object;
  #L4959de.  call temp:= `setType`(v1, v2) @signature `Lokhttp3/MultipartBody$Builder;.setType:(Lokhttp3/MediaType;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L4959e4.  return @kind void;
}
procedure `java.lang.String` `canonicalizeForPath`(`java.lang.String` v6 @kind object, `boolean` v7 ) @signature `Lretrofit2/RequestBuilder;.canonicalizeForPath:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L495764.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L49576a.  v0:= temp;
  #L49576c.  v1:= 0I;
  #L49576e.  v2:= 0I;
  #L495770.  if v2 >= v0 then goto L4957de;
  #L495774.  call temp:= `codePointAt`(v6, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L49577a.  v3:= temp;
  #L49577c.  v4:= 32I;
  #L495780.  if v3 < v4 then goto L4957c0;
  #L495784.  v4:= 127I;
  #L495788.  if v3 >= v4 then goto L4957c0;
  #L49578c.  v4:= " \"<>^`{}|\\?#" @kind object;
  #L495790.  call temp:= `indexOf`(v4, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L495796.  v4:= temp;
  #L495798.  v5:= -1I;
  #L49579a.  if v4 != v5 then goto L4957c0;
  #L49579e.  if v7 != 0 then goto L4957b4;
  #L4957a2.  v4:= 47I;
  #L4957a6.  if v3 == v4 then goto L4957c0;
  #L4957aa.  v4:= 37I;
  #L4957ae.  if v3 != v4 then goto L4957b4;
  #L4957b2.  goto L4957c0;
  #L4957b4.  call temp:= `charCount`(v3) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L4957ba.  v3:= temp;
  #L4957bc.  v2:= v2 + v3 @kind int;
  #L4957be.  goto L495770;
  #L4957c0.  v3:= new `okio.Buffer`;
  #L4957c4.  call `<init>`(v3) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L4957ca.  call temp:= `writeUtf8`(v3, v6, v1, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L4957d0.  call `canonicalizeForPath`(v3, v6, v2, v0, v7) @signature `Lretrofit2/RequestBuilder;.canonicalizeForPath:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @kind static;
  #L4957d6.  call temp:= `readUtf8`(v3) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L4957dc.  v6:= temp @kind object;
  #L4957de.  return v6 @kind object;
}
procedure `void` `canonicalizeForPath`(`okio.Buffer` v6 @kind object, `java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `boolean` v10 ) @signature `Lretrofit2/RequestBuilder;.canonicalizeForPath:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L495c58.  v0:= 0I;
  #L495c5a.  if v8 >= v9 then goto L495d34;
  #L495c5e.  call temp:= `codePointAt`(v7, v8) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L495c64.  v1:= temp;
  #L495c66.  if v10 == 0 then goto L495c8c;
  #L495c6a.  v2:= 9I;
  #L495c6e.  if v1 == v2 then goto L495d28;
  #L495c72.  v2:= 10I;
  #L495c76.  if v1 == v2 then goto L495d28;
  #L495c7a.  v2:= 12I;
  #L495c7e.  if v1 == v2 then goto L495d28;
  #L495c82.  v2:= 13I;
  #L495c86.  if v1 != v2 then goto L495c8c;
  #L495c8a.  goto L495d28;
  #L495c8c.  v2:= 32I;
  #L495c90.  v3:= 37I;
  #L495c94.  if v1 < v2 then goto L495ccc;
  #L495c98.  v2:= 127I;
  #L495c9c.  if v1 >= v2 then goto L495ccc;
  #L495ca0.  v2:= " \"<>^`{}|\\?#" @kind object;
  #L495ca4.  call temp:= `indexOf`(v2, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L495caa.  v2:= temp;
  #L495cac.  v4:= -1I;
  #L495cae.  if v2 != v4 then goto L495ccc;
  #L495cb2.  if v10 != 0 then goto L495cc4;
  #L495cb6.  v2:= 47I;
  #L495cba.  if v1 == v2 then goto L495ccc;
  #L495cbe.  if v1 != v3 then goto L495cc4;
  #L495cc2.  goto L495ccc;
  #L495cc4.  call temp:= `writeUtf8CodePoint`(v6, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L495cca.  goto L495d28;
  #L495ccc.  if v0 != 0 then goto L495cda;
  #L495cd0.  v0:= new `okio.Buffer`;
  #L495cd4.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L495cda.  call temp:= `writeUtf8CodePoint`(v0, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L495ce0.  call temp:= `exhausted`(v0) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L495ce6.  v2:= temp;
  #L495ce8.  if v2 != 0 then goto L495d28;
  #L495cec.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L495cf2.  v2:= temp;
  #L495cf4.  v2:= v2 ^& 255;
  #L495cf8.  call temp:= `writeByte`(v6, v3) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L495cfe.  v4:= `@@retrofit2.RequestBuilder.HEX_DIGITS` @type ^`char`[] @kind object;
  #L495d02.  v5:= v2 ^> 4;
  #L495d06.  v5:= v5 ^& 15;
  #L495d0a.  v4:= v4[v5] @kind char;
  #L495d0e.  call temp:= `writeByte`(v6, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L495d14.  v4:= `@@retrofit2.RequestBuilder.HEX_DIGITS` @type ^`char`[] @kind object;
  #L495d18.  v2:= v2 ^& 15;
  #L495d1c.  v2:= v4[v2] @kind char;
  #L495d20.  call temp:= `writeByte`(v6, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L495d26.  goto L495ce0;
  #L495d28.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L495d2e.  v1:= temp;
  #L495d30.  v8:= v8 + v1 @kind int;
  #L495d32.  goto L495c5a;
  #L495d34.  return @kind void;
}
procedure `void` `addFormField`(`retrofit2.RequestBuilder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `boolean` v3 ) @signature `Lretrofit2/RequestBuilder;.addFormField:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag  {
    temp;

  #L4959f8.  if v3 == 0 then goto L495a08;
  #L4959fc.  v3:= v0.`retrofit2.RequestBuilder.formBuilder` @type ^`okhttp3.FormBody$Builder` @kind object;
  #L495a00.  call temp:= `addEncoded`(v3, v1, v2) @signature `Lokhttp3/FormBody$Builder;.addEncoded:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/FormBody$Builder;` @kind virtual;
  #L495a06.  goto L495a12;
  #L495a08.  v3:= v0.`retrofit2.RequestBuilder.formBuilder` @type ^`okhttp3.FormBody$Builder` @kind object;
  #L495a0c.  call temp:= `add`(v3, v1, v2) @signature `Lokhttp3/FormBody$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/FormBody$Builder;` @kind virtual;
  #L495a12.  return @kind void;
}
procedure `void` `addHeader`(`retrofit2.RequestBuilder` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lretrofit2/RequestBuilder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L495a24.  v0:= "Content-Type" @kind object;
  #L495a28.  call temp:= `equalsIgnoreCase`(v0, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L495a2e.  v0:= temp;
  #L495a30.  if v0 == 0 then goto L495a72;
  #L495a34.  call temp:= `get`(v5) @signature `Lokhttp3/MediaType;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L495a3a.  v4:= temp @kind object;
  #L495a3c.  v3.`retrofit2.RequestBuilder.contentType` @type ^`okhttp3.MediaType` := v4 @kind object;
  #L495a40.  goto L495a7c;
  #L495a42.  v4:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L495a44.  v0:= new `java.lang.IllegalArgumentException`;
  #L495a48.  v1:= new `java.lang.StringBuilder`;
  #L495a4c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L495a52.  v2:= "Malformed content type: " @kind object;
  #L495a56.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L495a5c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L495a62.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L495a68.  v5:= temp @kind object;
  #L495a6a.  call `<init>`(v0, v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L495a70.  throw v0;
  #L495a72.  v0:= v3.`retrofit2.RequestBuilder.headersBuilder` @type ^`okhttp3.Headers$Builder` @kind object;
  #L495a76.  call temp:= `add`(v0, v4, v5) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L495a7c.  return @kind void;
  catch `java.lang.IllegalArgumentException` @[L495a34..L495a40] goto L495a42;
}
procedure `void` `addHeaders`(`retrofit2.RequestBuilder` v1 @kind this, `okhttp3.Headers` v2 @kind object) @signature `Lretrofit2/RequestBuilder;.addHeaders:(Lokhttp3/Headers;)V` @AccessFlag  {
    temp;
    v0;

  #L495aa0.  v0:= v1.`retrofit2.RequestBuilder.headersBuilder` @type ^`okhttp3.Headers$Builder` @kind object;
  #L495aa4.  call temp:= `addAll`(v0, v2) @signature `Lokhttp3/Headers$Builder;.addAll:(Lokhttp3/Headers;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L495aaa.  return @kind void;
}
procedure `void` `addPart`(`retrofit2.RequestBuilder` v1 @kind this, `okhttp3.Headers` v2 @kind object, `okhttp3.RequestBody` v3 @kind object) @signature `Lretrofit2/RequestBuilder;.addPart:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @AccessFlag  {
    temp;
    v0;

  #L495abc.  v0:= v1.`retrofit2.RequestBuilder.multipartBuilder` @type ^`okhttp3.MultipartBody$Builder` @kind object;
  #L495ac0.  call temp:= `addPart`(v0, v2, v3) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L495ac6.  return @kind void;
}
procedure `void` `addPart`(`retrofit2.RequestBuilder` v1 @kind this, `okhttp3.MultipartBody$Part` v2 @kind object) @signature `Lretrofit2/RequestBuilder;.addPart:(Lokhttp3/MultipartBody$Part;)V` @AccessFlag  {
    temp;
    v0;

  #L495ad8.  v0:= v1.`retrofit2.RequestBuilder.multipartBuilder` @type ^`okhttp3.MultipartBody$Builder` @kind object;
  #L495adc.  call temp:= `addPart`(v0, v2) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L495ae2.  return @kind void;
}
procedure `void` `addPathParam`(`retrofit2.RequestBuilder` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `boolean` v6 ) @signature `Lretrofit2/RequestBuilder;.addPathParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L495af4.  v0:= v3.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L495af8.  if v0 == 0 then goto L495b88;
  #L495afc.  call temp:= `canonicalizeForPath`(v5, v6) @signature `Lretrofit2/RequestBuilder;.canonicalizeForPath:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L495b02.  v6:= temp @kind object;
  #L495b04.  v0:= v3.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L495b08.  v1:= new `java.lang.StringBuilder`;
  #L495b0c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L495b12.  v2:= "{" @kind object;
  #L495b16.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L495b1c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L495b22.  v4:= "}" @kind object;
  #L495b26.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L495b2c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L495b32.  v4:= temp @kind object;
  #L495b34.  call temp:= `replace`(v0, v4, v6) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L495b3a.  v4:= temp @kind object;
  #L495b3c.  v6:= `@@retrofit2.RequestBuilder.PATH_TRAVERSAL` @type ^`java.util.regex.Pattern` @kind object;
  #L495b40.  call temp:= `matcher`(v6, v4) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L495b46.  v6:= temp @kind object;
  #L495b48.  call temp:= `matches`(v6) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L495b4e.  v6:= temp;
  #L495b50.  if v6 != 0 then goto L495b5a;
  #L495b54.  v3.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` := v4 @kind object;
  #L495b58.  return @kind void;
  #L495b5a.  v4:= new `java.lang.IllegalArgumentException`;
  #L495b5e.  v6:= new `java.lang.StringBuilder`;
  #L495b62.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L495b68.  v0:= "@Path parameters shouldn't perform path traversal ('.' or '..'): " @kind object;
  #L495b6c.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L495b72.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L495b78.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L495b7e.  v5:= temp @kind object;
  #L495b80.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L495b86.  throw v4;
  #L495b88.  v4:= new `java.lang.AssertionError`;
  #L495b8c.  call `<init>`(v4) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L495b92.  throw v4;
}
procedure `void` `addQueryParam`(`retrofit2.RequestBuilder` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `boolean` v5 ) @signature `Lretrofit2/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L495ba4.  v0:= v2.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L495ba8.  if v0 == 0 then goto L495c0e;
  #L495bac.  v1:= v2.`retrofit2.RequestBuilder.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L495bb0.  call temp:= `newBuilder`(v1, v0) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L495bb6.  v0:= temp @kind object;
  #L495bb8.  v2.`retrofit2.RequestBuilder.urlBuilder` @type ^`okhttp3.HttpUrl$Builder` := v0 @kind object;
  #L495bbc.  if v0 == 0 then goto L495bc8;
  #L495bc0.  v0:= 0I;
  #L495bc2.  v2.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` := v0 @kind object;
  #L495bc6.  goto L495c0e;
  #L495bc8.  v3:= new `java.lang.IllegalArgumentException`;
  #L495bcc.  v4:= new `java.lang.StringBuilder`;
  #L495bd0.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L495bd6.  v5:= "Malformed URL. Base: " @kind object;
  #L495bda.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L495be0.  v5:= v2.`retrofit2.RequestBuilder.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L495be4.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L495bea.  v5:= ", Relative: " @kind object;
  #L495bee.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L495bf4.  v5:= v2.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L495bf8.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L495bfe.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L495c04.  v4:= temp @kind object;
  #L495c06.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L495c0c.  throw v3;
  #L495c0e.  if v5 == 0 then goto L495c1e;
  #L495c12.  v5:= v2.`retrofit2.RequestBuilder.urlBuilder` @type ^`okhttp3.HttpUrl$Builder` @kind object;
  #L495c16.  call temp:= `addEncodedQueryParameter`(v5, v3, v4) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L495c1c.  goto L495c28;
  #L495c1e.  v5:= v2.`retrofit2.RequestBuilder.urlBuilder` @type ^`okhttp3.HttpUrl$Builder` @kind object;
  #L495c22.  call temp:= `addQueryParameter`(v5, v3, v4) @signature `Lokhttp3/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L495c28.  return @kind void;
}
procedure `void` `addTag`(`retrofit2.RequestBuilder` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lretrofit2/RequestBuilder;.addTag:(Ljava/lang/Class;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;

  #L495c3c.  v0:= v1.`retrofit2.RequestBuilder.requestBuilder` @type ^`okhttp3.Request$Builder` @kind object;
  #L495c40.  call temp:= `tag`(v0, v2, v3) @signature `Lokhttp3/Request$Builder;.tag:(Ljava/lang/Class;Ljava/lang/Object;)Lokhttp3/Request$Builder;` @kind virtual;
  #L495c46.  return @kind void;
}
procedure `okhttp3.Request$Builder` `get`(`retrofit2.RequestBuilder` v5 @kind this) @signature `Lretrofit2/RequestBuilder;.get:()Lokhttp3/Request$Builder;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4957f0.  v0:= v5.`retrofit2.RequestBuilder.urlBuilder` @type ^`okhttp3.HttpUrl$Builder` @kind object;
  #L4957f4.  if v0 == 0 then goto L495802;
  #L4957f8.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L4957fe.  v0:= temp @kind object;
  #L495800.  goto L495816;
  #L495802.  v0:= v5.`retrofit2.RequestBuilder.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L495806.  v1:= v5.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L49580a.  call temp:= `resolve`(v0, v1) @signature `Lokhttp3/HttpUrl;.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind virtual;
  #L495810.  v0:= temp @kind object;
  #L495812.  if v0 == 0 then goto L4958b8;
  #L495816.  v1:= v5.`retrofit2.RequestBuilder.body` @type ^`okhttp3.RequestBody` @kind object;
  #L49581a.  if v1 != 0 then goto L49585a;
  #L49581e.  v2:= v5.`retrofit2.RequestBuilder.formBuilder` @type ^`okhttp3.FormBody$Builder` @kind object;
  #L495822.  if v2 == 0 then goto L495830;
  #L495826.  call temp:= `build`(v2) @signature `Lokhttp3/FormBody$Builder;.build:()Lokhttp3/FormBody;` @kind virtual;
  #L49582c.  v1:= temp @kind object;
  #L49582e.  goto L49585a;
  #L495830.  v2:= v5.`retrofit2.RequestBuilder.multipartBuilder` @type ^`okhttp3.MultipartBody$Builder` @kind object;
  #L495834.  if v2 == 0 then goto L495842;
  #L495838.  call temp:= `build`(v2) @signature `Lokhttp3/MultipartBody$Builder;.build:()Lokhttp3/MultipartBody;` @kind virtual;
  #L49583e.  v1:= temp @kind object;
  #L495840.  goto L49585a;
  #L495842.  v2:= v5.`retrofit2.RequestBuilder.hasBody` @type ^`boolean` @kind boolean;
  #L495846.  if v2 == 0 then goto L49585a;
  #L49584a.  v1:= 0I;
  #L49584c.  v2:= 0I;
  #L49584e.  v2:= new `byte`[v2];
  #L495852.  call temp:= `create`(v1, v2) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/RequestBody;` @kind static;
  #L495858.  v1:= temp @kind object;
  #L49585a.  v2:= v5.`retrofit2.RequestBuilder.contentType` @type ^`okhttp3.MediaType` @kind object;
  #L49585e.  if v2 == 0 then goto L49588a;
  #L495862.  if v1 == 0 then goto L495874;
  #L495866.  v3:= new `retrofit2.RequestBuilder$ContentTypeOverridingRequestBody`;
  #L49586a.  call `<init>`(v3, v1, v2) @signature `Lretrofit2/RequestBuilder$ContentTypeOverridingRequestBody;.<init>:(Lokhttp3/RequestBody;Lokhttp3/MediaType;)V` @kind direct;
  #L495870.  v1:= v3 @kind object;
  #L495872.  goto L49588a;
  #L495874.  v3:= v5.`retrofit2.RequestBuilder.headersBuilder` @type ^`okhttp3.Headers$Builder` @kind object;
  #L495878.  call temp:= `toString`(v2) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @kind virtual;
  #L49587e.  v2:= temp @kind object;
  #L495880.  v4:= "Content-Type" @kind object;
  #L495884.  call temp:= `add`(v3, v4, v2) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L49588a.  v2:= v5.`retrofit2.RequestBuilder.requestBuilder` @type ^`okhttp3.Request$Builder` @kind object;
  #L49588e.  call temp:= `url`(v2, v0) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L495894.  v0:= temp @kind object;
  #L495896.  v2:= v5.`retrofit2.RequestBuilder.headersBuilder` @type ^`okhttp3.Headers$Builder` @kind object;
  #L49589a.  call temp:= `build`(v2) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L4958a0.  v2:= temp @kind object;
  #L4958a2.  call temp:= `headers`(v0, v2) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L4958a8.  v0:= temp @kind object;
  #L4958aa.  v2:= v5.`retrofit2.RequestBuilder.method` @type ^`java.lang.String` @kind object;
  #L4958ae.  call temp:= `method`(v0, v2, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L4958b4.  v0:= temp @kind object;
  #L4958b6.  return v0 @kind object;
  #L4958b8.  v0:= new `java.lang.IllegalArgumentException`;
  #L4958bc.  v1:= new `java.lang.StringBuilder`;
  #L4958c0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4958c6.  v2:= "Malformed URL. Base: " @kind object;
  #L4958ca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4958d0.  v2:= v5.`retrofit2.RequestBuilder.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L4958d4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4958da.  v2:= ", Relative: " @kind object;
  #L4958de.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4958e4.  v2:= v5.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L4958e8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4958ee.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4958f4.  v1:= temp @kind object;
  #L4958f6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4958fc.  throw v0;
}
procedure `void` `setBody`(`retrofit2.RequestBuilder` v0 @kind this, `okhttp3.RequestBody` v1 @kind object) @signature `Lretrofit2/RequestBuilder;.setBody:(Lokhttp3/RequestBody;)V` @AccessFlag  {
    temp;

  #L495d48.  v0.`retrofit2.RequestBuilder.body` @type ^`okhttp3.RequestBody` := v1 @kind object;
  #L495d4c.  return @kind void;
}
procedure `void` `setRelativeUrl`(`retrofit2.RequestBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lretrofit2/RequestBuilder;.setRelativeUrl:(Ljava/lang/Object;)V` @AccessFlag  {
    temp;

  #L495d60.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L495d66.  v1:= temp @kind object;
  #L495d68.  v0.`retrofit2.RequestBuilder.relativeUrl` @type ^`java.lang.String` := v1 @kind object;
  #L495d6c.  return @kind void;
}
