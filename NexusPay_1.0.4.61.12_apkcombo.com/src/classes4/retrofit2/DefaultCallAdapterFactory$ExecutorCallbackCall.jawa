record `retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` @kind class @AccessFlag FINAL extends `retrofit2.Call` @kind interface {
  `java.util.concurrent.Executor` `retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.callbackExecutor` @AccessFlag FINAL;
  `retrofit2.Call` `retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @AccessFlag FINAL;
}
procedure `void` `<init>`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `retrofit2.Call` v2 @kind object) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.<init>:(Ljava/util/concurrent/Executor;Lretrofit2/Call;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4931e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4931ea.  v0.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.callbackExecutor` @type ^`java.util.concurrent.Executor` := v1 @kind object;
  #L4931ee.  v0.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` := v2 @kind object;
  #L4931f2.  return @kind void;
}
procedure `void` `cancel`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L493204.  v0:= v1.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L493208.  call `cancel`(v0) @signature `Lretrofit2/Call;.cancel:()V` @kind interface;
  #L49320e.  return @kind void;
}
procedure `java.lang.Object` `clone`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L49313c.  call temp:= `clone`(v1) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.clone:()Lretrofit2/Call;` @kind virtual;
  #L493142.  v0:= temp @kind object;
  #L493144.  return v0 @kind object;
}
procedure `retrofit2.Call` `clone`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v3 @kind this) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.clone:()Lretrofit2/Call;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L493198.  v0:= new `retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall`;
  #L49319c.  v1:= v3.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L4931a0.  v2:= v3.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L4931a4.  call temp:= `clone`(v2) @signature `Lretrofit2/Call;.clone:()Lretrofit2/Call;` @kind interface;
  #L4931aa.  v2:= temp @kind object;
  #L4931ac.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.<init>:(Ljava/util/concurrent/Executor;Lretrofit2/Call;)V` @kind direct;
  #L4931b2.  return v0 @kind object;
}
procedure `void` `enqueue`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v2 @kind this, `retrofit2.Callback` v3 @kind object) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.enqueue:(Lretrofit2/Callback;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L493220.  v0:= "callback == null" @kind object;
  #L493224.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L49322a.  v0:= v2.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L49322e.  v1:= new `retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1`;
  #L493232.  call `<init>`(v1, v2, v3) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall$1;.<init>:(Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;Lretrofit2/Callback;)V` @kind direct;
  #L493238.  call `enqueue`(v0, v1) @signature `Lretrofit2/Call;.enqueue:(Lretrofit2/Callback;)V` @kind interface;
  #L49323e.  return @kind void;
}
procedure `retrofit2.Response` `execute`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.execute:()Lretrofit2/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4931c4.  v0:= v1.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L4931c8.  call temp:= `execute`(v0) @signature `Lretrofit2/Call;.execute:()Lretrofit2/Response;` @kind interface;
  #L4931ce.  v0:= temp @kind object;
  #L4931d0.  return v0 @kind object;
}
procedure `boolean` `isCanceled`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.isCanceled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4930fc.  v0:= v1.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L493100.  call temp:= `isCanceled`(v0) @signature `Lretrofit2/Call;.isCanceled:()Z` @kind interface;
  #L493106.  v0:= temp;
  #L493108.  return v0;
}
procedure `boolean` `isExecuted`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.isExecuted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49311c.  v0:= v1.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L493120.  call temp:= `isExecuted`(v0) @signature `Lretrofit2/Call;.isExecuted:()Z` @kind interface;
  #L493126.  v0:= temp;
  #L493128.  return v0;
}
procedure `okhttp3.Request` `request`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.request:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L493158.  v0:= v1.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L49315c.  call temp:= `request`(v0) @signature `Lretrofit2/Call;.request:()Lokhttp3/Request;` @kind interface;
  #L493162.  v0:= temp @kind object;
  #L493164.  return v0 @kind object;
}
procedure `okio.Timeout` `timeout`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L493178.  v0:= v1.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L49317c.  call temp:= `timeout`(v0) @signature `Lretrofit2/Call;.timeout:()Lokio/Timeout;` @kind interface;
  #L493182.  v0:= temp @kind object;
  #L493184.  return v0 @kind object;
}
