record `retrofit2.RequestFactory$Builder` @kind class @AccessFlag FINAL {
  `okhttp3.MediaType` `retrofit2.RequestFactory$Builder.contentType` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.gotBody` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.gotField` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.gotPart` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.gotPath` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.gotQuery` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.gotQueryMap` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.gotQueryName` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.gotUrl` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.hasBody` @AccessFlag ;
  `okhttp3.Headers` `retrofit2.RequestFactory$Builder.headers` @AccessFlag ;
  `java.lang.String` `retrofit2.RequestFactory$Builder.httpMethod` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.isFormEncoded` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.isKotlinSuspendFunction` @AccessFlag ;
  `boolean` `retrofit2.RequestFactory$Builder.isMultipart` @AccessFlag ;
  `java.lang.reflect.Method` `retrofit2.RequestFactory$Builder.method` @AccessFlag FINAL;
  `java.lang.annotation.Annotation`[] `retrofit2.RequestFactory$Builder.methodAnnotations` @AccessFlag FINAL;
  `java.lang.annotation.Annotation`[][] `retrofit2.RequestFactory$Builder.parameterAnnotationsArray` @AccessFlag FINAL;
  `retrofit2.ParameterHandler`[] `retrofit2.RequestFactory$Builder.parameterHandlers` @AccessFlag ;
  `java.lang.reflect.Type`[] `retrofit2.RequestFactory$Builder.parameterTypes` @AccessFlag FINAL;
  `java.lang.String` `retrofit2.RequestFactory$Builder.relativeUrl` @AccessFlag ;
  `java.util.Set` `retrofit2.RequestFactory$Builder.relativeUrlParamNames` @AccessFlag ;
  `retrofit2.Retrofit` `retrofit2.RequestFactory$Builder.retrofit` @AccessFlag FINAL;
}
global `java.lang.String` `@@retrofit2.RequestFactory$Builder.PARAM` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@retrofit2.RequestFactory$Builder.PARAM_NAME_REGEX` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@retrofit2.RequestFactory$Builder.PARAM_URL_REGEX` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/RequestFactory$Builder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L497044.  v0:= "\\{([a-zA-Z][a-zA-Z0-9_-]*)\\}" @kind object;
  #L497048.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L49704e.  v0:= temp @kind object;
  #L497050.  `@@retrofit2.RequestFactory$Builder.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L497054.  v0:= "[a-zA-Z][a-zA-Z0-9_-]*" @kind object;
  #L497058.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L49705e.  v0:= temp @kind object;
  #L497060.  `@@retrofit2.RequestFactory$Builder.PARAM_NAME_REGEX` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L497064.  return @kind void;
}
procedure `void` `<init>`(`retrofit2.RequestFactory$Builder` v0 @kind this, `retrofit2.Retrofit` v1 @kind object, `java.lang.reflect.Method` v2 @kind object) @signature `Lretrofit2/RequestFactory$Builder;.<init>:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L497078.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49707e.  v0.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` := v1 @kind object;
  #L497082.  v0.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L497086.  call temp:= `getAnnotations`(v2) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L49708c.  v1:= temp @kind object;
  #L49708e.  v0.`retrofit2.RequestFactory$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] := v1 @kind object;
  #L497092.  call temp:= `getGenericParameterTypes`(v2) @signature `Ljava/lang/reflect/Method;.getGenericParameterTypes:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L497098.  v1:= temp @kind object;
  #L49709a.  v0.`retrofit2.RequestFactory$Builder.parameterTypes` @type ^`java.lang.reflect.Type`[] := v1 @kind object;
  #L49709e.  call temp:= `getParameterAnnotations`(v2) @signature `Ljava/lang/reflect/Method;.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L4970a4.  v1:= temp @kind object;
  #L4970a6.  v0.`retrofit2.RequestFactory$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] := v1 @kind object;
  #L4970aa.  return @kind void;
}
procedure `java.lang.Class` `boxIfPrimitive`(`java.lang.Class` v1 @kind object) @signature `Lretrofit2/RequestFactory$Builder;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L495d80.  v0:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L495d84.  if v0 != v1 then goto L495d8e;
  #L495d88.  v1:= constclass @type ^`java.lang.Boolean` @kind object;
  #L495d8c.  return v1 @kind object;
  #L495d8e.  v0:= `@@java.lang.Byte.TYPE` @type ^`java.lang.Class` @kind object;
  #L495d92.  if v0 != v1 then goto L495d9c;
  #L495d96.  v1:= constclass @type ^`java.lang.Byte` @kind object;
  #L495d9a.  return v1 @kind object;
  #L495d9c.  v0:= `@@java.lang.Character.TYPE` @type ^`java.lang.Class` @kind object;
  #L495da0.  if v0 != v1 then goto L495daa;
  #L495da4.  v1:= constclass @type ^`java.lang.Character` @kind object;
  #L495da8.  return v1 @kind object;
  #L495daa.  v0:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L495dae.  if v0 != v1 then goto L495db8;
  #L495db2.  v1:= constclass @type ^`java.lang.Double` @kind object;
  #L495db6.  return v1 @kind object;
  #L495db8.  v0:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L495dbc.  if v0 != v1 then goto L495dc6;
  #L495dc0.  v1:= constclass @type ^`java.lang.Float` @kind object;
  #L495dc4.  return v1 @kind object;
  #L495dc6.  v0:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L495dca.  if v0 != v1 then goto L495dd4;
  #L495dce.  v1:= constclass @type ^`java.lang.Integer` @kind object;
  #L495dd2.  return v1 @kind object;
  #L495dd4.  v0:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L495dd8.  if v0 != v1 then goto L495de2;
  #L495ddc.  v1:= constclass @type ^`java.lang.Long` @kind object;
  #L495de0.  return v1 @kind object;
  #L495de2.  v0:= `@@java.lang.Short.TYPE` @type ^`java.lang.Class` @kind object;
  #L495de6.  if v0 != v1 then goto L495dee;
  #L495dea.  v1:= constclass @type ^`java.lang.Short` @kind object;
  #L495dee.  return v1 @kind object;
}
procedure `okhttp3.Headers` `parseHeaders`(`retrofit2.RequestFactory$Builder` v8 @kind this, `java.lang.String`[] v9 @kind object) @signature `Lretrofit2/RequestFactory$Builder;.parseHeaders:([Ljava/lang/String;)Lokhttp3/Headers;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L495e48.  v0:= new `okhttp3.Headers$Builder`;
  #L495e4c.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L495e52.  v1:= length @variable v9;
  #L495e54.  v2:= 0I;
  #L495e56.  v3:= 0I;
  #L495e58.  if v3 >= v1 then goto L495f02;
  #L495e5c.  v4:= v9[v3] @kind object;
  #L495e60.  v5:= 58I;
  #L495e64.  call temp:= `indexOf`(v4, v5) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L495e6a.  v5:= temp;
  #L495e6c.  v6:= -1I;
  #L495e6e.  v7:= 1I;
  #L495e70.  if v5 == v6 then goto L495ee8;
  #L495e74.  if v5 == 0 then goto L495ee8;
  #L495e78.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L495e7e.  v6:= temp;
  #L495e80.  v6:= v6 - v7 @kind int;
  #L495e82.  if v5 == v6 then goto L495ee8;
  #L495e86.  call temp:= `substring`(v4, v2, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L495e8c.  v6:= temp @kind object;
  #L495e8e.  v5:= v5 + 1;
  #L495e92.  call temp:= `substring`(v4, v5) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L495e98.  v4:= temp @kind object;
  #L495e9a.  call temp:= `trim`(v4) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L495ea0.  v4:= temp @kind object;
  #L495ea2.  v5:= "Content-Type" @kind object;
  #L495ea6.  call temp:= `equalsIgnoreCase`(v5, v6) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L495eac.  v5:= temp;
  #L495eae.  if v5 == 0 then goto L495edc;
  #L495eb2.  call temp:= `get`(v4) @signature `Lokhttp3/MediaType;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L495eb8.  v5:= temp @kind object;
  #L495eba.  v8.`retrofit2.RequestFactory$Builder.contentType` @type ^`okhttp3.MediaType` := v5 @kind object;
  #L495ebe.  goto L495ee2;
  #L495ec0.  v9:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L495ec2.  v0:= v8.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L495ec6.  v1:= new `java.lang.Object`[v7];
  #L495eca.  v1[v2]:= v4 @kind object;
  #L495ece.  v2:= "Malformed content type: %s" @kind object;
  #L495ed2.  call temp:= `methodError`(v0, v9, v2, v1) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L495ed8.  v9:= temp @kind object;
  #L495eda.  throw v9;
  #L495edc.  call temp:= `add`(v0, v6, v4) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L495ee2.  v3:= v3 + 1;
  #L495ee6.  goto L495e58;
  #L495ee8.  v9:= v8.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L495eec.  v0:= new `java.lang.Object`[v7];
  #L495ef0.  v0[v2]:= v4 @kind object;
  #L495ef4.  v1:= "@Headers value must be in the form \"Name: Value\". Found: \"%s\"" @kind object;
  #L495ef8.  call temp:= `methodError`(v9, v1, v0) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L495efe.  v9:= temp @kind object;
  #L495f00.  throw v9;
  #L495f02.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L495f08.  v9:= temp @kind object;
  #L495f0a.  return v9 @kind object;
  catch `java.lang.IllegalArgumentException` @[L495eb2..L495ebe] goto L495ec0;
}
procedure `void` `parseHttpMethodAndPath`(`retrofit2.RequestFactory$Builder` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `boolean` v6 ) @signature `Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4970bc.  v0:= v3.`retrofit2.RequestFactory$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L4970c0.  v1:= 0I;
  #L4970c2.  v2:= 1I;
  #L4970c4.  if v0 != 0 then goto L49714e;
  #L4970c8.  v3.`retrofit2.RequestFactory$Builder.httpMethod` @type ^`java.lang.String` := v4 @kind object;
  #L4970cc.  v3.`retrofit2.RequestFactory$Builder.hasBody` @type ^`boolean` := v6 @kind boolean;
  #L4970d0.  call temp:= `isEmpty`(v5) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L4970d6.  v4:= temp;
  #L4970d8.  if v4 == 0 then goto L4970de;
  #L4970dc.  return @kind void;
  #L4970de.  v4:= 63I;
  #L4970e2.  call temp:= `indexOf`(v5, v4) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L4970e8.  v4:= temp;
  #L4970ea.  v6:= -1I;
  #L4970ec.  if v4 == v6 then goto L49713c;
  #L4970f0.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4970f6.  v6:= temp;
  #L4970f8.  v6:= v6 - v2 @kind int;
  #L4970fa.  if v4 >= v6 then goto L49713c;
  #L4970fe.  v4:= v4 + v2 @kind int;
  #L497100.  call temp:= `substring`(v5, v4) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L497106.  v4:= temp @kind object;
  #L497108.  v6:= `@@retrofit2.RequestFactory$Builder.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L49710c.  call temp:= `matcher`(v6, v4) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L497112.  v6:= temp @kind object;
  #L497114.  call temp:= `find`(v6) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L49711a.  v6:= temp;
  #L49711c.  if v6 != 0 then goto L497122;
  #L497120.  goto L49713c;
  #L497122.  v5:= v3.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L497126.  v6:= new `java.lang.Object`[v2];
  #L49712a.  v6[v1]:= v4 @kind object;
  #L49712e.  v4:= "URL query string \"%s\" must not have replace block. For dynamic query parameters use @Query." @kind object;
  #L497132.  call temp:= `methodError`(v5, v4, v6) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L497138.  v4:= temp @kind object;
  #L49713a.  throw v4;
  #L49713c.  v3.`retrofit2.RequestFactory$Builder.relativeUrl` @type ^`java.lang.String` := v5 @kind object;
  #L497140.  call temp:= `parsePathParameters`(v5) @signature `Lretrofit2/RequestFactory$Builder;.parsePathParameters:(Ljava/lang/String;)Ljava/util/Set;` @kind static;
  #L497146.  v4:= temp @kind object;
  #L497148.  v3.`retrofit2.RequestFactory$Builder.relativeUrlParamNames` @type ^`java.util.Set` := v4 @kind object;
  #L49714c.  return @kind void;
  #L49714e.  v5:= v3.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L497152.  v6:= 2I;
  #L497154.  v6:= new `java.lang.Object`[v6];
  #L497158.  v6[v1]:= v0 @kind object;
  #L49715c.  v6[v2]:= v4 @kind object;
  #L497160.  v4:= "Only one HTTP method is allowed. Found: %s and %s." @kind object;
  #L497164.  call temp:= `methodError`(v5, v4, v6) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L49716a.  v4:= temp @kind object;
  #L49716c.  throw v4;
}
procedure `void` `parseMethodAnnotation`(`retrofit2.RequestFactory$Builder` v4 @kind this, `java.lang.annotation.Annotation` v5 @kind object) @signature `Lretrofit2/RequestFactory$Builder;.parseMethodAnnotation:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L497180.  v0:= instanceof @variable v5 @type ^`retrofit2.http.DELETE` @kind boolean;
  #L497184.  v1:= 0I;
  #L497186.  if v0 == 0 then goto L4971a4;
  #L49718a.  v5:= (`retrofit2.http.DELETE`) v5 @kind object;
  #L49718e.  call temp:= `value`(v5) @signature `Lretrofit2/http/DELETE;.value:()Ljava/lang/String;` @kind interface;
  #L497194.  v5:= temp @kind object;
  #L497196.  v0:= "DELETE" @kind object;
  #L49719a.  call `parseHttpMethodAndPath`(v4, v0, v5, v1) @signature `Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L4971a0.  goto L49732e;
  #L4971a4.  v0:= instanceof @variable v5 @type ^`retrofit2.http.GET` @kind boolean;
  #L4971a8.  if v0 == 0 then goto L4971c6;
  #L4971ac.  v5:= (`retrofit2.http.GET`) v5 @kind object;
  #L4971b0.  call temp:= `value`(v5) @signature `Lretrofit2/http/GET;.value:()Ljava/lang/String;` @kind interface;
  #L4971b6.  v5:= temp @kind object;
  #L4971b8.  v0:= "GET" @kind object;
  #L4971bc.  call `parseHttpMethodAndPath`(v4, v0, v5, v1) @signature `Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L4971c2.  goto L49732e;
  #L4971c6.  v0:= instanceof @variable v5 @type ^`retrofit2.http.HEAD` @kind boolean;
  #L4971ca.  if v0 == 0 then goto L4971e8;
  #L4971ce.  v5:= (`retrofit2.http.HEAD`) v5 @kind object;
  #L4971d2.  call temp:= `value`(v5) @signature `Lretrofit2/http/HEAD;.value:()Ljava/lang/String;` @kind interface;
  #L4971d8.  v5:= temp @kind object;
  #L4971da.  v0:= "HEAD" @kind object;
  #L4971de.  call `parseHttpMethodAndPath`(v4, v0, v5, v1) @signature `Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L4971e4.  goto L49732e;
  #L4971e8.  v0:= instanceof @variable v5 @type ^`retrofit2.http.PATCH` @kind boolean;
  #L4971ec.  v2:= 1I;
  #L4971ee.  if v0 == 0 then goto L49720c;
  #L4971f2.  v5:= (`retrofit2.http.PATCH`) v5 @kind object;
  #L4971f6.  call temp:= `value`(v5) @signature `Lretrofit2/http/PATCH;.value:()Ljava/lang/String;` @kind interface;
  #L4971fc.  v5:= temp @kind object;
  #L4971fe.  v0:= "PATCH" @kind object;
  #L497202.  call `parseHttpMethodAndPath`(v4, v0, v5, v2) @signature `Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L497208.  goto L49732e;
  #L49720c.  v0:= instanceof @variable v5 @type ^`retrofit2.http.POST` @kind boolean;
  #L497210.  if v0 == 0 then goto L49722e;
  #L497214.  v5:= (`retrofit2.http.POST`) v5 @kind object;
  #L497218.  call temp:= `value`(v5) @signature `Lretrofit2/http/POST;.value:()Ljava/lang/String;` @kind interface;
  #L49721e.  v5:= temp @kind object;
  #L497220.  v0:= "POST" @kind object;
  #L497224.  call `parseHttpMethodAndPath`(v4, v0, v5, v2) @signature `Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L49722a.  goto L49732e;
  #L49722e.  v0:= instanceof @variable v5 @type ^`retrofit2.http.PUT` @kind boolean;
  #L497232.  if v0 == 0 then goto L497250;
  #L497236.  v5:= (`retrofit2.http.PUT`) v5 @kind object;
  #L49723a.  call temp:= `value`(v5) @signature `Lretrofit2/http/PUT;.value:()Ljava/lang/String;` @kind interface;
  #L497240.  v5:= temp @kind object;
  #L497242.  v0:= "PUT" @kind object;
  #L497246.  call `parseHttpMethodAndPath`(v4, v0, v5, v2) @signature `Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L49724c.  goto L49732e;
  #L497250.  v0:= instanceof @variable v5 @type ^`retrofit2.http.OPTIONS` @kind boolean;
  #L497254.  if v0 == 0 then goto L497270;
  #L497258.  v5:= (`retrofit2.http.OPTIONS`) v5 @kind object;
  #L49725c.  call temp:= `value`(v5) @signature `Lretrofit2/http/OPTIONS;.value:()Ljava/lang/String;` @kind interface;
  #L497262.  v5:= temp @kind object;
  #L497264.  v0:= "OPTIONS" @kind object;
  #L497268.  call `parseHttpMethodAndPath`(v4, v0, v5, v1) @signature `Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L49726e.  goto L49732e;
  #L497270.  v0:= instanceof @variable v5 @type ^`retrofit2.http.HTTP` @kind boolean;
  #L497274.  if v0 == 0 then goto L49729c;
  #L497278.  v5:= (`retrofit2.http.HTTP`) v5 @kind object;
  #L49727c.  call temp:= `method`(v5) @signature `Lretrofit2/http/HTTP;.method:()Ljava/lang/String;` @kind interface;
  #L497282.  v0:= temp @kind object;
  #L497284.  call temp:= `path`(v5) @signature `Lretrofit2/http/HTTP;.path:()Ljava/lang/String;` @kind interface;
  #L49728a.  v1:= temp @kind object;
  #L49728c.  call temp:= `hasBody`(v5) @signature `Lretrofit2/http/HTTP;.hasBody:()Z` @kind interface;
  #L497292.  v5:= temp;
  #L497294.  call `parseHttpMethodAndPath`(v4, v0, v1, v5) @signature `Lretrofit2/RequestFactory$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L49729a.  goto L49732e;
  #L49729c.  v0:= instanceof @variable v5 @type ^`retrofit2.http.Headers` @kind boolean;
  #L4972a0.  if v0 == 0 then goto L4972da;
  #L4972a4.  v5:= (`retrofit2.http.Headers`) v5 @kind object;
  #L4972a8.  call temp:= `value`(v5) @signature `Lretrofit2/http/Headers;.value:()[Ljava/lang/String;` @kind interface;
  #L4972ae.  v5:= temp @kind object;
  #L4972b0.  v0:= length @variable v5;
  #L4972b2.  if v0 == 0 then goto L4972c4;
  #L4972b6.  call temp:= `parseHeaders`(v4, v5) @signature `Lretrofit2/RequestFactory$Builder;.parseHeaders:([Ljava/lang/String;)Lokhttp3/Headers;` @kind direct;
  #L4972bc.  v5:= temp @kind object;
  #L4972be.  v4.`retrofit2.RequestFactory$Builder.headers` @type ^`okhttp3.Headers` := v5 @kind object;
  #L4972c2.  goto L49732e;
  #L4972c4.  v5:= v4.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4972c8.  v0:= new `java.lang.Object`[v1];
  #L4972cc.  v1:= "@Headers annotation is empty." @kind object;
  #L4972d0.  call temp:= `methodError`(v5, v1, v0) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4972d6.  v5:= temp @kind object;
  #L4972d8.  throw v5;
  #L4972da.  v0:= instanceof @variable v5 @type ^`retrofit2.http.Multipart` @kind boolean;
  #L4972de.  v3:= "Only one encoding annotation is allowed." @kind object;
  #L4972e2.  if v0 == 0 then goto L497306;
  #L4972e6.  v5:= v4.`retrofit2.RequestFactory$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L4972ea.  if v5 != 0 then goto L4972f4;
  #L4972ee.  v4.`retrofit2.RequestFactory$Builder.isMultipart` @type ^`boolean` := v2 @kind boolean;
  #L4972f2.  goto L49732e;
  #L4972f4.  v5:= v4.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4972f8.  v0:= new `java.lang.Object`[v1];
  #L4972fc.  call temp:= `methodError`(v5, v3, v0) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L497302.  v5:= temp @kind object;
  #L497304.  throw v5;
  #L497306.  v5:= instanceof @variable v5 @type ^`retrofit2.http.FormUrlEncoded` @kind boolean;
  #L49730a.  if v5 == 0 then goto L49732e;
  #L49730e.  v5:= v4.`retrofit2.RequestFactory$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L497312.  if v5 != 0 then goto L49731c;
  #L497316.  v4.`retrofit2.RequestFactory$Builder.isFormEncoded` @type ^`boolean` := v2 @kind boolean;
  #L49731a.  goto L49732e;
  #L49731c.  v5:= v4.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L497320.  v0:= new `java.lang.Object`[v1];
  #L497324.  call temp:= `methodError`(v5, v3, v0) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L49732a.  v5:= temp @kind object;
  #L49732c.  throw v5;
  #L49732e.  return @kind void;
}
procedure `retrofit2.ParameterHandler` `parseParameter`(`retrofit2.RequestFactory$Builder` v6 @kind this, `int` v7 , `java.lang.reflect.Type` v8 @kind object, `java.lang.annotation.Annotation`[] v9 @kind object, `boolean` v10 ) @signature `Lretrofit2/RequestFactory$Builder;.parseParameter:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Z)Lretrofit2/ParameterHandler;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L495f2c.  v0:= 0I;
  #L495f2e.  v1:= 0I;
  #L495f30.  if v9 == 0 then goto L495f72;
  #L495f34.  v2:= length @variable v9;
  #L495f36.  v4:= v0 @kind object;
  #L495f38.  v3:= 0I;
  #L495f3a.  if v3 >= v2 then goto L495f74;
  #L495f3e.  v5:= v9[v3] @kind object;
  #L495f42.  call temp:= `parseParameterAnnotation`(v6, v7, v8, v9, v5) @signature `Lretrofit2/RequestFactory$Builder;.parseParameterAnnotation:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @kind direct;
  #L495f48.  v5:= temp @kind object;
  #L495f4a.  if v5 != 0 then goto L495f50;
  #L495f4e.  goto L495f56;
  #L495f50.  if v4 != 0 then goto L495f5c;
  #L495f54.  v4:= v5 @kind object;
  #L495f56.  v3:= v3 + 1;
  #L495f5a.  goto L495f3a;
  #L495f5c.  v8:= v6.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L495f60.  v9:= new `java.lang.Object`[v1];
  #L495f64.  v10:= "Multiple Retrofit annotations found, only one allowed." @kind object;
  #L495f68.  call temp:= `parameterError`(v8, v7, v10, v9) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L495f6e.  v7:= temp @kind object;
  #L495f70.  throw v7;
  #L495f72.  v4:= v0 @kind object;
  #L495f74.  if v4 != 0 then goto L495faa;
  #L495f78.  if v10 == 0 then goto L495f94;
  #L495f7c.  call temp:= `getRawType`(v8) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L495f82.  v8:= temp @kind object;
  #L495f84.  v9:= constclass @type ^`kotlin.coroutines.Continuation` @kind object;
  #L495f88.  if v8 != v9 then goto L495f94;
  #L495f8c.  v8:= 1I;
  #L495f8e.  v6.`retrofit2.RequestFactory$Builder.isKotlinSuspendFunction` @type ^`boolean` := v8 @kind boolean;
  #L495f92.  return v0 @kind object;
  #L495f94.  v8:= v6.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L495f98.  v9:= new `java.lang.Object`[v1];
  #L495f9c.  v10:= "No Retrofit annotation found." @kind object;
  #L495fa0.  call temp:= `parameterError`(v8, v7, v10, v9) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L495fa6.  v7:= temp @kind object;
  #L495fa8.  throw v7;
  #L495faa.  return v4 @kind object;
  catch `java.lang.NoClassDefFoundError` @[L495f7c..L495f92] goto L495f94;
}
procedure `retrofit2.ParameterHandler` `parseParameterAnnotation`(`retrofit2.RequestFactory$Builder` v10 @kind this, `int` v11 , `java.lang.reflect.Type` v12 @kind object, `java.lang.annotation.Annotation`[] v13 @kind object, `java.lang.annotation.Annotation` v14 @kind object) @signature `Lretrofit2/RequestFactory$Builder;.parseParameterAnnotation:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L495fcc.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L495fd0.  v1:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L495fd4.  v2:= instanceof @variable v14 @type ^`retrofit2.http.Url` @kind boolean;
  #L495fd8.  v3:= "@Path parameters may not be used with @Url." @kind object;
  #L495fdc.  v4:= 1I;
  #L495fde.  v5:= 0I;
  #L495fe0.  if v2 == 0 then goto L496106;
  #L495fe4.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L495fea.  v13:= v10.`retrofit2.RequestFactory$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L495fee.  if v13 != 0 then goto L4960f0;
  #L495ff2.  v13:= v10.`retrofit2.RequestFactory$Builder.gotPath` @type ^`boolean` @kind boolean;
  #L495ff6.  if v13 != 0 then goto L4960de;
  #L495ffa.  v13:= v10.`retrofit2.RequestFactory$Builder.gotQuery` @type ^`boolean` @kind boolean;
  #L495ffe.  if v13 != 0 then goto L4960c8;
  #L496002.  v13:= v10.`retrofit2.RequestFactory$Builder.gotQueryName` @type ^`boolean` @kind boolean;
  #L496006.  if v13 != 0 then goto L4960b2;
  #L49600a.  v13:= v10.`retrofit2.RequestFactory$Builder.gotQueryMap` @type ^`boolean` @kind boolean;
  #L49600e.  if v13 != 0 then goto L49609c;
  #L496012.  v13:= v10.`retrofit2.RequestFactory$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L496016.  if v13 != 0 then goto L49607e;
  #L49601a.  v10.`retrofit2.RequestFactory$Builder.gotUrl` @type ^`boolean` := v4 @kind boolean;
  #L49601e.  v13:= constclass @type ^`okhttp3.HttpUrl` @kind object;
  #L496022.  if v12 == v13 then goto L49606e;
  #L496026.  if v12 == v0 then goto L49606e;
  #L49602a.  v13:= constclass @type ^`java.net.URI` @kind object;
  #L49602e.  if v12 == v13 then goto L49606e;
  #L496032.  v13:= instanceof @variable v12 @type ^`java.lang.Class` @kind boolean;
  #L496036.  if v13 == 0 then goto L496058;
  #L49603a.  v13:= "android.net.Uri" @kind object;
  #L49603e.  v12:= (`java.lang.Class`) v12 @kind object;
  #L496042.  call temp:= `getName`(v12) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L496048.  v12:= temp @kind object;
  #L49604a.  call temp:= `equals`(v13, v12) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L496050.  v12:= temp;
  #L496052.  if v12 == 0 then goto L496058;
  #L496056.  goto L49606e;
  #L496058.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L49605c.  v13:= new `java.lang.Object`[v5];
  #L496060.  v14:= "@Url must be okhttp3.HttpUrl, String, java.net.URI, or android.net.Uri type." @kind object;
  #L496064.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L49606a.  v11:= temp @kind object;
  #L49606c.  throw v11;
  #L49606e.  v12:= new `retrofit2.ParameterHandler$RelativeUrl`;
  #L496072.  v13:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496076.  call `<init>`(v12, v13, v11) @signature `Lretrofit2/ParameterHandler$RelativeUrl;.<init>:(Ljava/lang/reflect/Method;I)V` @kind direct;
  #L49607c.  return v12 @kind object;
  #L49607e.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496082.  v13:= new `java.lang.Object`[v4];
  #L496086.  v14:= v10.`retrofit2.RequestFactory$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L49608a.  v13[v5]:= v14 @kind object;
  #L49608e.  v14:= "@Url cannot be used with @%s URL" @kind object;
  #L496092.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496098.  v11:= temp @kind object;
  #L49609a.  throw v11;
  #L49609c.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4960a0.  v13:= new `java.lang.Object`[v5];
  #L4960a4.  v14:= "A @Url parameter must not come after a @QueryMap." @kind object;
  #L4960a8.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4960ae.  v11:= temp @kind object;
  #L4960b0.  throw v11;
  #L4960b2.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4960b6.  v13:= new `java.lang.Object`[v5];
  #L4960ba.  v14:= "A @Url parameter must not come after a @QueryName." @kind object;
  #L4960be.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4960c4.  v11:= temp @kind object;
  #L4960c6.  throw v11;
  #L4960c8.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4960cc.  v13:= new `java.lang.Object`[v5];
  #L4960d0.  v14:= "A @Url parameter must not come after a @Query." @kind object;
  #L4960d4.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4960da.  v11:= temp @kind object;
  #L4960dc.  throw v11;
  #L4960de.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4960e2.  v13:= new `java.lang.Object`[v5];
  #L4960e6.  call temp:= `parameterError`(v12, v11, v3, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4960ec.  v11:= temp @kind object;
  #L4960ee.  throw v11;
  #L4960f0.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4960f4.  v13:= new `java.lang.Object`[v5];
  #L4960f8.  v14:= "Multiple @Url method annotations found." @kind object;
  #L4960fc.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496102.  v11:= temp @kind object;
  #L496104.  throw v11;
  #L496106.  v2:= instanceof @variable v14 @type ^`retrofit2.http.Path` @kind boolean;
  #L49610a.  if v2 == 0 then goto L4961ec;
  #L49610e.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L496114.  v0:= v10.`retrofit2.RequestFactory$Builder.gotQuery` @type ^`boolean` @kind boolean;
  #L496118.  if v0 != 0 then goto L4961d6;
  #L49611c.  v0:= v10.`retrofit2.RequestFactory$Builder.gotQueryName` @type ^`boolean` @kind boolean;
  #L496120.  if v0 != 0 then goto L4961c0;
  #L496124.  v0:= v10.`retrofit2.RequestFactory$Builder.gotQueryMap` @type ^`boolean` @kind boolean;
  #L496128.  if v0 != 0 then goto L4961aa;
  #L49612c.  v0:= v10.`retrofit2.RequestFactory$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L496130.  if v0 != 0 then goto L496198;
  #L496134.  v0:= v10.`retrofit2.RequestFactory$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L496138.  if v0 == 0 then goto L49617a;
  #L49613c.  v10.`retrofit2.RequestFactory$Builder.gotPath` @type ^`boolean` := v4 @kind boolean;
  #L496140.  v14:= (`retrofit2.http.Path`) v14 @kind object;
  #L496144.  call temp:= `value`(v14) @signature `Lretrofit2/http/Path;.value:()Ljava/lang/String;` @kind interface;
  #L49614a.  v3:= temp @kind object;
  #L49614c.  call `validatePathName`(v10, v11, v3) @signature `Lretrofit2/RequestFactory$Builder;.validatePathName:(ILjava/lang/String;)V` @kind direct;
  #L496152.  v0:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L496156.  call temp:= `stringConverter`(v0, v12, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L49615c.  v4:= temp @kind object;
  #L49615e.  v12:= new `retrofit2.ParameterHandler$Path`;
  #L496162.  v1:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496166.  call temp:= `encoded`(v14) @signature `Lretrofit2/http/Path;.encoded:()Z` @kind interface;
  #L49616c.  v5:= temp;
  #L49616e.  v0:= v12 @kind object;
  #L496170.  v2:= v11;
  #L496172.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lretrofit2/ParameterHandler$Path;.<init>:(Ljava/lang/reflect/Method;ILjava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L496178.  return v12 @kind object;
  #L49617a.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L49617e.  v13:= new `java.lang.Object`[v4];
  #L496182.  v14:= v10.`retrofit2.RequestFactory$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L496186.  v13[v5]:= v14 @kind object;
  #L49618a.  v14:= "@Path can only be used with relative url on @%s" @kind object;
  #L49618e.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496194.  v11:= temp @kind object;
  #L496196.  throw v11;
  #L496198.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L49619c.  v13:= new `java.lang.Object`[v5];
  #L4961a0.  call temp:= `parameterError`(v12, v11, v3, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4961a6.  v11:= temp @kind object;
  #L4961a8.  throw v11;
  #L4961aa.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4961ae.  v13:= new `java.lang.Object`[v5];
  #L4961b2.  v14:= "A @Path parameter must not come after a @QueryMap." @kind object;
  #L4961b6.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4961bc.  v11:= temp @kind object;
  #L4961be.  throw v11;
  #L4961c0.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4961c4.  v13:= new `java.lang.Object`[v5];
  #L4961c8.  v14:= "A @Path parameter must not come after a @QueryName." @kind object;
  #L4961cc.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4961d2.  v11:= temp @kind object;
  #L4961d4.  throw v11;
  #L4961d6.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4961da.  v13:= new `java.lang.Object`[v5];
  #L4961de.  v14:= "A @Path parameter must not come after a @Query." @kind object;
  #L4961e2.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4961e8.  v11:= temp @kind object;
  #L4961ea.  throw v11;
  #L4961ec.  v2:= instanceof @variable v14 @type ^`retrofit2.http.Query` @kind boolean;
  #L4961f0.  v3:= "<String>)" @kind object;
  #L4961f4.  v6:= " must include generic type (e.g., " @kind object;
  #L4961f8.  if v2 == 0 then goto L496306;
  #L4961fc.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L496202.  v14:= (`retrofit2.http.Query`) v14 @kind object;
  #L496206.  call temp:= `value`(v14) @signature `Lretrofit2/http/Query;.value:()Ljava/lang/String;` @kind interface;
  #L49620c.  v0:= temp @kind object;
  #L49620e.  call temp:= `encoded`(v14) @signature `Lretrofit2/http/Query;.encoded:()Z` @kind interface;
  #L496214.  v14:= temp;
  #L496216.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L49621c.  v1:= temp @kind object;
  #L49621e.  v10.`retrofit2.RequestFactory$Builder.gotQuery` @type ^`boolean` := v4 @kind boolean;
  #L496222.  v2:= constclass @type ^`java.lang.Iterable` @kind object;
  #L496226.  call temp:= `isAssignableFrom`(v2, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L49622c.  v2:= temp;
  #L49622e.  if v2 == 0 then goto L4962b2;
  #L496232.  v2:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L496236.  if v2 == 0 then goto L496266;
  #L49623a.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L49623e.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L496244.  v11:= temp @kind object;
  #L496246.  v12:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L49624a.  call temp:= `stringConverter`(v12, v11, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L496250.  v11:= temp @kind object;
  #L496252.  v12:= new `retrofit2.ParameterHandler$Query`;
  #L496256.  call `<init>`(v12, v0, v11, v14) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L49625c.  call temp:= `iterable`(v12) @signature `Lretrofit2/ParameterHandler;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L496262.  v11:= temp @kind object;
  #L496264.  return v11 @kind object;
  #L496266.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L49626a.  v13:= new `java.lang.StringBuilder`;
  #L49626e.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L496274.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L49627a.  v14:= temp @kind object;
  #L49627c.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496282.  call temp:= `append`(v13, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496288.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L49628e.  v14:= temp @kind object;
  #L496290.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496296.  call temp:= `append`(v13, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49629c.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4962a2.  v13:= temp @kind object;
  #L4962a4.  v14:= new `java.lang.Object`[v5];
  #L4962a8.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4962ae.  v11:= temp @kind object;
  #L4962b0.  throw v11;
  #L4962b2.  call temp:= `isArray`(v1) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L4962b8.  v11:= temp;
  #L4962ba.  if v11 == 0 then goto L4962ee;
  #L4962be.  call temp:= `getComponentType`(v1) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L4962c4.  v11:= temp @kind object;
  #L4962c6.  call temp:= `boxIfPrimitive`(v11) @signature `Lretrofit2/RequestFactory$Builder;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L4962cc.  v11:= temp @kind object;
  #L4962ce.  v12:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L4962d2.  call temp:= `stringConverter`(v12, v11, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L4962d8.  v11:= temp @kind object;
  #L4962da.  v12:= new `retrofit2.ParameterHandler$Query`;
  #L4962de.  call `<init>`(v12, v0, v11, v14) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L4962e4.  call temp:= `array`(v12) @signature `Lretrofit2/ParameterHandler;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L4962ea.  v11:= temp @kind object;
  #L4962ec.  return v11 @kind object;
  #L4962ee.  v11:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L4962f2.  call temp:= `stringConverter`(v11, v12, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L4962f8.  v11:= temp @kind object;
  #L4962fa.  v12:= new `retrofit2.ParameterHandler$Query`;
  #L4962fe.  call `<init>`(v12, v0, v11, v14) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L496304.  return v12 @kind object;
  #L496306.  v2:= instanceof @variable v14 @type ^`retrofit2.http.QueryName` @kind boolean;
  #L49630a.  if v2 == 0 then goto L496410;
  #L49630e.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L496314.  v14:= (`retrofit2.http.QueryName`) v14 @kind object;
  #L496318.  call temp:= `encoded`(v14) @signature `Lretrofit2/http/QueryName;.encoded:()Z` @kind interface;
  #L49631e.  v14:= temp;
  #L496320.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L496326.  v0:= temp @kind object;
  #L496328.  v10.`retrofit2.RequestFactory$Builder.gotQueryName` @type ^`boolean` := v4 @kind boolean;
  #L49632c.  v1:= constclass @type ^`java.lang.Iterable` @kind object;
  #L496330.  call temp:= `isAssignableFrom`(v1, v0) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L496336.  v1:= temp;
  #L496338.  if v1 == 0 then goto L4963bc;
  #L49633c.  v1:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L496340.  if v1 == 0 then goto L496370;
  #L496344.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L496348.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L49634e.  v11:= temp @kind object;
  #L496350.  v12:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L496354.  call temp:= `stringConverter`(v12, v11, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L49635a.  v11:= temp @kind object;
  #L49635c.  v12:= new `retrofit2.ParameterHandler$QueryName`;
  #L496360.  call `<init>`(v12, v11, v14) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L496366.  call temp:= `iterable`(v12) @signature `Lretrofit2/ParameterHandler;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L49636c.  v11:= temp @kind object;
  #L49636e.  return v11 @kind object;
  #L496370.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496374.  v13:= new `java.lang.StringBuilder`;
  #L496378.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49637e.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L496384.  v14:= temp @kind object;
  #L496386.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49638c.  call temp:= `append`(v13, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496392.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L496398.  v14:= temp @kind object;
  #L49639a.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4963a0.  call temp:= `append`(v13, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4963a6.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4963ac.  v13:= temp @kind object;
  #L4963ae.  v14:= new `java.lang.Object`[v5];
  #L4963b2.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4963b8.  v11:= temp @kind object;
  #L4963ba.  throw v11;
  #L4963bc.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L4963c2.  v11:= temp;
  #L4963c4.  if v11 == 0 then goto L4963f8;
  #L4963c8.  call temp:= `getComponentType`(v0) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L4963ce.  v11:= temp @kind object;
  #L4963d0.  call temp:= `boxIfPrimitive`(v11) @signature `Lretrofit2/RequestFactory$Builder;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L4963d6.  v11:= temp @kind object;
  #L4963d8.  v12:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L4963dc.  call temp:= `stringConverter`(v12, v11, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L4963e2.  v11:= temp @kind object;
  #L4963e4.  v12:= new `retrofit2.ParameterHandler$QueryName`;
  #L4963e8.  call `<init>`(v12, v11, v14) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L4963ee.  call temp:= `array`(v12) @signature `Lretrofit2/ParameterHandler;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L4963f4.  v11:= temp @kind object;
  #L4963f6.  return v11 @kind object;
  #L4963f8.  v11:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L4963fc.  call temp:= `stringConverter`(v11, v12, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L496402.  v11:= temp @kind object;
  #L496404.  v12:= new `retrofit2.ParameterHandler$QueryName`;
  #L496408.  call `<init>`(v12, v11, v14) @signature `Lretrofit2/ParameterHandler$QueryName;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L49640e.  return v12 @kind object;
  #L496410.  v2:= instanceof @variable v14 @type ^`retrofit2.http.QueryMap` @kind boolean;
  #L496414.  v7:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L496418.  if v2 == 0 then goto L4964ee;
  #L49641c.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L496422.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L496428.  v1:= temp @kind object;
  #L49642a.  v10.`retrofit2.RequestFactory$Builder.gotQueryMap` @type ^`boolean` := v4 @kind boolean;
  #L49642e.  v2:= constclass @type ^`java.util.Map` @kind object;
  #L496432.  call temp:= `isAssignableFrom`(v2, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L496438.  v2:= temp;
  #L49643a.  if v2 == 0 then goto L4964d8;
  #L49643e.  v2:= constclass @type ^`java.util.Map` @kind object;
  #L496442.  call temp:= `getSupertype`(v12, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L496448.  v12:= temp @kind object;
  #L49644a.  v1:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L49644e.  if v1 == 0 then goto L4964c6;
  #L496452.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L496456.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L49645c.  v1:= temp @kind object;
  #L49645e.  if v0 != v1 then goto L496492;
  #L496462.  call temp:= `getParameterUpperBound`(v4, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L496468.  v12:= temp @kind object;
  #L49646a.  v0:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L49646e.  call temp:= `stringConverter`(v0, v12, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L496474.  v12:= temp @kind object;
  #L496476.  v13:= new `retrofit2.ParameterHandler$QueryMap`;
  #L49647a.  v0:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L49647e.  v14:= (`retrofit2.http.QueryMap`) v14 @kind object;
  #L496482.  call temp:= `encoded`(v14) @signature `Lretrofit2/http/QueryMap;.encoded:()Z` @kind interface;
  #L496488.  v14:= temp;
  #L49648a.  call `<init>`(v13, v0, v11, v12, v14) @signature `Lretrofit2/ParameterHandler$QueryMap;.<init>:(Ljava/lang/reflect/Method;ILretrofit2/Converter;Z)V` @kind direct;
  #L496490.  return v13 @kind object;
  #L496492.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496496.  v13:= new `java.lang.StringBuilder`;
  #L49649a.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4964a0.  v14:= "@QueryMap keys must be of type String: " @kind object;
  #L4964a4.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4964aa.  call temp:= `append`(v13, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4964b0.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4964b6.  v13:= temp @kind object;
  #L4964b8.  v14:= new `java.lang.Object`[v5];
  #L4964bc.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4964c2.  v11:= temp @kind object;
  #L4964c4.  throw v11;
  #L4964c6.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4964ca.  v13:= new `java.lang.Object`[v5];
  #L4964ce.  call temp:= `parameterError`(v12, v11, v7, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4964d4.  v11:= temp @kind object;
  #L4964d6.  throw v11;
  #L4964d8.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4964dc.  v13:= new `java.lang.Object`[v5];
  #L4964e0.  v14:= "@QueryMap parameter type must be Map." @kind object;
  #L4964e4.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4964ea.  v11:= temp @kind object;
  #L4964ec.  throw v11;
  #L4964ee.  v2:= instanceof @variable v14 @type ^`retrofit2.http.Header` @kind boolean;
  #L4964f2.  if v2 == 0 then goto L4965f4;
  #L4964f6.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L4964fc.  v14:= (`retrofit2.http.Header`) v14 @kind object;
  #L496500.  call temp:= `value`(v14) @signature `Lretrofit2/http/Header;.value:()Ljava/lang/String;` @kind interface;
  #L496506.  v14:= temp @kind object;
  #L496508.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L49650e.  v0:= temp @kind object;
  #L496510.  v1:= constclass @type ^`java.lang.Iterable` @kind object;
  #L496514.  call temp:= `isAssignableFrom`(v1, v0) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L49651a.  v1:= temp;
  #L49651c.  if v1 == 0 then goto L4965a0;
  #L496520.  v1:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L496524.  if v1 == 0 then goto L496554;
  #L496528.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L49652c.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L496532.  v11:= temp @kind object;
  #L496534.  v12:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L496538.  call temp:= `stringConverter`(v12, v11, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L49653e.  v11:= temp @kind object;
  #L496540.  v12:= new `retrofit2.ParameterHandler$Header`;
  #L496544.  call `<init>`(v12, v14, v11) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L49654a.  call temp:= `iterable`(v12) @signature `Lretrofit2/ParameterHandler;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L496550.  v11:= temp @kind object;
  #L496552.  return v11 @kind object;
  #L496554.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496558.  v13:= new `java.lang.StringBuilder`;
  #L49655c.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L496562.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L496568.  v14:= temp @kind object;
  #L49656a.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496570.  call temp:= `append`(v13, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496576.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L49657c.  v14:= temp @kind object;
  #L49657e.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496584.  call temp:= `append`(v13, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49658a.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L496590.  v13:= temp @kind object;
  #L496592.  v14:= new `java.lang.Object`[v5];
  #L496596.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L49659c.  v11:= temp @kind object;
  #L49659e.  throw v11;
  #L4965a0.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L4965a6.  v11:= temp;
  #L4965a8.  if v11 == 0 then goto L4965dc;
  #L4965ac.  call temp:= `getComponentType`(v0) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L4965b2.  v11:= temp @kind object;
  #L4965b4.  call temp:= `boxIfPrimitive`(v11) @signature `Lretrofit2/RequestFactory$Builder;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L4965ba.  v11:= temp @kind object;
  #L4965bc.  v12:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L4965c0.  call temp:= `stringConverter`(v12, v11, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L4965c6.  v11:= temp @kind object;
  #L4965c8.  v12:= new `retrofit2.ParameterHandler$Header`;
  #L4965cc.  call `<init>`(v12, v14, v11) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L4965d2.  call temp:= `array`(v12) @signature `Lretrofit2/ParameterHandler;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L4965d8.  v11:= temp @kind object;
  #L4965da.  return v11 @kind object;
  #L4965dc.  v11:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L4965e0.  call temp:= `stringConverter`(v11, v12, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L4965e6.  v11:= temp @kind object;
  #L4965e8.  v12:= new `retrofit2.ParameterHandler$Header`;
  #L4965ec.  call `<init>`(v12, v14, v11) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L4965f2.  return v12 @kind object;
  #L4965f4.  v2:= instanceof @variable v14 @type ^`retrofit2.http.HeaderMap` @kind boolean;
  #L4965f8.  if v2 == 0 then goto L4966d6;
  #L4965fc.  v14:= constclass @type ^`okhttp3.Headers` @kind object;
  #L496600.  if v12 != v14 then goto L496614;
  #L496604.  v12:= new `retrofit2.ParameterHandler$Headers`;
  #L496608.  v13:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L49660c.  call `<init>`(v12, v13, v11) @signature `Lretrofit2/ParameterHandler$Headers;.<init>:(Ljava/lang/reflect/Method;I)V` @kind direct;
  #L496612.  return v12 @kind object;
  #L496614.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L49661a.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L496620.  v14:= temp @kind object;
  #L496622.  v1:= constclass @type ^`java.util.Map` @kind object;
  #L496626.  call temp:= `isAssignableFrom`(v1, v14) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L49662c.  v1:= temp;
  #L49662e.  if v1 == 0 then goto L4966c0;
  #L496632.  v1:= constclass @type ^`java.util.Map` @kind object;
  #L496636.  call temp:= `getSupertype`(v12, v14, v1) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L49663c.  v12:= temp @kind object;
  #L49663e.  v14:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L496642.  if v14 == 0 then goto L4966ae;
  #L496646.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L49664a.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L496650.  v14:= temp @kind object;
  #L496652.  if v0 != v14 then goto L49667a;
  #L496656.  call temp:= `getParameterUpperBound`(v4, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L49665c.  v12:= temp @kind object;
  #L49665e.  v14:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L496662.  call temp:= `stringConverter`(v14, v12, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L496668.  v12:= temp @kind object;
  #L49666a.  v13:= new `retrofit2.ParameterHandler$HeaderMap`;
  #L49666e.  v14:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496672.  call `<init>`(v13, v14, v11, v12) @signature `Lretrofit2/ParameterHandler$HeaderMap;.<init>:(Ljava/lang/reflect/Method;ILretrofit2/Converter;)V` @kind direct;
  #L496678.  return v13 @kind object;
  #L49667a.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L49667e.  v13:= new `java.lang.StringBuilder`;
  #L496682.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L496688.  v0:= "@HeaderMap keys must be of type String: " @kind object;
  #L49668c.  call temp:= `append`(v13, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496692.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496698.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49669e.  v13:= temp @kind object;
  #L4966a0.  v14:= new `java.lang.Object`[v5];
  #L4966a4.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4966aa.  v11:= temp @kind object;
  #L4966ac.  throw v11;
  #L4966ae.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4966b2.  v13:= new `java.lang.Object`[v5];
  #L4966b6.  call temp:= `parameterError`(v12, v11, v7, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4966bc.  v11:= temp @kind object;
  #L4966be.  throw v11;
  #L4966c0.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4966c4.  v13:= new `java.lang.Object`[v5];
  #L4966c8.  v14:= "@HeaderMap parameter type must be Map." @kind object;
  #L4966cc.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4966d2.  v11:= temp @kind object;
  #L4966d4.  throw v11;
  #L4966d6.  v2:= instanceof @variable v14 @type ^`retrofit2.http.Field` @kind boolean;
  #L4966da.  if v2 == 0 then goto L496806;
  #L4966de.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L4966e4.  v0:= v10.`retrofit2.RequestFactory$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L4966e8.  if v0 == 0 then goto L4967f0;
  #L4966ec.  v14:= (`retrofit2.http.Field`) v14 @kind object;
  #L4966f0.  call temp:= `value`(v14) @signature `Lretrofit2/http/Field;.value:()Ljava/lang/String;` @kind interface;
  #L4966f6.  v0:= temp @kind object;
  #L4966f8.  call temp:= `encoded`(v14) @signature `Lretrofit2/http/Field;.encoded:()Z` @kind interface;
  #L4966fe.  v14:= temp;
  #L496700.  v10.`retrofit2.RequestFactory$Builder.gotField` @type ^`boolean` := v4 @kind boolean;
  #L496704.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L49670a.  v1:= temp @kind object;
  #L49670c.  v2:= constclass @type ^`java.lang.Iterable` @kind object;
  #L496710.  call temp:= `isAssignableFrom`(v2, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L496716.  v2:= temp;
  #L496718.  if v2 == 0 then goto L49679c;
  #L49671c.  v2:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L496720.  if v2 == 0 then goto L496750;
  #L496724.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L496728.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L49672e.  v11:= temp @kind object;
  #L496730.  v12:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L496734.  call temp:= `stringConverter`(v12, v11, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L49673a.  v11:= temp @kind object;
  #L49673c.  v12:= new `retrofit2.ParameterHandler$Field`;
  #L496740.  call `<init>`(v12, v0, v11, v14) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L496746.  call temp:= `iterable`(v12) @signature `Lretrofit2/ParameterHandler;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L49674c.  v11:= temp @kind object;
  #L49674e.  return v11 @kind object;
  #L496750.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496754.  v13:= new `java.lang.StringBuilder`;
  #L496758.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49675e.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L496764.  v14:= temp @kind object;
  #L496766.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49676c.  call temp:= `append`(v13, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496772.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L496778.  v14:= temp @kind object;
  #L49677a.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496780.  call temp:= `append`(v13, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496786.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49678c.  v13:= temp @kind object;
  #L49678e.  v14:= new `java.lang.Object`[v5];
  #L496792.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496798.  v11:= temp @kind object;
  #L49679a.  throw v11;
  #L49679c.  call temp:= `isArray`(v1) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L4967a2.  v11:= temp;
  #L4967a4.  if v11 == 0 then goto L4967d8;
  #L4967a8.  call temp:= `getComponentType`(v1) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L4967ae.  v11:= temp @kind object;
  #L4967b0.  call temp:= `boxIfPrimitive`(v11) @signature `Lretrofit2/RequestFactory$Builder;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L4967b6.  v11:= temp @kind object;
  #L4967b8.  v12:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L4967bc.  call temp:= `stringConverter`(v12, v11, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L4967c2.  v11:= temp @kind object;
  #L4967c4.  v12:= new `retrofit2.ParameterHandler$Field`;
  #L4967c8.  call `<init>`(v12, v0, v11, v14) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L4967ce.  call temp:= `array`(v12) @signature `Lretrofit2/ParameterHandler;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L4967d4.  v11:= temp @kind object;
  #L4967d6.  return v11 @kind object;
  #L4967d8.  v11:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L4967dc.  call temp:= `stringConverter`(v11, v12, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L4967e2.  v11:= temp @kind object;
  #L4967e4.  v12:= new `retrofit2.ParameterHandler$Field`;
  #L4967e8.  call `<init>`(v12, v0, v11, v14) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L4967ee.  return v12 @kind object;
  #L4967f0.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4967f4.  v13:= new `java.lang.Object`[v5];
  #L4967f8.  v14:= "@Field parameters can only be used with form encoding." @kind object;
  #L4967fc.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496802.  v11:= temp @kind object;
  #L496804.  throw v11;
  #L496806.  v2:= instanceof @variable v14 @type ^`retrofit2.http.FieldMap` @kind boolean;
  #L49680a.  if v2 == 0 then goto L4968fe;
  #L49680e.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L496814.  v1:= v10.`retrofit2.RequestFactory$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L496818.  if v1 == 0 then goto L4968e8;
  #L49681c.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L496822.  v1:= temp @kind object;
  #L496824.  v2:= constclass @type ^`java.util.Map` @kind object;
  #L496828.  call temp:= `isAssignableFrom`(v2, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L49682e.  v2:= temp;
  #L496830.  if v2 == 0 then goto L4968d2;
  #L496834.  v2:= constclass @type ^`java.util.Map` @kind object;
  #L496838.  call temp:= `getSupertype`(v12, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L49683e.  v12:= temp @kind object;
  #L496840.  v1:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L496844.  if v1 == 0 then goto L4968c0;
  #L496848.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L49684c.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L496852.  v1:= temp @kind object;
  #L496854.  if v0 != v1 then goto L49688c;
  #L496858.  call temp:= `getParameterUpperBound`(v4, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L49685e.  v12:= temp @kind object;
  #L496860.  v0:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L496864.  call temp:= `stringConverter`(v0, v12, v13) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L49686a.  v12:= temp @kind object;
  #L49686c.  v10.`retrofit2.RequestFactory$Builder.gotField` @type ^`boolean` := v4 @kind boolean;
  #L496870.  v13:= new `retrofit2.ParameterHandler$FieldMap`;
  #L496874.  v0:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496878.  v14:= (`retrofit2.http.FieldMap`) v14 @kind object;
  #L49687c.  call temp:= `encoded`(v14) @signature `Lretrofit2/http/FieldMap;.encoded:()Z` @kind interface;
  #L496882.  v14:= temp;
  #L496884.  call `<init>`(v13, v0, v11, v12, v14) @signature `Lretrofit2/ParameterHandler$FieldMap;.<init>:(Ljava/lang/reflect/Method;ILretrofit2/Converter;Z)V` @kind direct;
  #L49688a.  return v13 @kind object;
  #L49688c.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496890.  v13:= new `java.lang.StringBuilder`;
  #L496894.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49689a.  v14:= "@FieldMap keys must be of type String: " @kind object;
  #L49689e.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4968a4.  call temp:= `append`(v13, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4968aa.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4968b0.  v13:= temp @kind object;
  #L4968b2.  v14:= new `java.lang.Object`[v5];
  #L4968b6.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4968bc.  v11:= temp @kind object;
  #L4968be.  throw v11;
  #L4968c0.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4968c4.  v13:= new `java.lang.Object`[v5];
  #L4968c8.  call temp:= `parameterError`(v12, v11, v7, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4968ce.  v11:= temp @kind object;
  #L4968d0.  throw v11;
  #L4968d2.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4968d6.  v13:= new `java.lang.Object`[v5];
  #L4968da.  v14:= "@FieldMap parameter type must be Map." @kind object;
  #L4968de.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4968e4.  v11:= temp @kind object;
  #L4968e6.  throw v11;
  #L4968e8.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4968ec.  v13:= new `java.lang.Object`[v5];
  #L4968f0.  v14:= "@FieldMap parameters can only be used with form encoding." @kind object;
  #L4968f4.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4968fa.  v11:= temp @kind object;
  #L4968fc.  throw v11;
  #L4968fe.  v2:= instanceof @variable v14 @type ^`retrofit2.http.Part` @kind boolean;
  #L496902.  if v2 == 0 then goto L496c1a;
  #L496906.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L49690c.  v0:= v10.`retrofit2.RequestFactory$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L496910.  if v0 == 0 then goto L496c04;
  #L496914.  v14:= (`retrofit2.http.Part`) v14 @kind object;
  #L496918.  v10.`retrofit2.RequestFactory$Builder.gotPart` @type ^`boolean` := v4 @kind boolean;
  #L49691c.  call temp:= `value`(v14) @signature `Lretrofit2/http/Part;.value:()Ljava/lang/String;` @kind interface;
  #L496922.  v0:= temp @kind object;
  #L496924.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L49692a.  v2:= temp @kind object;
  #L49692c.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L496932.  v7:= temp;
  #L496934.  if v7 == 0 then goto L496a44;
  #L496938.  v13:= constclass @type ^`java.lang.Iterable` @kind object;
  #L49693c.  call temp:= `isAssignableFrom`(v13, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L496942.  v13:= temp;
  #L496944.  v14:= "@Part annotation must supply a name or use MultipartBody.Part parameter type." @kind object;
  #L496948.  if v13 == 0 then goto L4969e0;
  #L49694c.  v13:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L496950.  if v13 == 0 then goto L496994;
  #L496954.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L496958.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L49695e.  v12:= temp @kind object;
  #L496960.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L496966.  v12:= temp @kind object;
  #L496968.  call temp:= `isAssignableFrom`(v1, v12) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L49696e.  v12:= temp;
  #L496970.  if v12 == 0 then goto L496982;
  #L496974.  v11:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L496978.  call temp:= `iterable`(v11) @signature `Lretrofit2/ParameterHandler;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L49697e.  v11:= temp @kind object;
  #L496980.  return v11 @kind object;
  #L496982.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496986.  v13:= new `java.lang.Object`[v5];
  #L49698a.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496990.  v11:= temp @kind object;
  #L496992.  throw v11;
  #L496994.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496998.  v13:= new `java.lang.StringBuilder`;
  #L49699c.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4969a2.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L4969a8.  v14:= temp @kind object;
  #L4969aa.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4969b0.  call temp:= `append`(v13, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4969b6.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L4969bc.  v14:= temp @kind object;
  #L4969be.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4969c4.  call temp:= `append`(v13, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4969ca.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4969d0.  v13:= temp @kind object;
  #L4969d2.  v14:= new `java.lang.Object`[v5];
  #L4969d6.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4969dc.  v11:= temp @kind object;
  #L4969de.  throw v11;
  #L4969e0.  call temp:= `isArray`(v2) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L4969e6.  v12:= temp;
  #L4969e8.  if v12 == 0 then goto L496a20;
  #L4969ec.  call temp:= `getComponentType`(v2) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L4969f2.  v12:= temp @kind object;
  #L4969f4.  call temp:= `isAssignableFrom`(v1, v12) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L4969fa.  v12:= temp;
  #L4969fc.  if v12 == 0 then goto L496a0e;
  #L496a00.  v11:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L496a04.  call temp:= `array`(v11) @signature `Lretrofit2/ParameterHandler;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L496a0a.  v11:= temp @kind object;
  #L496a0c.  return v11 @kind object;
  #L496a0e.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496a12.  v13:= new `java.lang.Object`[v5];
  #L496a16.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496a1c.  v11:= temp @kind object;
  #L496a1e.  throw v11;
  #L496a20.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L496a26.  v12:= temp;
  #L496a28.  if v12 == 0 then goto L496a32;
  #L496a2c.  v11:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L496a30.  return v11 @kind object;
  #L496a32.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496a36.  v13:= new `java.lang.Object`[v5];
  #L496a3a.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496a40.  v11:= temp @kind object;
  #L496a42.  throw v11;
  #L496a44.  v7:= 4I;
  #L496a46.  v7:= new `java.lang.String`[v7];
  #L496a4a.  v8:= "Content-Disposition" @kind object;
  #L496a4e.  v7[v5]:= v8 @kind object;
  #L496a52.  v8:= new `java.lang.StringBuilder`;
  #L496a56.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L496a5c.  v9:= "form-data; name=\"" @kind object;
  #L496a60.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496a66.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496a6c.  v0:= "\"" @kind object;
  #L496a70.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496a76.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L496a7c.  v0:= temp @kind object;
  #L496a7e.  v7[v4]:= v0 @kind object;
  #L496a82.  v0:= 2I;
  #L496a84.  v4:= "Content-Transfer-Encoding" @kind object;
  #L496a88.  v7[v0]:= v4 @kind object;
  #L496a8c.  v0:= 3I;
  #L496a8e.  call temp:= `encoding`(v14) @signature `Lretrofit2/http/Part;.encoding:()Ljava/lang/String;` @kind interface;
  #L496a94.  v14:= temp @kind object;
  #L496a96.  v7[v0]:= v14 @kind object;
  #L496a9a.  call temp:= `of`(v7) @signature `Lokhttp3/Headers;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind static;
  #L496aa0.  v14:= temp @kind object;
  #L496aa2.  v0:= constclass @type ^`java.lang.Iterable` @kind object;
  #L496aa6.  call temp:= `isAssignableFrom`(v0, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L496aac.  v0:= temp;
  #L496aae.  v4:= "@Part parameters using the MultipartBody.Part must not include a part name in the annotation." @kind object;
  #L496ab2.  if v0 == 0 then goto L496b64;
  #L496ab6.  v0:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L496aba.  if v0 == 0 then goto L496b18;
  #L496abe.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L496ac2.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L496ac8.  v12:= temp @kind object;
  #L496aca.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L496ad0.  v0:= temp @kind object;
  #L496ad2.  call temp:= `isAssignableFrom`(v1, v0) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L496ad8.  v0:= temp;
  #L496ada.  if v0 != 0 then goto L496b06;
  #L496ade.  v0:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L496ae2.  v1:= v10.`retrofit2.RequestFactory$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L496ae6.  call temp:= `requestBodyConverter`(v0, v12, v13, v1) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L496aec.  v12:= temp @kind object;
  #L496aee.  v13:= new `retrofit2.ParameterHandler$Part`;
  #L496af2.  v0:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496af6.  call `<init>`(v13, v0, v11, v14, v12) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Ljava/lang/reflect/Method;ILokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L496afc.  call temp:= `iterable`(v13) @signature `Lretrofit2/ParameterHandler;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L496b02.  v11:= temp @kind object;
  #L496b04.  return v11 @kind object;
  #L496b06.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496b0a.  v13:= new `java.lang.Object`[v5];
  #L496b0e.  call temp:= `parameterError`(v12, v11, v4, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496b14.  v11:= temp @kind object;
  #L496b16.  throw v11;
  #L496b18.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496b1c.  v13:= new `java.lang.StringBuilder`;
  #L496b20.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L496b26.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L496b2c.  v14:= temp @kind object;
  #L496b2e.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496b34.  call temp:= `append`(v13, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496b3a.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L496b40.  v14:= temp @kind object;
  #L496b42.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496b48.  call temp:= `append`(v13, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496b4e.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L496b54.  v13:= temp @kind object;
  #L496b56.  v14:= new `java.lang.Object`[v5];
  #L496b5a.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496b60.  v11:= temp @kind object;
  #L496b62.  throw v11;
  #L496b64.  call temp:= `isArray`(v2) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L496b6a.  v0:= temp;
  #L496b6c.  if v0 == 0 then goto L496bc6;
  #L496b70.  call temp:= `getComponentType`(v2) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L496b76.  v12:= temp @kind object;
  #L496b78.  call temp:= `boxIfPrimitive`(v12) @signature `Lretrofit2/RequestFactory$Builder;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L496b7e.  v12:= temp @kind object;
  #L496b80.  call temp:= `isAssignableFrom`(v1, v12) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L496b86.  v0:= temp;
  #L496b88.  if v0 != 0 then goto L496bb4;
  #L496b8c.  v0:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L496b90.  v1:= v10.`retrofit2.RequestFactory$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L496b94.  call temp:= `requestBodyConverter`(v0, v12, v13, v1) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L496b9a.  v12:= temp @kind object;
  #L496b9c.  v13:= new `retrofit2.ParameterHandler$Part`;
  #L496ba0.  v0:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496ba4.  call `<init>`(v13, v0, v11, v14, v12) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Ljava/lang/reflect/Method;ILokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L496baa.  call temp:= `array`(v13) @signature `Lretrofit2/ParameterHandler;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L496bb0.  v11:= temp @kind object;
  #L496bb2.  return v11 @kind object;
  #L496bb4.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496bb8.  v13:= new `java.lang.Object`[v5];
  #L496bbc.  call temp:= `parameterError`(v12, v11, v4, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496bc2.  v11:= temp @kind object;
  #L496bc4.  throw v11;
  #L496bc6.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L496bcc.  v0:= temp;
  #L496bce.  if v0 != 0 then goto L496bf2;
  #L496bd2.  v0:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L496bd6.  v1:= v10.`retrofit2.RequestFactory$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L496bda.  call temp:= `requestBodyConverter`(v0, v12, v13, v1) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L496be0.  v12:= temp @kind object;
  #L496be2.  v13:= new `retrofit2.ParameterHandler$Part`;
  #L496be6.  v0:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496bea.  call `<init>`(v13, v0, v11, v14, v12) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Ljava/lang/reflect/Method;ILokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L496bf0.  return v13 @kind object;
  #L496bf2.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496bf6.  v13:= new `java.lang.Object`[v5];
  #L496bfa.  call temp:= `parameterError`(v12, v11, v4, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496c00.  v11:= temp @kind object;
  #L496c02.  throw v11;
  #L496c04.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496c08.  v13:= new `java.lang.Object`[v5];
  #L496c0c.  v14:= "@Part parameters can only be used with multipart encoding." @kind object;
  #L496c10.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496c16.  v11:= temp @kind object;
  #L496c18.  throw v11;
  #L496c1a.  v2:= instanceof @variable v14 @type ^`retrofit2.http.PartMap` @kind boolean;
  #L496c1e.  if v2 == 0 then goto L496d40;
  #L496c22.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L496c28.  v2:= v10.`retrofit2.RequestFactory$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L496c2c.  if v2 == 0 then goto L496d2a;
  #L496c30.  v10.`retrofit2.RequestFactory$Builder.gotPart` @type ^`boolean` := v4 @kind boolean;
  #L496c34.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L496c3a.  v2:= temp @kind object;
  #L496c3c.  v3:= constclass @type ^`java.util.Map` @kind object;
  #L496c40.  call temp:= `isAssignableFrom`(v3, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L496c46.  v3:= temp;
  #L496c48.  if v3 == 0 then goto L496d14;
  #L496c4c.  v3:= constclass @type ^`java.util.Map` @kind object;
  #L496c50.  call temp:= `getSupertype`(v12, v2, v3) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L496c56.  v12:= temp @kind object;
  #L496c58.  v2:= instanceof @variable v12 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L496c5c.  if v2 == 0 then goto L496d02;
  #L496c60.  v12:= (`java.lang.reflect.ParameterizedType`) v12 @kind object;
  #L496c64.  call temp:= `getParameterUpperBound`(v5, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L496c6a.  v2:= temp @kind object;
  #L496c6c.  if v0 != v2 then goto L496cce;
  #L496c70.  call temp:= `getParameterUpperBound`(v4, v12) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L496c76.  v12:= temp @kind object;
  #L496c78.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L496c7e.  v0:= temp @kind object;
  #L496c80.  call temp:= `isAssignableFrom`(v1, v0) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L496c86.  v0:= temp;
  #L496c88.  if v0 != 0 then goto L496cb8;
  #L496c8c.  v0:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L496c90.  v1:= v10.`retrofit2.RequestFactory$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L496c94.  call temp:= `requestBodyConverter`(v0, v12, v13, v1) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L496c9a.  v12:= temp @kind object;
  #L496c9c.  v14:= (`retrofit2.http.PartMap`) v14 @kind object;
  #L496ca0.  v13:= new `retrofit2.ParameterHandler$PartMap`;
  #L496ca4.  v0:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496ca8.  call temp:= `encoding`(v14) @signature `Lretrofit2/http/PartMap;.encoding:()Ljava/lang/String;` @kind interface;
  #L496cae.  v14:= temp @kind object;
  #L496cb0.  call `<init>`(v13, v0, v11, v12, v14) @signature `Lretrofit2/ParameterHandler$PartMap;.<init>:(Ljava/lang/reflect/Method;ILretrofit2/Converter;Ljava/lang/String;)V` @kind direct;
  #L496cb6.  return v13 @kind object;
  #L496cb8.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496cbc.  v13:= new `java.lang.Object`[v5];
  #L496cc0.  v14:= "@PartMap values cannot be MultipartBody.Part. Use @Part List<Part> or a different value type instead." @kind object;
  #L496cc4.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496cca.  v11:= temp @kind object;
  #L496ccc.  throw v11;
  #L496cce.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496cd2.  v13:= new `java.lang.StringBuilder`;
  #L496cd6.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L496cdc.  v14:= "@PartMap keys must be of type String: " @kind object;
  #L496ce0.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496ce6.  call temp:= `append`(v13, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496cec.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L496cf2.  v13:= temp @kind object;
  #L496cf4.  v14:= new `java.lang.Object`[v5];
  #L496cf8.  call temp:= `parameterError`(v12, v11, v13, v14) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496cfe.  v11:= temp @kind object;
  #L496d00.  throw v11;
  #L496d02.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496d06.  v13:= new `java.lang.Object`[v5];
  #L496d0a.  call temp:= `parameterError`(v12, v11, v7, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496d10.  v11:= temp @kind object;
  #L496d12.  throw v11;
  #L496d14.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496d18.  v13:= new `java.lang.Object`[v5];
  #L496d1c.  v14:= "@PartMap parameter type must be Map." @kind object;
  #L496d20.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496d26.  v11:= temp @kind object;
  #L496d28.  throw v11;
  #L496d2a.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496d2e.  v13:= new `java.lang.Object`[v5];
  #L496d32.  v14:= "@PartMap parameters can only be used with multipart encoding." @kind object;
  #L496d36.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496d3c.  v11:= temp @kind object;
  #L496d3e.  throw v11;
  #L496d40.  v0:= instanceof @variable v14 @type ^`retrofit2.http.Body` @kind boolean;
  #L496d44.  if v0 == 0 then goto L496dd2;
  #L496d48.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L496d4e.  v14:= v10.`retrofit2.RequestFactory$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L496d52.  if v14 != 0 then goto L496dbc;
  #L496d56.  v14:= v10.`retrofit2.RequestFactory$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L496d5a.  if v14 != 0 then goto L496dbc;
  #L496d5e.  v14:= v10.`retrofit2.RequestFactory$Builder.gotBody` @type ^`boolean` @kind boolean;
  #L496d62.  if v14 != 0 then goto L496da6;
  #L496d66.  v14:= v10.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L496d6a.  v0:= v10.`retrofit2.RequestFactory$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L496d6e.  call temp:= `requestBodyConverter`(v14, v12, v13, v0) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L496d74.  v12:= temp @kind object;
  #L496d76.  v10.`retrofit2.RequestFactory$Builder.gotBody` @type ^`boolean` := v4 @kind boolean;
  #L496d7a.  v13:= new `retrofit2.ParameterHandler$Body`;
  #L496d7e.  v14:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496d82.  call `<init>`(v13, v14, v11, v12) @signature `Lretrofit2/ParameterHandler$Body;.<init>:(Ljava/lang/reflect/Method;ILretrofit2/Converter;)V` @kind direct;
  #L496d88.  return v13 @kind object;
  #L496d8a.  v13:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L496d8c.  v14:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496d90.  v0:= new `java.lang.Object`[v4];
  #L496d94.  v0[v5]:= v12 @kind object;
  #L496d98.  v12:= "Unable to create @Body converter for %s" @kind object;
  #L496d9c.  call temp:= `parameterError`(v14, v13, v11, v12, v0) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;Ljava/lang/Throwable;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496da2.  v11:= temp @kind object;
  #L496da4.  throw v11;
  #L496da6.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496daa.  v13:= new `java.lang.Object`[v5];
  #L496dae.  v14:= "Multiple @Body method annotations found." @kind object;
  #L496db2.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496db8.  v11:= temp @kind object;
  #L496dba.  throw v11;
  #L496dbc.  v12:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496dc0.  v13:= new `java.lang.Object`[v5];
  #L496dc4.  v14:= "@Body parameters cannot be used with form or multi-part encoding." @kind object;
  #L496dc8.  call temp:= `parameterError`(v12, v11, v14, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496dce.  v11:= temp @kind object;
  #L496dd0.  throw v11;
  #L496dd2.  v13:= instanceof @variable v14 @type ^`retrofit2.http.Tag` @kind boolean;
  #L496dd6.  if v13 == 0 then goto L496e80;
  #L496dda.  call `validateResolvableType`(v10, v11, v12) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @kind direct;
  #L496de0.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L496de6.  v12:= temp @kind object;
  #L496de8.  v13:= v11 + -1;
  #L496dec.  if v13 < 0 then goto L496e74;
  #L496df0.  v14:= v10.`retrofit2.RequestFactory$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] @kind object;
  #L496df4.  v14:= v14[v13] @kind object;
  #L496df8.  v0:= instanceof @variable v14 @type ^`retrofit2.ParameterHandler$Tag` @kind boolean;
  #L496dfc.  if v0 == 0 then goto L496e6e;
  #L496e00.  v14:= (`retrofit2.ParameterHandler$Tag`) v14 @kind object;
  #L496e04.  v14:= v14.`retrofit2.ParameterHandler$Tag.cls` @type ^`java.lang.Class` @kind object;
  #L496e08.  call temp:= `equals`(v14, v12) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L496e0e.  v14:= temp;
  #L496e10.  if v14 != 0 then goto L496e16;
  #L496e14.  goto L496e6e;
  #L496e16.  v14:= v10.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496e1a.  v0:= new `java.lang.StringBuilder`;
  #L496e1e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L496e24.  v1:= "@Tag type " @kind object;
  #L496e28.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496e2e.  call temp:= `getName`(v12) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L496e34.  v12:= temp @kind object;
  #L496e36.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496e3c.  v12:= " is duplicate of parameter #" @kind object;
  #L496e40.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496e46.  v13:= v13 + v4 @kind int;
  #L496e48.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L496e4e.  v12:= " and would always overwrite its value." @kind object;
  #L496e52.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L496e58.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L496e5e.  v12:= temp @kind object;
  #L496e60.  v13:= new `java.lang.Object`[v5];
  #L496e64.  call temp:= `parameterError`(v14, v11, v12, v13) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496e6a.  v11:= temp @kind object;
  #L496e6c.  throw v11;
  #L496e6e.  v13:= v13 + -1;
  #L496e72.  goto L496dec;
  #L496e74.  v11:= new `retrofit2.ParameterHandler$Tag`;
  #L496e78.  call `<init>`(v11, v12) @signature `Lretrofit2/ParameterHandler$Tag;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L496e7e.  return v11 @kind object;
  #L496e80.  v11:= 0I;
  #L496e82.  return v11 @kind object;
  catch `java.lang.RuntimeException` @[L496d66..L496d76] goto L496d8a;
}
procedure `java.util.Set` `parsePathParameters`(`java.lang.String` v2 @kind object) @signature `Lretrofit2/RequestFactory$Builder;.parsePathParameters:(Ljava/lang/String;)Ljava/util/Set;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L495e00.  v0:= `@@retrofit2.RequestFactory$Builder.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L495e04.  call temp:= `matcher`(v0, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L495e0a.  v2:= temp @kind object;
  #L495e0c.  v0:= new `java.util.LinkedHashSet`;
  #L495e10.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L495e16.  call temp:= `find`(v2) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L495e1c.  v1:= temp;
  #L495e1e.  if v1 == 0 then goto L495e34;
  #L495e22.  v1:= 1I;
  #L495e24.  call temp:= `group`(v2, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L495e2a.  v1:= temp @kind object;
  #L495e2c.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L495e32.  goto L495e16;
  #L495e34.  return v0 @kind object;
}
procedure `void` `validatePathName`(`retrofit2.RequestFactory$Builder` v5 @kind this, `int` v6 , `java.lang.String` v7 @kind object) @signature `Lretrofit2/RequestFactory$Builder;.validatePathName:(ILjava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L497340.  v0:= `@@retrofit2.RequestFactory$Builder.PARAM_NAME_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L497344.  call temp:= `matcher`(v0, v7) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L49734a.  v0:= temp @kind object;
  #L49734c.  call temp:= `matches`(v0) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L497352.  v0:= temp;
  #L497354.  v1:= 1I;
  #L497356.  v2:= 0I;
  #L497358.  v3:= 2I;
  #L49735a.  if v0 == 0 then goto L497392;
  #L49735e.  v0:= v5.`retrofit2.RequestFactory$Builder.relativeUrlParamNames` @type ^`java.util.Set` @kind object;
  #L497362.  call temp:= `contains`(v0, v7) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L497368.  v0:= temp;
  #L49736a.  if v0 == 0 then goto L497370;
  #L49736e.  return @kind void;
  #L497370.  v0:= v5.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L497374.  v3:= new `java.lang.Object`[v3];
  #L497378.  v4:= v5.`retrofit2.RequestFactory$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L49737c.  v3[v2]:= v4 @kind object;
  #L497380.  v3[v1]:= v7 @kind object;
  #L497384.  v7:= "URL \"%s\" does not contain \"{%s}\"." @kind object;
  #L497388.  call temp:= `parameterError`(v0, v6, v7, v3) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L49738e.  v6:= temp @kind object;
  #L497390.  throw v6;
  #L497392.  v0:= v5.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L497396.  v3:= new `java.lang.Object`[v3];
  #L49739a.  v4:= `@@retrofit2.RequestFactory$Builder.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L49739e.  call temp:= `pattern`(v4) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L4973a4.  v4:= temp @kind object;
  #L4973a6.  v3[v2]:= v4 @kind object;
  #L4973aa.  v3[v1]:= v7 @kind object;
  #L4973ae.  v7:= "@Path parameter name must match %s. Found: %s" @kind object;
  #L4973b2.  call temp:= `parameterError`(v0, v6, v7, v3) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4973b8.  v6:= temp @kind object;
  #L4973ba.  throw v6;
}
procedure `void` `validateResolvableType`(`retrofit2.RequestFactory$Builder` v3 @kind this, `int` v4 , `java.lang.reflect.Type` v5 @kind object) @signature `Lretrofit2/RequestFactory$Builder;.validateResolvableType:(ILjava/lang/reflect/Type;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4973cc.  call temp:= `hasUnresolvableType`(v5) @signature `Lretrofit2/Utils;.hasUnresolvableType:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L4973d2.  v0:= temp;
  #L4973d4.  if v0 != 0 then goto L4973da;
  #L4973d8.  return @kind void;
  #L4973da.  v0:= v3.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L4973de.  v1:= 1I;
  #L4973e0.  v1:= new `java.lang.Object`[v1];
  #L4973e4.  v2:= 0I;
  #L4973e6.  v1[v2]:= v5 @kind object;
  #L4973ea.  v5:= "Parameter type must not include a type variable or wildcard: %s" @kind object;
  #L4973ee.  call temp:= `parameterError`(v0, v4, v5, v1) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4973f4.  v4:= temp @kind object;
  #L4973f6.  throw v4;
}
procedure `retrofit2.RequestFactory` `build`(`retrofit2.RequestFactory$Builder` v8 @kind this) @signature `Lretrofit2/RequestFactory$Builder;.build:()Lretrofit2/RequestFactory;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L496ea4.  v0:= v8.`retrofit2.RequestFactory$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L496ea8.  v1:= length @variable v0;
  #L496eaa.  v2:= 0I;
  #L496eac.  v3:= 0I;
  #L496eae.  if v3 >= v1 then goto L496ec2;
  #L496eb2.  v4:= v0[v3] @kind object;
  #L496eb6.  call `parseMethodAnnotation`(v8, v4) @signature `Lretrofit2/RequestFactory$Builder;.parseMethodAnnotation:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L496ebc.  v3:= v3 + 1;
  #L496ec0.  goto L496eae;
  #L496ec2.  v0:= v8.`retrofit2.RequestFactory$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L496ec6.  if v0 == 0 then goto L49701c;
  #L496eca.  v0:= v8.`retrofit2.RequestFactory$Builder.hasBody` @type ^`boolean` @kind boolean;
  #L496ece.  if v0 != 0 then goto L496f10;
  #L496ed2.  v0:= v8.`retrofit2.RequestFactory$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L496ed6.  if v0 != 0 then goto L496efa;
  #L496eda.  v0:= v8.`retrofit2.RequestFactory$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L496ede.  if v0 != 0 then goto L496ee4;
  #L496ee2.  goto L496f10;
  #L496ee4.  v0:= v8.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496ee8.  v1:= new `java.lang.Object`[v2];
  #L496eec.  v2:= "FormUrlEncoded can only be specified on HTTP methods with request body (e.g., @POST)." @kind object;
  #L496ef0.  call temp:= `methodError`(v0, v2, v1) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496ef6.  v0:= temp @kind object;
  #L496ef8.  throw v0;
  #L496efa.  v0:= v8.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496efe.  v1:= new `java.lang.Object`[v2];
  #L496f02.  v2:= "Multipart can only be specified on HTTP methods with request body (e.g., @POST)." @kind object;
  #L496f06.  call temp:= `methodError`(v0, v2, v1) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496f0c.  v0:= temp @kind object;
  #L496f0e.  throw v0;
  #L496f10.  v0:= v8.`retrofit2.RequestFactory$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] @kind object;
  #L496f14.  v0:= length @variable v0;
  #L496f16.  v1:= new `retrofit2.ParameterHandler`[v0];
  #L496f1a.  v8.`retrofit2.RequestFactory$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] := v1 @kind object;
  #L496f1e.  v1:= v0 + -1;
  #L496f22.  v3:= 0I;
  #L496f24.  v4:= 1I;
  #L496f26.  if v3 >= v0 then goto L496f58;
  #L496f2a.  v5:= v8.`retrofit2.RequestFactory$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] @kind object;
  #L496f2e.  v6:= v8.`retrofit2.RequestFactory$Builder.parameterTypes` @type ^`java.lang.reflect.Type`[] @kind object;
  #L496f32.  v6:= v6[v3] @kind object;
  #L496f36.  v7:= v8.`retrofit2.RequestFactory$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] @kind object;
  #L496f3a.  v7:= v7[v3] @kind object;
  #L496f3e.  if v3 != v1 then goto L496f44;
  #L496f42.  goto L496f46;
  #L496f44.  v4:= 0I;
  #L496f46.  call temp:= `parseParameter`(v8, v3, v6, v7, v4) @signature `Lretrofit2/RequestFactory$Builder;.parseParameter:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Z)Lretrofit2/ParameterHandler;` @kind direct;
  #L496f4c.  v4:= temp @kind object;
  #L496f4e.  v5[v3]:= v4 @kind object;
  #L496f52.  v3:= v3 + 1;
  #L496f56.  goto L496f24;
  #L496f58.  v0:= v8.`retrofit2.RequestFactory$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L496f5c.  if v0 != 0 then goto L496f88;
  #L496f60.  v0:= v8.`retrofit2.RequestFactory$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L496f64.  if v0 == 0 then goto L496f6a;
  #L496f68.  goto L496f88;
  #L496f6a.  v0:= v8.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496f6e.  v1:= new `java.lang.Object`[v4];
  #L496f72.  v3:= v8.`retrofit2.RequestFactory$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L496f76.  v1[v2]:= v3 @kind object;
  #L496f7a.  v2:= "Missing either @%s URL or @Url parameter." @kind object;
  #L496f7e.  call temp:= `methodError`(v0, v2, v1) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496f84.  v0:= temp @kind object;
  #L496f86.  throw v0;
  #L496f88.  v0:= v8.`retrofit2.RequestFactory$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L496f8c.  if v0 != 0 then goto L496fc0;
  #L496f90.  v0:= v8.`retrofit2.RequestFactory$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L496f94.  if v0 != 0 then goto L496fc0;
  #L496f98.  v0:= v8.`retrofit2.RequestFactory$Builder.hasBody` @type ^`boolean` @kind boolean;
  #L496f9c.  if v0 != 0 then goto L496fc0;
  #L496fa0.  v0:= v8.`retrofit2.RequestFactory$Builder.gotBody` @type ^`boolean` @kind boolean;
  #L496fa4.  if v0 != 0 then goto L496faa;
  #L496fa8.  goto L496fc0;
  #L496faa.  v0:= v8.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496fae.  v1:= new `java.lang.Object`[v2];
  #L496fb2.  v2:= "Non-body HTTP method cannot contain @Body." @kind object;
  #L496fb6.  call temp:= `methodError`(v0, v2, v1) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496fbc.  v0:= temp @kind object;
  #L496fbe.  throw v0;
  #L496fc0.  v0:= v8.`retrofit2.RequestFactory$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L496fc4.  if v0 == 0 then goto L496fe8;
  #L496fc8.  v0:= v8.`retrofit2.RequestFactory$Builder.gotField` @type ^`boolean` @kind boolean;
  #L496fcc.  if v0 == 0 then goto L496fd2;
  #L496fd0.  goto L496fe8;
  #L496fd2.  v0:= v8.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496fd6.  v1:= new `java.lang.Object`[v2];
  #L496fda.  v2:= "Form-encoded method must contain at least one @Field." @kind object;
  #L496fde.  call temp:= `methodError`(v0, v2, v1) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L496fe4.  v0:= temp @kind object;
  #L496fe6.  throw v0;
  #L496fe8.  v0:= v8.`retrofit2.RequestFactory$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L496fec.  if v0 == 0 then goto L497010;
  #L496ff0.  v0:= v8.`retrofit2.RequestFactory$Builder.gotPart` @type ^`boolean` @kind boolean;
  #L496ff4.  if v0 == 0 then goto L496ffa;
  #L496ff8.  goto L497010;
  #L496ffa.  v0:= v8.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L496ffe.  v1:= new `java.lang.Object`[v2];
  #L497002.  v2:= "Multipart method must contain at least one @Part." @kind object;
  #L497006.  call temp:= `methodError`(v0, v2, v1) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L49700c.  v0:= temp @kind object;
  #L49700e.  throw v0;
  #L497010.  v0:= new `retrofit2.RequestFactory`;
  #L497014.  call `<init>`(v0, v8) @signature `Lretrofit2/RequestFactory;.<init>:(Lretrofit2/RequestFactory$Builder;)V` @kind direct;
  #L49701a.  return v0 @kind object;
  #L49701c.  v0:= v8.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L497020.  v1:= new `java.lang.Object`[v2];
  #L497024.  v2:= "HTTP method annotation is required (e.g., @GET, @POST, etc.)." @kind object;
  #L497028.  call temp:= `methodError`(v0, v2, v1) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L49702e.  v0:= temp @kind object;
  #L497030.  throw v0;
}
