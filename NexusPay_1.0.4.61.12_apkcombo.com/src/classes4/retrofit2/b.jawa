record `retrofit2.b` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1` `retrofit2.b.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `retrofit2.Callback` `retrofit2.b.b` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `java.lang.Throwable` `retrofit2.b.c` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`retrofit2.b` v0 @kind this, `retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1` v1 @kind object, `retrofit2.Callback` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lretrofit2/b;.<init>:(Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall$1;Lretrofit2/Callback;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L492800.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L492806.  v0.`retrofit2.b.a` @type ^`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1` := v1 @kind object;
  #L49280a.  v0.`retrofit2.b.b` @type ^`retrofit2.Callback` := v2 @kind object;
  #L49280e.  v0.`retrofit2.b.c` @type ^`java.lang.Throwable` := v3 @kind object;
  #L492812.  return @kind void;
}
procedure `void` `run`(`retrofit2.b` v3 @kind this) @signature `Lretrofit2/b;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L492824.  v0:= v3.`retrofit2.b.a` @type ^`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1` @kind object;
  #L492828.  v1:= v3.`retrofit2.b.b` @type ^`retrofit2.Callback` @kind object;
  #L49282c.  v2:= v3.`retrofit2.b.c` @type ^`java.lang.Throwable` @kind object;
  #L492830.  call `a`(v0, v1, v2) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall$1;.a:(Lretrofit2/Callback;Ljava/lang/Throwable;)V` @kind virtual;
  #L492836.  return @kind void;
}
