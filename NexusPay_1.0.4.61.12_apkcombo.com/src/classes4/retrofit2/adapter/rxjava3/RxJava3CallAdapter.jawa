record `retrofit2.adapter.rxjava3.RxJava3CallAdapter` @kind class @AccessFlag FINAL extends `retrofit2.CallAdapter` @kind interface {
  `boolean` `retrofit2.adapter.rxjava3.RxJava3CallAdapter.isAsync` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.adapter.rxjava3.RxJava3CallAdapter.isBody` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.adapter.rxjava3.RxJava3CallAdapter.isCompletable` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.adapter.rxjava3.RxJava3CallAdapter.isFlowable` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.adapter.rxjava3.RxJava3CallAdapter.isMaybe` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.adapter.rxjava3.RxJava3CallAdapter.isResult` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.adapter.rxjava3.RxJava3CallAdapter.isSingle` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Type` `retrofit2.adapter.rxjava3.RxJava3CallAdapter.responseType` @AccessFlag PRIVATE_FINAL;
  `io.reactivex.rxjava3.core.Scheduler` `retrofit2.adapter.rxjava3.RxJava3CallAdapter.scheduler` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.adapter.rxjava3.RxJava3CallAdapter` v0 @kind this, `java.lang.reflect.Type` v1 @kind object, `io.reactivex.rxjava3.core.Scheduler` v2 @kind object, `boolean` v3 , `boolean` v4 , `boolean` v5 , `boolean` v6 , `boolean` v7 , `boolean` v8 , `boolean` v9 ) @signature `Lretrofit2/adapter/rxjava3/RxJava3CallAdapter;.<init>:(Ljava/lang/reflect/Type;Lio/reactivex/rxjava3/core/Scheduler;ZZZZZZZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L499ff4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L499ffa.  v0.`retrofit2.adapter.rxjava3.RxJava3CallAdapter.responseType` @type ^`java.lang.reflect.Type` := v1 @kind object;
  #L499ffe.  v0.`retrofit2.adapter.rxjava3.RxJava3CallAdapter.scheduler` @type ^`io.reactivex.rxjava3.core.Scheduler` := v2 @kind object;
  #L49a002.  v0.`retrofit2.adapter.rxjava3.RxJava3CallAdapter.isAsync` @type ^`boolean` := v3 @kind boolean;
  #L49a006.  v0.`retrofit2.adapter.rxjava3.RxJava3CallAdapter.isResult` @type ^`boolean` := v4 @kind boolean;
  #L49a00a.  v0.`retrofit2.adapter.rxjava3.RxJava3CallAdapter.isBody` @type ^`boolean` := v5 @kind boolean;
  #L49a00e.  v0.`retrofit2.adapter.rxjava3.RxJava3CallAdapter.isFlowable` @type ^`boolean` := v6 @kind boolean;
  #L49a012.  v0.`retrofit2.adapter.rxjava3.RxJava3CallAdapter.isSingle` @type ^`boolean` := v7 @kind boolean;
  #L49a016.  v0.`retrofit2.adapter.rxjava3.RxJava3CallAdapter.isMaybe` @type ^`boolean` := v8 @kind boolean;
  #L49a01a.  v0.`retrofit2.adapter.rxjava3.RxJava3CallAdapter.isCompletable` @type ^`boolean` := v9 @kind boolean;
  #L49a01e.  return @kind void;
}
procedure `java.lang.Object` `adapt`(`retrofit2.adapter.rxjava3.RxJava3CallAdapter` v1 @kind this, `retrofit2.Call` v2 @kind object) @signature `Lretrofit2/adapter/rxjava3/RxJava3CallAdapter;.adapt:(Lretrofit2/Call;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L499f1c.  v0:= v1.`retrofit2.adapter.rxjava3.RxJava3CallAdapter.isAsync` @type ^`boolean` @kind boolean;
  #L499f20.  if v0 == 0 then goto L499f30;
  #L499f24.  v0:= new `retrofit2.adapter.rxjava3.CallEnqueueObservable`;
  #L499f28.  call `<init>`(v0, v2) @signature `Lretrofit2/adapter/rxjava3/CallEnqueueObservable;.<init>:(Lretrofit2/Call;)V` @kind direct;
  #L499f2e.  goto L499f3a;
  #L499f30.  v0:= new `retrofit2.adapter.rxjava3.CallExecuteObservable`;
  #L499f34.  call `<init>`(v0, v2) @signature `Lretrofit2/adapter/rxjava3/CallExecuteObservable;.<init>:(Lretrofit2/Call;)V` @kind direct;
  #L499f3a.  v2:= v1.`retrofit2.adapter.rxjava3.RxJava3CallAdapter.isResult` @type ^`boolean` @kind boolean;
  #L499f3e.  if v2 == 0 then goto L499f50;
  #L499f42.  v2:= new `retrofit2.adapter.rxjava3.ResultObservable`;
  #L499f46.  call `<init>`(v2, v0) @signature `Lretrofit2/adapter/rxjava3/ResultObservable;.<init>:(Lio/reactivex/rxjava3/core/Observable;)V` @kind direct;
  #L499f4c.  v0:= v2 @kind object;
  #L499f4e.  goto L499f64;
  #L499f50.  v2:= v1.`retrofit2.adapter.rxjava3.RxJava3CallAdapter.isBody` @type ^`boolean` @kind boolean;
  #L499f54.  if v2 == 0 then goto L499f64;
  #L499f58.  v2:= new `retrofit2.adapter.rxjava3.BodyObservable`;
  #L499f5c.  call `<init>`(v2, v0) @signature `Lretrofit2/adapter/rxjava3/BodyObservable;.<init>:(Lio/reactivex/rxjava3/core/Observable;)V` @kind direct;
  #L499f62.  goto L499f4c;
  #L499f64.  v2:= v1.`retrofit2.adapter.rxjava3.RxJava3CallAdapter.scheduler` @type ^`io.reactivex.rxjava3.core.Scheduler` @kind object;
  #L499f68.  if v2 == 0 then goto L499f74;
  #L499f6c.  call temp:= `subscribeOn`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribeOn:(Lio/reactivex/rxjava3/core/Scheduler;)Lio/reactivex/rxjava3/core/Observable;` @kind virtual;
  #L499f72.  v0:= temp @kind object;
  #L499f74.  v2:= v1.`retrofit2.adapter.rxjava3.RxJava3CallAdapter.isFlowable` @type ^`boolean` @kind boolean;
  #L499f78.  if v2 == 0 then goto L499f8a;
  #L499f7c.  v2:= `@@io.reactivex.rxjava3.core.BackpressureStrategy.LATEST` @type ^`io.reactivex.rxjava3.core.BackpressureStrategy` @kind object;
  #L499f80.  call temp:= `toFlowable`(v0, v2) @signature `Lio/reactivex/rxjava3/core/Observable;.toFlowable:(Lio/reactivex/rxjava3/core/BackpressureStrategy;)Lio/reactivex/rxjava3/core/Flowable;` @kind virtual;
  #L499f86.  v2:= temp @kind object;
  #L499f88.  return v2 @kind object;
  #L499f8a.  v2:= v1.`retrofit2.adapter.rxjava3.RxJava3CallAdapter.isSingle` @type ^`boolean` @kind boolean;
  #L499f8e.  if v2 == 0 then goto L499f9c;
  #L499f92.  call temp:= `singleOrError`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.singleOrError:()Lio/reactivex/rxjava3/core/Single;` @kind virtual;
  #L499f98.  v2:= temp @kind object;
  #L499f9a.  return v2 @kind object;
  #L499f9c.  v2:= v1.`retrofit2.adapter.rxjava3.RxJava3CallAdapter.isMaybe` @type ^`boolean` @kind boolean;
  #L499fa0.  if v2 == 0 then goto L499fae;
  #L499fa4.  call temp:= `singleElement`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.singleElement:()Lio/reactivex/rxjava3/core/Maybe;` @kind virtual;
  #L499faa.  v2:= temp @kind object;
  #L499fac.  return v2 @kind object;
  #L499fae.  v2:= v1.`retrofit2.adapter.rxjava3.RxJava3CallAdapter.isCompletable` @type ^`boolean` @kind boolean;
  #L499fb2.  if v2 == 0 then goto L499fc0;
  #L499fb6.  call temp:= `ignoreElements`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.ignoreElements:()Lio/reactivex/rxjava3/core/Completable;` @kind virtual;
  #L499fbc.  v2:= temp @kind object;
  #L499fbe.  return v2 @kind object;
  #L499fc0.  call temp:= `onAssembly`(v0) @signature `Lio/reactivex/rxjava3/plugins/RxJavaPlugins;.onAssembly:(Lio/reactivex/rxjava3/core/Observable;)Lio/reactivex/rxjava3/core/Observable;` @kind static;
  #L499fc6.  v2:= temp @kind object;
  #L499fc8.  return v2 @kind object;
}
procedure `java.lang.reflect.Type` `responseType`(`retrofit2.adapter.rxjava3.RxJava3CallAdapter` v1 @kind this) @signature `Lretrofit2/adapter/rxjava3/RxJava3CallAdapter;.responseType:()Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L499fdc.  v0:= v1.`retrofit2.adapter.rxjava3.RxJava3CallAdapter.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L499fe0.  return v0 @kind object;
}
