record `retrofit2.adapter.rxjava3.ResultObservable` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.core.Observable` @kind class {
  `io.reactivex.rxjava3.core.Observable` `retrofit2.adapter.rxjava3.ResultObservable.upstream` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.adapter.rxjava3.ResultObservable` v0 @kind this, `io.reactivex.rxjava3.core.Observable` v1 @kind object) @signature `Lretrofit2/adapter/rxjava3/ResultObservable;.<init>:(Lio/reactivex/rxjava3/core/Observable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L499bd0.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/core/Observable;.<init>:()V` @kind direct;
  #L499bd6.  v0.`retrofit2.adapter.rxjava3.ResultObservable.upstream` @type ^`io.reactivex.rxjava3.core.Observable` := v1 @kind object;
  #L499bda.  return @kind void;
}
procedure `void` `subscribeActual`(`retrofit2.adapter.rxjava3.ResultObservable` v2 @kind this, `io.reactivex.rxjava3.core.Observer` v3 @kind object) @signature `Lretrofit2/adapter/rxjava3/ResultObservable;.subscribeActual:(Lio/reactivex/rxjava3/core/Observer;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L499bec.  v0:= v2.`retrofit2.adapter.rxjava3.ResultObservable.upstream` @type ^`io.reactivex.rxjava3.core.Observable` @kind object;
  #L499bf0.  v1:= new `retrofit2.adapter.rxjava3.ResultObservable$ResultObserver`;
  #L499bf4.  call `<init>`(v1, v3) @signature `Lretrofit2/adapter/rxjava3/ResultObservable$ResultObserver;.<init>:(Lio/reactivex/rxjava3/core/Observer;)V` @kind direct;
  #L499bfa.  call `subscribe`(v0, v1) @signature `Lio/reactivex/rxjava3/core/Observable;.subscribe:(Lio/reactivex/rxjava3/core/Observer;)V` @kind virtual;
  #L499c00.  return @kind void;
}
