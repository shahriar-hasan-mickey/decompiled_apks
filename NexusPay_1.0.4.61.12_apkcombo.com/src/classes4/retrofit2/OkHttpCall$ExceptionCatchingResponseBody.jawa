record `retrofit2.OkHttpCall$ExceptionCatchingResponseBody` @kind class @AccessFlag FINAL extends `okhttp3.ResponseBody` @kind class {
  `okhttp3.ResponseBody` `retrofit2.OkHttpCall$ExceptionCatchingResponseBody.delegate` @AccessFlag PRIVATE_FINAL;
  `okio.BufferedSource` `retrofit2.OkHttpCall$ExceptionCatchingResponseBody.delegateSource` @AccessFlag PRIVATE_FINAL;
  `java.io.IOException` `retrofit2.OkHttpCall$ExceptionCatchingResponseBody.thrownException` @AccessFlag ;
}
procedure `void` `<init>`(`retrofit2.OkHttpCall$ExceptionCatchingResponseBody` v1 @kind this, `okhttp3.ResponseBody` v2 @kind object) @signature `Lretrofit2/OkHttpCall$ExceptionCatchingResponseBody;.<init>:(Lokhttp3/ResponseBody;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4940d4.  call `<init>`(v1) @signature `Lokhttp3/ResponseBody;.<init>:()V` @kind direct;
  #L4940da.  v1.`retrofit2.OkHttpCall$ExceptionCatchingResponseBody.delegate` @type ^`okhttp3.ResponseBody` := v2 @kind object;
  #L4940de.  v0:= new `retrofit2.OkHttpCall$ExceptionCatchingResponseBody$1`;
  #L4940e2.  call temp:= `source`(v2) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L4940e8.  v2:= temp @kind object;
  #L4940ea.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/OkHttpCall$ExceptionCatchingResponseBody$1;.<init>:(Lretrofit2/OkHttpCall$ExceptionCatchingResponseBody;Lokio/Source;)V` @kind direct;
  #L4940f0.  call temp:= `buffer`(v0) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L4940f6.  v2:= temp @kind object;
  #L4940f8.  v1.`retrofit2.OkHttpCall$ExceptionCatchingResponseBody.delegateSource` @type ^`okio.BufferedSource` := v2 @kind object;
  #L4940fc.  return @kind void;
}
procedure `void` `close`(`retrofit2.OkHttpCall$ExceptionCatchingResponseBody` v1 @kind this) @signature `Lretrofit2/OkHttpCall$ExceptionCatchingResponseBody;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L494110.  v0:= v1.`retrofit2.OkHttpCall$ExceptionCatchingResponseBody.delegate` @type ^`okhttp3.ResponseBody` @kind object;
  #L494114.  call `close`(v0) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L49411a.  return @kind void;
}
procedure `long` `contentLength`(`retrofit2.OkHttpCall$ExceptionCatchingResponseBody` v2 @kind this) @signature `Lretrofit2/OkHttpCall$ExceptionCatchingResponseBody;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49407c.  v0:= v2.`retrofit2.OkHttpCall$ExceptionCatchingResponseBody.delegate` @type ^`okhttp3.ResponseBody` @kind object;
  #L494080.  call temp:= `contentLength`(v0) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L494086.  v0:= temp @kind wide;
  #L494088.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`retrofit2.OkHttpCall$ExceptionCatchingResponseBody` v1 @kind this) @signature `Lretrofit2/OkHttpCall$ExceptionCatchingResponseBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49409c.  v0:= v1.`retrofit2.OkHttpCall$ExceptionCatchingResponseBody.delegate` @type ^`okhttp3.ResponseBody` @kind object;
  #L4940a0.  call temp:= `contentType`(v0) @signature `Lokhttp3/ResponseBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L4940a6.  v0:= temp @kind object;
  #L4940a8.  return v0 @kind object;
}
procedure `okio.BufferedSource` `source`(`retrofit2.OkHttpCall$ExceptionCatchingResponseBody` v1 @kind this) @signature `Lretrofit2/OkHttpCall$ExceptionCatchingResponseBody;.source:()Lokio/BufferedSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4940bc.  v0:= v1.`retrofit2.OkHttpCall$ExceptionCatchingResponseBody.delegateSource` @type ^`okio.BufferedSource` @kind object;
  #L4940c0.  return v0 @kind object;
}
procedure `void` `throwIfCaught`(`retrofit2.OkHttpCall$ExceptionCatchingResponseBody` v1 @kind this) @signature `Lretrofit2/OkHttpCall$ExceptionCatchingResponseBody;.throwIfCaught:()V` @AccessFlag  {
    temp;
    v0;

  #L49412c.  v0:= v1.`retrofit2.OkHttpCall$ExceptionCatchingResponseBody.thrownException` @type ^`java.io.IOException` @kind object;
  #L494130.  if v0 != 0 then goto L494136;
  #L494134.  return @kind void;
  #L494136.  throw v0;
}
