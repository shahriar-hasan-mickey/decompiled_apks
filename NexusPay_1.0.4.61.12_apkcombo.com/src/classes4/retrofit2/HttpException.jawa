record `retrofit2.HttpException` @kind class @AccessFlag PUBLIC extends `java.lang.RuntimeException` @kind class {
  `int` `retrofit2.HttpException.code` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit2.HttpException.message` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Response` `retrofit2.HttpException.response` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
procedure `void` `<init>`(`retrofit2.HttpException` v1 @kind this, `retrofit2.Response` v2 @kind object) @signature `Lretrofit2/HttpException;.<init>:(Lretrofit2/Response;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L493380.  call temp:= `getMessage`(v2) @signature `Lretrofit2/HttpException;.getMessage:(Lretrofit2/Response;)Ljava/lang/String;` @kind static;
  #L493386.  v0:= temp @kind object;
  #L493388.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49338e.  call temp:= `code`(v2) @signature `Lretrofit2/Response;.code:()I` @kind virtual;
  #L493394.  v0:= temp;
  #L493396.  v1.`retrofit2.HttpException.code` @type ^`int` := v0;
  #L49339a.  call temp:= `message`(v2) @signature `Lretrofit2/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L4933a0.  v0:= temp @kind object;
  #L4933a2.  v1.`retrofit2.HttpException.message` @type ^`java.lang.String` := v0 @kind object;
  #L4933a6.  v1.`retrofit2.HttpException.response` @type ^`retrofit2.Response` := v2 @kind object;
  #L4933aa.  return @kind void;
}
procedure `java.lang.String` `getMessage`(`retrofit2.Response` v2 @kind object) @signature `Lretrofit2/HttpException;.getMessage:(Lretrofit2/Response;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4932f0.  v0:= "response == null" @kind object;
  #L4932f4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L4932fa.  v0:= new `java.lang.StringBuilder`;
  #L4932fe.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L493304.  v1:= "HTTP " @kind object;
  #L493308.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49330e.  call temp:= `code`(v2) @signature `Lretrofit2/Response;.code:()I` @kind virtual;
  #L493314.  v1:= temp;
  #L493316.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L49331c.  v1:= " " @kind object;
  #L493320.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L493326.  call temp:= `message`(v2) @signature `Lretrofit2/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L49332c.  v2:= temp @kind object;
  #L49332e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L493334.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49333a.  v2:= temp @kind object;
  #L49333c.  return v2 @kind object;
}
procedure `int` `code`(`retrofit2.HttpException` v1 @kind this) @signature `Lretrofit2/HttpException;.code:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4932d8.  v0:= v1.`retrofit2.HttpException.code` @type ^`int`;
  #L4932dc.  return v0;
}
procedure `java.lang.String` `message`(`retrofit2.HttpException` v1 @kind this) @signature `Lretrofit2/HttpException;.message:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L493350.  v0:= v1.`retrofit2.HttpException.message` @type ^`java.lang.String` @kind object;
  #L493354.  return v0 @kind object;
}
procedure `retrofit2.Response` `response`(`retrofit2.HttpException` v1 @kind this) @signature `Lretrofit2/HttpException;.response:()Lretrofit2/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L493368.  v0:= v1.`retrofit2.HttpException.response` @type ^`retrofit2.Response` @kind object;
  #L49336c.  return v0 @kind object;
}
