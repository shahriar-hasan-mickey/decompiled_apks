record `retrofit2.HttpServiceMethod` @kind class @AccessFlag ABSTRACT extends `retrofit2.ServiceMethod` @kind class {
  `okhttp3.Call$Factory` `retrofit2.HttpServiceMethod.callFactory` @AccessFlag PRIVATE_FINAL;
  `retrofit2.RequestFactory` `retrofit2.HttpServiceMethod.requestFactory` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.HttpServiceMethod.responseConverter` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.HttpServiceMethod` v0 @kind this, `retrofit2.RequestFactory` v1 @kind object, `okhttp3.Call$Factory` v2 @kind object, `retrofit2.Converter` v3 @kind object) @signature `Lretrofit2/HttpServiceMethod;.<init>:(Lretrofit2/RequestFactory;Lokhttp3/Call$Factory;Lretrofit2/Converter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L493744.  call `<init>`(v0) @signature `Lretrofit2/ServiceMethod;.<init>:()V` @kind direct;
  #L49374a.  v0.`retrofit2.HttpServiceMethod.requestFactory` @type ^`retrofit2.RequestFactory` := v1 @kind object;
  #L49374e.  v0.`retrofit2.HttpServiceMethod.callFactory` @type ^`okhttp3.Call$Factory` := v2 @kind object;
  #L493752.  v0.`retrofit2.HttpServiceMethod.responseConverter` @type ^`retrofit2.Converter` := v3 @kind object;
  #L493756.  return @kind void;
}
procedure `retrofit2.CallAdapter` `createCallAdapter`(`retrofit2.Retrofit` v1 @kind object, `java.lang.reflect.Method` v2 @kind object, `java.lang.reflect.Type` v3 @kind object, `java.lang.annotation.Annotation`[] v4 @kind object) @signature `Lretrofit2/HttpServiceMethod;.createCallAdapter:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L493520.  call temp:= `callAdapter`(v1, v3, v4) @signature `Lretrofit2/Retrofit;.callAdapter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @kind virtual;
  #L493526.  v1:= temp @kind object;
  #L493528.  return v1 @kind object;
  #L49352a.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L49352c.  v4:= 1I;
  #L49352e.  v4:= new `java.lang.Object`[v4];
  #L493532.  v0:= 0I;
  #L493534.  v4[v0]:= v3 @kind object;
  #L493538.  v3:= "Unable to create call adapter for %s" @kind object;
  #L49353c.  call temp:= `methodError`(v2, v1, v3, v4) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L493542.  v1:= temp @kind object;
  #L493544.  throw v1;
  catch `java.lang.RuntimeException` @[L493520..L493528] goto L49352a;
}
procedure `retrofit2.Converter` `createResponseConverter`(`retrofit2.Retrofit` v2 @kind object, `java.lang.reflect.Method` v3 @kind object, `java.lang.reflect.Type` v4 @kind object) @signature `Lretrofit2/HttpServiceMethod;.createResponseConverter:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;Ljava/lang/reflect/Type;)Lretrofit2/Converter;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L493568.  call temp:= `getAnnotations`(v3) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L49356e.  v0:= temp @kind object;
  #L493570.  call temp:= `responseBodyConverter`(v2, v4, v0) @signature `Lretrofit2/Retrofit;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L493576.  v2:= temp @kind object;
  #L493578.  return v2 @kind object;
  #L49357a.  v2:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L49357c.  v0:= 1I;
  #L49357e.  v0:= new `java.lang.Object`[v0];
  #L493582.  v1:= 0I;
  #L493584.  v0[v1]:= v4 @kind object;
  #L493588.  v4:= "Unable to create converter for %s" @kind object;
  #L49358c.  call temp:= `methodError`(v3, v2, v4, v0) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L493592.  v2:= temp @kind object;
  #L493594.  throw v2;
  catch `java.lang.RuntimeException` @[L493570..L493578] goto L49357a;
}
procedure `retrofit2.HttpServiceMethod` `parseAnnotations`(`retrofit2.Retrofit` v13 @kind object, `java.lang.reflect.Method` v14 @kind object, `retrofit2.RequestFactory` v15 @kind object) @signature `Lretrofit2/HttpServiceMethod;.parseAnnotations:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;Lretrofit2/RequestFactory;)Lretrofit2/HttpServiceMethod;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L4935b8.  v3:= constclass @type ^`retrofit2.Response` @kind object;
  #L4935bc.  v4:= v15.`retrofit2.RequestFactory.isKotlinSuspendFunction` @type ^`boolean` @kind boolean;
  #L4935c0.  call temp:= `getAnnotations`(v14) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L4935c6.  v5:= temp @kind object;
  #L4935c8.  v6:= 0I;
  #L4935ca.  if v4 == 0 then goto L493634;
  #L4935ce.  call temp:= `getGenericParameterTypes`(v14) @signature `Ljava/lang/reflect/Method;.getGenericParameterTypes:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L4935d4.  v7:= temp @kind object;
  #L4935d6.  v8:= length @variable v7;
  #L4935d8.  v9:= 1I;
  #L4935da.  v8:= v8 - v9 @kind int;
  #L4935dc.  v7:= v7[v8] @kind object;
  #L4935e0.  v7:= (`java.lang.reflect.ParameterizedType`) v7 @kind object;
  #L4935e4.  call temp:= `getParameterLowerBound`(v6, v7) @signature `Lretrofit2/Utils;.getParameterLowerBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L4935ea.  v7:= temp @kind object;
  #L4935ec.  call temp:= `getRawType`(v7) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L4935f2.  v8:= temp @kind object;
  #L4935f4.  if v8 != v3 then goto L493610;
  #L4935f8.  v8:= instanceof @variable v7 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L4935fc.  if v8 == 0 then goto L493610;
  #L493600.  v7:= (`java.lang.reflect.ParameterizedType`) v7 @kind object;
  #L493604.  call temp:= `getParameterUpperBound`(v6, v7) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L49360a.  v7:= temp @kind object;
  #L49360c.  v8:= 1I;
  #L49360e.  goto L493612;
  #L493610.  v8:= 0I;
  #L493612.  v10:= new `retrofit2.Utils$ParameterizedTypeImpl`;
  #L493616.  v11:= 0I;
  #L493618.  v12:= constclass @type ^`retrofit2.Call` @kind object;
  #L49361c.  v9:= new `java.lang.reflect.Type`[v9];
  #L493620.  v9[v6]:= v7 @kind object;
  #L493624.  call `<init>`(v10, v11, v12, v9) @signature `Lretrofit2/Utils$ParameterizedTypeImpl;.<init>:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L49362a.  call temp:= `ensurePresent`(v5) @signature `Lretrofit2/SkipCallbackExecutorImpl;.ensurePresent:([Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;` @kind static;
  #L493630.  v5:= temp @kind object;
  #L493632.  goto L49363e;
  #L493634.  call temp:= `getGenericReturnType`(v14) @signature `Ljava/lang/reflect/Method;.getGenericReturnType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L49363a.  v10:= temp @kind object;
  #L49363c.  v8:= 0I;
  #L49363e.  call temp:= `createCallAdapter`(v13, v14, v10, v5) @signature `Lretrofit2/HttpServiceMethod;.createCallAdapter:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @kind static;
  #L493644.  v5:= temp @kind object;
  #L493646.  call temp:= `responseType`(v5) @signature `Lretrofit2/CallAdapter;.responseType:()Ljava/lang/reflect/Type;` @kind interface;
  #L49364c.  v7:= temp @kind object;
  #L49364e.  v9:= constclass @type ^`okhttp3.Response` @kind object;
  #L493652.  if v7 == v9 then goto L4936e8;
  #L493656.  if v7 == v3 then goto L4936d6;
  #L49365a.  v3:= v15.`retrofit2.RequestFactory.httpMethod` @type ^`java.lang.String` @kind object;
  #L49365e.  v9:= "HEAD" @kind object;
  #L493662.  call temp:= `equals`(v3, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L493668.  v3:= temp;
  #L49366a.  if v3 == 0 then goto L493692;
  #L49366e.  v3:= constclass @type ^`java.lang.Void` @kind object;
  #L493672.  call temp:= `equals`(v3, v7) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L493678.  v3:= temp;
  #L49367a.  if v3 == 0 then goto L493680;
  #L49367e.  goto L493692;
  #L493680.  v0:= new `java.lang.Object`[v6];
  #L493684.  v2:= "HEAD method must use Void as response type." @kind object;
  #L493688.  call temp:= `methodError`(v14, v2, v0) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L49368e.  v0:= temp @kind object;
  #L493690.  throw v0;
  #L493692.  call temp:= `createResponseConverter`(v13, v14, v7) @signature `Lretrofit2/HttpServiceMethod;.createResponseConverter:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;Ljava/lang/reflect/Type;)Lretrofit2/Converter;` @kind static;
  #L493698.  v3:= temp @kind object;
  #L49369a.  v6:= v13.`retrofit2.Retrofit.callFactory` @type ^`okhttp3.Call$Factory` @kind object;
  #L49369e.  if v4 != 0 then goto L4936ae;
  #L4936a2.  v0:= new `retrofit2.HttpServiceMethod$CallAdapted`;
  #L4936a6.  call `<init>`(v0, v15, v6, v3, v5) @signature `Lretrofit2/HttpServiceMethod$CallAdapted;.<init>:(Lretrofit2/RequestFactory;Lokhttp3/Call$Factory;Lretrofit2/Converter;Lretrofit2/CallAdapter;)V` @kind direct;
  #L4936ac.  return v0 @kind object;
  #L4936ae.  if v8 == 0 then goto L4936be;
  #L4936b2.  v0:= new `retrofit2.HttpServiceMethod$SuspendForResponse`;
  #L4936b6.  call `<init>`(v0, v15, v6, v3, v5) @signature `Lretrofit2/HttpServiceMethod$SuspendForResponse;.<init>:(Lretrofit2/RequestFactory;Lokhttp3/Call$Factory;Lretrofit2/Converter;Lretrofit2/CallAdapter;)V` @kind direct;
  #L4936bc.  return v0 @kind object;
  #L4936be.  v7:= new `retrofit2.HttpServiceMethod$SuspendForBody`;
  #L4936c2.  v8:= 0I;
  #L4936c4.  v0:= v7 @kind object;
  #L4936c6.  v1:= v15 @kind object;
  #L4936c8.  v2:= v6 @kind object;
  #L4936ca.  v4:= v5 @kind object;
  #L4936cc.  v5:= v8;
  #L4936ce.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lretrofit2/HttpServiceMethod$SuspendForBody;.<init>:(Lretrofit2/RequestFactory;Lokhttp3/Call$Factory;Lretrofit2/Converter;Lretrofit2/CallAdapter;Z)V` @kind direct;
  #L4936d4.  return v7 @kind object;
  #L4936d6.  v0:= new `java.lang.Object`[v6];
  #L4936da.  v2:= "Response must include generic type (e.g., Response<String>)" @kind object;
  #L4936de.  call temp:= `methodError`(v14, v2, v0) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L4936e4.  v0:= temp @kind object;
  #L4936e6.  throw v0;
  #L4936e8.  v0:= new `java.lang.StringBuilder`;
  #L4936ec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4936f2.  v2:= "'" @kind object;
  #L4936f6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4936fc.  call temp:= `getRawType`(v7) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L493702.  v2:= temp @kind object;
  #L493704.  call temp:= `getName`(v2) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L49370a.  v2:= temp @kind object;
  #L49370c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L493712.  v2:= "' is not a valid response body type. Did you mean ResponseBody?" @kind object;
  #L493716.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49371c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L493722.  v0:= temp @kind object;
  #L493724.  v2:= new `java.lang.Object`[v6];
  #L493728.  call temp:= `methodError`(v14, v0, v2) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L49372e.  v0:= temp @kind object;
  #L493730.  throw v0;
}
procedure `java.lang.Object` `adapt`(`retrofit2.Call` v0 @kind object, `java.lang.Object`[] v1 @kind object) @signature `Lretrofit2/HttpServiceMethod;.adapt:(Lretrofit2/Call;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `invoke`(`retrofit2.HttpServiceMethod` v4 @kind this, `java.lang.Object`[] v5 @kind object) @signature `Lretrofit2/HttpServiceMethod;.invoke:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4934f0.  v0:= new `retrofit2.OkHttpCall`;
  #L4934f4.  v1:= v4.`retrofit2.HttpServiceMethod.requestFactory` @type ^`retrofit2.RequestFactory` @kind object;
  #L4934f8.  v2:= v4.`retrofit2.HttpServiceMethod.callFactory` @type ^`okhttp3.Call$Factory` @kind object;
  #L4934fc.  v3:= v4.`retrofit2.HttpServiceMethod.responseConverter` @type ^`retrofit2.Converter` @kind object;
  #L493500.  call `<init>`(v0, v1, v5, v2, v3) @signature `Lretrofit2/OkHttpCall;.<init>:(Lretrofit2/RequestFactory;[Ljava/lang/Object;Lokhttp3/Call$Factory;Lretrofit2/Converter;)V` @kind direct;
  #L493506.  call temp:= `adapt`(v4, v0, v5) @signature `Lretrofit2/HttpServiceMethod;.adapt:(Lretrofit2/Call;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L49350c.  v5:= temp @kind object;
  #L49350e.  return v5 @kind object;
}
