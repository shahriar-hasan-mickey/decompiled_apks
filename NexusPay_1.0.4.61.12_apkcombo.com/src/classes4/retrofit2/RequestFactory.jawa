record `retrofit2.RequestFactory` @kind class @AccessFlag FINAL {
  `okhttp3.HttpUrl` `retrofit2.RequestFactory.baseUrl` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MediaType` `retrofit2.RequestFactory.contentType` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.RequestFactory.hasBody` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `retrofit2.RequestFactory.headers` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit2.RequestFactory.httpMethod` @AccessFlag FINAL;
  `boolean` `retrofit2.RequestFactory.isFormEncoded` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.RequestFactory.isKotlinSuspendFunction` @AccessFlag FINAL;
  `boolean` `retrofit2.RequestFactory.isMultipart` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `retrofit2.RequestFactory.method` @AccessFlag PRIVATE_FINAL;
  `retrofit2.ParameterHandler`[] `retrofit2.RequestFactory.parameterHandlers` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit2.RequestFactory.relativeUrl` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.RequestFactory` v1 @kind this, `retrofit2.RequestFactory$Builder` v2 @kind object) @signature `Lretrofit2/RequestFactory;.<init>:(Lretrofit2/RequestFactory$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L497524.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49752a.  v0:= v2.`retrofit2.RequestFactory$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L49752e.  v1.`retrofit2.RequestFactory.method` @type ^`java.lang.reflect.Method` := v0 @kind object;
  #L497532.  v0:= v2.`retrofit2.RequestFactory$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L497536.  v0:= v0.`retrofit2.Retrofit.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L49753a.  v1.`retrofit2.RequestFactory.baseUrl` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L49753e.  v0:= v2.`retrofit2.RequestFactory$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L497542.  v1.`retrofit2.RequestFactory.httpMethod` @type ^`java.lang.String` := v0 @kind object;
  #L497546.  v0:= v2.`retrofit2.RequestFactory$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L49754a.  v1.`retrofit2.RequestFactory.relativeUrl` @type ^`java.lang.String` := v0 @kind object;
  #L49754e.  v0:= v2.`retrofit2.RequestFactory$Builder.headers` @type ^`okhttp3.Headers` @kind object;
  #L497552.  v1.`retrofit2.RequestFactory.headers` @type ^`okhttp3.Headers` := v0 @kind object;
  #L497556.  v0:= v2.`retrofit2.RequestFactory$Builder.contentType` @type ^`okhttp3.MediaType` @kind object;
  #L49755a.  v1.`retrofit2.RequestFactory.contentType` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L49755e.  v0:= v2.`retrofit2.RequestFactory$Builder.hasBody` @type ^`boolean` @kind boolean;
  #L497562.  v1.`retrofit2.RequestFactory.hasBody` @type ^`boolean` := v0 @kind boolean;
  #L497566.  v0:= v2.`retrofit2.RequestFactory$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L49756a.  v1.`retrofit2.RequestFactory.isFormEncoded` @type ^`boolean` := v0 @kind boolean;
  #L49756e.  v0:= v2.`retrofit2.RequestFactory$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L497572.  v1.`retrofit2.RequestFactory.isMultipart` @type ^`boolean` := v0 @kind boolean;
  #L497576.  v0:= v2.`retrofit2.RequestFactory$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] @kind object;
  #L49757a.  v1.`retrofit2.RequestFactory.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] := v0 @kind object;
  #L49757e.  v2:= v2.`retrofit2.RequestFactory$Builder.isKotlinSuspendFunction` @type ^`boolean` @kind boolean;
  #L497582.  v1.`retrofit2.RequestFactory.isKotlinSuspendFunction` @type ^`boolean` := v2 @kind boolean;
  #L497586.  return @kind void;
}
procedure `retrofit2.RequestFactory` `parseAnnotations`(`retrofit2.Retrofit` v1 @kind object, `java.lang.reflect.Method` v2 @kind object) @signature `Lretrofit2/RequestFactory;.parseAnnotations:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)Lretrofit2/RequestFactory;` @AccessFlag STATIC {
    temp;
    v0;

  #L497500.  v0:= new `retrofit2.RequestFactory$Builder`;
  #L497504.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/RequestFactory$Builder;.<init>:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)V` @kind direct;
  #L49750a.  call temp:= `build`(v0) @signature `Lretrofit2/RequestFactory$Builder;.build:()Lretrofit2/RequestFactory;` @kind virtual;
  #L497510.  v1:= temp @kind object;
  #L497512.  return v1 @kind object;
}
procedure `okhttp3.Request` `create`(`retrofit2.RequestFactory` v12 @kind this, `java.lang.Object`[] v13 @kind object) @signature `Lretrofit2/RequestFactory;.create:([Ljava/lang/Object;)Lokhttp3/Request;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L497408.  v0:= v12.`retrofit2.RequestFactory.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] @kind object;
  #L49740c.  v1:= length @variable v13;
  #L49740e.  v2:= length @variable v0;
  #L497410.  if v1 != v2 then goto L4974a6;
  #L497414.  v2:= new `retrofit2.RequestBuilder`;
  #L497418.  v4:= v12.`retrofit2.RequestFactory.httpMethod` @type ^`java.lang.String` @kind object;
  #L49741c.  v5:= v12.`retrofit2.RequestFactory.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L497420.  v6:= v12.`retrofit2.RequestFactory.relativeUrl` @type ^`java.lang.String` @kind object;
  #L497424.  v7:= v12.`retrofit2.RequestFactory.headers` @type ^`okhttp3.Headers` @kind object;
  #L497428.  v8:= v12.`retrofit2.RequestFactory.contentType` @type ^`okhttp3.MediaType` @kind object;
  #L49742c.  v9:= v12.`retrofit2.RequestFactory.hasBody` @type ^`boolean` @kind boolean;
  #L497430.  v10:= v12.`retrofit2.RequestFactory.isFormEncoded` @type ^`boolean` @kind boolean;
  #L497434.  v11:= v12.`retrofit2.RequestFactory.isMultipart` @type ^`boolean` @kind boolean;
  #L497438.  v3:= v2 @kind object;
  #L49743a.  call `<init>`(v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lretrofit2/RequestBuilder;.<init>:(Ljava/lang/String;Lokhttp3/HttpUrl;Ljava/lang/String;Lokhttp3/Headers;Lokhttp3/MediaType;ZZZ)V` @kind direct;
  #L497440.  v3:= v12.`retrofit2.RequestFactory.isKotlinSuspendFunction` @type ^`boolean` @kind boolean;
  #L497444.  if v3 == 0 then goto L49744c;
  #L497448.  v1:= v1 + -1;
  #L49744c.  v3:= new `java.util.ArrayList`;
  #L497450.  call `<init>`(v3, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L497456.  v4:= 0I;
  #L497458.  if v4 >= v1 then goto L49747a;
  #L49745c.  v5:= v13[v4] @kind object;
  #L497460.  call temp:= `add`(v3, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L497466.  v5:= v0[v4] @kind object;
  #L49746a.  v6:= v13[v4] @kind object;
  #L49746e.  call `apply`(v5, v2, v6) @signature `Lretrofit2/ParameterHandler;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @kind virtual;
  #L497474.  v4:= v4 + 1;
  #L497478.  goto L497458;
  #L49747a.  call temp:= `get`(v2) @signature `Lretrofit2/RequestBuilder;.get:()Lokhttp3/Request$Builder;` @kind virtual;
  #L497480.  v13:= temp @kind object;
  #L497482.  v0:= constclass @type ^`retrofit2.Invocation` @kind object;
  #L497486.  v1:= new `retrofit2.Invocation`;
  #L49748a.  v2:= v12.`retrofit2.RequestFactory.method` @type ^`java.lang.reflect.Method` @kind object;
  #L49748e.  call `<init>`(v1, v2, v3) @signature `Lretrofit2/Invocation;.<init>:(Ljava/lang/reflect/Method;Ljava/util/List;)V` @kind direct;
  #L497494.  call temp:= `tag`(v13, v0, v1) @signature `Lokhttp3/Request$Builder;.tag:(Ljava/lang/Class;Ljava/lang/Object;)Lokhttp3/Request$Builder;` @kind virtual;
  #L49749a.  v13:= temp @kind object;
  #L49749c.  call temp:= `build`(v13) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L4974a2.  v13:= temp @kind object;
  #L4974a4.  return v13 @kind object;
  #L4974a6.  v13:= new `java.lang.IllegalArgumentException`;
  #L4974aa.  v2:= new `java.lang.StringBuilder`;
  #L4974ae.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4974b4.  v3:= "Argument count (" @kind object;
  #L4974b8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4974be.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4974c4.  v1:= ") doesn't match expected count (" @kind object;
  #L4974c8.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4974ce.  v0:= length @variable v0;
  #L4974d0.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4974d6.  v0:= ")" @kind object;
  #L4974da.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4974e0.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4974e6.  v0:= temp @kind object;
  #L4974e8.  call `<init>`(v13, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4974ee.  throw v13;
}
