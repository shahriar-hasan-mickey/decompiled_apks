record `org.xms.g.tasks.OnTokenCanceledListener$XImpl` @kind class @AccessFlag PUBLIC extends `org.xms.g.utils.XObject` @kind class, `org.xms.g.tasks.OnTokenCanceledListener` @kind interface {
}
procedure `void` `<init>`(`org.xms.g.tasks.OnTokenCanceledListener$XImpl` v0 @kind this, `org.xms.g.utils.XBox` v1 @kind object) @signature `Lorg/xms/g/tasks/OnTokenCanceledListener$XImpl;.<init>:(Lorg/xms/g/utils/XBox;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L478750.  call `<init>`(v0, v1) @signature `Lorg/xms/g/utils/XObject;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L478756.  return @kind void;
}
procedure `com.google.android.gms.tasks.OnTokenCanceledListener` `getGInstanceOnTokenCanceledListener`(`org.xms.g.tasks.OnTokenCanceledListener$XImpl` v1 @kind this) @signature `Lorg/xms/g/tasks/OnTokenCanceledListener$XImpl;.getGInstanceOnTokenCanceledListener:()Lcom/google/android/gms/tasks/OnTokenCanceledListener;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4786fc.  call temp:= `$default$getGInstanceOnTokenCanceledListener`(v1) @signature `Lorg/xms/g/tasks/l;.$default$getGInstanceOnTokenCanceledListener:(Lorg/xms/g/tasks/OnTokenCanceledListener;)Lcom/google/android/gms/tasks/OnTokenCanceledListener;` @kind static;
  #L478702.  v0:= temp @kind object;
  #L478704.  return v0 @kind object;
}
procedure `java.lang.Object` `getHInstanceOnTokenCanceledListener`(`org.xms.g.tasks.OnTokenCanceledListener$XImpl` v1 @kind this) @signature `Lorg/xms/g/tasks/OnTokenCanceledListener$XImpl;.getHInstanceOnTokenCanceledListener:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L478718.  call temp:= `$default$getHInstanceOnTokenCanceledListener`(v1) @signature `Lorg/xms/g/tasks/l;.$default$getHInstanceOnTokenCanceledListener:(Lorg/xms/g/tasks/OnTokenCanceledListener;)Ljava/lang/Object;` @kind static;
  #L47871e.  v0:= temp @kind object;
  #L478720.  return v0 @kind object;
}
procedure `java.lang.Object` `getZInstanceOnTokenCanceledListener`(`org.xms.g.tasks.OnTokenCanceledListener$XImpl` v1 @kind this) @signature `Lorg/xms/g/tasks/OnTokenCanceledListener$XImpl;.getZInstanceOnTokenCanceledListener:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L478734.  call temp:= `$default$getZInstanceOnTokenCanceledListener`(v1) @signature `Lorg/xms/g/tasks/l;.$default$getZInstanceOnTokenCanceledListener:(Lorg/xms/g/tasks/OnTokenCanceledListener;)Ljava/lang/Object;` @kind static;
  #L47873a.  v0:= temp @kind object;
  #L47873c.  return v0 @kind object;
}
procedure `void` `onCanceled`(`org.xms.g.tasks.OnTokenCanceledListener$XImpl` v2 @kind this) @signature `Lorg/xms/g/tasks/OnTokenCanceledListener$XImpl;.onCanceled:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L478768.  v0:= new `java.lang.RuntimeException`;
  #L47876c.  v1:= "Not Supported" @kind object;
  #L478770.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L478776.  throw v0;
}
