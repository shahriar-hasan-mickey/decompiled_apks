record `org.xms.g.tasks.OnFailureListener$2` @kind class @AccessFlag  extends `com.huawei.hmf.tasks.OnFailureListener` @kind interface {
  `org.xms.g.tasks.OnFailureListener` `org.xms.g.tasks.OnFailureListener$2.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.xms.g.tasks.OnFailureListener$2` v0 @kind this, `org.xms.g.tasks.OnFailureListener` v1 @kind object) @signature `Lorg/xms/g/tasks/OnFailureListener$2;.<init>:(Lorg/xms/g/tasks/OnFailureListener;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L478370.  v0.`org.xms.g.tasks.OnFailureListener$2.this$0` @type ^`org.xms.g.tasks.OnFailureListener` := v1 @kind object;
  #L478374.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47837a.  return @kind void;
}
procedure `void` `onFailure`(`org.xms.g.tasks.OnFailureListener$2` v1 @kind this, `java.lang.Exception` v2 @kind object) @signature `Lorg/xms/g/tasks/OnFailureListener$2;.onFailure:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L47838c.  call temp:= `isHmsType`(v2) @signature `Lorg/xms/g/utils/Utils;.isHmsType:(Ljava/lang/Object;)Z` @kind static;
  #L478392.  v0:= temp;
  #L478394.  if v0 == 0 then goto L4783b0;
  #L478398.  call temp:= `getXmsObjectWithHmsObject`(v2) @signature `Lorg/xms/g/utils/Utils;.getXmsObjectWithHmsObject:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L47839e.  v2:= temp @kind object;
  #L4783a0.  v0:= v1.`org.xms.g.tasks.OnFailureListener$2.this$0` @type ^`org.xms.g.tasks.OnFailureListener` @kind object;
  #L4783a4.  v2:= (`java.lang.Exception`) v2 @kind object;
  #L4783a8.  call `onFailure`(v0, v2) @signature `Lorg/xms/g/tasks/OnFailureListener;.onFailure:(Ljava/lang/Exception;)V` @kind interface;
  #L4783ae.  goto L4783ba;
  #L4783b0.  v0:= v1.`org.xms.g.tasks.OnFailureListener$2.this$0` @type ^`org.xms.g.tasks.OnFailureListener` @kind object;
  #L4783b4.  call `onFailure`(v0, v2) @signature `Lorg/xms/g/tasks/OnFailureListener;.onFailure:(Ljava/lang/Exception;)V` @kind interface;
  #L4783ba.  return @kind void;
}
