record `org.xms.g.tasks.TaskExecutors` @kind class @AccessFlag PUBLIC_FINAL extends `org.xms.g.utils.XObject` @kind class {
}
procedure `void` `<init>`(`org.xms.g.tasks.TaskExecutors` v0 @kind this, `org.xms.g.utils.XBox` v1 @kind object) @signature `Lorg/xms/g/tasks/TaskExecutors;.<init>:(Lorg/xms/g/utils/XBox;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L479598.  call `<init>`(v0, v1) @signature `Lorg/xms/g/utils/XObject;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L47959e.  return @kind void;
}
procedure `org.xms.g.tasks.TaskExecutors` `dynamicCast`(`java.lang.Object` v0 @kind object) @signature `Lorg/xms/g/tasks/TaskExecutors;.dynamicCast:(Ljava/lang/Object;)Lorg/xms/g/tasks/TaskExecutors;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L479580.  v0:= (`org.xms.g.tasks.TaskExecutors`) v0 @kind object;
  #L479584.  return v0 @kind object;
}
procedure `java.util.concurrent.Executor` `getMAIN_THREAD`() @signature `Lorg/xms/g/tasks/TaskExecutors;.getMAIN_THREAD:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47953c.  call temp:= `isHms`() @signature `Lorg/xms/g/utils/GlobalEnvSetting;.isHms:()Z` @kind static;
  #L479542.  v0:= temp;
  #L479544.  v1:= "XMSRouter" @kind object;
  #L479548.  if v0 == 0 then goto L479560;
  #L47954c.  v0:= "com.huawei.hmf.tasks.TaskExecutors.uiThread()" @kind object;
  #L479550.  call `d`(v1, v0) @signature `Lorg/xms/g/utils/XmsLog;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L479556.  call temp:= `uiThread`() @signature `Lcom/huawei/hmf/tasks/TaskExecutors;.uiThread:()Ljava/util/concurrent/Executor;` @kind static;
  #L47955c.  v0:= temp @kind object;
  #L47955e.  return v0 @kind object;
  #L479560.  v0:= "com.google.android.gms.tasks.TaskExecutors.MAIN_THREAD" @kind object;
  #L479564.  call `d`(v1, v0) @signature `Lorg/xms/g/utils/XmsLog;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L47956a.  v0:= `@@com.google.android.gms.tasks.TaskExecutors.MAIN_THREAD` @type ^`java.util.concurrent.Executor` @kind object;
  #L47956e.  return v0 @kind object;
}
procedure `boolean` `isInstance`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/tasks/TaskExecutors;.isInstance:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4794f0.  v0:= instanceof @variable v1 @type ^`org.xms.g.utils.XGettable` @kind boolean;
  #L4794f4.  if v0 != 0 then goto L4794fc;
  #L4794f8.  v1:= 0I;
  #L4794fa.  return v1;
  #L4794fc.  call temp:= `isHms`() @signature `Lorg/xms/g/utils/GlobalEnvSetting;.isHms:()Z` @kind static;
  #L479502.  v0:= temp;
  #L479504.  if v0 != 0 then goto L47951a;
  #L479508.  v1:= (`org.xms.g.utils.XGettable`) v1 @kind object;
  #L47950c.  call temp:= `getGInstance`(v1) @signature `Lorg/xms/g/utils/XGettable;.getGInstance:()Ljava/lang/Object;` @kind interface;
  #L479512.  v1:= temp @kind object;
  #L479514.  v1:= instanceof @variable v1 @type ^`com.google.android.gms.tasks.TaskExecutors` @kind boolean;
  #L479518.  return v1;
  #L47951a.  v1:= new `java.lang.RuntimeException`;
  #L47951e.  v0:= "HMS does not support this API." @kind object;
  #L479522.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L479528.  throw v1;
}
