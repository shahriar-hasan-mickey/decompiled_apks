record `org.xms.g.auth.api.credentials.CredentialRequest` @kind class @AccessFlag PUBLIC_FINAL extends `org.xms.g.utils.XObject` @kind class, `android.os.Parcelable` @kind interface {
}
global `android.os.Parcelable$Creator` `@@org.xms.g.auth.api.credentials.CredentialRequest.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/xms/g/auth/api/credentials/CredentialRequest;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L461d50.  v0:= new `org.xms.g.auth.api.credentials.CredentialRequest$1`;
  #L461d54.  call `<init>`(v0) @signature `Lorg/xms/g/auth/api/credentials/CredentialRequest$1;.<init>:()V` @kind direct;
  #L461d5a.  `@@org.xms.g.auth.api.credentials.CredentialRequest.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L461d5e.  return @kind void;
}
procedure `void` `<init>`(`org.xms.g.auth.api.credentials.CredentialRequest` v0 @kind this, `org.xms.g.utils.XBox` v1 @kind object) @signature `Lorg/xms/g/auth/api/credentials/CredentialRequest;.<init>:(Lorg/xms/g/utils/XBox;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L461d70.  call `<init>`(v0, v1) @signature `Lorg/xms/g/utils/XObject;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L461d76.  return @kind void;
}
procedure `org.xms.g.auth.api.credentials.CredentialRequest` `dynamicCast`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/auth/api/credentials/CredentialRequest;.dynamicCast:(Ljava/lang/Object;)Lorg/xms/g/auth/api/credentials/CredentialRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L461d30.  v1:= new `java.lang.RuntimeException`;
  #L461d34.  v0:= "Not Supported" @kind object;
  #L461d38.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L461d3e.  throw v1;
}
procedure `boolean` `isInstance`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/auth/api/credentials/CredentialRequest;.isInstance:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L461c10.  v1:= new `java.lang.RuntimeException`;
  #L461c14.  v0:= "Not Supported" @kind object;
  #L461c18.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L461c1e.  throw v1;
}
procedure `int` `describeContents`(`org.xms.g.auth.api.credentials.CredentialRequest` v2 @kind this) @signature `Lorg/xms/g/auth/api/credentials/CredentialRequest;.describeContents:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L461c50.  v0:= new `java.lang.RuntimeException`;
  #L461c54.  v1:= "Not Supported" @kind object;
  #L461c58.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L461c5e.  throw v0;
}
procedure `java.lang.String`[] `getAccountTypes`(`org.xms.g.auth.api.credentials.CredentialRequest` v2 @kind this) @signature `Lorg/xms/g/auth/api/credentials/CredentialRequest;.getAccountTypes:()[Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L461cb0.  v0:= new `java.lang.RuntimeException`;
  #L461cb4.  v1:= "Not Supported" @kind object;
  #L461cb8.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L461cbe.  throw v0;
}
procedure `java.util.Set` `getAccountTypesSet`(`org.xms.g.auth.api.credentials.CredentialRequest` v2 @kind this) @signature `Lorg/xms/g/auth/api/credentials/CredentialRequest;.getAccountTypesSet:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L461cd0.  v0:= new `java.lang.RuntimeException`;
  #L461cd4.  v1:= "Not Supported" @kind object;
  #L461cd8.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L461cde.  throw v0;
}
procedure `org.xms.g.auth.api.credentials.CredentialPickerConfig` `getCredentialHintPickerConfig`(`org.xms.g.auth.api.credentials.CredentialRequest` v2 @kind this) @signature `Lorg/xms/g/auth/api/credentials/CredentialRequest;.getCredentialHintPickerConfig:()Lorg/xms/g/auth/api/credentials/CredentialPickerConfig;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L461cf0.  v0:= new `java.lang.RuntimeException`;
  #L461cf4.  v1:= "Not Supported" @kind object;
  #L461cf8.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L461cfe.  throw v0;
}
procedure `org.xms.g.auth.api.credentials.CredentialPickerConfig` `getCredentialPickerConfig`(`org.xms.g.auth.api.credentials.CredentialRequest` v2 @kind this) @signature `Lorg/xms/g/auth/api/credentials/CredentialRequest;.getCredentialPickerConfig:()Lorg/xms/g/auth/api/credentials/CredentialPickerConfig;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L461d10.  v0:= new `java.lang.RuntimeException`;
  #L461d14.  v1:= "Not Supported" @kind object;
  #L461d18.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L461d1e.  throw v0;
}
procedure `java.lang.String` `getIdTokenNonce`(`org.xms.g.auth.api.credentials.CredentialRequest` v2 @kind this) @signature `Lorg/xms/g/auth/api/credentials/CredentialRequest;.getIdTokenNonce:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L461c70.  v0:= new `java.lang.RuntimeException`;
  #L461c74.  v1:= "Not Supported" @kind object;
  #L461c78.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L461c7e.  throw v0;
}
procedure `java.lang.String` `getServerClientId`(`org.xms.g.auth.api.credentials.CredentialRequest` v2 @kind this) @signature `Lorg/xms/g/auth/api/credentials/CredentialRequest;.getServerClientId:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L461c90.  v0:= new `java.lang.RuntimeException`;
  #L461c94.  v1:= "Not Supported" @kind object;
  #L461c98.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L461c9e.  throw v0;
}
procedure `boolean` `getSupportsPasswordLogin`(`org.xms.g.auth.api.credentials.CredentialRequest` v2 @kind this) @signature `Lorg/xms/g/auth/api/credentials/CredentialRequest;.getSupportsPasswordLogin:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L461bd0.  v0:= new `java.lang.RuntimeException`;
  #L461bd4.  v1:= "Not Supported" @kind object;
  #L461bd8.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L461bde.  throw v0;
}
procedure `boolean` `isIdTokenRequested`(`org.xms.g.auth.api.credentials.CredentialRequest` v2 @kind this) @signature `Lorg/xms/g/auth/api/credentials/CredentialRequest;.isIdTokenRequested:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L461bf0.  v0:= new `java.lang.RuntimeException`;
  #L461bf4.  v1:= "Not Supported" @kind object;
  #L461bf8.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L461bfe.  throw v0;
}
procedure `boolean` `isPasswordLoginSupported`(`org.xms.g.auth.api.credentials.CredentialRequest` v2 @kind this) @signature `Lorg/xms/g/auth/api/credentials/CredentialRequest;.isPasswordLoginSupported:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L461c30.  v0:= new `java.lang.RuntimeException`;
  #L461c34.  v1:= "Not Supported" @kind object;
  #L461c38.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L461c3e.  throw v0;
}
procedure `void` `writeToParcel`(`org.xms.g.auth.api.credentials.CredentialRequest` v0 @kind this, `android.os.Parcel` v1 @kind object, `int` v2 ) @signature `Lorg/xms/g/auth/api/credentials/CredentialRequest;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L461d88.  v1:= new `java.lang.RuntimeException`;
  #L461d8c.  v2:= "Not Supported" @kind object;
  #L461d90.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L461d96.  throw v1;
}
