record `org.xms.g.auth.api.accounttransfer.AccountTransferStatusCodes` @kind class @AccessFlag PUBLIC_FINAL extends `org.xms.g.common.api.CommonStatusCodes` @kind class {
}
procedure `void` `<init>`(`org.xms.g.auth.api.accounttransfer.AccountTransferStatusCodes` v0 @kind this, `org.xms.g.utils.XBox` v1 @kind object) @signature `Lorg/xms/g/auth/api/accounttransfer/AccountTransferStatusCodes;.<init>:(Lorg/xms/g/utils/XBox;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L46028c.  call `<init>`(v0, v1) @signature `Lorg/xms/g/common/api/CommonStatusCodes;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L460292.  return @kind void;
}
procedure `org.xms.g.auth.api.accounttransfer.AccountTransferStatusCodes` `dynamicCast`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/auth/api/accounttransfer/AccountTransferStatusCodes;.dynamicCast:(Ljava/lang/Object;)Lorg/xms/g/auth/api/accounttransfer/AccountTransferStatusCodes;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46026c.  v1:= new `java.lang.RuntimeException`;
  #L460270.  v0:= "Not Supported" @kind object;
  #L460274.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46027a.  throw v1;
}
procedure `int` `getCHALLENGE_NOT_ALLOWED`() @signature `Lorg/xms/g/auth/api/accounttransfer/AccountTransferStatusCodes;.getCHALLENGE_NOT_ALLOWED:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4601ac.  v0:= new `java.lang.RuntimeException`;
  #L4601b0.  v1:= "Not Supported" @kind object;
  #L4601b4.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4601ba.  throw v0;
}
procedure `int` `getINVALID_REQUEST`() @signature `Lorg/xms/g/auth/api/accounttransfer/AccountTransferStatusCodes;.getINVALID_REQUEST:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4601cc.  v0:= new `java.lang.RuntimeException`;
  #L4601d0.  v1:= "Not Supported" @kind object;
  #L4601d4.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4601da.  throw v0;
}
procedure `int` `getNOT_ALLOWED_SECURITY`() @signature `Lorg/xms/g/auth/api/accounttransfer/AccountTransferStatusCodes;.getNOT_ALLOWED_SECURITY:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4601ec.  v0:= new `java.lang.RuntimeException`;
  #L4601f0.  v1:= "Not Supported" @kind object;
  #L4601f4.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4601fa.  throw v0;
}
procedure `int` `getNO_DATA_AVAILABLE`() @signature `Lorg/xms/g/auth/api/accounttransfer/AccountTransferStatusCodes;.getNO_DATA_AVAILABLE:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46020c.  v0:= new `java.lang.RuntimeException`;
  #L460210.  v1:= "Not Supported" @kind object;
  #L460214.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46021a.  throw v0;
}
procedure `int` `getSESSION_INACTIVE`() @signature `Lorg/xms/g/auth/api/accounttransfer/AccountTransferStatusCodes;.getSESSION_INACTIVE:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46022c.  v0:= new `java.lang.RuntimeException`;
  #L460230.  v1:= "Not Supported" @kind object;
  #L460234.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46023a.  throw v0;
}
procedure `java.lang.String` `getStatusCodeString`(`int` v1 ) @signature `Lorg/xms/g/auth/api/accounttransfer/AccountTransferStatusCodes;.getStatusCodeString:(I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46024c.  v1:= new `java.lang.RuntimeException`;
  #L460250.  v0:= "Not Supported" @kind object;
  #L460254.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46025a.  throw v1;
}
procedure `boolean` `isInstance`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/auth/api/accounttransfer/AccountTransferStatusCodes;.isInstance:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46018c.  v1:= new `java.lang.RuntimeException`;
  #L460190.  v0:= "Not Supported" @kind object;
  #L460194.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46019a.  throw v1;
}
