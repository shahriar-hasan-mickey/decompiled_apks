record `org.xms.g.auth.api.accounttransfer.AccountTransferClient` @kind class @AccessFlag PUBLIC extends `org.xms.g.common.api.ExtensionApi` @kind class {
}
procedure `void` `<init>`(`org.xms.g.auth.api.accounttransfer.AccountTransferClient` v0 @kind this, `org.xms.g.utils.XBox` v1 @kind object) @signature `Lorg/xms/g/auth/api/accounttransfer/AccountTransferClient;.<init>:(Lorg/xms/g/utils/XBox;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L46006c.  call `<init>`(v0, v1) @signature `Lorg/xms/g/common/api/ExtensionApi;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L460072.  return @kind void;
}
procedure `org.xms.g.auth.api.accounttransfer.AccountTransferClient` `dynamicCast`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/auth/api/accounttransfer/AccountTransferClient;.dynamicCast:(Ljava/lang/Object;)Lorg/xms/g/auth/api/accounttransfer/AccountTransferClient;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45ffac.  v1:= new `java.lang.RuntimeException`;
  #L45ffb0.  v0:= "Not Supported" @kind object;
  #L45ffb4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45ffba.  throw v1;
}
procedure `boolean` `isInstance`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/auth/api/accounttransfer/AccountTransferClient;.isInstance:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45ff6c.  v1:= new `java.lang.RuntimeException`;
  #L45ff70.  v0:= "Not Supported" @kind object;
  #L45ff74.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45ff7a.  throw v1;
}
procedure `java.lang.Object` `getApiKey`(`org.xms.g.auth.api.accounttransfer.AccountTransferClient` v2 @kind this) @signature `Lorg/xms/g/auth/api/accounttransfer/AccountTransferClient;.getApiKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45ff8c.  v0:= new `java.lang.RuntimeException`;
  #L45ff90.  v1:= "Not Supported" @kind object;
  #L45ff94.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45ff9a.  throw v0;
}
procedure `org.xms.g.tasks.Task` `getDeviceMetaData`(`org.xms.g.auth.api.accounttransfer.AccountTransferClient` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/xms/g/auth/api/accounttransfer/AccountTransferClient;.getDeviceMetaData:(Ljava/lang/String;)Lorg/xms/g/tasks/Task;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45ffcc.  v2:= new `java.lang.RuntimeException`;
  #L45ffd0.  v0:= "Not Supported" @kind object;
  #L45ffd4.  call `<init>`(v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45ffda.  throw v2;
}
procedure `org.xms.g.tasks.Task` `notifyCompletion`(`org.xms.g.auth.api.accounttransfer.AccountTransferClient` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lorg/xms/g/auth/api/accounttransfer/AccountTransferClient;.notifyCompletion:(Ljava/lang/String;I)Lorg/xms/g/tasks/Task;` @AccessFlag PUBLIC {
    temp;

  #L45ffec.  v1:= new `java.lang.RuntimeException`;
  #L45fff0.  v2:= "Not Supported" @kind object;
  #L45fff4.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45fffa.  throw v1;
}
procedure `org.xms.g.tasks.Task` `retrieveData`(`org.xms.g.auth.api.accounttransfer.AccountTransferClient` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/xms/g/auth/api/accounttransfer/AccountTransferClient;.retrieveData:(Ljava/lang/String;)Lorg/xms/g/tasks/Task;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46000c.  v2:= new `java.lang.RuntimeException`;
  #L460010.  v0:= "Not Supported" @kind object;
  #L460014.  call `<init>`(v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46001a.  throw v2;
}
procedure `org.xms.g.tasks.Task` `sendData`(`org.xms.g.auth.api.accounttransfer.AccountTransferClient` v0 @kind this, `java.lang.String` v1 @kind object, `byte`[] v2 @kind object) @signature `Lorg/xms/g/auth/api/accounttransfer/AccountTransferClient;.sendData:(Ljava/lang/String;[B)Lorg/xms/g/tasks/Task;` @AccessFlag PUBLIC {
    temp;

  #L46002c.  v1:= new `java.lang.RuntimeException`;
  #L460030.  v2:= "Not Supported" @kind object;
  #L460034.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46003a.  throw v1;
}
procedure `org.xms.g.tasks.Task` `showUserChallenge`(`org.xms.g.auth.api.accounttransfer.AccountTransferClient` v0 @kind this, `java.lang.String` v1 @kind object, `android.app.PendingIntent` v2 @kind object) @signature `Lorg/xms/g/auth/api/accounttransfer/AccountTransferClient;.showUserChallenge:(Ljava/lang/String;Landroid/app/PendingIntent;)Lorg/xms/g/tasks/Task;` @AccessFlag PUBLIC {
    temp;

  #L46004c.  v1:= new `java.lang.RuntimeException`;
  #L460050.  v2:= "Not Supported" @kind object;
  #L460054.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46005a.  throw v1;
}
