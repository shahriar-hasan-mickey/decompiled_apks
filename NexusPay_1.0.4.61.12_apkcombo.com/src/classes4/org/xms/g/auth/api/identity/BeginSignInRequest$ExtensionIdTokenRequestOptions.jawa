record `org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions` @kind class @AccessFlag PUBLIC_FINAL extends `org.xms.g.utils.XObject` @kind class, `android.os.Parcelable` @kind interface {
}
global `android.os.Parcelable$Creator` `@@org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L46407c.  v0:= new `org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions$1`;
  #L464080.  call `<init>`(v0) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions$1;.<init>:()V` @kind direct;
  #L464086.  `@@org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L46408a.  return @kind void;
}
procedure `void` `<init>`(`org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions` v0 @kind this, `org.xms.g.utils.XBox` v1 @kind object) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions;.<init>:(Lorg/xms/g/utils/XBox;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L46409c.  call `<init>`(v0, v1) @signature `Lorg/xms/g/utils/XObject;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L4640a2.  return @kind void;
}
procedure `org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder` `builder`() @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions;.builder:()Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L46405c.  v0:= new `java.lang.RuntimeException`;
  #L464060.  v1:= "Not Supported" @kind object;
  #L464064.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46406a.  throw v0;
}
procedure `org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions` `dynamicCast`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions;.dynamicCast:(Ljava/lang/Object;)Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46403c.  v1:= new `java.lang.RuntimeException`;
  #L464040.  v0:= "Not Supported" @kind object;
  #L464044.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46404a.  throw v1;
}
procedure `boolean` `isInstance`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions;.isInstance:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L463f7c.  v1:= new `java.lang.RuntimeException`;
  #L463f80.  v0:= "Not Supported" @kind object;
  #L463f84.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L463f8a.  throw v1;
}
procedure `int` `describeContents`(`org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions` v2 @kind this) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions;.describeContents:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L463fbc.  v0:= new `java.lang.RuntimeException`;
  #L463fc0.  v1:= "Not Supported" @kind object;
  #L463fc4.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L463fca.  throw v0;
}
procedure `boolean` `equals`(`org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L463f3c.  v2:= new `java.lang.RuntimeException`;
  #L463f40.  v0:= "Not Supported" @kind object;
  #L463f44.  call `<init>`(v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L463f4a.  throw v2;
}
procedure `boolean` `filterByAuthorizedAccounts`(`org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions` v2 @kind this) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions;.filterByAuthorizedAccounts:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L463f5c.  v0:= new `java.lang.RuntimeException`;
  #L463f60.  v1:= "Not Supported" @kind object;
  #L463f64.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L463f6a.  throw v0;
}
procedure `java.lang.String` `getNonce`(`org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions` v2 @kind this) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions;.getNonce:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L463ffc.  v0:= new `java.lang.RuntimeException`;
  #L464000.  v1:= "Not Supported" @kind object;
  #L464004.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46400a.  throw v0;
}
procedure `java.lang.String` `getServerClientId`(`org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions` v2 @kind this) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions;.getServerClientId:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46401c.  v0:= new `java.lang.RuntimeException`;
  #L464020.  v1:= "Not Supported" @kind object;
  #L464024.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46402a.  throw v0;
}
procedure `int` `hashCode`(`org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions` v2 @kind this) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L463fdc.  v0:= new `java.lang.RuntimeException`;
  #L463fe0.  v1:= "Not Supported" @kind object;
  #L463fe4.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L463fea.  throw v0;
}
procedure `boolean` `isSupported`(`org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions` v2 @kind this) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions;.isSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L463f9c.  v0:= new `java.lang.RuntimeException`;
  #L463fa0.  v1:= "Not Supported" @kind object;
  #L463fa4.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L463faa.  throw v0;
}
procedure `void` `writeToParcel`(`org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions` v0 @kind this, `android.os.Parcel` v1 @kind object, `int` v2 ) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC {
    temp;

  #L4640b4.  v1:= new `java.lang.RuntimeException`;
  #L4640b8.  v2:= "Not Supported" @kind object;
  #L4640bc.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4640c2.  throw v1;
}
