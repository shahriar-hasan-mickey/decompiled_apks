record `org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder` @kind class @AccessFlag PUBLIC_FINAL extends `org.xms.g.utils.XObject` @kind class {
}
procedure `void` `<init>`(`org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder` v1 @kind this) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L463f08.  v0:= 0I;
  #L463f0a.  call `<init>`(v1, v0) @signature `Lorg/xms/g/utils/XObject;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L463f10.  return @kind void;
}
procedure `void` `<init>`(`org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder` v0 @kind this, `org.xms.g.utils.XBox` v1 @kind object) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder;.<init>:(Lorg/xms/g/utils/XBox;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L463f24.  call `<init>`(v0, v1) @signature `Lorg/xms/g/utils/XObject;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L463f2a.  return @kind void;
}
procedure `org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder` `dynamicCast`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder;.dynamicCast:(Ljava/lang/Object;)Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L463e68.  v1:= new `java.lang.RuntimeException`;
  #L463e6c.  v0:= "Not Supported" @kind object;
  #L463e70.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L463e76.  throw v1;
}
procedure `boolean` `isInstance`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder;.isInstance:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L463e28.  v1:= new `java.lang.RuntimeException`;
  #L463e2c.  v0:= "Not Supported" @kind object;
  #L463e30.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L463e36.  throw v1;
}
procedure `org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions` `build`(`org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder` v2 @kind this) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder;.build:()Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L463e48.  v0:= new `java.lang.RuntimeException`;
  #L463e4c.  v1:= "Not Supported" @kind object;
  #L463e50.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L463e56.  throw v0;
}
procedure `org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder` `setFilterByAuthorizedAccounts`(`org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder` v1 @kind this, `boolean` v2 ) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder;.setFilterByAuthorizedAccounts:(Z)Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L463e88.  v2:= new `java.lang.RuntimeException`;
  #L463e8c.  v0:= "Not Supported" @kind object;
  #L463e90.  call `<init>`(v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L463e96.  throw v2;
}
procedure `org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder` `setNonce`(`org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder;.setNonce:(Ljava/lang/String;)Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L463ea8.  v2:= new `java.lang.RuntimeException`;
  #L463eac.  v0:= "Not Supported" @kind object;
  #L463eb0.  call `<init>`(v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L463eb6.  throw v2;
}
procedure `org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder` `setServerClientId`(`org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder;.setServerClientId:(Ljava/lang/String;)Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L463ec8.  v2:= new `java.lang.RuntimeException`;
  #L463ecc.  v0:= "Not Supported" @kind object;
  #L463ed0.  call `<init>`(v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L463ed6.  throw v2;
}
procedure `org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder` `setSupported`(`org.xms.g.auth.api.identity.BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder` v1 @kind this, `boolean` v2 ) @signature `Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder;.setSupported:(Z)Lorg/xms/g/auth/api/identity/BeginSignInRequest$ExtensionIdTokenRequestOptions$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L463ee8.  v2:= new `java.lang.RuntimeException`;
  #L463eec.  v0:= "Not Supported" @kind object;
  #L463ef0.  call `<init>`(v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L463ef6.  throw v2;
}
