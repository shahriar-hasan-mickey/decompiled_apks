record `org.xms.g.auth.api.credentials.HintRequest` @kind class @AccessFlag PUBLIC_FINAL extends `org.xms.g.utils.XObject` @kind class, `android.os.Parcelable` @kind interface {
}
global `android.os.Parcelable$Creator` `@@org.xms.g.auth.api.credentials.HintRequest.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/xms/g/auth/api/credentials/HintRequest;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L463710.  v0:= new `org.xms.g.auth.api.credentials.HintRequest$1`;
  #L463714.  call `<init>`(v0) @signature `Lorg/xms/g/auth/api/credentials/HintRequest$1;.<init>:()V` @kind direct;
  #L46371a.  `@@org.xms.g.auth.api.credentials.HintRequest.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L46371e.  return @kind void;
}
procedure `void` `<init>`(`org.xms.g.auth.api.credentials.HintRequest` v0 @kind this, `org.xms.g.utils.XBox` v1 @kind object) @signature `Lorg/xms/g/auth/api/credentials/HintRequest;.<init>:(Lorg/xms/g/utils/XBox;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L463730.  call `<init>`(v0, v1) @signature `Lorg/xms/g/utils/XObject;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L463736.  return @kind void;
}
procedure `org.xms.g.auth.api.credentials.HintRequest` `dynamicCast`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/auth/api/credentials/HintRequest;.dynamicCast:(Ljava/lang/Object;)Lorg/xms/g/auth/api/credentials/HintRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4636f0.  v1:= new `java.lang.RuntimeException`;
  #L4636f4.  v0:= "Not Supported" @kind object;
  #L4636f8.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4636fe.  throw v1;
}
procedure `boolean` `isInstance`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/auth/api/credentials/HintRequest;.isInstance:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L463630.  v1:= new `java.lang.RuntimeException`;
  #L463634.  v0:= "Not Supported" @kind object;
  #L463638.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46363e.  throw v1;
}
procedure `int` `describeContents`(`org.xms.g.auth.api.credentials.HintRequest` v2 @kind this) @signature `Lorg/xms/g/auth/api/credentials/HintRequest;.describeContents:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L463650.  v0:= new `java.lang.RuntimeException`;
  #L463654.  v1:= "Not Supported" @kind object;
  #L463658.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46365e.  throw v0;
}
procedure `java.lang.String`[] `getAccountTypes`(`org.xms.g.auth.api.credentials.HintRequest` v2 @kind this) @signature `Lorg/xms/g/auth/api/credentials/HintRequest;.getAccountTypes:()[Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4636b0.  v0:= new `java.lang.RuntimeException`;
  #L4636b4.  v1:= "Not Supported" @kind object;
  #L4636b8.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4636be.  throw v0;
}
procedure `org.xms.g.auth.api.credentials.CredentialPickerConfig` `getHintPickerConfig`(`org.xms.g.auth.api.credentials.HintRequest` v2 @kind this) @signature `Lorg/xms/g/auth/api/credentials/HintRequest;.getHintPickerConfig:()Lorg/xms/g/auth/api/credentials/CredentialPickerConfig;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4636d0.  v0:= new `java.lang.RuntimeException`;
  #L4636d4.  v1:= "Not Supported" @kind object;
  #L4636d8.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4636de.  throw v0;
}
procedure `java.lang.String` `getIdTokenNonce`(`org.xms.g.auth.api.credentials.HintRequest` v2 @kind this) @signature `Lorg/xms/g/auth/api/credentials/HintRequest;.getIdTokenNonce:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L463670.  v0:= new `java.lang.RuntimeException`;
  #L463674.  v1:= "Not Supported" @kind object;
  #L463678.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46367e.  throw v0;
}
procedure `java.lang.String` `getServerClientId`(`org.xms.g.auth.api.credentials.HintRequest` v2 @kind this) @signature `Lorg/xms/g/auth/api/credentials/HintRequest;.getServerClientId:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L463690.  v0:= new `java.lang.RuntimeException`;
  #L463694.  v1:= "Not Supported" @kind object;
  #L463698.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46369e.  throw v0;
}
procedure `boolean` `isEmailAddressIdentifierSupported`(`org.xms.g.auth.api.credentials.HintRequest` v2 @kind this) @signature `Lorg/xms/g/auth/api/credentials/HintRequest;.isEmailAddressIdentifierSupported:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4635f0.  v0:= new `java.lang.RuntimeException`;
  #L4635f4.  v1:= "Not Supported" @kind object;
  #L4635f8.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4635fe.  throw v0;
}
procedure `boolean` `isIdTokenRequested`(`org.xms.g.auth.api.credentials.HintRequest` v2 @kind this) @signature `Lorg/xms/g/auth/api/credentials/HintRequest;.isIdTokenRequested:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L463610.  v0:= new `java.lang.RuntimeException`;
  #L463614.  v1:= "Not Supported" @kind object;
  #L463618.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46361e.  throw v0;
}
procedure `void` `writeToParcel`(`org.xms.g.auth.api.credentials.HintRequest` v0 @kind this, `android.os.Parcel` v1 @kind object, `int` v2 ) @signature `Lorg/xms/g/auth/api/credentials/HintRequest;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L463748.  v1:= new `java.lang.RuntimeException`;
  #L46374c.  v2:= "Not Supported" @kind object;
  #L463750.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L463756.  throw v1;
}
