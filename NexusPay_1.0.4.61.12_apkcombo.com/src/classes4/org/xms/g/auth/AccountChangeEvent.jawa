record `org.xms.g.auth.AccountChangeEvent` @kind class @AccessFlag PUBLIC extends `org.xms.g.utils.XObject` @kind class, `android.os.Parcelable` @kind interface {
  `boolean` `org.xms.g.auth.AccountChangeEvent.wrapper` @AccessFlag PRIVATE;
}
global `android.os.Parcelable$Creator` `@@org.xms.g.auth.AccountChangeEvent.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/xms/g/auth/AccountChangeEvent;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L45d87c.  v0:= new `org.xms.g.auth.AccountChangeEvent$1`;
  #L45d880.  call `<init>`(v0) @signature `Lorg/xms/g/auth/AccountChangeEvent$1;.<init>:()V` @kind direct;
  #L45d886.  `@@org.xms.g.auth.AccountChangeEvent.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L45d88a.  return @kind void;
}
procedure `void` `<init>`(`org.xms.g.auth.AccountChangeEvent` v9 @kind this, `long` v10 , `java.lang.String` v12 @kind object, `int` v13 , `int` v14 , `java.lang.String` v15 @kind object) @signature `Lorg/xms/g/auth/AccountChangeEvent;.<init>:(JLjava/lang/String;IILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L45d89c.  v0:= 0I;
  #L45d89e.  call `<init>`(v9, v0) @signature `Lorg/xms/g/utils/XObject;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L45d8a4.  v0:= 1I;
  #L45d8a6.  v9.`org.xms.g.auth.AccountChangeEvent.wrapper` @type ^`boolean` := v0 @kind boolean;
  #L45d8aa.  call temp:= `isHms`() @signature `Lorg/xms/g/utils/GlobalEnvSetting;.isHms:()Z` @kind static;
  #L45d8b0.  v0:= temp;
  #L45d8b2.  if v0 == 0 then goto L45d8c6;
  #L45d8b6.  v10:= "XMSRouter" @kind object;
  #L45d8ba.  v11:= "org.xms.g.auth.AccountChangeEvent.AccountChangeEvent(longjava.lang.Stringintintjava.lang.String)" @kind object;
  #L45d8be.  call `d`(v10, v11) @signature `Lorg/xms/g/utils/XmsLog;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L45d8c4.  goto L45d8e4;
  #L45d8c6.  v8:= new `org.xms.g.auth.AccountChangeEvent$GImpl`;
  #L45d8ca.  v0:= v8 @kind object;
  #L45d8cc.  v1:= v9 @kind object;
  #L45d8ce.  v2:= v10 @kind wide;
  #L45d8d0.  v4:= v12 @kind object;
  #L45d8d2.  v5:= v13;
  #L45d8d4.  v6:= v14;
  #L45d8d6.  v7:= v15 @kind object;
  #L45d8d8.  call `<init>`(v0, v1, v2, v4, v5, v6, v7) @signature `Lorg/xms/g/auth/AccountChangeEvent$GImpl;.<init>:(Lorg/xms/g/auth/AccountChangeEvent;JLjava/lang/String;IILjava/lang/String;)V` @kind direct;
  #L45d8de.  call `setGInstance`(v9, v8) @signature `Lorg/xms/g/utils/XObject;.setGInstance:(Ljava/lang/Object;)V` @kind virtual;
  #L45d8e4.  v10:= 0I;
  #L45d8e6.  v9.`org.xms.g.auth.AccountChangeEvent.wrapper` @type ^`boolean` := v10 @kind boolean;
  #L45d8ea.  return @kind void;
}
procedure `void` `<init>`(`org.xms.g.auth.AccountChangeEvent` v0 @kind this, `org.xms.g.utils.XBox` v1 @kind object) @signature `Lorg/xms/g/auth/AccountChangeEvent;.<init>:(Lorg/xms/g/utils/XBox;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L45d8fc.  call `<init>`(v0, v1) @signature `Lorg/xms/g/utils/XObject;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L45d902.  v1:= 1I;
  #L45d904.  v0.`org.xms.g.auth.AccountChangeEvent.wrapper` @type ^`boolean` := v1 @kind boolean;
  #L45d908.  v0.`org.xms.g.auth.AccountChangeEvent.wrapper` @type ^`boolean` := v1 @kind boolean;
  #L45d90c.  return @kind void;
}
procedure `org.xms.g.auth.AccountChangeEvent` `dynamicCast`(`java.lang.Object` v0 @kind object) @signature `Lorg/xms/g/auth/AccountChangeEvent;.dynamicCast:(Ljava/lang/Object;)Lorg/xms/g/auth/AccountChangeEvent;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L45ce4c.  v0:= (`org.xms.g.auth.AccountChangeEvent`) v0 @kind object;
  #L45ce50.  return v0 @kind object;
}
procedure `boolean` `isInstance`(`java.lang.Object` v2 @kind object) @signature `Lorg/xms/g/auth/AccountChangeEvent;.isInstance:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L45cd20.  v0:= instanceof @variable v2 @type ^`org.xms.g.utils.XGettable` @kind boolean;
  #L45cd24.  v1:= 0I;
  #L45cd26.  if v0 != 0 then goto L45cd2c;
  #L45cd2a.  return v1;
  #L45cd2c.  call temp:= `isHms`() @signature `Lorg/xms/g/utils/GlobalEnvSetting;.isHms:()Z` @kind static;
  #L45cd32.  v0:= temp;
  #L45cd34.  if v0 == 0 then goto L45cd48;
  #L45cd38.  v2:= "XMSRouter" @kind object;
  #L45cd3c.  v0:= "org.xms.g.auth.AccountChangeEvent.isInstance(java.lang.Object)" @kind object;
  #L45cd40.  call `d`(v2, v0) @signature `Lorg/xms/g/utils/XmsLog;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L45cd46.  return v1;
  #L45cd48.  v2:= (`org.xms.g.utils.XGettable`) v2 @kind object;
  #L45cd4c.  call temp:= `getGInstance`(v2) @signature `Lorg/xms/g/utils/XGettable;.getGInstance:()Ljava/lang/Object;` @kind interface;
  #L45cd52.  v2:= temp @kind object;
  #L45cd54.  v2:= instanceof @variable v2 @type ^`com.google.android.gms.auth.AccountChangeEvent` @kind boolean;
  #L45cd58.  return v2;
}
procedure `int` `describeContents`(`org.xms.g.auth.AccountChangeEvent` v2 @kind this) @signature `Lorg/xms/g/auth/AccountChangeEvent;.describeContents:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45cd6c.  v0:= new `java.lang.RuntimeException`;
  #L45cd70.  v1:= "Not Supported" @kind object;
  #L45cd74.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cd7a.  throw v0;
}
procedure `boolean` `equals`(`org.xms.g.auth.AccountChangeEvent` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/xms/g/auth/AccountChangeEvent;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45cd00.  v2:= new `java.lang.RuntimeException`;
  #L45cd04.  v0:= "Not Supported" @kind object;
  #L45cd08.  call `<init>`(v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cd0e.  throw v2;
}
procedure `java.lang.String` `getAccountName`(`org.xms.g.auth.AccountChangeEvent` v2 @kind this) @signature `Lorg/xms/g/auth/AccountChangeEvent;.getAccountName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45cdec.  v0:= new `java.lang.RuntimeException`;
  #L45cdf0.  v1:= "Not Supported" @kind object;
  #L45cdf4.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cdfa.  throw v0;
}
procedure `java.lang.String` `getChangeData`(`org.xms.g.auth.AccountChangeEvent` v2 @kind this) @signature `Lorg/xms/g/auth/AccountChangeEvent;.getChangeData:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45ce0c.  v0:= new `java.lang.RuntimeException`;
  #L45ce10.  v1:= "Not Supported" @kind object;
  #L45ce14.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45ce1a.  throw v0;
}
procedure `int` `getChangeType`(`org.xms.g.auth.AccountChangeEvent` v2 @kind this) @signature `Lorg/xms/g/auth/AccountChangeEvent;.getChangeType:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45cd8c.  v0:= new `java.lang.RuntimeException`;
  #L45cd90.  v1:= "Not Supported" @kind object;
  #L45cd94.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cd9a.  throw v0;
}
procedure `int` `getEventIndex`(`org.xms.g.auth.AccountChangeEvent` v2 @kind this) @signature `Lorg/xms/g/auth/AccountChangeEvent;.getEventIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45cdac.  v0:= new `java.lang.RuntimeException`;
  #L45cdb0.  v1:= "Not Supported" @kind object;
  #L45cdb4.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cdba.  throw v0;
}
procedure `int` `hashCode`(`org.xms.g.auth.AccountChangeEvent` v2 @kind this) @signature `Lorg/xms/g/auth/AccountChangeEvent;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45cdcc.  v0:= new `java.lang.RuntimeException`;
  #L45cdd0.  v1:= "Not Supported" @kind object;
  #L45cdd4.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45cdda.  throw v0;
}
procedure `java.lang.String` `toString`(`org.xms.g.auth.AccountChangeEvent` v2 @kind this) @signature `Lorg/xms/g/auth/AccountChangeEvent;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45ce2c.  v0:= new `java.lang.RuntimeException`;
  #L45ce30.  v1:= "Not Supported" @kind object;
  #L45ce34.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45ce3a.  throw v0;
}
procedure `void` `writeToParcel`(`org.xms.g.auth.AccountChangeEvent` v0 @kind this, `android.os.Parcel` v1 @kind object, `int` v2 ) @signature `Lorg/xms/g/auth/AccountChangeEvent;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC {
    temp;

  #L45d920.  v1:= new `java.lang.RuntimeException`;
  #L45d924.  v2:= "Not Supported" @kind object;
  #L45d928.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45d92e.  throw v1;
}
