record `org.xms.g.auth.ExtensionAuthException` @kind class @AccessFlag PUBLIC extends `java.lang.Exception` @kind class, `org.xms.g.utils.XGettable` @kind interface {
  `java.lang.Object` `org.xms.g.auth.ExtensionAuthException.gInstance` @AccessFlag PUBLIC;
  `java.lang.Object` `org.xms.g.auth.ExtensionAuthException.hInstance` @AccessFlag PUBLIC;
  `boolean` `org.xms.g.auth.ExtensionAuthException.wrapper` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.xms.g.auth.ExtensionAuthException` v1 @kind this) @signature `Lorg/xms/g/auth/ExtensionAuthException;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L45dbc0.  call `<init>`(v1) @signature `Ljava/lang/Exception;.<init>:()V` @kind direct;
  #L45dbc6.  v0:= 1I;
  #L45dbc8.  v1.`org.xms.g.auth.ExtensionAuthException.wrapper` @type ^`boolean` := v0 @kind boolean;
  #L45dbcc.  call temp:= `isHms`() @signature `Lorg/xms/g/utils/GlobalEnvSetting;.isHms:()Z` @kind static;
  #L45dbd2.  v0:= temp;
  #L45dbd4.  if v0 == 0 then goto L45dbea;
  #L45dbd8.  v0:= new `org.xms.g.auth.ExtensionAuthException$HImpl`;
  #L45dbdc.  call `<init>`(v0, v1) @signature `Lorg/xms/g/auth/ExtensionAuthException$HImpl;.<init>:(Lorg/xms/g/auth/ExtensionAuthException;)V` @kind direct;
  #L45dbe2.  call `setHInstance`(v1, v0) @signature `Lorg/xms/g/auth/ExtensionAuthException;.setHInstance:(Ljava/lang/Object;)V` @kind virtual;
  #L45dbe8.  goto L45dbfa;
  #L45dbea.  v0:= new `org.xms.g.auth.ExtensionAuthException$GImpl`;
  #L45dbee.  call `<init>`(v0, v1) @signature `Lorg/xms/g/auth/ExtensionAuthException$GImpl;.<init>:(Lorg/xms/g/auth/ExtensionAuthException;)V` @kind direct;
  #L45dbf4.  call `setGInstance`(v1, v0) @signature `Lorg/xms/g/auth/ExtensionAuthException;.setGInstance:(Ljava/lang/Object;)V` @kind virtual;
  #L45dbfa.  v0:= 0I;
  #L45dbfc.  v1.`org.xms.g.auth.ExtensionAuthException.wrapper` @type ^`boolean` := v0 @kind boolean;
  #L45dc00.  return @kind void;
}
procedure `void` `<init>`(`org.xms.g.auth.ExtensionAuthException` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/xms/g/auth/ExtensionAuthException;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L45dc14.  call `<init>`(v1) @signature `Ljava/lang/Exception;.<init>:()V` @kind direct;
  #L45dc1a.  v0:= 1I;
  #L45dc1c.  v1.`org.xms.g.auth.ExtensionAuthException.wrapper` @type ^`boolean` := v0 @kind boolean;
  #L45dc20.  call temp:= `isHms`() @signature `Lorg/xms/g/utils/GlobalEnvSetting;.isHms:()Z` @kind static;
  #L45dc26.  v0:= temp;
  #L45dc28.  if v0 == 0 then goto L45dc3e;
  #L45dc2c.  v0:= new `org.xms.g.auth.ExtensionAuthException$HImpl`;
  #L45dc30.  call `<init>`(v0, v1, v2) @signature `Lorg/xms/g/auth/ExtensionAuthException$HImpl;.<init>:(Lorg/xms/g/auth/ExtensionAuthException;Ljava/lang/String;)V` @kind direct;
  #L45dc36.  call `setHInstance`(v1, v0) @signature `Lorg/xms/g/auth/ExtensionAuthException;.setHInstance:(Ljava/lang/Object;)V` @kind virtual;
  #L45dc3c.  goto L45dc4e;
  #L45dc3e.  v0:= new `org.xms.g.auth.ExtensionAuthException$GImpl`;
  #L45dc42.  call `<init>`(v0, v1, v2) @signature `Lorg/xms/g/auth/ExtensionAuthException$GImpl;.<init>:(Lorg/xms/g/auth/ExtensionAuthException;Ljava/lang/String;)V` @kind direct;
  #L45dc48.  call `setGInstance`(v1, v0) @signature `Lorg/xms/g/auth/ExtensionAuthException;.setGInstance:(Ljava/lang/Object;)V` @kind virtual;
  #L45dc4e.  v2:= 0I;
  #L45dc50.  v1.`org.xms.g.auth.ExtensionAuthException.wrapper` @type ^`boolean` := v2 @kind boolean;
  #L45dc54.  return @kind void;
}
procedure `void` `<init>`(`org.xms.g.auth.ExtensionAuthException` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lorg/xms/g/auth/ExtensionAuthException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L45dc68.  call `<init>`(v1) @signature `Ljava/lang/Exception;.<init>:()V` @kind direct;
  #L45dc6e.  v0:= 1I;
  #L45dc70.  v1.`org.xms.g.auth.ExtensionAuthException.wrapper` @type ^`boolean` := v0 @kind boolean;
  #L45dc74.  call temp:= `isHms`() @signature `Lorg/xms/g/utils/GlobalEnvSetting;.isHms:()Z` @kind static;
  #L45dc7a.  v0:= temp;
  #L45dc7c.  if v0 == 0 then goto L45dc92;
  #L45dc80.  v0:= new `org.xms.g.auth.ExtensionAuthException$HImpl`;
  #L45dc84.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/xms/g/auth/ExtensionAuthException$HImpl;.<init>:(Lorg/xms/g/auth/ExtensionAuthException;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L45dc8a.  call `setHInstance`(v1, v0) @signature `Lorg/xms/g/auth/ExtensionAuthException;.setHInstance:(Ljava/lang/Object;)V` @kind virtual;
  #L45dc90.  goto L45dca2;
  #L45dc92.  v0:= new `org.xms.g.auth.ExtensionAuthException$GImpl`;
  #L45dc96.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/xms/g/auth/ExtensionAuthException$GImpl;.<init>:(Lorg/xms/g/auth/ExtensionAuthException;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L45dc9c.  call `setGInstance`(v1, v0) @signature `Lorg/xms/g/auth/ExtensionAuthException;.setGInstance:(Ljava/lang/Object;)V` @kind virtual;
  #L45dca2.  v2:= 0I;
  #L45dca4.  v1.`org.xms.g.auth.ExtensionAuthException.wrapper` @type ^`boolean` := v2 @kind boolean;
  #L45dca8.  return @kind void;
}
procedure `void` `<init>`(`org.xms.g.auth.ExtensionAuthException` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lorg/xms/g/auth/ExtensionAuthException;.<init>:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L45dcbc.  call `<init>`(v1) @signature `Ljava/lang/Exception;.<init>:()V` @kind direct;
  #L45dcc2.  v0:= 1I;
  #L45dcc4.  v1.`org.xms.g.auth.ExtensionAuthException.wrapper` @type ^`boolean` := v0 @kind boolean;
  #L45dcc8.  call temp:= `isHms`() @signature `Lorg/xms/g/utils/GlobalEnvSetting;.isHms:()Z` @kind static;
  #L45dcce.  v0:= temp;
  #L45dcd0.  if v0 == 0 then goto L45dce6;
  #L45dcd4.  v0:= new `org.xms.g.auth.ExtensionAuthException$HImpl`;
  #L45dcd8.  call `<init>`(v0, v1, v2) @signature `Lorg/xms/g/auth/ExtensionAuthException$HImpl;.<init>:(Lorg/xms/g/auth/ExtensionAuthException;Ljava/lang/Throwable;)V` @kind direct;
  #L45dcde.  call `setHInstance`(v1, v0) @signature `Lorg/xms/g/auth/ExtensionAuthException;.setHInstance:(Ljava/lang/Object;)V` @kind virtual;
  #L45dce4.  goto L45dcf6;
  #L45dce6.  v0:= new `org.xms.g.auth.ExtensionAuthException$GImpl`;
  #L45dcea.  call `<init>`(v0, v1, v2) @signature `Lorg/xms/g/auth/ExtensionAuthException$GImpl;.<init>:(Lorg/xms/g/auth/ExtensionAuthException;Ljava/lang/Throwable;)V` @kind direct;
  #L45dcf0.  call `setGInstance`(v1, v0) @signature `Lorg/xms/g/auth/ExtensionAuthException;.setGInstance:(Ljava/lang/Object;)V` @kind virtual;
  #L45dcf6.  v2:= 0I;
  #L45dcf8.  v1.`org.xms.g.auth.ExtensionAuthException.wrapper` @type ^`boolean` := v2 @kind boolean;
  #L45dcfc.  return @kind void;
}
procedure `void` `<init>`(`org.xms.g.auth.ExtensionAuthException` v2 @kind this, `org.xms.g.utils.XBox` v3 @kind object) @signature `Lorg/xms/g/auth/ExtensionAuthException;.<init>:(Lorg/xms/g/utils/XBox;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L45dd10.  call `<init>`(v2) @signature `Ljava/lang/Exception;.<init>:()V` @kind direct;
  #L45dd16.  v0:= 1I;
  #L45dd18.  v2.`org.xms.g.auth.ExtensionAuthException.wrapper` @type ^`boolean` := v0 @kind boolean;
  #L45dd1c.  if v3 != 0 then goto L45dd22;
  #L45dd20.  return @kind void;
  #L45dd22.  call temp:= `getGInstance`(v3) @signature `Lorg/xms/g/utils/XBox;.getGInstance:()Ljava/lang/Object;` @kind virtual;
  #L45dd28.  v1:= temp @kind object;
  #L45dd2a.  call `setGInstance`(v2, v1) @signature `Lorg/xms/g/auth/ExtensionAuthException;.setGInstance:(Ljava/lang/Object;)V` @kind virtual;
  #L45dd30.  call temp:= `getHInstance`(v3) @signature `Lorg/xms/g/utils/XBox;.getHInstance:()Ljava/lang/Object;` @kind virtual;
  #L45dd36.  v3:= temp @kind object;
  #L45dd38.  call `setHInstance`(v2, v3) @signature `Lorg/xms/g/auth/ExtensionAuthException;.setHInstance:(Ljava/lang/Object;)V` @kind virtual;
  #L45dd3e.  v2.`org.xms.g.auth.ExtensionAuthException.wrapper` @type ^`boolean` := v0 @kind boolean;
  #L45dd42.  return @kind void;
}
procedure `org.xms.g.auth.ExtensionAuthException` `dynamicCast`(`java.lang.Object` v0 @kind object) @signature `Lorg/xms/g/auth/ExtensionAuthException;.dynamicCast:(Ljava/lang/Object;)Lorg/xms/g/auth/ExtensionAuthException;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L45dba8.  v0:= (`org.xms.g.auth.ExtensionAuthException`) v0 @kind object;
  #L45dbac.  return v0 @kind object;
}
procedure `boolean` `isInstance`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/auth/ExtensionAuthException;.isInstance:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L45db2c.  v0:= instanceof @variable v1 @type ^`org.xms.g.utils.XGettable` @kind boolean;
  #L45db30.  if v0 != 0 then goto L45db38;
  #L45db34.  v1:= 0I;
  #L45db36.  return v1;
  #L45db38.  call temp:= `isHms`() @signature `Lorg/xms/g/utils/GlobalEnvSetting;.isHms:()Z` @kind static;
  #L45db3e.  v0:= temp;
  #L45db40.  if v0 == 0 then goto L45db56;
  #L45db44.  v1:= (`org.xms.g.utils.XGettable`) v1 @kind object;
  #L45db48.  call temp:= `getHInstance`(v1) @signature `Lorg/xms/g/utils/XGettable;.getHInstance:()Ljava/lang/Object;` @kind interface;
  #L45db4e.  v1:= temp @kind object;
  #L45db50.  v1:= instanceof @variable v1 @type ^`com.huawei.hms.support.hwid.common.HuaweiIdAuthException` @kind boolean;
  #L45db54.  return v1;
  #L45db56.  v1:= (`org.xms.g.utils.XGettable`) v1 @kind object;
  #L45db5a.  call temp:= `getGInstance`(v1) @signature `Lorg/xms/g/utils/XGettable;.getGInstance:()Ljava/lang/Object;` @kind interface;
  #L45db60.  v1:= temp @kind object;
  #L45db62.  v1:= instanceof @variable v1 @type ^`com.google.android.gms.auth.GoogleAuthException` @kind boolean;
  #L45db66.  return v1;
}
procedure `java.lang.Object` `getGInstance`(`org.xms.g.auth.ExtensionAuthException` v1 @kind this) @signature `Lorg/xms/g/auth/ExtensionAuthException;.getGInstance:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45db78.  v0:= v1.`org.xms.g.auth.ExtensionAuthException.gInstance` @type ^`java.lang.Object` @kind object;
  #L45db7c.  return v0 @kind object;
}
procedure `java.lang.Object` `getHInstance`(`org.xms.g.auth.ExtensionAuthException` v1 @kind this) @signature `Lorg/xms/g/auth/ExtensionAuthException;.getHInstance:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45db90.  v0:= v1.`org.xms.g.auth.ExtensionAuthException.hInstance` @type ^`java.lang.Object` @kind object;
  #L45db94.  return v0 @kind object;
}
procedure `void` `setGInstance`(`org.xms.g.auth.ExtensionAuthException` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/auth/ExtensionAuthException;.setGInstance:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L45dd54.  v0.`org.xms.g.auth.ExtensionAuthException.gInstance` @type ^`java.lang.Object` := v1 @kind object;
  #L45dd58.  return @kind void;
}
procedure `void` `setHInstance`(`org.xms.g.auth.ExtensionAuthException` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/auth/ExtensionAuthException;.setHInstance:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L45dd6c.  v0.`org.xms.g.auth.ExtensionAuthException.hInstance` @type ^`java.lang.Object` := v1 @kind object;
  #L45dd70.  return @kind void;
}
