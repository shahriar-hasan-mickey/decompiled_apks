record `org.xms.g.vision.Detector$HImpl` @kind class @AccessFlag  extends `com.huawei.hms.mlsdk.common.MLAnalyzer` @kind class {
  `org.xms.g.vision.Detector` `org.xms.g.vision.Detector$HImpl.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.xms.g.vision.Detector$HImpl` v0 @kind this, `org.xms.g.vision.Detector` v1 @kind object) @signature `Lorg/xms/g/vision/Detector$HImpl;.<init>:(Lorg/xms/g/vision/Detector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L480b54.  v0.`org.xms.g.vision.Detector$HImpl.this$0` @type ^`org.xms.g.vision.Detector` := v1 @kind object;
  #L480b58.  call `<init>`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.<init>:()V` @kind direct;
  #L480b5e.  return @kind void;
}
procedure `android.util.SparseArray` `analyseFrame`(`org.xms.g.vision.Detector$HImpl` v4 @kind this, `com.huawei.hms.mlsdk.common.MLFrame` v5 @kind object) @signature `Lorg/xms/g/vision/Detector$HImpl;.analyseFrame:(Lcom/huawei/hms/mlsdk/common/MLFrame;)Landroid/util/SparseArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L480a94.  v0:= v4.`org.xms.g.vision.Detector$HImpl.this$0` @type ^`org.xms.g.vision.Detector` @kind object;
  #L480a98.  v1:= new `org.xms.g.vision.Frame`;
  #L480a9c.  v2:= new `org.xms.g.utils.XBox`;
  #L480aa0.  v3:= 0I;
  #L480aa2.  call `<init>`(v2, v3, v5) @signature `Lorg/xms/g/utils/XBox;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L480aa8.  call `<init>`(v1, v2) @signature `Lorg/xms/g/vision/Frame;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L480aae.  call temp:= `detect`(v0, v1) @signature `Lorg/xms/g/vision/Detector;.detect:(Lorg/xms/g/vision/Frame;)Landroid/util/SparseArray;` @kind virtual;
  #L480ab4.  v5:= temp @kind object;
  #L480ab6.  v0:= new `org.xms.g.vision.Detector$HImpl$1`;
  #L480aba.  call `<init>`(v0, v4) @signature `Lorg/xms/g/vision/Detector$HImpl$1;.<init>:(Lorg/xms/g/vision/Detector$HImpl;)V` @kind direct;
  #L480ac0.  call temp:= `genericArrayCopy`(v5, v0) @signature `Lorg/xms/g/utils/Utils;.genericArrayCopy:(Landroid/util/SparseArray;Lorg/xms/g/utils/Function;)Landroid/util/SparseArray;` @kind static;
  #L480ac6.  v5:= temp @kind object;
  #L480ac8.  return v5 @kind object;
}
procedure `void` `destroy`(`org.xms.g.vision.Detector$HImpl` v1 @kind this) @signature `Lorg/xms/g/vision/Detector$HImpl;.destroy:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480b70.  v0:= v1.`org.xms.g.vision.Detector$HImpl.this$0` @type ^`org.xms.g.vision.Detector` @kind object;
  #L480b74.  call `release`(v0) @signature `Lorg/xms/g/vision/Detector;.release:()V` @kind virtual;
  #L480b7a.  return @kind void;
}
procedure `void` `destroyCallSuper`(`org.xms.g.vision.Detector$HImpl` v0 @kind this) @signature `Lorg/xms/g/vision/Detector$HImpl;.destroyCallSuper:()V` @AccessFlag PUBLIC {
    temp;

  #L480b8c.  call `destroy`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.destroy:()V` @kind super;
  #L480b92.  return @kind void;
}
procedure `boolean` `isAvailable`(`org.xms.g.vision.Detector$HImpl` v1 @kind this) @signature `Lorg/xms/g/vision/Detector$HImpl;.isAvailable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480adc.  v0:= v1.`org.xms.g.vision.Detector$HImpl.this$0` @type ^`org.xms.g.vision.Detector` @kind object;
  #L480ae0.  call temp:= `isOperational`(v0) @signature `Lorg/xms/g/vision/Detector;.isOperational:()Z` @kind virtual;
  #L480ae6.  v0:= temp;
  #L480ae8.  return v0;
}
procedure `boolean` `isAvailableCallSuper`(`org.xms.g.vision.Detector$HImpl` v1 @kind this) @signature `Lorg/xms/g/vision/Detector$HImpl;.isAvailableCallSuper:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480afc.  call temp:= `isAvailable`(v1) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.isAvailable:()Z` @kind super;
  #L480b02.  v0:= temp;
  #L480b04.  return v0;
}
procedure `void` `obtainPicture`(`org.xms.g.vision.Detector$HImpl` v4 @kind this, `com.huawei.hms.mlsdk.common.MLFrame` v5 @kind object) @signature `Lorg/xms/g/vision/Detector$HImpl;.obtainPicture:(Lcom/huawei/hms/mlsdk/common/MLFrame;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L480ba4.  v0:= v4.`org.xms.g.vision.Detector$HImpl.this$0` @type ^`org.xms.g.vision.Detector` @kind object;
  #L480ba8.  v1:= new `org.xms.g.vision.Frame`;
  #L480bac.  v2:= new `org.xms.g.utils.XBox`;
  #L480bb0.  v3:= 0I;
  #L480bb2.  call `<init>`(v2, v3, v5) @signature `Lorg/xms/g/utils/XBox;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L480bb8.  call `<init>`(v1, v2) @signature `Lorg/xms/g/vision/Frame;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L480bbe.  call `receiveFrame`(v0, v1) @signature `Lorg/xms/g/vision/Detector;.receiveFrame:(Lorg/xms/g/vision/Frame;)V` @kind virtual;
  #L480bc4.  return @kind void;
}
procedure `void` `obtainPictureCallSuper`(`org.xms.g.vision.Detector$HImpl` v0 @kind this, `com.huawei.hms.mlsdk.common.MLFrame` v1 @kind object) @signature `Lorg/xms/g/vision/Detector$HImpl;.obtainPictureCallSuper:(Lcom/huawei/hms/mlsdk/common/MLFrame;)V` @AccessFlag PUBLIC {
    temp;

  #L480bd8.  call `obtainPicture`(v0, v1) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.obtainPicture:(Lcom/huawei/hms/mlsdk/common/MLFrame;)V` @kind super;
  #L480bde.  return @kind void;
}
procedure `void` `setTransactor`(`org.xms.g.vision.Detector$HImpl` v4 @kind this, `com.huawei.hms.mlsdk.common.MLAnalyzer$MLTransactor` v5 @kind object) @signature `Lorg/xms/g/vision/Detector$HImpl;.setTransactor:(Lcom/huawei/hms/mlsdk/common/MLAnalyzer$MLTransactor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L480bf0.  v0:= v4.`org.xms.g.vision.Detector$HImpl.this$0` @type ^`org.xms.g.vision.Detector` @kind object;
  #L480bf4.  v1:= new `org.xms.g.vision.Detector$Processor$XImpl`;
  #L480bf8.  v2:= new `org.xms.g.utils.XBox`;
  #L480bfc.  v3:= 0I;
  #L480bfe.  call `<init>`(v2, v3, v5) @signature `Lorg/xms/g/utils/XBox;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L480c04.  call `<init>`(v1, v2) @signature `Lorg/xms/g/vision/Detector$Processor$XImpl;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L480c0a.  call `setProcessor`(v0, v1) @signature `Lorg/xms/g/vision/Detector;.setProcessor:(Lorg/xms/g/vision/Detector$Processor;)V` @kind virtual;
  #L480c10.  return @kind void;
}
procedure `void` `setTransactorCallSuper`(`org.xms.g.vision.Detector$HImpl` v0 @kind this, `com.huawei.hms.mlsdk.common.MLAnalyzer$MLTransactor` v1 @kind object) @signature `Lorg/xms/g/vision/Detector$HImpl;.setTransactorCallSuper:(Lcom/huawei/hms/mlsdk/common/MLAnalyzer$MLTransactor;)V` @AccessFlag PUBLIC {
    temp;

  #L480c24.  call `setTransactor`(v0, v1) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.setTransactor:(Lcom/huawei/hms/mlsdk/common/MLAnalyzer$MLTransactor;)V` @kind super;
  #L480c2a.  return @kind void;
}
procedure `boolean` `traceItem`(`org.xms.g.vision.Detector$HImpl` v1 @kind this, `int` v2 ) @signature `Lorg/xms/g/vision/Detector$HImpl;.traceItem:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480b18.  v0:= v1.`org.xms.g.vision.Detector$HImpl.this$0` @type ^`org.xms.g.vision.Detector` @kind object;
  #L480b1c.  call temp:= `setFocus`(v0, v2) @signature `Lorg/xms/g/vision/Detector;.setFocus:(I)Z` @kind virtual;
  #L480b22.  v2:= temp;
  #L480b24.  return v2;
}
procedure `boolean` `traceItemCallSuper`(`org.xms.g.vision.Detector$HImpl` v0 @kind this, `int` v1 ) @signature `Lorg/xms/g/vision/Detector$HImpl;.traceItemCallSuper:(I)Z` @AccessFlag PUBLIC {
    temp;

  #L480b38.  call temp:= `traceItem`(v0, v1) @signature `Lcom/huawei/hms/mlsdk/common/MLAnalyzer;.traceItem:(I)Z` @kind super;
  #L480b3e.  v1:= temp;
  #L480b40.  return v1;
}
