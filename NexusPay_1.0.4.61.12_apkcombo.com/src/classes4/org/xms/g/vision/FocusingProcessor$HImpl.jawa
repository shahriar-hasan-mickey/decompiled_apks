record `org.xms.g.vision.FocusingProcessor$HImpl` @kind class @AccessFlag  extends `com.huawei.hms.mlsdk.common.MLProminentTransactor` @kind class {
  `org.xms.g.vision.FocusingProcessor` `org.xms.g.vision.FocusingProcessor$HImpl.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.xms.g.vision.FocusingProcessor$HImpl` v0 @kind this, `org.xms.g.vision.FocusingProcessor` v1 @kind object, `com.huawei.hms.mlsdk.common.MLAnalyzer` v2 @kind object, `com.huawei.hms.mlsdk.common.MLResultTrailer` v3 @kind object) @signature `Lorg/xms/g/vision/FocusingProcessor$HImpl;.<init>:(Lorg/xms/g/vision/FocusingProcessor;Lcom/huawei/hms/mlsdk/common/MLAnalyzer;Lcom/huawei/hms/mlsdk/common/MLResultTrailer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4815d0.  v0.`org.xms.g.vision.FocusingProcessor$HImpl.this$0` @type ^`org.xms.g.vision.FocusingProcessor` := v1 @kind object;
  #L4815d4.  call `<init>`(v0, v2, v3) @signature `Lcom/huawei/hms/mlsdk/common/MLProminentTransactor;.<init>:(Lcom/huawei/hms/mlsdk/common/MLAnalyzer;Lcom/huawei/hms/mlsdk/common/MLResultTrailer;)V` @kind direct;
  #L4815da.  return @kind void;
}
procedure `void` `destroy`(`org.xms.g.vision.FocusingProcessor$HImpl` v1 @kind this) @signature `Lorg/xms/g/vision/FocusingProcessor$HImpl;.destroy:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4815ec.  v0:= v1.`org.xms.g.vision.FocusingProcessor$HImpl.this$0` @type ^`org.xms.g.vision.FocusingProcessor` @kind object;
  #L4815f0.  call `release`(v0) @signature `Lorg/xms/g/vision/FocusingProcessor;.release:()V` @kind virtual;
  #L4815f6.  return @kind void;
}
procedure `void` `destroyCallSuper`(`org.xms.g.vision.FocusingProcessor$HImpl` v0 @kind this) @signature `Lorg/xms/g/vision/FocusingProcessor$HImpl;.destroyCallSuper:()V` @AccessFlag PUBLIC {
    temp;

  #L481608.  call `destroy`(v0) @signature `Lcom/huawei/hms/mlsdk/common/MLProminentTransactor;.destroy:()V` @kind super;
  #L48160e.  return @kind void;
}
procedure `int` `getSpecificTarget`(`org.xms.g.vision.FocusingProcessor$HImpl` v4 @kind this, `com.huawei.hms.mlsdk.common.MLAnalyzer$Result` v5 @kind object) @signature `Lorg/xms/g/vision/FocusingProcessor$HImpl;.getSpecificTarget:(Lcom/huawei/hms/mlsdk/common/MLAnalyzer$Result;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L481594.  v0:= v4.`org.xms.g.vision.FocusingProcessor$HImpl.this$0` @type ^`org.xms.g.vision.FocusingProcessor` @kind object;
  #L481598.  v1:= 0I;
  #L48159a.  if v5 != 0 then goto L4815a0;
  #L48159e.  goto L4815b6;
  #L4815a0.  v2:= new `org.xms.g.vision.Detector$Detections`;
  #L4815a4.  v3:= new `org.xms.g.utils.XBox`;
  #L4815a8.  call `<init>`(v3, v1, v5) @signature `Lorg/xms/g/utils/XBox;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L4815ae.  call `<init>`(v2, v3) @signature `Lorg/xms/g/vision/Detector$Detections;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L4815b4.  v1:= v2 @kind object;
  #L4815b6.  call temp:= `selectFocus`(v0, v1) @signature `Lorg/xms/g/vision/FocusingProcessor;.selectFocus:(Lorg/xms/g/vision/Detector$Detections;)I` @kind virtual;
  #L4815bc.  v5:= temp;
  #L4815be.  return v5;
}
