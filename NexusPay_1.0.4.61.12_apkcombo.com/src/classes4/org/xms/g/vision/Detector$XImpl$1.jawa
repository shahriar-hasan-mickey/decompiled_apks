record `org.xms.g.vision.Detector$XImpl$1` @kind class @AccessFlag  extends `org.xms.g.utils.Function` @kind interface {
  `org.xms.g.vision.Detector$XImpl` `org.xms.g.vision.Detector$XImpl$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.xms.g.vision.Detector$XImpl$1` v0 @kind this, `org.xms.g.vision.Detector$XImpl` v1 @kind object) @signature `Lorg/xms/g/vision/Detector$XImpl$1;.<init>:(Lorg/xms/g/vision/Detector$XImpl;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L480edc.  v0.`org.xms.g.vision.Detector$XImpl$1.this$0` @type ^`org.xms.g.vision.Detector$XImpl` := v1 @kind object;
  #L480ee0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L480ee6.  return @kind void;
}
procedure `java.lang.Object` `apply`(`org.xms.g.vision.Detector$XImpl$1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/xms/g/vision/Detector$XImpl$1;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L480eb4.  v0:= "ML_GMS" @kind object;
  #L480eb8.  call temp:= `getXmsMap`(v0) @signature `Lorg/xms/g/utils/Utils;.getXmsMap:(Ljava/lang/String;)Ljava/util/Map;` @kind static;
  #L480ebe.  v0:= temp @kind object;
  #L480ec0.  call temp:= `getXmsObjectWithHmsObject`(v2, v0) @signature `Lorg/xms/g/utils/Utils;.getXmsObjectWithHmsObject:(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;` @kind static;
  #L480ec6.  v2:= temp @kind object;
  #L480ec8.  return v2 @kind object;
}
