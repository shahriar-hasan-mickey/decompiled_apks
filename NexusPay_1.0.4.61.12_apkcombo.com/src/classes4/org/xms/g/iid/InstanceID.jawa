record `org.xms.g.iid.InstanceID` @kind class @AccessFlag PUBLIC extends `org.xms.g.utils.XObject` @kind class {
}
procedure `void` `<init>`(`org.xms.g.iid.InstanceID` v0 @kind this, `org.xms.g.utils.XBox` v1 @kind object) @signature `Lorg/xms/g/iid/InstanceID;.<init>:(Lorg/xms/g/utils/XBox;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L47724c.  call `<init>`(v0, v1) @signature `Lorg/xms/g/utils/XObject;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L477252.  return @kind void;
}
procedure `org.xms.g.iid.InstanceID` `dynamicCast`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/iid/InstanceID;.dynamicCast:(Ljava/lang/Object;)Lorg/xms/g/iid/InstanceID;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47720c.  v1:= new `java.lang.RuntimeException`;
  #L477210.  v0:= "Not Supported" @kind object;
  #L477214.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47721a.  throw v1;
}
procedure `java.lang.String` `getERROR_MAIN_THREAD`() @signature `Lorg/xms/g/iid/InstanceID;.getERROR_MAIN_THREAD:()Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47710c.  v0:= new `java.lang.RuntimeException`;
  #L477110.  v1:= "Not Supported" @kind object;
  #L477114.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47711a.  throw v0;
}
procedure `java.lang.String` `getERROR_MISSING_INSTANCEID_SERVICE`() @signature `Lorg/xms/g/iid/InstanceID;.getERROR_MISSING_INSTANCEID_SERVICE:()Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47712c.  v0:= new `java.lang.RuntimeException`;
  #L477130.  v1:= "Not Supported" @kind object;
  #L477134.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47713a.  throw v0;
}
procedure `java.lang.String` `getERROR_SERVICE_NOT_AVAILABLE`() @signature `Lorg/xms/g/iid/InstanceID;.getERROR_SERVICE_NOT_AVAILABLE:()Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47714c.  v0:= new `java.lang.RuntimeException`;
  #L477150.  v1:= "Not Supported" @kind object;
  #L477154.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47715a.  throw v0;
}
procedure `java.lang.String` `getERROR_TIMEOUT`() @signature `Lorg/xms/g/iid/InstanceID;.getERROR_TIMEOUT:()Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L47716c.  v0:= new `java.lang.RuntimeException`;
  #L477170.  v1:= "Not Supported" @kind object;
  #L477174.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47717a.  throw v0;
}
procedure `org.xms.g.iid.InstanceID` `getInstance`(`android.content.Context` v1 @kind object) @signature `Lorg/xms/g/iid/InstanceID;.getInstance:(Landroid/content/Context;)Lorg/xms/g/iid/InstanceID;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47722c.  v1:= new `java.lang.RuntimeException`;
  #L477230.  v0:= "Not Supported" @kind object;
  #L477234.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47723a.  throw v1;
}
procedure `boolean` `isInstance`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/iid/InstanceID;.isInstance:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4770ec.  v1:= new `java.lang.RuntimeException`;
  #L4770f0.  v0:= "Not Supported" @kind object;
  #L4770f4.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4770fa.  throw v1;
}
procedure `void` `deleteInstanceID`(`org.xms.g.iid.InstanceID` v2 @kind this) @signature `Lorg/xms/g/iid/InstanceID;.deleteInstanceID:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L477264.  v0:= new `java.lang.RuntimeException`;
  #L477268.  v1:= "Not Supported" @kind object;
  #L47726c.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L477272.  throw v0;
}
procedure `void` `deleteToken`(`org.xms.g.iid.InstanceID` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/xms/g/iid/InstanceID;.deleteToken:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L477284.  v1:= new `java.lang.RuntimeException`;
  #L477288.  v2:= "Not Supported" @kind object;
  #L47728c.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L477292.  throw v1;
}
procedure `long` `getCreationTime`(`org.xms.g.iid.InstanceID` v2 @kind this) @signature `Lorg/xms/g/iid/InstanceID;.getCreationTime:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4771ec.  v0:= new `java.lang.RuntimeException`;
  #L4771f0.  v1:= "Not Supported" @kind object;
  #L4771f4.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4771fa.  throw v0;
}
procedure `java.lang.String` `getId`(`org.xms.g.iid.InstanceID` v2 @kind this) @signature `Lorg/xms/g/iid/InstanceID;.getId:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L47718c.  v0:= new `java.lang.RuntimeException`;
  #L477190.  v1:= "Not Supported" @kind object;
  #L477194.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47719a.  throw v0;
}
procedure `java.lang.String` `getToken`(`org.xms.g.iid.InstanceID` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/xms/g/iid/InstanceID;.getToken:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L4771ac.  v1:= new `java.lang.RuntimeException`;
  #L4771b0.  v2:= "Not Supported" @kind object;
  #L4771b4.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4771ba.  throw v1;
}
procedure `java.lang.String` `getToken`(`org.xms.g.iid.InstanceID` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `android.os.Bundle` v3 @kind object) @signature `Lorg/xms/g/iid/InstanceID;.getToken:(Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L4771cc.  v1:= new `java.lang.RuntimeException`;
  #L4771d0.  v2:= "Not Supported" @kind object;
  #L4771d4.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4771da.  throw v1;
}
