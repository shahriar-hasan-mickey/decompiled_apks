record `org.xms.g.utils.XmsLog` @kind class @AccessFlag PUBLIC {
}
global `boolean` `@@org.xms.g.utils.XmsLog.DEBUG_ENABLE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.xms.g.utils.XmsLog.LOG_LEVEL_CLOSE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.xms.g.utils.XmsLog.LOG_LEVEL_DEBUG` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.xms.g.utils.XmsLog.LOG_LEVEL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.xms.g.utils.XmsLog.LOG_LEVEL_INFO` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.xms.g.utils.XmsLog.LOG_LEVEL_WARN` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@org.xms.g.utils.XmsLog.TAG_XmsLog` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.xms.g.utils.XmsLog$XmsLogInterface` `@@org.xms.g.utils.XmsLog.logImpl` @AccessFlag PRIVATE_STATIC;
global `int` `@@org.xms.g.utils.XmsLog.logLevel` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/xms/g/utils/XmsLog;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L47f8cc.  return @kind void;
}
procedure `void` `<init>`(`org.xms.g.utils.XmsLog` v0 @kind this) @signature `Lorg/xms/g/utils/XmsLog;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L47f8e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L47f8e6.  return @kind void;
}
procedure `java.lang.String` `constructLogInfo`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/xms/g/utils/XmsLog;.constructLogInfo:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L47f758.  v0:= 0I;
  #L47f75a.  call temp:= `constructLogInfo`(v1, v2, v0) @signature `Lorg/xms/g/utils/XmsLog;.constructLogInfo:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L47f760.  v1:= temp @kind object;
  #L47f762.  return v1 @kind object;
}
procedure `java.lang.String` `constructLogInfo`(`java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object, `java.lang.Throwable` v7 @kind object) @signature `Lorg/xms/g/utils/XmsLog;.constructLogInfo:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L47f774.  v0:= new `java.lang.StringBuffer`;
  #L47f778.  call `<init>`(v0) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L47f77e.  v1:= "[" @kind object;
  #L47f782.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f788.  v2:= `@@org.xms.g.utils.XmsLog.TAG_XmsLog` @type ^`java.lang.String` @kind object;
  #L47f78c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f792.  v2:= "]" @kind object;
  #L47f796.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f79c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f7a2.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f7a8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f7ae.  v5:= "|" @kind object;
  #L47f7b2.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f7b8.  v5:= " | " @kind object;
  #L47f7bc.  if v7 == 0 then goto L47f826;
  #L47f7c0.  call temp:= `getStackTrace`(v7) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L47f7c6.  v7:= temp @kind object;
  #L47f7c8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f7ce.  v3:= 0I;
  #L47f7d0.  v4:= v7[v3] @kind object;
  #L47f7d4.  call temp:= `getClassName`(v4) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L47f7da.  v4:= temp @kind object;
  #L47f7dc.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f7e2.  v4:= "." @kind object;
  #L47f7e6.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f7ec.  v4:= v7[v3] @kind object;
  #L47f7f0.  call temp:= `getMethodName`(v4) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L47f7f6.  v4:= temp @kind object;
  #L47f7f8.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f7fe.  v4:= ":" @kind object;
  #L47f802.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f808.  v7:= v7[v3] @kind object;
  #L47f80c.  call temp:= `getLineNumber`(v7) @signature `Ljava/lang/StackTraceElement;.getLineNumber:()I` @kind virtual;
  #L47f812.  v7:= temp;
  #L47f814.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuffer;.append:(I)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f81a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f820.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f826.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f82c.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f832.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f838.  call temp:= `getCurrentTime`() @signature `Lorg/xms/g/utils/XmsLog;.getCurrentTime:()Ljava/lang/String;` @kind static;
  #L47f83e.  v5:= temp @kind object;
  #L47f840.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f846.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L47f84c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L47f852.  v5:= temp @kind object;
  #L47f854.  return v5 @kind object;
}
procedure `void` `d`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/xms/g/utils/XmsLog;.d:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47f8f8.  v0:= 0I;
  #L47f8fa.  call `d`(v1, v2, v0) @signature `Lorg/xms/g/utils/XmsLog;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L47f900.  return @kind void;
}
procedure `void` `d`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lorg/xms/g/utils/XmsLog;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L47f914.  return @kind void;
}
procedure `org.xms.g.utils.XmsLog$XmsLogInterface` `defaultImpl`() @signature `Lorg/xms/g/utils/XmsLog;.defaultImpl:()Lorg/xms/g/utils/XmsLog$XmsLogInterface;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L47f8b0.  v0:= new `org.xms.g.utils.XmsLog$1`;
  #L47f8b4.  call `<init>`(v0) @signature `Lorg/xms/g/utils/XmsLog$1;.<init>:()V` @kind direct;
  #L47f8ba.  return v0 @kind object;
}
procedure `void` `e`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/xms/g/utils/XmsLog;.e:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47f928.  v0:= 0I;
  #L47f92a.  call `e`(v1, v2, v0) @signature `Lorg/xms/g/utils/XmsLog;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L47f930.  return @kind void;
}
procedure `void` `e`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lorg/xms/g/utils/XmsLog;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L47f944.  return @kind void;
}
procedure `void` `ensureLogImpl`() @signature `Lorg/xms/g/utils/XmsLog;.ensureLogImpl:()V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L47f958.  v0:= `@@org.xms.g.utils.XmsLog.logImpl` @type ^`org.xms.g.utils.XmsLog$XmsLogInterface` @kind object;
  #L47f95c.  if v0 != 0 then goto L47f96e;
  #L47f960.  call temp:= `defaultImpl`() @signature `Lorg/xms/g/utils/XmsLog;.defaultImpl:()Lorg/xms/g/utils/XmsLog$XmsLogInterface;` @kind static;
  #L47f966.  v0:= temp @kind object;
  #L47f968.  call `newInstance`(v0) @signature `Lorg/xms/g/utils/XmsLog;.newInstance:(Lorg/xms/g/utils/XmsLog$XmsLogInterface;)V` @kind static;
  #L47f96e.  return @kind void;
}
procedure `java.lang.String` `getCurrentTime`() @signature `Lorg/xms/g/utils/XmsLog;.getCurrentTime:()Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L47f868.  v0:= new `java.text.SimpleDateFormat`;
  #L47f86c.  v1:= `@@java.util.Locale.CHINA` @type ^`java.util.Locale` @kind object;
  #L47f870.  v2:= "yyyy-MM-dd HH:mm:ss" @kind object;
  #L47f874.  call `<init>`(v0, v2, v1) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V` @kind direct;
  #L47f87a.  v1:= "GMT+8" @kind object;
  #L47f87e.  call temp:= `getTimeZone`(v1) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L47f884.  v1:= temp @kind object;
  #L47f886.  call `setTimeZone`(v0, v1) @signature `Ljava/text/SimpleDateFormat;.setTimeZone:(Ljava/util/TimeZone;)V` @kind virtual;
  #L47f88c.  v1:= new `java.util.Date`;
  #L47f890.  call `<init>`(v1) @signature `Ljava/util/Date;.<init>:()V` @kind direct;
  #L47f896.  call temp:= `format`(v0, v1) @signature `Ljava/text/SimpleDateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L47f89c.  v0:= temp @kind object;
  #L47f89e.  return v0 @kind object;
}
procedure `void` `i`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/xms/g/utils/XmsLog;.i:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47f980.  v0:= 0I;
  #L47f982.  call `i`(v1, v2, v0) @signature `Lorg/xms/g/utils/XmsLog;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L47f988.  return @kind void;
}
procedure `void` `i`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lorg/xms/g/utils/XmsLog;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L47f99c.  return @kind void;
}
procedure `void` `newInstance`(`org.xms.g.utils.XmsLog$XmsLogInterface` v0 @kind object) @signature `Lorg/xms/g/utils/XmsLog;.newInstance:(Lorg/xms/g/utils/XmsLog$XmsLogInterface;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L47f9b0.  `@@org.xms.g.utils.XmsLog.logImpl` @type ^`org.xms.g.utils.XmsLog$XmsLogInterface` := v0 @kind object;
  #L47f9b4.  return @kind void;
}
procedure `void` `w`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/xms/g/utils/XmsLog;.w:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L47f9c8.  v0:= 0I;
  #L47f9ca.  call `w`(v1, v2, v0) @signature `Lorg/xms/g/utils/XmsLog;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L47f9d0.  return @kind void;
}
procedure `void` `w`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lorg/xms/g/utils/XmsLog;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L47f9e4.  return @kind void;
}
