record `org.xms.g.gcm.Task` @kind class @AccessFlag PUBLIC extends `org.xms.g.utils.XObject` @kind class, `android.os.Parcelable` @kind interface {
}
global `android.os.Parcelable$Creator` `@@org.xms.g.gcm.Task.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/xms/g/gcm/Task;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L476f60.  v0:= new `org.xms.g.gcm.Task$1`;
  #L476f64.  call `<init>`(v0) @signature `Lorg/xms/g/gcm/Task$1;.<init>:()V` @kind direct;
  #L476f6a.  `@@org.xms.g.gcm.Task.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L476f6e.  return @kind void;
}
procedure `void` `<init>`(`org.xms.g.gcm.Task` v0 @kind this, `org.xms.g.utils.XBox` v1 @kind object) @signature `Lorg/xms/g/gcm/Task;.<init>:(Lorg/xms/g/utils/XBox;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L476f80.  call `<init>`(v0, v1) @signature `Lorg/xms/g/utils/XObject;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L476f86.  return @kind void;
}
procedure `org.xms.g.gcm.Task` `dynamicCast`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/gcm/Task;.dynamicCast:(Ljava/lang/Object;)Lorg/xms/g/gcm/Task;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L476f40.  v1:= new `java.lang.RuntimeException`;
  #L476f44.  v0:= "Not Supported" @kind object;
  #L476f48.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476f4e.  throw v1;
}
procedure `int` `getEXTRAS_LIMIT_BYTES`() @signature `Lorg/xms/g/gcm/Task;.getEXTRAS_LIMIT_BYTES:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476e40.  v0:= new `java.lang.RuntimeException`;
  #L476e44.  v1:= "Not Supported" @kind object;
  #L476e48.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476e4e.  throw v0;
}
procedure `int` `getNETWORK_STATE_ANY`() @signature `Lorg/xms/g/gcm/Task;.getNETWORK_STATE_ANY:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476e60.  v0:= new `java.lang.RuntimeException`;
  #L476e64.  v1:= "Not Supported" @kind object;
  #L476e68.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476e6e.  throw v0;
}
procedure `int` `getNETWORK_STATE_CONNECTED`() @signature `Lorg/xms/g/gcm/Task;.getNETWORK_STATE_CONNECTED:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476e80.  v0:= new `java.lang.RuntimeException`;
  #L476e84.  v1:= "Not Supported" @kind object;
  #L476e88.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476e8e.  throw v0;
}
procedure `int` `getNETWORK_STATE_UNMETERED`() @signature `Lorg/xms/g/gcm/Task;.getNETWORK_STATE_UNMETERED:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476ea0.  v0:= new `java.lang.RuntimeException`;
  #L476ea4.  v1:= "Not Supported" @kind object;
  #L476ea8.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476eae.  throw v0;
}
procedure `long` `getUNINITIALIZED`() @signature `Lorg/xms/g/gcm/Task;.getUNINITIALIZED:()J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L476f20.  v0:= new `java.lang.RuntimeException`;
  #L476f24.  v1:= "Not Supported" @kind object;
  #L476f28.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476f2e.  throw v0;
}
procedure `boolean` `isInstance`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/gcm/Task;.isInstance:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L476dc0.  v1:= new `java.lang.RuntimeException`;
  #L476dc4.  v0:= "Not Supported" @kind object;
  #L476dc8.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476dce.  throw v1;
}
procedure `int` `describeContents`(`org.xms.g.gcm.Task` v2 @kind this) @signature `Lorg/xms/g/gcm/Task;.describeContents:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476e20.  v0:= new `java.lang.RuntimeException`;
  #L476e24.  v1:= "Not Supported" @kind object;
  #L476e28.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476e2e.  throw v0;
}
procedure `android.os.Bundle` `getExtras`(`org.xms.g.gcm.Task` v2 @kind this) @signature `Lorg/xms/g/gcm/Task;.getExtras:()Landroid/os/Bundle;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476d80.  v0:= new `java.lang.RuntimeException`;
  #L476d84.  v1:= "Not Supported" @kind object;
  #L476d88.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476d8e.  throw v0;
}
procedure `int` `getRequiredNetwork`(`org.xms.g.gcm.Task` v2 @kind this) @signature `Lorg/xms/g/gcm/Task;.getRequiredNetwork:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476ec0.  v0:= new `java.lang.RuntimeException`;
  #L476ec4.  v1:= "Not Supported" @kind object;
  #L476ec8.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476ece.  throw v0;
}
procedure `boolean` `getRequiresCharging`(`org.xms.g.gcm.Task` v2 @kind this) @signature `Lorg/xms/g/gcm/Task;.getRequiresCharging:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476da0.  v0:= new `java.lang.RuntimeException`;
  #L476da4.  v1:= "Not Supported" @kind object;
  #L476da8.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476dae.  throw v0;
}
procedure `java.lang.String` `getServiceName`(`org.xms.g.gcm.Task` v2 @kind this) @signature `Lorg/xms/g/gcm/Task;.getServiceName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476ee0.  v0:= new `java.lang.RuntimeException`;
  #L476ee4.  v1:= "Not Supported" @kind object;
  #L476ee8.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476eee.  throw v0;
}
procedure `java.lang.String` `getTag`(`org.xms.g.gcm.Task` v2 @kind this) @signature `Lorg/xms/g/gcm/Task;.getTag:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476f00.  v0:= new `java.lang.RuntimeException`;
  #L476f04.  v1:= "Not Supported" @kind object;
  #L476f08.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476f0e.  throw v0;
}
procedure `boolean` `isPersisted`(`org.xms.g.gcm.Task` v2 @kind this) @signature `Lorg/xms/g/gcm/Task;.isPersisted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476de0.  v0:= new `java.lang.RuntimeException`;
  #L476de4.  v1:= "Not Supported" @kind object;
  #L476de8.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476dee.  throw v0;
}
procedure `boolean` `isUpdateCurrent`(`org.xms.g.gcm.Task` v2 @kind this) @signature `Lorg/xms/g/gcm/Task;.isUpdateCurrent:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476e00.  v0:= new `java.lang.RuntimeException`;
  #L476e04.  v1:= "Not Supported" @kind object;
  #L476e08.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476e0e.  throw v0;
}
procedure `void` `writeToParcel`(`org.xms.g.gcm.Task` v0 @kind this, `android.os.Parcel` v1 @kind object, `int` v2 ) @signature `Lorg/xms/g/gcm/Task;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC {
    temp;

  #L476f98.  v1:= new `java.lang.RuntimeException`;
  #L476f9c.  v2:= "Not Supported" @kind object;
  #L476fa0.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476fa6.  throw v1;
}
