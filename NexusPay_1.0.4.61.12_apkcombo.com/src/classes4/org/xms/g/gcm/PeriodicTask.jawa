record `org.xms.g.gcm.PeriodicTask` @kind class @AccessFlag PUBLIC extends `org.xms.g.gcm.Task` @kind class {
}
global `android.os.Parcelable$Creator` `@@org.xms.g.gcm.PeriodicTask.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/xms/g/gcm/PeriodicTask;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L476900.  v0:= new `org.xms.g.gcm.PeriodicTask$1`;
  #L476904.  call `<init>`(v0) @signature `Lorg/xms/g/gcm/PeriodicTask$1;.<init>:()V` @kind direct;
  #L47690a.  `@@org.xms.g.gcm.PeriodicTask.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L47690e.  return @kind void;
}
procedure `void` `<init>`(`org.xms.g.gcm.PeriodicTask` v0 @kind this, `org.xms.g.utils.XBox` v1 @kind object) @signature `Lorg/xms/g/gcm/PeriodicTask;.<init>:(Lorg/xms/g/utils/XBox;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L476920.  call `<init>`(v0, v1) @signature `Lorg/xms/g/gcm/Task;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L476926.  return @kind void;
}
procedure `org.xms.g.gcm.PeriodicTask` `dynamicCast`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/gcm/PeriodicTask;.dynamicCast:(Ljava/lang/Object;)Lorg/xms/g/gcm/PeriodicTask;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4768e0.  v1:= new `java.lang.RuntimeException`;
  #L4768e4.  v0:= "Not Supported" @kind object;
  #L4768e8.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4768ee.  throw v1;
}
procedure `boolean` `isInstance`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/gcm/PeriodicTask;.isInstance:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L476820.  v1:= new `java.lang.RuntimeException`;
  #L476824.  v0:= "Not Supported" @kind object;
  #L476828.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47682e.  throw v1;
}
procedure `long` `getFlex`(`org.xms.g.gcm.PeriodicTask` v2 @kind this) @signature `Lorg/xms/g/gcm/PeriodicTask;.getFlex:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476860.  v0:= new `java.lang.RuntimeException`;
  #L476864.  v1:= "Not Supported" @kind object;
  #L476868.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47686e.  throw v0;
}
procedure `long` `getMFlexInSeconds`(`org.xms.g.gcm.PeriodicTask` v2 @kind this) @signature `Lorg/xms/g/gcm/PeriodicTask;.getMFlexInSeconds:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476880.  v0:= new `java.lang.RuntimeException`;
  #L476884.  v1:= "Not Supported" @kind object;
  #L476888.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47688e.  throw v0;
}
procedure `long` `getMIntervalInSeconds`(`org.xms.g.gcm.PeriodicTask` v2 @kind this) @signature `Lorg/xms/g/gcm/PeriodicTask;.getMIntervalInSeconds:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4768a0.  v0:= new `java.lang.RuntimeException`;
  #L4768a4.  v1:= "Not Supported" @kind object;
  #L4768a8.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4768ae.  throw v0;
}
procedure `long` `getPeriod`(`org.xms.g.gcm.PeriodicTask` v2 @kind this) @signature `Lorg/xms/g/gcm/PeriodicTask;.getPeriod:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4768c0.  v0:= new `java.lang.RuntimeException`;
  #L4768c4.  v1:= "Not Supported" @kind object;
  #L4768c8.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4768ce.  throw v0;
}
procedure `void` `toBundle`(`org.xms.g.gcm.PeriodicTask` v1 @kind this, `android.os.Bundle` v2 @kind object) @signature `Lorg/xms/g/gcm/PeriodicTask;.toBundle:(Landroid/os/Bundle;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L476938.  v2:= new `java.lang.RuntimeException`;
  #L47693c.  v0:= "Not Supported" @kind object;
  #L476940.  call `<init>`(v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476946.  throw v2;
}
procedure `java.lang.String` `toString`(`org.xms.g.gcm.PeriodicTask` v2 @kind this) @signature `Lorg/xms/g/gcm/PeriodicTask;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476840.  v0:= new `java.lang.RuntimeException`;
  #L476844.  v1:= "Not Supported" @kind object;
  #L476848.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L47684e.  throw v0;
}
procedure `void` `writeToParcel`(`org.xms.g.gcm.PeriodicTask` v0 @kind this, `android.os.Parcel` v1 @kind object, `int` v2 ) @signature `Lorg/xms/g/gcm/PeriodicTask;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC {
    temp;

  #L476958.  v1:= new `java.lang.RuntimeException`;
  #L47695c.  v2:= "Not Supported" @kind object;
  #L476960.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476966.  throw v1;
}
