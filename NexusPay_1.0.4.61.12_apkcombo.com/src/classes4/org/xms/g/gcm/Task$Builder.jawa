record `org.xms.g.gcm.Task$Builder` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.xms.g.utils.XObject` @kind class {
}
procedure `void` `<init>`(`org.xms.g.gcm.Task$Builder` v1 @kind this) @signature `Lorg/xms/g/gcm/Task$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L476c40.  v0:= 0I;
  #L476c42.  call `<init>`(v1, v0) @signature `Lorg/xms/g/utils/XObject;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L476c48.  return @kind void;
}
procedure `void` `<init>`(`org.xms.g.gcm.Task$Builder` v0 @kind this, `org.xms.g.utils.XBox` v1 @kind object) @signature `Lorg/xms/g/gcm/Task$Builder;.<init>:(Lorg/xms/g/utils/XBox;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L476c5c.  call `<init>`(v0, v1) @signature `Lorg/xms/g/utils/XObject;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L476c62.  return @kind void;
}
procedure `org.xms.g.gcm.Task$Builder` `dynamicCast`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/gcm/Task$Builder;.dynamicCast:(Ljava/lang/Object;)Lorg/xms/g/gcm/Task$Builder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L476c20.  v1:= new `java.lang.RuntimeException`;
  #L476c24.  v0:= "Not Supported" @kind object;
  #L476c28.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476c2e.  throw v1;
}
procedure `boolean` `isInstance`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/gcm/Task$Builder;.isInstance:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L476ba0.  v1:= new `java.lang.RuntimeException`;
  #L476ba4.  v0:= "Not Supported" @kind object;
  #L476ba8.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476bae.  throw v1;
}
procedure `org.xms.g.gcm.Task` `build`() @signature `Lorg/xms/g/gcm/Task$Builder;.build:()Lorg/xms/g/gcm/Task;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `checkConditions`(`org.xms.g.gcm.Task$Builder` v2 @kind this) @signature `Lorg/xms/g/gcm/Task$Builder;.checkConditions:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L476c74.  v0:= new `java.lang.RuntimeException`;
  #L476c78.  v1:= "Not Supported" @kind object;
  #L476c7c.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476c82.  throw v0;
}
procedure `android.os.Bundle` `getExtras`(`org.xms.g.gcm.Task$Builder` v2 @kind this) @signature `Lorg/xms/g/gcm/Task$Builder;.getExtras:()Landroid/os/Bundle;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476b20.  v0:= new `java.lang.RuntimeException`;
  #L476b24.  v1:= "Not Supported" @kind object;
  #L476b28.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476b2e.  throw v0;
}
procedure `java.lang.String` `getGcmTaskService`(`org.xms.g.gcm.Task$Builder` v2 @kind this) @signature `Lorg/xms/g/gcm/Task$Builder;.getGcmTaskService:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476be0.  v0:= new `java.lang.RuntimeException`;
  #L476be4.  v1:= "Not Supported" @kind object;
  #L476be8.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476bee.  throw v0;
}
procedure `boolean` `getIsPersisted`(`org.xms.g.gcm.Task$Builder` v2 @kind this) @signature `Lorg/xms/g/gcm/Task$Builder;.getIsPersisted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476b40.  v0:= new `java.lang.RuntimeException`;
  #L476b44.  v1:= "Not Supported" @kind object;
  #L476b48.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476b4e.  throw v0;
}
procedure `int` `getRequiredNetworkState`(`org.xms.g.gcm.Task$Builder` v2 @kind this) @signature `Lorg/xms/g/gcm/Task$Builder;.getRequiredNetworkState:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476bc0.  v0:= new `java.lang.RuntimeException`;
  #L476bc4.  v1:= "Not Supported" @kind object;
  #L476bc8.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476bce.  throw v0;
}
procedure `boolean` `getRequiresCharging`(`org.xms.g.gcm.Task$Builder` v2 @kind this) @signature `Lorg/xms/g/gcm/Task$Builder;.getRequiresCharging:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476b60.  v0:= new `java.lang.RuntimeException`;
  #L476b64.  v1:= "Not Supported" @kind object;
  #L476b68.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476b6e.  throw v0;
}
procedure `java.lang.String` `getTag`(`org.xms.g.gcm.Task$Builder` v2 @kind this) @signature `Lorg/xms/g/gcm/Task$Builder;.getTag:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476c00.  v0:= new `java.lang.RuntimeException`;
  #L476c04.  v1:= "Not Supported" @kind object;
  #L476c08.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476c0e.  throw v0;
}
procedure `boolean` `getUpdateCurrent`(`org.xms.g.gcm.Task$Builder` v2 @kind this) @signature `Lorg/xms/g/gcm/Task$Builder;.getUpdateCurrent:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L476b80.  v0:= new `java.lang.RuntimeException`;
  #L476b84.  v1:= "Not Supported" @kind object;
  #L476b88.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L476b8e.  throw v0;
}
procedure `org.xms.g.gcm.Task$Builder` `setExtras`(`android.os.Bundle` v0 @kind object) @signature `Lorg/xms/g/gcm/Task$Builder;.setExtras:(Landroid/os/Bundle;)Lorg/xms/g/gcm/Task$Builder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.xms.g.gcm.Task$Builder` `setPersisted`(`boolean` v0 ) @signature `Lorg/xms/g/gcm/Task$Builder;.setPersisted:(Z)Lorg/xms/g/gcm/Task$Builder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.xms.g.gcm.Task$Builder` `setRequiredNetwork`(`int` v0 ) @signature `Lorg/xms/g/gcm/Task$Builder;.setRequiredNetwork:(I)Lorg/xms/g/gcm/Task$Builder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.xms.g.gcm.Task$Builder` `setRequiresCharging`(`boolean` v0 ) @signature `Lorg/xms/g/gcm/Task$Builder;.setRequiresCharging:(Z)Lorg/xms/g/gcm/Task$Builder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.xms.g.gcm.Task$Builder` `setService`(`java.lang.Class` v0 @kind object) @signature `Lorg/xms/g/gcm/Task$Builder;.setService:(Ljava/lang/Class;)Lorg/xms/g/gcm/Task$Builder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.xms.g.gcm.Task$Builder` `setTag`(`java.lang.String` v0 @kind object) @signature `Lorg/xms/g/gcm/Task$Builder;.setTag:(Ljava/lang/String;)Lorg/xms/g/gcm/Task$Builder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.xms.g.gcm.Task$Builder` `setUpdateCurrent`(`boolean` v0 ) @signature `Lorg/xms/g/gcm/Task$Builder;.setUpdateCurrent:(Z)Lorg/xms/g/gcm/Task$Builder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
