record `org.xms.g.common.api.Batch` @kind class @AccessFlag PUBLIC_FINAL extends `org.xms.g.common.api.PendingResult` @kind class {
}
procedure `void` `<init>`(`org.xms.g.common.api.Batch` v0 @kind this, `org.xms.g.utils.XBox` v1 @kind object) @signature `Lorg/xms/g/common/api/Batch;.<init>:(Lorg/xms/g/utils/XBox;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L46d024.  call `<init>`(v0, v1) @signature `Lorg/xms/g/common/api/PendingResult;.<init>:(Lorg/xms/g/utils/XBox;)V` @kind direct;
  #L46d02a.  return @kind void;
}
procedure `org.xms.g.common.api.Batch` `dynamicCast`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/common/api/Batch;.dynamicCast:(Ljava/lang/Object;)Lorg/xms/g/common/api/Batch;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46cfa4.  v1:= new `java.lang.RuntimeException`;
  #L46cfa8.  v0:= "Not Supported" @kind object;
  #L46cfac.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46cfb2.  throw v1;
}
procedure `boolean` `isInstance`(`java.lang.Object` v1 @kind object) @signature `Lorg/xms/g/common/api/Batch;.isInstance:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L46cf64.  v1:= new `java.lang.RuntimeException`;
  #L46cf68.  v0:= "Not Supported" @kind object;
  #L46cf6c.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46cf72.  throw v1;
}
procedure `org.xms.g.common.api.Result` `await`(`org.xms.g.common.api.Batch` v2 @kind this) @signature `Lorg/xms/g/common/api/Batch;.await:()Lorg/xms/g/common/api/Result;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46cfe4.  v0:= new `java.lang.RuntimeException`;
  #L46cfe8.  v1:= "Not Supported" @kind object;
  #L46cfec.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46cff2.  throw v0;
}
procedure `org.xms.g.common.api.Result` `await`(`org.xms.g.common.api.Batch` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lorg/xms/g/common/api/Batch;.await:(JLjava/util/concurrent/TimeUnit;)Lorg/xms/g/common/api/Result;` @AccessFlag PUBLIC {
    temp;

  #L46d004.  v1:= new `java.lang.RuntimeException`;
  #L46d008.  v2:= "Not Supported" @kind object;
  #L46d00c.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46d012.  throw v1;
}
procedure `void` `cancel`(`org.xms.g.common.api.Batch` v2 @kind this) @signature `Lorg/xms/g/common/api/Batch;.cancel:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L46d03c.  v0:= new `java.lang.RuntimeException`;
  #L46d040.  v1:= "Not Supported" @kind object;
  #L46d044.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46d04a.  throw v0;
}
procedure `void` `clearResultCallback`(`org.xms.g.common.api.Batch` v2 @kind this) @signature `Lorg/xms/g/common/api/Batch;.clearResultCallback:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46d05c.  v0:= new `java.lang.RuntimeException`;
  #L46d060.  v1:= "Not Supported" @kind object;
  #L46d064.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46d06a.  throw v0;
}
procedure `org.xms.g.common.api.BatchResult` `createFailedResult`(`org.xms.g.common.api.Batch` v1 @kind this, `org.xms.g.common.api.Status` v2 @kind object) @signature `Lorg/xms/g/common/api/Batch;.createFailedResult:(Lorg/xms/g/common/api/Status;)Lorg/xms/g/common/api/BatchResult;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L46cfc4.  v2:= new `java.lang.RuntimeException`;
  #L46cfc8.  v0:= "Not Supported" @kind object;
  #L46cfcc.  call `<init>`(v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46cfd2.  throw v2;
}
procedure `java.lang.ref.WeakReference` `getMApiClient`(`org.xms.g.common.api.Batch` v2 @kind this) @signature `Lorg/xms/g/common/api/Batch;.getMApiClient:()Ljava/lang/ref/WeakReference;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46cf84.  v0:= new `java.lang.RuntimeException`;
  #L46cf88.  v1:= "Not Supported" @kind object;
  #L46cf8c.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46cf92.  throw v0;
}
procedure `boolean` `isCanceled`(`org.xms.g.common.api.Batch` v2 @kind this) @signature `Lorg/xms/g/common/api/Batch;.isCanceled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46cf44.  v0:= new `java.lang.RuntimeException`;
  #L46cf48.  v1:= "Not Supported" @kind object;
  #L46cf4c.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46cf52.  throw v0;
}
procedure `void` `setResultCallback`(`org.xms.g.common.api.Batch` v1 @kind this, `org.xms.g.common.api.ResultCallback` v2 @kind object) @signature `Lorg/xms/g/common/api/Batch;.setResultCallback:(Lorg/xms/g/common/api/ResultCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L46d07c.  v2:= new `java.lang.RuntimeException`;
  #L46d080.  v0:= "Not Supported" @kind object;
  #L46d084.  call `<init>`(v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46d08a.  throw v2;
}
procedure `void` `setResultCallback`(`org.xms.g.common.api.Batch` v0 @kind this, `org.xms.g.common.api.ResultCallback` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lorg/xms/g/common/api/Batch;.setResultCallback:(Lorg/xms/g/common/api/ResultCallback;JLjava/util/concurrent/TimeUnit;)V` @AccessFlag PUBLIC {
    temp;

  #L46d09c.  v1:= new `java.lang.RuntimeException`;
  #L46d0a0.  v2:= "Not Supported" @kind object;
  #L46d0a4.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46d0aa.  throw v1;
}
