record `org.xms.f.common.MessagingRepository` @kind class @AccessFlag PUBLIC {
  `org.xms.f.common.MessagingService` `org.xms.f.common.MessagingRepository.messagingService` @AccessFlag PRIVATE;
}
global `org.xms.f.common.MessagingRepository` `@@org.xms.f.common.MessagingRepository.instance` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`org.xms.f.common.MessagingRepository` v0 @kind this) @signature `Lorg/xms/f/common/MessagingRepository;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L459f4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L459f52.  return @kind void;
}
procedure `org.xms.f.common.MessagingRepository` `getInstance`(`org.xms.f.common.MessagingService` v1 @kind object) @signature `Lorg/xms/f/common/MessagingRepository;.getInstance:(Lorg/xms/f/common/MessagingService;)Lorg/xms/f/common/MessagingRepository;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L459f1c.  v0:= `@@org.xms.f.common.MessagingRepository.instance` @type ^`org.xms.f.common.MessagingRepository` @kind object;
  #L459f20.  if v0 != 0 then goto L459f36;
  #L459f24.  v0:= new `org.xms.f.common.MessagingRepository`;
  #L459f28.  call `<init>`(v0) @signature `Lorg/xms/f/common/MessagingRepository;.<init>:()V` @kind direct;
  #L459f2e.  `@@org.xms.f.common.MessagingRepository.instance` @type ^`org.xms.f.common.MessagingRepository` := v0 @kind object;
  #L459f32.  v0.`org.xms.f.common.MessagingRepository.messagingService` @type ^`org.xms.f.common.MessagingService` := v1 @kind object;
  #L459f36.  v1:= `@@org.xms.f.common.MessagingRepository.instance` @type ^`org.xms.f.common.MessagingRepository` @kind object;
  #L459f3a.  return v1 @kind object;
}
procedure `void` `onMessageReceived`(`org.xms.f.common.MessagingRepository` v1 @kind this, `org.xms.f.messaging.RemoteMessage` v2 @kind object) @signature `Lorg/xms/f/common/MessagingRepository;.onMessageReceived:(Lorg/xms/f/messaging/RemoteMessage;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L459f64.  v0:= v1.`org.xms.f.common.MessagingRepository.messagingService` @type ^`org.xms.f.common.MessagingService` @kind object;
  #L459f68.  if v0 == 0 then goto L459f72;
  #L459f6c.  call `onMessageReceived`(v0, v2) @signature `Lorg/xms/f/common/MessagingService;.onMessageReceived:(Lorg/xms/f/messaging/RemoteMessage;)V` @kind interface;
  #L459f72.  return @kind void;
}
procedure `void` `onNewToken`(`org.xms.f.common.MessagingRepository` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/xms/f/common/MessagingRepository;.onNewToken:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L459f84.  v0:= v1.`org.xms.f.common.MessagingRepository.messagingService` @type ^`org.xms.f.common.MessagingService` @kind object;
  #L459f88.  if v0 == 0 then goto L459f92;
  #L459f8c.  call `onNewToken`(v0, v2) @signature `Lorg/xms/f/common/MessagingService;.onNewToken:(Ljava/lang/String;)V` @kind interface;
  #L459f92.  return @kind void;
}
procedure `void` `setMessagingService`(`org.xms.f.common.MessagingRepository` v0 @kind this, `org.xms.f.common.MessagingService` v1 @kind object) @signature `Lorg/xms/f/common/MessagingRepository;.setMessagingService:(Lorg/xms/f/common/MessagingService;)V` @AccessFlag PUBLIC {
    temp;

  #L459fa4.  v0.`org.xms.f.common.MessagingRepository.messagingService` @type ^`org.xms.f.common.MessagingService` := v1 @kind object;
  #L459fa8.  return @kind void;
}
