record `org.mozilla.javascript.Parser` @kind class @AccessFlag PUBLIC {
  `org.mozilla.javascript.CompilerEnvirons` `org.mozilla.javascript.Parser.a` @AccessFlag ;
  `org.mozilla.javascript.ErrorReporter` `org.mozilla.javascript.Parser.b` @AccessFlag PRIVATE;
  `org.mozilla.javascript.ast.IdeErrorReporter` `org.mozilla.javascript.Parser.c` @AccessFlag PRIVATE;
  `java.lang.String` `org.mozilla.javascript.Parser.d` @AccessFlag PRIVATE;
  `char`[] `org.mozilla.javascript.Parser.e` @AccessFlag PRIVATE;
  `boolean` `org.mozilla.javascript.Parser.f` @AccessFlag ;
  `boolean` `org.mozilla.javascript.Parser.g` @AccessFlag PRIVATE;
  `org.mozilla.javascript.u` `org.mozilla.javascript.Parser.h` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.Parser.i` @AccessFlag PRIVATE;
  `boolean` `org.mozilla.javascript.Parser.inUseStrictDirective` @AccessFlag PROTECTED;
  `int` `org.mozilla.javascript.Parser.j` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.Parser.k` @AccessFlag PRIVATE;
  `java.util.List` `org.mozilla.javascript.Parser.l` @AccessFlag PRIVATE;
  `org.mozilla.javascript.ast.Comment` `org.mozilla.javascript.Parser.m` @AccessFlag PRIVATE;
  `org.mozilla.javascript.ast.LabeledStatement` `org.mozilla.javascript.Parser.n` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.Parser.nestingOfFunction` @AccessFlag PROTECTED;
  `boolean` `org.mozilla.javascript.Parser.o` @AccessFlag PRIVATE;
  `org.mozilla.javascript.ast.ScriptNode` `org.mozilla.javascript.Parser.p` @AccessFlag ;
  `org.mozilla.javascript.ast.Scope` `org.mozilla.javascript.Parser.q` @AccessFlag ;
  `int` `org.mozilla.javascript.Parser.r` @AccessFlag PRIVATE;
  `boolean` `org.mozilla.javascript.Parser.s` @AccessFlag PRIVATE;
  `java.util.Map` `org.mozilla.javascript.Parser.t` @AccessFlag PRIVATE;
  `java.util.List` `org.mozilla.javascript.Parser.u` @AccessFlag PRIVATE;
  `java.util.List` `org.mozilla.javascript.Parser.v` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.Parser.w` @AccessFlag PRIVATE;
  `java.lang.String` `org.mozilla.javascript.Parser.x` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.Parser.y` @AccessFlag PRIVATE;
}
global `int` `@@org.mozilla.javascript.Parser.ARGC_LIMIT` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`org.mozilla.javascript.Parser` v1 @kind this) @signature `Lorg/mozilla/javascript/Parser;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L41b984.  v0:= new `org.mozilla.javascript.CompilerEnvirons`;
  #L41b988.  call `<init>`(v0) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.<init>:()V` @kind direct;
  #L41b98e.  call `<init>`(v1, v0) @signature `Lorg/mozilla/javascript/Parser;.<init>:(Lorg/mozilla/javascript/CompilerEnvirons;)V` @kind direct;
  #L41b994.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.Parser` v1 @kind this, `org.mozilla.javascript.CompilerEnvirons` v2 @kind object) @signature `Lorg/mozilla/javascript/Parser;.<init>:(Lorg/mozilla/javascript/CompilerEnvirons;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L41b9a8.  call temp:= `getErrorReporter`(v2) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.getErrorReporter:()Lorg/mozilla/javascript/ErrorReporter;` @kind virtual;
  #L41b9ae.  v0:= temp @kind object;
  #L41b9b0.  call `<init>`(v1, v2, v0) @signature `Lorg/mozilla/javascript/Parser;.<init>:(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V` @kind direct;
  #L41b9b6.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.Parser` v1 @kind this, `org.mozilla.javascript.CompilerEnvirons` v2 @kind object, `org.mozilla.javascript.ErrorReporter` v3 @kind object) @signature `Lorg/mozilla/javascript/Parser;.<init>:(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L41b9c8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41b9ce.  v0:= 0I;
  #L41b9d0.  v1.`org.mozilla.javascript.Parser.i` @type ^`int` := v0;
  #L41b9d4.  v0:= "" @kind object;
  #L41b9d8.  v1.`org.mozilla.javascript.Parser.x` @type ^`java.lang.String` := v0 @kind object;
  #L41b9dc.  v1.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` := v2 @kind object;
  #L41b9e0.  v1.`org.mozilla.javascript.Parser.b` @type ^`org.mozilla.javascript.ErrorReporter` := v3 @kind object;
  #L41b9e4.  v2:= instanceof @variable v3 @type ^`org.mozilla.javascript.ast.IdeErrorReporter` @kind boolean;
  #L41b9e8.  if v2 == 0 then goto L41b9f4;
  #L41b9ec.  v3:= (`org.mozilla.javascript.ast.IdeErrorReporter`) v3 @kind object;
  #L41b9f0.  v1.`org.mozilla.javascript.Parser.c` @type ^`org.mozilla.javascript.ast.IdeErrorReporter` := v3 @kind object;
  #L41b9f4.  return @kind void;
}
procedure `org.mozilla.javascript.ast.AstNode` `A`(`org.mozilla.javascript.Parser` v5 @kind this) @signature `Lorg/mozilla/javascript/Parser;.A:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L417e60.  call temp:= `L0`(v5) @signature `Lorg/mozilla/javascript/Parser;.L0:()I` @kind direct;
  #L417e66.  v0:= temp;
  #L417e68.  v1:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417e6c.  v2:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L417e70.  v3:= 23I;
  #L417e74.  v4:= 0I;
  #L417e76.  if v0 == v3 then goto L417ebe;
  #L417e7a.  v3:= 39I;
  #L417e7e.  if v0 == v3 then goto L417eac;
  #L417e82.  v1:= 83I;
  #L417e86.  if v0 == v1 then goto L417e9e;
  #L417e8a.  v0:= "msg.no.name.after.xmlAttr" @kind object;
  #L417e8e.  call `i1`(v5, v0) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L417e94.  call temp:= `y0`(v5) @signature `Lorg/mozilla/javascript/Parser;.y0:()Lorg/mozilla/javascript/ast/ErrorNode;` @kind direct;
  #L417e9a.  v0:= temp @kind object;
  #L417e9c.  return v0 @kind object;
  #L417e9e.  v0:= 0I;
  #L417ea0.  v1:= -1I;
  #L417ea2.  call temp:= `C1`(v5, v2, v0, v1) @signature `Lorg/mozilla/javascript/Parser;.C1:(ILorg/mozilla/javascript/ast/Name;I)Lorg/mozilla/javascript/ast/XmlElemRef;` @kind direct;
  #L417ea8.  v0:= temp @kind object;
  #L417eaa.  return v0 @kind object;
  #L417eac.  call temp:= `q`(v1) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L417eb2.  v0:= temp @kind object;
  #L417eb4.  call temp:= `c1`(v5, v2, v0, v4) @signature `Lorg/mozilla/javascript/Parser;.c1:(ILjava/lang/String;I)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417eba.  v0:= temp @kind object;
  #L417ebc.  return v0 @kind object;
  #L417ebe.  v0:= v1.`org.mozilla.javascript.u.o` @type ^`int`;
  #L417ec2.  v1:= "*" @kind object;
  #L417ec6.  call `n1`(v5, v2, v1, v0) @signature `Lorg/mozilla/javascript/Parser;.n1:(ILjava/lang/String;I)V` @kind direct;
  #L417ecc.  call temp:= `c1`(v5, v2, v1, v4) @signature `Lorg/mozilla/javascript/Parser;.c1:(ILjava/lang/String;I)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417ed2.  v0:= temp @kind object;
  #L417ed4.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.LabeledStatement` `A0`(`org.mozilla.javascript.Parser` v3 @kind this) @signature `Lorg/mozilla/javascript/Parser;.A0:()Lorg/mozilla/javascript/ast/LabeledStatement;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L41a914.  call temp:= `X0`(v3) @signature `Lorg/mozilla/javascript/Parser;.X0:()I` @kind direct;
  #L41a91a.  v0:= temp;
  #L41a91c.  v1:= 0I;
  #L41a91e.  v2:= 39I;
  #L41a922.  if v0 != v2 then goto L41a95c;
  #L41a926.  call `M`(v3) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41a92c.  v0:= v3.`org.mozilla.javascript.Parser.t` @type ^`java.util.Map` @kind object;
  #L41a930.  if v0 == 0 then goto L41a94e;
  #L41a934.  v1:= v3.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a938.  call temp:= `q`(v1) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L41a93e.  v1:= temp @kind object;
  #L41a940.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L41a946.  v0:= temp @kind object;
  #L41a948.  v1:= v0 @kind object;
  #L41a94a.  v1:= (`org.mozilla.javascript.ast.LabeledStatement`) v1 @kind object;
  #L41a94e.  if v1 != 0 then goto L41a95c;
  #L41a952.  v0:= "msg.undef.label" @kind object;
  #L41a956.  call `i1`(v3, v0) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41a95c.  return v1 @kind object;
}
procedure `org.mozilla.javascript.ast.WhileLoop` `A1`(`org.mozilla.javascript.Parser` v4 @kind this) @signature `Lorg/mozilla/javascript/Parser;.A1:()Lorg/mozilla/javascript/ast/WhileLoop;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41b784.  v0:= v4.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L41b788.  v1:= 117I;
  #L41b78c.  if v0 != v1 then goto L41b810;
  #L41b790.  call `M`(v4) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41b796.  v0:= v4.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b79a.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b79e.  v1:= new `org.mozilla.javascript.ast.WhileLoop`;
  #L41b7a2.  call `<init>`(v1, v0) @signature `Lorg/mozilla/javascript/ast/WhileLoop;.<init>:(I)V` @kind direct;
  #L41b7a8.  v2:= v4.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b7ac.  v2:= v2.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41b7b0.  call `setLineno`(v1, v2) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41b7b6.  call `a0`(v4, v1) @signature `Lorg/mozilla/javascript/Parser;.a0:(Lorg/mozilla/javascript/ast/Loop;)V` @kind direct;
  #L41b7bc.  call temp:= `L`(v4) @signature `Lorg/mozilla/javascript/Parser;.L:()Lorg/mozilla/javascript/Parser$b;` @kind direct;
  #L41b7c2.  v2:= temp @kind object;
  #L41b7c4.  v3:= v2.`org.mozilla.javascript.Parser$b.a` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L41b7c8.  call `setCondition`(v1, v3) @signature `Lorg/mozilla/javascript/ast/WhileLoop;.setCondition:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41b7ce.  v3:= v2.`org.mozilla.javascript.Parser$b.b` @type ^`int`;
  #L41b7d2.  v3:= v3 - v0 @kind int;
  #L41b7d4.  v2:= v2.`org.mozilla.javascript.Parser$b.c` @type ^`int`;
  #L41b7d8.  v2:= v2 - v0 @kind int;
  #L41b7da.  call `setParens`(v1, v3, v2) @signature `Lorg/mozilla/javascript/ast/Loop;.setParens:(II)V` @kind virtual;
  #L41b7e0.  call temp:= `p1`(v4) @signature `Lorg/mozilla/javascript/Parser;.p1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41b7e6.  v2:= temp @kind object;
  #L41b7e8.  call temp:= `o0`(v4, v2) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41b7ee.  v3:= temp;
  #L41b7f0.  v3:= v3 - v0 @kind int;
  #L41b7f2.  call `setLength`(v1, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L41b7f8.  call `setBody`(v1, v2) @signature `Lorg/mozilla/javascript/ast/Loop;.setBody:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41b7fe.  call `d0`(v4) @signature `Lorg/mozilla/javascript/Parser;.d0:()V` @kind direct;
  #L41b804.  return v1 @kind object;
  #L41b806.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41b808.  call `d0`(v4) @signature `Lorg/mozilla/javascript/Parser;.d0:()V` @kind direct;
  #L41b80e.  throw v0;
  #L41b810.  call temp:= `J`(v4) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L41b816.  v0:= 0I;
  #L41b818.  throw v0;
  catch `java.lang.Throwable` @[L41b7bc..L41b7fe] goto L41b806;
}
procedure `void` `B`(`org.mozilla.javascript.Parser` v4 @kind this, `org.mozilla.javascript.ast.AstNode` v5 @kind object) @signature `Lorg/mozilla/javascript/Parser;.B:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41bc14.  call temp:= `V0`(v4) @signature `Lorg/mozilla/javascript/Parser;.V0:()I` @kind direct;
  #L41bc1a.  v0:= temp;
  #L41bc1c.  call temp:= `getPosition`(v5) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L41bc22.  v1:= temp;
  #L41bc24.  v2:= 65535I;
  #L41bc2a.  v2:= v2 ^& v0 @kind int;
  #L41bc2c.  v3:= -1I;
  #L41bc2e.  if v2 == v3 then goto L41bc84;
  #L41bc32.  if v2 == 0 then goto L41bc84;
  #L41bc36.  v3:= 82I;
  #L41bc3a.  if v2 == v3 then goto L41bc6c;
  #L41bc3e.  v3:= 86I;
  #L41bc42.  if v2 == v3 then goto L41bc84;
  #L41bc46.  v2:= 65536I;
  #L41bc4a.  v0:= v0 ^& v2 @kind int;
  #L41bc4c.  if v0 != 0 then goto L41bc5c;
  #L41bc50.  v5:= "msg.no.semi.stmt" @kind object;
  #L41bc54.  call `i1`(v4, v5) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41bc5a.  goto L41bc92;
  #L41bc5c.  call temp:= `M0`(v4, v5) @signature `Lorg/mozilla/javascript/Parser;.M0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41bc62.  v5:= temp;
  #L41bc64.  call `y1`(v4, v1, v5) @signature `Lorg/mozilla/javascript/Parser;.y1:(II)V` @kind direct;
  #L41bc6a.  goto L41bc92;
  #L41bc6c.  call `M`(v4) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41bc72.  v0:= v4.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41bc76.  v0:= v0.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41bc7a.  v0:= v0 - v1 @kind int;
  #L41bc7c.  call `setLength`(v5, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L41bc82.  goto L41bc92;
  #L41bc84.  call temp:= `M0`(v4, v5) @signature `Lorg/mozilla/javascript/Parser;.M0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41bc8a.  v5:= temp;
  #L41bc8c.  call `y1`(v4, v1, v5) @signature `Lorg/mozilla/javascript/Parser;.y1:(II)V` @kind direct;
  #L41bc92.  return @kind void;
}
procedure `boolean` `B0`(`org.mozilla.javascript.Parser` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L416fe4.  call temp:= `W0`(v1) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L416fea.  v0:= temp;
  #L416fec.  if v0 == v2 then goto L416ff4;
  #L416ff0.  v2:= 0I;
  #L416ff2.  return v2;
  #L416ff4.  call `M`(v1) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L416ffa.  v2:= 1I;
  #L416ffc.  return v2;
}
procedure `org.mozilla.javascript.ast.WithStatement` `B1`(`org.mozilla.javascript.Parser` v9 @kind this) @signature `Lorg/mozilla/javascript/Parser;.B1:()Lorg/mozilla/javascript/ast/WithStatement;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L41b838.  v0:= v9.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L41b83c.  v1:= 123I;
  #L41b840.  if v0 != v1 then goto L41b8e0;
  #L41b844.  call `M`(v9) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41b84a.  call temp:= `m0`(v9) @signature `Lorg/mozilla/javascript/Parser;.m0:()Lorg/mozilla/javascript/ast/Comment;` @kind direct;
  #L41b850.  v0:= temp @kind object;
  #L41b852.  v1:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b856.  v2:= v1.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41b85a.  v1:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b85e.  v3:= 87I;
  #L41b862.  v4:= "msg.no.paren.with" @kind object;
  #L41b866.  call temp:= `G0`(v9, v3, v4) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41b86c.  v3:= temp;
  #L41b86e.  v4:= -1I;
  #L41b870.  if v3 == 0 then goto L41b87e;
  #L41b874.  v3:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b878.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b87c.  goto L41b880;
  #L41b87e.  v3:= -1I;
  #L41b880.  call temp:= `f0`(v9) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41b886.  v5:= temp @kind object;
  #L41b888.  v6:= 88I;
  #L41b88c.  v7:= "msg.no.paren.after.with" @kind object;
  #L41b890.  call temp:= `G0`(v9, v6, v7) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41b896.  v6:= temp;
  #L41b898.  if v6 == 0 then goto L41b8a4;
  #L41b89c.  v4:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b8a0.  v4:= v4.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b8a4.  call temp:= `p1`(v9) @signature `Lorg/mozilla/javascript/Parser;.p1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41b8aa.  v6:= temp @kind object;
  #L41b8ac.  v7:= new `org.mozilla.javascript.ast.WithStatement`;
  #L41b8b0.  call temp:= `o0`(v9, v6) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41b8b6.  v8:= temp;
  #L41b8b8.  v8:= v8 - v1 @kind int;
  #L41b8ba.  call `<init>`(v7, v1, v8) @signature `Lorg/mozilla/javascript/ast/WithStatement;.<init>:(II)V` @kind direct;
  #L41b8c0.  call `setJsDocNode`(v7, v0) @signature `Lorg/mozilla/javascript/Node;.setJsDocNode:(Lorg/mozilla/javascript/ast/Comment;)V` @kind virtual;
  #L41b8c6.  call `setExpression`(v7, v5) @signature `Lorg/mozilla/javascript/ast/WithStatement;.setExpression:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41b8cc.  call `setStatement`(v7, v6) @signature `Lorg/mozilla/javascript/ast/WithStatement;.setStatement:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41b8d2.  call `setParens`(v7, v3, v4) @signature `Lorg/mozilla/javascript/ast/WithStatement;.setParens:(II)V` @kind virtual;
  #L41b8d8.  call `setLineno`(v7, v2) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41b8de.  return v7 @kind object;
  #L41b8e0.  call temp:= `J`(v9) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L41b8e6.  v0:= 0I;
  #L41b8e8.  throw v0;
}
procedure `org.mozilla.javascript.ast.AstNode` `C`(`org.mozilla.javascript.Parser` v5 @kind this) @signature `Lorg/mozilla/javascript/Parser;.C:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L417ee8.  call temp:= `c0`(v5) @signature `Lorg/mozilla/javascript/Parser;.c0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417eee.  v0:= temp @kind object;
  #L417ef0.  v1:= 11I;
  #L417ef4.  call temp:= `B0`(v5, v1) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L417efa.  v2:= temp;
  #L417efc.  if v2 == 0 then goto L417f1e;
  #L417f00.  v2:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417f04.  v2:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L417f08.  v3:= new `org.mozilla.javascript.ast.InfixExpression`;
  #L417f0c.  call temp:= `c0`(v5) @signature `Lorg/mozilla/javascript/Parser;.c0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417f12.  v4:= temp @kind object;
  #L417f14.  call `<init>`(v3, v1, v0, v4, v2) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.<init>:(ILorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;I)V` @kind direct;
  #L417f1a.  v0:= v3 @kind object;
  #L417f1c.  goto L417ef0;
  #L417f1e.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `C0`(`org.mozilla.javascript.Parser` v7 @kind this, `boolean` v8 ) @signature `Lorg/mozilla/javascript/Parser;.C0:(Z)Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4186ac.  call temp:= `W0`(v7) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L4186b2.  v0:= temp;
  #L4186b4.  v1:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4186b8.  v1:= v1.`org.mozilla.javascript.u.o` @type ^`int`;
  #L4186bc.  v2:= 30I;
  #L4186c0.  if v0 == v2 then goto L4186ce;
  #L4186c4.  call temp:= `a1`(v7) @signature `Lorg/mozilla/javascript/Parser;.a1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4186ca.  v0:= temp @kind object;
  #L4186cc.  goto L41878e;
  #L4186ce.  call `M`(v7) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L4186d4.  v0:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4186d8.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L4186dc.  v2:= new `org.mozilla.javascript.ast.NewExpression`;
  #L4186e0.  call `<init>`(v2, v0) @signature `Lorg/mozilla/javascript/ast/NewExpression;.<init>:(I)V` @kind direct;
  #L4186e6.  v3:= 0I;
  #L4186e8.  call temp:= `C0`(v7, v3) @signature `Lorg/mozilla/javascript/Parser;.C0:(Z)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4186ee.  v3:= temp @kind object;
  #L4186f0.  call temp:= `o0`(v7, v3) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L4186f6.  v4:= temp;
  #L4186f8.  call `setTarget`(v2, v3) @signature `Lorg/mozilla/javascript/ast/FunctionCall;.setTarget:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L4186fe.  v3:= 87I;
  #L418702.  call temp:= `B0`(v7, v3) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L418708.  v3:= temp;
  #L41870a.  if v3 == 0 then goto L41875e;
  #L41870e.  v3:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418712.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L418716.  call temp:= `v`(v7) @signature `Lorg/mozilla/javascript/Parser;.v:()Ljava/util/List;` @kind direct;
  #L41871c.  v4:= temp @kind object;
  #L41871e.  if v4 == 0 then goto L41873c;
  #L418722.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L418728.  v5:= temp;
  #L41872a.  v6:= 65536I;
  #L41872e.  if v5 <= v6 then goto L41873c;
  #L418732.  v5:= "msg.too.many.constructor.args" @kind object;
  #L418736.  call `i1`(v7, v5) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41873c.  v5:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418740.  v6:= v5.`org.mozilla.javascript.u.v` @type ^`int`;
  #L418744.  v5:= v5.`org.mozilla.javascript.u.w` @type ^`int`;
  #L418748.  if v4 == 0 then goto L418752;
  #L41874c.  call `setArguments`(v2, v4) @signature `Lorg/mozilla/javascript/ast/FunctionCall;.setArguments:(Ljava/util/List;)V` @kind virtual;
  #L418752.  v3:= v3 - v0 @kind int;
  #L418754.  v6:= v6 - v0 @kind int;
  #L418756.  call `setParens`(v2, v3, v6) @signature `Lorg/mozilla/javascript/ast/FunctionCall;.setParens:(II)V` @kind virtual;
  #L41875c.  v4:= v5;
  #L41875e.  v3:= 85I;
  #L418762.  call temp:= `B0`(v7, v3) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L418768.  v3:= temp;
  #L41876a.  if v3 == 0 then goto L418784;
  #L41876e.  call temp:= `O0`(v7) @signature `Lorg/mozilla/javascript/Parser;.O0:()Lorg/mozilla/javascript/ast/ObjectLiteral;` @kind direct;
  #L418774.  v3:= temp @kind object;
  #L418776.  call temp:= `o0`(v7, v3) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41877c.  v4:= temp;
  #L41877e.  call `setInitializer`(v2, v3) @signature `Lorg/mozilla/javascript/ast/NewExpression;.setInitializer:(Lorg/mozilla/javascript/ast/ObjectLiteral;)V` @kind virtual;
  #L418784.  v4:= v4 - v0 @kind int;
  #L418786.  call `setLength`(v2, v4) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L41878c.  v0:= v2 @kind object;
  #L41878e.  call `setLineno`(v0, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L418794.  call temp:= `D0`(v7, v8, v0) @signature `Lorg/mozilla/javascript/Parser;.D0:(ZLorg/mozilla/javascript/ast/AstNode;)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41879a.  v8:= temp @kind object;
  #L41879c.  return v8 @kind object;
}
procedure `org.mozilla.javascript.ast.XmlElemRef` `C1`(`org.mozilla.javascript.Parser` v8 @kind this, `int` v9 , `org.mozilla.javascript.ast.Name` v10 @kind object, `int` v11 ) @signature `Lorg/mozilla/javascript/Parser;.C1:(ILorg/mozilla/javascript/ast/Name;I)Lorg/mozilla/javascript/ast/XmlElemRef;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L41b8fc.  v0:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b900.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b904.  v1:= -1I;
  #L41b906.  if v9 == v1 then goto L41b90e;
  #L41b90a.  v2:= v9;
  #L41b90c.  goto L41b910;
  #L41b90e.  v2:= v0;
  #L41b910.  call temp:= `f0`(v8) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41b916.  v3:= temp @kind object;
  #L41b918.  call temp:= `o0`(v8, v3) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41b91e.  v4:= temp;
  #L41b920.  v5:= 84I;
  #L41b924.  v6:= "msg.no.bracket.index" @kind object;
  #L41b928.  call temp:= `G0`(v8, v5, v6) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41b92e.  v5:= temp;
  #L41b930.  if v5 == 0 then goto L41b946;
  #L41b934.  v1:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b938.  v4:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b93c.  v1:= v1.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41b940.  v7:= v4;
  #L41b942.  v4:= v1;
  #L41b944.  v1:= v7;
  #L41b946.  v5:= new `org.mozilla.javascript.ast.XmlElemRef`;
  #L41b94a.  v4:= v4 - v2 @kind int;
  #L41b94c.  call `<init>`(v5, v2, v4) @signature `Lorg/mozilla/javascript/ast/XmlElemRef;.<init>:(II)V` @kind direct;
  #L41b952.  call `setNamespace`(v5, v10) @signature `Lorg/mozilla/javascript/ast/XmlRef;.setNamespace:(Lorg/mozilla/javascript/ast/Name;)V` @kind virtual;
  #L41b958.  call `setColonPos`(v5, v11) @signature `Lorg/mozilla/javascript/ast/XmlRef;.setColonPos:(I)V` @kind virtual;
  #L41b95e.  call `setAtPos`(v5, v9) @signature `Lorg/mozilla/javascript/ast/XmlRef;.setAtPos:(I)V` @kind virtual;
  #L41b964.  call `setExpression`(v5, v3) @signature `Lorg/mozilla/javascript/ast/XmlElemRef;.setExpression:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41b96a.  call `setBrackets`(v5, v0, v1) @signature `Lorg/mozilla/javascript/ast/XmlElemRef;.setBrackets:(II)V` @kind virtual;
  #L41b970.  return v5 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `D`(`org.mozilla.javascript.Parser` v5 @kind this) @signature `Lorg/mozilla/javascript/Parser;.D:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L417f30.  call temp:= `E`(v5) @signature `Lorg/mozilla/javascript/Parser;.E:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417f36.  v0:= temp @kind object;
  #L417f38.  v1:= 9I;
  #L417f3c.  call temp:= `B0`(v5, v1) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L417f42.  v2:= temp;
  #L417f44.  if v2 == 0 then goto L417f66;
  #L417f48.  v2:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417f4c.  v2:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L417f50.  v3:= new `org.mozilla.javascript.ast.InfixExpression`;
  #L417f54.  call temp:= `E`(v5) @signature `Lorg/mozilla/javascript/Parser;.E:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417f5a.  v4:= temp @kind object;
  #L417f5c.  call `<init>`(v3, v1, v0, v4, v2) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.<init>:(ILorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;I)V` @kind direct;
  #L417f62.  v0:= v3 @kind object;
  #L417f64.  goto L417f38;
  #L417f66.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `D0`(`org.mozilla.javascript.Parser` v9 @kind this, `boolean` v10 , `org.mozilla.javascript.ast.AstNode` v11 @kind object) @signature `Lorg/mozilla/javascript/Parser;.D0:(ZLorg/mozilla/javascript/ast/AstNode;)Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4187b0.  if v11 == 0 then goto L418990;
  #L4187b4.  call temp:= `getPosition`(v11) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L4187ba.  v0:= temp;
  #L4187bc.  call temp:= `W0`(v9) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L4187c2.  v1:= temp;
  #L4187c4.  v2:= 83I;
  #L4187c8.  v3:= -1I;
  #L4187ca.  if v1 == v2 then goto L41891e;
  #L4187ce.  v2:= 87I;
  #L4187d2.  if v1 == v2 then goto L41888c;
  #L4187d6.  v2:= 108I;
  #L4187da.  if v1 == v2 then goto L418874;
  #L4187de.  v2:= 143I;
  #L4187e2.  if v1 == v2 then goto L418874;
  #L4187e6.  v2:= 146I;
  #L4187ea.  if v1 == v2 then goto L4187f0;
  #L4187ee.  goto L418890;
  #L4187f0.  call `M`(v9) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L4187f6.  v1:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4187fa.  v2:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L4187fe.  v1:= v1.`org.mozilla.javascript.u.o` @type ^`int`;
  #L418802.  call `F0`(v9) @signature `Lorg/mozilla/javascript/Parser;.F0:()V` @kind direct;
  #L418808.  call `setRequiresActivation`(v9) @signature `Lorg/mozilla/javascript/Parser;.setRequiresActivation:()V` @kind virtual;
  #L41880e.  call temp:= `f0`(v9) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L418814.  v4:= temp @kind object;
  #L418816.  call temp:= `o0`(v9, v4) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41881c.  v5:= temp;
  #L41881e.  v6:= 88I;
  #L418822.  v7:= "msg.no.paren" @kind object;
  #L418826.  call temp:= `G0`(v9, v6, v7) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41882c.  v6:= temp;
  #L41882e.  if v6 == 0 then goto L418844;
  #L418832.  v3:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418836.  v5:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41883a.  v3:= v3.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41883e.  v8:= v5;
  #L418840.  v5:= v3;
  #L418842.  v3:= v8;
  #L418844.  v6:= new `org.mozilla.javascript.ast.XmlDotQuery`;
  #L418848.  v5:= v5 - v0 @kind int;
  #L41884a.  call `<init>`(v6, v0, v5) @signature `Lorg/mozilla/javascript/ast/XmlDotQuery;.<init>:(II)V` @kind direct;
  #L418850.  call `setLeft`(v6, v11) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.setLeft:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L418856.  call `setRight`(v6, v4) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.setRight:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41885c.  call `setOperatorPosition`(v6, v2) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.setOperatorPosition:(I)V` @kind virtual;
  #L418862.  v3:= v3 - v0 @kind int;
  #L418864.  call `setRp`(v6, v3) @signature `Lorg/mozilla/javascript/ast/XmlDotQuery;.setRp:(I)V` @kind virtual;
  #L41886a.  call `setLineno`(v6, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L418870.  goto L41898a;
  #L418874.  v2:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418878.  v2:= v2.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41887c.  call temp:= `b1`(v9, v1, v11) @signature `Lorg/mozilla/javascript/Parser;.b1:(ILorg/mozilla/javascript/ast/AstNode;)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L418882.  v11:= temp @kind object;
  #L418884.  call `setLineno`(v11, v2) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41888a.  goto L4187bc;
  #L41888c.  if v10 != 0 then goto L418892;
  #L418890.  return v11 @kind object;
  #L418892.  v1:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418896.  v1:= v1.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41889a.  call `M`(v9) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L4188a0.  call `I`(v9, v11) @signature `Lorg/mozilla/javascript/Parser;.I:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind direct;
  #L4188a6.  v2:= new `org.mozilla.javascript.ast.FunctionCall`;
  #L4188aa.  call `<init>`(v2, v0) @signature `Lorg/mozilla/javascript/ast/FunctionCall;.<init>:(I)V` @kind direct;
  #L4188b0.  call `setTarget`(v2, v11) @signature `Lorg/mozilla/javascript/ast/FunctionCall;.setTarget:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L4188b6.  call `setLineno`(v2, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L4188bc.  v11:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4188c0.  v11:= v11.`org.mozilla.javascript.u.v` @type ^`int`;
  #L4188c4.  v11:= v11 - v0 @kind int;
  #L4188c6.  call `setLp`(v2, v11) @signature `Lorg/mozilla/javascript/ast/FunctionCall;.setLp:(I)V` @kind virtual;
  #L4188cc.  call temp:= `v`(v9) @signature `Lorg/mozilla/javascript/Parser;.v:()Ljava/util/List;` @kind direct;
  #L4188d2.  v11:= temp @kind object;
  #L4188d4.  if v11 == 0 then goto L4188f2;
  #L4188d8.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4188de.  v1:= temp;
  #L4188e0.  v3:= 65536I;
  #L4188e4.  if v1 <= v3 then goto L4188f2;
  #L4188e8.  v1:= "msg.too.many.function.args" @kind object;
  #L4188ec.  call `i1`(v9, v1) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L4188f2.  call `setArguments`(v2, v11) @signature `Lorg/mozilla/javascript/ast/FunctionCall;.setArguments:(Ljava/util/List;)V` @kind virtual;
  #L4188f8.  v11:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4188fc.  v11:= v11.`org.mozilla.javascript.u.v` @type ^`int`;
  #L418900.  v11:= v11 - v0 @kind int;
  #L418902.  call `setRp`(v2, v11) @signature `Lorg/mozilla/javascript/ast/FunctionCall;.setRp:(I)V` @kind virtual;
  #L418908.  v11:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41890c.  v11:= v11.`org.mozilla.javascript.u.w` @type ^`int`;
  #L418910.  v11:= v11 - v0 @kind int;
  #L418912.  call `setLength`(v2, v11) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L418918.  v11:= v2 @kind object;
  #L41891a.  goto L4187bc;
  #L41891e.  call `M`(v9) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L418924.  v1:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418928.  v2:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41892c.  v1:= v1.`org.mozilla.javascript.u.o` @type ^`int`;
  #L418930.  call temp:= `f0`(v9) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L418936.  v4:= temp @kind object;
  #L418938.  call temp:= `o0`(v9, v4) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41893e.  v5:= temp;
  #L418940.  v6:= 84I;
  #L418944.  v7:= "msg.no.bracket.index" @kind object;
  #L418948.  call temp:= `G0`(v9, v6, v7) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41894e.  v6:= temp;
  #L418950.  if v6 == 0 then goto L418966;
  #L418954.  v3:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418958.  v5:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41895c.  v3:= v3.`org.mozilla.javascript.u.w` @type ^`int`;
  #L418960.  v8:= v5;
  #L418962.  v5:= v3;
  #L418964.  v3:= v8;
  #L418966.  v6:= new `org.mozilla.javascript.ast.ElementGet`;
  #L41896a.  v5:= v5 - v0 @kind int;
  #L41896c.  call `<init>`(v6, v0, v5) @signature `Lorg/mozilla/javascript/ast/ElementGet;.<init>:(II)V` @kind direct;
  #L418972.  call `setTarget`(v6, v11) @signature `Lorg/mozilla/javascript/ast/ElementGet;.setTarget:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L418978.  call `setElement`(v6, v4) @signature `Lorg/mozilla/javascript/ast/ElementGet;.setElement:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41897e.  call `setParens`(v6, v2, v3) @signature `Lorg/mozilla/javascript/ast/ElementGet;.setParens:(II)V` @kind virtual;
  #L418984.  call `setLineno`(v6, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41898a.  v11:= v6 @kind object;
  #L41898c.  goto L4187bc;
  #L418990.  call temp:= `J`(v9) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L418996.  v10:= 0I;
  #L418998.  throw v10;
}
procedure `org.mozilla.javascript.ast.AstNode` `D1`(`org.mozilla.javascript.Parser` v8 @kind this) @signature `Lorg/mozilla/javascript/Parser;.D1:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L419cf4.  v0:= v8.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L419cf8.  v1:= 14I;
  #L419cfc.  if v0 != v1 then goto L419e2c;
  #L419d00.  v0:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419d04.  v1:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419d08.  call temp:= `j`(v0) @signature `Lorg/mozilla/javascript/u;.j:()I` @kind virtual;
  #L419d0e.  v0:= temp;
  #L419d10.  v2:= 148I;
  #L419d14.  v3:= 145I;
  #L419d18.  v4:= "msg.syntax" @kind object;
  #L419d1c.  if v0 == v3 then goto L419d34;
  #L419d20.  if v0 == v2 then goto L419d34;
  #L419d24.  call `i1`(v8, v4) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L419d2a.  call temp:= `y0`(v8) @signature `Lorg/mozilla/javascript/Parser;.y0:()Lorg/mozilla/javascript/ast/ErrorNode;` @kind direct;
  #L419d30.  v0:= temp @kind object;
  #L419d32.  return v0 @kind object;
  #L419d34.  v5:= new `org.mozilla.javascript.ast.XmlLiteral`;
  #L419d38.  call `<init>`(v5, v1) @signature `Lorg/mozilla/javascript/ast/XmlLiteral;.<init>:(I)V` @kind direct;
  #L419d3e.  v1:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419d42.  v1:= v1.`org.mozilla.javascript.u.o` @type ^`int`;
  #L419d46.  call `setLineno`(v5, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L419d4c.  if v0 == v3 then goto L419d86;
  #L419d50.  if v0 == v2 then goto L419d64;
  #L419d54.  call `i1`(v8, v4) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L419d5a.  call temp:= `y0`(v8) @signature `Lorg/mozilla/javascript/Parser;.y0:()Lorg/mozilla/javascript/ast/ErrorNode;` @kind direct;
  #L419d60.  v0:= temp @kind object;
  #L419d62.  return v0 @kind object;
  #L419d64.  v0:= new `org.mozilla.javascript.ast.XmlString`;
  #L419d68.  v1:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419d6c.  v2:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419d70.  call temp:= `q`(v1) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L419d76.  v1:= temp @kind object;
  #L419d78.  call `<init>`(v0, v2, v1) @signature `Lorg/mozilla/javascript/ast/XmlString;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L419d7e.  call `addFragment`(v5, v0) @signature `Lorg/mozilla/javascript/ast/XmlLiteral;.addFragment:(Lorg/mozilla/javascript/ast/XmlFragment;)V` @kind virtual;
  #L419d84.  return v5 @kind object;
  #L419d86.  v0:= new `org.mozilla.javascript.ast.XmlString`;
  #L419d8a.  v1:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419d8e.  v6:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419d92.  call temp:= `q`(v1) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L419d98.  v1:= temp @kind object;
  #L419d9a.  call `<init>`(v0, v6, v1) @signature `Lorg/mozilla/javascript/ast/XmlString;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L419da0.  call `addFragment`(v5, v0) @signature `Lorg/mozilla/javascript/ast/XmlLiteral;.addFragment:(Lorg/mozilla/javascript/ast/XmlFragment;)V` @kind virtual;
  #L419da6.  v0:= 85I;
  #L419daa.  call temp:= `G0`(v8, v0, v4) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L419db0.  v0:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419db4.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419db8.  call temp:= `W0`(v8) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L419dbe.  v1:= temp;
  #L419dc0.  v6:= 86I;
  #L419dc4.  if v1 != v6 then goto L419dde;
  #L419dc8.  v1:= new `org.mozilla.javascript.ast.EmptyExpression`;
  #L419dcc.  v7:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419dd0.  v7:= v7.`org.mozilla.javascript.u.w` @type ^`int`;
  #L419dd4.  v7:= v7 - v0 @kind int;
  #L419dd6.  call `<init>`(v1, v0, v7) @signature `Lorg/mozilla/javascript/ast/EmptyExpression;.<init>:(II)V` @kind direct;
  #L419ddc.  goto L419de6;
  #L419dde.  call temp:= `f0`(v8) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419de4.  v1:= temp @kind object;
  #L419de6.  call temp:= `G0`(v8, v6, v4) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L419dec.  v6:= new `org.mozilla.javascript.ast.XmlExpression`;
  #L419df0.  call `<init>`(v6, v0, v1) @signature `Lorg/mozilla/javascript/ast/XmlExpression;.<init>:(ILorg/mozilla/javascript/ast/AstNode;)V` @kind direct;
  #L419df6.  v1:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419dfa.  call temp:= `B`(v1) @signature `Lorg/mozilla/javascript/u;.B:()Z` @kind virtual;
  #L419e00.  v1:= temp;
  #L419e02.  call `setIsXmlAttribute`(v6, v1) @signature `Lorg/mozilla/javascript/ast/XmlExpression;.setIsXmlAttribute:(Z)V` @kind virtual;
  #L419e08.  v1:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419e0c.  v1:= v1.`org.mozilla.javascript.u.w` @type ^`int`;
  #L419e10.  v1:= v1 - v0 @kind int;
  #L419e12.  call `setLength`(v6, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L419e18.  call `addFragment`(v5, v6) @signature `Lorg/mozilla/javascript/ast/XmlLiteral;.addFragment:(Lorg/mozilla/javascript/ast/XmlFragment;)V` @kind virtual;
  #L419e1e.  v0:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419e22.  call temp:= `m`(v0) @signature `Lorg/mozilla/javascript/u;.m:()I` @kind virtual;
  #L419e28.  v0:= temp;
  #L419e2a.  goto L419d4c;
  #L419e2c.  call temp:= `J`(v8) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L419e32.  v0:= 0I;
  #L419e34.  throw v0;
}
procedure `org.mozilla.javascript.ast.AstNode` `E`(`org.mozilla.javascript.Parser` v5 @kind this) @signature `Lorg/mozilla/javascript/Parser;.E:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L417f78.  call temp:= `C`(v5) @signature `Lorg/mozilla/javascript/Parser;.C:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417f7e.  v0:= temp @kind object;
  #L417f80.  v1:= 10I;
  #L417f84.  call temp:= `B0`(v5, v1) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L417f8a.  v2:= temp;
  #L417f8c.  if v2 == 0 then goto L417fae;
  #L417f90.  v2:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417f94.  v2:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L417f98.  v3:= new `org.mozilla.javascript.ast.InfixExpression`;
  #L417f9c.  call temp:= `C`(v5) @signature `Lorg/mozilla/javascript/Parser;.C:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417fa2.  v4:= temp @kind object;
  #L417fa4.  call `<init>`(v3, v1, v0, v4, v2) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.<init>:(ILorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;I)V` @kind direct;
  #L417faa.  v0:= v3 @kind object;
  #L417fac.  goto L417f80;
  #L417fae.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `E0`(`org.mozilla.javascript.Parser` v5 @kind this) @signature `Lorg/mozilla/javascript/Parser;.E0:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4189ac.  call temp:= `w1`(v5) @signature `Lorg/mozilla/javascript/Parser;.w1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4189b2.  v0:= temp @kind object;
  #L4189b4.  call temp:= `W0`(v5) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L4189ba.  v1:= temp;
  #L4189bc.  v2:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4189c0.  v2:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L4189c4.  goto L4189ec;
  #L4189ca.  goto L4189e8;
  #L4189cc.  call `M`(v5) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L4189d2.  v3:= new `org.mozilla.javascript.ast.InfixExpression`;
  #L4189d6.  call temp:= `w1`(v5) @signature `Lorg/mozilla/javascript/Parser;.w1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4189dc.  v4:= temp @kind object;
  #L4189de.  call `<init>`(v3, v1, v0, v4, v2) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.<init>:(ILorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;I)V` @kind direct;
  #L4189e4.  v0:= v3 @kind object;
  #L4189e6.  goto L4189b4;
  #L4189e8.  return v0 @kind object;
  #L4189ea.  
  #L4189ec.  switch v1
                  | 23 => goto L4189cc
                  | 24 => goto L4189cc
                  | 25 => goto L4189cc
                  | else => goto L4189ca;
}
procedure `org.mozilla.javascript.ast.AstNode` `F`(`org.mozilla.javascript.Parser` v4 @kind this) @signature `Lorg/mozilla/javascript/Parser;.F:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L417fc0.  v0:= v4.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L417fc4.  v1:= 85I;
  #L417fc8.  if v0 != v1 then goto L41802e;
  #L417fcc.  call `M`(v4) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L417fd2.  v0:= v4.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417fd6.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L417fda.  v1:= new `org.mozilla.javascript.ast.Scope`;
  #L417fde.  call `<init>`(v1, v0) @signature `Lorg/mozilla/javascript/ast/Scope;.<init>:(I)V` @kind direct;
  #L417fe4.  v2:= v4.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417fe8.  v2:= v2.`org.mozilla.javascript.u.o` @type ^`int`;
  #L417fec.  call `setLineno`(v1, v2) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L417ff2.  call `d1`(v4, v1) @signature `Lorg/mozilla/javascript/Parser;.d1:(Lorg/mozilla/javascript/ast/Scope;)V` @kind virtual;
  #L417ff8.  call temp:= `s1`(v4, v1) @signature `Lorg/mozilla/javascript/Parser;.s1:(Lorg/mozilla/javascript/ast/AstNode;)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417ffe.  v2:= 86I;
  #L418002.  v3:= "msg.no.brace.block" @kind object;
  #L418006.  call temp:= `G0`(v4, v2, v3) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41800c.  v2:= v4.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418010.  v2:= v2.`org.mozilla.javascript.u.w` @type ^`int`;
  #L418014.  v2:= v2 - v0 @kind int;
  #L418016.  call `setLength`(v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L41801c.  call `Z0`(v4) @signature `Lorg/mozilla/javascript/Parser;.Z0:()V` @kind virtual;
  #L418022.  return v1 @kind object;
  #L418024.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L418026.  call `Z0`(v4) @signature `Lorg/mozilla/javascript/Parser;.Z0:()V` @kind virtual;
  #L41802c.  throw v0;
  #L41802e.  call temp:= `J`(v4) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L418034.  v0:= 0I;
  #L418036.  throw v0;
  catch `java.lang.Throwable` @[L417ff8..L41801c] goto L418024;
}
procedure `void` `F0`(`org.mozilla.javascript.Parser` v1 @kind this) @signature `Lorg/mozilla/javascript/Parser;.F0:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L41c1a4.  v0:= v1.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41c1a8.  call temp:= `isXmlAvailable`(v0) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isXmlAvailable:()Z` @kind virtual;
  #L41c1ae.  v0:= temp;
  #L41c1b0.  if v0 != 0 then goto L41c1be;
  #L41c1b4.  v0:= "msg.XML.not.available" @kind object;
  #L41c1b8.  call `i1`(v1, v0) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41c1be.  return @kind void;
}
procedure `org.mozilla.javascript.ast.BreakStatement` `G`(`org.mozilla.javascript.Parser` v7 @kind this) @signature `Lorg/mozilla/javascript/Parser;.G:()Lorg/mozilla/javascript/ast/BreakStatement;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41a168.  v0:= v7.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L41a16c.  v1:= 0I;
  #L41a16e.  v2:= 120I;
  #L41a172.  if v0 != v2 then goto L41a23a;
  #L41a176.  call `M`(v7) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41a17c.  v0:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a180.  v2:= v0.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41a184.  v3:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41a188.  v0:= v0.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41a18c.  call temp:= `X0`(v7) @signature `Lorg/mozilla/javascript/Parser;.X0:()I` @kind direct;
  #L41a192.  v4:= temp;
  #L41a194.  v5:= 39I;
  #L41a198.  if v4 != v5 then goto L41a1ae;
  #L41a19c.  call temp:= `P`(v7) @signature `Lorg/mozilla/javascript/Parser;.P:()Lorg/mozilla/javascript/ast/Name;` @kind direct;
  #L41a1a2.  v0:= temp @kind object;
  #L41a1a4.  call temp:= `o0`(v7, v0) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41a1aa.  v4:= temp;
  #L41a1ac.  goto L41a1b2;
  #L41a1ae.  v4:= v0;
  #L41a1b0.  v0:= v1 @kind object;
  #L41a1b2.  call temp:= `A0`(v7) @signature `Lorg/mozilla/javascript/Parser;.A0:()Lorg/mozilla/javascript/ast/LabeledStatement;` @kind direct;
  #L41a1b8.  v5:= temp @kind object;
  #L41a1ba.  if v5 != 0 then goto L41a1c0;
  #L41a1be.  goto L41a1c8;
  #L41a1c0.  call temp:= `getFirstLabel`(v5) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.getFirstLabel:()Lorg/mozilla/javascript/ast/Label;` @kind virtual;
  #L41a1c6.  v1:= temp @kind object;
  #L41a1c8.  if v1 != 0 then goto L41a216;
  #L41a1cc.  if v0 != 0 then goto L41a216;
  #L41a1d0.  v5:= v7.`org.mozilla.javascript.Parser.v` @type ^`java.util.List` @kind object;
  #L41a1d4.  if v5 == 0 then goto L41a204;
  #L41a1d8.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L41a1de.  v5:= temp;
  #L41a1e0.  if v5 != 0 then goto L41a1e6;
  #L41a1e4.  goto L41a204;
  #L41a1e6.  v1:= v7.`org.mozilla.javascript.Parser.v` @type ^`java.util.List` @kind object;
  #L41a1ea.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L41a1f0.  v5:= temp;
  #L41a1f2.  v5:= v5 + -1;
  #L41a1f6.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L41a1fc.  v1:= temp @kind object;
  #L41a1fe.  v1:= (`org.mozilla.javascript.ast.Jump`) v1 @kind object;
  #L41a202.  goto L41a216;
  #L41a204.  if v0 != 0 then goto L41a216;
  #L41a208.  v5:= v4 - v3 @kind int;
  #L41a20c.  v6:= "msg.bad.break" @kind object;
  #L41a210.  call `j1`(v7, v6, v3, v5) @signature `Lorg/mozilla/javascript/Parser;.j1:(Ljava/lang/String;II)V` @kind virtual;
  #L41a216.  v5:= new `org.mozilla.javascript.ast.BreakStatement`;
  #L41a21a.  v4:= v4 - v3 @kind int;
  #L41a21c.  call `<init>`(v5, v3, v4) @signature `Lorg/mozilla/javascript/ast/BreakStatement;.<init>:(II)V` @kind direct;
  #L41a222.  call `setBreakLabel`(v5, v0) @signature `Lorg/mozilla/javascript/ast/BreakStatement;.setBreakLabel:(Lorg/mozilla/javascript/ast/Name;)V` @kind virtual;
  #L41a228.  if v1 == 0 then goto L41a232;
  #L41a22c.  call `setBreakTarget`(v5, v1) @signature `Lorg/mozilla/javascript/ast/BreakStatement;.setBreakTarget:(Lorg/mozilla/javascript/ast/Jump;)V` @kind virtual;
  #L41a232.  call `setLineno`(v5, v2) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41a238.  return v5 @kind object;
  #L41a23a.  call temp:= `J`(v7) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L41a240.  throw v1;
}
procedure `boolean` `G0`(`org.mozilla.javascript.Parser` v2 @kind this, `int` v3 , `java.lang.String` v4 @kind object) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L417010.  v0:= v2.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417014.  v1:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L417018.  v0:= v0.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41701c.  v0:= v0 - v1 @kind int;
  #L41701e.  call temp:= `H0`(v2, v3, v4, v1, v0) @signature `Lorg/mozilla/javascript/Parser;.H0:(ILjava/lang/String;II)Z` @kind direct;
  #L417024.  v3:= temp;
  #L417026.  return v3;
}
procedure `void` `H`(`org.mozilla.javascript.Parser` v2 @kind this, `org.mozilla.javascript.ast.UnaryExpression` v3 @kind object) @signature `Lorg/mozilla/javascript/Parser;.H:(Lorg/mozilla/javascript/ast/UnaryExpression;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L41bd3c.  call temp:= `getOperand`(v3) @signature `Lorg/mozilla/javascript/ast/UnaryExpression;.getOperand:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L41bd42.  v0:= temp @kind object;
  #L41bd44.  call temp:= `removeParens`(v2, v0) @signature `Lorg/mozilla/javascript/Parser;.removeParens:(Lorg/mozilla/javascript/ast/AstNode;)Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L41bd4a.  v0:= temp @kind object;
  #L41bd4c.  call temp:= `getType`(v0) @signature `Lorg/mozilla/javascript/Node;.getType:()I` @kind virtual;
  #L41bd52.  v0:= temp;
  #L41bd54.  v1:= 39I;
  #L41bd58.  if v0 == v1 then goto L41bd9c;
  #L41bd5c.  v1:= 33I;
  #L41bd60.  if v0 == v1 then goto L41bd9c;
  #L41bd64.  v1:= 36I;
  #L41bd68.  if v0 == v1 then goto L41bd9c;
  #L41bd6c.  v1:= 67I;
  #L41bd70.  if v0 == v1 then goto L41bd9c;
  #L41bd74.  v1:= 38I;
  #L41bd78.  if v0 == v1 then goto L41bd9c;
  #L41bd7c.  call temp:= `getType`(v3) @signature `Lorg/mozilla/javascript/Node;.getType:()I` @kind virtual;
  #L41bd82.  v3:= temp;
  #L41bd84.  v0:= 106I;
  #L41bd88.  if v3 != v0 then goto L41bd92;
  #L41bd8c.  v3:= "msg.bad.incr" @kind object;
  #L41bd90.  goto L41bd96;
  #L41bd92.  v3:= "msg.bad.decr" @kind object;
  #L41bd96.  call `i1`(v2, v3) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41bd9c.  return @kind void;
}
procedure `boolean` `H0`(`org.mozilla.javascript.Parser` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/mozilla/javascript/Parser;.H0:(ILjava/lang/String;II)Z` @AccessFlag PRIVATE {
    temp;

  #L417038.  call temp:= `B0`(v0, v1) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41703e.  v1:= temp;
  #L417040.  if v1 == 0 then goto L417048;
  #L417044.  v1:= 1I;
  #L417046.  return v1;
  #L417048.  call `j1`(v0, v2, v3, v4) @signature `Lorg/mozilla/javascript/Parser;.j1:(Ljava/lang/String;II)V` @kind virtual;
  #L41704e.  v1:= 0I;
  #L417050.  return v1;
}
procedure `void` `I`(`org.mozilla.javascript.Parser` v3 @kind this, `org.mozilla.javascript.ast.AstNode` v4 @kind object) @signature `Lorg/mozilla/javascript/Parser;.I:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L41bdb0.  call temp:= `getType`(v4) @signature `Lorg/mozilla/javascript/Node;.getType:()I` @kind virtual;
  #L41bdb6.  v0:= temp;
  #L41bdb8.  v1:= "eval" @kind object;
  #L41bdbc.  v2:= 39I;
  #L41bdc0.  if v0 != v2 then goto L41bdde;
  #L41bdc4.  v0:= v4 @kind object;
  #L41bdc6.  v0:= (`org.mozilla.javascript.ast.Name`) v0 @kind object;
  #L41bdca.  call temp:= `getIdentifier`(v0) @signature `Lorg/mozilla/javascript/ast/Name;.getIdentifier:()Ljava/lang/String;` @kind virtual;
  #L41bdd0.  v0:= temp @kind object;
  #L41bdd2.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41bdd8.  v0:= temp;
  #L41bdda.  if v0 != 0 then goto L41be0e;
  #L41bdde.  call temp:= `getType`(v4) @signature `Lorg/mozilla/javascript/Node;.getType:()I` @kind virtual;
  #L41bde4.  v0:= temp;
  #L41bde6.  v2:= 33I;
  #L41bdea.  if v0 != v2 then goto L41be14;
  #L41bdee.  v4:= (`org.mozilla.javascript.ast.PropertyGet`) v4 @kind object;
  #L41bdf2.  call temp:= `getProperty`(v4) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.getProperty:()Lorg/mozilla/javascript/ast/Name;` @kind virtual;
  #L41bdf8.  v4:= temp @kind object;
  #L41bdfa.  call temp:= `getIdentifier`(v4) @signature `Lorg/mozilla/javascript/ast/Name;.getIdentifier:()Ljava/lang/String;` @kind virtual;
  #L41be00.  v4:= temp @kind object;
  #L41be02.  call temp:= `equals`(v1, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41be08.  v4:= temp;
  #L41be0a.  if v4 == 0 then goto L41be14;
  #L41be0e.  call `setRequiresActivation`(v3) @signature `Lorg/mozilla/javascript/Parser;.setRequiresActivation:()V` @kind virtual;
  #L41be14.  return @kind void;
}
procedure `org.mozilla.javascript.ast.AstNode` `I0`(`org.mozilla.javascript.Parser` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lorg/mozilla/javascript/Parser;.I0:(II)Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L418a10.  v5:= v3.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418a14.  call temp:= `q`(v5) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L418a1a.  v5:= temp @kind object;
  #L418a1c.  v0:= v3.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418a20.  v1:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L418a24.  v0:= v0.`org.mozilla.javascript.u.o` @type ^`int`;
  #L418a28.  v2:= 131072I;
  #L418a2c.  v4:= v4 ^& v2 @kind int;
  #L418a2e.  if v4 == 0 then goto L418a6c;
  #L418a32.  call temp:= `W0`(v3) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L418a38.  v4:= temp;
  #L418a3a.  v2:= 103I;
  #L418a3e.  if v4 != v2 then goto L418a6c;
  #L418a42.  v4:= new `org.mozilla.javascript.ast.Label`;
  #L418a46.  v0:= v3.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418a4a.  v0:= v0.`org.mozilla.javascript.u.w` @type ^`int`;
  #L418a4e.  v0:= v0 - v1 @kind int;
  #L418a50.  call `<init>`(v4, v1, v0) @signature `Lorg/mozilla/javascript/ast/Label;.<init>:(II)V` @kind direct;
  #L418a56.  call `setName`(v4, v5) @signature `Lorg/mozilla/javascript/ast/Label;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L418a5c.  v5:= v3.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418a60.  v5:= v5.`org.mozilla.javascript.u.o` @type ^`int`;
  #L418a64.  call `setLineno`(v4, v5) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L418a6a.  return v4 @kind object;
  #L418a6c.  call `n1`(v3, v1, v5, v0) @signature `Lorg/mozilla/javascript/Parser;.n1:(ILjava/lang/String;I)V` @kind direct;
  #L418a72.  v4:= v3.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L418a76.  call temp:= `isXmlAvailable`(v4) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isXmlAvailable:()Z` @kind virtual;
  #L418a7c.  v4:= temp;
  #L418a7e.  if v4 == 0 then goto L418a90;
  #L418a82.  v4:= -1I;
  #L418a84.  v0:= 0I;
  #L418a86.  call temp:= `c1`(v3, v4, v5, v0) @signature `Lorg/mozilla/javascript/Parser;.c1:(ILjava/lang/String;I)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L418a8c.  v4:= temp @kind object;
  #L418a8e.  return v4 @kind object;
  #L418a90.  v4:= 1I;
  #L418a92.  v5:= 39I;
  #L418a96.  call temp:= `Q`(v3, v4, v5) @signature `Lorg/mozilla/javascript/Parser;.Q:(ZI)Lorg/mozilla/javascript/ast/Name;` @kind direct;
  #L418a9c.  v4:= temp @kind object;
  #L418a9e.  return v4 @kind object;
}
procedure `java.lang.RuntimeException` `J`(`org.mozilla.javascript.Parser` v2 @kind this) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4172d0.  v0:= new `java.lang.StringBuilder`;
  #L4172d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4172da.  v1:= "ts.cursor=" @kind object;
  #L4172de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4172e4.  v1:= v2.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4172e8.  v1:= v1.`org.mozilla.javascript.u.u` @type ^`int`;
  #L4172ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4172f2.  v1:= ", ts.tokenBeg=" @kind object;
  #L4172f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4172fc.  v1:= v2.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417300.  v1:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L417304.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L41730a.  v1:= ", currentToken=" @kind object;
  #L41730e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417314.  v1:= v2.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L417318.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L41731e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L417324.  v0:= temp @kind object;
  #L417326.  call temp:= `codeBug`(v0) @signature `Lorg/mozilla/javascript/Kit;.codeBug:(Ljava/lang/String;)Ljava/lang/RuntimeException;` @kind static;
  #L41732c.  v0:= temp @kind object;
  #L41732e.  throw v0;
}
procedure `org.mozilla.javascript.ast.AstNode` `J0`(`org.mozilla.javascript.Parser` v8 @kind this) @signature `Lorg/mozilla/javascript/Parser;.J0:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L418ab0.  v0:= v8.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L418ab4.  v1:= 39I;
  #L418ab8.  v2:= 0I;
  #L418aba.  if v0 != v1 then goto L418c46;
  #L418abe.  v0:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418ac2.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L418ac6.  v3:= v8.`org.mozilla.javascript.Parser.i` @type ^`int`;
  #L418aca.  v4:= 131072I;
  #L418ace.  v3:= v3 ^| v4 @kind int;
  #L418ad0.  v8.`org.mozilla.javascript.Parser.i` @type ^`int` := v3;
  #L418ad4.  call temp:= `f0`(v8) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L418ada.  v3:= temp @kind object;
  #L418adc.  call temp:= `getType`(v3) @signature `Lorg/mozilla/javascript/Node;.getType:()I` @kind virtual;
  #L418ae2.  v5:= temp;
  #L418ae4.  v6:= 130I;
  #L418ae8.  if v5 == v6 then goto L418b0c;
  #L418aec.  v0:= new `org.mozilla.javascript.ast.ExpressionStatement`;
  #L418af0.  call temp:= `s0`(v8) @signature `Lorg/mozilla/javascript/Parser;.s0:()Z` @kind virtual;
  #L418af6.  v1:= temp;
  #L418af8.  v1:= v1 ^~ 1;
  #L418afc.  call `<init>`(v0, v3, v1) @signature `Lorg/mozilla/javascript/ast/ExpressionStatement;.<init>:(Lorg/mozilla/javascript/ast/AstNode;Z)V` @kind direct;
  #L418b02.  v1:= v3.`org.mozilla.javascript.Node.lineno` @type ^`int`;
  #L418b06.  v0.`org.mozilla.javascript.Node.lineno` @type ^`int` := v1;
  #L418b0a.  return v0 @kind object;
  #L418b0c.  v5:= new `org.mozilla.javascript.ast.LabeledStatement`;
  #L418b10.  call `<init>`(v5, v0) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.<init>:(I)V` @kind direct;
  #L418b16.  v3:= (`org.mozilla.javascript.ast.Label`) v3 @kind object;
  #L418b1a.  call `g1`(v8, v3, v5) @signature `Lorg/mozilla/javascript/Parser;.g1:(Lorg/mozilla/javascript/ast/Label;Lorg/mozilla/javascript/ast/LabeledStatement;)V` @kind direct;
  #L418b20.  v3:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418b24.  v3:= v3.`org.mozilla.javascript.u.o` @type ^`int`;
  #L418b28.  call `setLineno`(v5, v3) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L418b2e.  call temp:= `W0`(v8) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L418b34.  v3:= temp;
  #L418b36.  if v3 != v1 then goto L418b82;
  #L418b3a.  v3:= v8.`org.mozilla.javascript.Parser.i` @type ^`int`;
  #L418b3e.  v3:= v3 ^| v4 @kind int;
  #L418b40.  v8.`org.mozilla.javascript.Parser.i` @type ^`int` := v3;
  #L418b44.  call temp:= `f0`(v8) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L418b4a.  v3:= temp @kind object;
  #L418b4c.  call temp:= `getType`(v3) @signature `Lorg/mozilla/javascript/Node;.getType:()I` @kind virtual;
  #L418b52.  v7:= temp;
  #L418b54.  if v7 == v6 then goto L418b76;
  #L418b58.  v1:= new `org.mozilla.javascript.ast.ExpressionStatement`;
  #L418b5c.  call temp:= `s0`(v8) @signature `Lorg/mozilla/javascript/Parser;.s0:()Z` @kind virtual;
  #L418b62.  v4:= temp;
  #L418b64.  v4:= v4 ^~ 1;
  #L418b68.  call `<init>`(v1, v3, v4) @signature `Lorg/mozilla/javascript/ast/ExpressionStatement;.<init>:(Lorg/mozilla/javascript/ast/AstNode;Z)V` @kind direct;
  #L418b6e.  call `B`(v8, v1) @signature `Lorg/mozilla/javascript/Parser;.B:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind direct;
  #L418b74.  goto L418b84;
  #L418b76.  v3:= (`org.mozilla.javascript.ast.Label`) v3 @kind object;
  #L418b7a.  call `g1`(v8, v3, v5) @signature `Lorg/mozilla/javascript/Parser;.g1:(Lorg/mozilla/javascript/ast/Label;Lorg/mozilla/javascript/ast/LabeledStatement;)V` @kind direct;
  #L418b80.  goto L418b2e;
  #L418b82.  v1:= v2 @kind object;
  #L418b84.  v8.`org.mozilla.javascript.Parser.n` @type ^`org.mozilla.javascript.ast.LabeledStatement` := v5 @kind object;
  #L418b88.  if v1 != 0 then goto L418b94;
  #L418b8c.  call temp:= `q1`(v8) @signature `Lorg/mozilla/javascript/Parser;.q1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L418b92.  v1:= temp @kind object;
  #L418b94.  v8.`org.mozilla.javascript.Parser.n` @type ^`org.mozilla.javascript.ast.LabeledStatement` := v2 @kind object;
  #L418b98.  call temp:= `getLabels`(v5) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.getLabels:()Ljava/util/List;` @kind virtual;
  #L418b9e.  v2:= temp @kind object;
  #L418ba0.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L418ba6.  v2:= temp @kind object;
  #L418ba8.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L418bae.  v3:= temp;
  #L418bb0.  if v3 == 0 then goto L418bd4;
  #L418bb4.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L418bba.  v3:= temp @kind object;
  #L418bbc.  v3:= (`org.mozilla.javascript.ast.Label`) v3 @kind object;
  #L418bc0.  v4:= v8.`org.mozilla.javascript.Parser.t` @type ^`java.util.Map` @kind object;
  #L418bc4.  call temp:= `getName`(v3) @signature `Lorg/mozilla/javascript/ast/Label;.getName:()Ljava/lang/String;` @kind virtual;
  #L418bca.  v3:= temp @kind object;
  #L418bcc.  call temp:= `remove`(v4, v3) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L418bd2.  goto L418ba8;
  #L418bd4.  call temp:= `getParent`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.getParent:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L418bda.  v2:= temp @kind object;
  #L418bdc.  if v2 != 0 then goto L418bec;
  #L418be0.  call temp:= `o0`(v8, v1) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L418be6.  v2:= temp;
  #L418be8.  v2:= v2 - v0 @kind int;
  #L418bea.  goto L418bf4;
  #L418bec.  call temp:= `o0`(v8, v1) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L418bf2.  v2:= temp;
  #L418bf4.  call `setLength`(v5, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L418bfa.  call `setStatement`(v5, v1) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.setStatement:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L418c00.  return v5 @kind object;
  #L418c02.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L418c04.  v8.`org.mozilla.javascript.Parser.n` @type ^`org.mozilla.javascript.ast.LabeledStatement` := v2 @kind object;
  #L418c08.  call temp:= `getLabels`(v5) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.getLabels:()Ljava/util/List;` @kind virtual;
  #L418c0e.  v1:= temp @kind object;
  #L418c10.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L418c16.  v1:= temp @kind object;
  #L418c18.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L418c1e.  v2:= temp;
  #L418c20.  if v2 == 0 then goto L418c44;
  #L418c24.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L418c2a.  v2:= temp @kind object;
  #L418c2c.  v2:= (`org.mozilla.javascript.ast.Label`) v2 @kind object;
  #L418c30.  v3:= v8.`org.mozilla.javascript.Parser.t` @type ^`java.util.Map` @kind object;
  #L418c34.  call temp:= `getName`(v2) @signature `Lorg/mozilla/javascript/ast/Label;.getName:()Ljava/lang/String;` @kind virtual;
  #L418c3a.  v2:= temp @kind object;
  #L418c3c.  call temp:= `remove`(v3, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L418c42.  goto L418c18;
  #L418c44.  throw v0;
  #L418c46.  call temp:= `J`(v8) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L418c4c.  throw v2;
  catch `java.lang.Throwable` @[L418b84..L418b94] goto L418c02;
}
procedure `org.mozilla.javascript.ast.AstNode` `K`(`org.mozilla.javascript.Parser` v9 @kind this) @signature `Lorg/mozilla/javascript/Parser;.K:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L418054.  call temp:= `Q0`(v9) @signature `Lorg/mozilla/javascript/Parser;.Q0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41805a.  v0:= temp @kind object;
  #L41805c.  v1:= 102I;
  #L418060.  call temp:= `B0`(v9, v1) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L418066.  v1:= temp;
  #L418068.  if v1 == 0 then goto L4180ec;
  #L41806c.  v1:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418070.  v2:= v1.`org.mozilla.javascript.u.o` @type ^`int`;
  #L418074.  v1:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L418078.  v3:= -1I;
  #L41807a.  call temp:= `z`(v9) @signature `Lorg/mozilla/javascript/Parser;.z:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L418080.  v4:= temp @kind object;
  #L418082.  v5:= 103I;
  #L418086.  v6:= "msg.no.colon.cond" @kind object;
  #L41808a.  call temp:= `G0`(v9, v5, v6) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L418090.  v5:= temp;
  #L418092.  if v5 == 0 then goto L41809e;
  #L418096.  v3:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41809a.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41809e.  call temp:= `z`(v9) @signature `Lorg/mozilla/javascript/Parser;.z:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4180a4.  v5:= temp @kind object;
  #L4180a6.  call temp:= `getPosition`(v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L4180ac.  v6:= temp;
  #L4180ae.  call temp:= `o0`(v9, v5) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L4180b4.  v7:= temp;
  #L4180b6.  v7:= v7 - v6 @kind int;
  #L4180b8.  v8:= new `org.mozilla.javascript.ast.ConditionalExpression`;
  #L4180bc.  call `<init>`(v8, v6, v7) @signature `Lorg/mozilla/javascript/ast/ConditionalExpression;.<init>:(II)V` @kind direct;
  #L4180c2.  call `setLineno`(v8, v2) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L4180c8.  call `setTestExpression`(v8, v0) @signature `Lorg/mozilla/javascript/ast/ConditionalExpression;.setTestExpression:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L4180ce.  call `setTrueExpression`(v8, v4) @signature `Lorg/mozilla/javascript/ast/ConditionalExpression;.setTrueExpression:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L4180d4.  call `setFalseExpression`(v8, v5) @signature `Lorg/mozilla/javascript/ast/ConditionalExpression;.setFalseExpression:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L4180da.  v1:= v1 - v6 @kind int;
  #L4180dc.  call `setQuestionMarkPosition`(v8, v1) @signature `Lorg/mozilla/javascript/ast/ConditionalExpression;.setQuestionMarkPosition:(I)V` @kind virtual;
  #L4180e2.  v3:= v3 - v6 @kind int;
  #L4180e4.  call `setColonPosition`(v8, v3) @signature `Lorg/mozilla/javascript/ast/ConditionalExpression;.setColonPosition:(I)V` @kind virtual;
  #L4180ea.  v0:= v8 @kind object;
  #L4180ec.  return v0 @kind object;
}
procedure `int` `K0`(`org.mozilla.javascript.Parser` v1 @kind this) @signature `Lorg/mozilla/javascript/Parser;.K0:()I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L417174.  call temp:= `W0`(v1) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41717a.  v0:= v1.`org.mozilla.javascript.Parser.i` @type ^`int`;
  #L41717e.  call `M`(v1) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L417184.  return v0;
}
procedure `org.mozilla.javascript.Parser$b` `L`(`org.mozilla.javascript.Parser` v5 @kind this) @signature `Lorg/mozilla/javascript/Parser;.L:()Lorg/mozilla/javascript/Parser$b;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4178a0.  v0:= new `org.mozilla.javascript.Parser$b`;
  #L4178a4.  v1:= 0I;
  #L4178a6.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/Parser$b;.<init>:(Lorg/mozilla/javascript/Parser$a;)V` @kind direct;
  #L4178ac.  v1:= 87I;
  #L4178b0.  v2:= "msg.no.paren.cond" @kind object;
  #L4178b4.  call temp:= `G0`(v5, v1, v2) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L4178ba.  v1:= temp;
  #L4178bc.  if v1 == 0 then goto L4178cc;
  #L4178c0.  v1:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4178c4.  v1:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L4178c8.  v0.`org.mozilla.javascript.Parser$b.b` @type ^`int` := v1;
  #L4178cc.  call temp:= `f0`(v5) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4178d2.  v1:= temp @kind object;
  #L4178d4.  v0.`org.mozilla.javascript.Parser$b.a` @type ^`org.mozilla.javascript.ast.AstNode` := v1 @kind object;
  #L4178d8.  v1:= 88I;
  #L4178dc.  v2:= "msg.no.paren.after.cond" @kind object;
  #L4178e0.  call temp:= `G0`(v5, v1, v2) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L4178e6.  v1:= temp;
  #L4178e8.  if v1 == 0 then goto L4178f8;
  #L4178ec.  v1:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4178f0.  v1:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L4178f4.  v0.`org.mozilla.javascript.Parser$b.c` @type ^`int` := v1;
  #L4178f8.  v1:= v0.`org.mozilla.javascript.Parser$b.a` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L4178fc.  v2:= instanceof @variable v1 @type ^`org.mozilla.javascript.ast.Assignment` @kind boolean;
  #L417900.  if v2 == 0 then goto L417926;
  #L417904.  call temp:= `getPosition`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L41790a.  v1:= temp;
  #L41790c.  v2:= v0.`org.mozilla.javascript.Parser$b.a` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L417910.  call temp:= `getLength`(v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.getLength:()I` @kind virtual;
  #L417916.  v2:= temp;
  #L417918.  v3:= "msg.equal.as.assign" @kind object;
  #L41791c.  v4:= "" @kind object;
  #L417920.  call `q`(v5, v3, v4, v1, v2) @signature `Lorg/mozilla/javascript/Parser;.q:(Ljava/lang/String;Ljava/lang/String;II)V` @kind virtual;
  #L417926.  return v0 @kind object;
}
procedure `int` `L0`(`org.mozilla.javascript.Parser` v1 @kind this) @signature `Lorg/mozilla/javascript/Parser;.L0:()I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L417198.  call temp:= `W0`(v1) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41719e.  v0:= temp;
  #L4171a0.  call `M`(v1) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L4171a6.  return v0;
}
procedure `void` `M`(`org.mozilla.javascript.Parser` v1 @kind this) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L41be5c.  v0:= 0I;
  #L41be5e.  v1.`org.mozilla.javascript.Parser.i` @type ^`int` := v0;
  #L41be62.  return @kind void;
}
procedure `int` `M0`(`org.mozilla.javascript.Parser` v1 @kind this, `org.mozilla.javascript.ast.AstNode` v2 @kind object) @signature `Lorg/mozilla/javascript/Parser;.M0:(Lorg/mozilla/javascript/ast/AstNode;)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4171b8.  call temp:= `getPosition`(v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L4171be.  v0:= temp;
  #L4171c0.  call temp:= `getLength`(v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.getLength:()I` @kind virtual;
  #L4171c6.  v2:= temp;
  #L4171c8.  v0:= v0 + v2 @kind int;
  #L4171ca.  return v0;
}
procedure `org.mozilla.javascript.ast.ContinueStatement` `N`(`org.mozilla.javascript.Parser` v8 @kind this) @signature `Lorg/mozilla/javascript/Parser;.N:()Lorg/mozilla/javascript/ast/ContinueStatement;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L41a270.  v0:= v8.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L41a274.  v1:= 0I;
  #L41a276.  v2:= 121I;
  #L41a27a.  if v0 != v2 then goto L41a362;
  #L41a27e.  call `M`(v8) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41a284.  v0:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a288.  v2:= v0.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41a28c.  v3:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41a290.  v0:= v0.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41a294.  call temp:= `X0`(v8) @signature `Lorg/mozilla/javascript/Parser;.X0:()I` @kind direct;
  #L41a29a.  v4:= temp;
  #L41a29c.  v5:= 39I;
  #L41a2a0.  if v4 != v5 then goto L41a2b6;
  #L41a2a4.  call temp:= `P`(v8) @signature `Lorg/mozilla/javascript/Parser;.P:()Lorg/mozilla/javascript/ast/Name;` @kind direct;
  #L41a2aa.  v0:= temp @kind object;
  #L41a2ac.  call temp:= `o0`(v8, v0) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41a2b2.  v4:= temp;
  #L41a2b4.  goto L41a2ba;
  #L41a2b6.  v4:= v0;
  #L41a2b8.  v0:= v1 @kind object;
  #L41a2ba.  call temp:= `A0`(v8) @signature `Lorg/mozilla/javascript/Parser;.A0:()Lorg/mozilla/javascript/ast/LabeledStatement;` @kind direct;
  #L41a2c0.  v5:= temp @kind object;
  #L41a2c2.  if v5 != 0 then goto L41a30a;
  #L41a2c6.  if v0 != 0 then goto L41a30a;
  #L41a2ca.  v5:= v8.`org.mozilla.javascript.Parser.u` @type ^`java.util.List` @kind object;
  #L41a2ce.  if v5 == 0 then goto L41a2fe;
  #L41a2d2.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L41a2d8.  v5:= temp;
  #L41a2da.  if v5 != 0 then goto L41a2e0;
  #L41a2de.  goto L41a2fe;
  #L41a2e0.  v1:= v8.`org.mozilla.javascript.Parser.u` @type ^`java.util.List` @kind object;
  #L41a2e4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L41a2ea.  v5:= temp;
  #L41a2ec.  v5:= v5 + -1;
  #L41a2f0.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L41a2f6.  v1:= temp @kind object;
  #L41a2f8.  v1:= (`org.mozilla.javascript.ast.Loop`) v1 @kind object;
  #L41a2fc.  goto L41a33e;
  #L41a2fe.  v5:= "msg.continue.outside" @kind object;
  #L41a302.  call `i1`(v8, v5) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41a308.  goto L41a33e;
  #L41a30a.  if v5 == 0 then goto L41a31e;
  #L41a30e.  call temp:= `getStatement`(v5) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.getStatement:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L41a314.  v6:= temp @kind object;
  #L41a316.  v6:= instanceof @variable v6 @type ^`org.mozilla.javascript.ast.Loop` @kind boolean;
  #L41a31a.  if v6 != 0 then goto L41a32c;
  #L41a31e.  v6:= v4 - v3 @kind int;
  #L41a322.  v7:= "msg.continue.nonloop" @kind object;
  #L41a326.  call `j1`(v8, v7, v3, v6) @signature `Lorg/mozilla/javascript/Parser;.j1:(Ljava/lang/String;II)V` @kind virtual;
  #L41a32c.  if v5 != 0 then goto L41a332;
  #L41a330.  goto L41a33e;
  #L41a332.  call temp:= `getStatement`(v5) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.getStatement:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L41a338.  v1:= temp @kind object;
  #L41a33a.  v1:= (`org.mozilla.javascript.ast.Loop`) v1 @kind object;
  #L41a33e.  v5:= new `org.mozilla.javascript.ast.ContinueStatement`;
  #L41a342.  v4:= v4 - v3 @kind int;
  #L41a344.  call `<init>`(v5, v3, v4) @signature `Lorg/mozilla/javascript/ast/ContinueStatement;.<init>:(II)V` @kind direct;
  #L41a34a.  if v1 == 0 then goto L41a354;
  #L41a34e.  call `setTarget`(v5, v1) @signature `Lorg/mozilla/javascript/ast/ContinueStatement;.setTarget:(Lorg/mozilla/javascript/ast/Loop;)V` @kind virtual;
  #L41a354.  call `setLabel`(v5, v0) @signature `Lorg/mozilla/javascript/ast/ContinueStatement;.setLabel:(Lorg/mozilla/javascript/ast/Name;)V` @kind virtual;
  #L41a35a.  call `setLineno`(v5, v2) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41a360.  return v5 @kind object;
  #L41a362.  call temp:= `J`(v8) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L41a368.  throw v1;
}
procedure `boolean` `N0`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/Parser;.N0:(III)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L417064.  v0:= v0 ^& v2 @kind int;
  #L417066.  if v0 == v2 then goto L417076;
  #L41706a.  v0:= v1 ^& v2 @kind int;
  #L41706e.  if v0 != v2 then goto L417076;
  #L417072.  v0:= 1I;
  #L417074.  goto L417078;
  #L417076.  v0:= 0I;
  #L417078.  return v0;
}
procedure `org.mozilla.javascript.ast.ObjectLiteral` `O0`(`org.mozilla.javascript.Parser` v17 @kind this) @signature `Lorg/mozilla/javascript/Parser;.O0:()Lorg/mozilla/javascript/ast/ObjectLiteral;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L41ace4.  v0:= v17 @kind object;
  #L41ace8.  v1:= v0.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41acec.  v2:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41acf0.  v1:= v1.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41acf4.  v3:= new `java.util.ArrayList`;
  #L41acf8.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L41acfe.  v4:= v0.`org.mozilla.javascript.Parser.inUseStrictDirective` @type ^`boolean` @kind boolean;
  #L41ad02.  if v4 == 0 then goto L41ad1c;
  #L41ad06.  v4:= new `java.util.HashSet`;
  #L41ad0a.  call `<init>`(v4) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L41ad10.  v6:= new `java.util.HashSet`;
  #L41ad14.  call `<init>`(v6) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L41ad1a.  goto L41ad20;
  #L41ad1c.  v4:= 0I;
  #L41ad1e.  v6:= 0I;
  #L41ad20.  call temp:= `m0`(v17) @signature `Lorg/mozilla/javascript/Parser;.m0:()Lorg/mozilla/javascript/ast/Comment;` @kind direct;
  #L41ad26.  v7:= temp @kind object;
  #L41ad28.  v8:= -1I;
  #L41ad2a.  v9:= -1I;
  #L41ad2c.  call temp:= `W0`(v17) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41ad32.  v10:= temp;
  #L41ad34.  call temp:= `m0`(v17) @signature `Lorg/mozilla/javascript/Parser;.m0:()Lorg/mozilla/javascript/ast/Comment;` @kind direct;
  #L41ad3a.  v11:= temp @kind object;
  #L41ad3c.  v12:= 39I;
  #L41ad40.  v15:= 89I;
  #L41ad44.  v5:= 86I;
  #L41ad48.  if v10 == v12 then goto L41ad98;
  #L41ad4c.  if v10 == v5 then goto L41ad8a;
  #L41ad50.  call temp:= `P0`(v17) @signature `Lorg/mozilla/javascript/Parser;.P0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41ad56.  v9:= temp @kind object;
  #L41ad58.  if v9 != 0 then goto L41ad64;
  #L41ad5c.  v9:= 1I;
  #L41ad5e.  v12:= 0I;
  #L41ad60.  goto L41ae5a;
  #L41ad64.  v12:= v0.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41ad68.  call temp:= `q`(v12) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L41ad6e.  v12:= temp @kind object;
  #L41ad70.  call `setJsDocNode`(v9, v11) @signature `Lorg/mozilla/javascript/Node;.setJsDocNode:(Lorg/mozilla/javascript/ast/Comment;)V` @kind virtual;
  #L41ad76.  call temp:= `Y0`(v0, v9, v10) @signature `Lorg/mozilla/javascript/Parser;.Y0:(Lorg/mozilla/javascript/ast/AstNode;I)Lorg/mozilla/javascript/ast/ObjectProperty;` @kind direct;
  #L41ad7c.  v9:= temp @kind object;
  #L41ad7e.  call temp:= `add`(v3, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41ad84.  v9:= 1I;
  #L41ad86.  goto L41ae5a;
  #L41ad8a.  if v9 == v8 then goto L41aefc;
  #L41ad8e.  call `z1`(v0, v2, v3, v9) @signature `Lorg/mozilla/javascript/Parser;.z1:(ILjava/util/List;I)V` @kind direct;
  #L41ad94.  goto L41aefc;
  #L41ad98.  call temp:= `P`(v17) @signature `Lorg/mozilla/javascript/Parser;.P:()Lorg/mozilla/javascript/ast/Name;` @kind direct;
  #L41ad9e.  v9:= temp @kind object;
  #L41ada0.  v12:= v0.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41ada4.  call temp:= `q`(v12) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L41adaa.  v12:= temp @kind object;
  #L41adac.  v8:= v0.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41adb0.  v8:= v8.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41adb4.  call `M`(v17) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41adba.  call temp:= `W0`(v17) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41adc0.  v14:= temp;
  #L41adc2.  v13:= "get" @kind object;
  #L41adc6.  call temp:= `equals`(v13, v12) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41adcc.  v16:= temp;
  #L41adce.  if v16 != 0 then goto L41ade8;
  #L41add2.  v5:= "set" @kind object;
  #L41add6.  call temp:= `equals`(v5, v12) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41addc.  v5:= temp;
  #L41adde.  if v5 == 0 then goto L41ade4;
  #L41ade2.  goto L41ade8;
  #L41ade4.  v5:= 0I;
  #L41ade6.  goto L41adea;
  #L41ade8.  v5:= 1I;
  #L41adea.  if v5 == 0 then goto L41ae44;
  #L41adee.  if v14 == v15 then goto L41ae44;
  #L41adf2.  v5:= 103I;
  #L41adf6.  if v14 == v5 then goto L41ae44;
  #L41adfa.  v5:= 86I;
  #L41adfe.  if v14 == v5 then goto L41ae44;
  #L41ae02.  call temp:= `equals`(v13, v12) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41ae08.  v5:= temp;
  #L41ae0a.  if v5 == 0 then goto L41ae12;
  #L41ae0e.  v9:= 2I;
  #L41ae10.  goto L41ae14;
  #L41ae12.  v9:= 4I;
  #L41ae14.  call temp:= `P0`(v17) @signature `Lorg/mozilla/javascript/Parser;.P0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41ae1a.  v10:= temp @kind object;
  #L41ae1c.  if v10 != 0 then goto L41ae22;
  #L41ae20.  goto L41ad5e;
  #L41ae22.  v12:= v0.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41ae26.  call temp:= `q`(v12) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L41ae2c.  v12:= temp @kind object;
  #L41ae2e.  call temp:= `q0`(v0, v8, v10, v5) @signature `Lorg/mozilla/javascript/Parser;.q0:(ILorg/mozilla/javascript/ast/AstNode;Z)Lorg/mozilla/javascript/ast/ObjectProperty;` @kind direct;
  #L41ae34.  v5:= temp @kind object;
  #L41ae36.  call `setJsDocNode`(v10, v11) @signature `Lorg/mozilla/javascript/Node;.setJsDocNode:(Lorg/mozilla/javascript/ast/Comment;)V` @kind virtual;
  #L41ae3c.  call temp:= `add`(v3, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41ae42.  goto L41ae5a;
  #L41ae44.  call `setJsDocNode`(v9, v11) @signature `Lorg/mozilla/javascript/Node;.setJsDocNode:(Lorg/mozilla/javascript/ast/Comment;)V` @kind virtual;
  #L41ae4a.  call temp:= `Y0`(v0, v9, v10) @signature `Lorg/mozilla/javascript/Parser;.Y0:(Lorg/mozilla/javascript/ast/AstNode;I)Lorg/mozilla/javascript/ast/ObjectProperty;` @kind direct;
  #L41ae50.  v5:= temp @kind object;
  #L41ae52.  call temp:= `add`(v3, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41ae58.  goto L41ad84;
  #L41ae5a.  v5:= v0.`org.mozilla.javascript.Parser.inUseStrictDirective` @type ^`boolean` @kind boolean;
  #L41ae5e.  if v5 == 0 then goto L41aedc;
  #L41ae62.  if v12 == 0 then goto L41aedc;
  #L41ae66.  v5:= "msg.dup.obj.lit.prop.strict" @kind object;
  #L41ae6a.  v8:= 1I;
  #L41ae6c.  if v9 == v8 then goto L41aeb2;
  #L41ae70.  v8:= 2I;
  #L41ae72.  if v9 == v8 then goto L41ae98;
  #L41ae76.  v8:= 4I;
  #L41ae78.  if v9 == v8 then goto L41ae7e;
  #L41ae7c.  goto L41aedc;
  #L41ae7e.  call temp:= `contains`(v6, v12) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L41ae84.  v8:= temp;
  #L41ae86.  if v8 == 0 then goto L41ae90;
  #L41ae8a.  call `m`(v0, v5, v12) @signature `Lorg/mozilla/javascript/Parser;.m:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L41ae90.  call temp:= `add`(v6, v12) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41ae96.  goto L41aedc;
  #L41ae98.  call temp:= `contains`(v4, v12) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L41ae9e.  v8:= temp;
  #L41aea0.  if v8 == 0 then goto L41aeaa;
  #L41aea4.  call `m`(v0, v5, v12) @signature `Lorg/mozilla/javascript/Parser;.m:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L41aeaa.  call temp:= `add`(v4, v12) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41aeb0.  goto L41aedc;
  #L41aeb2.  call temp:= `contains`(v4, v12) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L41aeb8.  v8:= temp;
  #L41aeba.  if v8 != 0 then goto L41aeca;
  #L41aebe.  call temp:= `contains`(v6, v12) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L41aec4.  v8:= temp;
  #L41aec6.  if v8 == 0 then goto L41aed0;
  #L41aeca.  call `m`(v0, v5, v12) @signature `Lorg/mozilla/javascript/Parser;.m:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L41aed0.  call temp:= `add`(v4, v12) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41aed6.  call temp:= `add`(v6, v12) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41aedc.  call temp:= `m0`(v17) @signature `Lorg/mozilla/javascript/Parser;.m0:()Lorg/mozilla/javascript/ast/Comment;` @kind direct;
  #L41aee2.  call temp:= `B0`(v0, v15) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41aee8.  v5:= temp;
  #L41aeea.  if v5 == 0 then goto L41aefc;
  #L41aeee.  v5:= v0.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41aef2.  v9:= v5.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41aef6.  v8:= -1I;
  #L41aef8.  goto L41ad2c;
  #L41aefc.  v4:= "msg.no.brace.prop" @kind object;
  #L41af00.  v5:= 86I;
  #L41af04.  call temp:= `G0`(v0, v5, v4) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41af0a.  v4:= new `org.mozilla.javascript.ast.ObjectLiteral`;
  #L41af0e.  v5:= v0.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41af12.  v5:= v5.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41af16.  v5:= v5 - v2 @kind int;
  #L41af18.  call `<init>`(v4, v2, v5) @signature `Lorg/mozilla/javascript/ast/ObjectLiteral;.<init>:(II)V` @kind direct;
  #L41af1e.  if v7 == 0 then goto L41af28;
  #L41af22.  call `setJsDocNode`(v4, v7) @signature `Lorg/mozilla/javascript/Node;.setJsDocNode:(Lorg/mozilla/javascript/ast/Comment;)V` @kind virtual;
  #L41af28.  call `setElements`(v4, v3) @signature `Lorg/mozilla/javascript/ast/ObjectLiteral;.setElements:(Ljava/util/List;)V` @kind virtual;
  #L41af2e.  call `setLineno`(v4, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41af34.  return v4 @kind object;
}
procedure `org.mozilla.javascript.ast.Name` `P`(`org.mozilla.javascript.Parser` v2 @kind this) @signature `Lorg/mozilla/javascript/Parser;.P:()Lorg/mozilla/javascript/ast/Name;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L41ac30.  v0:= 0I;
  #L41ac32.  v1:= 39I;
  #L41ac36.  call temp:= `Q`(v2, v0, v1) @signature `Lorg/mozilla/javascript/Parser;.Q:(ZI)Lorg/mozilla/javascript/ast/Name;` @kind direct;
  #L41ac3c.  v0:= temp @kind object;
  #L41ac3e.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `P0`(`org.mozilla.javascript.Parser` v5 @kind this) @signature `Lorg/mozilla/javascript/Parser;.P0:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L418c6c.  call temp:= `W0`(v5) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L418c72.  v0:= temp;
  #L418c74.  goto L418cfc;
  #L418c7a.  v0:= v5.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L418c7e.  call temp:= `isReservedKeywordAsIdentifier`(v0) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isReservedKeywordAsIdentifier:()Z` @kind virtual;
  #L418c84.  v0:= temp;
  #L418c86.  if v0 == 0 then goto L418cee;
  #L418c8a.  v0:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418c8e.  call temp:= `q`(v0) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L418c94.  v0:= temp @kind object;
  #L418c96.  call temp:= `y`(v0) @signature `Lorg/mozilla/javascript/u;.y:(Ljava/lang/String;)Z` @kind static;
  #L418c9c.  v0:= temp;
  #L418c9e.  if v0 == 0 then goto L418cee;
  #L418ca2.  call temp:= `P`(v5) @signature `Lorg/mozilla/javascript/Parser;.P:()Lorg/mozilla/javascript/ast/Name;` @kind direct;
  #L418ca8.  v0:= temp @kind object;
  #L418caa.  goto L418ce6;
  #L418cac.  call temp:= `R`(v5) @signature `Lorg/mozilla/javascript/Parser;.R:()Lorg/mozilla/javascript/ast/StringLiteral;` @kind direct;
  #L418cb2.  v0:= temp @kind object;
  #L418cb4.  goto L418ce6;
  #L418cb6.  v0:= new `org.mozilla.javascript.ast.NumberLiteral`;
  #L418cba.  v1:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418cbe.  v2:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L418cc2.  call temp:= `q`(v1) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L418cc8.  v1:= temp @kind object;
  #L418cca.  v3:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418cce.  call temp:= `n`(v3) @signature `Lorg/mozilla/javascript/u;.n:()D` @kind virtual;
  #L418cd4.  v3:= temp @kind wide;
  #L418cd6.  call `<init>`(v0, v2, v1, v3) @signature `Lorg/mozilla/javascript/ast/NumberLiteral;.<init>:(ILjava/lang/String;D)V` @kind direct;
  #L418cdc.  goto L418ce6;
  #L418cde.  call temp:= `P`(v5) @signature `Lorg/mozilla/javascript/Parser;.P:()Lorg/mozilla/javascript/ast/Name;` @kind direct;
  #L418ce4.  v0:= temp @kind object;
  #L418ce6.  call `M`(v5) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L418cec.  return v0 @kind object;
  #L418cee.  v0:= "msg.bad.prop" @kind object;
  #L418cf2.  call `i1`(v5, v0) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L418cf8.  v0:= 0I;
  #L418cfa.  return v0 @kind object;
  #L418cfc.  switch v0
                  | 39 => goto L418cde
                  | 40 => goto L418cb6
                  | 41 => goto L418cac
                  | else => goto L418c7a;
}
procedure `org.mozilla.javascript.ast.Name` `Q`(`org.mozilla.javascript.Parser` v5 @kind this, `boolean` v6 , `int` v7 ) @signature `Lorg/mozilla/javascript/Parser;.Q:(ZI)Lorg/mozilla/javascript/ast/Name;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L41ac50.  v0:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41ac54.  v1:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41ac58.  call temp:= `q`(v0) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L41ac5e.  v0:= temp @kind object;
  #L41ac60.  v2:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41ac64.  v2:= v2.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41ac68.  v3:= v5.`org.mozilla.javascript.Parser.x` @type ^`java.lang.String` @kind object;
  #L41ac6c.  v4:= "" @kind object;
  #L41ac70.  call temp:= `equals`(v4, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41ac76.  v3:= temp;
  #L41ac78.  if v3 != 0 then goto L41ac96;
  #L41ac7c.  v1:= v5.`org.mozilla.javascript.Parser.w` @type ^`int`;
  #L41ac80.  v0:= v5.`org.mozilla.javascript.Parser.x` @type ^`java.lang.String` @kind object;
  #L41ac84.  v2:= v5.`org.mozilla.javascript.Parser.y` @type ^`int`;
  #L41ac88.  v3:= 0I;
  #L41ac8a.  v5.`org.mozilla.javascript.Parser.w` @type ^`int` := v3;
  #L41ac8e.  v5.`org.mozilla.javascript.Parser.x` @type ^`java.lang.String` := v4 @kind object;
  #L41ac92.  v5.`org.mozilla.javascript.Parser.y` @type ^`int` := v3;
  #L41ac96.  if v0 != 0 then goto L41acb6;
  #L41ac9a.  v0:= v5.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41ac9e.  call temp:= `isIdeMode`(v0) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isIdeMode:()Z` @kind virtual;
  #L41aca4.  v0:= temp;
  #L41aca6.  if v0 == 0 then goto L41acac;
  #L41acaa.  goto L41acb8;
  #L41acac.  call temp:= `J`(v5) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L41acb2.  v6:= 0I;
  #L41acb4.  throw v6;
  #L41acb6.  v4:= v0 @kind object;
  #L41acb8.  v0:= new `org.mozilla.javascript.ast.Name`;
  #L41acbc.  call `<init>`(v0, v1, v4) @signature `Lorg/mozilla/javascript/ast/Name;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L41acc2.  call `setLineno`(v0, v2) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41acc8.  if v6 == 0 then goto L41acd2;
  #L41accc.  call `checkActivationName`(v5, v4, v7) @signature `Lorg/mozilla/javascript/Parser;.checkActivationName:(Ljava/lang/String;I)V` @kind virtual;
  #L41acd2.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `Q0`(`org.mozilla.javascript.Parser` v5 @kind this) @signature `Lorg/mozilla/javascript/Parser;.Q0:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L418d20.  call temp:= `u`(v5) @signature `Lorg/mozilla/javascript/Parser;.u:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L418d26.  v0:= temp @kind object;
  #L418d28.  v1:= 104I;
  #L418d2c.  call temp:= `B0`(v5, v1) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L418d32.  v2:= temp;
  #L418d34.  if v2 == 0 then goto L418d54;
  #L418d38.  v2:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418d3c.  v2:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L418d40.  v3:= new `org.mozilla.javascript.ast.InfixExpression`;
  #L418d44.  call temp:= `Q0`(v5) @signature `Lorg/mozilla/javascript/Parser;.Q0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L418d4a.  v4:= temp @kind object;
  #L418d4c.  call `<init>`(v3, v1, v0, v4, v2) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.<init>:(ILorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;I)V` @kind direct;
  #L418d52.  v0:= v3 @kind object;
  #L418d54.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.StringLiteral` `R`(`org.mozilla.javascript.Parser` v3 @kind this) @signature `Lorg/mozilla/javascript/Parser;.R:()Lorg/mozilla/javascript/ast/StringLiteral;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L41b0b0.  v0:= v3.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b0b4.  v1:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b0b8.  v0:= v0.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41b0bc.  v2:= new `org.mozilla.javascript.ast.StringLiteral`;
  #L41b0c0.  v0:= v0 - v1 @kind int;
  #L41b0c2.  call `<init>`(v2, v1, v0) @signature `Lorg/mozilla/javascript/ast/StringLiteral;.<init>:(II)V` @kind direct;
  #L41b0c8.  v0:= v3.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b0cc.  v0:= v0.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41b0d0.  call `setLineno`(v2, v0) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41b0d6.  v0:= v3.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b0da.  call temp:= `q`(v0) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L41b0e0.  v0:= temp @kind object;
  #L41b0e2.  call `setValue`(v2, v0) @signature `Lorg/mozilla/javascript/ast/StringLiteral;.setValue:(Ljava/lang/String;)V` @kind virtual;
  #L41b0e8.  v0:= v3.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b0ec.  call temp:= `p`(v0) @signature `Lorg/mozilla/javascript/u;.p:()C` @kind virtual;
  #L41b0f2.  v0:= temp;
  #L41b0f4.  call `setQuoteCharacter`(v2, v0) @signature `Lorg/mozilla/javascript/ast/StringLiteral;.setQuoteCharacter:(C)V` @kind virtual;
  #L41b0fa.  return v2 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `R0`(`org.mozilla.javascript.Parser` v7 @kind this) @signature `Lorg/mozilla/javascript/Parser;.R0:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L418d68.  v0:= v7.`org.mozilla.javascript.Parser.s` @type ^`boolean` @kind boolean;
  #L418d6c.  v1:= 0I;
  #L418d6e.  v7.`org.mozilla.javascript.Parser.s` @type ^`boolean` := v1 @kind boolean;
  #L418d72.  call temp:= `m0`(v7) @signature `Lorg/mozilla/javascript/Parser;.m0:()Lorg/mozilla/javascript/ast/Comment;` @kind direct;
  #L418d78.  v1:= temp @kind object;
  #L418d7a.  v2:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418d7e.  v2:= v2.`org.mozilla.javascript.u.o` @type ^`int`;
  #L418d82.  v3:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418d86.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L418d8a.  call temp:= `f0`(v7) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L418d90.  v4:= temp @kind object;
  #L418d92.  call temp:= `W0`(v7) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L418d98.  v5:= temp;
  #L418d9a.  v6:= 119I;
  #L418d9e.  if v5 != v6 then goto L418db0;
  #L418da2.  call temp:= `j0`(v7, v4, v3) @signature `Lorg/mozilla/javascript/Parser;.j0:(Lorg/mozilla/javascript/ast/AstNode;I)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L418da8.  v1:= temp @kind object;
  #L418daa.  v7.`org.mozilla.javascript.Parser.s` @type ^`boolean` := v0 @kind boolean;
  #L418dae.  return v1 @kind object;
  #L418db0.  v3:= new `org.mozilla.javascript.ast.ParenthesizedExpression`;
  #L418db4.  call `<init>`(v3, v4) @signature `Lorg/mozilla/javascript/ast/ParenthesizedExpression;.<init>:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind direct;
  #L418dba.  if v1 != 0 then goto L418dc6;
  #L418dbe.  call temp:= `m0`(v7) @signature `Lorg/mozilla/javascript/Parser;.m0:()Lorg/mozilla/javascript/ast/Comment;` @kind direct;
  #L418dc4.  v1:= temp @kind object;
  #L418dc6.  if v1 == 0 then goto L418dd0;
  #L418dca.  call `setJsDocNode`(v3, v1) @signature `Lorg/mozilla/javascript/Node;.setJsDocNode:(Lorg/mozilla/javascript/ast/Comment;)V` @kind virtual;
  #L418dd0.  v1:= 88I;
  #L418dd4.  v4:= "msg.no.paren" @kind object;
  #L418dd8.  call temp:= `G0`(v7, v1, v4) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L418dde.  v1:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418de2.  v1:= v1.`org.mozilla.javascript.u.w` @type ^`int`;
  #L418de6.  call temp:= `getPosition`(v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L418dec.  v4:= temp;
  #L418dee.  v1:= v1 - v4 @kind int;
  #L418df0.  call `setLength`(v3, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L418df6.  call `setLineno`(v3, v2) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L418dfc.  v7.`org.mozilla.javascript.Parser.s` @type ^`boolean` := v0 @kind boolean;
  #L418e00.  return v3 @kind object;
  #L418e02.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L418e04.  v7.`org.mozilla.javascript.Parser.s` @type ^`boolean` := v0 @kind boolean;
  #L418e08.  throw v1;
  catch `java.lang.Throwable` @[L418d72..L418daa] goto L418e02;
  catch `java.lang.Throwable` @[L418db0..L418dfc] goto L418e02;
}
procedure `org.mozilla.javascript.ast.AstNode` `S`(`org.mozilla.javascript.Parser` v6 @kind this) @signature `Lorg/mozilla/javascript/Parser;.S:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L418100.  v0:= v6.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L418104.  v1:= 116I;
  #L418108.  if v0 != v1 then goto L4181e4;
  #L41810c.  call `M`(v6) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L418112.  call `F0`(v6) @signature `Lorg/mozilla/javascript/Parser;.F0:()V` @kind direct;
  #L418118.  call `setRequiresActivation`(v6) @signature `Lorg/mozilla/javascript/Parser;.setRequiresActivation:()V` @kind virtual;
  #L41811e.  v0:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418122.  v1:= v0.`org.mozilla.javascript.u.o` @type ^`int`;
  #L418126.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41812a.  v2:= 39I;
  #L41812e.  call temp:= `B0`(v6, v2) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L418134.  v3:= temp;
  #L418136.  v4:= "msg.bad.namespace" @kind object;
  #L41813a.  if v3 == 0 then goto L41815a;
  #L41813e.  v3:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418142.  call temp:= `q`(v3) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L418148.  v3:= temp @kind object;
  #L41814a.  v5:= "xml" @kind object;
  #L41814e.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L418154.  v3:= temp;
  #L418156.  if v3 != 0 then goto L418160;
  #L41815a.  call `i1`(v6, v4) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L418160.  call temp:= `B0`(v6, v2) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L418166.  v2:= temp;
  #L418168.  if v2 == 0 then goto L418188;
  #L41816c.  v2:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418170.  call temp:= `q`(v2) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L418176.  v2:= temp @kind object;
  #L418178.  v3:= "namespace" @kind object;
  #L41817c.  call temp:= `equals`(v3, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L418182.  v2:= temp;
  #L418184.  if v2 != 0 then goto L41818e;
  #L418188.  call `i1`(v6, v4) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41818e.  v2:= 90I;
  #L418192.  call temp:= `B0`(v6, v2) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L418198.  v2:= temp;
  #L41819a.  if v2 != 0 then goto L4181a4;
  #L41819e.  call `i1`(v6, v4) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L4181a4.  call temp:= `f0`(v6) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4181aa.  v2:= temp @kind object;
  #L4181ac.  v3:= new `org.mozilla.javascript.ast.UnaryExpression`;
  #L4181b0.  call temp:= `o0`(v6, v2) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L4181b6.  v4:= temp;
  #L4181b8.  v4:= v4 - v0 @kind int;
  #L4181ba.  call `<init>`(v3, v0, v4) @signature `Lorg/mozilla/javascript/ast/UnaryExpression;.<init>:(II)V` @kind direct;
  #L4181c0.  v0:= 74I;
  #L4181c4.  call `setOperator`(v3, v0) @signature `Lorg/mozilla/javascript/ast/UnaryExpression;.setOperator:(I)V` @kind virtual;
  #L4181ca.  call `setOperand`(v3, v2) @signature `Lorg/mozilla/javascript/ast/UnaryExpression;.setOperand:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L4181d0.  call `setLineno`(v3, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L4181d6.  v0:= new `org.mozilla.javascript.ast.ExpressionStatement`;
  #L4181da.  v1:= 1I;
  #L4181dc.  call `<init>`(v0, v3, v1) @signature `Lorg/mozilla/javascript/ast/ExpressionStatement;.<init>:(Lorg/mozilla/javascript/ast/AstNode;Z)V` @kind direct;
  #L4181e2.  return v0 @kind object;
  #L4181e4.  call temp:= `J`(v6) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L4181ea.  v0:= 0I;
  #L4181ec.  throw v0;
}
procedure `org.mozilla.javascript.ast.AstRoot` `S0`(`org.mozilla.javascript.Parser` v10 @kind this) @signature `Lorg/mozilla/javascript/Parser;.S0:()Lorg/mozilla/javascript/ast/AstRoot;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L419e48.  v0:= new `org.mozilla.javascript.ast.AstRoot`;
  #L419e4c.  v1:= 0I;
  #L419e4e.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstRoot;.<init>:(I)V` @kind direct;
  #L419e54.  v10.`org.mozilla.javascript.Parser.p` @type ^`org.mozilla.javascript.ast.ScriptNode` := v0 @kind object;
  #L419e58.  v10.`org.mozilla.javascript.Parser.q` @type ^`org.mozilla.javascript.ast.Scope` := v0 @kind object;
  #L419e5c.  v2:= v10.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419e60.  v6:= v2.`org.mozilla.javascript.u.o` @type ^`int`;
  #L419e64.  v2:= v10.`org.mozilla.javascript.Parser.inUseStrictDirective` @type ^`boolean` @kind boolean;
  #L419e68.  v10.`org.mozilla.javascript.Parser.inUseStrictDirective` @type ^`boolean` := v1 @kind boolean;
  #L419e6c.  v3:= 1I;
  #L419e6e.  v4:= 1I;
  #L419e70.  v5:= 0I;
  #L419e72.  call temp:= `W0`(v10) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L419e78.  v7:= temp;
  #L419e7a.  if v7 > 0 then goto L419e80;
  #L419e7e.  goto L419ea6;
  #L419e80.  v8:= 109I;
  #L419e84.  if v7 != v8 then goto L419eac;
  #L419e88.  call `M`(v10) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L419e8e.  v7:= v10.`org.mozilla.javascript.Parser.f` @type ^`boolean` @kind boolean;
  #L419e92.  if v7 == 0 then goto L419e9a;
  #L419e96.  v7:= 2I;
  #L419e98.  goto L419e9c;
  #L419e9a.  v7:= 1I;
  #L419e9c.  call temp:= `i0`(v10, v7) @signature `Lorg/mozilla/javascript/Parser;.i0:(I)Lorg/mozilla/javascript/ast/FunctionNode;` @kind direct;
  #L419ea2.  v7:= temp @kind object;
  #L419ea4.  goto L419ee2;
  #L419ea6.  v10.`org.mozilla.javascript.Parser.inUseStrictDirective` @type ^`boolean` := v2 @kind boolean;
  #L419eaa.  goto L419f1c;
  #L419eac.  call temp:= `p1`(v10) @signature `Lorg/mozilla/javascript/Parser;.p1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419eb2.  v7:= temp @kind object;
  #L419eb4.  if v4 == 0 then goto L419ee2;
  #L419eb8.  call temp:= `n0`(v10, v7) @signature `Lorg/mozilla/javascript/Parser;.n0:(Lorg/mozilla/javascript/ast/AstNode;)Ljava/lang/String;` @kind direct;
  #L419ebe.  v8:= temp @kind object;
  #L419ec0.  if v8 != 0 then goto L419ec8;
  #L419ec4.  v4:= 0I;
  #L419ec6.  goto L419ee2;
  #L419ec8.  v9:= "use strict" @kind object;
  #L419ecc.  call temp:= `equals`(v8, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L419ed2.  v8:= temp;
  #L419ed4.  if v8 == 0 then goto L419ee2;
  #L419ed8.  v10.`org.mozilla.javascript.Parser.inUseStrictDirective` @type ^`boolean` := v3 @kind boolean;
  #L419edc.  call `setInStrictMode`(v0, v3) @signature `Lorg/mozilla/javascript/ast/AstRoot;.setInStrictMode:(Z)V` @kind virtual;
  #L419ee2.  call temp:= `o0`(v10, v7) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L419ee8.  v5:= temp;
  #L419eea.  call `addChildToBack`(v0, v7) @signature `Lorg/mozilla/javascript/Node;.addChildToBack:(Lorg/mozilla/javascript/Node;)V` @kind virtual;
  #L419ef0.  call `setParent`(v7, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L419ef6.  goto L419e72;
  #L419ef8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L419efa.  goto L419ffe;
  #L419efe.  v4:= "msg.too.deep.parser.recursion" @kind object;
  #L419f02.  call temp:= `w0`(v10, v4) @signature `Lorg/mozilla/javascript/Parser;.w0:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L419f08.  v4:= temp @kind object;
  #L419f0a.  v7:= v10.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L419f0e.  call temp:= `isIdeMode`(v7) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isIdeMode:()Z` @kind virtual;
  #L419f14.  v7:= temp;
  #L419f16.  if v7 == 0 then goto L419fe6;
  #L419f1a.  goto L419ea6;
  #L419f1c.  v2:= v10.`org.mozilla.javascript.Parser.k` @type ^`int`;
  #L419f20.  if v2 == 0 then goto L419f60;
  #L419f24.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L419f2a.  v2:= temp @kind object;
  #L419f2c.  v4:= "msg.got.syntax.errors" @kind object;
  #L419f30.  call temp:= `x0`(v10, v4, v2) @signature `Lorg/mozilla/javascript/Parser;.x0:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L419f36.  v4:= temp @kind object;
  #L419f38.  v2:= v10.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L419f3c.  call temp:= `isIdeMode`(v2) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isIdeMode:()Z` @kind virtual;
  #L419f42.  v2:= temp;
  #L419f44.  if v2 == 0 then goto L419f4a;
  #L419f48.  goto L419f60;
  #L419f4a.  v3:= v10.`org.mozilla.javascript.Parser.b` @type ^`org.mozilla.javascript.ErrorReporter` @kind object;
  #L419f4e.  v5:= v10.`org.mozilla.javascript.Parser.d` @type ^`java.lang.String` @kind object;
  #L419f52.  v7:= 0I;
  #L419f54.  v8:= 0I;
  #L419f56.  call temp:= `runtimeError`(v3, v4, v5, v6, v7, v8) @signature `Lorg/mozilla/javascript/ErrorReporter;.runtimeError:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;I)Lorg/mozilla/javascript/EvaluatorException;` @kind interface;
  #L419f5c.  v0:= temp @kind object;
  #L419f5e.  throw v0;
  #L419f60.  v2:= v10.`org.mozilla.javascript.Parser.l` @type ^`java.util.List` @kind object;
  #L419f64.  if v2 == 0 then goto L419fbe;
  #L419f68.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L419f6e.  v2:= temp;
  #L419f70.  v2:= v2 - v3 @kind int;
  #L419f72.  v3:= v10.`org.mozilla.javascript.Parser.l` @type ^`java.util.List` @kind object;
  #L419f76.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L419f7c.  v2:= temp @kind object;
  #L419f7e.  v2:= (`org.mozilla.javascript.ast.AstNode`) v2 @kind object;
  #L419f82.  call temp:= `o0`(v10, v2) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L419f88.  v2:= temp;
  #L419f8a.  call temp:= `max`(v5, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L419f90.  v5:= temp;
  #L419f92.  v2:= v10.`org.mozilla.javascript.Parser.l` @type ^`java.util.List` @kind object;
  #L419f96.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L419f9c.  v2:= temp @kind object;
  #L419f9e.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L419fa4.  v3:= temp;
  #L419fa6.  if v3 == 0 then goto L419fbe;
  #L419faa.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L419fb0.  v3:= temp @kind object;
  #L419fb2.  v3:= (`org.mozilla.javascript.ast.Comment`) v3 @kind object;
  #L419fb6.  call `addComment`(v0, v3) @signature `Lorg/mozilla/javascript/ast/AstRoot;.addComment:(Lorg/mozilla/javascript/ast/Comment;)V` @kind virtual;
  #L419fbc.  goto L419f9e;
  #L419fbe.  v5:= v5 - v1 @kind int;
  #L419fc0.  call `setLength`(v0, v5) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L419fc6.  v1:= v10.`org.mozilla.javascript.Parser.d` @type ^`java.lang.String` @kind object;
  #L419fca.  call `setSourceName`(v0, v1) @signature `Lorg/mozilla/javascript/ast/ScriptNode;.setSourceName:(Ljava/lang/String;)V` @kind virtual;
  #L419fd0.  call `setBaseLineno`(v0, v6) @signature `Lorg/mozilla/javascript/ast/ScriptNode;.setBaseLineno:(I)V` @kind virtual;
  #L419fd6.  v1:= v10.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419fda.  v1:= v1.`org.mozilla.javascript.u.o` @type ^`int`;
  #L419fde.  call `setEndLineno`(v0, v1) @signature `Lorg/mozilla/javascript/ast/ScriptNode;.setEndLineno:(I)V` @kind virtual;
  #L419fe4.  return v0 @kind object;
  #L419fe6.  v0:= v10.`org.mozilla.javascript.Parser.d` @type ^`java.lang.String` @kind object;
  #L419fea.  v3:= v10.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419fee.  v3:= v3.`org.mozilla.javascript.u.o` @type ^`int`;
  #L419ff2.  v5:= 0I;
  #L419ff4.  call temp:= `reportRuntimeError`(v4, v0, v3, v5, v1) @signature `Lorg/mozilla/javascript/Context;.reportRuntimeError:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;I)Lorg/mozilla/javascript/EvaluatorException;` @kind static;
  #L419ffa.  v0:= temp @kind object;
  #L419ffc.  throw v0;
  #L419ffe.  v10.`org.mozilla.javascript.Parser.inUseStrictDirective` @type ^`boolean` := v2 @kind boolean;
  #L41a002.  throw v0;
  catch `java.lang.StackOverflowError` @[L419e72..L419e8e] goto L419efe;
  catch `java.lang.Throwable` @[L419e72..L419e8e] goto L419ef8;
  catch `org.mozilla.javascript.Parser$c` @[L419e8e..L419ea4] goto L419ea6;
  catch `java.lang.StackOverflowError` @[L419e8e..L419ea4] goto L419efe;
  catch `java.lang.Throwable` @[L419e8e..L419ea4] goto L419ef8;
  catch `java.lang.StackOverflowError` @[L419eac..L419ef6] goto L419efe;
  catch `java.lang.Throwable` @[L419eac..L419ef6] goto L419ef8;
  catch `java.lang.Throwable` @[L419efe..L419f16] goto L419ef8;
  catch `java.lang.Throwable` @[L419fe6..L419ffe] goto L419ef8;
}
procedure `org.mozilla.javascript.ast.AstNode` `T0`(`org.mozilla.javascript.Parser` v11 @kind this) @signature `Lorg/mozilla/javascript/Parser;.T0:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L418e30.  v0:= 85I;
  #L418e34.  call temp:= `B0`(v11, v0) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L418e3a.  v0:= temp;
  #L418e3c.  v1:= 0I;
  #L418e3e.  v2:= 1I;
  #L418e40.  if v0 != 0 then goto L418e68;
  #L418e44.  v0:= v11.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L418e48.  call temp:= `getLanguageVersion`(v0) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.getLanguageVersion:()I` @kind virtual;
  #L418e4e.  v0:= temp;
  #L418e50.  v3:= 180I;
  #L418e54.  if v0 >= v3 then goto L418e64;
  #L418e58.  v0:= "msg.no.brace.body" @kind object;
  #L418e5c.  call `i1`(v11, v0) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L418e62.  goto L418e68;
  #L418e64.  v0:= 1I;
  #L418e66.  goto L418e6a;
  #L418e68.  v0:= 0I;
  #L418e6a.  v3:= v11.`org.mozilla.javascript.Parser.nestingOfFunction` @type ^`int`;
  #L418e6e.  v3:= v3 + v2 @kind int;
  #L418e70.  v11.`org.mozilla.javascript.Parser.nestingOfFunction` @type ^`int` := v3;
  #L418e74.  v3:= v11.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418e78.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L418e7c.  v4:= new `org.mozilla.javascript.ast.Block`;
  #L418e80.  call `<init>`(v4, v3) @signature `Lorg/mozilla/javascript/ast/Block;.<init>:(I)V` @kind direct;
  #L418e86.  v5:= v11.`org.mozilla.javascript.Parser.inUseStrictDirective` @type ^`boolean` @kind boolean;
  #L418e8a.  v6:= v11.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418e8e.  v6:= v6.`org.mozilla.javascript.u.o` @type ^`int`;
  #L418e92.  call `setLineno`(v4, v6) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L418e98.  v6:= 86I;
  #L418e9c.  if v0 == 0 then goto L418ee0;
  #L418ea0.  v1:= new `org.mozilla.javascript.ast.ReturnStatement`;
  #L418ea4.  v7:= v11.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418ea8.  v7:= v7.`org.mozilla.javascript.u.o` @type ^`int`;
  #L418eac.  call `<init>`(v1, v7) @signature `Lorg/mozilla/javascript/ast/ReturnStatement;.<init>:(I)V` @kind direct;
  #L418eb2.  call temp:= `z`(v11) @signature `Lorg/mozilla/javascript/Parser;.z:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L418eb8.  v7:= temp @kind object;
  #L418eba.  call `setReturnValue`(v1, v7) @signature `Lorg/mozilla/javascript/ast/ReturnStatement;.setReturnValue:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L418ec0.  v7:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L418ec4.  v8:= 25I;
  #L418ec8.  call `putProp`(v1, v8, v7) @signature `Lorg/mozilla/javascript/Node;.putProp:(ILjava/lang/Object;)V` @kind virtual;
  #L418ece.  v7:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L418ed2.  call `putProp`(v4, v8, v7) @signature `Lorg/mozilla/javascript/Node;.putProp:(ILjava/lang/Object;)V` @kind virtual;
  #L418ed8.  call `addStatement`(v4, v1) @signature `Lorg/mozilla/javascript/ast/Block;.addStatement:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L418ede.  goto L418f5a;
  #L418ee0.  v7:= 1I;
  #L418ee2.  call temp:= `W0`(v11) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L418ee8.  v8:= temp;
  #L418eea.  v9:= -1I;
  #L418eec.  if v8 == v9 then goto L418f5a;
  #L418ef0.  if v8 == 0 then goto L418f5a;
  #L418ef4.  if v8 == v6 then goto L418f5a;
  #L418ef8.  v9:= 109I;
  #L418efc.  if v8 == v9 then goto L418f32;
  #L418f00.  call temp:= `p1`(v11) @signature `Lorg/mozilla/javascript/Parser;.p1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L418f06.  v8:= temp @kind object;
  #L418f08.  if v7 == 0 then goto L418f40;
  #L418f0c.  call temp:= `n0`(v11, v8) @signature `Lorg/mozilla/javascript/Parser;.n0:(Lorg/mozilla/javascript/ast/AstNode;)Ljava/lang/String;` @kind direct;
  #L418f12.  v9:= temp @kind object;
  #L418f14.  if v9 != 0 then goto L418f1c;
  #L418f18.  v7:= 0I;
  #L418f1a.  goto L418f40;
  #L418f1c.  v10:= "use strict" @kind object;
  #L418f20.  call temp:= `equals`(v9, v10) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L418f26.  v9:= temp;
  #L418f28.  if v9 == 0 then goto L418f40;
  #L418f2c.  v11.`org.mozilla.javascript.Parser.inUseStrictDirective` @type ^`boolean` := v2 @kind boolean;
  #L418f30.  goto L418f40;
  #L418f32.  call `M`(v11) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L418f38.  call temp:= `i0`(v11, v2) @signature `Lorg/mozilla/javascript/Parser;.i0:(I)Lorg/mozilla/javascript/ast/FunctionNode;` @kind direct;
  #L418f3e.  v8:= temp @kind object;
  #L418f40.  call `addStatement`(v4, v8) @signature `Lorg/mozilla/javascript/ast/Block;.addStatement:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L418f46.  goto L418ee2;
  #L418f48.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L418f4a.  v1:= v11.`org.mozilla.javascript.Parser.nestingOfFunction` @type ^`int`;
  #L418f4e.  v1:= v1 - v2 @kind int;
  #L418f50.  v11.`org.mozilla.javascript.Parser.nestingOfFunction` @type ^`int` := v1;
  #L418f54.  v11.`org.mozilla.javascript.Parser.inUseStrictDirective` @type ^`boolean` := v5 @kind boolean;
  #L418f58.  throw v0;
  #L418f5a.  v1:= v11.`org.mozilla.javascript.Parser.nestingOfFunction` @type ^`int`;
  #L418f5e.  v1:= v1 - v2 @kind int;
  #L418f60.  v11.`org.mozilla.javascript.Parser.nestingOfFunction` @type ^`int` := v1;
  #L418f64.  v11.`org.mozilla.javascript.Parser.inUseStrictDirective` @type ^`boolean` := v5 @kind boolean;
  #L418f68.  v1:= v11.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418f6c.  v1:= v1.`org.mozilla.javascript.u.w` @type ^`int`;
  #L418f70.  call temp:= `m0`(v11) @signature `Lorg/mozilla/javascript/Parser;.m0:()Lorg/mozilla/javascript/ast/Comment;` @kind direct;
  #L418f76.  if v0 != 0 then goto L418f92;
  #L418f7a.  v0:= "msg.no.brace.after.body" @kind object;
  #L418f7e.  call temp:= `G0`(v11, v6, v0) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L418f84.  v0:= temp;
  #L418f86.  if v0 == 0 then goto L418f92;
  #L418f8a.  v0:= v11.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418f8e.  v1:= v0.`org.mozilla.javascript.u.w` @type ^`int`;
  #L418f92.  v1:= v1 - v3 @kind int;
  #L418f94.  call `setLength`(v4, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L418f9a.  return v4 @kind object;
  catch `org.mozilla.javascript.Parser$c` @[L418ea0..L418f46] goto L418f5a;
  catch `java.lang.Throwable` @[L418ea0..L418f46] goto L418f48;
}
procedure `void` `U0`(`org.mozilla.javascript.Parser` v7 @kind this, `org.mozilla.javascript.ast.FunctionNode` v8 @kind object) @signature `Lorg/mozilla/javascript/Parser;.U0:(Lorg/mozilla/javascript/ast/FunctionNode;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41c1d0.  v0:= 88I;
  #L41c1d4.  call temp:= `B0`(v7, v0) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41c1da.  v1:= temp;
  #L41c1dc.  if v1 == 0 then goto L41c1fa;
  #L41c1e0.  v0:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41c1e4.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41c1e8.  call temp:= `getPosition`(v8) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L41c1ee.  v1:= temp;
  #L41c1f0.  v0:= v0 - v1 @kind int;
  #L41c1f2.  call `setRp`(v8, v0) @signature `Lorg/mozilla/javascript/ast/FunctionNode;.setRp:(I)V` @kind virtual;
  #L41c1f8.  return @kind void;
  #L41c1fa.  v1:= 0I;
  #L41c1fc.  v2:= new `java.util.HashSet`;
  #L41c200.  call `<init>`(v2) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L41c206.  call temp:= `W0`(v7) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41c20c.  v3:= temp;
  #L41c20e.  v4:= 83I;
  #L41c212.  v5:= 87I;
  #L41c216.  if v3 == v4 then goto L41c2b8;
  #L41c21a.  v4:= 85I;
  #L41c21e.  if v3 != v4 then goto L41c224;
  #L41c222.  goto L41c2b8;
  #L41c224.  v3:= 39I;
  #L41c228.  v4:= "msg.no.parm" @kind object;
  #L41c22c.  call temp:= `G0`(v7, v3, v4) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41c232.  v3:= temp;
  #L41c234.  if v3 == 0 then goto L41c2a8;
  #L41c238.  call temp:= `P`(v7) @signature `Lorg/mozilla/javascript/Parser;.P:()Lorg/mozilla/javascript/ast/Name;` @kind direct;
  #L41c23e.  v3:= temp @kind object;
  #L41c240.  call `addParam`(v8, v3) @signature `Lorg/mozilla/javascript/ast/FunctionNode;.addParam:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41c246.  v3:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41c24a.  call temp:= `q`(v3) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L41c250.  v3:= temp @kind object;
  #L41c252.  call `T`(v7, v5, v3) @signature `Lorg/mozilla/javascript/Parser;.T:(ILjava/lang/String;)V` @kind virtual;
  #L41c258.  v4:= v7.`org.mozilla.javascript.Parser.inUseStrictDirective` @type ^`boolean` @kind boolean;
  #L41c25c.  if v4 == 0 then goto L41c2f4;
  #L41c260.  v4:= "eval" @kind object;
  #L41c264.  call temp:= `equals`(v4, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41c26a.  v4:= temp;
  #L41c26c.  if v4 != 0 then goto L41c280;
  #L41c270.  v4:= "arguments" @kind object;
  #L41c274.  call temp:= `equals`(v4, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41c27a.  v4:= temp;
  #L41c27c.  if v4 == 0 then goto L41c28a;
  #L41c280.  v4:= "msg.bad.id.strict" @kind object;
  #L41c284.  call `k1`(v7, v4, v3) @signature `Lorg/mozilla/javascript/Parser;.k1:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L41c28a.  call temp:= `contains`(v2, v3) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L41c290.  v4:= temp;
  #L41c292.  if v4 == 0 then goto L41c2a0;
  #L41c296.  v4:= "msg.dup.param.strict" @kind object;
  #L41c29a.  call `m`(v7, v4, v3) @signature `Lorg/mozilla/javascript/Parser;.m:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L41c2a0.  call temp:= `add`(v2, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41c2a6.  goto L41c2f4;
  #L41c2a8.  call temp:= `y0`(v7) @signature `Lorg/mozilla/javascript/Parser;.y0:()Lorg/mozilla/javascript/ast/ErrorNode;` @kind direct;
  #L41c2ae.  v3:= temp @kind object;
  #L41c2b0.  call `addParam`(v8, v3) @signature `Lorg/mozilla/javascript/ast/FunctionNode;.addParam:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41c2b6.  goto L41c2f4;
  #L41c2b8.  call temp:= `Y`(v7) @signature `Lorg/mozilla/javascript/Parser;.Y:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41c2be.  v3:= temp @kind object;
  #L41c2c0.  call `z0`(v7, v3) @signature `Lorg/mozilla/javascript/Parser;.z0:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41c2c6.  call `addParam`(v8, v3) @signature `Lorg/mozilla/javascript/ast/FunctionNode;.addParam:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41c2cc.  if v1 != 0 then goto L41c2da;
  #L41c2d0.  v1:= new `java.util.HashMap`;
  #L41c2d4.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L41c2da.  v4:= v7.`org.mozilla.javascript.Parser.p` @type ^`org.mozilla.javascript.ast.ScriptNode` @kind object;
  #L41c2de.  call temp:= `getNextTempName`(v4) @signature `Lorg/mozilla/javascript/ast/ScriptNode;.getNextTempName:()Ljava/lang/String;` @kind virtual;
  #L41c2e4.  v4:= temp @kind object;
  #L41c2e6.  v6:= 0I;
  #L41c2e8.  call `U`(v7, v5, v4, v6) @signature `Lorg/mozilla/javascript/Parser;.U:(ILjava/lang/String;Z)V` @kind virtual;
  #L41c2ee.  call temp:= `put`(v1, v4, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L41c2f4.  v3:= 89I;
  #L41c2f8.  call temp:= `B0`(v7, v3) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41c2fe.  v4:= temp;
  #L41c300.  if v4 != 0 then goto L41c206;
  #L41c304.  if v1 == 0 then goto L41c378;
  #L41c308.  v2:= new `org.mozilla.javascript.Node`;
  #L41c30c.  call `<init>`(v2, v3) @signature `Lorg/mozilla/javascript/Node;.<init>:(I)V` @kind direct;
  #L41c312.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L41c318.  v1:= temp @kind object;
  #L41c31a.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L41c320.  v1:= temp @kind object;
  #L41c322.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L41c328.  v3:= temp;
  #L41c32a.  if v3 == 0 then goto L41c36e;
  #L41c32e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L41c334.  v3:= temp @kind object;
  #L41c336.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L41c33a.  v4:= 122I;
  #L41c33e.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L41c344.  v5:= temp @kind object;
  #L41c346.  v5:= (`org.mozilla.javascript.Node`) v5 @kind object;
  #L41c34a.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L41c350.  v3:= temp @kind object;
  #L41c352.  v3:= (`java.lang.String`) v3 @kind object;
  #L41c356.  call temp:= `createName`(v7, v3) @signature `Lorg/mozilla/javascript/Parser;.createName:(Ljava/lang/String;)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L41c35c.  v3:= temp @kind object;
  #L41c35e.  call temp:= `O`(v7, v4, v5, v3) @signature `Lorg/mozilla/javascript/Parser;.O:(ILorg/mozilla/javascript/Node;Lorg/mozilla/javascript/Node;)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L41c364.  v3:= temp @kind object;
  #L41c366.  call `addChildToBack`(v2, v3) @signature `Lorg/mozilla/javascript/Node;.addChildToBack:(Lorg/mozilla/javascript/Node;)V` @kind virtual;
  #L41c36c.  goto L41c322;
  #L41c36e.  v1:= 23I;
  #L41c372.  call `putProp`(v8, v1, v2) @signature `Lorg/mozilla/javascript/Node;.putProp:(ILjava/lang/Object;)V` @kind virtual;
  #L41c378.  v1:= "msg.no.paren.after.parms" @kind object;
  #L41c37c.  call temp:= `G0`(v7, v0, v1) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41c382.  v0:= temp;
  #L41c384.  if v0 == 0 then goto L41c3a0;
  #L41c388.  v0:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41c38c.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41c390.  call temp:= `getPosition`(v8) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L41c396.  v1:= temp;
  #L41c398.  v0:= v0 - v1 @kind int;
  #L41c39a.  call `setRp`(v8, v0) @signature `Lorg/mozilla/javascript/ast/FunctionNode;.setRp:(I)V` @kind virtual;
  #L41c3a0.  return @kind void;
}
procedure `int` `V0`(`org.mozilla.javascript.Parser` v1 @kind this) @signature `Lorg/mozilla/javascript/Parser;.V0:()I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4171dc.  call temp:= `W0`(v1) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L4171e2.  v0:= v1.`org.mozilla.javascript.Parser.i` @type ^`int`;
  #L4171e6.  return v0;
}
procedure `int` `W0`(`org.mozilla.javascript.Parser` v6 @kind this) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4171f8.  v0:= v6.`org.mozilla.javascript.Parser.i` @type ^`int`;
  #L4171fc.  if v0 == 0 then goto L417206;
  #L417200.  v0:= v6.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L417204.  return v0;
  #L417206.  v0:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41720a.  call temp:= `l`(v0) @signature `Lorg/mozilla/javascript/u;.l:()I` @kind virtual;
  #L417210.  v0:= temp;
  #L417212.  v1:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417216.  call temp:= `s`(v1) @signature `Lorg/mozilla/javascript/u;.s:()I` @kind virtual;
  #L41721c.  v1:= temp;
  #L41721e.  v2:= 0I;
  #L417220.  v3:= 0I;
  #L417222.  v4:= 1I;
  #L417224.  if v1 == v4 then goto L41724c;
  #L417228.  v5:= 161I;
  #L41722c.  if v1 != v5 then goto L417232;
  #L417230.  goto L41724c;
  #L417232.  v6.`org.mozilla.javascript.Parser.j` @type ^`int` := v1;
  #L417236.  if v3 == 0 then goto L41723e;
  #L41723a.  v2:= 65536I;
  #L41723e.  v0:= v1 ^| v2 @kind int;
  #L417242.  v6.`org.mozilla.javascript.Parser.i` @type ^`int` := v0;
  #L417246.  v0:= v6.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L41724a.  return v0;
  #L41724c.  if v1 != v4 then goto L417258;
  #L417250.  v0:= v0 + 1;
  #L417254.  v3:= 1I;
  #L417256.  goto L417284;
  #L417258.  v1:= v6.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41725c.  call temp:= `isRecordingComments`(v1) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isRecordingComments:()Z` @kind virtual;
  #L417262.  v1:= temp;
  #L417264.  if v1 == 0 then goto L417284;
  #L417268.  v1:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41726c.  call temp:= `f`(v1) @signature `Lorg/mozilla/javascript/u;.f:()Ljava/lang/String;` @kind virtual;
  #L417272.  v1:= temp @kind object;
  #L417274.  call `f1`(v6, v0, v1) @signature `Lorg/mozilla/javascript/Parser;.f1:(ILjava/lang/String;)V` @kind direct;
  #L41727a.  call temp:= `p0`(v6, v1) @signature `Lorg/mozilla/javascript/Parser;.p0:(Ljava/lang/String;)I` @kind direct;
  #L417280.  v1:= temp;
  #L417282.  v0:= v0 + v1 @kind int;
  #L417284.  v1:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417288.  call temp:= `s`(v1) @signature `Lorg/mozilla/javascript/u;.s:()I` @kind virtual;
  #L41728e.  v1:= temp;
  #L417290.  goto L417222;
}
procedure `int` `X0`(`org.mozilla.javascript.Parser` v3 @kind this) @signature `Lorg/mozilla/javascript/Parser;.X0:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4172a4.  call temp:= `W0`(v3) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L4172aa.  v0:= temp;
  #L4172ac.  v1:= v3.`org.mozilla.javascript.Parser.i` @type ^`int`;
  #L4172b0.  v2:= 65536I;
  #L4172b4.  v1:= v1 ^& v2 @kind int;
  #L4172b6.  if v1 == 0 then goto L4172bc;
  #L4172ba.  v0:= 1I;
  #L4172bc.  return v0;
}
procedure `org.mozilla.javascript.ast.AstNode` `Y`(`org.mozilla.javascript.Parser` v2 @kind this) @signature `Lorg/mozilla/javascript/Parser;.Y:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L418200.  v0:= 1I;
  #L418202.  v1:= 0I;
  #L418204.  v2.`org.mozilla.javascript.Parser.o` @type ^`boolean` := v0 @kind boolean;
  #L418208.  call temp:= `a1`(v2) @signature `Lorg/mozilla/javascript/Parser;.a1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41820e.  v0:= temp @kind object;
  #L418210.  v2.`org.mozilla.javascript.Parser.o` @type ^`boolean` := v1 @kind boolean;
  #L418214.  return v0 @kind object;
  #L418216.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L418218.  v2.`org.mozilla.javascript.Parser.o` @type ^`boolean` := v1 @kind boolean;
  #L41821c.  throw v0;
  catch `java.lang.Throwable` @[L418204..L418210] goto L418216;
}
procedure `org.mozilla.javascript.ast.ObjectProperty` `Y0`(`org.mozilla.javascript.Parser` v3 @kind this, `org.mozilla.javascript.ast.AstNode` v4 @kind object, `int` v5 ) @signature `Lorg/mozilla/javascript/Parser;.Y0:(Lorg/mozilla/javascript/ast/AstNode;I)Lorg/mozilla/javascript/ast/ObjectProperty;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L41afc0.  call temp:= `W0`(v3) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41afc6.  v0:= temp;
  #L41afc8.  v1:= 89I;
  #L41afcc.  if v0 == v1 then goto L41afd8;
  #L41afd0.  v1:= 86I;
  #L41afd4.  if v0 != v1 then goto L41b040;
  #L41afd8.  v0:= 39I;
  #L41afdc.  if v5 != v0 then goto L41b040;
  #L41afe0.  v5:= v3.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41afe4.  call temp:= `getLanguageVersion`(v5) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.getLanguageVersion:()I` @kind virtual;
  #L41afea.  v5:= temp;
  #L41afec.  v0:= 180I;
  #L41aff0.  if v5 < v0 then goto L41b040;
  #L41aff4.  v5:= v3.`org.mozilla.javascript.Parser.o` @type ^`boolean` @kind boolean;
  #L41aff8.  if v5 != 0 then goto L41b006;
  #L41affc.  v5:= "msg.bad.object.init" @kind object;
  #L41b000.  call `i1`(v3, v5) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41b006.  v5:= new `org.mozilla.javascript.ast.Name`;
  #L41b00a.  call temp:= `getPosition`(v4) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L41b010.  v0:= temp;
  #L41b012.  call temp:= `getString`(v4) @signature `Lorg/mozilla/javascript/Node;.getString:()Ljava/lang/String;` @kind virtual;
  #L41b018.  v1:= temp @kind object;
  #L41b01a.  call `<init>`(v5, v0, v1) @signature `Lorg/mozilla/javascript/ast/Name;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L41b020.  v0:= new `org.mozilla.javascript.ast.ObjectProperty`;
  #L41b024.  call `<init>`(v0) @signature `Lorg/mozilla/javascript/ast/ObjectProperty;.<init>:()V` @kind direct;
  #L41b02a.  v1:= 26I;
  #L41b02e.  v2:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L41b032.  call `putProp`(v0, v1, v2) @signature `Lorg/mozilla/javascript/Node;.putProp:(ILjava/lang/Object;)V` @kind virtual;
  #L41b038.  call `setLeftAndRight`(v0, v4, v5) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.setLeftAndRight:(Lorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41b03e.  return v0 @kind object;
  #L41b040.  v5:= 103I;
  #L41b044.  v0:= "msg.no.colon.prop" @kind object;
  #L41b048.  call temp:= `G0`(v3, v5, v0) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41b04e.  v5:= new `org.mozilla.javascript.ast.ObjectProperty`;
  #L41b052.  call `<init>`(v5) @signature `Lorg/mozilla/javascript/ast/ObjectProperty;.<init>:()V` @kind direct;
  #L41b058.  v0:= v3.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b05c.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b060.  call `setOperatorPosition`(v5, v0) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.setOperatorPosition:(I)V` @kind virtual;
  #L41b066.  call temp:= `z`(v3) @signature `Lorg/mozilla/javascript/Parser;.z:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41b06c.  v0:= temp @kind object;
  #L41b06e.  call `setLeftAndRight`(v5, v4, v0) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.setLeftAndRight:(Lorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41b074.  return v5 @kind object;
}
procedure `org.mozilla.javascript.ast.DoLoop` `Z`(`org.mozilla.javascript.Parser` v5 @kind this) @signature `Lorg/mozilla/javascript/Parser;.Z:()Lorg/mozilla/javascript/ast/DoLoop;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L41a37c.  v0:= v5.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L41a380.  v1:= 118I;
  #L41a384.  if v0 != v1 then goto L41a43e;
  #L41a388.  call `M`(v5) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41a38e.  v0:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a392.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41a396.  v1:= new `org.mozilla.javascript.ast.DoLoop`;
  #L41a39a.  call `<init>`(v1, v0) @signature `Lorg/mozilla/javascript/ast/DoLoop;.<init>:(I)V` @kind direct;
  #L41a3a0.  v2:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a3a4.  v2:= v2.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41a3a8.  call `setLineno`(v1, v2) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41a3ae.  call `a0`(v5, v1) @signature `Lorg/mozilla/javascript/Parser;.a0:(Lorg/mozilla/javascript/ast/Loop;)V` @kind direct;
  #L41a3b4.  call temp:= `p1`(v5) @signature `Lorg/mozilla/javascript/Parser;.p1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41a3ba.  v2:= temp @kind object;
  #L41a3bc.  v3:= 117I;
  #L41a3c0.  v4:= "msg.no.while.do" @kind object;
  #L41a3c4.  call temp:= `G0`(v5, v3, v4) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41a3ca.  v3:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a3ce.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41a3d2.  v3:= v3 - v0 @kind int;
  #L41a3d4.  call `setWhilePosition`(v1, v3) @signature `Lorg/mozilla/javascript/ast/DoLoop;.setWhilePosition:(I)V` @kind virtual;
  #L41a3da.  call temp:= `L`(v5) @signature `Lorg/mozilla/javascript/Parser;.L:()Lorg/mozilla/javascript/Parser$b;` @kind direct;
  #L41a3e0.  v3:= temp @kind object;
  #L41a3e2.  v4:= v3.`org.mozilla.javascript.Parser$b.a` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L41a3e6.  call `setCondition`(v1, v4) @signature `Lorg/mozilla/javascript/ast/DoLoop;.setCondition:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41a3ec.  v4:= v3.`org.mozilla.javascript.Parser$b.b` @type ^`int`;
  #L41a3f0.  v4:= v4 - v0 @kind int;
  #L41a3f2.  v3:= v3.`org.mozilla.javascript.Parser$b.c` @type ^`int`;
  #L41a3f6.  v3:= v3 - v0 @kind int;
  #L41a3f8.  call `setParens`(v1, v4, v3) @signature `Lorg/mozilla/javascript/ast/Loop;.setParens:(II)V` @kind virtual;
  #L41a3fe.  call temp:= `o0`(v5, v2) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41a404.  v3:= temp;
  #L41a406.  call `setBody`(v1, v2) @signature `Lorg/mozilla/javascript/ast/Loop;.setBody:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41a40c.  call `d0`(v5) @signature `Lorg/mozilla/javascript/Parser;.d0:()V` @kind direct;
  #L41a412.  v2:= 82I;
  #L41a416.  call temp:= `B0`(v5, v2) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41a41c.  v2:= temp;
  #L41a41e.  if v2 == 0 then goto L41a42a;
  #L41a422.  v2:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a426.  v3:= v2.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41a42a.  v3:= v3 - v0 @kind int;
  #L41a42c.  call `setLength`(v1, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L41a432.  return v1 @kind object;
  #L41a434.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41a436.  call `d0`(v5) @signature `Lorg/mozilla/javascript/Parser;.d0:()V` @kind direct;
  #L41a43c.  throw v0;
  #L41a43e.  call temp:= `J`(v5) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L41a444.  v0:= 0I;
  #L41a446.  throw v0;
  catch `java.lang.Throwable` @[L41a3b4..L41a40c] goto L41a434;
}
procedure `java.util.Map` `a`(`org.mozilla.javascript.Parser` v0 @kind object) @signature `Lorg/mozilla/javascript/Parser;.a:(Lorg/mozilla/javascript/Parser;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L41755c.  v0:= v0.`org.mozilla.javascript.Parser.t` @type ^`java.util.Map` @kind object;
  #L417560.  return v0 @kind object;
}
procedure `void` `a0`(`org.mozilla.javascript.Parser` v1 @kind this, `org.mozilla.javascript.ast.Loop` v2 @kind object) @signature `Lorg/mozilla/javascript/Parser;.a0:(Lorg/mozilla/javascript/ast/Loop;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L41c00c.  v0:= v1.`org.mozilla.javascript.Parser.u` @type ^`java.util.List` @kind object;
  #L41c010.  if v0 != 0 then goto L41c022;
  #L41c014.  v0:= new `java.util.ArrayList`;
  #L41c018.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L41c01e.  v1.`org.mozilla.javascript.Parser.u` @type ^`java.util.List` := v0 @kind object;
  #L41c022.  v0:= v1.`org.mozilla.javascript.Parser.u` @type ^`java.util.List` @kind object;
  #L41c026.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41c02c.  v0:= v1.`org.mozilla.javascript.Parser.v` @type ^`java.util.List` @kind object;
  #L41c030.  if v0 != 0 then goto L41c042;
  #L41c034.  v0:= new `java.util.ArrayList`;
  #L41c038.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L41c03e.  v1.`org.mozilla.javascript.Parser.v` @type ^`java.util.List` := v0 @kind object;
  #L41c042.  v0:= v1.`org.mozilla.javascript.Parser.v` @type ^`java.util.List` @kind object;
  #L41c046.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41c04c.  call `d1`(v1, v2) @signature `Lorg/mozilla/javascript/Parser;.d1:(Lorg/mozilla/javascript/ast/Scope;)V` @kind virtual;
  #L41c052.  v0:= v1.`org.mozilla.javascript.Parser.n` @type ^`org.mozilla.javascript.ast.LabeledStatement` @kind object;
  #L41c056.  if v0 == 0 then goto L41c086;
  #L41c05a.  call `setStatement`(v0, v2) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.setStatement:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41c060.  v0:= v1.`org.mozilla.javascript.Parser.n` @type ^`org.mozilla.javascript.ast.LabeledStatement` @kind object;
  #L41c064.  call temp:= `getFirstLabel`(v0) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.getFirstLabel:()Lorg/mozilla/javascript/ast/Label;` @kind virtual;
  #L41c06a.  v0:= temp @kind object;
  #L41c06c.  call `setLoop`(v0, v2) @signature `Lorg/mozilla/javascript/ast/Jump;.setLoop:(Lorg/mozilla/javascript/ast/Jump;)V` @kind virtual;
  #L41c072.  v0:= v1.`org.mozilla.javascript.Parser.n` @type ^`org.mozilla.javascript.ast.LabeledStatement` @kind object;
  #L41c076.  call temp:= `getPosition`(v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L41c07c.  v0:= temp;
  #L41c07e.  v0:= -v0 @kind int;
  #L41c080.  call `setRelative`(v2, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setRelative:(I)V` @kind virtual;
  #L41c086.  return @kind void;
}
procedure `org.mozilla.javascript.ast.AstNode` `a1`(`org.mozilla.javascript.Parser` v6 @kind this) @signature `Lorg/mozilla/javascript/Parser;.a1:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L418fbc.  call temp:= `K0`(v6) @signature `Lorg/mozilla/javascript/Parser;.K0:()I` @kind direct;
  #L418fc2.  v0:= temp;
  #L418fc4.  v1:= 65535I;
  #L418fca.  v1:= v1 ^& v0 @kind int;
  #L418fcc.  v2:= -1I;
  #L418fce.  if v1 == v2 then goto L419156;
  #L418fd2.  if v1 == 0 then goto L41914c;
  #L418fd6.  v2:= 24I;
  #L418fda.  if v1 == v2 then goto L419104;
  #L418fde.  v2:= 83I;
  #L418fe2.  if v1 == v2 then goto L4190fa;
  #L418fe6.  v2:= 85I;
  #L418fea.  if v1 == v2 then goto L4190f0;
  #L418fee.  v2:= 87I;
  #L418ff2.  if v1 == v2 then goto L4190e6;
  #L418ff6.  v2:= 100I;
  #L418ffa.  if v1 == v2 then goto L419104;
  #L418ffe.  v2:= 109I;
  #L419002.  if v1 == v2 then goto L4190da;
  #L419006.  v2:= 127I;
  #L41900a.  if v1 == v2 then goto L4190ce;
  #L41900e.  v2:= 147I;
  #L419012.  if v1 == v2 then goto L4190be;
  #L419016.  v2:= 153I;
  #L41901a.  if v1 == v2 then goto L4190aa;
  #L41901e.  goto L419160;
  #L419024.  v0:= "msg.syntax" @kind object;
  #L419028.  call `i1`(v6, v0) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41902e.  goto L419156;
  #L419032.  v0:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419036.  v2:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41903a.  v0:= v0.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41903e.  v3:= new `org.mozilla.javascript.ast.KeywordLiteral`;
  #L419042.  v0:= v0 - v2 @kind int;
  #L419044.  call `<init>`(v3, v2, v0, v1) @signature `Lorg/mozilla/javascript/ast/KeywordLiteral;.<init>:(III)V` @kind direct;
  #L41904a.  return v3 @kind object;
  #L41904c.  call temp:= `R`(v6) @signature `Lorg/mozilla/javascript/Parser;.R:()Lorg/mozilla/javascript/ast/StringLiteral;` @kind direct;
  #L419052.  v0:= temp @kind object;
  #L419054.  return v0 @kind object;
  #L419056.  v0:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41905a.  call temp:= `q`(v0) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L419060.  v0:= temp @kind object;
  #L419062.  v1:= v6.`org.mozilla.javascript.Parser.inUseStrictDirective` @type ^`boolean` @kind boolean;
  #L419066.  if v1 == 0 then goto L419084;
  #L41906a.  v1:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41906e.  call temp:= `A`(v1) @signature `Lorg/mozilla/javascript/u;.A:()Z` @kind virtual;
  #L419074.  v1:= temp;
  #L419076.  if v1 == 0 then goto L419084;
  #L41907a.  v1:= "msg.no.octal.strict" @kind object;
  #L41907e.  call `i1`(v6, v1) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L419084.  v1:= new `org.mozilla.javascript.ast.NumberLiteral`;
  #L419088.  v2:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41908c.  v3:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419090.  call temp:= `n`(v2) @signature `Lorg/mozilla/javascript/u;.n:()D` @kind virtual;
  #L419096.  v4:= temp @kind wide;
  #L419098.  call `<init>`(v1, v3, v0, v4) @signature `Lorg/mozilla/javascript/ast/NumberLiteral;.<init>:(ILjava/lang/String;D)V` @kind direct;
  #L41909e.  return v1 @kind object;
  #L4190a0.  call temp:= `I0`(v6, v0, v1) @signature `Lorg/mozilla/javascript/Parser;.I0:(II)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4190a6.  v0:= temp @kind object;
  #L4190a8.  return v0 @kind object;
  #L4190aa.  v0:= 0I;
  #L4190ac.  v1:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4190b0.  v1:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L4190b4.  call temp:= `t0`(v6, v0, v1) @signature `Lorg/mozilla/javascript/Parser;.t0:(ZI)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4190ba.  v0:= temp @kind object;
  #L4190bc.  return v0 @kind object;
  #L4190be.  call `F0`(v6) @signature `Lorg/mozilla/javascript/Parser;.F0:()V` @kind direct;
  #L4190c4.  call temp:= `A`(v6) @signature `Lorg/mozilla/javascript/Parser;.A:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4190ca.  v0:= temp @kind object;
  #L4190cc.  return v0 @kind object;
  #L4190ce.  v0:= "msg.reserved.id" @kind object;
  #L4190d2.  call `i1`(v6, v0) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L4190d8.  goto L419156;
  #L4190da.  v0:= 2I;
  #L4190dc.  call temp:= `i0`(v6, v0) @signature `Lorg/mozilla/javascript/Parser;.i0:(I)Lorg/mozilla/javascript/ast/FunctionNode;` @kind direct;
  #L4190e2.  v0:= temp @kind object;
  #L4190e4.  return v0 @kind object;
  #L4190e6.  call temp:= `R0`(v6) @signature `Lorg/mozilla/javascript/Parser;.R0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4190ec.  v0:= temp @kind object;
  #L4190ee.  return v0 @kind object;
  #L4190f0.  call temp:= `O0`(v6) @signature `Lorg/mozilla/javascript/Parser;.O0:()Lorg/mozilla/javascript/ast/ObjectLiteral;` @kind direct;
  #L4190f6.  v0:= temp @kind object;
  #L4190f8.  return v0 @kind object;
  #L4190fa.  call temp:= `y`(v6) @signature `Lorg/mozilla/javascript/Parser;.y:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419100.  v0:= temp @kind object;
  #L419102.  return v0 @kind object;
  #L419104.  v0:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419108.  call `L`(v0, v1) @signature `Lorg/mozilla/javascript/u;.L:(I)V` @kind virtual;
  #L41910e.  v0:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419112.  v1:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419116.  v0:= v0.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41911a.  v2:= new `org.mozilla.javascript.ast.RegExpLiteral`;
  #L41911e.  v0:= v0 - v1 @kind int;
  #L419120.  call `<init>`(v2, v1, v0) @signature `Lorg/mozilla/javascript/ast/RegExpLiteral;.<init>:(II)V` @kind direct;
  #L419126.  v0:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41912a.  call temp:= `q`(v0) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L419130.  v0:= temp @kind object;
  #L419132.  call `setValue`(v2, v0) @signature `Lorg/mozilla/javascript/ast/RegExpLiteral;.setValue:(Ljava/lang/String;)V` @kind virtual;
  #L419138.  v0:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41913c.  call temp:= `G`(v0) @signature `Lorg/mozilla/javascript/u;.G:()Ljava/lang/String;` @kind virtual;
  #L419142.  v0:= temp @kind object;
  #L419144.  call `setFlags`(v2, v0) @signature `Lorg/mozilla/javascript/ast/RegExpLiteral;.setFlags:(Ljava/lang/String;)V` @kind virtual;
  #L41914a.  return v2 @kind object;
  #L41914c.  v0:= "msg.unexpected.eof" @kind object;
  #L419150.  call `i1`(v6, v0) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L419156.  call temp:= `y0`(v6) @signature `Lorg/mozilla/javascript/Parser;.y0:()Lorg/mozilla/javascript/ast/ErrorNode;` @kind direct;
  #L41915c.  v0:= temp @kind object;
  #L41915e.  return v0 @kind object;
  #L419160.  switch v1
                  | 39 => goto L4190a0
                  | 40 => goto L419056
                  | 41 => goto L41904c
                  | 42 => goto L419032
                  | 43 => goto L419032
                  | 44 => goto L419032
                  | 45 => goto L419032
                  | else => goto L419024;
}
procedure `java.util.Map` `b`(`org.mozilla.javascript.Parser` v0 @kind object, `java.util.Map` v1 @kind object) @signature `Lorg/mozilla/javascript/Parser;.b:(Lorg/mozilla/javascript/Parser;Ljava/util/Map;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L417574.  v0.`org.mozilla.javascript.Parser.t` @type ^`java.util.Map` := v1 @kind object;
  #L417578.  return v1 @kind object;
}
procedure `void` `b0`(`org.mozilla.javascript.Parser` v1 @kind this, `org.mozilla.javascript.ast.SwitchStatement` v2 @kind object) @signature `Lorg/mozilla/javascript/Parser;.b0:(Lorg/mozilla/javascript/ast/SwitchStatement;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L41c098.  v0:= v1.`org.mozilla.javascript.Parser.v` @type ^`java.util.List` @kind object;
  #L41c09c.  if v0 != 0 then goto L41c0ae;
  #L41c0a0.  v0:= new `java.util.ArrayList`;
  #L41c0a4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L41c0aa.  v1.`org.mozilla.javascript.Parser.v` @type ^`java.util.List` := v0 @kind object;
  #L41c0ae.  v0:= v1.`org.mozilla.javascript.Parser.v` @type ^`java.util.List` @kind object;
  #L41c0b2.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41c0b8.  return @kind void;
}
procedure `org.mozilla.javascript.ast.AstNode` `b1`(`org.mozilla.javascript.Parser` v7 @kind this, `int` v8 , `org.mozilla.javascript.ast.AstNode` v9 @kind object) @signature `Lorg/mozilla/javascript/Parser;.b1:(ILorg/mozilla/javascript/ast/AstNode;)Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L419194.  if v9 == 0 then goto L41936c;
  #L419198.  v0:= 0I;
  #L41919a.  v1:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41919e.  v2:= v1.`org.mozilla.javascript.u.o` @type ^`int`;
  #L4191a2.  v1:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L4191a6.  call `M`(v7) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L4191ac.  v3:= 143I;
  #L4191b0.  if v8 != v3 then goto L4191bc;
  #L4191b4.  call `F0`(v7) @signature `Lorg/mozilla/javascript/Parser;.F0:()V` @kind direct;
  #L4191ba.  v0:= 4I;
  #L4191bc.  v3:= v7.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L4191c0.  call temp:= `isXmlAvailable`(v3) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isXmlAvailable:()Z` @kind virtual;
  #L4191c6.  v3:= temp;
  #L4191c8.  v4:= "msg.no.name.after.dot" @kind object;
  #L4191cc.  v5:= 39I;
  #L4191d0.  if v3 != 0 then goto L41922e;
  #L4191d4.  call temp:= `L0`(v7) @signature `Lorg/mozilla/javascript/Parser;.L0:()I` @kind direct;
  #L4191da.  v8:= temp;
  #L4191dc.  if v8 == v5 then goto L41920e;
  #L4191e0.  v8:= v7.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L4191e4.  call temp:= `isReservedKeywordAsIdentifier`(v8) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isReservedKeywordAsIdentifier:()Z` @kind virtual;
  #L4191ea.  v8:= temp;
  #L4191ec.  if v8 == 0 then goto L419208;
  #L4191f0.  v8:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4191f4.  call temp:= `q`(v8) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L4191fa.  v8:= temp @kind object;
  #L4191fc.  call temp:= `y`(v8) @signature `Lorg/mozilla/javascript/u;.y:(Ljava/lang/String;)Z` @kind static;
  #L419202.  v8:= temp;
  #L419204.  if v8 != 0 then goto L41920e;
  #L419208.  call `i1`(v7, v4) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41920e.  v8:= 1I;
  #L419210.  v0:= 33I;
  #L419214.  call temp:= `Q`(v7, v8, v0) @signature `Lorg/mozilla/javascript/Parser;.Q:(ZI)Lorg/mozilla/javascript/ast/Name;` @kind direct;
  #L41921a.  v8:= temp @kind object;
  #L41921c.  v0:= new `org.mozilla.javascript.ast.PropertyGet`;
  #L419220.  call `<init>`(v0, v9, v8, v1) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.<init>:(Lorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/Name;I)V` @kind direct;
  #L419226.  call `setLineno`(v0, v2) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41922c.  return v0 @kind object;
  #L41922e.  call temp:= `L0`(v7) @signature `Lorg/mozilla/javascript/Parser;.L0:()I` @kind direct;
  #L419234.  v2:= temp;
  #L419236.  v3:= 23I;
  #L41923a.  v6:= -1I;
  #L41923c.  if v2 == v3 then goto L4192dc;
  #L419240.  if v2 == v5 then goto L4192c6;
  #L419244.  v3:= 50I;
  #L419248.  if v2 == v3 then goto L4192a6;
  #L41924c.  v3:= 147I;
  #L419250.  if v2 == v3 then goto L41929c;
  #L419254.  v3:= v7.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L419258.  call temp:= `isReservedKeywordAsIdentifier`(v3) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isReservedKeywordAsIdentifier:()Z` @kind virtual;
  #L41925e.  v3:= temp;
  #L419260.  if v3 == 0 then goto L41928c;
  #L419264.  call temp:= `keywordToName`(v2) @signature `Lorg/mozilla/javascript/Token;.keywordToName:(I)Ljava/lang/String;` @kind static;
  #L41926a.  v2:= temp @kind object;
  #L41926c.  if v2 == 0 then goto L41928c;
  #L419270.  v3:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419274.  v4:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419278.  v3:= v3.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41927c.  call `n1`(v7, v4, v2, v3) @signature `Lorg/mozilla/javascript/Parser;.n1:(ILjava/lang/String;I)V` @kind direct;
  #L419282.  call temp:= `c1`(v7, v6, v2, v0) @signature `Lorg/mozilla/javascript/Parser;.c1:(ILjava/lang/String;I)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419288.  v0:= temp @kind object;
  #L41928a.  goto L4192fa;
  #L41928c.  call `i1`(v7, v4) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L419292.  call temp:= `y0`(v7) @signature `Lorg/mozilla/javascript/Parser;.y0:()Lorg/mozilla/javascript/ast/ErrorNode;` @kind direct;
  #L419298.  v8:= temp @kind object;
  #L41929a.  return v8 @kind object;
  #L41929c.  call temp:= `A`(v7) @signature `Lorg/mozilla/javascript/Parser;.A:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4192a2.  v0:= temp @kind object;
  #L4192a4.  goto L4192fa;
  #L4192a6.  v2:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4192aa.  v3:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L4192ae.  v2:= v2.`org.mozilla.javascript.u.o` @type ^`int`;
  #L4192b2.  v4:= "throw" @kind object;
  #L4192b6.  call `n1`(v7, v3, v4, v2) @signature `Lorg/mozilla/javascript/Parser;.n1:(ILjava/lang/String;I)V` @kind direct;
  #L4192bc.  call temp:= `c1`(v7, v6, v4, v0) @signature `Lorg/mozilla/javascript/Parser;.c1:(ILjava/lang/String;I)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4192c2.  v0:= temp @kind object;
  #L4192c4.  goto L4192fa;
  #L4192c6.  v2:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4192ca.  call temp:= `q`(v2) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L4192d0.  v2:= temp @kind object;
  #L4192d2.  call temp:= `c1`(v7, v6, v2, v0) @signature `Lorg/mozilla/javascript/Parser;.c1:(ILjava/lang/String;I)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4192d8.  v0:= temp @kind object;
  #L4192da.  goto L4192fa;
  #L4192dc.  v2:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4192e0.  v3:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L4192e4.  v2:= v2.`org.mozilla.javascript.u.o` @type ^`int`;
  #L4192e8.  v4:= "*" @kind object;
  #L4192ec.  call `n1`(v7, v3, v4, v2) @signature `Lorg/mozilla/javascript/Parser;.n1:(ILjava/lang/String;I)V` @kind direct;
  #L4192f2.  call temp:= `c1`(v7, v6, v4, v0) @signature `Lorg/mozilla/javascript/Parser;.c1:(ILjava/lang/String;I)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4192f8.  v0:= temp @kind object;
  #L4192fa.  v2:= instanceof @variable v0 @type ^`org.mozilla.javascript.ast.XmlRef` @kind boolean;
  #L4192fe.  if v2 == 0 then goto L41930e;
  #L419302.  v3:= new `org.mozilla.javascript.ast.XmlMemberGet`;
  #L419306.  call `<init>`(v3) @signature `Lorg/mozilla/javascript/ast/XmlMemberGet;.<init>:()V` @kind direct;
  #L41930c.  goto L419318;
  #L41930e.  v3:= new `org.mozilla.javascript.ast.PropertyGet`;
  #L419312.  call `<init>`(v3) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.<init>:()V` @kind direct;
  #L419318.  if v2 == 0 then goto L41932a;
  #L41931c.  v2:= 108I;
  #L419320.  if v8 != v2 then goto L41932a;
  #L419324.  call temp:= `setType`(v3, v2) @signature `Lorg/mozilla/javascript/Node;.setType:(I)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L41932a.  call temp:= `getPosition`(v9) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L419330.  v8:= temp;
  #L419332.  call `setPosition`(v3, v8) @signature `Lorg/mozilla/javascript/ast/AstNode;.setPosition:(I)V` @kind virtual;
  #L419338.  call temp:= `o0`(v7, v0) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41933e.  v2:= temp;
  #L419340.  v2:= v2 - v8 @kind int;
  #L419342.  call `setLength`(v3, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L419348.  v1:= v1 - v8 @kind int;
  #L41934a.  call `setOperatorPosition`(v3, v1) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.setOperatorPosition:(I)V` @kind virtual;
  #L419350.  call temp:= `getLineno`(v9) @signature `Lorg/mozilla/javascript/ast/AstNode;.getLineno:()I` @kind virtual;
  #L419356.  v8:= temp;
  #L419358.  call `setLineno`(v3, v8) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41935e.  call `setLeft`(v3, v9) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.setLeft:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L419364.  call `setRight`(v3, v0) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.setRight:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41936a.  return v3 @kind object;
  #L41936c.  call temp:= `J`(v7) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L419372.  v8:= 0I;
  #L419374.  throw v8;
}
procedure `java.util.List` `c`(`org.mozilla.javascript.Parser` v0 @kind object) @signature `Lorg/mozilla/javascript/Parser;.c:(Lorg/mozilla/javascript/Parser;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L417430.  v0:= v0.`org.mozilla.javascript.Parser.u` @type ^`java.util.List` @kind object;
  #L417434.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `c0`(`org.mozilla.javascript.Parser` v9 @kind this) @signature `Lorg/mozilla/javascript/Parser;.c0:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L41823c.  call temp:= `h1`(v9) @signature `Lorg/mozilla/javascript/Parser;.h1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L418242.  v0:= temp @kind object;
  #L418244.  call temp:= `W0`(v9) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41824a.  v1:= temp;
  #L41824c.  v2:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418250.  v2:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L418254.  v3:= 47I;
  #L418258.  v4:= 46I;
  #L41825c.  v5:= 13I;
  #L418260.  v6:= 12I;
  #L418264.  if v1 == v6 then goto L418276;
  #L418268.  if v1 == v5 then goto L418276;
  #L41826c.  if v1 == v4 then goto L418276;
  #L418270.  if v1 == v3 then goto L418276;
  #L418274.  return v0 @kind object;
  #L418276.  call `M`(v9) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41827c.  v7:= v9.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L418280.  call temp:= `getLanguageVersion`(v7) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.getLanguageVersion:()I` @kind virtual;
  #L418286.  v7:= temp;
  #L418288.  v8:= 120I;
  #L41828c.  if v7 != v8 then goto L4182a2;
  #L418290.  if v1 != v6 then goto L41829a;
  #L418294.  v1:= 46I;
  #L418298.  goto L4182a2;
  #L41829a.  if v1 != v5 then goto L4182a2;
  #L41829e.  v1:= 47I;
  #L4182a2.  v3:= new `org.mozilla.javascript.ast.InfixExpression`;
  #L4182a6.  call temp:= `h1`(v9) @signature `Lorg/mozilla/javascript/Parser;.h1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4182ac.  v4:= temp @kind object;
  #L4182ae.  call `<init>`(v3, v1, v0, v4, v2) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.<init>:(ILorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;I)V` @kind direct;
  #L4182b4.  v0:= v3 @kind object;
  #L4182b6.  goto L418244;
}
procedure `org.mozilla.javascript.ast.AstNode` `c1`(`org.mozilla.javascript.Parser` v7 @kind this, `int` v8 , `java.lang.String` v9 @kind object, `int` v10 ) @signature `Lorg/mozilla/javascript/Parser;.c1:(ILjava/lang/String;I)Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L419388.  v9:= -1I;
  #L41938a.  if v8 == v9 then goto L419392;
  #L41938e.  v0:= v8;
  #L419390.  goto L41939a;
  #L419392.  v0:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419396.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41939a.  v1:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41939e.  v1:= v1.`org.mozilla.javascript.u.o` @type ^`int`;
  #L4193a2.  v2:= 1I;
  #L4193a4.  v3:= v7.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L4193a8.  call temp:= `Q`(v7, v2, v3) @signature `Lorg/mozilla/javascript/Parser;.Q:(ZI)Lorg/mozilla/javascript/ast/Name;` @kind direct;
  #L4193ae.  v2:= temp @kind object;
  #L4193b0.  v3:= 0I;
  #L4193b2.  v4:= 144I;
  #L4193b6.  call temp:= `B0`(v7, v4) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L4193bc.  v4:= temp;
  #L4193be.  if v4 == 0 then goto L419434;
  #L4193c2.  v3:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4193c6.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L4193ca.  call temp:= `L0`(v7) @signature `Lorg/mozilla/javascript/Parser;.L0:()I` @kind direct;
  #L4193d0.  v4:= temp;
  #L4193d2.  v5:= 23I;
  #L4193d6.  if v4 == v5 then goto L419412;
  #L4193da.  v5:= 39I;
  #L4193de.  if v4 == v5 then goto L419408;
  #L4193e2.  v9:= 83I;
  #L4193e6.  if v4 == v9 then goto L4193fe;
  #L4193ea.  v8:= "msg.no.name.after.coloncolon" @kind object;
  #L4193ee.  call `i1`(v7, v8) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L4193f4.  call temp:= `y0`(v7) @signature `Lorg/mozilla/javascript/Parser;.y0:()Lorg/mozilla/javascript/ast/ErrorNode;` @kind direct;
  #L4193fa.  v8:= temp @kind object;
  #L4193fc.  return v8 @kind object;
  #L4193fe.  call temp:= `C1`(v7, v8, v2, v3) @signature `Lorg/mozilla/javascript/Parser;.C1:(ILorg/mozilla/javascript/ast/Name;I)Lorg/mozilla/javascript/ast/XmlElemRef;` @kind direct;
  #L419404.  v8:= temp @kind object;
  #L419406.  return v8 @kind object;
  #L419408.  call temp:= `P`(v7) @signature `Lorg/mozilla/javascript/Parser;.P:()Lorg/mozilla/javascript/ast/Name;` @kind direct;
  #L41940e.  v4:= temp @kind object;
  #L419410.  goto L41943a;
  #L419412.  v4:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419416.  v5:= v4.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41941a.  v4:= v4.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41941e.  v6:= "*" @kind object;
  #L419422.  call `n1`(v7, v5, v6, v4) @signature `Lorg/mozilla/javascript/Parser;.n1:(ILjava/lang/String;I)V` @kind direct;
  #L419428.  v4:= 0I;
  #L41942a.  call temp:= `Q`(v7, v4, v9) @signature `Lorg/mozilla/javascript/Parser;.Q:(ZI)Lorg/mozilla/javascript/ast/Name;` @kind direct;
  #L419430.  v4:= temp @kind object;
  #L419432.  goto L41943a;
  #L419434.  v4:= v2 @kind object;
  #L419436.  v2:= v3 @kind object;
  #L419438.  v3:= -1I;
  #L41943a.  if v2 != 0 then goto L419448;
  #L41943e.  if v10 != 0 then goto L419448;
  #L419442.  if v8 != v9 then goto L419448;
  #L419446.  return v4 @kind object;
  #L419448.  v9:= new `org.mozilla.javascript.ast.XmlPropRef`;
  #L41944c.  call temp:= `o0`(v7, v4) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L419452.  v10:= temp;
  #L419454.  v10:= v10 - v0 @kind int;
  #L419456.  call `<init>`(v9, v0, v10) @signature `Lorg/mozilla/javascript/ast/XmlPropRef;.<init>:(II)V` @kind direct;
  #L41945c.  call `setAtPos`(v9, v8) @signature `Lorg/mozilla/javascript/ast/XmlRef;.setAtPos:(I)V` @kind virtual;
  #L419462.  call `setNamespace`(v9, v2) @signature `Lorg/mozilla/javascript/ast/XmlRef;.setNamespace:(Lorg/mozilla/javascript/ast/Name;)V` @kind virtual;
  #L419468.  call `setColonPos`(v9, v3) @signature `Lorg/mozilla/javascript/ast/XmlRef;.setColonPos:(I)V` @kind virtual;
  #L41946e.  call `setPropName`(v9, v4) @signature `Lorg/mozilla/javascript/ast/XmlPropRef;.setPropName:(Lorg/mozilla/javascript/ast/Name;)V` @kind virtual;
  #L419474.  call `setLineno`(v9, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41947a.  return v9 @kind object;
}
procedure `java.util.List` `d`(`org.mozilla.javascript.Parser` v0 @kind object, `java.util.List` v1 @kind object) @signature `Lorg/mozilla/javascript/Parser;.d:(Lorg/mozilla/javascript/Parser;Ljava/util/List;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L417448.  v0.`org.mozilla.javascript.Parser.u` @type ^`java.util.List` := v1 @kind object;
  #L41744c.  return v1 @kind object;
}
procedure `void` `d0`(`org.mozilla.javascript.Parser` v3 @kind this) @signature `Lorg/mozilla/javascript/Parser;.d0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L41c0cc.  v0:= v3.`org.mozilla.javascript.Parser.u` @type ^`java.util.List` @kind object;
  #L41c0d0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L41c0d6.  v1:= temp;
  #L41c0d8.  v1:= v1 + -1;
  #L41c0dc.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L41c0e2.  v0:= temp @kind object;
  #L41c0e4.  v0:= (`org.mozilla.javascript.ast.Loop`) v0 @kind object;
  #L41c0e8.  v1:= v3.`org.mozilla.javascript.Parser.v` @type ^`java.util.List` @kind object;
  #L41c0ec.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L41c0f2.  v2:= temp;
  #L41c0f4.  v2:= v2 + -1;
  #L41c0f8.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L41c0fe.  call temp:= `getParent`(v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.getParent:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L41c104.  v1:= temp @kind object;
  #L41c106.  if v1 == 0 then goto L41c120;
  #L41c10a.  call temp:= `getParent`(v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.getParent:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L41c110.  v1:= temp @kind object;
  #L41c112.  call temp:= `getPosition`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L41c118.  v1:= temp;
  #L41c11a.  call `setRelative`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.setRelative:(I)V` @kind virtual;
  #L41c120.  call `Z0`(v3) @signature `Lorg/mozilla/javascript/Parser;.Z0:()V` @kind virtual;
  #L41c126.  return @kind void;
}
procedure `java.util.List` `e`(`org.mozilla.javascript.Parser` v0 @kind object) @signature `Lorg/mozilla/javascript/Parser;.e:(Lorg/mozilla/javascript/Parser;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L417460.  v0:= v0.`org.mozilla.javascript.Parser.v` @type ^`java.util.List` @kind object;
  #L417464.  return v0 @kind object;
}
procedure `void` `e0`(`org.mozilla.javascript.Parser` v2 @kind this) @signature `Lorg/mozilla/javascript/Parser;.e0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L41c138.  v0:= v2.`org.mozilla.javascript.Parser.v` @type ^`java.util.List` @kind object;
  #L41c13c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L41c142.  v1:= temp;
  #L41c144.  v1:= v1 + -1;
  #L41c148.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L41c14e.  return @kind void;
}
procedure `java.lang.String` `e1`(`org.mozilla.javascript.Parser` v6 @kind this, `java.io.Reader` v7 @kind object) @signature `Lorg/mozilla/javascript/Parser;.e1:(Ljava/io/Reader;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4173c4.  v0:= new `java.io.BufferedReader`;
  #L4173c8.  call `<init>`(v0, v7) @signature `Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L4173ce.  v7:= 1024I;
  #L4173d2.  v1:= new `char`[v7];
  #L4173d6.  v2:= new `java.lang.StringBuilder`;
  #L4173da.  call `<init>`(v2, v7) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L4173e0.  v3:= 0I;
  #L4173e2.  call temp:= `read`(v0, v1, v3, v7) @signature `Ljava/io/BufferedReader;.read:([CII)I` @kind virtual;
  #L4173e8.  v4:= temp;
  #L4173ea.  v5:= -1I;
  #L4173ec.  if v4 == v5 then goto L4173f8;
  #L4173f0.  call temp:= `append`(v2, v1, v3, v4) @signature `Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;` @kind virtual;
  #L4173f6.  goto L4173e0;
  #L4173f8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4173fe.  v7:= temp @kind object;
  #L417400.  call `close`(v0) @signature `Ljava/io/BufferedReader;.close:()V` @kind virtual;
  #L417406.  return v7 @kind object;
  #L417408.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41740a.  call `close`(v0) @signature `Ljava/io/BufferedReader;.close:()V` @kind virtual;
  #L417410.  throw v7;
  catch `java.lang.Throwable` @[L4173d2..L417400] goto L417408;
}
procedure `java.util.List` `f`(`org.mozilla.javascript.Parser` v0 @kind object, `java.util.List` v1 @kind object) @signature `Lorg/mozilla/javascript/Parser;.f:(Lorg/mozilla/javascript/Parser;Ljava/util/List;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L417478.  v0.`org.mozilla.javascript.Parser.v` @type ^`java.util.List` := v1 @kind object;
  #L41747c.  return v1 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `f0`(`org.mozilla.javascript.Parser` v7 @kind this) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4182c8.  call temp:= `z`(v7) @signature `Lorg/mozilla/javascript/Parser;.z:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4182ce.  v0:= temp @kind object;
  #L4182d0.  call temp:= `getPosition`(v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L4182d6.  v1:= temp;
  #L4182d8.  v2:= 89I;
  #L4182dc.  call temp:= `B0`(v7, v2) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L4182e2.  v3:= temp;
  #L4182e4.  if v3 == 0 then goto L418354;
  #L4182e8.  v3:= v7.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4182ec.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L4182f0.  v4:= v7.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L4182f4.  call temp:= `isStrictMode`(v4) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isStrictMode:()Z` @kind virtual;
  #L4182fa.  v4:= temp;
  #L4182fc.  if v4 == 0 then goto L418324;
  #L418300.  call temp:= `hasSideEffects`(v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.hasSideEffects:()Z` @kind virtual;
  #L418306.  v4:= temp;
  #L418308.  if v4 != 0 then goto L418324;
  #L41830c.  call temp:= `M0`(v7, v0) @signature `Lorg/mozilla/javascript/Parser;.M0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L418312.  v4:= temp;
  #L418314.  v4:= v4 - v1 @kind int;
  #L418316.  v5:= "msg.no.side.effects" @kind object;
  #L41831a.  v6:= "" @kind object;
  #L41831e.  call `q`(v7, v5, v6, v1, v4) @signature `Lorg/mozilla/javascript/Parser;.q:(Ljava/lang/String;Ljava/lang/String;II)V` @kind virtual;
  #L418324.  call temp:= `W0`(v7) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41832a.  v4:= temp;
  #L41832c.  v5:= 72I;
  #L418330.  if v4 != v5 then goto L41833e;
  #L418334.  v4:= "msg.yield.parenthesized" @kind object;
  #L418338.  call `i1`(v7, v4) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41833e.  v4:= new `org.mozilla.javascript.ast.InfixExpression`;
  #L418342.  call temp:= `z`(v7) @signature `Lorg/mozilla/javascript/Parser;.z:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L418348.  v5:= temp @kind object;
  #L41834a.  call `<init>`(v4, v2, v0, v5, v3) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.<init>:(ILorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;I)V` @kind direct;
  #L418350.  v0:= v4 @kind object;
  #L418352.  goto L4182d8;
  #L418354.  return v0 @kind object;
}
procedure `void` `f1`(`org.mozilla.javascript.Parser` v4 @kind this, `int` v5 , `java.lang.String` v6 @kind object) @signature `Lorg/mozilla/javascript/Parser;.f1:(ILjava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41c418.  v0:= v4.`org.mozilla.javascript.Parser.l` @type ^`java.util.List` @kind object;
  #L41c41c.  if v0 != 0 then goto L41c42e;
  #L41c420.  v0:= new `java.util.ArrayList`;
  #L41c424.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L41c42a.  v4.`org.mozilla.javascript.Parser.l` @type ^`java.util.List` := v0 @kind object;
  #L41c42e.  v0:= new `org.mozilla.javascript.ast.Comment`;
  #L41c432.  v1:= v4.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41c436.  v2:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41c43a.  call temp:= `t`(v1) @signature `Lorg/mozilla/javascript/u;.t:()I` @kind virtual;
  #L41c440.  v1:= temp;
  #L41c442.  v3:= v4.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41c446.  v3:= v3.`org.mozilla.javascript.u.x` @type ^`org.mozilla.javascript.Token$CommentType` @kind object;
  #L41c44a.  call `<init>`(v0, v2, v1, v3, v6) @signature `Lorg/mozilla/javascript/ast/Comment;.<init>:(IILorg/mozilla/javascript/Token$CommentType;Ljava/lang/String;)V` @kind direct;
  #L41c450.  v6:= v4.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41c454.  v6:= v6.`org.mozilla.javascript.u.x` @type ^`org.mozilla.javascript.Token$CommentType` @kind object;
  #L41c458.  v1:= `@@org.mozilla.javascript.Token$CommentType.JSDOC` @type ^`org.mozilla.javascript.Token$CommentType` @kind object;
  #L41c45c.  if v6 != v1 then goto L41c474;
  #L41c460.  v6:= v4.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41c464.  call temp:= `isRecordingLocalJsDocComments`(v6) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isRecordingLocalJsDocComments:()Z` @kind virtual;
  #L41c46a.  v6:= temp;
  #L41c46c.  if v6 == 0 then goto L41c474;
  #L41c470.  v4.`org.mozilla.javascript.Parser.m` @type ^`org.mozilla.javascript.ast.Comment` := v0 @kind object;
  #L41c474.  call `setLineno`(v0, v5) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41c47a.  v5:= v4.`org.mozilla.javascript.Parser.l` @type ^`java.util.List` @kind object;
  #L41c47e.  call temp:= `add`(v5, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41c484.  return @kind void;
}
procedure `int` `g`(`org.mozilla.javascript.Parser` v0 @kind object) @signature `Lorg/mozilla/javascript/Parser;.g:(Lorg/mozilla/javascript/Parser;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L41708c.  v0:= v0.`org.mozilla.javascript.Parser.r` @type ^`int`;
  #L417090.  return v0;
}
procedure `org.mozilla.javascript.ast.Loop` `g0`(`org.mozilla.javascript.Parser` v17 @kind this) @signature `Lorg/mozilla/javascript/Parser;.g0:()Lorg/mozilla/javascript/ast/Loop;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L41a970.  v1:= v17 @kind object;
  #L41a974.  v0:= v1.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L41a978.  v2:= 0I;
  #L41a97a.  v3:= 119I;
  #L41a97e.  if v0 != v3 then goto L41abe8;
  #L41a982.  call `M`(v17) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41a988.  v0:= v1.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a98c.  v3:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41a990.  v0:= v0.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41a994.  v4:= new `org.mozilla.javascript.ast.Scope`;
  #L41a998.  call `<init>`(v4) @signature `Lorg/mozilla/javascript/ast/Scope;.<init>:()V` @kind direct;
  #L41a99e.  call `d1`(v1, v4) @signature `Lorg/mozilla/javascript/Parser;.d1:(Lorg/mozilla/javascript/ast/Scope;)V` @kind virtual;
  #L41a9a4.  v5:= 39I;
  #L41a9a8.  call temp:= `B0`(v1, v5) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41a9ae.  v5:= temp;
  #L41a9b0.  v6:= "msg.no.paren.for" @kind object;
  #L41a9b4.  v7:= 0I;
  #L41a9b6.  v8:= -1I;
  #L41a9b8.  v9:= 1I;
  #L41a9ba.  if v5 == 0 then goto L41a9ee;
  #L41a9be.  v5:= "each" @kind object;
  #L41a9c2.  v10:= v1.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a9c6.  call temp:= `q`(v10) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L41a9cc.  v10:= temp @kind object;
  #L41a9ce.  call temp:= `equals`(v5, v10) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41a9d4.  v5:= temp;
  #L41a9d6.  if v5 == 0 then goto L41a9e8;
  #L41a9da.  v5:= v1.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a9de.  v5:= v5.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41a9e2.  v5:= v5 - v3 @kind int;
  #L41a9e4.  v10:= 1I;
  #L41a9e6.  goto L41a9f2;
  #L41a9e8.  call `i1`(v1, v6) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41a9ee.  v5:= -1I;
  #L41a9f0.  v10:= 0I;
  #L41a9f2.  v11:= 87I;
  #L41a9f6.  call temp:= `G0`(v1, v11, v6) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41a9fc.  v6:= temp;
  #L41a9fe.  if v6 == 0 then goto L41aa0e;
  #L41aa02.  v6:= v1.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41aa06.  v6:= v6.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41aa0a.  v6:= v6 - v3 @kind int;
  #L41aa0c.  goto L41aa10;
  #L41aa0e.  v6:= -1I;
  #L41aa10.  call temp:= `W0`(v17) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41aa16.  v11:= temp;
  #L41aa18.  call temp:= `h0`(v1, v11) @signature `Lorg/mozilla/javascript/Parser;.h0:(I)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41aa1e.  v11:= temp @kind object;
  #L41aa20.  v12:= 52I;
  #L41aa24.  call temp:= `B0`(v1, v12) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41aa2a.  v12:= temp;
  #L41aa2c.  v13:= 88I;
  #L41aa30.  if v12 == 0 then goto L41aa4e;
  #L41aa34.  v7:= v1.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41aa38.  v7:= v7.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41aa3c.  v7:= v7 - v3 @kind int;
  #L41aa3e.  call temp:= `f0`(v17) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41aa44.  v12:= temp @kind object;
  #L41aa46.  v14:= v12 @kind object;
  #L41aa48.  v12:= v7;
  #L41aa4a.  v7:= 1I;
  #L41aa4c.  goto L41aae4;
  #L41aa4e.  v2:= "msg.no.semi.for" @kind object;
  #L41aa52.  v12:= 82I;
  #L41aa56.  call temp:= `G0`(v1, v12, v2) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41aa5c.  call temp:= `W0`(v17) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41aa62.  v2:= temp;
  #L41aa64.  if v2 != v12 then goto L41aa8a;
  #L41aa68.  v2:= new `org.mozilla.javascript.ast.EmptyExpression`;
  #L41aa6c.  v14:= v1.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41aa70.  v14:= v14.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41aa74.  call `<init>`(v2, v14, v9) @signature `Lorg/mozilla/javascript/ast/EmptyExpression;.<init>:(II)V` @kind direct;
  #L41aa7a.  v14:= v1.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41aa7e.  v14:= v14.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41aa82.  call `setLineno`(v2, v14) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41aa88.  goto L41aa92;
  #L41aa8a.  call temp:= `f0`(v17) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41aa90.  v2:= temp @kind object;
  #L41aa92.  v14:= "msg.no.semi.for.cond" @kind object;
  #L41aa96.  call temp:= `G0`(v1, v12, v14) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41aa9c.  v12:= v1.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41aaa0.  v12:= v12.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41aaa4.  call temp:= `W0`(v17) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41aaaa.  v14:= temp;
  #L41aaac.  if v14 != v13 then goto L41aad6;
  #L41aab0.  v14:= new `org.mozilla.javascript.ast.EmptyExpression`;
  #L41aab4.  call `<init>`(v14, v12, v9) @signature `Lorg/mozilla/javascript/ast/EmptyExpression;.<init>:(II)V` @kind direct;
  #L41aaba.  v12:= v1.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41aabe.  v12:= v12.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41aac2.  call `setLineno`(v14, v12) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41aac8.  v12:= -1I;
  #L41aaca.  v16:= v14 @kind object;
  #L41aace.  v14:= v2 @kind object;
  #L41aad0.  v2:= v16 @kind object;
  #L41aad4.  goto L41aae4;
  #L41aad6.  call temp:= `f0`(v17) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41aadc.  v12:= temp @kind object;
  #L41aade.  v14:= v2 @kind object;
  #L41aae0.  v2:= v12 @kind object;
  #L41aae2.  v12:= -1I;
  #L41aae4.  v15:= "msg.no.paren.for.ctrl" @kind object;
  #L41aae8.  call temp:= `G0`(v1, v13, v15) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41aaee.  v13:= temp;
  #L41aaf0.  if v13 == 0 then goto L41aafe;
  #L41aaf4.  v8:= v1.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41aaf8.  v8:= v8.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41aafc.  v8:= v8 - v3 @kind int;
  #L41aafe.  if v7 == 0 then goto L41ab58;
  #L41ab02.  v2:= new `org.mozilla.javascript.ast.ForInLoop`;
  #L41ab06.  call `<init>`(v2, v3) @signature `Lorg/mozilla/javascript/ast/ForInLoop;.<init>:(I)V` @kind direct;
  #L41ab0c.  v7:= instanceof @variable v11 @type ^`org.mozilla.javascript.ast.VariableDeclaration` @kind boolean;
  #L41ab10.  if v7 == 0 then goto L41ab38;
  #L41ab14.  v7:= v11 @kind object;
  #L41ab16.  v7:= (`org.mozilla.javascript.ast.VariableDeclaration`) v7 @kind object;
  #L41ab1a.  call temp:= `getVariables`(v7) @signature `Lorg/mozilla/javascript/ast/VariableDeclaration;.getVariables:()Ljava/util/List;` @kind virtual;
  #L41ab20.  v7:= temp @kind object;
  #L41ab22.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L41ab28.  v7:= temp;
  #L41ab2a.  if v7 <= v9 then goto L41ab38;
  #L41ab2e.  v7:= "msg.mult.index" @kind object;
  #L41ab32.  call `i1`(v1, v7) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41ab38.  call `setIterator`(v2, v11) @signature `Lorg/mozilla/javascript/ast/ForInLoop;.setIterator:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41ab3e.  call `setIteratedObject`(v2, v14) @signature `Lorg/mozilla/javascript/ast/ForInLoop;.setIteratedObject:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41ab44.  call `setInPosition`(v2, v12) @signature `Lorg/mozilla/javascript/ast/ForInLoop;.setInPosition:(I)V` @kind virtual;
  #L41ab4a.  call `setIsForEach`(v2, v10) @signature `Lorg/mozilla/javascript/ast/ForInLoop;.setIsForEach:(Z)V` @kind virtual;
  #L41ab50.  call `setEachPosition`(v2, v5) @signature `Lorg/mozilla/javascript/ast/ForInLoop;.setEachPosition:(I)V` @kind virtual;
  #L41ab56.  goto L41ab76;
  #L41ab58.  v5:= new `org.mozilla.javascript.ast.ForLoop`;
  #L41ab5c.  call `<init>`(v5, v3) @signature `Lorg/mozilla/javascript/ast/ForLoop;.<init>:(I)V` @kind direct;
  #L41ab62.  call `setInitializer`(v5, v11) @signature `Lorg/mozilla/javascript/ast/ForLoop;.setInitializer:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41ab68.  call `setCondition`(v5, v14) @signature `Lorg/mozilla/javascript/ast/ForLoop;.setCondition:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41ab6e.  call `setIncrement`(v5, v2) @signature `Lorg/mozilla/javascript/ast/ForLoop;.setIncrement:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41ab74.  v2:= v5 @kind object;
  #L41ab76.  v5:= v1.`org.mozilla.javascript.Parser.q` @type ^`org.mozilla.javascript.ast.Scope` @kind object;
  #L41ab7a.  call `replaceWith`(v5, v2) @signature `Lorg/mozilla/javascript/ast/Scope;.replaceWith:(Lorg/mozilla/javascript/ast/Scope;)V` @kind virtual;
  #L41ab80.  call `Z0`(v17) @signature `Lorg/mozilla/javascript/Parser;.Z0:()V` @kind virtual;
  #L41ab86.  call `a0`(v1, v2) @signature `Lorg/mozilla/javascript/Parser;.a0:(Lorg/mozilla/javascript/ast/Loop;)V` @kind direct;
  #L41ab8c.  call temp:= `p1`(v17) @signature `Lorg/mozilla/javascript/Parser;.p1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41ab92.  v5:= temp @kind object;
  #L41ab94.  call temp:= `o0`(v1, v5) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41ab9a.  v7:= temp;
  #L41ab9c.  v7:= v7 - v3 @kind int;
  #L41ab9e.  call `setLength`(v2, v7) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L41aba4.  call `setBody`(v2, v5) @signature `Lorg/mozilla/javascript/ast/Loop;.setBody:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41abaa.  call `d0`(v17) @signature `Lorg/mozilla/javascript/Parser;.d0:()V` @kind direct;
  #L41abb0.  v3:= v1.`org.mozilla.javascript.Parser.q` @type ^`org.mozilla.javascript.ast.Scope` @kind object;
  #L41abb4.  if v3 != v4 then goto L41abbe;
  #L41abb8.  call `Z0`(v17) @signature `Lorg/mozilla/javascript/Parser;.Z0:()V` @kind virtual;
  #L41abbe.  call `setParens`(v2, v6, v8) @signature `Lorg/mozilla/javascript/ast/Loop;.setParens:(II)V` @kind virtual;
  #L41abc4.  call `setLineno`(v2, v0) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41abca.  return v2 @kind object;
  #L41abcc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41abce.  call `d0`(v17) @signature `Lorg/mozilla/javascript/Parser;.d0:()V` @kind direct;
  #L41abd4.  throw v0;
  #L41abd6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41abd8.  v2:= v1.`org.mozilla.javascript.Parser.q` @type ^`org.mozilla.javascript.ast.Scope` @kind object;
  #L41abdc.  if v2 != v4 then goto L41abe6;
  #L41abe0.  call `Z0`(v17) @signature `Lorg/mozilla/javascript/Parser;.Z0:()V` @kind virtual;
  #L41abe6.  throw v0;
  #L41abe8.  call temp:= `J`(v17) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L41abee.  throw v2;
  catch `java.lang.Throwable` @[L41a9a8..L41a9b0] goto L41abd6;
  catch `java.lang.Throwable` @[L41a9be..L41ab8c] goto L41abd6;
  catch `java.lang.Throwable` @[L41ab8c..L41abaa] goto L41abcc;
  catch `java.lang.Throwable` @[L41abaa..L41abb0] goto L41abd6;
  catch `java.lang.Throwable` @[L41abce..L41abd6] goto L41abd6;
}
procedure `void` `g1`(`org.mozilla.javascript.Parser` v4 @kind this, `org.mozilla.javascript.ast.Label` v5 @kind object, `org.mozilla.javascript.ast.LabeledStatement` v6 @kind object) @signature `Lorg/mozilla/javascript/Parser;.g1:(Lorg/mozilla/javascript/ast/Label;Lorg/mozilla/javascript/ast/LabeledStatement;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41c498.  call temp:= `W0`(v4) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41c49e.  v0:= temp;
  #L41c4a0.  v1:= 103I;
  #L41c4a4.  if v0 != v1 then goto L41c538;
  #L41c4a8.  call `M`(v4) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41c4ae.  call temp:= `getName`(v5) @signature `Lorg/mozilla/javascript/ast/Label;.getName:()Ljava/lang/String;` @kind virtual;
  #L41c4b4.  v0:= temp @kind object;
  #L41c4b6.  v1:= v4.`org.mozilla.javascript.Parser.t` @type ^`java.util.Map` @kind object;
  #L41c4ba.  if v1 != 0 then goto L41c4ce;
  #L41c4be.  v1:= new `java.util.HashMap`;
  #L41c4c2.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L41c4c8.  v4.`org.mozilla.javascript.Parser.t` @type ^`java.util.Map` := v1 @kind object;
  #L41c4cc.  goto L41c526;
  #L41c4ce.  call temp:= `get`(v1, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L41c4d4.  v1:= temp @kind object;
  #L41c4d6.  v1:= (`org.mozilla.javascript.ast.LabeledStatement`) v1 @kind object;
  #L41c4da.  if v1 == 0 then goto L41c526;
  #L41c4de.  v2:= v4.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41c4e2.  call temp:= `isIdeMode`(v2) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isIdeMode:()Z` @kind virtual;
  #L41c4e8.  v2:= temp;
  #L41c4ea.  v3:= "msg.dup.label" @kind object;
  #L41c4ee.  if v2 == 0 then goto L41c510;
  #L41c4f2.  call temp:= `getLabelByName`(v1, v0) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.getLabelByName:(Ljava/lang/String;)Lorg/mozilla/javascript/ast/Label;` @kind virtual;
  #L41c4f8.  v1:= temp @kind object;
  #L41c4fa.  call temp:= `getAbsolutePosition`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.getAbsolutePosition:()I` @kind virtual;
  #L41c500.  v2:= temp;
  #L41c502.  call temp:= `getLength`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.getLength:()I` @kind virtual;
  #L41c508.  v1:= temp;
  #L41c50a.  call `j1`(v4, v3, v2, v1) @signature `Lorg/mozilla/javascript/Parser;.j1:(Ljava/lang/String;II)V` @kind virtual;
  #L41c510.  call temp:= `getPosition`(v5) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L41c516.  v1:= temp;
  #L41c518.  call temp:= `getLength`(v5) @signature `Lorg/mozilla/javascript/ast/AstNode;.getLength:()I` @kind virtual;
  #L41c51e.  v2:= temp;
  #L41c520.  call `j1`(v4, v3, v1, v2) @signature `Lorg/mozilla/javascript/Parser;.j1:(Ljava/lang/String;II)V` @kind virtual;
  #L41c526.  call `addLabel`(v6, v5) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.addLabel:(Lorg/mozilla/javascript/ast/Label;)V` @kind virtual;
  #L41c52c.  v5:= v4.`org.mozilla.javascript.Parser.t` @type ^`java.util.Map` @kind object;
  #L41c530.  call temp:= `put`(v5, v0, v6) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L41c536.  return @kind void;
  #L41c538.  call temp:= `J`(v4) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L41c53e.  v5:= 0I;
  #L41c540.  throw v5;
}
procedure `int` `h`(`org.mozilla.javascript.Parser` v0 @kind object, `int` v1 ) @signature `Lorg/mozilla/javascript/Parser;.h:(Lorg/mozilla/javascript/Parser;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4170a4.  v0.`org.mozilla.javascript.Parser.r` @type ^`int` := v1;
  #L4170a8.  return v1;
}
procedure `org.mozilla.javascript.ast.AstNode` `h0`(`org.mozilla.javascript.Parser` v3 @kind this, `int` v4 ) @signature `Lorg/mozilla/javascript/Parser;.h0:(I)Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L418368.  v0:= 1I;
  #L41836a.  v1:= 0I;
  #L41836c.  v3.`org.mozilla.javascript.Parser.s` @type ^`boolean` := v0 @kind boolean;
  #L418370.  v2:= 82I;
  #L418374.  if v4 != v2 then goto L41839a;
  #L418378.  v4:= new `org.mozilla.javascript.ast.EmptyExpression`;
  #L41837c.  v2:= v3.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418380.  v2:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L418384.  call `<init>`(v4, v2, v0) @signature `Lorg/mozilla/javascript/ast/EmptyExpression;.<init>:(II)V` @kind direct;
  #L41838a.  v0:= v3.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41838e.  v0:= v0.`org.mozilla.javascript.u.o` @type ^`int`;
  #L418392.  call `setLineno`(v4, v0) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L418398.  goto L4183d2;
  #L41839a.  v0:= 122I;
  #L41839e.  if v4 == v0 then goto L4183bc;
  #L4183a2.  v0:= 153I;
  #L4183a6.  if v4 != v0 then goto L4183ac;
  #L4183aa.  goto L4183bc;
  #L4183ac.  call temp:= `f0`(v3) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4183b2.  v4:= temp @kind object;
  #L4183b4.  call `z0`(v3, v4) @signature `Lorg/mozilla/javascript/Parser;.z0:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L4183ba.  goto L4183d2;
  #L4183bc.  call `M`(v3) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L4183c2.  v0:= v3.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4183c6.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L4183ca.  call temp:= `x1`(v3, v4, v0, v1) @signature `Lorg/mozilla/javascript/Parser;.x1:(IIZ)Lorg/mozilla/javascript/ast/VariableDeclaration;` @kind direct;
  #L4183d0.  v4:= temp @kind object;
  #L4183d2.  v3.`org.mozilla.javascript.Parser.s` @type ^`boolean` := v1 @kind boolean;
  #L4183d6.  return v4 @kind object;
  #L4183d8.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4183da.  v3.`org.mozilla.javascript.Parser.s` @type ^`boolean` := v1 @kind boolean;
  #L4183de.  throw v4;
  catch `java.lang.Throwable` @[L41836c..L4183d2] goto L4183d8;
}
procedure `org.mozilla.javascript.ast.AstNode` `h1`(`org.mozilla.javascript.Parser` v5 @kind this) @signature `Lorg/mozilla/javascript/Parser;.h1:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L41948c.  call temp:= `o1`(v5) @signature `Lorg/mozilla/javascript/Parser;.o1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419492.  v0:= temp @kind object;
  #L419494.  call temp:= `W0`(v5) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41949a.  v1:= temp;
  #L41949c.  v2:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4194a0.  v2:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L4194a4.  v3:= 52I;
  #L4194a8.  if v1 == v3 then goto L4194bc;
  #L4194ac.  v3:= 53I;
  #L4194b0.  if v1 == v3 then goto L4194c6;
  #L4194b4.  goto L4194e4;
  #L4194ba.  goto L4194c4;
  #L4194bc.  v3:= v5.`org.mozilla.javascript.Parser.s` @type ^`boolean` @kind boolean;
  #L4194c0.  if v3 == 0 then goto L4194c6;
  #L4194c4.  return v0 @kind object;
  #L4194c6.  call `M`(v5) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L4194cc.  v3:= new `org.mozilla.javascript.ast.InfixExpression`;
  #L4194d0.  call temp:= `o1`(v5) @signature `Lorg/mozilla/javascript/Parser;.o1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4194d6.  v4:= temp @kind object;
  #L4194d8.  call `<init>`(v3, v1, v0, v4, v2) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.<init>:(ILorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;I)V` @kind direct;
  #L4194de.  v0:= v3 @kind object;
  #L4194e0.  goto L419494;
  #L4194e2.  
  #L4194e4.  switch v1
                  | 14 => goto L4194c6
                  | 15 => goto L4194c6
                  | 16 => goto L4194c6
                  | 17 => goto L4194c6
                  | else => goto L4194ba;
}
procedure `boolean` `i`(`org.mozilla.javascript.Parser` v0 @kind object) @signature `Lorg/mozilla/javascript/Parser;.i:(Lorg/mozilla/javascript/Parser;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L416cf4.  v0:= v0.`org.mozilla.javascript.Parser.s` @type ^`boolean` @kind boolean;
  #L416cf8.  return v0;
}
procedure `org.mozilla.javascript.ast.FunctionNode` `i0`(`org.mozilla.javascript.Parser` v10 @kind this, `int` v11 ) @signature `Lorg/mozilla/javascript/Parser;.i0:(I)Lorg/mozilla/javascript/ast/FunctionNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L41a49c.  v0:= v10.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a4a0.  v1:= v0.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41a4a4.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41a4a8.  v2:= 39I;
  #L41a4ac.  call temp:= `B0`(v10, v2) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41a4b2.  v3:= temp;
  #L41a4b4.  v4:= 0I;
  #L41a4b6.  v5:= "msg.no.paren.parms" @kind object;
  #L41a4ba.  v6:= 0I;
  #L41a4bc.  v7:= 87I;
  #L41a4c0.  if v3 == 0 then goto L41a53a;
  #L41a4c4.  v3:= 1I;
  #L41a4c6.  call temp:= `Q`(v10, v3, v2) @signature `Lorg/mozilla/javascript/Parser;.Q:(ZI)Lorg/mozilla/javascript/ast/Name;` @kind direct;
  #L41a4cc.  v2:= temp @kind object;
  #L41a4ce.  v3:= v10.`org.mozilla.javascript.Parser.inUseStrictDirective` @type ^`boolean` @kind boolean;
  #L41a4d2.  if v3 == 0 then goto L41a508;
  #L41a4d6.  call temp:= `getIdentifier`(v2) @signature `Lorg/mozilla/javascript/ast/Name;.getIdentifier:()Ljava/lang/String;` @kind virtual;
  #L41a4dc.  v3:= temp @kind object;
  #L41a4de.  v8:= "eval" @kind object;
  #L41a4e2.  call temp:= `equals`(v8, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41a4e8.  v8:= temp;
  #L41a4ea.  if v8 != 0 then goto L41a4fe;
  #L41a4ee.  v8:= "arguments" @kind object;
  #L41a4f2.  call temp:= `equals`(v8, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41a4f8.  v8:= temp;
  #L41a4fa.  if v8 == 0 then goto L41a508;
  #L41a4fe.  v8:= "msg.bad.id.strict" @kind object;
  #L41a502.  call `k1`(v10, v8, v3) @signature `Lorg/mozilla/javascript/Parser;.k1:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L41a508.  call temp:= `B0`(v10, v7) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41a50e.  v3:= temp;
  #L41a510.  if v3 != 0 then goto L41a572;
  #L41a514.  v3:= v10.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41a518.  call temp:= `isAllowMemberExprAsFunctionName`(v3) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isAllowMemberExprAsFunctionName:()Z` @kind virtual;
  #L41a51e.  v3:= temp;
  #L41a520.  if v3 == 0 then goto L41a532;
  #L41a524.  call temp:= `D0`(v10, v4, v2) @signature `Lorg/mozilla/javascript/Parser;.D0:(ZLorg/mozilla/javascript/ast/AstNode;)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41a52a.  v2:= temp @kind object;
  #L41a52c.  v9:= v6 @kind object;
  #L41a52e.  v6:= v2 @kind object;
  #L41a530.  v2:= v9 @kind object;
  #L41a532.  call temp:= `G0`(v10, v7, v5) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41a538.  goto L41a572;
  #L41a53a.  call temp:= `B0`(v10, v7) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41a540.  v2:= temp;
  #L41a542.  if v2 == 0 then goto L41a54a;
  #L41a546.  v2:= v6 @kind object;
  #L41a548.  goto L41a572;
  #L41a54a.  v2:= v10.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41a54e.  call temp:= `isAllowMemberExprAsFunctionName`(v2) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isAllowMemberExprAsFunctionName:()Z` @kind virtual;
  #L41a554.  v2:= temp;
  #L41a556.  if v2 == 0 then goto L41a564;
  #L41a55a.  call temp:= `C0`(v10, v4) @signature `Lorg/mozilla/javascript/Parser;.C0:(Z)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41a560.  v2:= temp @kind object;
  #L41a562.  goto L41a566;
  #L41a564.  v2:= v6 @kind object;
  #L41a566.  call temp:= `G0`(v10, v7, v5) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41a56c.  v9:= v6 @kind object;
  #L41a56e.  v6:= v2 @kind object;
  #L41a570.  v2:= v9 @kind object;
  #L41a572.  v3:= v10.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L41a576.  v4:= -1I;
  #L41a578.  if v3 != v7 then goto L41a586;
  #L41a57c.  v3:= v10.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a580.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41a584.  goto L41a588;
  #L41a586.  v3:= -1I;
  #L41a588.  v5:= 2I;
  #L41a58a.  if v6 == 0 then goto L41a592;
  #L41a58e.  v7:= 2I;
  #L41a590.  goto L41a594;
  #L41a592.  v7:= v11;
  #L41a594.  if v7 == v5 then goto L41a5ba;
  #L41a598.  if v2 == 0 then goto L41a5ba;
  #L41a59c.  call temp:= `length`(v2) @signature `Lorg/mozilla/javascript/ast/Name;.length:()I` @kind virtual;
  #L41a5a2.  v5:= temp;
  #L41a5a4.  if v5 <= 0 then goto L41a5ba;
  #L41a5a8.  v5:= 109I;
  #L41a5ac.  call temp:= `getIdentifier`(v2) @signature `Lorg/mozilla/javascript/ast/Name;.getIdentifier:()Ljava/lang/String;` @kind virtual;
  #L41a5b2.  v7:= temp @kind object;
  #L41a5b4.  call `T`(v10, v5, v7) @signature `Lorg/mozilla/javascript/Parser;.T:(ILjava/lang/String;)V` @kind virtual;
  #L41a5ba.  v5:= new `org.mozilla.javascript.ast.FunctionNode`;
  #L41a5be.  call `<init>`(v5, v0, v2) @signature `Lorg/mozilla/javascript/ast/FunctionNode;.<init>:(ILorg/mozilla/javascript/ast/Name;)V` @kind direct;
  #L41a5c4.  call `setFunctionType`(v5, v11) @signature `Lorg/mozilla/javascript/ast/FunctionNode;.setFunctionType:(I)V` @kind virtual;
  #L41a5ca.  if v3 == v4 then goto L41a5d6;
  #L41a5ce.  v3:= v3 - v0 @kind int;
  #L41a5d0.  call `setLp`(v5, v3) @signature `Lorg/mozilla/javascript/ast/FunctionNode;.setLp:(I)V` @kind virtual;
  #L41a5d6.  call temp:= `m0`(v10) @signature `Lorg/mozilla/javascript/Parser;.m0:()Lorg/mozilla/javascript/ast/Comment;` @kind direct;
  #L41a5dc.  v11:= temp @kind object;
  #L41a5de.  call `setJsDocNode`(v5, v11) @signature `Lorg/mozilla/javascript/Node;.setJsDocNode:(Lorg/mozilla/javascript/ast/Comment;)V` @kind virtual;
  #L41a5e4.  v11:= new `org.mozilla.javascript.Parser$PerFunctionVariables`;
  #L41a5e8.  call `<init>`(v11, v10, v5) @signature `Lorg/mozilla/javascript/Parser$PerFunctionVariables;.<init>:(Lorg/mozilla/javascript/Parser;Lorg/mozilla/javascript/ast/FunctionNode;)V` @kind direct;
  #L41a5ee.  call `U0`(v10, v5) @signature `Lorg/mozilla/javascript/Parser;.U0:(Lorg/mozilla/javascript/ast/FunctionNode;)V` @kind direct;
  #L41a5f4.  call temp:= `T0`(v10) @signature `Lorg/mozilla/javascript/Parser;.T0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41a5fa.  v3:= temp @kind object;
  #L41a5fc.  call `setBody`(v5, v3) @signature `Lorg/mozilla/javascript/ast/FunctionNode;.setBody:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41a602.  v3:= v10.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a606.  v3:= v3.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41a60a.  call `setEncodedSourceBounds`(v5, v0, v3) @signature `Lorg/mozilla/javascript/ast/ScriptNode;.setEncodedSourceBounds:(II)V` @kind virtual;
  #L41a610.  v3:= v10.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a614.  v3:= v3.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41a618.  v3:= v3 - v0 @kind int;
  #L41a61a.  call `setLength`(v5, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L41a620.  v0:= v10.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41a624.  call temp:= `isStrictMode`(v0) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isStrictMode:()Z` @kind virtual;
  #L41a62a.  v0:= temp;
  #L41a62c.  if v0 == 0 then goto L41a676;
  #L41a630.  call temp:= `getBody`(v5) @signature `Lorg/mozilla/javascript/ast/FunctionNode;.getBody:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L41a636.  v0:= temp @kind object;
  #L41a638.  call temp:= `hasConsistentReturnUsage`(v0) @signature `Lorg/mozilla/javascript/Node;.hasConsistentReturnUsage:()Z` @kind virtual;
  #L41a63e.  v0:= temp;
  #L41a640.  if v0 != 0 then goto L41a676;
  #L41a644.  if v2 == 0 then goto L41a65a;
  #L41a648.  call temp:= `length`(v2) @signature `Lorg/mozilla/javascript/ast/Name;.length:()I` @kind virtual;
  #L41a64e.  v0:= temp;
  #L41a650.  if v0 <= 0 then goto L41a65a;
  #L41a654.  v0:= "msg.no.return.value" @kind object;
  #L41a658.  goto L41a65e;
  #L41a65a.  v0:= "msg.anon.no.return.value" @kind object;
  #L41a65e.  if v2 != 0 then goto L41a668;
  #L41a662.  v2:= "" @kind object;
  #L41a666.  goto L41a670;
  #L41a668.  call temp:= `getIdentifier`(v2) @signature `Lorg/mozilla/javascript/ast/Name;.getIdentifier:()Ljava/lang/String;` @kind virtual;
  #L41a66e.  v2:= temp @kind object;
  #L41a670.  call `p`(v10, v0, v2) @signature `Lorg/mozilla/javascript/Parser;.p:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L41a676.  call `a`(v11) @signature `Lorg/mozilla/javascript/Parser$PerFunctionVariables;.a:()V` @kind virtual;
  #L41a67c.  if v6 == 0 then goto L41a68c;
  #L41a680.  call temp:= `codeBug`() @signature `Lorg/mozilla/javascript/Kit;.codeBug:()Ljava/lang/RuntimeException;` @kind static;
  #L41a686.  call `setMemberExprNode`(v5, v6) @signature `Lorg/mozilla/javascript/ast/FunctionNode;.setMemberExprNode:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41a68c.  v11:= v10.`org.mozilla.javascript.Parser.d` @type ^`java.lang.String` @kind object;
  #L41a690.  call `setSourceName`(v5, v11) @signature `Lorg/mozilla/javascript/ast/ScriptNode;.setSourceName:(Ljava/lang/String;)V` @kind virtual;
  #L41a696.  call `setBaseLineno`(v5, v1) @signature `Lorg/mozilla/javascript/ast/ScriptNode;.setBaseLineno:(I)V` @kind virtual;
  #L41a69c.  v11:= v10.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a6a0.  v11:= v11.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41a6a4.  call `setEndLineno`(v5, v11) @signature `Lorg/mozilla/javascript/ast/ScriptNode;.setEndLineno:(I)V` @kind virtual;
  #L41a6aa.  v11:= v10.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41a6ae.  call temp:= `isIdeMode`(v11) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isIdeMode:()Z` @kind virtual;
  #L41a6b4.  v11:= temp;
  #L41a6b6.  if v11 == 0 then goto L41a6c4;
  #L41a6ba.  v11:= v10.`org.mozilla.javascript.Parser.q` @type ^`org.mozilla.javascript.ast.Scope` @kind object;
  #L41a6be.  call `setParentScope`(v5, v11) @signature `Lorg/mozilla/javascript/ast/Scope;.setParentScope:(Lorg/mozilla/javascript/ast/Scope;)V` @kind virtual;
  #L41a6c4.  return v5 @kind object;
  #L41a6c6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41a6c8.  call `a`(v11) @signature `Lorg/mozilla/javascript/Parser$PerFunctionVariables;.a:()V` @kind virtual;
  #L41a6ce.  throw v0;
  catch `java.lang.Throwable` @[L41a5ee..L41a676] goto L41a6c6;
}
procedure `boolean` `j`(`org.mozilla.javascript.Parser` v0 @kind object, `boolean` v1 ) @signature `Lorg/mozilla/javascript/Parser;.j:(Lorg/mozilla/javascript/Parser;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L416d0c.  v0.`org.mozilla.javascript.Parser.s` @type ^`boolean` := v1 @kind boolean;
  #L416d10.  return v1;
}
procedure `org.mozilla.javascript.ast.AstNode` `j0`(`org.mozilla.javascript.Parser` v1 @kind this, `org.mozilla.javascript.ast.AstNode` v2 @kind object, `int` v3 ) @signature `Lorg/mozilla/javascript/Parser;.j0:(Lorg/mozilla/javascript/ast/AstNode;I)Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4183fc.  v0:= 0I;
  #L4183fe.  call temp:= `k0`(v1, v2, v3, v0) @signature `Lorg/mozilla/javascript/Parser;.k0:(Lorg/mozilla/javascript/ast/AstNode;IZ)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L418404.  v2:= temp @kind object;
  #L418406.  return v2 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `k0`(`org.mozilla.javascript.Parser` v5 @kind this, `org.mozilla.javascript.ast.AstNode` v6 @kind object, `int` v7 , `boolean` v8 ) @signature `Lorg/mozilla/javascript/Parser;.k0:(Lorg/mozilla/javascript/ast/AstNode;IZ)Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L418418.  v0:= new `java.util.ArrayList`;
  #L41841c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L418422.  call temp:= `W0`(v5) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L418428.  v1:= temp;
  #L41842a.  v2:= 119I;
  #L41842e.  if v1 != v2 then goto L418442;
  #L418432.  call temp:= `l0`(v5) @signature `Lorg/mozilla/javascript/Parser;.l0:()Lorg/mozilla/javascript/ast/GeneratorExpressionLoop;` @kind direct;
  #L418438.  v1:= temp @kind object;
  #L41843a.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L418440.  goto L418422;
  #L418442.  v1:= -1I;
  #L418444.  v2:= 0I;
  #L418446.  call temp:= `W0`(v5) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41844c.  v3:= temp;
  #L41844e.  v4:= 112I;
  #L418452.  if v3 != v4 then goto L41846e;
  #L418456.  call `M`(v5) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41845c.  v1:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418460.  v1:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L418464.  v1:= v1 - v7 @kind int;
  #L418466.  call temp:= `L`(v5) @signature `Lorg/mozilla/javascript/Parser;.L:()Lorg/mozilla/javascript/Parser$b;` @kind direct;
  #L41846c.  v2:= temp @kind object;
  #L41846e.  if v8 != 0 then goto L418480;
  #L418472.  v8:= 88I;
  #L418476.  v3:= "msg.no.paren.let" @kind object;
  #L41847a.  call temp:= `G0`(v5, v8, v3) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L418480.  v8:= new `org.mozilla.javascript.ast.GeneratorExpression`;
  #L418484.  v3:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418488.  v3:= v3.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41848c.  v3:= v3 - v7 @kind int;
  #L41848e.  call `<init>`(v8, v7, v3) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.<init>:(II)V` @kind direct;
  #L418494.  call `setResult`(v8, v6) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.setResult:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41849a.  call `setLoops`(v8, v0) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.setLoops:(Ljava/util/List;)V` @kind virtual;
  #L4184a0.  if v2 == 0 then goto L4184cc;
  #L4184a4.  call `setIfPosition`(v8, v1) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.setIfPosition:(I)V` @kind virtual;
  #L4184aa.  v6:= v2.`org.mozilla.javascript.Parser$b.a` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L4184ae.  call `setFilter`(v8, v6) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.setFilter:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L4184b4.  v6:= v2.`org.mozilla.javascript.Parser$b.b` @type ^`int`;
  #L4184b8.  v6:= v6 - v7 @kind int;
  #L4184ba.  call `setFilterLp`(v8, v6) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.setFilterLp:(I)V` @kind virtual;
  #L4184c0.  v6:= v2.`org.mozilla.javascript.Parser$b.c` @type ^`int`;
  #L4184c4.  v6:= v6 - v7 @kind int;
  #L4184c6.  call `setFilterRp`(v8, v6) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.setFilterRp:(I)V` @kind virtual;
  #L4184cc.  return v8 @kind object;
}
procedure `org.mozilla.javascript.ast.GeneratorExpressionLoop` `l0`(`org.mozilla.javascript.Parser` v9 @kind this) @signature `Lorg/mozilla/javascript/Parser;.l0:()Lorg/mozilla/javascript/ast/GeneratorExpressionLoop;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L41a6ec.  call temp:= `L0`(v9) @signature `Lorg/mozilla/javascript/Parser;.L0:()I` @kind direct;
  #L41a6f2.  v0:= temp;
  #L41a6f4.  v1:= 0I;
  #L41a6f6.  v2:= 119I;
  #L41a6fa.  if v0 != v2 then goto L41a82a;
  #L41a6fe.  v0:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a702.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41a706.  v2:= new `org.mozilla.javascript.ast.GeneratorExpressionLoop`;
  #L41a70a.  call `<init>`(v2, v0) @signature `Lorg/mozilla/javascript/ast/GeneratorExpressionLoop;.<init>:(I)V` @kind direct;
  #L41a710.  call `d1`(v9, v2) @signature `Lorg/mozilla/javascript/Parser;.d1:(Lorg/mozilla/javascript/ast/Scope;)V` @kind virtual;
  #L41a716.  v3:= 87I;
  #L41a71a.  v4:= "msg.no.paren.for" @kind object;
  #L41a71e.  call temp:= `G0`(v9, v3, v4) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41a724.  v3:= temp;
  #L41a726.  v4:= -1I;
  #L41a728.  if v3 == 0 then goto L41a738;
  #L41a72c.  v3:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a730.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41a734.  v3:= v3 - v0 @kind int;
  #L41a736.  goto L41a73a;
  #L41a738.  v3:= -1I;
  #L41a73a.  call temp:= `W0`(v9) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41a740.  v5:= temp;
  #L41a742.  v6:= 39I;
  #L41a746.  if v5 == v6 then goto L41a776;
  #L41a74a.  v7:= 83I;
  #L41a74e.  if v5 == v7 then goto L41a766;
  #L41a752.  v7:= 85I;
  #L41a756.  if v5 == v7 then goto L41a766;
  #L41a75a.  v5:= "msg.bad.var" @kind object;
  #L41a75e.  call `i1`(v9, v5) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41a764.  goto L41a784;
  #L41a766.  call temp:= `Y`(v9) @signature `Lorg/mozilla/javascript/Parser;.Y:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41a76c.  v1:= temp @kind object;
  #L41a76e.  call `z0`(v9, v1) @signature `Lorg/mozilla/javascript/Parser;.z0:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41a774.  goto L41a784;
  #L41a776.  call `M`(v9) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41a77c.  call temp:= `P`(v9) @signature `Lorg/mozilla/javascript/Parser;.P:()Lorg/mozilla/javascript/ast/Name;` @kind direct;
  #L41a782.  v1:= temp @kind object;
  #L41a784.  call temp:= `getType`(v1) @signature `Lorg/mozilla/javascript/Node;.getType:()I` @kind virtual;
  #L41a78a.  v5:= temp;
  #L41a78c.  if v5 != v6 then goto L41a7a8;
  #L41a790.  v5:= 153I;
  #L41a794.  v6:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a798.  call temp:= `q`(v6) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L41a79e.  v6:= temp @kind object;
  #L41a7a0.  v7:= 1I;
  #L41a7a2.  call `U`(v9, v5, v6, v7) @signature `Lorg/mozilla/javascript/Parser;.U:(ILjava/lang/String;Z)V` @kind virtual;
  #L41a7a8.  v5:= 52I;
  #L41a7ac.  v6:= "msg.in.after.for.name" @kind object;
  #L41a7b0.  call temp:= `G0`(v9, v5, v6) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41a7b6.  v5:= temp;
  #L41a7b8.  if v5 == 0 then goto L41a7c8;
  #L41a7bc.  v5:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a7c0.  v5:= v5.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41a7c4.  v5:= v5 - v0 @kind int;
  #L41a7c6.  goto L41a7ca;
  #L41a7c8.  v5:= -1I;
  #L41a7ca.  call temp:= `f0`(v9) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41a7d0.  v6:= temp @kind object;
  #L41a7d2.  v7:= 88I;
  #L41a7d6.  v8:= "msg.no.paren.for.ctrl" @kind object;
  #L41a7da.  call temp:= `G0`(v9, v7, v8) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41a7e0.  v7:= temp;
  #L41a7e2.  if v7 == 0 then goto L41a7f0;
  #L41a7e6.  v4:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a7ea.  v4:= v4.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41a7ee.  v4:= v4 - v0 @kind int;
  #L41a7f0.  v7:= v9.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a7f4.  v7:= v7.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41a7f8.  v7:= v7 - v0 @kind int;
  #L41a7fa.  call `setLength`(v2, v7) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L41a800.  call `setIterator`(v2, v1) @signature `Lorg/mozilla/javascript/ast/ForInLoop;.setIterator:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41a806.  call `setIteratedObject`(v2, v6) @signature `Lorg/mozilla/javascript/ast/ForInLoop;.setIteratedObject:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41a80c.  call `setInPosition`(v2, v5) @signature `Lorg/mozilla/javascript/ast/ForInLoop;.setInPosition:(I)V` @kind virtual;
  #L41a812.  call `setParens`(v2, v3, v4) @signature `Lorg/mozilla/javascript/ast/Loop;.setParens:(II)V` @kind virtual;
  #L41a818.  call `Z0`(v9) @signature `Lorg/mozilla/javascript/Parser;.Z0:()V` @kind virtual;
  #L41a81e.  return v2 @kind object;
  #L41a820.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41a822.  call `Z0`(v9) @signature `Lorg/mozilla/javascript/Parser;.Z0:()V` @kind virtual;
  #L41a828.  throw v0;
  #L41a82a.  call temp:= `J`(v9) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L41a830.  throw v1;
  catch `java.lang.Throwable` @[L41a71a..L41a818] goto L41a820;
}
procedure `org.mozilla.javascript.ast.Comment` `m0`(`org.mozilla.javascript.Parser` v2 @kind this) @signature `Lorg/mozilla/javascript/Parser;.m0:()Lorg/mozilla/javascript/ast/Comment;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L41a254.  v0:= v2.`org.mozilla.javascript.Parser.m` @type ^`org.mozilla.javascript.ast.Comment` @kind object;
  #L41a258.  v1:= 0I;
  #L41a25a.  v2.`org.mozilla.javascript.Parser.m` @type ^`org.mozilla.javascript.ast.Comment` := v1 @kind object;
  #L41a25e.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `m1`(`org.mozilla.javascript.Parser` v8 @kind this, `int` v9 , `boolean` v10 ) @signature `Lorg/mozilla/javascript/Parser;.m1:(IZ)Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L419534.  call temp:= `s0`(v8) @signature `Lorg/mozilla/javascript/Parser;.s0:()Z` @kind virtual;
  #L41953a.  v0:= temp;
  #L41953c.  v1:= "msg.bad.yield" @kind object;
  #L419540.  v2:= 4I;
  #L419542.  if v0 != 0 then goto L419558;
  #L419546.  if v9 != v2 then goto L419550;
  #L41954a.  v0:= "msg.bad.return" @kind object;
  #L41954e.  goto L419552;
  #L419550.  v0:= v1 @kind object;
  #L419552.  call `i1`(v8, v0) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L419558.  call `M`(v8) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41955e.  v0:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419562.  v3:= v0.`org.mozilla.javascript.u.o` @type ^`int`;
  #L419566.  v4:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41956a.  v0:= v0.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41956e.  v5:= 0I;
  #L419570.  call temp:= `X0`(v8) @signature `Lorg/mozilla/javascript/Parser;.X0:()I` @kind direct;
  #L419576.  v6:= temp;
  #L419578.  v7:= -1I;
  #L41957a.  if v6 == v7 then goto L4195c0;
  #L41957e.  if v6 == 0 then goto L4195c0;
  #L419582.  v7:= 1I;
  #L419584.  if v6 == v7 then goto L4195c0;
  #L419588.  v7:= 72I;
  #L41958c.  if v6 == v7 then goto L4195c0;
  #L419590.  v7:= 82I;
  #L419594.  if v6 == v7 then goto L4195c0;
  #L419598.  v7:= 84I;
  #L41959c.  if v6 == v7 then goto L4195c0;
  #L4195a0.  v7:= 86I;
  #L4195a4.  if v6 == v7 then goto L4195c0;
  #L4195a8.  v7:= 88I;
  #L4195ac.  if v6 == v7 then goto L4195c0;
  #L4195b0.  call temp:= `f0`(v8) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4195b6.  v5:= temp @kind object;
  #L4195b8.  call temp:= `o0`(v8, v5) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L4195be.  v0:= temp;
  #L4195c0.  v6:= v8.`org.mozilla.javascript.Parser.r` @type ^`int`;
  #L4195c4.  v7:= "" @kind object;
  #L4195c8.  if v9 != v2 then goto L419604;
  #L4195cc.  if v5 != 0 then goto L4195d2;
  #L4195d0.  v2:= 2I;
  #L4195d2.  v9:= v6 ^| v2 @kind int;
  #L4195d6.  v8.`org.mozilla.javascript.Parser.r` @type ^`int` := v9;
  #L4195da.  v9:= new `org.mozilla.javascript.ast.ReturnStatement`;
  #L4195de.  v0:= v0 - v4 @kind int;
  #L4195e0.  call `<init>`(v9, v4, v0, v5) @signature `Lorg/mozilla/javascript/ast/ReturnStatement;.<init>:(IILorg/mozilla/javascript/ast/AstNode;)V` @kind direct;
  #L4195e6.  v10:= v8.`org.mozilla.javascript.Parser.r` @type ^`int`;
  #L4195ea.  v1:= 6I;
  #L4195ec.  call temp:= `N0`(v6, v10, v1) @signature `Lorg/mozilla/javascript/Parser;.N0:(III)Z` @kind static;
  #L4195f2.  v10:= temp;
  #L4195f4.  if v10 == 0 then goto L41964a;
  #L4195f8.  v10:= "msg.return.inconsistent" @kind object;
  #L4195fc.  call `q`(v8, v10, v7, v4, v0) @signature `Lorg/mozilla/javascript/Parser;.q:(Ljava/lang/String;Ljava/lang/String;II)V` @kind virtual;
  #L419602.  goto L41964a;
  #L419604.  call temp:= `s0`(v8) @signature `Lorg/mozilla/javascript/Parser;.s0:()Z` @kind virtual;
  #L41960a.  v9:= temp;
  #L41960c.  if v9 != 0 then goto L419616;
  #L419610.  call `i1`(v8, v1) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L419616.  v9:= v8.`org.mozilla.javascript.Parser.r` @type ^`int`;
  #L41961a.  v9:= v9 ^| 8;
  #L41961e.  v8.`org.mozilla.javascript.Parser.r` @type ^`int` := v9;
  #L419622.  v9:= new `org.mozilla.javascript.ast.Yield`;
  #L419626.  v0:= v0 - v4 @kind int;
  #L419628.  call `<init>`(v9, v4, v0, v5) @signature `Lorg/mozilla/javascript/ast/Yield;.<init>:(IILorg/mozilla/javascript/ast/AstNode;)V` @kind direct;
  #L41962e.  call `setRequiresActivation`(v8) @signature `Lorg/mozilla/javascript/Parser;.setRequiresActivation:()V` @kind virtual;
  #L419634.  call `setIsGenerator`(v8) @signature `Lorg/mozilla/javascript/Parser;.setIsGenerator:()V` @kind virtual;
  #L41963a.  if v10 != 0 then goto L41964a;
  #L41963e.  v10:= new `org.mozilla.javascript.ast.ExpressionStatement`;
  #L419642.  call `<init>`(v10, v9) @signature `Lorg/mozilla/javascript/ast/ExpressionStatement;.<init>:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind direct;
  #L419648.  v9:= v10 @kind object;
  #L41964a.  call temp:= `s0`(v8) @signature `Lorg/mozilla/javascript/Parser;.s0:()Z` @kind virtual;
  #L419650.  v10:= temp;
  #L419652.  if v10 == 0 then goto L4196aa;
  #L419656.  v10:= v8.`org.mozilla.javascript.Parser.r` @type ^`int`;
  #L41965a.  v0:= 12I;
  #L41965e.  call temp:= `N0`(v6, v10, v0) @signature `Lorg/mozilla/javascript/Parser;.N0:(III)Z` @kind static;
  #L419664.  v10:= temp;
  #L419666.  if v10 == 0 then goto L4196aa;
  #L41966a.  v10:= v8.`org.mozilla.javascript.Parser.p` @type ^`org.mozilla.javascript.ast.ScriptNode` @kind object;
  #L41966e.  v10:= (`org.mozilla.javascript.ast.FunctionNode`) v10 @kind object;
  #L419672.  call temp:= `getFunctionName`(v10) @signature `Lorg/mozilla/javascript/ast/FunctionNode;.getFunctionName:()Lorg/mozilla/javascript/ast/Name;` @kind virtual;
  #L419678.  v10:= temp @kind object;
  #L41967a.  if v10 == 0 then goto L4196a0;
  #L41967e.  call temp:= `length`(v10) @signature `Lorg/mozilla/javascript/ast/Name;.length:()I` @kind virtual;
  #L419684.  v0:= temp;
  #L419686.  if v0 != 0 then goto L41968c;
  #L41968a.  goto L4196a0;
  #L41968c.  call temp:= `getIdentifier`(v10) @signature `Lorg/mozilla/javascript/ast/Name;.getIdentifier:()Ljava/lang/String;` @kind virtual;
  #L419692.  v10:= temp @kind object;
  #L419694.  v0:= "msg.generator.returns" @kind object;
  #L419698.  call `m`(v8, v0, v10) @signature `Lorg/mozilla/javascript/Parser;.m:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L41969e.  goto L4196aa;
  #L4196a0.  v10:= "msg.anon.generator.returns" @kind object;
  #L4196a4.  call `m`(v8, v10, v7) @signature `Lorg/mozilla/javascript/Parser;.m:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L4196aa.  call `setLineno`(v9, v3) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L4196b0.  return v9 @kind object;
}
procedure `java.lang.String` `n0`(`org.mozilla.javascript.Parser` v1 @kind this, `org.mozilla.javascript.ast.AstNode` v2 @kind object) @signature `Lorg/mozilla/javascript/Parser;.n0:(Lorg/mozilla/javascript/ast/AstNode;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L417340.  v0:= instanceof @variable v2 @type ^`org.mozilla.javascript.ast.ExpressionStatement` @kind boolean;
  #L417344.  if v0 == 0 then goto L41736a;
  #L417348.  v2:= (`org.mozilla.javascript.ast.ExpressionStatement`) v2 @kind object;
  #L41734c.  call temp:= `getExpression`(v2) @signature `Lorg/mozilla/javascript/ast/ExpressionStatement;.getExpression:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L417352.  v2:= temp @kind object;
  #L417354.  v0:= instanceof @variable v2 @type ^`org.mozilla.javascript.ast.StringLiteral` @kind boolean;
  #L417358.  if v0 == 0 then goto L41736a;
  #L41735c.  v2:= (`org.mozilla.javascript.ast.StringLiteral`) v2 @kind object;
  #L417360.  call temp:= `getValue`(v2) @signature `Lorg/mozilla/javascript/ast/StringLiteral;.getValue:()Ljava/lang/String;` @kind virtual;
  #L417366.  v2:= temp @kind object;
  #L417368.  return v2 @kind object;
  #L41736a.  v2:= 0I;
  #L41736c.  return v2 @kind object;
}
procedure `void` `n1`(`org.mozilla.javascript.Parser` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lorg/mozilla/javascript/Parser;.n1:(ILjava/lang/String;I)V` @AccessFlag PRIVATE {
    temp;

  #L41c5f8.  v0.`org.mozilla.javascript.Parser.w` @type ^`int` := v1;
  #L41c5fc.  v0.`org.mozilla.javascript.Parser.x` @type ^`java.lang.String` := v2 @kind object;
  #L41c600.  v0.`org.mozilla.javascript.Parser.y` @type ^`int` := v3;
  #L41c604.  return @kind void;
}
procedure `org.mozilla.javascript.ast.AstNode` `o`(`org.mozilla.javascript.Parser` v5 @kind this) @signature `Lorg/mozilla/javascript/Parser;.o:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L417af8.  call temp:= `E0`(v5) @signature `Lorg/mozilla/javascript/Parser;.E0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417afe.  v0:= temp @kind object;
  #L417b00.  call temp:= `W0`(v5) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L417b06.  v1:= temp;
  #L417b08.  v2:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417b0c.  v2:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L417b10.  v3:= 21I;
  #L417b14.  if v1 == v3 then goto L417b24;
  #L417b18.  v3:= 22I;
  #L417b1c.  if v1 != v3 then goto L417b22;
  #L417b20.  goto L417b24;
  #L417b22.  return v0 @kind object;
  #L417b24.  call `M`(v5) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L417b2a.  v3:= new `org.mozilla.javascript.ast.InfixExpression`;
  #L417b2e.  call temp:= `E0`(v5) @signature `Lorg/mozilla/javascript/Parser;.E0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417b34.  v4:= temp @kind object;
  #L417b36.  call `<init>`(v3, v1, v0, v4, v2) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.<init>:(ILorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;I)V` @kind direct;
  #L417b3c.  v0:= v3 @kind object;
  #L417b3e.  goto L417b00;
}
procedure `int` `o0`(`org.mozilla.javascript.Parser` v1 @kind this, `org.mozilla.javascript.ast.AstNode` v2 @kind object) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4170bc.  call temp:= `getPosition`(v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L4170c2.  v0:= temp;
  #L4170c4.  call temp:= `getLength`(v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.getLength:()I` @kind virtual;
  #L4170ca.  v2:= temp;
  #L4170cc.  v0:= v0 + v2 @kind int;
  #L4170ce.  return v0;
}
procedure `org.mozilla.javascript.ast.AstNode` `o1`(`org.mozilla.javascript.Parser` v5 @kind this) @signature `Lorg/mozilla/javascript/Parser;.o1:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4196c4.  call temp:= `o`(v5) @signature `Lorg/mozilla/javascript/Parser;.o:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4196ca.  v0:= temp @kind object;
  #L4196cc.  call temp:= `W0`(v5) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L4196d2.  v1:= temp;
  #L4196d4.  v2:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4196d8.  v2:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L4196dc.  goto L419704;
  #L4196e2.  goto L419700;
  #L4196e4.  call `M`(v5) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L4196ea.  v3:= new `org.mozilla.javascript.ast.InfixExpression`;
  #L4196ee.  call temp:= `o`(v5) @signature `Lorg/mozilla/javascript/Parser;.o:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4196f4.  v4:= temp @kind object;
  #L4196f6.  call `<init>`(v3, v1, v0, v4, v2) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.<init>:(ILorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;I)V` @kind direct;
  #L4196fc.  v0:= v3 @kind object;
  #L4196fe.  goto L4196cc;
  #L419700.  return v0 @kind object;
  #L419702.  
  #L419704.  switch v1
                  | 18 => goto L4196e4
                  | 19 => goto L4196e4
                  | 20 => goto L4196e4
                  | else => goto L4196e2;
}
procedure `int` `p0`(`org.mozilla.javascript.Parser` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lorg/mozilla/javascript/Parser;.p0:(Ljava/lang/String;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4170e0.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4170e6.  v0:= temp;
  #L4170e8.  v0:= v0 + -1;
  #L4170ec.  v1:= 0I;
  #L4170ee.  if v0 < 0 then goto L41710c;
  #L4170f2.  call temp:= `charAt`(v5, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4170f8.  v2:= temp;
  #L4170fa.  v3:= 10I;
  #L4170fe.  if v2 != v3 then goto L417106;
  #L417102.  v1:= v1 + 1;
  #L417106.  v0:= v0 + -1;
  #L41710a.  goto L4170ee;
  #L41710c.  return v1;
}
procedure `org.mozilla.javascript.ast.AstNode` `p1`(`org.mozilla.javascript.Parser` v6 @kind this) @signature `Lorg/mozilla/javascript/Parser;.p1:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L419728.  v0:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41972c.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419730.  call temp:= `q1`(v6) @signature `Lorg/mozilla/javascript/Parser;.q1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419736.  v1:= temp @kind object;
  #L419738.  if v1 == 0 then goto L419798;
  #L41973c.  v2:= v6.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L419740.  call temp:= `isStrictMode`(v2) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isStrictMode:()Z` @kind virtual;
  #L419746.  v2:= temp;
  #L419748.  if v2 == 0 then goto L419796;
  #L41974c.  call temp:= `hasSideEffects`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.hasSideEffects:()Z` @kind virtual;
  #L419752.  v2:= temp;
  #L419754.  if v2 != 0 then goto L419796;
  #L419758.  call temp:= `getPosition`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L41975e.  v2:= temp;
  #L419760.  call temp:= `v0`(v6, v2) @signature `Lorg/mozilla/javascript/Parser;.v0:(I)I` @kind direct;
  #L419766.  v3:= temp;
  #L419768.  call temp:= `max`(v2, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L41976e.  v2:= temp;
  #L419770.  v3:= instanceof @variable v1 @type ^`org.mozilla.javascript.ast.EmptyStatement` @kind boolean;
  #L419774.  if v3 == 0 then goto L41977e;
  #L419778.  v3:= "msg.extra.trailing.semi" @kind object;
  #L41977c.  goto L419782;
  #L41977e.  v3:= "msg.no.side.effects" @kind object;
  #L419782.  v4:= "" @kind object;
  #L419786.  call temp:= `M0`(v6, v1) @signature `Lorg/mozilla/javascript/Parser;.M0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41978c.  v5:= temp;
  #L41978e.  v5:= v5 - v2 @kind int;
  #L419790.  call `q`(v6, v3, v4, v2, v5) @signature `Lorg/mozilla/javascript/Parser;.q:(Ljava/lang/String;Ljava/lang/String;II)V` @kind virtual;
  #L419796.  return v1 @kind object;
  #L419798.  call temp:= `X0`(v6) @signature `Lorg/mozilla/javascript/Parser;.X0:()I` @kind direct;
  #L41979e.  v1:= temp;
  #L4197a0.  call `M`(v6) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L4197a6.  v2:= -1I;
  #L4197a8.  if v1 == v2 then goto L4197c0;
  #L4197ac.  if v1 == 0 then goto L4197c0;
  #L4197b0.  v2:= 1I;
  #L4197b2.  if v1 == v2 then goto L4197c0;
  #L4197b6.  v2:= 82I;
  #L4197ba.  if v1 == v2 then goto L4197c0;
  #L4197be.  goto L419798;
  #L4197c0.  v1:= new `org.mozilla.javascript.ast.EmptyStatement`;
  #L4197c4.  v2:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4197c8.  v2:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L4197cc.  v2:= v2 - v0 @kind int;
  #L4197ce.  call `<init>`(v1, v0, v2) @signature `Lorg/mozilla/javascript/ast/EmptyStatement;.<init>:(II)V` @kind direct;
  #L4197d4.  return v1 @kind object;
  catch `org.mozilla.javascript.Parser$c` @[L419730..L419796] goto L419798;
}
procedure `org.mozilla.javascript.ast.ObjectProperty` `q0`(`org.mozilla.javascript.Parser` v2 @kind this, `int` v3 , `org.mozilla.javascript.ast.AstNode` v4 @kind object, `boolean` v5 ) @signature `Lorg/mozilla/javascript/Parser;.q0:(ILorg/mozilla/javascript/ast/AstNode;Z)Lorg/mozilla/javascript/ast/ObjectProperty;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L41af48.  v0:= 2I;
  #L41af4a.  call temp:= `i0`(v2, v0) @signature `Lorg/mozilla/javascript/Parser;.i0:(I)Lorg/mozilla/javascript/ast/FunctionNode;` @kind direct;
  #L41af50.  v0:= temp @kind object;
  #L41af52.  call temp:= `getFunctionName`(v0) @signature `Lorg/mozilla/javascript/ast/FunctionNode;.getFunctionName:()Lorg/mozilla/javascript/ast/Name;` @kind virtual;
  #L41af58.  v1:= temp @kind object;
  #L41af5a.  if v1 == 0 then goto L41af74;
  #L41af5e.  call temp:= `length`(v1) @signature `Lorg/mozilla/javascript/ast/Name;.length:()I` @kind virtual;
  #L41af64.  v1:= temp;
  #L41af66.  if v1 == 0 then goto L41af74;
  #L41af6a.  v1:= "msg.bad.prop" @kind object;
  #L41af6e.  call `i1`(v2, v1) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41af74.  v1:= new `org.mozilla.javascript.ast.ObjectProperty`;
  #L41af78.  call `<init>`(v1, v3) @signature `Lorg/mozilla/javascript/ast/ObjectProperty;.<init>:(I)V` @kind direct;
  #L41af7e.  if v5 == 0 then goto L41af8a;
  #L41af82.  call `setIsGetter`(v1) @signature `Lorg/mozilla/javascript/ast/ObjectProperty;.setIsGetter:()V` @kind virtual;
  #L41af88.  goto L41af90;
  #L41af8a.  call `setIsSetter`(v1) @signature `Lorg/mozilla/javascript/ast/ObjectProperty;.setIsSetter:()V` @kind virtual;
  #L41af90.  call temp:= `o0`(v2, v0) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41af96.  v5:= temp;
  #L41af98.  call `setLeft`(v1, v4) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.setLeft:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41af9e.  call `setRight`(v1, v0) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.setRight:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41afa4.  v5:= v5 - v3 @kind int;
  #L41afa6.  call `setLength`(v1, v5) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L41afac.  return v1 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `q1`(`org.mozilla.javascript.Parser` v5 @kind this) @signature `Lorg/mozilla/javascript/Parser;.q1:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4197f8.  v0:= v5.`org.mozilla.javascript.Parser.n` @type ^`org.mozilla.javascript.ast.LabeledStatement` @kind object;
  #L4197fc.  if v0 == 0 then goto L419812;
  #L419800.  call temp:= `getStatement`(v0) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.getStatement:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L419806.  v0:= temp @kind object;
  #L419808.  if v0 == 0 then goto L419812;
  #L41980c.  v0:= 0I;
  #L41980e.  v5.`org.mozilla.javascript.Parser.n` @type ^`org.mozilla.javascript.ast.LabeledStatement` := v0 @kind object;
  #L419812.  call temp:= `W0`(v5) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L419818.  v0:= temp;
  #L41981a.  v1:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41981e.  v2:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419822.  v2:= -1I;
  #L419824.  if v0 == v2 then goto L419a30;
  #L419828.  v2:= 4I;
  #L41982a.  if v0 == v2 then goto L419a1e;
  #L41982e.  v2:= 39I;
  #L419832.  if v0 == v2 then goto L419a0a;
  #L419836.  v2:= 50I;
  #L41983a.  if v0 == v2 then goto L419a00;
  #L41983e.  v2:= 72I;
  #L419842.  if v0 == v2 then goto L419a1e;
  #L419846.  v2:= 85I;
  #L41984a.  if v0 == v2 then goto L4199f6;
  #L41984e.  v2:= 109I;
  #L419852.  if v0 == v2 then goto L4199e4;
  #L419856.  v2:= 112I;
  #L41985a.  if v0 == v2 then goto L4199da;
  #L41985e.  v2:= 114I;
  #L419862.  if v0 == v2 then goto L4199d0;
  #L419866.  v2:= 160I;
  #L41986a.  if v0 == v2 then goto L4199a2;
  #L41986e.  v2:= 81I;
  #L419872.  if v0 == v2 then goto L419998;
  #L419876.  v2:= 82I;
  #L41987a.  if v0 == v2 then goto L419966;
  #L41987e.  v3:= 153I;
  #L419882.  if v0 == v3 then goto L419946;
  #L419886.  v2:= 154I;
  #L41988a.  v3:= 1I;
  #L41988c.  if v0 == v2 then goto L41991e;
  #L419890.  goto L419a40;
  #L419896.  v0:= v1.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41989a.  v1:= new `org.mozilla.javascript.ast.ExpressionStatement`;
  #L41989e.  call temp:= `f0`(v5) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4198a4.  v2:= temp @kind object;
  #L4198a6.  call temp:= `s0`(v5) @signature `Lorg/mozilla/javascript/Parser;.s0:()Z` @kind virtual;
  #L4198ac.  v4:= temp;
  #L4198ae.  v3:= v3 ^~ v4 @kind int;
  #L4198b0.  call `<init>`(v1, v2, v3) @signature `Lorg/mozilla/javascript/ast/ExpressionStatement;.<init>:(Lorg/mozilla/javascript/ast/AstNode;Z)V` @kind direct;
  #L4198b6.  call `setLineno`(v1, v0) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L4198bc.  goto L419a28;
  #L4198c0.  v0:= v5.`org.mozilla.javascript.Parser.inUseStrictDirective` @type ^`boolean` @kind boolean;
  #L4198c4.  if v0 == 0 then goto L4198d2;
  #L4198c8.  v0:= "msg.no.with.strict" @kind object;
  #L4198cc.  call `i1`(v5, v0) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L4198d2.  call temp:= `B1`(v5) @signature `Lorg/mozilla/javascript/Parser;.B1:()Lorg/mozilla/javascript/ast/WithStatement;` @kind direct;
  #L4198d8.  v0:= temp @kind object;
  #L4198da.  return v0 @kind object;
  #L4198dc.  call temp:= `N`(v5) @signature `Lorg/mozilla/javascript/Parser;.N:()Lorg/mozilla/javascript/ast/ContinueStatement;` @kind direct;
  #L4198e2.  v1:= temp @kind object;
  #L4198e4.  goto L419a28;
  #L4198e8.  call temp:= `G`(v5) @signature `Lorg/mozilla/javascript/Parser;.G:()Lorg/mozilla/javascript/ast/BreakStatement;` @kind direct;
  #L4198ee.  v1:= temp @kind object;
  #L4198f0.  goto L419a28;
  #L4198f4.  call temp:= `g0`(v5) @signature `Lorg/mozilla/javascript/Parser;.g0:()Lorg/mozilla/javascript/ast/Loop;` @kind direct;
  #L4198fa.  v0:= temp @kind object;
  #L4198fc.  return v0 @kind object;
  #L4198fe.  call temp:= `Z`(v5) @signature `Lorg/mozilla/javascript/Parser;.Z:()Lorg/mozilla/javascript/ast/DoLoop;` @kind direct;
  #L419904.  v0:= temp @kind object;
  #L419906.  return v0 @kind object;
  #L419908.  call temp:= `A1`(v5) @signature `Lorg/mozilla/javascript/Parser;.A1:()Lorg/mozilla/javascript/ast/WhileLoop;` @kind direct;
  #L41990e.  v0:= temp @kind object;
  #L419910.  return v0 @kind object;
  #L419912.  call temp:= `S`(v5) @signature `Lorg/mozilla/javascript/Parser;.S:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419918.  v1:= temp @kind object;
  #L41991a.  goto L419a28;
  #L41991e.  call `M`(v5) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L419924.  v0:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419928.  v1:= v0.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41992c.  v2:= v5.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L419930.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419934.  call temp:= `x1`(v5, v2, v0, v3) @signature `Lorg/mozilla/javascript/Parser;.x1:(IIZ)Lorg/mozilla/javascript/ast/VariableDeclaration;` @kind direct;
  #L41993a.  v0:= temp @kind object;
  #L41993c.  call `setLineno`(v0, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L419942.  v1:= v0 @kind object;
  #L419944.  goto L419a28;
  #L419946.  call temp:= `u0`(v5) @signature `Lorg/mozilla/javascript/Parser;.u0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41994c.  v1:= temp @kind object;
  #L41994e.  v0:= instanceof @variable v1 @type ^`org.mozilla.javascript.ast.VariableDeclaration` @kind boolean;
  #L419952.  if v0 == 0 then goto L419964;
  #L419956.  call temp:= `W0`(v5) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41995c.  v0:= temp;
  #L41995e.  if v0 != v2 then goto L419964;
  #L419962.  goto L419a28;
  #L419964.  return v1 @kind object;
  #L419966.  call `M`(v5) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41996c.  v0:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419970.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419974.  v1:= new `org.mozilla.javascript.ast.EmptyStatement`;
  #L419978.  v2:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41997c.  v2:= v2.`org.mozilla.javascript.u.w` @type ^`int`;
  #L419980.  v2:= v2 - v0 @kind int;
  #L419982.  call `<init>`(v1, v0, v2) @signature `Lorg/mozilla/javascript/ast/EmptyStatement;.<init>:(II)V` @kind direct;
  #L419988.  v0:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41998c.  v0:= v0.`org.mozilla.javascript.u.o` @type ^`int`;
  #L419990.  call `setLineno`(v1, v0) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L419996.  return v1 @kind object;
  #L419998.  call temp:= `v1`(v5) @signature `Lorg/mozilla/javascript/Parser;.v1:()Lorg/mozilla/javascript/ast/TryStatement;` @kind direct;
  #L41999e.  v0:= temp @kind object;
  #L4199a0.  return v0 @kind object;
  #L4199a2.  call `M`(v5) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L4199a8.  v1:= new `org.mozilla.javascript.ast.KeywordLiteral`;
  #L4199ac.  v2:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4199b0.  v3:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L4199b4.  v2:= v2.`org.mozilla.javascript.u.w` @type ^`int`;
  #L4199b8.  v2:= v2 - v3 @kind int;
  #L4199ba.  call `<init>`(v1, v3, v2, v0) @signature `Lorg/mozilla/javascript/ast/KeywordLiteral;.<init>:(III)V` @kind direct;
  #L4199c0.  v0:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4199c4.  v0:= v0.`org.mozilla.javascript.u.o` @type ^`int`;
  #L4199c8.  call `setLineno`(v1, v0) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L4199ce.  goto L419a28;
  #L4199d0.  call temp:= `t1`(v5) @signature `Lorg/mozilla/javascript/Parser;.t1:()Lorg/mozilla/javascript/ast/SwitchStatement;` @kind direct;
  #L4199d6.  v0:= temp @kind object;
  #L4199d8.  return v0 @kind object;
  #L4199da.  call temp:= `r0`(v5) @signature `Lorg/mozilla/javascript/Parser;.r0:()Lorg/mozilla/javascript/ast/IfStatement;` @kind direct;
  #L4199e0.  v0:= temp @kind object;
  #L4199e2.  return v0 @kind object;
  #L4199e4.  call `M`(v5) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L4199ea.  v0:= 3I;
  #L4199ec.  call temp:= `i0`(v5, v0) @signature `Lorg/mozilla/javascript/Parser;.i0:(I)Lorg/mozilla/javascript/ast/FunctionNode;` @kind direct;
  #L4199f2.  v0:= temp @kind object;
  #L4199f4.  return v0 @kind object;
  #L4199f6.  call temp:= `F`(v5) @signature `Lorg/mozilla/javascript/Parser;.F:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4199fc.  v0:= temp @kind object;
  #L4199fe.  return v0 @kind object;
  #L419a00.  call temp:= `u1`(v5) @signature `Lorg/mozilla/javascript/Parser;.u1:()Lorg/mozilla/javascript/ast/ThrowStatement;` @kind direct;
  #L419a06.  v1:= temp @kind object;
  #L419a08.  goto L419a28;
  #L419a0a.  call temp:= `J0`(v5) @signature `Lorg/mozilla/javascript/Parser;.J0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419a10.  v1:= temp @kind object;
  #L419a12.  v0:= instanceof @variable v1 @type ^`org.mozilla.javascript.ast.ExpressionStatement` @kind boolean;
  #L419a16.  if v0 == 0 then goto L419a1c;
  #L419a1a.  goto L419a28;
  #L419a1c.  return v1 @kind object;
  #L419a1e.  v1:= 0I;
  #L419a20.  call temp:= `m1`(v5, v0, v1) @signature `Lorg/mozilla/javascript/Parser;.m1:(IZ)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419a26.  v1:= temp @kind object;
  #L419a28.  call `B`(v5, v1) @signature `Lorg/mozilla/javascript/Parser;.B:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind direct;
  #L419a2e.  return v1 @kind object;
  #L419a30.  call `M`(v5) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L419a36.  call temp:= `y0`(v5) @signature `Lorg/mozilla/javascript/Parser;.y0:()Lorg/mozilla/javascript/ast/ErrorNode;` @kind direct;
  #L419a3c.  v0:= temp @kind object;
  #L419a3e.  return v0 @kind object;
  #L419a40.  switch v0
                  | 116 => goto L419912
                  | 117 => goto L419908
                  | 118 => goto L4198fe
                  | 119 => goto L4198f4
                  | 120 => goto L4198e8
                  | 121 => goto L4198dc
                  | 122 => goto L41991e
                  | 123 => goto L4198c0
                  | else => goto L419896;
}
procedure `org.mozilla.javascript.ast.IfStatement` `r0`(`org.mozilla.javascript.Parser` v8 @kind this) @signature `Lorg/mozilla/javascript/Parser;.r0:()Lorg/mozilla/javascript/ast/IfStatement;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L41a850.  v0:= v8.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L41a854.  v1:= 0I;
  #L41a856.  v2:= 112I;
  #L41a85a.  if v0 != v2 then goto L41a8fa;
  #L41a85e.  call `M`(v8) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41a864.  v0:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a868.  v2:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41a86c.  v0:= v0.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41a870.  v3:= -1I;
  #L41a872.  call temp:= `L`(v8) @signature `Lorg/mozilla/javascript/Parser;.L:()Lorg/mozilla/javascript/Parser$b;` @kind direct;
  #L41a878.  v4:= temp @kind object;
  #L41a87a.  call temp:= `p1`(v8) @signature `Lorg/mozilla/javascript/Parser;.p1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41a880.  v5:= temp @kind object;
  #L41a882.  v6:= 113I;
  #L41a886.  call temp:= `B0`(v8, v6) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41a88c.  v6:= temp;
  #L41a88e.  if v6 == 0 then goto L41a8a6;
  #L41a892.  v1:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a896.  v1:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41a89a.  v3:= v1 - v2 @kind int;
  #L41a89e.  call temp:= `p1`(v8) @signature `Lorg/mozilla/javascript/Parser;.p1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41a8a4.  v1:= temp @kind object;
  #L41a8a6.  if v1 == 0 then goto L41a8ae;
  #L41a8aa.  v6:= v1 @kind object;
  #L41a8ac.  goto L41a8b0;
  #L41a8ae.  v6:= v5 @kind object;
  #L41a8b0.  call temp:= `o0`(v8, v6) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41a8b6.  v6:= temp;
  #L41a8b8.  v7:= new `org.mozilla.javascript.ast.IfStatement`;
  #L41a8bc.  v6:= v6 - v2 @kind int;
  #L41a8be.  call `<init>`(v7, v2, v6) @signature `Lorg/mozilla/javascript/ast/IfStatement;.<init>:(II)V` @kind direct;
  #L41a8c4.  v6:= v4.`org.mozilla.javascript.Parser$b.a` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L41a8c8.  call `setCondition`(v7, v6) @signature `Lorg/mozilla/javascript/ast/IfStatement;.setCondition:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41a8ce.  v6:= v4.`org.mozilla.javascript.Parser$b.b` @type ^`int`;
  #L41a8d2.  v6:= v6 - v2 @kind int;
  #L41a8d4.  v4:= v4.`org.mozilla.javascript.Parser$b.c` @type ^`int`;
  #L41a8d8.  v4:= v4 - v2 @kind int;
  #L41a8da.  call `setParens`(v7, v6, v4) @signature `Lorg/mozilla/javascript/ast/IfStatement;.setParens:(II)V` @kind virtual;
  #L41a8e0.  call `setThenPart`(v7, v5) @signature `Lorg/mozilla/javascript/ast/IfStatement;.setThenPart:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41a8e6.  call `setElsePart`(v7, v1) @signature `Lorg/mozilla/javascript/ast/IfStatement;.setElsePart:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41a8ec.  call `setElsePosition`(v7, v3) @signature `Lorg/mozilla/javascript/ast/IfStatement;.setElsePosition:(I)V` @kind virtual;
  #L41a8f2.  call `setLineno`(v7, v0) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41a8f8.  return v7 @kind object;
  #L41a8fa.  call temp:= `J`(v8) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L41a900.  throw v1;
}
procedure `org.mozilla.javascript.ast.AstNode` `r1`(`org.mozilla.javascript.Parser` v1 @kind this) @signature `Lorg/mozilla/javascript/Parser;.r1:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L419a78.  v0:= 0I;
  #L419a7a.  call temp:= `s1`(v1, v0) @signature `Lorg/mozilla/javascript/Parser;.s1:(Lorg/mozilla/javascript/ast/AstNode;)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419a80.  v0:= temp @kind object;
  #L419a82.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `s1`(`org.mozilla.javascript.Parser` v3 @kind this, `org.mozilla.javascript.ast.AstNode` v4 @kind object) @signature `Lorg/mozilla/javascript/Parser;.s1:(Lorg/mozilla/javascript/ast/AstNode;)Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L419a94.  v0:= v3.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L419a98.  v1:= 85I;
  #L419a9c.  if v0 == v1 then goto L419abc;
  #L419aa0.  v0:= v3.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L419aa4.  call temp:= `isIdeMode`(v0) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isIdeMode:()Z` @kind virtual;
  #L419aaa.  v0:= temp;
  #L419aac.  if v0 == 0 then goto L419ab2;
  #L419ab0.  goto L419abc;
  #L419ab2.  call temp:= `J`(v3) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L419ab8.  v4:= 0I;
  #L419aba.  throw v4;
  #L419abc.  v0:= v3.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419ac0.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419ac4.  if v4 == 0 then goto L419aca;
  #L419ac8.  goto L419ad4;
  #L419aca.  v4:= new `org.mozilla.javascript.ast.Block`;
  #L419ace.  call `<init>`(v4, v0) @signature `Lorg/mozilla/javascript/ast/Block;.<init>:(I)V` @kind direct;
  #L419ad4.  v1:= v3.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419ad8.  v1:= v1.`org.mozilla.javascript.u.o` @type ^`int`;
  #L419adc.  call `setLineno`(v4, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L419ae2.  call temp:= `W0`(v3) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L419ae8.  v1:= temp;
  #L419aea.  if v1 <= 0 then goto L419b06;
  #L419aee.  v2:= 86I;
  #L419af2.  if v1 == v2 then goto L419b06;
  #L419af6.  call temp:= `p1`(v3) @signature `Lorg/mozilla/javascript/Parser;.p1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419afc.  v1:= temp @kind object;
  #L419afe.  call `addChild`(v4, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.addChild:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L419b04.  goto L419ae2;
  #L419b06.  v1:= v3.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419b0a.  v1:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419b0e.  v1:= v1 - v0 @kind int;
  #L419b10.  call `setLength`(v4, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L419b16.  return v4 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `t0`(`org.mozilla.javascript.Parser` v5 @kind this, `boolean` v6 , `int` v7 ) @signature `Lorg/mozilla/javascript/Parser;.t0:(ZI)Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4184e0.  v0:= new `org.mozilla.javascript.ast.LetNode`;
  #L4184e4.  call `<init>`(v0, v7) @signature `Lorg/mozilla/javascript/ast/LetNode;.<init>:(I)V` @kind direct;
  #L4184ea.  v1:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4184ee.  v1:= v1.`org.mozilla.javascript.u.o` @type ^`int`;
  #L4184f2.  call `setLineno`(v0, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L4184f8.  v1:= 87I;
  #L4184fc.  v2:= "msg.no.paren.after.let" @kind object;
  #L418500.  call temp:= `G0`(v5, v1, v2) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L418506.  v1:= temp;
  #L418508.  if v1 == 0 then goto L41851c;
  #L41850c.  v1:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418510.  v1:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L418514.  v1:= v1 - v7 @kind int;
  #L418516.  call `setLp`(v0, v1) @signature `Lorg/mozilla/javascript/ast/LetNode;.setLp:(I)V` @kind virtual;
  #L41851c.  call `d1`(v5, v0) @signature `Lorg/mozilla/javascript/Parser;.d1:(Lorg/mozilla/javascript/ast/Scope;)V` @kind virtual;
  #L418522.  v1:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418526.  v1:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41852a.  v2:= 153I;
  #L41852e.  call temp:= `x1`(v5, v2, v1, v6) @signature `Lorg/mozilla/javascript/Parser;.x1:(IIZ)Lorg/mozilla/javascript/ast/VariableDeclaration;` @kind direct;
  #L418534.  v1:= temp @kind object;
  #L418536.  call `setVariables`(v0, v1) @signature `Lorg/mozilla/javascript/ast/LetNode;.setVariables:(Lorg/mozilla/javascript/ast/VariableDeclaration;)V` @kind virtual;
  #L41853c.  v1:= 88I;
  #L418540.  v3:= "msg.no.paren.let" @kind object;
  #L418544.  call temp:= `G0`(v5, v1, v3) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41854a.  v1:= temp;
  #L41854c.  if v1 == 0 then goto L418560;
  #L418550.  v1:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L418554.  v1:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L418558.  v1:= v1 - v7 @kind int;
  #L41855a.  call `setRp`(v0, v1) @signature `Lorg/mozilla/javascript/ast/LetNode;.setRp:(I)V` @kind virtual;
  #L418560.  if v6 == 0 then goto L4185c6;
  #L418564.  call temp:= `W0`(v5) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41856a.  v1:= temp;
  #L41856c.  v3:= 85I;
  #L418570.  if v1 != v3 then goto L4185c6;
  #L418574.  call `M`(v5) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41857a.  v6:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41857e.  v6:= v6.`org.mozilla.javascript.u.v` @type ^`int`;
  #L418582.  call temp:= `r1`(v5) @signature `Lorg/mozilla/javascript/Parser;.r1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L418588.  v1:= temp @kind object;
  #L41858a.  v3:= 86I;
  #L41858e.  v4:= "msg.no.curly.let" @kind object;
  #L418592.  call temp:= `G0`(v5, v3, v4) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L418598.  v3:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41859c.  v3:= v3.`org.mozilla.javascript.u.w` @type ^`int`;
  #L4185a0.  v3:= v3 - v6 @kind int;
  #L4185a2.  call `setLength`(v1, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L4185a8.  v6:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4185ac.  v6:= v6.`org.mozilla.javascript.u.w` @type ^`int`;
  #L4185b0.  v6:= v6 - v7 @kind int;
  #L4185b2.  call `setLength`(v0, v6) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L4185b8.  call `setBody`(v0, v1) @signature `Lorg/mozilla/javascript/ast/LetNode;.setBody:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L4185be.  call temp:= `setType`(v0, v2) @signature `Lorg/mozilla/javascript/Node;.setType:(I)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L4185c4.  goto L41861a;
  #L4185c6.  call temp:= `f0`(v5) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4185cc.  v1:= temp @kind object;
  #L4185ce.  call temp:= `o0`(v5, v1) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L4185d4.  v2:= temp;
  #L4185d6.  v2:= v2 - v7 @kind int;
  #L4185d8.  call `setLength`(v0, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L4185de.  call `setBody`(v0, v1) @signature `Lorg/mozilla/javascript/ast/LetNode;.setBody:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L4185e4.  if v6 == 0 then goto L41861a;
  #L4185e8.  v6:= new `org.mozilla.javascript.ast.ExpressionStatement`;
  #L4185ec.  call temp:= `s0`(v5) @signature `Lorg/mozilla/javascript/Parser;.s0:()Z` @kind virtual;
  #L4185f2.  v7:= temp;
  #L4185f4.  if v7 != 0 then goto L4185fc;
  #L4185f8.  v7:= 1I;
  #L4185fa.  goto L4185fe;
  #L4185fc.  v7:= 0I;
  #L4185fe.  call `<init>`(v6, v0, v7) @signature `Lorg/mozilla/javascript/ast/ExpressionStatement;.<init>:(Lorg/mozilla/javascript/ast/AstNode;Z)V` @kind direct;
  #L418604.  call temp:= `getLineno`(v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.getLineno:()I` @kind virtual;
  #L41860a.  v7:= temp;
  #L41860c.  call `setLineno`(v6, v7) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L418612.  call `Z0`(v5) @signature `Lorg/mozilla/javascript/Parser;.Z0:()V` @kind virtual;
  #L418618.  return v6 @kind object;
  #L41861a.  call `Z0`(v5) @signature `Lorg/mozilla/javascript/Parser;.Z0:()V` @kind virtual;
  #L418620.  return v0 @kind object;
  #L418622.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L418624.  call `Z0`(v5) @signature `Lorg/mozilla/javascript/Parser;.Z0:()V` @kind virtual;
  #L41862a.  throw v6;
  catch `java.lang.Throwable` @[L418522..L418612] goto L418622;
}
procedure `org.mozilla.javascript.ast.SwitchStatement` `t1`(`org.mozilla.javascript.Parser` v12 @kind this) @signature `Lorg/mozilla/javascript/Parser;.t1:()Lorg/mozilla/javascript/ast/SwitchStatement;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L41b10c.  v0:= v12.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L41b110.  v1:= 0I;
  #L41b112.  v2:= 114I;
  #L41b116.  if v0 != v2 then goto L41b290;
  #L41b11a.  call `M`(v12) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41b120.  v0:= v12.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b124.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b128.  v2:= new `org.mozilla.javascript.ast.SwitchStatement`;
  #L41b12c.  call `<init>`(v2, v0) @signature `Lorg/mozilla/javascript/ast/SwitchStatement;.<init>:(I)V` @kind direct;
  #L41b132.  v3:= 87I;
  #L41b136.  v4:= "msg.no.paren.switch" @kind object;
  #L41b13a.  call temp:= `G0`(v12, v3, v4) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41b140.  v3:= temp;
  #L41b142.  if v3 == 0 then goto L41b156;
  #L41b146.  v3:= v12.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b14a.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b14e.  v3:= v3 - v0 @kind int;
  #L41b150.  call `setLp`(v2, v3) @signature `Lorg/mozilla/javascript/ast/SwitchStatement;.setLp:(I)V` @kind virtual;
  #L41b156.  v3:= v12.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b15a.  v3:= v3.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41b15e.  call `setLineno`(v2, v3) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41b164.  call temp:= `f0`(v12) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41b16a.  v3:= temp @kind object;
  #L41b16c.  call `setExpression`(v2, v3) @signature `Lorg/mozilla/javascript/ast/SwitchStatement;.setExpression:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41b172.  call `b0`(v12, v2) @signature `Lorg/mozilla/javascript/Parser;.b0:(Lorg/mozilla/javascript/ast/SwitchStatement;)V` @kind direct;
  #L41b178.  v3:= 88I;
  #L41b17c.  v4:= "msg.no.paren.after.switch" @kind object;
  #L41b180.  call temp:= `G0`(v12, v3, v4) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41b186.  v3:= temp;
  #L41b188.  if v3 == 0 then goto L41b19c;
  #L41b18c.  v3:= v12.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b190.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b194.  v3:= v3 - v0 @kind int;
  #L41b196.  call `setRp`(v2, v3) @signature `Lorg/mozilla/javascript/ast/SwitchStatement;.setRp:(I)V` @kind virtual;
  #L41b19c.  v3:= 85I;
  #L41b1a0.  v4:= "msg.no.brace.switch" @kind object;
  #L41b1a4.  call temp:= `G0`(v12, v3, v4) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41b1aa.  v3:= 0I;
  #L41b1ac.  call temp:= `L0`(v12) @signature `Lorg/mozilla/javascript/Parser;.L0:()I` @kind direct;
  #L41b1b2.  v4:= temp;
  #L41b1b4.  v5:= v12.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b1b8.  v5:= v5.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b1bc.  v6:= v12.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b1c0.  v6:= v6.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41b1c4.  v7:= 86I;
  #L41b1c8.  if v4 == v7 then goto L41b26e;
  #L41b1cc.  v8:= "msg.no.colon.case" @kind object;
  #L41b1d0.  v9:= 103I;
  #L41b1d4.  v10:= 116I;
  #L41b1d8.  v11:= 115I;
  #L41b1dc.  if v4 == v11 then goto L41b20a;
  #L41b1e0.  if v4 == v10 then goto L41b1f0;
  #L41b1e4.  v0:= "msg.bad.switch" @kind object;
  #L41b1e8.  call `i1`(v12, v0) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41b1ee.  goto L41b27e;
  #L41b1f0.  if v3 == 0 then goto L41b1fe;
  #L41b1f4.  v3:= "msg.double.switch.default" @kind object;
  #L41b1f8.  call `i1`(v12, v3) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41b1fe.  v3:= 1I;
  #L41b200.  call temp:= `G0`(v12, v9, v8) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41b206.  v4:= v1 @kind object;
  #L41b208.  goto L41b218;
  #L41b20a.  call temp:= `f0`(v12) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41b210.  v4:= temp @kind object;
  #L41b212.  call temp:= `G0`(v12, v9, v8) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41b218.  v8:= new `org.mozilla.javascript.ast.SwitchCase`;
  #L41b21c.  call `<init>`(v8, v5) @signature `Lorg/mozilla/javascript/ast/SwitchCase;.<init>:(I)V` @kind direct;
  #L41b222.  call `setExpression`(v8, v4) @signature `Lorg/mozilla/javascript/ast/SwitchCase;.setExpression:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41b228.  v4:= v12.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b22c.  v4:= v4.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41b230.  v4:= v4 - v0 @kind int;
  #L41b232.  call `setLength`(v8, v4) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L41b238.  call `setLineno`(v8, v6) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41b23e.  call temp:= `W0`(v12) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41b244.  v4:= temp;
  #L41b246.  if v4 == v7 then goto L41b266;
  #L41b24a.  if v4 == v11 then goto L41b266;
  #L41b24e.  if v4 == v10 then goto L41b266;
  #L41b252.  if v4 == 0 then goto L41b266;
  #L41b256.  call temp:= `p1`(v12) @signature `Lorg/mozilla/javascript/Parser;.p1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41b25c.  v4:= temp @kind object;
  #L41b25e.  call `addStatement`(v8, v4) @signature `Lorg/mozilla/javascript/ast/SwitchCase;.addStatement:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41b264.  goto L41b23e;
  #L41b266.  call `addCase`(v2, v8) @signature `Lorg/mozilla/javascript/ast/SwitchStatement;.addCase:(Lorg/mozilla/javascript/ast/SwitchCase;)V` @kind virtual;
  #L41b26c.  goto L41b1ac;
  #L41b26e.  v1:= v12.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b272.  v1:= v1.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41b276.  v1:= v1 - v0 @kind int;
  #L41b278.  call `setLength`(v2, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L41b27e.  call `e0`(v12) @signature `Lorg/mozilla/javascript/Parser;.e0:()V` @kind direct;
  #L41b284.  return v2 @kind object;
  #L41b286.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41b288.  call `e0`(v12) @signature `Lorg/mozilla/javascript/Parser;.e0:()V` @kind direct;
  #L41b28e.  throw v0;
  #L41b290.  call temp:= `J`(v12) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L41b296.  throw v1;
  catch `java.lang.Throwable` @[L41b17c..L41b1c4] goto L41b286;
  catch `java.lang.Throwable` @[L41b1e4..L41b27e] goto L41b286;
}
procedure `org.mozilla.javascript.ast.AstNode` `u`(`org.mozilla.javascript.Parser` v5 @kind this) @signature `Lorg/mozilla/javascript/Parser;.u:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L417b50.  call temp:= `D`(v5) @signature `Lorg/mozilla/javascript/Parser;.D:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417b56.  v0:= temp @kind object;
  #L417b58.  v1:= 105I;
  #L417b5c.  call temp:= `B0`(v5, v1) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L417b62.  v2:= temp;
  #L417b64.  if v2 == 0 then goto L417b84;
  #L417b68.  v2:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417b6c.  v2:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L417b70.  v3:= new `org.mozilla.javascript.ast.InfixExpression`;
  #L417b74.  call temp:= `u`(v5) @signature `Lorg/mozilla/javascript/Parser;.u:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417b7a.  v4:= temp @kind object;
  #L417b7c.  call `<init>`(v3, v1, v0, v4, v2) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.<init>:(ILorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;I)V` @kind direct;
  #L417b82.  v0:= v3 @kind object;
  #L417b84.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `u0`(`org.mozilla.javascript.Parser` v6 @kind this) @signature `Lorg/mozilla/javascript/Parser;.u0:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L418648.  v0:= v6.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L41864c.  v1:= 153I;
  #L418650.  if v0 != v1 then goto L418692;
  #L418654.  call `M`(v6) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41865a.  v0:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41865e.  v2:= v0.`org.mozilla.javascript.u.o` @type ^`int`;
  #L418662.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L418666.  call temp:= `W0`(v6) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41866c.  v3:= temp;
  #L41866e.  v4:= 87I;
  #L418672.  v5:= 1I;
  #L418674.  if v3 != v4 then goto L418682;
  #L418678.  call temp:= `t0`(v6, v5, v0) @signature `Lorg/mozilla/javascript/Parser;.t0:(ZI)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41867e.  v0:= temp @kind object;
  #L418680.  goto L41868a;
  #L418682.  call temp:= `x1`(v6, v1, v0, v5) @signature `Lorg/mozilla/javascript/Parser;.x1:(IIZ)Lorg/mozilla/javascript/ast/VariableDeclaration;` @kind direct;
  #L418688.  v0:= temp @kind object;
  #L41868a.  call `setLineno`(v0, v2) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L418690.  return v0 @kind object;
  #L418692.  call temp:= `J`(v6) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L418698.  v0:= 0I;
  #L41869a.  throw v0;
}
procedure `org.mozilla.javascript.ast.ThrowStatement` `u1`(`org.mozilla.javascript.Parser` v5 @kind this) @signature `Lorg/mozilla/javascript/Parser;.u1:()Lorg/mozilla/javascript/ast/ThrowStatement;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L41b2bc.  v0:= v5.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L41b2c0.  v1:= 50I;
  #L41b2c4.  if v0 != v1 then goto L41b314;
  #L41b2c8.  call `M`(v5) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41b2ce.  v0:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b2d2.  v1:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b2d6.  v0:= v0.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41b2da.  call temp:= `X0`(v5) @signature `Lorg/mozilla/javascript/Parser;.X0:()I` @kind direct;
  #L41b2e0.  v2:= temp;
  #L41b2e2.  v3:= 1I;
  #L41b2e4.  if v2 != v3 then goto L41b2f2;
  #L41b2e8.  v2:= "msg.bad.throw.eol" @kind object;
  #L41b2ec.  call `i1`(v5, v2) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41b2f2.  call temp:= `f0`(v5) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41b2f8.  v2:= temp @kind object;
  #L41b2fa.  v3:= new `org.mozilla.javascript.ast.ThrowStatement`;
  #L41b2fe.  call temp:= `o0`(v5, v2) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41b304.  v4:= temp;
  #L41b306.  call `<init>`(v3, v1, v4, v2) @signature `Lorg/mozilla/javascript/ast/ThrowStatement;.<init>:(IILorg/mozilla/javascript/ast/AstNode;)V` @kind direct;
  #L41b30c.  call `setLineno`(v3, v0) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41b312.  return v3 @kind object;
  #L41b314.  call temp:= `J`(v5) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L41b31a.  v0:= 0I;
  #L41b31c.  throw v0;
}
procedure `java.util.List` `v`(`org.mozilla.javascript.Parser` v7 @kind this) @signature `Lorg/mozilla/javascript/Parser;.v:()Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L417490.  v0:= 88I;
  #L417494.  call temp:= `B0`(v7, v0) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41749a.  v1:= temp;
  #L41749c.  if v1 == 0 then goto L4174a4;
  #L4174a0.  v0:= 0I;
  #L4174a2.  return v0 @kind object;
  #L4174a4.  v1:= new `java.util.ArrayList`;
  #L4174a8.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4174ae.  v2:= v7.`org.mozilla.javascript.Parser.s` @type ^`boolean` @kind boolean;
  #L4174b2.  v3:= 0I;
  #L4174b4.  v7.`org.mozilla.javascript.Parser.s` @type ^`boolean` := v3 @kind boolean;
  #L4174b8.  call temp:= `W0`(v7) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L4174be.  v4:= temp;
  #L4174c0.  v5:= 72I;
  #L4174c4.  if v4 != v5 then goto L4174d2;
  #L4174c8.  v4:= "msg.yield.parenthesized" @kind object;
  #L4174cc.  call `i1`(v7, v4) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L4174d2.  call temp:= `z`(v7) @signature `Lorg/mozilla/javascript/Parser;.z:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4174d8.  v4:= temp @kind object;
  #L4174da.  call temp:= `W0`(v7) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L4174e0.  v5:= temp;
  #L4174e2.  v6:= 119I;
  #L4174e6.  if v5 != v6 then goto L4174fc;
  #L4174ea.  v5:= 1I;
  #L4174ec.  call temp:= `k0`(v7, v4, v3, v5) @signature `Lorg/mozilla/javascript/Parser;.k0:(Lorg/mozilla/javascript/ast/AstNode;IZ)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4174f2.  v4:= temp @kind object;
  #L4174f4.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4174fa.  goto L417502;
  #L4174fc.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L417502.  v4:= 89I;
  #L417506.  call temp:= `B0`(v7, v4) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41750c.  v4:= temp;
  #L41750e.  if v4 != 0 then goto L4174b8;
  #L417512.  v7.`org.mozilla.javascript.Parser.s` @type ^`boolean` := v2 @kind boolean;
  #L417516.  v2:= "msg.no.paren.arg" @kind object;
  #L41751a.  call temp:= `G0`(v7, v0, v2) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L417520.  return v1 @kind object;
  #L417522.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L417524.  v7.`org.mozilla.javascript.Parser.s` @type ^`boolean` := v2 @kind boolean;
  #L417528.  throw v0;
  catch `java.lang.Throwable` @[L4174b8..L4174e2] goto L417522;
  catch `java.io.IOException` @[L4174ec..L4174fa] goto L417502;
  catch `java.lang.Throwable` @[L4174ec..L4174fa] goto L417522;
  catch `java.lang.Throwable` @[L4174fc..L41750e] goto L417522;
}
procedure `int` `v0`(`org.mozilla.javascript.Parser` v5 @kind this, `int` v6 ) @signature `Lorg/mozilla/javascript/Parser;.v0:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L417120.  v0:= v5.`org.mozilla.javascript.Parser.e` @type ^`char`[] @kind object;
  #L417124.  v1:= -1I;
  #L417126.  if v0 != 0 then goto L41712c;
  #L41712a.  return v1;
  #L41712c.  v2:= 0I;
  #L41712e.  if v6 > 0 then goto L417134;
  #L417132.  return v2;
  #L417134.  v3:= length @variable v0;
  #L417136.  if v6 < v3 then goto L417140;
  #L41713a.  v6:= length @variable v0;
  #L41713c.  v6:= v6 + -1;
  #L417140.  v6:= v6 + v1 @kind int;
  #L417142.  if v6 < 0 then goto L417160;
  #L417146.  v3:= v0[v6] @kind char;
  #L41714a.  v4:= 10I;
  #L41714e.  if v3 == v4 then goto L41715a;
  #L417152.  v4:= 13I;
  #L417156.  if v3 != v4 then goto L417140;
  #L41715a.  v6:= v6 + 1;
  #L41715e.  return v6;
  #L417160.  return v2;
}
procedure `org.mozilla.javascript.ast.TryStatement` `v1`(`org.mozilla.javascript.Parser` v17 @kind this) @signature `Lorg/mozilla/javascript/Parser;.v1:()Lorg/mozilla/javascript/ast/TryStatement;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L41b330.  v0:= v17 @kind object;
  #L41b334.  v1:= v0.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L41b338.  v3:= 81I;
  #L41b33c.  if v1 != v3 then goto L41b59c;
  #L41b340.  call `M`(v17) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L41b346.  call temp:= `m0`(v17) @signature `Lorg/mozilla/javascript/Parser;.m0:()Lorg/mozilla/javascript/ast/Comment;` @kind direct;
  #L41b34c.  v1:= temp @kind object;
  #L41b34e.  v3:= v0.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b352.  v4:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b356.  v3:= v3.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41b35a.  call temp:= `W0`(v17) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41b360.  v5:= temp;
  #L41b362.  v6:= 85I;
  #L41b366.  if v5 == v6 then goto L41b374;
  #L41b36a.  v5:= "msg.no.brace.try" @kind object;
  #L41b36e.  call `i1`(v0, v5) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41b374.  call temp:= `p1`(v17) @signature `Lorg/mozilla/javascript/Parser;.p1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41b37a.  v5:= temp @kind object;
  #L41b37c.  call temp:= `o0`(v0, v5) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41b382.  v7:= temp;
  #L41b384.  v8:= 0I;
  #L41b386.  call temp:= `W0`(v17) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41b38c.  v9:= temp;
  #L41b38e.  v10:= 124I;
  #L41b392.  if v9 != v10 then goto L41b520;
  #L41b396.  v9:= 0I;
  #L41b398.  call temp:= `B0`(v0, v10) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41b39e.  v13:= temp;
  #L41b3a0.  if v13 == 0 then goto L41b51a;
  #L41b3a4.  v7:= v0.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b3a8.  v7:= v7.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41b3ac.  if v8 == 0 then goto L41b3ba;
  #L41b3b0.  v13:= "msg.catch.unreachable" @kind object;
  #L41b3b4.  call `i1`(v0, v13) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41b3ba.  v13:= v0.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b3be.  v13:= v13.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b3c2.  v14:= 87I;
  #L41b3c6.  v15:= "msg.no.paren.catch" @kind object;
  #L41b3ca.  call temp:= `G0`(v0, v14, v15) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41b3d0.  v14:= temp;
  #L41b3d2.  if v14 == 0 then goto L41b3e0;
  #L41b3d6.  v14:= v0.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b3da.  v14:= v14.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b3de.  goto L41b3e2;
  #L41b3e0.  v14:= -1I;
  #L41b3e2.  v15:= 39I;
  #L41b3e6.  v10:= "msg.bad.catchcond" @kind object;
  #L41b3ea.  call temp:= `G0`(v0, v15, v10) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41b3f0.  call temp:= `P`(v17) @signature `Lorg/mozilla/javascript/Parser;.P:()Lorg/mozilla/javascript/ast/Name;` @kind direct;
  #L41b3f6.  v15:= temp @kind object;
  #L41b3f8.  call temp:= `getIdentifier`(v15) @signature `Lorg/mozilla/javascript/ast/Name;.getIdentifier:()Ljava/lang/String;` @kind virtual;
  #L41b3fe.  v2:= temp @kind object;
  #L41b400.  v11:= v0.`org.mozilla.javascript.Parser.inUseStrictDirective` @type ^`boolean` @kind boolean;
  #L41b404.  if v11 == 0 then goto L41b432;
  #L41b408.  v11:= "eval" @kind object;
  #L41b40c.  call temp:= `equals`(v11, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41b412.  v11:= temp;
  #L41b414.  if v11 != 0 then goto L41b428;
  #L41b418.  v11:= "arguments" @kind object;
  #L41b41c.  call temp:= `equals`(v11, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41b422.  v11:= temp;
  #L41b424.  if v11 == 0 then goto L41b432;
  #L41b428.  v11:= "msg.bad.id.strict" @kind object;
  #L41b42c.  call `k1`(v0, v11, v2) @signature `Lorg/mozilla/javascript/Parser;.k1:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L41b432.  v2:= 112I;
  #L41b436.  call temp:= `B0`(v0, v2) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41b43c.  v2:= temp;
  #L41b43e.  if v2 == 0 then goto L41b454;
  #L41b442.  v2:= v0.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b446.  v2:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b44a.  call temp:= `f0`(v17) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41b450.  v11:= temp @kind object;
  #L41b452.  goto L41b45c;
  #L41b454.  v2:= 1I;
  #L41b456.  v2:= -1I;
  #L41b458.  v8:= 1I;
  #L41b45a.  v11:= 0I;
  #L41b45c.  v12:= 88I;
  #L41b460.  call temp:= `G0`(v0, v12, v10) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41b466.  v10:= temp;
  #L41b468.  if v10 == 0 then goto L41b476;
  #L41b46c.  v10:= v0.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b470.  v10:= v10.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b474.  goto L41b478;
  #L41b476.  v10:= -1I;
  #L41b478.  v12:= "msg.no.brace.catchblock" @kind object;
  #L41b47c.  call temp:= `G0`(v0, v6, v12) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41b482.  call temp:= `r1`(v17) @signature `Lorg/mozilla/javascript/Parser;.r1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41b488.  v12:= temp @kind object;
  #L41b48a.  v12:= (`org.mozilla.javascript.ast.Block`) v12 @kind object;
  #L41b48e.  call temp:= `o0`(v0, v12) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41b494.  v16:= temp;
  #L41b496.  v6:= new `org.mozilla.javascript.ast.CatchClause`;
  #L41b49a.  call `<init>`(v6, v13) @signature `Lorg/mozilla/javascript/ast/CatchClause;.<init>:(I)V` @kind direct;
  #L41b4a0.  call `setVarName`(v6, v15) @signature `Lorg/mozilla/javascript/ast/CatchClause;.setVarName:(Lorg/mozilla/javascript/ast/Name;)V` @kind virtual;
  #L41b4a6.  call `setCatchCondition`(v6, v11) @signature `Lorg/mozilla/javascript/ast/CatchClause;.setCatchCondition:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41b4ac.  call `setBody`(v6, v12) @signature `Lorg/mozilla/javascript/ast/CatchClause;.setBody:(Lorg/mozilla/javascript/ast/Block;)V` @kind virtual;
  #L41b4b2.  v11:= -1I;
  #L41b4b4.  if v2 == v11 then goto L41b4c0;
  #L41b4b8.  v2:= v2 - v13 @kind int;
  #L41b4ba.  call `setIfPosition`(v6, v2) @signature `Lorg/mozilla/javascript/ast/CatchClause;.setIfPosition:(I)V` @kind virtual;
  #L41b4c0.  call `setParens`(v6, v14, v10) @signature `Lorg/mozilla/javascript/ast/CatchClause;.setParens:(II)V` @kind virtual;
  #L41b4c6.  call `setLineno`(v6, v7) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41b4cc.  v2:= 86I;
  #L41b4d0.  v7:= "msg.no.brace.after.body" @kind object;
  #L41b4d4.  call temp:= `G0`(v0, v2, v7) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41b4da.  v2:= temp;
  #L41b4dc.  if v2 == 0 then goto L41b4ec;
  #L41b4e0.  v2:= v0.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b4e4.  v2:= v2.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41b4e8.  v7:= v2;
  #L41b4ea.  goto L41b4f0;
  #L41b4ec.  v7:= v16;
  #L41b4f0.  v2:= v7 - v13 @kind int;
  #L41b4f4.  call `setLength`(v6, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L41b4fa.  if v9 != 0 then goto L41b508;
  #L41b4fe.  v9:= new `java.util.ArrayList`;
  #L41b502.  call `<init>`(v9) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L41b508.  call temp:= `add`(v9, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41b50e.  v6:= 85I;
  #L41b512.  v10:= 124I;
  #L41b516.  goto L41b398;
  #L41b51a.  v2:= 125I;
  #L41b51e.  goto L41b534;
  #L41b520.  v2:= 125I;
  #L41b524.  if v9 == v2 then goto L41b532;
  #L41b528.  v6:= "msg.try.no.catchfinally" @kind object;
  #L41b52c.  call temp:= `G0`(v0, v2, v6) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41b532.  v9:= 0I;
  #L41b534.  call temp:= `B0`(v0, v2) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41b53a.  v2:= temp;
  #L41b53c.  if v2 == 0 then goto L41b55a;
  #L41b540.  v2:= v0.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b544.  v11:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b548.  call temp:= `p1`(v17) @signature `Lorg/mozilla/javascript/Parser;.p1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41b54e.  v2:= temp @kind object;
  #L41b550.  call temp:= `o0`(v0, v2) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41b556.  v7:= temp;
  #L41b558.  goto L41b55e;
  #L41b55a.  v2:= 0I;
  #L41b55c.  v11:= -1I;
  #L41b55e.  v6:= new `org.mozilla.javascript.ast.TryStatement`;
  #L41b562.  v7:= v7 - v4 @kind int;
  #L41b564.  call `<init>`(v6, v4, v7) @signature `Lorg/mozilla/javascript/ast/TryStatement;.<init>:(II)V` @kind direct;
  #L41b56a.  call `setTryBlock`(v6, v5) @signature `Lorg/mozilla/javascript/ast/TryStatement;.setTryBlock:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41b570.  call `setCatchClauses`(v6, v9) @signature `Lorg/mozilla/javascript/ast/TryStatement;.setCatchClauses:(Ljava/util/List;)V` @kind virtual;
  #L41b576.  call `setFinallyBlock`(v6, v2) @signature `Lorg/mozilla/javascript/ast/TryStatement;.setFinallyBlock:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41b57c.  v2:= -1I;
  #L41b57e.  if v11 == v2 then goto L41b58a;
  #L41b582.  v11:= v11 - v4 @kind int;
  #L41b584.  call `setFinallyPosition`(v6, v11) @signature `Lorg/mozilla/javascript/ast/TryStatement;.setFinallyPosition:(I)V` @kind virtual;
  #L41b58a.  call `setLineno`(v6, v3) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41b590.  if v1 == 0 then goto L41b59a;
  #L41b594.  call `setJsDocNode`(v6, v1) @signature `Lorg/mozilla/javascript/Node;.setJsDocNode:(Lorg/mozilla/javascript/ast/Comment;)V` @kind virtual;
  #L41b59a.  return v6 @kind object;
  #L41b59c.  call temp:= `J`(v17) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L41b5a2.  v1:= 0I;
  #L41b5a4.  throw v1;
}
procedure `org.mozilla.javascript.ast.AstNode` `w`(`org.mozilla.javascript.Parser` v5 @kind this, `org.mozilla.javascript.ast.AstNode` v6 @kind object, `int` v7 ) @signature `Lorg/mozilla/javascript/Parser;.w:(Lorg/mozilla/javascript/ast/AstNode;I)Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L417b98.  v0:= new `java.util.ArrayList`;
  #L417b9c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L417ba2.  call temp:= `W0`(v5) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L417ba8.  v1:= temp;
  #L417baa.  v2:= 119I;
  #L417bae.  if v1 != v2 then goto L417bc2;
  #L417bb2.  call temp:= `x`(v5) @signature `Lorg/mozilla/javascript/Parser;.x:()Lorg/mozilla/javascript/ast/ArrayComprehensionLoop;` @kind direct;
  #L417bb8.  v1:= temp @kind object;
  #L417bba.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L417bc0.  goto L417ba2;
  #L417bc2.  v1:= -1I;
  #L417bc4.  v2:= 0I;
  #L417bc6.  call temp:= `W0`(v5) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L417bcc.  v3:= temp;
  #L417bce.  v4:= 112I;
  #L417bd2.  if v3 != v4 then goto L417bee;
  #L417bd6.  call `M`(v5) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L417bdc.  v1:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417be0.  v1:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L417be4.  v1:= v1 - v7 @kind int;
  #L417be6.  call temp:= `L`(v5) @signature `Lorg/mozilla/javascript/Parser;.L:()Lorg/mozilla/javascript/Parser$b;` @kind direct;
  #L417bec.  v2:= temp @kind object;
  #L417bee.  v3:= 84I;
  #L417bf2.  v4:= "msg.no.bracket.arg" @kind object;
  #L417bf6.  call temp:= `G0`(v5, v3, v4) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L417bfc.  v3:= new `org.mozilla.javascript.ast.ArrayComprehension`;
  #L417c00.  v4:= v5.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417c04.  v4:= v4.`org.mozilla.javascript.u.w` @type ^`int`;
  #L417c08.  v4:= v4 - v7 @kind int;
  #L417c0a.  call `<init>`(v3, v7, v4) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.<init>:(II)V` @kind direct;
  #L417c10.  call `setResult`(v3, v6) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.setResult:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L417c16.  call `setLoops`(v3, v0) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.setLoops:(Ljava/util/List;)V` @kind virtual;
  #L417c1c.  if v2 == 0 then goto L417c48;
  #L417c20.  call `setIfPosition`(v3, v1) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.setIfPosition:(I)V` @kind virtual;
  #L417c26.  v6:= v2.`org.mozilla.javascript.Parser$b.a` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L417c2a.  call `setFilter`(v3, v6) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.setFilter:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L417c30.  v6:= v2.`org.mozilla.javascript.Parser$b.b` @type ^`int`;
  #L417c34.  v6:= v6 - v7 @kind int;
  #L417c36.  call `setFilterLp`(v3, v6) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.setFilterLp:(I)V` @kind virtual;
  #L417c3c.  v6:= v2.`org.mozilla.javascript.Parser$b.c` @type ^`int`;
  #L417c40.  v6:= v6 - v7 @kind int;
  #L417c42.  call `setFilterRp`(v3, v6) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.setFilterRp:(I)V` @kind virtual;
  #L417c48.  return v3 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `w1`(`org.mozilla.javascript.Parser` v6 @kind this) @signature `Lorg/mozilla/javascript/Parser;.w1:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L419b28.  call temp:= `W0`(v6) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L419b2e.  v0:= temp;
  #L419b30.  v1:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419b34.  v1:= v1.`org.mozilla.javascript.u.o` @type ^`int`;
  #L419b38.  v2:= -1I;
  #L419b3a.  if v0 == v2 then goto L419cd2;
  #L419b3e.  v2:= 14I;
  #L419b42.  v3:= 107I;
  #L419b46.  v4:= 106I;
  #L419b4a.  v5:= 1I;
  #L419b4c.  if v0 == v2 then goto L419c6a;
  #L419b50.  v2:= 126I;
  #L419b54.  if v0 == v2 then goto L419c42;
  #L419b58.  v2:= 21I;
  #L419b5c.  if v0 == v2 then goto L419c16;
  #L419b60.  v2:= 22I;
  #L419b64.  if v0 == v2 then goto L419bea;
  #L419b68.  v2:= 26I;
  #L419b6c.  if v0 == v2 then goto L419c42;
  #L419b70.  v2:= 27I;
  #L419b74.  if v0 == v2 then goto L419c42;
  #L419b78.  v2:= 31I;
  #L419b7c.  if v0 == v2 then goto L419bc2;
  #L419b80.  v2:= 32I;
  #L419b84.  if v0 == v2 then goto L419c42;
  #L419b88.  if v0 == v4 then goto L419b94;
  #L419b8c.  if v0 == v3 then goto L419b94;
  #L419b90.  goto L419c92;
  #L419b94.  call `M`(v6) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L419b9a.  v2:= new `org.mozilla.javascript.ast.UnaryExpression`;
  #L419b9e.  v3:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419ba2.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419ba6.  call temp:= `C0`(v6, v5) @signature `Lorg/mozilla/javascript/Parser;.C0:(Z)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419bac.  v4:= temp @kind object;
  #L419bae.  call `<init>`(v2, v0, v3, v4) @signature `Lorg/mozilla/javascript/ast/UnaryExpression;.<init>:(IILorg/mozilla/javascript/ast/AstNode;)V` @kind direct;
  #L419bb4.  call `setLineno`(v2, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L419bba.  call `H`(v6, v2) @signature `Lorg/mozilla/javascript/Parser;.H:(Lorg/mozilla/javascript/ast/UnaryExpression;)V` @kind direct;
  #L419bc0.  return v2 @kind object;
  #L419bc2.  call `M`(v6) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L419bc8.  v2:= new `org.mozilla.javascript.ast.UnaryExpression`;
  #L419bcc.  v3:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419bd0.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419bd4.  call temp:= `w1`(v6) @signature `Lorg/mozilla/javascript/Parser;.w1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419bda.  v4:= temp @kind object;
  #L419bdc.  call `<init>`(v2, v0, v3, v4) @signature `Lorg/mozilla/javascript/ast/UnaryExpression;.<init>:(IILorg/mozilla/javascript/ast/AstNode;)V` @kind direct;
  #L419be2.  call `setLineno`(v2, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L419be8.  return v2 @kind object;
  #L419bea.  call `M`(v6) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L419bf0.  v0:= new `org.mozilla.javascript.ast.UnaryExpression`;
  #L419bf4.  v2:= 29I;
  #L419bf8.  v3:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419bfc.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419c00.  call temp:= `w1`(v6) @signature `Lorg/mozilla/javascript/Parser;.w1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419c06.  v4:= temp @kind object;
  #L419c08.  call `<init>`(v0, v2, v3, v4) @signature `Lorg/mozilla/javascript/ast/UnaryExpression;.<init>:(IILorg/mozilla/javascript/ast/AstNode;)V` @kind direct;
  #L419c0e.  call `setLineno`(v0, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L419c14.  return v0 @kind object;
  #L419c16.  call `M`(v6) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L419c1c.  v0:= new `org.mozilla.javascript.ast.UnaryExpression`;
  #L419c20.  v2:= 28I;
  #L419c24.  v3:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419c28.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419c2c.  call temp:= `w1`(v6) @signature `Lorg/mozilla/javascript/Parser;.w1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419c32.  v4:= temp @kind object;
  #L419c34.  call `<init>`(v0, v2, v3, v4) @signature `Lorg/mozilla/javascript/ast/UnaryExpression;.<init>:(IILorg/mozilla/javascript/ast/AstNode;)V` @kind direct;
  #L419c3a.  call `setLineno`(v0, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L419c40.  return v0 @kind object;
  #L419c42.  call `M`(v6) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L419c48.  v2:= new `org.mozilla.javascript.ast.UnaryExpression`;
  #L419c4c.  v3:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419c50.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419c54.  call temp:= `w1`(v6) @signature `Lorg/mozilla/javascript/Parser;.w1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419c5a.  v4:= temp @kind object;
  #L419c5c.  call `<init>`(v2, v0, v3, v4) @signature `Lorg/mozilla/javascript/ast/UnaryExpression;.<init>:(IILorg/mozilla/javascript/ast/AstNode;)V` @kind direct;
  #L419c62.  call `setLineno`(v2, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L419c68.  return v2 @kind object;
  #L419c6a.  v0:= v6.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L419c6e.  call temp:= `isXmlAvailable`(v0) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isXmlAvailable:()Z` @kind virtual;
  #L419c74.  v0:= temp;
  #L419c76.  if v0 == 0 then goto L419c92;
  #L419c7a.  call `M`(v6) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L419c80.  call temp:= `D1`(v6) @signature `Lorg/mozilla/javascript/Parser;.D1:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419c86.  v0:= temp @kind object;
  #L419c88.  call temp:= `D0`(v6, v5, v0) @signature `Lorg/mozilla/javascript/Parser;.D0:(ZLorg/mozilla/javascript/ast/AstNode;)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419c8e.  v0:= temp @kind object;
  #L419c90.  return v0 @kind object;
  #L419c92.  call temp:= `C0`(v6, v5) @signature `Lorg/mozilla/javascript/Parser;.C0:(Z)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L419c98.  v0:= temp @kind object;
  #L419c9a.  call temp:= `X0`(v6) @signature `Lorg/mozilla/javascript/Parser;.X0:()I` @kind direct;
  #L419ca0.  v2:= temp;
  #L419ca2.  if v2 == v4 then goto L419cac;
  #L419ca6.  if v2 == v3 then goto L419cac;
  #L419caa.  return v0 @kind object;
  #L419cac.  call `M`(v6) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L419cb2.  v3:= new `org.mozilla.javascript.ast.UnaryExpression`;
  #L419cb6.  v4:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L419cba.  v4:= v4.`org.mozilla.javascript.u.v` @type ^`int`;
  #L419cbe.  call `<init>`(v3, v2, v4, v0, v5) @signature `Lorg/mozilla/javascript/ast/UnaryExpression;.<init>:(IILorg/mozilla/javascript/ast/AstNode;Z)V` @kind direct;
  #L419cc4.  call `setLineno`(v3, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L419cca.  call `H`(v6, v3) @signature `Lorg/mozilla/javascript/Parser;.H:(Lorg/mozilla/javascript/ast/UnaryExpression;)V` @kind direct;
  #L419cd0.  return v3 @kind object;
  #L419cd2.  call `M`(v6) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L419cd8.  call temp:= `y0`(v6) @signature `Lorg/mozilla/javascript/Parser;.y0:()Lorg/mozilla/javascript/ast/ErrorNode;` @kind direct;
  #L419cde.  v0:= temp @kind object;
  #L419ce0.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.ArrayComprehensionLoop` `x`(`org.mozilla.javascript.Parser` v11 @kind this) @signature `Lorg/mozilla/javascript/Parser;.x:()Lorg/mozilla/javascript/ast/ArrayComprehensionLoop;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L417938.  call temp:= `L0`(v11) @signature `Lorg/mozilla/javascript/Parser;.L0:()I` @kind direct;
  #L41793e.  v0:= temp;
  #L417940.  v1:= 0I;
  #L417942.  v2:= 119I;
  #L417946.  if v0 != v2 then goto L417aca;
  #L41794a.  v0:= v11.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41794e.  v0:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L417952.  v2:= new `org.mozilla.javascript.ast.ArrayComprehensionLoop`;
  #L417956.  call `<init>`(v2, v0) @signature `Lorg/mozilla/javascript/ast/ArrayComprehensionLoop;.<init>:(I)V` @kind direct;
  #L41795c.  call `d1`(v11, v2) @signature `Lorg/mozilla/javascript/Parser;.d1:(Lorg/mozilla/javascript/ast/Scope;)V` @kind virtual;
  #L417962.  v3:= 39I;
  #L417966.  call temp:= `B0`(v11, v3) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41796c.  v4:= temp;
  #L41796e.  v5:= "msg.no.paren.for" @kind object;
  #L417972.  v6:= -1I;
  #L417974.  if v4 == 0 then goto L4179a6;
  #L417978.  v4:= v11.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41797c.  call temp:= `q`(v4) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L417982.  v4:= temp @kind object;
  #L417984.  v7:= "each" @kind object;
  #L417988.  call temp:= `equals`(v4, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41798e.  v4:= temp;
  #L417990.  if v4 == 0 then goto L4179a0;
  #L417994.  v4:= v11.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417998.  v4:= v4.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41799c.  v4:= v4 - v0 @kind int;
  #L41799e.  goto L4179a8;
  #L4179a0.  call `i1`(v11, v5) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L4179a6.  v4:= -1I;
  #L4179a8.  v7:= 87I;
  #L4179ac.  call temp:= `G0`(v11, v7, v5) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L4179b2.  v5:= temp;
  #L4179b4.  if v5 == 0 then goto L4179c4;
  #L4179b8.  v5:= v11.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L4179bc.  v5:= v5.`org.mozilla.javascript.u.v` @type ^`int`;
  #L4179c0.  v5:= v5 - v0 @kind int;
  #L4179c2.  goto L4179c6;
  #L4179c4.  v5:= -1I;
  #L4179c6.  call temp:= `W0`(v11) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L4179cc.  v7:= temp;
  #L4179ce.  if v7 == v3 then goto L4179fe;
  #L4179d2.  v8:= 83I;
  #L4179d6.  if v7 == v8 then goto L4179ee;
  #L4179da.  v8:= 85I;
  #L4179de.  if v7 == v8 then goto L4179ee;
  #L4179e2.  v7:= "msg.bad.var" @kind object;
  #L4179e6.  call `i1`(v11, v7) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L4179ec.  goto L417a0c;
  #L4179ee.  call temp:= `Y`(v11) @signature `Lorg/mozilla/javascript/Parser;.Y:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L4179f4.  v1:= temp @kind object;
  #L4179f6.  call `z0`(v11, v1) @signature `Lorg/mozilla/javascript/Parser;.z0:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L4179fc.  goto L417a0c;
  #L4179fe.  call `M`(v11) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L417a04.  call temp:= `P`(v11) @signature `Lorg/mozilla/javascript/Parser;.P:()Lorg/mozilla/javascript/ast/Name;` @kind direct;
  #L417a0a.  v1:= temp @kind object;
  #L417a0c.  call temp:= `getType`(v1) @signature `Lorg/mozilla/javascript/Node;.getType:()I` @kind virtual;
  #L417a12.  v7:= temp;
  #L417a14.  v8:= 1I;
  #L417a16.  if v7 != v3 then goto L417a30;
  #L417a1a.  v3:= 153I;
  #L417a1e.  v7:= v11.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417a22.  call temp:= `q`(v7) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L417a28.  v7:= temp @kind object;
  #L417a2a.  call `U`(v11, v3, v7, v8) @signature `Lorg/mozilla/javascript/Parser;.U:(ILjava/lang/String;Z)V` @kind virtual;
  #L417a30.  v3:= 52I;
  #L417a34.  v7:= "msg.in.after.for.name" @kind object;
  #L417a38.  call temp:= `G0`(v11, v3, v7) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L417a3e.  v3:= temp;
  #L417a40.  if v3 == 0 then goto L417a50;
  #L417a44.  v3:= v11.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417a48.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L417a4c.  v3:= v3 - v0 @kind int;
  #L417a4e.  goto L417a52;
  #L417a50.  v3:= -1I;
  #L417a52.  call temp:= `f0`(v11) @signature `Lorg/mozilla/javascript/Parser;.f0:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417a58.  v7:= temp @kind object;
  #L417a5a.  v9:= 88I;
  #L417a5e.  v10:= "msg.no.paren.for.ctrl" @kind object;
  #L417a62.  call temp:= `G0`(v11, v9, v10) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L417a68.  v9:= temp;
  #L417a6a.  if v9 == 0 then goto L417a7a;
  #L417a6e.  v9:= v11.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417a72.  v9:= v9.`org.mozilla.javascript.u.v` @type ^`int`;
  #L417a76.  v9:= v9 - v0 @kind int;
  #L417a78.  goto L417a7c;
  #L417a7a.  v9:= -1I;
  #L417a7c.  v10:= v11.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417a80.  v10:= v10.`org.mozilla.javascript.u.w` @type ^`int`;
  #L417a84.  v10:= v10 - v0 @kind int;
  #L417a86.  call `setLength`(v2, v10) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L417a8c.  call `setIterator`(v2, v1) @signature `Lorg/mozilla/javascript/ast/ForInLoop;.setIterator:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L417a92.  call `setIteratedObject`(v2, v7) @signature `Lorg/mozilla/javascript/ast/ForInLoop;.setIteratedObject:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L417a98.  call `setInPosition`(v2, v3) @signature `Lorg/mozilla/javascript/ast/ForInLoop;.setInPosition:(I)V` @kind virtual;
  #L417a9e.  call `setEachPosition`(v2, v4) @signature `Lorg/mozilla/javascript/ast/ForInLoop;.setEachPosition:(I)V` @kind virtual;
  #L417aa4.  if v4 == v6 then goto L417aaa;
  #L417aa8.  goto L417aac;
  #L417aaa.  v8:= 0I;
  #L417aac.  call `setIsForEach`(v2, v8) @signature `Lorg/mozilla/javascript/ast/ForInLoop;.setIsForEach:(Z)V` @kind virtual;
  #L417ab2.  call `setParens`(v2, v5, v9) @signature `Lorg/mozilla/javascript/ast/Loop;.setParens:(II)V` @kind virtual;
  #L417ab8.  call `Z0`(v11) @signature `Lorg/mozilla/javascript/Parser;.Z0:()V` @kind virtual;
  #L417abe.  return v2 @kind object;
  #L417ac0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L417ac2.  call `Z0`(v11) @signature `Lorg/mozilla/javascript/Parser;.Z0:()V` @kind virtual;
  #L417ac8.  throw v0;
  #L417aca.  call temp:= `J`(v11) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L417ad0.  throw v1;
  catch `java.lang.Throwable` @[L417966..L41796e] goto L417ac0;
  catch `java.lang.Throwable` @[L417978..L417ab8] goto L417ac0;
}
procedure `org.mozilla.javascript.ast.VariableDeclaration` `x1`(`org.mozilla.javascript.Parser` v10 @kind this, `int` v11 , `int` v12 , `boolean` v13 ) @signature `Lorg/mozilla/javascript/Parser;.x1:(IIZ)Lorg/mozilla/javascript/ast/VariableDeclaration;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L41b5b8.  v0:= new `org.mozilla.javascript.ast.VariableDeclaration`;
  #L41b5bc.  call `<init>`(v0, v12) @signature `Lorg/mozilla/javascript/ast/VariableDeclaration;.<init>:(I)V` @kind direct;
  #L41b5c2.  call temp:= `setType`(v0, v11) @signature `Lorg/mozilla/javascript/ast/VariableDeclaration;.setType:(I)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L41b5c8.  v1:= v10.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b5cc.  v1:= v1.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41b5d0.  call `setLineno`(v0, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41b5d6.  call temp:= `m0`(v10) @signature `Lorg/mozilla/javascript/Parser;.m0:()Lorg/mozilla/javascript/ast/Comment;` @kind direct;
  #L41b5dc.  v1:= temp @kind object;
  #L41b5de.  if v1 == 0 then goto L41b5e8;
  #L41b5e2.  call `setJsDocNode`(v0, v1) @signature `Lorg/mozilla/javascript/Node;.setJsDocNode:(Lorg/mozilla/javascript/ast/Comment;)V` @kind virtual;
  #L41b5e8.  call temp:= `W0`(v10) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L41b5ee.  v1:= temp;
  #L41b5f0.  v2:= v10.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b5f4.  v3:= v2.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41b5f8.  v2:= v2.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41b5fc.  v4:= 83I;
  #L41b600.  v5:= 0I;
  #L41b602.  if v1 == v4 then goto L41b6a0;
  #L41b606.  v4:= 85I;
  #L41b60a.  if v1 != v4 then goto L41b610;
  #L41b60e.  goto L41b6a0;
  #L41b610.  v1:= 39I;
  #L41b614.  v4:= "msg.bad.var" @kind object;
  #L41b618.  call temp:= `G0`(v10, v1, v4) @signature `Lorg/mozilla/javascript/Parser;.G0:(ILjava/lang/String;)Z` @kind direct;
  #L41b61e.  call temp:= `P`(v10) @signature `Lorg/mozilla/javascript/Parser;.P:()Lorg/mozilla/javascript/ast/Name;` @kind direct;
  #L41b624.  v1:= temp @kind object;
  #L41b626.  v4:= v10.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b62a.  call temp:= `l`(v4) @signature `Lorg/mozilla/javascript/u;.l:()I` @kind virtual;
  #L41b630.  v4:= temp;
  #L41b632.  call `setLineno`(v1, v4) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41b638.  v4:= v10.`org.mozilla.javascript.Parser.inUseStrictDirective` @type ^`boolean` @kind boolean;
  #L41b63c.  if v4 == 0 then goto L41b682;
  #L41b640.  v4:= v10.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b644.  call temp:= `q`(v4) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L41b64a.  v4:= temp @kind object;
  #L41b64c.  v6:= "eval" @kind object;
  #L41b650.  call temp:= `equals`(v6, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41b656.  v6:= temp;
  #L41b658.  if v6 != 0 then goto L41b678;
  #L41b65c.  v6:= v10.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b660.  call temp:= `q`(v6) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L41b666.  v6:= temp @kind object;
  #L41b668.  v7:= "arguments" @kind object;
  #L41b66c.  call temp:= `equals`(v7, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41b672.  v6:= temp;
  #L41b674.  if v6 == 0 then goto L41b682;
  #L41b678.  v6:= "msg.bad.id.strict" @kind object;
  #L41b67c.  call `k1`(v10, v6, v4) @signature `Lorg/mozilla/javascript/Parser;.k1:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L41b682.  v4:= v10.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b686.  call temp:= `q`(v4) @signature `Lorg/mozilla/javascript/u;.q:()Ljava/lang/String;` @kind virtual;
  #L41b68c.  v4:= temp @kind object;
  #L41b68e.  v6:= v10.`org.mozilla.javascript.Parser.s` @type ^`boolean` @kind boolean;
  #L41b692.  call `U`(v10, v11, v4, v6) @signature `Lorg/mozilla/javascript/Parser;.U:(ILjava/lang/String;Z)V` @kind virtual;
  #L41b698.  v4:= v2;
  #L41b69a.  v2:= v1 @kind object;
  #L41b69c.  v1:= v5 @kind object;
  #L41b69e.  goto L41b6d0;
  #L41b6a0.  call temp:= `Y`(v10) @signature `Lorg/mozilla/javascript/Parser;.Y:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41b6a6.  v1:= temp @kind object;
  #L41b6a8.  call temp:= `o0`(v10, v1) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41b6ae.  v2:= temp;
  #L41b6b0.  v4:= instanceof @variable v1 @type ^`org.mozilla.javascript.ast.DestructuringForm` @kind boolean;
  #L41b6b4.  if v4 != 0 then goto L41b6c6;
  #L41b6b8.  v4:= v2 - v3 @kind int;
  #L41b6bc.  v6:= "msg.bad.assign.left" @kind object;
  #L41b6c0.  call `j1`(v10, v6, v3, v4) @signature `Lorg/mozilla/javascript/Parser;.j1:(Ljava/lang/String;II)V` @kind virtual;
  #L41b6c6.  call `z0`(v10, v1) @signature `Lorg/mozilla/javascript/Parser;.z0:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41b6cc.  v4:= v2;
  #L41b6ce.  v2:= v5 @kind object;
  #L41b6d0.  v6:= v10.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41b6d4.  v6:= v6.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41b6d8.  call temp:= `m0`(v10) @signature `Lorg/mozilla/javascript/Parser;.m0:()Lorg/mozilla/javascript/ast/Comment;` @kind direct;
  #L41b6de.  v7:= temp @kind object;
  #L41b6e0.  v8:= 90I;
  #L41b6e4.  call temp:= `B0`(v10, v8) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41b6ea.  v8:= temp;
  #L41b6ec.  if v8 == 0 then goto L41b700;
  #L41b6f0.  call temp:= `z`(v10) @signature `Lorg/mozilla/javascript/Parser;.z:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L41b6f6.  v5:= temp @kind object;
  #L41b6f8.  call temp:= `o0`(v10, v5) @signature `Lorg/mozilla/javascript/Parser;.o0:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind direct;
  #L41b6fe.  v4:= temp;
  #L41b700.  v8:= new `org.mozilla.javascript.ast.VariableInitializer`;
  #L41b704.  v9:= v4 - v3 @kind int;
  #L41b708.  call `<init>`(v8, v3, v9) @signature `Lorg/mozilla/javascript/ast/VariableInitializer;.<init>:(II)V` @kind direct;
  #L41b70e.  if v1 == 0 then goto L41b730;
  #L41b712.  if v5 != 0 then goto L41b728;
  #L41b716.  v2:= v10.`org.mozilla.javascript.Parser.s` @type ^`boolean` @kind boolean;
  #L41b71a.  if v2 != 0 then goto L41b728;
  #L41b71e.  v2:= "msg.destruct.assign.no.init" @kind object;
  #L41b722.  call `i1`(v10, v2) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41b728.  call `setTarget`(v8, v1) @signature `Lorg/mozilla/javascript/ast/VariableInitializer;.setTarget:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41b72e.  goto L41b736;
  #L41b730.  call `setTarget`(v8, v2) @signature `Lorg/mozilla/javascript/ast/VariableInitializer;.setTarget:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41b736.  call `setInitializer`(v8, v5) @signature `Lorg/mozilla/javascript/ast/VariableInitializer;.setInitializer:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41b73c.  call temp:= `setType`(v8, v11) @signature `Lorg/mozilla/javascript/Node;.setType:(I)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L41b742.  call `setJsDocNode`(v8, v7) @signature `Lorg/mozilla/javascript/Node;.setJsDocNode:(Lorg/mozilla/javascript/ast/Comment;)V` @kind virtual;
  #L41b748.  call `setLineno`(v8, v6) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41b74e.  call `addVariable`(v0, v8) @signature `Lorg/mozilla/javascript/ast/VariableDeclaration;.addVariable:(Lorg/mozilla/javascript/ast/VariableInitializer;)V` @kind virtual;
  #L41b754.  v1:= 89I;
  #L41b758.  call temp:= `B0`(v10, v1) @signature `Lorg/mozilla/javascript/Parser;.B0:(I)Z` @kind direct;
  #L41b75e.  v1:= temp;
  #L41b760.  if v1 != 0 then goto L41b5e8;
  #L41b764.  v4:= v4 - v12 @kind int;
  #L41b766.  call `setLength`(v0, v4) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L41b76c.  call `setIsStatement`(v0, v13) @signature `Lorg/mozilla/javascript/ast/VariableDeclaration;.setIsStatement:(Z)V` @kind virtual;
  #L41b772.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `y`(`org.mozilla.javascript.Parser` v12 @kind this) @signature `Lorg/mozilla/javascript/Parser;.y:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L417c5c.  v0:= v12.`org.mozilla.javascript.Parser.j` @type ^`int`;
  #L417c60.  v1:= 83I;
  #L417c64.  if v0 != v1 then goto L417d9c;
  #L417c68.  v0:= v12.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417c6c.  v1:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L417c70.  v0:= v0.`org.mozilla.javascript.u.w` @type ^`int`;
  #L417c74.  v2:= new `java.util.ArrayList`;
  #L417c78.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L417c7e.  v3:= new `org.mozilla.javascript.ast.ArrayLiteral`;
  #L417c82.  call `<init>`(v3, v1) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.<init>:(I)V` @kind direct;
  #L417c88.  v4:= 0I;
  #L417c8a.  v5:= -1I;
  #L417c8c.  v6:= 1I;
  #L417c8e.  v7:= 1I;
  #L417c90.  v8:= 0I;
  #L417c92.  v9:= -1I;
  #L417c94.  call temp:= `W0`(v12) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L417c9a.  v10:= temp;
  #L417c9c.  v11:= 89I;
  #L417ca0.  if v10 != v11 then goto L417cd8;
  #L417ca4.  call `M`(v12) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L417caa.  v9:= v12.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417cae.  v9:= v9.`org.mozilla.javascript.u.w` @type ^`int`;
  #L417cb2.  if v7 != 0 then goto L417cba;
  #L417cb6.  v7:= 1I;
  #L417cb8.  goto L417c94;
  #L417cba.  v10:= new `org.mozilla.javascript.ast.EmptyExpression`;
  #L417cbe.  v11:= v12.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417cc2.  v11:= v11.`org.mozilla.javascript.u.v` @type ^`int`;
  #L417cc6.  call `<init>`(v10, v11, v6) @signature `Lorg/mozilla/javascript/ast/EmptyExpression;.<init>:(II)V` @kind direct;
  #L417ccc.  call temp:= `add`(v2, v10) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L417cd2.  v8:= v8 + 1;
  #L417cd6.  goto L417c94;
  #L417cd8.  v11:= 84I;
  #L417cdc.  if v10 != v11 then goto L417d10;
  #L417ce0.  call `M`(v12) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L417ce6.  v0:= v12.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417cea.  v0:= v0.`org.mozilla.javascript.u.w` @type ^`int`;
  #L417cee.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L417cf4.  v4:= temp;
  #L417cf6.  v4:= v4 + v7 @kind int;
  #L417cf8.  call `setDestructuringLength`(v3, v4) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.setDestructuringLength:(I)V` @kind virtual;
  #L417cfe.  call `setSkipCount`(v3, v8) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.setSkipCount:(I)V` @kind virtual;
  #L417d04.  if v9 == v5 then goto L417d4c;
  #L417d08.  call `z1`(v12, v1, v2, v9) @signature `Lorg/mozilla/javascript/Parser;.z1:(ILjava/util/List;I)V` @kind direct;
  #L417d0e.  goto L417d4c;
  #L417d10.  v9:= 119I;
  #L417d14.  if v10 != v9 then goto L417d3e;
  #L417d18.  if v7 != 0 then goto L417d3e;
  #L417d1c.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L417d22.  v9:= temp;
  #L417d24.  if v9 != v6 then goto L417d3e;
  #L417d28.  call temp:= `get`(v2, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L417d2e.  v0:= temp @kind object;
  #L417d30.  v0:= (`org.mozilla.javascript.ast.AstNode`) v0 @kind object;
  #L417d34.  call temp:= `w`(v12, v0, v1) @signature `Lorg/mozilla/javascript/Parser;.w:(Lorg/mozilla/javascript/ast/AstNode;I)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417d3a.  v0:= temp @kind object;
  #L417d3c.  return v0 @kind object;
  #L417d3e.  v9:= "msg.no.bracket.arg" @kind object;
  #L417d42.  if v10 != 0 then goto L417d7e;
  #L417d46.  call `i1`(v12, v9) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L417d4c.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L417d52.  v2:= temp @kind object;
  #L417d54.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L417d5a.  v4:= temp;
  #L417d5c.  if v4 == 0 then goto L417d74;
  #L417d60.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L417d66.  v4:= temp @kind object;
  #L417d68.  v4:= (`org.mozilla.javascript.ast.AstNode`) v4 @kind object;
  #L417d6c.  call `addElement`(v3, v4) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.addElement:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L417d72.  goto L417d54;
  #L417d74.  v0:= v0 - v1 @kind int;
  #L417d76.  call `setLength`(v3, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L417d7c.  return v3 @kind object;
  #L417d7e.  if v7 != 0 then goto L417d88;
  #L417d82.  call `i1`(v12, v9) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L417d88.  call temp:= `z`(v12) @signature `Lorg/mozilla/javascript/Parser;.z:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417d8e.  v7:= temp @kind object;
  #L417d90.  call temp:= `add`(v2, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L417d96.  v7:= 0I;
  #L417d98.  goto L417c92;
  #L417d9c.  call temp:= `J`(v12) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L417da2.  v0:= 0I;
  #L417da4.  throw v0;
}
procedure `org.mozilla.javascript.ast.ErrorNode` `y0`(`org.mozilla.javascript.Parser` v3 @kind this) @signature `Lorg/mozilla/javascript/Parser;.y0:()Lorg/mozilla/javascript/ast/ErrorNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L41a464.  v0:= new `org.mozilla.javascript.ast.ErrorNode`;
  #L41a468.  v1:= v3.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a46c.  v2:= v1.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41a470.  v1:= v1.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41a474.  v1:= v1 - v2 @kind int;
  #L41a476.  call `<init>`(v0, v2, v1) @signature `Lorg/mozilla/javascript/ast/ErrorNode;.<init>:(II)V` @kind direct;
  #L41a47c.  v1:= v3.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41a480.  v1:= v1.`org.mozilla.javascript.u.o` @type ^`int`;
  #L41a484.  call `setLineno`(v0, v1) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41a48a.  return v0 @kind object;
}
procedure `void` `y1`(`org.mozilla.javascript.Parser` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lorg/mozilla/javascript/Parser;.y1:(II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L41c670.  v0:= v2.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41c674.  call temp:= `isStrictMode`(v0) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isStrictMode:()Z` @kind virtual;
  #L41c67a.  v0:= temp;
  #L41c67c.  if v0 == 0 then goto L41c6ae;
  #L41c680.  call temp:= `v0`(v2, v4) @signature `Lorg/mozilla/javascript/Parser;.v0:(I)I` @kind direct;
  #L41c686.  v0:= temp;
  #L41c688.  call temp:= `max`(v3, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L41c68e.  v3:= temp;
  #L41c690.  v0:= -1I;
  #L41c692.  if v4 != v0 then goto L41c69e;
  #L41c696.  v4:= v2.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41c69a.  v4:= v4.`org.mozilla.javascript.u.u` @type ^`int`;
  #L41c69e.  v4:= v4 - v3 @kind int;
  #L41c6a0.  v0:= "msg.missing.semi" @kind object;
  #L41c6a4.  v1:= "" @kind object;
  #L41c6a8.  call `q`(v2, v0, v1, v3, v4) @signature `Lorg/mozilla/javascript/Parser;.q:(Ljava/lang/String;Ljava/lang/String;II)V` @kind virtual;
  #L41c6ae.  return @kind void;
}
procedure `org.mozilla.javascript.ast.AstNode` `z`(`org.mozilla.javascript.Parser` v6 @kind this) @signature `Lorg/mozilla/javascript/Parser;.z:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L417db8.  call temp:= `W0`(v6) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L417dbe.  v0:= temp;
  #L417dc0.  v1:= 72I;
  #L417dc4.  if v0 != v1 then goto L417dd4;
  #L417dc8.  v1:= 1I;
  #L417dca.  call temp:= `m1`(v6, v0, v1) @signature `Lorg/mozilla/javascript/Parser;.m1:(IZ)Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417dd0.  v0:= temp @kind object;
  #L417dd2.  return v0 @kind object;
  #L417dd4.  call temp:= `K`(v6) @signature `Lorg/mozilla/javascript/Parser;.K:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417dda.  v0:= temp @kind object;
  #L417ddc.  call temp:= `W0`(v6) @signature `Lorg/mozilla/javascript/Parser;.W0:()I` @kind direct;
  #L417de2.  v1:= temp;
  #L417de4.  v2:= 90I;
  #L417de8.  if v2 > v1 then goto L417e30;
  #L417dec.  v2:= 101I;
  #L417df0.  if v1 > v2 then goto L417e30;
  #L417df4.  call `M`(v6) @signature `Lorg/mozilla/javascript/Parser;.M:()V` @kind direct;
  #L417dfa.  call temp:= `m0`(v6) @signature `Lorg/mozilla/javascript/Parser;.m0:()Lorg/mozilla/javascript/ast/Comment;` @kind direct;
  #L417e00.  v2:= temp @kind object;
  #L417e02.  call `z0`(v6, v0) @signature `Lorg/mozilla/javascript/Parser;.z0:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L417e08.  v3:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L417e0c.  v3:= v3.`org.mozilla.javascript.u.v` @type ^`int`;
  #L417e10.  v4:= new `org.mozilla.javascript.ast.Assignment`;
  #L417e14.  call temp:= `z`(v6) @signature `Lorg/mozilla/javascript/Parser;.z:()Lorg/mozilla/javascript/ast/AstNode;` @kind direct;
  #L417e1a.  v5:= temp @kind object;
  #L417e1c.  call `<init>`(v4, v1, v0, v5, v3) @signature `Lorg/mozilla/javascript/ast/Assignment;.<init>:(ILorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;I)V` @kind direct;
  #L417e22.  if v2 == 0 then goto L417e2c;
  #L417e26.  call `setJsDocNode`(v4, v2) @signature `Lorg/mozilla/javascript/Node;.setJsDocNode:(Lorg/mozilla/javascript/ast/Comment;)V` @kind virtual;
  #L417e2c.  v0:= v4 @kind object;
  #L417e2e.  goto L417e4e;
  #L417e30.  v2:= 82I;
  #L417e34.  if v1 != v2 then goto L417e4e;
  #L417e38.  v1:= v6.`org.mozilla.javascript.Parser.m` @type ^`org.mozilla.javascript.ast.Comment` @kind object;
  #L417e3c.  if v1 == 0 then goto L417e4e;
  #L417e40.  call temp:= `m0`(v6) @signature `Lorg/mozilla/javascript/Parser;.m0:()Lorg/mozilla/javascript/ast/Comment;` @kind direct;
  #L417e46.  v1:= temp @kind object;
  #L417e48.  call `setJsDocNode`(v0, v1) @signature `Lorg/mozilla/javascript/Node;.setJsDocNode:(Lorg/mozilla/javascript/ast/Comment;)V` @kind virtual;
  #L417e4e.  return v0 @kind object;
}
procedure `void` `z1`(`org.mozilla.javascript.Parser` v1 @kind this, `int` v2 , `java.util.List` v3 @kind object, `int` v4 ) @signature `Lorg/mozilla/javascript/Parser;.z1:(ILjava/util/List;I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L41c6c0.  v0:= v1.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41c6c4.  call temp:= `getWarnTrailingComma`(v0) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.getWarnTrailingComma:()Z` @kind virtual;
  #L41c6ca.  v0:= temp;
  #L41c6cc.  if v0 == 0 then goto L41c70e;
  #L41c6d0.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L41c6d6.  v0:= temp;
  #L41c6d8.  if v0 != 0 then goto L41c6f2;
  #L41c6dc.  v2:= 0I;
  #L41c6de.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L41c6e4.  v2:= temp @kind object;
  #L41c6e6.  v2:= (`org.mozilla.javascript.ast.AstNode`) v2 @kind object;
  #L41c6ea.  call temp:= `getPosition`(v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L41c6f0.  v2:= temp;
  #L41c6f2.  call temp:= `v0`(v1, v4) @signature `Lorg/mozilla/javascript/Parser;.v0:(I)I` @kind direct;
  #L41c6f8.  v3:= temp;
  #L41c6fa.  call temp:= `max`(v2, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L41c700.  v2:= temp;
  #L41c702.  v4:= v4 - v2 @kind int;
  #L41c704.  v3:= "msg.extra.trailing.comma" @kind object;
  #L41c708.  call `r`(v1, v3, v2, v4) @signature `Lorg/mozilla/javascript/Parser;.r:(Ljava/lang/String;II)V` @kind virtual;
  #L41c70e.  return @kind void;
}
procedure `org.mozilla.javascript.Node` `O`(`org.mozilla.javascript.Parser` v1 @kind this, `int` v2 , `org.mozilla.javascript.Node` v3 @kind object, `org.mozilla.javascript.Node` v4 @kind object) @signature `Lorg/mozilla/javascript/Parser;.O:(ILorg/mozilla/javascript/Node;Lorg/mozilla/javascript/Node;)Lorg/mozilla/javascript/Node;` @AccessFlag  {
    temp;
    v0;

  #L41758c.  v0:= v1.`org.mozilla.javascript.Parser.p` @type ^`org.mozilla.javascript.ast.ScriptNode` @kind object;
  #L417590.  call temp:= `getNextTempName`(v0) @signature `Lorg/mozilla/javascript/ast/ScriptNode;.getNextTempName:()Ljava/lang/String;` @kind virtual;
  #L417596.  v0:= temp @kind object;
  #L417598.  call temp:= `W`(v1, v2, v3, v4, v0) @signature `Lorg/mozilla/javascript/Parser;.W:(ILorg/mozilla/javascript/Node;Lorg/mozilla/javascript/Node;Ljava/lang/String;)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L41759e.  v2:= temp @kind object;
  #L4175a0.  call temp:= `getLastChild`(v2) @signature `Lorg/mozilla/javascript/Node;.getLastChild:()Lorg/mozilla/javascript/Node;` @kind virtual;
  #L4175a6.  v3:= temp @kind object;
  #L4175a8.  call temp:= `createName`(v1, v0) @signature `Lorg/mozilla/javascript/Parser;.createName:(Ljava/lang/String;)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L4175ae.  v4:= temp @kind object;
  #L4175b0.  call `addChildToBack`(v3, v4) @signature `Lorg/mozilla/javascript/Node;.addChildToBack:(Lorg/mozilla/javascript/Node;)V` @kind virtual;
  #L4175b6.  return v2 @kind object;
}
procedure `void` `T`(`org.mozilla.javascript.Parser` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lorg/mozilla/javascript/Parser;.T:(ILjava/lang/String;)V` @AccessFlag  {
    temp;
    v0;

  #L41be74.  v0:= 0I;
  #L41be76.  call `U`(v1, v2, v3, v0) @signature `Lorg/mozilla/javascript/Parser;.U:(ILjava/lang/String;Z)V` @kind virtual;
  #L41be7c.  return @kind void;
}
procedure `void` `U`(`org.mozilla.javascript.Parser` v10 @kind this, `int` v11 , `java.lang.String` v12 @kind object, `boolean` v13 ) @signature `Lorg/mozilla/javascript/Parser;.U:(ILjava/lang/String;Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L41be90.  v0:= 0I;
  #L41be92.  if v12 != 0 then goto L41beb0;
  #L41be96.  v11:= v10.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41be9a.  call temp:= `isIdeMode`(v11) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isIdeMode:()Z` @kind virtual;
  #L41bea0.  v11:= temp;
  #L41bea2.  if v11 == 0 then goto L41bea8;
  #L41bea6.  return @kind void;
  #L41bea8.  call temp:= `J`(v10) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L41beae.  throw v0;
  #L41beb0.  v1:= v10.`org.mozilla.javascript.Parser.q` @type ^`org.mozilla.javascript.ast.Scope` @kind object;
  #L41beb4.  call temp:= `getDefiningScope`(v1, v12) @signature `Lorg/mozilla/javascript/ast/Scope;.getDefiningScope:(Ljava/lang/String;)Lorg/mozilla/javascript/ast/Scope;` @kind virtual;
  #L41beba.  v1:= temp @kind object;
  #L41bebc.  if v1 == 0 then goto L41beca;
  #L41bec0.  call temp:= `getSymbol`(v1, v12) @signature `Lorg/mozilla/javascript/ast/Scope;.getSymbol:(Ljava/lang/String;)Lorg/mozilla/javascript/ast/Symbol;` @kind virtual;
  #L41bec6.  v2:= temp @kind object;
  #L41bec8.  goto L41becc;
  #L41beca.  v2:= v0 @kind object;
  #L41becc.  if v2 == 0 then goto L41beda;
  #L41bed0.  call temp:= `getDeclType`(v2) @signature `Lorg/mozilla/javascript/ast/Symbol;.getDeclType:()I` @kind virtual;
  #L41bed6.  v3:= temp;
  #L41bed8.  goto L41bedc;
  #L41beda.  v3:= -1I;
  #L41bedc.  v4:= "msg.var.redecl" @kind object;
  #L41bee0.  v5:= 109I;
  #L41bee4.  v6:= 153I;
  #L41bee8.  v7:= 122I;
  #L41beec.  v8:= 154I;
  #L41bef0.  if v2 == 0 then goto L41bf38;
  #L41bef4.  if v3 == v8 then goto L41bf08;
  #L41bef8.  if v11 == v8 then goto L41bf08;
  #L41befc.  v9:= v10.`org.mozilla.javascript.Parser.q` @type ^`org.mozilla.javascript.ast.Scope` @kind object;
  #L41bf00.  if v1 != v9 then goto L41bf38;
  #L41bf04.  if v3 != v6 then goto L41bf38;
  #L41bf08.  if v3 != v8 then goto L41bf12;
  #L41bf0c.  v4:= "msg.const.redecl" @kind object;
  #L41bf10.  goto L41bf30;
  #L41bf12.  if v3 != v6 then goto L41bf1c;
  #L41bf16.  v4:= "msg.let.redecl" @kind object;
  #L41bf1a.  goto L41bf30;
  #L41bf1c.  if v3 != v7 then goto L41bf22;
  #L41bf20.  goto L41bf30;
  #L41bf22.  if v3 != v5 then goto L41bf2c;
  #L41bf26.  v4:= "msg.fn.redecl" @kind object;
  #L41bf2a.  goto L41bf30;
  #L41bf2c.  v4:= "msg.parm.redecl" @kind object;
  #L41bf30.  call `m`(v10, v4, v12) @signature `Lorg/mozilla/javascript/Parser;.m:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L41bf36.  return @kind void;
  #L41bf38.  v1:= 87I;
  #L41bf3c.  if v11 == v1 then goto L41bfd6;
  #L41bf40.  if v11 == v5 then goto L41bfa0;
  #L41bf44.  if v11 == v7 then goto L41bfa0;
  #L41bf48.  if v11 == v6 then goto L41bf5a;
  #L41bf4c.  if v11 != v8 then goto L41bf52;
  #L41bf50.  goto L41bfa0;
  #L41bf52.  call temp:= `J`(v10) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L41bf58.  throw v0;
  #L41bf5a.  if v13 != 0 then goto L41bf8a;
  #L41bf5e.  v13:= v10.`org.mozilla.javascript.Parser.q` @type ^`org.mozilla.javascript.ast.Scope` @kind object;
  #L41bf62.  call temp:= `getType`(v13) @signature `Lorg/mozilla/javascript/Node;.getType:()I` @kind virtual;
  #L41bf68.  v13:= temp;
  #L41bf6a.  v0:= 112I;
  #L41bf6e.  if v13 == v0 then goto L41bf7e;
  #L41bf72.  v13:= v10.`org.mozilla.javascript.Parser.q` @type ^`org.mozilla.javascript.ast.Scope` @kind object;
  #L41bf76.  v13:= instanceof @variable v13 @type ^`org.mozilla.javascript.ast.Loop` @kind boolean;
  #L41bf7a.  if v13 == 0 then goto L41bf8a;
  #L41bf7e.  v11:= "msg.let.decl.not.in.block" @kind object;
  #L41bf82.  call `k`(v10, v11) @signature `Lorg/mozilla/javascript/Parser;.k:(Ljava/lang/String;)V` @kind virtual;
  #L41bf88.  return @kind void;
  #L41bf8a.  v13:= v10.`org.mozilla.javascript.Parser.q` @type ^`org.mozilla.javascript.ast.Scope` @kind object;
  #L41bf8e.  v0:= new `org.mozilla.javascript.ast.Symbol`;
  #L41bf92.  call `<init>`(v0, v11, v12) @signature `Lorg/mozilla/javascript/ast/Symbol;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L41bf98.  call `putSymbol`(v13, v0) @signature `Lorg/mozilla/javascript/ast/Scope;.putSymbol:(Lorg/mozilla/javascript/ast/Symbol;)V` @kind virtual;
  #L41bf9e.  return @kind void;
  #L41bfa0.  if v2 == 0 then goto L41bfc0;
  #L41bfa4.  if v3 != v7 then goto L41bfb0;
  #L41bfa8.  call `p`(v10, v4, v12) @signature `Lorg/mozilla/javascript/Parser;.p:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L41bfae.  goto L41bfd4;
  #L41bfb0.  if v3 != v1 then goto L41bfd4;
  #L41bfb4.  v11:= "msg.var.hides.arg" @kind object;
  #L41bfb8.  call `p`(v10, v11, v12) @signature `Lorg/mozilla/javascript/Parser;.p:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L41bfbe.  goto L41bfd4;
  #L41bfc0.  v13:= v10.`org.mozilla.javascript.Parser.p` @type ^`org.mozilla.javascript.ast.ScriptNode` @kind object;
  #L41bfc4.  v0:= new `org.mozilla.javascript.ast.Symbol`;
  #L41bfc8.  call `<init>`(v0, v11, v12) @signature `Lorg/mozilla/javascript/ast/Symbol;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L41bfce.  call `putSymbol`(v13, v0) @signature `Lorg/mozilla/javascript/ast/Scope;.putSymbol:(Lorg/mozilla/javascript/ast/Symbol;)V` @kind virtual;
  #L41bfd4.  return @kind void;
  #L41bfd6.  if v2 == 0 then goto L41bfe4;
  #L41bfda.  v13:= "msg.dup.parms" @kind object;
  #L41bfde.  call `s`(v10, v13, v12) @signature `Lorg/mozilla/javascript/Parser;.s:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L41bfe4.  v13:= v10.`org.mozilla.javascript.Parser.p` @type ^`org.mozilla.javascript.ast.ScriptNode` @kind object;
  #L41bfe8.  v0:= new `org.mozilla.javascript.ast.Symbol`;
  #L41bfec.  call `<init>`(v0, v11, v12) @signature `Lorg/mozilla/javascript/ast/Symbol;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L41bff2.  call `putSymbol`(v13, v0) @signature `Lorg/mozilla/javascript/ast/Scope;.putSymbol:(Lorg/mozilla/javascript/ast/Symbol;)V` @kind virtual;
  #L41bff8.  return @kind void;
}
procedure `boolean` `V`(`org.mozilla.javascript.Parser` v10 @kind this, `org.mozilla.javascript.ast.ArrayLiteral` v11 @kind object, `int` v12 , `java.lang.String` v13 @kind object, `org.mozilla.javascript.Node` v14 @kind object, `java.util.List` v15 @kind object) @signature `Lorg/mozilla/javascript/Parser;.V:(Lorg/mozilla/javascript/ast/ArrayLiteral;ILjava/lang/String;Lorg/mozilla/javascript/Node;Ljava/util/List;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L416d24.  v0:= 154I;
  #L416d28.  if v12 != v0 then goto L416d32;
  #L416d2c.  v0:= 155I;
  #L416d30.  goto L416d36;
  #L416d32.  v0:= 8I;
  #L416d36.  call temp:= `getElements`(v11) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.getElements:()Ljava/util/List;` @kind virtual;
  #L416d3c.  v11:= temp @kind object;
  #L416d3e.  call temp:= `iterator`(v11) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L416d44.  v11:= temp @kind object;
  #L416d46.  v1:= 0I;
  #L416d48.  v2:= 1I;
  #L416d4a.  v3:= 1I;
  #L416d4c.  v4:= 0I;
  #L416d4e.  call temp:= `hasNext`(v11) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L416d54.  v5:= temp;
  #L416d56.  if v5 == 0 then goto L416e08;
  #L416d5a.  call temp:= `next`(v11) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L416d60.  v5:= temp @kind object;
  #L416d62.  v5:= (`org.mozilla.javascript.ast.AstNode`) v5 @kind object;
  #L416d66.  call temp:= `getType`(v5) @signature `Lorg/mozilla/javascript/Node;.getType:()I` @kind virtual;
  #L416d6c.  v6:= temp;
  #L416d6e.  v7:= 128I;
  #L416d72.  if v6 != v7 then goto L416d7c;
  #L416d76.  v4:= v4 + 1;
  #L416d7a.  goto L416d4e;
  #L416d7c.  v3:= new `org.mozilla.javascript.Node`;
  #L416d80.  v6:= 36I;
  #L416d84.  call temp:= `createName`(v10, v13) @signature `Lorg/mozilla/javascript/Parser;.createName:(Ljava/lang/String;)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L416d8a.  v7:= temp @kind object;
  #L416d8c.  v8:= (`double`) v4 @kind i2d;
  #L416d8e.  call temp:= `createNumber`(v10, v8) @signature `Lorg/mozilla/javascript/Parser;.createNumber:(D)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L416d94.  v8:= temp @kind object;
  #L416d96.  call `<init>`(v3, v6, v7, v8) @signature `Lorg/mozilla/javascript/Node;.<init>:(ILorg/mozilla/javascript/Node;Lorg/mozilla/javascript/Node;)V` @kind direct;
  #L416d9c.  call temp:= `getType`(v5) @signature `Lorg/mozilla/javascript/Node;.getType:()I` @kind virtual;
  #L416da2.  v6:= temp;
  #L416da4.  v7:= 39I;
  #L416da8.  if v6 != v7 then goto L416de6;
  #L416dac.  call temp:= `getString`(v5) @signature `Lorg/mozilla/javascript/Node;.getString:()Ljava/lang/String;` @kind virtual;
  #L416db2.  v5:= temp @kind object;
  #L416db4.  v6:= new `org.mozilla.javascript.Node`;
  #L416db8.  v7:= 49I;
  #L416dbc.  v8:= 0I;
  #L416dbe.  call temp:= `createName`(v10, v7, v5, v8) @signature `Lorg/mozilla/javascript/Parser;.createName:(ILjava/lang/String;Lorg/mozilla/javascript/Node;)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L416dc4.  v7:= temp @kind object;
  #L416dc6.  call `<init>`(v6, v0, v7, v3) @signature `Lorg/mozilla/javascript/Node;.<init>:(ILorg/mozilla/javascript/Node;Lorg/mozilla/javascript/Node;)V` @kind direct;
  #L416dcc.  call `addChildToBack`(v14, v6) @signature `Lorg/mozilla/javascript/Node;.addChildToBack:(Lorg/mozilla/javascript/Node;)V` @kind virtual;
  #L416dd2.  v3:= -1I;
  #L416dd4.  if v12 == v3 then goto L416e00;
  #L416dd8.  call `U`(v10, v12, v5, v2) @signature `Lorg/mozilla/javascript/Parser;.U:(ILjava/lang/String;Z)V` @kind virtual;
  #L416dde.  call temp:= `add`(v15, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L416de4.  goto L416e00;
  #L416de6.  v6:= v10.`org.mozilla.javascript.Parser.p` @type ^`org.mozilla.javascript.ast.ScriptNode` @kind object;
  #L416dea.  call temp:= `getNextTempName`(v6) @signature `Lorg/mozilla/javascript/ast/ScriptNode;.getNextTempName:()Ljava/lang/String;` @kind virtual;
  #L416df0.  v6:= temp @kind object;
  #L416df2.  call temp:= `W`(v10, v12, v5, v3, v6) @signature `Lorg/mozilla/javascript/Parser;.W:(ILorg/mozilla/javascript/Node;Lorg/mozilla/javascript/Node;Ljava/lang/String;)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L416df8.  v3:= temp @kind object;
  #L416dfa.  call `addChildToBack`(v14, v3) @signature `Lorg/mozilla/javascript/Node;.addChildToBack:(Lorg/mozilla/javascript/Node;)V` @kind virtual;
  #L416e00.  v4:= v4 + 1;
  #L416e04.  v3:= 0I;
  #L416e06.  goto L416d4e;
  #L416e08.  return v3;
}
procedure `org.mozilla.javascript.Node` `W`(`org.mozilla.javascript.Parser` v10 @kind this, `int` v11 , `org.mozilla.javascript.Node` v12 @kind object, `org.mozilla.javascript.Node` v13 @kind object, `java.lang.String` v14 @kind object) @signature `Lorg/mozilla/javascript/Parser;.W:(ILorg/mozilla/javascript/Node;Lorg/mozilla/javascript/Node;Ljava/lang/String;)Lorg/mozilla/javascript/Node;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L417634.  call temp:= `getLineno`(v12) @signature `Lorg/mozilla/javascript/Node;.getLineno:()I` @kind virtual;
  #L41763a.  v0:= temp;
  #L41763c.  v1:= 158I;
  #L417640.  call temp:= `createScopeNode`(v10, v1, v0) @signature `Lorg/mozilla/javascript/Parser;.createScopeNode:(II)Lorg/mozilla/javascript/ast/Scope;` @kind virtual;
  #L417646.  v0:= temp @kind object;
  #L417648.  v1:= new `org.mozilla.javascript.Node`;
  #L41764c.  v2:= 39I;
  #L417650.  call temp:= `createName`(v10, v2, v14, v13) @signature `Lorg/mozilla/javascript/Parser;.createName:(ILjava/lang/String;Lorg/mozilla/javascript/Node;)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L417656.  v13:= temp @kind object;
  #L417658.  v2:= 153I;
  #L41765c.  call `<init>`(v1, v2, v13) @signature `Lorg/mozilla/javascript/Node;.<init>:(ILorg/mozilla/javascript/Node;)V` @kind direct;
  #L417662.  call `addChildToFront`(v0, v1) @signature `Lorg/mozilla/javascript/Node;.addChildToFront:(Lorg/mozilla/javascript/Node;)V` @kind virtual;
  #L417668.  call `d1`(v10, v0) @signature `Lorg/mozilla/javascript/Parser;.d1:(Lorg/mozilla/javascript/ast/Scope;)V` @kind virtual;
  #L41766e.  v13:= 1I;
  #L417670.  call `U`(v10, v2, v14, v13) @signature `Lorg/mozilla/javascript/Parser;.U:(ILjava/lang/String;Z)V` @kind virtual;
  #L417676.  call `Z0`(v10) @signature `Lorg/mozilla/javascript/Parser;.Z0:()V` @kind virtual;
  #L41767c.  v1:= new `org.mozilla.javascript.Node`;
  #L417680.  v3:= 89I;
  #L417684.  call `<init>`(v1, v3) @signature `Lorg/mozilla/javascript/Node;.<init>:(I)V` @kind direct;
  #L41768a.  call `addChildToBack`(v0, v1) @signature `Lorg/mozilla/javascript/Node;.addChildToBack:(Lorg/mozilla/javascript/Node;)V` @kind virtual;
  #L417690.  v9:= new `java.util.ArrayList`;
  #L417694.  call `<init>`(v9) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L41769a.  call temp:= `getType`(v12) @signature `Lorg/mozilla/javascript/Node;.getType:()I` @kind virtual;
  #L4176a0.  v3:= temp;
  #L4176a2.  v4:= 33I;
  #L4176a6.  v5:= "msg.bad.assign.left" @kind object;
  #L4176aa.  if v3 == v4 then goto L417702;
  #L4176ae.  v4:= 36I;
  #L4176b2.  if v3 == v4 then goto L417702;
  #L4176b6.  v2:= 65I;
  #L4176ba.  if v3 == v2 then goto L4176e8;
  #L4176be.  v2:= 66I;
  #L4176c2.  if v3 == v2 then goto L4176ce;
  #L4176c6.  call `i1`(v10, v5) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L4176cc.  goto L417734;
  #L4176ce.  v4:= v12 @kind object;
  #L4176d0.  v4:= (`org.mozilla.javascript.ast.ObjectLiteral`) v4 @kind object;
  #L4176d4.  v3:= v10 @kind object;
  #L4176d6.  v5:= v11;
  #L4176d8.  v6:= v14 @kind object;
  #L4176da.  v7:= v1 @kind object;
  #L4176dc.  v8:= v9 @kind object;
  #L4176de.  call temp:= `X`(v3, v4, v5, v6, v7, v8) @signature `Lorg/mozilla/javascript/Parser;.X:(Lorg/mozilla/javascript/ast/ObjectLiteral;ILjava/lang/String;Lorg/mozilla/javascript/Node;Ljava/util/List;)Z` @kind virtual;
  #L4176e4.  v13:= temp;
  #L4176e6.  goto L417734;
  #L4176e8.  v4:= v12 @kind object;
  #L4176ea.  v4:= (`org.mozilla.javascript.ast.ArrayLiteral`) v4 @kind object;
  #L4176ee.  v3:= v10 @kind object;
  #L4176f0.  v5:= v11;
  #L4176f2.  v6:= v14 @kind object;
  #L4176f4.  v7:= v1 @kind object;
  #L4176f6.  v8:= v9 @kind object;
  #L4176f8.  call temp:= `V`(v3, v4, v5, v6, v7, v8) @signature `Lorg/mozilla/javascript/Parser;.V:(Lorg/mozilla/javascript/ast/ArrayLiteral;ILjava/lang/String;Lorg/mozilla/javascript/Node;Ljava/util/List;)Z` @kind virtual;
  #L4176fe.  v13:= temp;
  #L417700.  goto L417734;
  #L417702.  v3:= 122I;
  #L417706.  if v11 == v3 then goto L417718;
  #L41770a.  if v11 == v2 then goto L417718;
  #L41770e.  v2:= 154I;
  #L417712.  if v11 == v2 then goto L417718;
  #L417716.  goto L41771e;
  #L417718.  call `i1`(v10, v5) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41771e.  call temp:= `createName`(v10, v14) @signature `Lorg/mozilla/javascript/Parser;.createName:(Ljava/lang/String;)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L417724.  v11:= temp @kind object;
  #L417726.  call temp:= `simpleAssignment`(v10, v12, v11) @signature `Lorg/mozilla/javascript/Parser;.simpleAssignment:(Lorg/mozilla/javascript/Node;Lorg/mozilla/javascript/Node;)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L41772c.  v11:= temp @kind object;
  #L41772e.  call `addChildToBack`(v1, v11) @signature `Lorg/mozilla/javascript/Node;.addChildToBack:(Lorg/mozilla/javascript/Node;)V` @kind virtual;
  #L417734.  if v13 == 0 then goto L41774a;
  #L417738.  v11:= 0L;
  #L41773c.  call temp:= `createNumber`(v10, v11) @signature `Lorg/mozilla/javascript/Parser;.createNumber:(D)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L417742.  v11:= temp @kind object;
  #L417744.  call `addChildToBack`(v1, v11) @signature `Lorg/mozilla/javascript/Node;.addChildToBack:(Lorg/mozilla/javascript/Node;)V` @kind virtual;
  #L41774a.  v11:= 22I;
  #L41774e.  call `putProp`(v0, v11, v9) @signature `Lorg/mozilla/javascript/Node;.putProp:(ILjava/lang/Object;)V` @kind virtual;
  #L417754.  return v0 @kind object;
  #L417756.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L417758.  call `Z0`(v10) @signature `Lorg/mozilla/javascript/Parser;.Z0:()V` @kind virtual;
  #L41775e.  throw v11;
  catch `java.lang.Throwable` @[L417668..L417676] goto L417756;
}
procedure `boolean` `X`(`org.mozilla.javascript.Parser` v10 @kind this, `org.mozilla.javascript.ast.ObjectLiteral` v11 @kind object, `int` v12 , `java.lang.String` v13 @kind object, `org.mozilla.javascript.Node` v14 @kind object, `java.util.List` v15 @kind object) @signature `Lorg/mozilla/javascript/Parser;.X:(Lorg/mozilla/javascript/ast/ObjectLiteral;ILjava/lang/String;Lorg/mozilla/javascript/Node;Ljava/util/List;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L416e1c.  v0:= 154I;
  #L416e20.  if v12 != v0 then goto L416e2a;
  #L416e24.  v0:= 155I;
  #L416e28.  goto L416e2e;
  #L416e2a.  v0:= 8I;
  #L416e2e.  call temp:= `getElements`(v11) @signature `Lorg/mozilla/javascript/ast/ObjectLiteral;.getElements:()Ljava/util/List;` @kind virtual;
  #L416e34.  v11:= temp @kind object;
  #L416e36.  call temp:= `iterator`(v11) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L416e3c.  v11:= temp @kind object;
  #L416e3e.  v1:= 0I;
  #L416e40.  v2:= 1I;
  #L416e42.  v3:= 1I;
  #L416e44.  call temp:= `hasNext`(v11) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L416e4a.  v4:= temp;
  #L416e4c.  if v4 == 0 then goto L416f92;
  #L416e50.  call temp:= `next`(v11) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L416e56.  v3:= temp @kind object;
  #L416e58.  v3:= (`org.mozilla.javascript.ast.ObjectProperty`) v3 @kind object;
  #L416e5c.  v4:= v10.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L416e60.  if v4 == 0 then goto L416e6a;
  #L416e64.  v4:= v4.`org.mozilla.javascript.u.o` @type ^`int`;
  #L416e68.  goto L416e6c;
  #L416e6a.  v4:= 0I;
  #L416e6c.  call temp:= `getLeft`(v3) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.getLeft:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L416e72.  v5:= temp @kind object;
  #L416e74.  v6:= instanceof @variable v5 @type ^`org.mozilla.javascript.ast.Name` @kind boolean;
  #L416e78.  v7:= 0I;
  #L416e7a.  v8:= 33I;
  #L416e7e.  if v6 == 0 then goto L416eaa;
  #L416e82.  v5:= (`org.mozilla.javascript.ast.Name`) v5 @kind object;
  #L416e86.  call temp:= `getIdentifier`(v5) @signature `Lorg/mozilla/javascript/ast/Name;.getIdentifier:()Ljava/lang/String;` @kind virtual;
  #L416e8c.  v5:= temp @kind object;
  #L416e8e.  call temp:= `newString`(v5) @signature `Lorg/mozilla/javascript/Node;.newString:(Ljava/lang/String;)Lorg/mozilla/javascript/Node;` @kind static;
  #L416e94.  v5:= temp @kind object;
  #L416e96.  v6:= new `org.mozilla.javascript.Node`;
  #L416e9a.  call temp:= `createName`(v10, v13) @signature `Lorg/mozilla/javascript/Parser;.createName:(Ljava/lang/String;)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L416ea0.  v9:= temp @kind object;
  #L416ea2.  call `<init>`(v6, v8, v9, v5) @signature `Lorg/mozilla/javascript/Node;.<init>:(ILorg/mozilla/javascript/Node;Lorg/mozilla/javascript/Node;)V` @kind direct;
  #L416ea8.  goto L416f10;
  #L416eaa.  v6:= instanceof @variable v5 @type ^`org.mozilla.javascript.ast.StringLiteral` @kind boolean;
  #L416eae.  if v6 == 0 then goto L416eda;
  #L416eb2.  v5:= (`org.mozilla.javascript.ast.StringLiteral`) v5 @kind object;
  #L416eb6.  call temp:= `getValue`(v5) @signature `Lorg/mozilla/javascript/ast/StringLiteral;.getValue:()Ljava/lang/String;` @kind virtual;
  #L416ebc.  v5:= temp @kind object;
  #L416ebe.  call temp:= `newString`(v5) @signature `Lorg/mozilla/javascript/Node;.newString:(Ljava/lang/String;)Lorg/mozilla/javascript/Node;` @kind static;
  #L416ec4.  v5:= temp @kind object;
  #L416ec6.  v6:= new `org.mozilla.javascript.Node`;
  #L416eca.  call temp:= `createName`(v10, v13) @signature `Lorg/mozilla/javascript/Parser;.createName:(Ljava/lang/String;)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L416ed0.  v9:= temp @kind object;
  #L416ed2.  call `<init>`(v6, v8, v9, v5) @signature `Lorg/mozilla/javascript/Node;.<init>:(ILorg/mozilla/javascript/Node;Lorg/mozilla/javascript/Node;)V` @kind direct;
  #L416ed8.  goto L416f10;
  #L416eda.  v6:= instanceof @variable v5 @type ^`org.mozilla.javascript.ast.NumberLiteral` @kind boolean;
  #L416ede.  if v6 == 0 then goto L416f8a;
  #L416ee2.  v5:= (`org.mozilla.javascript.ast.NumberLiteral`) v5 @kind object;
  #L416ee6.  call temp:= `getNumber`(v5) @signature `Lorg/mozilla/javascript/ast/NumberLiteral;.getNumber:()D` @kind virtual;
  #L416eec.  v5:= temp @kind wide;
  #L416eee.  v5:= (`int`) v5 @kind d2i;
  #L416ef0.  v5:= (`double`) v5 @kind i2d;
  #L416ef2.  call temp:= `createNumber`(v10, v5) @signature `Lorg/mozilla/javascript/Parser;.createNumber:(D)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L416ef8.  v5:= temp @kind object;
  #L416efa.  v6:= new `org.mozilla.javascript.Node`;
  #L416efe.  v8:= 36I;
  #L416f02.  call temp:= `createName`(v10, v13) @signature `Lorg/mozilla/javascript/Parser;.createName:(Ljava/lang/String;)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L416f08.  v9:= temp @kind object;
  #L416f0a.  call `<init>`(v6, v8, v9, v5) @signature `Lorg/mozilla/javascript/Node;.<init>:(ILorg/mozilla/javascript/Node;Lorg/mozilla/javascript/Node;)V` @kind direct;
  #L416f10.  call `setLineno`(v6, v4) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L416f16.  call temp:= `getRight`(v3) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.getRight:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L416f1c.  v3:= temp @kind object;
  #L416f1e.  call temp:= `getType`(v3) @signature `Lorg/mozilla/javascript/Node;.getType:()I` @kind virtual;
  #L416f24.  v4:= temp;
  #L416f26.  v5:= 39I;
  #L416f2a.  if v4 != v5 then goto L416f6a;
  #L416f2e.  v3:= (`org.mozilla.javascript.ast.Name`) v3 @kind object;
  #L416f32.  call temp:= `getIdentifier`(v3) @signature `Lorg/mozilla/javascript/ast/Name;.getIdentifier:()Ljava/lang/String;` @kind virtual;
  #L416f38.  v3:= temp @kind object;
  #L416f3a.  v4:= new `org.mozilla.javascript.Node`;
  #L416f3e.  v5:= 49I;
  #L416f42.  call temp:= `createName`(v10, v5, v3, v7) @signature `Lorg/mozilla/javascript/Parser;.createName:(ILjava/lang/String;Lorg/mozilla/javascript/Node;)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L416f48.  v5:= temp @kind object;
  #L416f4a.  call `<init>`(v4, v0, v5, v6) @signature `Lorg/mozilla/javascript/Node;.<init>:(ILorg/mozilla/javascript/Node;Lorg/mozilla/javascript/Node;)V` @kind direct;
  #L416f50.  call `addChildToBack`(v14, v4) @signature `Lorg/mozilla/javascript/Node;.addChildToBack:(Lorg/mozilla/javascript/Node;)V` @kind virtual;
  #L416f56.  v4:= -1I;
  #L416f58.  if v12 == v4 then goto L416f84;
  #L416f5c.  call `U`(v10, v12, v3, v2) @signature `Lorg/mozilla/javascript/Parser;.U:(ILjava/lang/String;Z)V` @kind virtual;
  #L416f62.  call temp:= `add`(v15, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L416f68.  goto L416f84;
  #L416f6a.  v4:= v10.`org.mozilla.javascript.Parser.p` @type ^`org.mozilla.javascript.ast.ScriptNode` @kind object;
  #L416f6e.  call temp:= `getNextTempName`(v4) @signature `Lorg/mozilla/javascript/ast/ScriptNode;.getNextTempName:()Ljava/lang/String;` @kind virtual;
  #L416f74.  v4:= temp @kind object;
  #L416f76.  call temp:= `W`(v10, v12, v3, v6, v4) @signature `Lorg/mozilla/javascript/Parser;.W:(ILorg/mozilla/javascript/Node;Lorg/mozilla/javascript/Node;Ljava/lang/String;)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L416f7c.  v3:= temp @kind object;
  #L416f7e.  call `addChildToBack`(v14, v3) @signature `Lorg/mozilla/javascript/Node;.addChildToBack:(Lorg/mozilla/javascript/Node;)V` @kind virtual;
  #L416f84.  v3:= 0I;
  #L416f86.  goto L416e44;
  #L416f8a.  call temp:= `J`(v10) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L416f90.  throw v7;
  #L416f92.  return v3;
}
procedure `void` `Z0`(`org.mozilla.javascript.Parser` v1 @kind this) @signature `Lorg/mozilla/javascript/Parser;.Z0:()V` @AccessFlag  {
    temp;
    v0;

  #L41c3b4.  v0:= v1.`org.mozilla.javascript.Parser.q` @type ^`org.mozilla.javascript.ast.Scope` @kind object;
  #L41c3b8.  call temp:= `getParentScope`(v0) @signature `Lorg/mozilla/javascript/ast/Scope;.getParentScope:()Lorg/mozilla/javascript/ast/Scope;` @kind virtual;
  #L41c3be.  v0:= temp @kind object;
  #L41c3c0.  v1.`org.mozilla.javascript.Parser.q` @type ^`org.mozilla.javascript.ast.Scope` := v0 @kind object;
  #L41c3c4.  return @kind void;
}
procedure `void` `checkActivationName`(`org.mozilla.javascript.Parser` v3 @kind this, `java.lang.String` v4 @kind object, `int` v5 ) @signature `Lorg/mozilla/javascript/Parser;.checkActivationName:(Ljava/lang/String;I)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L41bca4.  call temp:= `s0`(v3) @signature `Lorg/mozilla/javascript/Parser;.s0:()Z` @kind virtual;
  #L41bcaa.  v0:= temp;
  #L41bcac.  if v0 != 0 then goto L41bcb2;
  #L41bcb0.  return @kind void;
  #L41bcb2.  v0:= 0I;
  #L41bcb4.  v1:= "arguments" @kind object;
  #L41bcb8.  call temp:= `equals`(v1, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41bcbe.  v1:= temp;
  #L41bcc0.  v2:= 1I;
  #L41bcc2.  if v1 != 0 then goto L41bd1c;
  #L41bcc6.  v1:= v3.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41bcca.  call temp:= `getActivationNames`(v1) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.getActivationNames:()Ljava/util/Set;` @kind virtual;
  #L41bcd0.  v1:= temp @kind object;
  #L41bcd2.  if v1 == 0 then goto L41bcf0;
  #L41bcd6.  v1:= v3.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41bcda.  call temp:= `getActivationNames`(v1) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.getActivationNames:()Ljava/util/Set;` @kind virtual;
  #L41bce0.  v1:= temp @kind object;
  #L41bce2.  call temp:= `contains`(v1, v4) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L41bce8.  v1:= temp;
  #L41bcea.  if v1 == 0 then goto L41bcf0;
  #L41bcee.  goto L41bd1c;
  #L41bcf0.  v1:= "length" @kind object;
  #L41bcf4.  call temp:= `equals`(v1, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41bcfa.  v4:= temp;
  #L41bcfc.  if v4 == 0 then goto L41bd1e;
  #L41bd00.  v4:= 33I;
  #L41bd04.  if v5 != v4 then goto L41bd1e;
  #L41bd08.  v4:= v3.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41bd0c.  call temp:= `getLanguageVersion`(v4) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.getLanguageVersion:()I` @kind virtual;
  #L41bd12.  v4:= temp;
  #L41bd14.  v5:= 120I;
  #L41bd18.  if v4 != v5 then goto L41bd1e;
  #L41bd1c.  v0:= 1I;
  #L41bd1e.  if v0 == 0 then goto L41bd28;
  #L41bd22.  call `setRequiresActivation`(v3) @signature `Lorg/mozilla/javascript/Parser;.setRequiresActivation:()V` @kind virtual;
  #L41bd28.  return @kind void;
}
procedure `void` `checkMutableReference`(`org.mozilla.javascript.Parser` v2 @kind this, `org.mozilla.javascript.Node` v3 @kind object) @signature `Lorg/mozilla/javascript/Parser;.checkMutableReference:(Lorg/mozilla/javascript/Node;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L41be28.  v0:= 16I;
  #L41be2c.  v1:= 0I;
  #L41be2e.  call temp:= `getIntProp`(v3, v0, v1) @signature `Lorg/mozilla/javascript/Node;.getIntProp:(II)I` @kind virtual;
  #L41be34.  v3:= temp;
  #L41be36.  v3:= v3 ^& 4;
  #L41be3a.  if v3 == 0 then goto L41be48;
  #L41be3e.  v3:= "msg.bad.assign.left" @kind object;
  #L41be42.  call `i1`(v2, v3) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @kind virtual;
  #L41be48.  return @kind void;
}
procedure `org.mozilla.javascript.Node` `createName`(`org.mozilla.javascript.Parser` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `org.mozilla.javascript.Node` v3 @kind object) @signature `Lorg/mozilla/javascript/Parser;.createName:(ILjava/lang/String;Lorg/mozilla/javascript/Node;)Lorg/mozilla/javascript/Node;` @AccessFlag PROTECTED {
    temp;

  #L4175c8.  call temp:= `createName`(v0, v2) @signature `Lorg/mozilla/javascript/Parser;.createName:(Ljava/lang/String;)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L4175ce.  v2:= temp @kind object;
  #L4175d0.  call temp:= `setType`(v2, v1) @signature `Lorg/mozilla/javascript/Node;.setType:(I)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L4175d6.  if v3 == 0 then goto L4175e0;
  #L4175da.  call `addChildToBack`(v2, v3) @signature `Lorg/mozilla/javascript/Node;.addChildToBack:(Lorg/mozilla/javascript/Node;)V` @kind virtual;
  #L4175e0.  return v2 @kind object;
}
procedure `org.mozilla.javascript.Node` `createName`(`org.mozilla.javascript.Parser` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/mozilla/javascript/Parser;.createName:(Ljava/lang/String;)Lorg/mozilla/javascript/Node;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4175f4.  v0:= 39I;
  #L4175f8.  call `checkActivationName`(v1, v2, v0) @signature `Lorg/mozilla/javascript/Parser;.checkActivationName:(Ljava/lang/String;I)V` @kind virtual;
  #L4175fe.  call temp:= `newString`(v0, v2) @signature `Lorg/mozilla/javascript/Node;.newString:(ILjava/lang/String;)Lorg/mozilla/javascript/Node;` @kind static;
  #L417604.  v2:= temp @kind object;
  #L417606.  return v2 @kind object;
}
procedure `org.mozilla.javascript.Node` `createNumber`(`org.mozilla.javascript.Parser` v0 @kind this, `double` v1 ) @signature `Lorg/mozilla/javascript/Parser;.createNumber:(D)Lorg/mozilla/javascript/Node;` @AccessFlag PROTECTED {
    temp;

  #L417618.  call temp:= `newNumber`(v1) @signature `Lorg/mozilla/javascript/Node;.newNumber:(D)Lorg/mozilla/javascript/Node;` @kind static;
  #L41761e.  v1:= temp @kind object;
  #L417620.  return v1 @kind object;
}
procedure `org.mozilla.javascript.ast.Scope` `createScopeNode`(`org.mozilla.javascript.Parser` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/mozilla/javascript/Parser;.createScopeNode:(II)Lorg/mozilla/javascript/ast/Scope;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L41b088.  v0:= new `org.mozilla.javascript.ast.Scope`;
  #L41b08c.  call `<init>`(v0) @signature `Lorg/mozilla/javascript/ast/Scope;.<init>:()V` @kind direct;
  #L41b092.  call temp:= `setType`(v0, v2) @signature `Lorg/mozilla/javascript/Node;.setType:(I)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L41b098.  call `setLineno`(v0, v3) @signature `Lorg/mozilla/javascript/Node;.setLineno:(I)V` @kind virtual;
  #L41b09e.  return v0 @kind object;
}
procedure `void` `d1`(`org.mozilla.javascript.Parser` v2 @kind this, `org.mozilla.javascript.ast.Scope` v3 @kind object) @signature `Lorg/mozilla/javascript/Parser;.d1:(Lorg/mozilla/javascript/ast/Scope;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L41c3d8.  call temp:= `getParentScope`(v3) @signature `Lorg/mozilla/javascript/ast/Scope;.getParentScope:()Lorg/mozilla/javascript/ast/Scope;` @kind virtual;
  #L41c3de.  v0:= temp @kind object;
  #L41c3e0.  if v0 == 0 then goto L41c3f8;
  #L41c3e4.  v1:= v2.`org.mozilla.javascript.Parser.q` @type ^`org.mozilla.javascript.ast.Scope` @kind object;
  #L41c3e8.  if v0 != v1 then goto L41c3ee;
  #L41c3ec.  goto L41c402;
  #L41c3ee.  call temp:= `J`(v2) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L41c3f4.  v3:= 0I;
  #L41c3f6.  throw v3;
  #L41c3f8.  v0:= v2.`org.mozilla.javascript.Parser.q` @type ^`org.mozilla.javascript.ast.Scope` @kind object;
  #L41c3fc.  call `addChildScope`(v0, v3) @signature `Lorg/mozilla/javascript/ast/Scope;.addChildScope:(Lorg/mozilla/javascript/ast/Scope;)V` @kind virtual;
  #L41c402.  v2.`org.mozilla.javascript.Parser.q` @type ^`org.mozilla.javascript.ast.Scope` := v3 @kind object;
  #L41c406.  return @kind void;
}
procedure `boolean` `eof`(`org.mozilla.javascript.Parser` v1 @kind this) @signature `Lorg/mozilla/javascript/Parser;.eof:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L416fa4.  v0:= v1.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L416fa8.  call temp:= `d`(v0) @signature `Lorg/mozilla/javascript/u;.d:()Z` @kind virtual;
  #L416fae.  v0:= temp;
  #L416fb0.  return v0;
}
procedure `void` `i1`(`org.mozilla.javascript.Parser` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/mozilla/javascript/Parser;.i1:(Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;

  #L41c554.  v0:= 0I;
  #L41c556.  call `k1`(v1, v2, v0) @signature `Lorg/mozilla/javascript/Parser;.k1:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L41c55c.  return @kind void;
}
procedure `void` `j1`(`org.mozilla.javascript.Parser` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/mozilla/javascript/Parser;.j1:(Ljava/lang/String;II)V` @AccessFlag  {
    temp;
    v0;

  #L41c570.  v0:= 0I;
  #L41c572.  call `l1`(v1, v2, v0, v3, v4) @signature `Lorg/mozilla/javascript/Parser;.l1:(Ljava/lang/String;Ljava/lang/String;II)V` @kind virtual;
  #L41c578.  return @kind void;
}
procedure `void` `k`(`org.mozilla.javascript.Parser` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/mozilla/javascript/Parser;.k:(Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L41ba08.  v0:= v2.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41ba0c.  v1:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41ba10.  v0:= v0.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41ba14.  v0:= v0 - v1 @kind int;
  #L41ba16.  call `l`(v2, v3, v1, v0) @signature `Lorg/mozilla/javascript/Parser;.l:(Ljava/lang/String;II)V` @kind virtual;
  #L41ba1c.  return @kind void;
}
procedure `void` `k1`(`org.mozilla.javascript.Parser` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/mozilla/javascript/Parser;.k1:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L41c58c.  v0:= v2.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41c590.  if v0 != 0 then goto L41c59e;
  #L41c594.  v0:= 1I;
  #L41c596.  call `l1`(v2, v3, v4, v0, v0) @signature `Lorg/mozilla/javascript/Parser;.l1:(Ljava/lang/String;Ljava/lang/String;II)V` @kind virtual;
  #L41c59c.  goto L41c5ae;
  #L41c59e.  v1:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41c5a2.  v0:= v0.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41c5a6.  v0:= v0 - v1 @kind int;
  #L41c5a8.  call `l1`(v2, v3, v4, v1, v0) @signature `Lorg/mozilla/javascript/Parser;.l1:(Ljava/lang/String;Ljava/lang/String;II)V` @kind virtual;
  #L41c5ae.  return @kind void;
}
procedure `void` `l`(`org.mozilla.javascript.Parser` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/mozilla/javascript/Parser;.l:(Ljava/lang/String;II)V` @AccessFlag  {
    temp;
    v0;

  #L41ba30.  v0:= 0I;
  #L41ba32.  call `n`(v1, v2, v0, v3, v4) @signature `Lorg/mozilla/javascript/Parser;.n:(Ljava/lang/String;Ljava/lang/String;II)V` @kind virtual;
  #L41ba38.  return @kind void;
}
procedure `void` `l1`(`org.mozilla.javascript.Parser` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/mozilla/javascript/Parser;.l1:(Ljava/lang/String;Ljava/lang/String;II)V` @AccessFlag  {
    temp;

  #L41c5c0.  call `l`(v0, v1, v3, v4) @signature `Lorg/mozilla/javascript/Parser;.l:(Ljava/lang/String;II)V` @kind virtual;
  #L41c5c6.  v1:= v0.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41c5ca.  call temp:= `recoverFromErrors`(v1) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.recoverFromErrors:()Z` @kind virtual;
  #L41c5d0.  v1:= temp;
  #L41c5d2.  if v1 == 0 then goto L41c5d8;
  #L41c5d6.  return @kind void;
  #L41c5d8.  v1:= new `org.mozilla.javascript.Parser$c`;
  #L41c5dc.  v2:= 0I;
  #L41c5de.  call `<init>`(v1, v2) @signature `Lorg/mozilla/javascript/Parser$c;.<init>:(Lorg/mozilla/javascript/Parser$a;)V` @kind direct;
  #L41c5e4.  throw v1;
}
procedure `void` `m`(`org.mozilla.javascript.Parser` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/mozilla/javascript/Parser;.m:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L41ba4c.  v0:= v2.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41ba50.  v1:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41ba54.  v0:= v0.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41ba58.  v0:= v0 - v1 @kind int;
  #L41ba5a.  call `n`(v2, v3, v4, v1, v0) @signature `Lorg/mozilla/javascript/Parser;.n:(Ljava/lang/String;Ljava/lang/String;II)V` @kind virtual;
  #L41ba60.  return @kind void;
}
procedure `void` `n`(`org.mozilla.javascript.Parser` v8 @kind this, `java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lorg/mozilla/javascript/Parser;.n:(Ljava/lang/String;Ljava/lang/String;II)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L41ba74.  v0:= v8.`org.mozilla.javascript.Parser.k` @type ^`int`;
  #L41ba78.  v1:= 1I;
  #L41ba7a.  v0:= v0 + v1 @kind int;
  #L41ba7c.  v8.`org.mozilla.javascript.Parser.k` @type ^`int` := v0;
  #L41ba80.  call temp:= `x0`(v8, v9, v10) @signature `Lorg/mozilla/javascript/Parser;.x0:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L41ba86.  v3:= temp @kind object;
  #L41ba88.  v9:= v8.`org.mozilla.javascript.Parser.c` @type ^`org.mozilla.javascript.ast.IdeErrorReporter` @kind object;
  #L41ba8c.  if v9 == 0 then goto L41ba9c;
  #L41ba90.  v10:= v8.`org.mozilla.javascript.Parser.d` @type ^`java.lang.String` @kind object;
  #L41ba94.  call `error`(v9, v3, v10, v11, v12) @signature `Lorg/mozilla/javascript/ast/IdeErrorReporter;.error:(Ljava/lang/String;Ljava/lang/String;II)V` @kind interface;
  #L41ba9a.  goto L41bae4;
  #L41ba9c.  v9:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41baa0.  if v9 == 0 then goto L41bacc;
  #L41baa4.  call temp:= `l`(v9) @signature `Lorg/mozilla/javascript/u;.l:()I` @kind virtual;
  #L41baaa.  v1:= temp;
  #L41baac.  v9:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41bab0.  call temp:= `k`(v9) @signature `Lorg/mozilla/javascript/u;.k:()Ljava/lang/String;` @kind virtual;
  #L41bab6.  v9:= temp @kind object;
  #L41bab8.  v10:= v8.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41babc.  call temp:= `o`(v10) @signature `Lorg/mozilla/javascript/u;.o:()I` @kind virtual;
  #L41bac2.  v10:= temp;
  #L41bac4.  v6:= v9 @kind object;
  #L41bac6.  v7:= v10;
  #L41bac8.  v5:= v1;
  #L41baca.  goto L41bad6;
  #L41bacc.  v9:= "" @kind object;
  #L41bad0.  v6:= v9 @kind object;
  #L41bad2.  v5:= 1I;
  #L41bad4.  v7:= 1I;
  #L41bad6.  v2:= v8.`org.mozilla.javascript.Parser.b` @type ^`org.mozilla.javascript.ErrorReporter` @kind object;
  #L41bada.  v4:= v8.`org.mozilla.javascript.Parser.d` @type ^`java.lang.String` @kind object;
  #L41bade.  call `error`(v2, v3, v4, v5, v6, v7) @signature `Lorg/mozilla/javascript/ErrorReporter;.error:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;I)V` @kind interface;
  #L41bae4.  return @kind void;
}
procedure `void` `p`(`org.mozilla.javascript.Parser` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/mozilla/javascript/Parser;.p:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L41baf8.  v0:= v2.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41bafc.  v1:= -1I;
  #L41bafe.  if v0 == 0 then goto L41bb0e;
  #L41bb02.  v1:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41bb06.  v0:= v0.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41bb0a.  v0:= v0 - v1 @kind int;
  #L41bb0c.  goto L41bb10;
  #L41bb0e.  v0:= -1I;
  #L41bb10.  call `q`(v2, v3, v4, v1, v0) @signature `Lorg/mozilla/javascript/Parser;.q:(Ljava/lang/String;Ljava/lang/String;II)V` @kind virtual;
  #L41bb16.  return @kind void;
}
procedure `org.mozilla.javascript.ast.AstRoot` `parse`(`org.mozilla.javascript.Parser` v2 @kind this, `java.io.Reader` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 ) @signature `Lorg/mozilla/javascript/Parser;.parse:(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ast/AstRoot;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41a04c.  v0:= v2.`org.mozilla.javascript.Parser.g` @type ^`boolean` @kind boolean;
  #L41a050.  if v0 != 0 then goto L41a0a2;
  #L41a054.  v0:= v2.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41a058.  call temp:= `isIdeMode`(v0) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isIdeMode:()Z` @kind virtual;
  #L41a05e.  v0:= temp;
  #L41a060.  if v0 == 0 then goto L41a076;
  #L41a064.  call temp:= `e1`(v2, v3) @signature `Lorg/mozilla/javascript/Parser;.e1:(Ljava/io/Reader;)Ljava/lang/String;` @kind direct;
  #L41a06a.  v3:= temp @kind object;
  #L41a06c.  call temp:= `parse`(v2, v3, v4, v5) @signature `Lorg/mozilla/javascript/Parser;.parse:(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ast/AstRoot;` @kind virtual;
  #L41a072.  v3:= temp @kind object;
  #L41a074.  return v3 @kind object;
  #L41a076.  v0:= 1I;
  #L41a078.  v2.`org.mozilla.javascript.Parser.d` @type ^`java.lang.String` := v4 @kind object;
  #L41a07c.  v4:= new `org.mozilla.javascript.u`;
  #L41a080.  v1:= 0I;
  #L41a082.  call `<init>`(v4, v2, v3, v1, v5) @signature `Lorg/mozilla/javascript/u;.<init>:(Lorg/mozilla/javascript/Parser;Ljava/io/Reader;Ljava/lang/String;I)V` @kind direct;
  #L41a088.  v2.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` := v4 @kind object;
  #L41a08c.  call temp:= `S0`(v2) @signature `Lorg/mozilla/javascript/Parser;.S0:()Lorg/mozilla/javascript/ast/AstRoot;` @kind direct;
  #L41a092.  v3:= temp @kind object;
  #L41a094.  v2.`org.mozilla.javascript.Parser.g` @type ^`boolean` := v0 @kind boolean;
  #L41a098.  return v3 @kind object;
  #L41a09a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41a09c.  v2.`org.mozilla.javascript.Parser.g` @type ^`boolean` := v0 @kind boolean;
  #L41a0a0.  throw v3;
  #L41a0a2.  v3:= new `java.lang.IllegalStateException`;
  #L41a0a6.  v4:= "parser reused" @kind object;
  #L41a0aa.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41a0b0.  throw v3;
  catch `java.lang.Throwable` @[L41a078..L41a094] goto L41a09a;
}
procedure `org.mozilla.javascript.ast.AstRoot` `parse`(`org.mozilla.javascript.Parser` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `int` v4 ) @signature `Lorg/mozilla/javascript/Parser;.parse:(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ast/AstRoot;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41a0d0.  v0:= v1.`org.mozilla.javascript.Parser.g` @type ^`boolean` @kind boolean;
  #L41a0d4.  if v0 != 0 then goto L41a12e;
  #L41a0d8.  v1.`org.mozilla.javascript.Parser.d` @type ^`java.lang.String` := v3 @kind object;
  #L41a0dc.  v3:= v1.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41a0e0.  call temp:= `isIdeMode`(v3) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isIdeMode:()Z` @kind virtual;
  #L41a0e6.  v3:= temp;
  #L41a0e8.  if v3 == 0 then goto L41a0f8;
  #L41a0ec.  call temp:= `toCharArray`(v2) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L41a0f2.  v3:= temp @kind object;
  #L41a0f4.  v1.`org.mozilla.javascript.Parser.e` @type ^`char`[] := v3 @kind object;
  #L41a0f8.  v3:= new `org.mozilla.javascript.u`;
  #L41a0fc.  v0:= 0I;
  #L41a0fe.  call `<init>`(v3, v1, v0, v2, v4) @signature `Lorg/mozilla/javascript/u;.<init>:(Lorg/mozilla/javascript/Parser;Ljava/io/Reader;Ljava/lang/String;I)V` @kind direct;
  #L41a104.  v1.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` := v3 @kind object;
  #L41a108.  v2:= 1I;
  #L41a10a.  call temp:= `S0`(v1) @signature `Lorg/mozilla/javascript/Parser;.S0:()Lorg/mozilla/javascript/ast/AstRoot;` @kind direct;
  #L41a110.  v3:= temp @kind object;
  #L41a112.  v1.`org.mozilla.javascript.Parser.g` @type ^`boolean` := v2 @kind boolean;
  #L41a116.  return v3 @kind object;
  #L41a118.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L41a11a.  goto L41a128;
  #L41a11c.  v3:= new `java.lang.IllegalStateException`;
  #L41a120.  call `<init>`(v3) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L41a126.  throw v3;
  #L41a128.  v1.`org.mozilla.javascript.Parser.g` @type ^`boolean` := v2 @kind boolean;
  #L41a12c.  throw v3;
  #L41a12e.  v2:= new `java.lang.IllegalStateException`;
  #L41a132.  v3:= "parser reused" @kind object;
  #L41a136.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41a13c.  throw v2;
  catch `java.io.IOException` @[L41a10a..L41a112] goto L41a11c;
  catch `java.lang.Throwable` @[L41a10a..L41a112] goto L41a118;
  catch `java.lang.Throwable` @[L41a11c..L41a128] goto L41a118;
}
procedure `void` `q`(`org.mozilla.javascript.Parser` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lorg/mozilla/javascript/Parser;.q:(Ljava/lang/String;Ljava/lang/String;II)V` @AccessFlag  {
    temp;
    v0;

  #L41bb28.  v0:= v1.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41bb2c.  call temp:= `isStrictMode`(v0) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.isStrictMode:()Z` @kind virtual;
  #L41bb32.  v0:= temp;
  #L41bb34.  if v0 == 0 then goto L41bb3e;
  #L41bb38.  call `t`(v1, v2, v3, v4, v5) @signature `Lorg/mozilla/javascript/Parser;.t:(Ljava/lang/String;Ljava/lang/String;II)V` @kind virtual;
  #L41bb3e.  return @kind void;
}
procedure `void` `r`(`org.mozilla.javascript.Parser` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/mozilla/javascript/Parser;.r:(Ljava/lang/String;II)V` @AccessFlag  {
    temp;
    v0;

  #L41bb50.  v0:= 0I;
  #L41bb52.  call `t`(v1, v2, v0, v3, v4) @signature `Lorg/mozilla/javascript/Parser;.t:(Ljava/lang/String;Ljava/lang/String;II)V` @kind virtual;
  #L41bb58.  return @kind void;
}
procedure `org.mozilla.javascript.ast.AstNode` `removeParens`(`org.mozilla.javascript.Parser` v1 @kind this, `org.mozilla.javascript.ast.AstNode` v2 @kind object) @signature `Lorg/mozilla/javascript/Parser;.removeParens:(Lorg/mozilla/javascript/ast/AstNode;)Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L41950c.  v0:= instanceof @variable v2 @type ^`org.mozilla.javascript.ast.ParenthesizedExpression` @kind boolean;
  #L419510.  if v0 == 0 then goto L419522;
  #L419514.  v2:= (`org.mozilla.javascript.ast.ParenthesizedExpression`) v2 @kind object;
  #L419518.  call temp:= `getExpression`(v2) @signature `Lorg/mozilla/javascript/ast/ParenthesizedExpression;.getExpression:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L41951e.  v2:= temp @kind object;
  #L419520.  goto L41950c;
  #L419522.  return v2 @kind object;
}
procedure `void` `s`(`org.mozilla.javascript.Parser` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/mozilla/javascript/Parser;.s:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L41bb6c.  v0:= v2.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41bb70.  v1:= -1I;
  #L41bb72.  if v0 == 0 then goto L41bb82;
  #L41bb76.  v1:= v0.`org.mozilla.javascript.u.v` @type ^`int`;
  #L41bb7a.  v0:= v0.`org.mozilla.javascript.u.w` @type ^`int`;
  #L41bb7e.  v0:= v0 - v1 @kind int;
  #L41bb80.  goto L41bb84;
  #L41bb82.  v0:= -1I;
  #L41bb84.  call `t`(v2, v3, v4, v1, v0) @signature `Lorg/mozilla/javascript/Parser;.t:(Ljava/lang/String;Ljava/lang/String;II)V` @kind virtual;
  #L41bb8a.  return @kind void;
}
procedure `boolean` `s0`(`org.mozilla.javascript.Parser` v1 @kind this) @signature `Lorg/mozilla/javascript/Parser;.s0:()Z` @AccessFlag  {
    temp;
    v0;

  #L416fc4.  v0:= v1.`org.mozilla.javascript.Parser.nestingOfFunction` @type ^`int`;
  #L416fc8.  if v0 == 0 then goto L416fd0;
  #L416fcc.  v0:= 1I;
  #L416fce.  goto L416fd2;
  #L416fd0.  v0:= 0I;
  #L416fd2.  return v0;
}
procedure `void` `setIsGenerator`(`org.mozilla.javascript.Parser` v1 @kind this) @signature `Lorg/mozilla/javascript/Parser;.setIsGenerator:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L41c618.  call temp:= `s0`(v1) @signature `Lorg/mozilla/javascript/Parser;.s0:()Z` @kind virtual;
  #L41c61e.  v0:= temp;
  #L41c620.  if v0 == 0 then goto L41c632;
  #L41c624.  v0:= v1.`org.mozilla.javascript.Parser.p` @type ^`org.mozilla.javascript.ast.ScriptNode` @kind object;
  #L41c628.  v0:= (`org.mozilla.javascript.ast.FunctionNode`) v0 @kind object;
  #L41c62c.  call `setIsGenerator`(v0) @signature `Lorg/mozilla/javascript/ast/FunctionNode;.setIsGenerator:()V` @kind virtual;
  #L41c632.  return @kind void;
}
procedure `void` `setRequiresActivation`(`org.mozilla.javascript.Parser` v1 @kind this) @signature `Lorg/mozilla/javascript/Parser;.setRequiresActivation:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L41c644.  call temp:= `s0`(v1) @signature `Lorg/mozilla/javascript/Parser;.s0:()Z` @kind virtual;
  #L41c64a.  v0:= temp;
  #L41c64c.  if v0 == 0 then goto L41c65e;
  #L41c650.  v0:= v1.`org.mozilla.javascript.Parser.p` @type ^`org.mozilla.javascript.ast.ScriptNode` @kind object;
  #L41c654.  v0:= (`org.mozilla.javascript.ast.FunctionNode`) v0 @kind object;
  #L41c658.  call `setRequiresActivation`(v0) @signature `Lorg/mozilla/javascript/ast/FunctionNode;.setRequiresActivation:()V` @kind virtual;
  #L41c65e.  return @kind void;
}
procedure `org.mozilla.javascript.Node` `simpleAssignment`(`org.mozilla.javascript.Parser` v3 @kind this, `org.mozilla.javascript.Node` v4 @kind object, `org.mozilla.javascript.Node` v5 @kind object) @signature `Lorg/mozilla/javascript/Parser;.simpleAssignment:(Lorg/mozilla/javascript/Node;Lorg/mozilla/javascript/Node;)Lorg/mozilla/javascript/Node;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L41777c.  call temp:= `getType`(v4) @signature `Lorg/mozilla/javascript/Node;.getType:()I` @kind virtual;
  #L417782.  v0:= temp;
  #L417784.  v1:= 33I;
  #L417788.  if v0 == v1 then goto L41781e;
  #L41778c.  v2:= 36I;
  #L417790.  if v0 == v2 then goto L41781e;
  #L417794.  v1:= 39I;
  #L417798.  if v0 == v1 then goto L4177cc;
  #L41779c.  v1:= 67I;
  #L4177a0.  if v0 != v1 then goto L4177c2;
  #L4177a4.  call temp:= `getFirstChild`(v4) @signature `Lorg/mozilla/javascript/Node;.getFirstChild:()Lorg/mozilla/javascript/Node;` @kind virtual;
  #L4177aa.  v4:= temp @kind object;
  #L4177ac.  call `checkMutableReference`(v3, v4) @signature `Lorg/mozilla/javascript/Parser;.checkMutableReference:(Lorg/mozilla/javascript/Node;)V` @kind virtual;
  #L4177b2.  v0:= new `org.mozilla.javascript.Node`;
  #L4177b6.  v1:= 68I;
  #L4177ba.  call `<init>`(v0, v1, v4, v5) @signature `Lorg/mozilla/javascript/Node;.<init>:(ILorg/mozilla/javascript/Node;Lorg/mozilla/javascript/Node;)V` @kind direct;
  #L4177c0.  return v0 @kind object;
  #L4177c2.  call temp:= `J`(v3) @signature `Lorg/mozilla/javascript/Parser;.J:()Ljava/lang/RuntimeException;` @kind direct;
  #L4177c8.  v4:= 0I;
  #L4177ca.  throw v4;
  #L4177cc.  v0:= v3.`org.mozilla.javascript.Parser.inUseStrictDirective` @type ^`boolean` @kind boolean;
  #L4177d0.  if v0 == 0 then goto L417804;
  #L4177d4.  v0:= v4 @kind object;
  #L4177d6.  v0:= (`org.mozilla.javascript.ast.Name`) v0 @kind object;
  #L4177da.  call temp:= `getIdentifier`(v0) @signature `Lorg/mozilla/javascript/ast/Name;.getIdentifier:()Ljava/lang/String;` @kind virtual;
  #L4177e0.  v1:= temp @kind object;
  #L4177e2.  v2:= "eval" @kind object;
  #L4177e6.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4177ec.  v1:= temp;
  #L4177ee.  if v1 == 0 then goto L417804;
  #L4177f2.  call temp:= `getIdentifier`(v0) @signature `Lorg/mozilla/javascript/ast/Name;.getIdentifier:()Ljava/lang/String;` @kind virtual;
  #L4177f8.  v0:= temp @kind object;
  #L4177fa.  v1:= "msg.bad.id.strict" @kind object;
  #L4177fe.  call `k1`(v3, v1, v0) @signature `Lorg/mozilla/javascript/Parser;.k1:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L417804.  v0:= 49I;
  #L417808.  call temp:= `setType`(v4, v0) @signature `Lorg/mozilla/javascript/Node;.setType:(I)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L41780e.  v0:= new `org.mozilla.javascript.Node`;
  #L417812.  v1:= 8I;
  #L417816.  call `<init>`(v0, v1, v4, v5) @signature `Lorg/mozilla/javascript/Node;.<init>:(ILorg/mozilla/javascript/Node;Lorg/mozilla/javascript/Node;)V` @kind direct;
  #L41781c.  return v0 @kind object;
  #L41781e.  v2:= instanceof @variable v4 @type ^`org.mozilla.javascript.ast.PropertyGet` @kind boolean;
  #L417822.  if v2 == 0 then goto L41783c;
  #L417826.  v4:= (`org.mozilla.javascript.ast.PropertyGet`) v4 @kind object;
  #L41782a.  call temp:= `getTarget`(v4) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.getTarget:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L417830.  v2:= temp @kind object;
  #L417832.  call temp:= `getProperty`(v4) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.getProperty:()Lorg/mozilla/javascript/ast/Name;` @kind virtual;
  #L417838.  v4:= temp @kind object;
  #L41783a.  goto L41786a;
  #L41783c.  v2:= instanceof @variable v4 @type ^`org.mozilla.javascript.ast.ElementGet` @kind boolean;
  #L417840.  if v2 == 0 then goto L41785a;
  #L417844.  v4:= (`org.mozilla.javascript.ast.ElementGet`) v4 @kind object;
  #L417848.  call temp:= `getTarget`(v4) @signature `Lorg/mozilla/javascript/ast/ElementGet;.getTarget:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L41784e.  v2:= temp @kind object;
  #L417850.  call temp:= `getElement`(v4) @signature `Lorg/mozilla/javascript/ast/ElementGet;.getElement:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L417856.  v4:= temp @kind object;
  #L417858.  goto L41786a;
  #L41785a.  call temp:= `getFirstChild`(v4) @signature `Lorg/mozilla/javascript/Node;.getFirstChild:()Lorg/mozilla/javascript/Node;` @kind virtual;
  #L417860.  v2:= temp @kind object;
  #L417862.  call temp:= `getLastChild`(v4) @signature `Lorg/mozilla/javascript/Node;.getLastChild:()Lorg/mozilla/javascript/Node;` @kind virtual;
  #L417868.  v4:= temp @kind object;
  #L41786a.  if v0 != v1 then goto L41787e;
  #L41786e.  v0:= 35I;
  #L417872.  v1:= 41I;
  #L417876.  call temp:= `setType`(v4, v1) @signature `Lorg/mozilla/javascript/Node;.setType:(I)Lorg/mozilla/javascript/Node;` @kind virtual;
  #L41787c.  goto L417882;
  #L41787e.  v0:= 37I;
  #L417882.  v1:= new `org.mozilla.javascript.Node`;
  #L417886.  call `<init>`(v1, v0, v2, v4, v5) @signature `Lorg/mozilla/javascript/Node;.<init>:(ILorg/mozilla/javascript/Node;Lorg/mozilla/javascript/Node;Lorg/mozilla/javascript/Node;)V` @kind direct;
  #L41788c.  return v1 @kind object;
}
procedure `void` `t`(`org.mozilla.javascript.Parser` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/mozilla/javascript/Parser;.t:(Ljava/lang/String;Ljava/lang/String;II)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41bb9c.  call temp:= `x0`(v6, v7, v8) @signature `Lorg/mozilla/javascript/Parser;.x0:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L41bba2.  v1:= temp @kind object;
  #L41bba4.  v0:= v6.`org.mozilla.javascript.Parser.a` @type ^`org.mozilla.javascript.CompilerEnvirons` @kind object;
  #L41bba8.  call temp:= `reportWarningAsError`(v0) @signature `Lorg/mozilla/javascript/CompilerEnvirons;.reportWarningAsError:()Z` @kind virtual;
  #L41bbae.  v0:= temp;
  #L41bbb0.  if v0 == 0 then goto L41bbbc;
  #L41bbb4.  call `n`(v6, v7, v8, v9, v10) @signature `Lorg/mozilla/javascript/Parser;.n:(Ljava/lang/String;Ljava/lang/String;II)V` @kind virtual;
  #L41bbba.  goto L41bc02;
  #L41bbbc.  v7:= v6.`org.mozilla.javascript.Parser.c` @type ^`org.mozilla.javascript.ast.IdeErrorReporter` @kind object;
  #L41bbc0.  if v7 == 0 then goto L41bbd0;
  #L41bbc4.  v8:= v6.`org.mozilla.javascript.Parser.d` @type ^`java.lang.String` @kind object;
  #L41bbc8.  call `warning`(v7, v1, v8, v9, v10) @signature `Lorg/mozilla/javascript/ast/IdeErrorReporter;.warning:(Ljava/lang/String;Ljava/lang/String;II)V` @kind interface;
  #L41bbce.  goto L41bc02;
  #L41bbd0.  v0:= v6.`org.mozilla.javascript.Parser.b` @type ^`org.mozilla.javascript.ErrorReporter` @kind object;
  #L41bbd4.  v2:= v6.`org.mozilla.javascript.Parser.d` @type ^`java.lang.String` @kind object;
  #L41bbd8.  v7:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41bbdc.  call temp:= `l`(v7) @signature `Lorg/mozilla/javascript/u;.l:()I` @kind virtual;
  #L41bbe2.  v3:= temp;
  #L41bbe4.  v7:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41bbe8.  call temp:= `k`(v7) @signature `Lorg/mozilla/javascript/u;.k:()Ljava/lang/String;` @kind virtual;
  #L41bbee.  v4:= temp @kind object;
  #L41bbf0.  v7:= v6.`org.mozilla.javascript.Parser.h` @type ^`org.mozilla.javascript.u` @kind object;
  #L41bbf4.  call temp:= `o`(v7) @signature `Lorg/mozilla/javascript/u;.o:()I` @kind virtual;
  #L41bbfa.  v5:= temp;
  #L41bbfc.  call `warning`(v0, v1, v2, v3, v4, v5) @signature `Lorg/mozilla/javascript/ErrorReporter;.warning:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;I)V` @kind interface;
  #L41bc02.  return @kind void;
}
procedure `java.lang.String` `w0`(`org.mozilla.javascript.Parser` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/mozilla/javascript/Parser;.w0:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;

  #L417380.  v0:= 0I;
  #L417382.  call temp:= `x0`(v1, v2, v0) @signature `Lorg/mozilla/javascript/Parser;.x0:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L417388.  v2:= temp @kind object;
  #L41738a.  return v2 @kind object;
}
procedure `java.lang.String` `x0`(`org.mozilla.javascript.Parser` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/mozilla/javascript/Parser;.x0:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag  {
    temp;

  #L41739c.  if v2 != 0 then goto L4173aa;
  #L4173a0.  call temp:= `getMessage0`(v1) @signature `Lorg/mozilla/javascript/ScriptRuntime;.getMessage0:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4173a6.  v1:= temp @kind object;
  #L4173a8.  goto L4173b2;
  #L4173aa.  call temp:= `getMessage1`(v1, v2) @signature `Lorg/mozilla/javascript/ScriptRuntime;.getMessage1:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4173b0.  v1:= temp @kind object;
  #L4173b2.  return v1 @kind object;
}
procedure `void` `z0`(`org.mozilla.javascript.Parser` v1 @kind this, `org.mozilla.javascript.ast.AstNode` v2 @kind object) @signature `Lorg/mozilla/javascript/Parser;.z0:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag  {
    temp;
    v0;

  #L41c160.  v0:= instanceof @variable v2 @type ^`org.mozilla.javascript.ast.DestructuringForm` @kind boolean;
  #L41c164.  if v0 == 0 then goto L41c176;
  #L41c168.  v2:= (`org.mozilla.javascript.ast.DestructuringForm`) v2 @kind object;
  #L41c16c.  v0:= 1I;
  #L41c16e.  call `setIsDestructuring`(v2, v0) @signature `Lorg/mozilla/javascript/ast/DestructuringForm;.setIsDestructuring:(Z)V` @kind interface;
  #L41c174.  goto L41c190;
  #L41c176.  v0:= instanceof @variable v2 @type ^`org.mozilla.javascript.ast.ParenthesizedExpression` @kind boolean;
  #L41c17a.  if v0 == 0 then goto L41c190;
  #L41c17e.  v2:= (`org.mozilla.javascript.ast.ParenthesizedExpression`) v2 @kind object;
  #L41c182.  call temp:= `getExpression`(v2) @signature `Lorg/mozilla/javascript/ast/ParenthesizedExpression;.getExpression:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L41c188.  v2:= temp @kind object;
  #L41c18a.  call `z0`(v1, v2) @signature `Lorg/mozilla/javascript/Parser;.z0:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L41c190.  return @kind void;
}
