record `org.mozilla.javascript.SecureCaller` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<clinit>`() @signature `Lorg/mozilla/javascript/SecureCaller;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L425478.  call temp:= `b`() @signature `Lorg/mozilla/javascript/SecureCaller;.b:()[B` @kind static;
  #L42547e.  v0:= new `java.util.WeakHashMap`;
  #L425482.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L425488.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.SecureCaller` v0 @kind this) @signature `Lorg/mozilla/javascript/SecureCaller;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42549c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4254a2.  return @kind void;
}
procedure `byte`[] `a`() @signature `Lorg/mozilla/javascript/SecureCaller;.a:()[B` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L425394.  call temp:= `c`() @signature `Lorg/mozilla/javascript/SecureCaller;.c:()[B` @kind static;
  #L42539a.  v0:= temp @kind object;
  #L42539c.  return v0 @kind object;
}
procedure `byte`[] `b`() @signature `Lorg/mozilla/javascript/SecureCaller;.b:()[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4253b0.  v0:= new `org.mozilla.javascript.SecureCaller$a`;
  #L4253b4.  call `<init>`(v0) @signature `Lorg/mozilla/javascript/SecureCaller$a;.<init>:()V` @kind direct;
  #L4253ba.  call temp:= `doPrivileged`(v0) @signature `Ljava/security/AccessController;.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;` @kind static;
  #L4253c0.  v0:= temp @kind object;
  #L4253c2.  v0:= (`byte`[]) v0 @kind object;
  #L4253c6.  return v0 @kind object;
}
procedure `byte`[] `c`() @signature `Lorg/mozilla/javascript/SecureCaller;.c:()[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4253d8.  v0:= constclass @type ^`org.mozilla.javascript.SecureCaller` @kind object;
  #L4253dc.  v1:= "SecureCallerImpl.clazz" @kind object;
  #L4253e0.  call temp:= `getResource`(v0, v1) @signature `Ljava/lang/Class;.getResource:(Ljava/lang/String;)Ljava/net/URL;` @kind virtual;
  #L4253e6.  v0:= temp @kind object;
  #L4253e8.  call temp:= `openStream`(v0) @signature `Ljava/net/URL;.openStream:()Ljava/io/InputStream;` @kind virtual;
  #L4253ee.  v0:= temp @kind object;
  #L4253f0.  v1:= new `java.io.ByteArrayOutputStream`;
  #L4253f4.  call `<init>`(v1) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L4253fa.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L425400.  v2:= temp;
  #L425402.  v3:= -1I;
  #L425404.  if v2 != v3 then goto L425418;
  #L425408.  call temp:= `toByteArray`(v1) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L42540e.  v1:= temp @kind object;
  #L425410.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L425416.  return v1 @kind object;
  #L425418.  call `write`(v1, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L42541e.  goto L4253fa;
  #L425420.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L425422.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L425428.  throw v1;
  #L42542a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L42542c.  v1:= new `java.lang.reflect.UndeclaredThrowableException`;
  #L425430.  call `<init>`(v1, v0) @signature `Ljava/lang/reflect/UndeclaredThrowableException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L425436.  throw v1;
  catch `java.io.IOException` @[L4253e8..L4253f0] goto L42542a;
  catch `java.lang.Throwable` @[L4253f0..L425410] goto L425420;
  catch `java.io.IOException` @[L425410..L425416] goto L42542a;
  catch `java.lang.Throwable` @[L425418..L42541e] goto L425420;
  catch `java.io.IOException` @[L425422..L42542a] goto L42542a;
}
procedure `java.lang.Object` `call`(`org.mozilla.javascript.Callable` v0 @kind object, `org.mozilla.javascript.Context` v1 @kind object, `org.mozilla.javascript.Scriptable` v2 @kind object, `org.mozilla.javascript.Scriptable` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Lorg/mozilla/javascript/SecureCaller;.call:(Lorg/mozilla/javascript/Callable;Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
