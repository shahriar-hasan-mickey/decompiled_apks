record `org.mozilla.javascript.d` @kind class @AccessFlag  {
}
global `double`[] `@@org.mozilla.javascript.d.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `double`[] `@@org.mozilla.javascript.d.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.mozilla.javascript.d.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/mozilla/javascript/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3f4db0.  v0:= 23I;
  #L3f4db4.  v0:= new `double`[v0];
  #L3f4db8.  goto L3f4de4;
  #L3f4dbe.  `@@org.mozilla.javascript.d.a` @type ^`double`[] := v0 @kind object;
  #L3f4dc2.  v0:= 5I;
  #L3f4dc4.  v1:= new `double`[v0];
  #L3f4dc8.  goto L3f4ea4;
  #L3f4dce.  `@@org.mozilla.javascript.d.b` @type ^`double`[] := v1 @kind object;
  #L3f4dd2.  v0:= new `int`[v0];
  #L3f4dd6.  goto L3f4ed4;
  #L3f4ddc.  `@@org.mozilla.javascript.d.c` @type ^`int`[] := v0 @kind object;
  #L3f4de0.  return @kind void;
  #L3f4de2.  
  #L3f4de4.  v0:= (4607182418800017408L, 4621819117588971520L, 4636737291354636288L, 4652007308841189376L, 4666723172467343360L, 4681608360884174848L, 4696837146684686336L, 4711630319722168320L, 4726483295884279808L, 4741671816366391296L, 4756540486875873280L, 4771362005757984768L, 4786511204640096256L, 4801453603149578240L, 4816244402031689728L, 4831355200913801216L, 4846369599423283200L, 4861130398305394688L, 4876203697187506176L, 4891288408196988160L, 4906019910204099648L, 4921056587992461136L, 4936209963552724370L) @kind object;
  #L3f4ea3.  goto L3f4dbe;
  #L3f4ea4.  v1:= (4846369599423283200L, 5085611494797045271L, 5564284217833028085L, 6521906365687930162L, 8436737289693151036L) @kind object;
  #L3f4ed3.  goto L3f4dce;
  #L3f4ed4.  v0:= (0I, 0I, 3I, 2I, 2I) @kind object;
  #L3f4eef.  goto L3f4ddc;
}
procedure `char` `a`(`int` v1 ) @signature `Lorg/mozilla/javascript/d;.a:(I)C` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3f3b30.  v0:= 10I;
  #L3f3b34.  if v1 < v0 then goto L3f3b3e;
  #L3f3b38.  v1:= v1 + 87;
  #L3f3b3c.  goto L3f3b42;
  #L3f3b3e.  v1:= v1 + 48;
  #L3f3b42.  v1:= (`char`) v1 @kind i2c;
  #L3f3b44.  return v1;
}
procedure `int` `b`(`double` v41 , `int` v43 , `boolean` v44 , `int` v45 , `boolean`[] v46 @kind object, `java.lang.StringBuilder` v47 @kind object) @signature `Lorg/mozilla/javascript/d;.b:(DIZI[ZLjava/lang/StringBuilder;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;
    v30;
    v31;
    v32;
    v33;
    v34;
    v35;
    v36;
    v37;
    v38;
    v39;
    v40;

  #L3f3b90.  v0:= v43;
  #L3f3b94.  v1:= v47 @kind object;
  #L3f3b98.  v2:= 1I;
  #L3f3b9a.  v3:= new `int`[v2];
  #L3f3b9e.  v4:= new `int`[v2];
  #L3f3ba2.  call temp:= `m`(v41) @signature `Lorg/mozilla/javascript/d;.m:(D)I` @kind static;
  #L3f3ba8.  v5:= temp;
  #L3f3baa.  v6:= -2147483648I;
  #L3f3bae.  v5:= v5 ^& v6 @kind int;
  #L3f3bb0.  v6:= 0I;
  #L3f3bb2.  if v5 == 0 then goto L3f3bd8;
  #L3f3bb6.  v46[v6]:= v2 @kind boolean;
  #L3f3bba.  call temp:= `m`(v41) @signature `Lorg/mozilla/javascript/d;.m:(D)I` @kind static;
  #L3f3bc0.  v5:= temp;
  #L3f3bc2.  v7:= 2147483647I;
  #L3f3bc8.  v5:= v5 ^& v7 @kind int;
  #L3f3bca.  v7:= v41 @kind wide;
  #L3f3bce.  call temp:= `j`(v7, v5) @signature `Lorg/mozilla/javascript/d;.j:(DI)D` @kind static;
  #L3f3bd4.  v7:= temp @kind wide;
  #L3f3bd6.  goto L3f3be0;
  #L3f3bd8.  v7:= v41 @kind wide;
  #L3f3bdc.  v46[v6]:= v6 @kind boolean;
  #L3f3be0.  call temp:= `m`(v7) @signature `Lorg/mozilla/javascript/d;.m:(D)I` @kind static;
  #L3f3be6.  v5:= temp;
  #L3f3be8.  v9:= 2146435072I;
  #L3f3bec.  v5:= v5 ^& v9 @kind int;
  #L3f3bee.  v10:= 1048575I;
  #L3f3bf4.  if v5 != v9 then goto L3f3c28;
  #L3f3bf8.  call temp:= `n`(v7) @signature `Lorg/mozilla/javascript/d;.n:(D)I` @kind static;
  #L3f3bfe.  v0:= temp;
  #L3f3c00.  if v0 != 0 then goto L3f3c18;
  #L3f3c04.  call temp:= `m`(v7) @signature `Lorg/mozilla/javascript/d;.m:(D)I` @kind static;
  #L3f3c0a.  v0:= temp;
  #L3f3c0c.  v0:= v0 ^& v10 @kind int;
  #L3f3c0e.  if v0 != 0 then goto L3f3c18;
  #L3f3c12.  v0:= "Infinity" @kind object;
  #L3f3c16.  goto L3f3c1c;
  #L3f3c18.  v0:= "NaN" @kind object;
  #L3f3c1c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f3c22.  v0:= 9999I;
  #L3f3c26.  return v0;
  #L3f3c28.  v11:= 0L;
  #L3f3c2c.  v5:= 48I;
  #L3f3c30.  v9:= dcmpl(v7, v11);
  #L3f3c34.  if v9 != 0 then goto L3f3c46;
  #L3f3c38.  call `setLength`(v1, v6) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L3f3c3e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f3c44.  return v2;
  #L3f3c46.  call temp:= `e`(v7, v3, v4) @signature `Lorg/mozilla/javascript/d;.e:(D[I[I)Ljava/math/BigInteger;` @kind static;
  #L3f3c4c.  v9:= temp @kind object;
  #L3f3c4e.  call temp:= `m`(v7) @signature `Lorg/mozilla/javascript/d;.m:(D)I` @kind static;
  #L3f3c54.  v13:= temp;
  #L3f3c56.  v13:= v13 ^>> 20;
  #L3f3c5a.  v13:= v13 ^& 2047;
  #L3f3c5e.  v14:= 32I;
  #L3f3c62.  if v13 == 0 then goto L3f3c8e;
  #L3f3c66.  call temp:= `m`(v7) @signature `Lorg/mozilla/javascript/d;.m:(D)I` @kind static;
  #L3f3c6c.  v15:= temp;
  #L3f3c6e.  v15:= v15 ^& v10 @kind int;
  #L3f3c70.  v16:= 1.875F;
  #L3f3c74.  v15:= v15 ^| v16 @kind int;
  #L3f3c78.  call temp:= `j`(v7, v15) @signature `Lorg/mozilla/javascript/d;.j:(DI)D` @kind static;
  #L3f3c7e.  v15:= temp @kind wide;
  #L3f3c80.  v13:= v13 + -1023;
  #L3f3c84.  v17:= v3 @kind object;
  #L3f3c88.  v2:= v15 @kind wide;
  #L3f3c8a.  v10:= 0I;
  #L3f3c8c.  goto L3f3cfe;
  #L3f3c8e.  v13:= v4[v6];
  #L3f3c92.  v15:= v3[v6];
  #L3f3c96.  v13:= v13 + v15 @kind int;
  #L3f3c98.  v13:= v13 + 1074;
  #L3f3c9c.  if v13 <= v14 then goto L3f3ccc;
  #L3f3ca0.  call temp:= `m`(v7) @signature `Lorg/mozilla/javascript/d;.m:(D)I` @kind static;
  #L3f3ca6.  v15:= temp;
  #L3f3ca8.  v14:= (`long`) v15 @kind i2l;
  #L3f3caa.  v16:= v13 - 64;
  #L3f3cae.  v14:= v14 ^< v16 @kind long;
  #L3f3cb2.  call temp:= `n`(v7) @signature `Lorg/mozilla/javascript/d;.n:(D)I` @kind static;
  #L3f3cb8.  v16:= temp;
  #L3f3cba.  v17:= v13 + -32;
  #L3f3cbe.  v10:= v16 ^>> v17 @kind int;
  #L3f3cc2.  v17:= v3 @kind object;
  #L3f3cc6.  v2:= (`long`) v10 @kind i2l;
  #L3f3cc8.  v2:= v2 ^| v14 @kind long;
  #L3f3cca.  goto L3f3ce0;
  #L3f3ccc.  v17:= v3 @kind object;
  #L3f3cd0.  call temp:= `n`(v7) @signature `Lorg/mozilla/javascript/d;.n:(D)I` @kind static;
  #L3f3cd6.  v2:= temp;
  #L3f3cd8.  v2:= (`long`) v2 @kind i2l;
  #L3f3cda.  v10:= v13 - 32;
  #L3f3cde.  v2:= v2 ^< v10 @kind long;
  #L3f3ce0.  v2:= (`double`) v2 @kind l2d;
  #L3f3ce2.  call temp:= `m`(v2) @signature `Lorg/mozilla/javascript/d;.m:(D)I` @kind static;
  #L3f3ce8.  v10:= temp;
  #L3f3cea.  v14:= 32505856I;
  #L3f3cee.  v10:= v10 - v14 @kind int;
  #L3f3cf0.  call temp:= `j`(v2, v10) @signature `Lorg/mozilla/javascript/d;.j:(DI)D` @kind static;
  #L3f3cf6.  v2:= temp @kind wide;
  #L3f3cf8.  v13:= v13 + -1075;
  #L3f3cfc.  v10:= 1I;
  #L3f3cfe.  v14:= 1.5D;
  #L3f3d02.  v2:= v2 - v14 @kind double;
  #L3f3d04.  v14:= 0.289529654602168D;
  #L3f3d0e.  v2:= v2 * v14 @kind double;
  #L3f3d12.  v14:= 0.1760912590558D;
  #L3f3d1c.  v2:= v2 + v14 @kind double;
  #L3f3d1e.  v14:= (`double`) v13 @kind i2d;
  #L3f3d20.  v18:= 0.301029995663981D;
  #L3f3d2a.  v14:= v14 * v18 @kind double;
  #L3f3d2e.  v2:= v2 + v14 @kind double;
  #L3f3d30.  v14:= (`int`) v2 @kind d2i;
  #L3f3d32.  v15:= dcmpg(v2, v11);
  #L3f3d36.  if v15 >= 0 then goto L3f3d48;
  #L3f3d3a.  v11:= (`double`) v14 @kind i2d;
  #L3f3d3c.  v15:= dcmpl(v2, v11);
  #L3f3d40.  if v15 == 0 then goto L3f3d48;
  #L3f3d44.  v14:= v14 + -1;
  #L3f3d48.  if v14 < 0 then goto L3f3d6c;
  #L3f3d4c.  v2:= 22I;
  #L3f3d50.  if v14 > v2 then goto L3f3d6c;
  #L3f3d54.  v2:= `@@org.mozilla.javascript.d.a` @type ^`double`[] @kind object;
  #L3f3d58.  v11:= v2[v14] @kind wide;
  #L3f3d5c.  v2:= dcmpg(v7, v11);
  #L3f3d60.  if v2 >= 0 then goto L3f3d68;
  #L3f3d64.  v14:= v14 + -1;
  #L3f3d68.  v2:= 0I;
  #L3f3d6a.  goto L3f3d6e;
  #L3f3d6c.  v2:= 1I;
  #L3f3d6e.  v3:= v4[v6];
  #L3f3d72.  v3:= v3 - v13 @kind int;
  #L3f3d74.  v11:= 1I;
  #L3f3d76.  v3:= v3 - v11 @kind int;
  #L3f3d78.  if v3 < 0 then goto L3f3d82;
  #L3f3d7c.  v11:= v3;
  #L3f3d7e.  v3:= 0I;
  #L3f3d80.  goto L3f3d86;
  #L3f3d82.  v3:= -v3 @kind int;
  #L3f3d84.  v11:= 0I;
  #L3f3d86.  if v14 < 0 then goto L3f3d92;
  #L3f3d8a.  v11:= v11 + v14 @kind int;
  #L3f3d8c.  v13:= v14;
  #L3f3d8e.  v12:= 0I;
  #L3f3d90.  goto L3f3d98;
  #L3f3d92.  v3:= v3 - v14 @kind int;
  #L3f3d94.  v12:= -v14 @kind int;
  #L3f3d96.  v13:= 0I;
  #L3f3d98.  if v0 < 0 then goto L3f3da4;
  #L3f3d9c.  v15:= 9I;
  #L3f3da0.  if v0 <= v15 then goto L3f3da6;
  #L3f3da4.  v0:= 0I;
  #L3f3da6.  v15:= 5I;
  #L3f3da8.  if v0 <= v15 then goto L3f3db6;
  #L3f3dac.  v0:= v0 + -4;
  #L3f3db0.  v20:= 0I;
  #L3f3db4.  goto L3f3dba;
  #L3f3db6.  v20:= 1I;
  #L3f3dba.  v5:= 3I;
  #L3f3dbc.  v6:= 2I;
  #L3f3dbe.  v21:= -1I;
  #L3f3dc2.  if v0 == 0 then goto L3f3e30;
  #L3f3dc6.  v15:= 1I;
  #L3f3dc8.  if v0 == v15 then goto L3f3e30;
  #L3f3dcc.  if v0 == v6 then goto L3f3e16;
  #L3f3dd0.  if v0 == v5 then goto L3f3df4;
  #L3f3dd4.  v5:= 4I;
  #L3f3dd6.  if v0 == v5 then goto L3f3e18;
  #L3f3dda.  v5:= 5I;
  #L3f3ddc.  if v0 == v5 then goto L3f3df0;
  #L3f3de0.  v5:= v45;
  #L3f3de4.  v24:= v9 @kind object;
  #L3f3de8.  v6:= 0I;
  #L3f3dea.  v21:= 0I;
  #L3f3dee.  goto L3f3e3a;
  #L3f3df0.  v5:= 1I;
  #L3f3df2.  goto L3f3df6;
  #L3f3df4.  v5:= 0I;
  #L3f3df6.  v16:= v45 + v14 @kind int;
  #L3f3dfa.  v21:= v16 + 1;
  #L3f3dfe.  v15:= v21 + -1;
  #L3f3e02.  v24:= v9 @kind object;
  #L3f3e06.  v6:= v21;
  #L3f3e0a.  v21:= v15;
  #L3f3e0e.  v15:= v5;
  #L3f3e10.  v5:= v45;
  #L3f3e14.  goto L3f3e3a;
  #L3f3e16.  v15:= 0I;
  #L3f3e18.  if v45 > 0 then goto L3f3e20;
  #L3f3e1c.  v5:= 1I;
  #L3f3e1e.  goto L3f3e24;
  #L3f3e20.  v5:= v45;
  #L3f3e24.  v6:= v5;
  #L3f3e26.  v21:= v6;
  #L3f3e2a.  v24:= v9 @kind object;
  #L3f3e2e.  goto L3f3e3a;
  #L3f3e30.  v24:= v9 @kind object;
  #L3f3e34.  v5:= 0I;
  #L3f3e36.  v6:= -1I;
  #L3f3e38.  v15:= 1I;
  #L3f3e3a.  v25:= 48L;
  #L3f3e3e.  v27:= 10.0D;
  #L3f3e42.  if v6 < 0 then goto L3f41d8;
  #L3f3e46.  v9:= 14I;
  #L3f3e4a.  if v6 > v9 then goto L3f41d8;
  #L3f3e4e.  if v20 == 0 then goto L3f41d8;
  #L3f3e52.  if v14 <= 0 then goto L3f3ec8;
  #L3f3e56.  v9:= `@@org.mozilla.javascript.d.a` @type ^`double`[] @kind object;
  #L3f3e5a.  v20:= v14 ^& 15;
  #L3f3e5e.  v29:= v9[v20] @kind wide;
  #L3f3e62.  v9:= v14 ^> 4;
  #L3f3e66.  v20:= v9 ^& 16;
  #L3f3e6a.  if v20 == 0 then goto L3f3e8c;
  #L3f3e6e.  v9:= v9 ^& 15;
  #L3f3e72.  v20:= `@@org.mozilla.javascript.d.b` @type ^`double`[] @kind object;
  #L3f3e76.  v22:= 4I;
  #L3f3e7a.  v31:= v20[v22] @kind wide;
  #L3f3e7e.  v31:= v7 / v31 @kind double;
  #L3f3e82.  v20:= 0I;
  #L3f3e86.  v23:= 3I;
  #L3f3e8a.  goto L3f3e98;
  #L3f3e8c.  v31:= v7 @kind wide;
  #L3f3e90.  v20:= 0I;
  #L3f3e94.  v23:= 2I;
  #L3f3e98.  if v9 == 0 then goto L3f3ebe;
  #L3f3e9c.  v33:= v9 ^& 1;
  #L3f3ea0.  if v33 == 0 then goto L3f3eb4;
  #L3f3ea4.  v23:= v23 + 1;
  #L3f3ea8.  v33:= `@@org.mozilla.javascript.d.b` @type ^`double`[] @kind object;
  #L3f3eac.  v34:= v33[v20] @kind wide;
  #L3f3eb0.  v29:= v29 * v34 @kind double;
  #L3f3eb4.  v9:= v9 ^> 1;
  #L3f3eb8.  v20:= v20 + 1;
  #L3f3ebc.  goto L3f3e98;
  #L3f3ebe.  v31:= v31 / v29 @kind double;
  #L3f3ec2.  v9:= v23;
  #L3f3ec6.  goto L3f3f20;
  #L3f3ec8.  v9:= -v14 @kind int;
  #L3f3eca.  if v9 == 0 then goto L3f3f1a;
  #L3f3ece.  v20:= `@@org.mozilla.javascript.d.a` @type ^`double`[] @kind object;
  #L3f3ed2.  v23:= v9 ^& 15;
  #L3f3ed6.  v29:= v20[v23] @kind wide;
  #L3f3eda.  v29:= v29 * v7 @kind double;
  #L3f3ede.  v20:= 4I;
  #L3f3ee2.  v9:= v9 ^> 4;
  #L3f3ee6.  v20:= v9;
  #L3f3eea.  v31:= v29 @kind wide;
  #L3f3eee.  v9:= 2I;
  #L3f3ef0.  v23:= 0I;
  #L3f3ef4.  if v20 == 0 then goto L3f3f20;
  #L3f3ef8.  v29:= v20 ^& 1;
  #L3f3efc.  if v29 == 0 then goto L3f3f10;
  #L3f3f00.  v9:= v9 + 1;
  #L3f3f04.  v29:= `@@org.mozilla.javascript.d.b` @type ^`double`[] @kind object;
  #L3f3f08.  v33:= v29[v23] @kind wide;
  #L3f3f0c.  v31:= v31 * v33 @kind double;
  #L3f3f10.  v20:= v20 ^> 1;
  #L3f3f14.  v23:= v23 + 1;
  #L3f3f18.  goto L3f3ef4;
  #L3f3f1a.  v31:= v7 @kind wide;
  #L3f3f1e.  v9:= 2I;
  #L3f3f20.  if v2 == 0 then goto L3f3f68;
  #L3f3f24.  v29:= 1.0D;
  #L3f3f28.  v20:= dcmpg(v31, v29);
  #L3f3f2c.  if v20 >= 0 then goto L3f3f68;
  #L3f3f30.  if v6 <= 0 then goto L3f3f68;
  #L3f3f34.  if v21 > 0 then goto L3f3f4a;
  #L3f3f38.  v29:= v6;
  #L3f3f3c.  v33:= v7 @kind wide;
  #L3f3f40.  v23:= v14;
  #L3f3f44.  v20:= 1I;
  #L3f3f48.  goto L3f3f78;
  #L3f3f4a.  v20:= v14 + -1;
  #L3f3f4e.  v31:= v31 * v27 @kind double;
  #L3f3f52.  v9:= v9 + 1;
  #L3f3f56.  v29:= v6;
  #L3f3f5a.  v33:= v7 @kind wide;
  #L3f3f5e.  v23:= v20;
  #L3f3f62.  v6:= v21;
  #L3f3f66.  goto L3f3f74;
  #L3f3f68.  v29:= v6;
  #L3f3f6c.  v33:= v7 @kind wide;
  #L3f3f70.  v23:= v14;
  #L3f3f74.  v20:= 0I;
  #L3f3f78.  v7:= (`double`) v9 @kind i2d;
  #L3f3f7a.  v7:= v7 * v31 @kind double;
  #L3f3f7e.  v35:= 7.0D;
  #L3f3f82.  v7:= v7 + v35 @kind double;
  #L3f3f86.  call temp:= `m`(v7) @signature `Lorg/mozilla/javascript/d;.m:(D)I` @kind static;
  #L3f3f8c.  v9:= temp;
  #L3f3f8e.  v30:= 54525952I;
  #L3f3f92.  v9:= v9 - v30 @kind int;
  #L3f3f96.  call temp:= `j`(v7, v9) @signature `Lorg/mozilla/javascript/d;.j:(DI)D` @kind static;
  #L3f3f9c.  v7:= temp @kind wide;
  #L3f3f9e.  if v6 != 0 then goto L3f3ff2;
  #L3f3fa2.  v35:= 5.0D;
  #L3f3fa6.  v31:= v31 - v35 @kind double;
  #L3f3faa.  v9:= dcmpl(v31, v7);
  #L3f3fae.  if v9 <= 0 then goto L3f3fc8;
  #L3f3fb2.  v9:= 49I;
  #L3f3fb6.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f3fbc.  v9:= 1I;
  #L3f3fbe.  v23:= v23 + 1;
  #L3f3fc2.  v23:= v23 + 1;
  #L3f3fc6.  return v23;
  #L3f3fc8.  v30:= v10;
  #L3f3fcc.  v9:= -v7 @kind double;
  #L3f3fce.  v20:= dcmpg(v31, v9);
  #L3f3fd2.  if v20 >= 0 then goto L3f3fec;
  #L3f3fd6.  v9:= 0I;
  #L3f3fd8.  call `setLength`(v1, v9) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L3f3fde.  v0:= 48I;
  #L3f3fe2.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f3fe8.  v0:= 1I;
  #L3f3fea.  return v0;
  #L3f3fec.  v20:= 1I;
  #L3f3ff0.  goto L3f3ff6;
  #L3f3ff2.  v30:= v10;
  #L3f3ff6.  if v20 != 0 then goto L3f41a8;
  #L3f3ffa.  v9:= 0.5D;
  #L3f3ffe.  if v15 == 0 then goto L3f40d0;
  #L3f4002.  v20:= `@@org.mozilla.javascript.d.a` @type ^`double`[] @kind object;
  #L3f4006.  v35:= v6 + -1;
  #L3f400a.  v35:= v20[v35] @kind wide;
  #L3f400e.  v9:= v9 / v35 @kind double;
  #L3f4012.  v9:= v9 - v7 @kind double;
  #L3f4014.  v35:= v2;
  #L3f4018.  v36:= v3;
  #L3f401c.  v38:= v13;
  #L3f4020.  v37:= v14;
  #L3f4024.  v2:= v31 @kind wide;
  #L3f4028.  v7:= 0I;
  #L3f402a.  v13:= (`long`) v2 @kind d2l;
  #L3f402c.  v39:= v11;
  #L3f4030.  v40:= v12;
  #L3f4034.  v11:= (`double`) v13 @kind l2d;
  #L3f4036.  v31:= v2 - v11 @kind double;
  #L3f403a.  v13:= v13 + v25 @kind long;
  #L3f403e.  v2:= (`int`) v13 @kind l2i;
  #L3f4040.  v2:= (`char`) v2 @kind i2c;
  #L3f4042.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4048.  v2:= dcmpg(v31, v9);
  #L3f404c.  if v2 >= 0 then goto L3f4054;
  #L3f4050.  v2:= 1I;
  #L3f4052.  goto L3f3fc2;
  #L3f4054.  v2:= 1I;
  #L3f4056.  v11:= 1.0D;
  #L3f405a.  v11:= v11 - v31 @kind double;
  #L3f405e.  v3:= dcmpg(v11, v9);
  #L3f4062.  if v3 >= 0 then goto L3f40b4;
  #L3f4066.  call temp:= `length`(v47) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3f406c.  v0:= temp;
  #L3f406e.  v0:= v0 - v2 @kind int;
  #L3f4070.  call temp:= `charAt`(v1, v0) @signature `Ljava/lang/StringBuilder;.charAt:(I)C` @kind virtual;
  #L3f4076.  v0:= temp;
  #L3f4078.  call temp:= `length`(v47) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3f407e.  v3:= temp;
  #L3f4080.  v3:= v3 - v2 @kind int;
  #L3f4082.  call `setLength`(v1, v3) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L3f4088.  v3:= 57I;
  #L3f408c.  if v0 == v3 then goto L3f4094;
  #L3f4090.  v5:= v0;
  #L3f4092.  goto L3f40a8;
  #L3f4094.  call temp:= `length`(v47) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3f409a.  v0:= temp;
  #L3f409c.  if v0 != 0 then goto L3f4066;
  #L3f40a0.  v23:= v23 + 1;
  #L3f40a4.  v5:= 48I;
  #L3f40a8.  v5:= v5 + v2 @kind int;
  #L3f40aa.  v0:= (`char`) v5 @kind i2c;
  #L3f40ac.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f40b2.  goto L3f3fc2;
  #L3f40b4.  v7:= v7 + v2 @kind int;
  #L3f40b6.  if v7 < v6 then goto L3f40be;
  #L3f40ba.  goto L3f4194;
  #L3f40be.  v9:= v9 * v27 @kind double;
  #L3f40c2.  v2:= v31 * v27 @kind double;
  #L3f40c6.  v11:= v39;
  #L3f40ca.  v12:= v40;
  #L3f40ce.  goto L3f402a;
  #L3f40d0.  v35:= v2;
  #L3f40d4.  v36:= v3;
  #L3f40d8.  v39:= v11;
  #L3f40dc.  v40:= v12;
  #L3f40e0.  v38:= v13;
  #L3f40e4.  v37:= v14;
  #L3f40e8.  v2:= `@@org.mozilla.javascript.d.a` @type ^`double`[] @kind object;
  #L3f40ec.  v3:= v6 + -1;
  #L3f40f0.  v11:= v2[v3] @kind wide;
  #L3f40f4.  v7:= v7 * v11 @kind double;
  #L3f40f8.  v11:= v31 @kind wide;
  #L3f40fc.  v2:= 1I;
  #L3f40fe.  v13:= (`long`) v11 @kind d2l;
  #L3f4100.  v9:= (`double`) v13 @kind l2d;
  #L3f4102.  v31:= v11 - v9 @kind double;
  #L3f4106.  v13:= v13 + v25 @kind long;
  #L3f410a.  v3:= (`int`) v13 @kind l2i;
  #L3f410c.  v3:= (`char`) v3 @kind i2c;
  #L3f410e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4114.  if v2 != v6 then goto L3f419a;
  #L3f4118.  v9:= 0.5D;
  #L3f411c.  v2:= v7 + v9 @kind double;
  #L3f4120.  v9:= dcmpl(v31, v2);
  #L3f4124.  if v9 <= 0 then goto L3f417a;
  #L3f4128.  call temp:= `length`(v47) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3f412e.  v0:= temp;
  #L3f4130.  v2:= 1I;
  #L3f4132.  v0:= v0 - v2 @kind int;
  #L3f4134.  call temp:= `charAt`(v1, v0) @signature `Ljava/lang/StringBuilder;.charAt:(I)C` @kind virtual;
  #L3f413a.  v0:= temp;
  #L3f413c.  call temp:= `length`(v47) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3f4142.  v3:= temp;
  #L3f4144.  v3:= v3 - v2 @kind int;
  #L3f4146.  call `setLength`(v1, v3) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L3f414c.  v3:= 57I;
  #L3f4150.  if v0 == v3 then goto L3f4158;
  #L3f4154.  v5:= v0;
  #L3f4156.  goto L3f416c;
  #L3f4158.  call temp:= `length`(v47) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3f415e.  v0:= temp;
  #L3f4160.  if v0 != 0 then goto L3f4128;
  #L3f4164.  v23:= v23 + 1;
  #L3f4168.  v5:= 48I;
  #L3f416c.  v5:= v5 + v2 @kind int;
  #L3f416e.  v0:= (`char`) v5 @kind i2c;
  #L3f4170.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4176.  goto L3f3fc2;
  #L3f417a.  v2:= 1I;
  #L3f417c.  v9:= 0.5D;
  #L3f4180.  v9:= v9 - v7 @kind double;
  #L3f4182.  v3:= dcmpg(v31, v9);
  #L3f4186.  if v3 >= 0 then goto L3f4194;
  #L3f418a.  call `k`(v47) @signature `Lorg/mozilla/javascript/d;.k:(Ljava/lang/StringBuilder;)V` @kind static;
  #L3f4190.  goto L3f3fc2;
  #L3f4194.  v20:= 1I;
  #L3f4198.  goto L3f41c0;
  #L3f419a.  v9:= 0.5D;
  #L3f419e.  v2:= v2 + 1;
  #L3f41a2.  v11:= v31 * v27 @kind double;
  #L3f41a6.  goto L3f40fe;
  #L3f41a8.  v35:= v2;
  #L3f41ac.  v36:= v3;
  #L3f41b0.  v39:= v11;
  #L3f41b4.  v40:= v12;
  #L3f41b8.  v38:= v13;
  #L3f41bc.  v37:= v14;
  #L3f41c0.  v2:= 0I;
  #L3f41c2.  if v20 == 0 then goto L3f41ce;
  #L3f41c6.  call `setLength`(v1, v2) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L3f41cc.  goto L3f41fe;
  #L3f41ce.  v14:= v23;
  #L3f41d2.  v7:= v31 @kind wide;
  #L3f41d6.  goto L3f420a;
  #L3f41d8.  v35:= v2;
  #L3f41dc.  v36:= v3;
  #L3f41e0.  v29:= v6;
  #L3f41e4.  v33:= v7 @kind wide;
  #L3f41e8.  v30:= v10;
  #L3f41ec.  v39:= v11;
  #L3f41f0.  v40:= v12;
  #L3f41f4.  v38:= v13;
  #L3f41f8.  v37:= v14;
  #L3f41fc.  v2:= 0I;
  #L3f41fe.  v6:= v29;
  #L3f4202.  v7:= v33 @kind wide;
  #L3f4206.  v14:= v37;
  #L3f420a.  v3:= v17[v2];
  #L3f420e.  v9:= 1L;
  #L3f4212.  if v3 < 0 then goto L3f432e;
  #L3f4216.  v2:= 14I;
  #L3f421a.  if v14 > v2 then goto L3f432e;
  #L3f421e.  v0:= `@@org.mozilla.javascript.d.a` @type ^`double`[] @kind object;
  #L3f4222.  v2:= v0[v14] @kind wide;
  #L3f4226.  if v5 >= 0 then goto L3f4278;
  #L3f422a.  if v6 > 0 then goto L3f4278;
  #L3f422e.  if v6 < 0 then goto L3f4262;
  #L3f4232.  v4:= 5.0D;
  #L3f4236.  v2:= v2 * v4 @kind double;
  #L3f423a.  v0:= dcmpg(v7, v2);
  #L3f423e.  if v0 < 0 then goto L3f4262;
  #L3f4242.  if v44 != 0 then goto L3f4250;
  #L3f4246.  v0:= dcmpl(v7, v2);
  #L3f424a.  if v0 != 0 then goto L3f4250;
  #L3f424e.  goto L3f4262;
  #L3f4250.  v0:= 49I;
  #L3f4254.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f425a.  v0:= 1I;
  #L3f425c.  v14:= v14 + v0 @kind int;
  #L3f425e.  v14:= v14 + v0 @kind int;
  #L3f4260.  return v14;
  #L3f4262.  v0:= 1I;
  #L3f4264.  v2:= 0I;
  #L3f4266.  call `setLength`(v1, v2) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L3f426c.  v2:= 48I;
  #L3f4270.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4276.  return v0;
  #L3f4278.  v0:= 1I;
  #L3f427a.  v4:= v7 / v2 @kind double;
  #L3f427e.  v4:= (`long`) v4 @kind d2l;
  #L3f4280.  v11:= (`double`) v4 @kind l2d;
  #L3f4282.  v11:= v11 * v2 @kind double;
  #L3f4286.  v7:= v7 - v11 @kind double;
  #L3f4288.  v11:= v4 + v25 @kind long;
  #L3f428c.  v12:= (`int`) v11 @kind l2i;
  #L3f428e.  v11:= (`char`) v12 @kind i2c;
  #L3f4290.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4296.  if v0 != v6 then goto L3f4312;
  #L3f429a.  v7:= v7 + v7 @kind double;
  #L3f429c.  v0:= dcmpl(v7, v2);
  #L3f42a0.  if v0 > 0 then goto L3f42c2;
  #L3f42a4.  if v0 != 0 then goto L3f42be;
  #L3f42a8.  v2:= v4 ^& v9 @kind long;
  #L3f42ac.  v4:= 0L;
  #L3f42b0.  v0:= lcmp(v2, v4);
  #L3f42b4.  if v0 != 0 then goto L3f42c2;
  #L3f42b8.  if v44 == 0 then goto L3f42be;
  #L3f42bc.  goto L3f42c2;
  #L3f42be.  v4:= 1I;
  #L3f42c0.  goto L3f4324;
  #L3f42c2.  call temp:= `length`(v47) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3f42c8.  v0:= temp;
  #L3f42ca.  v4:= 1I;
  #L3f42cc.  v0:= v0 - v4 @kind int;
  #L3f42ce.  call temp:= `charAt`(v1, v0) @signature `Ljava/lang/StringBuilder;.charAt:(I)C` @kind virtual;
  #L3f42d4.  v0:= temp;
  #L3f42d6.  call temp:= `length`(v47) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3f42dc.  v2:= temp;
  #L3f42de.  v2:= v2 - v4 @kind int;
  #L3f42e0.  call `setLength`(v1, v2) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L3f42e6.  v2:= 57I;
  #L3f42ea.  if v0 == v2 then goto L3f42f2;
  #L3f42ee.  v5:= v0;
  #L3f42f0.  goto L3f4306;
  #L3f42f2.  call temp:= `length`(v47) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3f42f8.  v0:= temp;
  #L3f42fa.  if v0 != 0 then goto L3f42c2;
  #L3f42fe.  v14:= v14 + 1;
  #L3f4302.  v5:= 48I;
  #L3f4306.  v5:= v5 + v4 @kind int;
  #L3f4308.  v0:= (`char`) v5 @kind i2c;
  #L3f430a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4310.  goto L3f4324;
  #L3f4312.  v4:= 1I;
  #L3f4314.  v7:= v7 * v27 @kind double;
  #L3f4318.  v11:= 0L;
  #L3f431c.  v5:= dcmpl(v7, v11);
  #L3f4320.  if v5 != 0 then goto L3f4328;
  #L3f4324.  v14:= v14 + v4 @kind int;
  #L3f4326.  return v14;
  #L3f4328.  v0:= v0 + 1;
  #L3f432c.  goto L3f427a;
  #L3f432e.  v2:= 0I;
  #L3f4330.  if v15 == 0 then goto L3f43b6;
  #L3f4334.  v3:= 2I;
  #L3f4336.  if v0 >= v3 then goto L3f4362;
  #L3f433a.  v2:= 0I;
  #L3f433c.  if v30 == 0 then goto L3f434c;
  #L3f4340.  v3:= v17[v2];
  #L3f4344.  v3:= v3 + 1075;
  #L3f4348.  v2:= v3;
  #L3f434a.  goto L3f4354;
  #L3f434c.  v3:= v4[v2];
  #L3f4350.  v2:= v3 - 54;
  #L3f4354.  v3:= v36;
  #L3f4358.  v13:= v38;
  #L3f435c.  v12:= v40;
  #L3f4360.  goto L3f43a0;
  #L3f4362.  v2:= v6 + -1;
  #L3f4366.  v12:= v40;
  #L3f436a.  if v12 < v2 then goto L3f4378;
  #L3f436e.  v2:= v12 - v2 @kind int;
  #L3f4372.  v13:= v38;
  #L3f4376.  goto L3f4382;
  #L3f4378.  v2:= v2 - v12 @kind int;
  #L3f437a.  v13:= v38 + v2 @kind int;
  #L3f437e.  v12:= v12 + v2 @kind int;
  #L3f4380.  v2:= 0I;
  #L3f4382.  if v6 >= 0 then goto L3f4394;
  #L3f4386.  v3:= v36 - v6 @kind int;
  #L3f438a.  v40:= v12;
  #L3f438e.  v12:= v2;
  #L3f4390.  v2:= 0I;
  #L3f4392.  goto L3f43a0;
  #L3f4394.  v40:= v12;
  #L3f4398.  v3:= v36;
  #L3f439c.  v12:= v2;
  #L3f439e.  v2:= v6;
  #L3f43a0.  v4:= v36 + v2 @kind int;
  #L3f43a4.  v11:= v39 + v2 @kind int;
  #L3f43a8.  call temp:= `valueOf`(v9) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L3f43ae.  v2:= temp @kind object;
  #L3f43b0.  v5:= v40;
  #L3f43b4.  goto L3f43ca;
  #L3f43b6.  v12:= v40;
  #L3f43ba.  v5:= v12;
  #L3f43bc.  v3:= v36;
  #L3f43c0.  v4:= v3;
  #L3f43c2.  v13:= v38;
  #L3f43c6.  v11:= v39;
  #L3f43ca.  if v3 <= 0 then goto L3f43ec;
  #L3f43ce.  if v11 <= 0 then goto L3f43ec;
  #L3f43d2.  if v3 >= v11 then goto L3f43dc;
  #L3f43d6.  v17:= v3;
  #L3f43da.  goto L3f43e0;
  #L3f43dc.  v17:= v11;
  #L3f43e0.  v4:= v4 - v17 @kind int;
  #L3f43e4.  v3:= v3 - v17 @kind int;
  #L3f43e8.  v11:= v11 - v17 @kind int;
  #L3f43ec.  if v5 <= 0 then goto L3f4430;
  #L3f43f0.  if v15 == 0 then goto L3f4422;
  #L3f43f4.  if v12 <= 0 then goto L3f440e;
  #L3f43f8.  call temp:= `h`(v2, v12) @signature `Lorg/mozilla/javascript/d;.h:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;` @kind static;
  #L3f43fe.  v2:= temp @kind object;
  #L3f4400.  v9:= v24 @kind object;
  #L3f4404.  call temp:= `multiply`(v2, v9) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3f440a.  v9:= temp @kind object;
  #L3f440c.  goto L3f4412;
  #L3f440e.  v9:= v24 @kind object;
  #L3f4412.  v5:= v5 - v12 @kind int;
  #L3f4414.  if v5 == 0 then goto L3f4434;
  #L3f4418.  call temp:= `h`(v9, v5) @signature `Lorg/mozilla/javascript/d;.h:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;` @kind static;
  #L3f441e.  v9:= temp @kind object;
  #L3f4420.  goto L3f4434;
  #L3f4422.  v9:= v24 @kind object;
  #L3f4426.  call temp:= `h`(v9, v5) @signature `Lorg/mozilla/javascript/d;.h:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;` @kind static;
  #L3f442c.  v9:= temp @kind object;
  #L3f442e.  goto L3f4434;
  #L3f4430.  v9:= v24 @kind object;
  #L3f4434.  v17:= 1L;
  #L3f4438.  call temp:= `valueOf`(v17) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L3f443e.  v5:= temp @kind object;
  #L3f4440.  if v13 <= 0 then goto L3f444c;
  #L3f4444.  call temp:= `h`(v5, v13) @signature `Lorg/mozilla/javascript/d;.h:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;` @kind static;
  #L3f444a.  v5:= temp @kind object;
  #L3f444c.  v10:= 2I;
  #L3f444e.  if v0 >= v10 then goto L3f4490;
  #L3f4452.  call temp:= `n`(v7) @signature `Lorg/mozilla/javascript/d;.n:(D)I` @kind static;
  #L3f4458.  v10:= temp;
  #L3f445a.  if v10 != 0 then goto L3f4490;
  #L3f445e.  call temp:= `m`(v7) @signature `Lorg/mozilla/javascript/d;.m:(D)I` @kind static;
  #L3f4464.  v10:= temp;
  #L3f4466.  v12:= 1048575I;
  #L3f446c.  v10:= v10 ^& v12 @kind int;
  #L3f446e.  if v10 != 0 then goto L3f4490;
  #L3f4472.  call temp:= `m`(v7) @signature `Lorg/mozilla/javascript/d;.m:(D)I` @kind static;
  #L3f4478.  v10:= temp;
  #L3f447a.  v12:= 2145386496I;
  #L3f447e.  v10:= v10 ^& v12 @kind int;
  #L3f4480.  if v10 == 0 then goto L3f4490;
  #L3f4484.  v4:= v4 + 1;
  #L3f4488.  v11:= v11 + 1;
  #L3f448c.  v10:= 1I;
  #L3f448e.  goto L3f4492;
  #L3f4490.  v10:= 0I;
  #L3f4492.  call temp:= `toByteArray`(v5) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L3f4498.  v12:= temp @kind object;
  #L3f449a.  v42:= v6;
  #L3f449e.  v18:= v7 @kind wide;
  #L3f44a2.  v6:= 0I;
  #L3f44a4.  v7:= 4I;
  #L3f44a6.  v17:= 0I;
  #L3f44aa.  if v6 >= v7 then goto L3f44ce;
  #L3f44ae.  v7:= v17 ^< 8;
  #L3f44b2.  v8:= length @variable v12;
  #L3f44b4.  if v6 >= v8 then goto L3f44c2;
  #L3f44b8.  v8:= v12[v6] @kind byte;
  #L3f44bc.  v8:= v8 ^& 255;
  #L3f44c0.  v7:= v7 ^| v8 @kind int;
  #L3f44c2.  v17:= v7;
  #L3f44c6.  v6:= v6 + 1;
  #L3f44ca.  v7:= 4I;
  #L3f44cc.  goto L3f44aa;
  #L3f44ce.  if v13 == 0 then goto L3f44e4;
  #L3f44d2.  call temp:= `f`(v17) @signature `Lorg/mozilla/javascript/d;.f:(I)I` @kind static;
  #L3f44d8.  v6:= temp;
  #L3f44da.  v7:= 32I;
  #L3f44de.  v6:= v6 - 32;
  #L3f44e2.  goto L3f44e6;
  #L3f44e4.  v6:= 1I;
  #L3f44e6.  v6:= v6 + v11 @kind int;
  #L3f44e8.  v6:= v6 ^& 31;
  #L3f44ec.  if v6 == 0 then goto L3f44f4;
  #L3f44f0.  v6:= v6 - 32;
  #L3f44f4.  v7:= 4I;
  #L3f44f6.  if v6 <= v7 then goto L3f4506;
  #L3f44fa.  v6:= v6 + -4;
  #L3f44fe.  v4:= v4 + v6 @kind int;
  #L3f4500.  v3:= v3 + v6 @kind int;
  #L3f4502.  v11:= v11 + v6 @kind int;
  #L3f4504.  goto L3f4510;
  #L3f4506.  if v6 >= v7 then goto L3f4510;
  #L3f450a.  v6:= v6 + 28;
  #L3f450e.  goto L3f44fe;
  #L3f4510.  if v4 <= 0 then goto L3f451c;
  #L3f4514.  call temp:= `shiftLeft`(v9, v4) @signature `Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;` @kind virtual;
  #L3f451a.  v9:= temp @kind object;
  #L3f451c.  if v11 <= 0 then goto L3f4528;
  #L3f4520.  call temp:= `shiftLeft`(v5, v11) @signature `Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;` @kind virtual;
  #L3f4526.  v5:= temp @kind object;
  #L3f4528.  v6:= 10L;
  #L3f452c.  if v35 == 0 then goto L3f456a;
  #L3f4530.  call temp:= `compareTo`(v9, v5) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L3f4536.  v4:= temp;
  #L3f4538.  if v4 >= 0 then goto L3f456a;
  #L3f453c.  v14:= v14 + -1;
  #L3f4540.  call temp:= `valueOf`(v6) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L3f4546.  v4:= temp @kind object;
  #L3f4548.  call temp:= `multiply`(v9, v4) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3f454e.  v9:= temp @kind object;
  #L3f4550.  if v15 == 0 then goto L3f4564;
  #L3f4554.  call temp:= `valueOf`(v6) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L3f455a.  v4:= temp @kind object;
  #L3f455c.  call temp:= `multiply`(v2, v4) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3f4562.  v2:= temp @kind object;
  #L3f4564.  v4:= v21;
  #L3f4568.  goto L3f456e;
  #L3f456a.  v4:= v42;
  #L3f456e.  if v4 > 0 then goto L3f45d2;
  #L3f4572.  v8:= 2I;
  #L3f4574.  if v0 <= v8 then goto L3f45d2;
  #L3f4578.  if v4 < 0 then goto L3f45bc;
  #L3f457c.  v2:= 5L;
  #L3f4580.  call temp:= `valueOf`(v2) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L3f4586.  v0:= temp @kind object;
  #L3f4588.  call temp:= `multiply`(v5, v0) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3f458e.  v0:= temp @kind object;
  #L3f4590.  call temp:= `compareTo`(v9, v0) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L3f4596.  v0:= temp;
  #L3f4598.  if v0 < 0 then goto L3f45bc;
  #L3f459c.  if v0 != 0 then goto L3f45aa;
  #L3f45a0.  if v44 != 0 then goto L3f45aa;
  #L3f45a4.  v0:= 0I;
  #L3f45a6.  v8:= 1I;
  #L3f45a8.  goto L3f45c0;
  #L3f45aa.  v0:= 49I;
  #L3f45ae.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f45b4.  v8:= 1I;
  #L3f45b6.  v14:= v14 + v8 @kind int;
  #L3f45b8.  v14:= v14 + v8 @kind int;
  #L3f45ba.  return v14;
  #L3f45bc.  v8:= 1I;
  #L3f45be.  v0:= 0I;
  #L3f45c0.  call `setLength`(v1, v0) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L3f45c6.  v0:= 48I;
  #L3f45ca.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f45d0.  return v8;
  #L3f45d2.  v8:= 1I;
  #L3f45d4.  if v15 == 0 then goto L3f47cc;
  #L3f45d8.  if v3 <= 0 then goto L3f45e4;
  #L3f45dc.  call temp:= `shiftLeft`(v2, v3) @signature `Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;` @kind virtual;
  #L3f45e2.  v2:= temp @kind object;
  #L3f45e4.  if v10 == 0 then goto L3f45f2;
  #L3f45e8.  call temp:= `shiftLeft`(v2, v8) @signature `Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;` @kind virtual;
  #L3f45ee.  v3:= temp @kind object;
  #L3f45f0.  goto L3f45f4;
  #L3f45f2.  v3:= v2 @kind object;
  #L3f45f4.  v10:= 1I;
  #L3f45f6.  call temp:= `divideAndRemainder`(v9, v5) @signature `Ljava/math/BigInteger;.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;` @kind virtual;
  #L3f45fc.  v9:= temp @kind object;
  #L3f45fe.  v11:= v9[v8] @kind object;
  #L3f4602.  v8:= 0I;
  #L3f4604.  v9:= v9[v8] @kind object;
  #L3f4608.  call temp:= `intValue`(v9) @signature `Ljava/math/BigInteger;.intValue:()I` @kind virtual;
  #L3f460e.  v8:= temp;
  #L3f4610.  v9:= 48I;
  #L3f4614.  v8:= v8 + v9 @kind int;
  #L3f4616.  v8:= (`char`) v8 @kind i2c;
  #L3f4618.  call temp:= `compareTo`(v11, v2) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L3f461e.  v9:= temp;
  #L3f4620.  call temp:= `subtract`(v5, v3) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3f4626.  v12:= temp @kind object;
  #L3f4628.  call temp:= `signum`(v12) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L3f462e.  v13:= temp;
  #L3f4630.  if v13 > 0 then goto L3f4638;
  #L3f4634.  v12:= 1I;
  #L3f4636.  goto L3f4640;
  #L3f4638.  call temp:= `compareTo`(v11, v12) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L3f463e.  v12:= temp;
  #L3f4640.  if v12 != 0 then goto L3f4698;
  #L3f4644.  if v0 != 0 then goto L3f4698;
  #L3f4648.  call temp:= `n`(v18) @signature `Lorg/mozilla/javascript/d;.n:(D)I` @kind static;
  #L3f464e.  v13:= temp;
  #L3f4650.  v15:= 1I;
  #L3f4652.  v13:= v13 ^& v15 @kind int;
  #L3f4654.  if v13 != 0 then goto L3f469a;
  #L3f4658.  v13:= 57I;
  #L3f465c.  if v8 != v13 then goto L3f4684;
  #L3f4660.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4666.  call temp:= `i`(v47) @signature `Lorg/mozilla/javascript/d;.i:(Ljava/lang/StringBuilder;)Z` @kind static;
  #L3f466c.  v0:= temp;
  #L3f466e.  if v0 == 0 then goto L3f4680;
  #L3f4672.  v14:= v14 + 1;
  #L3f4676.  v0:= 49I;
  #L3f467a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4680.  v14:= v14 + v15 @kind int;
  #L3f4682.  return v14;
  #L3f4684.  if v9 <= 0 then goto L3f468e;
  #L3f4688.  v8:= v8 + 1;
  #L3f468c.  v8:= (`char`) v8 @kind i2c;
  #L3f468e.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4694.  v14:= v14 + v15 @kind int;
  #L3f4696.  return v14;
  #L3f4698.  v15:= 1I;
  #L3f469a.  if v9 < 0 then goto L3f475c;
  #L3f469e.  if v9 != 0 then goto L3f46b6;
  #L3f46a2.  if v0 != 0 then goto L3f46b6;
  #L3f46a6.  call temp:= `n`(v18) @signature `Lorg/mozilla/javascript/d;.n:(D)I` @kind static;
  #L3f46ac.  v9:= temp;
  #L3f46ae.  v9:= v9 ^& v15 @kind int;
  #L3f46b0.  if v9 != 0 then goto L3f46b6;
  #L3f46b4.  goto L3f475c;
  #L3f46b6.  if v12 <= 0 then goto L3f46f8;
  #L3f46ba.  v9:= 57I;
  #L3f46be.  if v8 != v9 then goto L3f46e8;
  #L3f46c2.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f46c8.  call temp:= `i`(v47) @signature `Lorg/mozilla/javascript/d;.i:(Ljava/lang/StringBuilder;)Z` @kind static;
  #L3f46ce.  v0:= temp;
  #L3f46d0.  if v0 == 0 then goto L3f46e2;
  #L3f46d4.  v14:= v14 + 1;
  #L3f46d8.  v0:= 49I;
  #L3f46dc.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f46e2.  v0:= 1I;
  #L3f46e4.  v14:= v14 + v0 @kind int;
  #L3f46e6.  return v14;
  #L3f46e8.  v0:= 1I;
  #L3f46ea.  v8:= v8 + v0 @kind int;
  #L3f46ec.  v2:= (`char`) v8 @kind i2c;
  #L3f46ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f46f4.  v14:= v14 + v0 @kind int;
  #L3f46f6.  return v14;
  #L3f46f8.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f46fe.  if v10 != v4 then goto L3f470a;
  #L3f4702.  v3:= v11 @kind object;
  #L3f4704.  v11:= 1I;
  #L3f4706.  goto L3f47fe;
  #L3f470a.  call temp:= `valueOf`(v6) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L3f4710.  v8:= temp @kind object;
  #L3f4712.  call temp:= `multiply`(v11, v8) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3f4718.  v9:= temp @kind object;
  #L3f471a.  if v2 != v3 then goto L3f4732;
  #L3f471e.  call temp:= `valueOf`(v6) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L3f4724.  v2:= temp @kind object;
  #L3f4726.  call temp:= `multiply`(v3, v2) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3f472c.  v2:= temp @kind object;
  #L3f472e.  v3:= v2 @kind object;
  #L3f4730.  goto L3f4752;
  #L3f4732.  call temp:= `valueOf`(v6) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L3f4738.  v8:= temp @kind object;
  #L3f473a.  call temp:= `multiply`(v2, v8) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3f4740.  v2:= temp @kind object;
  #L3f4742.  call temp:= `valueOf`(v6) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L3f4748.  v8:= temp @kind object;
  #L3f474a.  call temp:= `multiply`(v3, v8) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3f4750.  v3:= temp @kind object;
  #L3f4752.  v10:= v10 + 1;
  #L3f4756.  v8:= 1I;
  #L3f4758.  goto L3f45f6;
  #L3f475c.  if v12 <= 0 then goto L3f47c0;
  #L3f4760.  v0:= 1I;
  #L3f4762.  call temp:= `shiftLeft`(v11, v0) @signature `Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;` @kind virtual;
  #L3f4768.  v2:= temp @kind object;
  #L3f476a.  call temp:= `compareTo`(v2, v5) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L3f4770.  v2:= temp;
  #L3f4772.  if v2 > 0 then goto L3f4786;
  #L3f4776.  if v2 != 0 then goto L3f47c0;
  #L3f477a.  v2:= v8 ^& 1;
  #L3f477e.  if v2 == v0 then goto L3f4786;
  #L3f4782.  if v44 == 0 then goto L3f47c0;
  #L3f4786.  v0:= v8 + 1;
  #L3f478a.  v0:= (`char`) v0 @kind i2c;
  #L3f478c.  v2:= 57I;
  #L3f4790.  if v8 != v2 then goto L3f47ba;
  #L3f4794.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f479a.  call temp:= `i`(v47) @signature `Lorg/mozilla/javascript/d;.i:(Ljava/lang/StringBuilder;)Z` @kind static;
  #L3f47a0.  v0:= temp;
  #L3f47a2.  if v0 == 0 then goto L3f47b4;
  #L3f47a6.  v14:= v14 + 1;
  #L3f47aa.  v0:= 49I;
  #L3f47ae.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f47b4.  v11:= 1I;
  #L3f47b6.  v14:= v14 + v11 @kind int;
  #L3f47b8.  return v14;
  #L3f47ba.  v11:= 1I;
  #L3f47bc.  v8:= v0;
  #L3f47be.  goto L3f47c2;
  #L3f47c0.  v11:= 1I;
  #L3f47c2.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f47c8.  v14:= v14 + v11 @kind int;
  #L3f47ca.  return v14;
  #L3f47cc.  v11:= 1I;
  #L3f47ce.  v0:= 1I;
  #L3f47d0.  call temp:= `divideAndRemainder`(v9, v5) @signature `Ljava/math/BigInteger;.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;` @kind virtual;
  #L3f47d6.  v2:= temp @kind object;
  #L3f47d8.  v3:= v2[v11] @kind object;
  #L3f47dc.  v8:= 0I;
  #L3f47de.  v2:= v2[v8] @kind object;
  #L3f47e2.  call temp:= `intValue`(v2) @signature `Ljava/math/BigInteger;.intValue:()I` @kind virtual;
  #L3f47e8.  v2:= temp;
  #L3f47ea.  v9:= 48I;
  #L3f47ee.  v2:= v2 + v9 @kind int;
  #L3f47f0.  v2:= (`char`) v2 @kind i2c;
  #L3f47f2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f47f8.  if v0 < v4 then goto L3f484c;
  #L3f47fc.  v8:= v2;
  #L3f47fe.  call temp:= `shiftLeft`(v3, v11) @signature `Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;` @kind virtual;
  #L3f4804.  v0:= temp @kind object;
  #L3f4806.  call temp:= `compareTo`(v0, v5) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L3f480c.  v0:= temp;
  #L3f480e.  if v0 > 0 then goto L3f482c;
  #L3f4812.  if v0 != 0 then goto L3f4824;
  #L3f4816.  v0:= v8 ^& 1;
  #L3f481a.  if v0 == v11 then goto L3f482c;
  #L3f481e.  if v44 == 0 then goto L3f4824;
  #L3f4822.  goto L3f482c;
  #L3f4824.  call `k`(v47) @signature `Lorg/mozilla/javascript/d;.k:(Ljava/lang/StringBuilder;)V` @kind static;
  #L3f482a.  goto L3f4848;
  #L3f482c.  call temp:= `i`(v47) @signature `Lorg/mozilla/javascript/d;.i:(Ljava/lang/StringBuilder;)Z` @kind static;
  #L3f4832.  v0:= temp;
  #L3f4834.  if v0 == 0 then goto L3f4848;
  #L3f4838.  v14:= v14 + v11 @kind int;
  #L3f483a.  v2:= 49I;
  #L3f483e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4844.  v14:= v14 + v11 @kind int;
  #L3f4846.  return v14;
  #L3f4848.  v14:= v14 + v11 @kind int;
  #L3f484a.  return v14;
  #L3f484c.  v2:= 49I;
  #L3f4850.  call temp:= `valueOf`(v6) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L3f4856.  v10:= temp @kind object;
  #L3f4858.  call temp:= `multiply`(v3, v10) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3f485e.  v3:= temp @kind object;
  #L3f4860.  v0:= v0 + 1;
  #L3f4864.  v9:= v3 @kind object;
  #L3f4866.  goto L3f47d0;
}
procedure `java.lang.String` `c`(`int` v11 , `double` v12 ) @signature `Lorg/mozilla/javascript/d;.c:(ID)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3f49c8.  v0:= 2I;
  #L3f49ca.  if v0 > v11 then goto L3f4c50;
  #L3f49ce.  v0:= 36I;
  #L3f49d2.  if v11 > v0 then goto L3f4c50;
  #L3f49d6.  call temp:= `isNaN`(v12) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L3f49dc.  v0:= temp;
  #L3f49de.  if v0 == 0 then goto L3f49e8;
  #L3f49e2.  v11:= "NaN" @kind object;
  #L3f49e6.  return v11 @kind object;
  #L3f49e8.  call temp:= `isInfinite`(v12) @signature `Ljava/lang/Double;.isInfinite:(D)Z` @kind static;
  #L3f49ee.  v0:= temp;
  #L3f49f0.  v1:= 0L;
  #L3f49f4.  if v0 == 0 then goto L3f4a0c;
  #L3f49f8.  v11:= dcmpl(v12, v1);
  #L3f49fc.  if v11 <= 0 then goto L3f4a06;
  #L3f4a00.  v11:= "Infinity" @kind object;
  #L3f4a04.  goto L3f4a0a;
  #L3f4a06.  v11:= "-Infinity" @kind object;
  #L3f4a0a.  return v11 @kind object;
  #L3f4a0c.  v0:= dcmpl(v12, v1);
  #L3f4a10.  if v0 != 0 then goto L3f4a1a;
  #L3f4a14.  v11:= "0" @kind object;
  #L3f4a18.  return v11 @kind object;
  #L3f4a1a.  v1:= 0I;
  #L3f4a1c.  v2:= 1I;
  #L3f4a1e.  if v0 < 0 then goto L3f4a26;
  #L3f4a22.  v0:= 0I;
  #L3f4a24.  goto L3f4a2a;
  #L3f4a26.  v12:= -v12 @kind double;
  #L3f4a28.  v0:= 1I;
  #L3f4a2a.  call temp:= `floor`(v12) @signature `Ljava/lang/Math;.floor:(D)D` @kind static;
  #L3f4a30.  v3:= temp @kind wide;
  #L3f4a32.  v5:= (`long`) v3 @kind d2l;
  #L3f4a34.  v7:= (`double`) v5 @kind l2d;
  #L3f4a36.  v9:= dcmpl(v7, v3);
  #L3f4a3a.  if v9 != 0 then goto L3f4a4e;
  #L3f4a3e.  if v0 == 0 then goto L3f4a44;
  #L3f4a42.  v5:= -v5 @kind long;
  #L3f4a44.  call temp:= `toString`(v5, v11) @signature `Ljava/lang/Long;.toString:(JI)Ljava/lang/String;` @kind static;
  #L3f4a4a.  v0:= temp @kind object;
  #L3f4a4c.  goto L3f4ab6;
  #L3f4a4e.  call temp:= `doubleToLongBits`(v3) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L3f4a54.  v5:= temp @kind wide;
  #L3f4a56.  v7:= 52I;
  #L3f4a5a.  v7:= v5 ^> v7 @kind long;
  #L3f4a5e.  v8:= (`int`) v7 @kind l2i;
  #L3f4a60.  v7:= v8 ^& 2047;
  #L3f4a64.  v8:= 4503599627370495L;
  #L3f4a6e.  if v7 != 0 then goto L3f4a78;
  #L3f4a72.  v5:= v5 ^& v8 @kind long;
  #L3f4a74.  v5:= v5 ^< v2 @kind long;
  #L3f4a76.  goto L3f4a80;
  #L3f4a78.  v5:= v5 ^& v8 @kind long;
  #L3f4a7a.  v8:= 4503599627370496L;
  #L3f4a7e.  v5:= v5 ^| v8 @kind long;
  #L3f4a80.  if v0 == 0 then goto L3f4a86;
  #L3f4a84.  v5:= -v5 @kind long;
  #L3f4a86.  v7:= v7 + -1075;
  #L3f4a8a.  call temp:= `valueOf`(v5) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L3f4a90.  v0:= temp @kind object;
  #L3f4a92.  if v7 <= 0 then goto L3f4aa0;
  #L3f4a96.  call temp:= `shiftLeft`(v0, v7) @signature `Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;` @kind virtual;
  #L3f4a9c.  v0:= temp @kind object;
  #L3f4a9e.  goto L3f4aae;
  #L3f4aa0.  if v7 >= 0 then goto L3f4aae;
  #L3f4aa4.  v5:= -v7 @kind int;
  #L3f4aa6.  call temp:= `shiftRight`(v0, v5) @signature `Ljava/math/BigInteger;.shiftRight:(I)Ljava/math/BigInteger;` @kind virtual;
  #L3f4aac.  v0:= temp @kind object;
  #L3f4aae.  call temp:= `toString`(v0, v11) @signature `Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;` @kind virtual;
  #L3f4ab4.  v0:= temp @kind object;
  #L3f4ab6.  v5:= dcmpl(v12, v3);
  #L3f4aba.  if v5 != 0 then goto L3f4ac0;
  #L3f4abe.  return v0 @kind object;
  #L3f4ac0.  v5:= new `java.lang.StringBuilder`;
  #L3f4ac4.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f4aca.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4ad0.  v0:= 46I;
  #L3f4ad4.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4ada.  v3:= v12 - v3 @kind double;
  #L3f4ade.  call temp:= `doubleToLongBits`(v12) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L3f4ae4.  v12:= temp @kind wide;
  #L3f4ae6.  v0:= 32I;
  #L3f4aea.  v6:= v12 ^> v0 @kind long;
  #L3f4aee.  v0:= (`int`) v6 @kind l2i;
  #L3f4af0.  v13:= (`int`) v12 @kind l2i;
  #L3f4af2.  v12:= new `int`[v2];
  #L3f4af6.  v6:= new `int`[v2];
  #L3f4afa.  call temp:= `e`(v3, v12, v6) @signature `Lorg/mozilla/javascript/d;.e:(D[I[I)Ljava/math/BigInteger;` @kind static;
  #L3f4b00.  v3:= temp @kind object;
  #L3f4b02.  v4:= v0 ^>> 20;
  #L3f4b06.  v4:= v4 ^& 2047;
  #L3f4b0a.  v4:= -v4 @kind int;
  #L3f4b0c.  if v4 != 0 then goto L3f4b12;
  #L3f4b10.  v4:= -1I;
  #L3f4b12.  v4:= v4 + 1076;
  #L3f4b16.  v6:= 1L;
  #L3f4b1a.  call temp:= `valueOf`(v6) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L3f4b20.  v8:= temp @kind object;
  #L3f4b22.  if v13 != 0 then goto L3f4b4e;
  #L3f4b26.  v9:= 1048575I;
  #L3f4b2c.  v9:= v9 ^& v0 @kind int;
  #L3f4b2e.  if v9 != 0 then goto L3f4b4e;
  #L3f4b32.  v9:= 2145386496I;
  #L3f4b36.  v0:= v0 ^& v9 @kind int;
  #L3f4b38.  if v0 == 0 then goto L3f4b4e;
  #L3f4b3c.  v4:= v4 + 1;
  #L3f4b40.  v9:= 2L;
  #L3f4b44.  call temp:= `valueOf`(v9) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L3f4b4a.  v0:= temp @kind object;
  #L3f4b4c.  goto L3f4b50;
  #L3f4b4e.  v0:= v8 @kind object;
  #L3f4b50.  v12:= v12[v1];
  #L3f4b54.  v12:= v12 + v4 @kind int;
  #L3f4b56.  call temp:= `shiftLeft`(v3, v12) @signature `Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;` @kind virtual;
  #L3f4b5c.  v12:= temp @kind object;
  #L3f4b5e.  call temp:= `valueOf`(v6) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L3f4b64.  v3:= temp @kind object;
  #L3f4b66.  call temp:= `shiftLeft`(v3, v4) @signature `Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;` @kind virtual;
  #L3f4b6c.  v3:= temp @kind object;
  #L3f4b6e.  v6:= (`long`) v11 @kind i2l;
  #L3f4b70.  call temp:= `valueOf`(v6) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L3f4b76.  v4:= temp @kind object;
  #L3f4b78.  v11:= 0I;
  #L3f4b7a.  call temp:= `multiply`(v12, v4) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3f4b80.  v12:= temp @kind object;
  #L3f4b82.  call temp:= `divideAndRemainder`(v12, v3) @signature `Ljava/math/BigInteger;.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;` @kind virtual;
  #L3f4b88.  v12:= temp @kind object;
  #L3f4b8a.  v6:= v12[v2] @kind object;
  #L3f4b8e.  v12:= v12[v1] @kind object;
  #L3f4b92.  call temp:= `intValue`(v12) @signature `Ljava/math/BigInteger;.intValue:()I` @kind virtual;
  #L3f4b98.  v12:= temp;
  #L3f4b9a.  v12:= (`char`) v12 @kind i2c;
  #L3f4b9c.  if v8 != v0 then goto L3f4bac;
  #L3f4ba0.  call temp:= `multiply`(v8, v4) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3f4ba6.  v0:= temp @kind object;
  #L3f4ba8.  v8:= v0 @kind object;
  #L3f4baa.  goto L3f4bbe;
  #L3f4bac.  call temp:= `multiply`(v8, v4) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3f4bb2.  v7:= temp @kind object;
  #L3f4bb4.  call temp:= `multiply`(v0, v4) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3f4bba.  v0:= temp @kind object;
  #L3f4bbc.  v8:= v7 @kind object;
  #L3f4bbe.  call temp:= `compareTo`(v6, v8) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L3f4bc4.  v7:= temp;
  #L3f4bc6.  call temp:= `subtract`(v3, v0) @signature `Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3f4bcc.  v9:= temp @kind object;
  #L3f4bce.  call temp:= `signum`(v9) @signature `Ljava/math/BigInteger;.signum:()I` @kind virtual;
  #L3f4bd4.  v10:= temp;
  #L3f4bd6.  if v10 > 0 then goto L3f4bde;
  #L3f4bda.  v9:= 1I;
  #L3f4bdc.  goto L3f4be6;
  #L3f4bde.  call temp:= `compareTo`(v6, v9) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L3f4be4.  v9:= temp;
  #L3f4be6.  if v9 != 0 then goto L3f4bf8;
  #L3f4bea.  v10:= v13 ^& 1;
  #L3f4bee.  if v10 != 0 then goto L3f4bf8;
  #L3f4bf2.  if v7 <= 0 then goto L3f4c2e;
  #L3f4bf6.  goto L3f4c0e;
  #L3f4bf8.  if v7 < 0 then goto L3f4c14;
  #L3f4bfc.  if v7 != 0 then goto L3f4c0a;
  #L3f4c00.  v7:= v13 ^& 1;
  #L3f4c04.  if v7 != 0 then goto L3f4c0a;
  #L3f4c08.  goto L3f4c14;
  #L3f4c0a.  if v9 <= 0 then goto L3f4c30;
  #L3f4c0e.  v12:= v12 + 1;
  #L3f4c12.  goto L3f4c2e;
  #L3f4c14.  if v9 <= 0 then goto L3f4c2e;
  #L3f4c18.  call temp:= `shiftLeft`(v6, v2) @signature `Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;` @kind virtual;
  #L3f4c1e.  v6:= temp @kind object;
  #L3f4c20.  call temp:= `compareTo`(v6, v3) @signature `Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I` @kind virtual;
  #L3f4c26.  v11:= temp;
  #L3f4c28.  if v11 <= 0 then goto L3f4c2e;
  #L3f4c2c.  goto L3f4c0e;
  #L3f4c2e.  v11:= 1I;
  #L3f4c30.  call temp:= `a`(v12) @signature `Lorg/mozilla/javascript/d;.a:(I)C` @kind static;
  #L3f4c36.  v12:= temp;
  #L3f4c38.  call temp:= `append`(v5, v12) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4c3e.  if v11 == 0 then goto L3f4c4c;
  #L3f4c42.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f4c48.  v11:= temp @kind object;
  #L3f4c4a.  return v11 @kind object;
  #L3f4c4c.  v12:= v6 @kind object;
  #L3f4c4e.  goto L3f4b7a;
  #L3f4c50.  v12:= new `java.lang.IllegalArgumentException`;
  #L3f4c54.  v13:= new `java.lang.StringBuilder`;
  #L3f4c58.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f4c5e.  v0:= "Bad base: " @kind object;
  #L3f4c62.  call temp:= `append`(v13, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4c68.  call temp:= `append`(v13, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4c6e.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f4c74.  v11:= temp @kind object;
  #L3f4c76.  call `<init>`(v12, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f4c7c.  throw v12;
}
procedure `void` `d`(`java.lang.StringBuilder` v11 @kind object, `int` v12 , `int` v13 , `double` v14 ) @signature `Lorg/mozilla/javascript/d;.d:(Ljava/lang/StringBuilder;IID)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3f4f00.  v0:= 1I;
  #L3f4f02.  v8:= new `boolean`[v0];
  #L3f4f06.  v9:= 2I;
  #L3f4f08.  v10:= 0I;
  #L3f4f0a.  if v12 != v9 then goto L3f4f34;
  #L3f4f0e.  v1:= 1.0E21D;
  #L3f4f18.  v3:= dcmpl(v14, v1);
  #L3f4f1c.  if v3 >= 0 then goto L3f4f32;
  #L3f4f20.  v1:= -1.0E21D;
  #L3f4f2a.  v3:= dcmpg(v14, v1);
  #L3f4f2e.  if v3 > 0 then goto L3f4f34;
  #L3f4f32.  v12:= 0I;
  #L3f4f34.  v1:= `@@org.mozilla.javascript.d.c` @type ^`int`[] @kind object;
  #L3f4f38.  v3:= v1[v12];
  #L3f4f3c.  if v12 < v9 then goto L3f4f44;
  #L3f4f40.  v4:= 1I;
  #L3f4f42.  goto L3f4f46;
  #L3f4f44.  v4:= 0I;
  #L3f4f46.  v1:= v14 @kind wide;
  #L3f4f48.  v5:= v13;
  #L3f4f4a.  v6:= v8 @kind object;
  #L3f4f4c.  v7:= v11 @kind object;
  #L3f4f4e.  call temp:= `b`(v1, v3, v4, v5, v6, v7) @signature `Lorg/mozilla/javascript/d;.b:(DIZI[ZLjava/lang/StringBuilder;)I` @kind static;
  #L3f4f54.  v1:= temp;
  #L3f4f56.  call temp:= `length`(v11) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3f4f5c.  v2:= temp;
  #L3f4f5e.  v3:= 9999I;
  #L3f4f62.  if v1 == v3 then goto L3f5032;
  #L3f4f66.  v3:= -5I;
  #L3f4f68.  if v12 == 0 then goto L3f4f9e;
  #L3f4f6c.  if v12 == v0 then goto L3f4f98;
  #L3f4f70.  if v12 == v9 then goto L3f4f90;
  #L3f4f74.  v4:= 3I;
  #L3f4f76.  if v12 == v4 then goto L3f4f9a;
  #L3f4f7a.  v4:= 4I;
  #L3f4f7c.  if v12 == v4 then goto L3f4f86;
  #L3f4f80.  v12:= 0I;
  #L3f4f82.  v13:= 0I;
  #L3f4f84.  goto L3f4fb6;
  #L3f4f86.  if v1 < v3 then goto L3f4f9a;
  #L3f4f8a.  if v1 <= v13 then goto L3f4fae;
  #L3f4f8e.  goto L3f4f9a;
  #L3f4f90.  if v13 < 0 then goto L3f4fac;
  #L3f4f94.  v13:= v13 + v1 @kind int;
  #L3f4f96.  goto L3f4fae;
  #L3f4f98.  v13:= 0I;
  #L3f4f9a.  v12:= 1I;
  #L3f4f9c.  goto L3f4fb6;
  #L3f4f9e.  if v1 < v3 then goto L3f4fb2;
  #L3f4fa2.  v12:= 21I;
  #L3f4fa6.  if v1 <= v12 then goto L3f4fac;
  #L3f4faa.  goto L3f4fb2;
  #L3f4fac.  v13:= v1;
  #L3f4fae.  v12:= 0I;
  #L3f4fb0.  goto L3f4fb6;
  #L3f4fb2.  v12:= 1I;
  #L3f4fb4.  goto L3f4f82;
  #L3f4fb6.  v3:= 48I;
  #L3f4fba.  if v2 >= v13 then goto L3f4fd2;
  #L3f4fbe.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4fc4.  call temp:= `length`(v11) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3f4fca.  v2:= temp;
  #L3f4fcc.  if v2 != v13 then goto L3f4fbe;
  #L3f4fd0.  v2:= v13;
  #L3f4fd2.  v13:= 46I;
  #L3f4fd6.  if v12 == 0 then goto L3f5006;
  #L3f4fda.  if v2 == v0 then goto L3f4fe4;
  #L3f4fde.  call temp:= `insert`(v11, v0, v13) @signature `Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4fe4.  v12:= 101I;
  #L3f4fe8.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4fee.  v1:= v1 - v0 @kind int;
  #L3f4ff0.  if v1 < 0 then goto L3f4ffe;
  #L3f4ff4.  v12:= 43I;
  #L3f4ff8.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4ffe.  call temp:= `append`(v11, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f5004.  goto L3f5032;
  #L3f5006.  if v1 == v2 then goto L3f5032;
  #L3f500a.  if v1 <= 0 then goto L3f5016;
  #L3f500e.  call temp:= `insert`(v11, v1, v13) @signature `Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f5014.  goto L3f5032;
  #L3f5016.  v12:= 0I;
  #L3f5018.  v2:= v1 - 1;
  #L3f501c.  if v12 >= v2 then goto L3f502c;
  #L3f5020.  call temp:= `insert`(v11, v10, v3) @signature `Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f5026.  v12:= v12 + 1;
  #L3f502a.  goto L3f5018;
  #L3f502c.  call temp:= `insert`(v11, v0, v13) @signature `Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f5032.  v12:= v8[v10] @kind boolean;
  #L3f5036.  if v12 == 0 then goto L3f5092;
  #L3f503a.  call temp:= `m`(v14) @signature `Lorg/mozilla/javascript/d;.m:(D)I` @kind static;
  #L3f5040.  v12:= temp;
  #L3f5042.  v13:= -2147483648I;
  #L3f5046.  if v12 != v13 then goto L3f5056;
  #L3f504a.  call temp:= `n`(v14) @signature `Lorg/mozilla/javascript/d;.n:(D)I` @kind static;
  #L3f5050.  v12:= temp;
  #L3f5052.  if v12 == 0 then goto L3f5092;
  #L3f5056.  call temp:= `m`(v14) @signature `Lorg/mozilla/javascript/d;.m:(D)I` @kind static;
  #L3f505c.  v12:= temp;
  #L3f505e.  v13:= 2146435072I;
  #L3f5062.  v12:= v12 ^& v13 @kind int;
  #L3f5064.  if v12 != v13 then goto L3f5088;
  #L3f5068.  call temp:= `n`(v14) @signature `Lorg/mozilla/javascript/d;.n:(D)I` @kind static;
  #L3f506e.  v12:= temp;
  #L3f5070.  if v12 != 0 then goto L3f5092;
  #L3f5074.  call temp:= `m`(v14) @signature `Lorg/mozilla/javascript/d;.m:(D)I` @kind static;
  #L3f507a.  v12:= temp;
  #L3f507c.  v13:= 1048575I;
  #L3f5082.  v12:= v12 ^& v13 @kind int;
  #L3f5084.  if v12 != 0 then goto L3f5092;
  #L3f5088.  v12:= 45I;
  #L3f508c.  call temp:= `insert`(v11, v10, v12) @signature `Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f5092.  return @kind void;
}
procedure `java.math.BigInteger` `e`(`double` v8 , `int`[] v10 @kind object, `int`[] v11 @kind object) @signature `Lorg/mozilla/javascript/d;.e:(D[I[I)Ljava/math/BigInteger;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3f4c90.  call temp:= `doubleToLongBits`(v8) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L3f4c96.  v8:= temp @kind wide;
  #L3f4c98.  v0:= 32I;
  #L3f4c9c.  v1:= v8 ^>> v0 @kind long;
  #L3f4ca0.  v2:= (`int`) v1 @kind l2i;
  #L3f4ca2.  v9:= (`int`) v8 @kind l2i;
  #L3f4ca4.  v8:= 1048575I;
  #L3f4caa.  v8:= v8 ^& v2 @kind int;
  #L3f4cac.  v1:= 2147483647I;
  #L3f4cb2.  v1:= v1 ^& v2 @kind int;
  #L3f4cb4.  v1:= v1 ^>> 20;
  #L3f4cb8.  if v1 == 0 then goto L3f4cc2;
  #L3f4cbc.  v2:= 1048576I;
  #L3f4cc0.  v8:= v8 ^| v2 @kind int;
  #L3f4cc2.  v2:= 1I;
  #L3f4cc4.  v3:= 4I;
  #L3f4cc6.  v4:= 0I;
  #L3f4cc8.  if v9 == 0 then goto L3f4d0a;
  #L3f4ccc.  v5:= 8I;
  #L3f4cd0.  v5:= new `byte`[v5];
  #L3f4cd4.  call temp:= `g`(v9) @signature `Lorg/mozilla/javascript/d;.g:(I)I` @kind static;
  #L3f4cda.  v6:= temp;
  #L3f4cdc.  v9:= v9 ^>> v6 @kind int;
  #L3f4cde.  if v6 == 0 then goto L3f4cf6;
  #L3f4ce2.  v7:= v6 - 32;
  #L3f4ce6.  v7:= v8 ^< v7 @kind int;
  #L3f4cea.  v9:= v9 ^| v7 @kind int;
  #L3f4cec.  call `l`(v5, v3, v9) @signature `Lorg/mozilla/javascript/d;.l:([BII)V` @kind static;
  #L3f4cf2.  v8:= v8 ^> v6 @kind int;
  #L3f4cf4.  goto L3f4cfc;
  #L3f4cf6.  call `l`(v5, v3, v9) @signature `Lorg/mozilla/javascript/d;.l:([BII)V` @kind static;
  #L3f4cfc.  call `l`(v5, v4, v8) @signature `Lorg/mozilla/javascript/d;.l:([BII)V` @kind static;
  #L3f4d02.  if v8 == 0 then goto L3f4d22;
  #L3f4d06.  v9:= 2I;
  #L3f4d08.  goto L3f4d24;
  #L3f4d0a.  v5:= new `byte`[v3];
  #L3f4d0e.  call temp:= `g`(v8) @signature `Lorg/mozilla/javascript/d;.g:(I)I` @kind static;
  #L3f4d14.  v9:= temp;
  #L3f4d16.  v8:= v8 ^>> v9 @kind int;
  #L3f4d18.  call `l`(v5, v4, v8) @signature `Lorg/mozilla/javascript/d;.l:([BII)V` @kind static;
  #L3f4d1e.  v6:= v9 + 32;
  #L3f4d22.  v9:= 1I;
  #L3f4d24.  if v1 == 0 then goto L3f4d40;
  #L3f4d28.  v1:= v1 + -1023;
  #L3f4d2c.  v1:= v1 + -52;
  #L3f4d30.  v1:= v1 + v6 @kind int;
  #L3f4d32.  v10[v4]:= v1;
  #L3f4d36.  v8:= v6 - 53;
  #L3f4d3a.  v11[v4]:= v8;
  #L3f4d3e.  goto L3f4d62;
  #L3f4d40.  v1:= v1 + -1023;
  #L3f4d44.  v1:= v1 + -52;
  #L3f4d48.  v1:= v1 + v2 @kind int;
  #L3f4d4a.  v1:= v1 + v6 @kind int;
  #L3f4d4c.  v10[v4]:= v1;
  #L3f4d50.  v9:= v9 * 32;
  #L3f4d54.  call temp:= `f`(v8) @signature `Lorg/mozilla/javascript/d;.f:(I)I` @kind static;
  #L3f4d5a.  v8:= temp;
  #L3f4d5c.  v9:= v9 - v8 @kind int;
  #L3f4d5e.  v11[v4]:= v9;
  #L3f4d62.  v8:= new `java.math.BigInteger`;
  #L3f4d66.  call `<init>`(v8, v5) @signature `Ljava/math/BigInteger;.<init>:([B)V` @kind direct;
  #L3f4d6c.  return v8 @kind object;
}
procedure `int` `f`(`int` v2 ) @signature `Lorg/mozilla/javascript/d;.f:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3f4878.  v0:= -65536I;
  #L3f487c.  v0:= v0 ^& v2 @kind int;
  #L3f487e.  if v0 != 0 then goto L3f488c;
  #L3f4882.  v2:= v2 ^< 16;
  #L3f4886.  v0:= 16I;
  #L3f488a.  goto L3f488e;
  #L3f488c.  v0:= 0I;
  #L3f488e.  v1:= -16777216I;
  #L3f4892.  v1:= v1 ^& v2 @kind int;
  #L3f4894.  if v1 != 0 then goto L3f48a0;
  #L3f4898.  v0:= v0 + 8;
  #L3f489c.  v2:= v2 ^< 8;
  #L3f48a0.  v1:= -268435456I;
  #L3f48a4.  v1:= v1 ^& v2 @kind int;
  #L3f48a6.  if v1 != 0 then goto L3f48b2;
  #L3f48aa.  v0:= v0 + 4;
  #L3f48ae.  v2:= v2 ^< 4;
  #L3f48b2.  v1:= -2.0F;
  #L3f48b6.  v1:= v1 ^& v2 @kind int;
  #L3f48b8.  if v1 != 0 then goto L3f48c4;
  #L3f48bc.  v0:= v0 + 2;
  #L3f48c0.  v2:= v2 ^< 2;
  #L3f48c4.  v1:= -2147483648I;
  #L3f48c8.  v1:= v1 ^& v2 @kind int;
  #L3f48ca.  if v1 != 0 then goto L3f48e2;
  #L3f48ce.  v0:= v0 + 1;
  #L3f48d2.  v1:= 2.0F;
  #L3f48d6.  v2:= v2 ^& v1 @kind int;
  #L3f48d8.  if v2 != 0 then goto L3f48e2;
  #L3f48dc.  v2:= 32I;
  #L3f48e0.  return v2;
  #L3f48e2.  return v0;
}
procedure `int` `g`(`int` v3 ) @signature `Lorg/mozilla/javascript/d;.g:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f48f4.  v0:= v3 ^& 7;
  #L3f48f8.  v1:= 0I;
  #L3f48fa.  v2:= 1I;
  #L3f48fc.  if v0 == 0 then goto L3f4916;
  #L3f4900.  v0:= v3 ^& 1;
  #L3f4904.  if v0 == 0 then goto L3f490a;
  #L3f4908.  return v1;
  #L3f490a.  v0:= 2I;
  #L3f490c.  v3:= v3 ^& v0 @kind int;
  #L3f490e.  if v3 == 0 then goto L3f4914;
  #L3f4912.  return v2;
  #L3f4914.  return v0;
  #L3f4916.  v0:= 65535I;
  #L3f491c.  v0:= v0 ^& v3 @kind int;
  #L3f491e.  if v0 != 0 then goto L3f492a;
  #L3f4922.  v3:= v3 ^>> 16;
  #L3f4926.  v1:= 16I;
  #L3f492a.  v0:= v3 ^& 255;
  #L3f492e.  if v0 != 0 then goto L3f493a;
  #L3f4932.  v1:= v1 + 8;
  #L3f4936.  v3:= v3 ^>> 8;
  #L3f493a.  v0:= v3 ^& 15;
  #L3f493e.  if v0 != 0 then goto L3f494a;
  #L3f4942.  v1:= v1 + 4;
  #L3f4946.  v3:= v3 ^>> 4;
  #L3f494a.  v0:= v3 ^& 3;
  #L3f494e.  if v0 != 0 then goto L3f495a;
  #L3f4952.  v1:= v1 + 2;
  #L3f4956.  v3:= v3 ^>> 2;
  #L3f495a.  v0:= v3 ^& 1;
  #L3f495e.  if v0 != 0 then goto L3f4974;
  #L3f4962.  v1:= v1 + 1;
  #L3f4966.  v3:= v3 ^>> v2 @kind int;
  #L3f4968.  v3:= v3 ^& v2 @kind int;
  #L3f496a.  if v3 != 0 then goto L3f4974;
  #L3f496e.  v3:= 32I;
  #L3f4972.  return v3;
  #L3f4974.  return v1;
}
procedure `java.math.BigInteger` `h`(`java.math.BigInteger` v2 @kind object, `int` v3 ) @signature `Lorg/mozilla/javascript/d;.h:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3f4d80.  v0:= 5L;
  #L3f4d84.  call temp:= `valueOf`(v0) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L3f4d8a.  v0:= temp @kind object;
  #L3f4d8c.  call temp:= `pow`(v0, v3) @signature `Ljava/math/BigInteger;.pow:(I)Ljava/math/BigInteger;` @kind virtual;
  #L3f4d92.  v3:= temp @kind object;
  #L3f4d94.  call temp:= `multiply`(v2, v3) @signature `Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @kind virtual;
  #L3f4d9a.  v2:= temp @kind object;
  #L3f4d9c.  return v2 @kind object;
}
procedure `boolean` `i`(`java.lang.StringBuilder` v5 @kind object) @signature `Lorg/mozilla/javascript/d;.i:(Ljava/lang/StringBuilder;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f3ae0.  call temp:= `length`(v5) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3f3ae6.  v0:= temp;
  #L3f3ae8.  v1:= 0I;
  #L3f3aea.  v2:= 1I;
  #L3f3aec.  if v0 == 0 then goto L3f3b18;
  #L3f3af0.  v0:= v0 + -1;
  #L3f3af4.  call temp:= `charAt`(v5, v0) @signature `Ljava/lang/StringBuilder;.charAt:(I)C` @kind virtual;
  #L3f3afa.  v3:= temp;
  #L3f3afc.  v4:= 57I;
  #L3f3b00.  if v3 == v4 then goto L3f3ae8;
  #L3f3b04.  v3:= v3 + v2 @kind int;
  #L3f3b06.  v3:= (`char`) v3 @kind i2c;
  #L3f3b08.  call `setCharAt`(v5, v0, v3) @signature `Ljava/lang/StringBuilder;.setCharAt:(IC)V` @kind virtual;
  #L3f3b0e.  v0:= v0 + v2 @kind int;
  #L3f3b10.  call `setLength`(v5, v0) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L3f3b16.  return v1;
  #L3f3b18.  call `setLength`(v5, v1) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L3f3b1e.  return v2;
}
procedure `double` `j`(`double` v4 , `int` v6 ) @signature `Lorg/mozilla/javascript/d;.j:(DI)D` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f3b58.  call temp:= `doubleToLongBits`(v4) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L3f3b5e.  v4:= temp @kind wide;
  #L3f3b60.  v0:= (`long`) v6 @kind i2l;
  #L3f3b62.  v6:= 32I;
  #L3f3b66.  v0:= v0 ^< v6 @kind long;
  #L3f3b68.  v2:= 4294967295L;
  #L3f3b72.  v4:= v4 ^& v2 @kind long;
  #L3f3b74.  v4:= v4 ^| v0 @kind long;
  #L3f3b76.  call temp:= `longBitsToDouble`(v4) @signature `Ljava/lang/Double;.longBitsToDouble:(J)D` @kind static;
  #L3f3b7c.  v4:= temp @kind wide;
  #L3f3b7e.  return v4 @kind wide;
}
procedure `void` `k`(`java.lang.StringBuilder` v3 @kind object) @signature `Lorg/mozilla/javascript/d;.k:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f50a4.  call temp:= `length`(v3) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3f50aa.  v0:= temp;
  #L3f50ac.  v1:= v0 + -1;
  #L3f50b0.  if v0 <= 0 then goto L3f50c8;
  #L3f50b4.  call temp:= `charAt`(v3, v1) @signature `Ljava/lang/StringBuilder;.charAt:(I)C` @kind virtual;
  #L3f50ba.  v0:= temp;
  #L3f50bc.  v2:= 48I;
  #L3f50c0.  if v0 != v2 then goto L3f50c8;
  #L3f50c4.  v0:= v1;
  #L3f50c6.  goto L3f50ac;
  #L3f50c8.  v1:= v1 + 1;
  #L3f50cc.  call `setLength`(v3, v1) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L3f50d2.  return @kind void;
}
procedure `void` `l`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/mozilla/javascript/d;.l:([BII)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3f50e4.  v0:= v4 ^> 24;
  #L3f50e8.  v0:= (`byte`) v0 @kind i2b;
  #L3f50ea.  v2[v3]:= v0 @kind byte;
  #L3f50ee.  v0:= v3 + 1;
  #L3f50f2.  v1:= v4 ^> 16;
  #L3f50f6.  v1:= (`byte`) v1 @kind i2b;
  #L3f50f8.  v2[v0]:= v1 @kind byte;
  #L3f50fc.  v0:= v3 + 2;
  #L3f5100.  v1:= v4 ^> 8;
  #L3f5104.  v1:= (`byte`) v1 @kind i2b;
  #L3f5106.  v2[v0]:= v1 @kind byte;
  #L3f510a.  v3:= v3 + 3;
  #L3f510e.  v4:= (`byte`) v4 @kind i2b;
  #L3f5110.  v2[v3]:= v4 @kind byte;
  #L3f5114.  return @kind void;
}
procedure `int` `m`(`double` v1 ) @signature `Lorg/mozilla/javascript/d;.m:(D)I` @AccessFlag STATIC {
    temp;
    v0;

  #L3f4988.  call temp:= `doubleToLongBits`(v1) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L3f498e.  v1:= temp @kind wide;
  #L3f4990.  v0:= 32I;
  #L3f4994.  v1:= v1 ^> v0 @kind long;
  #L3f4996.  v2:= (`int`) v1 @kind l2i;
  #L3f4998.  return v2;
}
procedure `int` `n`(`double` v0 ) @signature `Lorg/mozilla/javascript/d;.n:(D)I` @AccessFlag STATIC {
    temp;

  #L3f49ac.  call temp:= `doubleToLongBits`(v0) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L3f49b2.  v0:= temp @kind wide;
  #L3f49b4.  v1:= (`int`) v0 @kind l2i;
  #L3f49b6.  return v1;
}
