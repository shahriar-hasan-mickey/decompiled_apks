record `org.mozilla.javascript.NativeWith` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.Scriptable` @kind interface, `org.mozilla.javascript.IdFunctionCall` @kind interface, `java.io.Serializable` @kind interface {
  `org.mozilla.javascript.Scriptable` `org.mozilla.javascript.NativeWith.parent` @AccessFlag PROTECTED;
  `org.mozilla.javascript.Scriptable` `org.mozilla.javascript.NativeWith.prototype` @AccessFlag PROTECTED;
}
global `java.lang.Object` `@@org.mozilla.javascript.NativeWith.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.mozilla.javascript.NativeWith.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/mozilla/javascript/NativeWith;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L413bb0.  v0:= "With" @kind object;
  #L413bb4.  `@@org.mozilla.javascript.NativeWith.a` @type ^`java.lang.Object` := v0 @kind object;
  #L413bb8.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.NativeWith` v0 @kind this) @signature `Lorg/mozilla/javascript/NativeWith;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L413bcc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L413bd2.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.NativeWith` v0 @kind this, `org.mozilla.javascript.Scriptable` v1 @kind object, `org.mozilla.javascript.Scriptable` v2 @kind object) @signature `Lorg/mozilla/javascript/NativeWith;.<init>:(Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L413be4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L413bea.  v0.`org.mozilla.javascript.NativeWith.parent` @type ^`org.mozilla.javascript.Scriptable` := v1 @kind object;
  #L413bee.  v0.`org.mozilla.javascript.NativeWith.prototype` @type ^`org.mozilla.javascript.Scriptable` := v2 @kind object;
  #L413bf2.  return @kind void;
}
procedure `void` `a`(`org.mozilla.javascript.Scriptable` v9 @kind object, `boolean` v10 ) @signature `Lorg/mozilla/javascript/NativeWith;.a:(Lorg/mozilla/javascript/Scriptable;Z)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L413c3c.  v7:= new `org.mozilla.javascript.NativeWith`;
  #L413c40.  call `<init>`(v7) @signature `Lorg/mozilla/javascript/NativeWith;.<init>:()V` @kind direct;
  #L413c46.  call `setParentScope`(v7, v9) @signature `Lorg/mozilla/javascript/NativeWith;.setParentScope:(Lorg/mozilla/javascript/Scriptable;)V` @kind virtual;
  #L413c4c.  call temp:= `getObjectPrototype`(v9) @signature `Lorg/mozilla/javascript/ScriptableObject;.getObjectPrototype:(Lorg/mozilla/javascript/Scriptable;)Lorg/mozilla/javascript/Scriptable;` @kind static;
  #L413c52.  v0:= temp @kind object;
  #L413c54.  call `setPrototype`(v7, v0) @signature `Lorg/mozilla/javascript/NativeWith;.setPrototype:(Lorg/mozilla/javascript/Scriptable;)V` @kind virtual;
  #L413c5a.  v8:= new `org.mozilla.javascript.IdFunctionObject`;
  #L413c5e.  v2:= `@@org.mozilla.javascript.NativeWith.a` @type ^`java.lang.Object` @kind object;
  #L413c62.  v3:= 1I;
  #L413c64.  v4:= "With" @kind object;
  #L413c68.  v5:= 0I;
  #L413c6a.  v0:= v8 @kind object;
  #L413c6c.  v1:= v7 @kind object;
  #L413c6e.  v6:= v9 @kind object;
  #L413c70.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lorg/mozilla/javascript/IdFunctionObject;.<init>:(Lorg/mozilla/javascript/IdFunctionCall;Ljava/lang/Object;ILjava/lang/String;ILorg/mozilla/javascript/Scriptable;)V` @kind direct;
  #L413c76.  call `markAsConstructor`(v8, v7) @signature `Lorg/mozilla/javascript/IdFunctionObject;.markAsConstructor:(Lorg/mozilla/javascript/Scriptable;)V` @kind virtual;
  #L413c7c.  if v10 == 0 then goto L413c86;
  #L413c80.  call `sealObject`(v8) @signature `Lorg/mozilla/javascript/ScriptableObject;.sealObject:()V` @kind virtual;
  #L413c86.  call `exportAsScopeProperty`(v8) @signature `Lorg/mozilla/javascript/IdFunctionObject;.exportAsScopeProperty:()V` @kind virtual;
  #L413c8c.  return @kind void;
}
procedure `boolean` `b`(`java.lang.Object` v3 @kind object) @signature `Lorg/mozilla/javascript/NativeWith;.b:(Ljava/lang/Object;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4139d8.  v0:= instanceof @variable v3 @type ^`org.mozilla.javascript.IdFunctionObject` @kind boolean;
  #L4139dc.  v1:= 0I;
  #L4139de.  if v0 == 0 then goto L413a06;
  #L4139e2.  v3:= (`org.mozilla.javascript.IdFunctionObject`) v3 @kind object;
  #L4139e6.  v0:= `@@org.mozilla.javascript.NativeWith.a` @type ^`java.lang.Object` @kind object;
  #L4139ea.  call temp:= `hasTag`(v3, v0) @signature `Lorg/mozilla/javascript/IdFunctionObject;.hasTag:(Ljava/lang/Object;)Z` @kind virtual;
  #L4139f0.  v0:= temp;
  #L4139f2.  v2:= 1I;
  #L4139f4.  if v0 == 0 then goto L413a06;
  #L4139f8.  call temp:= `methodId`(v3) @signature `Lorg/mozilla/javascript/IdFunctionObject;.methodId:()I` @kind virtual;
  #L4139fe.  v3:= temp;
  #L413a00.  if v3 != v2 then goto L413a06;
  #L413a04.  v1:= 1I;
  #L413a06.  return v1;
}
procedure `java.lang.Object` `c`(`org.mozilla.javascript.Context` v2 @kind object, `org.mozilla.javascript.Scriptable` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Lorg/mozilla/javascript/NativeWith;.c:(Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L413ad4.  v0:= "With" @kind object;
  #L413ad8.  call `a`(v2, v0) @signature `Lorg/mozilla/javascript/ScriptRuntime;.a:(Lorg/mozilla/javascript/Context;Ljava/lang/String;)V` @kind static;
  #L413ade.  call temp:= `getTopLevelScope`(v3) @signature `Lorg/mozilla/javascript/ScriptableObject;.getTopLevelScope:(Lorg/mozilla/javascript/Scriptable;)Lorg/mozilla/javascript/Scriptable;` @kind static;
  #L413ae4.  v3:= temp @kind object;
  #L413ae6.  v0:= new `org.mozilla.javascript.NativeWith`;
  #L413aea.  call `<init>`(v0) @signature `Lorg/mozilla/javascript/NativeWith;.<init>:()V` @kind direct;
  #L413af0.  v1:= length @variable v4;
  #L413af2.  if v1 != 0 then goto L413b00;
  #L413af6.  call temp:= `getObjectPrototype`(v3) @signature `Lorg/mozilla/javascript/ScriptableObject;.getObjectPrototype:(Lorg/mozilla/javascript/Scriptable;)Lorg/mozilla/javascript/Scriptable;` @kind static;
  #L413afc.  v2:= temp @kind object;
  #L413afe.  goto L413b0e;
  #L413b00.  v1:= 0I;
  #L413b02.  v4:= v4[v1] @kind object;
  #L413b06.  call temp:= `toObject`(v2, v3, v4) @signature `Lorg/mozilla/javascript/ScriptRuntime;.toObject:(Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)Lorg/mozilla/javascript/Scriptable;` @kind static;
  #L413b0c.  v2:= temp @kind object;
  #L413b0e.  call `setPrototype`(v0, v2) @signature `Lorg/mozilla/javascript/NativeWith;.setPrototype:(Lorg/mozilla/javascript/Scriptable;)V` @kind virtual;
  #L413b14.  call `setParentScope`(v0, v3) @signature `Lorg/mozilla/javascript/NativeWith;.setParentScope:(Lorg/mozilla/javascript/Scriptable;)V` @kind virtual;
  #L413b1a.  return v0 @kind object;
}
procedure `void` `delete`(`org.mozilla.javascript.NativeWith` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/NativeWith;.delete:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L413c04.  v0:= v1.`org.mozilla.javascript.NativeWith.prototype` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L413c08.  call `delete`(v0, v2) @signature `Lorg/mozilla/javascript/Scriptable;.delete:(I)V` @kind interface;
  #L413c0e.  return @kind void;
}
procedure `void` `delete`(`org.mozilla.javascript.NativeWith` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/mozilla/javascript/NativeWith;.delete:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L413c20.  v0:= v1.`org.mozilla.javascript.NativeWith.prototype` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L413c24.  call `delete`(v0, v2) @signature `Lorg/mozilla/javascript/Scriptable;.delete:(Ljava/lang/String;)V` @kind interface;
  #L413c2a.  return @kind void;
}
procedure `java.lang.Object` `execIdCall`(`org.mozilla.javascript.NativeWith` v0 @kind this, `org.mozilla.javascript.IdFunctionObject` v1 @kind object, `org.mozilla.javascript.Context` v2 @kind object, `org.mozilla.javascript.Scriptable` v3 @kind object, `org.mozilla.javascript.Scriptable` v4 @kind object, `java.lang.Object`[] v5 @kind object) @signature `Lorg/mozilla/javascript/NativeWith;.execIdCall:(Lorg/mozilla/javascript/IdFunctionObject;Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L413a18.  v2:= `@@org.mozilla.javascript.NativeWith.a` @type ^`java.lang.Object` @kind object;
  #L413a1c.  call temp:= `hasTag`(v1, v2) @signature `Lorg/mozilla/javascript/IdFunctionObject;.hasTag:(Ljava/lang/Object;)Z` @kind virtual;
  #L413a22.  v2:= temp;
  #L413a24.  if v2 == 0 then goto L413a48;
  #L413a28.  call temp:= `methodId`(v1) @signature `Lorg/mozilla/javascript/IdFunctionObject;.methodId:()I` @kind virtual;
  #L413a2e.  v2:= temp;
  #L413a30.  v3:= 1I;
  #L413a32.  if v2 != v3 then goto L413a48;
  #L413a36.  v1:= "msg.cant.call.indirect" @kind object;
  #L413a3a.  v2:= "With" @kind object;
  #L413a3e.  call temp:= `t`(v1, v2) @signature `Lorg/mozilla/javascript/Context;.t:(Ljava/lang/String;Ljava/lang/Object;)Lorg/mozilla/javascript/EvaluatorException;` @kind static;
  #L413a44.  v1:= temp @kind object;
  #L413a46.  throw v1;
  #L413a48.  call temp:= `unknown`(v1) @signature `Lorg/mozilla/javascript/IdFunctionObject;.unknown:()Ljava/lang/RuntimeException;` @kind virtual;
  #L413a4e.  v1:= temp @kind object;
  #L413a50.  throw v1;
}
procedure `java.lang.Object` `get`(`org.mozilla.javascript.NativeWith` v1 @kind this, `int` v2 , `org.mozilla.javascript.Scriptable` v3 @kind object) @signature `Lorg/mozilla/javascript/NativeWith;.get:(ILorg/mozilla/javascript/Scriptable;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L413a64.  if v3 != v1 then goto L413a6c;
  #L413a68.  v3:= v1.`org.mozilla.javascript.NativeWith.prototype` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L413a6c.  v0:= v1.`org.mozilla.javascript.NativeWith.prototype` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L413a70.  call temp:= `get`(v0, v2, v3) @signature `Lorg/mozilla/javascript/Scriptable;.get:(ILorg/mozilla/javascript/Scriptable;)Ljava/lang/Object;` @kind interface;
  #L413a76.  v2:= temp @kind object;
  #L413a78.  return v2 @kind object;
}
procedure `java.lang.Object` `get`(`org.mozilla.javascript.NativeWith` v1 @kind this, `java.lang.String` v2 @kind object, `org.mozilla.javascript.Scriptable` v3 @kind object) @signature `Lorg/mozilla/javascript/NativeWith;.get:(Ljava/lang/String;Lorg/mozilla/javascript/Scriptable;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L413a8c.  if v3 != v1 then goto L413a94;
  #L413a90.  v3:= v1.`org.mozilla.javascript.NativeWith.prototype` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L413a94.  v0:= v1.`org.mozilla.javascript.NativeWith.prototype` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L413a98.  call temp:= `get`(v0, v2, v3) @signature `Lorg/mozilla/javascript/Scriptable;.get:(Ljava/lang/String;Lorg/mozilla/javascript/Scriptable;)Ljava/lang/Object;` @kind interface;
  #L413a9e.  v2:= temp @kind object;
  #L413aa0.  return v2 @kind object;
}
procedure `java.lang.String` `getClassName`(`org.mozilla.javascript.NativeWith` v1 @kind this) @signature `Lorg/mozilla/javascript/NativeWith;.getClassName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L413b68.  v0:= "With" @kind object;
  #L413b6c.  return v0 @kind object;
}
procedure `java.lang.Object` `getDefaultValue`(`org.mozilla.javascript.NativeWith` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/mozilla/javascript/NativeWith;.getDefaultValue:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L413ab4.  v0:= v1.`org.mozilla.javascript.NativeWith.prototype` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L413ab8.  call temp:= `getDefaultValue`(v0, v2) @signature `Lorg/mozilla/javascript/Scriptable;.getDefaultValue:(Ljava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L413abe.  v2:= temp @kind object;
  #L413ac0.  return v2 @kind object;
}
procedure `java.lang.Object`[] `getIds`(`org.mozilla.javascript.NativeWith` v1 @kind this) @signature `Lorg/mozilla/javascript/NativeWith;.getIds:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L413b48.  v0:= v1.`org.mozilla.javascript.NativeWith.prototype` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L413b4c.  call temp:= `getIds`(v0) @signature `Lorg/mozilla/javascript/Scriptable;.getIds:()[Ljava/lang/Object;` @kind interface;
  #L413b52.  v0:= temp @kind object;
  #L413b54.  return v0 @kind object;
}
procedure `org.mozilla.javascript.Scriptable` `getParentScope`(`org.mozilla.javascript.NativeWith` v1 @kind this) @signature `Lorg/mozilla/javascript/NativeWith;.getParentScope:()Lorg/mozilla/javascript/Scriptable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L413b80.  v0:= v1.`org.mozilla.javascript.NativeWith.parent` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L413b84.  return v0 @kind object;
}
procedure `org.mozilla.javascript.Scriptable` `getPrototype`(`org.mozilla.javascript.NativeWith` v1 @kind this) @signature `Lorg/mozilla/javascript/NativeWith;.getPrototype:()Lorg/mozilla/javascript/Scriptable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L413b98.  v0:= v1.`org.mozilla.javascript.NativeWith.prototype` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L413b9c.  return v0 @kind object;
}
procedure `boolean` `has`(`org.mozilla.javascript.NativeWith` v0 @kind this, `int` v1 , `org.mozilla.javascript.Scriptable` v2 @kind object) @signature `Lorg/mozilla/javascript/NativeWith;.has:(ILorg/mozilla/javascript/Scriptable;)Z` @AccessFlag PUBLIC {
    temp;

  #L413978.  v2:= v0.`org.mozilla.javascript.NativeWith.prototype` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L41397c.  call temp:= `has`(v2, v1, v2) @signature `Lorg/mozilla/javascript/Scriptable;.has:(ILorg/mozilla/javascript/Scriptable;)Z` @kind interface;
  #L413982.  v1:= temp;
  #L413984.  return v1;
}
procedure `boolean` `has`(`org.mozilla.javascript.NativeWith` v0 @kind this, `java.lang.String` v1 @kind object, `org.mozilla.javascript.Scriptable` v2 @kind object) @signature `Lorg/mozilla/javascript/NativeWith;.has:(Ljava/lang/String;Lorg/mozilla/javascript/Scriptable;)Z` @AccessFlag PUBLIC {
    temp;

  #L413998.  v2:= v0.`org.mozilla.javascript.NativeWith.prototype` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L41399c.  call temp:= `has`(v2, v1, v2) @signature `Lorg/mozilla/javascript/Scriptable;.has:(Ljava/lang/String;Lorg/mozilla/javascript/Scriptable;)Z` @kind interface;
  #L4139a2.  v1:= temp;
  #L4139a4.  return v1;
}
procedure `boolean` `hasInstance`(`org.mozilla.javascript.NativeWith` v1 @kind this, `org.mozilla.javascript.Scriptable` v2 @kind object) @signature `Lorg/mozilla/javascript/NativeWith;.hasInstance:(Lorg/mozilla/javascript/Scriptable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4139b8.  v0:= v1.`org.mozilla.javascript.NativeWith.prototype` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L4139bc.  call temp:= `hasInstance`(v0, v2) @signature `Lorg/mozilla/javascript/Scriptable;.hasInstance:(Lorg/mozilla/javascript/Scriptable;)Z` @kind interface;
  #L4139c2.  v2:= temp;
  #L4139c4.  return v2;
}
procedure `void` `put`(`org.mozilla.javascript.NativeWith` v1 @kind this, `int` v2 , `org.mozilla.javascript.Scriptable` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/mozilla/javascript/NativeWith;.put:(ILorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L413ca0.  if v3 != v1 then goto L413ca8;
  #L413ca4.  v3:= v1.`org.mozilla.javascript.NativeWith.prototype` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L413ca8.  v0:= v1.`org.mozilla.javascript.NativeWith.prototype` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L413cac.  call `put`(v0, v2, v3, v4) @signature `Lorg/mozilla/javascript/Scriptable;.put:(ILorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)V` @kind interface;
  #L413cb2.  return @kind void;
}
procedure `void` `put`(`org.mozilla.javascript.NativeWith` v1 @kind this, `java.lang.String` v2 @kind object, `org.mozilla.javascript.Scriptable` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/mozilla/javascript/NativeWith;.put:(Ljava/lang/String;Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L413cc4.  if v3 != v1 then goto L413ccc;
  #L413cc8.  v3:= v1.`org.mozilla.javascript.NativeWith.prototype` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L413ccc.  v0:= v1.`org.mozilla.javascript.NativeWith.prototype` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L413cd0.  call `put`(v0, v2, v3, v4) @signature `Lorg/mozilla/javascript/Scriptable;.put:(Ljava/lang/String;Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)V` @kind interface;
  #L413cd6.  return @kind void;
}
procedure `void` `setParentScope`(`org.mozilla.javascript.NativeWith` v0 @kind this, `org.mozilla.javascript.Scriptable` v1 @kind object) @signature `Lorg/mozilla/javascript/NativeWith;.setParentScope:(Lorg/mozilla/javascript/Scriptable;)V` @AccessFlag PUBLIC {
    temp;

  #L413ce8.  v0.`org.mozilla.javascript.NativeWith.parent` @type ^`org.mozilla.javascript.Scriptable` := v1 @kind object;
  #L413cec.  return @kind void;
}
procedure `void` `setPrototype`(`org.mozilla.javascript.NativeWith` v0 @kind this, `org.mozilla.javascript.Scriptable` v1 @kind object) @signature `Lorg/mozilla/javascript/NativeWith;.setPrototype:(Lorg/mozilla/javascript/Scriptable;)V` @AccessFlag PUBLIC {
    temp;

  #L413d00.  v0.`org.mozilla.javascript.NativeWith.prototype` @type ^`org.mozilla.javascript.Scriptable` := v1 @kind object;
  #L413d04.  return @kind void;
}
procedure `java.lang.Object` `updateDotQuery`(`org.mozilla.javascript.NativeWith` v0 @kind this, `boolean` v1 ) @signature `Lorg/mozilla/javascript/NativeWith;.updateDotQuery:(Z)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;

  #L413b2c.  v1:= new `java.lang.IllegalStateException`;
  #L413b30.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L413b36.  throw v1;
}
