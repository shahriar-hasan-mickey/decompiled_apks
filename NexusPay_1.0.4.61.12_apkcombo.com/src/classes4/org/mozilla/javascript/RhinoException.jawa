record `org.mozilla.javascript.RhinoException` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.RuntimeException` @kind class {
  `java.lang.String` `org.mozilla.javascript.RhinoException.a` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.RhinoException.b` @AccessFlag PRIVATE;
  `java.lang.String` `org.mozilla.javascript.RhinoException.c` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.RhinoException.d` @AccessFlag PRIVATE;
  `java.lang.Object` `org.mozilla.javascript.RhinoException.e` @AccessFlag ;
  `int`[] `org.mozilla.javascript.RhinoException.f` @AccessFlag ;
}
global `boolean` `@@org.mozilla.javascript.RhinoException.g` @AccessFlag PRIVATE_STATIC;
global `long` `@@org.mozilla.javascript.RhinoException.serialVersionUID` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/mozilla/javascript/RhinoException;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L41d05c.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.RhinoException` v1 @kind this) @signature `Lorg/mozilla/javascript/RhinoException;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L41d070.  call `<init>`(v1) @signature `Ljava/lang/RuntimeException;.<init>:()V` @kind direct;
  #L41d076.  call temp:= `h`() @signature `Lorg/mozilla/javascript/Context;.h:()Lorg/mozilla/javascript/Evaluator;` @kind static;
  #L41d07c.  v0:= temp @kind object;
  #L41d07e.  if v0 == 0 then goto L41d088;
  #L41d082.  call `captureStackInfo`(v0, v1) @signature `Lorg/mozilla/javascript/Evaluator;.captureStackInfo:(Lorg/mozilla/javascript/RhinoException;)V` @kind interface;
  #L41d088.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.RhinoException` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/mozilla/javascript/RhinoException;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41d09c.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41d0a2.  call temp:= `h`() @signature `Lorg/mozilla/javascript/Context;.h:()Lorg/mozilla/javascript/Evaluator;` @kind static;
  #L41d0a8.  v1:= temp @kind object;
  #L41d0aa.  if v1 == 0 then goto L41d0b4;
  #L41d0ae.  call `captureStackInfo`(v1, v0) @signature `Lorg/mozilla/javascript/Evaluator;.captureStackInfo:(Lorg/mozilla/javascript/RhinoException;)V` @kind interface;
  #L41d0b4.  return @kind void;
}
procedure `java.lang.String` `a`(`org.mozilla.javascript.RhinoException` v2 @kind this) @signature `Lorg/mozilla/javascript/RhinoException;.a:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L41cd64.  v0:= new `java.io.CharArrayWriter`;
  #L41cd68.  call `<init>`(v0) @signature `Ljava/io/CharArrayWriter;.<init>:()V` @kind direct;
  #L41cd6e.  v1:= new `java.io.PrintWriter`;
  #L41cd72.  call `<init>`(v1, v0) @signature `Ljava/io/PrintWriter;.<init>:(Ljava/io/Writer;)V` @kind direct;
  #L41cd78.  call `printStackTrace`(v2, v1) @signature `Ljava/lang/RuntimeException;.printStackTrace:(Ljava/io/PrintWriter;)V` @kind super;
  #L41cd7e.  call temp:= `toString`(v0) @signature `Ljava/io/CharArrayWriter;.toString:()Ljava/lang/String;` @kind virtual;
  #L41cd84.  v0:= temp @kind object;
  #L41cd86.  call temp:= `h`() @signature `Lorg/mozilla/javascript/Context;.h:()Lorg/mozilla/javascript/Evaluator;` @kind static;
  #L41cd8c.  v1:= temp @kind object;
  #L41cd8e.  if v1 == 0 then goto L41cd9c;
  #L41cd92.  call temp:= `getPatchedStack`(v1, v2, v0) @signature `Lorg/mozilla/javascript/Evaluator;.getPatchedStack:(Lorg/mozilla/javascript/RhinoException;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L41cd98.  v0:= temp @kind object;
  #L41cd9a.  return v0 @kind object;
  #L41cd9c.  v0:= 0I;
  #L41cd9e.  return v0 @kind object;
}
procedure `void` `useMozillaStackStyle`(`boolean` v0 ) @signature `Lorg/mozilla/javascript/RhinoException;.useMozillaStackStyle:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L41d26c.  `@@org.mozilla.javascript.RhinoException.g` @type ^`boolean` := v0 @kind boolean;
  #L41d270.  return @kind void;
}
procedure `boolean` `usesMozillaStackStyle`() @signature `Lorg/mozilla/javascript/RhinoException;.usesMozillaStackStyle:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41cd00.  v0:= `@@org.mozilla.javascript.RhinoException.g` @type ^`boolean` @kind boolean;
  #L41cd04.  return v0;
}
procedure `void` `b`(`org.mozilla.javascript.RhinoException` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.String` v4 @kind object, `int` v5 ) @signature `Lorg/mozilla/javascript/RhinoException;.b:(Ljava/lang/String;ILjava/lang/String;I)V` @AccessFlag FINAL {
    temp;
    v0;

  #L41d228.  v0:= -1I;
  #L41d22a.  if v3 != v0 then goto L41d230;
  #L41d22e.  v3:= 0I;
  #L41d230.  if v2 == 0 then goto L41d23a;
  #L41d234.  call `initSourceName`(v1, v2) @signature `Lorg/mozilla/javascript/RhinoException;.initSourceName:(Ljava/lang/String;)V` @kind virtual;
  #L41d23a.  if v3 == 0 then goto L41d244;
  #L41d23e.  call `initLineNumber`(v1, v3) @signature `Lorg/mozilla/javascript/RhinoException;.initLineNumber:(I)V` @kind virtual;
  #L41d244.  if v4 == 0 then goto L41d24e;
  #L41d248.  call `initLineSource`(v1, v4) @signature `Lorg/mozilla/javascript/RhinoException;.initLineSource:(Ljava/lang/String;)V` @kind virtual;
  #L41d24e.  if v5 == 0 then goto L41d258;
  #L41d252.  call `initColumnNumber`(v1, v5) @signature `Lorg/mozilla/javascript/RhinoException;.initColumnNumber:(I)V` @kind virtual;
  #L41d258.  return @kind void;
}
procedure `int` `columnNumber`(`org.mozilla.javascript.RhinoException` v1 @kind this) @signature `Lorg/mozilla/javascript/RhinoException;.columnNumber:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41cd18.  v0:= v1.`org.mozilla.javascript.RhinoException.d` @type ^`int`;
  #L41cd1c.  return v0;
}
procedure `java.lang.String` `details`(`org.mozilla.javascript.RhinoException` v1 @kind this) @signature `Lorg/mozilla/javascript/RhinoException;.details:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41cd48.  call temp:= `getMessage`(v1) @signature `Ljava/lang/RuntimeException;.getMessage:()Ljava/lang/String;` @kind super;
  #L41cd4e.  v0:= temp @kind object;
  #L41cd50.  return v0 @kind object;
}
procedure `java.lang.String` `getMessage`(`org.mozilla.javascript.RhinoException` v2 @kind this) @signature `Lorg/mozilla/javascript/RhinoException;.getMessage:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L41cdb0.  call temp:= `details`(v2) @signature `Lorg/mozilla/javascript/RhinoException;.details:()Ljava/lang/String;` @kind virtual;
  #L41cdb6.  v0:= temp @kind object;
  #L41cdb8.  v1:= v2.`org.mozilla.javascript.RhinoException.a` @type ^`java.lang.String` @kind object;
  #L41cdbc.  if v1 == 0 then goto L41ce1a;
  #L41cdc0.  v1:= v2.`org.mozilla.javascript.RhinoException.b` @type ^`int`;
  #L41cdc4.  if v1 > 0 then goto L41cdca;
  #L41cdc8.  goto L41ce1a;
  #L41cdca.  v1:= new `java.lang.StringBuffer`;
  #L41cdce.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuffer;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41cdd4.  v0:= " (" @kind object;
  #L41cdd8.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L41cdde.  v0:= v2.`org.mozilla.javascript.RhinoException.a` @type ^`java.lang.String` @kind object;
  #L41cde2.  if v0 == 0 then goto L41cdec;
  #L41cde6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L41cdec.  v0:= v2.`org.mozilla.javascript.RhinoException.b` @type ^`int`;
  #L41cdf0.  if v0 <= 0 then goto L41ce08;
  #L41cdf4.  v0:= 35I;
  #L41cdf8.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L41cdfe.  v0:= v2.`org.mozilla.javascript.RhinoException.b` @type ^`int`;
  #L41ce02.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuffer;.append:(I)Ljava/lang/StringBuffer;` @kind virtual;
  #L41ce08.  v0:= 41I;
  #L41ce0c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L41ce12.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L41ce18.  v0:= temp @kind object;
  #L41ce1a.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ScriptStackElement`[] `getScriptStack`(`org.mozilla.javascript.RhinoException` v14 @kind this) @signature `Lorg/mozilla/javascript/RhinoException;.getScriptStack:()[Lorg/mozilla/javascript/ScriptStackElement;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L41cee0.  v0:= new `java.util.ArrayList`;
  #L41cee4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L41ceea.  v1:= v14.`org.mozilla.javascript.RhinoException.e` @type ^`java.lang.Object` @kind object;
  #L41ceee.  v2:= 0I;
  #L41cef0.  if v1 == 0 then goto L41cf12;
  #L41cef4.  call temp:= `h`() @signature `Lorg/mozilla/javascript/Context;.h:()Lorg/mozilla/javascript/Evaluator;` @kind static;
  #L41cefa.  v1:= temp @kind object;
  #L41cefc.  v3:= instanceof @variable v1 @type ^`org.mozilla.javascript.Interpreter` @kind boolean;
  #L41cf00.  if v3 == 0 then goto L41cf12;
  #L41cf04.  v1:= (`org.mozilla.javascript.Interpreter`) v1 @kind object;
  #L41cf08.  call temp:= `getScriptStackElements`(v1, v14) @signature `Lorg/mozilla/javascript/Interpreter;.getScriptStackElements:(Lorg/mozilla/javascript/RhinoException;)[[Lorg/mozilla/javascript/ScriptStackElement;` @kind virtual;
  #L41cf0e.  v1:= temp @kind object;
  #L41cf10.  goto L41cf14;
  #L41cf12.  v1:= v2 @kind object;
  #L41cf14.  call temp:= `getStackTrace`(v14) @signature `Ljava/lang/RuntimeException;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L41cf1a.  v3:= temp @kind object;
  #L41cf1c.  v4:= "_c_(.*)_\\d+" @kind object;
  #L41cf20.  call temp:= `compile`(v4) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L41cf26.  v4:= temp @kind object;
  #L41cf28.  v5:= length @variable v3;
  #L41cf2a.  v6:= 0I;
  #L41cf2c.  v7:= 0I;
  #L41cf2e.  v8:= 0I;
  #L41cf30.  if v7 >= v5 then goto L41d030;
  #L41cf34.  v9:= v3[v7] @kind object;
  #L41cf38.  call temp:= `getFileName`(v9) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L41cf3e.  v10:= temp @kind object;
  #L41cf40.  call temp:= `getMethodName`(v9) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L41cf46.  v11:= temp @kind object;
  #L41cf48.  v12:= "_c_" @kind object;
  #L41cf4c.  call temp:= `startsWith`(v11, v12) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L41cf52.  v11:= temp;
  #L41cf54.  if v11 == 0 then goto L41cfce;
  #L41cf58.  call temp:= `getLineNumber`(v9) @signature `Ljava/lang/StackTraceElement;.getLineNumber:()I` @kind virtual;
  #L41cf5e.  v11:= temp;
  #L41cf60.  v12:= -1I;
  #L41cf62.  if v11 <= v12 then goto L41cfce;
  #L41cf66.  if v10 == 0 then goto L41cfce;
  #L41cf6a.  v11:= ".java" @kind object;
  #L41cf6e.  call temp:= `endsWith`(v10, v11) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L41cf74.  v11:= temp;
  #L41cf76.  if v11 != 0 then goto L41cfce;
  #L41cf7a.  call temp:= `getMethodName`(v9) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L41cf80.  v11:= temp @kind object;
  #L41cf82.  call temp:= `matcher`(v4, v11) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L41cf88.  v12:= temp @kind object;
  #L41cf8a.  v13:= "_c_script_0" @kind object;
  #L41cf8e.  call temp:= `equals`(v13, v11) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41cf94.  v11:= temp;
  #L41cf96.  if v11 != 0 then goto L41cfb2;
  #L41cf9a.  call temp:= `find`(v12) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L41cfa0.  v11:= temp;
  #L41cfa2.  if v11 == 0 then goto L41cfb2;
  #L41cfa6.  v11:= 1I;
  #L41cfa8.  call temp:= `group`(v12, v11) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L41cfae.  v11:= temp @kind object;
  #L41cfb0.  goto L41cfb4;
  #L41cfb2.  v11:= v2 @kind object;
  #L41cfb4.  v12:= new `org.mozilla.javascript.ScriptStackElement`;
  #L41cfb8.  call temp:= `getLineNumber`(v9) @signature `Ljava/lang/StackTraceElement;.getLineNumber:()I` @kind virtual;
  #L41cfbe.  v9:= temp;
  #L41cfc0.  call `<init>`(v12, v10, v11, v9) @signature `Lorg/mozilla/javascript/ScriptStackElement;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L41cfc6.  call temp:= `add`(v0, v12) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41cfcc.  goto L41d02a;
  #L41cfce.  call temp:= `getClassName`(v9) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L41cfd4.  v10:= temp @kind object;
  #L41cfd6.  v11:= "org.mozilla.javascript.Interpreter" @kind object;
  #L41cfda.  call temp:= `equals`(v11, v10) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41cfe0.  v10:= temp;
  #L41cfe2.  if v10 == 0 then goto L41d02a;
  #L41cfe6.  call temp:= `getMethodName`(v9) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L41cfec.  v9:= temp @kind object;
  #L41cfee.  v10:= "interpretLoop" @kind object;
  #L41cff2.  call temp:= `equals`(v10, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41cff8.  v9:= temp;
  #L41cffa.  if v9 == 0 then goto L41d02a;
  #L41cffe.  if v1 == 0 then goto L41d02a;
  #L41d002.  v9:= length @variable v1;
  #L41d004.  if v9 <= v8 then goto L41d02a;
  #L41d008.  v9:= v8 + 1;
  #L41d00c.  v8:= v1[v8] @kind object;
  #L41d010.  v10:= length @variable v8;
  #L41d012.  v11:= 0I;
  #L41d014.  if v11 >= v10 then goto L41d028;
  #L41d018.  v12:= v8[v11] @kind object;
  #L41d01c.  call temp:= `add`(v0, v12) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L41d022.  v11:= v11 + 1;
  #L41d026.  goto L41d014;
  #L41d028.  v8:= v9;
  #L41d02a.  v7:= v7 + 1;
  #L41d02e.  goto L41cf30;
  #L41d030.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L41d036.  v1:= temp;
  #L41d038.  v1:= new `org.mozilla.javascript.ScriptStackElement`[v1];
  #L41d03c.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L41d042.  v0:= temp @kind object;
  #L41d044.  v0:= (`org.mozilla.javascript.ScriptStackElement`[]) v0 @kind object;
  #L41d048.  return v0 @kind object;
}
procedure `java.lang.String` `getScriptStackTrace`(`org.mozilla.javascript.RhinoException` v7 @kind this) @signature `Lorg/mozilla/javascript/RhinoException;.getScriptStackTrace:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41ce2c.  v0:= new `java.lang.StringBuilder`;
  #L41ce30.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41ce36.  v1:= "line.separator" @kind object;
  #L41ce3a.  call temp:= `getSystemProperty`(v1) @signature `Lorg/mozilla/javascript/SecurityUtilities;.getSystemProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L41ce40.  v1:= temp @kind object;
  #L41ce42.  call temp:= `getScriptStack`(v7) @signature `Lorg/mozilla/javascript/RhinoException;.getScriptStack:()[Lorg/mozilla/javascript/ScriptStackElement;` @kind virtual;
  #L41ce48.  v2:= temp @kind object;
  #L41ce4a.  v3:= length @variable v2;
  #L41ce4c.  v4:= 0I;
  #L41ce4e.  if v4 >= v3 then goto L41ce78;
  #L41ce52.  v5:= v2[v4] @kind object;
  #L41ce56.  v6:= `@@org.mozilla.javascript.RhinoException.g` @type ^`boolean` @kind boolean;
  #L41ce5a.  if v6 == 0 then goto L41ce66;
  #L41ce5e.  call `renderMozillaStyle`(v5, v0) @signature `Lorg/mozilla/javascript/ScriptStackElement;.renderMozillaStyle:(Ljava/lang/StringBuilder;)V` @kind virtual;
  #L41ce64.  goto L41ce6c;
  #L41ce66.  call `renderJavaStyle`(v5, v0) @signature `Lorg/mozilla/javascript/ScriptStackElement;.renderJavaStyle:(Ljava/lang/StringBuilder;)V` @kind virtual;
  #L41ce6c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41ce72.  v4:= v4 + 1;
  #L41ce76.  goto L41ce4e;
  #L41ce78.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41ce7e.  v0:= temp @kind object;
  #L41ce80.  return v0 @kind object;
}
procedure `java.lang.String` `getScriptStackTrace`(`org.mozilla.javascript.RhinoException` v0 @kind this, `java.io.FilenameFilter` v1 @kind object) @signature `Lorg/mozilla/javascript/RhinoException;.getScriptStackTrace:(Ljava/io/FilenameFilter;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L41ce94.  call temp:= `getScriptStackTrace`(v0) @signature `Lorg/mozilla/javascript/RhinoException;.getScriptStackTrace:()Ljava/lang/String;` @kind virtual;
  #L41ce9a.  v1:= temp @kind object;
  #L41ce9c.  return v1 @kind object;
}
procedure `void` `initColumnNumber`(`org.mozilla.javascript.RhinoException` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/RhinoException;.initColumnNumber:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41d0c8.  if v2 <= 0 then goto L41d0e6;
  #L41d0cc.  v0:= v1.`org.mozilla.javascript.RhinoException.d` @type ^`int`;
  #L41d0d0.  if v0 > 0 then goto L41d0da;
  #L41d0d4.  v1.`org.mozilla.javascript.RhinoException.d` @type ^`int` := v2;
  #L41d0d8.  return @kind void;
  #L41d0da.  v2:= new `java.lang.IllegalStateException`;
  #L41d0de.  call `<init>`(v2) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L41d0e4.  throw v2;
  #L41d0e6.  v0:= new `java.lang.IllegalArgumentException`;
  #L41d0ea.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L41d0f0.  v2:= temp @kind object;
  #L41d0f2.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41d0f8.  throw v0;
}
procedure `void` `initLineNumber`(`org.mozilla.javascript.RhinoException` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/RhinoException;.initLineNumber:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41d10c.  if v2 <= 0 then goto L41d12a;
  #L41d110.  v0:= v1.`org.mozilla.javascript.RhinoException.b` @type ^`int`;
  #L41d114.  if v0 > 0 then goto L41d11e;
  #L41d118.  v1.`org.mozilla.javascript.RhinoException.b` @type ^`int` := v2;
  #L41d11c.  return @kind void;
  #L41d11e.  v2:= new `java.lang.IllegalStateException`;
  #L41d122.  call `<init>`(v2) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L41d128.  throw v2;
  #L41d12a.  v0:= new `java.lang.IllegalArgumentException`;
  #L41d12e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L41d134.  v2:= temp @kind object;
  #L41d136.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41d13c.  throw v0;
}
procedure `void` `initLineSource`(`org.mozilla.javascript.RhinoException` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/mozilla/javascript/RhinoException;.initLineSource:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41d150.  if v2 == 0 then goto L41d16e;
  #L41d154.  v0:= v1.`org.mozilla.javascript.RhinoException.c` @type ^`java.lang.String` @kind object;
  #L41d158.  if v0 != 0 then goto L41d162;
  #L41d15c.  v1.`org.mozilla.javascript.RhinoException.c` @type ^`java.lang.String` := v2 @kind object;
  #L41d160.  return @kind void;
  #L41d162.  v2:= new `java.lang.IllegalStateException`;
  #L41d166.  call `<init>`(v2) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L41d16c.  throw v2;
  #L41d16e.  v2:= new `java.lang.IllegalArgumentException`;
  #L41d172.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L41d178.  throw v2;
}
procedure `void` `initSourceName`(`org.mozilla.javascript.RhinoException` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/mozilla/javascript/RhinoException;.initSourceName:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41d18c.  if v2 == 0 then goto L41d1aa;
  #L41d190.  v0:= v1.`org.mozilla.javascript.RhinoException.a` @type ^`java.lang.String` @kind object;
  #L41d194.  if v0 != 0 then goto L41d19e;
  #L41d198.  v1.`org.mozilla.javascript.RhinoException.a` @type ^`java.lang.String` := v2 @kind object;
  #L41d19c.  return @kind void;
  #L41d19e.  v2:= new `java.lang.IllegalStateException`;
  #L41d1a2.  call `<init>`(v2) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L41d1a8.  throw v2;
  #L41d1aa.  v2:= new `java.lang.IllegalArgumentException`;
  #L41d1ae.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L41d1b4.  throw v2;
}
procedure `int` `lineNumber`(`org.mozilla.javascript.RhinoException` v1 @kind this) @signature `Lorg/mozilla/javascript/RhinoException;.lineNumber:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41cd30.  v0:= v1.`org.mozilla.javascript.RhinoException.b` @type ^`int`;
  #L41cd34.  return v0;
}
procedure `java.lang.String` `lineSource`(`org.mozilla.javascript.RhinoException` v1 @kind this) @signature `Lorg/mozilla/javascript/RhinoException;.lineSource:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41ceb0.  v0:= v1.`org.mozilla.javascript.RhinoException.c` @type ^`java.lang.String` @kind object;
  #L41ceb4.  return v0 @kind object;
}
procedure `void` `printStackTrace`(`org.mozilla.javascript.RhinoException` v1 @kind this, `java.io.PrintStream` v2 @kind object) @signature `Lorg/mozilla/javascript/RhinoException;.printStackTrace:(Ljava/io/PrintStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41d1c8.  v0:= v1.`org.mozilla.javascript.RhinoException.e` @type ^`java.lang.Object` @kind object;
  #L41d1cc.  if v0 != 0 then goto L41d1d8;
  #L41d1d0.  call `printStackTrace`(v1, v2) @signature `Ljava/lang/RuntimeException;.printStackTrace:(Ljava/io/PrintStream;)V` @kind super;
  #L41d1d6.  goto L41d1e6;
  #L41d1d8.  call temp:= `a`(v1) @signature `Lorg/mozilla/javascript/RhinoException;.a:()Ljava/lang/String;` @kind direct;
  #L41d1de.  v0:= temp @kind object;
  #L41d1e0.  call `print`(v2, v0) @signature `Ljava/io/PrintStream;.print:(Ljava/lang/String;)V` @kind virtual;
  #L41d1e6.  return @kind void;
}
procedure `void` `printStackTrace`(`org.mozilla.javascript.RhinoException` v1 @kind this, `java.io.PrintWriter` v2 @kind object) @signature `Lorg/mozilla/javascript/RhinoException;.printStackTrace:(Ljava/io/PrintWriter;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41d1f8.  v0:= v1.`org.mozilla.javascript.RhinoException.e` @type ^`java.lang.Object` @kind object;
  #L41d1fc.  if v0 != 0 then goto L41d208;
  #L41d200.  call `printStackTrace`(v1, v2) @signature `Ljava/lang/RuntimeException;.printStackTrace:(Ljava/io/PrintWriter;)V` @kind super;
  #L41d206.  goto L41d216;
  #L41d208.  call temp:= `a`(v1) @signature `Lorg/mozilla/javascript/RhinoException;.a:()Ljava/lang/String;` @kind direct;
  #L41d20e.  v0:= temp @kind object;
  #L41d210.  call `print`(v2, v0) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L41d216.  return @kind void;
}
procedure `java.lang.String` `sourceName`(`org.mozilla.javascript.RhinoException` v1 @kind this) @signature `Lorg/mozilla/javascript/RhinoException;.sourceName:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L41cec8.  v0:= v1.`org.mozilla.javascript.RhinoException.a` @type ^`java.lang.String` @kind object;
  #L41cecc.  return v0 @kind object;
}
