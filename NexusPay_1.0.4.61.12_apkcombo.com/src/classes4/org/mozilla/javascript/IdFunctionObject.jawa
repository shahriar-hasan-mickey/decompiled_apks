record `org.mozilla.javascript.IdFunctionObject` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.BaseFunction` @kind class {
  `org.mozilla.javascript.IdFunctionCall` `org.mozilla.javascript.IdFunctionObject.m` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `org.mozilla.javascript.IdFunctionObject.n` @AccessFlag PRIVATE_FINAL;
  `int` `org.mozilla.javascript.IdFunctionObject.o` @AccessFlag PRIVATE_FINAL;
  `int` `org.mozilla.javascript.IdFunctionObject.p` @AccessFlag PRIVATE;
  `boolean` `org.mozilla.javascript.IdFunctionObject.q` @AccessFlag PRIVATE;
  `java.lang.String` `org.mozilla.javascript.IdFunctionObject.r` @AccessFlag PRIVATE;
}
global `long` `@@org.mozilla.javascript.IdFunctionObject.serialVersionUID` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`org.mozilla.javascript.IdFunctionObject` v0 @kind this, `org.mozilla.javascript.IdFunctionCall` v1 @kind object, `java.lang.Object` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/mozilla/javascript/IdFunctionObject;.<init>:(Lorg/mozilla/javascript/IdFunctionCall;Ljava/lang/Object;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3fb3cc.  call `<init>`(v0) @signature `Lorg/mozilla/javascript/BaseFunction;.<init>:()V` @kind direct;
  #L3fb3d2.  if v4 < 0 then goto L3fb3f8;
  #L3fb3d6.  v0.`org.mozilla.javascript.IdFunctionObject.m` @type ^`org.mozilla.javascript.IdFunctionCall` := v1 @kind object;
  #L3fb3da.  v0.`org.mozilla.javascript.IdFunctionObject.n` @type ^`java.lang.Object` := v2 @kind object;
  #L3fb3de.  v0.`org.mozilla.javascript.IdFunctionObject.o` @type ^`int` := v3;
  #L3fb3e2.  v0.`org.mozilla.javascript.IdFunctionObject.p` @type ^`int` := v4;
  #L3fb3e6.  if v4 < 0 then goto L3fb3ec;
  #L3fb3ea.  return @kind void;
  #L3fb3ec.  v1:= new `java.lang.IllegalArgumentException`;
  #L3fb3f0.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3fb3f6.  throw v1;
  #L3fb3f8.  v1:= new `java.lang.IllegalArgumentException`;
  #L3fb3fc.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3fb402.  throw v1;
}
procedure `void` `<init>`(`org.mozilla.javascript.IdFunctionObject` v1 @kind this, `org.mozilla.javascript.IdFunctionCall` v2 @kind object, `java.lang.Object` v3 @kind object, `int` v4 , `java.lang.String` v5 @kind object, `int` v6 , `org.mozilla.javascript.Scriptable` v7 @kind object) @signature `Lorg/mozilla/javascript/IdFunctionObject;.<init>:(Lorg/mozilla/javascript/IdFunctionCall;Ljava/lang/Object;ILjava/lang/String;ILorg/mozilla/javascript/Scriptable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3fb414.  v0:= 0I;
  #L3fb416.  call `<init>`(v1, v7, v0) @signature `Lorg/mozilla/javascript/BaseFunction;.<init>:(Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;)V` @kind direct;
  #L3fb41c.  if v6 < 0 then goto L3fb446;
  #L3fb420.  if v5 == 0 then goto L3fb43a;
  #L3fb424.  v1.`org.mozilla.javascript.IdFunctionObject.m` @type ^`org.mozilla.javascript.IdFunctionCall` := v2 @kind object;
  #L3fb428.  v1.`org.mozilla.javascript.IdFunctionObject.n` @type ^`java.lang.Object` := v3 @kind object;
  #L3fb42c.  v1.`org.mozilla.javascript.IdFunctionObject.o` @type ^`int` := v4;
  #L3fb430.  v1.`org.mozilla.javascript.IdFunctionObject.p` @type ^`int` := v6;
  #L3fb434.  v1.`org.mozilla.javascript.IdFunctionObject.r` @type ^`java.lang.String` := v5 @kind object;
  #L3fb438.  return @kind void;
  #L3fb43a.  v2:= new `java.lang.IllegalArgumentException`;
  #L3fb43e.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3fb444.  throw v2;
  #L3fb446.  v2:= new `java.lang.IllegalArgumentException`;
  #L3fb44a.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3fb450.  throw v2;
}
procedure `java.lang.String` `A`(`org.mozilla.javascript.IdFunctionObject` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lorg/mozilla/javascript/IdFunctionObject;.A:(II)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3fb284.  v3:= new `java.lang.StringBuffer`;
  #L3fb288.  call `<init>`(v3) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L3fb28e.  v0:= 1I;
  #L3fb290.  v4:= v4 ^& v0 @kind int;
  #L3fb292.  if v4 == 0 then goto L3fb298;
  #L3fb296.  goto L3fb29a;
  #L3fb298.  v0:= 0I;
  #L3fb29a.  if v0 != 0 then goto L3fb2c0;
  #L3fb29e.  v4:= "function " @kind object;
  #L3fb2a2.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3fb2a8.  call temp:= `getFunctionName`(v2) @signature `Lorg/mozilla/javascript/IdFunctionObject;.getFunctionName:()Ljava/lang/String;` @kind virtual;
  #L3fb2ae.  v4:= temp @kind object;
  #L3fb2b0.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3fb2b6.  v4:= "() { " @kind object;
  #L3fb2ba.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3fb2c0.  v4:= "[native code for " @kind object;
  #L3fb2c4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3fb2ca.  v4:= v2.`org.mozilla.javascript.IdFunctionObject.m` @type ^`org.mozilla.javascript.IdFunctionCall` @kind object;
  #L3fb2ce.  v1:= instanceof @variable v4 @type ^`org.mozilla.javascript.Scriptable` @kind boolean;
  #L3fb2d2.  if v1 == 0 then goto L3fb2f2;
  #L3fb2d6.  v4:= (`org.mozilla.javascript.Scriptable`) v4 @kind object;
  #L3fb2da.  call temp:= `getClassName`(v4) @signature `Lorg/mozilla/javascript/Scriptable;.getClassName:()Ljava/lang/String;` @kind interface;
  #L3fb2e0.  v4:= temp @kind object;
  #L3fb2e2.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3fb2e8.  v4:= 46I;
  #L3fb2ec.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L3fb2f2.  call temp:= `getFunctionName`(v2) @signature `Lorg/mozilla/javascript/IdFunctionObject;.getFunctionName:()Ljava/lang/String;` @kind virtual;
  #L3fb2f8.  v4:= temp @kind object;
  #L3fb2fa.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3fb300.  v4:= ", arity=" @kind object;
  #L3fb304.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3fb30a.  call temp:= `getArity`(v2) @signature `Lorg/mozilla/javascript/IdFunctionObject;.getArity:()I` @kind virtual;
  #L3fb310.  v4:= temp;
  #L3fb312.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuffer;.append:(I)Ljava/lang/StringBuffer;` @kind virtual;
  #L3fb318.  if v0 == 0 then goto L3fb322;
  #L3fb31c.  v4:= "]\n" @kind object;
  #L3fb320.  goto L3fb326;
  #L3fb322.  v4:= "] }\n" @kind object;
  #L3fb326.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3fb32c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fb332.  v3:= temp @kind object;
  #L3fb334.  return v3 @kind object;
}
procedure `void` `addAsProperty`(`org.mozilla.javascript.IdFunctionObject` v2 @kind this, `org.mozilla.javascript.Scriptable` v3 @kind object) @signature `Lorg/mozilla/javascript/IdFunctionObject;.addAsProperty:(Lorg/mozilla/javascript/Scriptable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3fb464.  v0:= v2.`org.mozilla.javascript.IdFunctionObject.r` @type ^`java.lang.String` @kind object;
  #L3fb468.  v1:= 2I;
  #L3fb46a.  call `defineProperty`(v3, v0, v2, v1) @signature `Lorg/mozilla/javascript/ScriptableObject;.defineProperty:(Lorg/mozilla/javascript/Scriptable;Ljava/lang/String;Ljava/lang/Object;I)V` @kind static;
  #L3fb470.  return @kind void;
}
procedure `java.lang.Object` `call`(`org.mozilla.javascript.IdFunctionObject` v6 @kind this, `org.mozilla.javascript.Context` v7 @kind object, `org.mozilla.javascript.Scriptable` v8 @kind object, `org.mozilla.javascript.Scriptable` v9 @kind object, `java.lang.Object`[] v10 @kind object) @signature `Lorg/mozilla/javascript/IdFunctionObject;.call:(Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fb204.  v0:= v6.`org.mozilla.javascript.IdFunctionObject.m` @type ^`org.mozilla.javascript.IdFunctionCall` @kind object;
  #L3fb208.  v1:= v6 @kind object;
  #L3fb20a.  v2:= v7 @kind object;
  #L3fb20c.  v3:= v8 @kind object;
  #L3fb20e.  v4:= v9 @kind object;
  #L3fb210.  v5:= v10 @kind object;
  #L3fb212.  call temp:= `execIdCall`(v0, v1, v2, v3, v4, v5) @signature `Lorg/mozilla/javascript/IdFunctionCall;.execIdCall:(Lorg/mozilla/javascript/IdFunctionObject;Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;[Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3fb218.  v7:= temp @kind object;
  #L3fb21a.  return v7 @kind object;
}
procedure `org.mozilla.javascript.Scriptable` `createObject`(`org.mozilla.javascript.IdFunctionObject` v0 @kind this, `org.mozilla.javascript.Context` v1 @kind object, `org.mozilla.javascript.Scriptable` v2 @kind object) @signature `Lorg/mozilla/javascript/IdFunctionObject;.createObject:(Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;)Lorg/mozilla/javascript/Scriptable;` @AccessFlag PUBLIC {
    temp;

  #L3fb368.  v1:= v0.`org.mozilla.javascript.IdFunctionObject.q` @type ^`boolean` @kind boolean;
  #L3fb36c.  if v1 == 0 then goto L3fb374;
  #L3fb370.  v1:= 0I;
  #L3fb372.  return v1 @kind object;
  #L3fb374.  v1:= v0.`org.mozilla.javascript.IdFunctionObject.r` @type ^`java.lang.String` @kind object;
  #L3fb378.  v2:= "msg.not.ctor" @kind object;
  #L3fb37c.  call temp:= `typeError1`(v2, v1) @signature `Lorg/mozilla/javascript/ScriptRuntime;.typeError1:(Ljava/lang/String;Ljava/lang/String;)Lorg/mozilla/javascript/EcmaError;` @kind static;
  #L3fb382.  v1:= temp @kind object;
  #L3fb384.  throw v1;
}
procedure `void` `exportAsScopeProperty`(`org.mozilla.javascript.IdFunctionObject` v1 @kind this) @signature `Lorg/mozilla/javascript/IdFunctionObject;.exportAsScopeProperty:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fb484.  call temp:= `getParentScope`(v1) @signature `Lorg/mozilla/javascript/ScriptableObject;.getParentScope:()Lorg/mozilla/javascript/Scriptable;` @kind virtual;
  #L3fb48a.  v0:= temp @kind object;
  #L3fb48c.  call `addAsProperty`(v1, v0) @signature `Lorg/mozilla/javascript/IdFunctionObject;.addAsProperty:(Lorg/mozilla/javascript/Scriptable;)V` @kind virtual;
  #L3fb492.  return @kind void;
}
procedure `int` `getArity`(`org.mozilla.javascript.IdFunctionObject` v1 @kind this) @signature `Lorg/mozilla/javascript/IdFunctionObject;.getArity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fb1b8.  v0:= v1.`org.mozilla.javascript.IdFunctionObject.p` @type ^`int`;
  #L3fb1bc.  return v0;
}
procedure `java.lang.String` `getFunctionName`(`org.mozilla.javascript.IdFunctionObject` v1 @kind this) @signature `Lorg/mozilla/javascript/IdFunctionObject;.getFunctionName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fb348.  v0:= v1.`org.mozilla.javascript.IdFunctionObject.r` @type ^`java.lang.String` @kind object;
  #L3fb34c.  if v0 != 0 then goto L3fb354;
  #L3fb350.  v0:= "" @kind object;
  #L3fb354.  return v0 @kind object;
}
procedure `int` `getLength`(`org.mozilla.javascript.IdFunctionObject` v1 @kind this) @signature `Lorg/mozilla/javascript/IdFunctionObject;.getLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fb1d0.  call temp:= `getArity`(v1) @signature `Lorg/mozilla/javascript/IdFunctionObject;.getArity:()I` @kind virtual;
  #L3fb1d6.  v0:= temp;
  #L3fb1d8.  return v0;
}
procedure `org.mozilla.javascript.Scriptable` `getPrototype`(`org.mozilla.javascript.IdFunctionObject` v1 @kind this) @signature `Lorg/mozilla/javascript/IdFunctionObject;.getPrototype:()Lorg/mozilla/javascript/Scriptable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fb398.  call temp:= `getPrototype`(v1) @signature `Lorg/mozilla/javascript/ScriptableObject;.getPrototype:()Lorg/mozilla/javascript/Scriptable;` @kind super;
  #L3fb39e.  v0:= temp @kind object;
  #L3fb3a0.  if v0 != 0 then goto L3fb3ba;
  #L3fb3a4.  call temp:= `getParentScope`(v1) @signature `Lorg/mozilla/javascript/ScriptableObject;.getParentScope:()Lorg/mozilla/javascript/Scriptable;` @kind virtual;
  #L3fb3aa.  v0:= temp @kind object;
  #L3fb3ac.  call temp:= `getFunctionPrototype`(v0) @signature `Lorg/mozilla/javascript/ScriptableObject;.getFunctionPrototype:(Lorg/mozilla/javascript/Scriptable;)Lorg/mozilla/javascript/Scriptable;` @kind static;
  #L3fb3b2.  v0:= temp @kind object;
  #L3fb3b4.  call `setPrototype`(v1, v0) @signature `Lorg/mozilla/javascript/ScriptableObject;.setPrototype:(Lorg/mozilla/javascript/Scriptable;)V` @kind virtual;
  #L3fb3ba.  return v0 @kind object;
}
procedure `boolean` `hasTag`(`org.mozilla.javascript.IdFunctionObject` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/mozilla/javascript/IdFunctionObject;.hasTag:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fb184.  if v2 != 0 then goto L3fb198;
  #L3fb188.  v2:= v1.`org.mozilla.javascript.IdFunctionObject.n` @type ^`java.lang.Object` @kind object;
  #L3fb18c.  if v2 != 0 then goto L3fb194;
  #L3fb190.  v2:= 1I;
  #L3fb192.  goto L3fb1a4;
  #L3fb194.  v2:= 0I;
  #L3fb196.  goto L3fb1a4;
  #L3fb198.  v0:= v1.`org.mozilla.javascript.IdFunctionObject.n` @type ^`java.lang.Object` @kind object;
  #L3fb19c.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fb1a2.  v2:= temp;
  #L3fb1a4.  return v2;
}
procedure `void` `initFunction`(`org.mozilla.javascript.IdFunctionObject` v0 @kind this, `java.lang.String` v1 @kind object, `org.mozilla.javascript.Scriptable` v2 @kind object) @signature `Lorg/mozilla/javascript/IdFunctionObject;.initFunction:(Ljava/lang/String;Lorg/mozilla/javascript/Scriptable;)V` @AccessFlag PUBLIC {
    temp;

  #L3fb4a4.  if v1 == 0 then goto L3fb4c4;
  #L3fb4a8.  if v2 == 0 then goto L3fb4b8;
  #L3fb4ac.  v0.`org.mozilla.javascript.IdFunctionObject.r` @type ^`java.lang.String` := v1 @kind object;
  #L3fb4b0.  call `setParentScope`(v0, v2) @signature `Lorg/mozilla/javascript/ScriptableObject;.setParentScope:(Lorg/mozilla/javascript/Scriptable;)V` @kind virtual;
  #L3fb4b6.  return @kind void;
  #L3fb4b8.  v1:= new `java.lang.IllegalArgumentException`;
  #L3fb4bc.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3fb4c2.  throw v1;
  #L3fb4c4.  v1:= new `java.lang.IllegalArgumentException`;
  #L3fb4c8.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3fb4ce.  throw v1;
}
procedure `void` `markAsConstructor`(`org.mozilla.javascript.IdFunctionObject` v1 @kind this, `org.mozilla.javascript.Scriptable` v2 @kind object) @signature `Lorg/mozilla/javascript/IdFunctionObject;.markAsConstructor:(Lorg/mozilla/javascript/Scriptable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fb4e0.  v0:= 1I;
  #L3fb4e2.  v1.`org.mozilla.javascript.IdFunctionObject.q` @type ^`boolean` := v0 @kind boolean;
  #L3fb4e6.  call `setImmunePrototypeProperty`(v1, v2) @signature `Lorg/mozilla/javascript/BaseFunction;.setImmunePrototypeProperty:(Ljava/lang/Object;)V` @kind virtual;
  #L3fb4ec.  return @kind void;
}
procedure `int` `methodId`(`org.mozilla.javascript.IdFunctionObject` v1 @kind this) @signature `Lorg/mozilla/javascript/IdFunctionObject;.methodId:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fb1ec.  v0:= v1.`org.mozilla.javascript.IdFunctionObject.o` @type ^`int`;
  #L3fb1f0.  return v0;
}
procedure `java.lang.RuntimeException` `unknown`(`org.mozilla.javascript.IdFunctionObject` v3 @kind this) @signature `Lorg/mozilla/javascript/IdFunctionObject;.unknown:()Ljava/lang/RuntimeException;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3fb22c.  v0:= new `java.lang.IllegalArgumentException`;
  #L3fb230.  v1:= new `java.lang.StringBuilder`;
  #L3fb234.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fb23a.  v2:= "BAD FUNCTION ID=" @kind object;
  #L3fb23e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fb244.  v2:= v3.`org.mozilla.javascript.IdFunctionObject.o` @type ^`int`;
  #L3fb248.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fb24e.  v2:= " MASTER=" @kind object;
  #L3fb252.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fb258.  v2:= v3.`org.mozilla.javascript.IdFunctionObject.m` @type ^`org.mozilla.javascript.IdFunctionCall` @kind object;
  #L3fb25c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fb262.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fb268.  v1:= temp @kind object;
  #L3fb26a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fb270.  return v0 @kind object;
}
