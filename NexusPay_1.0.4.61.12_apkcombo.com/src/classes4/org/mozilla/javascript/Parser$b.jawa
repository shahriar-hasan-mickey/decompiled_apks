record `org.mozilla.javascript.Parser$b` @kind class @AccessFlag  {
  `org.mozilla.javascript.ast.AstNode` `org.mozilla.javascript.Parser$b.a` @AccessFlag ;
  `int` `org.mozilla.javascript.Parser$b.b` @AccessFlag ;
  `int` `org.mozilla.javascript.Parser$b.c` @AccessFlag ;
}
procedure `void` `<init>`(`org.mozilla.javascript.Parser$b` v1 @kind this) @signature `Lorg/mozilla/javascript/Parser$b;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L416b8c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L416b92.  v0:= -1I;
  #L416b94.  v1.`org.mozilla.javascript.Parser$b.b` @type ^`int` := v0;
  #L416b98.  v1.`org.mozilla.javascript.Parser$b.c` @type ^`int` := v0;
  #L416b9c.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.Parser$b` v0 @kind this, `org.mozilla.javascript.Parser$a` v1 @kind object) @signature `Lorg/mozilla/javascript/Parser$b;.<init>:(Lorg/mozilla/javascript/Parser$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L416bb0.  call `<init>`(v0) @signature `Lorg/mozilla/javascript/Parser$b;.<init>:()V` @kind direct;
  #L416bb6.  return @kind void;
}
