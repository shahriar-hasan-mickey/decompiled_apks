record `org.mozilla.javascript.p` @kind class @AccessFlag FINAL extends `org.mozilla.javascript.IdScriptableObject` @kind class {
  `double` `org.mozilla.javascript.p.j` @AccessFlag PRIVATE;
}
global `java.lang.Object` `@@org.mozilla.javascript.p.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.mozilla.javascript.p.serialVersionUID` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/mozilla/javascript/p;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L410fc4.  v0:= "Number" @kind object;
  #L410fc8.  `@@org.mozilla.javascript.p.k` @type ^`java.lang.Object` := v0 @kind object;
  #L410fcc.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.p` v0 @kind this, `double` v1 ) @signature `Lorg/mozilla/javascript/p;.<init>:(D)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L410fe0.  call `<init>`(v0) @signature `Lorg/mozilla/javascript/IdScriptableObject;.<init>:()V` @kind direct;
  #L410fe6.  v0.`org.mozilla.javascript.p.j` @type ^`double` := v1 @kind wide;
  #L410fea.  return @kind void;
}
procedure `void` `A`(`org.mozilla.javascript.Scriptable` v3 @kind object, `boolean` v4 ) @signature `Lorg/mozilla/javascript/p;.A:(Lorg/mozilla/javascript/Scriptable;Z)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L411084.  v0:= new `org.mozilla.javascript.p`;
  #L411088.  v1:= 0L;
  #L41108c.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/p;.<init>:(D)V` @kind direct;
  #L411092.  v1:= 8I;
  #L411096.  call temp:= `exportAsJSClass`(v0, v1, v3, v4) @signature `Lorg/mozilla/javascript/IdScriptableObject;.exportAsJSClass:(ILorg/mozilla/javascript/Scriptable;Z)Lorg/mozilla/javascript/IdFunctionObject;` @kind virtual;
  #L41109c.  return @kind void;
}
procedure `java.lang.String` `B`(`double` v2 , `java.lang.Object`[] v4 @kind object, `int` v5 , `int` v6 , `int` v7 , `int` v8 ) @signature `Lorg/mozilla/javascript/p;.B:(D[Ljava/lang/Object;IIII)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L410f28.  v0:= length @variable v4;
  #L410f2a.  v1:= 0I;
  #L410f2c.  if v0 != 0 then goto L410f32;
  #L410f30.  goto L410f4e;
  #L410f32.  v5:= v4[v1] @kind object;
  #L410f36.  call temp:= `toInt32`(v5) @signature `Lorg/mozilla/javascript/ScriptRuntime;.toInt32:(Ljava/lang/Object;)I` @kind static;
  #L410f3c.  v5:= temp;
  #L410f3e.  if v5 < v7 then goto L410f6a;
  #L410f42.  v7:= 100I;
  #L410f46.  if v5 > v7 then goto L410f6a;
  #L410f4a.  v1:= v5;
  #L410f4c.  v5:= v6;
  #L410f4e.  v4:= new `java.lang.StringBuilder`;
  #L410f52.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L410f58.  v1:= v1 + v8 @kind int;
  #L410f5a.  call `d`(v4, v5, v1, v2) @signature `Lorg/mozilla/javascript/d;.d:(Ljava/lang/StringBuilder;IID)V` @kind static;
  #L410f60.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L410f66.  v2:= temp @kind object;
  #L410f68.  return v2 @kind object;
  #L410f6a.  v2:= v4[v1] @kind object;
  #L410f6e.  call temp:= `toString`(v2) @signature `Lorg/mozilla/javascript/ScriptRuntime;.toString:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L410f74.  v2:= temp @kind object;
  #L410f76.  v3:= "msg.bad.precision" @kind object;
  #L410f7a.  call temp:= `getMessage1`(v3, v2) @signature `Lorg/mozilla/javascript/ScriptRuntime;.getMessage1:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L410f80.  v2:= temp @kind object;
  #L410f82.  v3:= "RangeError" @kind object;
  #L410f86.  call temp:= `constructError`(v3, v2) @signature `Lorg/mozilla/javascript/ScriptRuntime;.constructError:(Ljava/lang/String;Ljava/lang/String;)Lorg/mozilla/javascript/EcmaError;` @kind static;
  #L410f8c.  v2:= temp @kind object;
  #L410f8e.  throw v2;
}
procedure `java.lang.Object` `execIdCall`(`org.mozilla.javascript.p` v10 @kind this, `org.mozilla.javascript.IdFunctionObject` v11 @kind object, `org.mozilla.javascript.Context` v12 @kind object, `org.mozilla.javascript.Scriptable` v13 @kind object, `org.mozilla.javascript.Scriptable` v14 @kind object, `java.lang.Object`[] v15 @kind object) @signature `Lorg/mozilla/javascript/p;.execIdCall:(Lorg/mozilla/javascript/IdFunctionObject;Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L410d2c.  v0:= `@@org.mozilla.javascript.p.k` @type ^`java.lang.Object` @kind object;
  #L410d30.  call temp:= `hasTag`(v11, v0) @signature `Lorg/mozilla/javascript/IdFunctionObject;.hasTag:(Ljava/lang/Object;)Z` @kind virtual;
  #L410d36.  v0:= temp;
  #L410d38.  if v0 != 0 then goto L410d46;
  #L410d3c.  call temp:= `execIdCall`(v10, v11, v12, v13, v14, v15) @signature `Lorg/mozilla/javascript/IdScriptableObject;.execIdCall:(Lorg/mozilla/javascript/IdFunctionObject;Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;[Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L410d42.  v11:= temp @kind object;
  #L410d44.  return v11 @kind object;
  #L410d46.  call temp:= `methodId`(v11) @signature `Lorg/mozilla/javascript/IdFunctionObject;.methodId:()I` @kind virtual;
  #L410d4c.  v12:= temp;
  #L410d4e.  v13:= 1I;
  #L410d50.  v0:= 0L;
  #L410d54.  v2:= 0I;
  #L410d56.  if v12 != v13 then goto L410d86;
  #L410d5a.  v11:= length @variable v15;
  #L410d5c.  if v11 < v13 then goto L410d6c;
  #L410d60.  v11:= v15[v2] @kind object;
  #L410d64.  call temp:= `toNumber`(v11) @signature `Lorg/mozilla/javascript/ScriptRuntime;.toNumber:(Ljava/lang/Object;)D` @kind static;
  #L410d6a.  v0:= temp @kind wide;
  #L410d6c.  if v14 != 0 then goto L410d7c;
  #L410d70.  v11:= new `org.mozilla.javascript.p`;
  #L410d74.  call `<init>`(v11, v0) @signature `Lorg/mozilla/javascript/p;.<init>:(D)V` @kind direct;
  #L410d7a.  return v11 @kind object;
  #L410d7c.  call temp:= `wrapNumber`(v0) @signature `Lorg/mozilla/javascript/ScriptRuntime;.wrapNumber:(D)Ljava/lang/Number;` @kind static;
  #L410d82.  v11:= temp @kind object;
  #L410d84.  return v11 @kind object;
  #L410d86.  v13:= instanceof @variable v14 @type ^`org.mozilla.javascript.p` @kind boolean;
  #L410d8a.  if v13 == 0 then goto L410ed2;
  #L410d8e.  v14:= (`org.mozilla.javascript.p`) v14 @kind object;
  #L410d92.  v3:= v14.`org.mozilla.javascript.p.j` @type ^`double` @kind wide;
  #L410d96.  v11:= "Infinity" @kind object;
  #L410d9a.  v13:= "-Infinity" @kind object;
  #L410d9e.  v14:= "NaN" @kind object;
  #L410da2.  v5:= 10I;
  #L410da6.  goto L410edc;
  #L410dac.  v11:= new `java.lang.IllegalArgumentException`;
  #L410db0.  call temp:= `valueOf`(v12) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L410db6.  v12:= temp @kind object;
  #L410db8.  call `<init>`(v11, v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L410dbe.  throw v11;
  #L410dc0.  v12:= length @variable v15;
  #L410dc2.  if v12 == 0 then goto L410e0e;
  #L410dc6.  v12:= v15[v2] @kind object;
  #L410dca.  v2:= `@@org.mozilla.javascript.Undefined.instance` @type ^`java.lang.Object` @kind object;
  #L410dce.  if v12 != v2 then goto L410dd4;
  #L410dd2.  goto L410e0e;
  #L410dd4.  call temp:= `isNaN`(v3) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L410dda.  v12:= temp;
  #L410ddc.  if v12 == 0 then goto L410de2;
  #L410de0.  return v14 @kind object;
  #L410de2.  call temp:= `isInfinite`(v3) @signature `Ljava/lang/Double;.isInfinite:(D)Z` @kind static;
  #L410de8.  v12:= temp;
  #L410dea.  if v12 == 0 then goto L410dfa;
  #L410dee.  v12:= dcmpl(v3, v0);
  #L410df2.  if v12 < 0 then goto L410df8;
  #L410df6.  return v11 @kind object;
  #L410df8.  return v13 @kind object;
  #L410dfa.  v6:= 0I;
  #L410dfc.  v7:= 4I;
  #L410dfe.  v8:= 1I;
  #L410e00.  v9:= 0I;
  #L410e02.  v5:= v15 @kind object;
  #L410e04.  call temp:= `B`(v3, v5, v6, v7, v8, v9) @signature `Lorg/mozilla/javascript/p;.B:(D[Ljava/lang/Object;IIII)Ljava/lang/String;` @kind static;
  #L410e0a.  v11:= temp @kind object;
  #L410e0c.  return v11 @kind object;
  #L410e0e.  call temp:= `numberToString`(v3, v5) @signature `Lorg/mozilla/javascript/ScriptRuntime;.numberToString:(DI)Ljava/lang/String;` @kind static;
  #L410e14.  v11:= temp @kind object;
  #L410e16.  return v11 @kind object;
  #L410e18.  call temp:= `isNaN`(v3) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L410e1e.  v12:= temp;
  #L410e20.  if v12 == 0 then goto L410e26;
  #L410e24.  return v14 @kind object;
  #L410e26.  call temp:= `isInfinite`(v3) @signature `Ljava/lang/Double;.isInfinite:(D)Z` @kind static;
  #L410e2c.  v12:= temp;
  #L410e2e.  if v12 == 0 then goto L410e3e;
  #L410e32.  v12:= dcmpl(v3, v0);
  #L410e36.  if v12 < 0 then goto L410e3c;
  #L410e3a.  return v11 @kind object;
  #L410e3c.  return v13 @kind object;
  #L410e3e.  v6:= 1I;
  #L410e40.  v7:= 3I;
  #L410e42.  v8:= 0I;
  #L410e44.  v9:= 1I;
  #L410e46.  v5:= v15 @kind object;
  #L410e48.  call temp:= `B`(v3, v5, v6, v7, v8, v9) @signature `Lorg/mozilla/javascript/p;.B:(D[Ljava/lang/Object;IIII)Ljava/lang/String;` @kind static;
  #L410e4e.  v11:= temp @kind object;
  #L410e50.  return v11 @kind object;
  #L410e52.  v6:= 2I;
  #L410e54.  v7:= 2I;
  #L410e56.  v8:= -20I;
  #L410e5a.  v9:= 0I;
  #L410e5c.  v5:= v15 @kind object;
  #L410e5e.  call temp:= `B`(v3, v5, v6, v7, v8, v9) @signature `Lorg/mozilla/javascript/p;.B:(D[Ljava/lang/Object;IIII)Ljava/lang/String;` @kind static;
  #L410e64.  v11:= temp @kind object;
  #L410e66.  return v11 @kind object;
  #L410e68.  call temp:= `wrapNumber`(v3) @signature `Lorg/mozilla/javascript/ScriptRuntime;.wrapNumber:(D)Ljava/lang/Number;` @kind static;
  #L410e6e.  v11:= temp @kind object;
  #L410e70.  return v11 @kind object;
  #L410e72.  v11:= new `java.lang.StringBuilder`;
  #L410e76.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L410e7c.  v12:= "(new Number(" @kind object;
  #L410e80.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410e86.  call temp:= `toString`(v3) @signature `Lorg/mozilla/javascript/ScriptRuntime;.toString:(D)Ljava/lang/String;` @kind static;
  #L410e8c.  v12:= temp @kind object;
  #L410e8e.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410e94.  v12:= "))" @kind object;
  #L410e98.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410e9e.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L410ea4.  v11:= temp @kind object;
  #L410ea6.  return v11 @kind object;
  #L410ea8.  v11:= length @variable v15;
  #L410eaa.  if v11 == 0 then goto L410ec8;
  #L410eae.  v11:= v15[v2] @kind object;
  #L410eb2.  v12:= `@@org.mozilla.javascript.Undefined.instance` @type ^`java.lang.Object` @kind object;
  #L410eb6.  if v11 != v12 then goto L410ebc;
  #L410eba.  goto L410ec8;
  #L410ebc.  v11:= v15[v2] @kind object;
  #L410ec0.  call temp:= `toInt32`(v11) @signature `Lorg/mozilla/javascript/ScriptRuntime;.toInt32:(Ljava/lang/Object;)I` @kind static;
  #L410ec6.  v5:= temp;
  #L410ec8.  call temp:= `numberToString`(v3, v5) @signature `Lorg/mozilla/javascript/ScriptRuntime;.numberToString:(DI)Ljava/lang/String;` @kind static;
  #L410ece.  v11:= temp @kind object;
  #L410ed0.  return v11 @kind object;
  #L410ed2.  call temp:= `incompatibleCallError`(v11) @signature `Lorg/mozilla/javascript/IdScriptableObject;.incompatibleCallError:(Lorg/mozilla/javascript/IdFunctionObject;)Lorg/mozilla/javascript/EcmaError;` @kind static;
  #L410ed8.  v11:= temp @kind object;
  #L410eda.  throw v11;
  #L410edc.  switch v12
                  | 2 => goto L410ea8
                  | 3 => goto L410ea8
                  | 4 => goto L410e72
                  | 5 => goto L410e68
                  | 6 => goto L410e52
                  | 7 => goto L410e18
                  | 8 => goto L410dc0
                  | else => goto L410dac;
}
procedure `void` `fillConstructorProperties`(`org.mozilla.javascript.p` v3 @kind this, `org.mozilla.javascript.IdFunctionObject` v4 @kind object) @signature `Lorg/mozilla/javascript/p;.fillConstructorProperties:(Lorg/mozilla/javascript/IdFunctionObject;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L410ffc.  v0:= `@@org.mozilla.javascript.ScriptRuntime.NaNobj` @type ^`java.lang.Double` @kind object;
  #L411000.  v1:= "NaN" @kind object;
  #L411004.  v2:= 7I;
  #L411006.  call `defineProperty`(v4, v1, v0, v2) @signature `Lorg/mozilla/javascript/ScriptableObject;.defineProperty:(Ljava/lang/String;Ljava/lang/Object;I)V` @kind virtual;
  #L41100c.  v0:= InfinityD;
  #L411010.  call temp:= `wrapNumber`(v0) @signature `Lorg/mozilla/javascript/ScriptRuntime;.wrapNumber:(D)Ljava/lang/Number;` @kind static;
  #L411016.  v0:= temp @kind object;
  #L411018.  v1:= "POSITIVE_INFINITY" @kind object;
  #L41101c.  call `defineProperty`(v4, v1, v0, v2) @signature `Lorg/mozilla/javascript/ScriptableObject;.defineProperty:(Ljava/lang/String;Ljava/lang/Object;I)V` @kind virtual;
  #L411022.  v0:= -InfinityD;
  #L411026.  call temp:= `wrapNumber`(v0) @signature `Lorg/mozilla/javascript/ScriptRuntime;.wrapNumber:(D)Ljava/lang/Number;` @kind static;
  #L41102c.  v0:= temp @kind object;
  #L41102e.  v1:= "NEGATIVE_INFINITY" @kind object;
  #L411032.  call `defineProperty`(v4, v1, v0, v2) @signature `Lorg/mozilla/javascript/ScriptableObject;.defineProperty:(Ljava/lang/String;Ljava/lang/Object;I)V` @kind virtual;
  #L411038.  v0:= 1.7976931348623157E308D;
  #L411042.  call temp:= `wrapNumber`(v0) @signature `Lorg/mozilla/javascript/ScriptRuntime;.wrapNumber:(D)Ljava/lang/Number;` @kind static;
  #L411048.  v0:= temp @kind object;
  #L41104a.  v1:= "MAX_VALUE" @kind object;
  #L41104e.  call `defineProperty`(v4, v1, v0, v2) @signature `Lorg/mozilla/javascript/ScriptableObject;.defineProperty:(Ljava/lang/String;Ljava/lang/Object;I)V` @kind virtual;
  #L411054.  v0:= 1L;
  #L411058.  call temp:= `wrapNumber`(v0) @signature `Lorg/mozilla/javascript/ScriptRuntime;.wrapNumber:(D)Ljava/lang/Number;` @kind static;
  #L41105e.  v0:= temp @kind object;
  #L411060.  v1:= "MIN_VALUE" @kind object;
  #L411064.  call `defineProperty`(v4, v1, v0, v2) @signature `Lorg/mozilla/javascript/ScriptableObject;.defineProperty:(Ljava/lang/String;Ljava/lang/Object;I)V` @kind virtual;
  #L41106a.  call `fillConstructorProperties`(v3, v4) @signature `Lorg/mozilla/javascript/IdScriptableObject;.fillConstructorProperties:(Lorg/mozilla/javascript/IdFunctionObject;)V` @kind super;
  #L411070.  return @kind void;
}
procedure `int` `findPrototypeId`(`org.mozilla.javascript.p` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lorg/mozilla/javascript/p;.findPrototypeId:(Ljava/lang/String;)I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L410c48.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L410c4e.  v0:= temp;
  #L410c50.  v1:= 3I;
  #L410c52.  v2:= 8I;
  #L410c56.  v3:= 7I;
  #L410c58.  v4:= 116I;
  #L410c5c.  v5:= 0I;
  #L410c5e.  if v0 == v3 then goto L410cd8;
  #L410c62.  if v0 == v2 then goto L410cb4;
  #L410c66.  v6:= 11I;
  #L410c6a.  if v0 == v6 then goto L410c8e;
  #L410c6e.  v2:= 13I;
  #L410c72.  if v0 == v2 then goto L410c86;
  #L410c76.  v2:= 14I;
  #L410c7a.  if v0 == v2 then goto L410c80;
  #L410c7e.  goto L410cfc;
  #L410c80.  v0:= "toLocaleString" @kind object;
  #L410c84.  goto L410d00;
  #L410c86.  v0:= "toExponential" @kind object;
  #L410c8a.  v1:= 7I;
  #L410c8c.  goto L410d00;
  #L410c8e.  call temp:= `charAt`(v8, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L410c94.  v0:= temp;
  #L410c96.  v1:= 99I;
  #L410c9a.  if v0 != v1 then goto L410ca6;
  #L410c9e.  v1:= 1I;
  #L410ca0.  v0:= "constructor" @kind object;
  #L410ca4.  goto L410d00;
  #L410ca6.  if v0 != v4 then goto L410cfc;
  #L410caa.  v0:= "toPrecision" @kind object;
  #L410cae.  v1:= 8I;
  #L410cb2.  goto L410d00;
  #L410cb4.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L410cba.  v0:= temp;
  #L410cbc.  v1:= 111I;
  #L410cc0.  if v0 != v1 then goto L410ccc;
  #L410cc4.  v1:= 4I;
  #L410cc6.  v0:= "toSource" @kind object;
  #L410cca.  goto L410d00;
  #L410ccc.  if v0 != v4 then goto L410cfc;
  #L410cd0.  v1:= 2I;
  #L410cd2.  v0:= "toString" @kind object;
  #L410cd6.  goto L410d00;
  #L410cd8.  call temp:= `charAt`(v8, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L410cde.  v0:= temp;
  #L410ce0.  if v0 != v4 then goto L410cec;
  #L410ce4.  v1:= 6I;
  #L410ce6.  v0:= "toFixed" @kind object;
  #L410cea.  goto L410d00;
  #L410cec.  v1:= 118I;
  #L410cf0.  if v0 != v1 then goto L410cfc;
  #L410cf4.  v1:= 5I;
  #L410cf6.  v0:= "valueOf" @kind object;
  #L410cfa.  goto L410d00;
  #L410cfc.  v0:= 0I;
  #L410cfe.  v1:= 0I;
  #L410d00.  if v0 == 0 then goto L410d16;
  #L410d04.  if v0 == v8 then goto L410d16;
  #L410d08.  call temp:= `equals`(v0, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L410d0e.  v8:= temp;
  #L410d10.  if v8 != 0 then goto L410d16;
  #L410d14.  goto L410d18;
  #L410d16.  v5:= v1;
  #L410d18.  return v5;
}
procedure `java.lang.String` `getClassName`(`org.mozilla.javascript.p` v1 @kind this) @signature `Lorg/mozilla/javascript/p;.getClassName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L410f10.  v0:= "Number" @kind object;
  #L410f14.  return v0 @kind object;
}
procedure `void` `initPrototypeId`(`org.mozilla.javascript.p` v3 @kind this, `int` v4 ) @signature `Lorg/mozilla/javascript/p;.initPrototypeId:(I)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4110b0.  v0:= 0I;
  #L4110b2.  v1:= 1I;
  #L4110b4.  goto L41110c;
  #L4110ba.  v0:= new `java.lang.IllegalArgumentException`;
  #L4110be.  call temp:= `valueOf`(v4) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L4110c4.  v4:= temp @kind object;
  #L4110c6.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4110cc.  throw v0;
  #L4110ce.  v0:= "toPrecision" @kind object;
  #L4110d2.  goto L411100;
  #L4110d4.  v0:= "toExponential" @kind object;
  #L4110d8.  goto L411100;
  #L4110da.  v0:= "toFixed" @kind object;
  #L4110de.  goto L411100;
  #L4110e0.  v1:= "valueOf" @kind object;
  #L4110e4.  goto L4110ea;
  #L4110e6.  v1:= "toSource" @kind object;
  #L4110ea.  v0:= v1 @kind object;
  #L4110ec.  v1:= 0I;
  #L4110ee.  goto L411100;
  #L4110f0.  v0:= "toLocaleString" @kind object;
  #L4110f4.  goto L411100;
  #L4110f6.  v0:= "toString" @kind object;
  #L4110fa.  goto L411100;
  #L4110fc.  v0:= "constructor" @kind object;
  #L411100.  v2:= `@@org.mozilla.javascript.p.k` @type ^`java.lang.Object` @kind object;
  #L411104.  call `initPrototypeMethod`(v3, v2, v4, v0, v1) @signature `Lorg/mozilla/javascript/IdScriptableObject;.initPrototypeMethod:(Ljava/lang/Object;ILjava/lang/String;I)V` @kind virtual;
  #L41110a.  return @kind void;
  #L41110c.  switch v4
                  | 1 => goto L4110fc
                  | 2 => goto L4110f6
                  | 3 => goto L4110f0
                  | 4 => goto L4110e6
                  | 5 => goto L4110e0
                  | 6 => goto L4110da
                  | 7 => goto L4110d4
                  | 8 => goto L4110ce
                  | else => goto L4110ba;
}
procedure `java.lang.String` `toString`(`org.mozilla.javascript.p` v3 @kind this) @signature `Lorg/mozilla/javascript/p;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L410fa0.  v0:= v3.`org.mozilla.javascript.p.j` @type ^`double` @kind wide;
  #L410fa4.  v2:= 10I;
  #L410fa8.  call temp:= `numberToString`(v0, v2) @signature `Lorg/mozilla/javascript/ScriptRuntime;.numberToString:(DI)Ljava/lang/String;` @kind static;
  #L410fae.  v0:= temp @kind object;
  #L410fb0.  return v0 @kind object;
}
