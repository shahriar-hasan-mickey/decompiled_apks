record `org.mozilla.javascript.ConsString` @kind class @AccessFlag PUBLIC extends `java.lang.CharSequence` @kind interface, `java.io.Serializable` @kind interface {
  `java.lang.CharSequence` `org.mozilla.javascript.ConsString.a` @AccessFlag PRIVATE;
  `java.lang.CharSequence` `org.mozilla.javascript.ConsString.b` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.ConsString.c` @AccessFlag PRIVATE_FINAL;
  `int` `org.mozilla.javascript.ConsString.d` @AccessFlag PRIVATE;
}
global `long` `@@org.mozilla.javascript.ConsString.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.mozilla.javascript.ConsString` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `java.lang.CharSequence` v4 @kind object) @signature `Lorg/mozilla/javascript/ConsString;.<init>:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3f15b0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f15b6.  v2.`org.mozilla.javascript.ConsString.a` @type ^`java.lang.CharSequence` := v3 @kind object;
  #L3f15ba.  v2.`org.mozilla.javascript.ConsString.b` @type ^`java.lang.CharSequence` := v4 @kind object;
  #L3f15be.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3f15c4.  v0:= temp;
  #L3f15c6.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3f15cc.  v1:= temp;
  #L3f15ce.  v0:= v0 + v1 @kind int;
  #L3f15d0.  v2.`org.mozilla.javascript.ConsString.c` @type ^`int` := v0;
  #L3f15d4.  v0:= 1I;
  #L3f15d6.  v2.`org.mozilla.javascript.ConsString.d` @type ^`int` := v0;
  #L3f15da.  v1:= instanceof @variable v3 @type ^`org.mozilla.javascript.ConsString` @kind boolean;
  #L3f15de.  if v1 == 0 then goto L3f15f0;
  #L3f15e2.  v3:= (`org.mozilla.javascript.ConsString`) v3 @kind object;
  #L3f15e6.  v3:= v3.`org.mozilla.javascript.ConsString.d` @type ^`int`;
  #L3f15ea.  v0:= v0 + v3 @kind int;
  #L3f15ec.  v2.`org.mozilla.javascript.ConsString.d` @type ^`int` := v0;
  #L3f15f0.  v3:= instanceof @variable v4 @type ^`org.mozilla.javascript.ConsString` @kind boolean;
  #L3f15f4.  if v3 == 0 then goto L3f160a;
  #L3f15f8.  v3:= v2.`org.mozilla.javascript.ConsString.d` @type ^`int`;
  #L3f15fc.  v4:= (`org.mozilla.javascript.ConsString`) v4 @kind object;
  #L3f1600.  v4:= v4.`org.mozilla.javascript.ConsString.d` @type ^`int`;
  #L3f1604.  v3:= v3 + v4 @kind int;
  #L3f1606.  v2.`org.mozilla.javascript.ConsString.d` @type ^`int` := v3;
  #L3f160a.  v3:= v2.`org.mozilla.javascript.ConsString.d` @type ^`int`;
  #L3f160e.  v4:= 2000I;
  #L3f1612.  if v3 <= v4 then goto L3f161c;
  #L3f1616.  call temp:= `c`(v2) @signature `Lorg/mozilla/javascript/ConsString;.c:()Ljava/lang/String;` @kind direct;
  #L3f161c.  return @kind void;
}
procedure `void` `a`(`java.lang.CharSequence` v1 @kind object, `java.lang.StringBuilder` v2 @kind object) @signature `Lorg/mozilla/javascript/ConsString;.a:(Ljava/lang/CharSequence;Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3f1630.  v0:= instanceof @variable v1 @type ^`org.mozilla.javascript.ConsString` @kind boolean;
  #L3f1634.  if v0 == 0 then goto L3f1644;
  #L3f1638.  v1:= (`org.mozilla.javascript.ConsString`) v1 @kind object;
  #L3f163c.  call `b`(v1, v2) @signature `Lorg/mozilla/javascript/ConsString;.b:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L3f1642.  goto L3f164a;
  #L3f1644.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f164a.  return @kind void;
}
procedure `void` `b`(`org.mozilla.javascript.ConsString` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lorg/mozilla/javascript/ConsString;.b:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f165c.  @monitorenter v1
  #L3f165e.  v0:= v1.`org.mozilla.javascript.ConsString.a` @type ^`java.lang.CharSequence` @kind object;
  #L3f1662.  call `a`(v0, v2) @signature `Lorg/mozilla/javascript/ConsString;.a:(Ljava/lang/CharSequence;Ljava/lang/StringBuilder;)V` @kind static;
  #L3f1668.  v0:= v1.`org.mozilla.javascript.ConsString.b` @type ^`java.lang.CharSequence` @kind object;
  #L3f166c.  call `a`(v0, v2) @signature `Lorg/mozilla/javascript/ConsString;.a:(Ljava/lang/CharSequence;Ljava/lang/StringBuilder;)V` @kind static;
  #L3f1672.  @monitorexit v1
  #L3f1674.  return @kind void;
  #L3f1676.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f1678.  @monitorexit v1
  #L3f167a.  throw v2;
  catch `java.lang.Throwable` @[L3f165e..L3f1672] goto L3f1676;
}
procedure `java.lang.String` `c`(`org.mozilla.javascript.ConsString` v2 @kind this) @signature `Lorg/mozilla/javascript/ConsString;.c:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3f151c.  @monitorenter v2
  #L3f151e.  v0:= v2.`org.mozilla.javascript.ConsString.d` @type ^`int`;
  #L3f1522.  if v0 <= 0 then goto L3f1554;
  #L3f1526.  v0:= new `java.lang.StringBuilder`;
  #L3f152a.  v1:= v2.`org.mozilla.javascript.ConsString.c` @type ^`int`;
  #L3f152e.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3f1534.  call `b`(v2, v0) @signature `Lorg/mozilla/javascript/ConsString;.b:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L3f153a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f1540.  v0:= temp @kind object;
  #L3f1542.  v2.`org.mozilla.javascript.ConsString.a` @type ^`java.lang.CharSequence` := v0 @kind object;
  #L3f1546.  v0:= "" @kind object;
  #L3f154a.  v2.`org.mozilla.javascript.ConsString.b` @type ^`java.lang.CharSequence` := v0 @kind object;
  #L3f154e.  v0:= 0I;
  #L3f1550.  v2.`org.mozilla.javascript.ConsString.d` @type ^`int` := v0;
  #L3f1554.  v0:= v2.`org.mozilla.javascript.ConsString.a` @type ^`java.lang.CharSequence` @kind object;
  #L3f1558.  v0:= (`java.lang.String`) v0 @kind object;
  #L3f155c.  @monitorexit v2
  #L3f155e.  return v0 @kind object;
  #L3f1560.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f1562.  @monitorexit v2
  #L3f1564.  throw v0;
  catch `java.lang.Throwable` @[L3f151e..L3f155c] goto L3f1560;
}
procedure `java.lang.Object` `writeReplace`(`org.mozilla.javascript.ConsString` v1 @kind this) @signature `Lorg/mozilla/javascript/ConsString;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f1500.  call temp:= `toString`(v1) @signature `Lorg/mozilla/javascript/ConsString;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f1506.  v0:= temp @kind object;
  #L3f1508.  return v0 @kind object;
}
procedure `char` `charAt`(`org.mozilla.javascript.ConsString` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/ConsString;.charAt:(I)C` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f1480.  v0:= v1.`org.mozilla.javascript.ConsString.d` @type ^`int`;
  #L3f1484.  if v0 != 0 then goto L3f1492;
  #L3f1488.  v0:= v1.`org.mozilla.javascript.ConsString.a` @type ^`java.lang.CharSequence` @kind object;
  #L3f148c.  v0:= (`java.lang.String`) v0 @kind object;
  #L3f1490.  goto L3f149a;
  #L3f1492.  call temp:= `c`(v1) @signature `Lorg/mozilla/javascript/ConsString;.c:()Ljava/lang/String;` @kind direct;
  #L3f1498.  v0:= temp @kind object;
  #L3f149a.  call temp:= `charAt`(v0, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3f14a0.  v2:= temp;
  #L3f14a2.  return v2;
}
procedure `int` `length`(`org.mozilla.javascript.ConsString` v1 @kind this) @signature `Lorg/mozilla/javascript/ConsString;.length:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f14b4.  v0:= v1.`org.mozilla.javascript.ConsString.c` @type ^`int`;
  #L3f14b8.  return v0;
}
procedure `java.lang.CharSequence` `subSequence`(`org.mozilla.javascript.ConsString` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/mozilla/javascript/ConsString;.subSequence:(II)Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f14cc.  v0:= v1.`org.mozilla.javascript.ConsString.d` @type ^`int`;
  #L3f14d0.  if v0 != 0 then goto L3f14de;
  #L3f14d4.  v0:= v1.`org.mozilla.javascript.ConsString.a` @type ^`java.lang.CharSequence` @kind object;
  #L3f14d8.  v0:= (`java.lang.String`) v0 @kind object;
  #L3f14dc.  goto L3f14e6;
  #L3f14de.  call temp:= `c`(v1) @signature `Lorg/mozilla/javascript/ConsString;.c:()Ljava/lang/String;` @kind direct;
  #L3f14e4.  v0:= temp @kind object;
  #L3f14e6.  call temp:= `substring`(v0, v2, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3f14ec.  v2:= temp @kind object;
  #L3f14ee.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`org.mozilla.javascript.ConsString` v1 @kind this) @signature `Lorg/mozilla/javascript/ConsString;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f1584.  v0:= v1.`org.mozilla.javascript.ConsString.d` @type ^`int`;
  #L3f1588.  if v0 != 0 then goto L3f1596;
  #L3f158c.  v0:= v1.`org.mozilla.javascript.ConsString.a` @type ^`java.lang.CharSequence` @kind object;
  #L3f1590.  v0:= (`java.lang.String`) v0 @kind object;
  #L3f1594.  goto L3f159e;
  #L3f1596.  call temp:= `c`(v1) @signature `Lorg/mozilla/javascript/ConsString;.c:()Ljava/lang/String;` @kind direct;
  #L3f159c.  v0:= temp @kind object;
  #L3f159e.  return v0 @kind object;
}
