record `org.mozilla.javascript.ObjArray` @kind class @AccessFlag PUBLIC extends `java.io.Serializable` @kind interface {
  `int` `org.mozilla.javascript.ObjArray.a` @AccessFlag PRIVATE;
  `boolean` `org.mozilla.javascript.ObjArray.b` @AccessFlag PRIVATE;
  `java.lang.Object` `org.mozilla.javascript.ObjArray.c` @AccessFlag PRIVATE_TRANSIENT;
  `java.lang.Object` `org.mozilla.javascript.ObjArray.d` @AccessFlag PRIVATE_TRANSIENT;
  `java.lang.Object` `org.mozilla.javascript.ObjArray.e` @AccessFlag PRIVATE_TRANSIENT;
  `java.lang.Object` `org.mozilla.javascript.ObjArray.f` @AccessFlag PRIVATE_TRANSIENT;
  `java.lang.Object` `org.mozilla.javascript.ObjArray.g` @AccessFlag PRIVATE_TRANSIENT;
  `java.lang.Object`[] `org.mozilla.javascript.ObjArray.h` @AccessFlag PRIVATE_TRANSIENT;
}
global `long` `@@org.mozilla.javascript.ObjArray.serialVersionUID` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`org.mozilla.javascript.ObjArray` v0 @kind this) @signature `Lorg/mozilla/javascript/ObjArray;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L415dd0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L415dd6.  return @kind void;
}
procedure `void` `a`(`org.mozilla.javascript.ObjArray` v3 @kind this, `int` v4 ) @signature `Lorg/mozilla/javascript/ObjArray;.a:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L415f64.  v0:= 5I;
  #L415f66.  v4:= v4 - v0 @kind int;
  #L415f68.  if v4 <= 0 then goto L415fc4;
  #L415f6c.  v1:= v3.`org.mozilla.javascript.ObjArray.h` @type ^`java.lang.Object`[] @kind object;
  #L415f70.  v2:= 10I;
  #L415f74.  if v1 != 0 then goto L415f8c;
  #L415f78.  if v2 >= v4 then goto L415f7e;
  #L415f7c.  goto L415f82;
  #L415f7e.  v4:= 10I;
  #L415f82.  v4:= new `java.lang.Object`[v4];
  #L415f86.  v3.`org.mozilla.javascript.ObjArray.h` @type ^`java.lang.Object`[] := v4 @kind object;
  #L415f8a.  goto L415fc2;
  #L415f8c.  v1:= length @variable v1;
  #L415f8e.  if v1 >= v4 then goto L415fc2;
  #L415f92.  if v1 > v0 then goto L415f98;
  #L415f96.  goto L415f9c;
  #L415f98.  v2:= v1 * 2;
  #L415f9c.  if v2 >= v4 then goto L415fa2;
  #L415fa0.  goto L415fa4;
  #L415fa2.  v4:= v2;
  #L415fa4.  v4:= new `java.lang.Object`[v4];
  #L415fa8.  v1:= v3.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L415fac.  if v1 <= v0 then goto L415fbe;
  #L415fb0.  v2:= v3.`org.mozilla.javascript.ObjArray.h` @type ^`java.lang.Object`[] @kind object;
  #L415fb4.  v1:= v1 - v0 @kind int;
  #L415fb6.  v0:= 0I;
  #L415fb8.  call `arraycopy`(v2, v0, v4, v0, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L415fbe.  v3.`org.mozilla.javascript.ObjArray.h` @type ^`java.lang.Object`[] := v4 @kind object;
  #L415fc2.  return @kind void;
  #L415fc4.  v4:= new `java.lang.IllegalArgumentException`;
  #L415fc8.  call `<init>`(v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L415fce.  throw v4;
}
procedure `java.lang.Object` `b`(`org.mozilla.javascript.ObjArray` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/ObjArray;.b:(I)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L415bf8.  if v2 == 0 then goto L415c3a;
  #L415bfc.  v0:= 1I;
  #L415bfe.  if v2 == v0 then goto L415c34;
  #L415c02.  v0:= 2I;
  #L415c04.  if v2 == v0 then goto L415c2e;
  #L415c08.  v0:= 3I;
  #L415c0a.  if v2 == v0 then goto L415c28;
  #L415c0e.  v0:= 4I;
  #L415c10.  if v2 == v0 then goto L415c22;
  #L415c14.  v0:= v1.`org.mozilla.javascript.ObjArray.h` @type ^`java.lang.Object`[] @kind object;
  #L415c18.  v2:= v2 + -5;
  #L415c1c.  v2:= v0[v2] @kind object;
  #L415c20.  return v2 @kind object;
  #L415c22.  v2:= v1.`org.mozilla.javascript.ObjArray.g` @type ^`java.lang.Object` @kind object;
  #L415c26.  return v2 @kind object;
  #L415c28.  v2:= v1.`org.mozilla.javascript.ObjArray.f` @type ^`java.lang.Object` @kind object;
  #L415c2c.  return v2 @kind object;
  #L415c2e.  v2:= v1.`org.mozilla.javascript.ObjArray.e` @type ^`java.lang.Object` @kind object;
  #L415c32.  return v2 @kind object;
  #L415c34.  v2:= v1.`org.mozilla.javascript.ObjArray.d` @type ^`java.lang.Object` @kind object;
  #L415c38.  return v2 @kind object;
  #L415c3a.  v2:= v1.`org.mozilla.javascript.ObjArray.c` @type ^`java.lang.Object` @kind object;
  #L415c3e.  return v2 @kind object;
}
procedure `java.lang.RuntimeException` `c`() @signature `Lorg/mozilla/javascript/ObjArray;.c:()Ljava/lang/RuntimeException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L415d40.  v0:= new `java.lang.RuntimeException`;
  #L415d44.  v1:= "Empty stack" @kind object;
  #L415d48.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L415d4e.  throw v0;
}
procedure `java.lang.RuntimeException` `d`(`int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ObjArray;.d:(II)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L415d60.  v0:= new `java.lang.StringBuilder`;
  #L415d64.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L415d6a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L415d70.  v1:= " âˆ‰ [0, " @kind object;
  #L415d74.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L415d7a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L415d80.  v1:= 41I;
  #L415d84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L415d8a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L415d90.  v1:= temp @kind object;
  #L415d92.  v2:= new `java.lang.IndexOutOfBoundsException`;
  #L415d96.  call `<init>`(v2, v1) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L415d9c.  throw v2;
}
procedure `java.lang.RuntimeException` `e`() @signature `Lorg/mozilla/javascript/ObjArray;.e:()Ljava/lang/RuntimeException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L415db0.  v0:= new `java.lang.IllegalStateException`;
  #L415db4.  v1:= "Attempt to modify sealed array" @kind object;
  #L415db8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L415dbe.  throw v0;
}
procedure `void` `f`(`org.mozilla.javascript.ObjArray` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lorg/mozilla/javascript/ObjArray;.f:(ILjava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L416184.  if v2 == 0 then goto L4161c6;
  #L416188.  v0:= 1I;
  #L41618a.  if v2 == v0 then goto L4161c0;
  #L41618e.  v0:= 2I;
  #L416190.  if v2 == v0 then goto L4161ba;
  #L416194.  v0:= 3I;
  #L416196.  if v2 == v0 then goto L4161b4;
  #L41619a.  v0:= 4I;
  #L41619c.  if v2 == v0 then goto L4161ae;
  #L4161a0.  v0:= v1.`org.mozilla.javascript.ObjArray.h` @type ^`java.lang.Object`[] @kind object;
  #L4161a4.  v2:= v2 + -5;
  #L4161a8.  v0[v2]:= v3 @kind object;
  #L4161ac.  goto L4161ca;
  #L4161ae.  v1.`org.mozilla.javascript.ObjArray.g` @type ^`java.lang.Object` := v3 @kind object;
  #L4161b2.  goto L4161ca;
  #L4161b4.  v1.`org.mozilla.javascript.ObjArray.f` @type ^`java.lang.Object` := v3 @kind object;
  #L4161b8.  goto L4161ca;
  #L4161ba.  v1.`org.mozilla.javascript.ObjArray.e` @type ^`java.lang.Object` := v3 @kind object;
  #L4161be.  goto L4161ca;
  #L4161c0.  v1.`org.mozilla.javascript.ObjArray.d` @type ^`java.lang.Object` := v3 @kind object;
  #L4161c4.  goto L4161ca;
  #L4161c6.  v1.`org.mozilla.javascript.ObjArray.c` @type ^`java.lang.Object` := v3 @kind object;
  #L4161ca.  return @kind void;
}
procedure `void` `readObject`(`org.mozilla.javascript.ObjArray` v3 @kind this, `java.io.ObjectInputStream` v4 @kind object) @signature `Lorg/mozilla/javascript/ObjArray;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L415ff8.  call `defaultReadObject`(v4) @signature `Ljava/io/ObjectInputStream;.defaultReadObject:()V` @kind virtual;
  #L415ffe.  v0:= v3.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L416002.  v1:= 5I;
  #L416004.  if v0 <= v1 then goto L416014;
  #L416008.  v1:= v0 + -5;
  #L41600c.  v1:= new `java.lang.Object`[v1];
  #L416010.  v3.`org.mozilla.javascript.ObjArray.h` @type ^`java.lang.Object`[] := v1 @kind object;
  #L416014.  v1:= 0I;
  #L416016.  if v1 == v0 then goto L41602e;
  #L41601a.  call temp:= `readObject`(v4) @signature `Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;` @kind virtual;
  #L416020.  v2:= temp @kind object;
  #L416022.  call `f`(v3, v1, v2) @signature `Lorg/mozilla/javascript/ObjArray;.f:(ILjava/lang/Object;)V` @kind direct;
  #L416028.  v1:= v1 + 1;
  #L41602c.  goto L416016;
  #L41602e.  return @kind void;
}
procedure `void` `writeObject`(`org.mozilla.javascript.ObjArray` v3 @kind this, `java.io.ObjectOutputStream` v4 @kind object) @signature `Lorg/mozilla/javascript/ObjArray;.writeObject:(Ljava/io/ObjectOutputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4162e0.  call `defaultWriteObject`(v4) @signature `Ljava/io/ObjectOutputStream;.defaultWriteObject:()V` @kind virtual;
  #L4162e6.  v0:= v3.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L4162ea.  v1:= 0I;
  #L4162ec.  if v1 == v0 then goto L416304;
  #L4162f0.  call temp:= `b`(v3, v1) @signature `Lorg/mozilla/javascript/ObjArray;.b:(I)Ljava/lang/Object;` @kind direct;
  #L4162f6.  v2:= temp @kind object;
  #L4162f8.  call `writeObject`(v4, v2) @signature `Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V` @kind virtual;
  #L4162fe.  v1:= v1 + 1;
  #L416302.  goto L4162ec;
  #L416304.  return @kind void;
}
procedure `void` `add`(`org.mozilla.javascript.ObjArray` v7 @kind this, `int` v8 , `java.lang.Object` v9 @kind object) @signature `Lorg/mozilla/javascript/ObjArray;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L415de8.  v0:= v7.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L415dec.  v1:= 0I;
  #L415dee.  v2:= 1I;
  #L415df0.  if v8 < 0 then goto L415ec2;
  #L415df4.  if v8 > v0 then goto L415ec2;
  #L415df8.  v3:= v7.`org.mozilla.javascript.ObjArray.b` @type ^`boolean` @kind boolean;
  #L415dfc.  if v3 != 0 then goto L415eba;
  #L415e00.  v1:= 4I;
  #L415e02.  v3:= 3I;
  #L415e04.  v4:= 2I;
  #L415e06.  v5:= 5I;
  #L415e08.  if v8 == 0 then goto L415e1e;
  #L415e0c.  if v8 == v2 then goto L415e32;
  #L415e10.  if v8 == v4 then goto L415e46;
  #L415e14.  if v8 == v3 then goto L415e5a;
  #L415e18.  if v8 == v1 then goto L415e6e;
  #L415e1c.  goto L415e84;
  #L415e1e.  if v0 != 0 then goto L415e28;
  #L415e22.  v7.`org.mozilla.javascript.ObjArray.c` @type ^`java.lang.Object` := v9 @kind object;
  #L415e26.  goto L415eb2;
  #L415e28.  v8:= v7.`org.mozilla.javascript.ObjArray.c` @type ^`java.lang.Object` @kind object;
  #L415e2c.  v7.`org.mozilla.javascript.ObjArray.c` @type ^`java.lang.Object` := v9 @kind object;
  #L415e30.  v9:= v8 @kind object;
  #L415e32.  if v0 != v2 then goto L415e3c;
  #L415e36.  v7.`org.mozilla.javascript.ObjArray.d` @type ^`java.lang.Object` := v9 @kind object;
  #L415e3a.  goto L415eb2;
  #L415e3c.  v8:= v7.`org.mozilla.javascript.ObjArray.d` @type ^`java.lang.Object` @kind object;
  #L415e40.  v7.`org.mozilla.javascript.ObjArray.d` @type ^`java.lang.Object` := v9 @kind object;
  #L415e44.  v9:= v8 @kind object;
  #L415e46.  if v0 != v4 then goto L415e50;
  #L415e4a.  v7.`org.mozilla.javascript.ObjArray.e` @type ^`java.lang.Object` := v9 @kind object;
  #L415e4e.  goto L415eb2;
  #L415e50.  v8:= v7.`org.mozilla.javascript.ObjArray.e` @type ^`java.lang.Object` @kind object;
  #L415e54.  v7.`org.mozilla.javascript.ObjArray.e` @type ^`java.lang.Object` := v9 @kind object;
  #L415e58.  v9:= v8 @kind object;
  #L415e5a.  if v0 != v3 then goto L415e64;
  #L415e5e.  v7.`org.mozilla.javascript.ObjArray.f` @type ^`java.lang.Object` := v9 @kind object;
  #L415e62.  goto L415eb2;
  #L415e64.  v8:= v7.`org.mozilla.javascript.ObjArray.f` @type ^`java.lang.Object` @kind object;
  #L415e68.  v7.`org.mozilla.javascript.ObjArray.f` @type ^`java.lang.Object` := v9 @kind object;
  #L415e6c.  v9:= v8 @kind object;
  #L415e6e.  if v0 != v1 then goto L415e78;
  #L415e72.  v7.`org.mozilla.javascript.ObjArray.g` @type ^`java.lang.Object` := v9 @kind object;
  #L415e76.  goto L415eb2;
  #L415e78.  v8:= v7.`org.mozilla.javascript.ObjArray.g` @type ^`java.lang.Object` @kind object;
  #L415e7c.  v7.`org.mozilla.javascript.ObjArray.g` @type ^`java.lang.Object` := v9 @kind object;
  #L415e80.  v9:= v8 @kind object;
  #L415e82.  v8:= 5I;
  #L415e84.  v1:= v0 + 1;
  #L415e88.  call `a`(v7, v1) @signature `Lorg/mozilla/javascript/ObjArray;.a:(I)V` @kind direct;
  #L415e8e.  if v8 == v0 then goto L415ea8;
  #L415e92.  v1:= v7.`org.mozilla.javascript.ObjArray.h` @type ^`java.lang.Object`[] @kind object;
  #L415e96.  v3:= v8 + -5;
  #L415e9a.  v4:= v3 + 1;
  #L415e9e.  v6:= v0 - v8 @kind int;
  #L415ea2.  call `arraycopy`(v1, v3, v1, v4, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L415ea8.  v1:= v7.`org.mozilla.javascript.ObjArray.h` @type ^`java.lang.Object`[] @kind object;
  #L415eac.  v8:= v8 - v5 @kind int;
  #L415eae.  v1[v8]:= v9 @kind object;
  #L415eb2.  v0:= v0 + v2 @kind int;
  #L415eb4.  v7.`org.mozilla.javascript.ObjArray.a` @type ^`int` := v0;
  #L415eb8.  return @kind void;
  #L415eba.  call temp:= `e`() @signature `Lorg/mozilla/javascript/ObjArray;.e:()Ljava/lang/RuntimeException;` @kind static;
  #L415ec0.  throw v1;
  #L415ec2.  v0:= v0 + v2 @kind int;
  #L415ec4.  call temp:= `d`(v8, v0) @signature `Lorg/mozilla/javascript/ObjArray;.d:(II)Ljava/lang/RuntimeException;` @kind static;
  #L415eca.  throw v1;
}
procedure `void` `add`(`org.mozilla.javascript.ObjArray` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/mozilla/javascript/ObjArray;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L415edc.  v0:= v2.`org.mozilla.javascript.ObjArray.b` @type ^`boolean` @kind boolean;
  #L415ee0.  if v0 != 0 then goto L415f08;
  #L415ee4.  v0:= v2.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L415ee8.  v1:= 5I;
  #L415eea.  if v0 < v1 then goto L415ef8;
  #L415eee.  v1:= v0 + 1;
  #L415ef2.  call `a`(v2, v1) @signature `Lorg/mozilla/javascript/ObjArray;.a:(I)V` @kind direct;
  #L415ef8.  v1:= v0 + 1;
  #L415efc.  v2.`org.mozilla.javascript.ObjArray.a` @type ^`int` := v1;
  #L415f00.  call `f`(v2, v0, v3) @signature `Lorg/mozilla/javascript/ObjArray;.f:(ILjava/lang/Object;)V` @kind direct;
  #L415f06.  return @kind void;
  #L415f08.  call temp:= `e`() @signature `Lorg/mozilla/javascript/ObjArray;.e:()Ljava/lang/RuntimeException;` @kind static;
  #L415f0e.  v3:= 0I;
  #L415f10.  throw v3;
}
procedure `void` `clear`(`org.mozilla.javascript.ObjArray` v4 @kind this) @signature `Lorg/mozilla/javascript/ObjArray;.clear:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L415f24.  v0:= v4.`org.mozilla.javascript.ObjArray.b` @type ^`boolean` @kind boolean;
  #L415f28.  v1:= 0I;
  #L415f2a.  if v0 != 0 then goto L415f4c;
  #L415f2e.  v0:= v4.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L415f32.  v2:= 0I;
  #L415f34.  v3:= 0I;
  #L415f36.  if v3 == v0 then goto L415f46;
  #L415f3a.  call `f`(v4, v3, v1) @signature `Lorg/mozilla/javascript/ObjArray;.f:(ILjava/lang/Object;)V` @kind direct;
  #L415f40.  v3:= v3 + 1;
  #L415f44.  goto L415f36;
  #L415f46.  v4.`org.mozilla.javascript.ObjArray.a` @type ^`int` := v2;
  #L415f4a.  return @kind void;
  #L415f4c.  call temp:= `e`() @signature `Lorg/mozilla/javascript/ObjArray;.e:()Ljava/lang/RuntimeException;` @kind static;
  #L415f52.  throw v1;
}
procedure `java.lang.Object` `get`(`org.mozilla.javascript.ObjArray` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/ObjArray;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L415bc4.  if v2 < 0 then goto L415bda;
  #L415bc8.  v0:= v1.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L415bcc.  if v2 >= v0 then goto L415bda;
  #L415bd0.  call temp:= `b`(v1, v2) @signature `Lorg/mozilla/javascript/ObjArray;.b:(I)Ljava/lang/Object;` @kind direct;
  #L415bd6.  v2:= temp @kind object;
  #L415bd8.  return v2 @kind object;
  #L415bda.  v0:= v1.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L415bde.  call temp:= `d`(v2, v0) @signature `Lorg/mozilla/javascript/ObjArray;.d:(II)Ljava/lang/RuntimeException;` @kind static;
  #L415be4.  v2:= 0I;
  #L415be6.  throw v2;
}
procedure `int` `indexOf`(`org.mozilla.javascript.ObjArray` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lorg/mozilla/javascript/ObjArray;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L415b28.  v0:= v3.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L415b2c.  v1:= 0I;
  #L415b2e.  if v1 == v0 then goto L415b58;
  #L415b32.  call temp:= `b`(v3, v1) @signature `Lorg/mozilla/javascript/ObjArray;.b:(I)Ljava/lang/Object;` @kind direct;
  #L415b38.  v2:= temp @kind object;
  #L415b3a.  if v2 == v4 then goto L415b56;
  #L415b3e.  if v2 == 0 then goto L415b50;
  #L415b42.  call temp:= `equals`(v2, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L415b48.  v2:= temp;
  #L415b4a.  if v2 == 0 then goto L415b50;
  #L415b4e.  goto L415b56;
  #L415b50.  v1:= v1 + 1;
  #L415b54.  goto L415b2e;
  #L415b56.  return v1;
  #L415b58.  v4:= -1I;
  #L415b5a.  return v4;
}
procedure `boolean` `isEmpty`(`org.mozilla.javascript.ObjArray` v1 @kind this) @signature `Lorg/mozilla/javascript/ObjArray;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L415af0.  v0:= v1.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L415af4.  if v0 != 0 then goto L415afc;
  #L415af8.  v0:= 1I;
  #L415afa.  goto L415afe;
  #L415afc.  v0:= 0I;
  #L415afe.  return v0;
}
procedure `boolean` `isSealed`(`org.mozilla.javascript.ObjArray` v1 @kind this) @signature `Lorg/mozilla/javascript/ObjArray;.isSealed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L415b10.  v0:= v1.`org.mozilla.javascript.ObjArray.b` @type ^`boolean` @kind boolean;
  #L415b14.  return v0;
}
procedure `int` `lastIndexOf`(`org.mozilla.javascript.ObjArray` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/mozilla/javascript/ObjArray;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L415b6c.  v0:= v2.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L415b70.  if v0 == 0 then goto L415b96;
  #L415b74.  v0:= v0 + -1;
  #L415b78.  call temp:= `b`(v2, v0) @signature `Lorg/mozilla/javascript/ObjArray;.b:(I)Ljava/lang/Object;` @kind direct;
  #L415b7e.  v1:= temp @kind object;
  #L415b80.  if v1 == v3 then goto L415b94;
  #L415b84.  if v1 == 0 then goto L415b70;
  #L415b88.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L415b8e.  v1:= temp;
  #L415b90.  if v1 == 0 then goto L415b70;
  #L415b94.  return v0;
  #L415b96.  v3:= -1I;
  #L415b98.  return v3;
}
procedure `java.lang.Object` `peek`(`org.mozilla.javascript.ObjArray` v1 @kind this) @signature `Lorg/mozilla/javascript/ObjArray;.peek:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L415c50.  v0:= v1.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L415c54.  if v0 == 0 then goto L415c66;
  #L415c58.  v0:= v0 + -1;
  #L415c5c.  call temp:= `b`(v1, v0) @signature `Lorg/mozilla/javascript/ObjArray;.b:(I)Ljava/lang/Object;` @kind direct;
  #L415c62.  v0:= temp @kind object;
  #L415c64.  return v0 @kind object;
  #L415c66.  call temp:= `c`() @signature `Lorg/mozilla/javascript/ObjArray;.c:()Ljava/lang/RuntimeException;` @kind static;
  #L415c6c.  v0:= 0I;
  #L415c6e.  throw v0;
}
procedure `java.lang.Object` `pop`(`org.mozilla.javascript.ObjArray` v5 @kind this) @signature `Lorg/mozilla/javascript/ObjArray;.pop:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L415c80.  v0:= v5.`org.mozilla.javascript.ObjArray.b` @type ^`boolean` @kind boolean;
  #L415c84.  v1:= 0I;
  #L415c86.  if v0 != 0 then goto L415d02;
  #L415c8a.  v0:= v5.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L415c8e.  v2:= -1I;
  #L415c90.  v0:= v0 + v2 @kind int;
  #L415c92.  if v0 == v2 then goto L415cfa;
  #L415c96.  if v0 == 0 then goto L415cec;
  #L415c9a.  v2:= 1I;
  #L415c9c.  if v0 == v2 then goto L415ce2;
  #L415ca0.  v2:= 2I;
  #L415ca2.  if v0 == v2 then goto L415cd8;
  #L415ca6.  v2:= 3I;
  #L415ca8.  if v0 == v2 then goto L415cce;
  #L415cac.  v2:= 4I;
  #L415cae.  if v0 == v2 then goto L415cc4;
  #L415cb2.  v2:= v5.`org.mozilla.javascript.ObjArray.h` @type ^`java.lang.Object`[] @kind object;
  #L415cb6.  v3:= v0 + -5;
  #L415cba.  v4:= v2[v3] @kind object;
  #L415cbe.  v2[v3]:= v1 @kind object;
  #L415cc2.  goto L415cf4;
  #L415cc4.  v4:= v5.`org.mozilla.javascript.ObjArray.g` @type ^`java.lang.Object` @kind object;
  #L415cc8.  v5.`org.mozilla.javascript.ObjArray.g` @type ^`java.lang.Object` := v1 @kind object;
  #L415ccc.  goto L415cf4;
  #L415cce.  v4:= v5.`org.mozilla.javascript.ObjArray.f` @type ^`java.lang.Object` @kind object;
  #L415cd2.  v5.`org.mozilla.javascript.ObjArray.f` @type ^`java.lang.Object` := v1 @kind object;
  #L415cd6.  goto L415cf4;
  #L415cd8.  v4:= v5.`org.mozilla.javascript.ObjArray.e` @type ^`java.lang.Object` @kind object;
  #L415cdc.  v5.`org.mozilla.javascript.ObjArray.e` @type ^`java.lang.Object` := v1 @kind object;
  #L415ce0.  goto L415cf4;
  #L415ce2.  v4:= v5.`org.mozilla.javascript.ObjArray.d` @type ^`java.lang.Object` @kind object;
  #L415ce6.  v5.`org.mozilla.javascript.ObjArray.d` @type ^`java.lang.Object` := v1 @kind object;
  #L415cea.  goto L415cf4;
  #L415cec.  v4:= v5.`org.mozilla.javascript.ObjArray.c` @type ^`java.lang.Object` @kind object;
  #L415cf0.  v5.`org.mozilla.javascript.ObjArray.c` @type ^`java.lang.Object` := v1 @kind object;
  #L415cf4.  v5.`org.mozilla.javascript.ObjArray.a` @type ^`int` := v0;
  #L415cf8.  return v4 @kind object;
  #L415cfa.  call temp:= `c`() @signature `Lorg/mozilla/javascript/ObjArray;.c:()Ljava/lang/RuntimeException;` @kind static;
  #L415d00.  throw v1;
  #L415d02.  call temp:= `e`() @signature `Lorg/mozilla/javascript/ObjArray;.e:()Ljava/lang/RuntimeException;` @kind static;
  #L415d08.  throw v1;
}
procedure `void` `push`(`org.mozilla.javascript.ObjArray` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/mozilla/javascript/ObjArray;.push:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L415fe0.  call `add`(v0, v1) @signature `Lorg/mozilla/javascript/ObjArray;.add:(Ljava/lang/Object;)V` @kind virtual;
  #L415fe6.  return @kind void;
}
procedure `void` `remove`(`org.mozilla.javascript.ObjArray` v6 @kind this, `int` v7 ) @signature `Lorg/mozilla/javascript/ObjArray;.remove:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L416040.  v0:= v6.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L416044.  v1:= 0I;
  #L416046.  if v7 < 0 then goto L41610e;
  #L41604a.  if v7 >= v0 then goto L41610e;
  #L41604e.  v2:= v6.`org.mozilla.javascript.ObjArray.b` @type ^`boolean` @kind boolean;
  #L416052.  if v2 != 0 then goto L416106;
  #L416056.  v0:= v0 + -1;
  #L41605a.  v2:= 4I;
  #L41605c.  v3:= 3I;
  #L41605e.  v4:= 2I;
  #L416060.  v5:= 1I;
  #L416062.  if v7 == 0 then goto L416078;
  #L416066.  if v7 == v5 then goto L41608a;
  #L41606a.  if v7 == v4 then goto L41609c;
  #L41606e.  if v7 == v3 then goto L4160ae;
  #L416072.  if v7 == v2 then goto L4160c0;
  #L416076.  goto L4160da;
  #L416078.  if v0 != 0 then goto L416082;
  #L41607c.  v6.`org.mozilla.javascript.ObjArray.c` @type ^`java.lang.Object` := v1 @kind object;
  #L416080.  goto L416100;
  #L416082.  v7:= v6.`org.mozilla.javascript.ObjArray.d` @type ^`java.lang.Object` @kind object;
  #L416086.  v6.`org.mozilla.javascript.ObjArray.c` @type ^`java.lang.Object` := v7 @kind object;
  #L41608a.  if v0 != v5 then goto L416094;
  #L41608e.  v6.`org.mozilla.javascript.ObjArray.d` @type ^`java.lang.Object` := v1 @kind object;
  #L416092.  goto L416100;
  #L416094.  v7:= v6.`org.mozilla.javascript.ObjArray.e` @type ^`java.lang.Object` @kind object;
  #L416098.  v6.`org.mozilla.javascript.ObjArray.d` @type ^`java.lang.Object` := v7 @kind object;
  #L41609c.  if v0 != v4 then goto L4160a6;
  #L4160a0.  v6.`org.mozilla.javascript.ObjArray.e` @type ^`java.lang.Object` := v1 @kind object;
  #L4160a4.  goto L416100;
  #L4160a6.  v7:= v6.`org.mozilla.javascript.ObjArray.f` @type ^`java.lang.Object` @kind object;
  #L4160aa.  v6.`org.mozilla.javascript.ObjArray.e` @type ^`java.lang.Object` := v7 @kind object;
  #L4160ae.  if v0 != v3 then goto L4160b8;
  #L4160b2.  v6.`org.mozilla.javascript.ObjArray.f` @type ^`java.lang.Object` := v1 @kind object;
  #L4160b6.  goto L416100;
  #L4160b8.  v7:= v6.`org.mozilla.javascript.ObjArray.g` @type ^`java.lang.Object` @kind object;
  #L4160bc.  v6.`org.mozilla.javascript.ObjArray.f` @type ^`java.lang.Object` := v7 @kind object;
  #L4160c0.  if v0 != v2 then goto L4160ca;
  #L4160c4.  v6.`org.mozilla.javascript.ObjArray.g` @type ^`java.lang.Object` := v1 @kind object;
  #L4160c8.  goto L416100;
  #L4160ca.  v7:= v6.`org.mozilla.javascript.ObjArray.h` @type ^`java.lang.Object`[] @kind object;
  #L4160ce.  v2:= 0I;
  #L4160d0.  v7:= v7[v2] @kind object;
  #L4160d4.  v6.`org.mozilla.javascript.ObjArray.g` @type ^`java.lang.Object` := v7 @kind object;
  #L4160d8.  v7:= 5I;
  #L4160da.  if v7 == v0 then goto L4160f4;
  #L4160de.  v2:= v6.`org.mozilla.javascript.ObjArray.h` @type ^`java.lang.Object`[] @kind object;
  #L4160e2.  v3:= v7 + -5;
  #L4160e6.  v4:= v3 + 1;
  #L4160ea.  v7:= v0 - v7 @kind int;
  #L4160ee.  call `arraycopy`(v2, v4, v2, v3, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4160f4.  v7:= v6.`org.mozilla.javascript.ObjArray.h` @type ^`java.lang.Object`[] @kind object;
  #L4160f8.  v2:= v0 + -5;
  #L4160fc.  v7[v2]:= v1 @kind object;
  #L416100.  v6.`org.mozilla.javascript.ObjArray.a` @type ^`int` := v0;
  #L416104.  return @kind void;
  #L416106.  call temp:= `e`() @signature `Lorg/mozilla/javascript/ObjArray;.e:()Ljava/lang/RuntimeException;` @kind static;
  #L41610c.  throw v1;
  #L41610e.  call temp:= `d`(v7, v0) @signature `Lorg/mozilla/javascript/ObjArray;.d:(II)Ljava/lang/RuntimeException;` @kind static;
  #L416114.  throw v1;
}
procedure `void` `seal`(`org.mozilla.javascript.ObjArray` v1 @kind this) @signature `Lorg/mozilla/javascript/ObjArray;.seal:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L416128.  v0:= 1I;
  #L41612a.  v1.`org.mozilla.javascript.ObjArray.b` @type ^`boolean` := v0 @kind boolean;
  #L41612e.  return @kind void;
}
procedure `void` `set`(`org.mozilla.javascript.ObjArray` v2 @kind this, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lorg/mozilla/javascript/ObjArray;.set:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L416140.  v0:= 0I;
  #L416142.  if v3 < 0 then goto L416166;
  #L416146.  v1:= v2.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L41614a.  if v3 >= v1 then goto L416166;
  #L41614e.  v1:= v2.`org.mozilla.javascript.ObjArray.b` @type ^`boolean` @kind boolean;
  #L416152.  if v1 != 0 then goto L41615e;
  #L416156.  call `f`(v2, v3, v4) @signature `Lorg/mozilla/javascript/ObjArray;.f:(ILjava/lang/Object;)V` @kind direct;
  #L41615c.  return @kind void;
  #L41615e.  call temp:= `e`() @signature `Lorg/mozilla/javascript/ObjArray;.e:()Ljava/lang/RuntimeException;` @kind static;
  #L416164.  throw v0;
  #L416166.  v4:= v2.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L41616a.  call temp:= `d`(v3, v4) @signature `Lorg/mozilla/javascript/ObjArray;.d:(II)Ljava/lang/RuntimeException;` @kind static;
  #L416170.  throw v0;
}
procedure `void` `setSize`(`org.mozilla.javascript.ObjArray` v3 @kind this, `int` v4 ) @signature `Lorg/mozilla/javascript/ObjArray;.setSize:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4161dc.  if v4 < 0 then goto L416222;
  #L4161e0.  v0:= v3.`org.mozilla.javascript.ObjArray.b` @type ^`boolean` @kind boolean;
  #L4161e4.  v1:= 0I;
  #L4161e6.  if v0 != 0 then goto L41621a;
  #L4161ea.  v0:= v3.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L4161ee.  if v4 >= v0 then goto L416204;
  #L4161f2.  v2:= v4;
  #L4161f4.  if v2 == v0 then goto L416214;
  #L4161f8.  call `f`(v3, v2, v1) @signature `Lorg/mozilla/javascript/ObjArray;.f:(ILjava/lang/Object;)V` @kind direct;
  #L4161fe.  v2:= v2 + 1;
  #L416202.  goto L4161f4;
  #L416204.  if v4 <= v0 then goto L416214;
  #L416208.  v0:= 5I;
  #L41620a.  if v4 <= v0 then goto L416214;
  #L41620e.  call `a`(v3, v4) @signature `Lorg/mozilla/javascript/ObjArray;.a:(I)V` @kind direct;
  #L416214.  v3.`org.mozilla.javascript.ObjArray.a` @type ^`int` := v4;
  #L416218.  return @kind void;
  #L41621a.  call temp:= `e`() @signature `Lorg/mozilla/javascript/ObjArray;.e:()Ljava/lang/RuntimeException;` @kind static;
  #L416220.  throw v1;
  #L416222.  v4:= new `java.lang.IllegalArgumentException`;
  #L416226.  call `<init>`(v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L41622c.  throw v4;
}
procedure `int` `size`(`org.mozilla.javascript.ObjArray` v1 @kind this) @signature `Lorg/mozilla/javascript/ObjArray;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L415bac.  v0:= v1.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L415bb0.  return v0;
}
procedure `void` `toArray`(`org.mozilla.javascript.ObjArray` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lorg/mozilla/javascript/ObjArray;.toArray:([Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L416240.  v0:= 0I;
  #L416242.  call `toArray`(v1, v2, v0) @signature `Lorg/mozilla/javascript/ObjArray;.toArray:([Ljava/lang/Object;I)V` @kind virtual;
  #L416248.  return @kind void;
}
procedure `void` `toArray`(`org.mozilla.javascript.ObjArray` v5 @kind this, `java.lang.Object`[] v6 @kind object, `int` v7 ) @signature `Lorg/mozilla/javascript/ObjArray;.toArray:([Ljava/lang/Object;I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L41625c.  v0:= v5.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L416260.  if v0 == 0 then goto L4162ce;
  #L416264.  v1:= 0I;
  #L416266.  v2:= 1I;
  #L416268.  if v0 == v2 then goto L4162c4;
  #L41626c.  v2:= 2I;
  #L41626e.  if v0 == v2 then goto L4162b8;
  #L416272.  v2:= 3I;
  #L416274.  if v0 == v2 then goto L4162ac;
  #L416278.  v2:= 4I;
  #L41627a.  if v0 == v2 then goto L4162a0;
  #L41627e.  v2:= 5I;
  #L416280.  if v0 == v2 then goto L416294;
  #L416284.  v3:= v5.`org.mozilla.javascript.ObjArray.h` @type ^`java.lang.Object`[] @kind object;
  #L416288.  v4:= v7 + 5;
  #L41628c.  v0:= v0 - v2 @kind int;
  #L41628e.  call `arraycopy`(v3, v1, v6, v4, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L416294.  v0:= v7 + 4;
  #L416298.  v2:= v5.`org.mozilla.javascript.ObjArray.g` @type ^`java.lang.Object` @kind object;
  #L41629c.  v6[v0]:= v2 @kind object;
  #L4162a0.  v0:= v7 + 3;
  #L4162a4.  v2:= v5.`org.mozilla.javascript.ObjArray.f` @type ^`java.lang.Object` @kind object;
  #L4162a8.  v6[v0]:= v2 @kind object;
  #L4162ac.  v0:= v7 + 2;
  #L4162b0.  v2:= v5.`org.mozilla.javascript.ObjArray.e` @type ^`java.lang.Object` @kind object;
  #L4162b4.  v6[v0]:= v2 @kind object;
  #L4162b8.  v0:= v7 + 1;
  #L4162bc.  v2:= v5.`org.mozilla.javascript.ObjArray.d` @type ^`java.lang.Object` @kind object;
  #L4162c0.  v6[v0]:= v2 @kind object;
  #L4162c4.  v7:= v7 + v1 @kind int;
  #L4162c6.  v0:= v5.`org.mozilla.javascript.ObjArray.c` @type ^`java.lang.Object` @kind object;
  #L4162ca.  v6[v7]:= v0 @kind object;
  #L4162ce.  return @kind void;
}
procedure `java.lang.Object`[] `toArray`(`org.mozilla.javascript.ObjArray` v2 @kind this) @signature `Lorg/mozilla/javascript/ObjArray;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L415d1c.  v0:= v2.`org.mozilla.javascript.ObjArray.a` @type ^`int`;
  #L415d20.  v0:= new `java.lang.Object`[v0];
  #L415d24.  v1:= 0I;
  #L415d26.  call `toArray`(v2, v0, v1) @signature `Lorg/mozilla/javascript/ObjArray;.toArray:([Ljava/lang/Object;I)V` @kind virtual;
  #L415d2c.  return v0 @kind object;
}
