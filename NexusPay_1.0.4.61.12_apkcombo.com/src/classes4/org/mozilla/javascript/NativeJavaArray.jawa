record `org.mozilla.javascript.NativeJavaArray` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.NativeJavaObject` @kind class {
  `java.lang.Object` `org.mozilla.javascript.NativeJavaArray.e` @AccessFlag ;
  `int` `org.mozilla.javascript.NativeJavaArray.f` @AccessFlag ;
  `java.lang.Class` `org.mozilla.javascript.NativeJavaArray.g` @AccessFlag ;
}
global `long` `@@org.mozilla.javascript.NativeJavaArray.serialVersionUID` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`org.mozilla.javascript.NativeJavaArray` v2 @kind this, `org.mozilla.javascript.Scriptable` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/mozilla/javascript/NativeJavaArray;.<init>:(Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L40d72c.  v0:= `@@org.mozilla.javascript.ScriptRuntime.ObjectClass` @type ^`java.lang.Class` @kind object;
  #L40d730.  v1:= 0I;
  #L40d732.  call `<init>`(v2, v3, v1, v0) @signature `Lorg/mozilla/javascript/NativeJavaObject;.<init>:(Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;Ljava/lang/Class;)V` @kind direct;
  #L40d738.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L40d73e.  v3:= temp @kind object;
  #L40d740.  call temp:= `isArray`(v3) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L40d746.  v0:= temp;
  #L40d748.  if v0 == 0 then goto L40d76a;
  #L40d74c.  v2.`org.mozilla.javascript.NativeJavaArray.e` @type ^`java.lang.Object` := v4 @kind object;
  #L40d750.  call temp:= `getLength`(v4) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L40d756.  v4:= temp;
  #L40d758.  v2.`org.mozilla.javascript.NativeJavaArray.f` @type ^`int` := v4;
  #L40d75c.  call temp:= `getComponentType`(v3) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L40d762.  v3:= temp @kind object;
  #L40d764.  v2.`org.mozilla.javascript.NativeJavaArray.g` @type ^`java.lang.Class` := v3 @kind object;
  #L40d768.  return @kind void;
  #L40d76a.  v3:= new `java.lang.RuntimeException`;
  #L40d76e.  v4:= "Array expected" @kind object;
  #L40d772.  call `<init>`(v3, v4) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40d778.  throw v3;
}
procedure `org.mozilla.javascript.NativeJavaArray` `wrap`(`org.mozilla.javascript.Scriptable` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/mozilla/javascript/NativeJavaArray;.wrap:(Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)Lorg/mozilla/javascript/NativeJavaArray;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40d6dc.  v0:= new `org.mozilla.javascript.NativeJavaArray`;
  #L40d6e0.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/NativeJavaArray;.<init>:(Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)V` @kind direct;
  #L40d6e6.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`org.mozilla.javascript.NativeJavaArray` v2 @kind this, `int` v3 , `org.mozilla.javascript.Scriptable` v4 @kind object) @signature `Lorg/mozilla/javascript/NativeJavaArray;.get:(ILorg/mozilla/javascript/Scriptable;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40d56c.  if v3 < 0 then goto L40d5a2;
  #L40d570.  v4:= v2.`org.mozilla.javascript.NativeJavaArray.f` @type ^`int`;
  #L40d574.  if v3 >= v4 then goto L40d5a2;
  #L40d578.  call temp:= `l`() @signature `Lorg/mozilla/javascript/Context;.l:()Lorg/mozilla/javascript/Context;` @kind static;
  #L40d57e.  v4:= temp @kind object;
  #L40d580.  v0:= v2.`org.mozilla.javascript.NativeJavaArray.e` @type ^`java.lang.Object` @kind object;
  #L40d584.  call temp:= `get`(v0, v3) @signature `Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L40d58a.  v3:= temp @kind object;
  #L40d58c.  call temp:= `getWrapFactory`(v4) @signature `Lorg/mozilla/javascript/Context;.getWrapFactory:()Lorg/mozilla/javascript/WrapFactory;` @kind virtual;
  #L40d592.  v0:= temp @kind object;
  #L40d594.  v1:= v2.`org.mozilla.javascript.NativeJavaArray.g` @type ^`java.lang.Class` @kind object;
  #L40d598.  call temp:= `wrap`(v0, v4, v2, v3, v1) @signature `Lorg/mozilla/javascript/WrapFactory;.wrap:(Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L40d59e.  v3:= temp @kind object;
  #L40d5a0.  return v3 @kind object;
  #L40d5a2.  v3:= `@@org.mozilla.javascript.Undefined.instance` @type ^`java.lang.Object` @kind object;
  #L40d5a6.  return v3 @kind object;
}
procedure `java.lang.Object` `get`(`org.mozilla.javascript.NativeJavaArray` v1 @kind this, `java.lang.String` v2 @kind object, `org.mozilla.javascript.Scriptable` v3 @kind object) @signature `Lorg/mozilla/javascript/NativeJavaArray;.get:(Ljava/lang/String;Lorg/mozilla/javascript/Scriptable;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40d5b8.  v0:= "length" @kind object;
  #L40d5bc.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40d5c2.  v0:= temp;
  #L40d5c4.  if v0 == 0 then goto L40d5d6;
  #L40d5c8.  v2:= v1.`org.mozilla.javascript.NativeJavaArray.f` @type ^`int`;
  #L40d5cc.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40d5d2.  v2:= temp @kind object;
  #L40d5d4.  return v2 @kind object;
  #L40d5d6.  call temp:= `get`(v1, v2, v3) @signature `Lorg/mozilla/javascript/NativeJavaObject;.get:(Ljava/lang/String;Lorg/mozilla/javascript/Scriptable;)Ljava/lang/Object;` @kind super;
  #L40d5dc.  v3:= temp @kind object;
  #L40d5de.  v0:= `@@org.mozilla.javascript.Scriptable.NOT_FOUND` @type ^`java.lang.Object` @kind object;
  #L40d5e2.  if v3 != v0 then goto L40d61e;
  #L40d5e6.  call temp:= `getPrototype`(v1) @signature `Lorg/mozilla/javascript/NativeJavaArray;.getPrototype:()Lorg/mozilla/javascript/Scriptable;` @kind virtual;
  #L40d5ec.  v0:= temp @kind object;
  #L40d5ee.  call temp:= `hasProperty`(v0, v2) @signature `Lorg/mozilla/javascript/ScriptableObject;.hasProperty:(Lorg/mozilla/javascript/Scriptable;Ljava/lang/String;)Z` @kind static;
  #L40d5f4.  v0:= temp;
  #L40d5f6.  if v0 == 0 then goto L40d5fc;
  #L40d5fa.  goto L40d61e;
  #L40d5fc.  v3:= v1.`org.mozilla.javascript.NativeJavaArray.e` @type ^`java.lang.Object` @kind object;
  #L40d600.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L40d606.  v3:= temp @kind object;
  #L40d608.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L40d60e.  v3:= temp @kind object;
  #L40d610.  v0:= "msg.java.member.not.found" @kind object;
  #L40d614.  call temp:= `u`(v0, v3, v2) @signature `Lorg/mozilla/javascript/Context;.u:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/mozilla/javascript/EvaluatorException;` @kind static;
  #L40d61a.  v2:= temp @kind object;
  #L40d61c.  throw v2;
  #L40d61e.  return v3 @kind object;
}
procedure `java.lang.String` `getClassName`(`org.mozilla.javascript.NativeJavaArray` v1 @kind this) @signature `Lorg/mozilla/javascript/NativeJavaArray;.getClassName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40d6c4.  v0:= "JavaArray" @kind object;
  #L40d6c8.  return v0 @kind object;
}
procedure `java.lang.Object` `getDefaultValue`(`org.mozilla.javascript.NativeJavaArray` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/mozilla/javascript/NativeJavaArray;.getDefaultValue:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40d630.  if v2 == 0 then goto L40d65c;
  #L40d634.  v0:= `@@org.mozilla.javascript.ScriptRuntime.StringClass` @type ^`java.lang.Class` @kind object;
  #L40d638.  if v2 != v0 then goto L40d63e;
  #L40d63c.  goto L40d65c;
  #L40d63e.  v0:= `@@org.mozilla.javascript.ScriptRuntime.BooleanClass` @type ^`java.lang.Class` @kind object;
  #L40d642.  if v2 != v0 then goto L40d64c;
  #L40d646.  v2:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L40d64a.  return v2 @kind object;
  #L40d64c.  v0:= `@@org.mozilla.javascript.ScriptRuntime.NumberClass` @type ^`java.lang.Class` @kind object;
  #L40d650.  if v2 != v0 then goto L40d65a;
  #L40d654.  v2:= `@@org.mozilla.javascript.ScriptRuntime.NaNobj` @type ^`java.lang.Double` @kind object;
  #L40d658.  return v2 @kind object;
  #L40d65a.  return v1 @kind object;
  #L40d65c.  v2:= v1.`org.mozilla.javascript.NativeJavaArray.e` @type ^`java.lang.Object` @kind object;
  #L40d660.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L40d666.  v2:= temp @kind object;
  #L40d668.  return v2 @kind object;
}
procedure `java.lang.Object`[] `getIds`(`org.mozilla.javascript.NativeJavaArray` v3 @kind this) @signature `Lorg/mozilla/javascript/NativeJavaArray;.getIds:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40d694.  v0:= v3.`org.mozilla.javascript.NativeJavaArray.f` @type ^`int`;
  #L40d698.  v1:= new `java.lang.Object`[v0];
  #L40d69c.  v0:= v0 + -1;
  #L40d6a0.  if v0 < 0 then goto L40d6b2;
  #L40d6a4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40d6aa.  v2:= temp @kind object;
  #L40d6ac.  v1[v0]:= v2 @kind object;
  #L40d6b0.  goto L40d69c;
  #L40d6b2.  return v1 @kind object;
}
procedure `org.mozilla.javascript.Scriptable` `getPrototype`(`org.mozilla.javascript.NativeJavaArray` v1 @kind this) @signature `Lorg/mozilla/javascript/NativeJavaArray;.getPrototype:()Lorg/mozilla/javascript/Scriptable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40d6f8.  v0:= v1.`org.mozilla.javascript.NativeJavaObject.prototype` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L40d6fc.  if v0 != 0 then goto L40d714;
  #L40d700.  call temp:= `getParentScope`(v1) @signature `Lorg/mozilla/javascript/NativeJavaObject;.getParentScope:()Lorg/mozilla/javascript/Scriptable;` @kind virtual;
  #L40d706.  v0:= temp @kind object;
  #L40d708.  call temp:= `getArrayPrototype`(v0) @signature `Lorg/mozilla/javascript/ScriptableObject;.getArrayPrototype:(Lorg/mozilla/javascript/Scriptable;)Lorg/mozilla/javascript/Scriptable;` @kind static;
  #L40d70e.  v0:= temp @kind object;
  #L40d710.  v1.`org.mozilla.javascript.NativeJavaObject.prototype` @type ^`org.mozilla.javascript.Scriptable` := v0 @kind object;
  #L40d714.  v0:= v1.`org.mozilla.javascript.NativeJavaObject.prototype` @type ^`org.mozilla.javascript.Scriptable` @kind object;
  #L40d718.  return v0 @kind object;
}
procedure `boolean` `has`(`org.mozilla.javascript.NativeJavaArray` v0 @kind this, `int` v1 , `org.mozilla.javascript.Scriptable` v2 @kind object) @signature `Lorg/mozilla/javascript/NativeJavaArray;.has:(ILorg/mozilla/javascript/Scriptable;)Z` @AccessFlag PUBLIC {
    temp;

  #L40d4d8.  if v1 < 0 then goto L40d4e8;
  #L40d4dc.  v2:= v0.`org.mozilla.javascript.NativeJavaArray.f` @type ^`int`;
  #L40d4e0.  if v1 >= v2 then goto L40d4e8;
  #L40d4e4.  v1:= 1I;
  #L40d4e6.  goto L40d4ea;
  #L40d4e8.  v1:= 0I;
  #L40d4ea.  return v1;
}
procedure `boolean` `has`(`org.mozilla.javascript.NativeJavaArray` v1 @kind this, `java.lang.String` v2 @kind object, `org.mozilla.javascript.Scriptable` v3 @kind object) @signature `Lorg/mozilla/javascript/NativeJavaArray;.has:(Ljava/lang/String;Lorg/mozilla/javascript/Scriptable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40d4fc.  v0:= "length" @kind object;
  #L40d500.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40d506.  v0:= temp;
  #L40d508.  if v0 != 0 then goto L40d51e;
  #L40d50c.  call temp:= `has`(v1, v2, v3) @signature `Lorg/mozilla/javascript/NativeJavaObject;.has:(Ljava/lang/String;Lorg/mozilla/javascript/Scriptable;)Z` @kind super;
  #L40d512.  v2:= temp;
  #L40d514.  if v2 == 0 then goto L40d51a;
  #L40d518.  goto L40d51e;
  #L40d51a.  v2:= 0I;
  #L40d51c.  goto L40d520;
  #L40d51e.  v2:= 1I;
  #L40d520.  return v2;
}
procedure `boolean` `hasInstance`(`org.mozilla.javascript.NativeJavaArray` v1 @kind this, `org.mozilla.javascript.Scriptable` v2 @kind object) @signature `Lorg/mozilla/javascript/NativeJavaArray;.hasInstance:(Lorg/mozilla/javascript/Scriptable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40d534.  v0:= instanceof @variable v2 @type ^`org.mozilla.javascript.Wrapper` @kind boolean;
  #L40d538.  if v0 != 0 then goto L40d540;
  #L40d53c.  v2:= 0I;
  #L40d53e.  return v2;
  #L40d540.  v2:= (`org.mozilla.javascript.Wrapper`) v2 @kind object;
  #L40d544.  call temp:= `unwrap`(v2) @signature `Lorg/mozilla/javascript/Wrapper;.unwrap:()Ljava/lang/Object;` @kind interface;
  #L40d54a.  v2:= temp @kind object;
  #L40d54c.  v0:= v1.`org.mozilla.javascript.NativeJavaArray.g` @type ^`java.lang.Class` @kind object;
  #L40d550.  call temp:= `isInstance`(v0, v2) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L40d556.  v2:= temp;
  #L40d558.  return v2;
}
procedure `void` `put`(`org.mozilla.javascript.NativeJavaArray` v1 @kind this, `int` v2 , `org.mozilla.javascript.Scriptable` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/mozilla/javascript/NativeJavaArray;.put:(ILorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40d78c.  if v2 < 0 then goto L40d7b0;
  #L40d790.  v3:= v1.`org.mozilla.javascript.NativeJavaArray.f` @type ^`int`;
  #L40d794.  if v2 >= v3 then goto L40d7b0;
  #L40d798.  v3:= v1.`org.mozilla.javascript.NativeJavaArray.e` @type ^`java.lang.Object` @kind object;
  #L40d79c.  v0:= v1.`org.mozilla.javascript.NativeJavaArray.g` @type ^`java.lang.Class` @kind object;
  #L40d7a0.  call temp:= `jsToJava`(v4, v0) @signature `Lorg/mozilla/javascript/Context;.jsToJava:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;` @kind static;
  #L40d7a6.  v4:= temp @kind object;
  #L40d7a8.  call `set`(v3, v2, v4) @signature `Ljava/lang/reflect/Array;.set:(Ljava/lang/Object;ILjava/lang/Object;)V` @kind static;
  #L40d7ae.  return @kind void;
  #L40d7b0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L40d7b6.  v2:= temp @kind object;
  #L40d7b8.  v3:= v1.`org.mozilla.javascript.NativeJavaArray.f` @type ^`int`;
  #L40d7bc.  v3:= v3 + -1;
  #L40d7c0.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L40d7c6.  v3:= temp @kind object;
  #L40d7c8.  v4:= "msg.java.array.index.out.of.bounds" @kind object;
  #L40d7cc.  call temp:= `u`(v4, v2, v3) @signature `Lorg/mozilla/javascript/Context;.u:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/mozilla/javascript/EvaluatorException;` @kind static;
  #L40d7d2.  v2:= temp @kind object;
  #L40d7d4.  throw v2;
}
procedure `void` `put`(`org.mozilla.javascript.NativeJavaArray` v0 @kind this, `java.lang.String` v1 @kind object, `org.mozilla.javascript.Scriptable` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/mozilla/javascript/NativeJavaArray;.put:(Ljava/lang/String;Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L40d7e8.  v2:= "length" @kind object;
  #L40d7ec.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40d7f2.  v2:= temp;
  #L40d7f4.  if v2 == 0 then goto L40d7fa;
  #L40d7f8.  return @kind void;
  #L40d7fa.  v2:= "msg.java.array.member.not.found" @kind object;
  #L40d7fe.  call temp:= `t`(v2, v1) @signature `Lorg/mozilla/javascript/Context;.t:(Ljava/lang/String;Ljava/lang/Object;)Lorg/mozilla/javascript/EvaluatorException;` @kind static;
  #L40d804.  v1:= temp @kind object;
  #L40d806.  throw v1;
}
procedure `java.lang.Object` `unwrap`(`org.mozilla.javascript.NativeJavaArray` v1 @kind this) @signature `Lorg/mozilla/javascript/NativeJavaArray;.unwrap:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40d67c.  v0:= v1.`org.mozilla.javascript.NativeJavaArray.e` @type ^`java.lang.Object` @kind object;
  #L40d680.  return v0 @kind object;
}
