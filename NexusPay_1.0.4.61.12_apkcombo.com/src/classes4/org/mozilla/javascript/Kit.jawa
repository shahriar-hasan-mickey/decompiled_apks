record `org.mozilla.javascript.Kit` @kind class @AccessFlag PUBLIC {
}
global `java.lang.reflect.Method` `@@org.mozilla.javascript.Kit.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/mozilla/javascript/Kit;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L40456c.  v0:= "java.lang.Throwable" @kind object;
  #L404570.  call temp:= `classOrNull`(v0) @signature `Lorg/mozilla/javascript/Kit;.classOrNull:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L404576.  v0:= temp @kind object;
  #L404578.  v1:= 1I;
  #L40457a.  v1:= new `java.lang.Class`[v1];
  #L40457e.  v2:= 0I;
  #L404580.  v1[v2]:= v0 @kind object;
  #L404584.  v2:= "initCause" @kind object;
  #L404588.  call temp:= `getMethod`(v0, v2, v1) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L40458e.  v0:= temp @kind object;
  #L404590.  `@@org.mozilla.javascript.Kit.a` @type ^`java.lang.reflect.Method` := v0 @kind object;
  #L404594.  return @kind void;
  catch `java.lang.Exception` @[L40456c..L404594] goto L404594;
}
procedure `void` `<init>`(`org.mozilla.javascript.Kit` v0 @kind this) @signature `Lorg/mozilla/javascript/Kit;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4045b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4045be.  return @kind void;
}
procedure `java.lang.Object` `a`(`java.util.Map` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/mozilla/javascript/Kit;.a:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;

  #L404300.  @monitorenter v1
  #L404302.  call temp:= `get`(v1, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L404308.  v0:= temp @kind object;
  #L40430a.  if v0 != 0 then goto L404316;
  #L40430e.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L404314.  goto L404318;
  #L404316.  v3:= v0 @kind object;
  #L404318.  @monitorexit v1
  #L40431a.  return v3 @kind object;
  #L40431c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L40431e.  @monitorexit v1
  #L404320.  throw v2;
  catch `java.lang.Throwable` @[L404302..L404320] goto L40431c;
}
procedure `java.lang.Object` `addListener`(`java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/mozilla/javascript/Kit;.addListener:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4041e8.  if v4 == 0 then goto L404250;
  #L4041ec.  v0:= instanceof @variable v4 @type ^`java.lang.Object`[] @kind boolean;
  #L4041f0.  if v0 != 0 then goto L404244;
  #L4041f4.  if v3 != 0 then goto L4041fa;
  #L4041f8.  goto L404236;
  #L4041fa.  v0:= instanceof @variable v3 @type ^`java.lang.Object`[] @kind boolean;
  #L4041fe.  v1:= 2I;
  #L404200.  v2:= 0I;
  #L404202.  if v0 != 0 then goto L404218;
  #L404206.  v0:= new `java.lang.Object`[v1];
  #L40420a.  v0[v2]:= v3 @kind object;
  #L40420e.  v3:= 1I;
  #L404210.  v0[v3]:= v4 @kind object;
  #L404214.  v4:= v0 @kind object;
  #L404216.  goto L404236;
  #L404218.  v3:= (`java.lang.Object`[]) v3 @kind object;
  #L40421c.  v0:= length @variable v3;
  #L40421e.  if v0 < v1 then goto L404238;
  #L404222.  v1:= v0 + 1;
  #L404226.  v1:= new `java.lang.Object`[v1];
  #L40422a.  call `arraycopy`(v3, v2, v1, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L404230.  v1[v0]:= v4 @kind object;
  #L404234.  v4:= v1 @kind object;
  #L404236.  return v4 @kind object;
  #L404238.  v3:= new `java.lang.IllegalArgumentException`;
  #L40423c.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L404242.  throw v3;
  #L404244.  v3:= new `java.lang.IllegalArgumentException`;
  #L404248.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L40424e.  throw v3;
  #L404250.  v3:= new `java.lang.IllegalArgumentException`;
  #L404254.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L40425a.  throw v3;
}
procedure `java.lang.Object` `b`(`java.lang.Class` v0 @kind object) @signature `Lorg/mozilla/javascript/Kit;.b:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;

  #L40437c.  call temp:= `newInstance`(v0) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L404382.  v0:= temp @kind object;
  #L404384.  return v0 @kind object;
  #L404386.  v0:= 0I;
  #L404388.  return v0 @kind object;
  catch `java.lang.SecurityException` @[L40437c..L404384] goto L404386;
  catch `java.lang.LinkageError` @[L40437c..L404384] goto L404386;
  catch `java.lang.InstantiationException` @[L40437c..L404384] goto L404386;
  catch `java.lang.IllegalAccessException` @[L40437c..L404384] goto L404386;
}
procedure `boolean` `c`(`java.lang.ClassLoader` v2 @kind object) @signature `Lorg/mozilla/javascript/Kit;.c:(Ljava/lang/ClassLoader;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L404064.  v0:= `@@org.mozilla.javascript.ScriptRuntime.ContextFactoryClass` @type ^`java.lang.Class` @kind object;
  #L404068.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L40406e.  v1:= temp @kind object;
  #L404070.  call temp:= `classOrNull`(v2, v1) @signature `Lorg/mozilla/javascript/Kit;.classOrNull:(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L404076.  v2:= temp @kind object;
  #L404078.  if v2 == v0 then goto L404080;
  #L40407c.  v2:= 0I;
  #L40407e.  return v2;
  #L404080.  v2:= 1I;
  #L404082.  return v2;
}
procedure `java.lang.Class` `classOrNull`(`java.lang.ClassLoader` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lorg/mozilla/javascript/Kit;.classOrNull:(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L404178.  call temp:= `loadClass`(v0, v1) @signature `Ljava/lang/ClassLoader;.loadClass:(Ljava/lang/String;)Ljava/lang/Class;` @kind virtual;
  #L40417e.  v0:= temp @kind object;
  #L404180.  return v0 @kind object;
  #L404182.  v0:= 0I;
  #L404184.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L404178..L404180] goto L404182;
  catch `java.lang.SecurityException` @[L404178..L404180] goto L404182;
  catch `java.lang.LinkageError` @[L404178..L404180] goto L404182;
  catch `java.lang.IllegalArgumentException` @[L404178..L404180] goto L404182;
}
procedure `java.lang.Class` `classOrNull`(`java.lang.String` v0 @kind object) @signature `Lorg/mozilla/javascript/Kit;.classOrNull:(Ljava/lang/String;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4041b0.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L4041b6.  v0:= temp @kind object;
  #L4041b8.  return v0 @kind object;
  #L4041ba.  v0:= 0I;
  #L4041bc.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L4041b0..L4041b8] goto L4041ba;
  catch `java.lang.SecurityException` @[L4041b0..L4041b8] goto L4041ba;
  catch `java.lang.LinkageError` @[L4041b0..L4041b8] goto L4041ba;
  catch `java.lang.IllegalArgumentException` @[L4041b0..L4041b8] goto L4041ba;
}
procedure `java.lang.RuntimeException` `codeBug`() @signature `Lorg/mozilla/javascript/Kit;.codeBug:()Ljava/lang/RuntimeException;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L404468.  v0:= new `java.lang.IllegalStateException`;
  #L40446c.  v1:= "FAILED ASSERTION" @kind object;
  #L404470.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L404476.  v1:= `@@java.lang.System.err` @type ^`java.io.PrintStream` @kind object;
  #L40447a.  call `printStackTrace`(v0, v1) @signature `Ljava/lang/RuntimeException;.printStackTrace:(Ljava/io/PrintStream;)V` @kind virtual;
  #L404480.  throw v0;
}
procedure `java.lang.RuntimeException` `codeBug`(`java.lang.String` v2 @kind object) @signature `Lorg/mozilla/javascript/Kit;.codeBug:(Ljava/lang/String;)Ljava/lang/RuntimeException;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L404494.  v0:= new `java.lang.StringBuilder`;
  #L404498.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40449e.  v1:= "FAILED ASSERTION: " @kind object;
  #L4044a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4044a8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4044ae.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4044b4.  v2:= temp @kind object;
  #L4044b6.  v0:= new `java.lang.IllegalStateException`;
  #L4044ba.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4044c0.  v2:= `@@java.lang.System.err` @type ^`java.io.PrintStream` @kind object;
  #L4044c4.  call `printStackTrace`(v0, v2) @signature `Ljava/lang/RuntimeException;.printStackTrace:(Ljava/io/PrintStream;)V` @kind virtual;
  #L4044ca.  throw v0;
}
procedure `java.lang.Object` `getListener`(`java.lang.Object` v3 @kind object, `int` v4 ) @signature `Lorg/mozilla/javascript/Kit;.getListener:(Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40426c.  v0:= 2I;
  #L40426e.  v1:= 0I;
  #L404270.  if v4 != 0 then goto L4042a2;
  #L404274.  if v3 != 0 then goto L40427a;
  #L404278.  return v1 @kind object;
  #L40427a.  v4:= instanceof @variable v3 @type ^`java.lang.Object`[] @kind boolean;
  #L40427e.  if v4 != 0 then goto L404284;
  #L404282.  return v3 @kind object;
  #L404284.  v3:= (`java.lang.Object`[]) v3 @kind object;
  #L404288.  v4:= length @variable v3;
  #L40428a.  if v4 < v0 then goto L404296;
  #L40428e.  v4:= 0I;
  #L404290.  v3:= v3[v4] @kind object;
  #L404294.  return v3 @kind object;
  #L404296.  v3:= new `java.lang.IllegalArgumentException`;
  #L40429a.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L4042a0.  throw v3;
  #L4042a2.  v2:= 1I;
  #L4042a4.  if v4 != v2 then goto L4042cc;
  #L4042a8.  v4:= instanceof @variable v3 @type ^`java.lang.Object`[] @kind boolean;
  #L4042ac.  if v4 != 0 then goto L4042c2;
  #L4042b0.  if v3 == 0 then goto L4042b6;
  #L4042b4.  return v1 @kind object;
  #L4042b6.  v3:= new `java.lang.IllegalArgumentException`;
  #L4042ba.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L4042c0.  throw v3;
  #L4042c2.  v3:= (`java.lang.Object`[]) v3 @kind object;
  #L4042c6.  v3:= v3[v2] @kind object;
  #L4042ca.  return v3 @kind object;
  #L4042cc.  v3:= (`java.lang.Object`[]) v3 @kind object;
  #L4042d0.  v2:= length @variable v3;
  #L4042d2.  if v2 < v0 then goto L4042e2;
  #L4042d6.  if v4 != v2 then goto L4042dc;
  #L4042da.  return v1 @kind object;
  #L4042dc.  v3:= v3[v4] @kind object;
  #L4042e0.  return v3 @kind object;
  #L4042e2.  v3:= new `java.lang.IllegalArgumentException`;
  #L4042e6.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L4042ec.  throw v3;
}
procedure `java.lang.RuntimeException` `initCause`(`java.lang.RuntimeException` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lorg/mozilla/javascript/Kit;.initCause:(Ljava/lang/RuntimeException;Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4044dc.  v0:= `@@org.mozilla.javascript.Kit.a` @type ^`java.lang.reflect.Method` @kind object;
  #L4044e0.  if v0 == 0 then goto L4044f6;
  #L4044e4.  v1:= 1I;
  #L4044e6.  v1:= new `java.lang.Object`[v1];
  #L4044ea.  v2:= 0I;
  #L4044ec.  v1[v2]:= v4 @kind object;
  #L4044f0.  call temp:= `invoke`(v0, v3, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4044f6.  return v3 @kind object;
  catch `java.lang.Exception` @[L4044f0..L4044f6] goto L4044f6;
}
procedure `java.lang.Object` `makeHashKeyFromPair`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/mozilla/javascript/Kit;.makeHashKeyFromPair:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L404340.  if v1 == 0 then goto L404360;
  #L404344.  if v2 == 0 then goto L404354;
  #L404348.  v0:= new `org.mozilla.javascript.Kit$a`;
  #L40434c.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/Kit$a;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L404352.  return v0 @kind object;
  #L404354.  v1:= new `java.lang.IllegalArgumentException`;
  #L404358.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L40435e.  throw v1;
  #L404360.  v1:= new `java.lang.IllegalArgumentException`;
  #L404364.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L40436a.  throw v1;
}
procedure `java.lang.String` `readReader`(`java.io.Reader` v4 @kind object) @signature `Lorg/mozilla/javascript/Kit;.readReader:(Ljava/io/Reader;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L404518.  v0:= 512I;
  #L40451c.  v0:= new `char`[v0];
  #L404520.  v1:= 0I;
  #L404522.  v2:= 0I;
  #L404524.  v3:= length @variable v0;
  #L404526.  v3:= v3 - v2 @kind int;
  #L404528.  call temp:= `read`(v4, v0, v2, v3) @signature `Ljava/io/Reader;.read:([CII)I` @kind virtual;
  #L40452e.  v3:= temp;
  #L404530.  if v3 >= 0 then goto L404540;
  #L404534.  v4:= new `java.lang.String`;
  #L404538.  call `<init>`(v4, v0, v1, v2) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L40453e.  return v4 @kind object;
  #L404540.  v2:= v2 + v3 @kind int;
  #L404542.  v3:= length @variable v0;
  #L404544.  if v2 != v3 then goto L404524;
  #L404548.  v3:= length @variable v0;
  #L40454a.  v3:= v3 * 2;
  #L40454e.  v3:= new `char`[v3];
  #L404552.  call `arraycopy`(v0, v1, v3, v1, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L404558.  v0:= v3 @kind object;
  #L40455a.  goto L404524;
}
procedure `byte`[] `readStream`(`java.io.InputStream` v3 @kind object, `int` v4 ) @signature `Lorg/mozilla/javascript/Kit;.readStream:(Ljava/io/InputStream;I)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L404094.  if v4 <= 0 then goto L4040e0;
  #L404098.  v4:= new `byte`[v4];
  #L40409c.  v0:= 0I;
  #L40409e.  v1:= 0I;
  #L4040a0.  v2:= length @variable v4;
  #L4040a2.  v2:= v2 - v1 @kind int;
  #L4040a4.  call temp:= `read`(v3, v4, v1, v2) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L4040aa.  v2:= temp;
  #L4040ac.  if v2 >= 0 then goto L4040c4;
  #L4040b0.  v3:= length @variable v4;
  #L4040b2.  if v1 == v3 then goto L4040c2;
  #L4040b6.  v3:= new `byte`[v1];
  #L4040ba.  call `arraycopy`(v4, v0, v3, v0, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4040c0.  v4:= v3 @kind object;
  #L4040c2.  return v4 @kind object;
  #L4040c4.  v1:= v1 + v2 @kind int;
  #L4040c6.  v2:= length @variable v4;
  #L4040c8.  if v1 != v2 then goto L4040a0;
  #L4040cc.  v2:= length @variable v4;
  #L4040ce.  v2:= v2 * 2;
  #L4040d2.  v2:= new `byte`[v2];
  #L4040d6.  call `arraycopy`(v4, v0, v2, v0, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L4040dc.  v4:= v2 @kind object;
  #L4040de.  goto L4040a0;
  #L4040e0.  v3:= new `java.lang.IllegalArgumentException`;
  #L4040e4.  v0:= new `java.lang.StringBuilder`;
  #L4040e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4040ee.  v1:= "Bad initialBufferCapacity: " @kind object;
  #L4040f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4040f8.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4040fe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L404104.  v4:= temp @kind object;
  #L404106.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40410c.  throw v3;
}
procedure `java.lang.Object` `removeListener`(`java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lorg/mozilla/javascript/Kit;.removeListener:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4043b4.  if v6 == 0 then goto L40444c;
  #L4043b8.  v0:= instanceof @variable v6 @type ^`java.lang.Object`[] @kind boolean;
  #L4043bc.  if v0 != 0 then goto L404440;
  #L4043c0.  if v5 != v6 then goto L4043c8;
  #L4043c4.  v5:= 0I;
  #L4043c6.  goto L40443e;
  #L4043c8.  v0:= instanceof @variable v5 @type ^`java.lang.Object`[] @kind boolean;
  #L4043cc.  if v0 == 0 then goto L40443e;
  #L4043d0.  v0:= v5 @kind object;
  #L4043d2.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L4043d6.  v1:= length @variable v0;
  #L4043d8.  v2:= 2I;
  #L4043da.  if v1 < v2 then goto L404432;
  #L4043de.  v3:= 0I;
  #L4043e0.  if v1 != v2 then goto L404402;
  #L4043e4.  v1:= 1I;
  #L4043e6.  v2:= v0[v1] @kind object;
  #L4043ea.  if v2 != v6 then goto L4043f4;
  #L4043ee.  v5:= v0[v3] @kind object;
  #L4043f2.  goto L40443e;
  #L4043f4.  v2:= v0[v3] @kind object;
  #L4043f8.  if v2 != v6 then goto L40443e;
  #L4043fc.  v5:= v0[v1] @kind object;
  #L404400.  goto L40443e;
  #L404402.  v2:= v1;
  #L404404.  v2:= v2 + -1;
  #L404408.  v4:= v0[v2] @kind object;
  #L40440c.  if v4 != v6 then goto L40442c;
  #L404410.  v5:= v1 + -1;
  #L404414.  v5:= new `java.lang.Object`[v5];
  #L404418.  call `arraycopy`(v0, v3, v5, v3, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L40441e.  v6:= v2 + 1;
  #L404422.  v1:= v1 - v6 @kind int;
  #L404424.  call `arraycopy`(v0, v6, v5, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L40442a.  goto L40443e;
  #L40442c.  if v2 != 0 then goto L404404;
  #L404430.  goto L40443e;
  #L404432.  v5:= new `java.lang.IllegalArgumentException`;
  #L404436.  call `<init>`(v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L40443c.  throw v5;
  #L40443e.  return v5 @kind object;
  #L404440.  v5:= new `java.lang.IllegalArgumentException`;
  #L404444.  call `<init>`(v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L40444a.  throw v5;
  #L40444c.  v5:= new `java.lang.IllegalArgumentException`;
  #L404450.  call `<init>`(v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L404456.  throw v5;
}
procedure `int` `xDigitToInt`(`int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/Kit;.xDigitToInt:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L404120.  v0:= 57I;
  #L404124.  if v1 > v0 then goto L404132;
  #L404128.  v1:= v1 + -48;
  #L40412c.  if v1 < 0 then goto L404164;
  #L404130.  goto L40415c;
  #L404132.  v0:= 70I;
  #L404136.  if v1 > v0 then goto L404148;
  #L40413a.  v0:= 65I;
  #L40413e.  if v0 > v1 then goto L404164;
  #L404142.  v1:= v1 + -55;
  #L404146.  goto L40415c;
  #L404148.  v0:= 102I;
  #L40414c.  if v1 > v0 then goto L404164;
  #L404150.  v0:= 97I;
  #L404154.  if v0 > v1 then goto L404164;
  #L404158.  v1:= v1 + -87;
  #L40415c.  v2:= v2 ^< 4;
  #L404160.  v1:= v1 ^| v2 @kind int;
  #L404162.  return v1;
  #L404164.  v1:= -1I;
  #L404166.  return v1;
}
