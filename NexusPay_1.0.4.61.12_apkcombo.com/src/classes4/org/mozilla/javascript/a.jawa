record `org.mozilla.javascript.a` @kind class @AccessFlag FINAL extends `org.mozilla.javascript.IdScriptableObject` @kind class {
  `java.lang.Object` `org.mozilla.javascript.a.j` @AccessFlag PRIVATE;
  `java.lang.Object` `org.mozilla.javascript.a.k` @AccessFlag PRIVATE;
  `java.lang.Object` `org.mozilla.javascript.a.l` @AccessFlag PRIVATE;
  `java.lang.Object` `org.mozilla.javascript.a.m` @AccessFlag PRIVATE;
  `org.mozilla.javascript.NativeCall` `org.mozilla.javascript.a.n` @AccessFlag PRIVATE;
  `java.lang.Object`[] `org.mozilla.javascript.a.o` @AccessFlag PRIVATE;
}
global `long` `@@org.mozilla.javascript.a.serialVersionUID` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`org.mozilla.javascript.a` v2 @kind this, `org.mozilla.javascript.NativeCall` v3 @kind object) @signature `Lorg/mozilla/javascript/a;.<init>:(Lorg/mozilla/javascript/NativeCall;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3ede60.  call `<init>`(v2) @signature `Lorg/mozilla/javascript/IdScriptableObject;.<init>:()V` @kind direct;
  #L3ede66.  v2.`org.mozilla.javascript.a.n` @type ^`org.mozilla.javascript.NativeCall` := v3 @kind object;
  #L3ede6a.  call temp:= `getParentScope`(v3) @signature `Lorg/mozilla/javascript/ScriptableObject;.getParentScope:()Lorg/mozilla/javascript/Scriptable;` @kind virtual;
  #L3ede70.  v0:= temp @kind object;
  #L3ede72.  call `setParentScope`(v2, v0) @signature `Lorg/mozilla/javascript/ScriptableObject;.setParentScope:(Lorg/mozilla/javascript/Scriptable;)V` @kind virtual;
  #L3ede78.  call temp:= `getObjectPrototype`(v0) @signature `Lorg/mozilla/javascript/ScriptableObject;.getObjectPrototype:(Lorg/mozilla/javascript/Scriptable;)Lorg/mozilla/javascript/Scriptable;` @kind static;
  #L3ede7e.  v1:= temp @kind object;
  #L3ede80.  call `setPrototype`(v2, v1) @signature `Lorg/mozilla/javascript/ScriptableObject;.setPrototype:(Lorg/mozilla/javascript/Scriptable;)V` @kind virtual;
  #L3ede86.  v1:= v3.`org.mozilla.javascript.NativeCall.k` @type ^`java.lang.Object`[] @kind object;
  #L3ede8a.  v2.`org.mozilla.javascript.a.o` @type ^`java.lang.Object`[] := v1 @kind object;
  #L3ede8e.  v1:= length @variable v1;
  #L3ede90.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ede96.  v1:= temp @kind object;
  #L3ede98.  v2.`org.mozilla.javascript.a.l` @type ^`java.lang.Object` := v1 @kind object;
  #L3ede9c.  v3:= v3.`org.mozilla.javascript.NativeCall.j` @type ^`org.mozilla.javascript.NativeFunction` @kind object;
  #L3edea0.  v2.`org.mozilla.javascript.a.k` @type ^`java.lang.Object` := v3 @kind object;
  #L3edea4.  call temp:= `getTopLevelScope`(v0) @signature `Lorg/mozilla/javascript/ScriptableObject;.getTopLevelScope:(Lorg/mozilla/javascript/Scriptable;)Lorg/mozilla/javascript/Scriptable;` @kind static;
  #L3edeaa.  v0:= temp @kind object;
  #L3edeac.  v1:= "Object" @kind object;
  #L3edeb0.  call temp:= `getProperty`(v0, v1) @signature `Lorg/mozilla/javascript/ScriptableObject;.getProperty:(Lorg/mozilla/javascript/Scriptable;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3edeb6.  v0:= temp @kind object;
  #L3edeb8.  v2.`org.mozilla.javascript.a.m` @type ^`java.lang.Object` := v0 @kind object;
  #L3edebc.  call temp:= `getLanguageVersion`(v3) @signature `Lorg/mozilla/javascript/NativeFunction;.getLanguageVersion:()I` @kind virtual;
  #L3edec2.  v3:= temp;
  #L3edec4.  v0:= 130I;
  #L3edec8.  if v3 > v0 then goto L3eded8;
  #L3edecc.  if v3 == 0 then goto L3eded8;
  #L3eded0.  v3:= 0I;
  #L3eded2.  v2.`org.mozilla.javascript.a.j` @type ^`java.lang.Object` := v3 @kind object;
  #L3eded6.  goto L3edee0;
  #L3eded8.  v3:= `@@org.mozilla.javascript.Scriptable.NOT_FOUND` @type ^`java.lang.Object` @kind object;
  #L3ededc.  v2.`org.mozilla.javascript.a.j` @type ^`java.lang.Object` := v3 @kind object;
  #L3edee0.  return @kind void;
}
procedure `java.lang.Object` `A`(`org.mozilla.javascript.a` v2 @kind this, `int` v3 ) @signature `Lorg/mozilla/javascript/a;.A:(I)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3edb6c.  if v3 < 0 then goto L3edb82;
  #L3edb70.  v0:= v2.`org.mozilla.javascript.a.o` @type ^`java.lang.Object`[] @kind object;
  #L3edb74.  v1:= length @variable v0;
  #L3edb76.  if v1 > v3 then goto L3edb7c;
  #L3edb7a.  goto L3edb82;
  #L3edb7c.  v3:= v0[v3] @kind object;
  #L3edb80.  return v3 @kind object;
  #L3edb82.  v3:= `@@org.mozilla.javascript.Scriptable.NOT_FOUND` @type ^`java.lang.Object` @kind object;
  #L3edb86.  return v3 @kind object;
}
procedure `java.lang.Object` `B`(`org.mozilla.javascript.a` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/a;.B:(I)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3edbdc.  v0:= v1.`org.mozilla.javascript.a.n` @type ^`org.mozilla.javascript.NativeCall` @kind object;
  #L3edbe0.  v0:= v0.`org.mozilla.javascript.NativeCall.j` @type ^`org.mozilla.javascript.NativeFunction` @kind object;
  #L3edbe4.  call temp:= `getParamOrVarName`(v0, v2) @signature `Lorg/mozilla/javascript/NativeFunction;.getParamOrVarName:(I)Ljava/lang/String;` @kind virtual;
  #L3edbea.  v2:= temp @kind object;
  #L3edbec.  v0:= v1.`org.mozilla.javascript.a.n` @type ^`org.mozilla.javascript.NativeCall` @kind object;
  #L3edbf0.  call temp:= `get`(v0, v2, v0) @signature `Lorg/mozilla/javascript/IdScriptableObject;.get:(Ljava/lang/String;Lorg/mozilla/javascript/Scriptable;)Ljava/lang/Object;` @kind virtual;
  #L3edbf6.  v2:= temp @kind object;
  #L3edbf8.  return v2 @kind object;
}
procedure `void` `C`(`org.mozilla.javascript.a` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lorg/mozilla/javascript/a;.C:(ILjava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3edfe0.  v0:= v1.`org.mozilla.javascript.a.n` @type ^`org.mozilla.javascript.NativeCall` @kind object;
  #L3edfe4.  v0:= v0.`org.mozilla.javascript.NativeCall.j` @type ^`org.mozilla.javascript.NativeFunction` @kind object;
  #L3edfe8.  call temp:= `getParamOrVarName`(v0, v2) @signature `Lorg/mozilla/javascript/NativeFunction;.getParamOrVarName:(I)Ljava/lang/String;` @kind virtual;
  #L3edfee.  v2:= temp @kind object;
  #L3edff0.  v0:= v1.`org.mozilla.javascript.a.n` @type ^`org.mozilla.javascript.NativeCall` @kind object;
  #L3edff4.  call `put`(v0, v2, v0, v3) @signature `Lorg/mozilla/javascript/IdScriptableObject;.put:(Ljava/lang/String;Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)V` @kind virtual;
  #L3edffa.  return @kind void;
}
procedure `void` `D`(`org.mozilla.javascript.a` v2 @kind this, `int` v3 ) @signature `Lorg/mozilla/javascript/a;.D:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3ee00c.  @monitorenter v2
  #L3ee00e.  v0:= v2.`org.mozilla.javascript.a.o` @type ^`java.lang.Object`[] @kind object;
  #L3ee012.  v0:= v0[v3] @kind object;
  #L3ee016.  v1:= `@@org.mozilla.javascript.Scriptable.NOT_FOUND` @type ^`java.lang.Object` @kind object;
  #L3ee01a.  if v0 == v1 then goto L3ee04e;
  #L3ee01e.  v0:= v2.`org.mozilla.javascript.a.o` @type ^`java.lang.Object`[] @kind object;
  #L3ee022.  v1:= v2.`org.mozilla.javascript.a.n` @type ^`org.mozilla.javascript.NativeCall` @kind object;
  #L3ee026.  v1:= v1.`org.mozilla.javascript.NativeCall.k` @type ^`java.lang.Object`[] @kind object;
  #L3ee02a.  if v0 != v1 then goto L3ee042;
  #L3ee02e.  v0:= v2.`org.mozilla.javascript.a.o` @type ^`java.lang.Object`[] @kind object;
  #L3ee032.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3ee038.  v0:= temp @kind object;
  #L3ee03a.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L3ee03e.  v2.`org.mozilla.javascript.a.o` @type ^`java.lang.Object`[] := v0 @kind object;
  #L3ee042.  v0:= v2.`org.mozilla.javascript.a.o` @type ^`java.lang.Object`[] @kind object;
  #L3ee046.  v1:= `@@org.mozilla.javascript.Scriptable.NOT_FOUND` @type ^`java.lang.Object` @kind object;
  #L3ee04a.  v0[v3]:= v1 @kind object;
  #L3ee04e.  @monitorexit v2
  #L3ee050.  return @kind void;
  #L3ee052.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ee054.  @monitorexit v2
  #L3ee056.  throw v3;
  catch `java.lang.Throwable` @[L3ee00e..L3ee056] goto L3ee052;
}
procedure `void` `E`(`org.mozilla.javascript.a` v2 @kind this, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lorg/mozilla/javascript/a;.E:(ILjava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3ee074.  call temp:= `F`(v2, v3) @signature `Lorg/mozilla/javascript/a;.F:(I)Z` @kind direct;
  #L3ee07a.  v0:= temp;
  #L3ee07c.  if v0 == 0 then goto L3ee086;
  #L3ee080.  call `C`(v2, v3, v4) @signature `Lorg/mozilla/javascript/a;.C:(ILjava/lang/Object;)V` @kind direct;
  #L3ee086.  @monitorenter v2
  #L3ee088.  v0:= v2.`org.mozilla.javascript.a.o` @type ^`java.lang.Object`[] @kind object;
  #L3ee08c.  v1:= v2.`org.mozilla.javascript.a.n` @type ^`org.mozilla.javascript.NativeCall` @kind object;
  #L3ee090.  v1:= v1.`org.mozilla.javascript.NativeCall.k` @type ^`java.lang.Object`[] @kind object;
  #L3ee094.  if v0 != v1 then goto L3ee0ac;
  #L3ee098.  v0:= v2.`org.mozilla.javascript.a.o` @type ^`java.lang.Object`[] @kind object;
  #L3ee09c.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3ee0a2.  v0:= temp @kind object;
  #L3ee0a4.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L3ee0a8.  v2.`org.mozilla.javascript.a.o` @type ^`java.lang.Object`[] := v0 @kind object;
  #L3ee0ac.  v0:= v2.`org.mozilla.javascript.a.o` @type ^`java.lang.Object`[] @kind object;
  #L3ee0b0.  v0[v3]:= v4 @kind object;
  #L3ee0b4.  @monitorexit v2
  #L3ee0b6.  return @kind void;
  #L3ee0b8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ee0ba.  @monitorexit v2
  #L3ee0bc.  throw v3;
  catch `java.lang.Throwable` @[L3ee088..L3ee0bc] goto L3ee0b8;
}
procedure `boolean` `F`(`org.mozilla.javascript.a` v6 @kind this, `int` v7 ) @signature `Lorg/mozilla/javascript/a;.F:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3eda34.  v0:= v6.`org.mozilla.javascript.a.n` @type ^`org.mozilla.javascript.NativeCall` @kind object;
  #L3eda38.  v0:= v0.`org.mozilla.javascript.NativeCall.j` @type ^`org.mozilla.javascript.NativeFunction` @kind object;
  #L3eda3c.  call temp:= `getParamCount`(v0) @signature `Lorg/mozilla/javascript/NativeFunction;.getParamCount:()I` @kind virtual;
  #L3eda42.  v1:= temp;
  #L3eda44.  v2:= 0I;
  #L3eda46.  if v7 >= v1 then goto L3eda80;
  #L3eda4a.  v3:= v1 + -1;
  #L3eda4e.  v4:= 1I;
  #L3eda50.  if v7 >= v3 then goto L3eda7e;
  #L3eda54.  call temp:= `getParamOrVarName`(v0, v7) @signature `Lorg/mozilla/javascript/NativeFunction;.getParamOrVarName:(I)Ljava/lang/String;` @kind virtual;
  #L3eda5a.  v3:= temp @kind object;
  #L3eda5c.  v7:= v7 + v4 @kind int;
  #L3eda5e.  if v7 >= v1 then goto L3eda7e;
  #L3eda62.  call temp:= `getParamOrVarName`(v0, v7) @signature `Lorg/mozilla/javascript/NativeFunction;.getParamOrVarName:(I)Ljava/lang/String;` @kind virtual;
  #L3eda68.  v5:= temp @kind object;
  #L3eda6a.  call temp:= `equals`(v3, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3eda70.  v5:= temp;
  #L3eda72.  if v5 == 0 then goto L3eda78;
  #L3eda76.  return v2;
  #L3eda78.  v7:= v7 + 1;
  #L3eda7c.  goto L3eda5e;
  #L3eda7e.  return v4;
  #L3eda80.  return v2;
}
procedure `void` `defineOwnProperty`(`org.mozilla.javascript.a` v3 @kind this, `org.mozilla.javascript.Context` v4 @kind object, `java.lang.Object` v5 @kind object, `org.mozilla.javascript.ScriptableObject` v6 @kind object, `boolean` v7 ) @signature `Lorg/mozilla/javascript/a;.defineOwnProperty:(Lorg/mozilla/javascript/Context;Ljava/lang/Object;Lorg/mozilla/javascript/ScriptableObject;Z)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L3edef4.  call `defineOwnProperty`(v3, v4, v5, v6, v7) @signature `Lorg/mozilla/javascript/ScriptableObject;.defineOwnProperty:(Lorg/mozilla/javascript/Context;Ljava/lang/Object;Lorg/mozilla/javascript/ScriptableObject;Z)V` @kind super;
  #L3edefa.  call temp:= `toNumber`(v5) @signature `Lorg/mozilla/javascript/ScriptRuntime;.toNumber:(Ljava/lang/Object;)D` @kind static;
  #L3edf00.  v4:= temp @kind wide;
  #L3edf02.  v7:= (`int`) v4 @kind d2i;
  #L3edf04.  v0:= (`double`) v7 @kind i2d;
  #L3edf06.  v2:= dcmpl(v4, v0);
  #L3edf0a.  if v2 == 0 then goto L3edf10;
  #L3edf0e.  return @kind void;
  #L3edf10.  call temp:= `A`(v3, v7) @signature `Lorg/mozilla/javascript/a;.A:(I)Ljava/lang/Object;` @kind direct;
  #L3edf16.  v4:= temp @kind object;
  #L3edf18.  v5:= `@@org.mozilla.javascript.Scriptable.NOT_FOUND` @type ^`java.lang.Object` @kind object;
  #L3edf1c.  if v4 != v5 then goto L3edf22;
  #L3edf20.  return @kind void;
  #L3edf22.  call temp:= `isAccessorDescriptor`(v3, v6) @signature `Lorg/mozilla/javascript/ScriptableObject;.isAccessorDescriptor:(Lorg/mozilla/javascript/ScriptableObject;)Z` @kind virtual;
  #L3edf28.  v4:= temp;
  #L3edf2a.  if v4 == 0 then goto L3edf36;
  #L3edf2e.  call `D`(v3, v7) @signature `Lorg/mozilla/javascript/a;.D:(I)V` @kind direct;
  #L3edf34.  return @kind void;
  #L3edf36.  v4:= "value" @kind object;
  #L3edf3a.  call temp:= `getProperty`(v6, v4) @signature `Lorg/mozilla/javascript/ScriptableObject;.getProperty:(Lorg/mozilla/javascript/Scriptable;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3edf40.  v4:= temp @kind object;
  #L3edf42.  v5:= `@@org.mozilla.javascript.Scriptable.NOT_FOUND` @type ^`java.lang.Object` @kind object;
  #L3edf46.  if v4 != v5 then goto L3edf4c;
  #L3edf4a.  return @kind void;
  #L3edf4c.  call `E`(v3, v7, v4) @signature `Lorg/mozilla/javascript/a;.E:(ILjava/lang/Object;)V` @kind direct;
  #L3edf52.  v4:= "writable" @kind object;
  #L3edf56.  call temp:= `getProperty`(v6, v4) @signature `Lorg/mozilla/javascript/ScriptableObject;.getProperty:(Lorg/mozilla/javascript/Scriptable;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3edf5c.  v4:= temp @kind object;
  #L3edf5e.  call temp:= `isFalse`(v4) @signature `Lorg/mozilla/javascript/ScriptableObject;.isFalse:(Ljava/lang/Object;)Z` @kind static;
  #L3edf64.  v4:= temp;
  #L3edf66.  if v4 == 0 then goto L3edf70;
  #L3edf6a.  call `D`(v3, v7) @signature `Lorg/mozilla/javascript/a;.D:(I)V` @kind direct;
  #L3edf70.  return @kind void;
}
procedure `void` `delete`(`org.mozilla.javascript.a` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/a;.delete:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3edf84.  if v2 < 0 then goto L3edf98;
  #L3edf88.  v0:= v1.`org.mozilla.javascript.a.o` @type ^`java.lang.Object`[] @kind object;
  #L3edf8c.  v0:= length @variable v0;
  #L3edf8e.  if v2 >= v0 then goto L3edf98;
  #L3edf92.  call `D`(v1, v2) @signature `Lorg/mozilla/javascript/a;.D:(I)V` @kind direct;
  #L3edf98.  call `delete`(v1, v2) @signature `Lorg/mozilla/javascript/ScriptableObject;.delete:(I)V` @kind super;
  #L3edf9e.  return @kind void;
}
procedure `int` `findInstanceIdInfo`(`org.mozilla.javascript.a` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lorg/mozilla/javascript/a;.findInstanceIdInfo:(Ljava/lang/String;)I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3eda94.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3eda9a.  v0:= temp;
  #L3eda9c.  v1:= 3I;
  #L3eda9e.  v2:= 1I;
  #L3edaa0.  v3:= 4I;
  #L3edaa2.  v4:= 0I;
  #L3edaa4.  v5:= 2I;
  #L3edaa6.  v6:= 6I;
  #L3edaa8.  if v0 != v6 then goto L3edae6;
  #L3edaac.  v0:= 5I;
  #L3edaae.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3edab4.  v0:= temp;
  #L3edab6.  v6:= 101I;
  #L3edaba.  if v0 != v6 then goto L3edac6;
  #L3edabe.  v0:= "callee" @kind object;
  #L3edac2.  v6:= 1I;
  #L3edac4.  goto L3edafa;
  #L3edac6.  v6:= 104I;
  #L3edaca.  if v0 != v6 then goto L3edad6;
  #L3edace.  v0:= "length" @kind object;
  #L3edad2.  v6:= 2I;
  #L3edad4.  goto L3edafa;
  #L3edad6.  v6:= 114I;
  #L3edada.  if v0 != v6 then goto L3edaf6;
  #L3edade.  v0:= "caller" @kind object;
  #L3edae2.  v6:= 3I;
  #L3edae4.  goto L3edafa;
  #L3edae6.  v6:= 11I;
  #L3edaea.  if v0 != v6 then goto L3edaf6;
  #L3edaee.  v0:= "constructor" @kind object;
  #L3edaf2.  v6:= 4I;
  #L3edaf4.  goto L3edafa;
  #L3edaf6.  v0:= 0I;
  #L3edaf8.  v6:= 0I;
  #L3edafa.  if v0 == 0 then goto L3edb10;
  #L3edafe.  if v0 == v8 then goto L3edb10;
  #L3edb02.  call temp:= `equals`(v0, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3edb08.  v0:= temp;
  #L3edb0a.  if v0 != 0 then goto L3edb10;
  #L3edb0e.  goto L3edb12;
  #L3edb10.  v4:= v6;
  #L3edb12.  if v4 != 0 then goto L3edb20;
  #L3edb16.  call temp:= `findInstanceIdInfo`(v7, v8) @signature `Lorg/mozilla/javascript/IdScriptableObject;.findInstanceIdInfo:(Ljava/lang/String;)I` @kind super;
  #L3edb1c.  v8:= temp;
  #L3edb1e.  return v8;
  #L3edb20.  if v4 == v2 then goto L3edb3e;
  #L3edb24.  if v4 == v5 then goto L3edb3e;
  #L3edb28.  if v4 == v1 then goto L3edb3e;
  #L3edb2c.  if v4 != v3 then goto L3edb32;
  #L3edb30.  goto L3edb3e;
  #L3edb32.  v8:= new `java.lang.IllegalStateException`;
  #L3edb36.  call `<init>`(v8) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3edb3c.  throw v8;
  #L3edb3e.  call temp:= `instanceIdInfo`(v5, v4) @signature `Lorg/mozilla/javascript/IdScriptableObject;.instanceIdInfo:(II)I` @kind static;
  #L3edb44.  v8:= temp;
  #L3edb46.  return v8;
}
procedure `java.lang.Object` `get`(`org.mozilla.javascript.a` v2 @kind this, `int` v3 , `org.mozilla.javascript.Scriptable` v4 @kind object) @signature `Lorg/mozilla/javascript/a;.get:(ILorg/mozilla/javascript/Scriptable;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3edb98.  call temp:= `A`(v2, v3) @signature `Lorg/mozilla/javascript/a;.A:(I)Ljava/lang/Object;` @kind direct;
  #L3edb9e.  v0:= temp @kind object;
  #L3edba0.  v1:= `@@org.mozilla.javascript.Scriptable.NOT_FOUND` @type ^`java.lang.Object` @kind object;
  #L3edba4.  if v0 != v1 then goto L3edbb2;
  #L3edba8.  call temp:= `get`(v2, v3, v4) @signature `Lorg/mozilla/javascript/ScriptableObject;.get:(ILorg/mozilla/javascript/Scriptable;)Ljava/lang/Object;` @kind super;
  #L3edbae.  v3:= temp @kind object;
  #L3edbb0.  return v3 @kind object;
  #L3edbb2.  call temp:= `F`(v2, v3) @signature `Lorg/mozilla/javascript/a;.F:(I)Z` @kind direct;
  #L3edbb8.  v4:= temp;
  #L3edbba.  if v4 == 0 then goto L3edbc8;
  #L3edbbe.  call temp:= `B`(v2, v3) @signature `Lorg/mozilla/javascript/a;.B:(I)Ljava/lang/Object;` @kind direct;
  #L3edbc4.  v3:= temp @kind object;
  #L3edbc6.  return v3 @kind object;
  #L3edbc8.  return v0 @kind object;
}
procedure `java.lang.String` `getClassName`(`org.mozilla.javascript.a` v1 @kind this) @signature `Lorg/mozilla/javascript/a;.getClassName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3edd6c.  v0:= "Arguments" @kind object;
  #L3edd70.  return v0 @kind object;
}
procedure `java.lang.String` `getInstanceIdName`(`org.mozilla.javascript.a` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/a;.getInstanceIdName:(I)Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3edd84.  v0:= 1I;
  #L3edd86.  if v2 == v0 then goto L3eddb2;
  #L3edd8a.  v0:= 2I;
  #L3edd8c.  if v2 == v0 then goto L3eddac;
  #L3edd90.  v0:= 3I;
  #L3edd92.  if v2 == v0 then goto L3edda6;
  #L3edd96.  v0:= 4I;
  #L3edd98.  if v2 == v0 then goto L3edda0;
  #L3edd9c.  v2:= 0I;
  #L3edd9e.  return v2 @kind object;
  #L3edda0.  v2:= "constructor" @kind object;
  #L3edda4.  return v2 @kind object;
  #L3edda6.  v2:= "caller" @kind object;
  #L3eddaa.  return v2 @kind object;
  #L3eddac.  v2:= "length" @kind object;
  #L3eddb0.  return v2 @kind object;
  #L3eddb2.  v2:= "callee" @kind object;
  #L3eddb6.  return v2 @kind object;
}
procedure `java.lang.Object` `getInstanceIdValue`(`org.mozilla.javascript.a` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/a;.getInstanceIdValue:(I)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3edc0c.  v0:= 1I;
  #L3edc0e.  if v2 == v0 then goto L3edc68;
  #L3edc12.  v0:= 2I;
  #L3edc14.  if v2 == v0 then goto L3edc62;
  #L3edc18.  v0:= 3I;
  #L3edc1a.  if v2 == v0 then goto L3edc34;
  #L3edc1e.  v0:= 4I;
  #L3edc20.  if v2 == v0 then goto L3edc2e;
  #L3edc24.  call temp:= `getInstanceIdValue`(v1, v2) @signature `Lorg/mozilla/javascript/IdScriptableObject;.getInstanceIdValue:(I)Ljava/lang/Object;` @kind super;
  #L3edc2a.  v2:= temp @kind object;
  #L3edc2c.  return v2 @kind object;
  #L3edc2e.  v2:= v1.`org.mozilla.javascript.a.m` @type ^`java.lang.Object` @kind object;
  #L3edc32.  return v2 @kind object;
  #L3edc34.  v2:= v1.`org.mozilla.javascript.a.j` @type ^`java.lang.Object` @kind object;
  #L3edc38.  v0:= `@@org.mozilla.javascript.UniqueTag.NULL_VALUE` @type ^`org.mozilla.javascript.UniqueTag` @kind object;
  #L3edc3c.  if v2 != v0 then goto L3edc44;
  #L3edc40.  v2:= 0I;
  #L3edc42.  goto L3edc60;
  #L3edc44.  if v2 != 0 then goto L3edc60;
  #L3edc48.  v0:= v1.`org.mozilla.javascript.a.n` @type ^`org.mozilla.javascript.NativeCall` @kind object;
  #L3edc4c.  v0:= v0.`org.mozilla.javascript.NativeCall.l` @type ^`org.mozilla.javascript.NativeCall` @kind object;
  #L3edc50.  if v0 == 0 then goto L3edc60;
  #L3edc54.  v2:= "arguments" @kind object;
  #L3edc58.  call temp:= `get`(v0, v2, v0) @signature `Lorg/mozilla/javascript/IdScriptableObject;.get:(Ljava/lang/String;Lorg/mozilla/javascript/Scriptable;)Ljava/lang/Object;` @kind virtual;
  #L3edc5e.  v2:= temp @kind object;
  #L3edc60.  return v2 @kind object;
  #L3edc62.  v2:= v1.`org.mozilla.javascript.a.l` @type ^`java.lang.Object` @kind object;
  #L3edc66.  return v2 @kind object;
  #L3edc68.  v2:= v1.`org.mozilla.javascript.a.k` @type ^`java.lang.Object` @kind object;
  #L3edc6c.  return v2 @kind object;
}
procedure `int` `getMaxInstanceId`(`org.mozilla.javascript.a` v1 @kind this) @signature `Lorg/mozilla/javascript/a;.getMaxInstanceId:()I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3edb58.  v0:= 4I;
  #L3edb5a.  return v0;
}
procedure `org.mozilla.javascript.ScriptableObject` `getOwnPropertyDescriptor`(`org.mozilla.javascript.a` v6 @kind this, `org.mozilla.javascript.Context` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lorg/mozilla/javascript/a;.getOwnPropertyDescriptor:(Lorg/mozilla/javascript/Context;Ljava/lang/Object;)Lorg/mozilla/javascript/ScriptableObject;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3eddc8.  call temp:= `toNumber`(v8) @signature `Lorg/mozilla/javascript/ScriptRuntime;.toNumber:(Ljava/lang/Object;)D` @kind static;
  #L3eddce.  v0:= temp @kind wide;
  #L3eddd0.  v2:= (`int`) v0 @kind d2i;
  #L3eddd2.  v3:= (`double`) v2 @kind i2d;
  #L3eddd4.  v5:= dcmpl(v0, v3);
  #L3eddd8.  if v5 == 0 then goto L3edde6;
  #L3edddc.  call temp:= `getOwnPropertyDescriptor`(v6, v7, v8) @signature `Lorg/mozilla/javascript/IdScriptableObject;.getOwnPropertyDescriptor:(Lorg/mozilla/javascript/Context;Ljava/lang/Object;)Lorg/mozilla/javascript/ScriptableObject;` @kind super;
  #L3edde2.  v7:= temp @kind object;
  #L3edde4.  return v7 @kind object;
  #L3edde6.  call temp:= `A`(v6, v2) @signature `Lorg/mozilla/javascript/a;.A:(I)Ljava/lang/Object;` @kind direct;
  #L3eddec.  v0:= temp @kind object;
  #L3eddee.  v1:= `@@org.mozilla.javascript.Scriptable.NOT_FOUND` @type ^`java.lang.Object` @kind object;
  #L3eddf2.  if v0 != v1 then goto L3ede00;
  #L3eddf6.  call temp:= `getOwnPropertyDescriptor`(v6, v7, v8) @signature `Lorg/mozilla/javascript/IdScriptableObject;.getOwnPropertyDescriptor:(Lorg/mozilla/javascript/Context;Ljava/lang/Object;)Lorg/mozilla/javascript/ScriptableObject;` @kind super;
  #L3eddfc.  v7:= temp @kind object;
  #L3eddfe.  return v7 @kind object;
  #L3ede00.  call temp:= `F`(v6, v2) @signature `Lorg/mozilla/javascript/a;.F:(I)Z` @kind direct;
  #L3ede06.  v1:= temp;
  #L3ede08.  if v1 == 0 then goto L3ede14;
  #L3ede0c.  call temp:= `B`(v6, v2) @signature `Lorg/mozilla/javascript/a;.B:(I)Ljava/lang/Object;` @kind direct;
  #L3ede12.  v0:= temp @kind object;
  #L3ede14.  call temp:= `has`(v6, v2, v6) @signature `Lorg/mozilla/javascript/ScriptableObject;.has:(ILorg/mozilla/javascript/Scriptable;)Z` @kind super;
  #L3ede1a.  v1:= temp;
  #L3ede1c.  if v1 == 0 then goto L3ede34;
  #L3ede20.  call temp:= `getOwnPropertyDescriptor`(v6, v7, v8) @signature `Lorg/mozilla/javascript/IdScriptableObject;.getOwnPropertyDescriptor:(Lorg/mozilla/javascript/Context;Ljava/lang/Object;)Lorg/mozilla/javascript/ScriptableObject;` @kind super;
  #L3ede26.  v7:= temp @kind object;
  #L3ede28.  v8:= "value" @kind object;
  #L3ede2c.  call `put`(v7, v8, v7, v0) @signature `Lorg/mozilla/javascript/ScriptableObject;.put:(Ljava/lang/String;Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)V` @kind virtual;
  #L3ede32.  return v7 @kind object;
  #L3ede34.  call temp:= `getParentScope`(v6) @signature `Lorg/mozilla/javascript/ScriptableObject;.getParentScope:()Lorg/mozilla/javascript/Scriptable;` @kind virtual;
  #L3ede3a.  v7:= temp @kind object;
  #L3ede3c.  if v7 != 0 then goto L3ede42;
  #L3ede40.  v7:= v6 @kind object;
  #L3ede42.  v8:= 0I;
  #L3ede44.  call temp:= `buildDataDescriptor`(v7, v0, v8) @signature `Lorg/mozilla/javascript/ScriptableObject;.buildDataDescriptor:(Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;I)Lorg/mozilla/javascript/ScriptableObject;` @kind static;
  #L3ede4a.  v7:= temp @kind object;
  #L3ede4c.  return v7 @kind object;
}
procedure `boolean` `has`(`org.mozilla.javascript.a` v2 @kind this, `int` v3 , `org.mozilla.javascript.Scriptable` v4 @kind object) @signature `Lorg/mozilla/javascript/a;.has:(ILorg/mozilla/javascript/Scriptable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eda04.  call temp:= `A`(v2, v3) @signature `Lorg/mozilla/javascript/a;.A:(I)Ljava/lang/Object;` @kind direct;
  #L3eda0a.  v0:= temp @kind object;
  #L3eda0c.  v1:= `@@org.mozilla.javascript.Scriptable.NOT_FOUND` @type ^`java.lang.Object` @kind object;
  #L3eda10.  if v0 == v1 then goto L3eda18;
  #L3eda14.  v3:= 1I;
  #L3eda16.  return v3;
  #L3eda18.  call temp:= `has`(v2, v3, v4) @signature `Lorg/mozilla/javascript/ScriptableObject;.has:(ILorg/mozilla/javascript/Scriptable;)Z` @kind super;
  #L3eda1e.  v3:= temp;
  #L3eda20.  return v3;
}
procedure `java.lang.Object`[] `p`(`org.mozilla.javascript.a` v9 @kind this, `boolean` v10 ) @signature `Lorg/mozilla/javascript/a;.p:(Z)[Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3edc80.  call temp:= `p`(v9, v10) @signature `Lorg/mozilla/javascript/IdScriptableObject;.p:(Z)[Ljava/lang/Object;` @kind super;
  #L3edc86.  v0:= temp @kind object;
  #L3edc88.  v1:= v9.`org.mozilla.javascript.a.o` @type ^`java.lang.Object`[] @kind object;
  #L3edc8c.  v2:= length @variable v1;
  #L3edc8e.  if v2 == 0 then goto L3edd58;
  #L3edc92.  v2:= length @variable v1;
  #L3edc94.  v3:= new `boolean`[v2];
  #L3edc98.  v1:= length @variable v1;
  #L3edc9a.  v4:= 0I;
  #L3edc9c.  v5:= 0I;
  #L3edc9e.  v6:= length @variable v0;
  #L3edca0.  v7:= 1I;
  #L3edca2.  if v5 == v6 then goto L3edce2;
  #L3edca6.  v6:= v0[v5] @kind object;
  #L3edcaa.  v8:= instanceof @variable v6 @type ^`java.lang.Integer` @kind boolean;
  #L3edcae.  if v8 == 0 then goto L3edcdc;
  #L3edcb2.  v6:= (`java.lang.Integer`) v6 @kind object;
  #L3edcb6.  call temp:= `intValue`(v6) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3edcbc.  v6:= temp;
  #L3edcbe.  if v6 < 0 then goto L3edcdc;
  #L3edcc2.  v8:= v9.`org.mozilla.javascript.a.o` @type ^`java.lang.Object`[] @kind object;
  #L3edcc6.  v8:= length @variable v8;
  #L3edcc8.  if v6 >= v8 then goto L3edcdc;
  #L3edccc.  v8:= v3[v6] @kind boolean;
  #L3edcd0.  if v8 != 0 then goto L3edcdc;
  #L3edcd4.  v3[v6]:= v7 @kind boolean;
  #L3edcd8.  v1:= v1 + -1;
  #L3edcdc.  v5:= v5 + 1;
  #L3edce0.  goto L3edc9e;
  #L3edce2.  if v10 != 0 then goto L3edd0e;
  #L3edce6.  v10:= 0I;
  #L3edce8.  if v10 >= v2 then goto L3edd0e;
  #L3edcec.  v5:= v3[v10] @kind boolean;
  #L3edcf0.  if v5 != 0 then goto L3edd08;
  #L3edcf4.  call temp:= `has`(v9, v10, v9) @signature `Lorg/mozilla/javascript/ScriptableObject;.has:(ILorg/mozilla/javascript/Scriptable;)Z` @kind super;
  #L3edcfa.  v5:= temp;
  #L3edcfc.  if v5 == 0 then goto L3edd08;
  #L3edd00.  v3[v10]:= v7 @kind boolean;
  #L3edd04.  v1:= v1 + -1;
  #L3edd08.  v10:= v10 + 1;
  #L3edd0c.  goto L3edce8;
  #L3edd0e.  if v1 == 0 then goto L3edd58;
  #L3edd12.  v10:= length @variable v0;
  #L3edd14.  v10:= v10 + v1 @kind int;
  #L3edd16.  v10:= new `java.lang.Object`[v10];
  #L3edd1a.  v2:= length @variable v0;
  #L3edd1c.  call `arraycopy`(v0, v4, v10, v1, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3edd22.  v0:= 0I;
  #L3edd24.  v2:= v9.`org.mozilla.javascript.a.o` @type ^`java.lang.Object`[] @kind object;
  #L3edd28.  v2:= length @variable v2;
  #L3edd2a.  if v4 == v2 then goto L3edd4c;
  #L3edd2e.  v2:= v3[v4] @kind boolean;
  #L3edd32.  if v2 != 0 then goto L3edd46;
  #L3edd36.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3edd3c.  v2:= temp @kind object;
  #L3edd3e.  v10[v0]:= v2 @kind object;
  #L3edd42.  v0:= v0 + 1;
  #L3edd46.  v4:= v4 + 1;
  #L3edd4a.  goto L3edd24;
  #L3edd4c.  if v0 == v1 then goto L3edd56;
  #L3edd50.  call temp:= `codeBug`() @signature `Lorg/mozilla/javascript/Kit;.codeBug:()Ljava/lang/RuntimeException;` @kind static;
  #L3edd56.  v0:= v10 @kind object;
  #L3edd58.  return v0 @kind object;
}
procedure `void` `put`(`org.mozilla.javascript.a` v2 @kind this, `int` v3 , `org.mozilla.javascript.Scriptable` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/mozilla/javascript/a;.put:(ILorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3edfb0.  call temp:= `A`(v2, v3) @signature `Lorg/mozilla/javascript/a;.A:(I)Ljava/lang/Object;` @kind direct;
  #L3edfb6.  v0:= temp @kind object;
  #L3edfb8.  v1:= `@@org.mozilla.javascript.Scriptable.NOT_FOUND` @type ^`java.lang.Object` @kind object;
  #L3edfbc.  if v0 != v1 then goto L3edfc8;
  #L3edfc0.  call `put`(v2, v3, v4, v5) @signature `Lorg/mozilla/javascript/ScriptableObject;.put:(ILorg/mozilla/javascript/Scriptable;Ljava/lang/Object;)V` @kind super;
  #L3edfc6.  goto L3edfce;
  #L3edfc8.  call `E`(v2, v3, v5) @signature `Lorg/mozilla/javascript/a;.E:(ILjava/lang/Object;)V` @kind direct;
  #L3edfce.  return @kind void;
}
procedure `void` `setInstanceIdValue`(`org.mozilla.javascript.a` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lorg/mozilla/javascript/a;.setInstanceIdValue:(ILjava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3ee0dc.  v0:= 1I;
  #L3ee0de.  if v2 == v0 then goto L3ee118;
  #L3ee0e2.  v0:= 2I;
  #L3ee0e4.  if v2 == v0 then goto L3ee112;
  #L3ee0e8.  v0:= 3I;
  #L3ee0ea.  if v2 == v0 then goto L3ee102;
  #L3ee0ee.  v0:= 4I;
  #L3ee0f0.  if v2 == v0 then goto L3ee0fc;
  #L3ee0f4.  call `setInstanceIdValue`(v1, v2, v3) @signature `Lorg/mozilla/javascript/IdScriptableObject;.setInstanceIdValue:(ILjava/lang/Object;)V` @kind super;
  #L3ee0fa.  return @kind void;
  #L3ee0fc.  v1.`org.mozilla.javascript.a.m` @type ^`java.lang.Object` := v3 @kind object;
  #L3ee100.  return @kind void;
  #L3ee102.  if v3 == 0 then goto L3ee108;
  #L3ee106.  goto L3ee10c;
  #L3ee108.  v3:= `@@org.mozilla.javascript.UniqueTag.NULL_VALUE` @type ^`org.mozilla.javascript.UniqueTag` @kind object;
  #L3ee10c.  v1.`org.mozilla.javascript.a.j` @type ^`java.lang.Object` := v3 @kind object;
  #L3ee110.  return @kind void;
  #L3ee112.  v1.`org.mozilla.javascript.a.l` @type ^`java.lang.Object` := v3 @kind object;
  #L3ee116.  return @kind void;
  #L3ee118.  v1.`org.mozilla.javascript.a.k` @type ^`java.lang.Object` := v3 @kind object;
  #L3ee11c.  return @kind void;
}
