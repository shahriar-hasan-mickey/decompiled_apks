record `org.mozilla.javascript.UintMap` @kind class @AccessFlag PUBLIC extends `java.io.Serializable` @kind interface {
  `int`[] `org.mozilla.javascript.UintMap.a` @AccessFlag PRIVATE_TRANSIENT;
  `java.lang.Object`[] `org.mozilla.javascript.UintMap.b` @AccessFlag PRIVATE_TRANSIENT;
  `int` `org.mozilla.javascript.UintMap.c` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.UintMap.d` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.UintMap.e` @AccessFlag PRIVATE_TRANSIENT;
  `int` `org.mozilla.javascript.UintMap.f` @AccessFlag PRIVATE_TRANSIENT;
}
global `long` `@@org.mozilla.javascript.UintMap.serialVersionUID` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`org.mozilla.javascript.UintMap` v1 @kind this) @signature `Lorg/mozilla/javascript/UintMap;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L428c88.  v0:= 4I;
  #L428c8a.  call `<init>`(v1, v0) @signature `Lorg/mozilla/javascript/UintMap;.<init>:(I)V` @kind direct;
  #L428c90.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.UintMap` v2 @kind this, `int` v3 ) @signature `Lorg/mozilla/javascript/UintMap;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L428ca4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L428caa.  if v3 >= 0 then goto L428cb4;
  #L428cae.  call temp:= `codeBug`() @signature `Lorg/mozilla/javascript/Kit;.codeBug:()Ljava/lang/RuntimeException;` @kind static;
  #L428cb4.  v3:= v3 * 4;
  #L428cb8.  v3:= v3 / 3;
  #L428cbc.  v0:= 2I;
  #L428cbe.  v1:= 1I;
  #L428cc0.  v1:= v1 ^< v0 @kind int;
  #L428cc2.  if v1 >= v3 then goto L428ccc;
  #L428cc6.  v0:= v0 + 1;
  #L428cca.  goto L428cbe;
  #L428ccc.  v2.`org.mozilla.javascript.UintMap.c` @type ^`int` := v0;
  #L428cd0.  return @kind void;
}
procedure `int` `a`(`org.mozilla.javascript.UintMap` v9 @kind this, `int` v10 , `boolean` v11 ) @signature `Lorg/mozilla/javascript/UintMap;.a:(IZ)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4289a0.  v0:= v9.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L4289a4.  v1:= -1I;
  #L4289a6.  v2:= 1I;
  #L4289a8.  if v0 == 0 then goto L428a0e;
  #L4289ac.  v3:= -1640531527I;
  #L4289b2.  v3:= v3 * v10 @kind int;
  #L4289b6.  v4:= v9.`org.mozilla.javascript.UintMap.c` @type ^`int`;
  #L4289ba.  v4:= v4 - 32;
  #L4289be.  v4:= v3 ^>> v4 @kind int;
  #L4289c2.  v5:= v0[v4];
  #L4289c6.  if v5 != v10 then goto L4289cc;
  #L4289ca.  return v4;
  #L4289cc.  if v5 == v1 then goto L428a10;
  #L4289d0.  v6:= -2I;
  #L4289d2.  if v5 != v6 then goto L4289da;
  #L4289d6.  v5:= v4;
  #L4289d8.  goto L4289dc;
  #L4289da.  v5:= -1I;
  #L4289dc.  v7:= v9.`org.mozilla.javascript.UintMap.c` @type ^`int`;
  #L4289e0.  v8:= v2 ^< v7 @kind int;
  #L4289e4.  v8:= v8 - v2 @kind int;
  #L4289e6.  call temp:= `e`(v3, v8, v7) @signature `Lorg/mozilla/javascript/UintMap;.e:(III)I` @kind static;
  #L4289ec.  v3:= temp;
  #L4289ee.  v4:= v4 + v3 @kind int;
  #L4289f0.  v4:= v4 ^& v8 @kind int;
  #L4289f2.  v7:= v0[v4];
  #L4289f6.  if v7 != v10 then goto L4289fc;
  #L4289fa.  return v4;
  #L4289fc.  if v7 != v6 then goto L428a06;
  #L428a00.  if v5 >= 0 then goto L428a06;
  #L428a04.  v5:= v4;
  #L428a06.  if v7 != v1 then goto L4289ee;
  #L428a0a.  v1:= v5;
  #L428a0c.  goto L428a10;
  #L428a0e.  v4:= -1I;
  #L428a10.  if v1 < 0 then goto L428a16;
  #L428a14.  goto L428a3c;
  #L428a16.  if v0 == 0 then goto L428a4c;
  #L428a1a.  v1:= v9.`org.mozilla.javascript.UintMap.e` @type ^`int`;
  #L428a1e.  v3:= v1 * 4;
  #L428a22.  v5:= v9.`org.mozilla.javascript.UintMap.c` @type ^`int`;
  #L428a26.  v5:= v2 ^< v5 @kind int;
  #L428a2a.  v5:= v5 * 3;
  #L428a2e.  if v3 < v5 then goto L428a34;
  #L428a32.  goto L428a4c;
  #L428a34.  v1:= v1 + v2 @kind int;
  #L428a36.  v9.`org.mozilla.javascript.UintMap.e` @type ^`int` := v1;
  #L428a3a.  v1:= v4;
  #L428a3c.  v0[v1]:= v10;
  #L428a40.  v10:= v9.`org.mozilla.javascript.UintMap.d` @type ^`int`;
  #L428a44.  v10:= v10 + v2 @kind int;
  #L428a46.  v9.`org.mozilla.javascript.UintMap.d` @type ^`int` := v10;
  #L428a4a.  return v1;
  #L428a4c.  call `d`(v9, v11) @signature `Lorg/mozilla/javascript/UintMap;.d:(Z)V` @kind direct;
  #L428a52.  call temp:= `c`(v9, v10) @signature `Lorg/mozilla/javascript/UintMap;.c:(I)I` @kind direct;
  #L428a58.  v10:= temp;
  #L428a5a.  return v10;
}
procedure `int` `b`(`org.mozilla.javascript.UintMap` v7 @kind this, `int` v8 ) @signature `Lorg/mozilla/javascript/UintMap;.b:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L428a6c.  v0:= v7.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L428a70.  v1:= -1I;
  #L428a72.  if v0 == 0 then goto L428abc;
  #L428a76.  v2:= -1640531527I;
  #L428a7c.  v2:= v2 * v8 @kind int;
  #L428a80.  v3:= v7.`org.mozilla.javascript.UintMap.c` @type ^`int`;
  #L428a84.  v4:= v3 - 32;
  #L428a88.  v4:= v2 ^>> v4 @kind int;
  #L428a8c.  v5:= v0[v4];
  #L428a90.  if v5 != v8 then goto L428a96;
  #L428a94.  return v4;
  #L428a96.  if v5 == v1 then goto L428abc;
  #L428a9a.  v5:= 1I;
  #L428a9c.  v6:= v5 ^< v3 @kind int;
  #L428aa0.  v6:= v6 - v5 @kind int;
  #L428aa2.  call temp:= `e`(v2, v6, v3) @signature `Lorg/mozilla/javascript/UintMap;.e:(III)I` @kind static;
  #L428aa8.  v2:= temp;
  #L428aaa.  v4:= v4 + v2 @kind int;
  #L428aac.  v4:= v4 ^& v6 @kind int;
  #L428aae.  v3:= v0[v4];
  #L428ab2.  if v3 != v8 then goto L428ab8;
  #L428ab6.  return v4;
  #L428ab8.  if v3 != v1 then goto L428aaa;
  #L428abc.  return v1;
}
procedure `int` `c`(`org.mozilla.javascript.UintMap` v7 @kind this, `int` v8 ) @signature `Lorg/mozilla/javascript/UintMap;.c:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L428b58.  v0:= v7.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L428b5c.  v1:= -1640531527I;
  #L428b62.  v1:= v1 * v8 @kind int;
  #L428b66.  v2:= v7.`org.mozilla.javascript.UintMap.c` @type ^`int`;
  #L428b6a.  v3:= v2 - 32;
  #L428b6e.  v3:= v1 ^>> v3 @kind int;
  #L428b72.  v4:= v0[v3];
  #L428b76.  v5:= -1I;
  #L428b78.  v6:= 1I;
  #L428b7a.  if v4 == v5 then goto L428b98;
  #L428b7e.  v4:= v6 ^< v2 @kind int;
  #L428b82.  v4:= v4 - v6 @kind int;
  #L428b84.  call temp:= `e`(v1, v4, v2) @signature `Lorg/mozilla/javascript/UintMap;.e:(III)I` @kind static;
  #L428b8a.  v1:= temp;
  #L428b8c.  v3:= v3 + v1 @kind int;
  #L428b8e.  v3:= v3 ^& v4 @kind int;
  #L428b90.  v2:= v0[v3];
  #L428b94.  if v2 != v5 then goto L428b8c;
  #L428b98.  v0[v3]:= v8;
  #L428b9c.  v8:= v7.`org.mozilla.javascript.UintMap.e` @type ^`int`;
  #L428ba0.  v8:= v8 + v6 @kind int;
  #L428ba2.  v7.`org.mozilla.javascript.UintMap.e` @type ^`int` := v8;
  #L428ba6.  v8:= v7.`org.mozilla.javascript.UintMap.d` @type ^`int`;
  #L428baa.  v8:= v8 + v6 @kind int;
  #L428bac.  v7.`org.mozilla.javascript.UintMap.d` @type ^`int` := v8;
  #L428bb0.  return v3;
}
procedure `void` `d`(`org.mozilla.javascript.UintMap` v8 @kind this, `boolean` v9 ) @signature `Lorg/mozilla/javascript/UintMap;.d:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L428ec0.  v0:= v8.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L428ec4.  v1:= 1I;
  #L428ec6.  if v0 == 0 then goto L428ee4;
  #L428eca.  v0:= v8.`org.mozilla.javascript.UintMap.d` @type ^`int`;
  #L428ece.  v0:= v0 * 2;
  #L428ed2.  v2:= v8.`org.mozilla.javascript.UintMap.e` @type ^`int`;
  #L428ed6.  if v0 < v2 then goto L428ee4;
  #L428eda.  v0:= v8.`org.mozilla.javascript.UintMap.c` @type ^`int`;
  #L428ede.  v0:= v0 + v1 @kind int;
  #L428ee0.  v8.`org.mozilla.javascript.UintMap.c` @type ^`int` := v0;
  #L428ee4.  v0:= v8.`org.mozilla.javascript.UintMap.c` @type ^`int`;
  #L428ee8.  v0:= v1 ^< v0 @kind int;
  #L428eec.  v1:= v8.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L428ef0.  v2:= v8.`org.mozilla.javascript.UintMap.f` @type ^`int`;
  #L428ef4.  if v2 != 0 then goto L428f06;
  #L428ef8.  if v9 != 0 then goto L428f06;
  #L428efc.  v9:= new `int`[v0];
  #L428f00.  v8.`org.mozilla.javascript.UintMap.a` @type ^`int`[] := v9 @kind object;
  #L428f04.  goto L428f16;
  #L428f06.  v8.`org.mozilla.javascript.UintMap.f` @type ^`int` := v0;
  #L428f0a.  v9:= v0 * 2;
  #L428f0e.  v9:= new `int`[v9];
  #L428f12.  v8.`org.mozilla.javascript.UintMap.a` @type ^`int`[] := v9 @kind object;
  #L428f16.  v9:= 0I;
  #L428f18.  v3:= 0I;
  #L428f1a.  v4:= -1I;
  #L428f1c.  if v3 == v0 then goto L428f2e;
  #L428f20.  v5:= v8.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L428f24.  v5[v3]:= v4;
  #L428f28.  v3:= v3 + 1;
  #L428f2c.  goto L428f1a;
  #L428f2e.  v3:= v8.`org.mozilla.javascript.UintMap.b` @type ^`java.lang.Object`[] @kind object;
  #L428f32.  if v3 == 0 then goto L428f3e;
  #L428f36.  v0:= new `java.lang.Object`[v0];
  #L428f3a.  v8.`org.mozilla.javascript.UintMap.b` @type ^`java.lang.Object`[] := v0 @kind object;
  #L428f3e.  v0:= v8.`org.mozilla.javascript.UintMap.d` @type ^`int`;
  #L428f42.  v8.`org.mozilla.javascript.UintMap.e` @type ^`int` := v9;
  #L428f46.  if v0 == 0 then goto L428f9c;
  #L428f4a.  v8.`org.mozilla.javascript.UintMap.d` @type ^`int` := v9;
  #L428f4e.  if v0 == 0 then goto L428f9c;
  #L428f52.  v5:= v1[v9];
  #L428f56.  if v5 == v4 then goto L428f96;
  #L428f5a.  v6:= -2I;
  #L428f5c.  if v5 == v6 then goto L428f96;
  #L428f60.  call temp:= `c`(v8, v5) @signature `Lorg/mozilla/javascript/UintMap;.c:(I)I` @kind direct;
  #L428f66.  v5:= temp;
  #L428f68.  if v3 == 0 then goto L428f78;
  #L428f6c.  v6:= v8.`org.mozilla.javascript.UintMap.b` @type ^`java.lang.Object`[] @kind object;
  #L428f70.  v7:= v3[v9] @kind object;
  #L428f74.  v6[v5]:= v7 @kind object;
  #L428f78.  if v2 == 0 then goto L428f92;
  #L428f7c.  v6:= v8.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L428f80.  v7:= v8.`org.mozilla.javascript.UintMap.f` @type ^`int`;
  #L428f84.  v7:= v7 + v5 @kind int;
  #L428f86.  v5:= v2 + v9 @kind int;
  #L428f8a.  v5:= v1[v5];
  #L428f8e.  v6[v7]:= v5;
  #L428f92.  v0:= v0 + -1;
  #L428f96.  v9:= v9 + 1;
  #L428f9a.  goto L428f4e;
  #L428f9c.  return @kind void;
}
procedure `int` `e`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/UintMap;.e:(III)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L428bdc.  v2:= v2 * 2;
  #L428be0.  v2:= v2 - 32;
  #L428be4.  if v2 < 0 then goto L428bf2;
  #L428be8.  v0:= v0 ^>> v2 @kind int;
  #L428bea.  v0:= v0 ^& v1 @kind int;
  #L428bec.  v0:= v0 ^| 1;
  #L428bf0.  return v0;
  #L428bf2.  v2:= -v2 @kind int;
  #L428bf4.  v1:= v1 ^>> v2 @kind int;
  #L428bf6.  goto L428bea;
}
procedure `void` `readObject`(`org.mozilla.javascript.UintMap` v8 @kind this, `java.io.ObjectInputStream` v9 @kind object) @signature `Lorg/mozilla/javascript/UintMap;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L428df8.  call `defaultReadObject`(v9) @signature `Ljava/io/ObjectInputStream;.defaultReadObject:()V` @kind virtual;
  #L428dfe.  v0:= v8.`org.mozilla.javascript.UintMap.d` @type ^`int`;
  #L428e02.  if v0 == 0 then goto L428eae;
  #L428e06.  v1:= 0I;
  #L428e08.  v8.`org.mozilla.javascript.UintMap.d` @type ^`int` := v1;
  #L428e0c.  call temp:= `readBoolean`(v9) @signature `Ljava/io/ObjectInputStream;.readBoolean:()Z` @kind virtual;
  #L428e12.  v2:= temp;
  #L428e14.  call temp:= `readBoolean`(v9) @signature `Ljava/io/ObjectInputStream;.readBoolean:()Z` @kind virtual;
  #L428e1a.  v3:= temp;
  #L428e1c.  v4:= v8.`org.mozilla.javascript.UintMap.c` @type ^`int`;
  #L428e20.  v5:= 1I;
  #L428e22.  v4:= v5 ^< v4 @kind int;
  #L428e26.  if v2 == 0 then goto L428e3c;
  #L428e2a.  v5:= v4 * 2;
  #L428e2e.  v5:= new `int`[v5];
  #L428e32.  v8.`org.mozilla.javascript.UintMap.a` @type ^`int`[] := v5 @kind object;
  #L428e36.  v8.`org.mozilla.javascript.UintMap.f` @type ^`int` := v4;
  #L428e3a.  goto L428e44;
  #L428e3c.  v5:= new `int`[v4];
  #L428e40.  v8.`org.mozilla.javascript.UintMap.a` @type ^`int`[] := v5 @kind object;
  #L428e44.  v5:= 0I;
  #L428e46.  if v5 == v4 then goto L428e5a;
  #L428e4a.  v6:= v8.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L428e4e.  v7:= -1I;
  #L428e50.  v6[v5]:= v7;
  #L428e54.  v5:= v5 + 1;
  #L428e58.  goto L428e46;
  #L428e5a.  if v3 == 0 then goto L428e66;
  #L428e5e.  v4:= new `java.lang.Object`[v4];
  #L428e62.  v8.`org.mozilla.javascript.UintMap.b` @type ^`java.lang.Object`[] := v4 @kind object;
  #L428e66.  if v1 == v0 then goto L428eae;
  #L428e6a.  call temp:= `readInt`(v9) @signature `Ljava/io/ObjectInputStream;.readInt:()I` @kind virtual;
  #L428e70.  v4:= temp;
  #L428e72.  call temp:= `c`(v8, v4) @signature `Lorg/mozilla/javascript/UintMap;.c:(I)I` @kind direct;
  #L428e78.  v4:= temp;
  #L428e7a.  if v2 == 0 then goto L428e94;
  #L428e7e.  call temp:= `readInt`(v9) @signature `Ljava/io/ObjectInputStream;.readInt:()I` @kind virtual;
  #L428e84.  v5:= temp;
  #L428e86.  v6:= v8.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L428e8a.  v7:= v8.`org.mozilla.javascript.UintMap.f` @type ^`int`;
  #L428e8e.  v7:= v7 + v4 @kind int;
  #L428e90.  v6[v7]:= v5;
  #L428e94.  if v3 == 0 then goto L428ea8;
  #L428e98.  v5:= v8.`org.mozilla.javascript.UintMap.b` @type ^`java.lang.Object`[] @kind object;
  #L428e9c.  call temp:= `readObject`(v9) @signature `Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;` @kind virtual;
  #L428ea2.  v6:= temp @kind object;
  #L428ea4.  v5[v4]:= v6 @kind object;
  #L428ea8.  v1:= v1 + 1;
  #L428eac.  goto L428e66;
  #L428eae.  return @kind void;
}
procedure `void` `writeObject`(`org.mozilla.javascript.UintMap` v6 @kind this, `java.io.ObjectOutputStream` v7 @kind object) @signature `Lorg/mozilla/javascript/UintMap;.writeObject:(Ljava/io/ObjectOutputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L429010.  call `defaultWriteObject`(v7) @signature `Ljava/io/ObjectOutputStream;.defaultWriteObject:()V` @kind virtual;
  #L429016.  v0:= v6.`org.mozilla.javascript.UintMap.d` @type ^`int`;
  #L42901a.  if v0 == 0 then goto L42909a;
  #L42901e.  v1:= v6.`org.mozilla.javascript.UintMap.f` @type ^`int`;
  #L429022.  v2:= 1I;
  #L429024.  v3:= 0I;
  #L429026.  if v1 == 0 then goto L42902e;
  #L42902a.  v1:= 1I;
  #L42902c.  goto L429030;
  #L42902e.  v1:= 0I;
  #L429030.  v4:= v6.`org.mozilla.javascript.UintMap.b` @type ^`java.lang.Object`[] @kind object;
  #L429034.  if v4 == 0 then goto L42903a;
  #L429038.  goto L42903c;
  #L42903a.  v2:= 0I;
  #L42903c.  call `writeBoolean`(v7, v1) @signature `Ljava/io/ObjectOutputStream;.writeBoolean:(Z)V` @kind virtual;
  #L429042.  call `writeBoolean`(v7, v2) @signature `Ljava/io/ObjectOutputStream;.writeBoolean:(Z)V` @kind virtual;
  #L429048.  if v0 == 0 then goto L42909a;
  #L42904c.  v4:= v6.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L429050.  v4:= v4[v3];
  #L429054.  v5:= -1I;
  #L429056.  if v4 == v5 then goto L429094;
  #L42905a.  v5:= -2I;
  #L42905c.  if v4 == v5 then goto L429094;
  #L429060.  v0:= v0 + -1;
  #L429064.  call `writeInt`(v7, v4) @signature `Ljava/io/ObjectOutputStream;.writeInt:(I)V` @kind virtual;
  #L42906a.  if v1 == 0 then goto L429082;
  #L42906e.  v4:= v6.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L429072.  v5:= v6.`org.mozilla.javascript.UintMap.f` @type ^`int`;
  #L429076.  v5:= v5 + v3 @kind int;
  #L429078.  v4:= v4[v5];
  #L42907c.  call `writeInt`(v7, v4) @signature `Ljava/io/ObjectOutputStream;.writeInt:(I)V` @kind virtual;
  #L429082.  if v2 == 0 then goto L429094;
  #L429086.  v4:= v6.`org.mozilla.javascript.UintMap.b` @type ^`java.lang.Object`[] @kind object;
  #L42908a.  v4:= v4[v3] @kind object;
  #L42908e.  call `writeObject`(v7, v4) @signature `Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V` @kind virtual;
  #L429094.  v3:= v3 + 1;
  #L429098.  goto L429048;
  #L42909a.  return @kind void;
}
procedure `void` `clear`(`org.mozilla.javascript.UintMap` v5 @kind this) @signature `Lorg/mozilla/javascript/UintMap;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L428ce4.  v0:= v5.`org.mozilla.javascript.UintMap.c` @type ^`int`;
  #L428ce8.  v1:= 1I;
  #L428cea.  v0:= v1 ^< v0 @kind int;
  #L428cee.  v1:= v5.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L428cf2.  v2:= 0I;
  #L428cf4.  if v1 == 0 then goto L428d2c;
  #L428cf8.  v1:= 0I;
  #L428cfa.  if v1 == v0 then goto L428d0e;
  #L428cfe.  v3:= v5.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L428d02.  v4:= -1I;
  #L428d04.  v3[v1]:= v4;
  #L428d08.  v1:= v1 + 1;
  #L428d0c.  goto L428cfa;
  #L428d0e.  v1:= v5.`org.mozilla.javascript.UintMap.b` @type ^`java.lang.Object`[] @kind object;
  #L428d12.  if v1 == 0 then goto L428d2c;
  #L428d16.  v1:= 0I;
  #L428d18.  if v1 == v0 then goto L428d2c;
  #L428d1c.  v3:= v5.`org.mozilla.javascript.UintMap.b` @type ^`java.lang.Object`[] @kind object;
  #L428d20.  v4:= 0I;
  #L428d22.  v3[v1]:= v4 @kind object;
  #L428d26.  v1:= v1 + 1;
  #L428d2a.  goto L428d18;
  #L428d2c.  v5.`org.mozilla.javascript.UintMap.f` @type ^`int` := v2;
  #L428d30.  v5.`org.mozilla.javascript.UintMap.d` @type ^`int` := v2;
  #L428d34.  v5.`org.mozilla.javascript.UintMap.e` @type ^`int` := v2;
  #L428d38.  return @kind void;
}
procedure `int` `getExistingInt`(`org.mozilla.javascript.UintMap` v2 @kind this, `int` v3 ) @signature `Lorg/mozilla/javascript/UintMap;.getExistingInt:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L428ad0.  if v3 >= 0 then goto L428ada;
  #L428ad4.  call temp:= `codeBug`() @signature `Lorg/mozilla/javascript/Kit;.codeBug:()Ljava/lang/RuntimeException;` @kind static;
  #L428ada.  call temp:= `b`(v2, v3) @signature `Lorg/mozilla/javascript/UintMap;.b:(I)I` @kind direct;
  #L428ae0.  v3:= temp;
  #L428ae2.  v0:= 0I;
  #L428ae4.  if v3 < 0 then goto L428afe;
  #L428ae8.  v1:= v2.`org.mozilla.javascript.UintMap.f` @type ^`int`;
  #L428aec.  if v1 == 0 then goto L428afc;
  #L428af0.  v0:= v2.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L428af4.  v1:= v1 + v3 @kind int;
  #L428af6.  v3:= v0[v1];
  #L428afa.  return v3;
  #L428afc.  return v0;
  #L428afe.  call temp:= `codeBug`() @signature `Lorg/mozilla/javascript/Kit;.codeBug:()Ljava/lang/RuntimeException;` @kind static;
  #L428b04.  return v0;
}
procedure `int` `getInt`(`org.mozilla.javascript.UintMap` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/mozilla/javascript/UintMap;.getInt:(II)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L428b18.  if v2 >= 0 then goto L428b22;
  #L428b1c.  call temp:= `codeBug`() @signature `Lorg/mozilla/javascript/Kit;.codeBug:()Ljava/lang/RuntimeException;` @kind static;
  #L428b22.  call temp:= `b`(v1, v2) @signature `Lorg/mozilla/javascript/UintMap;.b:(I)I` @kind direct;
  #L428b28.  v2:= temp;
  #L428b2a.  if v2 < 0 then goto L428b46;
  #L428b2e.  v3:= v1.`org.mozilla.javascript.UintMap.f` @type ^`int`;
  #L428b32.  if v3 == 0 then goto L428b42;
  #L428b36.  v0:= v1.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L428b3a.  v3:= v3 + v2 @kind int;
  #L428b3c.  v2:= v0[v3];
  #L428b40.  return v2;
  #L428b42.  v2:= 0I;
  #L428b44.  return v2;
  #L428b46.  return v3;
}
procedure `int`[] `getKeys`(`org.mozilla.javascript.UintMap` v6 @kind this) @signature `Lorg/mozilla/javascript/UintMap;.getKeys:()[I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L428c08.  v0:= v6.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L428c0c.  v1:= v6.`org.mozilla.javascript.UintMap.d` @type ^`int`;
  #L428c10.  v2:= new `int`[v1];
  #L428c14.  v3:= 0I;
  #L428c16.  if v1 == 0 then goto L428c38;
  #L428c1a.  v4:= v0[v3];
  #L428c1e.  v5:= -1I;
  #L428c20.  if v4 == v5 then goto L428c32;
  #L428c24.  v5:= -2I;
  #L428c26.  if v4 == v5 then goto L428c32;
  #L428c2a.  v1:= v1 + -1;
  #L428c2e.  v2[v1]:= v4;
  #L428c32.  v3:= v3 + 1;
  #L428c36.  goto L428c16;
  #L428c38.  return v2 @kind object;
}
procedure `java.lang.Object` `getObject`(`org.mozilla.javascript.UintMap` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/UintMap;.getObject:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L428c4c.  if v2 >= 0 then goto L428c56;
  #L428c50.  call temp:= `codeBug`() @signature `Lorg/mozilla/javascript/Kit;.codeBug:()Ljava/lang/RuntimeException;` @kind static;
  #L428c56.  v0:= v1.`org.mozilla.javascript.UintMap.b` @type ^`java.lang.Object`[] @kind object;
  #L428c5a.  if v0 == 0 then goto L428c74;
  #L428c5e.  call temp:= `b`(v1, v2) @signature `Lorg/mozilla/javascript/UintMap;.b:(I)I` @kind direct;
  #L428c64.  v2:= temp;
  #L428c66.  if v2 < 0 then goto L428c74;
  #L428c6a.  v0:= v1.`org.mozilla.javascript.UintMap.b` @type ^`java.lang.Object`[] @kind object;
  #L428c6e.  v2:= v0[v2] @kind object;
  #L428c72.  return v2 @kind object;
  #L428c74.  v2:= 0I;
  #L428c76.  return v2 @kind object;
}
procedure `boolean` `has`(`org.mozilla.javascript.UintMap` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/UintMap;.has:(I)Z` @AccessFlag PUBLIC {
    temp;

  #L428950.  if v1 >= 0 then goto L42895a;
  #L428954.  call temp:= `codeBug`() @signature `Lorg/mozilla/javascript/Kit;.codeBug:()Ljava/lang/RuntimeException;` @kind static;
  #L42895a.  call temp:= `b`(v0, v1) @signature `Lorg/mozilla/javascript/UintMap;.b:(I)I` @kind direct;
  #L428960.  v1:= temp;
  #L428962.  if v1 < 0 then goto L42896a;
  #L428966.  v1:= 1I;
  #L428968.  goto L42896c;
  #L42896a.  v1:= 0I;
  #L42896c.  return v1;
}
procedure `boolean` `isEmpty`(`org.mozilla.javascript.UintMap` v1 @kind this) @signature `Lorg/mozilla/javascript/UintMap;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L428980.  v0:= v1.`org.mozilla.javascript.UintMap.d` @type ^`int`;
  #L428984.  if v0 != 0 then goto L42898c;
  #L428988.  v0:= 1I;
  #L42898a.  goto L42898e;
  #L42898c.  v0:= 0I;
  #L42898e.  return v0;
}
procedure `void` `put`(`org.mozilla.javascript.UintMap` v4 @kind this, `int` v5 , `int` v6 ) @signature `Lorg/mozilla/javascript/UintMap;.put:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L428d4c.  if v5 >= 0 then goto L428d56;
  #L428d50.  call temp:= `codeBug`() @signature `Lorg/mozilla/javascript/Kit;.codeBug:()Ljava/lang/RuntimeException;` @kind static;
  #L428d56.  v0:= 1I;
  #L428d58.  call temp:= `a`(v4, v5, v0) @signature `Lorg/mozilla/javascript/UintMap;.a:(IZ)I` @kind direct;
  #L428d5e.  v5:= temp;
  #L428d60.  v1:= v4.`org.mozilla.javascript.UintMap.f` @type ^`int`;
  #L428d64.  if v1 != 0 then goto L428d90;
  #L428d68.  v1:= v4.`org.mozilla.javascript.UintMap.c` @type ^`int`;
  #L428d6c.  v0:= v0 ^< v1 @kind int;
  #L428d6e.  v1:= v4.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L428d72.  v2:= length @variable v1;
  #L428d74.  v3:= v0 * 2;
  #L428d78.  if v2 == v3 then goto L428d8c;
  #L428d7c.  v2:= new `int`[v3];
  #L428d80.  v3:= 0I;
  #L428d82.  call `arraycopy`(v1, v3, v2, v3, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L428d88.  v4.`org.mozilla.javascript.UintMap.a` @type ^`int`[] := v2 @kind object;
  #L428d8c.  v4.`org.mozilla.javascript.UintMap.f` @type ^`int` := v0;
  #L428d90.  v0:= v4.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L428d94.  v1:= v4.`org.mozilla.javascript.UintMap.f` @type ^`int`;
  #L428d98.  v1:= v1 + v5 @kind int;
  #L428d9a.  v0[v1]:= v6;
  #L428d9e.  return @kind void;
}
procedure `void` `put`(`org.mozilla.javascript.UintMap` v2 @kind this, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lorg/mozilla/javascript/UintMap;.put:(ILjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L428db0.  if v3 >= 0 then goto L428dba;
  #L428db4.  call temp:= `codeBug`() @signature `Lorg/mozilla/javascript/Kit;.codeBug:()Ljava/lang/RuntimeException;` @kind static;
  #L428dba.  v0:= 0I;
  #L428dbc.  call temp:= `a`(v2, v3, v0) @signature `Lorg/mozilla/javascript/UintMap;.a:(IZ)I` @kind direct;
  #L428dc2.  v3:= temp;
  #L428dc4.  v0:= v2.`org.mozilla.javascript.UintMap.b` @type ^`java.lang.Object`[] @kind object;
  #L428dc8.  if v0 != 0 then goto L428ddc;
  #L428dcc.  v0:= 1I;
  #L428dce.  v1:= v2.`org.mozilla.javascript.UintMap.c` @type ^`int`;
  #L428dd2.  v0:= v0 ^< v1 @kind int;
  #L428dd4.  v0:= new `java.lang.Object`[v0];
  #L428dd8.  v2.`org.mozilla.javascript.UintMap.b` @type ^`java.lang.Object`[] := v0 @kind object;
  #L428ddc.  v0:= v2.`org.mozilla.javascript.UintMap.b` @type ^`java.lang.Object`[] @kind object;
  #L428de0.  v0[v3]:= v4 @kind object;
  #L428de4.  return @kind void;
}
procedure `void` `remove`(`org.mozilla.javascript.UintMap` v2 @kind this, `int` v3 ) @signature `Lorg/mozilla/javascript/UintMap;.remove:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L428fb0.  if v3 >= 0 then goto L428fba;
  #L428fb4.  call temp:= `codeBug`() @signature `Lorg/mozilla/javascript/Kit;.codeBug:()Ljava/lang/RuntimeException;` @kind static;
  #L428fba.  call temp:= `b`(v2, v3) @signature `Lorg/mozilla/javascript/UintMap;.b:(I)I` @kind direct;
  #L428fc0.  v3:= temp;
  #L428fc2.  if v3 < 0 then goto L428ffe;
  #L428fc6.  v0:= v2.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L428fca.  v1:= -2I;
  #L428fcc.  v0[v3]:= v1;
  #L428fd0.  v0:= v2.`org.mozilla.javascript.UintMap.d` @type ^`int`;
  #L428fd4.  v0:= v0 + -1;
  #L428fd8.  v2.`org.mozilla.javascript.UintMap.d` @type ^`int` := v0;
  #L428fdc.  v0:= v2.`org.mozilla.javascript.UintMap.b` @type ^`java.lang.Object`[] @kind object;
  #L428fe0.  if v0 == 0 then goto L428fea;
  #L428fe4.  v1:= 0I;
  #L428fe6.  v0[v3]:= v1 @kind object;
  #L428fea.  v0:= v2.`org.mozilla.javascript.UintMap.f` @type ^`int`;
  #L428fee.  if v0 == 0 then goto L428ffe;
  #L428ff2.  v1:= v2.`org.mozilla.javascript.UintMap.a` @type ^`int`[] @kind object;
  #L428ff6.  v0:= v0 + v3 @kind int;
  #L428ff8.  v3:= 0I;
  #L428ffa.  v1[v0]:= v3;
  #L428ffe.  return @kind void;
}
procedure `int` `size`(`org.mozilla.javascript.UintMap` v1 @kind this) @signature `Lorg/mozilla/javascript/UintMap;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L428bc4.  v0:= v1.`org.mozilla.javascript.UintMap.d` @type ^`int`;
  #L428bc8.  return v0;
}
