record `org.mozilla.javascript.NativeArray$c` @kind class @AccessFlag  extends `java.util.ListIterator` @kind interface {
  `int` `org.mozilla.javascript.NativeArray$c.a` @AccessFlag ;
  `int` `org.mozilla.javascript.NativeArray$c.b` @AccessFlag FINAL_SYNTHETIC;
  `int` `org.mozilla.javascript.NativeArray$c.c` @AccessFlag FINAL_SYNTHETIC;
  `org.mozilla.javascript.NativeArray` `org.mozilla.javascript.NativeArray$c.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.mozilla.javascript.NativeArray$c` v0 @kind this, `org.mozilla.javascript.NativeArray` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lorg/mozilla/javascript/NativeArray$c;.<init>:(Lorg/mozilla/javascript/NativeArray;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L405220.  v0.`org.mozilla.javascript.NativeArray$c.d` @type ^`org.mozilla.javascript.NativeArray` := v1 @kind object;
  #L405224.  v0.`org.mozilla.javascript.NativeArray$c.b` @type ^`int` := v2;
  #L405228.  v0.`org.mozilla.javascript.NativeArray$c.c` @type ^`int` := v3;
  #L40522c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L405232.  v1:= v0.`org.mozilla.javascript.NativeArray$c.b` @type ^`int`;
  #L405236.  v0.`org.mozilla.javascript.NativeArray$c.a` @type ^`int` := v1;
  #L40523a.  return @kind void;
}
procedure `void` `add`(`org.mozilla.javascript.NativeArray$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/mozilla/javascript/NativeArray$c;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L40524c.  v1:= new `java.lang.UnsupportedOperationException`;
  #L405250.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L405256.  throw v1;
}
procedure `boolean` `hasNext`(`org.mozilla.javascript.NativeArray$c` v2 @kind this) @signature `Lorg/mozilla/javascript/NativeArray$c;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40512c.  v0:= v2.`org.mozilla.javascript.NativeArray$c.a` @type ^`int`;
  #L405130.  v1:= v2.`org.mozilla.javascript.NativeArray$c.c` @type ^`int`;
  #L405134.  if v0 >= v1 then goto L40513c;
  #L405138.  v0:= 1I;
  #L40513a.  goto L40513e;
  #L40513c.  v0:= 0I;
  #L40513e.  return v0;
}
procedure `boolean` `hasPrevious`(`org.mozilla.javascript.NativeArray$c` v1 @kind this) @signature `Lorg/mozilla/javascript/NativeArray$c;.hasPrevious:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L405150.  v0:= v1.`org.mozilla.javascript.NativeArray$c.a` @type ^`int`;
  #L405154.  if v0 <= 0 then goto L40515c;
  #L405158.  v0:= 1I;
  #L40515a.  goto L40515e;
  #L40515c.  v0:= 0I;
  #L40515e.  return v0;
}
procedure `java.lang.Object` `next`(`org.mozilla.javascript.NativeArray$c` v3 @kind this) @signature `Lorg/mozilla/javascript/NativeArray$c;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4051a4.  v0:= v3.`org.mozilla.javascript.NativeArray$c.a` @type ^`int`;
  #L4051a8.  v1:= v3.`org.mozilla.javascript.NativeArray$c.c` @type ^`int`;
  #L4051ac.  if v0 == v1 then goto L4051c6;
  #L4051b0.  v1:= v3.`org.mozilla.javascript.NativeArray$c.d` @type ^`org.mozilla.javascript.NativeArray` @kind object;
  #L4051b4.  v2:= v0 + 1;
  #L4051b8.  v3.`org.mozilla.javascript.NativeArray$c.a` @type ^`int` := v2;
  #L4051bc.  call temp:= `get`(v1, v0) @signature `Lorg/mozilla/javascript/NativeArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4051c2.  v0:= temp @kind object;
  #L4051c4.  return v0 @kind object;
  #L4051c6.  v0:= new `java.util.NoSuchElementException`;
  #L4051ca.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L4051d0.  throw v0;
}
procedure `int` `nextIndex`(`org.mozilla.javascript.NativeArray$c` v1 @kind this) @signature `Lorg/mozilla/javascript/NativeArray$c;.nextIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L405170.  v0:= v1.`org.mozilla.javascript.NativeArray$c.a` @type ^`int`;
  #L405174.  return v0;
}
procedure `java.lang.Object` `previous`(`org.mozilla.javascript.NativeArray$c` v2 @kind this) @signature `Lorg/mozilla/javascript/NativeArray$c;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4051e4.  v0:= v2.`org.mozilla.javascript.NativeArray$c.a` @type ^`int`;
  #L4051e8.  if v0 == 0 then goto L405202;
  #L4051ec.  v1:= v2.`org.mozilla.javascript.NativeArray$c.d` @type ^`org.mozilla.javascript.NativeArray` @kind object;
  #L4051f0.  v0:= v0 + -1;
  #L4051f4.  v2.`org.mozilla.javascript.NativeArray$c.a` @type ^`int` := v0;
  #L4051f8.  call temp:= `get`(v1, v0) @signature `Lorg/mozilla/javascript/NativeArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L4051fe.  v0:= temp @kind object;
  #L405200.  return v0 @kind object;
  #L405202.  v0:= new `java.util.NoSuchElementException`;
  #L405206.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L40520c.  throw v0;
}
procedure `int` `previousIndex`(`org.mozilla.javascript.NativeArray$c` v1 @kind this) @signature `Lorg/mozilla/javascript/NativeArray$c;.previousIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L405188.  v0:= v1.`org.mozilla.javascript.NativeArray$c.a` @type ^`int`;
  #L40518c.  v0:= v0 + -1;
  #L405190.  return v0;
}
procedure `void` `remove`(`org.mozilla.javascript.NativeArray$c` v1 @kind this) @signature `Lorg/mozilla/javascript/NativeArray$c;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L405268.  v0:= new `java.lang.UnsupportedOperationException`;
  #L40526c.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L405272.  throw v0;
}
procedure `void` `set`(`org.mozilla.javascript.NativeArray$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/mozilla/javascript/NativeArray$c;.set:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L405284.  v1:= new `java.lang.UnsupportedOperationException`;
  #L405288.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L40528e.  throw v1;
}
