record `org.mozilla.javascript.s` @kind class @AccessFlag  {
  `java.lang.Class`[] `org.mozilla.javascript.s.a` @AccessFlag FINAL;
  `int` `org.mozilla.javascript.s.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`org.mozilla.javascript.s` v3 @kind this, `java.lang.Object`[] v4 @kind object, `int` v5 ) @signature `Lorg/mozilla/javascript/s;.<init>:([Ljava/lang/Object;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L41cc9c.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41cca2.  v3.`org.mozilla.javascript.s.b` @type ^`int` := v5;
  #L41cca6.  v5:= length @variable v4;
  #L41cca8.  v5:= new `java.lang.Class`[v5];
  #L41ccac.  v3.`org.mozilla.javascript.s.a` @type ^`java.lang.Class`[] := v5 @kind object;
  #L41ccb0.  v5:= length @variable v4;
  #L41ccb2.  v0:= 0I;
  #L41ccb4.  if v0 >= v5 then goto L41ccee;
  #L41ccb8.  v1:= v4[v0] @kind object;
  #L41ccbc.  v2:= instanceof @variable v1 @type ^`org.mozilla.javascript.Wrapper` @kind boolean;
  #L41ccc0.  if v2 == 0 then goto L41ccd0;
  #L41ccc4.  v1:= (`org.mozilla.javascript.Wrapper`) v1 @kind object;
  #L41ccc8.  call temp:= `unwrap`(v1) @signature `Lorg/mozilla/javascript/Wrapper;.unwrap:()Ljava/lang/Object;` @kind interface;
  #L41ccce.  v1:= temp @kind object;
  #L41ccd0.  v2:= v3.`org.mozilla.javascript.s.a` @type ^`java.lang.Class`[] @kind object;
  #L41ccd4.  if v1 != 0 then goto L41ccdc;
  #L41ccd8.  v1:= 0I;
  #L41ccda.  goto L41cce4;
  #L41ccdc.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L41cce2.  v1:= temp @kind object;
  #L41cce4.  v2[v0]:= v1 @kind object;
  #L41cce8.  v0:= v0 + 1;
  #L41ccec.  goto L41ccb4;
  #L41ccee.  return @kind void;
}
procedure `boolean` `a`(`org.mozilla.javascript.s` v5 @kind this, `java.lang.Object`[] v6 @kind object) @signature `Lorg/mozilla/javascript/s;.a:([Ljava/lang/Object;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L41cc08.  v0:= length @variable v6;
  #L41cc0a.  v1:= v5.`org.mozilla.javascript.s.a` @type ^`java.lang.Class`[] @kind object;
  #L41cc0e.  v1:= length @variable v1;
  #L41cc10.  v2:= 0I;
  #L41cc12.  if v0 == v1 then goto L41cc18;
  #L41cc16.  return v2;
  #L41cc18.  v0:= length @variable v6;
  #L41cc1a.  v1:= 0I;
  #L41cc1c.  if v1 >= v0 then goto L41cc66;
  #L41cc20.  v3:= v6[v1] @kind object;
  #L41cc24.  v4:= instanceof @variable v3 @type ^`org.mozilla.javascript.Wrapper` @kind boolean;
  #L41cc28.  if v4 == 0 then goto L41cc38;
  #L41cc2c.  v3:= (`org.mozilla.javascript.Wrapper`) v3 @kind object;
  #L41cc30.  call temp:= `unwrap`(v3) @signature `Lorg/mozilla/javascript/Wrapper;.unwrap:()Ljava/lang/Object;` @kind interface;
  #L41cc36.  v3:= temp @kind object;
  #L41cc38.  if v3 != 0 then goto L41cc4a;
  #L41cc3c.  v3:= v5.`org.mozilla.javascript.s.a` @type ^`java.lang.Class`[] @kind object;
  #L41cc40.  v3:= v3[v1] @kind object;
  #L41cc44.  if v3 == 0 then goto L41cc60;
  #L41cc48.  return v2;
  #L41cc4a.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L41cc50.  v3:= temp @kind object;
  #L41cc52.  v4:= v5.`org.mozilla.javascript.s.a` @type ^`java.lang.Class`[] @kind object;
  #L41cc56.  v4:= v4[v1] @kind object;
  #L41cc5a.  if v3 == v4 then goto L41cc60;
  #L41cc5e.  return v2;
  #L41cc60.  v1:= v1 + 1;
  #L41cc64.  goto L41cc1c;
  #L41cc66.  v6:= 1I;
  #L41cc68.  return v6;
}
procedure `boolean` `equals`(`org.mozilla.javascript.s` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lorg/mozilla/javascript/s;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41cbc4.  v0:= instanceof @variable v4 @type ^`org.mozilla.javascript.s` @kind boolean;
  #L41cbc8.  v1:= 0I;
  #L41cbca.  if v0 != 0 then goto L41cbd0;
  #L41cbce.  return v1;
  #L41cbd0.  v4:= (`org.mozilla.javascript.s`) v4 @kind object;
  #L41cbd4.  v0:= v3.`org.mozilla.javascript.s.a` @type ^`java.lang.Class`[] @kind object;
  #L41cbd8.  v2:= v4.`org.mozilla.javascript.s.a` @type ^`java.lang.Class`[] @kind object;
  #L41cbdc.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L41cbe2.  v0:= temp;
  #L41cbe4.  if v0 == 0 then goto L41cbf6;
  #L41cbe8.  v0:= v3.`org.mozilla.javascript.s.b` @type ^`int`;
  #L41cbec.  v4:= v4.`org.mozilla.javascript.s.b` @type ^`int`;
  #L41cbf0.  if v0 != v4 then goto L41cbf6;
  #L41cbf4.  v1:= 1I;
  #L41cbf6.  return v1;
}
procedure `int` `hashCode`(`org.mozilla.javascript.s` v1 @kind this) @signature `Lorg/mozilla/javascript/s;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41cc7c.  v0:= v1.`org.mozilla.javascript.s.a` @type ^`java.lang.Class`[] @kind object;
  #L41cc80.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L41cc86.  v0:= temp;
  #L41cc88.  return v0;
}
