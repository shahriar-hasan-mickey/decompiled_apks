record `org.mozilla.javascript.FunctionObject` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.BaseFunction` @kind class {
  `org.mozilla.javascript.k` `org.mozilla.javascript.FunctionObject.m` @AccessFlag ;
  `java.lang.String` `org.mozilla.javascript.FunctionObject.n` @AccessFlag PRIVATE;
  `byte`[] `org.mozilla.javascript.FunctionObject.o` @AccessFlag PRIVATE_TRANSIENT;
  `int` `org.mozilla.javascript.FunctionObject.p` @AccessFlag PRIVATE;
  `boolean` `org.mozilla.javascript.FunctionObject.q` @AccessFlag PRIVATE_TRANSIENT;
  `int` `org.mozilla.javascript.FunctionObject.r` @AccessFlag PRIVATE_TRANSIENT;
  `boolean` `org.mozilla.javascript.FunctionObject.s` @AccessFlag PRIVATE;
}
global `int` `@@org.mozilla.javascript.FunctionObject.JAVA_BOOLEAN_TYPE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.mozilla.javascript.FunctionObject.JAVA_DOUBLE_TYPE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.mozilla.javascript.FunctionObject.JAVA_INT_TYPE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.mozilla.javascript.FunctionObject.JAVA_OBJECT_TYPE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.mozilla.javascript.FunctionObject.JAVA_SCRIPTABLE_TYPE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.mozilla.javascript.FunctionObject.JAVA_STRING_TYPE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.mozilla.javascript.FunctionObject.JAVA_UNSUPPORTED_TYPE` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@org.mozilla.javascript.FunctionObject.serialVersionUID` @AccessFlag STATIC_FINAL;
global `boolean` `@@org.mozilla.javascript.FunctionObject.t` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`org.mozilla.javascript.FunctionObject` v5 @kind this, `java.lang.String` v6 @kind object, `java.lang.reflect.Member` v7 @kind object, `org.mozilla.javascript.Scriptable` v8 @kind object) @signature `Lorg/mozilla/javascript/FunctionObject;.<init>:(Ljava/lang/String;Ljava/lang/reflect/Member;Lorg/mozilla/javascript/Scriptable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f6fc8.  call `<init>`(v5) @signature `Lorg/mozilla/javascript/BaseFunction;.<init>:()V` @kind direct;
  #L3f6fce.  v0:= instanceof @variable v7 @type ^`java.lang.reflect.Constructor` @kind boolean;
  #L3f6fd2.  v1:= 1I;
  #L3f6fd4.  if v0 == 0 then goto L3f6ff0;
  #L3f6fd8.  v0:= new `org.mozilla.javascript.k`;
  #L3f6fdc.  v7:= (`java.lang.reflect.Constructor`) v7 @kind object;
  #L3f6fe0.  call `<init>`(v0, v7) @signature `Lorg/mozilla/javascript/k;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L3f6fe6.  v5.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` := v0 @kind object;
  #L3f6fea.  v5.`org.mozilla.javascript.FunctionObject.s` @type ^`boolean` := v1 @kind boolean;
  #L3f6fee.  goto L3f700e;
  #L3f6ff0.  v0:= new `org.mozilla.javascript.k`;
  #L3f6ff4.  v7:= (`java.lang.reflect.Method`) v7 @kind object;
  #L3f6ff8.  call `<init>`(v0, v7) @signature `Lorg/mozilla/javascript/k;.<init>:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L3f6ffe.  v5.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` := v0 @kind object;
  #L3f7002.  call temp:= `i`(v0) @signature `Lorg/mozilla/javascript/k;.i:()Z` @kind virtual;
  #L3f7008.  v7:= temp;
  #L3f700a.  v5.`org.mozilla.javascript.FunctionObject.s` @type ^`boolean` := v7 @kind boolean;
  #L3f700e.  v7:= v5.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f7012.  call temp:= `c`(v7) @signature `Lorg/mozilla/javascript/k;.c:()Ljava/lang/String;` @kind virtual;
  #L3f7018.  v7:= temp @kind object;
  #L3f701a.  v5.`org.mozilla.javascript.FunctionObject.n` @type ^`java.lang.String` := v6 @kind object;
  #L3f701e.  v6:= v5.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f7022.  v6:= v6.`org.mozilla.javascript.k.b` @type ^`java.lang.Class`[] @kind object;
  #L3f7026.  v0:= length @variable v6;
  #L3f7028.  v2:= 4I;
  #L3f702a.  v3:= 0I;
  #L3f702c.  if v0 != v2 then goto L3f7110;
  #L3f7030.  v2:= v6[v1] @kind object;
  #L3f7034.  call temp:= `isArray`(v2) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L3f703a.  v2:= temp;
  #L3f703c.  v4:= 2I;
  #L3f703e.  if v2 != 0 then goto L3f7052;
  #L3f7042.  v2:= v6[v4] @kind object;
  #L3f7046.  call temp:= `isArray`(v2) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L3f704c.  v2:= temp;
  #L3f704e.  if v2 == 0 then goto L3f7110;
  #L3f7052.  v0:= v6[v1] @kind object;
  #L3f7056.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L3f705c.  v0:= temp;
  #L3f705e.  v2:= 3I;
  #L3f7060.  if v0 == 0 then goto L3f70ba;
  #L3f7064.  v0:= v5.`org.mozilla.javascript.FunctionObject.s` @type ^`boolean` @kind boolean;
  #L3f7068.  if v0 == 0 then goto L3f70ac;
  #L3f706c.  v0:= v6[v3] @kind object;
  #L3f7070.  v3:= `@@org.mozilla.javascript.ScriptRuntime.ContextClass` @type ^`java.lang.Class` @kind object;
  #L3f7074.  if v0 != v3 then goto L3f70ac;
  #L3f7078.  v0:= v6[v1] @kind object;
  #L3f707c.  call temp:= `getComponentType`(v0) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L3f7082.  v0:= temp @kind object;
  #L3f7084.  v3:= `@@org.mozilla.javascript.ScriptRuntime.ObjectClass` @type ^`java.lang.Class` @kind object;
  #L3f7088.  if v0 != v3 then goto L3f70ac;
  #L3f708c.  v0:= v6[v4] @kind object;
  #L3f7090.  v3:= `@@org.mozilla.javascript.ScriptRuntime.FunctionClass` @type ^`java.lang.Class` @kind object;
  #L3f7094.  if v0 != v3 then goto L3f70ac;
  #L3f7098.  v6:= v6[v2] @kind object;
  #L3f709c.  v0:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L3f70a0.  if v6 != v0 then goto L3f70ac;
  #L3f70a4.  v6:= -2I;
  #L3f70a6.  v5.`org.mozilla.javascript.FunctionObject.p` @type ^`int` := v6;
  #L3f70aa.  goto L3f715e;
  #L3f70ac.  v6:= "msg.varargs.ctor" @kind object;
  #L3f70b0.  call temp:= `t`(v6, v7) @signature `Lorg/mozilla/javascript/Context;.t:(Ljava/lang/String;Ljava/lang/Object;)Lorg/mozilla/javascript/EvaluatorException;` @kind static;
  #L3f70b6.  v6:= temp @kind object;
  #L3f70b8.  throw v6;
  #L3f70ba.  v0:= v5.`org.mozilla.javascript.FunctionObject.s` @type ^`boolean` @kind boolean;
  #L3f70be.  if v0 == 0 then goto L3f7102;
  #L3f70c2.  v0:= v6[v3] @kind object;
  #L3f70c6.  v3:= `@@org.mozilla.javascript.ScriptRuntime.ContextClass` @type ^`java.lang.Class` @kind object;
  #L3f70ca.  if v0 != v3 then goto L3f7102;
  #L3f70ce.  v0:= v6[v1] @kind object;
  #L3f70d2.  v3:= `@@org.mozilla.javascript.ScriptRuntime.ScriptableClass` @type ^`java.lang.Class` @kind object;
  #L3f70d6.  if v0 != v3 then goto L3f7102;
  #L3f70da.  v0:= v6[v4] @kind object;
  #L3f70de.  call temp:= `getComponentType`(v0) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L3f70e4.  v0:= temp @kind object;
  #L3f70e6.  v3:= `@@org.mozilla.javascript.ScriptRuntime.ObjectClass` @type ^`java.lang.Class` @kind object;
  #L3f70ea.  if v0 != v3 then goto L3f7102;
  #L3f70ee.  v6:= v6[v2] @kind object;
  #L3f70f2.  v0:= `@@org.mozilla.javascript.ScriptRuntime.FunctionClass` @type ^`java.lang.Class` @kind object;
  #L3f70f6.  if v6 != v0 then goto L3f7102;
  #L3f70fa.  v6:= -1I;
  #L3f70fc.  v5.`org.mozilla.javascript.FunctionObject.p` @type ^`int` := v6;
  #L3f7100.  goto L3f715e;
  #L3f7102.  v6:= "msg.varargs.fun" @kind object;
  #L3f7106.  call temp:= `t`(v6, v7) @signature `Lorg/mozilla/javascript/Context;.t:(Ljava/lang/String;Ljava/lang/Object;)Lorg/mozilla/javascript/EvaluatorException;` @kind static;
  #L3f710c.  v6:= temp @kind object;
  #L3f710e.  throw v6;
  #L3f7110.  v5.`org.mozilla.javascript.FunctionObject.p` @type ^`int` := v0;
  #L3f7114.  if v0 <= 0 then goto L3f715e;
  #L3f7118.  v2:= new `byte`[v0];
  #L3f711c.  v5.`org.mozilla.javascript.FunctionObject.o` @type ^`byte`[] := v2 @kind object;
  #L3f7120.  if v3 == v0 then goto L3f715e;
  #L3f7124.  v2:= v6[v3] @kind object;
  #L3f7128.  call temp:= `getTypeTag`(v2) @signature `Lorg/mozilla/javascript/FunctionObject;.getTypeTag:(Ljava/lang/Class;)I` @kind static;
  #L3f712e.  v2:= temp;
  #L3f7130.  if v2 == 0 then goto L3f7144;
  #L3f7134.  v4:= v5.`org.mozilla.javascript.FunctionObject.o` @type ^`byte`[] @kind object;
  #L3f7138.  v2:= (`byte`) v2 @kind i2b;
  #L3f713a.  v4[v3]:= v2 @kind byte;
  #L3f713e.  v3:= v3 + 1;
  #L3f7142.  goto L3f7120;
  #L3f7144.  v6:= v6[v3] @kind object;
  #L3f7148.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3f714e.  v6:= temp @kind object;
  #L3f7150.  v8:= "msg.bad.parms" @kind object;
  #L3f7154.  call temp:= `u`(v8, v6, v7) @signature `Lorg/mozilla/javascript/Context;.u:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/mozilla/javascript/EvaluatorException;` @kind static;
  #L3f715a.  v6:= temp @kind object;
  #L3f715c.  throw v6;
  #L3f715e.  v6:= v5.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f7162.  call temp:= `h`(v6) @signature `Lorg/mozilla/javascript/k;.h:()Z` @kind virtual;
  #L3f7168.  v6:= temp;
  #L3f716a.  if v6 == 0 then goto L3f719e;
  #L3f716e.  v6:= v5.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f7172.  call temp:= `k`(v6) @signature `Lorg/mozilla/javascript/k;.k:()Ljava/lang/reflect/Method;` @kind virtual;
  #L3f7178.  v6:= temp @kind object;
  #L3f717a.  call temp:= `getReturnType`(v6) @signature `Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;` @kind virtual;
  #L3f7180.  v6:= temp @kind object;
  #L3f7182.  v7:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L3f7186.  if v6 != v7 then goto L3f7190;
  #L3f718a.  v5.`org.mozilla.javascript.FunctionObject.q` @type ^`boolean` := v1 @kind boolean;
  #L3f718e.  goto L3f71ba;
  #L3f7190.  call temp:= `getTypeTag`(v6) @signature `Lorg/mozilla/javascript/FunctionObject;.getTypeTag:(Ljava/lang/Class;)I` @kind static;
  #L3f7196.  v6:= temp;
  #L3f7198.  v5.`org.mozilla.javascript.FunctionObject.r` @type ^`int` := v6;
  #L3f719c.  goto L3f71ba;
  #L3f719e.  v6:= v5.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f71a2.  call temp:= `b`(v6) @signature `Lorg/mozilla/javascript/k;.b:()Ljava/lang/Class;` @kind virtual;
  #L3f71a8.  v6:= temp @kind object;
  #L3f71aa.  v7:= `@@org.mozilla.javascript.ScriptRuntime.ScriptableClass` @type ^`java.lang.Class` @kind object;
  #L3f71ae.  call temp:= `isAssignableFrom`(v7, v6) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3f71b4.  v7:= temp;
  #L3f71b6.  if v7 == 0 then goto L3f71c2;
  #L3f71ba.  call `setFunctionProtoAndParent`(v5, v8) @signature `Lorg/mozilla/javascript/ScriptRuntime;.setFunctionProtoAndParent:(Lorg/mozilla/javascript/BaseFunction;Lorg/mozilla/javascript/Scriptable;)V` @kind static;
  #L3f71c0.  return @kind void;
  #L3f71c2.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3f71c8.  v6:= temp @kind object;
  #L3f71ca.  v7:= "msg.bad.ctor.return" @kind object;
  #L3f71ce.  call temp:= `t`(v7, v6) @signature `Lorg/mozilla/javascript/Context;.t:(Ljava/lang/String;Ljava/lang/Object;)Lorg/mozilla/javascript/EvaluatorException;` @kind static;
  #L3f71d4.  v6:= temp @kind object;
  #L3f71d6.  throw v6;
}
procedure `java.lang.reflect.Method` `I`(`java.lang.reflect.Method`[] v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lorg/mozilla/javascript/FunctionObject;.I:([Ljava/lang/reflect/Method;Ljava/lang/String;)Ljava/lang/reflect/Method;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f6e20.  v0:= length @variable v5;
  #L3f6e22.  v1:= 0I;
  #L3f6e24.  v2:= 0I;
  #L3f6e26.  if v2 == v0 then goto L3f6e72;
  #L3f6e2a.  v3:= v5[v2] @kind object;
  #L3f6e2e.  if v3 == 0 then goto L3f6e6c;
  #L3f6e32.  call temp:= `getName`(v3) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L3f6e38.  v4:= temp @kind object;
  #L3f6e3a.  call temp:= `equals`(v6, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f6e40.  v4:= temp;
  #L3f6e42.  if v4 == 0 then goto L3f6e6c;
  #L3f6e46.  if v1 != 0 then goto L3f6e4e;
  #L3f6e4a.  v1:= v3 @kind object;
  #L3f6e4c.  goto L3f6e6c;
  #L3f6e4e.  call temp:= `getDeclaringClass`(v3) @signature `Ljava/lang/reflect/Method;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L3f6e54.  v5:= temp @kind object;
  #L3f6e56.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3f6e5c.  v5:= temp @kind object;
  #L3f6e5e.  v0:= "msg.no.overload" @kind object;
  #L3f6e62.  call temp:= `u`(v0, v6, v5) @signature `Lorg/mozilla/javascript/Context;.u:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/mozilla/javascript/EvaluatorException;` @kind static;
  #L3f6e68.  v5:= temp @kind object;
  #L3f6e6a.  throw v5;
  #L3f6e6c.  v2:= v2 + 1;
  #L3f6e70.  goto L3f6e26;
  #L3f6e72.  return v1 @kind object;
}
procedure `java.lang.reflect.Method`[] `J`(`java.lang.Class` v6 @kind object) @signature `Lorg/mozilla/javascript/FunctionObject;.J:(Ljava/lang/Class;)[Ljava/lang/reflect/Method;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f6e84.  v0:= 0I;
  #L3f6e86.  v1:= `@@org.mozilla.javascript.FunctionObject.t` @type ^`boolean` @kind boolean;
  #L3f6e8a.  if v1 != 0 then goto L3f6e9e;
  #L3f6e8e.  call temp:= `getDeclaredMethods`(v6) @signature `Ljava/lang/Class;.getDeclaredMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L3f6e94.  v1:= temp @kind object;
  #L3f6e96.  goto L3f6ea0;
  #L3f6e98.  v1:= 1I;
  #L3f6e9a.  `@@org.mozilla.javascript.FunctionObject.t` @type ^`boolean` := v1 @kind boolean;
  #L3f6e9e.  v1:= v0 @kind object;
  #L3f6ea0.  if v1 != 0 then goto L3f6eac;
  #L3f6ea4.  call temp:= `getMethods`(v6) @signature `Ljava/lang/Class;.getMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L3f6eaa.  v1:= temp @kind object;
  #L3f6eac.  v2:= 0I;
  #L3f6eae.  v3:= 0I;
  #L3f6eb0.  v4:= 0I;
  #L3f6eb2.  v5:= length @variable v1;
  #L3f6eb4.  if v3 >= v5 then goto L3f6efa;
  #L3f6eb8.  v5:= `@@org.mozilla.javascript.FunctionObject.t` @type ^`boolean` @kind boolean;
  #L3f6ebc.  if v5 == 0 then goto L3f6ed2;
  #L3f6ec0.  v5:= v1[v3] @kind object;
  #L3f6ec4.  call temp:= `getDeclaringClass`(v5) @signature `Ljava/lang/reflect/Method;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L3f6eca.  v5:= temp @kind object;
  #L3f6ecc.  if v5 == v6 then goto L3f6ef0;
  #L3f6ed0.  goto L3f6eea;
  #L3f6ed2.  v5:= v1[v3] @kind object;
  #L3f6ed6.  call temp:= `getModifiers`(v5) @signature `Ljava/lang/reflect/Method;.getModifiers:()I` @kind virtual;
  #L3f6edc.  v5:= temp;
  #L3f6ede.  call temp:= `isPublic`(v5) @signature `Ljava/lang/reflect/Modifier;.isPublic:(I)Z` @kind static;
  #L3f6ee4.  v5:= temp;
  #L3f6ee6.  if v5 != 0 then goto L3f6ef0;
  #L3f6eea.  v1[v3]:= v0 @kind object;
  #L3f6eee.  goto L3f6ef4;
  #L3f6ef0.  v4:= v4 + 1;
  #L3f6ef4.  v3:= v3 + 1;
  #L3f6ef8.  goto L3f6eb2;
  #L3f6efa.  v6:= new `java.lang.reflect.Method`[v4];
  #L3f6efe.  v0:= 0I;
  #L3f6f00.  v3:= length @variable v1;
  #L3f6f02.  if v2 >= v3 then goto L3f6f22;
  #L3f6f06.  v3:= v1[v2] @kind object;
  #L3f6f0a.  if v3 == 0 then goto L3f6f1c;
  #L3f6f0e.  v3:= v0 + 1;
  #L3f6f12.  v4:= v1[v2] @kind object;
  #L3f6f16.  v6[v0]:= v4 @kind object;
  #L3f6f1a.  v0:= v3;
  #L3f6f1c.  v2:= v2 + 1;
  #L3f6f20.  goto L3f6f00;
  #L3f6f22.  return v6 @kind object;
  catch `java.lang.SecurityException` @[L3f6e86..L3f6e96] goto L3f6e98;
}
procedure `java.lang.Object` `convertArg`(`org.mozilla.javascript.Context` v0 @kind object, `org.mozilla.javascript.Scriptable` v1 @kind object, `java.lang.Object` v2 @kind object, `int` v3 ) @signature `Lorg/mozilla/javascript/FunctionObject;.convertArg:(Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3f6cc8.  goto L3f6d58;
  #L3f6cce.  v0:= new `java.lang.IllegalArgumentException`;
  #L3f6cd2.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3f6cd8.  throw v0;
  #L3f6cda.  return v2 @kind object;
  #L3f6cdc.  call temp:= `toObjectOrNull`(v0, v2, v1) @signature `Lorg/mozilla/javascript/ScriptRuntime;.toObjectOrNull:(Lorg/mozilla/javascript/Context;Ljava/lang/Object;Lorg/mozilla/javascript/Scriptable;)Lorg/mozilla/javascript/Scriptable;` @kind static;
  #L3f6ce2.  v0:= temp @kind object;
  #L3f6ce4.  return v0 @kind object;
  #L3f6ce6.  v0:= instanceof @variable v2 @type ^`java.lang.Double` @kind boolean;
  #L3f6cea.  if v0 == 0 then goto L3f6cf0;
  #L3f6cee.  return v2 @kind object;
  #L3f6cf0.  v0:= new `java.lang.Double`;
  #L3f6cf4.  call temp:= `toNumber`(v2) @signature `Lorg/mozilla/javascript/ScriptRuntime;.toNumber:(Ljava/lang/Object;)D` @kind static;
  #L3f6cfa.  v1:= temp @kind wide;
  #L3f6cfc.  call `<init>`(v0, v1) @signature `Ljava/lang/Double;.<init>:(D)V` @kind direct;
  #L3f6d02.  return v0 @kind object;
  #L3f6d04.  v0:= instanceof @variable v2 @type ^`java.lang.Boolean` @kind boolean;
  #L3f6d08.  if v0 == 0 then goto L3f6d0e;
  #L3f6d0c.  return v2 @kind object;
  #L3f6d0e.  call temp:= `toBoolean`(v2) @signature `Lorg/mozilla/javascript/ScriptRuntime;.toBoolean:(Ljava/lang/Object;)Z` @kind static;
  #L3f6d14.  v0:= temp;
  #L3f6d16.  if v0 == 0 then goto L3f6d20;
  #L3f6d1a.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L3f6d1e.  goto L3f6d24;
  #L3f6d20.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L3f6d24.  return v0 @kind object;
  #L3f6d26.  v0:= instanceof @variable v2 @type ^`java.lang.Integer` @kind boolean;
  #L3f6d2a.  if v0 == 0 then goto L3f6d30;
  #L3f6d2e.  return v2 @kind object;
  #L3f6d30.  call temp:= `toInt32`(v2) @signature `Lorg/mozilla/javascript/ScriptRuntime;.toInt32:(Ljava/lang/Object;)I` @kind static;
  #L3f6d36.  v0:= temp;
  #L3f6d38.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3f6d3e.  v0:= temp @kind object;
  #L3f6d40.  return v0 @kind object;
  #L3f6d42.  v0:= instanceof @variable v2 @type ^`java.lang.String` @kind boolean;
  #L3f6d46.  if v0 == 0 then goto L3f6d4c;
  #L3f6d4a.  return v2 @kind object;
  #L3f6d4c.  call temp:= `toString`(v2) @signature `Lorg/mozilla/javascript/ScriptRuntime;.toString:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3f6d52.  v0:= temp @kind object;
  #L3f6d54.  return v0 @kind object;
  #L3f6d56.  
  #L3f6d58.  switch v3
                  | 1 => goto L3f6d42
                  | 2 => goto L3f6d26
                  | 3 => goto L3f6d04
                  | 4 => goto L3f6ce6
                  | 5 => goto L3f6cdc
                  | 6 => goto L3f6cda
                  | else => goto L3f6cce;
}
procedure `java.lang.Object` `convertArg`(`org.mozilla.javascript.Context` v1 @kind object, `org.mozilla.javascript.Scriptable` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lorg/mozilla/javascript/FunctionObject;.convertArg:(Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f6d88.  call temp:= `getTypeTag`(v4) @signature `Lorg/mozilla/javascript/FunctionObject;.getTypeTag:(Ljava/lang/Class;)I` @kind static;
  #L3f6d8e.  v0:= temp;
  #L3f6d90.  if v0 == 0 then goto L3f6d9e;
  #L3f6d94.  call temp:= `convertArg`(v1, v2, v3, v0) @signature `Lorg/mozilla/javascript/FunctionObject;.convertArg:(Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L3f6d9a.  v1:= temp @kind object;
  #L3f6d9c.  return v1 @kind object;
  #L3f6d9e.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3f6da4.  v1:= temp @kind object;
  #L3f6da6.  v2:= "msg.cant.convert" @kind object;
  #L3f6daa.  call temp:= `t`(v2, v1) @signature `Lorg/mozilla/javascript/Context;.t:(Ljava/lang/String;Ljava/lang/Object;)Lorg/mozilla/javascript/EvaluatorException;` @kind static;
  #L3f6db0.  v1:= temp @kind object;
  #L3f6db2.  throw v1;
}
procedure `int` `getTypeTag`(`java.lang.Class` v1 @kind object) @signature `Lorg/mozilla/javascript/FunctionObject;.getTypeTag:(Ljava/lang/Class;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f6a34.  v0:= `@@org.mozilla.javascript.ScriptRuntime.StringClass` @type ^`java.lang.Class` @kind object;
  #L3f6a38.  if v1 != v0 then goto L3f6a40;
  #L3f6a3c.  v1:= 1I;
  #L3f6a3e.  return v1;
  #L3f6a40.  v0:= `@@org.mozilla.javascript.ScriptRuntime.IntegerClass` @type ^`java.lang.Class` @kind object;
  #L3f6a44.  if v1 == v0 then goto L3f6aa2;
  #L3f6a48.  v0:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L3f6a4c.  if v1 != v0 then goto L3f6a52;
  #L3f6a50.  goto L3f6aa2;
  #L3f6a52.  v0:= `@@org.mozilla.javascript.ScriptRuntime.BooleanClass` @type ^`java.lang.Class` @kind object;
  #L3f6a56.  if v1 == v0 then goto L3f6a9e;
  #L3f6a5a.  v0:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L3f6a5e.  if v1 != v0 then goto L3f6a64;
  #L3f6a62.  goto L3f6a9e;
  #L3f6a64.  v0:= `@@org.mozilla.javascript.ScriptRuntime.DoubleClass` @type ^`java.lang.Class` @kind object;
  #L3f6a68.  if v1 == v0 then goto L3f6a9a;
  #L3f6a6c.  v0:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L3f6a70.  if v1 != v0 then goto L3f6a76;
  #L3f6a74.  goto L3f6a9a;
  #L3f6a76.  v0:= `@@org.mozilla.javascript.ScriptRuntime.ScriptableClass` @type ^`java.lang.Class` @kind object;
  #L3f6a7a.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3f6a80.  v0:= temp;
  #L3f6a82.  if v0 == 0 then goto L3f6a8a;
  #L3f6a86.  v1:= 5I;
  #L3f6a88.  return v1;
  #L3f6a8a.  v0:= `@@org.mozilla.javascript.ScriptRuntime.ObjectClass` @type ^`java.lang.Class` @kind object;
  #L3f6a8e.  if v1 != v0 then goto L3f6a96;
  #L3f6a92.  v1:= 6I;
  #L3f6a94.  return v1;
  #L3f6a96.  v1:= 0I;
  #L3f6a98.  return v1;
  #L3f6a9a.  v1:= 4I;
  #L3f6a9c.  return v1;
  #L3f6a9e.  v1:= 3I;
  #L3f6aa0.  return v1;
  #L3f6aa2.  v1:= 2I;
  #L3f6aa4.  return v1;
}
procedure `void` `readObject`(`org.mozilla.javascript.FunctionObject` v3 @kind this, `java.io.ObjectInputStream` v4 @kind object) @signature `Lorg/mozilla/javascript/FunctionObject;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3f7248.  call `defaultReadObject`(v4) @signature `Ljava/io/ObjectInputStream;.defaultReadObject:()V` @kind virtual;
  #L3f724e.  v4:= v3.`org.mozilla.javascript.FunctionObject.p` @type ^`int`;
  #L3f7252.  if v4 <= 0 then goto L3f728c;
  #L3f7256.  v0:= v3.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f725a.  v0:= v0.`org.mozilla.javascript.k.b` @type ^`java.lang.Class`[] @kind object;
  #L3f725e.  v4:= new `byte`[v4];
  #L3f7262.  v3.`org.mozilla.javascript.FunctionObject.o` @type ^`byte`[] := v4 @kind object;
  #L3f7266.  v4:= 0I;
  #L3f7268.  v1:= v3.`org.mozilla.javascript.FunctionObject.p` @type ^`int`;
  #L3f726c.  if v4 == v1 then goto L3f728c;
  #L3f7270.  v1:= v3.`org.mozilla.javascript.FunctionObject.o` @type ^`byte`[] @kind object;
  #L3f7274.  v2:= v0[v4] @kind object;
  #L3f7278.  call temp:= `getTypeTag`(v2) @signature `Lorg/mozilla/javascript/FunctionObject;.getTypeTag:(Ljava/lang/Class;)I` @kind static;
  #L3f727e.  v2:= temp;
  #L3f7280.  v2:= (`byte`) v2 @kind i2b;
  #L3f7282.  v1[v4]:= v2 @kind byte;
  #L3f7286.  v4:= v4 + 1;
  #L3f728a.  goto L3f7268;
  #L3f728c.  v4:= v3.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f7290.  call temp:= `h`(v4) @signature `Lorg/mozilla/javascript/k;.h:()Z` @kind virtual;
  #L3f7296.  v4:= temp;
  #L3f7298.  if v4 == 0 then goto L3f72cc;
  #L3f729c.  v4:= v3.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f72a0.  call temp:= `k`(v4) @signature `Lorg/mozilla/javascript/k;.k:()Ljava/lang/reflect/Method;` @kind virtual;
  #L3f72a6.  v4:= temp @kind object;
  #L3f72a8.  call temp:= `getReturnType`(v4) @signature `Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;` @kind virtual;
  #L3f72ae.  v4:= temp @kind object;
  #L3f72b0.  v0:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L3f72b4.  if v4 != v0 then goto L3f72c0;
  #L3f72b8.  v4:= 1I;
  #L3f72ba.  v3.`org.mozilla.javascript.FunctionObject.q` @type ^`boolean` := v4 @kind boolean;
  #L3f72be.  goto L3f72cc;
  #L3f72c0.  call temp:= `getTypeTag`(v4) @signature `Lorg/mozilla/javascript/FunctionObject;.getTypeTag:(Ljava/lang/Class;)I` @kind static;
  #L3f72c6.  v4:= temp;
  #L3f72c8.  v3.`org.mozilla.javascript.FunctionObject.r` @type ^`int` := v4;
  #L3f72cc.  return @kind void;
}
procedure `void` `K`(`org.mozilla.javascript.FunctionObject` v2 @kind this, `org.mozilla.javascript.Scriptable` v3 @kind object, `org.mozilla.javascript.Scriptable` v4 @kind object) @signature `Lorg/mozilla/javascript/FunctionObject;.K:(Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f7210.  call `setFunctionProtoAndParent`(v2, v3) @signature `Lorg/mozilla/javascript/ScriptRuntime;.setFunctionProtoAndParent:(Lorg/mozilla/javascript/BaseFunction;Lorg/mozilla/javascript/Scriptable;)V` @kind static;
  #L3f7216.  call `setImmunePrototypeProperty`(v2, v4) @signature `Lorg/mozilla/javascript/BaseFunction;.setImmunePrototypeProperty:(Ljava/lang/Object;)V` @kind virtual;
  #L3f721c.  call `setParentScope`(v4, v2) @signature `Lorg/mozilla/javascript/Scriptable;.setParentScope:(Lorg/mozilla/javascript/Scriptable;)V` @kind interface;
  #L3f7222.  v0:= "constructor" @kind object;
  #L3f7226.  v1:= 7I;
  #L3f7228.  call `defineProperty`(v4, v0, v2, v1) @signature `Lorg/mozilla/javascript/ScriptableObject;.defineProperty:(Lorg/mozilla/javascript/Scriptable;Ljava/lang/String;Ljava/lang/Object;I)V` @kind static;
  #L3f722e.  call `setParentScope`(v2, v3) @signature `Lorg/mozilla/javascript/ScriptableObject;.setParentScope:(Lorg/mozilla/javascript/Scriptable;)V` @kind virtual;
  #L3f7234.  return @kind void;
}
procedure `boolean` `L`(`org.mozilla.javascript.FunctionObject` v2 @kind this) @signature `Lorg/mozilla/javascript/FunctionObject;.L:()Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f69b4.  v0:= v2.`org.mozilla.javascript.FunctionObject.p` @type ^`int`;
  #L3f69b8.  v1:= -2I;
  #L3f69ba.  if v0 != v1 then goto L3f69c2;
  #L3f69be.  v0:= 1I;
  #L3f69c0.  goto L3f69c4;
  #L3f69c2.  v0:= 0I;
  #L3f69c4.  return v0;
}
procedure `boolean` `M`(`org.mozilla.javascript.FunctionObject` v2 @kind this) @signature `Lorg/mozilla/javascript/FunctionObject;.M:()Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f69d8.  v0:= v2.`org.mozilla.javascript.FunctionObject.p` @type ^`int`;
  #L3f69dc.  v1:= -1I;
  #L3f69de.  if v0 != v1 then goto L3f69e6;
  #L3f69e2.  v0:= 1I;
  #L3f69e4.  goto L3f69e8;
  #L3f69e6.  v0:= 0I;
  #L3f69e8.  return v0;
}
procedure `void` `addAsConstructor`(`org.mozilla.javascript.FunctionObject` v1 @kind this, `org.mozilla.javascript.Scriptable` v2 @kind object, `org.mozilla.javascript.Scriptable` v3 @kind object) @signature `Lorg/mozilla/javascript/FunctionObject;.addAsConstructor:(Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f71e8.  call `K`(v1, v2, v3) @signature `Lorg/mozilla/javascript/FunctionObject;.K:(Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;)V` @kind virtual;
  #L3f71ee.  call temp:= `getClassName`(v3) @signature `Lorg/mozilla/javascript/Scriptable;.getClassName:()Ljava/lang/String;` @kind interface;
  #L3f71f4.  v3:= temp @kind object;
  #L3f71f6.  v0:= 2I;
  #L3f71f8.  call `defineProperty`(v2, v3, v1, v0) @signature `Lorg/mozilla/javascript/ScriptableObject;.defineProperty:(Lorg/mozilla/javascript/Scriptable;Ljava/lang/String;Ljava/lang/Object;I)V` @kind static;
  #L3f71fe.  return @kind void;
}
procedure `java.lang.Object` `call`(`org.mozilla.javascript.FunctionObject` v8 @kind this, `org.mozilla.javascript.Context` v9 @kind object, `org.mozilla.javascript.Scriptable` v10 @kind object, `org.mozilla.javascript.Scriptable` v11 @kind object, `java.lang.Object`[] v12 @kind object) @signature `Lorg/mozilla/javascript/FunctionObject;.call:(Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3f6ab8.  v0:= length @variable v12;
  #L3f6aba.  v1:= 0I;
  #L3f6abc.  v2:= 0I;
  #L3f6abe.  if v2 >= v0 then goto L3f6ae4;
  #L3f6ac2.  v3:= v12[v2] @kind object;
  #L3f6ac6.  v3:= instanceof @variable v3 @type ^`org.mozilla.javascript.ConsString` @kind boolean;
  #L3f6aca.  if v3 == 0 then goto L3f6ade;
  #L3f6ace.  v3:= v12[v2] @kind object;
  #L3f6ad2.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f6ad8.  v3:= temp @kind object;
  #L3f6ada.  v12[v2]:= v3 @kind object;
  #L3f6ade.  v2:= v2 + 1;
  #L3f6ae2.  goto L3f6abe;
  #L3f6ae4.  v2:= v8.`org.mozilla.javascript.FunctionObject.p` @type ^`int`;
  #L3f6ae8.  v3:= 0I;
  #L3f6aea.  v4:= 1I;
  #L3f6aec.  if v2 >= 0 then goto L3f6b7e;
  #L3f6af0.  v0:= -1I;
  #L3f6af2.  v5:= 3I;
  #L3f6af4.  v6:= 2I;
  #L3f6af6.  v7:= 4I;
  #L3f6af8.  if v2 != v0 then goto L3f6b22;
  #L3f6afc.  v0:= new `java.lang.Object`[v7];
  #L3f6b00.  v0[v1]:= v9 @kind object;
  #L3f6b04.  v0[v4]:= v11 @kind object;
  #L3f6b08.  v0[v6]:= v12 @kind object;
  #L3f6b0c.  v0[v5]:= v8 @kind object;
  #L3f6b10.  v11:= v8.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f6b14.  call temp:= `f`(v11, v3, v0) @signature `Lorg/mozilla/javascript/k;.f:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f6b1a.  v11:= temp @kind object;
  #L3f6b1c.  v1:= 1I;
  #L3f6b1e.  goto L3f6c8a;
  #L3f6b22.  if v11 != 0 then goto L3f6b2a;
  #L3f6b26.  v11:= 1I;
  #L3f6b28.  goto L3f6b2c;
  #L3f6b2a.  v11:= 0I;
  #L3f6b2c.  if v11 == 0 then goto L3f6b36;
  #L3f6b30.  v11:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L3f6b34.  goto L3f6b3a;
  #L3f6b36.  v11:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L3f6b3a.  v0:= new `java.lang.Object`[v7];
  #L3f6b3e.  v0[v1]:= v9 @kind object;
  #L3f6b42.  v0[v4]:= v12 @kind object;
  #L3f6b46.  v0[v6]:= v8 @kind object;
  #L3f6b4a.  v0[v5]:= v11 @kind object;
  #L3f6b4e.  v11:= v8.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f6b52.  call temp:= `g`(v11) @signature `Lorg/mozilla/javascript/k;.g:()Z` @kind virtual;
  #L3f6b58.  v11:= temp;
  #L3f6b5a.  if v11 == 0 then goto L3f6b6e;
  #L3f6b5e.  v11:= v8.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f6b62.  call temp:= `l`(v11, v0) @signature `Lorg/mozilla/javascript/k;.l:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f6b68.  v11:= temp @kind object;
  #L3f6b6a.  goto L3f6c8a;
  #L3f6b6e.  v11:= v8.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f6b72.  call temp:= `f`(v11, v3, v0) @signature `Lorg/mozilla/javascript/k;.f:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f6b78.  v11:= temp @kind object;
  #L3f6b7a.  goto L3f6c8a;
  #L3f6b7e.  v2:= v8.`org.mozilla.javascript.FunctionObject.s` @type ^`boolean` @kind boolean;
  #L3f6b82.  if v2 != 0 then goto L3f6bd8;
  #L3f6b86.  v2:= v8.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f6b8a.  call temp:= `b`(v2) @signature `Lorg/mozilla/javascript/k;.b:()Ljava/lang/Class;` @kind virtual;
  #L3f6b90.  v2:= temp @kind object;
  #L3f6b92.  call temp:= `isInstance`(v2, v11) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f6b98.  v5:= temp;
  #L3f6b9a.  if v5 != 0 then goto L3f6bd8;
  #L3f6b9e.  if v11 != v10 then goto L3f6bbe;
  #L3f6ba2.  call temp:= `getParentScope`(v8) @signature `Lorg/mozilla/javascript/ScriptableObject;.getParentScope:()Lorg/mozilla/javascript/Scriptable;` @kind virtual;
  #L3f6ba8.  v5:= temp @kind object;
  #L3f6baa.  if v10 == v5 then goto L3f6bbe;
  #L3f6bae.  call temp:= `isInstance`(v2, v5) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f6bb4.  v2:= temp;
  #L3f6bb6.  if v2 == 0 then goto L3f6bc0;
  #L3f6bba.  v11:= v5 @kind object;
  #L3f6bbc.  goto L3f6bc0;
  #L3f6bbe.  v2:= 0I;
  #L3f6bc0.  if v2 == 0 then goto L3f6bc6;
  #L3f6bc4.  goto L3f6bd8;
  #L3f6bc6.  v9:= v8.`org.mozilla.javascript.FunctionObject.n` @type ^`java.lang.String` @kind object;
  #L3f6bca.  v10:= "msg.incompat.call" @kind object;
  #L3f6bce.  call temp:= `typeError1`(v10, v9) @signature `Lorg/mozilla/javascript/ScriptRuntime;.typeError1:(Ljava/lang/String;Ljava/lang/String;)Lorg/mozilla/javascript/EcmaError;` @kind static;
  #L3f6bd4.  v9:= temp @kind object;
  #L3f6bd6.  throw v9;
  #L3f6bd8.  v2:= v8.`org.mozilla.javascript.FunctionObject.p` @type ^`int`;
  #L3f6bdc.  if v2 != v0 then goto L3f6c1e;
  #L3f6be0.  v2:= v12 @kind object;
  #L3f6be2.  v0:= 0I;
  #L3f6be4.  v5:= v8.`org.mozilla.javascript.FunctionObject.p` @type ^`int`;
  #L3f6be8.  if v0 == v5 then goto L3f6c5e;
  #L3f6bec.  v5:= v12[v0] @kind object;
  #L3f6bf0.  v6:= v8.`org.mozilla.javascript.FunctionObject.o` @type ^`byte`[] @kind object;
  #L3f6bf4.  v6:= v6[v0] @kind byte;
  #L3f6bf8.  call temp:= `convertArg`(v9, v10, v5, v6) @signature `Lorg/mozilla/javascript/FunctionObject;.convertArg:(Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L3f6bfe.  v6:= temp @kind object;
  #L3f6c00.  if v5 == v6 then goto L3f6c18;
  #L3f6c04.  if v2 != v12 then goto L3f6c14;
  #L3f6c08.  call temp:= `clone`(v12) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3f6c0e.  v2:= temp @kind object;
  #L3f6c10.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L3f6c14.  v2[v0]:= v6 @kind object;
  #L3f6c18.  v0:= v0 + 1;
  #L3f6c1c.  goto L3f6be4;
  #L3f6c1e.  if v2 != 0 then goto L3f6c28;
  #L3f6c22.  v2:= `@@org.mozilla.javascript.ScriptRuntime.emptyArgs` @type ^`java.lang.Object`[] @kind object;
  #L3f6c26.  goto L3f6c5e;
  #L3f6c28.  v2:= new `java.lang.Object`[v2];
  #L3f6c2c.  v5:= 0I;
  #L3f6c2e.  v6:= v8.`org.mozilla.javascript.FunctionObject.p` @type ^`int`;
  #L3f6c32.  if v5 == v6 then goto L3f6c5e;
  #L3f6c36.  if v5 >= v0 then goto L3f6c40;
  #L3f6c3a.  v6:= v12[v5] @kind object;
  #L3f6c3e.  goto L3f6c44;
  #L3f6c40.  v6:= `@@org.mozilla.javascript.Undefined.instance` @type ^`java.lang.Object` @kind object;
  #L3f6c44.  v7:= v8.`org.mozilla.javascript.FunctionObject.o` @type ^`byte`[] @kind object;
  #L3f6c48.  v7:= v7[v5] @kind byte;
  #L3f6c4c.  call temp:= `convertArg`(v9, v10, v6, v7) @signature `Lorg/mozilla/javascript/FunctionObject;.convertArg:(Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L3f6c52.  v6:= temp @kind object;
  #L3f6c54.  v2[v5]:= v6 @kind object;
  #L3f6c58.  v5:= v5 + 1;
  #L3f6c5c.  goto L3f6c2e;
  #L3f6c5e.  v12:= v8.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f6c62.  call temp:= `h`(v12) @signature `Lorg/mozilla/javascript/k;.h:()Z` @kind virtual;
  #L3f6c68.  v12:= temp;
  #L3f6c6a.  if v12 == 0 then goto L3f6c7e;
  #L3f6c6e.  v12:= v8.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f6c72.  call temp:= `f`(v12, v11, v2) @signature `Lorg/mozilla/javascript/k;.f:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f6c78.  v11:= temp @kind object;
  #L3f6c7a.  goto L3f6b1c;
  #L3f6c7e.  v11:= v8.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f6c82.  call temp:= `l`(v11, v2) @signature `Lorg/mozilla/javascript/k;.l:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f6c88.  v11:= temp @kind object;
  #L3f6c8a.  if v1 == 0 then goto L3f6cb4;
  #L3f6c8e.  v12:= v8.`org.mozilla.javascript.FunctionObject.q` @type ^`boolean` @kind boolean;
  #L3f6c92.  if v12 == 0 then goto L3f6c9c;
  #L3f6c96.  v11:= `@@org.mozilla.javascript.Undefined.instance` @type ^`java.lang.Object` @kind object;
  #L3f6c9a.  goto L3f6cb4;
  #L3f6c9c.  v12:= v8.`org.mozilla.javascript.FunctionObject.r` @type ^`int`;
  #L3f6ca0.  if v12 != 0 then goto L3f6cb4;
  #L3f6ca4.  call temp:= `getWrapFactory`(v9) @signature `Lorg/mozilla/javascript/Context;.getWrapFactory:()Lorg/mozilla/javascript/WrapFactory;` @kind virtual;
  #L3f6caa.  v12:= temp @kind object;
  #L3f6cac.  call temp:= `wrap`(v12, v9, v10, v11, v3) @signature `Lorg/mozilla/javascript/WrapFactory;.wrap:(Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L3f6cb2.  v11:= temp @kind object;
  #L3f6cb4.  return v11 @kind object;
}
procedure `org.mozilla.javascript.Scriptable` `createObject`(`org.mozilla.javascript.FunctionObject` v0 @kind this, `org.mozilla.javascript.Context` v1 @kind object, `org.mozilla.javascript.Scriptable` v2 @kind object) @signature `Lorg/mozilla/javascript/FunctionObject;.createObject:(Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;)Lorg/mozilla/javascript/Scriptable;` @AccessFlag PUBLIC {
    temp;

  #L3f6f44.  v1:= v0.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f6f48.  call temp:= `g`(v1) @signature `Lorg/mozilla/javascript/k;.g:()Z` @kind virtual;
  #L3f6f4e.  v1:= temp;
  #L3f6f50.  if v1 != 0 then goto L3f6fa2;
  #L3f6f54.  v1:= v0.`org.mozilla.javascript.FunctionObject.p` @type ^`int`;
  #L3f6f58.  v2:= -2I;
  #L3f6f5a.  if v1 != v2 then goto L3f6f60;
  #L3f6f5e.  goto L3f6fa2;
  #L3f6f60.  v1:= v0.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f6f64.  call temp:= `b`(v1) @signature `Lorg/mozilla/javascript/k;.b:()Ljava/lang/Class;` @kind virtual;
  #L3f6f6a.  v1:= temp @kind object;
  #L3f6f6c.  call temp:= `newInstance`(v1) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L3f6f72.  v1:= temp @kind object;
  #L3f6f74.  v1:= (`org.mozilla.javascript.Scriptable`) v1 @kind object;
  #L3f6f78.  call temp:= `getClassPrototype`(v0) @signature `Lorg/mozilla/javascript/BaseFunction;.getClassPrototype:()Lorg/mozilla/javascript/Scriptable;` @kind virtual;
  #L3f6f7e.  v2:= temp @kind object;
  #L3f6f80.  call `setPrototype`(v1, v2) @signature `Lorg/mozilla/javascript/Scriptable;.setPrototype:(Lorg/mozilla/javascript/Scriptable;)V` @kind interface;
  #L3f6f86.  call temp:= `getParentScope`(v0) @signature `Lorg/mozilla/javascript/ScriptableObject;.getParentScope:()Lorg/mozilla/javascript/Scriptable;` @kind virtual;
  #L3f6f8c.  v2:= temp @kind object;
  #L3f6f8e.  call `setParentScope`(v1, v2) @signature `Lorg/mozilla/javascript/Scriptable;.setParentScope:(Lorg/mozilla/javascript/Scriptable;)V` @kind interface;
  #L3f6f94.  return v1 @kind object;
  #L3f6f96.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L3f6f98.  call temp:= `throwAsScriptRuntimeEx`(v1) @signature `Lorg/mozilla/javascript/Context;.throwAsScriptRuntimeEx:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L3f6f9e.  v1:= temp @kind object;
  #L3f6fa0.  throw v1;
  #L3f6fa2.  v1:= 0I;
  #L3f6fa4.  return v1 @kind object;
  catch `java.lang.Exception` @[L3f6f60..L3f6f78] goto L3f6f96;
}
procedure `int` `getArity`(`org.mozilla.javascript.FunctionObject` v1 @kind this) @signature `Lorg/mozilla/javascript/FunctionObject;.getArity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f69fc.  v0:= v1.`org.mozilla.javascript.FunctionObject.p` @type ^`int`;
  #L3f6a00.  if v0 >= 0 then goto L3f6a06;
  #L3f6a04.  v0:= 1I;
  #L3f6a06.  return v0;
}
procedure `java.lang.String` `getFunctionName`(`org.mozilla.javascript.FunctionObject` v1 @kind this) @signature `Lorg/mozilla/javascript/FunctionObject;.getFunctionName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6dc4.  v0:= v1.`org.mozilla.javascript.FunctionObject.n` @type ^`java.lang.String` @kind object;
  #L3f6dc8.  if v0 != 0 then goto L3f6dd0;
  #L3f6dcc.  v0:= "" @kind object;
  #L3f6dd0.  return v0 @kind object;
}
procedure `int` `getLength`(`org.mozilla.javascript.FunctionObject` v1 @kind this) @signature `Lorg/mozilla/javascript/FunctionObject;.getLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6a18.  call temp:= `getArity`(v1) @signature `Lorg/mozilla/javascript/FunctionObject;.getArity:()I` @kind virtual;
  #L3f6a1e.  v0:= temp;
  #L3f6a20.  return v0;
}
procedure `java.lang.reflect.Member` `getMethodOrConstructor`(`org.mozilla.javascript.FunctionObject` v1 @kind this) @signature `Lorg/mozilla/javascript/FunctionObject;.getMethodOrConstructor:()Ljava/lang/reflect/Member;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6de4.  v0:= v1.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f6de8.  call temp:= `h`(v0) @signature `Lorg/mozilla/javascript/k;.h:()Z` @kind virtual;
  #L3f6dee.  v0:= temp;
  #L3f6df0.  if v0 == 0 then goto L3f6e02;
  #L3f6df4.  v0:= v1.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f6df8.  call temp:= `k`(v0) @signature `Lorg/mozilla/javascript/k;.k:()Ljava/lang/reflect/Method;` @kind virtual;
  #L3f6dfe.  v0:= temp @kind object;
  #L3f6e00.  return v0 @kind object;
  #L3f6e02.  v0:= v1.`org.mozilla.javascript.FunctionObject.m` @type ^`org.mozilla.javascript.k` @kind object;
  #L3f6e06.  call temp:= `a`(v0) @signature `Lorg/mozilla/javascript/k;.a:()Ljava/lang/reflect/Constructor;` @kind virtual;
  #L3f6e0c.  v0:= temp @kind object;
  #L3f6e0e.  return v0 @kind object;
}
