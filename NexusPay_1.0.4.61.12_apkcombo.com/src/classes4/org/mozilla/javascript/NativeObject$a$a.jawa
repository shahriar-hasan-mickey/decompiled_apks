record `org.mozilla.javascript.NativeObject$a$a` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.lang.Object`[] `org.mozilla.javascript.NativeObject$a$a.a` @AccessFlag ;
  `java.lang.Object` `org.mozilla.javascript.NativeObject$a$a.b` @AccessFlag ;
  `int` `org.mozilla.javascript.NativeObject$a$a.c` @AccessFlag ;
  `org.mozilla.javascript.NativeObject$a` `org.mozilla.javascript.NativeObject$a$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.mozilla.javascript.NativeObject$a$a` v0 @kind this, `org.mozilla.javascript.NativeObject$a` v1 @kind object) @signature `Lorg/mozilla/javascript/NativeObject$a$a;.<init>:(Lorg/mozilla/javascript/NativeObject$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L411328.  v0.`org.mozilla.javascript.NativeObject$a$a.d` @type ^`org.mozilla.javascript.NativeObject$a` := v1 @kind object;
  #L41132c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L411332.  v1:= v0.`org.mozilla.javascript.NativeObject$a$a.d` @type ^`org.mozilla.javascript.NativeObject$a` @kind object;
  #L411336.  v1:= v1.`org.mozilla.javascript.NativeObject$a.a` @type ^`org.mozilla.javascript.NativeObject` @kind object;
  #L41133a.  call temp:= `getIds`(v1) @signature `Lorg/mozilla/javascript/ScriptableObject;.getIds:()[Ljava/lang/Object;` @kind virtual;
  #L411340.  v1:= temp @kind object;
  #L411342.  v0.`org.mozilla.javascript.NativeObject$a$a.a` @type ^`java.lang.Object`[] := v1 @kind object;
  #L411346.  v1:= 0I;
  #L411348.  v0.`org.mozilla.javascript.NativeObject$a$a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L41134c.  v1:= 0I;
  #L41134e.  v0.`org.mozilla.javascript.NativeObject$a$a.c` @type ^`int` := v1;
  #L411352.  return @kind void;
}
procedure `java.util.Map$Entry` `a`(`org.mozilla.javascript.NativeObject$a$a` v3 @kind this) @signature `Lorg/mozilla/javascript/NativeObject$a$a;.a:()Ljava/util/Map$Entry;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4112e4.  v0:= v3.`org.mozilla.javascript.NativeObject$a$a.a` @type ^`java.lang.Object`[] @kind object;
  #L4112e8.  v1:= v3.`org.mozilla.javascript.NativeObject$a$a.c` @type ^`int`;
  #L4112ec.  v2:= v1 + 1;
  #L4112f0.  v3.`org.mozilla.javascript.NativeObject$a$a.c` @type ^`int` := v2;
  #L4112f4.  v0:= v0[v1] @kind object;
  #L4112f8.  v3.`org.mozilla.javascript.NativeObject$a$a.b` @type ^`java.lang.Object` := v0 @kind object;
  #L4112fc.  v1:= v3.`org.mozilla.javascript.NativeObject$a$a.d` @type ^`org.mozilla.javascript.NativeObject$a` @kind object;
  #L411300.  v1:= v1.`org.mozilla.javascript.NativeObject$a.a` @type ^`org.mozilla.javascript.NativeObject` @kind object;
  #L411304.  call temp:= `get`(v1, v0) @signature `Lorg/mozilla/javascript/ScriptableObject;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L41130a.  v1:= temp @kind object;
  #L41130c.  v2:= new `org.mozilla.javascript.NativeObject$a$a$a`;
  #L411310.  call `<init>`(v2, v3, v0, v1) @signature `Lorg/mozilla/javascript/NativeObject$a$a$a;.<init>:(Lorg/mozilla/javascript/NativeObject$a$a;Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L411316.  return v2 @kind object;
}
procedure `boolean` `hasNext`(`org.mozilla.javascript.NativeObject$a$a` v2 @kind this) @signature `Lorg/mozilla/javascript/NativeObject$a$a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4112a0.  v0:= v2.`org.mozilla.javascript.NativeObject$a$a.c` @type ^`int`;
  #L4112a4.  v1:= v2.`org.mozilla.javascript.NativeObject$a$a.a` @type ^`java.lang.Object`[] @kind object;
  #L4112a8.  v1:= length @variable v1;
  #L4112aa.  if v0 >= v1 then goto L4112b2;
  #L4112ae.  v0:= 1I;
  #L4112b0.  goto L4112b4;
  #L4112b2.  v0:= 0I;
  #L4112b4.  return v0;
}
procedure `java.lang.Object` `next`(`org.mozilla.javascript.NativeObject$a$a` v1 @kind this) @signature `Lorg/mozilla/javascript/NativeObject$a$a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4112c8.  call temp:= `a`(v1) @signature `Lorg/mozilla/javascript/NativeObject$a$a;.a:()Ljava/util/Map$Entry;` @kind virtual;
  #L4112ce.  v0:= temp @kind object;
  #L4112d0.  return v0 @kind object;
}
procedure `void` `remove`(`org.mozilla.javascript.NativeObject$a$a` v2 @kind this) @signature `Lorg/mozilla/javascript/NativeObject$a$a;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L411364.  v0:= v2.`org.mozilla.javascript.NativeObject$a$a.b` @type ^`java.lang.Object` @kind object;
  #L411368.  if v0 == 0 then goto L411382;
  #L41136c.  v1:= v2.`org.mozilla.javascript.NativeObject$a$a.d` @type ^`org.mozilla.javascript.NativeObject$a` @kind object;
  #L411370.  v1:= v1.`org.mozilla.javascript.NativeObject$a.a` @type ^`org.mozilla.javascript.NativeObject` @kind object;
  #L411374.  call temp:= `remove`(v1, v0) @signature `Lorg/mozilla/javascript/NativeObject;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L41137a.  v0:= 0I;
  #L41137c.  v2.`org.mozilla.javascript.NativeObject$a$a.b` @type ^`java.lang.Object` := v0 @kind object;
  #L411380.  return @kind void;
  #L411382.  v0:= new `java.lang.IllegalStateException`;
  #L411386.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L41138c.  throw v0;
}
