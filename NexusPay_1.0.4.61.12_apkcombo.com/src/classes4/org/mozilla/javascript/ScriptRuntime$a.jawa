record `org.mozilla.javascript.ScriptRuntime$a` @kind class @AccessFlag FINAL extends `org.mozilla.javascript.BaseFunction` @kind class {
}
global `long` `@@org.mozilla.javascript.ScriptRuntime$a.serialVersionUID` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`org.mozilla.javascript.ScriptRuntime$a` v0 @kind this) @signature `Lorg/mozilla/javascript/ScriptRuntime$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41d328.  call `<init>`(v0) @signature `Lorg/mozilla/javascript/BaseFunction;.<init>:()V` @kind direct;
  #L41d32e.  return @kind void;
}
procedure `java.lang.Object` `call`(`org.mozilla.javascript.ScriptRuntime$a` v0 @kind this, `org.mozilla.javascript.Context` v1 @kind object, `org.mozilla.javascript.Scriptable` v2 @kind object, `org.mozilla.javascript.Scriptable` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Lorg/mozilla/javascript/ScriptRuntime$a;.call:(Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L41d308.  v1:= "msg.op.not.allowed" @kind object;
  #L41d30c.  call temp:= `typeError0`(v1) @signature `Lorg/mozilla/javascript/ScriptRuntime;.typeError0:(Ljava/lang/String;)Lorg/mozilla/javascript/EcmaError;` @kind static;
  #L41d312.  v1:= temp @kind object;
  #L41d314.  throw v1;
}
procedure `int` `getLength`(`org.mozilla.javascript.ScriptRuntime$a` v1 @kind this) @signature `Lorg/mozilla/javascript/ScriptRuntime$a;.getLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41d2f4.  v0:= 0I;
  #L41d2f6.  return v0;
}
