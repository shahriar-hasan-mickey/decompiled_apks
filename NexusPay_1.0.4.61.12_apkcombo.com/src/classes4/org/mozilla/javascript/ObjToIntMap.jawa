record `org.mozilla.javascript.ObjToIntMap` @kind class @AccessFlag PUBLIC extends `java.io.Serializable` @kind interface {
  `java.lang.Object`[] `org.mozilla.javascript.ObjToIntMap.a` @AccessFlag PRIVATE_TRANSIENT;
  `int`[] `org.mozilla.javascript.ObjToIntMap.b` @AccessFlag PRIVATE_TRANSIENT;
  `int` `org.mozilla.javascript.ObjToIntMap.c` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.ObjToIntMap.d` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.ObjToIntMap.e` @AccessFlag PRIVATE_TRANSIENT;
}
global `java.lang.Object` `@@org.mozilla.javascript.ObjToIntMap.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.mozilla.javascript.ObjToIntMap.serialVersionUID` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/mozilla/javascript/ObjToIntMap;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L41686c.  v0:= new `java.lang.Object`;
  #L416870.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L416876.  `@@org.mozilla.javascript.ObjToIntMap.f` @type ^`java.lang.Object` := v0 @kind object;
  #L41687a.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ObjToIntMap` v1 @kind this) @signature `Lorg/mozilla/javascript/ObjToIntMap;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L41688c.  v0:= 4I;
  #L41688e.  call `<init>`(v1, v0) @signature `Lorg/mozilla/javascript/ObjToIntMap;.<init>:(I)V` @kind direct;
  #L416894.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ObjToIntMap` v2 @kind this, `int` v3 ) @signature `Lorg/mozilla/javascript/ObjToIntMap;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4168a8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4168ae.  if v3 >= 0 then goto L4168b8;
  #L4168b2.  call temp:= `codeBug`() @signature `Lorg/mozilla/javascript/Kit;.codeBug:()Ljava/lang/RuntimeException;` @kind static;
  #L4168b8.  v3:= v3 * 4;
  #L4168bc.  v3:= v3 / 3;
  #L4168c0.  v0:= 2I;
  #L4168c2.  v1:= 1I;
  #L4168c4.  v1:= v1 ^< v0 @kind int;
  #L4168c6.  if v1 >= v3 then goto L4168d0;
  #L4168ca.  v0:= v0 + 1;
  #L4168ce.  goto L4168c2;
  #L4168d0.  v2.`org.mozilla.javascript.ObjToIntMap.c` @type ^`int` := v0;
  #L4168d4.  return @kind void;
}
procedure `java.lang.Object` `a`() @signature `Lorg/mozilla/javascript/ObjToIntMap;.a:()Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L4167cc.  v0:= `@@org.mozilla.javascript.ObjToIntMap.f` @type ^`java.lang.Object` @kind object;
  #L4167d0.  return v0 @kind object;
}
procedure `int` `b`(`org.mozilla.javascript.ObjToIntMap` v10 @kind this, `java.lang.Object` v11 @kind object) @signature `Lorg/mozilla/javascript/ObjToIntMap;.b:(Ljava/lang/Object;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4164c0.  call temp:= `hashCode`(v11) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4164c6.  v0:= temp;
  #L4164c8.  v1:= v10.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L4164cc.  v2:= -1I;
  #L4164ce.  v3:= 1I;
  #L4164d0.  if v1 == 0 then goto L416578;
  #L4164d4.  v4:= -1640531527I;
  #L4164da.  v4:= v4 * v0 @kind int;
  #L4164de.  v5:= v10.`org.mozilla.javascript.ObjToIntMap.c` @type ^`int`;
  #L4164e2.  v6:= v5 - 32;
  #L4164e6.  v6:= v4 ^>> v6 @kind int;
  #L4164ea.  v1:= v1[v6] @kind object;
  #L4164ee.  if v1 == 0 then goto L41657a;
  #L4164f2.  v5:= v3 ^< v5 @kind int;
  #L4164f6.  if v1 == v11 then goto L416576;
  #L4164fa.  v7:= v10.`org.mozilla.javascript.ObjToIntMap.b` @type ^`int`[] @kind object;
  #L4164fe.  v8:= v5 + v6 @kind int;
  #L416502.  v7:= v7[v8];
  #L416506.  if v7 != v0 then goto L416518;
  #L41650a.  call temp:= `equals`(v1, v11) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L416510.  v7:= temp;
  #L416512.  if v7 == 0 then goto L416518;
  #L416516.  goto L416576;
  #L416518.  v7:= `@@org.mozilla.javascript.ObjToIntMap.f` @type ^`java.lang.Object` @kind object;
  #L41651c.  if v1 != v7 then goto L416522;
  #L416520.  v2:= v6;
  #L416522.  v1:= v5 + -1;
  #L416526.  v7:= v10.`org.mozilla.javascript.ObjToIntMap.c` @type ^`int`;
  #L41652a.  call temp:= `g`(v4, v1, v7) @signature `Lorg/mozilla/javascript/ObjToIntMap;.g:(III)I` @kind static;
  #L416530.  v4:= temp;
  #L416532.  v6:= v6 + v4 @kind int;
  #L416534.  v6:= v6 ^& v1 @kind int;
  #L416536.  v7:= v10.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L41653a.  v7:= v7[v6] @kind object;
  #L41653e.  if v7 != 0 then goto L416544;
  #L416542.  goto L41657a;
  #L416544.  if v7 == v11 then goto L416576;
  #L416548.  v8:= v10.`org.mozilla.javascript.ObjToIntMap.b` @type ^`int`[] @kind object;
  #L41654c.  v9:= v5 + v6 @kind int;
  #L416550.  v8:= v8[v9];
  #L416554.  if v8 != v0 then goto L416566;
  #L416558.  call temp:= `equals`(v7, v11) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41655e.  v8:= temp;
  #L416560.  if v8 == 0 then goto L416566;
  #L416564.  goto L416576;
  #L416566.  v8:= `@@org.mozilla.javascript.ObjToIntMap.f` @type ^`java.lang.Object` @kind object;
  #L41656a.  if v7 != v8 then goto L416532;
  #L41656e.  if v2 >= 0 then goto L416532;
  #L416572.  v2:= v6;
  #L416574.  goto L416532;
  #L416576.  return v6;
  #L416578.  v6:= -1I;
  #L41657a.  if v2 < 0 then goto L416580;
  #L41657e.  goto L4165aa;
  #L416580.  v1:= v10.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L416584.  if v1 == 0 then goto L4165d0;
  #L416588.  v1:= v10.`org.mozilla.javascript.ObjToIntMap.e` @type ^`int`;
  #L41658c.  v2:= v1 * 4;
  #L416590.  v4:= v10.`org.mozilla.javascript.ObjToIntMap.c` @type ^`int`;
  #L416594.  v4:= v3 ^< v4 @kind int;
  #L416598.  v4:= v4 * 3;
  #L41659c.  if v2 < v4 then goto L4165a2;
  #L4165a0.  goto L4165d0;
  #L4165a2.  v1:= v1 + v3 @kind int;
  #L4165a4.  v10.`org.mozilla.javascript.ObjToIntMap.e` @type ^`int` := v1;
  #L4165a8.  v2:= v6;
  #L4165aa.  v1:= v10.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L4165ae.  v1[v2]:= v11 @kind object;
  #L4165b2.  v11:= v10.`org.mozilla.javascript.ObjToIntMap.b` @type ^`int`[] @kind object;
  #L4165b6.  v1:= v10.`org.mozilla.javascript.ObjToIntMap.c` @type ^`int`;
  #L4165ba.  v1:= v3 ^< v1 @kind int;
  #L4165be.  v1:= v1 + v2 @kind int;
  #L4165c0.  v11[v1]:= v0;
  #L4165c4.  v11:= v10.`org.mozilla.javascript.ObjToIntMap.d` @type ^`int`;
  #L4165c8.  v11:= v11 + v3 @kind int;
  #L4165ca.  v10.`org.mozilla.javascript.ObjToIntMap.d` @type ^`int` := v11;
  #L4165ce.  return v2;
  #L4165d0.  call `f`(v10) @signature `Lorg/mozilla/javascript/ObjToIntMap;.f:()V` @kind direct;
  #L4165d6.  call temp:= `e`(v10, v11, v0) @signature `Lorg/mozilla/javascript/ObjToIntMap;.e:(Ljava/lang/Object;I)I` @kind direct;
  #L4165dc.  v11:= temp;
  #L4165de.  return v11;
}
procedure `int` `c`(`org.mozilla.javascript.ObjToIntMap` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lorg/mozilla/javascript/ObjToIntMap;.c:(Ljava/lang/Object;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4165f0.  v0:= v8.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L4165f4.  if v0 == 0 then goto L41668e;
  #L4165f8.  call temp:= `hashCode`(v9) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4165fe.  v0:= temp;
  #L416600.  v1:= -1640531527I;
  #L416606.  v1:= v1 * v0 @kind int;
  #L41660a.  v2:= v8.`org.mozilla.javascript.ObjToIntMap.c` @type ^`int`;
  #L41660e.  v3:= v2 - 32;
  #L416612.  v3:= v1 ^>> v3 @kind int;
  #L416616.  v4:= v8.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L41661a.  v4:= v4[v3] @kind object;
  #L41661e.  if v4 == 0 then goto L41668e;
  #L416622.  v5:= 1I;
  #L416624.  v2:= v5 ^< v2 @kind int;
  #L416628.  if v4 == v9 then goto L41668c;
  #L41662c.  v5:= v8.`org.mozilla.javascript.ObjToIntMap.b` @type ^`int`[] @kind object;
  #L416630.  v6:= v2 + v3 @kind int;
  #L416634.  v5:= v5[v6];
  #L416638.  if v5 != v0 then goto L41664a;
  #L41663c.  call temp:= `equals`(v4, v9) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L416642.  v4:= temp;
  #L416644.  if v4 == 0 then goto L41664a;
  #L416648.  goto L41668c;
  #L41664a.  v4:= v2 + -1;
  #L41664e.  v5:= v8.`org.mozilla.javascript.ObjToIntMap.c` @type ^`int`;
  #L416652.  call temp:= `g`(v1, v4, v5) @signature `Lorg/mozilla/javascript/ObjToIntMap;.g:(III)I` @kind static;
  #L416658.  v1:= temp;
  #L41665a.  v3:= v3 + v1 @kind int;
  #L41665c.  v3:= v3 ^& v4 @kind int;
  #L41665e.  v5:= v8.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L416662.  v5:= v5[v3] @kind object;
  #L416666.  if v5 != 0 then goto L41666c;
  #L41666a.  goto L41668e;
  #L41666c.  if v5 == v9 then goto L41668c;
  #L416670.  v6:= v8.`org.mozilla.javascript.ObjToIntMap.b` @type ^`int`[] @kind object;
  #L416674.  v7:= v2 + v3 @kind int;
  #L416678.  v6:= v6[v7];
  #L41667c.  if v6 != v0 then goto L41665a;
  #L416680.  call temp:= `equals`(v5, v9) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L416686.  v5:= temp;
  #L416688.  if v5 == 0 then goto L41665a;
  #L41668c.  return v3;
  #L41668e.  v9:= -1I;
  #L416690.  return v9;
}
procedure `int` `e`(`org.mozilla.javascript.ObjToIntMap` v6 @kind this, `java.lang.Object` v7 @kind object, `int` v8 ) @signature `Lorg/mozilla/javascript/ObjToIntMap;.e:(Ljava/lang/Object;I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41670c.  v0:= -1640531527I;
  #L416712.  v0:= v0 * v8 @kind int;
  #L416716.  v1:= v6.`org.mozilla.javascript.ObjToIntMap.c` @type ^`int`;
  #L41671a.  v2:= v1 - 32;
  #L41671e.  v2:= v0 ^>> v2 @kind int;
  #L416722.  v3:= 1I;
  #L416724.  v4:= v3 ^< v1 @kind int;
  #L416728.  v5:= v6.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L41672c.  v5:= v5[v2] @kind object;
  #L416730.  if v5 == 0 then goto L416750;
  #L416734.  v5:= v4 + -1;
  #L416738.  call temp:= `g`(v0, v5, v1) @signature `Lorg/mozilla/javascript/ObjToIntMap;.g:(III)I` @kind static;
  #L41673e.  v0:= temp;
  #L416740.  v2:= v2 + v0 @kind int;
  #L416742.  v2:= v2 ^& v5 @kind int;
  #L416744.  v1:= v6.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L416748.  v1:= v1[v2] @kind object;
  #L41674c.  if v1 != 0 then goto L416740;
  #L416750.  v0:= v6.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L416754.  v0[v2]:= v7 @kind object;
  #L416758.  v7:= v6.`org.mozilla.javascript.ObjToIntMap.b` @type ^`int`[] @kind object;
  #L41675c.  v4:= v4 + v2 @kind int;
  #L41675e.  v7[v4]:= v8;
  #L416762.  v7:= v6.`org.mozilla.javascript.ObjToIntMap.e` @type ^`int`;
  #L416766.  v7:= v7 + v3 @kind int;
  #L416768.  v6.`org.mozilla.javascript.ObjToIntMap.e` @type ^`int` := v7;
  #L41676c.  v7:= v6.`org.mozilla.javascript.ObjToIntMap.d` @type ^`int`;
  #L416770.  v7:= v7 + v3 @kind int;
  #L416772.  v6.`org.mozilla.javascript.ObjToIntMap.d` @type ^`int` := v7;
  #L416776.  return v2;
}
procedure `void` `f`(`org.mozilla.javascript.ObjToIntMap` v8 @kind this) @signature `Lorg/mozilla/javascript/ObjToIntMap;.f:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L416a34.  v0:= v8.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L416a38.  v1:= 1I;
  #L416a3a.  if v0 != 0 then goto L416a5c;
  #L416a3e.  v0:= v8.`org.mozilla.javascript.ObjToIntMap.c` @type ^`int`;
  #L416a42.  v0:= v1 ^< v0 @kind int;
  #L416a46.  v1:= new `java.lang.Object`[v0];
  #L416a4a.  v8.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] := v1 @kind object;
  #L416a4e.  v0:= v0 * 2;
  #L416a52.  v0:= new `int`[v0];
  #L416a56.  v8.`org.mozilla.javascript.ObjToIntMap.b` @type ^`int`[] := v0 @kind object;
  #L416a5a.  goto L416ae4;
  #L416a5c.  v0:= v8.`org.mozilla.javascript.ObjToIntMap.d` @type ^`int`;
  #L416a60.  v0:= v0 * 2;
  #L416a64.  v2:= v8.`org.mozilla.javascript.ObjToIntMap.e` @type ^`int`;
  #L416a68.  if v0 < v2 then goto L416a76;
  #L416a6c.  v0:= v8.`org.mozilla.javascript.ObjToIntMap.c` @type ^`int`;
  #L416a70.  v0:= v0 + v1 @kind int;
  #L416a72.  v8.`org.mozilla.javascript.ObjToIntMap.c` @type ^`int` := v0;
  #L416a76.  v0:= v8.`org.mozilla.javascript.ObjToIntMap.c` @type ^`int`;
  #L416a7a.  v0:= v1 ^< v0 @kind int;
  #L416a7e.  v1:= v8.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L416a82.  v2:= v8.`org.mozilla.javascript.ObjToIntMap.b` @type ^`int`[] @kind object;
  #L416a86.  v3:= length @variable v1;
  #L416a88.  v4:= new `java.lang.Object`[v0];
  #L416a8c.  v8.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] := v4 @kind object;
  #L416a90.  v0:= v0 * 2;
  #L416a94.  v0:= new `int`[v0];
  #L416a98.  v8.`org.mozilla.javascript.ObjToIntMap.b` @type ^`int`[] := v0 @kind object;
  #L416a9c.  v0:= v8.`org.mozilla.javascript.ObjToIntMap.d` @type ^`int`;
  #L416aa0.  v4:= 0I;
  #L416aa2.  v8.`org.mozilla.javascript.ObjToIntMap.d` @type ^`int` := v4;
  #L416aa6.  v8.`org.mozilla.javascript.ObjToIntMap.e` @type ^`int` := v4;
  #L416aaa.  if v0 == 0 then goto L416ae4;
  #L416aae.  v5:= v1[v4] @kind object;
  #L416ab2.  if v5 == 0 then goto L416ade;
  #L416ab6.  v6:= `@@org.mozilla.javascript.ObjToIntMap.f` @type ^`java.lang.Object` @kind object;
  #L416aba.  if v5 == v6 then goto L416ade;
  #L416abe.  v6:= v3 + v4 @kind int;
  #L416ac2.  v6:= v2[v6];
  #L416ac6.  call temp:= `e`(v8, v5, v6) @signature `Lorg/mozilla/javascript/ObjToIntMap;.e:(Ljava/lang/Object;I)I` @kind direct;
  #L416acc.  v5:= temp;
  #L416ace.  v6:= v8.`org.mozilla.javascript.ObjToIntMap.b` @type ^`int`[] @kind object;
  #L416ad2.  v7:= v2[v4];
  #L416ad6.  v6[v5]:= v7;
  #L416ada.  v0:= v0 + -1;
  #L416ade.  v4:= v4 + 1;
  #L416ae2.  goto L416aaa;
  #L416ae4.  return @kind void;
}
procedure `int` `g`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ObjToIntMap;.g:(III)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L4167a0.  v2:= v2 * 2;
  #L4167a4.  v2:= v2 - 32;
  #L4167a8.  if v2 < 0 then goto L4167b6;
  #L4167ac.  v0:= v0 ^>> v2 @kind int;
  #L4167ae.  v0:= v0 ^& v1 @kind int;
  #L4167b0.  v0:= v0 ^| 1;
  #L4167b4.  return v0;
  #L4167b6.  v2:= -v2 @kind int;
  #L4167b8.  v1:= v1 ^>> v2 @kind int;
  #L4167ba.  goto L4167ae;
}
procedure `void` `readObject`(`org.mozilla.javascript.ObjToIntMap` v5 @kind this, `java.io.ObjectInputStream` v6 @kind object) @signature `Lorg/mozilla/javascript/ObjToIntMap;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4169bc.  call `defaultReadObject`(v6) @signature `Ljava/io/ObjectInputStream;.defaultReadObject:()V` @kind virtual;
  #L4169c2.  v0:= v5.`org.mozilla.javascript.ObjToIntMap.d` @type ^`int`;
  #L4169c6.  if v0 == 0 then goto L416a20;
  #L4169ca.  v1:= 0I;
  #L4169cc.  v5.`org.mozilla.javascript.ObjToIntMap.d` @type ^`int` := v1;
  #L4169d0.  v2:= v5.`org.mozilla.javascript.ObjToIntMap.c` @type ^`int`;
  #L4169d4.  v3:= 1I;
  #L4169d6.  v2:= v3 ^< v2 @kind int;
  #L4169da.  v3:= new `java.lang.Object`[v2];
  #L4169de.  v5.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] := v3 @kind object;
  #L4169e2.  v2:= v2 * 2;
  #L4169e6.  v2:= new `int`[v2];
  #L4169ea.  v5.`org.mozilla.javascript.ObjToIntMap.b` @type ^`int`[] := v2 @kind object;
  #L4169ee.  if v1 == v0 then goto L416a20;
  #L4169f2.  call temp:= `readObject`(v6) @signature `Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;` @kind virtual;
  #L4169f8.  v2:= temp @kind object;
  #L4169fa.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L416a00.  v3:= temp;
  #L416a02.  call temp:= `e`(v5, v2, v3) @signature `Lorg/mozilla/javascript/ObjToIntMap;.e:(Ljava/lang/Object;I)I` @kind direct;
  #L416a08.  v2:= temp;
  #L416a0a.  v3:= v5.`org.mozilla.javascript.ObjToIntMap.b` @type ^`int`[] @kind object;
  #L416a0e.  call temp:= `readInt`(v6) @signature `Ljava/io/ObjectInputStream;.readInt:()I` @kind virtual;
  #L416a14.  v4:= temp;
  #L416a16.  v3[v2]:= v4;
  #L416a1a.  v1:= v1 + 1;
  #L416a1e.  goto L4169ee;
  #L416a20.  return @kind void;
}
procedure `void` `writeObject`(`org.mozilla.javascript.ObjToIntMap` v4 @kind this, `java.io.ObjectOutputStream` v5 @kind object) @signature `Lorg/mozilla/javascript/ObjToIntMap;.writeObject:(Ljava/io/ObjectOutputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L416b38.  call `defaultWriteObject`(v5) @signature `Ljava/io/ObjectOutputStream;.defaultWriteObject:()V` @kind virtual;
  #L416b3e.  v0:= v4.`org.mozilla.javascript.ObjToIntMap.d` @type ^`int`;
  #L416b42.  v1:= 0I;
  #L416b44.  if v0 == 0 then goto L416b7a;
  #L416b48.  v2:= v4.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L416b4c.  v2:= v2[v1] @kind object;
  #L416b50.  if v2 == 0 then goto L416b74;
  #L416b54.  v3:= `@@org.mozilla.javascript.ObjToIntMap.f` @type ^`java.lang.Object` @kind object;
  #L416b58.  if v2 == v3 then goto L416b74;
  #L416b5c.  v0:= v0 + -1;
  #L416b60.  call `writeObject`(v5, v2) @signature `Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V` @kind virtual;
  #L416b66.  v2:= v4.`org.mozilla.javascript.ObjToIntMap.b` @type ^`int`[] @kind object;
  #L416b6a.  v2:= v2[v1];
  #L416b6e.  call `writeInt`(v5, v2) @signature `Ljava/io/ObjectOutputStream;.writeInt:(I)V` @kind virtual;
  #L416b74.  v1:= v1 + 1;
  #L416b78.  goto L416b44;
  #L416b7a.  return @kind void;
}
procedure `void` `clear`(`org.mozilla.javascript.ObjToIntMap` v3 @kind this) @signature `Lorg/mozilla/javascript/ObjToIntMap;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4168e8.  v0:= v3.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L4168ec.  v0:= length @variable v0;
  #L4168ee.  if v0 == 0 then goto L416902;
  #L4168f2.  v1:= v3.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L4168f6.  v0:= v0 + -1;
  #L4168fa.  v2:= 0I;
  #L4168fc.  v1[v0]:= v2 @kind object;
  #L416900.  goto L4168ee;
  #L416902.  v0:= 0I;
  #L416904.  v3.`org.mozilla.javascript.ObjToIntMap.d` @type ^`int` := v0;
  #L416908.  v3.`org.mozilla.javascript.ObjToIntMap.e` @type ^`int` := v0;
  #L41690c.  return @kind void;
}
procedure `void` `d`(`org.mozilla.javascript.ObjToIntMap` v3 @kind this, `org.mozilla.javascript.ObjToIntMap$Iterator` v4 @kind object) @signature `Lorg/mozilla/javascript/ObjToIntMap;.d:(Lorg/mozilla/javascript/ObjToIntMap$Iterator;)V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L41696c.  v0:= v3.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L416970.  v1:= v3.`org.mozilla.javascript.ObjToIntMap.b` @type ^`int`[] @kind object;
  #L416974.  v2:= v3.`org.mozilla.javascript.ObjToIntMap.d` @type ^`int`;
  #L416978.  call `a`(v4, v0, v1, v2) @signature `Lorg/mozilla/javascript/ObjToIntMap$Iterator;.a:([Ljava/lang/Object;[II)V` @kind virtual;
  #L41697e.  return @kind void;
}
procedure `int` `get`(`org.mozilla.javascript.ObjToIntMap` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 ) @signature `Lorg/mozilla/javascript/ObjToIntMap;.get:(Ljava/lang/Object;I)I` @AccessFlag PUBLIC {
    temp;

  #L4166a4.  if v1 != 0 then goto L4166ac;
  #L4166a8.  v1:= `@@org.mozilla.javascript.UniqueTag.NULL_VALUE` @type ^`org.mozilla.javascript.UniqueTag` @kind object;
  #L4166ac.  call temp:= `c`(v0, v1) @signature `Lorg/mozilla/javascript/ObjToIntMap;.c:(Ljava/lang/Object;)I` @kind direct;
  #L4166b2.  v1:= temp;
  #L4166b4.  if v1 < 0 then goto L4166c2;
  #L4166b8.  v2:= v0.`org.mozilla.javascript.ObjToIntMap.b` @type ^`int`[] @kind object;
  #L4166bc.  v1:= v2[v1];
  #L4166c0.  return v1;
  #L4166c2.  return v2;
}
procedure `int` `getExisting`(`org.mozilla.javascript.ObjToIntMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/mozilla/javascript/ObjToIntMap;.getExisting:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4166d4.  if v2 != 0 then goto L4166dc;
  #L4166d8.  v2:= `@@org.mozilla.javascript.UniqueTag.NULL_VALUE` @type ^`org.mozilla.javascript.UniqueTag` @kind object;
  #L4166dc.  call temp:= `c`(v1, v2) @signature `Lorg/mozilla/javascript/ObjToIntMap;.c:(Ljava/lang/Object;)I` @kind direct;
  #L4166e2.  v2:= temp;
  #L4166e4.  if v2 < 0 then goto L4166f2;
  #L4166e8.  v0:= v1.`org.mozilla.javascript.ObjToIntMap.b` @type ^`int`[] @kind object;
  #L4166ec.  v2:= v0[v2];
  #L4166f0.  return v2;
  #L4166f2.  call temp:= `codeBug`() @signature `Lorg/mozilla/javascript/Kit;.codeBug:()Ljava/lang/RuntimeException;` @kind static;
  #L4166f8.  v2:= 0I;
  #L4166fa.  return v2;
}
procedure `void` `getKeys`(`org.mozilla.javascript.ObjToIntMap` v4 @kind this, `java.lang.Object`[] v5 @kind object, `int` v6 ) @signature `Lorg/mozilla/javascript/ObjToIntMap;.getKeys:([Ljava/lang/Object;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L416920.  v0:= v4.`org.mozilla.javascript.ObjToIntMap.d` @type ^`int`;
  #L416924.  v1:= 0I;
  #L416926.  if v0 == 0 then goto L41695a;
  #L41692a.  v2:= v4.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L41692e.  v2:= v2[v1] @kind object;
  #L416932.  if v2 == 0 then goto L416954;
  #L416936.  v3:= `@@org.mozilla.javascript.ObjToIntMap.f` @type ^`java.lang.Object` @kind object;
  #L41693a.  if v2 == v3 then goto L416954;
  #L41693e.  v3:= `@@org.mozilla.javascript.UniqueTag.NULL_VALUE` @type ^`org.mozilla.javascript.UniqueTag` @kind object;
  #L416942.  if v2 != v3 then goto L416948;
  #L416946.  v2:= 0I;
  #L416948.  v5[v6]:= v2 @kind object;
  #L41694c.  v6:= v6 + 1;
  #L416950.  v0:= v0 + -1;
  #L416954.  v1:= v1 + 1;
  #L416958.  goto L416926;
  #L41695a.  return @kind void;
}
procedure `java.lang.Object`[] `getKeys`(`org.mozilla.javascript.ObjToIntMap` v2 @kind this) @signature `Lorg/mozilla/javascript/ObjToIntMap;.getKeys:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41682c.  v0:= v2.`org.mozilla.javascript.ObjToIntMap.d` @type ^`int`;
  #L416830.  v0:= new `java.lang.Object`[v0];
  #L416834.  v1:= 0I;
  #L416836.  call `getKeys`(v2, v0, v1) @signature `Lorg/mozilla/javascript/ObjToIntMap;.getKeys:([Ljava/lang/Object;I)V` @kind virtual;
  #L41683c.  return v0 @kind object;
}
procedure `boolean` `has`(`org.mozilla.javascript.ObjToIntMap` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/mozilla/javascript/ObjToIntMap;.has:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L416474.  if v1 != 0 then goto L41647c;
  #L416478.  v1:= `@@org.mozilla.javascript.UniqueTag.NULL_VALUE` @type ^`org.mozilla.javascript.UniqueTag` @kind object;
  #L41647c.  call temp:= `c`(v0, v1) @signature `Lorg/mozilla/javascript/ObjToIntMap;.c:(Ljava/lang/Object;)I` @kind direct;
  #L416482.  v1:= temp;
  #L416484.  if v1 < 0 then goto L41648c;
  #L416488.  v1:= 1I;
  #L41648a.  goto L41648e;
  #L41648c.  v1:= 0I;
  #L41648e.  return v1;
}
procedure `java.lang.Object` `intern`(`org.mozilla.javascript.ObjToIntMap` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lorg/mozilla/javascript/ObjToIntMap;.intern:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4167e4.  v0:= 0I;
  #L4167e6.  if v4 != 0 then goto L4167f6;
  #L4167ea.  v4:= 1I;
  #L4167ec.  v1:= `@@org.mozilla.javascript.UniqueTag.NULL_VALUE` @type ^`org.mozilla.javascript.UniqueTag` @kind object;
  #L4167f0.  v4:= v1 @kind object;
  #L4167f2.  v1:= 1I;
  #L4167f4.  goto L4167f8;
  #L4167f6.  v1:= 0I;
  #L4167f8.  call temp:= `b`(v3, v4) @signature `Lorg/mozilla/javascript/ObjToIntMap;.b:(Ljava/lang/Object;)I` @kind direct;
  #L4167fe.  v4:= temp;
  #L416800.  v2:= v3.`org.mozilla.javascript.ObjToIntMap.b` @type ^`int`[] @kind object;
  #L416804.  v2[v4]:= v0;
  #L416808.  if v1 == 0 then goto L416810;
  #L41680c.  v4:= 0I;
  #L41680e.  goto L416818;
  #L416810.  v0:= v3.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L416814.  v4:= v0[v4] @kind object;
  #L416818.  return v4 @kind object;
}
procedure `boolean` `isEmpty`(`org.mozilla.javascript.ObjToIntMap` v1 @kind this) @signature `Lorg/mozilla/javascript/ObjToIntMap;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4164a0.  v0:= v1.`org.mozilla.javascript.ObjToIntMap.d` @type ^`int`;
  #L4164a4.  if v0 != 0 then goto L4164ac;
  #L4164a8.  v0:= 1I;
  #L4164aa.  goto L4164ae;
  #L4164ac.  v0:= 0I;
  #L4164ae.  return v0;
}
procedure `org.mozilla.javascript.ObjToIntMap$Iterator` `newIterator`(`org.mozilla.javascript.ObjToIntMap` v1 @kind this) @signature `Lorg/mozilla/javascript/ObjToIntMap;.newIterator:()Lorg/mozilla/javascript/ObjToIntMap$Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L416850.  v0:= new `org.mozilla.javascript.ObjToIntMap$Iterator`;
  #L416854.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ObjToIntMap$Iterator;.<init>:(Lorg/mozilla/javascript/ObjToIntMap;)V` @kind direct;
  #L41685a.  return v0 @kind object;
}
procedure `void` `put`(`org.mozilla.javascript.ObjToIntMap` v1 @kind this, `java.lang.Object` v2 @kind object, `int` v3 ) @signature `Lorg/mozilla/javascript/ObjToIntMap;.put:(Ljava/lang/Object;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L416990.  if v2 != 0 then goto L416998;
  #L416994.  v2:= `@@org.mozilla.javascript.UniqueTag.NULL_VALUE` @type ^`org.mozilla.javascript.UniqueTag` @kind object;
  #L416998.  call temp:= `b`(v1, v2) @signature `Lorg/mozilla/javascript/ObjToIntMap;.b:(Ljava/lang/Object;)I` @kind direct;
  #L41699e.  v2:= temp;
  #L4169a0.  v0:= v1.`org.mozilla.javascript.ObjToIntMap.b` @type ^`int`[] @kind object;
  #L4169a4.  v0[v2]:= v3;
  #L4169a8.  return @kind void;
}
procedure `void` `remove`(`org.mozilla.javascript.ObjToIntMap` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/mozilla/javascript/ObjToIntMap;.remove:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L416af8.  if v3 != 0 then goto L416b00;
  #L416afc.  v3:= `@@org.mozilla.javascript.UniqueTag.NULL_VALUE` @type ^`org.mozilla.javascript.UniqueTag` @kind object;
  #L416b00.  call temp:= `c`(v2, v3) @signature `Lorg/mozilla/javascript/ObjToIntMap;.c:(Ljava/lang/Object;)I` @kind direct;
  #L416b06.  v3:= temp;
  #L416b08.  if v3 < 0 then goto L416b24;
  #L416b0c.  v0:= v2.`org.mozilla.javascript.ObjToIntMap.a` @type ^`java.lang.Object`[] @kind object;
  #L416b10.  v1:= `@@org.mozilla.javascript.ObjToIntMap.f` @type ^`java.lang.Object` @kind object;
  #L416b14.  v0[v3]:= v1 @kind object;
  #L416b18.  v3:= v2.`org.mozilla.javascript.ObjToIntMap.d` @type ^`int`;
  #L416b1c.  v3:= v3 + -1;
  #L416b20.  v2.`org.mozilla.javascript.ObjToIntMap.d` @type ^`int` := v3;
  #L416b24.  return @kind void;
}
procedure `int` `size`(`org.mozilla.javascript.ObjToIntMap` v1 @kind this) @signature `Lorg/mozilla/javascript/ObjToIntMap;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L416788.  v0:= v1.`org.mozilla.javascript.ObjToIntMap.d` @type ^`int`;
  #L41678c.  return v0;
}
