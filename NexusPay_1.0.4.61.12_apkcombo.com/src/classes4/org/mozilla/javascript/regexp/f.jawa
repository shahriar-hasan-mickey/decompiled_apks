record `org.mozilla.javascript.regexp.f` @kind class @AccessFlag  extends `java.io.Serializable` @kind interface {
  `char`[] `org.mozilla.javascript.regexp.f.a` @AccessFlag FINAL;
  `int` `org.mozilla.javascript.regexp.f.b` @AccessFlag ;
  `int` `org.mozilla.javascript.regexp.f.c` @AccessFlag ;
  `byte`[] `org.mozilla.javascript.regexp.f.d` @AccessFlag ;
  `org.mozilla.javascript.regexp.e`[] `org.mozilla.javascript.regexp.f.e` @AccessFlag ;
  `int` `org.mozilla.javascript.regexp.f.f` @AccessFlag ;
}
global `long` `@@org.mozilla.javascript.regexp.f.serialVersionUID` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`org.mozilla.javascript.regexp.f` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/mozilla/javascript/regexp/f;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L437830.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L437836.  v0:= -1I;
  #L437838.  v1.`org.mozilla.javascript.regexp.f.f` @type ^`int` := v0;
  #L43783c.  call temp:= `toCharArray`(v2) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L437842.  v2:= temp @kind object;
  #L437844.  v1.`org.mozilla.javascript.regexp.f.a` @type ^`char`[] := v2 @kind object;
  #L437848.  return @kind void;
}
