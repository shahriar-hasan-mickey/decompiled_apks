record `org.mozilla.javascript.regexp.g` @kind class @AccessFlag  {
  `boolean` `org.mozilla.javascript.regexp.g.a` @AccessFlag ;
  `org.mozilla.javascript.regexp.f` `org.mozilla.javascript.regexp.g.b` @AccessFlag ;
  `int` `org.mozilla.javascript.regexp.g.c` @AccessFlag ;
  `int` `org.mozilla.javascript.regexp.g.d` @AccessFlag ;
  `long`[] `org.mozilla.javascript.regexp.g.e` @AccessFlag ;
  `org.mozilla.javascript.regexp.i` `org.mozilla.javascript.regexp.g.f` @AccessFlag ;
  `org.mozilla.javascript.regexp.d` `org.mozilla.javascript.regexp.g.g` @AccessFlag ;
}
procedure `void` `<init>`(`org.mozilla.javascript.regexp.g` v0 @kind this) @signature `Lorg/mozilla/javascript/regexp/g;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43789c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4378a2.  return @kind void;
}
procedure `int` `a`(`org.mozilla.javascript.regexp.g` v3 @kind this, `int` v4 ) @signature `Lorg/mozilla/javascript/regexp/g;.a:(I)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L43785c.  v0:= v3.`org.mozilla.javascript.regexp.g.e` @type ^`long`[] @kind object;
  #L437860.  v1:= v0[v4] @kind wide;
  #L437864.  v4:= (`int`) v1 @kind l2i;
  #L437866.  return v4;
}
procedure `int` `b`(`org.mozilla.javascript.regexp.g` v3 @kind this, `int` v4 ) @signature `Lorg/mozilla/javascript/regexp/g;.b:(I)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L437878.  v0:= v3.`org.mozilla.javascript.regexp.g.e` @type ^`long`[] @kind object;
  #L43787c.  v1:= v0[v4] @kind wide;
  #L437880.  v4:= 32I;
  #L437884.  v0:= v1 ^>> v4 @kind long;
  #L437888.  v4:= (`int`) v0 @kind l2i;
  #L43788a.  return v4;
}
procedure `void` `c`(`org.mozilla.javascript.regexp.g` v5 @kind this, `int` v6 , `int` v7 , `int` v8 ) @signature `Lorg/mozilla/javascript/regexp/g;.c:(III)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4378b4.  v0:= v5.`org.mozilla.javascript.regexp.g.g` @type ^`org.mozilla.javascript.regexp.d` @kind object;
  #L4378b8.  if v0 == 0 then goto L4378d8;
  #L4378bc.  v0:= v0.`org.mozilla.javascript.regexp.d.g` @type ^`long`[] @kind object;
  #L4378c0.  v1:= v5.`org.mozilla.javascript.regexp.g.e` @type ^`long`[] @kind object;
  #L4378c4.  if v0 != v1 then goto L4378d8;
  #L4378c8.  call temp:= `clone`(v1) @signature `[J.clone:()Ljava/lang/Object;` @kind virtual;
  #L4378ce.  v0:= temp @kind object;
  #L4378d0.  v0:= (`long`[]) v0 @kind object;
  #L4378d4.  v5.`org.mozilla.javascript.regexp.g.e` @type ^`long`[] := v0 @kind object;
  #L4378d8.  v0:= v5.`org.mozilla.javascript.regexp.g.e` @type ^`long`[] @kind object;
  #L4378dc.  v1:= (`long`) v7 @kind i2l;
  #L4378de.  v3:= 4294967295L;
  #L4378e8.  v1:= v1 ^& v3 @kind long;
  #L4378ea.  v7:= (`long`) v8 @kind i2l;
  #L4378ec.  v3:= 32I;
  #L4378f0.  v7:= v7 ^< v3 @kind long;
  #L4378f2.  v7:= v7 ^| v1 @kind long;
  #L4378f4.  v0[v6]:= v7 @kind wide;
  #L4378f8.  return @kind void;
}
