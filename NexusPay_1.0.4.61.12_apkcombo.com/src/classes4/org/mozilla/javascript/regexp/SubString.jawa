record `org.mozilla.javascript.regexp.SubString` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `org.mozilla.javascript.regexp.SubString.a` @AccessFlag ;
  `int` `org.mozilla.javascript.regexp.SubString.b` @AccessFlag ;
  `int` `org.mozilla.javascript.regexp.SubString.c` @AccessFlag ;
}
global `org.mozilla.javascript.regexp.SubString` `@@org.mozilla.javascript.regexp.SubString.emptySubString` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/mozilla/javascript/regexp/SubString;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4386a0.  v0:= new `org.mozilla.javascript.regexp.SubString`;
  #L4386a4.  call `<init>`(v0) @signature `Lorg/mozilla/javascript/regexp/SubString;.<init>:()V` @kind direct;
  #L4386aa.  `@@org.mozilla.javascript.regexp.SubString.emptySubString` @type ^`org.mozilla.javascript.regexp.SubString` := v0 @kind object;
  #L4386ae.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.regexp.SubString` v0 @kind this) @signature `Lorg/mozilla/javascript/regexp/SubString;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4386c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4386c6.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.regexp.SubString` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/mozilla/javascript/regexp/SubString;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4386d8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4386de.  v1.`org.mozilla.javascript.regexp.SubString.a` @type ^`java.lang.String` := v2 @kind object;
  #L4386e2.  v0:= 0I;
  #L4386e4.  v1.`org.mozilla.javascript.regexp.SubString.b` @type ^`int` := v0;
  #L4386e8.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4386ee.  v2:= temp;
  #L4386f0.  v1.`org.mozilla.javascript.regexp.SubString.c` @type ^`int` := v2;
  #L4386f4.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.regexp.SubString` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lorg/mozilla/javascript/regexp/SubString;.<init>:(Ljava/lang/String;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L438708.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43870e.  v0.`org.mozilla.javascript.regexp.SubString.a` @type ^`java.lang.String` := v1 @kind object;
  #L438712.  v0.`org.mozilla.javascript.regexp.SubString.b` @type ^`int` := v2;
  #L438716.  v0.`org.mozilla.javascript.regexp.SubString.c` @type ^`int` := v3;
  #L43871a.  return @kind void;
}
procedure `java.lang.String` `toString`(`org.mozilla.javascript.regexp.SubString` v3 @kind this) @signature `Lorg/mozilla/javascript/regexp/SubString;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L43866c.  v0:= v3.`org.mozilla.javascript.regexp.SubString.a` @type ^`java.lang.String` @kind object;
  #L438670.  if v0 != 0 then goto L43867a;
  #L438674.  v0:= "" @kind object;
  #L438678.  goto L43868c;
  #L43867a.  v1:= v3.`org.mozilla.javascript.regexp.SubString.b` @type ^`int`;
  #L43867e.  v2:= v3.`org.mozilla.javascript.regexp.SubString.c` @type ^`int`;
  #L438682.  v2:= v2 + v1 @kind int;
  #L438684.  call temp:= `substring`(v0, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L43868a.  v0:= temp @kind object;
  #L43868c.  return v0 @kind object;
}
