record `org.mozilla.javascript.ast.AstRoot$a` @kind class @AccessFlag  extends `org.mozilla.javascript.ast.NodeVisitor` @kind interface {
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.AstRoot$a` v0 @kind this, `org.mozilla.javascript.ast.AstRoot` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/AstRoot$a;.<init>:(Lorg/mozilla/javascript/ast/AstRoot;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42ac00.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42ac06.  return @kind void;
}
procedure `boolean` `visit`(`org.mozilla.javascript.ast.AstRoot$a` v3 @kind this, `org.mozilla.javascript.ast.AstNode` v4 @kind object) @signature `Lorg/mozilla/javascript/ast/AstRoot$a;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42ab84.  call temp:= `getType`(v4) @signature `Lorg/mozilla/javascript/Node;.getType:()I` @kind virtual;
  #L42ab8a.  v0:= temp;
  #L42ab8c.  v1:= 1I;
  #L42ab8e.  v2:= 136I;
  #L42ab92.  if v0 != v2 then goto L42ab98;
  #L42ab96.  return v1;
  #L42ab98.  call temp:= `getParent`(v4) @signature `Lorg/mozilla/javascript/ast/AstNode;.getParent:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L42ab9e.  v0:= temp @kind object;
  #L42aba0.  if v0 == 0 then goto L42aba6;
  #L42aba4.  return v1;
  #L42aba6.  v0:= new `java.lang.IllegalStateException`;
  #L42abaa.  v1:= new `java.lang.StringBuilder`;
  #L42abae.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42abb4.  v2:= "No parent for node: " @kind object;
  #L42abb8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42abbe.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42abc4.  v2:= "\n" @kind object;
  #L42abc8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42abce.  v2:= 0I;
  #L42abd0.  call temp:= `toSource`(v4, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42abd6.  v4:= temp @kind object;
  #L42abd8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42abde.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42abe4.  v4:= temp @kind object;
  #L42abe6.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42abec.  throw v0;
}
