record `org.mozilla.javascript.ast.ArrayComprehensionLoop` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.ForInLoop` @kind class {
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ArrayComprehensionLoop` v0 @kind this) @signature `Lorg/mozilla/javascript/ast/ArrayComprehensionLoop;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42965c.  call `<init>`(v0) @signature `Lorg/mozilla/javascript/ast/ForInLoop;.<init>:()V` @kind direct;
  #L429662.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ArrayComprehensionLoop` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/ArrayComprehensionLoop;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L429674.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/ForInLoop;.<init>:(I)V` @kind direct;
  #L42967a.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ArrayComprehensionLoop` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/ArrayComprehensionLoop;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42968c.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/ForInLoop;.<init>:(II)V` @kind direct;
  #L429692.  return @kind void;
}
procedure `org.mozilla.javascript.ast.AstNode` `getBody`(`org.mozilla.javascript.ast.ArrayComprehensionLoop` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ArrayComprehensionLoop;.getBody:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429648.  v0:= 0I;
  #L42964a.  return v0 @kind object;
}
procedure `void` `setBody`(`org.mozilla.javascript.ast.ArrayComprehensionLoop` v1 @kind this, `org.mozilla.javascript.ast.AstNode` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/ArrayComprehensionLoop;.setBody:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4296a4.  v2:= new `java.lang.UnsupportedOperationException`;
  #L4296a8.  v0:= "this node type has no body" @kind object;
  #L4296ac.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4296b2.  throw v2;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.ArrayComprehensionLoop` v2 @kind this, `int` v3 ) @signature `Lorg/mozilla/javascript/ast/ArrayComprehensionLoop;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4295ac.  v0:= new `java.lang.StringBuilder`;
  #L4295b0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4295b6.  call temp:= `makeIndent`(v2, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L4295bc.  v3:= temp @kind object;
  #L4295be.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4295c4.  v3:= " for " @kind object;
  #L4295c8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4295ce.  call temp:= `isForEach`(v2) @signature `Lorg/mozilla/javascript/ast/ForInLoop;.isForEach:()Z` @kind virtual;
  #L4295d4.  v3:= temp;
  #L4295d6.  if v3 == 0 then goto L4295e0;
  #L4295da.  v3:= "each " @kind object;
  #L4295de.  goto L4295e4;
  #L4295e0.  v3:= "" @kind object;
  #L4295e4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4295ea.  v3:= "(" @kind object;
  #L4295ee.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4295f4.  v3:= v2.`org.mozilla.javascript.ast.ForInLoop.iterator` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L4295f8.  v1:= 0I;
  #L4295fa.  call temp:= `toSource`(v3, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L429600.  v3:= temp @kind object;
  #L429602.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L429608.  v3:= " in " @kind object;
  #L42960c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L429612.  v3:= v2.`org.mozilla.javascript.ast.ForInLoop.iteratedObject` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L429616.  call temp:= `toSource`(v3, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42961c.  v3:= temp @kind object;
  #L42961e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L429624.  v3:= ")" @kind object;
  #L429628.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42962e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L429634.  v3:= temp @kind object;
  #L429636.  return v3 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.ArrayComprehensionLoop` v1 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/ArrayComprehensionLoop;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4296c4.  call temp:= `visit`(v2, v1) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L4296ca.  v0:= temp;
  #L4296cc.  if v0 == 0 then goto L4296e4;
  #L4296d0.  v0:= v1.`org.mozilla.javascript.ast.ForInLoop.iterator` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L4296d4.  call `visit`(v0, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L4296da.  v0:= v1.`org.mozilla.javascript.ast.ForInLoop.iteratedObject` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L4296de.  call `visit`(v0, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L4296e4.  return @kind void;
}
