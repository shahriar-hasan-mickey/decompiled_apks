record `org.mozilla.javascript.ast.XmlFragment` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.mozilla.javascript.ast.AstNode` @kind class {
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.XmlFragment` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/XmlFragment;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L432470.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L432476.  v0:= 145I;
  #L43247a.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L43247e.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.XmlFragment` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/XmlFragment;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L432490.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(I)V` @kind direct;
  #L432496.  v1:= 145I;
  #L43249a.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L43249e.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.XmlFragment` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/XmlFragment;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4324b0.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L4324b6.  v1:= 145I;
  #L4324ba.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L4324be.  return @kind void;
}
