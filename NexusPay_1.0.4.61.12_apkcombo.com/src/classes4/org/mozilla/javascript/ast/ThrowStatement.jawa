record `org.mozilla.javascript.ast.ThrowStatement` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.AstNode` @kind class {
  `org.mozilla.javascript.ast.AstNode` `org.mozilla.javascript.ast.ThrowStatement.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ThrowStatement` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ThrowStatement;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4310b0.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L4310b6.  v0:= 50I;
  #L4310ba.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L4310be.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ThrowStatement` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/ThrowStatement;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4310d0.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(I)V` @kind direct;
  #L4310d6.  v1:= 50I;
  #L4310da.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L4310de.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ThrowStatement` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/ThrowStatement;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4310f0.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L4310f6.  v1:= 50I;
  #L4310fa.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L4310fe.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ThrowStatement` v0 @kind this, `int` v1 , `int` v2 , `org.mozilla.javascript.ast.AstNode` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/ThrowStatement;.<init>:(IILorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L431110.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L431116.  v1:= 50I;
  #L43111a.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L43111e.  call `setExpression`(v0, v3) @signature `Lorg/mozilla/javascript/ast/ThrowStatement;.setExpression:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L431124.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ThrowStatement` v1 @kind this, `int` v2 , `org.mozilla.javascript.ast.AstNode` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/ThrowStatement;.<init>:(ILorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L431138.  call temp:= `getLength`(v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.getLength:()I` @kind virtual;
  #L43113e.  v0:= temp;
  #L431140.  call `<init>`(v1, v2, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L431146.  v2:= 50I;
  #L43114a.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v2;
  #L43114e.  call `setExpression`(v1, v3) @signature `Lorg/mozilla/javascript/ast/ThrowStatement;.setExpression:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L431154.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ThrowStatement` v1 @kind this, `org.mozilla.javascript.ast.AstNode` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/ThrowStatement;.<init>:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L431168.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L43116e.  v0:= 50I;
  #L431172.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L431176.  call `setExpression`(v1, v2) @signature `Lorg/mozilla/javascript/ast/ThrowStatement;.setExpression:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L43117c.  return @kind void;
}
procedure `org.mozilla.javascript.ast.AstNode` `getExpression`(`org.mozilla.javascript.ast.ThrowStatement` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ThrowStatement;.getExpression:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L431098.  v0:= v1.`org.mozilla.javascript.ast.ThrowStatement.c` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L43109c.  return v0 @kind object;
}
procedure `void` `setExpression`(`org.mozilla.javascript.ast.ThrowStatement` v0 @kind this, `org.mozilla.javascript.ast.AstNode` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/ThrowStatement;.setExpression:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;

  #L431190.  call `assertNotNull`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L431196.  v0.`org.mozilla.javascript.ast.ThrowStatement.c` @type ^`org.mozilla.javascript.ast.AstNode` := v1 @kind object;
  #L43119a.  call `setParent`(v1, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L4311a0.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.ThrowStatement` v2 @kind this, `int` v3 ) @signature `Lorg/mozilla/javascript/ast/ThrowStatement;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L431034.  v0:= new `java.lang.StringBuilder`;
  #L431038.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L43103e.  call temp:= `makeIndent`(v2, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L431044.  v3:= temp @kind object;
  #L431046.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43104c.  v3:= "throw" @kind object;
  #L431050.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L431056.  v3:= " " @kind object;
  #L43105a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L431060.  v3:= v2.`org.mozilla.javascript.ast.ThrowStatement.c` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L431064.  v1:= 0I;
  #L431066.  call temp:= `toSource`(v3, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L43106c.  v3:= temp @kind object;
  #L43106e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L431074.  v3:= ";\n" @kind object;
  #L431078.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43107e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L431084.  v3:= temp @kind object;
  #L431086.  return v3 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.ThrowStatement` v1 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/ThrowStatement;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4311b4.  call temp:= `visit`(v2, v1) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L4311ba.  v0:= temp;
  #L4311bc.  if v0 == 0 then goto L4311ca;
  #L4311c0.  v0:= v1.`org.mozilla.javascript.ast.ThrowStatement.c` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L4311c4.  call `visit`(v0, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L4311ca.  return @kind void;
}
