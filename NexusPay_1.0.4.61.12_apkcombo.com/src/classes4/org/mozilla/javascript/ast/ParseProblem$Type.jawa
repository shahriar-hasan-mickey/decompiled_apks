record `org.mozilla.javascript.ast.ParseProblem$Type` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `org.mozilla.javascript.ast.ParseProblem$Type`[] `@@org.mozilla.javascript.ast.ParseProblem$Type.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `org.mozilla.javascript.ast.ParseProblem$Type` `@@org.mozilla.javascript.ast.ParseProblem$Type.Error` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `org.mozilla.javascript.ast.ParseProblem$Type` `@@org.mozilla.javascript.ast.ParseProblem$Type.Warning` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lorg/mozilla/javascript/ast/ParseProblem$Type;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L42f4b8.  v0:= new `org.mozilla.javascript.ast.ParseProblem$Type`;
  #L42f4bc.  v1:= "Error" @kind object;
  #L42f4c0.  v2:= 0I;
  #L42f4c2.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/ParseProblem$Type;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L42f4c8.  `@@org.mozilla.javascript.ast.ParseProblem$Type.Error` @type ^`org.mozilla.javascript.ast.ParseProblem$Type` := v0 @kind object;
  #L42f4cc.  v0:= new `org.mozilla.javascript.ast.ParseProblem$Type`;
  #L42f4d0.  v1:= "Warning" @kind object;
  #L42f4d4.  v3:= 1I;
  #L42f4d6.  call `<init>`(v0, v1, v3) @signature `Lorg/mozilla/javascript/ast/ParseProblem$Type;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L42f4dc.  `@@org.mozilla.javascript.ast.ParseProblem$Type.Warning` @type ^`org.mozilla.javascript.ast.ParseProblem$Type` := v0 @kind object;
  #L42f4e0.  v1:= 2I;
  #L42f4e2.  v1:= new `org.mozilla.javascript.ast.ParseProblem$Type`[v1];
  #L42f4e6.  v4:= `@@org.mozilla.javascript.ast.ParseProblem$Type.Error` @type ^`org.mozilla.javascript.ast.ParseProblem$Type` @kind object;
  #L42f4ea.  v1[v2]:= v4 @kind object;
  #L42f4ee.  v1[v3]:= v0 @kind object;
  #L42f4f2.  `@@org.mozilla.javascript.ast.ParseProblem$Type.$VALUES` @type ^`org.mozilla.javascript.ast.ParseProblem$Type`[] := v1 @kind object;
  #L42f4f6.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ParseProblem$Type` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lorg/mozilla/javascript/ast/ParseProblem$Type;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L42f508.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L42f50e.  return @kind void;
}
procedure `org.mozilla.javascript.ast.ParseProblem$Type` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/ParseProblem$Type;.valueOf:(Ljava/lang/String;)Lorg/mozilla/javascript/ast/ParseProblem$Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L42f470.  v0:= constclass @type ^`org.mozilla.javascript.ast.ParseProblem$Type` @kind object;
  #L42f474.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L42f47a.  v1:= temp @kind object;
  #L42f47c.  v1:= (`org.mozilla.javascript.ast.ParseProblem$Type`) v1 @kind object;
  #L42f480.  return v1 @kind object;
}
procedure `org.mozilla.javascript.ast.ParseProblem$Type`[] `values`() @signature `Lorg/mozilla/javascript/ast/ParseProblem$Type;.values:()[Lorg/mozilla/javascript/ast/ParseProblem$Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L42f494.  v0:= `@@org.mozilla.javascript.ast.ParseProblem$Type.$VALUES` @type ^`org.mozilla.javascript.ast.ParseProblem$Type`[] @kind object;
  #L42f498.  call temp:= `clone`(v0) @signature `[Lorg/mozilla/javascript/ast/ParseProblem$Type;.clone:()Ljava/lang/Object;` @kind virtual;
  #L42f49e.  v0:= temp @kind object;
  #L42f4a0.  v0:= (`org.mozilla.javascript.ast.ParseProblem$Type`[]) v0 @kind object;
  #L42f4a4.  return v0 @kind object;
}
