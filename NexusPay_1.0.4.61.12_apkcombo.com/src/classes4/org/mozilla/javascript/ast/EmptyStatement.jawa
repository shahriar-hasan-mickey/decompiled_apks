record `org.mozilla.javascript.ast.EmptyStatement` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.AstNode` @kind class {
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.EmptyStatement` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/EmptyStatement;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42bde4.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L42bdea.  v0:= 128I;
  #L42bdee.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42bdf2.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.EmptyStatement` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/EmptyStatement;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42be04.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(I)V` @kind direct;
  #L42be0a.  v1:= 128I;
  #L42be0e.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42be12.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.EmptyStatement` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/EmptyStatement;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42be24.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L42be2a.  v1:= 128I;
  #L42be2e.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42be32.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.EmptyStatement` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/ast/EmptyStatement;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bda8.  v0:= new `java.lang.StringBuilder`;
  #L42bdac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42bdb2.  call temp:= `makeIndent`(v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L42bdb8.  v2:= temp @kind object;
  #L42bdba.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42bdc0.  v2:= ";\n" @kind object;
  #L42bdc4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42bdca.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42bdd0.  v2:= temp @kind object;
  #L42bdd2.  return v2 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.EmptyStatement` v0 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/EmptyStatement;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;

  #L42be44.  call temp:= `visit`(v1, v0) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L42be4a.  return @kind void;
}
