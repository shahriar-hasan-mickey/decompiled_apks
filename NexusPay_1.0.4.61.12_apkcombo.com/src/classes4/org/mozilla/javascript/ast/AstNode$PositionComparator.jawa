record `org.mozilla.javascript.ast.AstNode$PositionComparator` @kind class @AccessFlag PUBLIC extends `java.util.Comparator` @kind interface, `java.io.Serializable` @kind interface {
}
global `long` `@@org.mozilla.javascript.ast.AstNode$PositionComparator.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.mozilla.javascript.ast.AstNode$PositionComparator` v0 @kind this) @signature `Lorg/mozilla/javascript/ast/AstNode$PositionComparator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L429f3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L429f42.  return @kind void;
}
procedure `int` `compare`(`org.mozilla.javascript.ast.AstNode$PositionComparator` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/AstNode$PositionComparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L429efc.  v1:= (`org.mozilla.javascript.ast.AstNode`) v1 @kind object;
  #L429f00.  v2:= (`org.mozilla.javascript.ast.AstNode`) v2 @kind object;
  #L429f04.  call temp:= `compare`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode$PositionComparator;.compare:(Lorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;)I` @kind virtual;
  #L429f0a.  v1:= temp;
  #L429f0c.  return v1;
}
procedure `int` `compare`(`org.mozilla.javascript.ast.AstNode$PositionComparator` v0 @kind this, `org.mozilla.javascript.ast.AstNode` v1 @kind object, `org.mozilla.javascript.ast.AstNode` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/AstNode$PositionComparator;.compare:(Lorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;)I` @AccessFlag PUBLIC {
    temp;

  #L429f20.  v1:= v1.`org.mozilla.javascript.ast.AstNode.position` @type ^`int`;
  #L429f24.  v2:= v2.`org.mozilla.javascript.ast.AstNode.position` @type ^`int`;
  #L429f28.  v1:= v1 - v2 @kind int;
  #L429f2a.  return v1;
}
