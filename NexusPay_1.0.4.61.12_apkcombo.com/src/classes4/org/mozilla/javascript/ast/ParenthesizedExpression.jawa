record `org.mozilla.javascript.ast.ParenthesizedExpression` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.AstNode` @kind class {
  `org.mozilla.javascript.ast.AstNode` `org.mozilla.javascript.ast.ParenthesizedExpression.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ParenthesizedExpression` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ParenthesizedExpression;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42f364.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L42f36a.  v0:= 87I;
  #L42f36e.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42f372.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ParenthesizedExpression` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/ParenthesizedExpression;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42f384.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(I)V` @kind direct;
  #L42f38a.  v1:= 87I;
  #L42f38e.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42f392.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ParenthesizedExpression` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/ParenthesizedExpression;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42f3a4.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L42f3aa.  v1:= 87I;
  #L42f3ae.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42f3b2.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ParenthesizedExpression` v0 @kind this, `int` v1 , `int` v2 , `org.mozilla.javascript.ast.AstNode` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/ParenthesizedExpression;.<init>:(IILorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42f3c4.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L42f3ca.  v1:= 87I;
  #L42f3ce.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42f3d2.  call `setExpression`(v0, v3) @signature `Lorg/mozilla/javascript/ast/ParenthesizedExpression;.setExpression:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42f3d8.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ParenthesizedExpression` v2 @kind this, `org.mozilla.javascript.ast.AstNode` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/ParenthesizedExpression;.<init>:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L42f3ec.  if v3 == 0 then goto L42f3fa;
  #L42f3f0.  call temp:= `getPosition`(v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L42f3f6.  v0:= temp;
  #L42f3f8.  goto L42f3fc;
  #L42f3fa.  v0:= 0I;
  #L42f3fc.  if v3 == 0 then goto L42f40a;
  #L42f400.  call temp:= `getLength`(v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.getLength:()I` @kind virtual;
  #L42f406.  v1:= temp;
  #L42f408.  goto L42f40c;
  #L42f40a.  v1:= 1I;
  #L42f40c.  call `<init>`(v2, v0, v1, v3) @signature `Lorg/mozilla/javascript/ast/ParenthesizedExpression;.<init>:(IILorg/mozilla/javascript/ast/AstNode;)V` @kind direct;
  #L42f412.  return @kind void;
}
procedure `org.mozilla.javascript.ast.AstNode` `getExpression`(`org.mozilla.javascript.ast.ParenthesizedExpression` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ParenthesizedExpression;.getExpression:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f34c.  v0:= v1.`org.mozilla.javascript.ast.ParenthesizedExpression.c` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42f350.  return v0 @kind object;
}
procedure `void` `setExpression`(`org.mozilla.javascript.ast.ParenthesizedExpression` v0 @kind this, `org.mozilla.javascript.ast.AstNode` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/ParenthesizedExpression;.setExpression:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;

  #L42f424.  call `assertNotNull`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L42f42a.  v0.`org.mozilla.javascript.ast.ParenthesizedExpression.c` @type ^`org.mozilla.javascript.ast.AstNode` := v1 @kind object;
  #L42f42e.  call `setParent`(v1, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42f434.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.ParenthesizedExpression` v2 @kind this, `int` v3 ) @signature `Lorg/mozilla/javascript/ast/ParenthesizedExpression;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42f2f0.  v0:= new `java.lang.StringBuilder`;
  #L42f2f4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42f2fa.  call temp:= `makeIndent`(v2, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L42f300.  v3:= temp @kind object;
  #L42f302.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42f308.  v3:= "(" @kind object;
  #L42f30c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42f312.  v3:= v2.`org.mozilla.javascript.ast.ParenthesizedExpression.c` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42f316.  v1:= 0I;
  #L42f318.  call temp:= `toSource`(v3, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42f31e.  v3:= temp @kind object;
  #L42f320.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42f326.  v3:= ")" @kind object;
  #L42f32a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42f330.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42f336.  v3:= temp @kind object;
  #L42f338.  return v3 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.ParenthesizedExpression` v1 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/ParenthesizedExpression;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f448.  call temp:= `visit`(v2, v1) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L42f44e.  v0:= temp;
  #L42f450.  if v0 == 0 then goto L42f45e;
  #L42f454.  v0:= v1.`org.mozilla.javascript.ast.ParenthesizedExpression.c` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42f458.  call `visit`(v0, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42f45e.  return @kind void;
}
