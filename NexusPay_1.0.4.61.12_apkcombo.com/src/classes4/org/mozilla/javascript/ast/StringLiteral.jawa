record `org.mozilla.javascript.ast.StringLiteral` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.AstNode` @kind class {
  `java.lang.String` `org.mozilla.javascript.ast.StringLiteral.c` @AccessFlag PRIVATE;
  `char` `org.mozilla.javascript.ast.StringLiteral.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.StringLiteral` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/StringLiteral;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4307c0.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L4307c6.  v0:= 41I;
  #L4307ca.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L4307ce.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.StringLiteral` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/StringLiteral;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4307e0.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(I)V` @kind direct;
  #L4307e6.  v1:= 41I;
  #L4307ea.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L4307ee.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.StringLiteral` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/StringLiteral;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L430800.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L430806.  v1:= 41I;
  #L43080a.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L43080e.  return @kind void;
}
procedure `char` `getQuoteCharacter`(`org.mozilla.javascript.ast.StringLiteral` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/StringLiteral;.getQuoteCharacter:()C` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4306ec.  v0:= v1.`org.mozilla.javascript.ast.StringLiteral.d` @type ^`char` @kind char;
  #L4306f0.  return v0;
}
procedure `java.lang.String` `getValue`(`org.mozilla.javascript.ast.StringLiteral` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/StringLiteral;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L430704.  v0:= v1.`org.mozilla.javascript.ast.StringLiteral.c` @type ^`java.lang.String` @kind object;
  #L430708.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`org.mozilla.javascript.ast.StringLiteral` v1 @kind this, `boolean` v2 ) @signature `Lorg/mozilla/javascript/ast/StringLiteral;.getValue:(Z)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43071c.  if v2 != 0 then goto L430726;
  #L430720.  v2:= v1.`org.mozilla.javascript.ast.StringLiteral.c` @type ^`java.lang.String` @kind object;
  #L430724.  return v2 @kind object;
  #L430726.  v2:= new `java.lang.StringBuilder`;
  #L43072a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L430730.  v0:= v1.`org.mozilla.javascript.ast.StringLiteral.d` @type ^`char` @kind char;
  #L430734.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L43073a.  v0:= v1.`org.mozilla.javascript.ast.StringLiteral.c` @type ^`java.lang.String` @kind object;
  #L43073e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430744.  v0:= v1.`org.mozilla.javascript.ast.StringLiteral.d` @type ^`char` @kind char;
  #L430748.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L43074e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L430754.  v2:= temp @kind object;
  #L430756.  return v2 @kind object;
}
procedure `void` `setQuoteCharacter`(`org.mozilla.javascript.ast.StringLiteral` v0 @kind this, `char` v1 ) @signature `Lorg/mozilla/javascript/ast/StringLiteral;.setQuoteCharacter:(C)V` @AccessFlag PUBLIC {
    temp;

  #L430820.  v0.`org.mozilla.javascript.ast.StringLiteral.d` @type ^`char` := v1 @kind char;
  #L430824.  return @kind void;
}
procedure `void` `setValue`(`org.mozilla.javascript.ast.StringLiteral` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/StringLiteral;.setValue:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L430838.  call `assertNotNull`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L43083e.  v0.`org.mozilla.javascript.ast.StringLiteral.c` @type ^`java.lang.String` := v1 @kind object;
  #L430842.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.StringLiteral` v2 @kind this, `int` v3 ) @signature `Lorg/mozilla/javascript/ast/StringLiteral;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L430768.  v0:= new `java.lang.StringBuilder`;
  #L43076c.  call temp:= `makeIndent`(v2, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L430772.  v3:= temp @kind object;
  #L430774.  call `<init>`(v0, v3) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43077a.  v3:= v2.`org.mozilla.javascript.ast.StringLiteral.d` @type ^`char` @kind char;
  #L43077e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L430784.  v3:= v2.`org.mozilla.javascript.ast.StringLiteral.c` @type ^`java.lang.String` @kind object;
  #L430788.  v1:= v2.`org.mozilla.javascript.ast.StringLiteral.d` @type ^`char` @kind char;
  #L43078c.  call temp:= `escapeString`(v3, v1) @signature `Lorg/mozilla/javascript/ScriptRuntime;.escapeString:(Ljava/lang/String;C)Ljava/lang/String;` @kind static;
  #L430792.  v3:= temp @kind object;
  #L430794.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43079a.  v3:= v2.`org.mozilla.javascript.ast.StringLiteral.d` @type ^`char` @kind char;
  #L43079e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4307a4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4307aa.  v3:= temp @kind object;
  #L4307ac.  return v3 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.StringLiteral` v0 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/StringLiteral;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;

  #L430854.  call temp:= `visit`(v1, v0) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L43085a.  return @kind void;
}
