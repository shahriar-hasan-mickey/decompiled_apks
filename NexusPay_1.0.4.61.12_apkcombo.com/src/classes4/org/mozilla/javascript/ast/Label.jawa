record `org.mozilla.javascript.ast.Label` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.Jump` @kind class {
  `java.lang.String` `org.mozilla.javascript.ast.Label.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Label` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Label;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42e568.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/Jump;.<init>:()V` @kind direct;
  #L42e56e.  v0:= 130I;
  #L42e572.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42e576.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Label` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/ast/Label;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42e588.  v0:= -1I;
  #L42e58a.  call `<init>`(v1, v2, v0) @signature `Lorg/mozilla/javascript/ast/Label;.<init>:(II)V` @kind direct;
  #L42e590.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Label` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/mozilla/javascript/ast/Label;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42e5a4.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/Jump;.<init>:()V` @kind direct;
  #L42e5aa.  v0:= 130I;
  #L42e5ae.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42e5b2.  v1.`org.mozilla.javascript.ast.AstNode.position` @type ^`int` := v2;
  #L42e5b6.  v1.`org.mozilla.javascript.ast.AstNode.length` @type ^`int` := v3;
  #L42e5ba.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Label` v0 @kind this, `int` v1 , `int` v2 , `java.lang.String` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/Label;.<init>:(IILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42e5cc.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/Label;.<init>:(II)V` @kind direct;
  #L42e5d2.  call `setName`(v0, v3) @signature `Lorg/mozilla/javascript/ast/Label;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L42e5d8.  return @kind void;
}
procedure `java.lang.String` `getName`(`org.mozilla.javascript.ast.Label` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Label;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e508.  v0:= v1.`org.mozilla.javascript.ast.Label.e` @type ^`java.lang.String` @kind object;
  #L42e50c.  return v0 @kind object;
}
procedure `void` `setName`(`org.mozilla.javascript.ast.Label` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/Label;.setName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e5ec.  if v2 != 0 then goto L42e5f4;
  #L42e5f0.  v2:= 0I;
  #L42e5f2.  goto L42e5fc;
  #L42e5f4.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L42e5fa.  v2:= temp @kind object;
  #L42e5fc.  if v2 == 0 then goto L42e616;
  #L42e600.  v0:= "" @kind object;
  #L42e604.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L42e60a.  v0:= temp;
  #L42e60c.  if v0 != 0 then goto L42e616;
  #L42e610.  v1.`org.mozilla.javascript.ast.Label.e` @type ^`java.lang.String` := v2 @kind object;
  #L42e614.  return @kind void;
  #L42e616.  v2:= new `java.lang.IllegalArgumentException`;
  #L42e61a.  v0:= "invalid label name" @kind object;
  #L42e61e.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42e624.  throw v2;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.Label` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/ast/Label;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e520.  v0:= new `java.lang.StringBuilder`;
  #L42e524.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42e52a.  call temp:= `makeIndent`(v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L42e530.  v2:= temp @kind object;
  #L42e532.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42e538.  v2:= v1.`org.mozilla.javascript.ast.Label.e` @type ^`java.lang.String` @kind object;
  #L42e53c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42e542.  v2:= ":\n" @kind object;
  #L42e546.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42e54c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42e552.  v2:= temp @kind object;
  #L42e554.  return v2 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.Label` v0 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/Label;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;

  #L42e638.  call temp:= `visit`(v1, v0) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L42e63e.  return @kind void;
}
