record `org.mozilla.javascript.ast.ErrorCollector` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.IdeErrorReporter` @kind interface {
  `java.util.List` `org.mozilla.javascript.ast.ErrorCollector.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ErrorCollector` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ErrorCollector;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42bf04.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42bf0a.  v0:= new `java.util.ArrayList`;
  #L42bf0e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L42bf14.  v1.`org.mozilla.javascript.ast.ErrorCollector.a` @type ^`java.util.List` := v0 @kind object;
  #L42bf18.  return @kind void;
}
procedure `void` `error`(`org.mozilla.javascript.ast.ErrorCollector` v8 @kind this, `java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lorg/mozilla/javascript/ast/ErrorCollector;.error:(Ljava/lang/String;Ljava/lang/String;II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L42bf2c.  v0:= v8.`org.mozilla.javascript.ast.ErrorCollector.a` @type ^`java.util.List` @kind object;
  #L42bf30.  v7:= new `org.mozilla.javascript.ast.ParseProblem`;
  #L42bf34.  v2:= `@@org.mozilla.javascript.ast.ParseProblem$Type.Error` @type ^`org.mozilla.javascript.ast.ParseProblem$Type` @kind object;
  #L42bf38.  v1:= v7 @kind object;
  #L42bf3a.  v3:= v9 @kind object;
  #L42bf3c.  v4:= v10 @kind object;
  #L42bf3e.  v5:= v11;
  #L42bf40.  v6:= v12;
  #L42bf42.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.<init>:(Lorg/mozilla/javascript/ast/ParseProblem$Type;Ljava/lang/String;Ljava/lang/String;II)V` @kind direct;
  #L42bf48.  call temp:= `add`(v0, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L42bf4e.  return @kind void;
}
procedure `void` `error`(`org.mozilla.javascript.ast.ErrorCollector` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.String` v4 @kind object, `int` v5 ) @signature `Lorg/mozilla/javascript/ast/ErrorCollector;.error:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;I)V` @AccessFlag PUBLIC {
    temp;

  #L42bf60.  v1:= new `java.lang.UnsupportedOperationException`;
  #L42bf64.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L42bf6a.  throw v1;
}
procedure `java.util.List` `getErrors`(`org.mozilla.javascript.ast.ErrorCollector` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ErrorCollector;.getErrors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bed0.  v0:= v1.`org.mozilla.javascript.ast.ErrorCollector.a` @type ^`java.util.List` @kind object;
  #L42bed4.  return v0 @kind object;
}
procedure `org.mozilla.javascript.EvaluatorException` `runtimeError`(`org.mozilla.javascript.ast.ErrorCollector` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.String` v4 @kind object, `int` v5 ) @signature `Lorg/mozilla/javascript/ast/ErrorCollector;.runtimeError:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;I)Lorg/mozilla/javascript/EvaluatorException;` @AccessFlag PUBLIC {
    temp;

  #L42bee8.  v1:= new `java.lang.UnsupportedOperationException`;
  #L42beec.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L42bef2.  throw v1;
}
procedure `java.lang.String` `toString`(`org.mozilla.javascript.ast.ErrorCollector` v3 @kind this) @signature `Lorg/mozilla/javascript/ast/ErrorCollector;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42be5c.  v0:= new `java.lang.StringBuilder`;
  #L42be60.  v1:= v3.`org.mozilla.javascript.ast.ErrorCollector.a` @type ^`java.util.List` @kind object;
  #L42be64.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L42be6a.  v1:= temp;
  #L42be6c.  v1:= v1 * 100;
  #L42be70.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L42be76.  v1:= v3.`org.mozilla.javascript.ast.ErrorCollector.a` @type ^`java.util.List` @kind object;
  #L42be7a.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L42be80.  v1:= temp @kind object;
  #L42be82.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42be88.  v2:= temp;
  #L42be8a.  if v2 == 0 then goto L42beb4;
  #L42be8e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42be94.  v2:= temp @kind object;
  #L42be96.  v2:= (`org.mozilla.javascript.ast.ParseProblem`) v2 @kind object;
  #L42be9a.  call temp:= `toString`(v2) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.toString:()Ljava/lang/String;` @kind virtual;
  #L42bea0.  v2:= temp @kind object;
  #L42bea2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42bea8.  v2:= "\n" @kind object;
  #L42beac.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42beb2.  goto L42be82;
  #L42beb4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42beba.  v0:= temp @kind object;
  #L42bebc.  return v0 @kind object;
}
procedure `void` `warning`(`org.mozilla.javascript.ast.ErrorCollector` v8 @kind this, `java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lorg/mozilla/javascript/ast/ErrorCollector;.warning:(Ljava/lang/String;Ljava/lang/String;II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L42bf7c.  v0:= v8.`org.mozilla.javascript.ast.ErrorCollector.a` @type ^`java.util.List` @kind object;
  #L42bf80.  v7:= new `org.mozilla.javascript.ast.ParseProblem`;
  #L42bf84.  v2:= `@@org.mozilla.javascript.ast.ParseProblem$Type.Warning` @type ^`org.mozilla.javascript.ast.ParseProblem$Type` @kind object;
  #L42bf88.  v1:= v7 @kind object;
  #L42bf8a.  v3:= v9 @kind object;
  #L42bf8c.  v4:= v10 @kind object;
  #L42bf8e.  v5:= v11;
  #L42bf90.  v6:= v12;
  #L42bf92.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.<init>:(Lorg/mozilla/javascript/ast/ParseProblem$Type;Ljava/lang/String;Ljava/lang/String;II)V` @kind direct;
  #L42bf98.  call temp:= `add`(v0, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L42bf9e.  return @kind void;
}
procedure `void` `warning`(`org.mozilla.javascript.ast.ErrorCollector` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.String` v4 @kind object, `int` v5 ) @signature `Lorg/mozilla/javascript/ast/ErrorCollector;.warning:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;I)V` @AccessFlag PUBLIC {
    temp;

  #L42bfb0.  v1:= new `java.lang.UnsupportedOperationException`;
  #L42bfb4.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L42bfba.  throw v1;
}
