record `org.mozilla.javascript.ast.GeneratorExpression` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.Scope` @kind class {
  `org.mozilla.javascript.ast.AstNode` `org.mozilla.javascript.ast.GeneratorExpression.f` @AccessFlag PRIVATE;
  `java.util.List` `org.mozilla.javascript.ast.GeneratorExpression.g` @AccessFlag PRIVATE;
  `org.mozilla.javascript.ast.AstNode` `org.mozilla.javascript.ast.GeneratorExpression.h` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.ast.GeneratorExpression.i` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.ast.GeneratorExpression.j` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.ast.GeneratorExpression.k` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.GeneratorExpression` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42d478.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/Scope;.<init>:()V` @kind direct;
  #L42d47e.  v0:= new `java.util.ArrayList`;
  #L42d482.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L42d488.  v1.`org.mozilla.javascript.ast.GeneratorExpression.g` @type ^`java.util.List` := v0 @kind object;
  #L42d48c.  v0:= -1I;
  #L42d48e.  v1.`org.mozilla.javascript.ast.GeneratorExpression.i` @type ^`int` := v0;
  #L42d492.  v1.`org.mozilla.javascript.ast.GeneratorExpression.j` @type ^`int` := v0;
  #L42d496.  v1.`org.mozilla.javascript.ast.GeneratorExpression.k` @type ^`int` := v0;
  #L42d49a.  v0:= 162I;
  #L42d49e.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42d4a2.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.GeneratorExpression` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42d4b4.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/Scope;.<init>:(I)V` @kind direct;
  #L42d4ba.  v1:= new `java.util.ArrayList`;
  #L42d4be.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L42d4c4.  v0.`org.mozilla.javascript.ast.GeneratorExpression.g` @type ^`java.util.List` := v1 @kind object;
  #L42d4c8.  v1:= -1I;
  #L42d4ca.  v0.`org.mozilla.javascript.ast.GeneratorExpression.i` @type ^`int` := v1;
  #L42d4ce.  v0.`org.mozilla.javascript.ast.GeneratorExpression.j` @type ^`int` := v1;
  #L42d4d2.  v0.`org.mozilla.javascript.ast.GeneratorExpression.k` @type ^`int` := v1;
  #L42d4d6.  v1:= 162I;
  #L42d4da.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42d4de.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.GeneratorExpression` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42d4f0.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/Scope;.<init>:(II)V` @kind direct;
  #L42d4f6.  v1:= new `java.util.ArrayList`;
  #L42d4fa.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L42d500.  v0.`org.mozilla.javascript.ast.GeneratorExpression.g` @type ^`java.util.List` := v1 @kind object;
  #L42d504.  v1:= -1I;
  #L42d506.  v0.`org.mozilla.javascript.ast.GeneratorExpression.i` @type ^`int` := v1;
  #L42d50a.  v0.`org.mozilla.javascript.ast.GeneratorExpression.j` @type ^`int` := v1;
  #L42d50e.  v0.`org.mozilla.javascript.ast.GeneratorExpression.k` @type ^`int` := v1;
  #L42d512.  v1:= 162I;
  #L42d516.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42d51a.  return @kind void;
}
procedure `void` `addLoop`(`org.mozilla.javascript.ast.GeneratorExpression` v1 @kind this, `org.mozilla.javascript.ast.GeneratorExpressionLoop` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.addLoop:(Lorg/mozilla/javascript/ast/GeneratorExpressionLoop;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42d52c.  call `assertNotNull`(v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L42d532.  v0:= v1.`org.mozilla.javascript.ast.GeneratorExpression.g` @type ^`java.util.List` @kind object;
  #L42d536.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L42d53c.  call `setParent`(v2, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42d542.  return @kind void;
}
procedure `org.mozilla.javascript.ast.AstNode` `getFilter`(`org.mozilla.javascript.ast.GeneratorExpression` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.getFilter:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42d448.  v0:= v1.`org.mozilla.javascript.ast.GeneratorExpression.h` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42d44c.  return v0 @kind object;
}
procedure `int` `getFilterLp`(`org.mozilla.javascript.ast.GeneratorExpression` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.getFilterLp:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42d338.  v0:= v1.`org.mozilla.javascript.ast.GeneratorExpression.j` @type ^`int`;
  #L42d33c.  return v0;
}
procedure `int` `getFilterRp`(`org.mozilla.javascript.ast.GeneratorExpression` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.getFilterRp:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42d350.  v0:= v1.`org.mozilla.javascript.ast.GeneratorExpression.k` @type ^`int`;
  #L42d354.  return v0;
}
procedure `int` `getIfPosition`(`org.mozilla.javascript.ast.GeneratorExpression` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.getIfPosition:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42d368.  v0:= v1.`org.mozilla.javascript.ast.GeneratorExpression.i` @type ^`int`;
  #L42d36c.  return v0;
}
procedure `java.util.List` `getLoops`(`org.mozilla.javascript.ast.GeneratorExpression` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.getLoops:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42d430.  v0:= v1.`org.mozilla.javascript.ast.GeneratorExpression.g` @type ^`java.util.List` @kind object;
  #L42d434.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `getResult`(`org.mozilla.javascript.ast.GeneratorExpression` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.getResult:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42d460.  v0:= v1.`org.mozilla.javascript.ast.GeneratorExpression.f` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42d464.  return v0 @kind object;
}
procedure `void` `setFilter`(`org.mozilla.javascript.ast.GeneratorExpression` v0 @kind this, `org.mozilla.javascript.ast.AstNode` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.setFilter:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;

  #L42d554.  v0.`org.mozilla.javascript.ast.GeneratorExpression.h` @type ^`org.mozilla.javascript.ast.AstNode` := v1 @kind object;
  #L42d558.  if v1 == 0 then goto L42d562;
  #L42d55c.  call `setParent`(v1, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42d562.  return @kind void;
}
procedure `void` `setFilterLp`(`org.mozilla.javascript.ast.GeneratorExpression` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.setFilterLp:(I)V` @AccessFlag PUBLIC {
    temp;

  #L42d574.  v0.`org.mozilla.javascript.ast.GeneratorExpression.j` @type ^`int` := v1;
  #L42d578.  return @kind void;
}
procedure `void` `setFilterRp`(`org.mozilla.javascript.ast.GeneratorExpression` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.setFilterRp:(I)V` @AccessFlag PUBLIC {
    temp;

  #L42d58c.  v0.`org.mozilla.javascript.ast.GeneratorExpression.k` @type ^`int` := v1;
  #L42d590.  return @kind void;
}
procedure `void` `setIfPosition`(`org.mozilla.javascript.ast.GeneratorExpression` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.setIfPosition:(I)V` @AccessFlag PUBLIC {
    temp;

  #L42d5a4.  v0.`org.mozilla.javascript.ast.GeneratorExpression.i` @type ^`int` := v1;
  #L42d5a8.  return @kind void;
}
procedure `void` `setLoops`(`org.mozilla.javascript.ast.GeneratorExpression` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.setLoops:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42d5bc.  call `assertNotNull`(v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L42d5c2.  v0:= v1.`org.mozilla.javascript.ast.GeneratorExpression.g` @type ^`java.util.List` @kind object;
  #L42d5c6.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L42d5cc.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L42d5d2.  v2:= temp @kind object;
  #L42d5d4.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42d5da.  v0:= temp;
  #L42d5dc.  if v0 == 0 then goto L42d5f4;
  #L42d5e0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42d5e6.  v0:= temp @kind object;
  #L42d5e8.  v0:= (`org.mozilla.javascript.ast.GeneratorExpressionLoop`) v0 @kind object;
  #L42d5ec.  call `addLoop`(v1, v0) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.addLoop:(Lorg/mozilla/javascript/ast/GeneratorExpressionLoop;)V` @kind virtual;
  #L42d5f2.  goto L42d5d4;
  #L42d5f4.  return @kind void;
}
procedure `void` `setResult`(`org.mozilla.javascript.ast.GeneratorExpression` v0 @kind this, `org.mozilla.javascript.ast.AstNode` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.setResult:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;

  #L42d608.  call `assertNotNull`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L42d60e.  v0.`org.mozilla.javascript.ast.GeneratorExpression.f` @type ^`org.mozilla.javascript.ast.AstNode` := v1 @kind object;
  #L42d612.  call `setParent`(v1, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42d618.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.GeneratorExpression` v3 @kind this, `int` v4 ) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42d380.  v4:= new `java.lang.StringBuilder`;
  #L42d384.  v0:= 250I;
  #L42d388.  call `<init>`(v4, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L42d38e.  v0:= "(" @kind object;
  #L42d392.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42d398.  v0:= v3.`org.mozilla.javascript.ast.GeneratorExpression.f` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42d39c.  v1:= 0I;
  #L42d39e.  call temp:= `toSource`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42d3a4.  v0:= temp @kind object;
  #L42d3a6.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42d3ac.  v0:= v3.`org.mozilla.javascript.ast.GeneratorExpression.g` @type ^`java.util.List` @kind object;
  #L42d3b0.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L42d3b6.  v0:= temp @kind object;
  #L42d3b8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42d3be.  v2:= temp;
  #L42d3c0.  if v2 == 0 then goto L42d3e0;
  #L42d3c4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42d3ca.  v2:= temp @kind object;
  #L42d3cc.  v2:= (`org.mozilla.javascript.ast.GeneratorExpressionLoop`) v2 @kind object;
  #L42d3d0.  call temp:= `toSource`(v2, v1) @signature `Lorg/mozilla/javascript/ast/GeneratorExpressionLoop;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42d3d6.  v2:= temp @kind object;
  #L42d3d8.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42d3de.  goto L42d3b8;
  #L42d3e0.  v0:= v3.`org.mozilla.javascript.ast.GeneratorExpression.h` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42d3e4.  v2:= ")" @kind object;
  #L42d3e8.  if v0 == 0 then goto L42d40e;
  #L42d3ec.  v0:= " if (" @kind object;
  #L42d3f0.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42d3f6.  v0:= v3.`org.mozilla.javascript.ast.GeneratorExpression.h` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42d3fa.  call temp:= `toSource`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42d400.  v0:= temp @kind object;
  #L42d402.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42d408.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42d40e.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42d414.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42d41a.  v4:= temp @kind object;
  #L42d41c.  return v4 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.GeneratorExpression` v2 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/GeneratorExpression;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42d62c.  call temp:= `visit`(v3, v2) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L42d632.  v0:= temp;
  #L42d634.  if v0 != 0 then goto L42d63a;
  #L42d638.  return @kind void;
  #L42d63a.  v0:= v2.`org.mozilla.javascript.ast.GeneratorExpression.f` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42d63e.  call `visit`(v0, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42d644.  v0:= v2.`org.mozilla.javascript.ast.GeneratorExpression.g` @type ^`java.util.List` @kind object;
  #L42d648.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L42d64e.  v0:= temp @kind object;
  #L42d650.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42d656.  v1:= temp;
  #L42d658.  if v1 == 0 then goto L42d670;
  #L42d65c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42d662.  v1:= temp @kind object;
  #L42d664.  v1:= (`org.mozilla.javascript.ast.GeneratorExpressionLoop`) v1 @kind object;
  #L42d668.  call `visit`(v1, v3) @signature `Lorg/mozilla/javascript/ast/GeneratorExpressionLoop;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42d66e.  goto L42d650;
  #L42d670.  v0:= v2.`org.mozilla.javascript.ast.GeneratorExpression.h` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42d674.  if v0 == 0 then goto L42d67e;
  #L42d678.  call `visit`(v0, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42d67e.  return @kind void;
}
