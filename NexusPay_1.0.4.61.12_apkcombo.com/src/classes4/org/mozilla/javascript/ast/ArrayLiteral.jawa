record `org.mozilla.javascript.ast.ArrayLiteral` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.AstNode` @kind class, `org.mozilla.javascript.ast.DestructuringForm` @kind interface {
  `java.util.List` `org.mozilla.javascript.ast.ArrayLiteral.c` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.ast.ArrayLiteral.d` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.ast.ArrayLiteral.e` @AccessFlag PRIVATE;
  `boolean` `org.mozilla.javascript.ast.ArrayLiteral.f` @AccessFlag PRIVATE;
}
global `java.util.List` `@@org.mozilla.javascript.ast.ArrayLiteral.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L429b70.  v0:= new `java.util.ArrayList`;
  #L429b74.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L429b7a.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L429b80.  v0:= temp @kind object;
  #L429b82.  `@@org.mozilla.javascript.ast.ArrayLiteral.g` @type ^`java.util.List` := v0 @kind object;
  #L429b86.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ArrayLiteral` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L429b98.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L429b9e.  v0:= 65I;
  #L429ba2.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L429ba6.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ArrayLiteral` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L429bb8.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(I)V` @kind direct;
  #L429bbe.  v1:= 65I;
  #L429bc2.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L429bc6.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ArrayLiteral` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L429bd8.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L429bde.  v1:= 65I;
  #L429be2.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L429be6.  return @kind void;
}
procedure `void` `addElement`(`org.mozilla.javascript.ast.ArrayLiteral` v1 @kind this, `org.mozilla.javascript.ast.AstNode` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.addElement:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429bf8.  call `assertNotNull`(v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L429bfe.  v0:= v1.`org.mozilla.javascript.ast.ArrayLiteral.c` @type ^`java.util.List` @kind object;
  #L429c02.  if v0 != 0 then goto L429c14;
  #L429c06.  v0:= new `java.util.ArrayList`;
  #L429c0a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L429c10.  v1.`org.mozilla.javascript.ast.ArrayLiteral.c` @type ^`java.util.List` := v0 @kind object;
  #L429c14.  v0:= v1.`org.mozilla.javascript.ast.ArrayLiteral.c` @type ^`java.util.List` @kind object;
  #L429c18.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L429c1e.  call `setParent`(v2, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L429c24.  return @kind void;
}
procedure `int` `getDestructuringLength`(`org.mozilla.javascript.ast.ArrayLiteral` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.getDestructuringLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429a6c.  v0:= v1.`org.mozilla.javascript.ast.ArrayLiteral.d` @type ^`int`;
  #L429a70.  return v0;
}
procedure `org.mozilla.javascript.ast.AstNode` `getElement`(`org.mozilla.javascript.ast.ArrayLiteral` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.getElement:(I)Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429b38.  v0:= v1.`org.mozilla.javascript.ast.ArrayLiteral.c` @type ^`java.util.List` @kind object;
  #L429b3c.  if v0 == 0 then goto L429b4e;
  #L429b40.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L429b46.  v2:= temp @kind object;
  #L429b48.  v2:= (`org.mozilla.javascript.ast.AstNode`) v2 @kind object;
  #L429b4c.  return v2 @kind object;
  #L429b4e.  v2:= new `java.lang.IndexOutOfBoundsException`;
  #L429b52.  v0:= "no elements" @kind object;
  #L429b56.  call `<init>`(v2, v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L429b5c.  throw v2;
}
procedure `java.util.List` `getElements`(`org.mozilla.javascript.ast.ArrayLiteral` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.getElements:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429b18.  v0:= v1.`org.mozilla.javascript.ast.ArrayLiteral.c` @type ^`java.util.List` @kind object;
  #L429b1c.  if v0 == 0 then goto L429b22;
  #L429b20.  goto L429b26;
  #L429b22.  v0:= `@@org.mozilla.javascript.ast.ArrayLiteral.g` @type ^`java.util.List` @kind object;
  #L429b26.  return v0 @kind object;
}
procedure `int` `getSize`(`org.mozilla.javascript.ast.ArrayLiteral` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429a84.  v0:= v1.`org.mozilla.javascript.ast.ArrayLiteral.c` @type ^`java.util.List` @kind object;
  #L429a88.  if v0 != 0 then goto L429a90;
  #L429a8c.  v0:= 0I;
  #L429a8e.  goto L429a98;
  #L429a90.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L429a96.  v0:= temp;
  #L429a98.  return v0;
}
procedure `int` `getSkipCount`(`org.mozilla.javascript.ast.ArrayLiteral` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.getSkipCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429aac.  v0:= v1.`org.mozilla.javascript.ast.ArrayLiteral.e` @type ^`int`;
  #L429ab0.  return v0;
}
procedure `boolean` `isDestructuring`(`org.mozilla.javascript.ast.ArrayLiteral` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.isDestructuring:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429a54.  v0:= v1.`org.mozilla.javascript.ast.ArrayLiteral.f` @type ^`boolean` @kind boolean;
  #L429a58.  return v0;
}
procedure `void` `setDestructuringLength`(`org.mozilla.javascript.ast.ArrayLiteral` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.setDestructuringLength:(I)V` @AccessFlag PUBLIC {
    temp;

  #L429c38.  v0.`org.mozilla.javascript.ast.ArrayLiteral.d` @type ^`int` := v1;
  #L429c3c.  return @kind void;
}
procedure `void` `setElements`(`org.mozilla.javascript.ast.ArrayLiteral` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.setElements:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429c50.  if v2 != 0 then goto L429c5c;
  #L429c54.  v2:= 0I;
  #L429c56.  v1.`org.mozilla.javascript.ast.ArrayLiteral.c` @type ^`java.util.List` := v2 @kind object;
  #L429c5a.  goto L429c92;
  #L429c5c.  v0:= v1.`org.mozilla.javascript.ast.ArrayLiteral.c` @type ^`java.util.List` @kind object;
  #L429c60.  if v0 == 0 then goto L429c6a;
  #L429c64.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L429c6a.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L429c70.  v2:= temp @kind object;
  #L429c72.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L429c78.  v0:= temp;
  #L429c7a.  if v0 == 0 then goto L429c92;
  #L429c7e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L429c84.  v0:= temp @kind object;
  #L429c86.  v0:= (`org.mozilla.javascript.ast.AstNode`) v0 @kind object;
  #L429c8a.  call `addElement`(v1, v0) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.addElement:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L429c90.  goto L429c72;
  #L429c92.  return @kind void;
}
procedure `void` `setIsDestructuring`(`org.mozilla.javascript.ast.ArrayLiteral` v0 @kind this, `boolean` v1 ) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.setIsDestructuring:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L429ca4.  v0.`org.mozilla.javascript.ast.ArrayLiteral.f` @type ^`boolean` := v1 @kind boolean;
  #L429ca8.  return @kind void;
}
procedure `void` `setSkipCount`(`org.mozilla.javascript.ast.ArrayLiteral` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.setSkipCount:(I)V` @AccessFlag PUBLIC {
    temp;

  #L429cbc.  v0.`org.mozilla.javascript.ast.ArrayLiteral.e` @type ^`int` := v1;
  #L429cc0.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.ArrayLiteral` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429ac4.  v0:= new `java.lang.StringBuilder`;
  #L429ac8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L429ace.  call temp:= `makeIndent`(v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L429ad4.  v2:= temp @kind object;
  #L429ad6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L429adc.  v2:= "[" @kind object;
  #L429ae0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L429ae6.  v2:= v1.`org.mozilla.javascript.ast.ArrayLiteral.c` @type ^`java.util.List` @kind object;
  #L429aea.  if v2 == 0 then goto L429af4;
  #L429aee.  call `printList`(v1, v2, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.printList:(Ljava/util/List;Ljava/lang/StringBuilder;)V` @kind virtual;
  #L429af4.  v2:= "]" @kind object;
  #L429af8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L429afe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L429b04.  v2:= temp @kind object;
  #L429b06.  return v2 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.ArrayLiteral` v2 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L429cd4.  call temp:= `visit`(v3, v2) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L429cda.  v0:= temp;
  #L429cdc.  if v0 == 0 then goto L429d10;
  #L429ce0.  call temp:= `getElements`(v2) @signature `Lorg/mozilla/javascript/ast/ArrayLiteral;.getElements:()Ljava/util/List;` @kind virtual;
  #L429ce6.  v0:= temp @kind object;
  #L429ce8.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L429cee.  v0:= temp @kind object;
  #L429cf0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L429cf6.  v1:= temp;
  #L429cf8.  if v1 == 0 then goto L429d10;
  #L429cfc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L429d02.  v1:= temp @kind object;
  #L429d04.  v1:= (`org.mozilla.javascript.ast.AstNode`) v1 @kind object;
  #L429d08.  call `visit`(v1, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L429d0e.  goto L429cf0;
  #L429d10.  return @kind void;
}
