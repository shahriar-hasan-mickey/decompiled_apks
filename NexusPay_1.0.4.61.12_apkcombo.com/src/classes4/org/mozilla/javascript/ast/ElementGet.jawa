record `org.mozilla.javascript.ast.ElementGet` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.AstNode` @kind class {
  `org.mozilla.javascript.ast.AstNode` `org.mozilla.javascript.ast.ElementGet.c` @AccessFlag PRIVATE;
  `org.mozilla.javascript.ast.AstNode` `org.mozilla.javascript.ast.ElementGet.d` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.ast.ElementGet.e` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.ast.ElementGet.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ElementGet` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ElementGet;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42bb90.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L42bb96.  v0:= -1I;
  #L42bb98.  v1.`org.mozilla.javascript.ast.ElementGet.e` @type ^`int` := v0;
  #L42bb9c.  v1.`org.mozilla.javascript.ast.ElementGet.f` @type ^`int` := v0;
  #L42bba0.  v0:= 36I;
  #L42bba4.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42bba8.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ElementGet` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/ElementGet;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42bbbc.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(I)V` @kind direct;
  #L42bbc2.  v1:= -1I;
  #L42bbc4.  v0.`org.mozilla.javascript.ast.ElementGet.e` @type ^`int` := v1;
  #L42bbc8.  v0.`org.mozilla.javascript.ast.ElementGet.f` @type ^`int` := v1;
  #L42bbcc.  v1:= 36I;
  #L42bbd0.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42bbd4.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ElementGet` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/ElementGet;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42bbe8.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L42bbee.  v1:= -1I;
  #L42bbf0.  v0.`org.mozilla.javascript.ast.ElementGet.e` @type ^`int` := v1;
  #L42bbf4.  v0.`org.mozilla.javascript.ast.ElementGet.f` @type ^`int` := v1;
  #L42bbf8.  v1:= 36I;
  #L42bbfc.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42bc00.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ElementGet` v1 @kind this, `org.mozilla.javascript.ast.AstNode` v2 @kind object, `org.mozilla.javascript.ast.AstNode` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/ElementGet;.<init>:(Lorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42bc14.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L42bc1a.  v0:= -1I;
  #L42bc1c.  v1.`org.mozilla.javascript.ast.ElementGet.e` @type ^`int` := v0;
  #L42bc20.  v1.`org.mozilla.javascript.ast.ElementGet.f` @type ^`int` := v0;
  #L42bc24.  v0:= 36I;
  #L42bc28.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42bc2c.  call `setTarget`(v1, v2) @signature `Lorg/mozilla/javascript/ast/ElementGet;.setTarget:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42bc32.  call `setElement`(v1, v3) @signature `Lorg/mozilla/javascript/ast/ElementGet;.setElement:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42bc38.  return @kind void;
}
procedure `org.mozilla.javascript.ast.AstNode` `getElement`(`org.mozilla.javascript.ast.ElementGet` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ElementGet;.getElement:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bb60.  v0:= v1.`org.mozilla.javascript.ast.ElementGet.d` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42bb64.  return v0 @kind object;
}
procedure `int` `getLb`(`org.mozilla.javascript.ast.ElementGet` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ElementGet;.getLb:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bac4.  v0:= v1.`org.mozilla.javascript.ast.ElementGet.e` @type ^`int`;
  #L42bac8.  return v0;
}
procedure `int` `getRb`(`org.mozilla.javascript.ast.ElementGet` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ElementGet;.getRb:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42badc.  v0:= v1.`org.mozilla.javascript.ast.ElementGet.f` @type ^`int`;
  #L42bae0.  return v0;
}
procedure `org.mozilla.javascript.ast.AstNode` `getTarget`(`org.mozilla.javascript.ast.ElementGet` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ElementGet;.getTarget:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bb78.  v0:= v1.`org.mozilla.javascript.ast.ElementGet.c` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42bb7c.  return v0 @kind object;
}
procedure `void` `setElement`(`org.mozilla.javascript.ast.ElementGet` v0 @kind this, `org.mozilla.javascript.ast.AstNode` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/ElementGet;.setElement:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;

  #L42bc4c.  call `assertNotNull`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L42bc52.  v0.`org.mozilla.javascript.ast.ElementGet.d` @type ^`org.mozilla.javascript.ast.AstNode` := v1 @kind object;
  #L42bc56.  call `setParent`(v1, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42bc5c.  return @kind void;
}
procedure `void` `setLb`(`org.mozilla.javascript.ast.ElementGet` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/ElementGet;.setLb:(I)V` @AccessFlag PUBLIC {
    temp;

  #L42bc70.  v0.`org.mozilla.javascript.ast.ElementGet.e` @type ^`int` := v1;
  #L42bc74.  return @kind void;
}
procedure `void` `setParens`(`org.mozilla.javascript.ast.ElementGet` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/ElementGet;.setParens:(II)V` @AccessFlag PUBLIC {
    temp;

  #L42bc88.  v0.`org.mozilla.javascript.ast.ElementGet.e` @type ^`int` := v1;
  #L42bc8c.  v0.`org.mozilla.javascript.ast.ElementGet.f` @type ^`int` := v2;
  #L42bc90.  return @kind void;
}
procedure `void` `setRb`(`org.mozilla.javascript.ast.ElementGet` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/ElementGet;.setRb:(I)V` @AccessFlag PUBLIC {
    temp;

  #L42bca4.  v0.`org.mozilla.javascript.ast.ElementGet.f` @type ^`int` := v1;
  #L42bca8.  return @kind void;
}
procedure `void` `setTarget`(`org.mozilla.javascript.ast.ElementGet` v0 @kind this, `org.mozilla.javascript.ast.AstNode` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/ElementGet;.setTarget:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;

  #L42bcbc.  call `assertNotNull`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L42bcc2.  v0.`org.mozilla.javascript.ast.ElementGet.c` @type ^`org.mozilla.javascript.ast.AstNode` := v1 @kind object;
  #L42bcc6.  call `setParent`(v1, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42bccc.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.ElementGet` v2 @kind this, `int` v3 ) @signature `Lorg/mozilla/javascript/ast/ElementGet;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42baf4.  v0:= new `java.lang.StringBuilder`;
  #L42baf8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42bafe.  call temp:= `makeIndent`(v2, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L42bb04.  v3:= temp @kind object;
  #L42bb06.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42bb0c.  v3:= v2.`org.mozilla.javascript.ast.ElementGet.c` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42bb10.  v1:= 0I;
  #L42bb12.  call temp:= `toSource`(v3, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42bb18.  v3:= temp @kind object;
  #L42bb1a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42bb20.  v3:= "[" @kind object;
  #L42bb24.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42bb2a.  v3:= v2.`org.mozilla.javascript.ast.ElementGet.d` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42bb2e.  call temp:= `toSource`(v3, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42bb34.  v3:= temp @kind object;
  #L42bb36.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42bb3c.  v3:= "]" @kind object;
  #L42bb40.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42bb46.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42bb4c.  v3:= temp @kind object;
  #L42bb4e.  return v3 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.ElementGet` v1 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/ElementGet;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42bce0.  call temp:= `visit`(v2, v1) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L42bce6.  v0:= temp;
  #L42bce8.  if v0 == 0 then goto L42bd00;
  #L42bcec.  v0:= v1.`org.mozilla.javascript.ast.ElementGet.c` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42bcf0.  call `visit`(v0, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42bcf6.  v0:= v1.`org.mozilla.javascript.ast.ElementGet.d` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42bcfa.  call `visit`(v0, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42bd00.  return @kind void;
}
