record `org.mozilla.javascript.ast.DoLoop` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.Loop` @kind class {
  `org.mozilla.javascript.ast.AstNode` `org.mozilla.javascript.ast.DoLoop.f` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.ast.DoLoop.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.DoLoop` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/DoLoop;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42b9dc.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/Loop;.<init>:()V` @kind direct;
  #L42b9e2.  v0:= -1I;
  #L42b9e4.  v1.`org.mozilla.javascript.ast.DoLoop.g` @type ^`int` := v0;
  #L42b9e8.  v0:= 118I;
  #L42b9ec.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42b9f0.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.DoLoop` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/DoLoop;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42ba04.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/Loop;.<init>:(I)V` @kind direct;
  #L42ba0a.  v1:= -1I;
  #L42ba0c.  v0.`org.mozilla.javascript.ast.DoLoop.g` @type ^`int` := v1;
  #L42ba10.  v1:= 118I;
  #L42ba14.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42ba18.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.DoLoop` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/DoLoop;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42ba2c.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/Loop;.<init>:(II)V` @kind direct;
  #L42ba32.  v1:= -1I;
  #L42ba34.  v0.`org.mozilla.javascript.ast.DoLoop.g` @type ^`int` := v1;
  #L42ba38.  v1:= 118I;
  #L42ba3c.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42ba40.  return @kind void;
}
procedure `org.mozilla.javascript.ast.AstNode` `getCondition`(`org.mozilla.javascript.ast.DoLoop` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/DoLoop;.getCondition:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42b9c4.  v0:= v1.`org.mozilla.javascript.ast.DoLoop.f` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42b9c8.  return v0 @kind object;
}
procedure `int` `getWhilePosition`(`org.mozilla.javascript.ast.DoLoop` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/DoLoop;.getWhilePosition:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42b92c.  v0:= v1.`org.mozilla.javascript.ast.DoLoop.g` @type ^`int`;
  #L42b930.  return v0;
}
procedure `void` `setCondition`(`org.mozilla.javascript.ast.DoLoop` v0 @kind this, `org.mozilla.javascript.ast.AstNode` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/DoLoop;.setCondition:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;

  #L42ba54.  call `assertNotNull`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L42ba5a.  v0.`org.mozilla.javascript.ast.DoLoop.f` @type ^`org.mozilla.javascript.ast.AstNode` := v1 @kind object;
  #L42ba5e.  call `setParent`(v1, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42ba64.  return @kind void;
}
procedure `void` `setWhilePosition`(`org.mozilla.javascript.ast.DoLoop` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/DoLoop;.setWhilePosition:(I)V` @AccessFlag PUBLIC {
    temp;

  #L42ba78.  v0.`org.mozilla.javascript.ast.DoLoop.g` @type ^`int` := v1;
  #L42ba7c.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.DoLoop` v2 @kind this, `int` v3 ) @signature `Lorg/mozilla/javascript/ast/DoLoop;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42b944.  v0:= new `java.lang.StringBuilder`;
  #L42b948.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42b94e.  call temp:= `makeIndent`(v2, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L42b954.  v1:= temp @kind object;
  #L42b956.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42b95c.  v1:= "do " @kind object;
  #L42b960.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42b966.  v1:= v2.`org.mozilla.javascript.ast.Loop.body` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42b96a.  call temp:= `toSource`(v1, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42b970.  v3:= temp @kind object;
  #L42b972.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L42b978.  v3:= temp @kind object;
  #L42b97a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42b980.  v3:= " while (" @kind object;
  #L42b984.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42b98a.  v3:= v2.`org.mozilla.javascript.ast.DoLoop.f` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42b98e.  v1:= 0I;
  #L42b990.  call temp:= `toSource`(v3, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42b996.  v3:= temp @kind object;
  #L42b998.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42b99e.  v3:= ");\n" @kind object;
  #L42b9a2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42b9a8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42b9ae.  v3:= temp @kind object;
  #L42b9b0.  return v3 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.DoLoop` v1 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/DoLoop;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ba90.  call temp:= `visit`(v2, v1) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L42ba96.  v0:= temp;
  #L42ba98.  if v0 == 0 then goto L42bab0;
  #L42ba9c.  v0:= v1.`org.mozilla.javascript.ast.Loop.body` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42baa0.  call `visit`(v0, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42baa6.  v0:= v1.`org.mozilla.javascript.ast.DoLoop.f` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42baaa.  call `visit`(v0, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42bab0.  return @kind void;
}
