record `org.mozilla.javascript.ast.ForLoop` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.Loop` @kind class {
  `org.mozilla.javascript.ast.AstNode` `org.mozilla.javascript.ast.ForLoop.f` @AccessFlag PRIVATE;
  `org.mozilla.javascript.ast.AstNode` `org.mozilla.javascript.ast.ForLoop.g` @AccessFlag PRIVATE;
  `org.mozilla.javascript.ast.AstNode` `org.mozilla.javascript.ast.ForLoop.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ForLoop` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ForLoop;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42c60c.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/Loop;.<init>:()V` @kind direct;
  #L42c612.  v0:= 119I;
  #L42c616.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42c61a.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ForLoop` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/ForLoop;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42c62c.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/Loop;.<init>:(I)V` @kind direct;
  #L42c632.  v1:= 119I;
  #L42c636.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42c63a.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ForLoop` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/ForLoop;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42c64c.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/Loop;.<init>:(II)V` @kind direct;
  #L42c652.  v1:= 119I;
  #L42c656.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42c65a.  return @kind void;
}
procedure `org.mozilla.javascript.ast.AstNode` `getCondition`(`org.mozilla.javascript.ast.ForLoop` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ForLoop;.getCondition:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c5c4.  v0:= v1.`org.mozilla.javascript.ast.ForLoop.g` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42c5c8.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `getIncrement`(`org.mozilla.javascript.ast.ForLoop` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ForLoop;.getIncrement:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c5dc.  v0:= v1.`org.mozilla.javascript.ast.ForLoop.h` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42c5e0.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `getInitializer`(`org.mozilla.javascript.ast.ForLoop` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ForLoop;.getInitializer:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c5f4.  v0:= v1.`org.mozilla.javascript.ast.ForLoop.f` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42c5f8.  return v0 @kind object;
}
procedure `void` `setCondition`(`org.mozilla.javascript.ast.ForLoop` v0 @kind this, `org.mozilla.javascript.ast.AstNode` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/ForLoop;.setCondition:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;

  #L42c66c.  call `assertNotNull`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L42c672.  v0.`org.mozilla.javascript.ast.ForLoop.g` @type ^`org.mozilla.javascript.ast.AstNode` := v1 @kind object;
  #L42c676.  call `setParent`(v1, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42c67c.  return @kind void;
}
procedure `void` `setIncrement`(`org.mozilla.javascript.ast.ForLoop` v0 @kind this, `org.mozilla.javascript.ast.AstNode` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/ForLoop;.setIncrement:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;

  #L42c690.  call `assertNotNull`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L42c696.  v0.`org.mozilla.javascript.ast.ForLoop.h` @type ^`org.mozilla.javascript.ast.AstNode` := v1 @kind object;
  #L42c69a.  call `setParent`(v1, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42c6a0.  return @kind void;
}
procedure `void` `setInitializer`(`org.mozilla.javascript.ast.ForLoop` v0 @kind this, `org.mozilla.javascript.ast.AstNode` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/ForLoop;.setInitializer:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;

  #L42c6b4.  call `assertNotNull`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L42c6ba.  v0.`org.mozilla.javascript.ast.ForLoop.f` @type ^`org.mozilla.javascript.ast.AstNode` := v1 @kind object;
  #L42c6be.  call `setParent`(v1, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42c6c4.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.ForLoop` v4 @kind this, `int` v5 ) @signature `Lorg/mozilla/javascript/ast/ForLoop;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L42c4ec.  v0:= new `java.lang.StringBuilder`;
  #L42c4f0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42c4f6.  call temp:= `makeIndent`(v4, v5) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L42c4fc.  v1:= temp @kind object;
  #L42c4fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42c504.  v1:= "for (" @kind object;
  #L42c508.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42c50e.  v1:= v4.`org.mozilla.javascript.ast.ForLoop.f` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42c512.  v2:= 0I;
  #L42c514.  call temp:= `toSource`(v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42c51a.  v1:= temp @kind object;
  #L42c51c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42c522.  v1:= "; " @kind object;
  #L42c526.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42c52c.  v3:= v4.`org.mozilla.javascript.ast.ForLoop.g` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42c530.  call temp:= `toSource`(v3, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42c536.  v3:= temp @kind object;
  #L42c538.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42c53e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42c544.  v1:= v4.`org.mozilla.javascript.ast.ForLoop.h` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42c548.  call temp:= `toSource`(v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42c54e.  v1:= temp @kind object;
  #L42c550.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42c556.  v1:= ") " @kind object;
  #L42c55a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42c560.  v1:= v4.`org.mozilla.javascript.ast.Loop.body` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42c564.  v2:= instanceof @variable v1 @type ^`org.mozilla.javascript.ast.Block` @kind boolean;
  #L42c568.  v3:= "\n" @kind object;
  #L42c56c.  if v2 == 0 then goto L42c58e;
  #L42c570.  call temp:= `toSource`(v1, v5) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42c576.  v5:= temp @kind object;
  #L42c578.  call temp:= `trim`(v5) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L42c57e.  v5:= temp @kind object;
  #L42c580.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42c586.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42c58c.  goto L42c5aa;
  #L42c58e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42c594.  v1:= v4.`org.mozilla.javascript.ast.Loop.body` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42c598.  v5:= v5 + 1;
  #L42c59c.  call temp:= `toSource`(v1, v5) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42c5a2.  v5:= temp @kind object;
  #L42c5a4.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42c5aa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42c5b0.  v5:= temp @kind object;
  #L42c5b2.  return v5 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.ForLoop` v1 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/ForLoop;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42c6d8.  call temp:= `visit`(v2, v1) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L42c6de.  v0:= temp;
  #L42c6e0.  if v0 == 0 then goto L42c70c;
  #L42c6e4.  v0:= v1.`org.mozilla.javascript.ast.ForLoop.f` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42c6e8.  call `visit`(v0, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42c6ee.  v0:= v1.`org.mozilla.javascript.ast.ForLoop.g` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42c6f2.  call `visit`(v0, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42c6f8.  v0:= v1.`org.mozilla.javascript.ast.ForLoop.h` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42c6fc.  call `visit`(v0, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42c702.  v0:= v1.`org.mozilla.javascript.ast.Loop.body` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42c706.  call `visit`(v0, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42c70c.  return @kind void;
}
