record `org.mozilla.javascript.ast.ArrayComprehension` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.Scope` @kind class {
  `org.mozilla.javascript.ast.AstNode` `org.mozilla.javascript.ast.ArrayComprehension.f` @AccessFlag PRIVATE;
  `java.util.List` `org.mozilla.javascript.ast.ArrayComprehension.g` @AccessFlag PRIVATE;
  `org.mozilla.javascript.ast.AstNode` `org.mozilla.javascript.ast.ArrayComprehension.h` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.ast.ArrayComprehension.i` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.ast.ArrayComprehension.j` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.ast.ArrayComprehension.k` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ArrayComprehension` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42983c.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/Scope;.<init>:()V` @kind direct;
  #L429842.  v0:= new `java.util.ArrayList`;
  #L429846.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L42984c.  v1.`org.mozilla.javascript.ast.ArrayComprehension.g` @type ^`java.util.List` := v0 @kind object;
  #L429850.  v0:= -1I;
  #L429852.  v1.`org.mozilla.javascript.ast.ArrayComprehension.i` @type ^`int` := v0;
  #L429856.  v1.`org.mozilla.javascript.ast.ArrayComprehension.j` @type ^`int` := v0;
  #L42985a.  v1.`org.mozilla.javascript.ast.ArrayComprehension.k` @type ^`int` := v0;
  #L42985e.  v0:= 157I;
  #L429862.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L429866.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ArrayComprehension` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L429878.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/Scope;.<init>:(I)V` @kind direct;
  #L42987e.  v1:= new `java.util.ArrayList`;
  #L429882.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L429888.  v0.`org.mozilla.javascript.ast.ArrayComprehension.g` @type ^`java.util.List` := v1 @kind object;
  #L42988c.  v1:= -1I;
  #L42988e.  v0.`org.mozilla.javascript.ast.ArrayComprehension.i` @type ^`int` := v1;
  #L429892.  v0.`org.mozilla.javascript.ast.ArrayComprehension.j` @type ^`int` := v1;
  #L429896.  v0.`org.mozilla.javascript.ast.ArrayComprehension.k` @type ^`int` := v1;
  #L42989a.  v1:= 157I;
  #L42989e.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L4298a2.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ArrayComprehension` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4298b4.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/Scope;.<init>:(II)V` @kind direct;
  #L4298ba.  v1:= new `java.util.ArrayList`;
  #L4298be.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4298c4.  v0.`org.mozilla.javascript.ast.ArrayComprehension.g` @type ^`java.util.List` := v1 @kind object;
  #L4298c8.  v1:= -1I;
  #L4298ca.  v0.`org.mozilla.javascript.ast.ArrayComprehension.i` @type ^`int` := v1;
  #L4298ce.  v0.`org.mozilla.javascript.ast.ArrayComprehension.j` @type ^`int` := v1;
  #L4298d2.  v0.`org.mozilla.javascript.ast.ArrayComprehension.k` @type ^`int` := v1;
  #L4298d6.  v1:= 157I;
  #L4298da.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L4298de.  return @kind void;
}
procedure `void` `addLoop`(`org.mozilla.javascript.ast.ArrayComprehension` v1 @kind this, `org.mozilla.javascript.ast.ArrayComprehensionLoop` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.addLoop:(Lorg/mozilla/javascript/ast/ArrayComprehensionLoop;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4298f0.  call `assertNotNull`(v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L4298f6.  v0:= v1.`org.mozilla.javascript.ast.ArrayComprehension.g` @type ^`java.util.List` @kind object;
  #L4298fa.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L429900.  call `setParent`(v2, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L429906.  return @kind void;
}
procedure `org.mozilla.javascript.ast.AstNode` `getFilter`(`org.mozilla.javascript.ast.ArrayComprehension` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.getFilter:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42980c.  v0:= v1.`org.mozilla.javascript.ast.ArrayComprehension.h` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L429810.  return v0 @kind object;
}
procedure `int` `getFilterLp`(`org.mozilla.javascript.ast.ArrayComprehension` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.getFilterLp:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4296f8.  v0:= v1.`org.mozilla.javascript.ast.ArrayComprehension.j` @type ^`int`;
  #L4296fc.  return v0;
}
procedure `int` `getFilterRp`(`org.mozilla.javascript.ast.ArrayComprehension` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.getFilterRp:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429710.  v0:= v1.`org.mozilla.javascript.ast.ArrayComprehension.k` @type ^`int`;
  #L429714.  return v0;
}
procedure `int` `getIfPosition`(`org.mozilla.javascript.ast.ArrayComprehension` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.getIfPosition:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429728.  v0:= v1.`org.mozilla.javascript.ast.ArrayComprehension.i` @type ^`int`;
  #L42972c.  return v0;
}
procedure `java.util.List` `getLoops`(`org.mozilla.javascript.ast.ArrayComprehension` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.getLoops:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4297f4.  v0:= v1.`org.mozilla.javascript.ast.ArrayComprehension.g` @type ^`java.util.List` @kind object;
  #L4297f8.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `getResult`(`org.mozilla.javascript.ast.ArrayComprehension` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.getResult:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429824.  v0:= v1.`org.mozilla.javascript.ast.ArrayComprehension.f` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L429828.  return v0 @kind object;
}
procedure `void` `setFilter`(`org.mozilla.javascript.ast.ArrayComprehension` v0 @kind this, `org.mozilla.javascript.ast.AstNode` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.setFilter:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;

  #L429918.  v0.`org.mozilla.javascript.ast.ArrayComprehension.h` @type ^`org.mozilla.javascript.ast.AstNode` := v1 @kind object;
  #L42991c.  if v1 == 0 then goto L429926;
  #L429920.  call `setParent`(v1, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L429926.  return @kind void;
}
procedure `void` `setFilterLp`(`org.mozilla.javascript.ast.ArrayComprehension` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.setFilterLp:(I)V` @AccessFlag PUBLIC {
    temp;

  #L429938.  v0.`org.mozilla.javascript.ast.ArrayComprehension.j` @type ^`int` := v1;
  #L42993c.  return @kind void;
}
procedure `void` `setFilterRp`(`org.mozilla.javascript.ast.ArrayComprehension` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.setFilterRp:(I)V` @AccessFlag PUBLIC {
    temp;

  #L429950.  v0.`org.mozilla.javascript.ast.ArrayComprehension.k` @type ^`int` := v1;
  #L429954.  return @kind void;
}
procedure `void` `setIfPosition`(`org.mozilla.javascript.ast.ArrayComprehension` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.setIfPosition:(I)V` @AccessFlag PUBLIC {
    temp;

  #L429968.  v0.`org.mozilla.javascript.ast.ArrayComprehension.i` @type ^`int` := v1;
  #L42996c.  return @kind void;
}
procedure `void` `setLoops`(`org.mozilla.javascript.ast.ArrayComprehension` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.setLoops:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429980.  call `assertNotNull`(v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L429986.  v0:= v1.`org.mozilla.javascript.ast.ArrayComprehension.g` @type ^`java.util.List` @kind object;
  #L42998a.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L429990.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L429996.  v2:= temp @kind object;
  #L429998.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42999e.  v0:= temp;
  #L4299a0.  if v0 == 0 then goto L4299b8;
  #L4299a4.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4299aa.  v0:= temp @kind object;
  #L4299ac.  v0:= (`org.mozilla.javascript.ast.ArrayComprehensionLoop`) v0 @kind object;
  #L4299b0.  call `addLoop`(v1, v0) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.addLoop:(Lorg/mozilla/javascript/ast/ArrayComprehensionLoop;)V` @kind virtual;
  #L4299b6.  goto L429998;
  #L4299b8.  return @kind void;
}
procedure `void` `setResult`(`org.mozilla.javascript.ast.ArrayComprehension` v0 @kind this, `org.mozilla.javascript.ast.AstNode` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.setResult:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;

  #L4299cc.  call `assertNotNull`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L4299d2.  v0.`org.mozilla.javascript.ast.ArrayComprehension.f` @type ^`org.mozilla.javascript.ast.AstNode` := v1 @kind object;
  #L4299d6.  call `setParent`(v1, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L4299dc.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.ArrayComprehension` v3 @kind this, `int` v4 ) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L429740.  v4:= new `java.lang.StringBuilder`;
  #L429744.  v0:= 250I;
  #L429748.  call `<init>`(v4, v0) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L42974e.  v0:= "[" @kind object;
  #L429752.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L429758.  v0:= v3.`org.mozilla.javascript.ast.ArrayComprehension.f` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42975c.  v1:= 0I;
  #L42975e.  call temp:= `toSource`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L429764.  v0:= temp @kind object;
  #L429766.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42976c.  v0:= v3.`org.mozilla.javascript.ast.ArrayComprehension.g` @type ^`java.util.List` @kind object;
  #L429770.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L429776.  v0:= temp @kind object;
  #L429778.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42977e.  v2:= temp;
  #L429780.  if v2 == 0 then goto L4297a0;
  #L429784.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42978a.  v2:= temp @kind object;
  #L42978c.  v2:= (`org.mozilla.javascript.ast.ArrayComprehensionLoop`) v2 @kind object;
  #L429790.  call temp:= `toSource`(v2, v1) @signature `Lorg/mozilla/javascript/ast/ArrayComprehensionLoop;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L429796.  v2:= temp @kind object;
  #L429798.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42979e.  goto L429778;
  #L4297a0.  v0:= v3.`org.mozilla.javascript.ast.ArrayComprehension.h` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L4297a4.  if v0 == 0 then goto L4297ce;
  #L4297a8.  v0:= " if (" @kind object;
  #L4297ac.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4297b2.  v0:= v3.`org.mozilla.javascript.ast.ArrayComprehension.h` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L4297b6.  call temp:= `toSource`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L4297bc.  v0:= temp @kind object;
  #L4297be.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4297c4.  v0:= ")" @kind object;
  #L4297c8.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4297ce.  v0:= "]" @kind object;
  #L4297d2.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4297d8.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4297de.  v4:= temp @kind object;
  #L4297e0.  return v4 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.ArrayComprehension` v2 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/ArrayComprehension;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4299f0.  call temp:= `visit`(v3, v2) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L4299f6.  v0:= temp;
  #L4299f8.  if v0 != 0 then goto L4299fe;
  #L4299fc.  return @kind void;
  #L4299fe.  v0:= v2.`org.mozilla.javascript.ast.ArrayComprehension.f` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L429a02.  call `visit`(v0, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L429a08.  v0:= v2.`org.mozilla.javascript.ast.ArrayComprehension.g` @type ^`java.util.List` @kind object;
  #L429a0c.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L429a12.  v0:= temp @kind object;
  #L429a14.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L429a1a.  v1:= temp;
  #L429a1c.  if v1 == 0 then goto L429a34;
  #L429a20.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L429a26.  v1:= temp @kind object;
  #L429a28.  v1:= (`org.mozilla.javascript.ast.ArrayComprehensionLoop`) v1 @kind object;
  #L429a2c.  call `visit`(v1, v3) @signature `Lorg/mozilla/javascript/ast/ArrayComprehensionLoop;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L429a32.  goto L429a14;
  #L429a34.  v0:= v2.`org.mozilla.javascript.ast.ArrayComprehension.h` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L429a38.  if v0 == 0 then goto L429a42;
  #L429a3c.  call `visit`(v0, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L429a42.  return @kind void;
}
