record `org.mozilla.javascript.ast.Yield` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.AstNode` @kind class {
  `org.mozilla.javascript.ast.AstNode` `org.mozilla.javascript.ast.Yield.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Yield` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Yield;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L432c00.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L432c06.  v0:= 72I;
  #L432c0a.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L432c0e.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Yield` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/Yield;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L432c20.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(I)V` @kind direct;
  #L432c26.  v1:= 72I;
  #L432c2a.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L432c2e.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Yield` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/Yield;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L432c40.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L432c46.  v1:= 72I;
  #L432c4a.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L432c4e.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Yield` v0 @kind this, `int` v1 , `int` v2 , `org.mozilla.javascript.ast.AstNode` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/Yield;.<init>:(IILorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L432c60.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L432c66.  v1:= 72I;
  #L432c6a.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L432c6e.  call `setValue`(v0, v3) @signature `Lorg/mozilla/javascript/ast/Yield;.setValue:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L432c74.  return @kind void;
}
procedure `org.mozilla.javascript.ast.AstNode` `getValue`(`org.mozilla.javascript.ast.Yield` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Yield;.getValue:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L432be8.  v0:= v1.`org.mozilla.javascript.ast.Yield.c` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L432bec.  return v0 @kind object;
}
procedure `void` `setValue`(`org.mozilla.javascript.ast.Yield` v0 @kind this, `org.mozilla.javascript.ast.AstNode` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/Yield;.setValue:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;

  #L432c88.  v0.`org.mozilla.javascript.ast.Yield.c` @type ^`org.mozilla.javascript.ast.AstNode` := v1 @kind object;
  #L432c8c.  if v1 == 0 then goto L432c96;
  #L432c90.  call `setParent`(v1, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L432c96.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.Yield` v2 @kind this, `int` v3 ) @signature `Lorg/mozilla/javascript/ast/Yield;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L432b98.  v3:= v2.`org.mozilla.javascript.ast.Yield.c` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L432b9c.  if v3 != 0 then goto L432ba6;
  #L432ba0.  v3:= "yield" @kind object;
  #L432ba4.  goto L432bd6;
  #L432ba6.  v3:= new `java.lang.StringBuilder`;
  #L432baa.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L432bb0.  v0:= "yield " @kind object;
  #L432bb4.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L432bba.  v0:= v2.`org.mozilla.javascript.ast.Yield.c` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L432bbe.  v1:= 0I;
  #L432bc0.  call temp:= `toSource`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L432bc6.  v0:= temp @kind object;
  #L432bc8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L432bce.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L432bd4.  v3:= temp @kind object;
  #L432bd6.  return v3 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.Yield` v1 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/Yield;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L432ca8.  call temp:= `visit`(v2, v1) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L432cae.  v0:= temp;
  #L432cb0.  if v0 == 0 then goto L432cc2;
  #L432cb4.  v0:= v1.`org.mozilla.javascript.ast.Yield.c` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L432cb8.  if v0 == 0 then goto L432cc2;
  #L432cbc.  call `visit`(v0, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L432cc2.  return @kind void;
}
