record `org.mozilla.javascript.ast.XmlPropRef` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.XmlRef` @kind class {
  `org.mozilla.javascript.ast.Name` `org.mozilla.javascript.ast.XmlPropRef.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.XmlPropRef` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/XmlPropRef;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4328d0.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/XmlRef;.<init>:()V` @kind direct;
  #L4328d6.  v0:= 79I;
  #L4328da.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L4328de.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.XmlPropRef` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/XmlPropRef;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4328f0.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/XmlRef;.<init>:(I)V` @kind direct;
  #L4328f6.  v1:= 79I;
  #L4328fa.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L4328fe.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.XmlPropRef` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/XmlPropRef;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L432910.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/XmlRef;.<init>:(II)V` @kind direct;
  #L432916.  v1:= 79I;
  #L43291a.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L43291e.  return @kind void;
}
procedure `org.mozilla.javascript.ast.Name` `getPropName`(`org.mozilla.javascript.ast.XmlPropRef` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/XmlPropRef;.getPropName:()Lorg/mozilla/javascript/ast/Name;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4328b8.  v0:= v1.`org.mozilla.javascript.ast.XmlPropRef.c` @type ^`org.mozilla.javascript.ast.Name` @kind object;
  #L4328bc.  return v0 @kind object;
}
procedure `void` `setPropName`(`org.mozilla.javascript.ast.XmlPropRef` v0 @kind this, `org.mozilla.javascript.ast.Name` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/XmlPropRef;.setPropName:(Lorg/mozilla/javascript/ast/Name;)V` @AccessFlag PUBLIC {
    temp;

  #L432930.  call `assertNotNull`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L432936.  v0.`org.mozilla.javascript.ast.XmlPropRef.c` @type ^`org.mozilla.javascript.ast.Name` := v1 @kind object;
  #L43293a.  call `setParent`(v1, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L432940.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.XmlPropRef` v2 @kind this, `int` v3 ) @signature `Lorg/mozilla/javascript/ast/XmlPropRef;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43283c.  v0:= new `java.lang.StringBuilder`;
  #L432840.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L432846.  call temp:= `makeIndent`(v2, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L43284c.  v3:= temp @kind object;
  #L43284e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L432854.  call temp:= `isAttributeAccess`(v2) @signature `Lorg/mozilla/javascript/ast/XmlRef;.isAttributeAccess:()Z` @kind virtual;
  #L43285a.  v3:= temp;
  #L43285c.  if v3 == 0 then goto L43286a;
  #L432860.  v3:= "@" @kind object;
  #L432864.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43286a.  v3:= v2.`org.mozilla.javascript.ast.XmlRef.namespace` @type ^`org.mozilla.javascript.ast.Name` @kind object;
  #L43286e.  v1:= 0I;
  #L432870.  if v3 == 0 then goto L43288c;
  #L432874.  call temp:= `toSource`(v3, v1) @signature `Lorg/mozilla/javascript/ast/Name;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L43287a.  v3:= temp @kind object;
  #L43287c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L432882.  v3:= "::" @kind object;
  #L432886.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43288c.  v3:= v2.`org.mozilla.javascript.ast.XmlPropRef.c` @type ^`org.mozilla.javascript.ast.Name` @kind object;
  #L432890.  call temp:= `toSource`(v3, v1) @signature `Lorg/mozilla/javascript/ast/Name;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L432896.  v3:= temp @kind object;
  #L432898.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L43289e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4328a4.  v3:= temp @kind object;
  #L4328a6.  return v3 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.XmlPropRef` v1 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/XmlPropRef;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L432954.  call temp:= `visit`(v2, v1) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L43295a.  v0:= temp;
  #L43295c.  if v0 == 0 then goto L432978;
  #L432960.  v0:= v1.`org.mozilla.javascript.ast.XmlRef.namespace` @type ^`org.mozilla.javascript.ast.Name` @kind object;
  #L432964.  if v0 == 0 then goto L43296e;
  #L432968.  call `visit`(v0, v2) @signature `Lorg/mozilla/javascript/ast/Name;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L43296e.  v0:= v1.`org.mozilla.javascript.ast.XmlPropRef.c` @type ^`org.mozilla.javascript.ast.Name` @kind object;
  #L432972.  call `visit`(v0, v2) @signature `Lorg/mozilla/javascript/ast/Name;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L432978.  return @kind void;
}
