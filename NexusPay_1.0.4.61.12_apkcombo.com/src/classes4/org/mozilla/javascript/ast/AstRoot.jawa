record `org.mozilla.javascript.ast.AstRoot` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.ScriptNode` @kind class {
  `java.util.SortedSet` `org.mozilla.javascript.ast.AstRoot.t` @AccessFlag PRIVATE;
  `boolean` `org.mozilla.javascript.ast.AstRoot.u` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.AstRoot` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/AstRoot;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42acd8.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/ScriptNode;.<init>:()V` @kind direct;
  #L42acde.  v0:= 136I;
  #L42ace2.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42ace6.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.AstRoot` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/AstRoot;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42acf8.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/ScriptNode;.<init>:(I)V` @kind direct;
  #L42acfe.  v1:= 136I;
  #L42ad02.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42ad06.  return @kind void;
}
procedure `void` `addComment`(`org.mozilla.javascript.ast.AstRoot` v2 @kind this, `org.mozilla.javascript.ast.Comment` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/AstRoot;.addComment:(Lorg/mozilla/javascript/ast/Comment;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42ad18.  call `assertNotNull`(v2, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L42ad1e.  v0:= v2.`org.mozilla.javascript.ast.AstRoot.t` @type ^`java.util.SortedSet` @kind object;
  #L42ad22.  if v0 != 0 then goto L42ad3e;
  #L42ad26.  v0:= new `java.util.TreeSet`;
  #L42ad2a.  v1:= new `org.mozilla.javascript.ast.AstNode$PositionComparator`;
  #L42ad2e.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode$PositionComparator;.<init>:()V` @kind direct;
  #L42ad34.  call `<init>`(v0, v1) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L42ad3a.  v2.`org.mozilla.javascript.ast.AstRoot.t` @type ^`java.util.SortedSet` := v0 @kind object;
  #L42ad3e.  v0:= v2.`org.mozilla.javascript.ast.AstRoot.t` @type ^`java.util.SortedSet` @kind object;
  #L42ad42.  call temp:= `add`(v0, v3) @signature `Ljava/util/SortedSet;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L42ad48.  call `setParent`(v3, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42ad4e.  return @kind void;
}
procedure `void` `checkParentLinks`(`org.mozilla.javascript.ast.AstRoot` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/AstRoot;.checkParentLinks:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ad60.  v0:= new `org.mozilla.javascript.ast.AstRoot$a`;
  #L42ad64.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstRoot$a;.<init>:(Lorg/mozilla/javascript/ast/AstRoot;)V` @kind direct;
  #L42ad6a.  call `visit`(v1, v0) @signature `Lorg/mozilla/javascript/ast/ScriptNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42ad70.  return @kind void;
}
procedure `java.lang.String` `debugPrint`(`org.mozilla.javascript.ast.AstRoot` v3 @kind this) @signature `Lorg/mozilla/javascript/ast/AstRoot;.debugPrint:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42ac30.  v0:= new `org.mozilla.javascript.ast.AstNode$DebugPrintVisitor`;
  #L42ac34.  v1:= new `java.lang.StringBuilder`;
  #L42ac38.  v2:= 1000I;
  #L42ac3c.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L42ac42.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode$DebugPrintVisitor;.<init>:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L42ac48.  call `visitAll`(v3, v0) @signature `Lorg/mozilla/javascript/ast/AstRoot;.visitAll:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42ac4e.  call temp:= `toString`(v0) @signature `Lorg/mozilla/javascript/ast/AstNode$DebugPrintVisitor;.toString:()Ljava/lang/String;` @kind virtual;
  #L42ac54.  v0:= temp @kind object;
  #L42ac56.  return v0 @kind object;
}
procedure `java.util.SortedSet` `getComments`(`org.mozilla.javascript.ast.AstRoot` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/AstRoot;.getComments:()Ljava/util/SortedSet;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42acc0.  v0:= v1.`org.mozilla.javascript.ast.AstRoot.t` @type ^`java.util.SortedSet` @kind object;
  #L42acc4.  return v0 @kind object;
}
procedure `boolean` `isInStrictMode`(`org.mozilla.javascript.ast.AstRoot` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/AstRoot;.isInStrictMode:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ac18.  v0:= v1.`org.mozilla.javascript.ast.AstRoot.u` @type ^`boolean` @kind boolean;
  #L42ac1c.  return v0;
}
procedure `void` `setComments`(`org.mozilla.javascript.ast.AstRoot` v1 @kind this, `java.util.SortedSet` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/AstRoot;.setComments:(Ljava/util/SortedSet;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ad84.  if v2 != 0 then goto L42ad90;
  #L42ad88.  v2:= 0I;
  #L42ad8a.  v1.`org.mozilla.javascript.ast.AstRoot.t` @type ^`java.util.SortedSet` := v2 @kind object;
  #L42ad8e.  goto L42adc6;
  #L42ad90.  v0:= v1.`org.mozilla.javascript.ast.AstRoot.t` @type ^`java.util.SortedSet` @kind object;
  #L42ad94.  if v0 == 0 then goto L42ad9e;
  #L42ad98.  call `clear`(v0) @signature `Ljava/util/SortedSet;.clear:()V` @kind interface;
  #L42ad9e.  call temp:= `iterator`(v2) @signature `Ljava/util/SortedSet;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L42ada4.  v2:= temp @kind object;
  #L42ada6.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42adac.  v0:= temp;
  #L42adae.  if v0 == 0 then goto L42adc6;
  #L42adb2.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42adb8.  v0:= temp @kind object;
  #L42adba.  v0:= (`org.mozilla.javascript.ast.Comment`) v0 @kind object;
  #L42adbe.  call `addComment`(v1, v0) @signature `Lorg/mozilla/javascript/ast/AstRoot;.addComment:(Lorg/mozilla/javascript/ast/Comment;)V` @kind virtual;
  #L42adc4.  goto L42ada6;
  #L42adc6.  return @kind void;
}
procedure `void` `setInStrictMode`(`org.mozilla.javascript.ast.AstRoot` v0 @kind this, `boolean` v1 ) @signature `Lorg/mozilla/javascript/ast/AstRoot;.setInStrictMode:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L42add8.  v0.`org.mozilla.javascript.ast.AstRoot.u` @type ^`boolean` := v1 @kind boolean;
  #L42addc.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.AstRoot` v3 @kind this, `int` v4 ) @signature `Lorg/mozilla/javascript/ast/AstRoot;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42ac68.  v0:= new `java.lang.StringBuilder`;
  #L42ac6c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42ac72.  call temp:= `iterator`(v3) @signature `Lorg/mozilla/javascript/Node;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L42ac78.  v1:= temp @kind object;
  #L42ac7a.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42ac80.  v2:= temp;
  #L42ac82.  if v2 == 0 then goto L42aca6;
  #L42ac86.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42ac8c.  v2:= temp @kind object;
  #L42ac8e.  v2:= (`org.mozilla.javascript.Node`) v2 @kind object;
  #L42ac92.  v2:= (`org.mozilla.javascript.ast.AstNode`) v2 @kind object;
  #L42ac96.  call temp:= `toSource`(v2, v4) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42ac9c.  v2:= temp @kind object;
  #L42ac9e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42aca4.  goto L42ac7a;
  #L42aca6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42acac.  v4:= temp @kind object;
  #L42acae.  return v4 @kind object;
}
procedure `void` `visitAll`(`org.mozilla.javascript.ast.AstRoot` v0 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/AstRoot;.visitAll:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;

  #L42adf0.  call `visit`(v0, v1) @signature `Lorg/mozilla/javascript/ast/ScriptNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42adf6.  call `visitComments`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstRoot;.visitComments:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42adfc.  return @kind void;
}
procedure `void` `visitComments`(`org.mozilla.javascript.ast.AstRoot` v2 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/AstRoot;.visitComments:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42ae10.  v0:= v2.`org.mozilla.javascript.ast.AstRoot.t` @type ^`java.util.SortedSet` @kind object;
  #L42ae14.  if v0 == 0 then goto L42ae40;
  #L42ae18.  call temp:= `iterator`(v0) @signature `Ljava/util/SortedSet;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L42ae1e.  v0:= temp @kind object;
  #L42ae20.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42ae26.  v1:= temp;
  #L42ae28.  if v1 == 0 then goto L42ae40;
  #L42ae2c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42ae32.  v1:= temp @kind object;
  #L42ae34.  v1:= (`org.mozilla.javascript.ast.Comment`) v1 @kind object;
  #L42ae38.  call temp:= `visit`(v3, v1) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L42ae3e.  goto L42ae20;
  #L42ae40.  return @kind void;
}
