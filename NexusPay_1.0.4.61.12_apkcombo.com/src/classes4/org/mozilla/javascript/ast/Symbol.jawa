record `org.mozilla.javascript.ast.Symbol` @kind class @AccessFlag PUBLIC {
  `int` `org.mozilla.javascript.ast.Symbol.a` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.ast.Symbol.b` @AccessFlag PRIVATE;
  `java.lang.String` `org.mozilla.javascript.ast.Symbol.c` @AccessFlag PRIVATE;
  `org.mozilla.javascript.Node` `org.mozilla.javascript.ast.Symbol.d` @AccessFlag PRIVATE;
  `org.mozilla.javascript.ast.Scope` `org.mozilla.javascript.ast.Symbol.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Symbol` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Symbol;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L430f18.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L430f1e.  v0:= -1I;
  #L430f20.  v1.`org.mozilla.javascript.ast.Symbol.b` @type ^`int` := v0;
  #L430f24.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Symbol` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/Symbol;.<init>:(ILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L430f38.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L430f3e.  v0:= -1I;
  #L430f40.  v1.`org.mozilla.javascript.ast.Symbol.b` @type ^`int` := v0;
  #L430f44.  call `setName`(v1, v3) @signature `Lorg/mozilla/javascript/ast/Symbol;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L430f4a.  call `setDeclType`(v1, v2) @signature `Lorg/mozilla/javascript/ast/Symbol;.setDeclType:(I)V` @kind virtual;
  #L430f50.  return @kind void;
}
procedure `org.mozilla.javascript.ast.Scope` `getContainingTable`(`org.mozilla.javascript.ast.Symbol` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Symbol;.getContainingTable:()Lorg/mozilla/javascript/ast/Scope;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L430f00.  v0:= v1.`org.mozilla.javascript.ast.Symbol.e` @type ^`org.mozilla.javascript.ast.Scope` @kind object;
  #L430f04.  return v0 @kind object;
}
procedure `int` `getDeclType`(`org.mozilla.javascript.ast.Symbol` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Symbol;.getDeclType:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L430e0c.  v0:= v1.`org.mozilla.javascript.ast.Symbol.a` @type ^`int`;
  #L430e10.  return v0;
}
procedure `java.lang.String` `getDeclTypeName`(`org.mozilla.javascript.ast.Symbol` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Symbol;.getDeclTypeName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L430e3c.  v0:= v1.`org.mozilla.javascript.ast.Symbol.a` @type ^`int`;
  #L430e40.  call temp:= `typeToName`(v0) @signature `Lorg/mozilla/javascript/Token;.typeToName:(I)Ljava/lang/String;` @kind static;
  #L430e46.  v0:= temp @kind object;
  #L430e48.  return v0 @kind object;
}
procedure `int` `getIndex`(`org.mozilla.javascript.ast.Symbol` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Symbol;.getIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L430e24.  v0:= v1.`org.mozilla.javascript.ast.Symbol.b` @type ^`int`;
  #L430e28.  return v0;
}
procedure `java.lang.String` `getName`(`org.mozilla.javascript.ast.Symbol` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Symbol;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L430e5c.  v0:= v1.`org.mozilla.javascript.ast.Symbol.c` @type ^`java.lang.String` @kind object;
  #L430e60.  return v0 @kind object;
}
procedure `org.mozilla.javascript.Node` `getNode`(`org.mozilla.javascript.ast.Symbol` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Symbol;.getNode:()Lorg/mozilla/javascript/Node;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L430ee8.  v0:= v1.`org.mozilla.javascript.ast.Symbol.d` @type ^`org.mozilla.javascript.Node` @kind object;
  #L430eec.  return v0 @kind object;
}
procedure `void` `setContainingTable`(`org.mozilla.javascript.ast.Symbol` v0 @kind this, `org.mozilla.javascript.ast.Scope` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/Symbol;.setContainingTable:(Lorg/mozilla/javascript/ast/Scope;)V` @AccessFlag PUBLIC {
    temp;

  #L430f64.  v0.`org.mozilla.javascript.ast.Symbol.e` @type ^`org.mozilla.javascript.ast.Scope` := v1 @kind object;
  #L430f68.  return @kind void;
}
procedure `void` `setDeclType`(`org.mozilla.javascript.ast.Symbol` v3 @kind this, `int` v4 ) @signature `Lorg/mozilla/javascript/ast/Symbol;.setDeclType:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L430f7c.  v0:= 109I;
  #L430f80.  if v4 == v0 then goto L430fd4;
  #L430f84.  v0:= 87I;
  #L430f88.  if v4 == v0 then goto L430fd4;
  #L430f8c.  v0:= 122I;
  #L430f90.  if v4 == v0 then goto L430fd4;
  #L430f94.  v0:= 153I;
  #L430f98.  if v4 == v0 then goto L430fd4;
  #L430f9c.  v0:= 154I;
  #L430fa0.  if v4 != v0 then goto L430fa6;
  #L430fa4.  goto L430fd4;
  #L430fa6.  v0:= new `java.lang.IllegalArgumentException`;
  #L430faa.  v1:= new `java.lang.StringBuilder`;
  #L430fae.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L430fb4.  v2:= "Invalid declType: " @kind object;
  #L430fb8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430fbe.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L430fc4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L430fca.  v4:= temp @kind object;
  #L430fcc.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L430fd2.  throw v0;
  #L430fd4.  v3.`org.mozilla.javascript.ast.Symbol.a` @type ^`int` := v4;
  #L430fd8.  return @kind void;
}
procedure `void` `setIndex`(`org.mozilla.javascript.ast.Symbol` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/Symbol;.setIndex:(I)V` @AccessFlag PUBLIC {
    temp;

  #L430fec.  v0.`org.mozilla.javascript.ast.Symbol.b` @type ^`int` := v1;
  #L430ff0.  return @kind void;
}
procedure `void` `setName`(`org.mozilla.javascript.ast.Symbol` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/Symbol;.setName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L431004.  v0.`org.mozilla.javascript.ast.Symbol.c` @type ^`java.lang.String` := v1 @kind object;
  #L431008.  return @kind void;
}
procedure `void` `setNode`(`org.mozilla.javascript.ast.Symbol` v0 @kind this, `org.mozilla.javascript.Node` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/Symbol;.setNode:(Lorg/mozilla/javascript/Node;)V` @AccessFlag PUBLIC {
    temp;

  #L43101c.  v0.`org.mozilla.javascript.ast.Symbol.d` @type ^`org.mozilla.javascript.Node` := v1 @kind object;
  #L431020.  return @kind void;
}
procedure `java.lang.String` `toString`(`org.mozilla.javascript.ast.Symbol` v2 @kind this) @signature `Lorg/mozilla/javascript/ast/Symbol;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L430e74.  v0:= new `java.lang.StringBuilder`;
  #L430e78.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L430e7e.  v1:= "Symbol (" @kind object;
  #L430e82.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430e88.  call temp:= `getDeclTypeName`(v2) @signature `Lorg/mozilla/javascript/ast/Symbol;.getDeclTypeName:()Ljava/lang/String;` @kind virtual;
  #L430e8e.  v1:= temp @kind object;
  #L430e90.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430e96.  v1:= ") name=" @kind object;
  #L430e9a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430ea0.  v1:= v2.`org.mozilla.javascript.ast.Symbol.c` @type ^`java.lang.String` @kind object;
  #L430ea4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430eaa.  v1:= v2.`org.mozilla.javascript.ast.Symbol.d` @type ^`org.mozilla.javascript.Node` @kind object;
  #L430eae.  if v1 == 0 then goto L430ece;
  #L430eb2.  v1:= " line=" @kind object;
  #L430eb6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430ebc.  v1:= v2.`org.mozilla.javascript.ast.Symbol.d` @type ^`org.mozilla.javascript.Node` @kind object;
  #L430ec0.  call temp:= `getLineno`(v1) @signature `Lorg/mozilla/javascript/Node;.getLineno:()I` @kind virtual;
  #L430ec6.  v1:= temp;
  #L430ec8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L430ece.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L430ed4.  v0:= temp @kind object;
  #L430ed6.  return v0 @kind object;
}
