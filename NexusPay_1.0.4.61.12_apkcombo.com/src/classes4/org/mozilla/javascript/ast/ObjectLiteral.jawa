record `org.mozilla.javascript.ast.ObjectLiteral` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.AstNode` @kind class, `org.mozilla.javascript.ast.DestructuringForm` @kind interface {
  `java.util.List` `org.mozilla.javascript.ast.ObjectLiteral.c` @AccessFlag PRIVATE;
  `boolean` `org.mozilla.javascript.ast.ObjectLiteral.d` @AccessFlag ;
}
global `java.util.List` `@@org.mozilla.javascript.ast.ObjectLiteral.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/mozilla/javascript/ast/ObjectLiteral;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L42ef90.  v0:= new `java.util.ArrayList`;
  #L42ef94.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L42ef9a.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L42efa0.  v0:= temp @kind object;
  #L42efa2.  `@@org.mozilla.javascript.ast.ObjectLiteral.e` @type ^`java.util.List` := v0 @kind object;
  #L42efa6.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ObjectLiteral` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ObjectLiteral;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42efb8.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L42efbe.  v0:= 66I;
  #L42efc2.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42efc6.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ObjectLiteral` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/ObjectLiteral;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42efd8.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(I)V` @kind direct;
  #L42efde.  v1:= 66I;
  #L42efe2.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42efe6.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ObjectLiteral` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/ObjectLiteral;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42eff8.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L42effe.  v1:= 66I;
  #L42f002.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42f006.  return @kind void;
}
procedure `void` `addElement`(`org.mozilla.javascript.ast.ObjectLiteral` v1 @kind this, `org.mozilla.javascript.ast.ObjectProperty` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/ObjectLiteral;.addElement:(Lorg/mozilla/javascript/ast/ObjectProperty;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f018.  call `assertNotNull`(v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L42f01e.  v0:= v1.`org.mozilla.javascript.ast.ObjectLiteral.c` @type ^`java.util.List` @kind object;
  #L42f022.  if v0 != 0 then goto L42f034;
  #L42f026.  v0:= new `java.util.ArrayList`;
  #L42f02a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L42f030.  v1.`org.mozilla.javascript.ast.ObjectLiteral.c` @type ^`java.util.List` := v0 @kind object;
  #L42f034.  v0:= v1.`org.mozilla.javascript.ast.ObjectLiteral.c` @type ^`java.util.List` @kind object;
  #L42f038.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L42f03e.  call `setParent`(v2, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42f044.  return @kind void;
}
procedure `java.util.List` `getElements`(`org.mozilla.javascript.ast.ObjectLiteral` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ObjectLiteral;.getElements:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ef70.  v0:= v1.`org.mozilla.javascript.ast.ObjectLiteral.c` @type ^`java.util.List` @kind object;
  #L42ef74.  if v0 == 0 then goto L42ef7a;
  #L42ef78.  goto L42ef7e;
  #L42ef7a.  v0:= `@@org.mozilla.javascript.ast.ObjectLiteral.e` @type ^`java.util.List` @kind object;
  #L42ef7e.  return v0 @kind object;
}
procedure `boolean` `isDestructuring`(`org.mozilla.javascript.ast.ObjectLiteral` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ObjectLiteral;.isDestructuring:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ef04.  v0:= v1.`org.mozilla.javascript.ast.ObjectLiteral.d` @type ^`boolean` @kind boolean;
  #L42ef08.  return v0;
}
procedure `void` `setElements`(`org.mozilla.javascript.ast.ObjectLiteral` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/ObjectLiteral;.setElements:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f058.  if v2 != 0 then goto L42f064;
  #L42f05c.  v2:= 0I;
  #L42f05e.  v1.`org.mozilla.javascript.ast.ObjectLiteral.c` @type ^`java.util.List` := v2 @kind object;
  #L42f062.  goto L42f09a;
  #L42f064.  v0:= v1.`org.mozilla.javascript.ast.ObjectLiteral.c` @type ^`java.util.List` @kind object;
  #L42f068.  if v0 == 0 then goto L42f072;
  #L42f06c.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L42f072.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L42f078.  v2:= temp @kind object;
  #L42f07a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42f080.  v0:= temp;
  #L42f082.  if v0 == 0 then goto L42f09a;
  #L42f086.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42f08c.  v0:= temp @kind object;
  #L42f08e.  v0:= (`org.mozilla.javascript.ast.ObjectProperty`) v0 @kind object;
  #L42f092.  call `addElement`(v1, v0) @signature `Lorg/mozilla/javascript/ast/ObjectLiteral;.addElement:(Lorg/mozilla/javascript/ast/ObjectProperty;)V` @kind virtual;
  #L42f098.  goto L42f07a;
  #L42f09a.  return @kind void;
}
procedure `void` `setIsDestructuring`(`org.mozilla.javascript.ast.ObjectLiteral` v0 @kind this, `boolean` v1 ) @signature `Lorg/mozilla/javascript/ast/ObjectLiteral;.setIsDestructuring:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L42f0ac.  v0.`org.mozilla.javascript.ast.ObjectLiteral.d` @type ^`boolean` := v1 @kind boolean;
  #L42f0b0.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.ObjectLiteral` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/ast/ObjectLiteral;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ef1c.  v0:= new `java.lang.StringBuilder`;
  #L42ef20.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42ef26.  call temp:= `makeIndent`(v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L42ef2c.  v2:= temp @kind object;
  #L42ef2e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42ef34.  v2:= "{" @kind object;
  #L42ef38.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42ef3e.  v2:= v1.`org.mozilla.javascript.ast.ObjectLiteral.c` @type ^`java.util.List` @kind object;
  #L42ef42.  if v2 == 0 then goto L42ef4c;
  #L42ef46.  call `printList`(v1, v2, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.printList:(Ljava/util/List;Ljava/lang/StringBuilder;)V` @kind virtual;
  #L42ef4c.  v2:= "}" @kind object;
  #L42ef50.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42ef56.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42ef5c.  v2:= temp @kind object;
  #L42ef5e.  return v2 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.ObjectLiteral` v2 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/ObjectLiteral;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42f0c4.  call temp:= `visit`(v3, v2) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L42f0ca.  v0:= temp;
  #L42f0cc.  if v0 == 0 then goto L42f100;
  #L42f0d0.  call temp:= `getElements`(v2) @signature `Lorg/mozilla/javascript/ast/ObjectLiteral;.getElements:()Ljava/util/List;` @kind virtual;
  #L42f0d6.  v0:= temp @kind object;
  #L42f0d8.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L42f0de.  v0:= temp @kind object;
  #L42f0e0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42f0e6.  v1:= temp;
  #L42f0e8.  if v1 == 0 then goto L42f100;
  #L42f0ec.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42f0f2.  v1:= temp @kind object;
  #L42f0f4.  v1:= (`org.mozilla.javascript.ast.ObjectProperty`) v1 @kind object;
  #L42f0f8.  call `visit`(v1, v3) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42f0fe.  goto L42f0e0;
  #L42f100.  return @kind void;
}
