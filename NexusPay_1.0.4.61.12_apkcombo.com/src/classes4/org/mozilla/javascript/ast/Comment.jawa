record `org.mozilla.javascript.ast.Comment` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.AstNode` @kind class {
  `java.lang.String` `org.mozilla.javascript.ast.Comment.c` @AccessFlag PRIVATE;
  `org.mozilla.javascript.Token$CommentType` `org.mozilla.javascript.ast.Comment.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Comment` v0 @kind this, `int` v1 , `int` v2 , `org.mozilla.javascript.Token$CommentType` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/mozilla/javascript/ast/Comment;.<init>:(IILorg/mozilla/javascript/Token$CommentType;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42b450.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L42b456.  v1:= 161I;
  #L42b45a.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42b45e.  v0.`org.mozilla.javascript.ast.Comment.d` @type ^`org.mozilla.javascript.Token$CommentType` := v3 @kind object;
  #L42b462.  v0.`org.mozilla.javascript.ast.Comment.c` @type ^`java.lang.String` := v4 @kind object;
  #L42b466.  return @kind void;
}
procedure `org.mozilla.javascript.Token$CommentType` `getCommentType`(`org.mozilla.javascript.ast.Comment` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Comment;.getCommentType:()Lorg/mozilla/javascript/Token$CommentType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42b438.  v0:= v1.`org.mozilla.javascript.ast.Comment.d` @type ^`org.mozilla.javascript.Token$CommentType` @kind object;
  #L42b43c.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`org.mozilla.javascript.ast.Comment` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Comment;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42b3d8.  v0:= v1.`org.mozilla.javascript.ast.Comment.c` @type ^`java.lang.String` @kind object;
  #L42b3dc.  return v0 @kind object;
}
procedure `void` `setCommentType`(`org.mozilla.javascript.ast.Comment` v0 @kind this, `org.mozilla.javascript.Token$CommentType` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/Comment;.setCommentType:(Lorg/mozilla/javascript/Token$CommentType;)V` @AccessFlag PUBLIC {
    temp;

  #L42b478.  v0.`org.mozilla.javascript.ast.Comment.d` @type ^`org.mozilla.javascript.Token$CommentType` := v1 @kind object;
  #L42b47c.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.Comment` v2 @kind this, `int` v3 ) @signature `Lorg/mozilla/javascript/ast/Comment;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42b3f0.  v0:= new `java.lang.StringBuilder`;
  #L42b3f4.  call temp:= `getLength`(v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.getLength:()I` @kind virtual;
  #L42b3fa.  v1:= temp;
  #L42b3fc.  v1:= v1 + 10;
  #L42b400.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L42b406.  call temp:= `makeIndent`(v2, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L42b40c.  v3:= temp @kind object;
  #L42b40e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42b414.  v3:= v2.`org.mozilla.javascript.ast.Comment.c` @type ^`java.lang.String` @kind object;
  #L42b418.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42b41e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42b424.  v3:= temp @kind object;
  #L42b426.  return v3 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.Comment` v0 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/Comment;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;

  #L42b490.  call temp:= `visit`(v1, v0) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L42b496.  return @kind void;
}
