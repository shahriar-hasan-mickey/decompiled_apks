record `org.mozilla.javascript.ast.ParseProblem` @kind class @AccessFlag PUBLIC {
  `org.mozilla.javascript.ast.ParseProblem$Type` `org.mozilla.javascript.ast.ParseProblem.a` @AccessFlag PRIVATE;
  `java.lang.String` `org.mozilla.javascript.ast.ParseProblem.b` @AccessFlag PRIVATE;
  `java.lang.String` `org.mozilla.javascript.ast.ParseProblem.c` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.ast.ParseProblem.d` @AccessFlag PRIVATE;
  `int` `org.mozilla.javascript.ast.ParseProblem.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.ParseProblem` v0 @kind this, `org.mozilla.javascript.ast.ParseProblem$Type` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.<init>:(Lorg/mozilla/javascript/ast/ParseProblem$Type;Ljava/lang/String;Ljava/lang/String;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42f634.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42f63a.  call `setType`(v0, v1) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.setType:(Lorg/mozilla/javascript/ast/ParseProblem$Type;)V` @kind virtual;
  #L42f640.  call `setMessage`(v0, v2) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.setMessage:(Ljava/lang/String;)V` @kind virtual;
  #L42f646.  call `setSourceName`(v0, v3) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.setSourceName:(Ljava/lang/String;)V` @kind virtual;
  #L42f64c.  call `setFileOffset`(v0, v4) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.setFileOffset:(I)V` @kind virtual;
  #L42f652.  call `setLength`(v0, v5) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.setLength:(I)V` @kind virtual;
  #L42f658.  return @kind void;
}
procedure `int` `getFileOffset`(`org.mozilla.javascript.ast.ParseProblem` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.getFileOffset:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f520.  v0:= v1.`org.mozilla.javascript.ast.ParseProblem.d` @type ^`int`;
  #L42f524.  return v0;
}
procedure `int` `getLength`(`org.mozilla.javascript.ast.ParseProblem` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.getLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f538.  v0:= v1.`org.mozilla.javascript.ast.ParseProblem.e` @type ^`int`;
  #L42f53c.  return v0;
}
procedure `java.lang.String` `getMessage`(`org.mozilla.javascript.ast.ParseProblem` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.getMessage:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f550.  v0:= v1.`org.mozilla.javascript.ast.ParseProblem.b` @type ^`java.lang.String` @kind object;
  #L42f554.  return v0 @kind object;
}
procedure `java.lang.String` `getSourceName`(`org.mozilla.javascript.ast.ParseProblem` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.getSourceName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f568.  v0:= v1.`org.mozilla.javascript.ast.ParseProblem.c` @type ^`java.lang.String` @kind object;
  #L42f56c.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.ParseProblem$Type` `getType`(`org.mozilla.javascript.ast.ParseProblem` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.getType:()Lorg/mozilla/javascript/ast/ParseProblem$Type;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f61c.  v0:= v1.`org.mozilla.javascript.ast.ParseProblem.a` @type ^`org.mozilla.javascript.ast.ParseProblem$Type` @kind object;
  #L42f620.  return v0 @kind object;
}
procedure `void` `setFileOffset`(`org.mozilla.javascript.ast.ParseProblem` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.setFileOffset:(I)V` @AccessFlag PUBLIC {
    temp;

  #L42f66c.  v0.`org.mozilla.javascript.ast.ParseProblem.d` @type ^`int` := v1;
  #L42f670.  return @kind void;
}
procedure `void` `setLength`(`org.mozilla.javascript.ast.ParseProblem` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.setLength:(I)V` @AccessFlag PUBLIC {
    temp;

  #L42f684.  v0.`org.mozilla.javascript.ast.ParseProblem.e` @type ^`int` := v1;
  #L42f688.  return @kind void;
}
procedure `void` `setMessage`(`org.mozilla.javascript.ast.ParseProblem` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.setMessage:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L42f69c.  v0.`org.mozilla.javascript.ast.ParseProblem.b` @type ^`java.lang.String` := v1 @kind object;
  #L42f6a0.  return @kind void;
}
procedure `void` `setSourceName`(`org.mozilla.javascript.ast.ParseProblem` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.setSourceName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L42f6b4.  v0.`org.mozilla.javascript.ast.ParseProblem.c` @type ^`java.lang.String` := v1 @kind object;
  #L42f6b8.  return @kind void;
}
procedure `void` `setType`(`org.mozilla.javascript.ast.ParseProblem` v0 @kind this, `org.mozilla.javascript.ast.ParseProblem$Type` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.setType:(Lorg/mozilla/javascript/ast/ParseProblem$Type;)V` @AccessFlag PUBLIC {
    temp;

  #L42f6cc.  v0.`org.mozilla.javascript.ast.ParseProblem.a` @type ^`org.mozilla.javascript.ast.ParseProblem$Type` := v1 @kind object;
  #L42f6d0.  return @kind void;
}
procedure `java.lang.String` `toString`(`org.mozilla.javascript.ast.ParseProblem` v3 @kind this) @signature `Lorg/mozilla/javascript/ast/ParseProblem;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42f580.  v0:= new `java.lang.StringBuilder`;
  #L42f584.  v1:= 200I;
  #L42f588.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L42f58e.  v1:= v3.`org.mozilla.javascript.ast.ParseProblem.c` @type ^`java.lang.String` @kind object;
  #L42f592.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42f598.  v1:= ":" @kind object;
  #L42f59c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42f5a2.  v1:= "offset=" @kind object;
  #L42f5a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42f5ac.  v1:= v3.`org.mozilla.javascript.ast.ParseProblem.d` @type ^`int`;
  #L42f5b0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L42f5b6.  v1:= "," @kind object;
  #L42f5ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42f5c0.  v2:= "length=" @kind object;
  #L42f5c4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42f5ca.  v2:= v3.`org.mozilla.javascript.ast.ParseProblem.e` @type ^`int`;
  #L42f5ce.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L42f5d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42f5da.  v1:= v3.`org.mozilla.javascript.ast.ParseProblem.a` @type ^`org.mozilla.javascript.ast.ParseProblem$Type` @kind object;
  #L42f5de.  v2:= `@@org.mozilla.javascript.ast.ParseProblem$Type.Error` @type ^`org.mozilla.javascript.ast.ParseProblem$Type` @kind object;
  #L42f5e2.  if v1 != v2 then goto L42f5ec;
  #L42f5e6.  v1:= "error: " @kind object;
  #L42f5ea.  goto L42f5f0;
  #L42f5ec.  v1:= "warning: " @kind object;
  #L42f5f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42f5f6.  v1:= v3.`org.mozilla.javascript.ast.ParseProblem.b` @type ^`java.lang.String` @kind object;
  #L42f5fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42f600.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42f606.  v0:= temp @kind object;
  #L42f608.  return v0 @kind object;
}
