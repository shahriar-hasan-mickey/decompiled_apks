record `org.mozilla.javascript.ast.PropertyGet` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.InfixExpression` @kind class {
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.PropertyGet` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42f78c.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.<init>:()V` @kind direct;
  #L42f792.  v0:= 33I;
  #L42f796.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42f79a.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.PropertyGet` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42f7ac.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.<init>:(I)V` @kind direct;
  #L42f7b2.  v1:= 33I;
  #L42f7b6.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42f7ba.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.PropertyGet` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42f7cc.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.<init>:(II)V` @kind direct;
  #L42f7d2.  v1:= 33I;
  #L42f7d6.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42f7da.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.PropertyGet` v0 @kind this, `int` v1 , `int` v2 , `org.mozilla.javascript.ast.AstNode` v3 @kind object, `org.mozilla.javascript.ast.Name` v4 @kind object) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.<init>:(IILorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/Name;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42f7ec.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.<init>:(IILorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;)V` @kind direct;
  #L42f7f2.  v1:= 33I;
  #L42f7f6.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42f7fa.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.PropertyGet` v0 @kind this, `org.mozilla.javascript.ast.AstNode` v1 @kind object, `org.mozilla.javascript.ast.Name` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.<init>:(Lorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/Name;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42f80c.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.<init>:(Lorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;)V` @kind direct;
  #L42f812.  v1:= 33I;
  #L42f816.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42f81a.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.PropertyGet` v1 @kind this, `org.mozilla.javascript.ast.AstNode` v2 @kind object, `org.mozilla.javascript.ast.Name` v3 @kind object, `int` v4 ) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.<init>:(Lorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/Name;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42f82c.  v0:= 33I;
  #L42f830.  call `<init>`(v1, v0, v2, v3, v4) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.<init>:(ILorg/mozilla/javascript/ast/AstNode;Lorg/mozilla/javascript/ast/AstNode;I)V` @kind direct;
  #L42f836.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42f83a.  return @kind void;
}
procedure `org.mozilla.javascript.ast.Name` `getProperty`(`org.mozilla.javascript.ast.PropertyGet` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.getProperty:()Lorg/mozilla/javascript/ast/Name;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f76c.  call temp:= `getRight`(v1) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.getRight:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L42f772.  v0:= temp @kind object;
  #L42f774.  v0:= (`org.mozilla.javascript.ast.Name`) v0 @kind object;
  #L42f778.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `getTarget`(`org.mozilla.javascript.ast.PropertyGet` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.getTarget:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f750.  call temp:= `getLeft`(v1) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.getLeft:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L42f756.  v0:= temp @kind object;
  #L42f758.  return v0 @kind object;
}
procedure `void` `setProperty`(`org.mozilla.javascript.ast.PropertyGet` v0 @kind this, `org.mozilla.javascript.ast.Name` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.setProperty:(Lorg/mozilla/javascript/ast/Name;)V` @AccessFlag PUBLIC {
    temp;

  #L42f84c.  call `setRight`(v0, v1) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.setRight:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42f852.  return @kind void;
}
procedure `void` `setTarget`(`org.mozilla.javascript.ast.PropertyGet` v0 @kind this, `org.mozilla.javascript.ast.AstNode` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.setTarget:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;

  #L42f864.  call `setLeft`(v0, v1) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.setLeft:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42f86a.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.PropertyGet` v2 @kind this, `int` v3 ) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42f6e4.  v0:= new `java.lang.StringBuilder`;
  #L42f6e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42f6ee.  call temp:= `makeIndent`(v2, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L42f6f4.  v3:= temp @kind object;
  #L42f6f6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42f6fc.  call temp:= `getLeft`(v2) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.getLeft:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L42f702.  v3:= temp @kind object;
  #L42f704.  v1:= 0I;
  #L42f706.  call temp:= `toSource`(v3, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42f70c.  v3:= temp @kind object;
  #L42f70e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42f714.  v3:= "." @kind object;
  #L42f718.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42f71e.  call temp:= `getRight`(v2) @signature `Lorg/mozilla/javascript/ast/InfixExpression;.getRight:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L42f724.  v3:= temp @kind object;
  #L42f726.  call temp:= `toSource`(v3, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42f72c.  v3:= temp @kind object;
  #L42f72e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42f734.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42f73a.  v3:= temp @kind object;
  #L42f73c.  return v3 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.PropertyGet` v1 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42f87c.  call temp:= `visit`(v2, v1) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L42f882.  v0:= temp;
  #L42f884.  if v0 == 0 then goto L42f8a4;
  #L42f888.  call temp:= `getTarget`(v1) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.getTarget:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L42f88e.  v0:= temp @kind object;
  #L42f890.  call `visit`(v0, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42f896.  call temp:= `getProperty`(v1) @signature `Lorg/mozilla/javascript/ast/PropertyGet;.getProperty:()Lorg/mozilla/javascript/ast/Name;` @kind virtual;
  #L42f89c.  v0:= temp @kind object;
  #L42f89e.  call `visit`(v0, v2) @signature `Lorg/mozilla/javascript/ast/Name;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42f8a4.  return @kind void;
}
