record `org.mozilla.javascript.ast.Name` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.AstNode` @kind class {
  `java.lang.String` `org.mozilla.javascript.ast.Name.c` @AccessFlag PRIVATE;
  `org.mozilla.javascript.ast.Scope` `org.mozilla.javascript.ast.Name.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Name` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Name;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42eaac.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L42eab2.  v0:= 39I;
  #L42eab6.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42eaba.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Name` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/Name;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42eacc.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(I)V` @kind direct;
  #L42ead2.  v1:= 39I;
  #L42ead6.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42eada.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Name` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/Name;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42eaec.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L42eaf2.  v1:= 39I;
  #L42eaf6.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42eafa.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Name` v0 @kind this, `int` v1 , `int` v2 , `java.lang.String` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/Name;.<init>:(IILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42eb0c.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L42eb12.  v1:= 39I;
  #L42eb16.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42eb1a.  call `setIdentifier`(v0, v3) @signature `Lorg/mozilla/javascript/ast/Name;.setIdentifier:(Ljava/lang/String;)V` @kind virtual;
  #L42eb20.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Name` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/Name;.<init>:(ILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42eb34.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(I)V` @kind direct;
  #L42eb3a.  v1:= 39I;
  #L42eb3e.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42eb42.  call `setIdentifier`(v0, v2) @signature `Lorg/mozilla/javascript/ast/Name;.setIdentifier:(Ljava/lang/String;)V` @kind virtual;
  #L42eb48.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L42eb4e.  v1:= temp;
  #L42eb50.  call `setLength`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L42eb56.  return @kind void;
}
procedure `org.mozilla.javascript.ast.Scope` `getDefiningScope`(`org.mozilla.javascript.ast.Name` v2 @kind this) @signature `Lorg/mozilla/javascript/ast/Name;.getDefiningScope:()Lorg/mozilla/javascript/ast/Scope;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42ea60.  call temp:= `getEnclosingScope`(v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.getEnclosingScope:()Lorg/mozilla/javascript/ast/Scope;` @kind virtual;
  #L42ea66.  v0:= temp @kind object;
  #L42ea68.  call temp:= `getIdentifier`(v2) @signature `Lorg/mozilla/javascript/ast/Name;.getIdentifier:()Ljava/lang/String;` @kind virtual;
  #L42ea6e.  v1:= temp @kind object;
  #L42ea70.  if v0 != 0 then goto L42ea78;
  #L42ea74.  v0:= 0I;
  #L42ea76.  goto L42ea80;
  #L42ea78.  call temp:= `getDefiningScope`(v0, v1) @signature `Lorg/mozilla/javascript/ast/Scope;.getDefiningScope:(Ljava/lang/String;)Lorg/mozilla/javascript/ast/Scope;` @kind virtual;
  #L42ea7e.  v0:= temp @kind object;
  #L42ea80.  return v0 @kind object;
}
procedure `java.lang.String` `getIdentifier`(`org.mozilla.javascript.ast.Name` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Name;.getIdentifier:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ea04.  v0:= v1.`org.mozilla.javascript.ast.Name.c` @type ^`java.lang.String` @kind object;
  #L42ea08.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.Scope` `getScope`(`org.mozilla.javascript.ast.Name` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Name;.getScope:()Lorg/mozilla/javascript/ast/Scope;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ea94.  v0:= v1.`org.mozilla.javascript.ast.Name.d` @type ^`org.mozilla.javascript.ast.Scope` @kind object;
  #L42ea98.  return v0 @kind object;
}
procedure `boolean` `isLocalName`(`org.mozilla.javascript.ast.Name` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Name;.isLocalName:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e9ac.  call temp:= `getDefiningScope`(v1) @signature `Lorg/mozilla/javascript/ast/Name;.getDefiningScope:()Lorg/mozilla/javascript/ast/Scope;` @kind virtual;
  #L42e9b2.  v0:= temp @kind object;
  #L42e9b4.  if v0 == 0 then goto L42e9c8;
  #L42e9b8.  call temp:= `getParentScope`(v0) @signature `Lorg/mozilla/javascript/ast/Scope;.getParentScope:()Lorg/mozilla/javascript/ast/Scope;` @kind virtual;
  #L42e9be.  v0:= temp @kind object;
  #L42e9c0.  if v0 == 0 then goto L42e9c8;
  #L42e9c4.  v0:= 1I;
  #L42e9c6.  goto L42e9ca;
  #L42e9c8.  v0:= 0I;
  #L42e9ca.  return v0;
}
procedure `int` `length`(`org.mozilla.javascript.ast.Name` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Name;.length:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e9dc.  v0:= v1.`org.mozilla.javascript.ast.Name.c` @type ^`java.lang.String` @kind object;
  #L42e9e0.  if v0 != 0 then goto L42e9e8;
  #L42e9e4.  v0:= 0I;
  #L42e9e6.  goto L42e9f0;
  #L42e9e8.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L42e9ee.  v0:= temp;
  #L42e9f0.  return v0;
}
procedure `void` `setIdentifier`(`org.mozilla.javascript.ast.Name` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/Name;.setIdentifier:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L42eb68.  call `assertNotNull`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L42eb6e.  v0.`org.mozilla.javascript.ast.Name.c` @type ^`java.lang.String` := v1 @kind object;
  #L42eb72.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L42eb78.  v1:= temp;
  #L42eb7a.  call `setLength`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L42eb80.  return @kind void;
}
procedure `void` `setScope`(`org.mozilla.javascript.ast.Name` v0 @kind this, `org.mozilla.javascript.ast.Scope` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/Name;.setScope:(Lorg/mozilla/javascript/ast/Scope;)V` @AccessFlag PUBLIC {
    temp;

  #L42eb94.  v0.`org.mozilla.javascript.ast.Name.d` @type ^`org.mozilla.javascript.ast.Scope` := v1 @kind object;
  #L42eb98.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.Name` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/ast/Name;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ea1c.  v0:= new `java.lang.StringBuilder`;
  #L42ea20.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42ea26.  call temp:= `makeIndent`(v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L42ea2c.  v2:= temp @kind object;
  #L42ea2e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42ea34.  v2:= v1.`org.mozilla.javascript.ast.Name.c` @type ^`java.lang.String` @kind object;
  #L42ea38.  if v2 != 0 then goto L42ea40;
  #L42ea3c.  v2:= "<null>" @kind object;
  #L42ea40.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42ea46.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42ea4c.  v2:= temp @kind object;
  #L42ea4e.  return v2 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.Name` v0 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/Name;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;

  #L42ebac.  call temp:= `visit`(v1, v0) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L42ebb2.  return @kind void;
}
