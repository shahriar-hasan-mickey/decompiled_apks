record `org.mozilla.javascript.ast.NumberLiteral` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.AstNode` @kind class {
  `java.lang.String` `org.mozilla.javascript.ast.NumberLiteral.c` @AccessFlag PRIVATE;
  `double` `org.mozilla.javascript.ast.NumberLiteral.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.NumberLiteral` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/NumberLiteral;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42edd0.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L42edd6.  v0:= 40I;
  #L42edda.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42edde.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.NumberLiteral` v1 @kind this, `double` v2 ) @signature `Lorg/mozilla/javascript/ast/NumberLiteral;.<init>:(D)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42edf0.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L42edf6.  v0:= 40I;
  #L42edfa.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42edfe.  call `setDouble`(v1, v2) @signature `Lorg/mozilla/javascript/Node;.setDouble:(D)V` @kind virtual;
  #L42ee04.  call temp:= `toString`(v2) @signature `Ljava/lang/Double;.toString:(D)Ljava/lang/String;` @kind static;
  #L42ee0a.  v2:= temp @kind object;
  #L42ee0c.  call `setValue`(v1, v2) @signature `Lorg/mozilla/javascript/ast/NumberLiteral;.setValue:(Ljava/lang/String;)V` @kind virtual;
  #L42ee12.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.NumberLiteral` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/NumberLiteral;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42ee24.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(I)V` @kind direct;
  #L42ee2a.  v1:= 40I;
  #L42ee2e.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42ee32.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.NumberLiteral` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/NumberLiteral;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42ee44.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L42ee4a.  v1:= 40I;
  #L42ee4e.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42ee52.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.NumberLiteral` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/NumberLiteral;.<init>:(ILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42ee64.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(I)V` @kind direct;
  #L42ee6a.  v1:= 40I;
  #L42ee6e.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42ee72.  call `setValue`(v0, v2) @signature `Lorg/mozilla/javascript/ast/NumberLiteral;.setValue:(Ljava/lang/String;)V` @kind virtual;
  #L42ee78.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L42ee7e.  v1:= temp;
  #L42ee80.  call `setLength`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L42ee86.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.NumberLiteral` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `double` v3 ) @signature `Lorg/mozilla/javascript/ast/NumberLiteral;.<init>:(ILjava/lang/String;D)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42ee98.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/NumberLiteral;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L42ee9e.  call `setDouble`(v0, v3) @signature `Lorg/mozilla/javascript/Node;.setDouble:(D)V` @kind virtual;
  #L42eea4.  return @kind void;
}
procedure `double` `getNumber`(`org.mozilla.javascript.ast.NumberLiteral` v2 @kind this) @signature `Lorg/mozilla/javascript/ast/NumberLiteral;.getNumber:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42ed5c.  v0:= v2.`org.mozilla.javascript.ast.NumberLiteral.d` @type ^`double` @kind wide;
  #L42ed60.  return v0 @kind wide;
}
procedure `java.lang.String` `getValue`(`org.mozilla.javascript.ast.NumberLiteral` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/NumberLiteral;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ed74.  v0:= v1.`org.mozilla.javascript.ast.NumberLiteral.c` @type ^`java.lang.String` @kind object;
  #L42ed78.  return v0 @kind object;
}
procedure `void` `setNumber`(`org.mozilla.javascript.ast.NumberLiteral` v0 @kind this, `double` v1 ) @signature `Lorg/mozilla/javascript/ast/NumberLiteral;.setNumber:(D)V` @AccessFlag PUBLIC {
    temp;

  #L42eeb8.  v0.`org.mozilla.javascript.ast.NumberLiteral.d` @type ^`double` := v1 @kind wide;
  #L42eebc.  return @kind void;
}
procedure `void` `setValue`(`org.mozilla.javascript.ast.NumberLiteral` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/NumberLiteral;.setValue:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L42eed0.  call `assertNotNull`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L42eed6.  v0.`org.mozilla.javascript.ast.NumberLiteral.c` @type ^`java.lang.String` := v1 @kind object;
  #L42eeda.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.NumberLiteral` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/ast/NumberLiteral;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ed8c.  v0:= new `java.lang.StringBuilder`;
  #L42ed90.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42ed96.  call temp:= `makeIndent`(v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L42ed9c.  v2:= temp @kind object;
  #L42ed9e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42eda4.  v2:= v1.`org.mozilla.javascript.ast.NumberLiteral.c` @type ^`java.lang.String` @kind object;
  #L42eda8.  if v2 != 0 then goto L42edb0;
  #L42edac.  v2:= "<null>" @kind object;
  #L42edb0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42edb6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42edbc.  v2:= temp @kind object;
  #L42edbe.  return v2 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.NumberLiteral` v0 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/NumberLiteral;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;

  #L42eeec.  call temp:= `visit`(v1, v0) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L42eef2.  return @kind void;
}
