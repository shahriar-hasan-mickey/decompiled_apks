record `org.mozilla.javascript.ast.Block` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.AstNode` @kind class {
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Block` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Block;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42aee0.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L42aee6.  v0:= 129I;
  #L42aeea.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42aeee.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Block` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/Block;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42af00.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(I)V` @kind direct;
  #L42af06.  v1:= 129I;
  #L42af0a.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42af0e.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Block` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/Block;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42af20.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L42af26.  v1:= 129I;
  #L42af2a.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42af2e.  return @kind void;
}
procedure `void` `addStatement`(`org.mozilla.javascript.ast.Block` v0 @kind this, `org.mozilla.javascript.ast.AstNode` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/Block;.addStatement:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;

  #L42af40.  call `addChild`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.addChild:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42af46.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.Block` v4 @kind this, `int` v5 ) @signature `Lorg/mozilla/javascript/ast/Block;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L42ae54.  v0:= new `java.lang.StringBuilder`;
  #L42ae58.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42ae5e.  call temp:= `makeIndent`(v4, v5) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L42ae64.  v1:= temp @kind object;
  #L42ae66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42ae6c.  v1:= "{\n" @kind object;
  #L42ae70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42ae76.  call temp:= `iterator`(v4) @signature `Lorg/mozilla/javascript/Node;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L42ae7c.  v1:= temp @kind object;
  #L42ae7e.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42ae84.  v2:= temp;
  #L42ae86.  if v2 == 0 then goto L42aeae;
  #L42ae8a.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42ae90.  v2:= temp @kind object;
  #L42ae92.  v2:= (`org.mozilla.javascript.Node`) v2 @kind object;
  #L42ae96.  v2:= (`org.mozilla.javascript.ast.AstNode`) v2 @kind object;
  #L42ae9a.  v3:= v5 + 1;
  #L42ae9e.  call temp:= `toSource`(v2, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42aea4.  v2:= temp @kind object;
  #L42aea6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42aeac.  goto L42ae7e;
  #L42aeae.  call temp:= `makeIndent`(v4, v5) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L42aeb4.  v5:= temp @kind object;
  #L42aeb6.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42aebc.  v5:= "}\n" @kind object;
  #L42aec0.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42aec6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42aecc.  v5:= temp @kind object;
  #L42aece.  return v5 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.Block` v2 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/Block;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42af58.  call temp:= `visit`(v3, v2) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L42af5e.  v0:= temp;
  #L42af60.  if v0 == 0 then goto L42af90;
  #L42af64.  call temp:= `iterator`(v2) @signature `Lorg/mozilla/javascript/Node;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L42af6a.  v0:= temp @kind object;
  #L42af6c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42af72.  v1:= temp;
  #L42af74.  if v1 == 0 then goto L42af90;
  #L42af78.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42af7e.  v1:= temp @kind object;
  #L42af80.  v1:= (`org.mozilla.javascript.Node`) v1 @kind object;
  #L42af84.  v1:= (`org.mozilla.javascript.ast.AstNode`) v1 @kind object;
  #L42af88.  call `visit`(v1, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42af8e.  goto L42af6c;
  #L42af90.  return @kind void;
}
