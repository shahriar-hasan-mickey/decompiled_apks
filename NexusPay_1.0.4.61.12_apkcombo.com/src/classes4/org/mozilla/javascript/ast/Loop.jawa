record `org.mozilla.javascript.ast.Loop` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.mozilla.javascript.ast.Scope` @kind class {
  `org.mozilla.javascript.ast.AstNode` `org.mozilla.javascript.ast.Loop.body` @AccessFlag PROTECTED;
  `int` `org.mozilla.javascript.ast.Loop.lp` @AccessFlag PROTECTED;
  `int` `org.mozilla.javascript.ast.Loop.rp` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Loop` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Loop;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42e8b4.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/Scope;.<init>:()V` @kind direct;
  #L42e8ba.  v0:= -1I;
  #L42e8bc.  v1.`org.mozilla.javascript.ast.Loop.lp` @type ^`int` := v0;
  #L42e8c0.  v1.`org.mozilla.javascript.ast.Loop.rp` @type ^`int` := v0;
  #L42e8c4.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Loop` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/Loop;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42e8d8.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/Scope;.<init>:(I)V` @kind direct;
  #L42e8de.  v1:= -1I;
  #L42e8e0.  v0.`org.mozilla.javascript.ast.Loop.lp` @type ^`int` := v1;
  #L42e8e4.  v0.`org.mozilla.javascript.ast.Loop.rp` @type ^`int` := v1;
  #L42e8e8.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.Loop` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/Loop;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42e8fc.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/Scope;.<init>:(II)V` @kind direct;
  #L42e902.  v1:= -1I;
  #L42e904.  v0.`org.mozilla.javascript.ast.Loop.lp` @type ^`int` := v1;
  #L42e908.  v0.`org.mozilla.javascript.ast.Loop.rp` @type ^`int` := v1;
  #L42e90c.  return @kind void;
}
procedure `org.mozilla.javascript.ast.AstNode` `getBody`(`org.mozilla.javascript.ast.Loop` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Loop;.getBody:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e89c.  v0:= v1.`org.mozilla.javascript.ast.Loop.body` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42e8a0.  return v0 @kind object;
}
procedure `int` `getLp`(`org.mozilla.javascript.ast.Loop` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Loop;.getLp:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e86c.  v0:= v1.`org.mozilla.javascript.ast.Loop.lp` @type ^`int`;
  #L42e870.  return v0;
}
procedure `int` `getRp`(`org.mozilla.javascript.ast.Loop` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/Loop;.getRp:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e884.  v0:= v1.`org.mozilla.javascript.ast.Loop.rp` @type ^`int`;
  #L42e888.  return v0;
}
procedure `void` `setBody`(`org.mozilla.javascript.ast.Loop` v2 @kind this, `org.mozilla.javascript.ast.AstNode` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/Loop;.setBody:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42e920.  v2.`org.mozilla.javascript.ast.Loop.body` @type ^`org.mozilla.javascript.ast.AstNode` := v3 @kind object;
  #L42e924.  call temp:= `getPosition`(v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L42e92a.  v0:= temp;
  #L42e92c.  call temp:= `getLength`(v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.getLength:()I` @kind virtual;
  #L42e932.  v1:= temp;
  #L42e934.  v0:= v0 + v1 @kind int;
  #L42e936.  call temp:= `getPosition`(v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L42e93c.  v1:= temp;
  #L42e93e.  v0:= v0 - v1 @kind int;
  #L42e940.  call `setLength`(v2, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L42e946.  call `setParent`(v3, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42e94c.  return @kind void;
}
procedure `void` `setLp`(`org.mozilla.javascript.ast.Loop` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/Loop;.setLp:(I)V` @AccessFlag PUBLIC {
    temp;

  #L42e960.  v0.`org.mozilla.javascript.ast.Loop.lp` @type ^`int` := v1;
  #L42e964.  return @kind void;
}
procedure `void` `setParens`(`org.mozilla.javascript.ast.Loop` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/Loop;.setParens:(II)V` @AccessFlag PUBLIC {
    temp;

  #L42e978.  v0.`org.mozilla.javascript.ast.Loop.lp` @type ^`int` := v1;
  #L42e97c.  v0.`org.mozilla.javascript.ast.Loop.rp` @type ^`int` := v2;
  #L42e980.  return @kind void;
}
procedure `void` `setRp`(`org.mozilla.javascript.ast.Loop` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/Loop;.setRp:(I)V` @AccessFlag PUBLIC {
    temp;

  #L42e994.  v0.`org.mozilla.javascript.ast.Loop.rp` @type ^`int` := v1;
  #L42e998.  return @kind void;
}
