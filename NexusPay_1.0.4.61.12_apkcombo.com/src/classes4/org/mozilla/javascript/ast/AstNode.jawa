record `org.mozilla.javascript.ast.AstNode` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.mozilla.javascript.Node` @kind class, `java.lang.Comparable` @kind interface {
  `int` `org.mozilla.javascript.ast.AstNode.length` @AccessFlag PROTECTED;
  `org.mozilla.javascript.ast.AstNode` `org.mozilla.javascript.ast.AstNode.parent` @AccessFlag PROTECTED;
  `int` `org.mozilla.javascript.ast.AstNode.position` @AccessFlag PROTECTED;
}
global `java.util.Map` `@@org.mozilla.javascript.ast.AstNode.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/mozilla/javascript/ast/AstNode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L42a4c4.  v0:= new `java.util.HashMap`;
  #L42a4c8.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L42a4ce.  `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` := v0 @kind object;
  #L42a4d2.  v1:= 52I;
  #L42a4d6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a4dc.  v1:= temp @kind object;
  #L42a4de.  v2:= "in" @kind object;
  #L42a4e2.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a4e8.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a4ec.  v1:= 32I;
  #L42a4f0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a4f6.  v1:= temp @kind object;
  #L42a4f8.  v2:= "typeof" @kind object;
  #L42a4fc.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a502.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a506.  v1:= 53I;
  #L42a50a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a510.  v1:= temp @kind object;
  #L42a512.  v2:= "instanceof" @kind object;
  #L42a516.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a51c.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a520.  v1:= 31I;
  #L42a524.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a52a.  v1:= temp @kind object;
  #L42a52c.  v2:= "delete" @kind object;
  #L42a530.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a536.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a53a.  v1:= 89I;
  #L42a53e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a544.  v1:= temp @kind object;
  #L42a546.  v2:= "," @kind object;
  #L42a54a.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a550.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a554.  v1:= 103I;
  #L42a558.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a55e.  v1:= temp @kind object;
  #L42a560.  v2:= ":" @kind object;
  #L42a564.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a56a.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a56e.  v1:= 104I;
  #L42a572.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a578.  v1:= temp @kind object;
  #L42a57a.  v2:= "||" @kind object;
  #L42a57e.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a584.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a588.  v1:= 105I;
  #L42a58c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a592.  v1:= temp @kind object;
  #L42a594.  v2:= "&&" @kind object;
  #L42a598.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a59e.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a5a2.  v1:= 106I;
  #L42a5a6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a5ac.  v1:= temp @kind object;
  #L42a5ae.  v2:= "++" @kind object;
  #L42a5b2.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a5b8.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a5bc.  v1:= 107I;
  #L42a5c0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a5c6.  v1:= temp @kind object;
  #L42a5c8.  v2:= "--" @kind object;
  #L42a5cc.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a5d2.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a5d6.  v1:= 9I;
  #L42a5da.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a5e0.  v1:= temp @kind object;
  #L42a5e2.  v2:= "|" @kind object;
  #L42a5e6.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a5ec.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a5f0.  v1:= 10I;
  #L42a5f4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a5fa.  v1:= temp @kind object;
  #L42a5fc.  v2:= "^" @kind object;
  #L42a600.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a606.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a60a.  v1:= 11I;
  #L42a60e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a614.  v1:= temp @kind object;
  #L42a616.  v2:= "&" @kind object;
  #L42a61a.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a620.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a624.  v1:= 12I;
  #L42a628.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a62e.  v1:= temp @kind object;
  #L42a630.  v2:= "==" @kind object;
  #L42a634.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a63a.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a63e.  v1:= 13I;
  #L42a642.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a648.  v1:= temp @kind object;
  #L42a64a.  v2:= "!=" @kind object;
  #L42a64e.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a654.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a658.  v1:= 14I;
  #L42a65c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a662.  v1:= temp @kind object;
  #L42a664.  v2:= "<" @kind object;
  #L42a668.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a66e.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a672.  v1:= 16I;
  #L42a676.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a67c.  v1:= temp @kind object;
  #L42a67e.  v2:= ">" @kind object;
  #L42a682.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a688.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a68c.  v1:= 15I;
  #L42a690.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a696.  v1:= temp @kind object;
  #L42a698.  v2:= "<=" @kind object;
  #L42a69c.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a6a2.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a6a6.  v1:= 17I;
  #L42a6aa.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a6b0.  v1:= temp @kind object;
  #L42a6b2.  v2:= ">=" @kind object;
  #L42a6b6.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a6bc.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a6c0.  v1:= 18I;
  #L42a6c4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a6ca.  v1:= temp @kind object;
  #L42a6cc.  v2:= "<<" @kind object;
  #L42a6d0.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a6d6.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a6da.  v1:= 19I;
  #L42a6de.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a6e4.  v1:= temp @kind object;
  #L42a6e6.  v2:= ">>" @kind object;
  #L42a6ea.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a6f0.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a6f4.  v1:= 20I;
  #L42a6f8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a6fe.  v1:= temp @kind object;
  #L42a700.  v2:= ">>>" @kind object;
  #L42a704.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a70a.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a70e.  v1:= 21I;
  #L42a712.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a718.  v1:= temp @kind object;
  #L42a71a.  v2:= "+" @kind object;
  #L42a71e.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a724.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a728.  v1:= 22I;
  #L42a72c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a732.  v1:= temp @kind object;
  #L42a734.  v3:= "-" @kind object;
  #L42a738.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a73e.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a742.  v1:= 23I;
  #L42a746.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a74c.  v1:= temp @kind object;
  #L42a74e.  v4:= "*" @kind object;
  #L42a752.  call temp:= `put`(v0, v1, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a758.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a75c.  v1:= 24I;
  #L42a760.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a766.  v1:= temp @kind object;
  #L42a768.  v4:= "/" @kind object;
  #L42a76c.  call temp:= `put`(v0, v1, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a772.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a776.  v1:= 25I;
  #L42a77a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a780.  v1:= temp @kind object;
  #L42a782.  v4:= "%" @kind object;
  #L42a786.  call temp:= `put`(v0, v1, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a78c.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a790.  v1:= 26I;
  #L42a794.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a79a.  v1:= temp @kind object;
  #L42a79c.  v4:= "!" @kind object;
  #L42a7a0.  call temp:= `put`(v0, v1, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a7a6.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a7aa.  v1:= 27I;
  #L42a7ae.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a7b4.  v1:= temp @kind object;
  #L42a7b6.  v4:= "~" @kind object;
  #L42a7ba.  call temp:= `put`(v0, v1, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a7c0.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a7c4.  v1:= 28I;
  #L42a7c8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a7ce.  v1:= temp @kind object;
  #L42a7d0.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a7d6.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a7da.  v1:= 29I;
  #L42a7de.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a7e4.  v1:= temp @kind object;
  #L42a7e6.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a7ec.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a7f0.  v1:= 46I;
  #L42a7f4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a7fa.  v1:= temp @kind object;
  #L42a7fc.  v2:= "===" @kind object;
  #L42a800.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a806.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a80a.  v1:= 47I;
  #L42a80e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a814.  v1:= temp @kind object;
  #L42a816.  v2:= "!==" @kind object;
  #L42a81a.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a820.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a824.  v1:= 90I;
  #L42a828.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a82e.  v1:= temp @kind object;
  #L42a830.  v2:= "=" @kind object;
  #L42a834.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a83a.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a83e.  v1:= 91I;
  #L42a842.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a848.  v1:= temp @kind object;
  #L42a84a.  v2:= "|=" @kind object;
  #L42a84e.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a854.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a858.  v1:= 93I;
  #L42a85c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a862.  v1:= temp @kind object;
  #L42a864.  v2:= "&=" @kind object;
  #L42a868.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a86e.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a872.  v1:= 94I;
  #L42a876.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a87c.  v1:= temp @kind object;
  #L42a87e.  v2:= "<<=" @kind object;
  #L42a882.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a888.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a88c.  v1:= 95I;
  #L42a890.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a896.  v1:= temp @kind object;
  #L42a898.  v2:= ">>=" @kind object;
  #L42a89c.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a8a2.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a8a6.  v1:= 96I;
  #L42a8aa.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a8b0.  v1:= temp @kind object;
  #L42a8b2.  v2:= ">>>=" @kind object;
  #L42a8b6.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a8bc.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a8c0.  v1:= 97I;
  #L42a8c4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a8ca.  v1:= temp @kind object;
  #L42a8cc.  v2:= "+=" @kind object;
  #L42a8d0.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a8d6.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a8da.  v1:= 98I;
  #L42a8de.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a8e4.  v1:= temp @kind object;
  #L42a8e6.  v2:= "-=" @kind object;
  #L42a8ea.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a8f0.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a8f4.  v1:= 99I;
  #L42a8f8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a8fe.  v1:= temp @kind object;
  #L42a900.  v2:= "*=" @kind object;
  #L42a904.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a90a.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a90e.  v1:= 100I;
  #L42a912.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a918.  v1:= temp @kind object;
  #L42a91a.  v2:= "/=" @kind object;
  #L42a91e.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a924.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a928.  v1:= 101I;
  #L42a92c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a932.  v1:= temp @kind object;
  #L42a934.  v2:= "%=" @kind object;
  #L42a938.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a93e.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a942.  v1:= 92I;
  #L42a946.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a94c.  v1:= temp @kind object;
  #L42a94e.  v2:= "^=" @kind object;
  #L42a952.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a958.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a95c.  v1:= 126I;
  #L42a960.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a966.  v1:= temp @kind object;
  #L42a968.  v2:= "void" @kind object;
  #L42a96c.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a972.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.AstNode` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42a984.  v0:= -1I;
  #L42a986.  call `<init>`(v1, v0) @signature `Lorg/mozilla/javascript/Node;.<init>:(I)V` @kind direct;
  #L42a98c.  v1.`org.mozilla.javascript.ast.AstNode.position` @type ^`int` := v0;
  #L42a990.  v0:= 1I;
  #L42a992.  v1.`org.mozilla.javascript.ast.AstNode.length` @type ^`int` := v0;
  #L42a996.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.AstNode` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42a9a8.  call `<init>`(v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L42a9ae.  v0.`org.mozilla.javascript.ast.AstNode.position` @type ^`int` := v1;
  #L42a9b2.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.AstNode` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42a9c4.  call `<init>`(v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L42a9ca.  v0.`org.mozilla.javascript.ast.AstNode.position` @type ^`int` := v1;
  #L42a9ce.  v0.`org.mozilla.javascript.ast.AstNode.length` @type ^`int` := v2;
  #L42a9d2.  return @kind void;
}
procedure `java.lang.RuntimeException` `codeBug`() @signature `Lorg/mozilla/javascript/ast/AstNode;.codeBug:()Ljava/lang/RuntimeException;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L42a2d0.  call temp:= `codeBug`() @signature `Lorg/mozilla/javascript/Kit;.codeBug:()Ljava/lang/RuntimeException;` @kind static;
  #L42a2d6.  v0:= temp @kind object;
  #L42a2d8.  throw v0;
}
procedure `java.lang.String` `operatorToString`(`int` v3 ) @signature `Lorg/mozilla/javascript/ast/AstNode;.operatorToString:(I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L42a360.  v0:= `@@org.mozilla.javascript.ast.AstNode.b` @type ^`java.util.Map` @kind object;
  #L42a364.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42a36a.  v1:= temp @kind object;
  #L42a36c.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L42a372.  v0:= temp @kind object;
  #L42a374.  v0:= (`java.lang.String`) v0 @kind object;
  #L42a378.  if v0 == 0 then goto L42a37e;
  #L42a37c.  return v0 @kind object;
  #L42a37e.  v0:= new `java.lang.IllegalArgumentException`;
  #L42a382.  v1:= new `java.lang.StringBuilder`;
  #L42a386.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42a38c.  v2:= "Invalid operator: " @kind object;
  #L42a390.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42a396.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L42a39c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42a3a2.  v3:= temp @kind object;
  #L42a3a4.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42a3aa.  throw v0;
}
procedure `void` `addChild`(`org.mozilla.javascript.ast.AstNode` v2 @kind this, `org.mozilla.javascript.ast.AstNode` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/AstNode;.addChild:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42a9e4.  call `assertNotNull`(v2, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L42a9ea.  call temp:= `getPosition`(v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L42a9f0.  v0:= temp;
  #L42a9f2.  call temp:= `getLength`(v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.getLength:()I` @kind virtual;
  #L42a9f8.  v1:= temp;
  #L42a9fa.  v0:= v0 + v1 @kind int;
  #L42a9fc.  call temp:= `getPosition`(v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L42aa02.  v1:= temp;
  #L42aa04.  v0:= v0 - v1 @kind int;
  #L42aa06.  call `setLength`(v2, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L42aa0c.  call `addChildToBack`(v2, v3) @signature `Lorg/mozilla/javascript/Node;.addChildToBack:(Lorg/mozilla/javascript/Node;)V` @kind virtual;
  #L42aa12.  call `setParent`(v3, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42aa18.  return @kind void;
}
procedure `void` `assertNotNull`(`org.mozilla.javascript.ast.AstNode` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L42aa2c.  if v2 == 0 then goto L42aa32;
  #L42aa30.  return @kind void;
  #L42aa32.  v2:= new `java.lang.IllegalArgumentException`;
  #L42aa36.  v0:= "arg cannot be null" @kind object;
  #L42aa3a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42aa40.  throw v2;
}
procedure `int` `compareTo`(`org.mozilla.javascript.ast.AstNode` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/AstNode;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L42a180.  v1:= (`org.mozilla.javascript.ast.AstNode`) v1 @kind object;
  #L42a184.  call temp:= `compareTo`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.compareTo:(Lorg/mozilla/javascript/ast/AstNode;)I` @kind virtual;
  #L42a18a.  v1:= temp;
  #L42a18c.  return v1;
}
procedure `int` `compareTo`(`org.mozilla.javascript.ast.AstNode` v4 @kind this, `org.mozilla.javascript.ast.AstNode` v5 @kind object) @signature `Lorg/mozilla/javascript/ast/AstNode;.compareTo:(Lorg/mozilla/javascript/ast/AstNode;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L42a1a0.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L42a1a6.  v0:= temp;
  #L42a1a8.  if v0 == 0 then goto L42a1b0;
  #L42a1ac.  v5:= 0I;
  #L42a1ae.  return v5;
  #L42a1b0.  call temp:= `getAbsolutePosition`(v4) @signature `Lorg/mozilla/javascript/ast/AstNode;.getAbsolutePosition:()I` @kind virtual;
  #L42a1b6.  v0:= temp;
  #L42a1b8.  call temp:= `getAbsolutePosition`(v5) @signature `Lorg/mozilla/javascript/ast/AstNode;.getAbsolutePosition:()I` @kind virtual;
  #L42a1be.  v1:= temp;
  #L42a1c0.  v2:= -1I;
  #L42a1c2.  if v0 >= v1 then goto L42a1c8;
  #L42a1c6.  return v2;
  #L42a1c8.  v3:= 1I;
  #L42a1ca.  if v1 >= v0 then goto L42a1d0;
  #L42a1ce.  return v3;
  #L42a1d0.  call temp:= `getLength`(v4) @signature `Lorg/mozilla/javascript/ast/AstNode;.getLength:()I` @kind virtual;
  #L42a1d6.  v0:= temp;
  #L42a1d8.  call temp:= `getLength`(v5) @signature `Lorg/mozilla/javascript/ast/AstNode;.getLength:()I` @kind virtual;
  #L42a1de.  v1:= temp;
  #L42a1e0.  if v0 >= v1 then goto L42a1e6;
  #L42a1e4.  return v2;
  #L42a1e6.  if v1 >= v0 then goto L42a1ec;
  #L42a1ea.  return v3;
  #L42a1ec.  call temp:= `hashCode`(v4) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L42a1f2.  v0:= temp;
  #L42a1f4.  call temp:= `hashCode`(v5) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L42a1fa.  v5:= temp;
  #L42a1fc.  v0:= v0 - v5 @kind int;
  #L42a1fe.  return v0;
}
procedure `java.lang.String` `debugPrint`(`org.mozilla.javascript.ast.AstNode` v3 @kind this) @signature `Lorg/mozilla/javascript/ast/AstNode;.debugPrint:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42a2ec.  v0:= new `org.mozilla.javascript.ast.AstNode$DebugPrintVisitor`;
  #L42a2f0.  v1:= new `java.lang.StringBuilder`;
  #L42a2f4.  v2:= 1000I;
  #L42a2f8.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L42a2fe.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode$DebugPrintVisitor;.<init>:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L42a304.  call `visit`(v3, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42a30a.  call temp:= `toString`(v0) @signature `Lorg/mozilla/javascript/ast/AstNode$DebugPrintVisitor;.toString:()Ljava/lang/String;` @kind virtual;
  #L42a310.  v0:= temp @kind object;
  #L42a312.  return v0 @kind object;
}
procedure `int` `depth`(`org.mozilla.javascript.ast.AstNode` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/AstNode;.depth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42a210.  v0:= v1.`org.mozilla.javascript.ast.AstNode.parent` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42a214.  if v0 != 0 then goto L42a21c;
  #L42a218.  v0:= 0I;
  #L42a21a.  goto L42a228;
  #L42a21c.  call temp:= `depth`(v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.depth:()I` @kind virtual;
  #L42a222.  v0:= temp;
  #L42a224.  v0:= v0 + 1;
  #L42a228.  return v0;
}
procedure `int` `getAbsolutePosition`(`org.mozilla.javascript.ast.AstNode` v3 @kind this) @signature `Lorg/mozilla/javascript/ast/AstNode;.getAbsolutePosition:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42a23c.  v0:= v3.`org.mozilla.javascript.ast.AstNode.position` @type ^`int`;
  #L42a240.  v1:= v3.`org.mozilla.javascript.ast.AstNode.parent` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42a244.  if v1 == 0 then goto L42a25c;
  #L42a248.  call temp:= `getPosition`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L42a24e.  v2:= temp;
  #L42a250.  v0:= v0 + v2 @kind int;
  #L42a252.  call temp:= `getParent`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.getParent:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L42a258.  v1:= temp @kind object;
  #L42a25a.  goto L42a244;
  #L42a25c.  return v0;
}
procedure `org.mozilla.javascript.ast.AstRoot` `getAstRoot`(`org.mozilla.javascript.ast.AstNode` v2 @kind this) @signature `Lorg/mozilla/javascript/ast/AstNode;.getAstRoot:()Lorg/mozilla/javascript/ast/AstRoot;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42a42c.  v0:= v2 @kind object;
  #L42a42e.  if v0 == 0 then goto L42a444;
  #L42a432.  v1:= instanceof @variable v0 @type ^`org.mozilla.javascript.ast.AstRoot` @kind boolean;
  #L42a436.  if v1 != 0 then goto L42a444;
  #L42a43a.  call temp:= `getParent`(v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.getParent:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L42a440.  v0:= temp @kind object;
  #L42a442.  goto L42a42e;
  #L42a444.  v0:= (`org.mozilla.javascript.ast.AstRoot`) v0 @kind object;
  #L42a448.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.FunctionNode` `getEnclosingFunction`(`org.mozilla.javascript.ast.AstNode` v2 @kind this) @signature `Lorg/mozilla/javascript/ast/AstNode;.getEnclosingFunction:()Lorg/mozilla/javascript/ast/FunctionNode;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42a45c.  call temp:= `getParent`(v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.getParent:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L42a462.  v0:= temp @kind object;
  #L42a464.  if v0 == 0 then goto L42a47a;
  #L42a468.  v1:= instanceof @variable v0 @type ^`org.mozilla.javascript.ast.FunctionNode` @kind boolean;
  #L42a46c.  if v1 != 0 then goto L42a47a;
  #L42a470.  call temp:= `getParent`(v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.getParent:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L42a476.  v0:= temp @kind object;
  #L42a478.  goto L42a464;
  #L42a47a.  v0:= (`org.mozilla.javascript.ast.FunctionNode`) v0 @kind object;
  #L42a47e.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.Scope` `getEnclosingScope`(`org.mozilla.javascript.ast.AstNode` v2 @kind this) @signature `Lorg/mozilla/javascript/ast/AstNode;.getEnclosingScope:()Lorg/mozilla/javascript/ast/Scope;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42a490.  call temp:= `getParent`(v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.getParent:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L42a496.  v0:= temp @kind object;
  #L42a498.  if v0 == 0 then goto L42a4ae;
  #L42a49c.  v1:= instanceof @variable v0 @type ^`org.mozilla.javascript.ast.Scope` @kind boolean;
  #L42a4a0.  if v1 != 0 then goto L42a4ae;
  #L42a4a4.  call temp:= `getParent`(v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.getParent:()Lorg/mozilla/javascript/ast/AstNode;` @kind virtual;
  #L42a4aa.  v0:= temp @kind object;
  #L42a4ac.  goto L42a498;
  #L42a4ae.  v0:= (`org.mozilla.javascript.ast.Scope`) v0 @kind object;
  #L42a4b2.  return v0 @kind object;
}
procedure `int` `getLength`(`org.mozilla.javascript.ast.AstNode` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/AstNode;.getLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42a270.  v0:= v1.`org.mozilla.javascript.ast.AstNode.length` @type ^`int`;
  #L42a274.  return v0;
}
procedure `int` `getLineno`(`org.mozilla.javascript.ast.AstNode` v2 @kind this) @signature `Lorg/mozilla/javascript/ast/AstNode;.getLineno:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42a288.  v0:= v2.`org.mozilla.javascript.Node.lineno` @type ^`int`;
  #L42a28c.  v1:= -1I;
  #L42a28e.  if v0 == v1 then goto L42a294;
  #L42a292.  return v0;
  #L42a294.  v0:= v2.`org.mozilla.javascript.ast.AstNode.parent` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42a298.  if v0 == 0 then goto L42a2a6;
  #L42a29c.  call temp:= `getLineno`(v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.getLineno:()I` @kind virtual;
  #L42a2a2.  v0:= temp;
  #L42a2a4.  return v0;
  #L42a2a6.  return v1;
}
procedure `org.mozilla.javascript.ast.AstNode` `getParent`(`org.mozilla.javascript.ast.AstNode` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/AstNode;.getParent:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42a414.  v0:= v1.`org.mozilla.javascript.ast.AstNode.parent` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42a418.  return v0 @kind object;
}
procedure `int` `getPosition`(`org.mozilla.javascript.ast.AstNode` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42a2b8.  v0:= v1.`org.mozilla.javascript.ast.AstNode.position` @type ^`int`;
  #L42a2bc.  return v0;
}
procedure `boolean` `hasSideEffects`(`org.mozilla.javascript.ast.AstNode` v2 @kind this) @signature `Lorg/mozilla/javascript/ast/AstNode;.hasSideEffects:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L429f54.  call temp:= `getType`(v2) @signature `Lorg/mozilla/javascript/Node;.getType:()I` @kind virtual;
  #L429f5a.  v0:= temp;
  #L429f5c.  v1:= 30I;
  #L429f60.  if v0 == v1 then goto L429fd8;
  #L429f64.  v1:= 31I;
  #L429f68.  if v0 == v1 then goto L429fd8;
  #L429f6c.  v1:= 37I;
  #L429f70.  if v0 == v1 then goto L429fd8;
  #L429f74.  v1:= 38I;
  #L429f78.  if v0 == v1 then goto L429fd8;
  #L429f7c.  v1:= 50I;
  #L429f80.  if v0 == v1 then goto L429fd8;
  #L429f84.  v1:= 51I;
  #L429f88.  if v0 == v1 then goto L429fd8;
  #L429f8c.  v1:= 56I;
  #L429f90.  if v0 == v1 then goto L429fd8;
  #L429f94.  v1:= 57I;
  #L429f98.  if v0 == v1 then goto L429fd8;
  #L429f9c.  v1:= 81I;
  #L429fa0.  if v0 == v1 then goto L429fd8;
  #L429fa4.  v1:= 82I;
  #L429fa8.  if v0 == v1 then goto L429fd8;
  #L429fac.  v1:= 106I;
  #L429fb0.  if v0 == v1 then goto L429fd8;
  #L429fb4.  v1:= 107I;
  #L429fb8.  if v0 == v1 then goto L429fd8;
  #L429fbc.  goto L429fdc;
  #L429fc2.  goto L42a118;
  #L429fc8.  goto L42a13c;
  #L429fce.  goto L42a150;
  #L429fd4.  v0:= 0I;
  #L429fd6.  return v0;
  #L429fd8.  v0:= 1I;
  #L429fda.  return v0;
  #L429fdc.  switch v0
                  | -1 => goto L429fd8
                  | 35 => goto L429fd8
                  | 64 => goto L429fd8
                  | 72 => goto L429fd8
                  | 90 => goto L429fd8
                  | 91 => goto L429fd8
                  | 92 => goto L429fd8
                  | 93 => goto L429fd8
                  | 94 => goto L429fd8
                  | 95 => goto L429fd8
                  | 96 => goto L429fd8
                  | 97 => goto L429fd8
                  | 98 => goto L429fd8
                  | 99 => goto L429fd8
                  | 100 => goto L429fd8
                  | 101 => goto L429fd8
                  | 117 => goto L429fd8
                  | 118 => goto L429fd8
                  | 119 => goto L429fd8
                  | 120 => goto L429fd8
                  | 121 => goto L429fd8
                  | 122 => goto L429fd8
                  | 123 => goto L429fd8
                  | 124 => goto L429fd8
                  | 125 => goto L429fd8
                  | 129 => goto L429fd8
                  | 130 => goto L429fd8
                  | 131 => goto L429fd8
                  | 132 => goto L429fd8
                  | 134 => goto L429fd8
                  | 135 => goto L429fd8
                  | 139 => goto L429fd8
                  | 140 => goto L429fd8
                  | 141 => goto L429fd8
                  | 142 => goto L429fd8
                  | 153 => goto L429fd8
                  | 154 => goto L429fd8
                  | 158 => goto L429fd8
                  | 159 => goto L429fd8
                  | else => goto L429fc2;
  #L42a118.  switch v0
                  | 2 => goto L429fd8
                  | 3 => goto L429fd8
                  | 4 => goto L429fd8
                  | 5 => goto L429fd8
                  | 6 => goto L429fd8
                  | 7 => goto L429fd8
                  | 8 => goto L429fd8
                  | else => goto L429fc8;
  #L42a13c.  switch v0
                  | 68 => goto L429fd8
                  | 69 => goto L429fd8
                  | 70 => goto L429fd8
                  | else => goto L429fce;
  #L42a150.  switch v0
                  | 109 => goto L429fd8
                  | 110 => goto L429fd8
                  | 111 => goto L429fd8
                  | 112 => goto L429fd8
                  | 113 => goto L429fd8
                  | 114 => goto L429fd8
                  | else => goto L429fd4;
}
procedure `java.lang.String` `makeIndent`(`org.mozilla.javascript.ast.AstNode` v3 @kind this, `int` v4 ) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42a324.  v0:= new `java.lang.StringBuilder`;
  #L42a328.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42a32e.  v1:= 0I;
  #L42a330.  if v1 >= v4 then goto L42a344;
  #L42a334.  v2:= "  " @kind object;
  #L42a338.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42a33e.  v1:= v1 + 1;
  #L42a342.  goto L42a330;
  #L42a344.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42a34a.  v4:= temp @kind object;
  #L42a34c.  return v4 @kind object;
}
procedure `void` `printList`(`org.mozilla.javascript.ast.AstNode` v6 @kind this, `java.util.List` v7 @kind object, `java.lang.StringBuilder` v8 @kind object) @signature `Lorg/mozilla/javascript/ast/AstNode;.printList:(Ljava/util/List;Ljava/lang/StringBuilder;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L42aa54.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L42aa5a.  v0:= temp;
  #L42aa5c.  call temp:= `iterator`(v7) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L42aa62.  v7:= temp @kind object;
  #L42aa64.  v1:= 0I;
  #L42aa66.  v2:= 0I;
  #L42aa68.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42aa6e.  v3:= temp;
  #L42aa70.  if v3 == 0 then goto L42aabc;
  #L42aa74.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42aa7a.  v3:= temp @kind object;
  #L42aa7c.  v3:= (`org.mozilla.javascript.ast.AstNode`) v3 @kind object;
  #L42aa80.  call temp:= `toSource`(v3, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42aa86.  v4:= temp @kind object;
  #L42aa88.  call temp:= `append`(v8, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42aa8e.  v4:= v2 + 1;
  #L42aa92.  v5:= v0 + -1;
  #L42aa96.  if v2 >= v5 then goto L42aaa6;
  #L42aa9a.  v2:= ", " @kind object;
  #L42aa9e.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42aaa4.  goto L42aab8;
  #L42aaa6.  v2:= instanceof @variable v3 @type ^`org.mozilla.javascript.ast.EmptyExpression` @kind boolean;
  #L42aaaa.  if v2 == 0 then goto L42aab8;
  #L42aaae.  v2:= "," @kind object;
  #L42aab2.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42aab8.  v2:= v4;
  #L42aaba.  goto L42aa68;
  #L42aabc.  return @kind void;
}
procedure `void` `setBounds`(`org.mozilla.javascript.ast.AstNode` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/AstNode;.setBounds:(II)V` @AccessFlag PUBLIC {
    temp;

  #L42aad0.  call `setPosition`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.setPosition:(I)V` @kind virtual;
  #L42aad6.  v2:= v2 - v1 @kind int;
  #L42aad8.  call `setLength`(v0, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @kind virtual;
  #L42aade.  return @kind void;
}
procedure `void` `setLength`(`org.mozilla.javascript.ast.AstNode` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/AstNode;.setLength:(I)V` @AccessFlag PUBLIC {
    temp;

  #L42aaf0.  v0.`org.mozilla.javascript.ast.AstNode.length` @type ^`int` := v1;
  #L42aaf4.  return @kind void;
}
procedure `void` `setParent`(`org.mozilla.javascript.ast.AstNode` v1 @kind this, `org.mozilla.javascript.ast.AstNode` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ab08.  v0:= v1.`org.mozilla.javascript.ast.AstNode.parent` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42ab0c.  if v2 != v0 then goto L42ab12;
  #L42ab10.  return @kind void;
  #L42ab12.  if v0 == 0 then goto L42ab26;
  #L42ab16.  call temp:= `getPosition`(v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L42ab1c.  v0:= temp;
  #L42ab1e.  v0:= -v0 @kind int;
  #L42ab20.  call `setRelative`(v1, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setRelative:(I)V` @kind virtual;
  #L42ab26.  v1.`org.mozilla.javascript.ast.AstNode.parent` @type ^`org.mozilla.javascript.ast.AstNode` := v2 @kind object;
  #L42ab2a.  if v2 == 0 then goto L42ab3c;
  #L42ab2e.  call temp:= `getPosition`(v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.getPosition:()I` @kind virtual;
  #L42ab34.  v2:= temp;
  #L42ab36.  call `setRelative`(v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.setRelative:(I)V` @kind virtual;
  #L42ab3c.  return @kind void;
}
procedure `void` `setPosition`(`org.mozilla.javascript.ast.AstNode` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/AstNode;.setPosition:(I)V` @AccessFlag PUBLIC {
    temp;

  #L42ab50.  v0.`org.mozilla.javascript.ast.AstNode.position` @type ^`int` := v1;
  #L42ab54.  return @kind void;
}
procedure `void` `setRelative`(`org.mozilla.javascript.ast.AstNode` v1 @kind this, `int` v2 ) @signature `Lorg/mozilla/javascript/ast/AstNode;.setRelative:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42ab68.  v0:= v1.`org.mozilla.javascript.ast.AstNode.position` @type ^`int`;
  #L42ab6c.  v0:= v0 - v2 @kind int;
  #L42ab6e.  v1.`org.mozilla.javascript.ast.AstNode.position` @type ^`int` := v0;
  #L42ab72.  return @kind void;
}
procedure `java.lang.String` `shortName`(`org.mozilla.javascript.ast.AstNode` v2 @kind this) @signature `Lorg/mozilla/javascript/ast/AstNode;.shortName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42a3bc.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L42a3c2.  v0:= temp @kind object;
  #L42a3c4.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L42a3ca.  v0:= temp @kind object;
  #L42a3cc.  v1:= "." @kind object;
  #L42a3d0.  call temp:= `lastIndexOf`(v0, v1) @signature `Ljava/lang/String;.lastIndexOf:(Ljava/lang/String;)I` @kind virtual;
  #L42a3d6.  v1:= temp;
  #L42a3d8.  v1:= v1 + 1;
  #L42a3dc.  call temp:= `substring`(v0, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L42a3e2.  v0:= temp @kind object;
  #L42a3e4.  return v0 @kind object;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.AstNode` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42a3f8.  v0:= 0I;
  #L42a3fa.  call temp:= `toSource`(v1, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42a400.  v0:= temp @kind object;
  #L42a402.  return v0 @kind object;
}
procedure `java.lang.String` `toSource`(`int` v0 ) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.NodeVisitor` v0 @kind object) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
