record `org.mozilla.javascript.ast.LabeledStatement` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.AstNode` @kind class {
  `java.util.List` `org.mozilla.javascript.ast.LabeledStatement.c` @AccessFlag PRIVATE;
  `org.mozilla.javascript.ast.AstNode` `org.mozilla.javascript.ast.LabeledStatement.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.LabeledStatement` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42e388.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L42e38e.  v0:= new `java.util.ArrayList`;
  #L42e392.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L42e398.  v1.`org.mozilla.javascript.ast.LabeledStatement.c` @type ^`java.util.List` := v0 @kind object;
  #L42e39c.  v0:= 133I;
  #L42e3a0.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42e3a4.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.LabeledStatement` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42e3b8.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(I)V` @kind direct;
  #L42e3be.  v1:= new `java.util.ArrayList`;
  #L42e3c2.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L42e3c8.  v0.`org.mozilla.javascript.ast.LabeledStatement.c` @type ^`java.util.List` := v1 @kind object;
  #L42e3cc.  v1:= 133I;
  #L42e3d0.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42e3d4.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.LabeledStatement` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42e3e8.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L42e3ee.  v1:= new `java.util.ArrayList`;
  #L42e3f2.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L42e3f8.  v0.`org.mozilla.javascript.ast.LabeledStatement.c` @type ^`java.util.List` := v1 @kind object;
  #L42e3fc.  v1:= 133I;
  #L42e400.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42e404.  return @kind void;
}
procedure `void` `addLabel`(`org.mozilla.javascript.ast.LabeledStatement` v1 @kind this, `org.mozilla.javascript.ast.Label` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.addLabel:(Lorg/mozilla/javascript/ast/Label;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e418.  call `assertNotNull`(v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L42e41e.  v0:= v1.`org.mozilla.javascript.ast.LabeledStatement.c` @type ^`java.util.List` @kind object;
  #L42e422.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L42e428.  call `setParent`(v2, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42e42e.  return @kind void;
}
procedure `org.mozilla.javascript.ast.Label` `getFirstLabel`(`org.mozilla.javascript.ast.LabeledStatement` v2 @kind this) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.getFirstLabel:()Lorg/mozilla/javascript/ast/Label;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42e314.  v0:= v2.`org.mozilla.javascript.ast.LabeledStatement.c` @type ^`java.util.List` @kind object;
  #L42e318.  v1:= 0I;
  #L42e31a.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L42e320.  v0:= temp @kind object;
  #L42e322.  v0:= (`org.mozilla.javascript.ast.Label`) v0 @kind object;
  #L42e326.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.Label` `getLabelByName`(`org.mozilla.javascript.ast.LabeledStatement` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.getLabelByName:(Ljava/lang/String;)Lorg/mozilla/javascript/ast/Label;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42e338.  v0:= v3.`org.mozilla.javascript.ast.LabeledStatement.c` @type ^`java.util.List` @kind object;
  #L42e33c.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L42e342.  v0:= temp @kind object;
  #L42e344.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42e34a.  v1:= temp;
  #L42e34c.  if v1 == 0 then goto L42e372;
  #L42e350.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42e356.  v1:= temp @kind object;
  #L42e358.  v1:= (`org.mozilla.javascript.ast.Label`) v1 @kind object;
  #L42e35c.  call temp:= `getName`(v1) @signature `Lorg/mozilla/javascript/ast/Label;.getName:()Ljava/lang/String;` @kind virtual;
  #L42e362.  v2:= temp @kind object;
  #L42e364.  call temp:= `equals`(v4, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L42e36a.  v2:= temp;
  #L42e36c.  if v2 == 0 then goto L42e344;
  #L42e370.  return v1 @kind object;
  #L42e372.  v4:= 0I;
  #L42e374.  return v4 @kind object;
}
procedure `java.util.List` `getLabels`(`org.mozilla.javascript.ast.LabeledStatement` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.getLabels:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e2e4.  v0:= v1.`org.mozilla.javascript.ast.LabeledStatement.c` @type ^`java.util.List` @kind object;
  #L42e2e8.  return v0 @kind object;
}
procedure `org.mozilla.javascript.ast.AstNode` `getStatement`(`org.mozilla.javascript.ast.LabeledStatement` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.getStatement:()Lorg/mozilla/javascript/ast/AstNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e2fc.  v0:= v1.`org.mozilla.javascript.ast.LabeledStatement.d` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42e300.  return v0 @kind object;
}
procedure `void` `setLabels`(`org.mozilla.javascript.ast.LabeledStatement` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.setLabels:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42e440.  call `assertNotNull`(v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L42e446.  v0:= v1.`org.mozilla.javascript.ast.LabeledStatement.c` @type ^`java.util.List` @kind object;
  #L42e44a.  if v0 == 0 then goto L42e454;
  #L42e44e.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L42e454.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L42e45a.  v2:= temp @kind object;
  #L42e45c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42e462.  v0:= temp;
  #L42e464.  if v0 == 0 then goto L42e47c;
  #L42e468.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42e46e.  v0:= temp @kind object;
  #L42e470.  v0:= (`org.mozilla.javascript.ast.Label`) v0 @kind object;
  #L42e474.  call `addLabel`(v1, v0) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.addLabel:(Lorg/mozilla/javascript/ast/Label;)V` @kind virtual;
  #L42e47a.  goto L42e45c;
  #L42e47c.  return @kind void;
}
procedure `void` `setStatement`(`org.mozilla.javascript.ast.LabeledStatement` v0 @kind this, `org.mozilla.javascript.ast.AstNode` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.setStatement:(Lorg/mozilla/javascript/ast/AstNode;)V` @AccessFlag PUBLIC {
    temp;

  #L42e490.  call `assertNotNull`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.assertNotNull:(Ljava/lang/Object;)V` @kind virtual;
  #L42e496.  v0.`org.mozilla.javascript.ast.LabeledStatement.d` @type ^`org.mozilla.javascript.ast.AstNode` := v1 @kind object;
  #L42e49a.  call `setParent`(v1, v0) @signature `Lorg/mozilla/javascript/ast/AstNode;.setParent:(Lorg/mozilla/javascript/ast/AstNode;)V` @kind virtual;
  #L42e4a0.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.LabeledStatement` v3 @kind this, `int` v4 ) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L42e274.  v0:= new `java.lang.StringBuilder`;
  #L42e278.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42e27e.  v1:= v3.`org.mozilla.javascript.ast.LabeledStatement.c` @type ^`java.util.List` @kind object;
  #L42e282.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L42e288.  v1:= temp @kind object;
  #L42e28a.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42e290.  v2:= temp;
  #L42e292.  if v2 == 0 then goto L42e2b2;
  #L42e296.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42e29c.  v2:= temp @kind object;
  #L42e29e.  v2:= (`org.mozilla.javascript.ast.Label`) v2 @kind object;
  #L42e2a2.  call temp:= `toSource`(v2, v4) @signature `Lorg/mozilla/javascript/ast/Label;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42e2a8.  v2:= temp @kind object;
  #L42e2aa.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42e2b0.  goto L42e28a;
  #L42e2b2.  v1:= v3.`org.mozilla.javascript.ast.LabeledStatement.d` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42e2b6.  v4:= v4 + 1;
  #L42e2ba.  call temp:= `toSource`(v1, v4) @signature `Lorg/mozilla/javascript/ast/AstNode;.toSource:(I)Ljava/lang/String;` @kind virtual;
  #L42e2c0.  v4:= temp @kind object;
  #L42e2c2.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42e2c8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42e2ce.  v4:= temp @kind object;
  #L42e2d0.  return v4 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.LabeledStatement` v2 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v3 @kind object) @signature `Lorg/mozilla/javascript/ast/LabeledStatement;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42e4b4.  call temp:= `visit`(v3, v2) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L42e4ba.  v0:= temp;
  #L42e4bc.  if v0 == 0 then goto L42e4f6;
  #L42e4c0.  v0:= v2.`org.mozilla.javascript.ast.LabeledStatement.c` @type ^`java.util.List` @kind object;
  #L42e4c4.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L42e4ca.  v0:= temp @kind object;
  #L42e4cc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L42e4d2.  v1:= temp;
  #L42e4d4.  if v1 == 0 then goto L42e4ec;
  #L42e4d8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42e4de.  v1:= temp @kind object;
  #L42e4e0.  v1:= (`org.mozilla.javascript.ast.AstNode`) v1 @kind object;
  #L42e4e4.  call `visit`(v1, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42e4ea.  goto L42e4cc;
  #L42e4ec.  v0:= v2.`org.mozilla.javascript.ast.LabeledStatement.d` @type ^`org.mozilla.javascript.ast.AstNode` @kind object;
  #L42e4f0.  call `visit`(v0, v3) @signature `Lorg/mozilla/javascript/ast/AstNode;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @kind virtual;
  #L42e4f6.  return @kind void;
}
