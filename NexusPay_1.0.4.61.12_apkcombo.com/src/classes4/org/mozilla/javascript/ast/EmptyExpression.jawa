record `org.mozilla.javascript.ast.EmptyExpression` @kind class @AccessFlag PUBLIC extends `org.mozilla.javascript.ast.AstNode` @kind class {
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.EmptyExpression` v1 @kind this) @signature `Lorg/mozilla/javascript/ast/EmptyExpression;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L42bd30.  call `<init>`(v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:()V` @kind direct;
  #L42bd36.  v0:= 128I;
  #L42bd3a.  v1.`org.mozilla.javascript.Node.type` @type ^`int` := v0;
  #L42bd3e.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.EmptyExpression` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/EmptyExpression;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42bd50.  call `<init>`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(I)V` @kind direct;
  #L42bd56.  v1:= 128I;
  #L42bd5a.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42bd5e.  return @kind void;
}
procedure `void` `<init>`(`org.mozilla.javascript.ast.EmptyExpression` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/mozilla/javascript/ast/EmptyExpression;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42bd70.  call `<init>`(v0, v1, v2) @signature `Lorg/mozilla/javascript/ast/AstNode;.<init>:(II)V` @kind direct;
  #L42bd76.  v1:= 128I;
  #L42bd7a.  v0.`org.mozilla.javascript.Node.type` @type ^`int` := v1;
  #L42bd7e.  return @kind void;
}
procedure `java.lang.String` `toSource`(`org.mozilla.javascript.ast.EmptyExpression` v0 @kind this, `int` v1 ) @signature `Lorg/mozilla/javascript/ast/EmptyExpression;.toSource:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L42bd14.  call temp:= `makeIndent`(v0, v1) @signature `Lorg/mozilla/javascript/ast/AstNode;.makeIndent:(I)Ljava/lang/String;` @kind virtual;
  #L42bd1a.  v1:= temp @kind object;
  #L42bd1c.  return v1 @kind object;
}
procedure `void` `visit`(`org.mozilla.javascript.ast.EmptyExpression` v0 @kind this, `org.mozilla.javascript.ast.NodeVisitor` v1 @kind object) @signature `Lorg/mozilla/javascript/ast/EmptyExpression;.visit:(Lorg/mozilla/javascript/ast/NodeVisitor;)V` @AccessFlag PUBLIC {
    temp;

  #L42bd90.  call temp:= `visit`(v1, v0) @signature `Lorg/mozilla/javascript/ast/NodeVisitor;.visit:(Lorg/mozilla/javascript/ast/AstNode;)Z` @kind interface;
  #L42bd96.  return @kind void;
}
