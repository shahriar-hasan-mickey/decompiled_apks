record `org.greenrobot.greendao.DbUtils` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`org.greenrobot.greendao.DbUtils` v0 @kind this) @signature `Lorg/greenrobot/greendao/DbUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38b4ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38b4b2.  return @kind void;
}
procedure `int` `copyAllBytes`(`java.io.InputStream` v5 @kind object, `java.io.OutputStream` v6 @kind object) @signature `Lorg/greenrobot/greendao/DbUtils;.copyAllBytes:(Ljava/io/InputStream;Ljava/io/OutputStream;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L38b344.  v0:= 4096I;
  #L38b348.  v0:= new `byte`[v0];
  #L38b34c.  v1:= 0I;
  #L38b34e.  v2:= 0I;
  #L38b350.  call temp:= `read`(v5, v0) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L38b356.  v3:= temp;
  #L38b358.  v4:= -1I;
  #L38b35a.  if v3 != v4 then goto L38b360;
  #L38b35e.  return v2;
  #L38b360.  call `write`(v6, v0, v1, v3) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L38b366.  v2:= v2 + v3 @kind int;
  #L38b368.  goto L38b350;
}
procedure `int` `executeSqlScript`(`android.content.Context` v1 @kind object, `org.greenrobot.greendao.database.Database` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/greenrobot/greendao/DbUtils;.executeSqlScript:(Landroid/content/Context;Lorg/greenrobot/greendao/database/Database;Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38b37c.  v0:= 1I;
  #L38b37e.  call temp:= `executeSqlScript`(v1, v2, v3, v0) @signature `Lorg/greenrobot/greendao/DbUtils;.executeSqlScript:(Landroid/content/Context;Lorg/greenrobot/greendao/database/Database;Ljava/lang/String;Z)I` @kind static;
  #L38b384.  v1:= temp;
  #L38b386.  return v1;
}
procedure `int` `executeSqlScript`(`android.content.Context` v2 @kind object, `org.greenrobot.greendao.database.Database` v3 @kind object, `java.lang.String` v4 @kind object, `boolean` v5 ) @signature `Lorg/greenrobot/greendao/DbUtils;.executeSqlScript:(Landroid/content/Context;Lorg/greenrobot/greendao/database/Database;Ljava/lang/String;Z)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L38b398.  call temp:= `readAsset`(v2, v4) @signature `Lorg/greenrobot/greendao/DbUtils;.readAsset:(Landroid/content/Context;Ljava/lang/String;)[B` @kind static;
  #L38b39e.  v2:= temp @kind object;
  #L38b3a0.  v0:= new `java.lang.String`;
  #L38b3a4.  v1:= "UTF-8" @kind object;
  #L38b3a8.  call `<init>`(v0, v2, v1) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L38b3ae.  v2:= ";(\\s)*[\n\r]" @kind object;
  #L38b3b2.  call temp:= `split`(v0, v2) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L38b3b8.  v2:= temp @kind object;
  #L38b3ba.  if v5 == 0 then goto L38b3c8;
  #L38b3be.  call temp:= `executeSqlStatementsInTx`(v3, v2) @signature `Lorg/greenrobot/greendao/DbUtils;.executeSqlStatementsInTx:(Lorg/greenrobot/greendao/database/Database;[Ljava/lang/String;)I` @kind static;
  #L38b3c4.  v2:= temp;
  #L38b3c6.  goto L38b3d0;
  #L38b3c8.  call temp:= `executeSqlStatements`(v3, v2) @signature `Lorg/greenrobot/greendao/DbUtils;.executeSqlStatements:(Lorg/greenrobot/greendao/database/Database;[Ljava/lang/String;)I` @kind static;
  #L38b3ce.  v2:= temp;
  #L38b3d0.  v3:= new `java.lang.StringBuilder`;
  #L38b3d4.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38b3da.  v5:= "Executed " @kind object;
  #L38b3de.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38b3e4.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L38b3ea.  v5:= " statements from SQL script '" @kind object;
  #L38b3ee.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38b3f4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38b3fa.  v4:= "'" @kind object;
  #L38b3fe.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38b404.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38b40a.  v3:= temp @kind object;
  #L38b40c.  call temp:= `i`(v3) @signature `Lorg/greenrobot/greendao/DaoLog;.i:(Ljava/lang/String;)I` @kind static;
  #L38b412.  return v2;
}
procedure `int` `executeSqlStatements`(`org.greenrobot.greendao.database.Database` v5 @kind object, `java.lang.String`[] v6 @kind object) @signature `Lorg/greenrobot/greendao/DbUtils;.executeSqlStatements:(Lorg/greenrobot/greendao/database/Database;[Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L38b424.  v0:= length @variable v6;
  #L38b426.  v1:= 0I;
  #L38b428.  v2:= 0I;
  #L38b42a.  if v1 >= v0 then goto L38b456;
  #L38b42e.  v3:= v6[v1] @kind object;
  #L38b432.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L38b438.  v3:= temp @kind object;
  #L38b43a.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L38b440.  v4:= temp;
  #L38b442.  if v4 <= 0 then goto L38b450;
  #L38b446.  call `execSQL`(v5, v3) @signature `Lorg/greenrobot/greendao/database/Database;.execSQL:(Ljava/lang/String;)V` @kind interface;
  #L38b44c.  v2:= v2 + 1;
  #L38b450.  v1:= v1 + 1;
  #L38b454.  goto L38b42a;
  #L38b456.  return v2;
}
procedure `int` `executeSqlStatementsInTx`(`org.greenrobot.greendao.database.Database` v0 @kind object, `java.lang.String`[] v1 @kind object) @signature `Lorg/greenrobot/greendao/DbUtils;.executeSqlStatementsInTx:(Lorg/greenrobot/greendao/database/Database;[Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L38b468.  call `beginTransaction`(v0) @signature `Lorg/greenrobot/greendao/database/Database;.beginTransaction:()V` @kind interface;
  #L38b46e.  call temp:= `executeSqlStatements`(v0, v1) @signature `Lorg/greenrobot/greendao/DbUtils;.executeSqlStatements:(Lorg/greenrobot/greendao/database/Database;[Ljava/lang/String;)I` @kind static;
  #L38b474.  v1:= temp;
  #L38b476.  call `setTransactionSuccessful`(v0) @signature `Lorg/greenrobot/greendao/database/Database;.setTransactionSuccessful:()V` @kind interface;
  #L38b47c.  call `endTransaction`(v0) @signature `Lorg/greenrobot/greendao/database/Database;.endTransaction:()V` @kind interface;
  #L38b482.  return v1;
  #L38b484.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38b486.  call `endTransaction`(v0) @signature `Lorg/greenrobot/greendao/database/Database;.endTransaction:()V` @kind interface;
  #L38b48c.  throw v1;
  catch `java.lang.Throwable` @[L38b46e..L38b47c] goto L38b484;
}
procedure `void` `logTableDump`(`android.database.sqlite.SQLiteDatabase` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lorg/greenrobot/greendao/DbUtils;.logTableDump:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L38b4c4.  v2:= 0I;
  #L38b4c6.  v3:= 0I;
  #L38b4c8.  v4:= 0I;
  #L38b4ca.  v5:= 0I;
  #L38b4cc.  v6:= 0I;
  #L38b4ce.  v7:= 0I;
  #L38b4d0.  v0:= v8 @kind object;
  #L38b4d2.  v1:= v9 @kind object;
  #L38b4d4.  call temp:= `query`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Landroid/database/sqlite/SQLiteDatabase;.query:(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L38b4da.  v8:= temp @kind object;
  #L38b4dc.  call temp:= `dumpCursorToString`(v8) @signature `Landroid/database/DatabaseUtils;.dumpCursorToString:(Landroid/database/Cursor;)Ljava/lang/String;` @kind static;
  #L38b4e2.  v9:= temp @kind object;
  #L38b4e4.  call temp:= `d`(v9) @signature `Lorg/greenrobot/greendao/DaoLog;.d:(Ljava/lang/String;)I` @kind static;
  #L38b4ea.  call `close`(v8) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L38b4f0.  return @kind void;
  #L38b4f2.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38b4f4.  call `close`(v8) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L38b4fa.  throw v9;
  catch `java.lang.Throwable` @[L38b4dc..L38b4ea] goto L38b4f2;
}
procedure `byte`[] `readAllBytes`(`java.io.InputStream` v1 @kind object) @signature `Lorg/greenrobot/greendao/DbUtils;.readAllBytes:(Ljava/io/InputStream;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38b2c8.  v0:= new `java.io.ByteArrayOutputStream`;
  #L38b2cc.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L38b2d2.  call temp:= `copyAllBytes`(v1, v0) @signature `Lorg/greenrobot/greendao/DbUtils;.copyAllBytes:(Ljava/io/InputStream;Ljava/io/OutputStream;)I` @kind static;
  #L38b2d8.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L38b2de.  v1:= temp @kind object;
  #L38b2e0.  return v1 @kind object;
}
procedure `byte`[] `readAsset`(`android.content.Context` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lorg/greenrobot/greendao/DbUtils;.readAsset:(Landroid/content/Context;Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;

  #L38b2f4.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L38b2fa.  v0:= temp @kind object;
  #L38b2fc.  call temp:= `getAssets`(v0) @signature `Landroid/content/res/Resources;.getAssets:()Landroid/content/res/AssetManager;` @kind virtual;
  #L38b302.  v0:= temp @kind object;
  #L38b304.  call temp:= `open`(v0, v1) @signature `Landroid/content/res/AssetManager;.open:(Ljava/lang/String;)Ljava/io/InputStream;` @kind virtual;
  #L38b30a.  v0:= temp @kind object;
  #L38b30c.  call temp:= `readAllBytes`(v0) @signature `Lorg/greenrobot/greendao/DbUtils;.readAllBytes:(Ljava/io/InputStream;)[B` @kind static;
  #L38b312.  v1:= temp @kind object;
  #L38b314.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L38b31a.  return v1 @kind object;
  #L38b31c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38b31e.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L38b324.  throw v1;
  catch `java.lang.Throwable` @[L38b30c..L38b314] goto L38b31c;
}
procedure `void` `vacuum`(`org.greenrobot.greendao.database.Database` v1 @kind object) @signature `Lorg/greenrobot/greendao/DbUtils;.vacuum:(Lorg/greenrobot/greendao/database/Database;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38b518.  v0:= "VACUUM" @kind object;
  #L38b51c.  call `execSQL`(v1, v0) @signature `Lorg/greenrobot/greendao/database/Database;.execSQL:(Ljava/lang/String;)V` @kind interface;
  #L38b522.  return @kind void;
}
