record `org.greenrobot.greendao.rx.RxQuery$b` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `org.greenrobot.greendao.rx.RxQuery` `org.greenrobot.greendao.rx.RxQuery$b.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.greenrobot.greendao.rx.RxQuery$b` v0 @kind this, `org.greenrobot.greendao.rx.RxQuery` v1 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxQuery$b;.<init>:(Lorg/greenrobot/greendao/rx/RxQuery;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L393240.  v0.`org.greenrobot.greendao.rx.RxQuery$b.a` @type ^`org.greenrobot.greendao.rx.RxQuery` := v1 @kind object;
  #L393244.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39324a.  return @kind void;
}
procedure `java.lang.Object` `call`(`org.greenrobot.greendao.rx.RxQuery$b` v1 @kind this) @signature `Lorg/greenrobot/greendao/rx/RxQuery$b;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L393210.  v0:= v1.`org.greenrobot.greendao.rx.RxQuery$b.a` @type ^`org.greenrobot.greendao.rx.RxQuery` @kind object;
  #L393214.  call temp:= `a`(v0) @signature `Lorg/greenrobot/greendao/rx/RxQuery;.a:(Lorg/greenrobot/greendao/rx/RxQuery;)Lorg/greenrobot/greendao/query/Query;` @kind static;
  #L39321a.  v0:= temp @kind object;
  #L39321c.  call temp:= `forCurrentThread`(v0) @signature `Lorg/greenrobot/greendao/query/Query;.forCurrentThread:()Lorg/greenrobot/greendao/query/Query;` @kind virtual;
  #L393222.  v0:= temp @kind object;
  #L393224.  call temp:= `unique`(v0) @signature `Lorg/greenrobot/greendao/query/Query;.unique:()Ljava/lang/Object;` @kind virtual;
  #L39322a.  v0:= temp @kind object;
  #L39322c.  return v0 @kind object;
}
