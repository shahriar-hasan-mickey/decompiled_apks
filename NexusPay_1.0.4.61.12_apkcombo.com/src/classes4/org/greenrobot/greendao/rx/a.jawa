record `org.greenrobot.greendao.rx.a` @kind class @AccessFlag  {
  `rx.Scheduler` `org.greenrobot.greendao.rx.a.scheduler` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`org.greenrobot.greendao.rx.a` v1 @kind this) @signature `Lorg/greenrobot/greendao/rx/a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L39250c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L392512.  v0:= 0I;
  #L392514.  v1.`org.greenrobot.greendao.rx.a.scheduler` @type ^`rx.Scheduler` := v0 @kind object;
  #L392518.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.greendao.rx.a` v0 @kind this, `rx.Scheduler` v1 @kind object) @signature `Lorg/greenrobot/greendao/rx/a;.<init>:(Lrx/Scheduler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L39252c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L392532.  v0.`org.greenrobot.greendao.rx.a.scheduler` @type ^`rx.Scheduler` := v1 @kind object;
  #L392536.  return @kind void;
}
procedure `rx.Scheduler` `getScheduler`(`org.greenrobot.greendao.rx.a` v1 @kind this) @signature `Lorg/greenrobot/greendao/rx/a;.getScheduler:()Lrx/Scheduler;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3924f4.  v0:= v1.`org.greenrobot.greendao.rx.a.scheduler` @type ^`rx.Scheduler` @kind object;
  #L3924f8.  return v0 @kind object;
}
procedure `rx.Observable` `wrap`(`org.greenrobot.greendao.rx.a` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @AccessFlag PROTECTED {
    temp;

  #L3924ac.  call temp:= `a`(v1) @signature `Lorg/greenrobot/greendao/rx/b;.a:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind static;
  #L3924b2.  v1:= temp @kind object;
  #L3924b4.  call temp:= `wrap`(v0, v1) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Lrx/Observable;)Lrx/Observable;` @kind virtual;
  #L3924ba.  v1:= temp @kind object;
  #L3924bc.  return v1 @kind object;
}
procedure `rx.Observable` `wrap`(`org.greenrobot.greendao.rx.a` v1 @kind this, `rx.Observable` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Lrx/Observable;)Lrx/Observable;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3924d0.  v0:= v1.`org.greenrobot.greendao.rx.a.scheduler` @type ^`rx.Scheduler` @kind object;
  #L3924d4.  if v0 == 0 then goto L3924e0;
  #L3924d8.  call temp:= `subscribeOn`(v2, v0) @signature `Lrx/Observable;.subscribeOn:(Lrx/Scheduler;)Lrx/Observable;` @kind virtual;
  #L3924de.  v2:= temp @kind object;
  #L3924e0.  return v2 @kind object;
}
