record `org.greenrobot.greendao.rx.RxTransaction` @kind class @AccessFlag PUBLIC extends `org.greenrobot.greendao.rx.a` @kind class {
  `org.greenrobot.greendao.AbstractDaoSession` `org.greenrobot.greendao.rx.RxTransaction.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.greenrobot.greendao.rx.RxTransaction` v0 @kind this, `org.greenrobot.greendao.AbstractDaoSession` v1 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxTransaction;.<init>:(Lorg/greenrobot/greendao/AbstractDaoSession;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39349c.  call `<init>`(v0) @signature `Lorg/greenrobot/greendao/rx/a;.<init>:()V` @kind direct;
  #L3934a2.  v0.`org.greenrobot.greendao.rx.RxTransaction.a` @type ^`org.greenrobot.greendao.AbstractDaoSession` := v1 @kind object;
  #L3934a6.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.greendao.rx.RxTransaction` v0 @kind this, `org.greenrobot.greendao.AbstractDaoSession` v1 @kind object, `rx.Scheduler` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxTransaction;.<init>:(Lorg/greenrobot/greendao/AbstractDaoSession;Lrx/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3934b8.  call `<init>`(v0, v2) @signature `Lorg/greenrobot/greendao/rx/a;.<init>:(Lrx/Scheduler;)V` @kind direct;
  #L3934be.  v0.`org.greenrobot.greendao.rx.RxTransaction.a` @type ^`org.greenrobot.greendao.AbstractDaoSession` := v1 @kind object;
  #L3934c2.  return @kind void;
}
procedure `org.greenrobot.greendao.AbstractDaoSession` `a`(`org.greenrobot.greendao.rx.RxTransaction` v0 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxTransaction;.a:(Lorg/greenrobot/greendao/rx/RxTransaction;)Lorg/greenrobot/greendao/AbstractDaoSession;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L393408.  v0:= v0.`org.greenrobot.greendao.rx.RxTransaction.a` @type ^`org.greenrobot.greendao.AbstractDaoSession` @kind object;
  #L39340c.  return v0 @kind object;
}
procedure `rx.Observable` `call`(`org.greenrobot.greendao.rx.RxTransaction` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxTransaction;.call:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L393438.  v0:= new `org.greenrobot.greendao.rx.RxTransaction$b`;
  #L39343c.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxTransaction$b;.<init>:(Lorg/greenrobot/greendao/rx/RxTransaction;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L393442.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L393448.  v2:= temp @kind object;
  #L39344a.  return v2 @kind object;
}
procedure `org.greenrobot.greendao.AbstractDaoSession` `getDaoSession`(`org.greenrobot.greendao.rx.RxTransaction` v1 @kind this) @signature `Lorg/greenrobot/greendao/rx/RxTransaction;.getDaoSession:()Lorg/greenrobot/greendao/AbstractDaoSession;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L393420.  v0:= v1.`org.greenrobot.greendao.rx.RxTransaction.a` @type ^`org.greenrobot.greendao.AbstractDaoSession` @kind object;
  #L393424.  return v0 @kind object;
}
procedure `rx.Scheduler` `getScheduler`(`org.greenrobot.greendao.rx.RxTransaction` v1 @kind this) @signature `Lorg/greenrobot/greendao/rx/RxTransaction;.getScheduler:()Lrx/Scheduler;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L393480.  call temp:= `getScheduler`(v1) @signature `Lorg/greenrobot/greendao/rx/a;.getScheduler:()Lrx/Scheduler;` @kind super;
  #L393486.  v0:= temp @kind object;
  #L393488.  return v0 @kind object;
}
procedure `rx.Observable` `run`(`org.greenrobot.greendao.rx.RxTransaction` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxTransaction;.run:(Ljava/lang/Runnable;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39345c.  v0:= new `org.greenrobot.greendao.rx.RxTransaction$a`;
  #L393460.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxTransaction$a;.<init>:(Lorg/greenrobot/greendao/rx/RxTransaction;Ljava/lang/Runnable;)V` @kind direct;
  #L393466.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L39346c.  v2:= temp @kind object;
  #L39346e.  return v2 @kind object;
}
