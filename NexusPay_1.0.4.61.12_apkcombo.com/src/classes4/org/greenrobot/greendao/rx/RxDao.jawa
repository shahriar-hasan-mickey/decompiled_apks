record `org.greenrobot.greendao.rx.RxDao` @kind class @AccessFlag PUBLIC extends `org.greenrobot.greendao.rx.a` @kind class {
  `org.greenrobot.greendao.AbstractDao` `org.greenrobot.greendao.rx.RxDao.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `org.greenrobot.greendao.AbstractDao` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.<init>:(Lorg/greenrobot/greendao/AbstractDao;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L393170.  v0:= 0I;
  #L393172.  call `<init>`(v1, v2, v0) @signature `Lorg/greenrobot/greendao/rx/RxDao;.<init>:(Lorg/greenrobot/greendao/AbstractDao;Lrx/Scheduler;)V` @kind direct;
  #L393178.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.greendao.rx.RxDao` v0 @kind this, `org.greenrobot.greendao.AbstractDao` v1 @kind object, `rx.Scheduler` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.<init>:(Lorg/greenrobot/greendao/AbstractDao;Lrx/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39318c.  call `<init>`(v0, v2) @signature `Lorg/greenrobot/greendao/rx/a;.<init>:(Lrx/Scheduler;)V` @kind direct;
  #L393192.  v0.`org.greenrobot.greendao.rx.RxDao.a` @type ^`org.greenrobot.greendao.AbstractDao` := v1 @kind object;
  #L393196.  return @kind void;
}
procedure `org.greenrobot.greendao.AbstractDao` `a`(`org.greenrobot.greendao.rx.RxDao` v0 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.a:(Lorg/greenrobot/greendao/rx/RxDao;)Lorg/greenrobot/greendao/AbstractDao;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L392de8.  v0:= v0.`org.greenrobot.greendao.rx.RxDao.a` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L392dec.  return v0 @kind object;
}
procedure `rx.Observable` `count`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this) @signature `Lorg/greenrobot/greendao/rx/RxDao;.count:()Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392e18.  v0:= new `org.greenrobot.greendao.rx.RxDao$o`;
  #L392e1c.  call `<init>`(v0, v1) @signature `Lorg/greenrobot/greendao/rx/RxDao$o;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;)V` @kind direct;
  #L392e22.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L392e28.  v0:= temp @kind object;
  #L392e2a.  return v0 @kind object;
}
procedure `rx.Observable` `delete`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.delete:(Ljava/lang/Object;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392e3c.  v0:= new `org.greenrobot.greendao.rx.RxDao$g`;
  #L392e40.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$g;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;Ljava/lang/Object;)V` @kind direct;
  #L392e46.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L392e4c.  v2:= temp @kind object;
  #L392e4e.  return v2 @kind object;
}
procedure `rx.Observable` `deleteAll`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this) @signature `Lorg/greenrobot/greendao/rx/RxDao;.deleteAll:()Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392e60.  v0:= new `org.greenrobot.greendao.rx.RxDao$i`;
  #L392e64.  call `<init>`(v0, v1) @signature `Lorg/greenrobot/greendao/rx/RxDao$i;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;)V` @kind direct;
  #L392e6a.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L392e70.  v0:= temp @kind object;
  #L392e72.  return v0 @kind object;
}
procedure `rx.Observable` `deleteByKey`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.deleteByKey:(Ljava/lang/Object;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392e84.  v0:= new `org.greenrobot.greendao.rx.RxDao$h`;
  #L392e88.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$h;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;Ljava/lang/Object;)V` @kind direct;
  #L392e8e.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L392e94.  v2:= temp @kind object;
  #L392e96.  return v2 @kind object;
}
procedure `rx.Observable` `deleteByKeyInTx`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Iterable` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.deleteByKeyInTx:(Ljava/lang/Iterable;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392ea8.  v0:= new `org.greenrobot.greendao.rx.RxDao$m`;
  #L392eac.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$m;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;Ljava/lang/Iterable;)V` @kind direct;
  #L392eb2.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L392eb8.  v2:= temp @kind object;
  #L392eba.  return v2 @kind object;
}
procedure `rx.Observable` `deleteByKeyInTx`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.deleteByKeyInTx:([Ljava/lang/Object;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392ecc.  v0:= new `org.greenrobot.greendao.rx.RxDao$n`;
  #L392ed0.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$n;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;[Ljava/lang/Object;)V` @kind direct;
  #L392ed6.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L392edc.  v2:= temp @kind object;
  #L392ede.  return v2 @kind object;
}
procedure `rx.Observable` `deleteInTx`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Iterable` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.deleteInTx:(Ljava/lang/Iterable;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392ef0.  v0:= new `org.greenrobot.greendao.rx.RxDao$j`;
  #L392ef4.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$j;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;Ljava/lang/Iterable;)V` @kind direct;
  #L392efa.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L392f00.  v2:= temp @kind object;
  #L392f02.  return v2 @kind object;
}
procedure `rx.Observable` `deleteInTx`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.deleteInTx:([Ljava/lang/Object;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392f14.  v0:= new `org.greenrobot.greendao.rx.RxDao$l`;
  #L392f18.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$l;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;[Ljava/lang/Object;)V` @kind direct;
  #L392f1e.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L392f24.  v2:= temp @kind object;
  #L392f26.  return v2 @kind object;
}
procedure `org.greenrobot.greendao.AbstractDao` `getDao`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this) @signature `Lorg/greenrobot/greendao/rx/RxDao;.getDao:()Lorg/greenrobot/greendao/AbstractDao;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392e00.  v0:= v1.`org.greenrobot.greendao.rx.RxDao.a` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L392e04.  return v0 @kind object;
}
procedure `rx.Scheduler` `getScheduler`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this) @signature `Lorg/greenrobot/greendao/rx/RxDao;.getScheduler:()Lrx/Scheduler;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L393154.  call temp:= `getScheduler`(v1) @signature `Lorg/greenrobot/greendao/rx/a;.getScheduler:()Lrx/Scheduler;` @kind super;
  #L39315a.  v0:= temp @kind object;
  #L39315c.  return v0 @kind object;
}
procedure `rx.Observable` `insert`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.insert:(Ljava/lang/Object;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392f38.  v0:= new `org.greenrobot.greendao.rx.RxDao$r`;
  #L392f3c.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$r;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;Ljava/lang/Object;)V` @kind direct;
  #L392f42.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L392f48.  v2:= temp @kind object;
  #L392f4a.  return v2 @kind object;
}
procedure `rx.Observable` `insertInTx`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Iterable` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.insertInTx:(Ljava/lang/Iterable;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392f5c.  v0:= new `org.greenrobot.greendao.rx.RxDao$s`;
  #L392f60.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$s;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;Ljava/lang/Iterable;)V` @kind direct;
  #L392f66.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L392f6c.  v2:= temp @kind object;
  #L392f6e.  return v2 @kind object;
}
procedure `rx.Observable` `insertInTx`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.insertInTx:([Ljava/lang/Object;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392f80.  v0:= new `org.greenrobot.greendao.rx.RxDao$t`;
  #L392f84.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$t;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;[Ljava/lang/Object;)V` @kind direct;
  #L392f8a.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L392f90.  v2:= temp @kind object;
  #L392f92.  return v2 @kind object;
}
procedure `rx.Observable` `insertOrReplace`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.insertOrReplace:(Ljava/lang/Object;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392fa4.  v0:= new `org.greenrobot.greendao.rx.RxDao$u`;
  #L392fa8.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$u;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;Ljava/lang/Object;)V` @kind direct;
  #L392fae.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L392fb4.  v2:= temp @kind object;
  #L392fb6.  return v2 @kind object;
}
procedure `rx.Observable` `insertOrReplaceInTx`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Iterable` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.insertOrReplaceInTx:(Ljava/lang/Iterable;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392fc8.  v0:= new `org.greenrobot.greendao.rx.RxDao$v`;
  #L392fcc.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$v;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;Ljava/lang/Iterable;)V` @kind direct;
  #L392fd2.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L392fd8.  v2:= temp @kind object;
  #L392fda.  return v2 @kind object;
}
procedure `rx.Observable` `insertOrReplaceInTx`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.insertOrReplaceInTx:([Ljava/lang/Object;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392fec.  v0:= new `org.greenrobot.greendao.rx.RxDao$w`;
  #L392ff0.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$w;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;[Ljava/lang/Object;)V` @kind direct;
  #L392ff6.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L392ffc.  v2:= temp @kind object;
  #L392ffe.  return v2 @kind object;
}
procedure `rx.Observable` `load`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.load:(Ljava/lang/Object;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L393010.  v0:= new `org.greenrobot.greendao.rx.RxDao$p`;
  #L393014.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$p;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;Ljava/lang/Object;)V` @kind direct;
  #L39301a.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L393020.  v2:= temp @kind object;
  #L393022.  return v2 @kind object;
}
procedure `rx.Observable` `loadAll`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this) @signature `Lorg/greenrobot/greendao/rx/RxDao;.loadAll:()Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L393034.  v0:= new `org.greenrobot.greendao.rx.RxDao$k`;
  #L393038.  call `<init>`(v0, v1) @signature `Lorg/greenrobot/greendao/rx/RxDao$k;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;)V` @kind direct;
  #L39303e.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L393044.  v0:= temp @kind object;
  #L393046.  return v0 @kind object;
}
procedure `rx.Observable` `refresh`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.refresh:(Ljava/lang/Object;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L393058.  v0:= new `org.greenrobot.greendao.rx.RxDao$q`;
  #L39305c.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$q;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;Ljava/lang/Object;)V` @kind direct;
  #L393062.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L393068.  v2:= temp @kind object;
  #L39306a.  return v2 @kind object;
}
procedure `rx.Observable` `save`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.save:(Ljava/lang/Object;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39307c.  v0:= new `org.greenrobot.greendao.rx.RxDao$a`;
  #L393080.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$a;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;Ljava/lang/Object;)V` @kind direct;
  #L393086.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L39308c.  v2:= temp @kind object;
  #L39308e.  return v2 @kind object;
}
procedure `rx.Observable` `saveInTx`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Iterable` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.saveInTx:(Ljava/lang/Iterable;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3930a0.  v0:= new `org.greenrobot.greendao.rx.RxDao$b`;
  #L3930a4.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$b;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;Ljava/lang/Iterable;)V` @kind direct;
  #L3930aa.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L3930b0.  v2:= temp @kind object;
  #L3930b2.  return v2 @kind object;
}
procedure `rx.Observable` `saveInTx`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.saveInTx:([Ljava/lang/Object;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3930c4.  v0:= new `org.greenrobot.greendao.rx.RxDao$c`;
  #L3930c8.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$c;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;[Ljava/lang/Object;)V` @kind direct;
  #L3930ce.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L3930d4.  v2:= temp @kind object;
  #L3930d6.  return v2 @kind object;
}
procedure `rx.Observable` `update`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.update:(Ljava/lang/Object;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3930e8.  v0:= new `org.greenrobot.greendao.rx.RxDao$d`;
  #L3930ec.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$d;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;Ljava/lang/Object;)V` @kind direct;
  #L3930f2.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L3930f8.  v2:= temp @kind object;
  #L3930fa.  return v2 @kind object;
}
procedure `rx.Observable` `updateInTx`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Iterable` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.updateInTx:(Ljava/lang/Iterable;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39310c.  v0:= new `org.greenrobot.greendao.rx.RxDao$e`;
  #L393110.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$e;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;Ljava/lang/Iterable;)V` @kind direct;
  #L393116.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L39311c.  v2:= temp @kind object;
  #L39311e.  return v2 @kind object;
}
procedure `rx.Observable` `updateInTx`(`org.greenrobot.greendao.rx.RxDao` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxDao;.updateInTx:([Ljava/lang/Object;)Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L393130.  v0:= new `org.greenrobot.greendao.rx.RxDao$f`;
  #L393134.  call `<init>`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/rx/RxDao$f;.<init>:(Lorg/greenrobot/greendao/rx/RxDao;[Ljava/lang/Object;)V` @kind direct;
  #L39313a.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L393140.  v2:= temp @kind object;
  #L393142.  return v2 @kind object;
}
