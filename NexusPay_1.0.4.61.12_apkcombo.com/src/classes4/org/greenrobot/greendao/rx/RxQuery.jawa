record `org.greenrobot.greendao.rx.RxQuery` @kind class @AccessFlag PUBLIC extends `org.greenrobot.greendao.rx.a` @kind class {
  `org.greenrobot.greendao.query.Query` `org.greenrobot.greendao.rx.RxQuery.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.greenrobot.greendao.rx.RxQuery` v0 @kind this, `org.greenrobot.greendao.query.Query` v1 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxQuery;.<init>:(Lorg/greenrobot/greendao/query/Query;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39331c.  call `<init>`(v0) @signature `Lorg/greenrobot/greendao/rx/a;.<init>:()V` @kind direct;
  #L393322.  v0.`org.greenrobot.greendao.rx.RxQuery.a` @type ^`org.greenrobot.greendao.query.Query` := v1 @kind object;
  #L393326.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.greendao.rx.RxQuery` v0 @kind this, `org.greenrobot.greendao.query.Query` v1 @kind object, `rx.Scheduler` v2 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxQuery;.<init>:(Lorg/greenrobot/greendao/query/Query;Lrx/Scheduler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L393338.  call `<init>`(v0, v2) @signature `Lorg/greenrobot/greendao/rx/a;.<init>:(Lrx/Scheduler;)V` @kind direct;
  #L39333e.  v0.`org.greenrobot.greendao.rx.RxQuery.a` @type ^`org.greenrobot.greendao.query.Query` := v1 @kind object;
  #L393342.  return @kind void;
}
procedure `org.greenrobot.greendao.query.Query` `a`(`org.greenrobot.greendao.rx.RxQuery` v0 @kind object) @signature `Lorg/greenrobot/greendao/rx/RxQuery;.a:(Lorg/greenrobot/greendao/rx/RxQuery;)Lorg/greenrobot/greendao/query/Query;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L393274.  v0:= v0.`org.greenrobot.greendao.rx.RxQuery.a` @type ^`org.greenrobot.greendao.query.Query` @kind object;
  #L393278.  return v0 @kind object;
}
procedure `rx.Scheduler` `getScheduler`(`org.greenrobot.greendao.rx.RxQuery` v1 @kind this) @signature `Lorg/greenrobot/greendao/rx/RxQuery;.getScheduler:()Lrx/Scheduler;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L393300.  call temp:= `getScheduler`(v1) @signature `Lorg/greenrobot/greendao/rx/a;.getScheduler:()Lrx/Scheduler;` @kind super;
  #L393306.  v0:= temp @kind object;
  #L393308.  return v0 @kind object;
}
procedure `rx.Observable` `list`(`org.greenrobot.greendao.rx.RxQuery` v1 @kind this) @signature `Lorg/greenrobot/greendao/rx/RxQuery;.list:()Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39328c.  v0:= new `org.greenrobot.greendao.rx.RxQuery$a`;
  #L393290.  call `<init>`(v0, v1) @signature `Lorg/greenrobot/greendao/rx/RxQuery$a;.<init>:(Lorg/greenrobot/greendao/rx/RxQuery;)V` @kind direct;
  #L393296.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L39329c.  v0:= temp @kind object;
  #L39329e.  return v0 @kind object;
}
procedure `rx.Observable` `oneByOne`(`org.greenrobot.greendao.rx.RxQuery` v1 @kind this) @signature `Lorg/greenrobot/greendao/rx/RxQuery;.oneByOne:()Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3932b0.  v0:= new `org.greenrobot.greendao.rx.RxQuery$c`;
  #L3932b4.  call `<init>`(v0, v1) @signature `Lorg/greenrobot/greendao/rx/RxQuery$c;.<init>:(Lorg/greenrobot/greendao/rx/RxQuery;)V` @kind direct;
  #L3932ba.  call temp:= `create`(v0) @signature `Lrx/Observable;.create:(Lrx/Observable$OnSubscribe;)Lrx/Observable;` @kind static;
  #L3932c0.  v0:= temp @kind object;
  #L3932c2.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Lrx/Observable;)Lrx/Observable;` @kind virtual;
  #L3932c8.  v0:= temp @kind object;
  #L3932ca.  return v0 @kind object;
}
procedure `rx.Observable` `unique`(`org.greenrobot.greendao.rx.RxQuery` v1 @kind this) @signature `Lorg/greenrobot/greendao/rx/RxQuery;.unique:()Lrx/Observable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3932dc.  v0:= new `org.greenrobot.greendao.rx.RxQuery$b`;
  #L3932e0.  call `<init>`(v0, v1) @signature `Lorg/greenrobot/greendao/rx/RxQuery$b;.<init>:(Lorg/greenrobot/greendao/rx/RxQuery;)V` @kind direct;
  #L3932e6.  call temp:= `wrap`(v1, v0) @signature `Lorg/greenrobot/greendao/rx/a;.wrap:(Ljava/util/concurrent/Callable;)Lrx/Observable;` @kind virtual;
  #L3932ec.  v0:= temp @kind object;
  #L3932ee.  return v0 @kind object;
}
