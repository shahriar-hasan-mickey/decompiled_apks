record `org.greenrobot.greendao.async.AsyncOperation` @kind class @AccessFlag PUBLIC {
  `org.greenrobot.greendao.async.AsyncOperation$OperationType` `org.greenrobot.greendao.async.AsyncOperation.a` @AccessFlag FINAL;
  `org.greenrobot.greendao.AbstractDao` `org.greenrobot.greendao.async.AsyncOperation.b` @AccessFlag FINAL;
  `org.greenrobot.greendao.database.Database` `org.greenrobot.greendao.async.AsyncOperation.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `org.greenrobot.greendao.async.AsyncOperation.d` @AccessFlag FINAL;
  `int` `org.greenrobot.greendao.async.AsyncOperation.e` @AccessFlag FINAL;
  `long` `org.greenrobot.greendao.async.AsyncOperation.f` @AccessFlag VOLATILE;
  `long` `org.greenrobot.greendao.async.AsyncOperation.g` @AccessFlag VOLATILE;
  `boolean` `org.greenrobot.greendao.async.AsyncOperation.h` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.Throwable` `org.greenrobot.greendao.async.AsyncOperation.i` @AccessFlag VOLATILE;
  `java.lang.Exception` `org.greenrobot.greendao.async.AsyncOperation.j` @AccessFlag FINAL;
  `java.lang.Object` `org.greenrobot.greendao.async.AsyncOperation.k` @AccessFlag VOLATILE;
  `int` `org.greenrobot.greendao.async.AsyncOperation.l` @AccessFlag VOLATILE;
  `int` `org.greenrobot.greendao.async.AsyncOperation.m` @AccessFlag ;
}
global `int` `@@org.greenrobot.greendao.async.AsyncOperation.FLAG_MERGE_TX` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.greenrobot.greendao.async.AsyncOperation.FLAG_STOP_QUEUE_ON_EXCEPTION` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.greenrobot.greendao.async.AsyncOperation.FLAG_TRACK_CREATOR_STACKTRACE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`org.greenrobot.greendao.async.AsyncOperation` v0 @kind this, `org.greenrobot.greendao.async.AsyncOperation$OperationType` v1 @kind object, `org.greenrobot.greendao.AbstractDao` v2 @kind object, `org.greenrobot.greendao.database.Database` v3 @kind object, `java.lang.Object` v4 @kind object, `int` v5 ) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.<init>:(Lorg/greenrobot/greendao/async/AsyncOperation$OperationType;Lorg/greenrobot/greendao/AbstractDao;Lorg/greenrobot/greendao/database/Database;Ljava/lang/Object;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L38cca4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38ccaa.  v0.`org.greenrobot.greendao.async.AsyncOperation.a` @type ^`org.greenrobot.greendao.async.AsyncOperation$OperationType` := v1 @kind object;
  #L38ccae.  v0.`org.greenrobot.greendao.async.AsyncOperation.e` @type ^`int` := v5;
  #L38ccb2.  v0.`org.greenrobot.greendao.async.AsyncOperation.b` @type ^`org.greenrobot.greendao.AbstractDao` := v2 @kind object;
  #L38ccb6.  v0.`org.greenrobot.greendao.async.AsyncOperation.c` @type ^`org.greenrobot.greendao.database.Database` := v3 @kind object;
  #L38ccba.  v0.`org.greenrobot.greendao.async.AsyncOperation.d` @type ^`java.lang.Object` := v4 @kind object;
  #L38ccbe.  v1:= v5 ^& 4;
  #L38ccc2.  if v1 == 0 then goto L38ccd6;
  #L38ccc6.  v1:= new `java.lang.Exception`;
  #L38ccca.  v2:= "AsyncOperation was created here" @kind object;
  #L38ccce.  call `<init>`(v1, v2) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38ccd4.  goto L38ccd8;
  #L38ccd6.  v1:= 0I;
  #L38ccd8.  v0.`org.greenrobot.greendao.async.AsyncOperation.j` @type ^`java.lang.Exception` := v1 @kind object;
  #L38ccdc.  return @kind void;
}
procedure `org.greenrobot.greendao.database.Database` `a`(`org.greenrobot.greendao.async.AsyncOperation` v1 @kind this) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.a:()Lorg/greenrobot/greendao/database/Database;` @AccessFlag  {
    temp;
    v0;

  #L38cc7c.  v0:= v1.`org.greenrobot.greendao.async.AsyncOperation.c` @type ^`org.greenrobot.greendao.database.Database` @kind object;
  #L38cc80.  if v0 == 0 then goto L38cc86;
  #L38cc84.  goto L38cc92;
  #L38cc86.  v0:= v1.`org.greenrobot.greendao.async.AsyncOperation.b` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L38cc8a.  call temp:= `getDatabase`(v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.getDatabase:()Lorg/greenrobot/greendao/database/Database;` @kind virtual;
  #L38cc90.  v0:= temp @kind object;
  #L38cc92.  return v0 @kind object;
}
procedure `boolean` `b`(`org.greenrobot.greendao.async.AsyncOperation` v1 @kind this, `org.greenrobot.greendao.async.AsyncOperation` v2 @kind object) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.b:(Lorg/greenrobot/greendao/async/AsyncOperation;)Z` @AccessFlag  {
    temp;
    v0;

  #L38ca14.  if v2 == 0 then goto L38ca48;
  #L38ca18.  call temp:= `isMergeTx`(v1) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.isMergeTx:()Z` @kind virtual;
  #L38ca1e.  v0:= temp;
  #L38ca20.  if v0 == 0 then goto L38ca48;
  #L38ca24.  call temp:= `isMergeTx`(v2) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.isMergeTx:()Z` @kind virtual;
  #L38ca2a.  v0:= temp;
  #L38ca2c.  if v0 == 0 then goto L38ca48;
  #L38ca30.  call temp:= `a`(v1) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.a:()Lorg/greenrobot/greendao/database/Database;` @kind virtual;
  #L38ca36.  v0:= temp @kind object;
  #L38ca38.  call temp:= `a`(v2) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.a:()Lorg/greenrobot/greendao/database/Database;` @kind virtual;
  #L38ca3e.  v2:= temp @kind object;
  #L38ca40.  if v0 != v2 then goto L38ca48;
  #L38ca44.  v2:= 1I;
  #L38ca46.  goto L38ca4a;
  #L38ca48.  v2:= 0I;
  #L38ca4a.  return v2;
}
procedure `void` `c`(`org.greenrobot.greendao.async.AsyncOperation` v2 @kind this) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.c:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L38ccf0.  v0:= 0L;
  #L38ccf4.  v2.`org.greenrobot.greendao.async.AsyncOperation.f` @type ^`long` := v0 @kind wide;
  #L38ccf8.  v2.`org.greenrobot.greendao.async.AsyncOperation.g` @type ^`long` := v0 @kind wide;
  #L38ccfc.  v0:= 0I;
  #L38ccfe.  v2.`org.greenrobot.greendao.async.AsyncOperation.h` @type ^`boolean` := v0 @kind boolean;
  #L38cd02.  v1:= 0I;
  #L38cd04.  v2.`org.greenrobot.greendao.async.AsyncOperation.i` @type ^`java.lang.Throwable` := v1 @kind object;
  #L38cd08.  v2.`org.greenrobot.greendao.async.AsyncOperation.k` @type ^`java.lang.Object` := v1 @kind object;
  #L38cd0c.  v2.`org.greenrobot.greendao.async.AsyncOperation.l` @type ^`int` := v0;
  #L38cd10.  return @kind void;
}
procedure `void` `d`(`org.greenrobot.greendao.async.AsyncOperation` v1 @kind this) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.d:()V` @AccessFlag  {
    temp;
    v0;

  #L38cd24.  @monitorenter v1
  #L38cd26.  v0:= 1I;
  #L38cd28.  v1.`org.greenrobot.greendao.async.AsyncOperation.h` @type ^`boolean` := v0 @kind boolean;
  #L38cd2c.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L38cd32.  @monitorexit v1
  #L38cd34.  return @kind void;
  #L38cd36.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38cd38.  @monitorexit v1
  #L38cd3a.  throw v0;
  catch `java.lang.Throwable` @[L38cd28..L38cd32] goto L38cd36;
}
procedure `java.lang.Exception` `getCreatorStacktrace`(`org.greenrobot.greendao.async.AsyncOperation` v1 @kind this) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.getCreatorStacktrace:()Ljava/lang/Exception;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38caf0.  v0:= v1.`org.greenrobot.greendao.async.AsyncOperation.j` @type ^`java.lang.Exception` @kind object;
  #L38caf4.  return v0 @kind object;
}
procedure `long` `getDuration`(`org.greenrobot.greendao.async.AsyncOperation` v5 @kind this) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.getDuration:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L38cbf8.  v0:= v5.`org.greenrobot.greendao.async.AsyncOperation.g` @type ^`long` @kind wide;
  #L38cbfc.  v2:= 0L;
  #L38cc00.  v4:= lcmp(v0, v2);
  #L38cc04.  if v4 == 0 then goto L38cc14;
  #L38cc08.  v0:= v5.`org.greenrobot.greendao.async.AsyncOperation.g` @type ^`long` @kind wide;
  #L38cc0c.  v2:= v5.`org.greenrobot.greendao.async.AsyncOperation.f` @type ^`long` @kind wide;
  #L38cc10.  v0:= v0 - v2 @kind long;
  #L38cc12.  return v0 @kind wide;
  #L38cc14.  v0:= new `org.greenrobot.greendao.DaoException`;
  #L38cc18.  v1:= "This operation did not yet complete" @kind object;
  #L38cc1c.  call `<init>`(v0, v1) @signature `Lorg/greenrobot/greendao/DaoException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38cc22.  throw v0;
}
procedure `int` `getMergedOperationsCount`(`org.greenrobot.greendao.async.AsyncOperation` v1 @kind this) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.getMergedOperationsCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38cac0.  v0:= v1.`org.greenrobot.greendao.async.AsyncOperation.l` @type ^`int`;
  #L38cac4.  return v0;
}
procedure `java.lang.Object` `getParameter`(`org.greenrobot.greendao.async.AsyncOperation` v1 @kind this) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.getParameter:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38cb08.  v0:= v1.`org.greenrobot.greendao.async.AsyncOperation.d` @type ^`java.lang.Object` @kind object;
  #L38cb0c.  return v0 @kind object;
}
procedure `java.lang.Object` `getResult`(`org.greenrobot.greendao.async.AsyncOperation` v2 @kind this) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.getResult:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38cb20.  @monitorenter v2
  #L38cb22.  v0:= v2.`org.greenrobot.greendao.async.AsyncOperation.h` @type ^`boolean` @kind boolean;
  #L38cb26.  if v0 != 0 then goto L38cb30;
  #L38cb2a.  call temp:= `waitForCompletion`(v2) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.waitForCompletion:()Ljava/lang/Object;` @kind virtual;
  #L38cb30.  v0:= v2.`org.greenrobot.greendao.async.AsyncOperation.i` @type ^`java.lang.Throwable` @kind object;
  #L38cb34.  if v0 != 0 then goto L38cb40;
  #L38cb38.  v0:= v2.`org.greenrobot.greendao.async.AsyncOperation.k` @type ^`java.lang.Object` @kind object;
  #L38cb3c.  @monitorexit v2
  #L38cb3e.  return v0 @kind object;
  #L38cb40.  v0:= new `org.greenrobot.greendao.async.AsyncDaoException`;
  #L38cb44.  v1:= v2.`org.greenrobot.greendao.async.AsyncOperation.i` @type ^`java.lang.Throwable` @kind object;
  #L38cb48.  call `<init>`(v0, v2, v1) @signature `Lorg/greenrobot/greendao/async/AsyncDaoException;.<init>:(Lorg/greenrobot/greendao/async/AsyncOperation;Ljava/lang/Throwable;)V` @kind direct;
  #L38cb4e.  throw v0;
  #L38cb50.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38cb52.  @monitorexit v2
  #L38cb54.  throw v0;
  catch `java.lang.Throwable` @[L38cb22..L38cb3c] goto L38cb50;
  catch `java.lang.Throwable` @[L38cb40..L38cb50] goto L38cb50;
}
procedure `int` `getSequenceNumber`(`org.greenrobot.greendao.async.AsyncOperation` v1 @kind this) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.getSequenceNumber:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38cad8.  v0:= v1.`org.greenrobot.greendao.async.AsyncOperation.m` @type ^`int`;
  #L38cadc.  return v0;
}
procedure `java.lang.Throwable` `getThrowable`(`org.greenrobot.greendao.async.AsyncOperation` v1 @kind this) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.getThrowable:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38cbe0.  v0:= v1.`org.greenrobot.greendao.async.AsyncOperation.i` @type ^`java.lang.Throwable` @kind object;
  #L38cbe4.  return v0 @kind object;
}
procedure `long` `getTimeCompleted`(`org.greenrobot.greendao.async.AsyncOperation` v2 @kind this) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.getTimeCompleted:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38cc34.  v0:= v2.`org.greenrobot.greendao.async.AsyncOperation.g` @type ^`long` @kind wide;
  #L38cc38.  return v0 @kind wide;
}
procedure `long` `getTimeStarted`(`org.greenrobot.greendao.async.AsyncOperation` v2 @kind this) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.getTimeStarted:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38cc4c.  v0:= v2.`org.greenrobot.greendao.async.AsyncOperation.f` @type ^`long` @kind wide;
  #L38cc50.  return v0 @kind wide;
}
procedure `org.greenrobot.greendao.async.AsyncOperation$OperationType` `getType`(`org.greenrobot.greendao.async.AsyncOperation` v1 @kind this) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.getType:()Lorg/greenrobot/greendao/async/AsyncOperation$OperationType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38cc64.  v0:= v1.`org.greenrobot.greendao.async.AsyncOperation.a` @type ^`org.greenrobot.greendao.async.AsyncOperation$OperationType` @kind object;
  #L38cc68.  return v0 @kind object;
}
procedure `boolean` `isCompleted`(`org.greenrobot.greendao.async.AsyncOperation` v1 @kind this) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.isCompleted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38c990.  v0:= v1.`org.greenrobot.greendao.async.AsyncOperation.h` @type ^`boolean` @kind boolean;
  #L38c994.  return v0;
}
procedure `boolean` `isCompletedSucessfully`(`org.greenrobot.greendao.async.AsyncOperation` v1 @kind this) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.isCompletedSucessfully:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38c9a8.  v0:= v1.`org.greenrobot.greendao.async.AsyncOperation.h` @type ^`boolean` @kind boolean;
  #L38c9ac.  if v0 == 0 then goto L38c9bc;
  #L38c9b0.  v0:= v1.`org.greenrobot.greendao.async.AsyncOperation.i` @type ^`java.lang.Throwable` @kind object;
  #L38c9b4.  if v0 != 0 then goto L38c9bc;
  #L38c9b8.  v0:= 1I;
  #L38c9ba.  goto L38c9be;
  #L38c9bc.  v0:= 0I;
  #L38c9be.  return v0;
}
procedure `boolean` `isFailed`(`org.greenrobot.greendao.async.AsyncOperation` v1 @kind this) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.isFailed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38c9d0.  v0:= v1.`org.greenrobot.greendao.async.AsyncOperation.i` @type ^`java.lang.Throwable` @kind object;
  #L38c9d4.  if v0 == 0 then goto L38c9dc;
  #L38c9d8.  v0:= 1I;
  #L38c9da.  goto L38c9de;
  #L38c9dc.  v0:= 0I;
  #L38c9de.  return v0;
}
procedure `boolean` `isMergeTx`(`org.greenrobot.greendao.async.AsyncOperation` v2 @kind this) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.isMergeTx:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38c9f0.  v0:= v2.`org.greenrobot.greendao.async.AsyncOperation.e` @type ^`int`;
  #L38c9f4.  v1:= 1I;
  #L38c9f6.  v0:= v0 ^& v1 @kind int;
  #L38c9f8.  if v0 == 0 then goto L38c9fe;
  #L38c9fc.  goto L38ca00;
  #L38c9fe.  v1:= 0I;
  #L38ca00.  return v1;
}
procedure `void` `setThrowable`(`org.greenrobot.greendao.async.AsyncOperation` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.setThrowable:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L38cd58.  v0.`org.greenrobot.greendao.async.AsyncOperation.i` @type ^`java.lang.Throwable` := v1 @kind object;
  #L38cd5c.  return @kind void;
}
procedure `java.lang.Object` `waitForCompletion`(`org.greenrobot.greendao.async.AsyncOperation` v3 @kind this) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.waitForCompletion:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L38cb7c.  @monitorenter v3
  #L38cb7e.  v0:= v3.`org.greenrobot.greendao.async.AsyncOperation.h` @type ^`boolean` @kind boolean;
  #L38cb82.  if v0 != 0 then goto L38cba0;
  #L38cb86.  call `wait`(v3) @signature `Ljava/lang/Object;.wait:()V` @kind virtual;
  #L38cb8c.  goto L38cb7e;
  #L38cb8e.  v0:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L38cb90.  v1:= new `org.greenrobot.greendao.DaoException`;
  #L38cb94.  v2:= "Interrupted while waiting for operation to complete" @kind object;
  #L38cb98.  call `<init>`(v1, v2, v0) @signature `Lorg/greenrobot/greendao/DaoException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L38cb9e.  throw v1;
  #L38cba0.  v0:= v3.`org.greenrobot.greendao.async.AsyncOperation.k` @type ^`java.lang.Object` @kind object;
  #L38cba4.  @monitorexit v3
  #L38cba6.  return v0 @kind object;
  #L38cba8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38cbaa.  @monitorexit v3
  #L38cbac.  throw v0;
  catch `java.lang.Throwable` @[L38cb7e..L38cb82] goto L38cba8;
  catch `java.lang.InterruptedException` @[L38cb86..L38cb8c] goto L38cb8e;
  catch `java.lang.Throwable` @[L38cb86..L38cb8c] goto L38cba8;
  catch `java.lang.Throwable` @[L38cb90..L38cba4] goto L38cba8;
}
procedure `boolean` `waitForCompletion`(`org.greenrobot.greendao.async.AsyncOperation` v2 @kind this, `int` v3 ) @signature `Lorg/greenrobot/greendao/async/AsyncOperation;.waitForCompletion:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38ca5c.  @monitorenter v2
  #L38ca5e.  v0:= v2.`org.greenrobot.greendao.async.AsyncOperation.h` @type ^`boolean` @kind boolean;
  #L38ca62.  if v0 != 0 then goto L38ca82;
  #L38ca66.  v0:= (`long`) v3 @kind i2l;
  #L38ca68.  call `wait`(v2, v0) @signature `Ljava/lang/Object;.wait:(J)V` @kind virtual;
  #L38ca6e.  goto L38ca82;
  #L38ca70.  v3:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L38ca72.  v0:= new `org.greenrobot.greendao.DaoException`;
  #L38ca76.  v1:= "Interrupted while waiting for operation to complete" @kind object;
  #L38ca7a.  call `<init>`(v0, v1, v3) @signature `Lorg/greenrobot/greendao/DaoException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L38ca80.  throw v0;
  #L38ca82.  v3:= v2.`org.greenrobot.greendao.async.AsyncOperation.h` @type ^`boolean` @kind boolean;
  #L38ca86.  @monitorexit v2
  #L38ca88.  return v3;
  #L38ca8a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38ca8c.  @monitorexit v2
  #L38ca8e.  throw v3;
  catch `java.lang.Throwable` @[L38ca5e..L38ca62] goto L38ca8a;
  catch `java.lang.InterruptedException` @[L38ca68..L38ca6e] goto L38ca70;
  catch `java.lang.Throwable` @[L38ca68..L38ca6e] goto L38ca8a;
  catch `java.lang.Throwable` @[L38ca72..L38ca86] goto L38ca8a;
}
