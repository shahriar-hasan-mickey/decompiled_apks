record `org.greenrobot.greendao.test.AbstractDaoTestSinglePk` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.greenrobot.greendao.test.AbstractDaoTest` @kind class {
  `org.greenrobot.greendao.Property` `org.greenrobot.greendao.test.AbstractDaoTestSinglePk.b` @AccessFlag PRIVATE;
  `java.util.Set` `org.greenrobot.greendao.test.AbstractDaoTestSinglePk.usedPks` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.<init>:(Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39395c.  call `<init>`(v0, v1) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTest;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L393962.  v1:= new `java.util.HashSet`;
  #L393966.  call `<init>`(v1) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L39396c.  v0.`org.greenrobot.greendao.test.AbstractDaoTestSinglePk.usedPks` @type ^`java.util.Set` := v1 @kind object;
  #L393970.  return @kind void;
}
procedure `boolean` `checkKeyIsNullable`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v1 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.checkKeyIsNullable:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3938bc.  v0:= 0I;
  #L3938be.  call temp:= `createEntity`(v1, v0) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntity:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3938c4.  v0:= temp @kind object;
  #L3938c6.  if v0 != 0 then goto L3938d8;
  #L3938ca.  v0:= "Test is not available for entities with non-null keys" @kind object;
  #L3938ce.  call temp:= `d`(v0) @signature `Lorg/greenrobot/greendao/DaoLog;.d:(Ljava/lang/String;)I` @kind static;
  #L3938d4.  v0:= 0I;
  #L3938d6.  return v0;
  #L3938d8.  v0:= 1I;
  #L3938da.  return v0;
}
procedure `java.lang.Object` `createEntity`(`java.lang.Object` v0 @kind object) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntity:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `createEntityWithRandomPk`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v1 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntityWithRandomPk:()Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3938ec.  call temp:= `nextPk`(v1) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.nextPk:()Ljava/lang/Object;` @kind virtual;
  #L3938f2.  v0:= temp @kind object;
  #L3938f4.  call temp:= `createEntity`(v1, v0) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntity:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3938fa.  v0:= temp @kind object;
  #L3938fc.  return v0 @kind object;
}
procedure `java.lang.Object` `createRandomPk`() @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createRandomPk:()Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `nextPk`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v3 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.nextPk:()Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L393910.  v0:= 0I;
  #L393912.  v1:= 100000I;
  #L393918.  if v0 >= v1 then goto L39393c;
  #L39391c.  call temp:= `createRandomPk`(v3) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createRandomPk:()Ljava/lang/Object;` @kind virtual;
  #L393922.  v1:= temp @kind object;
  #L393924.  v2:= v3.`org.greenrobot.greendao.test.AbstractDaoTestSinglePk.usedPks` @type ^`java.util.Set` @kind object;
  #L393928.  call temp:= `add`(v2, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39392e.  v2:= temp;
  #L393930.  if v2 == 0 then goto L393936;
  #L393934.  return v1 @kind object;
  #L393936.  v0:= v0 + 1;
  #L39393a.  goto L393912;
  #L39393c.  v0:= new `java.lang.IllegalStateException`;
  #L393940.  v1:= "Could not find a new PK" @kind object;
  #L393944.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39394a.  throw v0;
}
procedure `android.database.Cursor` `queryWithDummyColumnsInFront`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v5 @kind this, `int` v6 , `java.lang.String` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.queryWithDummyColumnsInFront:(ILjava/lang/String;Ljava/lang/Object;)Landroid/database/Cursor;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L393778.  v0:= new `java.lang.StringBuilder`;
  #L39377c.  v1:= "SELECT " @kind object;
  #L393780.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L393786.  v1:= 0I;
  #L393788.  v2:= 0I;
  #L39378a.  if v2 >= v6 then goto L3937a4;
  #L39378e.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L393794.  v3:= "," @kind object;
  #L393798.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39379e.  v2:= v2 + 1;
  #L3937a2.  goto L39378a;
  #L3937a4.  v2:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L3937a8.  call temp:= `getAllColumns`(v2) @signature `Lorg/greenrobot/greendao/AbstractDao;.getAllColumns:()[Ljava/lang/String;` @kind virtual;
  #L3937ae.  v2:= temp @kind object;
  #L3937b0.  v3:= "T" @kind object;
  #L3937b4.  call temp:= `appendColumns`(v0, v3, v2) @signature `Lorg/greenrobot/greendao/internal/SqlUtils;.appendColumns:(Ljava/lang/StringBuilder;Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind static;
  #L3937ba.  v2:= temp @kind object;
  #L3937bc.  v3:= " FROM " @kind object;
  #L3937c0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3937c6.  v2:= 34I;
  #L3937ca.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3937d0.  v3:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L3937d4.  call temp:= `getTablename`(v3) @signature `Lorg/greenrobot/greendao/AbstractDao;.getTablename:()Ljava/lang/String;` @kind virtual;
  #L3937da.  v3:= temp @kind object;
  #L3937dc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3937e2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3937e8.  v2:= " T" @kind object;
  #L3937ec.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3937f2.  v2:= 1I;
  #L3937f4.  if v8 == 0 then goto L39383c;
  #L3937f8.  v3:= " WHERE " @kind object;
  #L3937fc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L393802.  v3:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393806.  call temp:= `getPkColumns`(v3) @signature `Lorg/greenrobot/greendao/AbstractDao;.getPkColumns:()[Ljava/lang/String;` @kind virtual;
  #L39380c.  v3:= temp @kind object;
  #L39380e.  v3:= length @variable v3;
  #L393810.  call `assertEquals`(v2, v3) @signature `Landroid/test/AndroidTestCase;.assertEquals:(II)V` @kind static;
  #L393816.  v3:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L39381a.  call temp:= `getPkColumns`(v3) @signature `Lorg/greenrobot/greendao/AbstractDao;.getPkColumns:()[Ljava/lang/String;` @kind virtual;
  #L393820.  v3:= temp @kind object;
  #L393822.  v3:= v3[v1] @kind object;
  #L393826.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39382c.  v3:= "=" @kind object;
  #L393830.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L393836.  call `appendValueToSql`(v0, v8) @signature `Landroid/database/DatabaseUtils;.appendValueToSql:(Ljava/lang/StringBuilder;Ljava/lang/Object;)V` @kind static;
  #L39383c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L393842.  v0:= temp @kind object;
  #L393844.  v3:= v5.`org.greenrobot.greendao.test.DbTest.db` @type ^`org.greenrobot.greendao.database.Database` @kind object;
  #L393848.  v4:= 0I;
  #L39384a.  call temp:= `rawQuery`(v3, v0, v4) @signature `Lorg/greenrobot/greendao/database/Database;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind interface;
  #L393850.  v0:= temp @kind object;
  #L393852.  call temp:= `moveToFirst`(v0) @signature `Landroid/database/Cursor;.moveToFirst:()Z` @kind interface;
  #L393858.  v3:= temp;
  #L39385a.  call `assertTrue`(v3) @signature `Landroid/test/AndroidTestCase;.assertTrue:(Z)V` @kind static;
  #L393860.  if v1 >= v6 then goto L39387c;
  #L393864.  call temp:= `getString`(v0, v1) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L39386a.  v3:= temp @kind object;
  #L39386c.  call `assertEquals`(v7, v3) @signature `Landroid/test/AndroidTestCase;.assertEquals:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L393872.  v1:= v1 + 1;
  #L393876.  goto L393860;
  #L393878.  v6:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L39387a.  goto L393890;
  #L39387c.  if v8 == 0 then goto L393898;
  #L393880.  call temp:= `getCount`(v0) @signature `Landroid/database/Cursor;.getCount:()I` @kind interface;
  #L393886.  v6:= temp;
  #L393888.  call `assertEquals`(v2, v6) @signature `Landroid/test/AndroidTestCase;.assertEquals:(II)V` @kind static;
  #L39388e.  goto L393898;
  #L393890.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L393896.  throw v6;
  #L393898.  return v0 @kind object;
  catch `java.lang.RuntimeException` @[L393864..L39388e] goto L393878;
}
procedure `void` `runLoadPkTest`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v3 @kind this, `int` v4 ) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.runLoadPkTest:(I)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L393984.  call temp:= `nextPk`(v3) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.nextPk:()Ljava/lang/Object;` @kind virtual;
  #L39398a.  v0:= temp @kind object;
  #L39398c.  call temp:= `createEntity`(v3, v0) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntity:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393992.  v1:= temp @kind object;
  #L393994.  v2:= v3.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393998.  call temp:= `insert`(v2, v1) @signature `Lorg/greenrobot/greendao/AbstractDao;.insert:(Ljava/lang/Object;)J` @kind virtual;
  #L39399e.  v1:= "42" @kind object;
  #L3939a2.  call temp:= `queryWithDummyColumnsInFront`(v3, v4, v1, v0) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.queryWithDummyColumnsInFront:(ILjava/lang/String;Ljava/lang/Object;)Landroid/database/Cursor;` @kind virtual;
  #L3939a8.  v1:= temp @kind object;
  #L3939aa.  v2:= v3.`org.greenrobot.greendao.test.AbstractDaoTest.daoAccess` @type ^`org.greenrobot.greendao.InternalUnitTestDaoAccess` @kind object;
  #L3939ae.  call temp:= `readKey`(v2, v1, v4) @signature `Lorg/greenrobot/greendao/InternalUnitTestDaoAccess;.readKey:(Landroid/database/Cursor;I)Ljava/lang/Object;` @kind virtual;
  #L3939b4.  v4:= temp @kind object;
  #L3939b6.  call `assertEquals`(v0, v4) @signature `Landroid/test/AndroidTestCase;.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L3939bc.  call `close`(v1) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L3939c2.  return @kind void;
  #L3939c4.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3939c6.  call `close`(v1) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L3939cc.  throw v4;
  catch `java.lang.Throwable` @[L3939aa..L3939bc] goto L3939c4;
}
procedure `void` `setUp`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v5 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.setUp:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3939ec.  call `setUp`(v5) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTest;.setUp:()V` @kind super;
  #L3939f2.  v0:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.daoAccess` @type ^`org.greenrobot.greendao.InternalUnitTestDaoAccess` @kind object;
  #L3939f6.  call temp:= `getProperties`(v0) @signature `Lorg/greenrobot/greendao/InternalUnitTestDaoAccess;.getProperties:()[Lorg/greenrobot/greendao/Property;` @kind virtual;
  #L3939fc.  v0:= temp @kind object;
  #L3939fe.  v1:= length @variable v0;
  #L393a00.  v2:= 0I;
  #L393a02.  if v2 >= v1 then goto L393a36;
  #L393a06.  v3:= v0[v2] @kind object;
  #L393a0a.  v4:= v3.`org.greenrobot.greendao.Property.primaryKey` @type ^`boolean` @kind boolean;
  #L393a0e.  if v4 == 0 then goto L393a30;
  #L393a12.  v4:= v5.`org.greenrobot.greendao.test.AbstractDaoTestSinglePk.b` @type ^`org.greenrobot.greendao.Property` @kind object;
  #L393a16.  if v4 != 0 then goto L393a20;
  #L393a1a.  v5.`org.greenrobot.greendao.test.AbstractDaoTestSinglePk.b` @type ^`org.greenrobot.greendao.Property` := v3 @kind object;
  #L393a1e.  goto L393a30;
  #L393a20.  v0:= new `java.lang.RuntimeException`;
  #L393a24.  v1:= "Test does not work with multiple PK columns" @kind object;
  #L393a28.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L393a2e.  throw v0;
  #L393a30.  v2:= v2 + 1;
  #L393a34.  goto L393a02;
  #L393a36.  v0:= v5.`org.greenrobot.greendao.test.AbstractDaoTestSinglePk.b` @type ^`org.greenrobot.greendao.Property` @kind object;
  #L393a3a.  if v0 == 0 then goto L393a40;
  #L393a3e.  return @kind void;
  #L393a40.  v0:= new `java.lang.RuntimeException`;
  #L393a44.  v1:= "Test does not work without a PK column" @kind object;
  #L393a48.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L393a4e.  throw v0;
}
procedure `void` `testCount`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v4 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testCount:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L393a60.  v0:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393a64.  call `deleteAll`(v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.deleteAll:()V` @kind virtual;
  #L393a6a.  v0:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393a6e.  call temp:= `count`(v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.count:()J` @kind virtual;
  #L393a74.  v0:= temp @kind wide;
  #L393a76.  v2:= 0L;
  #L393a7a.  call `assertEquals`(v2, v0) @signature `Landroid/test/AndroidTestCase;.assertEquals:(JJ)V` @kind static;
  #L393a80.  v0:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393a84.  call temp:= `createEntityWithRandomPk`(v4) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntityWithRandomPk:()Ljava/lang/Object;` @kind virtual;
  #L393a8a.  v1:= temp @kind object;
  #L393a8c.  call temp:= `insert`(v0, v1) @signature `Lorg/greenrobot/greendao/AbstractDao;.insert:(Ljava/lang/Object;)J` @kind virtual;
  #L393a92.  v0:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393a96.  call temp:= `count`(v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.count:()J` @kind virtual;
  #L393a9c.  v0:= temp @kind wide;
  #L393a9e.  v2:= 1L;
  #L393aa2.  call `assertEquals`(v2, v0) @signature `Landroid/test/AndroidTestCase;.assertEquals:(JJ)V` @kind static;
  #L393aa8.  v0:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393aac.  call temp:= `createEntityWithRandomPk`(v4) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntityWithRandomPk:()Ljava/lang/Object;` @kind virtual;
  #L393ab2.  v1:= temp @kind object;
  #L393ab4.  call temp:= `insert`(v0, v1) @signature `Lorg/greenrobot/greendao/AbstractDao;.insert:(Ljava/lang/Object;)J` @kind virtual;
  #L393aba.  v0:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393abe.  call temp:= `count`(v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.count:()J` @kind virtual;
  #L393ac4.  v0:= temp @kind wide;
  #L393ac6.  v2:= 2L;
  #L393aca.  call `assertEquals`(v2, v0) @signature `Landroid/test/AndroidTestCase;.assertEquals:(JJ)V` @kind static;
  #L393ad0.  return @kind void;
}
procedure `void` `testDelete`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v3 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testDelete:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L393ae4.  call temp:= `nextPk`(v3) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.nextPk:()Ljava/lang/Object;` @kind virtual;
  #L393aea.  v0:= temp @kind object;
  #L393aec.  v1:= v3.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393af0.  call `deleteByKey`(v1, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.deleteByKey:(Ljava/lang/Object;)V` @kind virtual;
  #L393af6.  call temp:= `createEntity`(v3, v0) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntity:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393afc.  v1:= temp @kind object;
  #L393afe.  v2:= v3.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393b02.  call temp:= `insert`(v2, v1) @signature `Lorg/greenrobot/greendao/AbstractDao;.insert:(Ljava/lang/Object;)J` @kind virtual;
  #L393b08.  v1:= v3.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393b0c.  call temp:= `load`(v1, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.load:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393b12.  v1:= temp @kind object;
  #L393b14.  call `assertNotNull`(v1) @signature `Landroid/test/AndroidTestCase;.assertNotNull:(Ljava/lang/Object;)V` @kind static;
  #L393b1a.  v1:= v3.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393b1e.  call `deleteByKey`(v1, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.deleteByKey:(Ljava/lang/Object;)V` @kind virtual;
  #L393b24.  v1:= v3.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393b28.  call temp:= `load`(v1, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.load:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393b2e.  v0:= temp @kind object;
  #L393b30.  call `assertNull`(v0) @signature `Landroid/test/AndroidTestCase;.assertNull:(Ljava/lang/Object;)V` @kind static;
  #L393b36.  return @kind void;
}
procedure `void` `testDeleteAll`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v5 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testDeleteAll:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L393b48.  v0:= new `java.util.ArrayList`;
  #L393b4c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L393b52.  v1:= 0I;
  #L393b54.  v2:= 10I;
  #L393b58.  if v1 >= v2 then goto L393b70;
  #L393b5c.  call temp:= `createEntityWithRandomPk`(v5) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntityWithRandomPk:()Ljava/lang/Object;` @kind virtual;
  #L393b62.  v2:= temp @kind object;
  #L393b64.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L393b6a.  v1:= v1 + 1;
  #L393b6e.  goto L393b54;
  #L393b70.  v1:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393b74.  call `insertInTx`(v1, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.insertInTx:(Ljava/lang/Iterable;)V` @kind virtual;
  #L393b7a.  v1:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393b7e.  call `deleteAll`(v1) @signature `Lorg/greenrobot/greendao/AbstractDao;.deleteAll:()V` @kind virtual;
  #L393b84.  v1:= 0L;
  #L393b88.  v3:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393b8c.  call temp:= `count`(v3) @signature `Lorg/greenrobot/greendao/AbstractDao;.count:()J` @kind virtual;
  #L393b92.  v3:= temp @kind wide;
  #L393b94.  call `assertEquals`(v1, v3) @signature `Landroid/test/AndroidTestCase;.assertEquals:(JJ)V` @kind static;
  #L393b9a.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L393ba0.  v0:= temp @kind object;
  #L393ba2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L393ba8.  v1:= temp;
  #L393baa.  if v1 == 0 then goto L393bdc;
  #L393bae.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L393bb4.  v1:= temp @kind object;
  #L393bb6.  v2:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.daoAccess` @type ^`org.greenrobot.greendao.InternalUnitTestDaoAccess` @kind object;
  #L393bba.  call temp:= `getKey`(v2, v1) @signature `Lorg/greenrobot/greendao/InternalUnitTestDaoAccess;.getKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393bc0.  v1:= temp @kind object;
  #L393bc2.  call `assertNotNull`(v1) @signature `Landroid/test/AndroidTestCase;.assertNotNull:(Ljava/lang/Object;)V` @kind static;
  #L393bc8.  v2:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393bcc.  call temp:= `load`(v2, v1) @signature `Lorg/greenrobot/greendao/AbstractDao;.load:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393bd2.  v1:= temp @kind object;
  #L393bd4.  call `assertNull`(v1) @signature `Landroid/test/AndroidTestCase;.assertNull:(Ljava/lang/Object;)V` @kind static;
  #L393bda.  goto L393ba2;
  #L393bdc.  return @kind void;
}
procedure `void` `testDeleteByKeyInTx`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v5 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testDeleteByKeyInTx:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L393bf0.  v0:= new `java.util.ArrayList`;
  #L393bf4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L393bfa.  v1:= 0I;
  #L393bfc.  v2:= 0I;
  #L393bfe.  v3:= 10I;
  #L393c02.  if v2 >= v3 then goto L393c1a;
  #L393c06.  call temp:= `createEntityWithRandomPk`(v5) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntityWithRandomPk:()Ljava/lang/Object;` @kind virtual;
  #L393c0c.  v3:= temp @kind object;
  #L393c0e.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L393c14.  v2:= v2 + 1;
  #L393c18.  goto L393bfe;
  #L393c1a.  v2:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393c1e.  call `insertInTx`(v2, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.insertInTx:(Ljava/lang/Iterable;)V` @kind virtual;
  #L393c24.  v2:= new `java.util.ArrayList`;
  #L393c28.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L393c2e.  v3:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.daoAccess` @type ^`org.greenrobot.greendao.InternalUnitTestDaoAccess` @kind object;
  #L393c32.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L393c38.  v1:= temp @kind object;
  #L393c3a.  call temp:= `getKey`(v3, v1) @signature `Lorg/greenrobot/greendao/InternalUnitTestDaoAccess;.getKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393c40.  v1:= temp @kind object;
  #L393c42.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L393c48.  v1:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.daoAccess` @type ^`org.greenrobot.greendao.InternalUnitTestDaoAccess` @kind object;
  #L393c4c.  v3:= 3I;
  #L393c4e.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L393c54.  v3:= temp @kind object;
  #L393c56.  call temp:= `getKey`(v1, v3) @signature `Lorg/greenrobot/greendao/InternalUnitTestDaoAccess;.getKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393c5c.  v1:= temp @kind object;
  #L393c5e.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L393c64.  v1:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.daoAccess` @type ^`org.greenrobot.greendao.InternalUnitTestDaoAccess` @kind object;
  #L393c68.  v3:= 4I;
  #L393c6a.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L393c70.  v3:= temp @kind object;
  #L393c72.  call temp:= `getKey`(v1, v3) @signature `Lorg/greenrobot/greendao/InternalUnitTestDaoAccess;.getKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393c78.  v1:= temp @kind object;
  #L393c7a.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L393c80.  v1:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.daoAccess` @type ^`org.greenrobot.greendao.InternalUnitTestDaoAccess` @kind object;
  #L393c84.  v3:= 8I;
  #L393c88.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L393c8e.  v3:= temp @kind object;
  #L393c90.  call temp:= `getKey`(v1, v3) @signature `Lorg/greenrobot/greendao/InternalUnitTestDaoAccess;.getKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393c96.  v1:= temp @kind object;
  #L393c98.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L393c9e.  v1:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393ca2.  call `deleteByKeyInTx`(v1, v2) @signature `Lorg/greenrobot/greendao/AbstractDao;.deleteByKeyInTx:(Ljava/lang/Iterable;)V` @kind virtual;
  #L393ca8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L393cae.  v0:= temp;
  #L393cb0.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L393cb6.  v1:= temp;
  #L393cb8.  v0:= v0 - v1 @kind int;
  #L393cba.  v0:= (`long`) v0 @kind i2l;
  #L393cbc.  v3:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393cc0.  call temp:= `count`(v3) @signature `Lorg/greenrobot/greendao/AbstractDao;.count:()J` @kind virtual;
  #L393cc6.  v3:= temp @kind wide;
  #L393cc8.  call `assertEquals`(v0, v3) @signature `Landroid/test/AndroidTestCase;.assertEquals:(JJ)V` @kind static;
  #L393cce.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L393cd4.  v0:= temp @kind object;
  #L393cd6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L393cdc.  v1:= temp;
  #L393cde.  if v1 == 0 then goto L393d04;
  #L393ce2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L393ce8.  v1:= temp @kind object;
  #L393cea.  call `assertNotNull`(v1) @signature `Landroid/test/AndroidTestCase;.assertNotNull:(Ljava/lang/Object;)V` @kind static;
  #L393cf0.  v2:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393cf4.  call temp:= `load`(v2, v1) @signature `Lorg/greenrobot/greendao/AbstractDao;.load:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393cfa.  v1:= temp @kind object;
  #L393cfc.  call `assertNull`(v1) @signature `Landroid/test/AndroidTestCase;.assertNull:(Ljava/lang/Object;)V` @kind static;
  #L393d02.  goto L393cd6;
  #L393d04.  return @kind void;
}
procedure `void` `testDeleteInTx`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v5 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testDeleteInTx:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L393d18.  v0:= new `java.util.ArrayList`;
  #L393d1c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L393d22.  v1:= 0I;
  #L393d24.  v2:= 0I;
  #L393d26.  v3:= 10I;
  #L393d2a.  if v2 >= v3 then goto L393d42;
  #L393d2e.  call temp:= `createEntityWithRandomPk`(v5) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntityWithRandomPk:()Ljava/lang/Object;` @kind virtual;
  #L393d34.  v3:= temp @kind object;
  #L393d36.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L393d3c.  v2:= v2 + 1;
  #L393d40.  goto L393d26;
  #L393d42.  v2:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393d46.  call `insertInTx`(v2, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.insertInTx:(Ljava/lang/Iterable;)V` @kind virtual;
  #L393d4c.  v2:= new `java.util.ArrayList`;
  #L393d50.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L393d56.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L393d5c.  v1:= temp @kind object;
  #L393d5e.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L393d64.  v1:= 3I;
  #L393d66.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L393d6c.  v1:= temp @kind object;
  #L393d6e.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L393d74.  v1:= 4I;
  #L393d76.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L393d7c.  v1:= temp @kind object;
  #L393d7e.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L393d84.  v1:= 8I;
  #L393d88.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L393d8e.  v1:= temp @kind object;
  #L393d90.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L393d96.  v1:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393d9a.  call `deleteInTx`(v1, v2) @signature `Lorg/greenrobot/greendao/AbstractDao;.deleteInTx:(Ljava/lang/Iterable;)V` @kind virtual;
  #L393da0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L393da6.  v0:= temp;
  #L393da8.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L393dae.  v1:= temp;
  #L393db0.  v0:= v0 - v1 @kind int;
  #L393db2.  v0:= (`long`) v0 @kind i2l;
  #L393db4.  v3:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393db8.  call temp:= `count`(v3) @signature `Lorg/greenrobot/greendao/AbstractDao;.count:()J` @kind virtual;
  #L393dbe.  v3:= temp @kind wide;
  #L393dc0.  call `assertEquals`(v0, v3) @signature `Landroid/test/AndroidTestCase;.assertEquals:(JJ)V` @kind static;
  #L393dc6.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L393dcc.  v0:= temp @kind object;
  #L393dce.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L393dd4.  v1:= temp;
  #L393dd6.  if v1 == 0 then goto L393e08;
  #L393dda.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L393de0.  v1:= temp @kind object;
  #L393de2.  v2:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.daoAccess` @type ^`org.greenrobot.greendao.InternalUnitTestDaoAccess` @kind object;
  #L393de6.  call temp:= `getKey`(v2, v1) @signature `Lorg/greenrobot/greendao/InternalUnitTestDaoAccess;.getKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393dec.  v1:= temp @kind object;
  #L393dee.  call `assertNotNull`(v1) @signature `Landroid/test/AndroidTestCase;.assertNotNull:(Ljava/lang/Object;)V` @kind static;
  #L393df4.  v2:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393df8.  call temp:= `load`(v2, v1) @signature `Lorg/greenrobot/greendao/AbstractDao;.load:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393dfe.  v1:= temp @kind object;
  #L393e00.  call `assertNull`(v1) @signature `Landroid/test/AndroidTestCase;.assertNull:(Ljava/lang/Object;)V` @kind static;
  #L393e06.  goto L393dce;
  #L393e08.  return @kind void;
}
procedure `void` `testInsertAndLoad`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v3 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testInsertAndLoad:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L393e1c.  call temp:= `nextPk`(v3) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.nextPk:()Ljava/lang/Object;` @kind virtual;
  #L393e22.  v0:= temp @kind object;
  #L393e24.  call temp:= `createEntity`(v3, v0) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntity:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393e2a.  v1:= temp @kind object;
  #L393e2c.  v2:= v3.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393e30.  call temp:= `insert`(v2, v1) @signature `Lorg/greenrobot/greendao/AbstractDao;.insert:(Ljava/lang/Object;)J` @kind virtual;
  #L393e36.  v2:= v3.`org.greenrobot.greendao.test.AbstractDaoTest.daoAccess` @type ^`org.greenrobot.greendao.InternalUnitTestDaoAccess` @kind object;
  #L393e3a.  call temp:= `getKey`(v2, v1) @signature `Lorg/greenrobot/greendao/InternalUnitTestDaoAccess;.getKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393e40.  v2:= temp @kind object;
  #L393e42.  call `assertEquals`(v0, v2) @signature `Landroid/test/AndroidTestCase;.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L393e48.  v2:= v3.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393e4c.  call temp:= `load`(v2, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.load:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393e52.  v0:= temp @kind object;
  #L393e54.  call `assertNotNull`(v0) @signature `Landroid/test/AndroidTestCase;.assertNotNull:(Ljava/lang/Object;)V` @kind static;
  #L393e5a.  v2:= v3.`org.greenrobot.greendao.test.AbstractDaoTest.daoAccess` @type ^`org.greenrobot.greendao.InternalUnitTestDaoAccess` @kind object;
  #L393e5e.  call temp:= `getKey`(v2, v1) @signature `Lorg/greenrobot/greendao/InternalUnitTestDaoAccess;.getKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393e64.  v1:= temp @kind object;
  #L393e66.  v2:= v3.`org.greenrobot.greendao.test.AbstractDaoTest.daoAccess` @type ^`org.greenrobot.greendao.InternalUnitTestDaoAccess` @kind object;
  #L393e6a.  call temp:= `getKey`(v2, v0) @signature `Lorg/greenrobot/greendao/InternalUnitTestDaoAccess;.getKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393e70.  v0:= temp @kind object;
  #L393e72.  call `assertEquals`(v1, v0) @signature `Landroid/test/AndroidTestCase;.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L393e78.  return @kind void;
}
procedure `void` `testInsertInTx`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v4 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testInsertInTx:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L393e8c.  v0:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393e90.  call `deleteAll`(v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.deleteAll:()V` @kind virtual;
  #L393e96.  v0:= new `java.util.ArrayList`;
  #L393e9a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L393ea0.  v1:= 0I;
  #L393ea2.  v2:= 20I;
  #L393ea6.  if v1 >= v2 then goto L393ebe;
  #L393eaa.  call temp:= `createEntityWithRandomPk`(v4) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntityWithRandomPk:()Ljava/lang/Object;` @kind virtual;
  #L393eb0.  v2:= temp @kind object;
  #L393eb2.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L393eb8.  v1:= v1 + 1;
  #L393ebc.  goto L393ea2;
  #L393ebe.  v1:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393ec2.  call `insertInTx`(v1, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.insertInTx:(Ljava/lang/Iterable;)V` @kind virtual;
  #L393ec8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L393ece.  v0:= temp;
  #L393ed0.  v0:= (`long`) v0 @kind i2l;
  #L393ed2.  v2:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393ed6.  call temp:= `count`(v2) @signature `Lorg/greenrobot/greendao/AbstractDao;.count:()J` @kind virtual;
  #L393edc.  v2:= temp @kind wide;
  #L393ede.  call `assertEquals`(v0, v2) @signature `Landroid/test/AndroidTestCase;.assertEquals:(JJ)V` @kind static;
  #L393ee4.  return @kind void;
}
procedure `void` `testInsertOrReplaceInTx`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v5 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testInsertOrReplaceInTx:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L393ef8.  v0:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393efc.  call `deleteAll`(v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.deleteAll:()V` @kind virtual;
  #L393f02.  v0:= new `java.util.ArrayList`;
  #L393f06.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L393f0c.  v1:= new `java.util.ArrayList`;
  #L393f10.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L393f16.  v2:= 0I;
  #L393f18.  v3:= 20I;
  #L393f1c.  if v2 >= v3 then goto L393f42;
  #L393f20.  call temp:= `createEntityWithRandomPk`(v5) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntityWithRandomPk:()Ljava/lang/Object;` @kind virtual;
  #L393f26.  v3:= temp @kind object;
  #L393f28.  v4:= v2 %% 2;
  #L393f2c.  if v4 != 0 then goto L393f36;
  #L393f30.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L393f36.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L393f3c.  v2:= v2 + 1;
  #L393f40.  goto L393f18;
  #L393f42.  v2:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393f46.  call `insertOrReplaceInTx`(v2, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.insertOrReplaceInTx:(Ljava/lang/Iterable;)V` @kind virtual;
  #L393f4c.  v0:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393f50.  call `insertOrReplaceInTx`(v0, v1) @signature `Lorg/greenrobot/greendao/AbstractDao;.insertOrReplaceInTx:(Ljava/lang/Iterable;)V` @kind virtual;
  #L393f56.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L393f5c.  v0:= temp;
  #L393f5e.  v0:= (`long`) v0 @kind i2l;
  #L393f60.  v2:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393f64.  call temp:= `count`(v2) @signature `Lorg/greenrobot/greendao/AbstractDao;.count:()J` @kind virtual;
  #L393f6a.  v2:= temp @kind wide;
  #L393f6c.  call `assertEquals`(v0, v2) @signature `Landroid/test/AndroidTestCase;.assertEquals:(JJ)V` @kind static;
  #L393f72.  return @kind void;
}
procedure `void` `testInsertOrReplaceTwice`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v6 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testInsertOrReplaceTwice:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L393f84.  call temp:= `createEntityWithRandomPk`(v6) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntityWithRandomPk:()Ljava/lang/Object;` @kind virtual;
  #L393f8a.  v0:= temp @kind object;
  #L393f8c.  v1:= v6.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393f90.  call temp:= `insert`(v1, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.insert:(Ljava/lang/Object;)J` @kind virtual;
  #L393f96.  v1:= temp @kind wide;
  #L393f98.  v3:= v6.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393f9c.  call temp:= `insertOrReplace`(v3, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.insertOrReplace:(Ljava/lang/Object;)J` @kind virtual;
  #L393fa2.  v3:= temp @kind wide;
  #L393fa4.  v0:= v6.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393fa8.  call temp:= `getPkProperty`(v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.getPkProperty:()Lorg/greenrobot/greendao/Property;` @kind virtual;
  #L393fae.  v0:= temp @kind object;
  #L393fb0.  v0:= v0.`org.greenrobot.greendao.Property.type` @type ^`java.lang.Class` @kind object;
  #L393fb4.  v5:= constclass @type ^`java.lang.Long` @kind object;
  #L393fb8.  if v0 != v5 then goto L393fc2;
  #L393fbc.  call `assertEquals`(v1, v3) @signature `Landroid/test/AndroidTestCase;.assertEquals:(JJ)V` @kind static;
  #L393fc2.  return @kind void;
}
procedure `void` `testInsertTwice`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v2 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testInsertTwice:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L393fd4.  call temp:= `nextPk`(v2) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.nextPk:()Ljava/lang/Object;` @kind virtual;
  #L393fda.  v0:= temp @kind object;
  #L393fdc.  call temp:= `createEntity`(v2, v0) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntity:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L393fe2.  v0:= temp @kind object;
  #L393fe4.  v1:= v2.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393fe8.  call temp:= `insert`(v1, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.insert:(Ljava/lang/Object;)J` @kind virtual;
  #L393fee.  v1:= v2.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L393ff2.  call temp:= `insert`(v1, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.insert:(Ljava/lang/Object;)J` @kind virtual;
  #L393ff8.  v0:= "Inserting twice should not work" @kind object;
  #L393ffc.  call `fail`(v0) @signature `Landroid/test/AndroidTestCase;.fail:(Ljava/lang/String;)V` @kind static;
  #L394002.  return @kind void;
  catch `android.database.SQLException` @[L393fee..L394002] goto L394002;
}
procedure `void` `testLoadAll`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v3 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testLoadAll:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L394020.  v0:= v3.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L394024.  call `deleteAll`(v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.deleteAll:()V` @kind virtual;
  #L39402a.  v0:= new `java.util.ArrayList`;
  #L39402e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L394034.  v1:= 0I;
  #L394036.  v2:= 15I;
  #L39403a.  if v1 >= v2 then goto L39405a;
  #L39403e.  call temp:= `nextPk`(v3) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.nextPk:()Ljava/lang/Object;` @kind virtual;
  #L394044.  v2:= temp @kind object;
  #L394046.  call temp:= `createEntity`(v3, v2) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntity:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L39404c.  v2:= temp @kind object;
  #L39404e.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L394054.  v1:= v1 + 1;
  #L394058.  goto L394036;
  #L39405a.  v1:= v3.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L39405e.  call `insertInTx`(v1, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.insertInTx:(Ljava/lang/Iterable;)V` @kind virtual;
  #L394064.  v1:= v3.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L394068.  call temp:= `loadAll`(v1) @signature `Lorg/greenrobot/greendao/AbstractDao;.loadAll:()Ljava/util/List;` @kind virtual;
  #L39406e.  v1:= temp @kind object;
  #L394070.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L394076.  v0:= temp;
  #L394078.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39407e.  v1:= temp;
  #L394080.  call `assertEquals`(v0, v1) @signature `Landroid/test/AndroidTestCase;.assertEquals:(II)V` @kind static;
  #L394086.  return @kind void;
}
procedure `void` `testLoadPk`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v1 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testLoadPk:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L394098.  v0:= 0I;
  #L39409a.  call `runLoadPkTest`(v1, v0) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.runLoadPkTest:(I)V` @kind virtual;
  #L3940a0.  return @kind void;
}
procedure `void` `testLoadPkWithOffset`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v1 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testLoadPkWithOffset:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3940b4.  v0:= 10I;
  #L3940b8.  call `runLoadPkTest`(v1, v0) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.runLoadPkTest:(I)V` @kind virtual;
  #L3940be.  return @kind void;
}
procedure `void` `testQuery`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v7 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testQuery:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3940d0.  v0:= v7.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L3940d4.  call temp:= `createEntityWithRandomPk`(v7) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntityWithRandomPk:()Ljava/lang/Object;` @kind virtual;
  #L3940da.  v1:= temp @kind object;
  #L3940dc.  call temp:= `insert`(v0, v1) @signature `Lorg/greenrobot/greendao/AbstractDao;.insert:(Ljava/lang/Object;)J` @kind virtual;
  #L3940e2.  call temp:= `nextPk`(v7) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.nextPk:()Ljava/lang/Object;` @kind virtual;
  #L3940e8.  v0:= temp @kind object;
  #L3940ea.  v1:= v7.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L3940ee.  call temp:= `createEntity`(v7, v0) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntity:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3940f4.  v2:= temp @kind object;
  #L3940f6.  call temp:= `insert`(v1, v2) @signature `Lorg/greenrobot/greendao/AbstractDao;.insert:(Ljava/lang/Object;)J` @kind virtual;
  #L3940fc.  v1:= v7.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L394100.  call temp:= `createEntityWithRandomPk`(v7) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntityWithRandomPk:()Ljava/lang/Object;` @kind virtual;
  #L394106.  v2:= temp @kind object;
  #L394108.  call temp:= `insert`(v1, v2) @signature `Lorg/greenrobot/greendao/AbstractDao;.insert:(Ljava/lang/Object;)J` @kind virtual;
  #L39410e.  v1:= new `java.lang.StringBuilder`;
  #L394112.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L394118.  v2:= "WHERE " @kind object;
  #L39411c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L394122.  v2:= v7.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L394126.  call temp:= `getPkColumns`(v2) @signature `Lorg/greenrobot/greendao/AbstractDao;.getPkColumns:()[Ljava/lang/String;` @kind virtual;
  #L39412c.  v2:= temp @kind object;
  #L39412e.  v3:= 0I;
  #L394130.  v2:= v2[v3] @kind object;
  #L394134.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39413a.  v2:= "=?" @kind object;
  #L39413e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L394144.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39414a.  v1:= temp @kind object;
  #L39414c.  v2:= v7.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L394150.  v4:= 1I;
  #L394152.  v5:= new `java.lang.String`[v4];
  #L394156.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L39415c.  v6:= temp @kind object;
  #L39415e.  v5[v3]:= v6 @kind object;
  #L394162.  call temp:= `queryRaw`(v2, v1, v5) @signature `Lorg/greenrobot/greendao/AbstractDao;.queryRaw:(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L394168.  v1:= temp @kind object;
  #L39416a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L394170.  v2:= temp;
  #L394172.  call `assertEquals`(v4, v2) @signature `Landroid/test/AndroidTestCase;.assertEquals:(II)V` @kind static;
  #L394178.  v2:= v7.`org.greenrobot.greendao.test.AbstractDaoTest.daoAccess` @type ^`org.greenrobot.greendao.InternalUnitTestDaoAccess` @kind object;
  #L39417c.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L394182.  v1:= temp @kind object;
  #L394184.  call temp:= `getKey`(v2, v1) @signature `Lorg/greenrobot/greendao/InternalUnitTestDaoAccess;.getKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L39418a.  v1:= temp @kind object;
  #L39418c.  call `assertEquals`(v0, v1) @signature `Landroid/test/AndroidTestCase;.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L394192.  return @kind void;
}
procedure `void` `testReadWithOffset`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v4 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testReadWithOffset:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3941a4.  call temp:= `nextPk`(v4) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.nextPk:()Ljava/lang/Object;` @kind virtual;
  #L3941aa.  v0:= temp @kind object;
  #L3941ac.  call temp:= `createEntity`(v4, v0) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntity:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3941b2.  v1:= temp @kind object;
  #L3941b4.  v2:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L3941b8.  call temp:= `insert`(v2, v1) @signature `Lorg/greenrobot/greendao/AbstractDao;.insert:(Ljava/lang/Object;)J` @kind virtual;
  #L3941be.  v1:= 5I;
  #L3941c0.  v2:= "42" @kind object;
  #L3941c4.  call temp:= `queryWithDummyColumnsInFront`(v4, v1, v2, v0) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.queryWithDummyColumnsInFront:(ILjava/lang/String;Ljava/lang/Object;)Landroid/database/Cursor;` @kind virtual;
  #L3941ca.  v2:= temp @kind object;
  #L3941cc.  v3:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.daoAccess` @type ^`org.greenrobot.greendao.InternalUnitTestDaoAccess` @kind object;
  #L3941d0.  call temp:= `readEntity`(v3, v2, v1) @signature `Lorg/greenrobot/greendao/InternalUnitTestDaoAccess;.readEntity:(Landroid/database/Cursor;I)Ljava/lang/Object;` @kind virtual;
  #L3941d6.  v1:= temp @kind object;
  #L3941d8.  v3:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.daoAccess` @type ^`org.greenrobot.greendao.InternalUnitTestDaoAccess` @kind object;
  #L3941dc.  call temp:= `getKey`(v3, v1) @signature `Lorg/greenrobot/greendao/InternalUnitTestDaoAccess;.getKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3941e2.  v1:= temp @kind object;
  #L3941e4.  call `assertEquals`(v0, v1) @signature `Landroid/test/AndroidTestCase;.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L3941ea.  call `close`(v2) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L3941f0.  return @kind void;
  #L3941f2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3941f4.  call `close`(v2) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L3941fa.  throw v0;
  catch `java.lang.Throwable` @[L3941cc..L3941ea] goto L3941f2;
}
procedure `void` `testRowId`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v5 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testRowId:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L394218.  call temp:= `createEntityWithRandomPk`(v5) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntityWithRandomPk:()Ljava/lang/Object;` @kind virtual;
  #L39421e.  v0:= temp @kind object;
  #L394220.  call temp:= `createEntityWithRandomPk`(v5) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntityWithRandomPk:()Ljava/lang/Object;` @kind virtual;
  #L394226.  v1:= temp @kind object;
  #L394228.  v2:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L39422c.  call temp:= `insert`(v2, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.insert:(Ljava/lang/Object;)J` @kind virtual;
  #L394232.  v2:= temp @kind wide;
  #L394234.  v0:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L394238.  call temp:= `insert`(v0, v1) @signature `Lorg/greenrobot/greendao/AbstractDao;.insert:(Ljava/lang/Object;)J` @kind virtual;
  #L39423e.  v0:= temp @kind wide;
  #L394240.  v4:= lcmp(v2, v0);
  #L394244.  if v4 == 0 then goto L39424c;
  #L394248.  v0:= 1I;
  #L39424a.  goto L39424e;
  #L39424c.  v0:= 0I;
  #L39424e.  call `assertTrue`(v0) @signature `Landroid/test/AndroidTestCase;.assertTrue:(Z)V` @kind static;
  #L394254.  return @kind void;
}
procedure `void` `testSave`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v4 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testSave:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L394268.  call temp:= `checkKeyIsNullable`(v4) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.checkKeyIsNullable:()Z` @kind virtual;
  #L39426e.  v0:= temp;
  #L394270.  if v0 != 0 then goto L394276;
  #L394274.  return @kind void;
  #L394276.  v0:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L39427a.  call `deleteAll`(v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.deleteAll:()V` @kind virtual;
  #L394280.  v0:= 0I;
  #L394282.  call temp:= `createEntity`(v4, v0) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntity:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L394288.  v0:= temp @kind object;
  #L39428a.  if v0 == 0 then goto L3942b8;
  #L39428e.  v1:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L394292.  call `save`(v1, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.save:(Ljava/lang/Object;)V` @kind virtual;
  #L394298.  v1:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L39429c.  call `save`(v1, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.save:(Ljava/lang/Object;)V` @kind virtual;
  #L3942a2.  v0:= 1L;
  #L3942a6.  v2:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L3942aa.  call temp:= `count`(v2) @signature `Lorg/greenrobot/greendao/AbstractDao;.count:()J` @kind virtual;
  #L3942b0.  v2:= temp @kind wide;
  #L3942b2.  call `assertEquals`(v0, v2) @signature `Landroid/test/AndroidTestCase;.assertEquals:(JJ)V` @kind static;
  #L3942b8.  return @kind void;
}
procedure `void` `testSaveInTx`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v5 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testSaveInTx:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3942cc.  call temp:= `checkKeyIsNullable`(v5) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.checkKeyIsNullable:()Z` @kind virtual;
  #L3942d2.  v0:= temp;
  #L3942d4.  if v0 != 0 then goto L3942da;
  #L3942d8.  return @kind void;
  #L3942da.  v0:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L3942de.  call `deleteAll`(v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.deleteAll:()V` @kind virtual;
  #L3942e4.  v0:= new `java.util.ArrayList`;
  #L3942e8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3942ee.  v1:= new `java.util.ArrayList`;
  #L3942f2.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3942f8.  v2:= 0I;
  #L3942fa.  v3:= 20I;
  #L3942fe.  if v2 >= v3 then goto L394326;
  #L394302.  v3:= 0I;
  #L394304.  call temp:= `createEntity`(v5, v3) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntity:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L39430a.  v3:= temp @kind object;
  #L39430c.  v4:= v2 %% 2;
  #L394310.  if v4 != 0 then goto L39431a;
  #L394314.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39431a.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L394320.  v2:= v2 + 1;
  #L394324.  goto L3942fa;
  #L394326.  v2:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L39432a.  call `saveInTx`(v2, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.saveInTx:(Ljava/lang/Iterable;)V` @kind virtual;
  #L394330.  v0:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L394334.  call `saveInTx`(v0, v1) @signature `Lorg/greenrobot/greendao/AbstractDao;.saveInTx:(Ljava/lang/Iterable;)V` @kind virtual;
  #L39433a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L394340.  v0:= temp;
  #L394342.  v0:= (`long`) v0 @kind i2l;
  #L394344.  v2:= v5.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L394348.  call temp:= `count`(v2) @signature `Lorg/greenrobot/greendao/AbstractDao;.count:()J` @kind virtual;
  #L39434e.  v2:= temp @kind wide;
  #L394350.  call `assertEquals`(v0, v2) @signature `Landroid/test/AndroidTestCase;.assertEquals:(JJ)V` @kind static;
  #L394356.  return @kind void;
}
procedure `void` `testUpdate`(`org.greenrobot.greendao.test.AbstractDaoTestSinglePk` v4 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.testUpdate:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L394368.  v0:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L39436c.  call `deleteAll`(v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.deleteAll:()V` @kind virtual;
  #L394372.  call temp:= `createEntityWithRandomPk`(v4) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.createEntityWithRandomPk:()Ljava/lang/Object;` @kind virtual;
  #L394378.  v0:= temp @kind object;
  #L39437a.  v1:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L39437e.  call temp:= `insert`(v1, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.insert:(Ljava/lang/Object;)J` @kind virtual;
  #L394384.  v1:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L394388.  call `update`(v1, v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.update:(Ljava/lang/Object;)V` @kind virtual;
  #L39438e.  v0:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L394392.  call temp:= `count`(v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.count:()J` @kind virtual;
  #L394398.  v0:= temp @kind wide;
  #L39439a.  v2:= 1L;
  #L39439e.  call `assertEquals`(v2, v0) @signature `Landroid/test/AndroidTestCase;.assertEquals:(JJ)V` @kind static;
  #L3943a4.  return @kind void;
}
