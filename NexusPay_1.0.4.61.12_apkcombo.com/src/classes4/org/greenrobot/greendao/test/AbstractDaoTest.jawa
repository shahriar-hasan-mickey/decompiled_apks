record `org.greenrobot.greendao.test.AbstractDaoTest` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.greenrobot.greendao.test.DbTest` @kind class {
  `org.greenrobot.greendao.AbstractDao` `org.greenrobot.greendao.test.AbstractDaoTest.dao` @AccessFlag PROTECTED;
  `org.greenrobot.greendao.InternalUnitTestDaoAccess` `org.greenrobot.greendao.test.AbstractDaoTest.daoAccess` @AccessFlag PROTECTED;
  `java.lang.Class` `org.greenrobot.greendao.test.AbstractDaoTest.daoClass` @AccessFlag PROTECTED_FINAL;
  `org.greenrobot.greendao.identityscope.IdentityScope` `org.greenrobot.greendao.test.AbstractDaoTest.identityScopeForDao` @AccessFlag PROTECTED;
  `org.greenrobot.greendao.Property` `org.greenrobot.greendao.test.AbstractDaoTest.pkColumn` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.greenrobot.greendao.test.AbstractDaoTest` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTest;.<init>:(Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L39444c.  v0:= 1I;
  #L39444e.  call `<init>`(v1, v2, v0) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTest;.<init>:(Ljava/lang/Class;Z)V` @kind direct;
  #L394454.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.greendao.test.AbstractDaoTest` v0 @kind this, `java.lang.Class` v1 @kind object, `boolean` v2 ) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTest;.<init>:(Ljava/lang/Class;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L394468.  call `<init>`(v0, v2) @signature `Lorg/greenrobot/greendao/test/DbTest;.<init>:(Z)V` @kind direct;
  #L39446e.  v0.`org.greenrobot.greendao.test.AbstractDaoTest.daoClass` @type ^`java.lang.Class` := v1 @kind object;
  #L394472.  return @kind void;
}
procedure `void` `clearIdentityScopeIfAny`(`org.greenrobot.greendao.test.AbstractDaoTest` v1 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTest;.clearIdentityScopeIfAny:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L394484.  v0:= v1.`org.greenrobot.greendao.test.AbstractDaoTest.identityScopeForDao` @type ^`org.greenrobot.greendao.identityscope.IdentityScope` @kind object;
  #L394488.  if v0 == 0 then goto L39449e;
  #L39448c.  call `clear`(v0) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScope;.clear:()V` @kind interface;
  #L394492.  v0:= "Identity scope cleared" @kind object;
  #L394496.  call temp:= `d`(v0) @signature `Lorg/greenrobot/greendao/DaoLog;.d:(Ljava/lang/String;)I` @kind static;
  #L39449c.  goto L3944a8;
  #L39449e.  v0:= "No identity scope to clear" @kind object;
  #L3944a2.  call temp:= `d`(v0) @signature `Lorg/greenrobot/greendao/DaoLog;.d:(Ljava/lang/String;)I` @kind static;
  #L3944a8.  return @kind void;
}
procedure `void` `logTableDump`(`org.greenrobot.greendao.test.AbstractDaoTest` v1 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTest;.logTableDump:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3944bc.  v0:= v1.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` @kind object;
  #L3944c0.  call temp:= `getTablename`(v0) @signature `Lorg/greenrobot/greendao/AbstractDao;.getTablename:()Ljava/lang/String;` @kind virtual;
  #L3944c6.  v0:= temp @kind object;
  #L3944c8.  call `logTableDump`(v1, v0) @signature `Lorg/greenrobot/greendao/test/DbTest;.logTableDump:(Ljava/lang/String;)V` @kind virtual;
  #L3944ce.  return @kind void;
}
procedure `void` `setIdentityScopeBeforeSetUp`(`org.greenrobot.greendao.test.AbstractDaoTest` v0 @kind this, `org.greenrobot.greendao.identityscope.IdentityScope` v1 @kind object) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTest;.setIdentityScopeBeforeSetUp:(Lorg/greenrobot/greendao/identityscope/IdentityScope;)V` @AccessFlag PUBLIC {
    temp;

  #L3944e0.  v0.`org.greenrobot.greendao.test.AbstractDaoTest.identityScopeForDao` @type ^`org.greenrobot.greendao.identityscope.IdentityScope` := v1 @kind object;
  #L3944e4.  return @kind void;
}
procedure `void` `setUp`(`org.greenrobot.greendao.test.AbstractDaoTest` v4 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTest;.setUp:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3944f8.  call `setUp`(v4) @signature `Lorg/greenrobot/greendao/test/DbTest;.setUp:()V` @kind super;
  #L3944fe.  call `setUpTableForDao`(v4) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTest;.setUpTableForDao:()V` @kind virtual;
  #L394504.  v0:= new `org.greenrobot.greendao.InternalUnitTestDaoAccess`;
  #L394508.  v1:= v4.`org.greenrobot.greendao.test.DbTest.db` @type ^`org.greenrobot.greendao.database.Database` @kind object;
  #L39450c.  v2:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.daoClass` @type ^`java.lang.Class` @kind object;
  #L394510.  v3:= v4.`org.greenrobot.greendao.test.AbstractDaoTest.identityScopeForDao` @type ^`org.greenrobot.greendao.identityscope.IdentityScope` @kind object;
  #L394514.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/greenrobot/greendao/InternalUnitTestDaoAccess;.<init>:(Lorg/greenrobot/greendao/database/Database;Ljava/lang/Class;Lorg/greenrobot/greendao/identityscope/IdentityScope;)V` @kind direct;
  #L39451a.  v4.`org.greenrobot.greendao.test.AbstractDaoTest.daoAccess` @type ^`org.greenrobot.greendao.InternalUnitTestDaoAccess` := v0 @kind object;
  #L39451e.  call temp:= `getDao`(v0) @signature `Lorg/greenrobot/greendao/InternalUnitTestDaoAccess;.getDao:()Lorg/greenrobot/greendao/AbstractDao;` @kind virtual;
  #L394524.  v0:= temp @kind object;
  #L394526.  v4.`org.greenrobot.greendao.test.AbstractDaoTest.dao` @type ^`org.greenrobot.greendao.AbstractDao` := v0 @kind object;
  #L39452a.  return @kind void;
  #L39452c.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L39452e.  v1:= new `java.lang.RuntimeException`;
  #L394532.  v2:= "Could not prepare DAO Test" @kind object;
  #L394536.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L39453c.  throw v1;
  catch `java.lang.Exception` @[L3944fe..L39452a] goto L39452c;
}
procedure `void` `setUpTableForDao`(`org.greenrobot.greendao.test.AbstractDaoTest` v7 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTest;.setUpTableForDao:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L394560.  v0:= v7.`org.greenrobot.greendao.test.AbstractDaoTest.daoClass` @type ^`java.lang.Class` @kind object;
  #L394564.  v1:= "createTable" @kind object;
  #L394568.  v2:= 2I;
  #L39456a.  v3:= new `java.lang.Class`[v2];
  #L39456e.  v4:= constclass @type ^`org.greenrobot.greendao.database.Database` @kind object;
  #L394572.  v5:= 0I;
  #L394574.  v3[v5]:= v4 @kind object;
  #L394578.  v4:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L39457c.  v6:= 1I;
  #L39457e.  v3[v6]:= v4 @kind object;
  #L394582.  call temp:= `getMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L394588.  v0:= temp @kind object;
  #L39458a.  v1:= 0I;
  #L39458c.  v2:= new `java.lang.Object`[v2];
  #L394590.  v3:= v7.`org.greenrobot.greendao.test.DbTest.db` @type ^`org.greenrobot.greendao.database.Database` @kind object;
  #L394594.  v2[v5]:= v3 @kind object;
  #L394598.  v3:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L39459c.  v2[v6]:= v3 @kind object;
  #L3945a0.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3945a6.  goto L3945b2;
  #L3945a8.  v0:= "No createTable method" @kind object;
  #L3945ac.  call temp:= `i`(v0) @signature `Lorg/greenrobot/greendao/DaoLog;.i:(Ljava/lang/String;)I` @kind static;
  #L3945b2.  return @kind void;
  catch `java.lang.NoSuchMethodException` @[L394560..L3945a6] goto L3945a8;
}
