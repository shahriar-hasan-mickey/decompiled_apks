record `org.greenrobot.greendao.test.DbTest` @kind class @AccessFlag PUBLIC_ABSTRACT extends `android.test.AndroidTestCase` @kind class {
  `android.app.Application` `org.greenrobot.greendao.test.DbTest.a` @AccessFlag PRIVATE;
  `org.greenrobot.greendao.database.Database` `org.greenrobot.greendao.test.DbTest.db` @AccessFlag PROTECTED;
  `boolean` `org.greenrobot.greendao.test.DbTest.inMemory` @AccessFlag PROTECTED_FINAL;
  `java.util.Random` `org.greenrobot.greendao.test.DbTest.random` @AccessFlag PROTECTED_FINAL;
}
global `java.lang.String` `@@org.greenrobot.greendao.test.DbTest.DB_NAME` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`org.greenrobot.greendao.test.DbTest` v1 @kind this) @signature `Lorg/greenrobot/greendao/test/DbTest;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3946c8.  v0:= 1I;
  #L3946ca.  call `<init>`(v1, v0) @signature `Lorg/greenrobot/greendao/test/DbTest;.<init>:(Z)V` @kind direct;
  #L3946d0.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.greendao.test.DbTest` v0 @kind this, `boolean` v1 ) @signature `Lorg/greenrobot/greendao/test/DbTest;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3946e4.  call `<init>`(v0) @signature `Landroid/test/AndroidTestCase;.<init>:()V` @kind direct;
  #L3946ea.  v0.`org.greenrobot.greendao.test.DbTest.inMemory` @type ^`boolean` := v1 @kind boolean;
  #L3946ee.  v1:= new `java.util.Random`;
  #L3946f2.  call `<init>`(v1) @signature `Ljava/util/Random;.<init>:()V` @kind direct;
  #L3946f8.  v0.`org.greenrobot.greendao.test.DbTest.random` @type ^`java.util.Random` := v1 @kind object;
  #L3946fc.  return @kind void;
}
procedure `android.app.Application` `createApplication`(`org.greenrobot.greendao.test.DbTest` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lorg/greenrobot/greendao/test/DbTest;.createApplication:(Ljava/lang/Class;)Landroid/app/Application;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3945d4.  v0:= v4.`org.greenrobot.greendao.test.DbTest.a` @type ^`android.app.Application` @kind object;
  #L3945d8.  v1:= "Application already created" @kind object;
  #L3945dc.  call `assertNull`(v1, v0) @signature `Landroid/test/AndroidTestCase;.assertNull:(Ljava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L3945e2.  call temp:= `getContext`(v4) @signature `Landroid/test/AndroidTestCase;.getContext:()Landroid/content/Context;` @kind virtual;
  #L3945e8.  v0:= temp @kind object;
  #L3945ea.  call temp:= `newApplication`(v5, v0) @signature `Landroid/app/Instrumentation;.newApplication:(Ljava/lang/Class;Landroid/content/Context;)Landroid/app/Application;` @kind static;
  #L3945f0.  v5:= temp @kind object;
  #L3945f2.  call `onCreate`(v5) @signature `Landroid/app/Application;.onCreate:()V` @kind virtual;
  #L3945f8.  v4.`org.greenrobot.greendao.test.DbTest.a` @type ^`android.app.Application` := v5 @kind object;
  #L3945fc.  return v5 @kind object;
  #L3945fe.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L394600.  v1:= new `java.lang.RuntimeException`;
  #L394604.  v2:= new `java.lang.StringBuilder`;
  #L394608.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39460e.  v3:= "Could not create application " @kind object;
  #L394612.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L394618.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39461e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L394624.  v5:= temp @kind object;
  #L394626.  call `<init>`(v1, v5, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L39462c.  throw v1;
  catch `java.lang.Exception` @[L3945e2..L3945f2] goto L3945fe;
}
procedure `org.greenrobot.greendao.database.Database` `createDatabase`(`org.greenrobot.greendao.test.DbTest` v4 @kind this) @signature `Lorg/greenrobot/greendao/test/DbTest;.createDatabase:()Lorg/greenrobot/greendao/database/Database;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L394674.  v0:= v4.`org.greenrobot.greendao.test.DbTest.inMemory` @type ^`boolean` @kind boolean;
  #L394678.  v1:= 0I;
  #L39467a.  if v0 == 0 then goto L394688;
  #L39467e.  call temp:= `create`(v1) @signature `Landroid/database/sqlite/SQLiteDatabase;.create:(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;` @kind static;
  #L394684.  v0:= temp @kind object;
  #L394686.  goto L3946ac;
  #L394688.  call temp:= `getContext`(v4) @signature `Landroid/test/AndroidTestCase;.getContext:()Landroid/content/Context;` @kind virtual;
  #L39468e.  v0:= temp @kind object;
  #L394690.  v2:= "greendao-unittest-db.temp" @kind object;
  #L394694.  call temp:= `deleteDatabase`(v0, v2) @signature `Landroid/content/Context;.deleteDatabase:(Ljava/lang/String;)Z` @kind virtual;
  #L39469a.  call temp:= `getContext`(v4) @signature `Landroid/test/AndroidTestCase;.getContext:()Landroid/content/Context;` @kind virtual;
  #L3946a0.  v0:= temp @kind object;
  #L3946a2.  v3:= 0I;
  #L3946a4.  call temp:= `openOrCreateDatabase`(v0, v2, v3, v1) @signature `Landroid/content/Context;.openOrCreateDatabase:(Ljava/lang/String;ILandroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L3946aa.  v0:= temp @kind object;
  #L3946ac.  v1:= new `org.greenrobot.greendao.database.StandardDatabase`;
  #L3946b0.  call `<init>`(v1, v0) @signature `Lorg/greenrobot/greendao/database/StandardDatabase;.<init>:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind direct;
  #L3946b6.  return v1 @kind object;
}
procedure `android.app.Application` `getApplication`(`org.greenrobot.greendao.test.DbTest` v2 @kind this) @signature `Lorg/greenrobot/greendao/test/DbTest;.getApplication:()Landroid/app/Application;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L394650.  v0:= v2.`org.greenrobot.greendao.test.DbTest.a` @type ^`android.app.Application` @kind object;
  #L394654.  v1:= "Application not yet created" @kind object;
  #L394658.  call `assertNotNull`(v1, v0) @signature `Landroid/test/AndroidTestCase;.assertNotNull:(Ljava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L39465e.  v0:= v2.`org.greenrobot.greendao.test.DbTest.a` @type ^`android.app.Application` @kind object;
  #L394662.  return v0 @kind object;
}
procedure `void` `logTableDump`(`org.greenrobot.greendao.test.DbTest` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/greenrobot/greendao/test/DbTest;.logTableDump:(Ljava/lang/String;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L394710.  v0:= v2.`org.greenrobot.greendao.test.DbTest.db` @type ^`org.greenrobot.greendao.database.Database` @kind object;
  #L394714.  v1:= instanceof @variable v0 @type ^`org.greenrobot.greendao.database.StandardDatabase` @kind boolean;
  #L394718.  if v1 == 0 then goto L394730;
  #L39471c.  v0:= (`org.greenrobot.greendao.database.StandardDatabase`) v0 @kind object;
  #L394720.  call temp:= `getSQLiteDatabase`(v0) @signature `Lorg/greenrobot/greendao/database/StandardDatabase;.getSQLiteDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L394726.  v0:= temp @kind object;
  #L394728.  call `logTableDump`(v0, v3) @signature `Lorg/greenrobot/greendao/DbUtils;.logTableDump:(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)V` @kind static;
  #L39472e.  goto L39475c;
  #L394730.  v3:= new `java.lang.StringBuilder`;
  #L394734.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39473a.  v0:= "Table dump unsupported for " @kind object;
  #L39473e.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L394744.  v0:= v2.`org.greenrobot.greendao.test.DbTest.db` @type ^`org.greenrobot.greendao.database.Database` @kind object;
  #L394748.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39474e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L394754.  v3:= temp @kind object;
  #L394756.  call temp:= `w`(v3) @signature `Lorg/greenrobot/greendao/DaoLog;.w:(Ljava/lang/String;)I` @kind static;
  #L39475c.  return @kind void;
}
procedure `void` `setUp`(`org.greenrobot.greendao.test.DbTest` v1 @kind this) @signature `Lorg/greenrobot/greendao/test/DbTest;.setUp:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L394770.  call `setUp`(v1) @signature `Landroid/test/AndroidTestCase;.setUp:()V` @kind super;
  #L394776.  call temp:= `createDatabase`(v1) @signature `Lorg/greenrobot/greendao/test/DbTest;.createDatabase:()Lorg/greenrobot/greendao/database/Database;` @kind virtual;
  #L39477c.  v0:= temp @kind object;
  #L39477e.  v1.`org.greenrobot.greendao.test.DbTest.db` @type ^`org.greenrobot.greendao.database.Database` := v0 @kind object;
  #L394782.  return @kind void;
}
procedure `void` `tearDown`(`org.greenrobot.greendao.test.DbTest` v2 @kind this) @signature `Lorg/greenrobot/greendao/test/DbTest;.tearDown:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L394794.  v0:= v2.`org.greenrobot.greendao.test.DbTest.a` @type ^`android.app.Application` @kind object;
  #L394798.  if v0 == 0 then goto L3947a2;
  #L39479c.  call `terminateApplication`(v2) @signature `Lorg/greenrobot/greendao/test/DbTest;.terminateApplication:()V` @kind virtual;
  #L3947a2.  v0:= v2.`org.greenrobot.greendao.test.DbTest.db` @type ^`org.greenrobot.greendao.database.Database` @kind object;
  #L3947a6.  call `close`(v0) @signature `Lorg/greenrobot/greendao/database/Database;.close:()V` @kind interface;
  #L3947ac.  v0:= v2.`org.greenrobot.greendao.test.DbTest.inMemory` @type ^`boolean` @kind boolean;
  #L3947b0.  if v0 != 0 then goto L3947c6;
  #L3947b4.  call temp:= `getContext`(v2) @signature `Landroid/test/AndroidTestCase;.getContext:()Landroid/content/Context;` @kind virtual;
  #L3947ba.  v0:= temp @kind object;
  #L3947bc.  v1:= "greendao-unittest-db.temp" @kind object;
  #L3947c0.  call temp:= `deleteDatabase`(v0, v1) @signature `Landroid/content/Context;.deleteDatabase:(Ljava/lang/String;)Z` @kind virtual;
  #L3947c6.  call `tearDown`(v2) @signature `Landroid/test/AndroidTestCase;.tearDown:()V` @kind super;
  #L3947cc.  return @kind void;
}
procedure `void` `terminateApplication`(`org.greenrobot.greendao.test.DbTest` v2 @kind this) @signature `Lorg/greenrobot/greendao/test/DbTest;.terminateApplication:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3947e0.  v0:= v2.`org.greenrobot.greendao.test.DbTest.a` @type ^`android.app.Application` @kind object;
  #L3947e4.  v1:= "Application not yet created" @kind object;
  #L3947e8.  call `assertNotNull`(v1, v0) @signature `Landroid/test/AndroidTestCase;.assertNotNull:(Ljava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L3947ee.  v0:= v2.`org.greenrobot.greendao.test.DbTest.a` @type ^`android.app.Application` @kind object;
  #L3947f2.  call `onTerminate`(v0) @signature `Landroid/app/Application;.onTerminate:()V` @kind virtual;
  #L3947f8.  v0:= 0I;
  #L3947fa.  v2.`org.greenrobot.greendao.test.DbTest.a` @type ^`android.app.Application` := v0 @kind object;
  #L3947fe.  return @kind void;
}
