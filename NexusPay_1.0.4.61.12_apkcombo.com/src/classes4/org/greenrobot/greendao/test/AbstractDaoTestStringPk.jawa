record `org.greenrobot.greendao.test.AbstractDaoTestStringPk` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.greenrobot.greendao.test.AbstractDaoTestSinglePk` @kind class {
}
procedure `void` `<init>`(`org.greenrobot.greendao.test.AbstractDaoTestStringPk` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestStringPk;.<init>:(Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L394434.  call `<init>`(v0, v1) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestSinglePk;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L39443a.  return @kind void;
}
procedure `java.lang.Object` `createRandomPk`(`org.greenrobot.greendao.test.AbstractDaoTestStringPk` v1 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestStringPk;.createRandomPk:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L3943b8.  call temp:= `createRandomPk`(v1) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestStringPk;.createRandomPk:()Ljava/lang/String;` @kind virtual;
  #L3943be.  v0:= temp @kind object;
  #L3943c0.  return v0 @kind object;
}
procedure `java.lang.String` `createRandomPk`(`org.greenrobot.greendao.test.AbstractDaoTestStringPk` v5 @kind this) @signature `Lorg/greenrobot/greendao/test/AbstractDaoTestStringPk;.createRandomPk:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3943d4.  v0:= v5.`org.greenrobot.greendao.test.DbTest.random` @type ^`java.util.Random` @kind object;
  #L3943d8.  v1:= 30I;
  #L3943dc.  call temp:= `nextInt`(v0, v1) @signature `Ljava/util/Random;.nextInt:(I)I` @kind virtual;
  #L3943e2.  v0:= temp;
  #L3943e4.  v0:= v0 + 1;
  #L3943e8.  v1:= new `java.lang.StringBuilder`;
  #L3943ec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3943f2.  v2:= 0I;
  #L3943f4.  if v2 >= v0 then goto L39441a;
  #L3943f8.  v3:= v5.`org.greenrobot.greendao.test.DbTest.random` @type ^`java.util.Random` @kind object;
  #L3943fc.  v4:= 25I;
  #L394400.  call temp:= `nextInt`(v3, v4) @signature `Ljava/util/Random;.nextInt:(I)I` @kind virtual;
  #L394406.  v3:= temp;
  #L394408.  v3:= v3 + 97;
  #L39440c.  v3:= (`char`) v3 @kind i2c;
  #L39440e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L394414.  v2:= v2 + 1;
  #L394418.  goto L3943f4;
  #L39441a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L394420.  v0:= temp @kind object;
  #L394422.  return v0 @kind object;
}
