record `org.greenrobot.greendao.query.WhereCondition$AbstractCondition` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.greenrobot.greendao.query.WhereCondition` @kind interface {
  `boolean` `org.greenrobot.greendao.query.WhereCondition$AbstractCondition.hasSingleValue` @AccessFlag PROTECTED_FINAL;
  `java.lang.Object` `org.greenrobot.greendao.query.WhereCondition$AbstractCondition.value` @AccessFlag PROTECTED_FINAL;
  `java.lang.Object`[] `org.greenrobot.greendao.query.WhereCondition$AbstractCondition.values` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`org.greenrobot.greendao.query.WhereCondition$AbstractCondition` v1 @kind this) @signature `Lorg/greenrobot/greendao/query/WhereCondition$AbstractCondition;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L392124.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39212a.  v0:= 0I;
  #L39212c.  v1.`org.greenrobot.greendao.query.WhereCondition$AbstractCondition.hasSingleValue` @type ^`boolean` := v0 @kind boolean;
  #L392130.  v0:= 0I;
  #L392132.  v1.`org.greenrobot.greendao.query.WhereCondition$AbstractCondition.value` @type ^`java.lang.Object` := v0 @kind object;
  #L392136.  v1.`org.greenrobot.greendao.query.WhereCondition$AbstractCondition.values` @type ^`java.lang.Object`[] := v0 @kind object;
  #L39213a.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.greendao.query.WhereCondition$AbstractCondition` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/greenrobot/greendao/query/WhereCondition$AbstractCondition;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39214c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L392152.  v0.`org.greenrobot.greendao.query.WhereCondition$AbstractCondition.value` @type ^`java.lang.Object` := v1 @kind object;
  #L392156.  v1:= 1I;
  #L392158.  v0.`org.greenrobot.greendao.query.WhereCondition$AbstractCondition.hasSingleValue` @type ^`boolean` := v1 @kind boolean;
  #L39215c.  v1:= 0I;
  #L39215e.  v0.`org.greenrobot.greendao.query.WhereCondition$AbstractCondition.values` @type ^`java.lang.Object`[] := v1 @kind object;
  #L392162.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.greendao.query.WhereCondition$AbstractCondition` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lorg/greenrobot/greendao/query/WhereCondition$AbstractCondition;.<init>:([Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L392174.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39217a.  v0:= 0I;
  #L39217c.  v1.`org.greenrobot.greendao.query.WhereCondition$AbstractCondition.value` @type ^`java.lang.Object` := v0 @kind object;
  #L392180.  v0:= 0I;
  #L392182.  v1.`org.greenrobot.greendao.query.WhereCondition$AbstractCondition.hasSingleValue` @type ^`boolean` := v0 @kind boolean;
  #L392186.  v1.`org.greenrobot.greendao.query.WhereCondition$AbstractCondition.values` @type ^`java.lang.Object`[] := v2 @kind object;
  #L39218a.  return @kind void;
}
procedure `void` `appendValuesTo`(`org.greenrobot.greendao.query.WhereCondition$AbstractCondition` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lorg/greenrobot/greendao/query/WhereCondition$AbstractCondition;.appendValuesTo:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39219c.  v0:= v4.`org.greenrobot.greendao.query.WhereCondition$AbstractCondition.hasSingleValue` @type ^`boolean` @kind boolean;
  #L3921a0.  if v0 == 0 then goto L3921b0;
  #L3921a4.  v0:= v4.`org.greenrobot.greendao.query.WhereCondition$AbstractCondition.value` @type ^`java.lang.Object` @kind object;
  #L3921a8.  call temp:= `add`(v5, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3921ae.  goto L3921d0;
  #L3921b0.  v0:= v4.`org.greenrobot.greendao.query.WhereCondition$AbstractCondition.values` @type ^`java.lang.Object`[] @kind object;
  #L3921b4.  if v0 == 0 then goto L3921d0;
  #L3921b8.  v1:= length @variable v0;
  #L3921ba.  v2:= 0I;
  #L3921bc.  if v2 >= v1 then goto L3921d0;
  #L3921c0.  v3:= v0[v2] @kind object;
  #L3921c4.  call temp:= `add`(v5, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3921ca.  v2:= v2 + 1;
  #L3921ce.  goto L3921bc;
  #L3921d0.  return @kind void;
}
