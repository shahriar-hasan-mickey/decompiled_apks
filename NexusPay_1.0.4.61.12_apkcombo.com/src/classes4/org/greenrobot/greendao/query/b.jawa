record `org.greenrobot.greendao.query.b` @kind class @AccessFlag ABSTRACT {
  `java.lang.String` `org.greenrobot.greendao.query.b.a` @AccessFlag FINAL;
  `org.greenrobot.greendao.AbstractDao` `org.greenrobot.greendao.query.b.b` @AccessFlag FINAL;
  `java.lang.String`[] `org.greenrobot.greendao.query.b.c` @AccessFlag FINAL;
  `java.util.Map` `org.greenrobot.greendao.query.b.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`org.greenrobot.greendao.query.b` v0 @kind this, `org.greenrobot.greendao.AbstractDao` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String`[] v3 @kind object) @signature `Lorg/greenrobot/greendao/query/b;.<init>:(Lorg/greenrobot/greendao/AbstractDao;Ljava/lang/String;[Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L38fcd4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38fcda.  v0.`org.greenrobot.greendao.query.b.b` @type ^`org.greenrobot.greendao.AbstractDao` := v1 @kind object;
  #L38fcde.  v0.`org.greenrobot.greendao.query.b.a` @type ^`java.lang.String` := v2 @kind object;
  #L38fce2.  v0.`org.greenrobot.greendao.query.b.c` @type ^`java.lang.String`[] := v3 @kind object;
  #L38fce6.  v1:= new `java.util.HashMap`;
  #L38fcea.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L38fcf0.  v0.`org.greenrobot.greendao.query.b.d` @type ^`java.util.Map` := v1 @kind object;
  #L38fcf4.  return @kind void;
}
procedure `org.greenrobot.greendao.query.a` `a`() @signature `Lorg/greenrobot/greendao/query/b;.a:()Lorg/greenrobot/greendao/query/a;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `org.greenrobot.greendao.query.a` `b`(`org.greenrobot.greendao.query.b` v6 @kind this) @signature `Lorg/greenrobot/greendao/query/b;.b:()Lorg/greenrobot/greendao/query/a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L38fbe4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L38fbea.  v0:= temp @kind object;
  #L38fbec.  call temp:= `getId`(v0) @signature `Ljava/lang/Thread;.getId:()J` @kind virtual;
  #L38fbf2.  v0:= temp @kind wide;
  #L38fbf4.  v2:= v6.`org.greenrobot.greendao.query.b.d` @type ^`java.util.Map` @kind object;
  #L38fbf8.  @monitorenter v2
  #L38fbfa.  v3:= v6.`org.greenrobot.greendao.query.b.d` @type ^`java.util.Map` @kind object;
  #L38fbfe.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L38fc04.  v4:= temp @kind object;
  #L38fc06.  call temp:= `get`(v3, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L38fc0c.  v3:= temp @kind object;
  #L38fc0e.  v3:= (`java.lang.ref.WeakReference`) v3 @kind object;
  #L38fc12.  if v3 == 0 then goto L38fc24;
  #L38fc16.  call temp:= `get`(v3) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L38fc1c.  v3:= temp @kind object;
  #L38fc1e.  v3:= (`org.greenrobot.greendao.query.a`) v3 @kind object;
  #L38fc22.  goto L38fc26;
  #L38fc24.  v3:= 0I;
  #L38fc26.  if v3 != 0 then goto L38fc56;
  #L38fc2a.  call `d`(v6) @signature `Lorg/greenrobot/greendao/query/b;.d:()V` @kind virtual;
  #L38fc30.  call temp:= `a`(v6) @signature `Lorg/greenrobot/greendao/query/b;.a:()Lorg/greenrobot/greendao/query/a;` @kind virtual;
  #L38fc36.  v3:= temp @kind object;
  #L38fc38.  v4:= v6.`org.greenrobot.greendao.query.b.d` @type ^`java.util.Map` @kind object;
  #L38fc3c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L38fc42.  v0:= temp @kind object;
  #L38fc44.  v1:= new `java.lang.ref.WeakReference`;
  #L38fc48.  call `<init>`(v1, v3) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L38fc4e.  call temp:= `put`(v4, v0, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L38fc54.  goto L38fc6c;
  #L38fc56.  v0:= v6.`org.greenrobot.greendao.query.b.c` @type ^`java.lang.String`[] @kind object;
  #L38fc5a.  v1:= v3.`org.greenrobot.greendao.query.a.parameters` @type ^`java.lang.String`[] @kind object;
  #L38fc5e.  v4:= v6.`org.greenrobot.greendao.query.b.c` @type ^`java.lang.String`[] @kind object;
  #L38fc62.  v4:= length @variable v4;
  #L38fc64.  v5:= 0I;
  #L38fc66.  call `arraycopy`(v0, v5, v1, v5, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L38fc6c.  @monitorexit v2
  #L38fc6e.  return v3 @kind object;
  #L38fc70.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38fc72.  @monitorexit v2
  #L38fc74.  throw v0;
  catch `java.lang.Throwable` @[L38fbfa..L38fc74] goto L38fc70;
}
procedure `org.greenrobot.greendao.query.a` `c`(`org.greenrobot.greendao.query.b` v4 @kind this, `org.greenrobot.greendao.query.a` v5 @kind object) @signature `Lorg/greenrobot/greendao/query/b;.c:(Lorg/greenrobot/greendao/query/a;)Lorg/greenrobot/greendao/query/a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38fc94.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L38fc9a.  v0:= temp @kind object;
  #L38fc9c.  v1:= v5.`org.greenrobot.greendao.query.a.ownerThread` @type ^`java.lang.Thread` @kind object;
  #L38fca0.  if v0 != v1 then goto L38fcb8;
  #L38fca4.  v0:= v4.`org.greenrobot.greendao.query.b.c` @type ^`java.lang.String`[] @kind object;
  #L38fca8.  v1:= v5.`org.greenrobot.greendao.query.a.parameters` @type ^`java.lang.String`[] @kind object;
  #L38fcac.  v2:= length @variable v0;
  #L38fcae.  v3:= 0I;
  #L38fcb0.  call `arraycopy`(v0, v3, v1, v3, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L38fcb6.  return v5 @kind object;
  #L38fcb8.  call temp:= `b`(v4) @signature `Lorg/greenrobot/greendao/query/b;.b:()Lorg/greenrobot/greendao/query/a;` @kind virtual;
  #L38fcbe.  v5:= temp @kind object;
  #L38fcc0.  return v5 @kind object;
}
procedure `void` `d`(`org.greenrobot.greendao.query.b` v3 @kind this) @signature `Lorg/greenrobot/greendao/query/b;.d:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L38fd08.  v0:= v3.`org.greenrobot.greendao.query.b.d` @type ^`java.util.Map` @kind object;
  #L38fd0c.  @monitorenter v0
  #L38fd0e.  v1:= v3.`org.greenrobot.greendao.query.b.d` @type ^`java.util.Map` @kind object;
  #L38fd12.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L38fd18.  v1:= temp @kind object;
  #L38fd1a.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L38fd20.  v1:= temp @kind object;
  #L38fd22.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L38fd28.  v2:= temp;
  #L38fd2a.  if v2 == 0 then goto L38fd5a;
  #L38fd2e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L38fd34.  v2:= temp @kind object;
  #L38fd36.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L38fd3a.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L38fd40.  v2:= temp @kind object;
  #L38fd42.  v2:= (`java.lang.ref.WeakReference`) v2 @kind object;
  #L38fd46.  call temp:= `get`(v2) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L38fd4c.  v2:= temp @kind object;
  #L38fd4e.  if v2 != 0 then goto L38fd22;
  #L38fd52.  call `remove`(v1) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L38fd58.  goto L38fd22;
  #L38fd5a.  @monitorexit v0
  #L38fd5c.  return @kind void;
  #L38fd5e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38fd60.  @monitorexit v0
  #L38fd62.  throw v1;
  catch `java.lang.Throwable` @[L38fd0e..L38fd62] goto L38fd5e;
}
