record `org.greenrobot.greendao.query.WhereCondition$PropertyCondition` @kind class @AccessFlag PUBLIC extends `org.greenrobot.greendao.query.WhereCondition$AbstractCondition` @kind class {
  `java.lang.String` `org.greenrobot.greendao.query.WhereCondition$PropertyCondition.op` @AccessFlag PUBLIC_FINAL;
  `org.greenrobot.greendao.Property` `org.greenrobot.greendao.query.WhereCondition$PropertyCondition.property` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`org.greenrobot.greendao.query.WhereCondition$PropertyCondition` v0 @kind this, `org.greenrobot.greendao.Property` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/greenrobot/greendao/query/WhereCondition$PropertyCondition;.<init>:(Lorg/greenrobot/greendao/Property;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3923a4.  call `<init>`(v0) @signature `Lorg/greenrobot/greendao/query/WhereCondition$AbstractCondition;.<init>:()V` @kind direct;
  #L3923aa.  v0.`org.greenrobot.greendao.query.WhereCondition$PropertyCondition.property` @type ^`org.greenrobot.greendao.Property` := v1 @kind object;
  #L3923ae.  v0.`org.greenrobot.greendao.query.WhereCondition$PropertyCondition.op` @type ^`java.lang.String` := v2 @kind object;
  #L3923b2.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.greendao.query.WhereCondition$PropertyCondition` v0 @kind this, `org.greenrobot.greendao.Property` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/greenrobot/greendao/query/WhereCondition$PropertyCondition;.<init>:(Lorg/greenrobot/greendao/Property;Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3923c4.  call temp:= `a`(v1, v3) @signature `Lorg/greenrobot/greendao/query/WhereCondition$PropertyCondition;.a:(Lorg/greenrobot/greendao/Property;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3923ca.  v3:= temp @kind object;
  #L3923cc.  call `<init>`(v0, v3) @signature `Lorg/greenrobot/greendao/query/WhereCondition$AbstractCondition;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3923d2.  v0.`org.greenrobot.greendao.query.WhereCondition$PropertyCondition.property` @type ^`org.greenrobot.greendao.Property` := v1 @kind object;
  #L3923d6.  v0.`org.greenrobot.greendao.query.WhereCondition$PropertyCondition.op` @type ^`java.lang.String` := v2 @kind object;
  #L3923da.  return @kind void;
}
procedure `void` `<init>`(`org.greenrobot.greendao.query.WhereCondition$PropertyCondition` v0 @kind this, `org.greenrobot.greendao.Property` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lorg/greenrobot/greendao/query/WhereCondition$PropertyCondition;.<init>:(Lorg/greenrobot/greendao/Property;Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3923ec.  call temp:= `b`(v1, v3) @signature `Lorg/greenrobot/greendao/query/WhereCondition$PropertyCondition;.b:(Lorg/greenrobot/greendao/Property;[Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L3923f2.  call `<init>`(v0, v3) @signature `Lorg/greenrobot/greendao/query/WhereCondition$AbstractCondition;.<init>:([Ljava/lang/Object;)V` @kind direct;
  #L3923f8.  v0.`org.greenrobot.greendao.query.WhereCondition$PropertyCondition.property` @type ^`org.greenrobot.greendao.Property` := v1 @kind object;
  #L3923fc.  v0.`org.greenrobot.greendao.query.WhereCondition$PropertyCondition.op` @type ^`java.lang.String` := v2 @kind object;
  #L392400.  return @kind void;
}
procedure `java.lang.Object` `a`(`org.greenrobot.greendao.Property` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/greenrobot/greendao/query/WhereCondition$PropertyCondition;.a:(Lorg/greenrobot/greendao/Property;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3921e4.  if v3 == 0 then goto L39220e;
  #L3921e8.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3921ee.  v0:= temp @kind object;
  #L3921f0.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L3921f6.  v0:= temp;
  #L3921f8.  if v0 != 0 then goto L3921fe;
  #L3921fc.  goto L39220e;
  #L3921fe.  v2:= new `org.greenrobot.greendao.DaoException`;
  #L392202.  v3:= "Illegal value: found array, but simple object required" @kind object;
  #L392206.  call `<init>`(v2, v3) @signature `Lorg/greenrobot/greendao/DaoException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39220c.  throw v2;
  #L39220e.  v2:= v2.`org.greenrobot.greendao.Property.type` @type ^`java.lang.Class` @kind object;
  #L392212.  v0:= constclass @type ^`java.util.Date` @kind object;
  #L392216.  if v2 != v0 then goto L392270;
  #L39221a.  v2:= instanceof @variable v3 @type ^`java.util.Date` @kind boolean;
  #L39221e.  if v2 == 0 then goto L392238;
  #L392222.  v3:= (`java.util.Date`) v3 @kind object;
  #L392226.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L39222c.  v2:= temp @kind wide;
  #L39222e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L392234.  v2:= temp @kind object;
  #L392236.  return v2 @kind object;
  #L392238.  v2:= instanceof @variable v3 @type ^`java.lang.Long` @kind boolean;
  #L39223c.  if v2 == 0 then goto L392242;
  #L392240.  return v3 @kind object;
  #L392242.  v2:= new `org.greenrobot.greendao.DaoException`;
  #L392246.  v0:= new `java.lang.StringBuilder`;
  #L39224a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L392250.  v1:= "Illegal date value: expected java.util.Date or Long for value " @kind object;
  #L392254.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39225a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L392260.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L392266.  v3:= temp @kind object;
  #L392268.  call `<init>`(v2, v3) @signature `Lorg/greenrobot/greendao/DaoException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39226e.  throw v2;
  #L392270.  v0:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L392274.  if v2 == v0 then goto L392280;
  #L392278.  v0:= constclass @type ^`java.lang.Boolean` @kind object;
  #L39227c.  if v2 != v0 then goto L392360;
  #L392280.  v2:= instanceof @variable v3 @type ^`java.lang.Boolean` @kind boolean;
  #L392284.  if v2 == 0 then goto L39229e;
  #L392288.  v3:= (`java.lang.Boolean`) v3 @kind object;
  #L39228c.  call temp:= `booleanValue`(v3) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L392292.  v2:= temp;
  #L392294.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L39229a.  v2:= temp @kind object;
  #L39229c.  return v2 @kind object;
  #L39229e.  v2:= instanceof @variable v3 @type ^`java.lang.Number` @kind boolean;
  #L3922a2.  v0:= 1I;
  #L3922a4.  if v2 == 0 then goto L3922ee;
  #L3922a8.  v2:= v3 @kind object;
  #L3922aa.  v2:= (`java.lang.Number`) v2 @kind object;
  #L3922ae.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L3922b4.  v2:= temp;
  #L3922b6.  if v2 == 0 then goto L392360;
  #L3922ba.  if v2 != v0 then goto L3922c0;
  #L3922be.  goto L392360;
  #L3922c0.  v2:= new `org.greenrobot.greendao.DaoException`;
  #L3922c4.  v0:= new `java.lang.StringBuilder`;
  #L3922c8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3922ce.  v1:= "Illegal boolean value: numbers must be 0 or 1, but was " @kind object;
  #L3922d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3922d8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3922de.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3922e4.  v3:= temp @kind object;
  #L3922e6.  call `<init>`(v2, v3) @signature `Lorg/greenrobot/greendao/DaoException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3922ec.  throw v2;
  #L3922ee.  v2:= instanceof @variable v3 @type ^`java.lang.String` @kind boolean;
  #L3922f2.  if v2 == 0 then goto L392360;
  #L3922f6.  v2:= v3 @kind object;
  #L3922f8.  v2:= (`java.lang.String`) v2 @kind object;
  #L3922fc.  v1:= "TRUE" @kind object;
  #L392300.  call temp:= `equalsIgnoreCase`(v1, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L392306.  v1:= temp;
  #L392308.  if v1 == 0 then goto L392316;
  #L39230c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L392312.  v2:= temp @kind object;
  #L392314.  return v2 @kind object;
  #L392316.  v0:= "FALSE" @kind object;
  #L39231a.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L392320.  v2:= temp;
  #L392322.  if v2 == 0 then goto L392332;
  #L392326.  v2:= 0I;
  #L392328.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L39232e.  v2:= temp @kind object;
  #L392330.  return v2 @kind object;
  #L392332.  v2:= new `org.greenrobot.greendao.DaoException`;
  #L392336.  v0:= new `java.lang.StringBuilder`;
  #L39233a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L392340.  v1:= "Illegal boolean value: Strings must be \"TRUE\" or \"FALSE\" (case insensitive), but was " @kind object;
  #L392344.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39234a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L392350.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L392356.  v3:= temp @kind object;
  #L392358.  call `<init>`(v2, v3) @signature `Lorg/greenrobot/greendao/DaoException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39235e.  throw v2;
  #L392360.  return v3 @kind object;
}
procedure `java.lang.Object`[] `b`(`org.greenrobot.greendao.Property` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lorg/greenrobot/greendao/query/WhereCondition$PropertyCondition;.b:(Lorg/greenrobot/greendao/Property;[Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L392374.  v0:= 0I;
  #L392376.  v1:= length @variable v3;
  #L392378.  if v0 >= v1 then goto L392392;
  #L39237c.  v1:= v3[v0] @kind object;
  #L392380.  call temp:= `a`(v2, v1) @signature `Lorg/greenrobot/greendao/query/WhereCondition$PropertyCondition;.a:(Lorg/greenrobot/greendao/Property;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L392386.  v1:= temp @kind object;
  #L392388.  v3[v0]:= v1 @kind object;
  #L39238c.  v0:= v0 + 1;
  #L392390.  goto L392376;
  #L392392.  return v3 @kind object;
}
procedure `void` `appendTo`(`org.greenrobot.greendao.query.WhereCondition$PropertyCondition` v1 @kind this, `java.lang.StringBuilder` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/greenrobot/greendao/query/WhereCondition$PropertyCondition;.appendTo:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392414.  v0:= v1.`org.greenrobot.greendao.query.WhereCondition$PropertyCondition.property` @type ^`org.greenrobot.greendao.Property` @kind object;
  #L392418.  call temp:= `appendProperty`(v2, v3, v0) @signature `Lorg/greenrobot/greendao/internal/SqlUtils;.appendProperty:(Ljava/lang/StringBuilder;Ljava/lang/String;Lorg/greenrobot/greendao/Property;)Ljava/lang/StringBuilder;` @kind static;
  #L39241e.  v2:= temp @kind object;
  #L392420.  v3:= v1.`org.greenrobot.greendao.query.WhereCondition$PropertyCondition.op` @type ^`java.lang.String` @kind object;
  #L392424.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39242a.  return @kind void;
}
