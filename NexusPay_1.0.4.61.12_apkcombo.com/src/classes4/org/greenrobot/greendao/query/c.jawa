record `org.greenrobot.greendao.query.c` @kind class @AccessFlag ABSTRACT extends `org.greenrobot.greendao.query.a` @kind class {
  `int` `org.greenrobot.greendao.query.c.limitPosition` @AccessFlag PROTECTED_FINAL;
  `int` `org.greenrobot.greendao.query.c.offsetPosition` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`org.greenrobot.greendao.query.c` v0 @kind this, `org.greenrobot.greendao.AbstractDao` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lorg/greenrobot/greendao/query/c;.<init>:(Lorg/greenrobot/greendao/AbstractDao;Ljava/lang/String;[Ljava/lang/String;II)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L38fe00.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/greenrobot/greendao/query/a;.<init>:(Lorg/greenrobot/greendao/AbstractDao;Ljava/lang/String;[Ljava/lang/String;)V` @kind direct;
  #L38fe06.  v0.`org.greenrobot.greendao.query.c.limitPosition` @type ^`int` := v4;
  #L38fe0a.  v0.`org.greenrobot.greendao.query.c.offsetPosition` @type ^`int` := v5;
  #L38fe0e.  return @kind void;
}
procedure `void` `setLimit`(`org.greenrobot.greendao.query.c` v2 @kind this, `int` v3 ) @signature `Lorg/greenrobot/greendao/query/c;.setLimit:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38fe20.  call `checkThread`(v2) @signature `Lorg/greenrobot/greendao/query/a;.checkThread:()V` @kind virtual;
  #L38fe26.  v0:= v2.`org.greenrobot.greendao.query.c.limitPosition` @type ^`int`;
  #L38fe2a.  v1:= -1I;
  #L38fe2c.  if v0 == v1 then goto L38fe42;
  #L38fe30.  v1:= v2.`org.greenrobot.greendao.query.a.parameters` @type ^`java.lang.String`[] @kind object;
  #L38fe34.  call temp:= `toString`(v3) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L38fe3a.  v3:= temp @kind object;
  #L38fe3c.  v1[v0]:= v3 @kind object;
  #L38fe40.  return @kind void;
  #L38fe42.  v3:= new `java.lang.IllegalStateException`;
  #L38fe46.  v0:= "Limit must be set with QueryBuilder before it can be used here" @kind object;
  #L38fe4a.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38fe50.  throw v3;
}
procedure `void` `setOffset`(`org.greenrobot.greendao.query.c` v2 @kind this, `int` v3 ) @signature `Lorg/greenrobot/greendao/query/c;.setOffset:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38fe64.  call `checkThread`(v2) @signature `Lorg/greenrobot/greendao/query/a;.checkThread:()V` @kind virtual;
  #L38fe6a.  v0:= v2.`org.greenrobot.greendao.query.c.offsetPosition` @type ^`int`;
  #L38fe6e.  v1:= -1I;
  #L38fe70.  if v0 == v1 then goto L38fe86;
  #L38fe74.  v1:= v2.`org.greenrobot.greendao.query.a.parameters` @type ^`java.lang.String`[] @kind object;
  #L38fe78.  call temp:= `toString`(v3) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L38fe7e.  v3:= temp @kind object;
  #L38fe80.  v1[v0]:= v3 @kind object;
  #L38fe84.  return @kind void;
  #L38fe86.  v3:= new `java.lang.IllegalStateException`;
  #L38fe8a.  v0:= "Offset must be set with QueryBuilder before it can be used here" @kind object;
  #L38fe8e.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38fe94.  throw v3;
}
procedure `org.greenrobot.greendao.query.a` `setParameter`(`org.greenrobot.greendao.query.c` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lorg/greenrobot/greendao/query/c;.setParameter:(ILjava/lang/Object;)Lorg/greenrobot/greendao/query/a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L38fd80.  call temp:= `setParameter`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/query/c;.setParameter:(ILjava/lang/Object;)Lorg/greenrobot/greendao/query/c;` @kind virtual;
  #L38fd86.  v1:= temp @kind object;
  #L38fd88.  return v1 @kind object;
}
procedure `org.greenrobot.greendao.query.c` `setParameter`(`org.greenrobot.greendao.query.c` v2 @kind this, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lorg/greenrobot/greendao/query/c;.setParameter:(ILjava/lang/Object;)Lorg/greenrobot/greendao/query/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38fd9c.  if v3 < 0 then goto L38fde0;
  #L38fda0.  v0:= v2.`org.greenrobot.greendao.query.c.limitPosition` @type ^`int`;
  #L38fda4.  if v3 == v0 then goto L38fdb2;
  #L38fda8.  v0:= v2.`org.greenrobot.greendao.query.c.offsetPosition` @type ^`int`;
  #L38fdac.  if v3 == v0 then goto L38fdb2;
  #L38fdb0.  goto L38fde0;
  #L38fdb2.  v4:= new `java.lang.IllegalArgumentException`;
  #L38fdb6.  v0:= new `java.lang.StringBuilder`;
  #L38fdba.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38fdc0.  v1:= "Illegal parameter index: " @kind object;
  #L38fdc4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38fdca.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L38fdd0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38fdd6.  v3:= temp @kind object;
  #L38fdd8.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38fdde.  throw v4;
  #L38fde0.  call temp:= `setParameter`(v2, v3, v4) @signature `Lorg/greenrobot/greendao/query/a;.setParameter:(ILjava/lang/Object;)Lorg/greenrobot/greendao/query/a;` @kind super;
  #L38fde6.  v3:= temp @kind object;
  #L38fde8.  v3:= (`org.greenrobot.greendao.query.c`) v3 @kind object;
  #L38fdec.  return v3 @kind object;
}
