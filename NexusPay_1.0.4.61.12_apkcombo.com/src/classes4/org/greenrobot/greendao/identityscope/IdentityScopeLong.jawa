record `org.greenrobot.greendao.identityscope.IdentityScopeLong` @kind class @AccessFlag PUBLIC extends `org.greenrobot.greendao.identityscope.IdentityScope` @kind interface {
  `org.greenrobot.greendao.internal.LongHashMap` `org.greenrobot.greendao.identityscope.IdentityScopeLong.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.locks.ReentrantLock` `org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v1 @kind this) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L38e024.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38e02a.  v0:= new `org.greenrobot.greendao.internal.LongHashMap`;
  #L38e02e.  call `<init>`(v0) @signature `Lorg/greenrobot/greendao/internal/LongHashMap;.<init>:()V` @kind direct;
  #L38e034.  v1.`org.greenrobot.greendao.identityscope.IdentityScopeLong.a` @type ^`org.greenrobot.greendao.internal.LongHashMap` := v0 @kind object;
  #L38e038.  v0:= new `java.util.concurrent.locks.ReentrantLock`;
  #L38e03c.  call `<init>`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V` @kind direct;
  #L38e042.  v1.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` := v0 @kind object;
  #L38e046.  return @kind void;
}
procedure `void` `clear`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v2 @kind this) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38e058.  v0:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e05c.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L38e062.  v0:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeLong.a` @type ^`org.greenrobot.greendao.internal.LongHashMap` @kind object;
  #L38e066.  call `clear`(v0) @signature `Lorg/greenrobot/greendao/internal/LongHashMap;.clear:()V` @kind virtual;
  #L38e06c.  v0:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e070.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e076.  return @kind void;
  #L38e078.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38e07a.  v1:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e07e.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e084.  throw v0;
  catch `java.lang.Throwable` @[L38e062..L38e06c] goto L38e078;
}
procedure `boolean` `detach`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v1 @kind this, `java.lang.Long` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.detach:(Ljava/lang/Long;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38de8c.  v0:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38de90.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L38de96.  call temp:= `get`(v1, v2) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.get:(Ljava/lang/Long;)Ljava/lang/Object;` @kind virtual;
  #L38de9c.  v0:= temp @kind object;
  #L38de9e.  if v0 != v3 then goto L38deba;
  #L38dea2.  if v3 == 0 then goto L38deba;
  #L38dea6.  call `remove`(v1, v2) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.remove:(Ljava/lang/Long;)V` @kind virtual;
  #L38deac.  v2:= 1I;
  #L38deae.  v3:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38deb2.  call `unlock`(v3) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38deb8.  return v2;
  #L38deba.  v2:= 0I;
  #L38debc.  goto L38deae;
  #L38debe.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38dec0.  v3:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38dec4.  call `unlock`(v3) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38deca.  throw v2;
  catch `java.lang.Throwable` @[L38de96..L38deac] goto L38debe;
}
procedure `boolean` `detach`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.detach:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L38dee8.  v1:= (`java.lang.Long`) v1 @kind object;
  #L38deec.  call temp:= `detach`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.detach:(Ljava/lang/Long;Ljava/lang/Object;)Z` @kind virtual;
  #L38def2.  v1:= temp;
  #L38def4.  return v1;
}
procedure `java.lang.Object` `get`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v2 @kind this, `java.lang.Long` v3 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.get:(Ljava/lang/Long;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38df08.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L38df0e.  v0:= temp @kind wide;
  #L38df10.  call temp:= `get2`(v2, v0) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.get2:(J)Ljava/lang/Object;` @kind virtual;
  #L38df16.  v3:= temp @kind object;
  #L38df18.  return v3 @kind object;
}
procedure `java.lang.Object` `get`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L38df2c.  v1:= (`java.lang.Long`) v1 @kind object;
  #L38df30.  call temp:= `get`(v0, v1) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.get:(Ljava/lang/Long;)Ljava/lang/Object;` @kind virtual;
  #L38df36.  v1:= temp @kind object;
  #L38df38.  return v1 @kind object;
}
procedure `java.lang.Object` `get2`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v1 @kind this, `long` v2 ) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.get2:(J)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38df4c.  v0:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38df50.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L38df56.  v0:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeLong.a` @type ^`org.greenrobot.greendao.internal.LongHashMap` @kind object;
  #L38df5a.  call temp:= `get`(v0, v2) @signature `Lorg/greenrobot/greendao/internal/LongHashMap;.get:(J)Ljava/lang/Object;` @kind virtual;
  #L38df60.  v2:= temp @kind object;
  #L38df62.  v2:= (`java.lang.ref.Reference`) v2 @kind object;
  #L38df66.  v3:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38df6a.  call `unlock`(v3) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38df70.  if v2 == 0 then goto L38df7e;
  #L38df74.  call temp:= `get`(v2) @signature `Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;` @kind virtual;
  #L38df7a.  v2:= temp @kind object;
  #L38df7c.  return v2 @kind object;
  #L38df7e.  v2:= 0I;
  #L38df80.  return v2 @kind object;
  #L38df82.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38df84.  v3:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38df88.  call `unlock`(v3) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38df8e.  throw v2;
  catch `java.lang.Throwable` @[L38df56..L38df66] goto L38df82;
}
procedure `java.lang.Object` `get2NoLock`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v1 @kind this, `long` v2 ) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.get2NoLock:(J)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38dfac.  v0:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeLong.a` @type ^`org.greenrobot.greendao.internal.LongHashMap` @kind object;
  #L38dfb0.  call temp:= `get`(v0, v2) @signature `Lorg/greenrobot/greendao/internal/LongHashMap;.get:(J)Ljava/lang/Object;` @kind virtual;
  #L38dfb6.  v2:= temp @kind object;
  #L38dfb8.  v2:= (`java.lang.ref.Reference`) v2 @kind object;
  #L38dfbc.  if v2 == 0 then goto L38dfca;
  #L38dfc0.  call temp:= `get`(v2) @signature `Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;` @kind virtual;
  #L38dfc6.  v2:= temp @kind object;
  #L38dfc8.  return v2 @kind object;
  #L38dfca.  v2:= 0I;
  #L38dfcc.  return v2 @kind object;
}
procedure `java.lang.Object` `getNoLock`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v2 @kind this, `java.lang.Long` v3 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.getNoLock:(Ljava/lang/Long;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38dfe0.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L38dfe6.  v0:= temp @kind wide;
  #L38dfe8.  call temp:= `get2NoLock`(v2, v0) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.get2NoLock:(J)Ljava/lang/Object;` @kind virtual;
  #L38dfee.  v3:= temp @kind object;
  #L38dff0.  return v3 @kind object;
}
procedure `java.lang.Object` `getNoLock`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.getNoLock:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L38e004.  v1:= (`java.lang.Long`) v1 @kind object;
  #L38e008.  call temp:= `getNoLock`(v0, v1) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.getNoLock:(Ljava/lang/Long;)Ljava/lang/Object;` @kind virtual;
  #L38e00e.  v1:= temp @kind object;
  #L38e010.  return v1 @kind object;
}
procedure `void` `lock`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v1 @kind this) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.lock:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38e0a4.  v0:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e0a8.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L38e0ae.  return @kind void;
}
procedure `void` `put`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v2 @kind this, `java.lang.Long` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.put:(Ljava/lang/Long;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38e0c0.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L38e0c6.  v0:= temp @kind wide;
  #L38e0c8.  call `put2`(v2, v0, v4) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.put2:(JLjava/lang/Object;)V` @kind virtual;
  #L38e0ce.  return @kind void;
}
procedure `void` `put`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.put:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L38e0e0.  v1:= (`java.lang.Long`) v1 @kind object;
  #L38e0e4.  call `put`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.put:(Ljava/lang/Long;Ljava/lang/Object;)V` @kind virtual;
  #L38e0ea.  return @kind void;
}
procedure `void` `put2`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v2 @kind this, `long` v3 , `java.lang.Object` v5 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.put2:(JLjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38e0fc.  v0:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e100.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L38e106.  v0:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeLong.a` @type ^`org.greenrobot.greendao.internal.LongHashMap` @kind object;
  #L38e10a.  v1:= new `java.lang.ref.WeakReference`;
  #L38e10e.  call `<init>`(v1, v5) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L38e114.  call temp:= `put`(v0, v3, v1) @signature `Lorg/greenrobot/greendao/internal/LongHashMap;.put:(JLjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38e11a.  v3:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e11e.  call `unlock`(v3) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e124.  return @kind void;
  #L38e126.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38e128.  v4:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e12c.  call `unlock`(v4) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e132.  throw v3;
  catch `java.lang.Throwable` @[L38e106..L38e11a] goto L38e126;
}
procedure `void` `put2NoLock`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v2 @kind this, `long` v3 , `java.lang.Object` v5 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.put2NoLock:(JLjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38e150.  v0:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeLong.a` @type ^`org.greenrobot.greendao.internal.LongHashMap` @kind object;
  #L38e154.  v1:= new `java.lang.ref.WeakReference`;
  #L38e158.  call `<init>`(v1, v5) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L38e15e.  call temp:= `put`(v0, v3, v1) @signature `Lorg/greenrobot/greendao/internal/LongHashMap;.put:(JLjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38e164.  return @kind void;
}
procedure `void` `putNoLock`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v2 @kind this, `java.lang.Long` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.putNoLock:(Ljava/lang/Long;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38e178.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L38e17e.  v0:= temp @kind wide;
  #L38e180.  call `put2NoLock`(v2, v0, v4) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.put2NoLock:(JLjava/lang/Object;)V` @kind virtual;
  #L38e186.  return @kind void;
}
procedure `void` `putNoLock`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.putNoLock:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L38e198.  v1:= (`java.lang.Long`) v1 @kind object;
  #L38e19c.  call `putNoLock`(v0, v1, v2) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.putNoLock:(Ljava/lang/Long;Ljava/lang/Object;)V` @kind virtual;
  #L38e1a2.  return @kind void;
}
procedure `void` `remove`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v4 @kind this, `java.lang.Iterable` v5 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.remove:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38e1b4.  v0:= v4.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e1b8.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L38e1be.  call temp:= `iterator`(v5) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L38e1c4.  v5:= temp @kind object;
  #L38e1c6.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L38e1cc.  v0:= temp;
  #L38e1ce.  if v0 == 0 then goto L38e1f2;
  #L38e1d2.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L38e1d8.  v0:= temp @kind object;
  #L38e1da.  v0:= (`java.lang.Long`) v0 @kind object;
  #L38e1de.  v1:= v4.`org.greenrobot.greendao.identityscope.IdentityScopeLong.a` @type ^`org.greenrobot.greendao.internal.LongHashMap` @kind object;
  #L38e1e2.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L38e1e8.  v2:= temp @kind wide;
  #L38e1ea.  call temp:= `remove`(v1, v2) @signature `Lorg/greenrobot/greendao/internal/LongHashMap;.remove:(J)Ljava/lang/Object;` @kind virtual;
  #L38e1f0.  goto L38e1c6;
  #L38e1f2.  v5:= v4.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e1f6.  call `unlock`(v5) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e1fc.  return @kind void;
  #L38e1fe.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38e200.  v0:= v4.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e204.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e20a.  throw v5;
  catch `java.lang.Throwable` @[L38e1be..L38e1f0] goto L38e1fe;
}
procedure `void` `remove`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v3 @kind this, `java.lang.Long` v4 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.remove:(Ljava/lang/Long;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L38e228.  v0:= v3.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e22c.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L38e232.  v0:= v3.`org.greenrobot.greendao.identityscope.IdentityScopeLong.a` @type ^`org.greenrobot.greendao.internal.LongHashMap` @kind object;
  #L38e236.  call temp:= `longValue`(v4) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L38e23c.  v1:= temp @kind wide;
  #L38e23e.  call temp:= `remove`(v0, v1) @signature `Lorg/greenrobot/greendao/internal/LongHashMap;.remove:(J)Ljava/lang/Object;` @kind virtual;
  #L38e244.  v4:= v3.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e248.  call `unlock`(v4) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e24e.  return @kind void;
  #L38e250.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38e252.  v0:= v3.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e256.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e25c.  throw v4;
  catch `java.lang.Throwable` @[L38e232..L38e244] goto L38e250;
}
procedure `void` `remove`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.remove:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L38e27c.  v1:= (`java.lang.Long`) v1 @kind object;
  #L38e280.  call `remove`(v0, v1) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.remove:(Ljava/lang/Long;)V` @kind virtual;
  #L38e286.  return @kind void;
}
procedure `void` `reserveRoom`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v1 @kind this, `int` v2 ) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.reserveRoom:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38e298.  v0:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeLong.a` @type ^`org.greenrobot.greendao.internal.LongHashMap` @kind object;
  #L38e29c.  call `reserveRoom`(v0, v2) @signature `Lorg/greenrobot/greendao/internal/LongHashMap;.reserveRoom:(I)V` @kind virtual;
  #L38e2a2.  return @kind void;
}
procedure `void` `unlock`(`org.greenrobot.greendao.identityscope.IdentityScopeLong` v1 @kind this) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeLong;.unlock:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38e2b4.  v0:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeLong.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e2b8.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e2be.  return @kind void;
}
