record `org.greenrobot.greendao.identityscope.IdentityScopeObject` @kind class @AccessFlag PUBLIC extends `org.greenrobot.greendao.identityscope.IdentityScope` @kind interface {
  `java.util.HashMap` `org.greenrobot.greendao.identityscope.IdentityScopeObject.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.locks.ReentrantLock` `org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.greenrobot.greendao.identityscope.IdentityScopeObject` v1 @kind this) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeObject;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L38e3c0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38e3c6.  v0:= new `java.util.HashMap`;
  #L38e3ca.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L38e3d0.  v1.`org.greenrobot.greendao.identityscope.IdentityScopeObject.a` @type ^`java.util.HashMap` := v0 @kind object;
  #L38e3d4.  v0:= new `java.util.concurrent.locks.ReentrantLock`;
  #L38e3d8.  call `<init>`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V` @kind direct;
  #L38e3de.  v1.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` := v0 @kind object;
  #L38e3e2.  return @kind void;
}
procedure `void` `clear`(`org.greenrobot.greendao.identityscope.IdentityScopeObject` v2 @kind this) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeObject;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38e3f4.  v0:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e3f8.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L38e3fe.  v0:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeObject.a` @type ^`java.util.HashMap` @kind object;
  #L38e402.  call `clear`(v0) @signature `Ljava/util/HashMap;.clear:()V` @kind virtual;
  #L38e408.  v0:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e40c.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e412.  return @kind void;
  #L38e414.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38e416.  v1:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e41a.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e420.  throw v0;
  catch `java.lang.Throwable` @[L38e3fe..L38e408] goto L38e414;
}
procedure `boolean` `detach`(`org.greenrobot.greendao.identityscope.IdentityScopeObject` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeObject;.detach:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38e2d0.  v0:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e2d4.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L38e2da.  call temp:= `get`(v1, v2) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeObject;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38e2e0.  v0:= temp @kind object;
  #L38e2e2.  if v0 != v3 then goto L38e2fe;
  #L38e2e6.  if v3 == 0 then goto L38e2fe;
  #L38e2ea.  call `remove`(v1, v2) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeObject;.remove:(Ljava/lang/Object;)V` @kind virtual;
  #L38e2f0.  v2:= 1I;
  #L38e2f2.  v3:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e2f6.  call `unlock`(v3) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e2fc.  return v2;
  #L38e2fe.  v2:= 0I;
  #L38e300.  goto L38e2f2;
  #L38e302.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38e304.  v3:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e308.  call `unlock`(v3) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e30e.  throw v2;
  catch `java.lang.Throwable` @[L38e2da..L38e2f0] goto L38e302;
}
procedure `java.lang.Object` `get`(`org.greenrobot.greendao.identityscope.IdentityScopeObject` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeObject;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38e32c.  v0:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e330.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L38e336.  v0:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeObject.a` @type ^`java.util.HashMap` @kind object;
  #L38e33a.  call temp:= `get`(v0, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38e340.  v2:= temp @kind object;
  #L38e342.  v2:= (`java.lang.ref.Reference`) v2 @kind object;
  #L38e346.  v0:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e34a.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e350.  if v2 == 0 then goto L38e35e;
  #L38e354.  call temp:= `get`(v2) @signature `Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;` @kind virtual;
  #L38e35a.  v2:= temp @kind object;
  #L38e35c.  return v2 @kind object;
  #L38e35e.  v2:= 0I;
  #L38e360.  return v2 @kind object;
  #L38e362.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38e364.  v0:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e368.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e36e.  throw v2;
  catch `java.lang.Throwable` @[L38e336..L38e346] goto L38e362;
}
procedure `java.lang.Object` `getNoLock`(`org.greenrobot.greendao.identityscope.IdentityScopeObject` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeObject;.getNoLock:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38e38c.  v0:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeObject.a` @type ^`java.util.HashMap` @kind object;
  #L38e390.  call temp:= `get`(v0, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38e396.  v2:= temp @kind object;
  #L38e398.  v2:= (`java.lang.ref.Reference`) v2 @kind object;
  #L38e39c.  if v2 == 0 then goto L38e3aa;
  #L38e3a0.  call temp:= `get`(v2) @signature `Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;` @kind virtual;
  #L38e3a6.  v2:= temp @kind object;
  #L38e3a8.  return v2 @kind object;
  #L38e3aa.  v2:= 0I;
  #L38e3ac.  return v2 @kind object;
}
procedure `void` `lock`(`org.greenrobot.greendao.identityscope.IdentityScopeObject` v1 @kind this) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeObject;.lock:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38e440.  v0:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e444.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L38e44a.  return @kind void;
}
procedure `void` `put`(`org.greenrobot.greendao.identityscope.IdentityScopeObject` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeObject;.put:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38e45c.  v0:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e460.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L38e466.  v0:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeObject.a` @type ^`java.util.HashMap` @kind object;
  #L38e46a.  v1:= new `java.lang.ref.WeakReference`;
  #L38e46e.  call `<init>`(v1, v4) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L38e474.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38e47a.  v3:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e47e.  call `unlock`(v3) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e484.  return @kind void;
  #L38e486.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38e488.  v4:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e48c.  call `unlock`(v4) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e492.  throw v3;
  catch `java.lang.Throwable` @[L38e466..L38e47a] goto L38e486;
}
procedure `void` `putNoLock`(`org.greenrobot.greendao.identityscope.IdentityScopeObject` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeObject;.putNoLock:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38e4b0.  v0:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeObject.a` @type ^`java.util.HashMap` @kind object;
  #L38e4b4.  v1:= new `java.lang.ref.WeakReference`;
  #L38e4b8.  call `<init>`(v1, v4) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L38e4be.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38e4c4.  return @kind void;
}
procedure `void` `remove`(`org.greenrobot.greendao.identityscope.IdentityScopeObject` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeObject;.remove:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38e4d8.  v0:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e4dc.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L38e4e2.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L38e4e8.  v3:= temp @kind object;
  #L38e4ea.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L38e4f0.  v0:= temp;
  #L38e4f2.  if v0 == 0 then goto L38e50a;
  #L38e4f6.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L38e4fc.  v0:= temp @kind object;
  #L38e4fe.  v1:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeObject.a` @type ^`java.util.HashMap` @kind object;
  #L38e502.  call temp:= `remove`(v1, v0) @signature `Ljava/util/HashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38e508.  goto L38e4ea;
  #L38e50a.  v3:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e50e.  call `unlock`(v3) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e514.  return @kind void;
  #L38e516.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38e518.  v0:= v2.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e51c.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e522.  throw v3;
  catch `java.lang.Throwable` @[L38e4e2..L38e508] goto L38e516;
}
procedure `void` `remove`(`org.greenrobot.greendao.identityscope.IdentityScopeObject` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeObject;.remove:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38e540.  v0:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e544.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L38e54a.  v0:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeObject.a` @type ^`java.util.HashMap` @kind object;
  #L38e54e.  call temp:= `remove`(v0, v2) @signature `Ljava/util/HashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38e554.  v2:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e558.  call `unlock`(v2) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e55e.  return @kind void;
  #L38e560.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38e562.  v0:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e566.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e56c.  throw v2;
  catch `java.lang.Throwable` @[L38e54a..L38e554] goto L38e560;
}
procedure `void` `reserveRoom`(`org.greenrobot.greendao.identityscope.IdentityScopeObject` v0 @kind this, `int` v1 ) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeObject;.reserveRoom:(I)V` @AccessFlag PUBLIC {
    temp;

  #L38e58c.  return @kind void;
}
procedure `void` `unlock`(`org.greenrobot.greendao.identityscope.IdentityScopeObject` v1 @kind this) @signature `Lorg/greenrobot/greendao/identityscope/IdentityScopeObject;.unlock:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38e5a0.  v0:= v1.`org.greenrobot.greendao.identityscope.IdentityScopeObject.b` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L38e5a4.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L38e5aa.  return @kind void;
}
