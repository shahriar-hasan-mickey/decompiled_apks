record `org.eclipse.paho.client.mqttv3.MqttConnectOptions` @kind class @AccessFlag PUBLIC {
  `boolean` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.cleanSession` @AccessFlag PRIVATE;
  `int` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.connectionTimeout` @AccessFlag PRIVATE;
  `int` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.keepAliveInterval` @AccessFlag PRIVATE;
  `char`[] `org.eclipse.paho.client.mqttv3.MqttConnectOptions.password` @AccessFlag PRIVATE;
  `java.lang.String`[] `org.eclipse.paho.client.mqttv3.MqttConnectOptions.serverURIs` @AccessFlag PRIVATE;
  `javax.net.SocketFactory` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.socketFactory` @AccessFlag PRIVATE;
  `java.util.Properties` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.sslClientProps` @AccessFlag PRIVATE;
  `java.lang.String` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.userName` @AccessFlag PRIVATE;
  `java.lang.String` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.willDestination` @AccessFlag PRIVATE;
  `org.eclipse.paho.client.mqttv3.MqttMessage` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.willMessage` @AccessFlag PRIVATE;
}
global `boolean` `@@org.eclipse.paho.client.mqttv3.MqttConnectOptions.CLEAN_SESSION_DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.eclipse.paho.client.mqttv3.MqttConnectOptions.CONNECTION_TIMEOUT_DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.eclipse.paho.client.mqttv3.MqttConnectOptions.KEEP_ALIVE_INTERVAL_DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.eclipse.paho.client.mqttv3.MqttConnectOptions.URI_TYPE_LOCAL` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@org.eclipse.paho.client.mqttv3.MqttConnectOptions.URI_TYPE_SSL` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@org.eclipse.paho.client.mqttv3.MqttConnectOptions.URI_TYPE_TCP` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<init>`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v2 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L37e83c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37e842.  v0:= 60I;
  #L37e846.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.keepAliveInterval` @type ^`int` := v0;
  #L37e84a.  v0:= 0I;
  #L37e84c.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.willDestination` @type ^`java.lang.String` := v0 @kind object;
  #L37e850.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.willMessage` @type ^`org.eclipse.paho.client.mqttv3.MqttMessage` := v0 @kind object;
  #L37e854.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.sslClientProps` @type ^`java.util.Properties` := v0 @kind object;
  #L37e858.  v1:= 1I;
  #L37e85a.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.cleanSession` @type ^`boolean` := v1 @kind boolean;
  #L37e85e.  v1:= 30I;
  #L37e862.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.connectionTimeout` @type ^`int` := v1;
  #L37e866.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.serverURIs` @type ^`java.lang.String`[] := v0 @kind object;
  #L37e86a.  return @kind void;
}
procedure `int` `validateURI`(`java.lang.String` v3 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.validateURI:(Ljava/lang/String;)I` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L37e5c4.  v0:= new `java.net.URI`;
  #L37e5c8.  call `<init>`(v0, v3) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37e5ce.  call temp:= `getPath`(v0) @signature `Ljava/net/URI;.getPath:()Ljava/lang/String;` @kind virtual;
  #L37e5d4.  v1:= temp @kind object;
  #L37e5d6.  v2:= "" @kind object;
  #L37e5da.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L37e5e0.  v1:= temp;
  #L37e5e2.  if v1 == 0 then goto L37e646;
  #L37e5e6.  call temp:= `getScheme`(v0) @signature `Ljava/net/URI;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L37e5ec.  v1:= temp @kind object;
  #L37e5ee.  v2:= "tcp" @kind object;
  #L37e5f2.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L37e5f8.  v1:= temp;
  #L37e5fa.  if v1 == 0 then goto L37e602;
  #L37e5fe.  v3:= 0I;
  #L37e600.  return v3;
  #L37e602.  call temp:= `getScheme`(v0) @signature `Ljava/net/URI;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L37e608.  v1:= temp @kind object;
  #L37e60a.  v2:= "ssl" @kind object;
  #L37e60e.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L37e614.  v1:= temp;
  #L37e616.  if v1 == 0 then goto L37e61e;
  #L37e61a.  v3:= 1I;
  #L37e61c.  return v3;
  #L37e61e.  call temp:= `getScheme`(v0) @signature `Ljava/net/URI;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L37e624.  v0:= temp @kind object;
  #L37e626.  v1:= "local" @kind object;
  #L37e62a.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L37e630.  v0:= temp;
  #L37e632.  if v0 == 0 then goto L37e63a;
  #L37e636.  v3:= 2I;
  #L37e638.  return v3;
  #L37e63a.  v0:= new `java.lang.IllegalArgumentException`;
  #L37e63e.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37e644.  throw v0;
  #L37e646.  v0:= new `java.lang.IllegalArgumentException`;
  #L37e64a.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37e650.  throw v0;
  #L37e652.  v0:= new `java.lang.IllegalArgumentException`;
  #L37e656.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37e65c.  throw v0;
  catch `java.net.URISyntaxException` @[L37e5c4..L37e652] goto L37e652;
}
procedure `void` `validateWill`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.validateWill:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;

  #L37ea2c.  if v1 == 0 then goto L37ea3c;
  #L37ea30.  if v2 == 0 then goto L37ea3c;
  #L37ea34.  call `validateTopic`(v1) @signature `Lorg/eclipse/paho/client/mqttv3/MqttAsyncClient;.validateTopic:(Ljava/lang/String;)V` @kind static;
  #L37ea3a.  return @kind void;
  #L37ea3c.  v1:= new `java.lang.IllegalArgumentException`;
  #L37ea40.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L37ea46.  throw v1;
}
procedure `int` `getConnectionTimeout`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getConnectionTimeout:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37e594.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.connectionTimeout` @type ^`int`;
  #L37e598.  return v0;
}
procedure `java.util.Properties` `getDebug`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v4 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getDebug:()Ljava/util/Properties;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L37e6f0.  v0:= new `java.util.Properties`;
  #L37e6f4.  call `<init>`(v0) @signature `Ljava/util/Properties;.<init>:()V` @kind direct;
  #L37e6fa.  v1:= new `java.lang.Boolean`;
  #L37e6fe.  call temp:= `isCleanSession`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.isCleanSession:()Z` @kind virtual;
  #L37e704.  v2:= temp;
  #L37e706.  call `<init>`(v1, v2) @signature `Ljava/lang/Boolean;.<init>:(Z)V` @kind direct;
  #L37e70c.  v2:= "CleanSession" @kind object;
  #L37e710.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L37e716.  v1:= new `java.lang.Integer`;
  #L37e71a.  call temp:= `getConnectionTimeout`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getConnectionTimeout:()I` @kind virtual;
  #L37e720.  v2:= temp;
  #L37e722.  call `<init>`(v1, v2) @signature `Ljava/lang/Integer;.<init>:(I)V` @kind direct;
  #L37e728.  v2:= "ConTimeout" @kind object;
  #L37e72c.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L37e732.  v1:= new `java.lang.Integer`;
  #L37e736.  call temp:= `getKeepAliveInterval`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getKeepAliveInterval:()I` @kind virtual;
  #L37e73c.  v2:= temp;
  #L37e73e.  call `<init>`(v1, v2) @signature `Ljava/lang/Integer;.<init>:(I)V` @kind direct;
  #L37e744.  v2:= "KeepAliveInterval" @kind object;
  #L37e748.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L37e74e.  call temp:= `getUserName`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getUserName:()Ljava/lang/String;` @kind virtual;
  #L37e754.  v1:= temp @kind object;
  #L37e756.  v2:= "null" @kind object;
  #L37e75a.  if v1 != 0 then goto L37e762;
  #L37e75e.  v1:= v2 @kind object;
  #L37e760.  goto L37e76a;
  #L37e762.  call temp:= `getUserName`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getUserName:()Ljava/lang/String;` @kind virtual;
  #L37e768.  v1:= temp @kind object;
  #L37e76a.  v3:= "UserName" @kind object;
  #L37e76e.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L37e774.  call temp:= `getWillDestination`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getWillDestination:()Ljava/lang/String;` @kind virtual;
  #L37e77a.  v1:= temp @kind object;
  #L37e77c.  if v1 != 0 then goto L37e784;
  #L37e780.  v1:= v2 @kind object;
  #L37e782.  goto L37e78c;
  #L37e784.  call temp:= `getWillDestination`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getWillDestination:()Ljava/lang/String;` @kind virtual;
  #L37e78a.  v1:= temp @kind object;
  #L37e78c.  v3:= "WillDestination" @kind object;
  #L37e790.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L37e796.  call temp:= `getSocketFactory`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getSocketFactory:()Ljavax/net/SocketFactory;` @kind virtual;
  #L37e79c.  v1:= temp @kind object;
  #L37e79e.  v3:= "SocketFactory" @kind object;
  #L37e7a2.  if v1 != 0 then goto L37e7ae;
  #L37e7a6.  call temp:= `put`(v0, v3, v2) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L37e7ac.  goto L37e7bc;
  #L37e7ae.  call temp:= `getSocketFactory`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getSocketFactory:()Ljavax/net/SocketFactory;` @kind virtual;
  #L37e7b4.  v1:= temp @kind object;
  #L37e7b6.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L37e7bc.  call temp:= `getSSLProperties`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getSSLProperties:()Ljava/util/Properties;` @kind virtual;
  #L37e7c2.  v1:= temp @kind object;
  #L37e7c4.  v3:= "SSLProperties" @kind object;
  #L37e7c8.  if v1 != 0 then goto L37e7d4;
  #L37e7cc.  call temp:= `put`(v0, v3, v2) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L37e7d2.  goto L37e7e2;
  #L37e7d4.  call temp:= `getSSLProperties`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getSSLProperties:()Ljava/util/Properties;` @kind virtual;
  #L37e7da.  v1:= temp @kind object;
  #L37e7dc.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L37e7e2.  return v0 @kind object;
}
procedure `int` `getKeepAliveInterval`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getKeepAliveInterval:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37e5ac.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.keepAliveInterval` @type ^`int`;
  #L37e5b0.  return v0;
}
procedure `char`[] `getPassword`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getPassword:()[C` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37e57c.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.password` @type ^`char`[] @kind object;
  #L37e580.  return v0 @kind object;
}
procedure `java.util.Properties` `getSSLProperties`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getSSLProperties:()Ljava/util/Properties;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37e7f4.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.sslClientProps` @type ^`java.util.Properties` @kind object;
  #L37e7f8.  return v0 @kind object;
}
procedure `java.lang.String`[] `getServerURIs`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getServerURIs:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37e6d8.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.serverURIs` @type ^`java.lang.String`[] @kind object;
  #L37e6dc.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `getSocketFactory`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getSocketFactory:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37e80c.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.socketFactory` @type ^`javax.net.SocketFactory` @kind object;
  #L37e810.  return v0 @kind object;
}
procedure `java.lang.String` `getUserName`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getUserName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37e680.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.userName` @type ^`java.lang.String` @kind object;
  #L37e684.  return v0 @kind object;
}
procedure `java.lang.String` `getWillDestination`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getWillDestination:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37e698.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.willDestination` @type ^`java.lang.String` @kind object;
  #L37e69c.  return v0 @kind object;
}
procedure `org.eclipse.paho.client.mqttv3.MqttMessage` `getWillMessage`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getWillMessage:()Lorg/eclipse/paho/client/mqttv3/MqttMessage;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37e824.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.willMessage` @type ^`org.eclipse.paho.client.mqttv3.MqttMessage` @kind object;
  #L37e828.  return v0 @kind object;
}
procedure `boolean` `isCleanSession`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.isCleanSession:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37e564.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.cleanSession` @type ^`boolean` @kind boolean;
  #L37e568.  return v0;
}
procedure `void` `setCleanSession`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `boolean` v1 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setCleanSession:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L37e87c.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.cleanSession` @type ^`boolean` := v1 @kind boolean;
  #L37e880.  return @kind void;
}
procedure `void` `setConnectionTimeout`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `int` v1 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setConnectionTimeout:(I)V` @AccessFlag PUBLIC {
    temp;

  #L37e894.  if v1 < 0 then goto L37e89e;
  #L37e898.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.connectionTimeout` @type ^`int` := v1;
  #L37e89c.  return @kind void;
  #L37e89e.  v1:= new `java.lang.IllegalArgumentException`;
  #L37e8a2.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L37e8a8.  throw v1;
}
procedure `void` `setKeepAliveInterval`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `int` v1 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setKeepAliveInterval:(I)V` @AccessFlag PUBLIC {
    temp;

  #L37e8bc.  if v1 < 0 then goto L37e8c6;
  #L37e8c0.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.keepAliveInterval` @type ^`int` := v1;
  #L37e8c4.  return @kind void;
  #L37e8c6.  v1:= new `java.lang.IllegalArgumentException`;
  #L37e8ca.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L37e8d0.  throw v1;
}
procedure `void` `setPassword`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `char`[] v1 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setPassword:([C)V` @AccessFlag PUBLIC {
    temp;

  #L37e8e4.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.password` @type ^`char`[] := v1 @kind object;
  #L37e8e8.  return @kind void;
}
procedure `void` `setSSLProperties`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `java.util.Properties` v1 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setSSLProperties:(Ljava/util/Properties;)V` @AccessFlag PUBLIC {
    temp;

  #L37e8fc.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.sslClientProps` @type ^`java.util.Properties` := v1 @kind object;
  #L37e900.  return @kind void;
}
procedure `void` `setServerURIs`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v2 @kind this, `java.lang.String`[] v3 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setServerURIs:([Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L37e914.  v0:= 0I;
  #L37e916.  v1:= length @variable v3;
  #L37e918.  if v0 >= v1 then goto L37e92c;
  #L37e91c.  v1:= v3[v0] @kind object;
  #L37e920.  call temp:= `validateURI`(v1) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.validateURI:(Ljava/lang/String;)I` @kind static;
  #L37e926.  v0:= v0 + 1;
  #L37e92a.  goto L37e916;
  #L37e92c.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.serverURIs` @type ^`java.lang.String`[] := v3 @kind object;
  #L37e930.  return @kind void;
}
procedure `void` `setSocketFactory`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `javax.net.SocketFactory` v1 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setSocketFactory:(Ljavax/net/SocketFactory;)V` @AccessFlag PUBLIC {
    temp;

  #L37e944.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.socketFactory` @type ^`javax.net.SocketFactory` := v1 @kind object;
  #L37e948.  return @kind void;
}
procedure `void` `setUserName`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setUserName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L37e95c.  if v3 == 0 then goto L37e986;
  #L37e960.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L37e966.  v0:= temp @kind object;
  #L37e968.  v1:= "" @kind object;
  #L37e96c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L37e972.  v0:= temp;
  #L37e974.  if v0 != 0 then goto L37e97a;
  #L37e978.  goto L37e986;
  #L37e97a.  v3:= new `java.lang.IllegalArgumentException`;
  #L37e97e.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L37e984.  throw v3;
  #L37e986.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.userName` @type ^`java.lang.String` := v3 @kind object;
  #L37e98a.  return @kind void;
}
procedure `void` `setWill`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `java.lang.String` v1 @kind object, `org.eclipse.paho.client.mqttv3.MqttMessage` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setWill:(Ljava/lang/String;Lorg/eclipse/paho/client/mqttv3/MqttMessage;IZ)V` @AccessFlag PROTECTED {
    temp;

  #L37e9c4.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.willDestination` @type ^`java.lang.String` := v1 @kind object;
  #L37e9c8.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.willMessage` @type ^`org.eclipse.paho.client.mqttv3.MqttMessage` := v2 @kind object;
  #L37e9cc.  call `setQos`(v2, v3) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.setQos:(I)V` @kind virtual;
  #L37e9d2.  v1:= v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.willMessage` @type ^`org.eclipse.paho.client.mqttv3.MqttMessage` @kind object;
  #L37e9d6.  call `setRetained`(v1, v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.setRetained:(Z)V` @kind virtual;
  #L37e9dc.  v1:= v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.willMessage` @type ^`org.eclipse.paho.client.mqttv3.MqttMessage` @kind object;
  #L37e9e0.  v2:= 0I;
  #L37e9e2.  call `setMutable`(v1, v2) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.setMutable:(Z)V` @kind virtual;
  #L37e9e8.  return @kind void;
}
procedure `void` `setWill`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this, `java.lang.String` v2 @kind object, `byte`[] v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setWill:(Ljava/lang/String;[BIZ)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37e99c.  call `validateWill`(v1, v2, v3) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.validateWill:(Ljava/lang/String;Ljava/lang/Object;)V` @kind direct;
  #L37e9a2.  v0:= new `org.eclipse.paho.client.mqttv3.MqttMessage`;
  #L37e9a6.  call `<init>`(v0, v3) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.<init>:([B)V` @kind direct;
  #L37e9ac.  call `setWill`(v1, v2, v0, v4, v5) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setWill:(Ljava/lang/String;Lorg/eclipse/paho/client/mqttv3/MqttMessage;IZ)V` @kind virtual;
  #L37e9b2.  return @kind void;
}
procedure `void` `setWill`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this, `org.eclipse.paho.client.mqttv3.MqttTopic` v2 @kind object, `byte`[] v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setWill:(Lorg/eclipse/paho/client/mqttv3/MqttTopic;[BIZ)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37e9fc.  call temp:= `getName`(v2) @signature `Lorg/eclipse/paho/client/mqttv3/MqttTopic;.getName:()Ljava/lang/String;` @kind virtual;
  #L37ea02.  v2:= temp @kind object;
  #L37ea04.  call `validateWill`(v1, v2, v3) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.validateWill:(Ljava/lang/String;Ljava/lang/Object;)V` @kind direct;
  #L37ea0a.  v0:= new `org.eclipse.paho.client.mqttv3.MqttMessage`;
  #L37ea0e.  call `<init>`(v0, v3) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.<init>:([B)V` @kind direct;
  #L37ea14.  call `setWill`(v1, v2, v0, v4, v5) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setWill:(Ljava/lang/String;Lorg/eclipse/paho/client/mqttv3/MqttMessage;IZ)V` @kind virtual;
  #L37ea1a.  return @kind void;
}
procedure `java.lang.String` `toString`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v2 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L37e6b0.  call temp:= `getDebug`(v2) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getDebug:()Ljava/util/Properties;` @kind virtual;
  #L37e6b6.  v0:= temp @kind object;
  #L37e6b8.  v1:= "Connection options" @kind object;
  #L37e6bc.  call temp:= `dumpProperties`(v0, v1) @signature `Lorg/eclipse/paho/client/mqttv3/util/Debug;.dumpProperties:(Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L37e6c2.  v0:= temp @kind object;
  #L37e6c4.  return v0 @kind object;
}
