record `org.eclipse.paho.client.mqttv3.logging.LoggerFactory` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String` `@@org.eclipse.paho.client.mqttv3.logging.LoggerFactory.MQTT_CLIENT_MSG_CAT` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@org.eclipse.paho.client.mqttv3.logging.LoggerFactory.className` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@org.eclipse.paho.client.mqttv3.logging.LoggerFactory.jsr47LoggerClassName` @AccessFlag PRIVATE_STATIC;
global `java.lang.String` `@@org.eclipse.paho.client.mqttv3.logging.LoggerFactory.overrideloggerClassName` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/eclipse/paho/client/mqttv3/logging/LoggerFactory;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L38848c.  return @kind void;
}
procedure `void` `<init>`(`org.eclipse.paho.client.mqttv3.logging.LoggerFactory` v0 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/logging/LoggerFactory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3884a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3884a6.  return @kind void;
}
procedure `org.eclipse.paho.client.mqttv3.logging.Logger` `getLogger`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/logging/LoggerFactory;.getLogger:(Ljava/lang/String;Ljava/lang/String;)Lorg/eclipse/paho/client/mqttv3/logging/Logger;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3883e4.  v0:= `@@org.eclipse.paho.client.mqttv3.logging.LoggerFactory.overrideloggerClassName` @type ^`java.lang.String` @kind object;
  #L3883e8.  if v0 != 0 then goto L3883f0;
  #L3883ec.  v0:= `@@org.eclipse.paho.client.mqttv3.logging.LoggerFactory.jsr47LoggerClassName` @type ^`java.lang.String` @kind object;
  #L3883f0.  call temp:= `getBundle`(v2) @signature `Ljava/util/ResourceBundle;.getBundle:(Ljava/lang/String;)Ljava/util/ResourceBundle;` @kind static;
  #L3883f6.  v2:= temp @kind object;
  #L3883f8.  v1:= 0I;
  #L3883fa.  call temp:= `getLogger`(v0, v2, v3, v1) @signature `Lorg/eclipse/paho/client/mqttv3/logging/LoggerFactory;.getLogger:(Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/String;)Lorg/eclipse/paho/client/mqttv3/logging/Logger;` @kind static;
  #L388400.  v2:= temp @kind object;
  #L388402.  if v2 == 0 then goto L388408;
  #L388406.  return v2 @kind object;
  #L388408.  v2:= new `java.util.MissingResourceException`;
  #L38840c.  v0:= `@@org.eclipse.paho.client.mqttv3.logging.LoggerFactory.className` @type ^`java.lang.String` @kind object;
  #L388410.  v1:= "Error locating the logging class" @kind object;
  #L388414.  call `<init>`(v2, v1, v0, v3) @signature `Ljava/util/MissingResourceException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L38841a.  throw v2;
}
procedure `org.eclipse.paho.client.mqttv3.logging.Logger` `getLogger`(`java.lang.String` v1 @kind object, `java.util.ResourceBundle` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/logging/LoggerFactory;.getLogger:(Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/String;)Lorg/eclipse/paho/client/mqttv3/logging/Logger;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L38842c.  v0:= 0I;
  #L38842e.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L388434.  v1:= temp @kind object;
  #L388436.  if v1 == 0 then goto L388450;
  #L38843a.  call temp:= `newInstance`(v1) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L388440.  v1:= temp @kind object;
  #L388442.  v1:= (`org.eclipse.paho.client.mqttv3.logging.Logger`) v1 @kind object;
  #L388446.  call `initialise`(v1, v2, v3, v4) @signature `Lorg/eclipse/paho/client/mqttv3/logging/Logger;.initialise:(Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/String;)V` @kind interface;
  #L38844c.  v0:= v1 @kind object;
  #L38844e.  
  #L388450.  return v0 @kind object;
  catch `java.lang.NoClassDefFoundError` @[L38842e..L388436] goto L388450;
  catch `java.lang.ClassNotFoundException` @[L38842e..L388436] goto L388450;
  catch `java.lang.IllegalAccessException` @[L38843a..L388446] goto L388450;
  catch `java.lang.InstantiationException` @[L38843a..L388446] goto L388450;
  catch `java.lang.ExceptionInInitializerError` @[L38843a..L388446] goto L388450;
  catch `java.lang.SecurityException` @[L38843a..L388446] goto L388450;
}
procedure `java.lang.String` `getLoggingProperty`(`java.lang.String` v8 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/logging/LoggerFactory;.getLoggingProperty:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L388368.  v0:= 0I;
  #L38836a.  v1:= "java.util.logging.LogManager" @kind object;
  #L38836e.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L388374.  v1:= temp @kind object;
  #L388376.  v2:= "getLogManager" @kind object;
  #L38837a.  v3:= 0I;
  #L38837c.  v4:= new `java.lang.Class`[v3];
  #L388380.  call temp:= `getMethod`(v1, v2, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L388386.  v2:= temp @kind object;
  #L388388.  call temp:= `invoke`(v2, v0, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38838e.  v2:= temp @kind object;
  #L388390.  v4:= "getProperty" @kind object;
  #L388394.  v5:= 1I;
  #L388396.  v6:= new `java.lang.Class`[v5];
  #L38839a.  v7:= constclass @type ^`java.lang.String` @kind object;
  #L38839e.  v6[v3]:= v7 @kind object;
  #L3883a2.  call temp:= `getMethod`(v1, v4, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3883a8.  v1:= temp @kind object;
  #L3883aa.  v4:= new `java.lang.Object`[v5];
  #L3883ae.  v4[v3]:= v8 @kind object;
  #L3883b2.  call temp:= `invoke`(v1, v2, v4) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3883b8.  v8:= temp @kind object;
  #L3883ba.  v8:= (`java.lang.String`) v8 @kind object;
  #L3883be.  v0:= v8 @kind object;
  #L3883c0.  return v0 @kind object;
  catch `java.lang.Exception` @[L38836a..L3883be] goto L3883c0;
}
procedure `void` `setLogger`(`java.lang.String` v0 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/logging/LoggerFactory;.setLogger:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3884b8.  `@@org.eclipse.paho.client.mqttv3.logging.LoggerFactory.overrideloggerClassName` @type ^`java.lang.String` := v0 @kind object;
  #L3884bc.  return @kind void;
}
