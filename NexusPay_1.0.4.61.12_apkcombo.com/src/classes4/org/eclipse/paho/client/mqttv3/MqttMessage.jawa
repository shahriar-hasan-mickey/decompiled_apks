record `org.eclipse.paho.client.mqttv3.MqttMessage` @kind class @AccessFlag PUBLIC {
  `boolean` `org.eclipse.paho.client.mqttv3.MqttMessage.dup` @AccessFlag PRIVATE;
  `boolean` `org.eclipse.paho.client.mqttv3.MqttMessage.mutable` @AccessFlag PRIVATE;
  `byte`[] `org.eclipse.paho.client.mqttv3.MqttMessage.payload` @AccessFlag PRIVATE;
  `int` `org.eclipse.paho.client.mqttv3.MqttMessage.qos` @AccessFlag PRIVATE;
  `boolean` `org.eclipse.paho.client.mqttv3.MqttMessage.retained` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.eclipse.paho.client.mqttv3.MqttMessage` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L37ec80.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37ec86.  v0:= 1I;
  #L37ec88.  v1.`org.eclipse.paho.client.mqttv3.MqttMessage.mutable` @type ^`boolean` := v0 @kind boolean;
  #L37ec8c.  v1.`org.eclipse.paho.client.mqttv3.MqttMessage.qos` @type ^`int` := v0;
  #L37ec90.  v0:= 0I;
  #L37ec92.  v1.`org.eclipse.paho.client.mqttv3.MqttMessage.retained` @type ^`boolean` := v0 @kind boolean;
  #L37ec96.  v1.`org.eclipse.paho.client.mqttv3.MqttMessage.dup` @type ^`boolean` := v0 @kind boolean;
  #L37ec9a.  v0:= new `byte`[v0];
  #L37ec9e.  call `setPayload`(v1, v0) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.setPayload:([B)V` @kind virtual;
  #L37eca4.  return @kind void;
}
procedure `void` `<init>`(`org.eclipse.paho.client.mqttv3.MqttMessage` v1 @kind this, `byte`[] v2 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L37ecb8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37ecbe.  v0:= 1I;
  #L37ecc0.  v1.`org.eclipse.paho.client.mqttv3.MqttMessage.mutable` @type ^`boolean` := v0 @kind boolean;
  #L37ecc4.  v1.`org.eclipse.paho.client.mqttv3.MqttMessage.qos` @type ^`int` := v0;
  #L37ecc8.  v0:= 0I;
  #L37ecca.  v1.`org.eclipse.paho.client.mqttv3.MqttMessage.retained` @type ^`boolean` := v0 @kind boolean;
  #L37ecce.  v1.`org.eclipse.paho.client.mqttv3.MqttMessage.dup` @type ^`boolean` := v0 @kind boolean;
  #L37ecd2.  call `setPayload`(v1, v2) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.setPayload:([B)V` @kind virtual;
  #L37ecd8.  return @kind void;
}
procedure `void` `validateQos`(`int` v1 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.validateQos:(I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L37edcc.  if v1 < 0 then goto L37edd8;
  #L37edd0.  v0:= 2I;
  #L37edd2.  if v1 > v0 then goto L37edd8;
  #L37edd6.  return @kind void;
  #L37edd8.  v1:= new `java.lang.IllegalArgumentException`;
  #L37eddc.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L37ede2.  throw v1;
}
procedure `void` `checkMutable`(`org.eclipse.paho.client.mqttv3.MqttMessage` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.checkMutable:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L37ecec.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttMessage.mutable` @type ^`boolean` @kind boolean;
  #L37ecf0.  if v0 == 0 then goto L37ecf6;
  #L37ecf4.  return @kind void;
  #L37ecf6.  v0:= new `java.lang.IllegalStateException`;
  #L37ecfa.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L37ed00.  throw v0;
}
procedure `void` `clearPayload`(`org.eclipse.paho.client.mqttv3.MqttMessage` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.clearPayload:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37ed14.  call `checkMutable`(v1) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.checkMutable:()V` @kind virtual;
  #L37ed1a.  v0:= 0I;
  #L37ed1c.  v0:= new `byte`[v0];
  #L37ed20.  v1.`org.eclipse.paho.client.mqttv3.MqttMessage.payload` @type ^`byte`[] := v0 @kind object;
  #L37ed24.  return @kind void;
}
procedure `byte`[] `getPayload`(`org.eclipse.paho.client.mqttv3.MqttMessage` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.getPayload:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37ec30.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttMessage.payload` @type ^`byte`[] @kind object;
  #L37ec34.  return v0 @kind object;
}
procedure `int` `getQos`(`org.eclipse.paho.client.mqttv3.MqttMessage` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.getQos:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37ec48.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttMessage.qos` @type ^`int`;
  #L37ec4c.  return v0;
}
procedure `boolean` `isDuplicate`(`org.eclipse.paho.client.mqttv3.MqttMessage` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.isDuplicate:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37ec00.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttMessage.dup` @type ^`boolean` @kind boolean;
  #L37ec04.  return v0;
}
procedure `boolean` `isRetained`(`org.eclipse.paho.client.mqttv3.MqttMessage` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.isRetained:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37ec18.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttMessage.retained` @type ^`boolean` @kind boolean;
  #L37ec1c.  return v0;
}
procedure `void` `setDuplicate`(`org.eclipse.paho.client.mqttv3.MqttMessage` v0 @kind this, `boolean` v1 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.setDuplicate:(Z)V` @AccessFlag PROTECTED {
    temp;

  #L37ed38.  v0.`org.eclipse.paho.client.mqttv3.MqttMessage.dup` @type ^`boolean` := v1 @kind boolean;
  #L37ed3c.  return @kind void;
}
procedure `void` `setMutable`(`org.eclipse.paho.client.mqttv3.MqttMessage` v0 @kind this, `boolean` v1 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.setMutable:(Z)V` @AccessFlag PROTECTED {
    temp;

  #L37ed50.  v0.`org.eclipse.paho.client.mqttv3.MqttMessage.mutable` @type ^`boolean` := v1 @kind boolean;
  #L37ed54.  return @kind void;
}
procedure `void` `setPayload`(`org.eclipse.paho.client.mqttv3.MqttMessage` v0 @kind this, `byte`[] v1 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.setPayload:([B)V` @AccessFlag PUBLIC {
    temp;

  #L37ed68.  call `checkMutable`(v0) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.checkMutable:()V` @kind virtual;
  #L37ed6e.  if v1 == 0 then goto L37ed78;
  #L37ed72.  v0.`org.eclipse.paho.client.mqttv3.MqttMessage.payload` @type ^`byte`[] := v1 @kind object;
  #L37ed76.  return @kind void;
  #L37ed78.  v1:= 0I;
  #L37ed7a.  throw v1;
}
procedure `void` `setQos`(`org.eclipse.paho.client.mqttv3.MqttMessage` v0 @kind this, `int` v1 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.setQos:(I)V` @AccessFlag PUBLIC {
    temp;

  #L37ed8c.  call `checkMutable`(v0) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.checkMutable:()V` @kind virtual;
  #L37ed92.  call `validateQos`(v1) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.validateQos:(I)V` @kind static;
  #L37ed98.  v0.`org.eclipse.paho.client.mqttv3.MqttMessage.qos` @type ^`int` := v1;
  #L37ed9c.  return @kind void;
}
procedure `void` `setRetained`(`org.eclipse.paho.client.mqttv3.MqttMessage` v0 @kind this, `boolean` v1 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.setRetained:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L37edb0.  call `checkMutable`(v0) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.checkMutable:()V` @kind virtual;
  #L37edb6.  v0.`org.eclipse.paho.client.mqttv3.MqttMessage.retained` @type ^`boolean` := v1 @kind boolean;
  #L37edba.  return @kind void;
}
procedure `java.lang.String` `toString`(`org.eclipse.paho.client.mqttv3.MqttMessage` v2 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L37ec60.  v0:= new `java.lang.String`;
  #L37ec64.  v1:= v2.`org.eclipse.paho.client.mqttv3.MqttMessage.payload` @type ^`byte`[] @kind object;
  #L37ec68.  call `<init>`(v0, v1) @signature `Ljava/lang/String;.<init>:([B)V` @kind direct;
  #L37ec6e.  return v0 @kind object;
}
