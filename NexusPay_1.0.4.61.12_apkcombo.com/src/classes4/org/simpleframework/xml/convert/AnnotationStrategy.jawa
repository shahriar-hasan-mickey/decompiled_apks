record `org.simpleframework.xml.convert.AnnotationStrategy` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.strategy.Strategy` @kind interface {
  `org.simpleframework.xml.convert.ConverterScanner` `org.simpleframework.xml.convert.AnnotationStrategy.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Strategy` `org.simpleframework.xml.convert.AnnotationStrategy.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.convert.AnnotationStrategy` v1 @kind this) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L43bb84.  v0:= new `org.simpleframework.xml.strategy.TreeStrategy`;
  #L43bb88.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.<init>:()V` @kind direct;
  #L43bb8e.  call `<init>`(v1, v0) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;)V` @kind direct;
  #L43bb94.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.convert.AnnotationStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Strategy` v2 @kind object) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L43bba8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43bbae.  v0:= new `org.simpleframework.xml.convert.ConverterScanner`;
  #L43bbb2.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/convert/ConverterScanner;.<init>:()V` @kind direct;
  #L43bbb8.  v1.`org.simpleframework.xml.convert.AnnotationStrategy.a` @type ^`org.simpleframework.xml.convert.ConverterScanner` := v0 @kind object;
  #L43bbbc.  v1.`org.simpleframework.xml.convert.AnnotationStrategy.b` @type ^`org.simpleframework.xml.strategy.Strategy` := v2 @kind object;
  #L43bbc0.  return @kind void;
}
procedure `boolean` `a`(`org.simpleframework.xml.convert.AnnotationStrategy` v0 @kind this, `org.simpleframework.xml.strategy.Value` v1 @kind object) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.a:(Lorg/simpleframework/xml/strategy/Value;)Z` @AccessFlag PRIVATE {
    temp;

  #L43ba6c.  if v1 == 0 then goto L43ba80;
  #L43ba70.  call temp:= `isReference`(v1) @signature `Lorg/simpleframework/xml/strategy/Value;.isReference:()Z` @kind interface;
  #L43ba76.  v1:= temp;
  #L43ba78.  if v1 == 0 then goto L43ba80;
  #L43ba7c.  v1:= 1I;
  #L43ba7e.  goto L43ba82;
  #L43ba80.  v1:= 0I;
  #L43ba82.  return v1;
}
procedure `org.simpleframework.xml.strategy.Value` `b`(`org.simpleframework.xml.convert.AnnotationStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Type` v2 @kind object, `org.simpleframework.xml.stream.NodeMap` v3 @kind object, `org.simpleframework.xml.strategy.Value` v4 @kind object) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.b:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;Lorg/simpleframework/xml/strategy/Value;)Lorg/simpleframework/xml/strategy/Value;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43bb30.  v0:= v1.`org.simpleframework.xml.convert.AnnotationStrategy.a` @type ^`org.simpleframework.xml.convert.ConverterScanner` @kind object;
  #L43bb34.  call temp:= `getConverter`(v0, v2, v4) @signature `Lorg/simpleframework/xml/convert/ConverterScanner;.getConverter:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/strategy/Value;)Lorg/simpleframework/xml/convert/Converter;` @kind virtual;
  #L43bb3a.  v0:= temp @kind object;
  #L43bb3c.  call temp:= `getNode`(v3) @signature `Lorg/simpleframework/xml/stream/NodeMap;.getNode:()Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L43bb42.  v3:= temp @kind object;
  #L43bb44.  v3:= (`org.simpleframework.xml.stream.InputNode`) v3 @kind object;
  #L43bb48.  if v0 == 0 then goto L43bb72;
  #L43bb4c.  call temp:= `read`(v0, v3) @signature `Lorg/simpleframework/xml/convert/Converter;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind interface;
  #L43bb52.  v3:= temp @kind object;
  #L43bb54.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L43bb5a.  v2:= temp @kind object;
  #L43bb5c.  if v4 == 0 then goto L43bb66;
  #L43bb60.  call `setValue`(v4, v3) @signature `Lorg/simpleframework/xml/strategy/Value;.setValue:(Ljava/lang/Object;)V` @kind interface;
  #L43bb66.  v0:= new `org.simpleframework.xml.convert.Reference`;
  #L43bb6a.  call `<init>`(v0, v4, v3, v2) @signature `Lorg/simpleframework/xml/convert/Reference;.<init>:(Lorg/simpleframework/xml/strategy/Value;Ljava/lang/Object;Ljava/lang/Class;)V` @kind direct;
  #L43bb70.  return v0 @kind object;
  #L43bb72.  return v4 @kind object;
}
procedure `boolean` `c`(`org.simpleframework.xml.convert.AnnotationStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Type` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.stream.NodeMap` v4 @kind object) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.c:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43ba94.  v0:= v1.`org.simpleframework.xml.convert.AnnotationStrategy.a` @type ^`org.simpleframework.xml.convert.ConverterScanner` @kind object;
  #L43ba98.  call temp:= `getConverter`(v0, v2, v3) @signature `Lorg/simpleframework/xml/convert/ConverterScanner;.getConverter:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Lorg/simpleframework/xml/convert/Converter;` @kind virtual;
  #L43ba9e.  v2:= temp @kind object;
  #L43baa0.  call temp:= `getNode`(v4) @signature `Lorg/simpleframework/xml/stream/NodeMap;.getNode:()Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L43baa6.  v4:= temp @kind object;
  #L43baa8.  v4:= (`org.simpleframework.xml.stream.OutputNode`) v4 @kind object;
  #L43baac.  if v2 == 0 then goto L43baba;
  #L43bab0.  call `write`(v2, v4, v3) @signature `Lorg/simpleframework/xml/convert/Converter;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind interface;
  #L43bab6.  v2:= 1I;
  #L43bab8.  return v2;
  #L43baba.  v2:= 0I;
  #L43babc.  return v2;
}
procedure `org.simpleframework.xml.strategy.Value` `read`(`org.simpleframework.xml.convert.AnnotationStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Type` v2 @kind object, `org.simpleframework.xml.stream.NodeMap` v3 @kind object, `java.util.Map` v4 @kind object) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.read:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;Ljava/util/Map;)Lorg/simpleframework/xml/strategy/Value;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43bafc.  v0:= v1.`org.simpleframework.xml.convert.AnnotationStrategy.b` @type ^`org.simpleframework.xml.strategy.Strategy` @kind object;
  #L43bb00.  call temp:= `read`(v0, v2, v3, v4) @signature `Lorg/simpleframework/xml/strategy/Strategy;.read:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;Ljava/util/Map;)Lorg/simpleframework/xml/strategy/Value;` @kind interface;
  #L43bb06.  v4:= temp @kind object;
  #L43bb08.  call temp:= `a`(v1, v4) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.a:(Lorg/simpleframework/xml/strategy/Value;)Z` @kind direct;
  #L43bb0e.  v0:= temp;
  #L43bb10.  if v0 == 0 then goto L43bb16;
  #L43bb14.  return v4 @kind object;
  #L43bb16.  call temp:= `b`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.b:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;Lorg/simpleframework/xml/strategy/Value;)Lorg/simpleframework/xml/strategy/Value;` @kind direct;
  #L43bb1c.  v2:= temp @kind object;
  #L43bb1e.  return v2 @kind object;
}
procedure `boolean` `write`(`org.simpleframework.xml.convert.AnnotationStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Type` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.stream.NodeMap` v4 @kind object, `java.util.Map` v5 @kind object) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.write:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;Ljava/util/Map;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43bad0.  v0:= v1.`org.simpleframework.xml.convert.AnnotationStrategy.b` @type ^`org.simpleframework.xml.strategy.Strategy` @kind object;
  #L43bad4.  call temp:= `write`(v0, v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/strategy/Strategy;.write:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;Ljava/util/Map;)Z` @kind interface;
  #L43bada.  v5:= temp;
  #L43badc.  if v5 != 0 then goto L43baea;
  #L43bae0.  call temp:= `c`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/convert/AnnotationStrategy;.c:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Z` @kind direct;
  #L43bae6.  v2:= temp;
  #L43bae8.  return v2;
  #L43baea.  return v5;
}
