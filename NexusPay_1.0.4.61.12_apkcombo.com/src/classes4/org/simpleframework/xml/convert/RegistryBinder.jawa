record `org.simpleframework.xml.convert.RegistryBinder` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.convert.ConverterFactory` `org.simpleframework.xml.convert.RegistryBinder.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.util.Cache` `org.simpleframework.xml.convert.RegistryBinder.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.convert.RegistryBinder` v1 @kind this) @signature `Lorg/simpleframework/xml/convert/RegistryBinder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L43c03c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43c042.  v0:= new `org.simpleframework.xml.util.ConcurrentCache`;
  #L43c046.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/util/ConcurrentCache;.<init>:()V` @kind direct;
  #L43c04c.  v1.`org.simpleframework.xml.convert.RegistryBinder.b` @type ^`org.simpleframework.xml.util.Cache` := v0 @kind object;
  #L43c050.  v0:= new `org.simpleframework.xml.convert.ConverterFactory`;
  #L43c054.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/convert/ConverterFactory;.<init>:()V` @kind direct;
  #L43c05a.  v1.`org.simpleframework.xml.convert.RegistryBinder.a` @type ^`org.simpleframework.xml.convert.ConverterFactory` := v0 @kind object;
  #L43c05e.  return @kind void;
}
procedure `org.simpleframework.xml.convert.Converter` `a`(`org.simpleframework.xml.convert.RegistryBinder` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/convert/RegistryBinder;.a:(Ljava/lang/Class;)Lorg/simpleframework/xml/convert/Converter;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43bfe8.  v0:= v1.`org.simpleframework.xml.convert.RegistryBinder.a` @type ^`org.simpleframework.xml.convert.ConverterFactory` @kind object;
  #L43bfec.  call temp:= `getInstance`(v0, v2) @signature `Lorg/simpleframework/xml/convert/ConverterFactory;.getInstance:(Ljava/lang/Class;)Lorg/simpleframework/xml/convert/Converter;` @kind virtual;
  #L43bff2.  v2:= temp @kind object;
  #L43bff4.  return v2 @kind object;
}
procedure `void` `bind`(`org.simpleframework.xml.convert.RegistryBinder` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/convert/RegistryBinder;.bind:(Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43c070.  v0:= v1.`org.simpleframework.xml.convert.RegistryBinder.b` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L43c074.  call `cache`(v0, v2, v3) @signature `Lorg/simpleframework/xml/util/Cache;.cache:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L43c07a.  return @kind void;
}
procedure `org.simpleframework.xml.convert.Converter` `lookup`(`org.simpleframework.xml.convert.RegistryBinder` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/convert/RegistryBinder;.lookup:(Ljava/lang/Class;)Lorg/simpleframework/xml/convert/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43c008.  v0:= v1.`org.simpleframework.xml.convert.RegistryBinder.b` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L43c00c.  call temp:= `fetch`(v0, v2) @signature `Lorg/simpleframework/xml/util/Cache;.fetch:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43c012.  v2:= temp @kind object;
  #L43c014.  v2:= (`java.lang.Class`) v2 @kind object;
  #L43c018.  if v2 == 0 then goto L43c026;
  #L43c01c.  call temp:= `a`(v1, v2) @signature `Lorg/simpleframework/xml/convert/RegistryBinder;.a:(Ljava/lang/Class;)Lorg/simpleframework/xml/convert/Converter;` @kind direct;
  #L43c022.  v2:= temp @kind object;
  #L43c024.  return v2 @kind object;
  #L43c026.  v2:= 0I;
  #L43c028.  return v2 @kind object;
}
