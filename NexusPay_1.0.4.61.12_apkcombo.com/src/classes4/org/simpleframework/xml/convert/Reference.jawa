record `org.simpleframework.xml.convert.Reference` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.strategy.Value` @kind interface {
  `org.simpleframework.xml.strategy.Value` `org.simpleframework.xml.convert.Reference.a` @AccessFlag PRIVATE;
  `java.lang.Object` `org.simpleframework.xml.convert.Reference.b` @AccessFlag PRIVATE;
  `java.lang.Class` `org.simpleframework.xml.convert.Reference.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.convert.Reference` v0 @kind this, `org.simpleframework.xml.strategy.Value` v1 @kind object, `java.lang.Object` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/convert/Reference;.<init>:(Lorg/simpleframework/xml/strategy/Value;Ljava/lang/Object;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43bfa0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43bfa6.  v0.`org.simpleframework.xml.convert.Reference.c` @type ^`java.lang.Class` := v3 @kind object;
  #L43bfaa.  v0.`org.simpleframework.xml.convert.Reference.a` @type ^`org.simpleframework.xml.strategy.Value` := v1 @kind object;
  #L43bfae.  v0.`org.simpleframework.xml.convert.Reference.b` @type ^`java.lang.Object` := v2 @kind object;
  #L43bfb2.  return @kind void;
}
procedure `int` `getLength`(`org.simpleframework.xml.convert.Reference` v1 @kind this) @signature `Lorg/simpleframework/xml/convert/Reference;.getLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43bf4c.  v0:= 0I;
  #L43bf4e.  return v0;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.convert.Reference` v1 @kind this) @signature `Lorg/simpleframework/xml/convert/Reference;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43bf60.  v0:= v1.`org.simpleframework.xml.convert.Reference.b` @type ^`java.lang.Object` @kind object;
  #L43bf64.  if v0 == 0 then goto L43bf72;
  #L43bf68.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L43bf6e.  v0:= temp @kind object;
  #L43bf70.  return v0 @kind object;
  #L43bf72.  v0:= v1.`org.simpleframework.xml.convert.Reference.c` @type ^`java.lang.Class` @kind object;
  #L43bf76.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`org.simpleframework.xml.convert.Reference` v1 @kind this) @signature `Lorg/simpleframework/xml/convert/Reference;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43bf88.  v0:= v1.`org.simpleframework.xml.convert.Reference.b` @type ^`java.lang.Object` @kind object;
  #L43bf8c.  return v0 @kind object;
}
procedure `boolean` `isReference`(`org.simpleframework.xml.convert.Reference` v1 @kind this) @signature `Lorg/simpleframework/xml/convert/Reference;.isReference:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43bf38.  v0:= 1I;
  #L43bf3a.  return v0;
}
procedure `void` `setValue`(`org.simpleframework.xml.convert.Reference` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/convert/Reference;.setValue:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43bfc4.  v0:= v1.`org.simpleframework.xml.convert.Reference.a` @type ^`org.simpleframework.xml.strategy.Value` @kind object;
  #L43bfc8.  if v0 == 0 then goto L43bfd2;
  #L43bfcc.  call `setValue`(v0, v2) @signature `Lorg/simpleframework/xml/strategy/Value;.setValue:(Ljava/lang/Object;)V` @kind interface;
  #L43bfd2.  v1.`org.simpleframework.xml.convert.Reference.b` @type ^`java.lang.Object` := v2 @kind object;
  #L43bfd6.  return @kind void;
}
