record `org.simpleframework.xml.core.ModelAssembler` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.ExpressionBuilder` `org.simpleframework.xml.core.ModelAssembler.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Format` `org.simpleframework.xml.core.ModelAssembler.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Detail` `org.simpleframework.xml.core.ModelAssembler.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ModelAssembler` v0 @kind this, `org.simpleframework.xml.core.ExpressionBuilder` v1 @kind object, `org.simpleframework.xml.core.Detail` v2 @kind object, `org.simpleframework.xml.core.Support` v3 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.<init>:(Lorg/simpleframework/xml/core/ExpressionBuilder;Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L448270.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L448276.  call temp:= `getFormat`(v3) @signature `Lorg/simpleframework/xml/core/Support;.getFormat:()Lorg/simpleframework/xml/stream/Format;` @kind virtual;
  #L44827c.  v3:= temp @kind object;
  #L44827e.  v0.`org.simpleframework.xml.core.ModelAssembler.b` @type ^`org.simpleframework.xml.stream.Format` := v3 @kind object;
  #L448282.  v0.`org.simpleframework.xml.core.ModelAssembler.a` @type ^`org.simpleframework.xml.core.ExpressionBuilder` := v1 @kind object;
  #L448286.  v0.`org.simpleframework.xml.core.ModelAssembler.c` @type ^`org.simpleframework.xml.core.Detail` := v2 @kind object;
  #L44828a.  return @kind void;
}
procedure `void` `a`(`org.simpleframework.xml.core.ModelAssembler` v6 @kind this, `org.simpleframework.xml.core.Model` v7 @kind object, `org.simpleframework.xml.Order` v8 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.a:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/Order;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4482bc.  call temp:= `attributes`(v8) @signature `Lorg/simpleframework/xml/Order;.attributes:()[Ljava/lang/String;` @kind interface;
  #L4482c2.  v8:= temp @kind object;
  #L4482c4.  v0:= length @variable v8;
  #L4482c6.  v1:= 0I;
  #L4482c8.  v2:= 0I;
  #L4482ca.  if v2 >= v0 then goto L448350;
  #L4482ce.  v3:= v8[v2] @kind object;
  #L4482d2.  v4:= v6.`org.simpleframework.xml.core.ModelAssembler.a` @type ^`org.simpleframework.xml.core.ExpressionBuilder` @kind object;
  #L4482d6.  call temp:= `build`(v4, v3) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.build:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L4482dc.  v4:= temp @kind object;
  #L4482de.  call temp:= `isAttribute`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.isAttribute:()Z` @kind interface;
  #L4482e4.  v5:= temp;
  #L4482e6.  if v5 != 0 then goto L44831c;
  #L4482ea.  call temp:= `isPath`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L4482f0.  v5:= temp;
  #L4482f2.  if v5 != 0 then goto L4482f8;
  #L4482f6.  goto L44831c;
  #L4482f8.  v7:= new `org.simpleframework.xml.core.PathException`;
  #L4482fc.  v8:= 2I;
  #L4482fe.  v8:= new `java.lang.Object`[v8];
  #L448302.  v8[v1]:= v4 @kind object;
  #L448306.  v0:= v6.`org.simpleframework.xml.core.ModelAssembler.c` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L44830a.  v1:= 1I;
  #L44830c.  v8[v1]:= v0 @kind object;
  #L448310.  v0:= "Ordered attribute '%s' references an element in %s" @kind object;
  #L448314.  call `<init>`(v7, v0, v8) @signature `Lorg/simpleframework/xml/core/PathException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44831a.  throw v7;
  #L44831c.  call temp:= `isPath`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L448322.  v5:= temp;
  #L448324.  if v5 != 0 then goto L448344;
  #L448328.  v4:= v6.`org.simpleframework.xml.core.ModelAssembler.b` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L44832c.  call temp:= `getStyle`(v4) @signature `Lorg/simpleframework/xml/stream/Format;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind virtual;
  #L448332.  v4:= temp @kind object;
  #L448334.  call temp:= `getAttribute`(v4, v3) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L44833a.  v3:= temp @kind object;
  #L44833c.  call `registerAttribute`(v7, v3) @signature `Lorg/simpleframework/xml/core/Model;.registerAttribute:(Ljava/lang/String;)V` @kind interface;
  #L448342.  goto L44834a;
  #L448344.  call `d`(v6, v7, v4) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.d:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @kind direct;
  #L44834a.  v2:= v2 + 1;
  #L44834e.  goto L4482ca;
  #L448350.  return @kind void;
}
procedure `void` `b`(`org.simpleframework.xml.core.ModelAssembler` v5 @kind this, `org.simpleframework.xml.core.Model` v6 @kind object, `org.simpleframework.xml.Order` v7 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.b:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/Order;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L448364.  call temp:= `elements`(v7) @signature `Lorg/simpleframework/xml/Order;.elements:()[Ljava/lang/String;` @kind interface;
  #L44836a.  v7:= temp @kind object;
  #L44836c.  v0:= length @variable v7;
  #L44836e.  v1:= 0I;
  #L448370.  v2:= 0I;
  #L448372.  if v2 >= v0 then goto L4483c2;
  #L448376.  v3:= v7[v2] @kind object;
  #L44837a.  v4:= v5.`org.simpleframework.xml.core.ModelAssembler.a` @type ^`org.simpleframework.xml.core.ExpressionBuilder` @kind object;
  #L44837e.  call temp:= `build`(v4, v3) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.build:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L448384.  v3:= temp @kind object;
  #L448386.  call temp:= `isAttribute`(v3) @signature `Lorg/simpleframework/xml/core/Expression;.isAttribute:()Z` @kind interface;
  #L44838c.  v4:= temp;
  #L44838e.  if v4 != 0 then goto L44839e;
  #L448392.  call `f`(v5, v6, v3) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.f:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @kind direct;
  #L448398.  v2:= v2 + 1;
  #L44839c.  goto L448372;
  #L44839e.  v6:= new `org.simpleframework.xml.core.PathException`;
  #L4483a2.  v7:= 2I;
  #L4483a4.  v7:= new `java.lang.Object`[v7];
  #L4483a8.  v7[v1]:= v3 @kind object;
  #L4483ac.  v0:= v5.`org.simpleframework.xml.core.ModelAssembler.c` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L4483b0.  v1:= 1I;
  #L4483b2.  v7[v1]:= v0 @kind object;
  #L4483b6.  v0:= "Ordered element '%s' references an attribute in %s" @kind object;
  #L4483ba.  call `<init>`(v6, v0, v7) @signature `Lorg/simpleframework/xml/core/PathException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L4483c0.  throw v6;
  #L4483c2.  return @kind void;
}
procedure `void` `c`(`org.simpleframework.xml.core.ModelAssembler` v0 @kind this, `org.simpleframework.xml.core.Model` v1 @kind object, `org.simpleframework.xml.core.Expression` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.c:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @AccessFlag PRIVATE {
    temp;

  #L4483d4.  call temp:= `getFirst`(v2) @signature `Lorg/simpleframework/xml/core/Expression;.getFirst:()Ljava/lang/String;` @kind interface;
  #L4483da.  v2:= temp @kind object;
  #L4483dc.  if v2 == 0 then goto L4483e6;
  #L4483e0.  call `registerAttribute`(v1, v2) @signature `Lorg/simpleframework/xml/core/Model;.registerAttribute:(Ljava/lang/String;)V` @kind interface;
  #L4483e6.  return @kind void;
}
procedure `void` `d`(`org.simpleframework.xml.core.ModelAssembler` v4 @kind this, `org.simpleframework.xml.core.Model` v5 @kind object, `org.simpleframework.xml.core.Expression` v6 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.d:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4483f8.  call temp:= `getPrefix`(v6) @signature `Lorg/simpleframework/xml/core/Expression;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L4483fe.  v0:= temp @kind object;
  #L448400.  call temp:= `getFirst`(v6) @signature `Lorg/simpleframework/xml/core/Expression;.getFirst:()Ljava/lang/String;` @kind interface;
  #L448406.  v1:= temp @kind object;
  #L448408.  call temp:= `getIndex`(v6) @signature `Lorg/simpleframework/xml/core/Expression;.getIndex:()I` @kind interface;
  #L44840e.  v2:= temp;
  #L448410.  call temp:= `isPath`(v6) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L448416.  v3:= temp;
  #L448418.  if v3 == 0 then goto L44845e;
  #L44841c.  call temp:= `register`(v5, v1, v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.register:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L448422.  v5:= temp @kind object;
  #L448424.  v0:= 1I;
  #L448426.  call temp:= `getPath`(v6, v0) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:(I)Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L44842c.  v6:= temp @kind object;
  #L44842e.  if v5 == 0 then goto L44843a;
  #L448432.  call `d`(v4, v5, v6) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.d:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @kind direct;
  #L448438.  goto L448464;
  #L44843a.  v5:= new `org.simpleframework.xml.core.PathException`;
  #L44843e.  v6:= 2I;
  #L448440.  v6:= new `java.lang.Object`[v6];
  #L448444.  v2:= 0I;
  #L448446.  v6[v2]:= v1 @kind object;
  #L44844a.  v1:= v4.`org.simpleframework.xml.core.ModelAssembler.c` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L44844e.  v6[v0]:= v1 @kind object;
  #L448452.  v0:= "Element '%s' does not exist in %s" @kind object;
  #L448456.  call `<init>`(v5, v0, v6) @signature `Lorg/simpleframework/xml/core/PathException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44845c.  throw v5;
  #L44845e.  call `c`(v4, v5, v6) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.c:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @kind direct;
  #L448464.  return @kind void;
}
procedure `void` `e`(`org.simpleframework.xml.core.ModelAssembler` v5 @kind this, `org.simpleframework.xml.core.Model` v6 @kind object, `org.simpleframework.xml.core.Expression` v7 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.e:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L448478.  call temp:= `getPrefix`(v7) @signature `Lorg/simpleframework/xml/core/Expression;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L44847e.  v0:= temp @kind object;
  #L448480.  call temp:= `getFirst`(v7) @signature `Lorg/simpleframework/xml/core/Expression;.getFirst:()Ljava/lang/String;` @kind interface;
  #L448486.  v1:= temp @kind object;
  #L448488.  call temp:= `getIndex`(v7) @signature `Lorg/simpleframework/xml/core/Expression;.getIndex:()I` @kind interface;
  #L44848e.  v2:= temp;
  #L448490.  v3:= 1I;
  #L448492.  if v2 <= v3 then goto L4484d2;
  #L448496.  v4:= v2 + -1;
  #L44849a.  call temp:= `lookup`(v6, v1, v4) @signature `Lorg/simpleframework/xml/core/Model;.lookup:(Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L4484a0.  v4:= temp @kind object;
  #L4484a2.  if v4 == 0 then goto L4484a8;
  #L4484a6.  goto L4484d2;
  #L4484a8.  v6:= new `org.simpleframework.xml.core.PathException`;
  #L4484ac.  v0:= 3I;
  #L4484ae.  v0:= new `java.lang.Object`[v0];
  #L4484b2.  v2:= 0I;
  #L4484b4.  v0[v2]:= v1 @kind object;
  #L4484b8.  v0[v3]:= v7 @kind object;
  #L4484bc.  v7:= v5.`org.simpleframework.xml.core.ModelAssembler.c` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L4484c0.  v1:= 2I;
  #L4484c2.  v0[v1]:= v7 @kind object;
  #L4484c6.  v7:= "Ordered element '%s' in path '%s' is out of sequence for %s" @kind object;
  #L4484ca.  call `<init>`(v6, v7, v0) @signature `Lorg/simpleframework/xml/core/PathException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L4484d0.  throw v6;
  #L4484d2.  call temp:= `register`(v6, v1, v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.register:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L4484d8.  return @kind void;
}
procedure `void` `f`(`org.simpleframework.xml.core.ModelAssembler` v3 @kind this, `org.simpleframework.xml.core.Model` v4 @kind object, `org.simpleframework.xml.core.Expression` v5 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.f:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4484ec.  call temp:= `getPrefix`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L4484f2.  v0:= temp @kind object;
  #L4484f4.  call temp:= `getFirst`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getFirst:()Ljava/lang/String;` @kind interface;
  #L4484fa.  v1:= temp @kind object;
  #L4484fc.  call temp:= `getIndex`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getIndex:()I` @kind interface;
  #L448502.  v2:= temp;
  #L448504.  if v1 == 0 then goto L44852c;
  #L448508.  call temp:= `register`(v4, v1, v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.register:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L44850e.  v0:= temp @kind object;
  #L448510.  v1:= 1I;
  #L448512.  call temp:= `getPath`(v5, v1) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:(I)Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L448518.  v1:= temp @kind object;
  #L44851a.  call temp:= `isPath`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L448520.  v2:= temp;
  #L448522.  if v2 == 0 then goto L44852c;
  #L448526.  call `f`(v3, v0, v1) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.f:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @kind direct;
  #L44852c.  call `e`(v3, v4, v5) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.e:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Expression;)V` @kind direct;
  #L448532.  return @kind void;
}
procedure `void` `assemble`(`org.simpleframework.xml.core.ModelAssembler` v0 @kind this, `org.simpleframework.xml.core.Model` v1 @kind object, `org.simpleframework.xml.Order` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.assemble:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/Order;)V` @AccessFlag PUBLIC {
    temp;

  #L44829c.  call `b`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.b:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/Order;)V` @kind direct;
  #L4482a2.  call `a`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.a:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/Order;)V` @kind direct;
  #L4482a8.  return @kind void;
}
