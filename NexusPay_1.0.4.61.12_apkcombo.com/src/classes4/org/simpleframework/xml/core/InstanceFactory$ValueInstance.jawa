record `org.simpleframework.xml.core.InstanceFactory$ValueInstance` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Instance` @kind interface {
  `org.simpleframework.xml.strategy.Value` `org.simpleframework.xml.core.InstanceFactory$ValueInstance.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `org.simpleframework.xml.core.InstanceFactory$ValueInstance.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.InstanceFactory` `org.simpleframework.xml.core.InstanceFactory$ValueInstance.this$0` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.InstanceFactory$ValueInstance` v0 @kind this, `org.simpleframework.xml.core.InstanceFactory` v1 @kind object, `org.simpleframework.xml.strategy.Value` v2 @kind object) @signature `Lorg/simpleframework/xml/core/InstanceFactory$ValueInstance;.<init>:(Lorg/simpleframework/xml/core/InstanceFactory;Lorg/simpleframework/xml/strategy/Value;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L445b08.  v0.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.this$0` @type ^`org.simpleframework.xml.core.InstanceFactory` := v1 @kind object;
  #L445b0c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L445b12.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Value;.getType:()Ljava/lang/Class;` @kind interface;
  #L445b18.  v1:= temp @kind object;
  #L445b1a.  v0.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.b` @type ^`java.lang.Class` := v1 @kind object;
  #L445b1e.  v0.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.a` @type ^`org.simpleframework.xml.strategy.Value` := v2 @kind object;
  #L445b22.  return @kind void;
}
procedure `java.lang.Object` `getInstance`(`org.simpleframework.xml.core.InstanceFactory$ValueInstance` v2 @kind this) @signature `Lorg/simpleframework/xml/core/InstanceFactory$ValueInstance;.getInstance:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L445a98.  v0:= v2.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.a` @type ^`org.simpleframework.xml.strategy.Value` @kind object;
  #L445a9c.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/strategy/Value;.isReference:()Z` @kind interface;
  #L445aa2.  v0:= temp;
  #L445aa4.  if v0 == 0 then goto L445ab6;
  #L445aa8.  v0:= v2.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.a` @type ^`org.simpleframework.xml.strategy.Value` @kind object;
  #L445aac.  call temp:= `getValue`(v0) @signature `Lorg/simpleframework/xml/strategy/Value;.getValue:()Ljava/lang/Object;` @kind interface;
  #L445ab2.  v0:= temp @kind object;
  #L445ab4.  return v0 @kind object;
  #L445ab6.  v0:= v2.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.this$0` @type ^`org.simpleframework.xml.core.InstanceFactory` @kind object;
  #L445aba.  v1:= v2.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.b` @type ^`java.lang.Class` @kind object;
  #L445abe.  call temp:= `getObject`(v0, v1) @signature `Lorg/simpleframework/xml/core/InstanceFactory;.getObject:(Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L445ac4.  v0:= temp @kind object;
  #L445ac6.  v1:= v2.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.a` @type ^`org.simpleframework.xml.strategy.Value` @kind object;
  #L445aca.  if v1 == 0 then goto L445ad4;
  #L445ace.  call `setValue`(v1, v0) @signature `Lorg/simpleframework/xml/strategy/Value;.setValue:(Ljava/lang/Object;)V` @kind interface;
  #L445ad4.  return v0 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.InstanceFactory$ValueInstance` v1 @kind this) @signature `Lorg/simpleframework/xml/core/InstanceFactory$ValueInstance;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L445a80.  v0:= v1.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.b` @type ^`java.lang.Class` @kind object;
  #L445a84.  return v0 @kind object;
}
procedure `boolean` `isReference`(`org.simpleframework.xml.core.InstanceFactory$ValueInstance` v1 @kind this) @signature `Lorg/simpleframework/xml/core/InstanceFactory$ValueInstance;.isReference:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L445a60.  v0:= v1.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.a` @type ^`org.simpleframework.xml.strategy.Value` @kind object;
  #L445a64.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/strategy/Value;.isReference:()Z` @kind interface;
  #L445a6a.  v0:= temp;
  #L445a6c.  return v0;
}
procedure `java.lang.Object` `setInstance`(`org.simpleframework.xml.core.InstanceFactory$ValueInstance` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/InstanceFactory$ValueInstance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L445ae8.  v0:= v1.`org.simpleframework.xml.core.InstanceFactory$ValueInstance.a` @type ^`org.simpleframework.xml.strategy.Value` @kind object;
  #L445aec.  if v0 == 0 then goto L445af6;
  #L445af0.  call `setValue`(v0, v2) @signature `Lorg/simpleframework/xml/strategy/Value;.setValue:(Ljava/lang/Object;)V` @kind interface;
  #L445af6.  return v2 @kind object;
}
