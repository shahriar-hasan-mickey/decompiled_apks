record `org.simpleframework.xml.core.ConversionInstance` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Instance` @kind interface {
  `org.simpleframework.xml.core.Context` `org.simpleframework.xml.core.ConversionInstance.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `org.simpleframework.xml.core.ConversionInstance.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Value` `org.simpleframework.xml.core.ConversionInstance.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ConversionInstance` v0 @kind this, `org.simpleframework.xml.core.Context` v1 @kind object, `org.simpleframework.xml.strategy.Value` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/ConversionInstance;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Value;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L44104c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L441052.  v0.`org.simpleframework.xml.core.ConversionInstance.a` @type ^`org.simpleframework.xml.core.Context` := v1 @kind object;
  #L441056.  v0.`org.simpleframework.xml.core.ConversionInstance.b` @type ^`java.lang.Class` := v3 @kind object;
  #L44105a.  v0.`org.simpleframework.xml.core.ConversionInstance.c` @type ^`org.simpleframework.xml.strategy.Value` := v2 @kind object;
  #L44105e.  return @kind void;
}
procedure `java.lang.Object` `getInstance`(`org.simpleframework.xml.core.ConversionInstance` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ConversionInstance;.getInstance:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L440fbc.  v0:= v1.`org.simpleframework.xml.core.ConversionInstance.c` @type ^`org.simpleframework.xml.strategy.Value` @kind object;
  #L440fc0.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/strategy/Value;.isReference:()Z` @kind interface;
  #L440fc6.  v0:= temp;
  #L440fc8.  if v0 == 0 then goto L440fda;
  #L440fcc.  v0:= v1.`org.simpleframework.xml.core.ConversionInstance.c` @type ^`org.simpleframework.xml.strategy.Value` @kind object;
  #L440fd0.  call temp:= `getValue`(v0) @signature `Lorg/simpleframework/xml/strategy/Value;.getValue:()Ljava/lang/Object;` @kind interface;
  #L440fd6.  v0:= temp @kind object;
  #L440fd8.  return v0 @kind object;
  #L440fda.  v0:= v1.`org.simpleframework.xml.core.ConversionInstance.b` @type ^`java.lang.Class` @kind object;
  #L440fde.  call temp:= `getInstance`(v1, v0) @signature `Lorg/simpleframework/xml/core/ConversionInstance;.getInstance:(Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L440fe4.  v0:= temp @kind object;
  #L440fe6.  if v0 == 0 then goto L440ff0;
  #L440fea.  call temp:= `setInstance`(v1, v0) @signature `Lorg/simpleframework/xml/core/ConversionInstance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L440ff0.  return v0 @kind object;
}
procedure `java.lang.Object` `getInstance`(`org.simpleframework.xml.core.ConversionInstance` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ConversionInstance;.getInstance:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441004.  v0:= v1.`org.simpleframework.xml.core.ConversionInstance.a` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L441008.  call temp:= `getInstance`(v0, v2) @signature `Lorg/simpleframework/xml/core/Context;.getInstance:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Instance;` @kind interface;
  #L44100e.  v2:= temp @kind object;
  #L441010.  call temp:= `getInstance`(v2) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L441016.  v2:= temp @kind object;
  #L441018.  return v2 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.ConversionInstance` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ConversionInstance;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L440fa4.  v0:= v1.`org.simpleframework.xml.core.ConversionInstance.b` @type ^`java.lang.Class` @kind object;
  #L440fa8.  return v0 @kind object;
}
procedure `boolean` `isReference`(`org.simpleframework.xml.core.ConversionInstance` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ConversionInstance;.isReference:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L440f84.  v0:= v1.`org.simpleframework.xml.core.ConversionInstance.c` @type ^`org.simpleframework.xml.strategy.Value` @kind object;
  #L440f88.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/strategy/Value;.isReference:()Z` @kind interface;
  #L440f8e.  v0:= temp;
  #L440f90.  return v0;
}
procedure `java.lang.Object` `setInstance`(`org.simpleframework.xml.core.ConversionInstance` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ConversionInstance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44102c.  v0:= v1.`org.simpleframework.xml.core.ConversionInstance.c` @type ^`org.simpleframework.xml.strategy.Value` @kind object;
  #L441030.  if v0 == 0 then goto L44103a;
  #L441034.  call `setValue`(v0, v2) @signature `Lorg/simpleframework/xml/strategy/Value;.setValue:(Ljava/lang/Object;)V` @kind interface;
  #L44103a.  return v2 @kind object;
}
