record `org.simpleframework.xml.core.ExtractorFactory` @kind class @AccessFlag PUBLIC {
  `java.lang.annotation.Annotation` `org.simpleframework.xml.core.ExtractorFactory.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Contact` `org.simpleframework.xml.core.ExtractorFactory.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Format` `org.simpleframework.xml.core.ExtractorFactory.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ExtractorFactory` v0 @kind this, `org.simpleframework.xml.core.Contact` v1 @kind object, `java.lang.annotation.Annotation` v2 @kind object, `org.simpleframework.xml.stream.Format` v3 @kind object) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.<init>:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L44495c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L444962.  v0.`org.simpleframework.xml.core.ExtractorFactory.b` @type ^`org.simpleframework.xml.core.Contact` := v1 @kind object;
  #L444966.  v0.`org.simpleframework.xml.core.ExtractorFactory.c` @type ^`org.simpleframework.xml.stream.Format` := v3 @kind object;
  #L44496a.  v0.`org.simpleframework.xml.core.ExtractorFactory.a` @type ^`java.lang.annotation.Annotation` := v2 @kind object;
  #L44496e.  return @kind void;
}
procedure `org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder` `a`(`org.simpleframework.xml.core.ExtractorFactory` v3 @kind this, `java.lang.annotation.Annotation` v4 @kind object) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.a:(Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4448dc.  v0:= instanceof @variable v4 @type ^`org.simpleframework.xml.ElementUnion` @kind boolean;
  #L4448e0.  if v0 == 0 then goto L4448f8;
  #L4448e4.  v4:= new `org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder`;
  #L4448e8.  v0:= constclass @type ^`org.simpleframework.xml.ElementUnion` @kind object;
  #L4448ec.  v1:= constclass @type ^`org.simpleframework.xml.core.ExtractorFactory$ElementExtractor` @kind object;
  #L4448f0.  call `<init>`(v4, v0, v1) @signature `Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;.<init>:(Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L4448f6.  return v4 @kind object;
  #L4448f8.  v0:= instanceof @variable v4 @type ^`org.simpleframework.xml.ElementListUnion` @kind boolean;
  #L4448fc.  if v0 == 0 then goto L444914;
  #L444900.  v4:= new `org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder`;
  #L444904.  v0:= constclass @type ^`org.simpleframework.xml.ElementListUnion` @kind object;
  #L444908.  v1:= constclass @type ^`org.simpleframework.xml.core.ExtractorFactory$ElementListExtractor` @kind object;
  #L44490c.  call `<init>`(v4, v0, v1) @signature `Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;.<init>:(Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L444912.  return v4 @kind object;
  #L444914.  v0:= instanceof @variable v4 @type ^`org.simpleframework.xml.ElementMapUnion` @kind boolean;
  #L444918.  if v0 == 0 then goto L444930;
  #L44491c.  v4:= new `org.simpleframework.xml.core.ExtractorFactory$ExtractorBuilder`;
  #L444920.  v0:= constclass @type ^`org.simpleframework.xml.ElementMapUnion` @kind object;
  #L444924.  v1:= constclass @type ^`org.simpleframework.xml.core.ExtractorFactory$ElementMapExtractor` @kind object;
  #L444928.  call `<init>`(v4, v0, v1) @signature `Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;.<init>:(Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L44492e.  return v4 @kind object;
  #L444930.  v0:= new `org.simpleframework.xml.core.PersistenceException`;
  #L444934.  v1:= 1I;
  #L444936.  v1:= new `java.lang.Object`[v1];
  #L44493a.  v2:= 0I;
  #L44493c.  v1[v2]:= v4 @kind object;
  #L444940.  v4:= "Annotation %s is not a union" @kind object;
  #L444944.  call `<init>`(v0, v4, v1) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44494a.  throw v0;
}
procedure `java.lang.Object` `b`(`org.simpleframework.xml.core.ExtractorFactory` v5 @kind this, `java.lang.annotation.Annotation` v6 @kind object) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.b:(Ljava/lang/annotation/Annotation;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L44485c.  call temp:= `a`(v5, v6) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.a:(Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;` @kind direct;
  #L444862.  v0:= temp @kind object;
  #L444864.  call temp:= `access$000`(v0) @signature `Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;.access$000:(Lorg/simpleframework/xml/core/ExtractorFactory$ExtractorBuilder;)Ljava/lang/reflect/Constructor;` @kind static;
  #L44486a.  v0:= temp @kind object;
  #L44486c.  call temp:= `isAccessible`(v0) @signature `Ljava/lang/reflect/Constructor;.isAccessible:()Z` @kind virtual;
  #L444872.  v1:= temp;
  #L444874.  v2:= 1I;
  #L444876.  if v1 != 0 then goto L444880;
  #L44487a.  call `setAccessible`(v0, v2) @signature `Ljava/lang/reflect/Constructor;.setAccessible:(Z)V` @kind virtual;
  #L444880.  v1:= 3I;
  #L444882.  v1:= new `java.lang.Object`[v1];
  #L444886.  v3:= v5.`org.simpleframework.xml.core.ExtractorFactory.b` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L44488a.  v4:= 0I;
  #L44488c.  v1[v4]:= v3 @kind object;
  #L444890.  v1[v2]:= v6 @kind object;
  #L444894.  v6:= v5.`org.simpleframework.xml.core.ExtractorFactory.c` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L444898.  v2:= 2I;
  #L44489a.  v1[v2]:= v6 @kind object;
  #L44489e.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4448a4.  v6:= temp @kind object;
  #L4448a6.  return v6 @kind object;
}
procedure `org.simpleframework.xml.core.Extractor` `getInstance`(`org.simpleframework.xml.core.ExtractorFactory` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.getInstance:()Lorg/simpleframework/xml/core/Extractor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4448b8.  v0:= v1.`org.simpleframework.xml.core.ExtractorFactory.a` @type ^`java.lang.annotation.Annotation` @kind object;
  #L4448bc.  call temp:= `b`(v1, v0) @signature `Lorg/simpleframework/xml/core/ExtractorFactory;.b:(Ljava/lang/annotation/Annotation;)Ljava/lang/Object;` @kind direct;
  #L4448c2.  v0:= temp @kind object;
  #L4448c4.  v0:= (`org.simpleframework.xml.core.Extractor`) v0 @kind object;
  #L4448c8.  return v0 @kind object;
}
