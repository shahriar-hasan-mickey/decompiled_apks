record `org.simpleframework.xml.core.KeyBuilder$Key` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.KeyBuilder$KeyType` `org.simpleframework.xml.core.KeyBuilder$Key.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.core.KeyBuilder$Key.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.KeyBuilder$Key` v0 @kind this, `org.simpleframework.xml.core.KeyBuilder$KeyType` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/KeyBuilder$Key;.<init>:(Lorg/simpleframework/xml/core/KeyBuilder$KeyType;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L446784.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44678a.  v0.`org.simpleframework.xml.core.KeyBuilder$Key.b` @type ^`java.lang.String` := v2 @kind object;
  #L44678e.  v0.`org.simpleframework.xml.core.KeyBuilder$Key.a` @type ^`org.simpleframework.xml.core.KeyBuilder$KeyType` := v1 @kind object;
  #L446792.  return @kind void;
}
procedure `boolean` `equals`(`org.simpleframework.xml.core.KeyBuilder$Key` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/KeyBuilder$Key;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4466ec.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.core.KeyBuilder$Key` @kind boolean;
  #L4466f0.  if v0 == 0 then goto L446702;
  #L4466f4.  v2:= (`org.simpleframework.xml.core.KeyBuilder$Key`) v2 @kind object;
  #L4466f8.  call temp:= `equals`(v1, v2) @signature `Lorg/simpleframework/xml/core/KeyBuilder$Key;.equals:(Lorg/simpleframework/xml/core/KeyBuilder$Key;)Z` @kind virtual;
  #L4466fe.  v2:= temp;
  #L446700.  return v2;
  #L446702.  v2:= 0I;
  #L446704.  return v2;
}
procedure `boolean` `equals`(`org.simpleframework.xml.core.KeyBuilder$Key` v2 @kind this, `org.simpleframework.xml.core.KeyBuilder$Key` v3 @kind object) @signature `Lorg/simpleframework/xml/core/KeyBuilder$Key;.equals:(Lorg/simpleframework/xml/core/KeyBuilder$Key;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L446718.  v0:= v2.`org.simpleframework.xml.core.KeyBuilder$Key.a` @type ^`org.simpleframework.xml.core.KeyBuilder$KeyType` @kind object;
  #L44671c.  v1:= v3.`org.simpleframework.xml.core.KeyBuilder$Key.a` @type ^`org.simpleframework.xml.core.KeyBuilder$KeyType` @kind object;
  #L446720.  if v0 != v1 then goto L446736;
  #L446724.  v3:= v3.`org.simpleframework.xml.core.KeyBuilder$Key.b` @type ^`java.lang.String` @kind object;
  #L446728.  v0:= v2.`org.simpleframework.xml.core.KeyBuilder$Key.b` @type ^`java.lang.String` @kind object;
  #L44672c.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L446732.  v3:= temp;
  #L446734.  return v3;
  #L446736.  v3:= 0I;
  #L446738.  return v3;
}
procedure `int` `hashCode`(`org.simpleframework.xml.core.KeyBuilder$Key` v1 @kind this) @signature `Lorg/simpleframework/xml/core/KeyBuilder$Key;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44674c.  v0:= v1.`org.simpleframework.xml.core.KeyBuilder$Key.b` @type ^`java.lang.String` @kind object;
  #L446750.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L446756.  v0:= temp;
  #L446758.  return v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.KeyBuilder$Key` v1 @kind this) @signature `Lorg/simpleframework/xml/core/KeyBuilder$Key;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44676c.  v0:= v1.`org.simpleframework.xml.core.KeyBuilder$Key.b` @type ^`java.lang.String` @kind object;
  #L446770.  return v0 @kind object;
}
