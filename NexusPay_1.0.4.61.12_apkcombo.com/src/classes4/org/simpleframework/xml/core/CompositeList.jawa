record `org.simpleframework.xml.core.CompositeList` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Converter` @kind interface {
  `org.simpleframework.xml.core.CollectionFactory` `org.simpleframework.xml.core.CompositeList.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Traverser` `org.simpleframework.xml.core.CompositeList.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.core.CompositeList.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.CompositeList.d` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.CompositeList.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.CompositeList` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L43f308.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43f30e.  v0:= new `org.simpleframework.xml.core.CollectionFactory`;
  #L43f312.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L43f318.  v1.`org.simpleframework.xml.core.CompositeList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` := v0 @kind object;
  #L43f31c.  v0:= new `org.simpleframework.xml.core.Traverser`;
  #L43f320.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/Traverser;.<init>:(Lorg/simpleframework/xml/core/Context;)V` @kind direct;
  #L43f326.  v1.`org.simpleframework.xml.core.CompositeList.b` @type ^`org.simpleframework.xml.core.Traverser` := v0 @kind object;
  #L43f32a.  v1.`org.simpleframework.xml.core.CompositeList.d` @type ^`org.simpleframework.xml.strategy.Type` := v4 @kind object;
  #L43f32e.  v1.`org.simpleframework.xml.core.CompositeList.e` @type ^`org.simpleframework.xml.strategy.Type` := v3 @kind object;
  #L43f332.  v1.`org.simpleframework.xml.core.CompositeList.c` @type ^`java.lang.String` := v5 @kind object;
  #L43f336.  return @kind void;
}
procedure `java.lang.Object` `a`(`org.simpleframework.xml.core.CompositeList` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L43f240.  v5:= (`java.util.Collection`) v5 @kind object;
  #L43f244.  call temp:= `getNext`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L43f24a.  v0:= temp @kind object;
  #L43f24c.  v1:= v3.`org.simpleframework.xml.core.CompositeList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L43f250.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L43f256.  v1:= temp @kind object;
  #L43f258.  if v0 != 0 then goto L43f25e;
  #L43f25c.  return v5 @kind object;
  #L43f25e.  v2:= v3.`org.simpleframework.xml.core.CompositeList.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L43f262.  call temp:= `read`(v2, v0, v1) @signature `Lorg/simpleframework/xml/core/Traverser;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L43f268.  v0:= temp @kind object;
  #L43f26a.  call temp:= `add`(v5, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L43f270.  goto L43f244;
}
procedure `boolean` `b`(`org.simpleframework.xml.core.CompositeList` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L43f208.  call temp:= `getNext`(v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L43f20e.  v4:= temp @kind object;
  #L43f210.  v0:= v2.`org.simpleframework.xml.core.CompositeList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L43f214.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L43f21a.  v0:= temp @kind object;
  #L43f21c.  if v4 != 0 then goto L43f224;
  #L43f220.  v3:= 1I;
  #L43f222.  return v3;
  #L43f224.  v1:= v2.`org.simpleframework.xml.core.CompositeList.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L43f228.  call temp:= `validate`(v1, v4, v0) @signature `Lorg/simpleframework/xml/core/Traverser;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind virtual;
  #L43f22e.  goto L43f208;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeList` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43f284.  v0:= v2.`org.simpleframework.xml.core.CompositeList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` @kind object;
  #L43f288.  call temp:= `getInstance`(v0, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L43f28e.  v0:= temp @kind object;
  #L43f290.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L43f296.  v1:= temp @kind object;
  #L43f298.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L43f29e.  v0:= temp;
  #L43f2a0.  if v0 != 0 then goto L43f2ae;
  #L43f2a4.  call temp:= `a`(v2, v3, v1) @signature `Lorg/simpleframework/xml/core/CompositeList;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L43f2aa.  v3:= temp @kind object;
  #L43f2ac.  return v3 @kind object;
  #L43f2ae.  return v1 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeList` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43f2c0.  v0:= v2.`org.simpleframework.xml.core.CompositeList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` @kind object;
  #L43f2c4.  call temp:= `getInstance`(v0, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L43f2ca.  v0:= temp @kind object;
  #L43f2cc.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L43f2d2.  v1:= temp;
  #L43f2d4.  if v1 == 0 then goto L43f2e2;
  #L43f2d8.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L43f2de.  v3:= temp @kind object;
  #L43f2e0.  return v3 @kind object;
  #L43f2e2.  call temp:= `setInstance`(v0, v4) @signature `Lorg/simpleframework/xml/core/Instance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43f2e8.  if v4 == 0 then goto L43f2f6;
  #L43f2ec.  call temp:= `a`(v2, v3, v4) @signature `Lorg/simpleframework/xml/core/CompositeList;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L43f2f2.  v3:= temp @kind object;
  #L43f2f4.  return v3 @kind object;
  #L43f2f6.  return v4 @kind object;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.CompositeList` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43f1c0.  v0:= v2.`org.simpleframework.xml.core.CompositeList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` @kind object;
  #L43f1c4.  call temp:= `getInstance`(v0, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L43f1ca.  v0:= temp @kind object;
  #L43f1cc.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L43f1d2.  v1:= temp;
  #L43f1d4.  if v1 != 0 then goto L43f1f2;
  #L43f1d8.  v1:= 0I;
  #L43f1da.  call temp:= `setInstance`(v0, v1) @signature `Lorg/simpleframework/xml/core/Instance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43f1e0.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getType:()Ljava/lang/Class;` @kind interface;
  #L43f1e6.  v0:= temp @kind object;
  #L43f1e8.  call temp:= `b`(v2, v3, v0) @signature `Lorg/simpleframework/xml/core/CompositeList;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind direct;
  #L43f1ee.  v3:= temp;
  #L43f1f0.  return v3;
  #L43f1f2.  v3:= 1I;
  #L43f1f4.  return v3;
}
procedure `void` `write`(`org.simpleframework.xml.core.CompositeList` v4 @kind this, `org.simpleframework.xml.stream.OutputNode` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeList;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L43f348.  v6:= (`java.util.Collection`) v6 @kind object;
  #L43f34c.  call temp:= `iterator`(v6) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L43f352.  v6:= temp @kind object;
  #L43f354.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L43f35a.  v0:= temp;
  #L43f35c.  if v0 == 0 then goto L43f3cc;
  #L43f360.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L43f366.  v0:= temp @kind object;
  #L43f368.  if v0 == 0 then goto L43f354;
  #L43f36c.  v1:= v4.`org.simpleframework.xml.core.CompositeList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L43f370.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L43f376.  v1:= temp @kind object;
  #L43f378.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L43f37e.  v2:= temp @kind object;
  #L43f380.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L43f386.  v3:= temp;
  #L43f388.  if v3 == 0 then goto L43f39c;
  #L43f38c.  v2:= v4.`org.simpleframework.xml.core.CompositeList.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L43f390.  v3:= v4.`org.simpleframework.xml.core.CompositeList.c` @type ^`java.lang.String` @kind object;
  #L43f394.  call `write`(v2, v5, v0, v1, v3) @signature `Lorg/simpleframework/xml/core/Traverser;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)V` @kind virtual;
  #L43f39a.  goto L43f354;
  #L43f39c.  v5:= new `org.simpleframework.xml.core.PersistenceException`;
  #L43f3a0.  v6:= 3I;
  #L43f3a2.  v6:= new `java.lang.Object`[v6];
  #L43f3a6.  v0:= 0I;
  #L43f3a8.  v6[v0]:= v2 @kind object;
  #L43f3ac.  v0:= v4.`org.simpleframework.xml.core.CompositeList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L43f3b0.  v1:= 1I;
  #L43f3b2.  v6[v1]:= v0 @kind object;
  #L43f3b6.  v0:= v4.`org.simpleframework.xml.core.CompositeList.e` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L43f3ba.  v1:= 2I;
  #L43f3bc.  v6[v1]:= v0 @kind object;
  #L43f3c0.  v0:= "Entry %s does not match %s for %s" @kind object;
  #L43f3c4.  call `<init>`(v5, v0, v6) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L43f3ca.  throw v5;
  #L43f3cc.  return @kind void;
}
