record `org.simpleframework.xml.core.StructureBuilder` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.InstantiatorBuilder` `org.simpleframework.xml.core.StructureBuilder.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.ExpressionBuilder` `org.simpleframework.xml.core.StructureBuilder.b` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.ModelAssembler` `org.simpleframework.xml.core.StructureBuilder.c` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Instantiator` `org.simpleframework.xml.core.StructureBuilder.d` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.StructureBuilder.e` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.StructureBuilder.f` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.StructureBuilder.g` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Scanner` `org.simpleframework.xml.core.StructureBuilder.h` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Support` `org.simpleframework.xml.core.StructureBuilder.i` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.StructureBuilder.j` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.StructureBuilder.k` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Model` `org.simpleframework.xml.core.StructureBuilder.l` @AccessFlag PRIVATE;
  `boolean` `org.simpleframework.xml.core.StructureBuilder.m` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.StructureBuilder` v2 @kind this, `org.simpleframework.xml.core.Scanner` v3 @kind object, `org.simpleframework.xml.core.Detail` v4 @kind object, `org.simpleframework.xml.core.Support` v5 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.<init>:(Lorg/simpleframework/xml/core/Scanner;Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L44e2c4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44e2ca.  v0:= new `org.simpleframework.xml.core.ExpressionBuilder`;
  #L44e2ce.  call `<init>`(v0, v4, v5) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L44e2d4.  v2.`org.simpleframework.xml.core.StructureBuilder.b` @type ^`org.simpleframework.xml.core.ExpressionBuilder` := v0 @kind object;
  #L44e2d8.  v1:= new `org.simpleframework.xml.core.ModelAssembler`;
  #L44e2dc.  call `<init>`(v1, v0, v4, v5) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.<init>:(Lorg/simpleframework/xml/core/ExpressionBuilder;Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L44e2e2.  v2.`org.simpleframework.xml.core.StructureBuilder.c` @type ^`org.simpleframework.xml.core.ModelAssembler` := v1 @kind object;
  #L44e2e6.  v0:= new `org.simpleframework.xml.core.InstantiatorBuilder`;
  #L44e2ea.  call `<init>`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.<init>:(Lorg/simpleframework/xml/core/Scanner;Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L44e2f0.  v2.`org.simpleframework.xml.core.StructureBuilder.a` @type ^`org.simpleframework.xml.core.InstantiatorBuilder` := v0 @kind object;
  #L44e2f4.  v0:= new `org.simpleframework.xml.core.TreeModel`;
  #L44e2f8.  call `<init>`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/TreeModel;.<init>:(Lorg/simpleframework/xml/core/Policy;Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L44e2fe.  v2.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` := v0 @kind object;
  #L44e302.  v4:= new `org.simpleframework.xml.core.LabelMap`;
  #L44e306.  call `<init>`(v4, v3) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L44e30c.  v2.`org.simpleframework.xml.core.StructureBuilder.e` @type ^`org.simpleframework.xml.core.LabelMap` := v4 @kind object;
  #L44e310.  v4:= new `org.simpleframework.xml.core.LabelMap`;
  #L44e314.  call `<init>`(v4, v3) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L44e31a.  v2.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` := v4 @kind object;
  #L44e31e.  v4:= new `org.simpleframework.xml.core.LabelMap`;
  #L44e322.  call `<init>`(v4, v3) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L44e328.  v2.`org.simpleframework.xml.core.StructureBuilder.g` @type ^`org.simpleframework.xml.core.LabelMap` := v4 @kind object;
  #L44e32c.  v2.`org.simpleframework.xml.core.StructureBuilder.h` @type ^`org.simpleframework.xml.core.Scanner` := v3 @kind object;
  #L44e330.  v2.`org.simpleframework.xml.core.StructureBuilder.i` @type ^`org.simpleframework.xml.core.Support` := v5 @kind object;
  #L44e334.  return @kind void;
}
procedure `org.simpleframework.xml.core.Model` `a`(`org.simpleframework.xml.core.StructureBuilder` v4 @kind this, `org.simpleframework.xml.core.Expression` v5 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.a:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L44e1d0.  v0:= v4.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L44e1d4.  if v0 == 0 then goto L44e216;
  #L44e1d8.  call temp:= `getPrefix`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L44e1de.  v1:= temp @kind object;
  #L44e1e0.  call temp:= `getFirst`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getFirst:()Ljava/lang/String;` @kind interface;
  #L44e1e6.  v2:= temp @kind object;
  #L44e1e8.  call temp:= `getIndex`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getIndex:()I` @kind interface;
  #L44e1ee.  v3:= temp;
  #L44e1f0.  if v2 == 0 then goto L44e1fc;
  #L44e1f4.  call temp:= `register`(v0, v2, v1, v3) @signature `Lorg/simpleframework/xml/core/Model;.register:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L44e1fa.  v0:= temp @kind object;
  #L44e1fc.  call temp:= `isPath`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L44e202.  v1:= temp;
  #L44e204.  if v1 != 0 then goto L44e20a;
  #L44e208.  goto L44e216;
  #L44e20a.  v1:= 1I;
  #L44e20c.  call temp:= `getPath`(v5, v1) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:(I)Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L44e212.  v5:= temp @kind object;
  #L44e214.  goto L44e1d4;
  #L44e216.  return v0 @kind object;
}
procedure `boolean` `b`(`org.simpleframework.xml.core.StructureBuilder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.b:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L44e0e0.  v0:= v3.`org.simpleframework.xml.core.StructureBuilder.b` @type ^`org.simpleframework.xml.core.ExpressionBuilder` @kind object;
  #L44e0e4.  call temp:= `build`(v0, v4) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.build:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L44e0ea.  v0:= temp @kind object;
  #L44e0ec.  call temp:= `e`(v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.e:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind direct;
  #L44e0f2.  v1:= temp @kind object;
  #L44e0f4.  if v1 == 0 then goto L44e120;
  #L44e0f8.  call temp:= `getLast`(v0) @signature `Lorg/simpleframework/xml/core/Expression;.getLast:()Ljava/lang/String;` @kind interface;
  #L44e0fe.  v2:= temp @kind object;
  #L44e100.  call temp:= `isPath`(v0) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L44e106.  v0:= temp;
  #L44e108.  if v0 != 0 then goto L44e116;
  #L44e10c.  call temp:= `isAttribute`(v1, v4) @signature `Lorg/simpleframework/xml/core/Model;.isAttribute:(Ljava/lang/String;)Z` @kind interface;
  #L44e112.  v4:= temp;
  #L44e114.  return v4;
  #L44e116.  call temp:= `isAttribute`(v1, v2) @signature `Lorg/simpleframework/xml/core/Model;.isAttribute:(Ljava/lang/String;)Z` @kind interface;
  #L44e11c.  v4:= temp;
  #L44e11e.  return v4;
  #L44e120.  v4:= 0I;
  #L44e122.  return v4;
}
procedure `boolean` `c`(`org.simpleframework.xml.core.StructureBuilder` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.c:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L44e134.  v0:= v5.`org.simpleframework.xml.core.StructureBuilder.b` @type ^`org.simpleframework.xml.core.ExpressionBuilder` @kind object;
  #L44e138.  call temp:= `build`(v0, v6) @signature `Lorg/simpleframework/xml/core/ExpressionBuilder;.build:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L44e13e.  v6:= temp @kind object;
  #L44e140.  call temp:= `e`(v5, v6) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.e:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind direct;
  #L44e146.  v0:= temp @kind object;
  #L44e148.  v1:= 0I;
  #L44e14a.  if v0 == 0 then goto L44e192;
  #L44e14e.  call temp:= `getLast`(v6) @signature `Lorg/simpleframework/xml/core/Expression;.getLast:()Ljava/lang/String;` @kind interface;
  #L44e154.  v2:= temp @kind object;
  #L44e156.  call temp:= `getIndex`(v6) @signature `Lorg/simpleframework/xml/core/Expression;.getIndex:()I` @kind interface;
  #L44e15c.  v6:= temp;
  #L44e15e.  call temp:= `isElement`(v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.isElement:(Ljava/lang/String;)Z` @kind interface;
  #L44e164.  v3:= temp;
  #L44e166.  v4:= 1I;
  #L44e168.  if v3 == 0 then goto L44e16e;
  #L44e16c.  return v4;
  #L44e16e.  call temp:= `isModel`(v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.isModel:(Ljava/lang/String;)Z` @kind interface;
  #L44e174.  v3:= temp;
  #L44e176.  if v3 == 0 then goto L44e192;
  #L44e17a.  call temp:= `lookup`(v0, v2, v6) @signature `Lorg/simpleframework/xml/core/Model;.lookup:(Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L44e180.  v6:= temp @kind object;
  #L44e182.  call temp:= `isEmpty`(v6) @signature `Lorg/simpleframework/xml/core/Model;.isEmpty:()Z` @kind interface;
  #L44e188.  v6:= temp;
  #L44e18a.  if v6 == 0 then goto L44e190;
  #L44e18e.  return v1;
  #L44e190.  return v4;
  #L44e192.  return v1;
}
procedure `boolean` `d`(`org.simpleframework.xml.core.StructureBuilder` v1 @kind this) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.d:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44e1a4.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.k` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L44e1a8.  if v0 == 0 then goto L44e1b0;
  #L44e1ac.  v0:= 0I;
  #L44e1ae.  return v0;
  #L44e1b0.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L44e1b4.  call temp:= `isEmpty`(v0) @signature `Lorg/simpleframework/xml/core/Model;.isEmpty:()Z` @kind interface;
  #L44e1ba.  v0:= temp;
  #L44e1bc.  return v0;
}
procedure `org.simpleframework.xml.core.Model` `e`(`org.simpleframework.xml.core.StructureBuilder` v2 @kind this, `org.simpleframework.xml.core.Expression` v3 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.e:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L44e228.  v0:= 0I;
  #L44e22a.  v1:= 1I;
  #L44e22c.  call temp:= `getPath`(v3, v0, v1) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:(II)Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L44e232.  v0:= temp @kind object;
  #L44e234.  call temp:= `isPath`(v3) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L44e23a.  v3:= temp;
  #L44e23c.  if v3 == 0 then goto L44e24e;
  #L44e240.  v3:= v2.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L44e244.  call temp:= `lookup`(v3, v0) @signature `Lorg/simpleframework/xml/core/Model;.lookup:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L44e24a.  v3:= temp @kind object;
  #L44e24c.  return v3 @kind object;
  #L44e24e.  v3:= v2.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L44e252.  return v3 @kind object;
}
procedure `void` `f`(`org.simpleframework.xml.core.StructureBuilder` v2 @kind this, `org.simpleframework.xml.core.Contact` v3 @kind object, `java.lang.annotation.Annotation` v4 @kind object, `org.simpleframework.xml.core.LabelMap` v5 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.f:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L44e464.  v0:= v2.`org.simpleframework.xml.core.StructureBuilder.i` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L44e468.  call temp:= `getLabel`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Support;.getLabel:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L44e46e.  v4:= temp @kind object;
  #L44e470.  call temp:= `getPath`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L44e476.  v0:= temp @kind object;
  #L44e478.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L44e47e.  v1:= temp @kind object;
  #L44e480.  call temp:= `get`(v5, v0) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L44e486.  v0:= temp @kind object;
  #L44e488.  if v0 != 0 then goto L44e494;
  #L44e48c.  call `g`(v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.g:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L44e492.  return @kind void;
  #L44e494.  v4:= new `org.simpleframework.xml.core.PersistenceException`;
  #L44e498.  v5:= 2I;
  #L44e49a.  v5:= new `java.lang.Object`[v5];
  #L44e49e.  v0:= 0I;
  #L44e4a0.  v5[v0]:= v1 @kind object;
  #L44e4a4.  v0:= 1I;
  #L44e4a6.  v5[v0]:= v3 @kind object;
  #L44e4aa.  v3:= "Duplicate annotation of name '%s' on %s" @kind object;
  #L44e4ae.  call `<init>`(v4, v3, v5) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44e4b4.  throw v4;
}
procedure `void` `g`(`org.simpleframework.xml.core.StructureBuilder` v3 @kind this, `org.simpleframework.xml.core.Contact` v4 @kind object, `org.simpleframework.xml.core.Label` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.g:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L44e4c8.  call temp:= `getExpression`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L44e4ce.  v4:= temp @kind object;
  #L44e4d0.  call temp:= `getPath`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L44e4d6.  v0:= temp @kind object;
  #L44e4d8.  v1:= v3.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L44e4dc.  call temp:= `isEmpty`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.isEmpty:()Z` @kind interface;
  #L44e4e2.  v2:= temp;
  #L44e4e4.  if v2 != 0 then goto L44e4f0;
  #L44e4e8.  call temp:= `h`(v3, v4) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.h:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind direct;
  #L44e4ee.  v1:= temp @kind object;
  #L44e4f0.  v4:= v3.`org.simpleframework.xml.core.StructureBuilder.a` @type ^`org.simpleframework.xml.core.InstantiatorBuilder` @kind object;
  #L44e4f4.  call `register`(v4, v5) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.register:(Lorg/simpleframework/xml/core/Label;)V` @kind virtual;
  #L44e4fa.  call `register`(v1, v5) @signature `Lorg/simpleframework/xml/core/Model;.register:(Lorg/simpleframework/xml/core/Label;)V` @kind interface;
  #L44e500.  call temp:= `put`(v6, v0, v5) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L44e506.  return @kind void;
}
procedure `org.simpleframework.xml.core.Model` `h`(`org.simpleframework.xml.core.StructureBuilder` v1 @kind this, `org.simpleframework.xml.core.Expression` v2 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.h:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44e264.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L44e268.  call temp:= `lookup`(v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.lookup:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L44e26e.  v0:= temp @kind object;
  #L44e270.  if v0 == 0 then goto L44e276;
  #L44e274.  return v0 @kind object;
  #L44e276.  call temp:= `a`(v1, v2) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.a:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind direct;
  #L44e27c.  v2:= temp @kind object;
  #L44e27e.  return v2 @kind object;
}
procedure `void` `i`(`org.simpleframework.xml.core.StructureBuilder` v4 @kind this, `org.simpleframework.xml.core.Contact` v5 @kind object, `java.lang.annotation.Annotation` v6 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.i:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L44e518.  v0:= v4.`org.simpleframework.xml.core.StructureBuilder.i` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L44e51c.  call temp:= `getLabel`(v0, v5, v6) @signature `Lorg/simpleframework/xml/core/Support;.getLabel:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L44e522.  v5:= temp @kind object;
  #L44e524.  call temp:= `getExpression`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L44e52a.  v0:= temp @kind object;
  #L44e52c.  call temp:= `getPath`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L44e532.  v1:= temp @kind object;
  #L44e534.  v2:= v4.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L44e538.  call temp:= `isEmpty`(v0) @signature `Lorg/simpleframework/xml/core/Expression;.isEmpty:()Z` @kind interface;
  #L44e53e.  v3:= temp;
  #L44e540.  if v3 != 0 then goto L44e54c;
  #L44e544.  call temp:= `h`(v4, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.h:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind direct;
  #L44e54a.  v2:= temp @kind object;
  #L44e54c.  v0:= v4.`org.simpleframework.xml.core.StructureBuilder.g` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L44e550.  call temp:= `get`(v0, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L44e556.  v0:= temp @kind object;
  #L44e558.  if v0 != 0 then goto L44e578;
  #L44e55c.  v6:= v4.`org.simpleframework.xml.core.StructureBuilder.a` @type ^`org.simpleframework.xml.core.InstantiatorBuilder` @kind object;
  #L44e560.  call `register`(v6, v5) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.register:(Lorg/simpleframework/xml/core/Label;)V` @kind virtual;
  #L44e566.  call `register`(v2, v5) @signature `Lorg/simpleframework/xml/core/Model;.register:(Lorg/simpleframework/xml/core/Label;)V` @kind interface;
  #L44e56c.  v6:= v4.`org.simpleframework.xml.core.StructureBuilder.g` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L44e570.  call temp:= `put`(v6, v1, v5) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L44e576.  return @kind void;
  #L44e578.  v5:= new `org.simpleframework.xml.core.TextException`;
  #L44e57c.  v0:= 1I;
  #L44e57e.  v0:= new `java.lang.Object`[v0];
  #L44e582.  v1:= 0I;
  #L44e584.  v0[v1]:= v6 @kind object;
  #L44e588.  v6:= "Multiple text annotations in %s" @kind object;
  #L44e58c.  call `<init>`(v5, v6, v0) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44e592.  throw v5;
}
procedure `void` `j`(`org.simpleframework.xml.core.StructureBuilder` v3 @kind this, `org.simpleframework.xml.core.Contact` v4 @kind object, `java.lang.annotation.Annotation` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.j:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L44e5a4.  v0:= v3.`org.simpleframework.xml.core.StructureBuilder.i` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L44e5a8.  call temp:= `getLabels`(v0, v4, v5) @signature `Lorg/simpleframework/xml/core/Support;.getLabels:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Ljava/util/List;` @kind virtual;
  #L44e5ae.  v5:= temp @kind object;
  #L44e5b0.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L44e5b6.  v5:= temp @kind object;
  #L44e5b8.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L44e5be.  v0:= temp;
  #L44e5c0.  if v0 == 0 then goto L44e616;
  #L44e5c4.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L44e5ca.  v0:= temp @kind object;
  #L44e5cc.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L44e5d0.  call temp:= `getPath`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L44e5d6.  v1:= temp @kind object;
  #L44e5d8.  call temp:= `getName`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L44e5de.  v2:= temp @kind object;
  #L44e5e0.  call temp:= `get`(v6, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L44e5e6.  v1:= temp @kind object;
  #L44e5e8.  if v1 != 0 then goto L44e5f4;
  #L44e5ec.  call `g`(v3, v4, v0, v6) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.g:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L44e5f2.  goto L44e5b8;
  #L44e5f4.  v4:= new `org.simpleframework.xml.core.PersistenceException`;
  #L44e5f8.  v5:= 2I;
  #L44e5fa.  v5:= new `java.lang.Object`[v5];
  #L44e5fe.  v6:= 0I;
  #L44e600.  v5[v6]:= v2 @kind object;
  #L44e604.  v6:= 1I;
  #L44e606.  v5[v6]:= v0 @kind object;
  #L44e60a.  v6:= "Duplicate annotation of name '%s' on %s" @kind object;
  #L44e60e.  call `<init>`(v4, v6, v5) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44e614.  throw v4;
  #L44e616.  return @kind void;
}
procedure `void` `k`(`org.simpleframework.xml.core.StructureBuilder` v5 @kind this, `java.lang.Class` v6 @kind object, `org.simpleframework.xml.Order` v7 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.k:(Ljava/lang/Class;Lorg/simpleframework/xml/Order;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L44e66c.  if v7 == 0 then goto L44e6b8;
  #L44e670.  call temp:= `attributes`(v7) @signature `Lorg/simpleframework/xml/Order;.attributes:()[Ljava/lang/String;` @kind interface;
  #L44e676.  v7:= temp @kind object;
  #L44e678.  v0:= length @variable v7;
  #L44e67a.  v1:= 0I;
  #L44e67c.  v2:= 0I;
  #L44e67e.  if v2 >= v0 then goto L44e6b8;
  #L44e682.  v3:= v7[v2] @kind object;
  #L44e686.  call temp:= `b`(v5, v3) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.b:(Ljava/lang/String;)Z` @kind direct;
  #L44e68c.  v4:= temp;
  #L44e68e.  if v4 == 0 then goto L44e698;
  #L44e692.  v2:= v2 + 1;
  #L44e696.  goto L44e67e;
  #L44e698.  v7:= new `org.simpleframework.xml.core.AttributeException`;
  #L44e69c.  v0:= 2I;
  #L44e69e.  v0:= new `java.lang.Object`[v0];
  #L44e6a2.  v0[v1]:= v3 @kind object;
  #L44e6a6.  v1:= 1I;
  #L44e6a8.  v0[v1]:= v6 @kind object;
  #L44e6ac.  v6:= "Ordered attribute '%s' missing in %s" @kind object;
  #L44e6b0.  call `<init>`(v7, v6, v0) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44e6b6.  throw v7;
  #L44e6b8.  return @kind void;
}
procedure `void` `l`(`org.simpleframework.xml.core.StructureBuilder` v5 @kind this, `java.lang.Class` v6 @kind object, `org.simpleframework.xml.Order` v7 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.l:(Ljava/lang/Class;Lorg/simpleframework/xml/Order;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L44e6cc.  if v7 == 0 then goto L44e718;
  #L44e6d0.  call temp:= `elements`(v7) @signature `Lorg/simpleframework/xml/Order;.elements:()[Ljava/lang/String;` @kind interface;
  #L44e6d6.  v7:= temp @kind object;
  #L44e6d8.  v0:= length @variable v7;
  #L44e6da.  v1:= 0I;
  #L44e6dc.  v2:= 0I;
  #L44e6de.  if v2 >= v0 then goto L44e718;
  #L44e6e2.  v3:= v7[v2] @kind object;
  #L44e6e6.  call temp:= `c`(v5, v3) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.c:(Ljava/lang/String;)Z` @kind direct;
  #L44e6ec.  v4:= temp;
  #L44e6ee.  if v4 == 0 then goto L44e6f8;
  #L44e6f2.  v2:= v2 + 1;
  #L44e6f6.  goto L44e6de;
  #L44e6f8.  v7:= new `org.simpleframework.xml.core.ElementException`;
  #L44e6fc.  v0:= 2I;
  #L44e6fe.  v0:= new `java.lang.Object`[v0];
  #L44e702.  v0[v1]:= v3 @kind object;
  #L44e706.  v1:= 1I;
  #L44e708.  v0[v1]:= v6 @kind object;
  #L44e70c.  v6:= "Ordered element '%s' missing for %s" @kind object;
  #L44e710.  call `<init>`(v7, v6, v0) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44e716.  throw v7;
  #L44e718.  return @kind void;
}
procedure `void` `m`(`org.simpleframework.xml.core.StructureBuilder` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.m:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44e72c.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L44e730.  call temp:= `isEmpty`(v0) @signature `Lorg/simpleframework/xml/core/Model;.isEmpty:()Z` @kind interface;
  #L44e736.  v0:= temp;
  #L44e738.  if v0 != 0 then goto L44e746;
  #L44e73c.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L44e740.  call `validate`(v0, v2) @signature `Lorg/simpleframework/xml/core/Model;.validate:(Ljava/lang/Class;)V` @kind interface;
  #L44e746.  return @kind void;
}
procedure `void` `n`(`org.simpleframework.xml.core.StructureBuilder` v5 @kind this, `java.lang.Class` v6 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.n:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L44e758.  v0:= v5.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L44e75c.  call temp:= `getText`(v0) @signature `Lorg/simpleframework/xml/core/Model;.getText:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L44e762.  v0:= temp @kind object;
  #L44e764.  if v0 == 0 then goto L44e7d4;
  #L44e768.  call temp:= `isTextList`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isTextList:()Z` @kind interface;
  #L44e76e.  v1:= temp;
  #L44e770.  if v1 != 0 then goto L44e7f0;
  #L44e774.  v1:= v5.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L44e778.  call temp:= `isEmpty`(v1) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L44e77e.  v1:= temp;
  #L44e780.  v2:= 1I;
  #L44e782.  v3:= 0I;
  #L44e784.  v4:= 2I;
  #L44e786.  if v1 == 0 then goto L44e7b8;
  #L44e78a.  v1:= v5.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L44e78e.  call temp:= `isComposite`(v1) @signature `Lorg/simpleframework/xml/core/Model;.isComposite:()Z` @kind interface;
  #L44e794.  v1:= temp;
  #L44e796.  if v1 != 0 then goto L44e79c;
  #L44e79a.  goto L44e7f0;
  #L44e79c.  v1:= new `org.simpleframework.xml.core.TextException`;
  #L44e7a0.  v4:= new `java.lang.Object`[v4];
  #L44e7a4.  v4[v3]:= v0 @kind object;
  #L44e7a8.  v4[v2]:= v6 @kind object;
  #L44e7ac.  v6:= "Paths used with %s in %s" @kind object;
  #L44e7b0.  call `<init>`(v1, v6, v4) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44e7b6.  throw v1;
  #L44e7b8.  v1:= new `org.simpleframework.xml.core.TextException`;
  #L44e7bc.  v4:= new `java.lang.Object`[v4];
  #L44e7c0.  v4[v3]:= v0 @kind object;
  #L44e7c4.  v4[v2]:= v6 @kind object;
  #L44e7c8.  v6:= "Elements used with %s in %s" @kind object;
  #L44e7cc.  call `<init>`(v1, v6, v4) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44e7d2.  throw v1;
  #L44e7d4.  v6:= v5.`org.simpleframework.xml.core.StructureBuilder.h` @type ^`org.simpleframework.xml.core.Scanner` @kind object;
  #L44e7d8.  call temp:= `isEmpty`(v6) @signature `Lorg/simpleframework/xml/core/Scanner;.isEmpty:()Z` @kind interface;
  #L44e7de.  v6:= temp;
  #L44e7e0.  if v6 == 0 then goto L44e7f0;
  #L44e7e4.  call temp:= `d`(v5) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.d:()Z` @kind direct;
  #L44e7ea.  v6:= temp;
  #L44e7ec.  v5.`org.simpleframework.xml.core.StructureBuilder.m` @type ^`boolean` := v6 @kind boolean;
  #L44e7f0.  return @kind void;
}
procedure `void` `o`(`org.simpleframework.xml.core.StructureBuilder` v8 @kind this, `java.lang.Class` v9 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.o:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L44e804.  v0:= v8.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L44e808.  call temp:= `getText`(v0) @signature `Lorg/simpleframework/xml/core/Model;.getText:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L44e80e.  v0:= temp @kind object;
  #L44e810.  if v0 == 0 then goto L44e8ec;
  #L44e814.  call temp:= `isTextList`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isTextList:()Z` @kind interface;
  #L44e81a.  v1:= temp;
  #L44e81c.  if v1 == 0 then goto L44e8ec;
  #L44e820.  call temp:= `getKey`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getKey:()Ljava/lang/Object;` @kind interface;
  #L44e826.  v1:= temp @kind object;
  #L44e828.  v2:= v8.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L44e82c.  call temp:= `iterator`(v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L44e832.  v2:= temp @kind object;
  #L44e834.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L44e83a.  v3:= temp;
  #L44e83c.  v4:= 1I;
  #L44e83e.  v5:= 0I;
  #L44e840.  v6:= 2I;
  #L44e842.  if v3 == 0 then goto L44e8be;
  #L44e846.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L44e84c.  v3:= temp @kind object;
  #L44e84e.  v3:= (`org.simpleframework.xml.core.Label`) v3 @kind object;
  #L44e852.  call temp:= `getKey`(v3) @signature `Lorg/simpleframework/xml/core/Label;.getKey:()Ljava/lang/Object;` @kind interface;
  #L44e858.  v7:= temp @kind object;
  #L44e85a.  call temp:= `equals`(v7, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L44e860.  v7:= temp;
  #L44e862.  if v7 == 0 then goto L44e8a2;
  #L44e866.  call temp:= `getDependent`(v3) @signature `Lorg/simpleframework/xml/core/Label;.getDependent:()Lorg/simpleframework/xml/strategy/Type;` @kind interface;
  #L44e86c.  v3:= temp @kind object;
  #L44e86e.  call temp:= `getType`(v3) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L44e874.  v3:= temp @kind object;
  #L44e876.  v7:= constclass @type ^`java.lang.String` @kind object;
  #L44e87a.  if v3 == v7 then goto L44e880;
  #L44e87e.  goto L44e834;
  #L44e880.  v1:= new `org.simpleframework.xml.core.TextException`;
  #L44e884.  v2:= 3I;
  #L44e886.  v2:= new `java.lang.Object`[v2];
  #L44e88a.  v2[v5]:= v3 @kind object;
  #L44e88e.  v2[v4]:= v0 @kind object;
  #L44e892.  v2[v6]:= v9 @kind object;
  #L44e896.  v9:= "Illegal entry of %s with text annotations on %s in %s" @kind object;
  #L44e89a.  call `<init>`(v1, v9, v2) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44e8a0.  throw v1;
  #L44e8a2.  v1:= new `org.simpleframework.xml.core.TextException`;
  #L44e8a6.  v2:= new `java.lang.Object`[v6];
  #L44e8aa.  v2[v5]:= v0 @kind object;
  #L44e8ae.  v2[v4]:= v9 @kind object;
  #L44e8b2.  v9:= "Elements used with %s in %s" @kind object;
  #L44e8b6.  call `<init>`(v1, v9, v2) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44e8bc.  throw v1;
  #L44e8be.  v1:= v8.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L44e8c2.  call temp:= `isComposite`(v1) @signature `Lorg/simpleframework/xml/core/Model;.isComposite:()Z` @kind interface;
  #L44e8c8.  v1:= temp;
  #L44e8ca.  if v1 != 0 then goto L44e8d0;
  #L44e8ce.  goto L44e8ec;
  #L44e8d0.  v1:= new `org.simpleframework.xml.core.TextException`;
  #L44e8d4.  v2:= new `java.lang.Object`[v6];
  #L44e8d8.  v2[v5]:= v0 @kind object;
  #L44e8dc.  v2[v4]:= v9 @kind object;
  #L44e8e0.  v9:= "Paths used with %s in %s" @kind object;
  #L44e8e4.  call `<init>`(v1, v9, v2) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44e8ea.  throw v1;
  #L44e8ec.  return @kind void;
}
procedure `void` `p`(`org.simpleframework.xml.core.StructureBuilder` v12 @kind this, `java.lang.Class` v13 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.p:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L44e900.  v13:= v12.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L44e904.  call temp:= `iterator`(v13) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L44e90a.  v13:= temp @kind object;
  #L44e90c.  call temp:= `hasNext`(v13) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L44e912.  v0:= temp;
  #L44e914.  if v0 == 0 then goto L44e9c4;
  #L44e918.  call temp:= `next`(v13) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L44e91e.  v0:= temp @kind object;
  #L44e920.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L44e924.  call temp:= `getPaths`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getPaths:()[Ljava/lang/String;` @kind interface;
  #L44e92a.  v1:= temp @kind object;
  #L44e92c.  call temp:= `getContact`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L44e932.  v2:= temp @kind object;
  #L44e934.  v3:= length @variable v1;
  #L44e936.  v4:= 0I;
  #L44e938.  v5:= 0I;
  #L44e93a.  if v5 >= v3 then goto L44e90c;
  #L44e93e.  v6:= v1[v5] @kind object;
  #L44e942.  call temp:= `getAnnotation`(v2) @signature `Lorg/simpleframework/xml/core/Contact;.getAnnotation:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L44e948.  v7:= temp @kind object;
  #L44e94a.  v8:= v12.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L44e94e.  call temp:= `get`(v8, v6) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L44e954.  v6:= temp @kind object;
  #L44e956.  v6:= (`org.simpleframework.xml.core.Label`) v6 @kind object;
  #L44e95a.  call temp:= `isInline`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L44e960.  v8:= temp;
  #L44e962.  call temp:= `isInline`(v6) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L44e968.  v9:= temp;
  #L44e96a.  v10:= 2I;
  #L44e96c.  v11:= 1I;
  #L44e96e.  if v8 != v9 then goto L44e9a8;
  #L44e972.  call temp:= `isRequired`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L44e978.  v8:= temp;
  #L44e97a.  call temp:= `isRequired`(v6) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L44e980.  v6:= temp;
  #L44e982.  if v8 != v6 then goto L44e98c;
  #L44e986.  v5:= v5 + 1;
  #L44e98a.  goto L44e93a;
  #L44e98c.  v13:= new `org.simpleframework.xml.core.UnionException`;
  #L44e990.  v0:= new `java.lang.Object`[v10];
  #L44e994.  v0[v4]:= v7 @kind object;
  #L44e998.  v0[v11]:= v2 @kind object;
  #L44e99c.  v1:= "Required must be consistent in %s for %s" @kind object;
  #L44e9a0.  call `<init>`(v13, v1, v0) @signature `Lorg/simpleframework/xml/core/UnionException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44e9a6.  throw v13;
  #L44e9a8.  v13:= new `org.simpleframework.xml.core.UnionException`;
  #L44e9ac.  v0:= new `java.lang.Object`[v10];
  #L44e9b0.  v0[v4]:= v7 @kind object;
  #L44e9b4.  v0[v11]:= v2 @kind object;
  #L44e9b8.  v1:= "Inline must be consistent in %s for %s" @kind object;
  #L44e9bc.  call `<init>`(v13, v1, v0) @signature `Lorg/simpleframework/xml/core/UnionException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44e9c2.  throw v13;
  #L44e9c4.  return @kind void;
}
procedure `void` `q`(`org.simpleframework.xml.core.StructureBuilder` v2 @kind this, `org.simpleframework.xml.core.Contact` v3 @kind object, `java.lang.annotation.Annotation` v4 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.q:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L44e9d8.  v0:= v2.`org.simpleframework.xml.core.StructureBuilder.i` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L44e9dc.  call temp:= `getLabel`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Support;.getLabel:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L44e9e2.  v3:= temp @kind object;
  #L44e9e4.  v0:= v2.`org.simpleframework.xml.core.StructureBuilder.j` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L44e9e8.  if v0 != 0 then goto L44e9f2;
  #L44e9ec.  v2.`org.simpleframework.xml.core.StructureBuilder.j` @type ^`org.simpleframework.xml.core.Label` := v3 @kind object;
  #L44e9f0.  return @kind void;
  #L44e9f2.  v3:= new `org.simpleframework.xml.core.AttributeException`;
  #L44e9f6.  v0:= 1I;
  #L44e9f8.  v0:= new `java.lang.Object`[v0];
  #L44e9fc.  v1:= 0I;
  #L44e9fe.  v0[v1]:= v4 @kind object;
  #L44ea02.  v4:= "Multiple version annotations in %s" @kind object;
  #L44ea06.  call `<init>`(v3, v4, v0) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44ea0c.  throw v3;
}
procedure `void` `assemble`(`org.simpleframework.xml.core.StructureBuilder` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.assemble:(Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44e348.  v3:= v2.`org.simpleframework.xml.core.StructureBuilder.h` @type ^`org.simpleframework.xml.core.Scanner` @kind object;
  #L44e34c.  call temp:= `getOrder`(v3) @signature `Lorg/simpleframework/xml/core/Scanner;.getOrder:()Lorg/simpleframework/xml/Order;` @kind interface;
  #L44e352.  v3:= temp @kind object;
  #L44e354.  if v3 == 0 then goto L44e366;
  #L44e358.  v0:= v2.`org.simpleframework.xml.core.StructureBuilder.c` @type ^`org.simpleframework.xml.core.ModelAssembler` @kind object;
  #L44e35c.  v1:= v2.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L44e360.  call `assemble`(v0, v1, v3) @signature `Lorg/simpleframework/xml/core/ModelAssembler;.assemble:(Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/Order;)V` @kind virtual;
  #L44e366.  return @kind void;
}
procedure `org.simpleframework.xml.core.Structure` `build`(`org.simpleframework.xml.core.StructureBuilder` v6 @kind this, `java.lang.Class` v7 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.build:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Structure;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L44e290.  v7:= new `org.simpleframework.xml.core.Structure`;
  #L44e294.  v1:= v6.`org.simpleframework.xml.core.StructureBuilder.d` @type ^`org.simpleframework.xml.core.Instantiator` @kind object;
  #L44e298.  v2:= v6.`org.simpleframework.xml.core.StructureBuilder.l` @type ^`org.simpleframework.xml.core.Model` @kind object;
  #L44e29c.  v3:= v6.`org.simpleframework.xml.core.StructureBuilder.j` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L44e2a0.  v4:= v6.`org.simpleframework.xml.core.StructureBuilder.k` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L44e2a4.  v5:= v6.`org.simpleframework.xml.core.StructureBuilder.m` @type ^`boolean` @kind boolean;
  #L44e2a8.  v0:= v7 @kind object;
  #L44e2aa.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/Structure;.<init>:(Lorg/simpleframework/xml/core/Instantiator;Lorg/simpleframework/xml/core/Model;Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/Label;Z)V` @kind direct;
  #L44e2b0.  return v7 @kind object;
}
procedure `void` `commit`(`org.simpleframework.xml.core.StructureBuilder` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.commit:(Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;

  #L44e378.  v1:= v0.`org.simpleframework.xml.core.StructureBuilder.d` @type ^`org.simpleframework.xml.core.Instantiator` @kind object;
  #L44e37c.  if v1 != 0 then goto L44e390;
  #L44e380.  v1:= v0.`org.simpleframework.xml.core.StructureBuilder.a` @type ^`org.simpleframework.xml.core.InstantiatorBuilder` @kind object;
  #L44e384.  call temp:= `build`(v1) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.build:()Lorg/simpleframework/xml/core/Instantiator;` @kind virtual;
  #L44e38a.  v1:= temp @kind object;
  #L44e38c.  v0.`org.simpleframework.xml.core.StructureBuilder.d` @type ^`org.simpleframework.xml.core.Instantiator` := v1 @kind object;
  #L44e390.  return @kind void;
}
procedure `void` `process`(`org.simpleframework.xml.core.StructureBuilder` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.process:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44e3a4.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Attribute` @kind boolean;
  #L44e3a8.  if v0 == 0 then goto L44e3b6;
  #L44e3ac.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.e` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L44e3b0.  call `f`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.f:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L44e3b6.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementUnion` @kind boolean;
  #L44e3ba.  if v0 == 0 then goto L44e3c8;
  #L44e3be.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L44e3c2.  call `j`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.j:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L44e3c8.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementListUnion` @kind boolean;
  #L44e3cc.  if v0 == 0 then goto L44e3da;
  #L44e3d0.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L44e3d4.  call `j`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.j:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L44e3da.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementMapUnion` @kind boolean;
  #L44e3de.  if v0 == 0 then goto L44e3ec;
  #L44e3e2.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L44e3e6.  call `j`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.j:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L44e3ec.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementList` @kind boolean;
  #L44e3f0.  if v0 == 0 then goto L44e3fe;
  #L44e3f4.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L44e3f8.  call `f`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.f:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L44e3fe.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementArray` @kind boolean;
  #L44e402.  if v0 == 0 then goto L44e410;
  #L44e406.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L44e40a.  call `f`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.f:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L44e410.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementMap` @kind boolean;
  #L44e414.  if v0 == 0 then goto L44e422;
  #L44e418.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L44e41c.  call `f`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.f:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L44e422.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Element` @kind boolean;
  #L44e426.  if v0 == 0 then goto L44e434;
  #L44e42a.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.f` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L44e42e.  call `f`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.f:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L44e434.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Version` @kind boolean;
  #L44e438.  if v0 == 0 then goto L44e442;
  #L44e43c.  call `q`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.q:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L44e442.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Text` @kind boolean;
  #L44e446.  if v0 == 0 then goto L44e450;
  #L44e44a.  call `i`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.i:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L44e450.  return @kind void;
}
procedure `void` `validate`(`org.simpleframework.xml.core.StructureBuilder` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.validate:(Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44e628.  v0:= v1.`org.simpleframework.xml.core.StructureBuilder.h` @type ^`org.simpleframework.xml.core.Scanner` @kind object;
  #L44e62c.  call temp:= `getOrder`(v0) @signature `Lorg/simpleframework/xml/core/Scanner;.getOrder:()Lorg/simpleframework/xml/Order;` @kind interface;
  #L44e632.  v0:= temp @kind object;
  #L44e634.  call `p`(v1, v2) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.p:(Ljava/lang/Class;)V` @kind direct;
  #L44e63a.  call `l`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.l:(Ljava/lang/Class;Lorg/simpleframework/xml/Order;)V` @kind direct;
  #L44e640.  call `k`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.k:(Ljava/lang/Class;Lorg/simpleframework/xml/Order;)V` @kind direct;
  #L44e646.  call `m`(v1, v2) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.m:(Ljava/lang/Class;)V` @kind direct;
  #L44e64c.  call `n`(v1, v2) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.n:(Ljava/lang/Class;)V` @kind direct;
  #L44e652.  call `o`(v1, v2) @signature `Lorg/simpleframework/xml/core/StructureBuilder;.o:(Ljava/lang/Class;)V` @kind direct;
  #L44e658.  return @kind void;
}
