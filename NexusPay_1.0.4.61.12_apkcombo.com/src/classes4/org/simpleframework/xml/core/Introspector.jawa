record `org.simpleframework.xml.core.Introspector` @kind class @AccessFlag PUBLIC {
  `java.lang.annotation.Annotation` `org.simpleframework.xml.core.Introspector.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Contact` `org.simpleframework.xml.core.Introspector.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Format` `org.simpleframework.xml.core.Introspector.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.Introspector.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Introspector` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `org.simpleframework.xml.core.Label` v3 @kind object, `org.simpleframework.xml.stream.Format` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Introspector;.<init>:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4465f8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4465fe.  call temp:= `getAnnotation`(v2) @signature `Lorg/simpleframework/xml/core/Contact;.getAnnotation:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L446604.  v0:= temp @kind object;
  #L446606.  v1.`org.simpleframework.xml.core.Introspector.a` @type ^`java.lang.annotation.Annotation` := v0 @kind object;
  #L44660a.  v1.`org.simpleframework.xml.core.Introspector.b` @type ^`org.simpleframework.xml.core.Contact` := v2 @kind object;
  #L44660e.  v1.`org.simpleframework.xml.core.Introspector.c` @type ^`org.simpleframework.xml.stream.Format` := v4 @kind object;
  #L446612.  v1.`org.simpleframework.xml.core.Introspector.d` @type ^`org.simpleframework.xml.core.Label` := v3 @kind object;
  #L446616.  return @kind void;
}
procedure `java.lang.String` `a`(`org.simpleframework.xml.core.Introspector` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.a:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4463ac.  v0:= v2.`org.simpleframework.xml.core.Introspector.d` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L4463b0.  call temp:= `getOverride`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getOverride:()Ljava/lang/String;` @kind interface;
  #L4463b6.  v0:= temp @kind object;
  #L4463b8.  call temp:= `isEmpty`(v2, v0) @signature `Lorg/simpleframework/xml/core/Introspector;.isEmpty:(Ljava/lang/String;)Z` @kind virtual;
  #L4463be.  v1:= temp;
  #L4463c0.  if v1 != 0 then goto L4463c6;
  #L4463c4.  return v0 @kind object;
  #L4463c6.  v0:= v2.`org.simpleframework.xml.core.Introspector.b` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L4463ca.  call temp:= `getName`(v0) @signature `Lorg/simpleframework/xml/core/Contact;.getName:()Ljava/lang/String;` @kind interface;
  #L4463d0.  v0:= temp @kind object;
  #L4463d2.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`org.simpleframework.xml.core.Introspector` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Introspector;.b:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44645c.  call temp:= `c`(v1, v2) @signature `Lorg/simpleframework/xml/core/Introspector;.c:(Ljava/lang/Class;)Ljava/lang/String;` @kind direct;
  #L446462.  v0:= temp @kind object;
  #L446464.  if v0 == 0 then goto L44646a;
  #L446468.  return v0 @kind object;
  #L44646a.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L446470.  v2:= temp @kind object;
  #L446472.  call temp:= `getName`(v2) @signature `Lorg/simpleframework/xml/core/Reflector;.getName:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L446478.  v2:= temp @kind object;
  #L44647a.  return v2 @kind object;
}
procedure `java.lang.String` `c`(`org.simpleframework.xml.core.Introspector` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Introspector;.c:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4464c4.  v0:= v3 @kind object;
  #L4464c6.  if v0 == 0 then goto L4464e2;
  #L4464ca.  call temp:= `d`(v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Introspector;.d:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/String;` @kind direct;
  #L4464d0.  v1:= temp @kind object;
  #L4464d2.  if v1 == 0 then goto L4464d8;
  #L4464d6.  return v1 @kind object;
  #L4464d8.  call temp:= `getSuperclass`(v0) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L4464de.  v0:= temp @kind object;
  #L4464e0.  goto L4464c6;
  #L4464e2.  v3:= 0I;
  #L4464e4.  return v3 @kind object;
}
procedure `java.lang.String` `d`(`org.simpleframework.xml.core.Introspector` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Introspector;.d:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4464f8.  call temp:= `getSimpleName`(v3) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L4464fe.  v2:= temp @kind object;
  #L446500.  v0:= constclass @type ^`org.simpleframework.xml.Root` @kind object;
  #L446504.  call temp:= `getAnnotation`(v3, v0) @signature `Ljava/lang/Class;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L44650a.  v3:= temp @kind object;
  #L44650c.  v3:= (`org.simpleframework.xml.Root`) v3 @kind object;
  #L446510.  if v3 == 0 then goto L446534;
  #L446514.  call temp:= `name`(v3) @signature `Lorg/simpleframework/xml/Root;.name:()Ljava/lang/String;` @kind interface;
  #L44651a.  v3:= temp @kind object;
  #L44651c.  call temp:= `isEmpty`(v1, v3) @signature `Lorg/simpleframework/xml/core/Introspector;.isEmpty:(Ljava/lang/String;)Z` @kind virtual;
  #L446522.  v0:= temp;
  #L446524.  if v0 != 0 then goto L44652a;
  #L446528.  return v3 @kind object;
  #L44652a.  call temp:= `getName`(v2) @signature `Lorg/simpleframework/xml/core/Reflector;.getName:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L446530.  v2:= temp @kind object;
  #L446532.  return v2 @kind object;
  #L446534.  v2:= 0I;
  #L446536.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Contact` `getContact`(`org.simpleframework.xml.core.Introspector` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getContact:()Lorg/simpleframework/xml/core/Contact;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L446580.  v0:= v1.`org.simpleframework.xml.core.Introspector.b` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L446584.  return v0 @kind object;
}
procedure `org.simpleframework.xml.strategy.Type` `getDependent`(`org.simpleframework.xml.core.Introspector` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getDependent:()Lorg/simpleframework/xml/strategy/Type;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4465d8.  v0:= v1.`org.simpleframework.xml.core.Introspector.d` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L4465dc.  call temp:= `getDependent`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getDependent:()Lorg/simpleframework/xml/strategy/Type;` @kind interface;
  #L4465e2.  v0:= temp @kind object;
  #L4465e4.  return v0 @kind object;
}
procedure `java.lang.String` `getEntry`(`org.simpleframework.xml.core.Introspector` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getEntry:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4463e4.  call temp:= `getDependent`(v2) @signature `Lorg/simpleframework/xml/core/Introspector;.getDependent:()Lorg/simpleframework/xml/strategy/Type;` @kind virtual;
  #L4463ea.  v0:= temp @kind object;
  #L4463ec.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L4463f2.  v0:= temp @kind object;
  #L4463f4.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L4463fa.  v1:= temp;
  #L4463fc.  if v1 == 0 then goto L446408;
  #L446400.  call temp:= `getComponentType`(v0) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L446406.  v0:= temp @kind object;
  #L446408.  call temp:= `b`(v2, v0) @signature `Lorg/simpleframework/xml/core/Introspector;.b:(Ljava/lang/Class;)Ljava/lang/String;` @kind direct;
  #L44640e.  v0:= temp @kind object;
  #L446410.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Expression` `getExpression`(`org.simpleframework.xml.core.Introspector` v4 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L446598.  call temp:= `getPath`(v4) @signature `Lorg/simpleframework/xml/core/Introspector;.getPath:()Ljava/lang/String;` @kind virtual;
  #L44659e.  v0:= temp @kind object;
  #L4465a0.  if v0 == 0 then goto L4465b8;
  #L4465a4.  v1:= new `org.simpleframework.xml.core.PathParser`;
  #L4465a8.  v2:= v4.`org.simpleframework.xml.core.Introspector.b` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L4465ac.  v3:= v4.`org.simpleframework.xml.core.Introspector.c` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L4465b0.  call `<init>`(v1, v0, v2, v3) @signature `Lorg/simpleframework/xml/core/PathParser;.<init>:(Ljava/lang/String;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L4465b6.  return v1 @kind object;
  #L4465b8.  v0:= new `org.simpleframework.xml.core.EmptyExpression`;
  #L4465bc.  v1:= v4.`org.simpleframework.xml.core.Introspector.c` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L4465c0.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/EmptyExpression;.<init>:(Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L4465c6.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.Introspector` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L446424.  v0:= v2.`org.simpleframework.xml.core.Introspector.d` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L446428.  call temp:= `getEntry`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getEntry:()Ljava/lang/String;` @kind interface;
  #L44642e.  v0:= temp @kind object;
  #L446430.  v1:= v2.`org.simpleframework.xml.core.Introspector.d` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L446434.  call temp:= `isInline`(v1) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L44643a.  v1:= temp;
  #L44643c.  if v1 != 0 then goto L446448;
  #L446440.  call temp:= `a`(v2) @signature `Lorg/simpleframework/xml/core/Introspector;.a:()Ljava/lang/String;` @kind direct;
  #L446446.  v0:= temp @kind object;
  #L446448.  return v0 @kind object;
}
procedure `java.lang.String` `getPath`(`org.simpleframework.xml.core.Introspector` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.getPath:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44648c.  v0:= v2.`org.simpleframework.xml.core.Introspector.b` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L446490.  v1:= constclass @type ^`org.simpleframework.xml.Path` @kind object;
  #L446494.  call temp:= `getAnnotation`(v0, v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind interface;
  #L44649a.  v0:= temp @kind object;
  #L44649c.  v0:= (`org.simpleframework.xml.Path`) v0 @kind object;
  #L4464a0.  if v0 != 0 then goto L4464a8;
  #L4464a4.  v0:= 0I;
  #L4464a6.  return v0 @kind object;
  #L4464a8.  call temp:= `value`(v0) @signature `Lorg/simpleframework/xml/Path;.value:()Ljava/lang/String;` @kind interface;
  #L4464ae.  v0:= temp @kind object;
  #L4464b0.  return v0 @kind object;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.core.Introspector` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Introspector;.isEmpty:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L446384.  v0:= 1I;
  #L446386.  if v2 == 0 then goto L44639a;
  #L44638a.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L446390.  v2:= temp;
  #L446392.  if v2 != 0 then goto L446398;
  #L446396.  goto L44639a;
  #L446398.  v0:= 0I;
  #L44639a.  return v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.Introspector` v3 @kind this) @signature `Lorg/simpleframework/xml/core/Introspector;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L446548.  v0:= 2I;
  #L44654a.  v0:= new `java.lang.Object`[v0];
  #L44654e.  v1:= v3.`org.simpleframework.xml.core.Introspector.a` @type ^`java.lang.annotation.Annotation` @kind object;
  #L446552.  v2:= 0I;
  #L446554.  v0[v2]:= v1 @kind object;
  #L446558.  v1:= v3.`org.simpleframework.xml.core.Introspector.b` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L44655c.  v2:= 1I;
  #L44655e.  v0[v2]:= v1 @kind object;
  #L446562.  v1:= "%s on %s" @kind object;
  #L446566.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L44656c.  v0:= temp @kind object;
  #L44656e.  return v0 @kind object;
}
