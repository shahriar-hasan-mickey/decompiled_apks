record `org.simpleframework.xml.core.CompositeInlineMap` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Repeater` @kind interface {
  `org.simpleframework.xml.core.MapFactory` `org.simpleframework.xml.core.CompositeInlineMap.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Converter` `org.simpleframework.xml.core.CompositeInlineMap.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Converter` `org.simpleframework.xml.core.CompositeInlineMap.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Style` `org.simpleframework.xml.core.CompositeInlineMap.d` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Entry` `org.simpleframework.xml.core.CompositeInlineMap.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.CompositeInlineMap` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.core.Entry` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L43ea9c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43eaa2.  v0:= new `org.simpleframework.xml.core.MapFactory`;
  #L43eaa6.  call `<init>`(v0, v2, v4) @signature `Lorg/simpleframework/xml/core/MapFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L43eaac.  v1.`org.simpleframework.xml.core.CompositeInlineMap.a` @type ^`org.simpleframework.xml.core.MapFactory` := v0 @kind object;
  #L43eab0.  call temp:= `getValue`(v3, v2) @signature `Lorg/simpleframework/xml/core/Entry;.getValue:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @kind virtual;
  #L43eab6.  v4:= temp @kind object;
  #L43eab8.  v1.`org.simpleframework.xml.core.CompositeInlineMap.b` @type ^`org.simpleframework.xml.core.Converter` := v4 @kind object;
  #L43eabc.  call temp:= `getKey`(v3, v2) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @kind virtual;
  #L43eac2.  v4:= temp @kind object;
  #L43eac4.  v1.`org.simpleframework.xml.core.CompositeInlineMap.c` @type ^`org.simpleframework.xml.core.Converter` := v4 @kind object;
  #L43eac8.  call temp:= `getStyle`(v2) @signature `Lorg/simpleframework/xml/core/Context;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind interface;
  #L43eace.  v2:= temp @kind object;
  #L43ead0.  v1.`org.simpleframework.xml.core.CompositeInlineMap.d` @type ^`org.simpleframework.xml.stream.Style` := v2 @kind object;
  #L43ead4.  v1.`org.simpleframework.xml.core.CompositeInlineMap.e` @type ^`org.simpleframework.xml.core.Entry` := v3 @kind object;
  #L43ead8.  return @kind void;
}
procedure `java.lang.Object` `a`(`org.simpleframework.xml.core.CompositeInlineMap` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object, `java.util.Map` v6 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/util/Map;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L43ea48.  call temp:= `getParent`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getParent:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L43ea4e.  v0:= temp @kind object;
  #L43ea50.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L43ea56.  v1:= temp @kind object;
  #L43ea58.  if v5 == 0 then goto L43ea88;
  #L43ea5c.  v2:= v4.`org.simpleframework.xml.core.CompositeInlineMap.c` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L43ea60.  call temp:= `read`(v2, v5) @signature `Lorg/simpleframework/xml/core/Converter;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind interface;
  #L43ea66.  v2:= temp @kind object;
  #L43ea68.  v3:= v4.`org.simpleframework.xml.core.CompositeInlineMap.b` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L43ea6c.  call temp:= `read`(v3, v5) @signature `Lorg/simpleframework/xml/core/Converter;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind interface;
  #L43ea72.  v5:= temp @kind object;
  #L43ea74.  if v6 == 0 then goto L43ea7e;
  #L43ea78.  call temp:= `put`(v6, v2, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43ea7e.  call temp:= `getNext`(v0, v1) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L43ea84.  v5:= temp @kind object;
  #L43ea86.  goto L43ea58;
  #L43ea88.  return v6 @kind object;
}
procedure `void` `b`(`org.simpleframework.xml.core.CompositeInlineMap` v6 @kind this, `org.simpleframework.xml.stream.OutputNode` v7 @kind object, `java.util.Map` v8 @kind object, `org.simpleframework.xml.stream.Mode` v9 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.b:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/util/Map;Lorg/simpleframework/xml/stream/Mode;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L43eb2c.  v0:= v6.`org.simpleframework.xml.core.CompositeInlineMap.e` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L43eb30.  call temp:= `getEntry`(v0) @signature `Lorg/simpleframework/xml/core/Entry;.getEntry:()Ljava/lang/String;` @kind virtual;
  #L43eb36.  v0:= temp @kind object;
  #L43eb38.  v1:= v6.`org.simpleframework.xml.core.CompositeInlineMap.d` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L43eb3c.  call temp:= `getElement`(v1, v0) @signature `Lorg/simpleframework/xml/stream/Style;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L43eb42.  v0:= temp @kind object;
  #L43eb44.  call temp:= `keySet`(v8) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L43eb4a.  v1:= temp @kind object;
  #L43eb4c.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L43eb52.  v1:= temp @kind object;
  #L43eb54.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L43eb5a.  v2:= temp;
  #L43eb5c.  if v2 == 0 then goto L43eb94;
  #L43eb60.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L43eb66.  v2:= temp @kind object;
  #L43eb68.  call temp:= `getChild`(v7, v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getChild:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L43eb6e.  v3:= temp @kind object;
  #L43eb70.  call temp:= `get`(v8, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43eb76.  v4:= temp @kind object;
  #L43eb78.  call `setMode`(v3, v9) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setMode:(Lorg/simpleframework/xml/stream/Mode;)V` @kind interface;
  #L43eb7e.  v5:= v6.`org.simpleframework.xml.core.CompositeInlineMap.c` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L43eb82.  call `write`(v5, v3, v2) @signature `Lorg/simpleframework/xml/core/Converter;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind interface;
  #L43eb88.  v2:= v6.`org.simpleframework.xml.core.CompositeInlineMap.b` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L43eb8c.  call `write`(v2, v3, v4) @signature `Lorg/simpleframework/xml/core/Converter;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind interface;
  #L43eb92.  goto L43eb54;
  #L43eb94.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeInlineMap` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43e9ec.  v0:= v1.`org.simpleframework.xml.core.CompositeInlineMap.a` @type ^`org.simpleframework.xml.core.MapFactory` @kind object;
  #L43e9f0.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/MapFactory;.getInstance:()Ljava/lang/Object;` @kind virtual;
  #L43e9f6.  v0:= temp @kind object;
  #L43e9f8.  v0:= (`java.util.Map`) v0 @kind object;
  #L43e9fc.  if v0 == 0 then goto L43ea08;
  #L43ea00.  call temp:= `a`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/util/Map;)Ljava/lang/Object;` @kind direct;
  #L43ea06.  return v0 @kind object;
  #L43ea08.  v2:= 0I;
  #L43ea0a.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeInlineMap` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L43ea1c.  v2:= (`java.util.Map`) v2 @kind object;
  #L43ea20.  if v2 == 0 then goto L43ea2c;
  #L43ea24.  call temp:= `a`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/util/Map;)Ljava/lang/Object;` @kind direct;
  #L43ea2a.  return v2 @kind object;
  #L43ea2c.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L43ea32.  v1:= temp @kind object;
  #L43ea34.  return v1 @kind object;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.CompositeInlineMap` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L43e994.  call temp:= `getParent`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getParent:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L43e99a.  v0:= temp @kind object;
  #L43e99c.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L43e9a2.  v1:= temp @kind object;
  #L43e9a4.  if v5 == 0 then goto L43e9d8;
  #L43e9a8.  v2:= v4.`org.simpleframework.xml.core.CompositeInlineMap.c` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L43e9ac.  call temp:= `validate`(v2, v5) @signature `Lorg/simpleframework/xml/core/Converter;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind interface;
  #L43e9b2.  v2:= temp;
  #L43e9b4.  v3:= 0I;
  #L43e9b6.  if v2 != 0 then goto L43e9bc;
  #L43e9ba.  return v3;
  #L43e9bc.  v2:= v4.`org.simpleframework.xml.core.CompositeInlineMap.b` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L43e9c0.  call temp:= `validate`(v2, v5) @signature `Lorg/simpleframework/xml/core/Converter;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind interface;
  #L43e9c6.  v5:= temp;
  #L43e9c8.  if v5 != 0 then goto L43e9ce;
  #L43e9cc.  return v3;
  #L43e9ce.  call temp:= `getNext`(v0, v1) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L43e9d4.  v5:= temp @kind object;
  #L43e9d6.  goto L43e9a4;
  #L43e9d8.  v5:= 1I;
  #L43e9da.  return v5;
}
procedure `void` `write`(`org.simpleframework.xml.core.CompositeInlineMap` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L43eaec.  call temp:= `getParent`(v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getParent:()Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L43eaf2.  v0:= temp @kind object;
  #L43eaf4.  call temp:= `getMode`(v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getMode:()Lorg/simpleframework/xml/stream/Mode;` @kind interface;
  #L43eafa.  v1:= temp @kind object;
  #L43eafc.  v5:= (`java.util.Map`) v5 @kind object;
  #L43eb00.  call temp:= `isCommitted`(v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.isCommitted:()Z` @kind interface;
  #L43eb06.  v2:= temp;
  #L43eb08.  if v2 != 0 then goto L43eb12;
  #L43eb0c.  call `remove`(v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.remove:()V` @kind interface;
  #L43eb12.  call `b`(v3, v0, v5, v1) @signature `Lorg/simpleframework/xml/core/CompositeInlineMap;.b:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/util/Map;Lorg/simpleframework/xml/stream/Mode;)V` @kind direct;
  #L43eb18.  return @kind void;
}
