record `org.simpleframework.xml.core.MethodPartFactory` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.AnnotationFactory` `org.simpleframework.xml.core.MethodPartFactory.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.MethodPartFactory` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object, `org.simpleframework.xml.core.Support` v3 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L447a8c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L447a92.  v0:= new `org.simpleframework.xml.core.AnnotationFactory`;
  #L447a96.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L447a9c.  v1.`org.simpleframework.xml.core.MethodPartFactory.a` @type ^`org.simpleframework.xml.core.AnnotationFactory` := v0 @kind object;
  #L447aa0.  return @kind void;
}
procedure `java.lang.annotation.Annotation` `a`(`org.simpleframework.xml.core.MethodPartFactory` v2 @kind this, `java.lang.reflect.Method` v3 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.a:(Ljava/lang/reflect/Method;)Ljava/lang/annotation/Annotation;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L447834.  call temp:= `b`(v2, v3) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.b:(Ljava/lang/reflect/Method;)[Ljava/lang/Class;` @kind direct;
  #L44783a.  v0:= temp @kind object;
  #L44783c.  call temp:= `getType`(v2, v3) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getType:(Ljava/lang/reflect/Method;)Ljava/lang/Class;` @kind virtual;
  #L447842.  v3:= temp @kind object;
  #L447844.  if v3 == 0 then goto L447856;
  #L447848.  v1:= v2.`org.simpleframework.xml.core.MethodPartFactory.a` @type ^`org.simpleframework.xml.core.AnnotationFactory` @kind object;
  #L44784c.  call temp:= `getInstance`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L447852.  v3:= temp @kind object;
  #L447854.  return v3 @kind object;
  #L447856.  v3:= 0I;
  #L447858.  return v3 @kind object;
}
procedure `java.lang.Class`[] `b`(`org.simpleframework.xml.core.MethodPartFactory` v2 @kind this, `java.lang.reflect.Method` v3 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.b:(Ljava/lang/reflect/Method;)[Ljava/lang/Class;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4477a8.  call temp:= `c`(v2, v3) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.c:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/MethodType;` @kind direct;
  #L4477ae.  v0:= temp @kind object;
  #L4477b0.  v1:= `@@org.simpleframework.xml.core.MethodType.SET` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L4477b4.  if v0 != v1 then goto L4477c4;
  #L4477b8.  v0:= 0I;
  #L4477ba.  call temp:= `getParameterDependents`(v3, v0) @signature `Lorg/simpleframework/xml/core/Reflector;.getParameterDependents:(Ljava/lang/reflect/Method;I)[Ljava/lang/Class;` @kind static;
  #L4477c0.  v3:= temp @kind object;
  #L4477c2.  return v3 @kind object;
  #L4477c4.  v1:= `@@org.simpleframework.xml.core.MethodType.GET` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L4477c8.  if v0 != v1 then goto L4477d6;
  #L4477cc.  call temp:= `getReturnDependents`(v3) @signature `Lorg/simpleframework/xml/core/Reflector;.getReturnDependents:(Ljava/lang/reflect/Method;)[Ljava/lang/Class;` @kind static;
  #L4477d2.  v3:= temp @kind object;
  #L4477d4.  return v3 @kind object;
  #L4477d6.  v1:= `@@org.simpleframework.xml.core.MethodType.IS` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L4477da.  if v0 != v1 then goto L4477e8;
  #L4477de.  call temp:= `getReturnDependents`(v3) @signature `Lorg/simpleframework/xml/core/Reflector;.getReturnDependents:(Ljava/lang/reflect/Method;)[Ljava/lang/Class;` @kind static;
  #L4477e4.  v3:= temp @kind object;
  #L4477e6.  return v3 @kind object;
  #L4477e8.  v3:= 0I;
  #L4477ea.  return v3 @kind object;
}
procedure `org.simpleframework.xml.core.MethodType` `c`(`org.simpleframework.xml.core.MethodPartFactory` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.c:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/MethodType;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L447a2c.  call temp:= `getName`(v2) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L447a32.  v2:= temp @kind object;
  #L447a34.  v0:= "get" @kind object;
  #L447a38.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L447a3e.  v0:= temp;
  #L447a40.  if v0 == 0 then goto L447a4a;
  #L447a44.  v2:= `@@org.simpleframework.xml.core.MethodType.GET` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L447a48.  return v2 @kind object;
  #L447a4a.  v0:= "is" @kind object;
  #L447a4e.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L447a54.  v0:= temp;
  #L447a56.  if v0 == 0 then goto L447a60;
  #L447a5a.  v2:= `@@org.simpleframework.xml.core.MethodType.IS` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L447a5e.  return v2 @kind object;
  #L447a60.  v0:= "set" @kind object;
  #L447a64.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L447a6a.  v2:= temp;
  #L447a6c.  if v2 == 0 then goto L447a76;
  #L447a70.  v2:= `@@org.simpleframework.xml.core.MethodType.SET` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L447a74.  return v2 @kind object;
  #L447a76.  v2:= `@@org.simpleframework.xml.core.MethodType.NONE` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L447a7a.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.MethodName` `d`(`org.simpleframework.xml.core.MethodPartFactory` v2 @kind this, `java.lang.reflect.Method` v3 @kind object, `java.lang.annotation.Annotation` v4 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.d:(Ljava/lang/reflect/Method;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/MethodName;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L44786c.  call temp:= `c`(v2, v3) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.c:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/MethodType;` @kind direct;
  #L447872.  v0:= temp @kind object;
  #L447874.  v1:= `@@org.simpleframework.xml.core.MethodType.GET` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L447878.  if v0 != v1 then goto L447886;
  #L44787c.  call temp:= `f`(v2, v3, v0) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.f:(Ljava/lang/reflect/Method;Lorg/simpleframework/xml/core/MethodType;)Lorg/simpleframework/xml/core/MethodName;` @kind direct;
  #L447882.  v3:= temp @kind object;
  #L447884.  return v3 @kind object;
  #L447886.  v1:= `@@org.simpleframework.xml.core.MethodType.IS` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L44788a.  if v0 != v1 then goto L447898;
  #L44788e.  call temp:= `f`(v2, v3, v0) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.f:(Ljava/lang/reflect/Method;Lorg/simpleframework/xml/core/MethodType;)Lorg/simpleframework/xml/core/MethodName;` @kind direct;
  #L447894.  v3:= temp @kind object;
  #L447896.  return v3 @kind object;
  #L447898.  v1:= `@@org.simpleframework.xml.core.MethodType.SET` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L44789c.  if v0 != v1 then goto L4478aa;
  #L4478a0.  call temp:= `i`(v2, v3, v0) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.i:(Ljava/lang/reflect/Method;Lorg/simpleframework/xml/core/MethodType;)Lorg/simpleframework/xml/core/MethodName;` @kind direct;
  #L4478a6.  v3:= temp @kind object;
  #L4478a8.  return v3 @kind object;
  #L4478aa.  v3:= new `org.simpleframework.xml.core.MethodException`;
  #L4478ae.  v0:= 1I;
  #L4478b0.  v0:= new `java.lang.Object`[v0];
  #L4478b4.  v1:= 0I;
  #L4478b6.  v0[v1]:= v4 @kind object;
  #L4478ba.  v4:= "Annotation %s must mark a set or get method" @kind object;
  #L4478be.  call `<init>`(v3, v4, v0) @signature `Lorg/simpleframework/xml/core/MethodException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L4478c4.  throw v3;
}
procedure `java.lang.Class` `e`(`org.simpleframework.xml.core.MethodPartFactory` v2 @kind this, `java.lang.reflect.Method` v3 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.e:(Ljava/lang/reflect/Method;)Ljava/lang/Class;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4476f4.  call temp:= `getParameterTypes`(v3) @signature `Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L4476fa.  v0:= temp @kind object;
  #L4476fc.  v0:= length @variable v0;
  #L4476fe.  v1:= 1I;
  #L447700.  if v0 != v1 then goto L447714;
  #L447704.  call temp:= `getParameterTypes`(v3) @signature `Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L44770a.  v3:= temp @kind object;
  #L44770c.  v0:= 0I;
  #L44770e.  v3:= v3[v0] @kind object;
  #L447712.  return v3 @kind object;
  #L447714.  v3:= 0I;
  #L447716.  return v3 @kind object;
}
procedure `org.simpleframework.xml.core.MethodName` `f`(`org.simpleframework.xml.core.MethodPartFactory` v4 @kind this, `java.lang.reflect.Method` v5 @kind object, `org.simpleframework.xml.core.MethodType` v6 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.f:(Ljava/lang/reflect/Method;Lorg/simpleframework/xml/core/MethodType;)Lorg/simpleframework/xml/core/MethodName;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4478d8.  call temp:= `getParameterTypes`(v5) @signature `Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L4478de.  v0:= temp @kind object;
  #L4478e0.  call temp:= `getName`(v5) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L4478e6.  v1:= temp @kind object;
  #L4478e8.  v0:= length @variable v0;
  #L4478ea.  v2:= 0I;
  #L4478ec.  v3:= 1I;
  #L4478ee.  if v0 != 0 then goto L447922;
  #L4478f2.  call temp:= `h`(v4, v1, v6) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.h:(Ljava/lang/String;Lorg/simpleframework/xml/core/MethodType;)Ljava/lang/String;` @kind direct;
  #L4478f8.  v0:= temp @kind object;
  #L4478fa.  if v0 == 0 then goto L44790a;
  #L4478fe.  v1:= new `org.simpleframework.xml.core.MethodName`;
  #L447902.  call `<init>`(v1, v5, v6, v0) @signature `Lorg/simpleframework/xml/core/MethodName;.<init>:(Ljava/lang/reflect/Method;Lorg/simpleframework/xml/core/MethodType;Ljava/lang/String;)V` @kind direct;
  #L447908.  return v1 @kind object;
  #L44790a.  v6:= new `org.simpleframework.xml.core.MethodException`;
  #L44790e.  v0:= new `java.lang.Object`[v3];
  #L447912.  v0[v2]:= v5 @kind object;
  #L447916.  v5:= "Could not get name for %s" @kind object;
  #L44791a.  call `<init>`(v6, v5, v0) @signature `Lorg/simpleframework/xml/core/MethodException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L447920.  throw v6;
  #L447922.  v6:= new `org.simpleframework.xml.core.MethodException`;
  #L447926.  v0:= new `java.lang.Object`[v3];
  #L44792a.  v0[v2]:= v5 @kind object;
  #L44792e.  v5:= "Get method %s is not a valid property" @kind object;
  #L447932.  call `<init>`(v6, v5, v0) @signature `Lorg/simpleframework/xml/core/MethodException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L447938.  throw v6;
}
procedure `java.lang.Class` `g`(`org.simpleframework.xml.core.MethodPartFactory` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.g:(Ljava/lang/reflect/Method;)Ljava/lang/Class;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L447728.  call temp:= `getParameterTypes`(v2) @signature `Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L44772e.  v0:= temp @kind object;
  #L447730.  v0:= length @variable v0;
  #L447732.  if v0 != 0 then goto L447740;
  #L447736.  call temp:= `getReturnType`(v2) @signature `Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;` @kind virtual;
  #L44773c.  v2:= temp @kind object;
  #L44773e.  return v2 @kind object;
  #L447740.  v2:= 0I;
  #L447742.  return v2 @kind object;
}
procedure `java.lang.String` `h`(`org.simpleframework.xml.core.MethodPartFactory` v1 @kind this, `java.lang.String` v2 @kind object, `org.simpleframework.xml.core.MethodType` v3 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.h:(Ljava/lang/String;Lorg/simpleframework/xml/core/MethodType;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4477fc.  call temp:= `getPrefix`(v3) @signature `Lorg/simpleframework/xml/core/MethodType;.getPrefix:()I` @kind virtual;
  #L447802.  v3:= temp;
  #L447804.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L44780a.  v0:= temp;
  #L44780c.  if v0 <= v3 then goto L447818;
  #L447810.  call temp:= `substring`(v2, v3, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L447816.  v2:= temp @kind object;
  #L447818.  call temp:= `getName`(v2) @signature `Lorg/simpleframework/xml/core/Reflector;.getName:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L44781e.  v2:= temp @kind object;
  #L447820.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.MethodName` `i`(`org.simpleframework.xml.core.MethodPartFactory` v4 @kind this, `java.lang.reflect.Method` v5 @kind object, `org.simpleframework.xml.core.MethodType` v6 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.i:(Ljava/lang/reflect/Method;Lorg/simpleframework/xml/core/MethodType;)Lorg/simpleframework/xml/core/MethodName;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L44794c.  call temp:= `getParameterTypes`(v5) @signature `Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L447952.  v0:= temp @kind object;
  #L447954.  call temp:= `getName`(v5) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L44795a.  v1:= temp @kind object;
  #L44795c.  v0:= length @variable v0;
  #L44795e.  v2:= 0I;
  #L447960.  v3:= 1I;
  #L447962.  if v0 != v3 then goto L447996;
  #L447966.  call temp:= `h`(v4, v1, v6) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.h:(Ljava/lang/String;Lorg/simpleframework/xml/core/MethodType;)Ljava/lang/String;` @kind direct;
  #L44796c.  v0:= temp @kind object;
  #L44796e.  if v0 == 0 then goto L44797e;
  #L447972.  v1:= new `org.simpleframework.xml.core.MethodName`;
  #L447976.  call `<init>`(v1, v5, v6, v0) @signature `Lorg/simpleframework/xml/core/MethodName;.<init>:(Ljava/lang/reflect/Method;Lorg/simpleframework/xml/core/MethodType;Ljava/lang/String;)V` @kind direct;
  #L44797c.  return v1 @kind object;
  #L44797e.  v6:= new `org.simpleframework.xml.core.MethodException`;
  #L447982.  v0:= new `java.lang.Object`[v3];
  #L447986.  v0[v2]:= v5 @kind object;
  #L44798a.  v5:= "Could not get name for %s" @kind object;
  #L44798e.  call `<init>`(v6, v5, v0) @signature `Lorg/simpleframework/xml/core/MethodException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L447994.  throw v6;
  #L447996.  v6:= new `org.simpleframework.xml.core.MethodException`;
  #L44799a.  v0:= new `java.lang.Object`[v3];
  #L44799e.  v0[v2]:= v5 @kind object;
  #L4479a2.  v5:= "Set method %s is not a valid property" @kind object;
  #L4479a6.  call `<init>`(v6, v5, v0) @signature `Lorg/simpleframework/xml/core/MethodException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L4479ac.  throw v6;
}
procedure `org.simpleframework.xml.core.MethodPart` `getInstance`(`org.simpleframework.xml.core.MethodPartFactory` v2 @kind this, `java.lang.reflect.Method` v3 @kind object, `java.lang.annotation.Annotation` v4 @kind object, `java.lang.annotation.Annotation`[] v5 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getInstance:(Ljava/lang/reflect/Method;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/MethodPart;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4479c0.  call temp:= `d`(v2, v3, v4) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.d:(Ljava/lang/reflect/Method;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/MethodName;` @kind direct;
  #L4479c6.  v3:= temp @kind object;
  #L4479c8.  call temp:= `getType`(v3) @signature `Lorg/simpleframework/xml/core/MethodName;.getType:()Lorg/simpleframework/xml/core/MethodType;` @kind virtual;
  #L4479ce.  v0:= temp @kind object;
  #L4479d0.  v1:= `@@org.simpleframework.xml.core.MethodType.SET` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L4479d4.  if v0 != v1 then goto L4479e4;
  #L4479d8.  v0:= new `org.simpleframework.xml.core.SetPart`;
  #L4479dc.  call `<init>`(v0, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/SetPart;.<init>:(Lorg/simpleframework/xml/core/MethodName;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L4479e2.  return v0 @kind object;
  #L4479e4.  v0:= new `org.simpleframework.xml.core.GetPart`;
  #L4479e8.  call `<init>`(v0, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/GetPart;.<init>:(Lorg/simpleframework/xml/core/MethodName;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L4479ee.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.MethodPart` `getInstance`(`org.simpleframework.xml.core.MethodPartFactory` v1 @kind this, `java.lang.reflect.Method` v2 @kind object, `java.lang.annotation.Annotation`[] v3 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getInstance:(Ljava/lang/reflect/Method;[Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/MethodPart;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L447a00.  call temp:= `a`(v1, v2) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.a:(Ljava/lang/reflect/Method;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L447a06.  v0:= temp @kind object;
  #L447a08.  if v0 == 0 then goto L447a16;
  #L447a0c.  call temp:= `getInstance`(v1, v2, v0, v3) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getInstance:(Ljava/lang/reflect/Method;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/MethodPart;` @kind virtual;
  #L447a12.  v2:= temp @kind object;
  #L447a14.  return v2 @kind object;
  #L447a16.  v2:= 0I;
  #L447a18.  return v2 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.MethodPartFactory` v2 @kind this, `java.lang.reflect.Method` v3 @kind object) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.getType:(Ljava/lang/reflect/Method;)Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L447754.  call temp:= `c`(v2, v3) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.c:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/MethodType;` @kind direct;
  #L44775a.  v0:= temp @kind object;
  #L44775c.  v1:= `@@org.simpleframework.xml.core.MethodType.SET` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L447760.  if v0 != v1 then goto L44776e;
  #L447764.  call temp:= `e`(v2, v3) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.e:(Ljava/lang/reflect/Method;)Ljava/lang/Class;` @kind direct;
  #L44776a.  v3:= temp @kind object;
  #L44776c.  return v3 @kind object;
  #L44776e.  v1:= `@@org.simpleframework.xml.core.MethodType.GET` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L447772.  if v0 != v1 then goto L447780;
  #L447776.  call temp:= `g`(v2, v3) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.g:(Ljava/lang/reflect/Method;)Ljava/lang/Class;` @kind direct;
  #L44777c.  v3:= temp @kind object;
  #L44777e.  return v3 @kind object;
  #L447780.  v1:= `@@org.simpleframework.xml.core.MethodType.IS` @type ^`org.simpleframework.xml.core.MethodType` @kind object;
  #L447784.  if v0 != v1 then goto L447792;
  #L447788.  call temp:= `g`(v2, v3) @signature `Lorg/simpleframework/xml/core/MethodPartFactory;.g:(Ljava/lang/reflect/Method;)Ljava/lang/Class;` @kind direct;
  #L44778e.  v3:= temp @kind object;
  #L447790.  return v3 @kind object;
  #L447792.  v3:= 0I;
  #L447794.  return v3 @kind object;
}
