record `org.simpleframework.xml.core.TextList` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Repeater` @kind interface {
  `org.simpleframework.xml.core.CollectionFactory` `org.simpleframework.xml.core.TextList.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Primitive` `org.simpleframework.xml.core.TextList.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.TextList` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object, `org.simpleframework.xml.core.Label` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TextList;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44fd44.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44fd4a.  v4:= new `org.simpleframework.xml.core.ClassType`;
  #L44fd4e.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L44fd52.  call `<init>`(v4, v0) @signature `Lorg/simpleframework/xml/core/ClassType;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L44fd58.  v0:= new `org.simpleframework.xml.core.CollectionFactory`;
  #L44fd5c.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L44fd62.  v1.`org.simpleframework.xml.core.TextList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` := v0 @kind object;
  #L44fd66.  v3:= new `org.simpleframework.xml.core.Primitive`;
  #L44fd6a.  call `<init>`(v3, v2, v4) @signature `Lorg/simpleframework/xml/core/Primitive;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L44fd70.  v1.`org.simpleframework.xml.core.TextList.b` @type ^`org.simpleframework.xml.core.Primitive` := v3 @kind object;
  #L44fd74.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.TextList` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TextList;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L44fcd0.  v0:= v3.`org.simpleframework.xml.core.TextList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` @kind object;
  #L44fcd4.  call temp:= `getInstance`(v0, v4) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L44fcda.  v0:= temp @kind object;
  #L44fcdc.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L44fce2.  v1:= temp @kind object;
  #L44fce4.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L44fcea.  v2:= temp;
  #L44fcec.  if v2 == 0 then goto L44fcfa;
  #L44fcf0.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L44fcf6.  v4:= temp @kind object;
  #L44fcf8.  return v4 @kind object;
  #L44fcfa.  call temp:= `read`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/TextList;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L44fd00.  v4:= temp @kind object;
  #L44fd02.  return v4 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.TextList` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TextList;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44fd14.  v0:= v4 @kind object;
  #L44fd16.  v0:= (`java.util.Collection`) v0 @kind object;
  #L44fd1a.  v1:= v2.`org.simpleframework.xml.core.TextList.b` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L44fd1e.  call temp:= `read`(v1, v3) @signature `Lorg/simpleframework/xml/core/Primitive;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L44fd24.  v3:= temp @kind object;
  #L44fd26.  if v3 == 0 then goto L44fd30;
  #L44fd2a.  call temp:= `add`(v0, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L44fd30.  return v4 @kind object;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.TextList` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object) @signature `Lorg/simpleframework/xml/core/TextList;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;

  #L44fcbc.  v1:= 1I;
  #L44fcbe.  return v1;
}
procedure `void` `write`(`org.simpleframework.xml.core.TextList` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TextList;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44fd88.  v4:= (`java.util.Collection`) v4 @kind object;
  #L44fd8c.  call temp:= `getParent`(v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getParent:()Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L44fd92.  v3:= temp @kind object;
  #L44fd94.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L44fd9a.  v4:= temp @kind object;
  #L44fd9c.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L44fda2.  v0:= temp;
  #L44fda4.  if v0 == 0 then goto L44fdbc;
  #L44fda8.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L44fdae.  v0:= temp @kind object;
  #L44fdb0.  v1:= v2.`org.simpleframework.xml.core.TextList.b` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L44fdb4.  call `write`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/Primitive;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind virtual;
  #L44fdba.  goto L44fd9c;
  #L44fdbc.  return @kind void;
}
