record `org.simpleframework.xml.core.PrimitiveValue` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Converter` @kind interface {
  `org.simpleframework.xml.core.PrimitiveFactory` `org.simpleframework.xml.core.PrimitiveValue.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Context` `org.simpleframework.xml.core.PrimitiveValue.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Primitive` `org.simpleframework.xml.core.PrimitiveValue.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Style` `org.simpleframework.xml.core.PrimitiveValue.d` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Entry` `org.simpleframework.xml.core.PrimitiveValue.e` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.PrimitiveValue.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.PrimitiveValue` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.core.Entry` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44c050.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44c056.  v0:= new `org.simpleframework.xml.core.PrimitiveFactory`;
  #L44c05a.  call `<init>`(v0, v2, v4) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L44c060.  v1.`org.simpleframework.xml.core.PrimitiveValue.a` @type ^`org.simpleframework.xml.core.PrimitiveFactory` := v0 @kind object;
  #L44c064.  v0:= new `org.simpleframework.xml.core.Primitive`;
  #L44c068.  call `<init>`(v0, v2, v4) @signature `Lorg/simpleframework/xml/core/Primitive;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L44c06e.  v1.`org.simpleframework.xml.core.PrimitiveValue.c` @type ^`org.simpleframework.xml.core.Primitive` := v0 @kind object;
  #L44c072.  call temp:= `getStyle`(v2) @signature `Lorg/simpleframework/xml/core/Context;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind interface;
  #L44c078.  v0:= temp @kind object;
  #L44c07a.  v1.`org.simpleframework.xml.core.PrimitiveValue.d` @type ^`org.simpleframework.xml.stream.Style` := v0 @kind object;
  #L44c07e.  v1.`org.simpleframework.xml.core.PrimitiveValue.b` @type ^`org.simpleframework.xml.core.Context` := v2 @kind object;
  #L44c082.  v1.`org.simpleframework.xml.core.PrimitiveValue.e` @type ^`org.simpleframework.xml.core.Entry` := v3 @kind object;
  #L44c086.  v1.`org.simpleframework.xml.core.PrimitiveValue.f` @type ^`org.simpleframework.xml.strategy.Type` := v4 @kind object;
  #L44c08a.  return @kind void;
}
procedure `boolean` `a`(`org.simpleframework.xml.core.PrimitiveValue` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.a:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L44be2c.  v0:= v2.`org.simpleframework.xml.core.PrimitiveValue.a` @type ^`org.simpleframework.xml.core.PrimitiveFactory` @kind object;
  #L44be30.  v1:= v2.`org.simpleframework.xml.core.PrimitiveValue.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L44be34.  call temp:= `setOverride`(v0, v1, v4, v3) @signature `Lorg/simpleframework/xml/core/Factory;.setOverride:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/OutputNode;)Z` @kind virtual;
  #L44be3a.  v3:= temp;
  #L44be3c.  return v3;
}
procedure `java.lang.Object` `b`(`org.simpleframework.xml.core.PrimitiveValue` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44bfd4.  if v3 == 0 then goto L44bfec;
  #L44bfd8.  v0:= v1.`org.simpleframework.xml.core.PrimitiveValue.d` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L44bfdc.  call temp:= `getAttribute`(v0, v3) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L44bfe2.  v3:= temp @kind object;
  #L44bfe4.  call temp:= `getAttribute`(v2, v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttribute:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L44bfea.  v2:= temp @kind object;
  #L44bfec.  if v2 != 0 then goto L44bff4;
  #L44bff0.  v2:= 0I;
  #L44bff2.  return v2 @kind object;
  #L44bff4.  v3:= v1.`org.simpleframework.xml.core.PrimitiveValue.c` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L44bff8.  call temp:= `read`(v3, v2) @signature `Lorg/simpleframework/xml/core/Primitive;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L44bffe.  v2:= temp @kind object;
  #L44c000.  return v2 @kind object;
}
procedure `java.lang.Object` `c`(`org.simpleframework.xml.core.PrimitiveValue` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.c:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44c014.  v0:= v1.`org.simpleframework.xml.core.PrimitiveValue.d` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L44c018.  call temp:= `getAttribute`(v0, v3) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L44c01e.  v3:= temp @kind object;
  #L44c020.  call temp:= `getNext`(v2, v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L44c026.  v2:= temp @kind object;
  #L44c028.  if v2 != 0 then goto L44c030;
  #L44c02c.  v2:= 0I;
  #L44c02e.  return v2 @kind object;
  #L44c030.  v3:= v1.`org.simpleframework.xml.core.PrimitiveValue.c` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L44c034.  call temp:= `read`(v3, v2) @signature `Lorg/simpleframework/xml/core/Primitive;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L44c03a.  v2:= temp @kind object;
  #L44c03c.  return v2 @kind object;
}
procedure `boolean` `d`(`org.simpleframework.xml.core.PrimitiveValue` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.d:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44beac.  if v3 == 0 then goto L44bec4;
  #L44beb0.  v0:= v1.`org.simpleframework.xml.core.PrimitiveValue.d` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L44beb4.  call temp:= `getAttribute`(v0, v3) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L44beba.  v3:= temp @kind object;
  #L44bebc.  call temp:= `getNext`(v2, v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L44bec2.  v2:= temp @kind object;
  #L44bec4.  if v2 != 0 then goto L44becc;
  #L44bec8.  v2:= 1I;
  #L44beca.  return v2;
  #L44becc.  v3:= v1.`org.simpleframework.xml.core.PrimitiveValue.c` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L44bed0.  call temp:= `validate`(v3, v2) @signature `Lorg/simpleframework/xml/core/Primitive;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind virtual;
  #L44bed6.  v2:= temp;
  #L44bed8.  return v2;
}
procedure `boolean` `e`(`org.simpleframework.xml.core.PrimitiveValue` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.e:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44beec.  v0:= v1.`org.simpleframework.xml.core.PrimitiveValue.d` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L44bef0.  call temp:= `getAttribute`(v0, v3) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L44bef6.  v3:= temp @kind object;
  #L44bef8.  call temp:= `getNext`(v2, v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L44befe.  v3:= temp @kind object;
  #L44bf00.  if v3 != 0 then goto L44bf08;
  #L44bf04.  v2:= 1I;
  #L44bf06.  return v2;
  #L44bf08.  v3:= v1.`org.simpleframework.xml.core.PrimitiveValue.c` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L44bf0c.  call temp:= `validate`(v3, v2) @signature `Lorg/simpleframework/xml/core/Primitive;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind virtual;
  #L44bf12.  v2:= temp;
  #L44bf14.  return v2;
}
procedure `void` `f`(`org.simpleframework.xml.core.PrimitiveValue` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.f:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44c0f4.  if v3 == 0 then goto L44c11c;
  #L44c0f8.  if v4 == 0 then goto L44c112;
  #L44c0fc.  v0:= v1.`org.simpleframework.xml.core.PrimitiveValue.d` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L44c100.  call temp:= `getAttribute`(v0, v4) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L44c106.  v4:= temp @kind object;
  #L44c108.  v0:= 0I;
  #L44c10a.  call temp:= `setAttribute`(v2, v4, v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setAttribute:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L44c110.  v2:= temp @kind object;
  #L44c112.  v4:= v1.`org.simpleframework.xml.core.PrimitiveValue.c` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L44c116.  call `write`(v4, v2, v3) @signature `Lorg/simpleframework/xml/core/Primitive;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind virtual;
  #L44c11c.  return @kind void;
}
procedure `void` `g`(`org.simpleframework.xml.core.PrimitiveValue` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.g:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44c130.  v0:= v1.`org.simpleframework.xml.core.PrimitiveValue.d` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L44c134.  call temp:= `getAttribute`(v0, v4) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L44c13a.  v4:= temp @kind object;
  #L44c13c.  call temp:= `getChild`(v2, v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getChild:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L44c142.  v2:= temp @kind object;
  #L44c144.  if v3 == 0 then goto L44c15e;
  #L44c148.  call temp:= `a`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.a:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)Z` @kind direct;
  #L44c14e.  v4:= temp;
  #L44c150.  if v4 != 0 then goto L44c15e;
  #L44c154.  v4:= v1.`org.simpleframework.xml.core.PrimitiveValue.c` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L44c158.  call `write`(v4, v2, v3) @signature `Lorg/simpleframework/xml/core/Primitive;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind virtual;
  #L44c15e.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.PrimitiveValue` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L44bf28.  v0:= v3.`org.simpleframework.xml.core.PrimitiveValue.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L44bf2c.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L44bf32.  v0:= temp @kind object;
  #L44bf34.  v1:= v3.`org.simpleframework.xml.core.PrimitiveValue.e` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L44bf38.  call temp:= `getValue`(v1) @signature `Lorg/simpleframework/xml/core/Entry;.getValue:()Ljava/lang/String;` @kind virtual;
  #L44bf3e.  v1:= temp @kind object;
  #L44bf40.  v2:= v3.`org.simpleframework.xml.core.PrimitiveValue.e` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L44bf44.  call temp:= `isInline`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.isInline:()Z` @kind virtual;
  #L44bf4a.  v2:= temp;
  #L44bf4c.  if v2 != 0 then goto L44bf6a;
  #L44bf50.  if v1 != 0 then goto L44bf60;
  #L44bf54.  v1:= v3.`org.simpleframework.xml.core.PrimitiveValue.b` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L44bf58.  call temp:= `getName`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L44bf5e.  v1:= temp @kind object;
  #L44bf60.  call temp:= `c`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.c:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Ljava/lang/Object;` @kind direct;
  #L44bf66.  v4:= temp @kind object;
  #L44bf68.  return v4 @kind object;
  #L44bf6a.  call temp:= `b`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Ljava/lang/Object;` @kind direct;
  #L44bf70.  v4:= temp @kind object;
  #L44bf72.  return v4 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.PrimitiveValue` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44bf84.  v0:= v2.`org.simpleframework.xml.core.PrimitiveValue.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L44bf88.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L44bf8e.  v0:= temp @kind object;
  #L44bf90.  if v4 != 0 then goto L44bf9e;
  #L44bf94.  call temp:= `read`(v2, v3) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L44bf9a.  v3:= temp @kind object;
  #L44bf9c.  return v3 @kind object;
  #L44bf9e.  v3:= new `org.simpleframework.xml.core.PersistenceException`;
  #L44bfa2.  v4:= 2I;
  #L44bfa4.  v4:= new `java.lang.Object`[v4];
  #L44bfa8.  v1:= 0I;
  #L44bfaa.  v4[v1]:= v0 @kind object;
  #L44bfae.  v0:= v2.`org.simpleframework.xml.core.PrimitiveValue.e` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L44bfb2.  v1:= 1I;
  #L44bfb4.  v4[v1]:= v0 @kind object;
  #L44bfb8.  v0:= "Can not read value of %s for %s" @kind object;
  #L44bfbc.  call `<init>`(v3, v0, v4) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44bfc2.  throw v3;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.PrimitiveValue` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L44be50.  v0:= v3.`org.simpleframework.xml.core.PrimitiveValue.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L44be54.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L44be5a.  v0:= temp @kind object;
  #L44be5c.  v1:= v3.`org.simpleframework.xml.core.PrimitiveValue.e` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L44be60.  call temp:= `getValue`(v1) @signature `Lorg/simpleframework/xml/core/Entry;.getValue:()Ljava/lang/String;` @kind virtual;
  #L44be66.  v1:= temp @kind object;
  #L44be68.  v2:= v3.`org.simpleframework.xml.core.PrimitiveValue.e` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L44be6c.  call temp:= `isInline`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.isInline:()Z` @kind virtual;
  #L44be72.  v2:= temp;
  #L44be74.  if v2 != 0 then goto L44be92;
  #L44be78.  if v1 != 0 then goto L44be88;
  #L44be7c.  v1:= v3.`org.simpleframework.xml.core.PrimitiveValue.b` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L44be80.  call temp:= `getName`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L44be86.  v1:= temp @kind object;
  #L44be88.  call temp:= `e`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.e:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Z` @kind direct;
  #L44be8e.  v4:= temp;
  #L44be90.  return v4;
  #L44be92.  call temp:= `d`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.d:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Z` @kind direct;
  #L44be98.  v4:= temp;
  #L44be9a.  return v4;
}
procedure `void` `write`(`org.simpleframework.xml.core.PrimitiveValue` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L44c09c.  v0:= v3.`org.simpleframework.xml.core.PrimitiveValue.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L44c0a0.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L44c0a6.  v0:= temp @kind object;
  #L44c0a8.  v1:= v3.`org.simpleframework.xml.core.PrimitiveValue.e` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L44c0ac.  call temp:= `getValue`(v1) @signature `Lorg/simpleframework/xml/core/Entry;.getValue:()Ljava/lang/String;` @kind virtual;
  #L44c0b2.  v1:= temp @kind object;
  #L44c0b4.  v2:= v3.`org.simpleframework.xml.core.PrimitiveValue.e` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L44c0b8.  call temp:= `isInline`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.isInline:()Z` @kind virtual;
  #L44c0be.  v2:= temp;
  #L44c0c0.  if v2 != 0 then goto L44c0dc;
  #L44c0c4.  if v1 != 0 then goto L44c0d4;
  #L44c0c8.  v1:= v3.`org.simpleframework.xml.core.PrimitiveValue.b` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L44c0cc.  call temp:= `getName`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L44c0d2.  v1:= temp @kind object;
  #L44c0d4.  call `g`(v3, v4, v5, v1) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.g:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Ljava/lang/String;)V` @kind direct;
  #L44c0da.  goto L44c0e2;
  #L44c0dc.  call `f`(v3, v4, v5, v1) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.f:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Ljava/lang/String;)V` @kind direct;
  #L44c0e2.  return @kind void;
}
