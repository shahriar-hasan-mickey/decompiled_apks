record `org.simpleframework.xml.core.TreeModel` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Model` @kind interface {
  `org.simpleframework.xml.core.Expression` `org.simpleframework.xml.core.TreeModel.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.TreeModel.b` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.TreeModel.c` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.ModelMap` `org.simpleframework.xml.core.TreeModel.d` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.TreeModel$OrderList` `org.simpleframework.xml.core.TreeModel.e` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Policy` `org.simpleframework.xml.core.TreeModel.f` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Detail` `org.simpleframework.xml.core.TreeModel.g` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.TreeModel.h` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.TreeModel.i` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.TreeModel.j` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.TreeModel.k` @AccessFlag PRIVATE;
  `int` `org.simpleframework.xml.core.TreeModel.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.TreeModel` v6 @kind this, `org.simpleframework.xml.core.Policy` v7 @kind object, `org.simpleframework.xml.core.Detail` v8 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.<init>:(Lorg/simpleframework/xml/core/Policy;Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4505f0.  v3:= 0I;
  #L4505f2.  v4:= 0I;
  #L4505f4.  v5:= 1I;
  #L4505f6.  v0:= v6 @kind object;
  #L4505f8.  v1:= v7 @kind object;
  #L4505fa.  v2:= v8 @kind object;
  #L4505fc.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/TreeModel;.<init>:(Lorg/simpleframework/xml/core/Policy;Lorg/simpleframework/xml/core/Detail;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L450602.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `org.simpleframework.xml.core.Policy` v2 @kind object, `org.simpleframework.xml.core.Detail` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `int` v6 ) @signature `Lorg/simpleframework/xml/core/TreeModel;.<init>:(Lorg/simpleframework/xml/core/Policy;Lorg/simpleframework/xml/core/Detail;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L450614.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45061a.  v0:= new `org.simpleframework.xml.core.LabelMap`;
  #L45061e.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L450624.  v1.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` := v0 @kind object;
  #L450628.  v0:= new `org.simpleframework.xml.core.LabelMap`;
  #L45062c.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L450632.  v1.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` := v0 @kind object;
  #L450636.  v0:= new `org.simpleframework.xml.core.ModelMap`;
  #L45063a.  call `<init>`(v0, v3) @signature `Lorg/simpleframework/xml/core/ModelMap;.<init>:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L450640.  v1.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` := v0 @kind object;
  #L450644.  v0:= new `org.simpleframework.xml.core.TreeModel$OrderList`;
  #L450648.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/TreeModel$OrderList;.<init>:()V` @kind direct;
  #L45064e.  v1.`org.simpleframework.xml.core.TreeModel.e` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` := v0 @kind object;
  #L450652.  v1.`org.simpleframework.xml.core.TreeModel.g` @type ^`org.simpleframework.xml.core.Detail` := v3 @kind object;
  #L450656.  v1.`org.simpleframework.xml.core.TreeModel.f` @type ^`org.simpleframework.xml.core.Policy` := v2 @kind object;
  #L45065a.  v1.`org.simpleframework.xml.core.TreeModel.i` @type ^`java.lang.String` := v5 @kind object;
  #L45065e.  v1.`org.simpleframework.xml.core.TreeModel.l` @type ^`int` := v6;
  #L450662.  v1.`org.simpleframework.xml.core.TreeModel.h` @type ^`java.lang.String` := v4 @kind object;
  #L450666.  return @kind void;
}
procedure `org.simpleframework.xml.core.Model` `a`(`org.simpleframework.xml.core.TreeModel` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object, `int` v10 ) @signature `Lorg/simpleframework/xml/core/TreeModel;.a:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4504f0.  v6:= new `org.simpleframework.xml.core.TreeModel`;
  #L4504f4.  v1:= v7.`org.simpleframework.xml.core.TreeModel.f` @type ^`org.simpleframework.xml.core.Policy` @kind object;
  #L4504f8.  v2:= v7.`org.simpleframework.xml.core.TreeModel.g` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L4504fc.  v0:= v6 @kind object;
  #L4504fe.  v3:= v8 @kind object;
  #L450500.  v4:= v9 @kind object;
  #L450502.  v5:= v10;
  #L450504.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/TreeModel;.<init>:(Lorg/simpleframework/xml/core/Policy;Lorg/simpleframework/xml/core/Detail;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L45050a.  if v8 == 0 then goto L450522;
  #L45050e.  v9:= v7.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L450512.  call `register`(v9, v8, v6) @signature `Lorg/simpleframework/xml/core/ModelMap;.register:(Ljava/lang/String;Lorg/simpleframework/xml/core/Model;)V` @kind virtual;
  #L450518.  v9:= v7.`org.simpleframework.xml.core.TreeModel.e` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` @kind object;
  #L45051c.  call temp:= `add`(v9, v8) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L450522.  return v6 @kind object;
}
procedure `void` `b`(`org.simpleframework.xml.core.TreeModel` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.b:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L450854.  v0:= v4.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L450858.  call temp:= `keySet`(v0) @signature `Ljava/util/LinkedHashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L45085e.  v0:= temp @kind object;
  #L450860.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L450866.  v0:= temp @kind object;
  #L450868.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L45086e.  v1:= temp;
  #L450870.  if v1 == 0 then goto L4508c6;
  #L450874.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L45087a.  v1:= temp @kind object;
  #L45087c.  v1:= (`java.lang.String`) v1 @kind object;
  #L450880.  v2:= v4.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L450884.  call temp:= `get`(v2, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L45088a.  v2:= temp @kind object;
  #L45088c.  v2:= (`org.simpleframework.xml.core.Label`) v2 @kind object;
  #L450890.  if v2 == 0 then goto L4508a4;
  #L450894.  v2:= v4.`org.simpleframework.xml.core.TreeModel.a` @type ^`org.simpleframework.xml.core.Expression` @kind object;
  #L450898.  if v2 == 0 then goto L450868;
  #L45089c.  call temp:= `getAttribute`(v2, v1) @signature `Lorg/simpleframework/xml/core/Expression;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L4508a2.  goto L450868;
  #L4508a4.  v0:= new `org.simpleframework.xml.core.AttributeException`;
  #L4508a8.  v2:= 2I;
  #L4508aa.  v2:= new `java.lang.Object`[v2];
  #L4508ae.  v3:= 0I;
  #L4508b0.  v2[v3]:= v1 @kind object;
  #L4508b4.  v1:= 1I;
  #L4508b6.  v2[v1]:= v5 @kind object;
  #L4508ba.  v5:= "Ordered attribute '%s' does not exist in %s" @kind object;
  #L4508be.  call `<init>`(v0, v5, v2) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L4508c4.  throw v0;
  #L4508c6.  return @kind void;
}
procedure `void` `c`(`org.simpleframework.xml.core.TreeModel` v7 @kind this, `java.lang.Class` v8 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.c:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4508d8.  v0:= v7.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L4508dc.  call temp:= `keySet`(v0) @signature `Ljava/util/LinkedHashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L4508e2.  v0:= temp @kind object;
  #L4508e4.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4508ea.  v0:= temp @kind object;
  #L4508ec.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4508f2.  v1:= temp;
  #L4508f4.  if v1 == 0 then goto L450992;
  #L4508f8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4508fe.  v1:= temp @kind object;
  #L450900.  v1:= (`java.lang.String`) v1 @kind object;
  #L450904.  v2:= v7.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L450908.  call temp:= `get`(v2, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L45090e.  v2:= temp @kind object;
  #L450910.  v2:= (`org.simpleframework.xml.core.ModelList`) v2 @kind object;
  #L450914.  v3:= v7.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L450918.  call temp:= `get`(v3, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L45091e.  v3:= temp @kind object;
  #L450920.  v3:= (`org.simpleframework.xml.core.Label`) v3 @kind object;
  #L450924.  v4:= 1I;
  #L450926.  v5:= 0I;
  #L450928.  v6:= 2I;
  #L45092a.  if v2 != 0 then goto L450950;
  #L45092e.  if v3 == 0 then goto L450934;
  #L450932.  goto L450950;
  #L450934.  v0:= new `org.simpleframework.xml.core.ElementException`;
  #L450938.  v2:= new `java.lang.Object`[v6];
  #L45093c.  v2[v5]:= v1 @kind object;
  #L450940.  v2[v4]:= v8 @kind object;
  #L450944.  v8:= "Ordered element '%s' does not exist in %s" @kind object;
  #L450948.  call `<init>`(v0, v8, v2) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L45094e.  throw v0;
  #L450950.  if v2 == 0 then goto L450982;
  #L450954.  if v3 == 0 then goto L450982;
  #L450958.  call temp:= `isEmpty`(v2) @signature `Lorg/simpleframework/xml/core/ModelList;.isEmpty:()Z` @kind virtual;
  #L45095e.  v2:= temp;
  #L450960.  if v2 == 0 then goto L450966;
  #L450964.  goto L450982;
  #L450966.  v0:= new `org.simpleframework.xml.core.ElementException`;
  #L45096a.  v2:= new `java.lang.Object`[v6];
  #L45096e.  v2[v5]:= v1 @kind object;
  #L450972.  v2[v4]:= v8 @kind object;
  #L450976.  v8:= "Element '%s' is also a path name in %s" @kind object;
  #L45097a.  call `<init>`(v0, v8, v2) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L450980.  throw v0;
  #L450982.  v2:= v7.`org.simpleframework.xml.core.TreeModel.a` @type ^`org.simpleframework.xml.core.Expression` @kind object;
  #L450986.  if v2 == 0 then goto L4508ec;
  #L45098a.  call temp:= `getElement`(v2, v1) @signature `Lorg/simpleframework/xml/core/Expression;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L450990.  goto L4508ec;
  #L450992.  return @kind void;
}
procedure `void` `d`(`org.simpleframework.xml.core.TreeModel` v4 @kind this, `org.simpleframework.xml.core.Label` v5 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.d:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4509a4.  call temp:= `getExpression`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L4509aa.  v5:= temp @kind object;
  #L4509ac.  v0:= v4.`org.simpleframework.xml.core.TreeModel.a` @type ^`org.simpleframework.xml.core.Expression` @kind object;
  #L4509b0.  if v0 == 0 then goto L4509fe;
  #L4509b4.  call temp:= `getPath`(v0) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:()Ljava/lang/String;` @kind interface;
  #L4509ba.  v0:= temp @kind object;
  #L4509bc.  call temp:= `getPath`(v5) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:()Ljava/lang/String;` @kind interface;
  #L4509c2.  v5:= temp @kind object;
  #L4509c4.  call temp:= `equals`(v0, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4509ca.  v1:= temp;
  #L4509cc.  if v1 == 0 then goto L4509d2;
  #L4509d0.  goto L450a02;
  #L4509d2.  v1:= new `org.simpleframework.xml.core.PathException`;
  #L4509d6.  v2:= 3I;
  #L4509d8.  v2:= new `java.lang.Object`[v2];
  #L4509dc.  v3:= 0I;
  #L4509de.  v2[v3]:= v0 @kind object;
  #L4509e2.  v0:= 1I;
  #L4509e4.  v2[v0]:= v5 @kind object;
  #L4509e8.  v5:= v4.`org.simpleframework.xml.core.TreeModel.g` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L4509ec.  v0:= 2I;
  #L4509ee.  v2[v0]:= v5 @kind object;
  #L4509f2.  v5:= "Path '%s' does not match '%s' in %s" @kind object;
  #L4509f6.  call `<init>`(v1, v5, v2) @signature `Lorg/simpleframework/xml/core/PathException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L4509fc.  throw v1;
  #L4509fe.  v4.`org.simpleframework.xml.core.TreeModel.a` @type ^`org.simpleframework.xml.core.Expression` := v5 @kind object;
  #L450a02.  return @kind void;
}
procedure `void` `e`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.e:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L450a14.  v2:= v1.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L450a18.  call temp:= `iterator`(v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L450a1e.  v2:= temp @kind object;
  #L450a20.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L450a26.  v0:= temp;
  #L450a28.  if v0 == 0 then goto L450a44;
  #L450a2c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L450a32.  v0:= temp @kind object;
  #L450a34.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L450a38.  if v0 == 0 then goto L450a20;
  #L450a3c.  call `d`(v1, v0) @signature `Lorg/simpleframework/xml/core/TreeModel;.d:(Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L450a42.  goto L450a20;
  #L450a44.  v2:= v1.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L450a48.  call temp:= `iterator`(v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L450a4e.  v2:= temp @kind object;
  #L450a50.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L450a56.  v0:= temp;
  #L450a58.  if v0 == 0 then goto L450a74;
  #L450a5c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L450a62.  v0:= temp @kind object;
  #L450a64.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L450a68.  if v0 == 0 then goto L450a50;
  #L450a6c.  call `d`(v1, v0) @signature `Lorg/simpleframework/xml/core/TreeModel;.d:(Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L450a72.  goto L450a50;
  #L450a74.  v2:= v1.`org.simpleframework.xml.core.TreeModel.j` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L450a78.  if v2 == 0 then goto L450a82;
  #L450a7c.  call `d`(v1, v2) @signature `Lorg/simpleframework/xml/core/TreeModel;.d:(Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L450a82.  return @kind void;
}
procedure `void` `f`(`org.simpleframework.xml.core.TreeModel` v8 @kind this, `java.lang.Class` v9 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.f:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L450a94.  v0:= v8.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L450a98.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/core/ModelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L450a9e.  v0:= temp @kind object;
  #L450aa0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L450aa6.  v1:= temp;
  #L450aa8.  if v1 == 0 then goto L450b30;
  #L450aac.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L450ab2.  v1:= temp @kind object;
  #L450ab4.  v1:= (`org.simpleframework.xml.core.ModelList`) v1 @kind object;
  #L450ab8.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L450abe.  v1:= temp @kind object;
  #L450ac0.  v2:= 1I;
  #L450ac2.  v3:= 1I;
  #L450ac4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L450aca.  v4:= temp;
  #L450acc.  if v4 == 0 then goto L450aa0;
  #L450ad0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L450ad6.  v4:= temp @kind object;
  #L450ad8.  v4:= (`org.simpleframework.xml.core.Model`) v4 @kind object;
  #L450adc.  if v4 == 0 then goto L450ac4;
  #L450ae0.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/core/Model;.getName:()Ljava/lang/String;` @kind interface;
  #L450ae6.  v5:= temp @kind object;
  #L450ae8.  call temp:= `getIndex`(v4) @signature `Lorg/simpleframework/xml/core/Model;.getIndex:()I` @kind interface;
  #L450aee.  v6:= temp;
  #L450af0.  v7:= v3 + 1;
  #L450af4.  if v6 != v3 then goto L450b02;
  #L450af8.  call `validate`(v4, v9) @signature `Lorg/simpleframework/xml/core/Model;.validate:(Ljava/lang/Class;)V` @kind interface;
  #L450afe.  v3:= v7;
  #L450b00.  goto L450ac4;
  #L450b02.  v0:= new `org.simpleframework.xml.core.ElementException`;
  #L450b06.  v1:= 3I;
  #L450b08.  v1:= new `java.lang.Object`[v1];
  #L450b0c.  v3:= 0I;
  #L450b0e.  v1[v3]:= v5 @kind object;
  #L450b12.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L450b18.  v3:= temp @kind object;
  #L450b1a.  v1[v2]:= v3 @kind object;
  #L450b1e.  v2:= 2I;
  #L450b20.  v1[v2]:= v9 @kind object;
  #L450b24.  v9:= "Path section '%s[%s]' is out of sequence in %s" @kind object;
  #L450b28.  call `<init>`(v0, v9, v1) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L450b2e.  throw v0;
  #L450b30.  return @kind void;
}
procedure `void` `g`(`org.simpleframework.xml.core.TreeModel` v5 @kind this, `java.lang.Class` v6 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.g:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L450b44.  v0:= v5.`org.simpleframework.xml.core.TreeModel.j` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L450b48.  if v0 == 0 then goto L450bb0;
  #L450b4c.  v0:= v5.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L450b50.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L450b56.  v0:= temp;
  #L450b58.  v1:= 1I;
  #L450b5a.  v2:= 0I;
  #L450b5c.  v3:= 2I;
  #L450b5e.  if v0 == 0 then goto L450b90;
  #L450b62.  call temp:= `isComposite`(v5) @signature `Lorg/simpleframework/xml/core/TreeModel;.isComposite:()Z` @kind virtual;
  #L450b68.  v0:= temp;
  #L450b6a.  if v0 != 0 then goto L450b70;
  #L450b6e.  goto L450bb0;
  #L450b70.  v0:= new `org.simpleframework.xml.core.TextException`;
  #L450b74.  v3:= new `java.lang.Object`[v3];
  #L450b78.  v4:= v5.`org.simpleframework.xml.core.TreeModel.j` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L450b7c.  v3[v2]:= v4 @kind object;
  #L450b80.  v3[v1]:= v6 @kind object;
  #L450b84.  v6:= "Text annotation %s can not be used with paths in %s" @kind object;
  #L450b88.  call `<init>`(v0, v6, v3) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L450b8e.  throw v0;
  #L450b90.  v0:= new `org.simpleframework.xml.core.TextException`;
  #L450b94.  v3:= new `java.lang.Object`[v3];
  #L450b98.  v4:= v5.`org.simpleframework.xml.core.TreeModel.j` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L450b9c.  v3[v2]:= v4 @kind object;
  #L450ba0.  v3[v1]:= v6 @kind object;
  #L450ba4.  v6:= "Text annotation %s used with elements in %s" @kind object;
  #L450ba8.  call `<init>`(v0, v6, v3) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L450bae.  throw v0;
  #L450bb0.  return @kind void;
}
procedure `org.simpleframework.xml.core.LabelMap` `getAttributes`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getAttributes:()Lorg/simpleframework/xml/core/LabelMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4504b0.  v0:= v1.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L4504b4.  call temp:= `getLabels`(v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabels:()Lorg/simpleframework/xml/core/LabelMap;` @kind virtual;
  #L4504ba.  v0:= temp @kind object;
  #L4504bc.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.LabelMap` `getElements`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getElements:()Lorg/simpleframework/xml/core/LabelMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4504d0.  v0:= v1.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L4504d4.  call temp:= `getLabels`(v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabels:()Lorg/simpleframework/xml/core/LabelMap;` @kind virtual;
  #L4504da.  v0:= temp @kind object;
  #L4504dc.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Expression` `getExpression`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L450478.  v0:= v1.`org.simpleframework.xml.core.TreeModel.a` @type ^`org.simpleframework.xml.core.Expression` @kind object;
  #L45047c.  return v0 @kind object;
}
procedure `int` `getIndex`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4503a0.  v0:= v1.`org.simpleframework.xml.core.TreeModel.l` @type ^`int`;
  #L4503a4.  return v0;
}
procedure `org.simpleframework.xml.core.ModelMap` `getModels`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getModels:()Lorg/simpleframework/xml/core/ModelMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4505d0.  v0:= v1.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L4505d4.  call temp:= `getModels`(v0) @signature `Lorg/simpleframework/xml/core/ModelMap;.getModels:()Lorg/simpleframework/xml/core/ModelMap;` @kind virtual;
  #L4505da.  v0:= temp @kind object;
  #L4505dc.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4503b8.  v0:= v1.`org.simpleframework.xml.core.TreeModel.h` @type ^`java.lang.String` @kind object;
  #L4503bc.  return v0 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4503d0.  v0:= v1.`org.simpleframework.xml.core.TreeModel.i` @type ^`java.lang.String` @kind object;
  #L4503d4.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `getText`(`org.simpleframework.xml.core.TreeModel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.getText:()Lorg/simpleframework/xml/core/Label;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L450490.  v0:= v1.`org.simpleframework.xml.core.TreeModel.k` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L450494.  if v0 == 0 then goto L45049a;
  #L450498.  return v0 @kind object;
  #L45049a.  v0:= v1.`org.simpleframework.xml.core.TreeModel.j` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L45049e.  return v0 @kind object;
}
procedure `boolean` `isAttribute`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.isAttribute:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L450278.  v0:= v1.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L45027c.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L450282.  v2:= temp;
  #L450284.  return v2;
}
procedure `boolean` `isComposite`(`org.simpleframework.xml.core.TreeModel` v4 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.isComposite:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L450298.  v0:= v4.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L45029c.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/core/ModelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4502a2.  v0:= temp @kind object;
  #L4502a4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4502aa.  v1:= temp;
  #L4502ac.  v2:= 1I;
  #L4502ae.  if v1 == 0 then goto L4502f0;
  #L4502b2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4502b8.  v1:= temp @kind object;
  #L4502ba.  v1:= (`org.simpleframework.xml.core.ModelList`) v1 @kind object;
  #L4502be.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4502c4.  v1:= temp @kind object;
  #L4502c6.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4502cc.  v3:= temp;
  #L4502ce.  if v3 == 0 then goto L4502a4;
  #L4502d2.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4502d8.  v3:= temp @kind object;
  #L4502da.  v3:= (`org.simpleframework.xml.core.Model`) v3 @kind object;
  #L4502de.  if v3 == 0 then goto L4502c6;
  #L4502e2.  call temp:= `isEmpty`(v3) @signature `Lorg/simpleframework/xml/core/Model;.isEmpty:()Z` @kind interface;
  #L4502e8.  v3:= temp;
  #L4502ea.  if v3 != 0 then goto L4502c6;
  #L4502ee.  return v2;
  #L4502f0.  v0:= v4.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L4502f4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L4502fa.  v0:= temp;
  #L4502fc.  v0:= v0 ^~ v2 @kind int;
  #L4502fe.  return v0;
}
procedure `boolean` `isElement`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.isElement:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L450310.  v0:= v1.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L450314.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L45031a.  v2:= temp;
  #L45031c.  return v2;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.core.TreeModel` v2 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L450330.  v0:= v2.`org.simpleframework.xml.core.TreeModel.j` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L450334.  v1:= 0I;
  #L450336.  if v0 == 0 then goto L45033c;
  #L45033a.  return v1;
  #L45033c.  v0:= v2.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L450340.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L450346.  v0:= temp;
  #L450348.  if v0 != 0 then goto L45034e;
  #L45034c.  return v1;
  #L45034e.  v0:= v2.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L450352.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L450358.  v0:= temp;
  #L45035a.  if v0 != 0 then goto L450360;
  #L45035e.  return v1;
  #L450360.  call temp:= `isComposite`(v2) @signature `Lorg/simpleframework/xml/core/TreeModel;.isComposite:()Z` @kind virtual;
  #L450366.  v0:= temp;
  #L450368.  v0:= v0 ^~ 1;
  #L45036c.  return v0;
}
procedure `boolean` `isModel`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.isModel:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L450380.  v0:= v1.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L450384.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L45038a.  v2:= temp;
  #L45038c.  return v2;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.core.TreeModel` v3 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L450428.  v0:= new `java.util.ArrayList`;
  #L45042c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L450432.  v1:= v3.`org.simpleframework.xml.core.TreeModel.e` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` @kind object;
  #L450436.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L45043c.  v1:= temp @kind object;
  #L45043e.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L450444.  v2:= temp;
  #L450446.  if v2 == 0 then goto L45045e;
  #L45044a.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L450450.  v2:= temp @kind object;
  #L450452.  v2:= (`java.lang.String`) v2 @kind object;
  #L450456.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L45045c.  goto L45043e;
  #L45045e.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L450464.  v0:= temp @kind object;
  #L450466.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Model` `lookup`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lorg/simpleframework/xml/core/TreeModel;.lookup:(Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L450534.  v0:= v1.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L450538.  call temp:= `lookup`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/ModelMap;.lookup:(Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind virtual;
  #L45053e.  v2:= temp @kind object;
  #L450540.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Model` `lookup`(`org.simpleframework.xml.core.TreeModel` v3 @kind this, `org.simpleframework.xml.core.Expression` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.lookup:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L450554.  call temp:= `getFirst`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.getFirst:()Ljava/lang/String;` @kind interface;
  #L45055a.  v0:= temp @kind object;
  #L45055c.  call temp:= `getIndex`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.getIndex:()I` @kind interface;
  #L450562.  v1:= temp;
  #L450564.  call temp:= `lookup`(v3, v0, v1) @signature `Lorg/simpleframework/xml/core/TreeModel;.lookup:(Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind virtual;
  #L45056a.  v0:= temp @kind object;
  #L45056c.  call temp:= `isPath`(v4) @signature `Lorg/simpleframework/xml/core/Expression;.isPath:()Z` @kind interface;
  #L450572.  v1:= temp;
  #L450574.  if v1 == 0 then goto L450592;
  #L450578.  v1:= 1I;
  #L45057a.  v2:= 0I;
  #L45057c.  call temp:= `getPath`(v4, v1, v2) @signature `Lorg/simpleframework/xml/core/Expression;.getPath:(II)Lorg/simpleframework/xml/core/Expression;` @kind interface;
  #L450582.  v4:= temp @kind object;
  #L450584.  if v0 == 0 then goto L450592;
  #L450588.  call temp:= `lookup`(v0, v4) @signature `Lorg/simpleframework/xml/core/Model;.lookup:(Lorg/simpleframework/xml/core/Expression;)Lorg/simpleframework/xml/core/Model;` @kind interface;
  #L45058e.  v4:= temp @kind object;
  #L450590.  return v4 @kind object;
  #L450592.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Model` `register`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `int` v4 ) @signature `Lorg/simpleframework/xml/core/TreeModel;.register:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4505a4.  v0:= v1.`org.simpleframework.xml.core.TreeModel.d` @type ^`org.simpleframework.xml.core.ModelMap` @kind object;
  #L4505a8.  call temp:= `lookup`(v0, v2, v4) @signature `Lorg/simpleframework/xml/core/ModelMap;.lookup:(Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind virtual;
  #L4505ae.  v0:= temp @kind object;
  #L4505b0.  if v0 != 0 then goto L4505be;
  #L4505b4.  call temp:= `a`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/TreeModel;.a:(Ljava/lang/String;Ljava/lang/String;I)Lorg/simpleframework/xml/core/Model;` @kind direct;
  #L4505ba.  v2:= temp @kind object;
  #L4505bc.  return v2 @kind object;
  #L4505be.  return v0 @kind object;
}
procedure `void` `register`(`org.simpleframework.xml.core.TreeModel` v1 @kind this, `org.simpleframework.xml.core.Label` v2 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.register:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L450678.  call temp:= `isAttribute`(v2) @signature `Lorg/simpleframework/xml/core/Label;.isAttribute:()Z` @kind interface;
  #L45067e.  v0:= temp;
  #L450680.  if v0 == 0 then goto L45068c;
  #L450684.  call `registerAttribute`(v1, v2) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerAttribute:(Lorg/simpleframework/xml/core/Label;)V` @kind virtual;
  #L45068a.  goto L4506a6;
  #L45068c.  call temp:= `isText`(v2) @signature `Lorg/simpleframework/xml/core/Label;.isText:()Z` @kind interface;
  #L450692.  v0:= temp;
  #L450694.  if v0 == 0 then goto L4506a0;
  #L450698.  call `registerText`(v1, v2) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerText:(Lorg/simpleframework/xml/core/Label;)V` @kind virtual;
  #L45069e.  goto L4506a6;
  #L4506a0.  call `registerElement`(v1, v2) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerElement:(Lorg/simpleframework/xml/core/Label;)V` @kind virtual;
  #L4506a6.  return @kind void;
}
procedure `void` `registerAttribute`(`org.simpleframework.xml.core.TreeModel` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerAttribute:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4506b8.  v0:= v2.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L4506bc.  v1:= 0I;
  #L4506be.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4506c4.  return @kind void;
}
procedure `void` `registerAttribute`(`org.simpleframework.xml.core.TreeModel` v4 @kind this, `org.simpleframework.xml.core.Label` v5 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerAttribute:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4506d8.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L4506de.  v0:= temp @kind object;
  #L4506e0.  v1:= v4.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L4506e4.  call temp:= `get`(v1, v0) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4506ea.  v1:= temp @kind object;
  #L4506ec.  if v1 != 0 then goto L4506fc;
  #L4506f0.  v1:= v4.`org.simpleframework.xml.core.TreeModel.b` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L4506f4.  call temp:= `put`(v1, v0, v5) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4506fa.  return @kind void;
  #L4506fc.  v1:= new `org.simpleframework.xml.core.AttributeException`;
  #L450700.  v2:= 2I;
  #L450702.  v2:= new `java.lang.Object`[v2];
  #L450706.  v3:= 0I;
  #L450708.  v2[v3]:= v0 @kind object;
  #L45070c.  v0:= 1I;
  #L45070e.  v2[v0]:= v5 @kind object;
  #L450712.  v5:= "Duplicate annotation of name '%s' on %s" @kind object;
  #L450716.  call `<init>`(v1, v5, v2) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L45071c.  throw v1;
}
procedure `void` `registerElement`(`org.simpleframework.xml.core.TreeModel` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerElement:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L450730.  v0:= v2.`org.simpleframework.xml.core.TreeModel.e` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` @kind object;
  #L450734.  call temp:= `contains`(v0, v3) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L45073a.  v0:= temp;
  #L45073c.  if v0 != 0 then goto L45074a;
  #L450740.  v0:= v2.`org.simpleframework.xml.core.TreeModel.e` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` @kind object;
  #L450744.  call temp:= `add`(v0, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L45074a.  v0:= v2.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L45074e.  v1:= 0I;
  #L450750.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L450756.  return @kind void;
}
procedure `void` `registerElement`(`org.simpleframework.xml.core.TreeModel` v4 @kind this, `org.simpleframework.xml.core.Label` v5 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerElement:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L450768.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L45076e.  v0:= temp @kind object;
  #L450770.  v1:= v4.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L450774.  call temp:= `get`(v1, v0) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L45077a.  v1:= temp @kind object;
  #L45077c.  if v1 != 0 then goto L4507b6;
  #L450780.  v1:= v4.`org.simpleframework.xml.core.TreeModel.e` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` @kind object;
  #L450784.  call temp:= `contains`(v1, v0) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L45078a.  v1:= temp;
  #L45078c.  if v1 != 0 then goto L45079a;
  #L450790.  v1:= v4.`org.simpleframework.xml.core.TreeModel.e` @type ^`org.simpleframework.xml.core.TreeModel$OrderList` @kind object;
  #L450794.  call temp:= `add`(v1, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L45079a.  call temp:= `isTextList`(v5) @signature `Lorg/simpleframework/xml/core/Label;.isTextList:()Z` @kind interface;
  #L4507a0.  v1:= temp;
  #L4507a2.  if v1 == 0 then goto L4507aa;
  #L4507a6.  v4.`org.simpleframework.xml.core.TreeModel.k` @type ^`org.simpleframework.xml.core.Label` := v5 @kind object;
  #L4507aa.  v1:= v4.`org.simpleframework.xml.core.TreeModel.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L4507ae.  call temp:= `put`(v1, v0, v5) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4507b4.  return @kind void;
  #L4507b6.  v1:= new `org.simpleframework.xml.core.ElementException`;
  #L4507ba.  v2:= 2I;
  #L4507bc.  v2:= new `java.lang.Object`[v2];
  #L4507c0.  v3:= 0I;
  #L4507c2.  v2[v3]:= v0 @kind object;
  #L4507c6.  v0:= 1I;
  #L4507c8.  v2[v0]:= v5 @kind object;
  #L4507cc.  v5:= "Duplicate annotation of name '%s' on %s" @kind object;
  #L4507d0.  call `<init>`(v1, v5, v2) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L4507d6.  throw v1;
}
procedure `void` `registerText`(`org.simpleframework.xml.core.TreeModel` v3 @kind this, `org.simpleframework.xml.core.Label` v4 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.registerText:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4507e8.  v0:= v3.`org.simpleframework.xml.core.TreeModel.j` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L4507ec.  if v0 != 0 then goto L4507f6;
  #L4507f0.  v3.`org.simpleframework.xml.core.TreeModel.j` @type ^`org.simpleframework.xml.core.Label` := v4 @kind object;
  #L4507f4.  return @kind void;
  #L4507f6.  v0:= new `org.simpleframework.xml.core.TextException`;
  #L4507fa.  v1:= 1I;
  #L4507fc.  v1:= new `java.lang.Object`[v1];
  #L450800.  v2:= 0I;
  #L450802.  v1[v2]:= v4 @kind object;
  #L450806.  v4:= "Duplicate text annotation on %s" @kind object;
  #L45080a.  call `<init>`(v0, v4, v1) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L450810.  throw v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.TreeModel` v3 @kind this) @signature `Lorg/simpleframework/xml/core/TreeModel;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4503e8.  v0:= 2I;
  #L4503ea.  v0:= new `java.lang.Object`[v0];
  #L4503ee.  v1:= v3.`org.simpleframework.xml.core.TreeModel.h` @type ^`java.lang.String` @kind object;
  #L4503f2.  v2:= 0I;
  #L4503f4.  v0[v2]:= v1 @kind object;
  #L4503f8.  v1:= v3.`org.simpleframework.xml.core.TreeModel.l` @type ^`int`;
  #L4503fc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L450402.  v1:= temp @kind object;
  #L450404.  v2:= 1I;
  #L450406.  v0[v2]:= v1 @kind object;
  #L45040a.  v1:= "model '%s[%s]'" @kind object;
  #L45040e.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L450414.  v0:= temp @kind object;
  #L450416.  return v0 @kind object;
}
procedure `void` `validate`(`org.simpleframework.xml.core.TreeModel` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lorg/simpleframework/xml/core/TreeModel;.validate:(Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;

  #L450824.  call `e`(v0, v1) @signature `Lorg/simpleframework/xml/core/TreeModel;.e:(Ljava/lang/Class;)V` @kind direct;
  #L45082a.  call `b`(v0, v1) @signature `Lorg/simpleframework/xml/core/TreeModel;.b:(Ljava/lang/Class;)V` @kind direct;
  #L450830.  call `c`(v0, v1) @signature `Lorg/simpleframework/xml/core/TreeModel;.c:(Ljava/lang/Class;)V` @kind direct;
  #L450836.  call `f`(v0, v1) @signature `Lorg/simpleframework/xml/core/TreeModel;.f:(Ljava/lang/Class;)V` @kind direct;
  #L45083c.  call `g`(v0, v1) @signature `Lorg/simpleframework/xml/core/TreeModel;.g:(Ljava/lang/Class;)V` @kind direct;
  #L450842.  return @kind void;
}
