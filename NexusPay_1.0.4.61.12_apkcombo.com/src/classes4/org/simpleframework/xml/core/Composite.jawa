record `org.simpleframework.xml.core.Composite` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Converter` @kind interface {
  `org.simpleframework.xml.core.ObjectFactory` `org.simpleframework.xml.core.Composite.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Primitive` `org.simpleframework.xml.core.Composite.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Criteria` `org.simpleframework.xml.core.Composite.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Revision` `org.simpleframework.xml.core.Composite.d` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Context` `org.simpleframework.xml.core.Composite.e` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.Composite.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L43ffa4.  v0:= 0I;
  #L43ffa6.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Composite;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Class;)V` @kind direct;
  #L43ffac.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L43ffc0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43ffc6.  v0:= new `org.simpleframework.xml.core.ObjectFactory`;
  #L43ffca.  call `<init>`(v0, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/ObjectFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Class;)V` @kind direct;
  #L43ffd0.  v1.`org.simpleframework.xml.core.Composite.a` @type ^`org.simpleframework.xml.core.ObjectFactory` := v0 @kind object;
  #L43ffd4.  v4:= new `org.simpleframework.xml.core.Primitive`;
  #L43ffd8.  call `<init>`(v4, v2, v3) @signature `Lorg/simpleframework/xml/core/Primitive;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L43ffde.  v1.`org.simpleframework.xml.core.Composite.b` @type ^`org.simpleframework.xml.core.Primitive` := v4 @kind object;
  #L43ffe2.  v4:= new `org.simpleframework.xml.core.Collector`;
  #L43ffe6.  call `<init>`(v4) @signature `Lorg/simpleframework/xml/core/Collector;.<init>:()V` @kind direct;
  #L43ffec.  v1.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` := v4 @kind object;
  #L43fff0.  v4:= new `org.simpleframework.xml.core.Revision`;
  #L43fff4.  call `<init>`(v4) @signature `Lorg/simpleframework/xml/core/Revision;.<init>:()V` @kind direct;
  #L43fffa.  v1.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` := v4 @kind object;
  #L43fffe.  v1.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` := v2 @kind object;
  #L440002.  v1.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` := v3 @kind object;
  #L440006.  return @kind void;
}
procedure `void` `A`(`org.simpleframework.xml.core.Composite` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `org.simpleframework.xml.core.Schema` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.A:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Schema;)V` @AccessFlag PRIVATE {
    temp;

  #L4407ec.  call temp:= `getText`(v2) @signature `Lorg/simpleframework/xml/core/Schema;.getText:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L4407f2.  v2:= temp @kind object;
  #L4407f4.  if v2 == 0 then goto L4407fe;
  #L4407f8.  call `r`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/Composite;.r:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L4407fe.  return @kind void;
}
procedure `void` `B`(`org.simpleframework.xml.core.Composite` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object, `org.simpleframework.xml.core.Label` v7 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.B:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L440810.  call temp:= `getPaths`(v7) @signature `Lorg/simpleframework/xml/core/Label;.getPaths:()[Ljava/lang/String;` @kind interface;
  #L440816.  v0:= temp @kind object;
  #L440818.  v1:= length @variable v0;
  #L44081a.  v2:= 0I;
  #L44081c.  if v2 >= v1 then goto L440830;
  #L440820.  v3:= v0[v2] @kind object;
  #L440824.  call temp:= `getLabel`(v6, v3) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L44082a.  v2:= v2 + 1;
  #L44082e.  goto L44081c;
  #L440830.  call temp:= `isInline`(v7) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L440836.  v6:= temp;
  #L440838.  if v6 == 0 then goto L440848;
  #L44083c.  v6:= v4.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L440840.  v0:= 0I;
  #L440842.  call `set`(v6, v7, v0) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L440848.  call `r`(v4, v5, v7) @signature `Lorg/simpleframework/xml/core/Composite;.r:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L44084e.  return @kind void;
}
procedure `void` `C`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.core.Schema` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.C:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4408d0.  call temp:= `getSection`(v4) @signature `Lorg/simpleframework/xml/core/Schema;.getSection:()Lorg/simpleframework/xml/core/Section;` @kind interface;
  #L4408d6.  v0:= temp @kind object;
  #L4408d8.  call `O`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/Composite;.O:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @kind direct;
  #L4408de.  call `K`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Composite;.K:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L4408e4.  return @kind void;
}
procedure `void` `D`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.core.Label` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.D:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4408f8.  if v4 == 0 then goto L440926;
  #L4408fc.  call temp:= `getDecorator`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getDecorator:()Lorg/simpleframework/xml/core/Decorator;` @kind interface;
  #L440902.  v0:= temp @kind object;
  #L440904.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L44090a.  v5:= temp @kind object;
  #L44090c.  v1:= v2.`org.simpleframework.xml.core.Composite.a` @type ^`org.simpleframework.xml.core.ObjectFactory` @kind object;
  #L440910.  call temp:= `getText`(v1, v4) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.getText:(Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L440916.  v4:= temp @kind object;
  #L440918.  call temp:= `setAttribute`(v3, v5, v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setAttribute:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L44091e.  v3:= temp @kind object;
  #L440920.  call `decorate`(v0, v3) @signature `Lorg/simpleframework/xml/core/Decorator;.decorate:(Lorg/simpleframework/xml/stream/OutputNode;)V` @kind interface;
  #L440926.  return @kind void;
}
procedure `void` `E`(`org.simpleframework.xml.core.Composite` v4 @kind this, `org.simpleframework.xml.stream.OutputNode` v5 @kind object, `java.lang.Object` v6 @kind object, `org.simpleframework.xml.core.Section` v7 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.E:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L440938.  call temp:= `getAttributes`(v7) @signature `Lorg/simpleframework/xml/core/Section;.getAttributes:()Lorg/simpleframework/xml/core/LabelMap;` @kind interface;
  #L44093e.  v7:= temp @kind object;
  #L440940.  call temp:= `iterator`(v7) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L440946.  v7:= temp @kind object;
  #L440948.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L44094e.  v0:= temp;
  #L440950.  if v0 == 0 then goto L4409cc;
  #L440954.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L44095a.  v0:= temp @kind object;
  #L44095c.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L440960.  call temp:= `getContact`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L440966.  v1:= temp @kind object;
  #L440968.  call temp:= `get`(v1, v6) @signature `Lorg/simpleframework/xml/core/Contact;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L44096e.  v1:= temp @kind object;
  #L440970.  v2:= v4.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L440974.  v3:= v4.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L440978.  call temp:= `getType`(v2, v3, v6) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L44097e.  v2:= temp @kind object;
  #L440980.  if v1 != 0 then goto L440990;
  #L440984.  v1:= v4.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L440988.  call temp:= `getEmpty`(v0, v1) @signature `Lorg/simpleframework/xml/core/Label;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @kind interface;
  #L44098e.  v1:= temp @kind object;
  #L440990.  if v1 != 0 then goto L4409c4;
  #L440994.  call temp:= `isRequired`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L44099a.  v3:= temp;
  #L44099c.  if v3 != 0 then goto L4409a2;
  #L4409a0.  goto L4409c4;
  #L4409a2.  v5:= new `org.simpleframework.xml.core.AttributeException`;
  #L4409a6.  v6:= 2I;
  #L4409a8.  v6:= new `java.lang.Object`[v6];
  #L4409ac.  v7:= 0I;
  #L4409ae.  v6[v7]:= v0 @kind object;
  #L4409b2.  v7:= 1I;
  #L4409b4.  v6[v7]:= v2 @kind object;
  #L4409b8.  v7:= "Value for %s is null in %s" @kind object;
  #L4409bc.  call `<init>`(v5, v7, v6) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L4409c2.  throw v5;
  #L4409c4.  call `D`(v4, v5, v1, v0) @signature `Lorg/simpleframework/xml/core/Composite;.D:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L4409ca.  goto L440948;
  #L4409cc.  return @kind void;
}
procedure `void` `F`(`org.simpleframework.xml.core.Composite` v0 @kind this, `org.simpleframework.xml.stream.OutputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Converter` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.F:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Converter;)V` @AccessFlag PRIVATE {
    temp;

  #L4409e0.  call `write`(v3, v1, v2) @signature `Lorg/simpleframework/xml/core/Converter;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind interface;
  #L4409e6.  return @kind void;
}
procedure `void` `G`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Label` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.G:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4409f8.  if v5 == 0 then goto L440a6e;
  #L4409fc.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L440a02.  v0:= temp @kind object;
  #L440a04.  call temp:= `getLabel`(v6, v0) @signature `Lorg/simpleframework/xml/core/Label;.getLabel:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L440a0a.  v1:= temp @kind object;
  #L440a0c.  call temp:= `getName`(v1) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L440a12.  v2:= temp @kind object;
  #L440a14.  call temp:= `getType`(v6, v0) @signature `Lorg/simpleframework/xml/core/Label;.getType:(Ljava/lang/Class;)Lorg/simpleframework/xml/strategy/Type;` @kind interface;
  #L440a1a.  v6:= temp @kind object;
  #L440a1c.  call temp:= `getChild`(v4, v2) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getChild:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L440a22.  v4:= temp @kind object;
  #L440a24.  call temp:= `isInline`(v1) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L440a2a.  v0:= temp;
  #L440a2c.  if v0 != 0 then goto L440a36;
  #L440a30.  call `I`(v3, v4, v6, v1) @signature `Lorg/simpleframework/xml/core/Composite;.I:(Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L440a36.  call temp:= `isInline`(v1) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L440a3c.  v0:= temp;
  #L440a3e.  if v0 != 0 then goto L440a4e;
  #L440a42.  call temp:= `a`(v3, v4, v5, v6) @signature `Lorg/simpleframework/xml/core/Composite;.a:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/strategy/Type;)Z` @kind direct;
  #L440a48.  v6:= temp;
  #L440a4a.  if v6 != 0 then goto L440a6e;
  #L440a4e.  v6:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L440a52.  call temp:= `getConverter`(v1, v6) @signature `Lorg/simpleframework/xml/core/Label;.getConverter:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @kind interface;
  #L440a58.  v6:= temp @kind object;
  #L440a5a.  call temp:= `isData`(v1) @signature `Lorg/simpleframework/xml/core/Label;.isData:()Z` @kind interface;
  #L440a60.  v0:= temp;
  #L440a62.  call `setData`(v4, v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setData:(Z)V` @kind interface;
  #L440a68.  call `F`(v3, v4, v5, v6) @signature `Lorg/simpleframework/xml/core/Composite;.F:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Converter;)V` @kind direct;
  #L440a6e.  return @kind void;
}
procedure `void` `H`(`org.simpleframework.xml.core.Composite` v5 @kind this, `org.simpleframework.xml.stream.OutputNode` v6 @kind object, `java.lang.Object` v7 @kind object, `org.simpleframework.xml.core.Section` v8 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.H:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L440a80.  call temp:= `iterator`(v8) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L440a86.  v0:= temp @kind object;
  #L440a88.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L440a8e.  v1:= temp;
  #L440a90.  if v1 == 0 then goto L440b1a;
  #L440a94.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L440a9a.  v1:= temp @kind object;
  #L440a9c.  v1:= (`java.lang.String`) v1 @kind object;
  #L440aa0.  call temp:= `getSection`(v8, v1) @signature `Lorg/simpleframework/xml/core/Section;.getSection:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Section;` @kind interface;
  #L440aa6.  v2:= temp @kind object;
  #L440aa8.  if v2 == 0 then goto L440abc;
  #L440aac.  call temp:= `getChild`(v6, v1) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getChild:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L440ab2.  v1:= temp @kind object;
  #L440ab4.  call `K`(v5, v1, v7, v2) @signature `Lorg/simpleframework/xml/core/Composite;.K:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L440aba.  goto L440a88;
  #L440abc.  call temp:= `getPath`(v8, v1) @signature `Lorg/simpleframework/xml/core/Section;.getPath:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L440ac2.  v2:= temp @kind object;
  #L440ac4.  call temp:= `getElement`(v8, v2) @signature `Lorg/simpleframework/xml/core/Section;.getElement:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L440aca.  v2:= temp @kind object;
  #L440acc.  v3:= v5.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L440ad0.  v4:= v5.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L440ad4.  call temp:= `getType`(v3, v4, v7) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L440ada.  v3:= temp @kind object;
  #L440adc.  v4:= v5.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L440ae0.  call temp:= `get`(v4, v2) @signature `Lorg/simpleframework/xml/core/Criteria;.get:(Lorg/simpleframework/xml/core/Label;)Lorg/simpleframework/xml/core/Variable;` @kind interface;
  #L440ae6.  v4:= temp @kind object;
  #L440ae8.  if v4 != 0 then goto L440a88;
  #L440aec.  if v2 == 0 then goto L440af8;
  #L440af0.  call `N`(v5, v6, v7, v8, v2) @signature `Lorg/simpleframework/xml/core/Composite;.N:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L440af6.  goto L440a88;
  #L440af8.  v6:= new `org.simpleframework.xml.core.ElementException`;
  #L440afc.  v7:= 2I;
  #L440afe.  v7:= new `java.lang.Object`[v7];
  #L440b02.  v8:= 0I;
  #L440b04.  v7[v8]:= v1 @kind object;
  #L440b08.  v8:= 1I;
  #L440b0a.  v7[v8]:= v3 @kind object;
  #L440b0e.  v8:= "Element '%s' not defined in %s" @kind object;
  #L440b12.  call `<init>`(v6, v8, v7) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L440b18.  throw v6;
  #L440b1a.  return @kind void;
}
procedure `void` `I`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object, `org.simpleframework.xml.core.Label` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.I:(Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L440b2c.  call temp:= `getType`(v3) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L440b32.  v3:= temp @kind object;
  #L440b34.  v0:= v1.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L440b38.  call temp:= `getDecorator`(v0, v3) @signature `Lorg/simpleframework/xml/core/Context;.getDecorator:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Decorator;` @kind interface;
  #L440b3e.  v3:= temp @kind object;
  #L440b40.  call temp:= `getDecorator`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getDecorator:()Lorg/simpleframework/xml/core/Decorator;` @kind interface;
  #L440b46.  v4:= temp @kind object;
  #L440b48.  call `decorate`(v4, v2, v3) @signature `Lorg/simpleframework/xml/core/Decorator;.decorate:(Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/core/Decorator;)V` @kind interface;
  #L440b4e.  return @kind void;
}
procedure `java.lang.Object` `J`(`org.simpleframework.xml.core.Composite` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.J:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L43ff20.  if v3 == 0 then goto L43ff40;
  #L43ff24.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L43ff2a.  v0:= temp @kind object;
  #L43ff2c.  v1:= v2.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L43ff30.  call temp:= `getCaller`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getCaller:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Caller;` @kind interface;
  #L43ff36.  v0:= temp @kind object;
  #L43ff38.  call temp:= `replace`(v0, v3) @signature `Lorg/simpleframework/xml/core/Caller;.replace:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L43ff3e.  v3:= temp @kind object;
  #L43ff40.  return v3 @kind object;
}
procedure `void` `K`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.K:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L440b60.  call temp:= `getNamespaces`(v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getNamespaces:()Lorg/simpleframework/xml/stream/NamespaceMap;` @kind interface;
  #L440b66.  v0:= temp @kind object;
  #L440b68.  call temp:= `getPrefix`(v5) @signature `Lorg/simpleframework/xml/core/Section;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L440b6e.  v1:= temp @kind object;
  #L440b70.  if v1 == 0 then goto L440bae;
  #L440b74.  call temp:= `getReference`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NamespaceMap;.getReference:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L440b7a.  v0:= temp @kind object;
  #L440b7c.  if v0 == 0 then goto L440b88;
  #L440b80.  call `setReference`(v3, v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setReference:(Ljava/lang/String;)V` @kind interface;
  #L440b86.  goto L440bae;
  #L440b88.  v3:= new `org.simpleframework.xml.core.ElementException`;
  #L440b8c.  v4:= 2I;
  #L440b8e.  v4:= new `java.lang.Object`[v4];
  #L440b92.  v5:= 0I;
  #L440b94.  v4[v5]:= v1 @kind object;
  #L440b98.  v5:= v2.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L440b9c.  v0:= 1I;
  #L440b9e.  v4[v0]:= v5 @kind object;
  #L440ba2.  v5:= "Namespace prefix '%s' in %s is not in scope" @kind object;
  #L440ba6.  call `<init>`(v3, v5, v4) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L440bac.  throw v3;
  #L440bae.  call `E`(v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/Composite;.E:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L440bb4.  call `H`(v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/Composite;.H:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L440bba.  call `M`(v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/Composite;.M:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L440bc0.  return @kind void;
}
procedure `void` `L`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.core.Label` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.L:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L440bd4.  if v3 == 0 then goto L440c04;
  #L440bd8.  call temp:= `isTextList`(v4) @signature `Lorg/simpleframework/xml/core/Label;.isTextList:()Z` @kind interface;
  #L440bde.  v0:= temp;
  #L440be0.  if v0 != 0 then goto L440c04;
  #L440be4.  v0:= v1.`org.simpleframework.xml.core.Composite.a` @type ^`org.simpleframework.xml.core.ObjectFactory` @kind object;
  #L440be8.  call temp:= `getText`(v0, v3) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.getText:(Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L440bee.  v3:= temp @kind object;
  #L440bf0.  call temp:= `isData`(v4) @signature `Lorg/simpleframework/xml/core/Label;.isData:()Z` @kind interface;
  #L440bf6.  v4:= temp;
  #L440bf8.  call `setData`(v2, v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setData:(Z)V` @kind interface;
  #L440bfe.  call `setValue`(v2, v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setValue:(Ljava/lang/String;)V` @kind interface;
  #L440c04.  return @kind void;
}
procedure `void` `M`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Section` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.M:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L440c18.  call temp:= `getText`(v6) @signature `Lorg/simpleframework/xml/core/Section;.getText:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L440c1e.  v6:= temp @kind object;
  #L440c20.  if v6 == 0 then goto L440c8e;
  #L440c24.  call temp:= `getContact`(v6) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L440c2a.  v0:= temp @kind object;
  #L440c2c.  call temp:= `get`(v0, v5) @signature `Lorg/simpleframework/xml/core/Contact;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L440c32.  v0:= temp @kind object;
  #L440c34.  v1:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L440c38.  v2:= v3.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L440c3c.  call temp:= `getType`(v1, v2, v5) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L440c42.  v5:= temp @kind object;
  #L440c44.  if v0 != 0 then goto L440c54;
  #L440c48.  v0:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L440c4c.  call temp:= `getEmpty`(v6, v0) @signature `Lorg/simpleframework/xml/core/Label;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @kind interface;
  #L440c52.  v0:= temp @kind object;
  #L440c54.  if v0 != 0 then goto L440c88;
  #L440c58.  call temp:= `isRequired`(v6) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L440c5e.  v1:= temp;
  #L440c60.  if v1 != 0 then goto L440c66;
  #L440c64.  goto L440c88;
  #L440c66.  v4:= new `org.simpleframework.xml.core.TextException`;
  #L440c6a.  v0:= 2I;
  #L440c6c.  v0:= new `java.lang.Object`[v0];
  #L440c70.  v1:= 0I;
  #L440c72.  v0[v1]:= v6 @kind object;
  #L440c76.  v6:= 1I;
  #L440c78.  v0[v6]:= v5 @kind object;
  #L440c7c.  v5:= "Value for %s is null in %s" @kind object;
  #L440c80.  call `<init>`(v4, v5, v0) @signature `Lorg/simpleframework/xml/core/TextException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L440c86.  throw v4;
  #L440c88.  call `L`(v3, v4, v0, v6) @signature `Lorg/simpleframework/xml/core/Composite;.L:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L440c8e.  return @kind void;
}
procedure `void` `N`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object, `org.simpleframework.xml.core.Label` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.N:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L440ca0.  call temp:= `getContact`(v6) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L440ca6.  v5:= temp @kind object;
  #L440ca8.  call temp:= `get`(v5, v4) @signature `Lorg/simpleframework/xml/core/Contact;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L440cae.  v5:= temp @kind object;
  #L440cb0.  v0:= v2.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L440cb4.  v1:= v2.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L440cb8.  call temp:= `getType`(v0, v1, v4) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L440cbe.  v4:= temp @kind object;
  #L440cc0.  if v5 != 0 then goto L440cf4;
  #L440cc4.  call temp:= `isRequired`(v6) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L440cca.  v0:= temp;
  #L440ccc.  if v0 != 0 then goto L440cd2;
  #L440cd0.  goto L440cf4;
  #L440cd2.  v3:= new `org.simpleframework.xml.core.ElementException`;
  #L440cd6.  v5:= 2I;
  #L440cd8.  v5:= new `java.lang.Object`[v5];
  #L440cdc.  v0:= 0I;
  #L440cde.  v5[v0]:= v6 @kind object;
  #L440ce2.  v6:= 1I;
  #L440ce4.  v5[v6]:= v4 @kind object;
  #L440ce8.  v4:= "Value for %s is null in %s" @kind object;
  #L440cec.  call `<init>`(v3, v4, v5) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L440cf2.  throw v3;
  #L440cf4.  call temp:= `J`(v2, v5) @signature `Lorg/simpleframework/xml/core/Composite;.J:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L440cfa.  v4:= temp @kind object;
  #L440cfc.  if v4 == 0 then goto L440d06;
  #L440d00.  call `G`(v2, v3, v4, v6) @signature `Lorg/simpleframework/xml/core/Composite;.G:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L440d06.  v3:= v2.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L440d0a.  call `set`(v3, v6, v4) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L440d10.  return @kind void;
}
procedure `void` `O`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Schema` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.O:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L440d24.  call temp:= `getRevision`(v6) @signature `Lorg/simpleframework/xml/core/Schema;.getRevision:()Lorg/simpleframework/xml/Version;` @kind interface;
  #L440d2a.  v5:= temp @kind object;
  #L440d2c.  call temp:= `getVersion`(v6) @signature `Lorg/simpleframework/xml/core/Schema;.getVersion:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L440d32.  v6:= temp @kind object;
  #L440d34.  if v5 == 0 then goto L440d86;
  #L440d38.  v0:= v3.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L440d3c.  call temp:= `getDefault`(v0) @signature `Lorg/simpleframework/xml/core/Revision;.getDefault:()D` @kind virtual;
  #L440d42.  v0:= temp @kind wide;
  #L440d44.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L440d4a.  v0:= temp @kind object;
  #L440d4c.  call temp:= `revision`(v5) @signature `Lorg/simpleframework/xml/Version;.revision:()D` @kind interface;
  #L440d52.  v1:= temp @kind wide;
  #L440d54.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L440d5a.  v5:= temp @kind object;
  #L440d5c.  v1:= v3.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L440d60.  call temp:= `compare`(v1, v5, v0) @signature `Lorg/simpleframework/xml/core/Revision;.compare:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L440d66.  v0:= temp;
  #L440d68.  if v0 == 0 then goto L440d80;
  #L440d6c.  call temp:= `isRequired`(v6) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L440d72.  v0:= temp;
  #L440d74.  if v0 == 0 then goto L440d86;
  #L440d78.  call `D`(v3, v4, v5, v6) @signature `Lorg/simpleframework/xml/core/Composite;.D:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L440d7e.  goto L440d86;
  #L440d80.  call `D`(v3, v4, v5, v6) @signature `Lorg/simpleframework/xml/core/Composite;.D:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L440d86.  return @kind void;
}
procedure `boolean` `a`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.a:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/strategy/Type;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43fbc8.  v0:= v1.`org.simpleframework.xml.core.Composite.a` @type ^`org.simpleframework.xml.core.ObjectFactory` @kind object;
  #L43fbcc.  call temp:= `setOverride`(v0, v4, v3, v2) @signature `Lorg/simpleframework/xml/core/Factory;.setOverride:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/OutputNode;)Z` @kind virtual;
  #L43fbd2.  v2:= temp;
  #L43fbd4.  return v2;
}
procedure `void` `access$100`(`org.simpleframework.xml.core.Composite` v0 @kind object, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Schema` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.access$100:(Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L440018.  call `q`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.q:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @kind direct;
  #L44001e.  return @kind void;
}
procedure `void` `access$200`(`org.simpleframework.xml.core.Composite` v0 @kind object, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Section` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.access$200:(Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L440030.  call `m`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.m:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L440036.  return @kind void;
}
procedure `void` `access$300`(`org.simpleframework.xml.core.Composite` v0 @kind object, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Section` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.access$300:(Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L440048.  call `f`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.f:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L44004e.  return @kind void;
}
procedure `void` `access$400`(`org.simpleframework.xml.core.Composite` v0 @kind object, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Section` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.access$400:(Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L440060.  call `h`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.h:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L440066.  return @kind void;
}
procedure `java.lang.Object` `b`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `org.simpleframework.xml.core.Instance` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.b:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Instance;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43fd20.  v0:= v1.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L43fd24.  call temp:= `getSchema`(v0, v4) @signature `Lorg/simpleframework/xml/core/Context;.getSchema:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Schema;` @kind interface;
  #L43fd2a.  v4:= temp @kind object;
  #L43fd2c.  call temp:= `getCaller`(v4) @signature `Lorg/simpleframework/xml/core/Schema;.getCaller:()Lorg/simpleframework/xml/core/Caller;` @kind interface;
  #L43fd32.  v0:= temp @kind object;
  #L43fd34.  call temp:= `c`(v1, v4, v3) @signature `Lorg/simpleframework/xml/core/Composite;.c:(Lorg/simpleframework/xml/core/Schema;Lorg/simpleframework/xml/core/Instance;)Lorg/simpleframework/xml/core/Composite$Builder;` @kind direct;
  #L43fd3a.  v4:= temp @kind object;
  #L43fd3c.  call temp:= `read`(v4, v2) @signature `Lorg/simpleframework/xml/core/Composite$Builder;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L43fd42.  v4:= temp @kind object;
  #L43fd44.  call `validate`(v0, v4) @signature `Lorg/simpleframework/xml/core/Caller;.validate:(Ljava/lang/Object;)V` @kind virtual;
  #L43fd4a.  call `commit`(v0, v4) @signature `Lorg/simpleframework/xml/core/Caller;.commit:(Ljava/lang/Object;)V` @kind virtual;
  #L43fd50.  call temp:= `setInstance`(v3, v4) @signature `Lorg/simpleframework/xml/core/Instance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43fd56.  call temp:= `k`(v1, v2, v4, v0) @signature `Lorg/simpleframework/xml/core/Composite;.k:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Caller;)Ljava/lang/Object;` @kind direct;
  #L43fd5c.  v2:= temp @kind object;
  #L43fd5e.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Composite$Builder` `c`(`org.simpleframework.xml.core.Composite` v9 @kind this, `org.simpleframework.xml.core.Schema` v10 @kind object, `org.simpleframework.xml.core.Instance` v11 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.c:(Lorg/simpleframework/xml/core/Schema;Lorg/simpleframework/xml/core/Instance;)Lorg/simpleframework/xml/core/Composite$Builder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L43ff54.  call temp:= `getInstantiator`(v10) @signature `Lorg/simpleframework/xml/core/Schema;.getInstantiator:()Lorg/simpleframework/xml/core/Instantiator;` @kind interface;
  #L43ff5a.  v0:= temp @kind object;
  #L43ff5c.  call temp:= `isDefault`(v0) @signature `Lorg/simpleframework/xml/core/Instantiator;.isDefault:()Z` @kind interface;
  #L43ff62.  v0:= temp;
  #L43ff64.  if v0 == 0 then goto L43ff78;
  #L43ff68.  v0:= new `org.simpleframework.xml.core.Composite$Builder`;
  #L43ff6c.  v1:= v9.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L43ff70.  call `<init>`(v0, v9, v1, v10, v11) @signature `Lorg/simpleframework/xml/core/Composite$Builder;.<init>:(Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/core/Criteria;Lorg/simpleframework/xml/core/Schema;Lorg/simpleframework/xml/core/Instance;)V` @kind direct;
  #L43ff76.  return v0 @kind object;
  #L43ff78.  v0:= new `org.simpleframework.xml.core.Composite$Injector`;
  #L43ff7c.  v5:= v9.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L43ff80.  v8:= 0I;
  #L43ff82.  v2:= v0 @kind object;
  #L43ff84.  v3:= v9 @kind object;
  #L43ff86.  v4:= v9 @kind object;
  #L43ff88.  v6:= v10 @kind object;
  #L43ff8a.  v7:= v11 @kind object;
  #L43ff8c.  call `<init>`(v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/simpleframework/xml/core/Composite$Injector;.<init>:(Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/core/Composite;Lorg/simpleframework/xml/core/Criteria;Lorg/simpleframework/xml/core/Schema;Lorg/simpleframework/xml/core/Instance;Lorg/simpleframework/xml/core/Composite$1;)V` @kind direct;
  #L43ff92.  return v0 @kind object;
}
procedure `void` `d`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.core.Schema` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.d:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L440078.  call temp:= `getSection`(v4) @signature `Lorg/simpleframework/xml/core/Schema;.getSection:()Lorg/simpleframework/xml/core/Section;` @kind interface;
  #L44007e.  v0:= temp @kind object;
  #L440080.  call `q`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/Composite;.q:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @kind direct;
  #L440086.  call `l`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Composite;.l:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L44008c.  return @kind void;
}
procedure `void` `e`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.e:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4400a0.  call temp:= `getName`(v3) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L4400a6.  v0:= temp @kind object;
  #L4400a8.  call temp:= `getAttribute`(v5, v0) @signature `Lorg/simpleframework/xml/core/Section;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L4400ae.  v5:= temp @kind object;
  #L4400b0.  call temp:= `getLabel`(v6, v5) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L4400b6.  v0:= temp @kind object;
  #L4400b8.  if v0 != 0 then goto L44011e;
  #L4400bc.  call temp:= `getPosition`(v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L4400c2.  v3:= temp @kind object;
  #L4400c4.  v0:= v2.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L4400c8.  v1:= v2.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L4400cc.  call temp:= `getType`(v0, v1, v4) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L4400d2.  v4:= temp @kind object;
  #L4400d4.  v0:= v2.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L4400d8.  call temp:= `isStrict`(v6, v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.isStrict:(Lorg/simpleframework/xml/core/Context;)Z` @kind virtual;
  #L4400de.  v6:= temp;
  #L4400e0.  if v6 == 0 then goto L440124;
  #L4400e4.  v6:= v2.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L4400e8.  call temp:= `isEqual`(v6) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L4400ee.  v6:= temp;
  #L4400f0.  if v6 != 0 then goto L4400f6;
  #L4400f4.  goto L440124;
  #L4400f6.  v6:= new `org.simpleframework.xml.core.AttributeException`;
  #L4400fa.  v0:= 3I;
  #L4400fc.  v0:= new `java.lang.Object`[v0];
  #L440100.  v1:= 0I;
  #L440102.  v0[v1]:= v5 @kind object;
  #L440106.  v5:= 1I;
  #L440108.  v0[v5]:= v4 @kind object;
  #L44010c.  v4:= 2I;
  #L44010e.  v0[v4]:= v3 @kind object;
  #L440112.  v3:= "Attribute '%s' does not have a match in %s at %s" @kind object;
  #L440116.  call `<init>`(v6, v3, v0) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44011c.  throw v6;
  #L44011e.  call temp:= `i`(v2, v3, v4, v0) @signature `Lorg/simpleframework/xml/core/Composite;.i:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @kind direct;
  #L440124.  return @kind void;
}
procedure `void` `f`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Section` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.f:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L440138.  call temp:= `getAttributes`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttributes:()Lorg/simpleframework/xml/stream/NodeMap;` @kind interface;
  #L44013e.  v0:= temp @kind object;
  #L440140.  call temp:= `getAttributes`(v6) @signature `Lorg/simpleframework/xml/core/Section;.getAttributes:()Lorg/simpleframework/xml/core/LabelMap;` @kind interface;
  #L440146.  v1:= temp @kind object;
  #L440148.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/stream/NodeMap;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L44014e.  v0:= temp @kind object;
  #L440150.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L440156.  v2:= temp;
  #L440158.  if v2 == 0 then goto L44017c;
  #L44015c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L440162.  v2:= temp @kind object;
  #L440164.  v2:= (`java.lang.String`) v2 @kind object;
  #L440168.  call temp:= `getAttribute`(v4, v2) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttribute:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L44016e.  v2:= temp @kind object;
  #L440170.  if v2 == 0 then goto L440150;
  #L440174.  call `e`(v3, v2, v5, v6, v1) @signature `Lorg/simpleframework/xml/core/Composite;.e:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L44017a.  goto L440150;
  #L44017c.  call `t`(v3, v4, v1, v5) @signature `Lorg/simpleframework/xml/core/Composite;.t:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;Ljava/lang/Object;)V` @kind direct;
  #L440182.  return @kind void;
}
procedure `void` `g`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Section` v6 @kind object, `org.simpleframework.xml.core.LabelMap` v7 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.g:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L440194.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L44019a.  v0:= temp @kind object;
  #L44019c.  call temp:= `getPath`(v6, v0) @signature `Lorg/simpleframework/xml/core/Section;.getPath:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L4401a2.  v6:= temp @kind object;
  #L4401a4.  call temp:= `getLabel`(v7, v6) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L4401aa.  v0:= temp @kind object;
  #L4401ac.  if v0 != 0 then goto L4401bc;
  #L4401b0.  v0:= v3.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L4401b4.  call temp:= `resolve`(v0, v6) @signature `Lorg/simpleframework/xml/core/Criteria;.resolve:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Variable;` @kind interface;
  #L4401ba.  v0:= temp @kind object;
  #L4401bc.  if v0 != 0 then goto L44022a;
  #L4401c0.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L4401c6.  v0:= temp @kind object;
  #L4401c8.  v1:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L4401cc.  v2:= v3.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L4401d0.  call temp:= `getType`(v1, v2, v5) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L4401d6.  v5:= temp @kind object;
  #L4401d8.  v1:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L4401dc.  call temp:= `isStrict`(v7, v1) @signature `Lorg/simpleframework/xml/core/LabelMap;.isStrict:(Lorg/simpleframework/xml/core/Context;)Z` @kind virtual;
  #L4401e2.  v7:= temp;
  #L4401e4.  if v7 == 0 then goto L440222;
  #L4401e8.  v7:= v3.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L4401ec.  call temp:= `isEqual`(v7) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L4401f2.  v7:= temp;
  #L4401f4.  if v7 != 0 then goto L4401fa;
  #L4401f8.  goto L440222;
  #L4401fa.  v4:= new `org.simpleframework.xml.core.ElementException`;
  #L4401fe.  v7:= 3I;
  #L440200.  v7:= new `java.lang.Object`[v7];
  #L440204.  v1:= 0I;
  #L440206.  v7[v1]:= v6 @kind object;
  #L44020a.  v6:= 1I;
  #L44020c.  v7[v6]:= v5 @kind object;
  #L440210.  v5:= 2I;
  #L440212.  v7[v5]:= v0 @kind object;
  #L440216.  v5:= "Element '%s' does not have a match in %s at %s" @kind object;
  #L44021a.  call `<init>`(v4, v5, v7) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L440220.  throw v4;
  #L440222.  call `skip`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.skip:()V` @kind interface;
  #L440228.  goto L440230;
  #L44022a.  call `n`(v3, v4, v5, v7, v0) @signature `Lorg/simpleframework/xml/core/Composite;.n:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/LabelMap;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L440230.  return @kind void;
}
procedure `void` `h`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Section` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.h:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L440244.  call temp:= `getElements`(v6) @signature `Lorg/simpleframework/xml/core/Section;.getElements:()Lorg/simpleframework/xml/core/LabelMap;` @kind interface;
  #L44024a.  v0:= temp @kind object;
  #L44024c.  call temp:= `getNext`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L440252.  v1:= temp @kind object;
  #L440254.  if v1 == 0 then goto L440284;
  #L440258.  call temp:= `getName`(v1) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L44025e.  v2:= temp @kind object;
  #L440260.  call temp:= `getSection`(v6, v2) @signature `Lorg/simpleframework/xml/core/Section;.getSection:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Section;` @kind interface;
  #L440266.  v2:= temp @kind object;
  #L440268.  if v2 == 0 then goto L440274;
  #L44026c.  call `l`(v3, v1, v5, v2) @signature `Lorg/simpleframework/xml/core/Composite;.l:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L440272.  goto L44027a;
  #L440274.  call `g`(v3, v1, v5, v6, v0) @signature `Lorg/simpleframework/xml/core/Composite;.g:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L44027a.  call temp:= `getNext`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L440280.  v1:= temp @kind object;
  #L440282.  goto L440254;
  #L440284.  call `t`(v3, v4, v0, v5) @signature `Lorg/simpleframework/xml/core/Composite;.t:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;Ljava/lang/Object;)V` @kind direct;
  #L44028a.  return @kind void;
}
procedure `java.lang.Object` `i`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Label` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.i:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L43fd70.  call temp:= `o`(v3, v4, v5, v6) @signature `Lorg/simpleframework/xml/core/Composite;.o:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @kind direct;
  #L43fd76.  v0:= temp @kind object;
  #L43fd78.  if v0 != 0 then goto L43fdda;
  #L43fd7c.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L43fd82.  v4:= temp @kind object;
  #L43fd84.  v1:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L43fd88.  v2:= v3.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L43fd8c.  call temp:= `getType`(v1, v2, v5) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L43fd92.  v5:= temp @kind object;
  #L43fd94.  call temp:= `isRequired`(v6) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L43fd9a.  v1:= temp;
  #L43fd9c.  if v1 == 0 then goto L43fdf4;
  #L43fda0.  v1:= v3.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L43fda4.  call temp:= `isEqual`(v1) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L43fdaa.  v1:= temp;
  #L43fdac.  if v1 != 0 then goto L43fdb2;
  #L43fdb0.  goto L43fdf4;
  #L43fdb2.  v0:= new `org.simpleframework.xml.core.ValueRequiredException`;
  #L43fdb6.  v1:= 3I;
  #L43fdb8.  v1:= new `java.lang.Object`[v1];
  #L43fdbc.  v2:= 0I;
  #L43fdbe.  v1[v2]:= v6 @kind object;
  #L43fdc2.  v6:= 1I;
  #L43fdc4.  v1[v6]:= v5 @kind object;
  #L43fdc8.  v5:= 2I;
  #L43fdca.  v1[v5]:= v4 @kind object;
  #L43fdce.  v4:= "Empty value for %s in %s at %s" @kind object;
  #L43fdd2.  call `<init>`(v0, v4, v1) @signature `Lorg/simpleframework/xml/core/ValueRequiredException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L43fdd8.  throw v0;
  #L43fdda.  v4:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L43fdde.  call temp:= `getEmpty`(v6, v4) @signature `Lorg/simpleframework/xml/core/Label;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @kind interface;
  #L43fde4.  v4:= temp @kind object;
  #L43fde6.  if v0 == v4 then goto L43fdf4;
  #L43fdea.  v4:= v3.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L43fdee.  call `set`(v4, v6, v0) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L43fdf4.  return v0 @kind object;
}
procedure `java.lang.Object` `j`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `org.simpleframework.xml.core.Instance` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.j:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Instance;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L43fe08.  call temp:= `getType`(v4) @signature `Lorg/simpleframework/xml/core/Instance;.getType:()Ljava/lang/Class;` @kind interface;
  #L43fe0e.  v0:= temp @kind object;
  #L43fe10.  v1:= v2.`org.simpleframework.xml.core.Composite.b` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L43fe14.  call temp:= `read`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/Primitive;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L43fe1a.  v3:= temp @kind object;
  #L43fe1c.  if v0 == 0 then goto L43fe26;
  #L43fe20.  call temp:= `setInstance`(v4, v3) @signature `Lorg/simpleframework/xml/core/Instance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43fe26.  return v3 @kind object;
}
procedure `java.lang.Object` `k`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.Caller` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.k:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Caller;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L43fe38.  if v5 == 0 then goto L43fe96;
  #L43fe3c.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L43fe42.  v4:= temp @kind object;
  #L43fe44.  call temp:= `resolve`(v6, v5) @signature `Lorg/simpleframework/xml/core/Caller;.resolve:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L43fe4a.  v5:= temp @kind object;
  #L43fe4c.  v6:= v3.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L43fe50.  call temp:= `getType`(v6) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L43fe56.  v6:= temp @kind object;
  #L43fe58.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L43fe5e.  v0:= temp @kind object;
  #L43fe60.  call temp:= `isAssignableFrom`(v6, v0) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L43fe66.  v1:= temp;
  #L43fe68.  if v1 == 0 then goto L43fe6e;
  #L43fe6c.  return v5 @kind object;
  #L43fe6e.  v5:= new `org.simpleframework.xml.core.ElementException`;
  #L43fe72.  v1:= 3I;
  #L43fe74.  v1:= new `java.lang.Object`[v1];
  #L43fe78.  v2:= 0I;
  #L43fe7a.  v1[v2]:= v0 @kind object;
  #L43fe7e.  v0:= 1I;
  #L43fe80.  v1[v0]:= v6 @kind object;
  #L43fe84.  v6:= 2I;
  #L43fe86.  v1[v6]:= v4 @kind object;
  #L43fe8a.  v4:= "Type %s does not match %s at %s" @kind object;
  #L43fe8e.  call `<init>`(v5, v4, v1) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L43fe94.  throw v5;
  #L43fe96.  return v5 @kind object;
}
procedure `void` `l`(`org.simpleframework.xml.core.Composite` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Section` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.l:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;

  #L44029c.  call `m`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.m:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L4402a2.  call `f`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.f:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L4402a8.  call `h`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.h:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L4402ae.  return @kind void;
}
procedure `void` `m`(`org.simpleframework.xml.core.Composite` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Section` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.m:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;

  #L4402c0.  call temp:= `getText`(v3) @signature `Lorg/simpleframework/xml/core/Section;.getText:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L4402c6.  v3:= temp @kind object;
  #L4402c8.  if v3 == 0 then goto L4402d2;
  #L4402cc.  call temp:= `i`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.i:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @kind direct;
  #L4402d2.  return @kind void;
}
procedure `void` `n`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object, `org.simpleframework.xml.core.Label` v7 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.n:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/LabelMap;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4402e4.  call temp:= `i`(v3, v4, v5, v7) @signature `Lorg/simpleframework/xml/core/Composite;.i:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @kind direct;
  #L4402ea.  v4:= temp @kind object;
  #L4402ec.  call temp:= `getPaths`(v7) @signature `Lorg/simpleframework/xml/core/Label;.getPaths:()[Ljava/lang/String;` @kind interface;
  #L4402f2.  v5:= temp @kind object;
  #L4402f4.  v0:= length @variable v5;
  #L4402f6.  v1:= 0I;
  #L4402f8.  if v1 >= v0 then goto L44030c;
  #L4402fc.  v2:= v5[v1] @kind object;
  #L440300.  call temp:= `getLabel`(v6, v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L440306.  v1:= v1 + 1;
  #L44030a.  goto L4402f8;
  #L44030c.  call temp:= `isInline`(v7) @signature `Lorg/simpleframework/xml/core/Label;.isInline:()Z` @kind interface;
  #L440312.  v5:= temp;
  #L440314.  if v5 == 0 then goto L440322;
  #L440318.  v5:= v3.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L44031c.  call `set`(v5, v7, v4) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L440322.  return @kind void;
}
procedure `java.lang.Object` `o`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.core.Label` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.o:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L43fea8.  v0:= v2.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L43feac.  call temp:= `getConverter`(v5, v0) @signature `Lorg/simpleframework/xml/core/Label;.getConverter:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @kind interface;
  #L43feb2.  v0:= temp @kind object;
  #L43feb4.  call temp:= `isCollection`(v5) @signature `Lorg/simpleframework/xml/core/Label;.isCollection:()Z` @kind interface;
  #L43feba.  v1:= temp;
  #L43febc.  if v1 == 0 then goto L43ff04;
  #L43fec0.  v1:= v2.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L43fec4.  call temp:= `get`(v1, v5) @signature `Lorg/simpleframework/xml/core/Criteria;.get:(Lorg/simpleframework/xml/core/Label;)Lorg/simpleframework/xml/core/Variable;` @kind interface;
  #L43feca.  v1:= temp @kind object;
  #L43fecc.  call temp:= `getContact`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L43fed2.  v5:= temp @kind object;
  #L43fed4.  if v1 == 0 then goto L43feea;
  #L43fed8.  call temp:= `getValue`(v1) @signature `Lorg/simpleframework/xml/core/Variable;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L43fede.  v4:= temp @kind object;
  #L43fee0.  call temp:= `read`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Converter;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43fee6.  v3:= temp @kind object;
  #L43fee8.  return v3 @kind object;
  #L43feea.  if v4 == 0 then goto L43ff04;
  #L43feee.  call temp:= `get`(v5, v4) @signature `Lorg/simpleframework/xml/core/Contact;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43fef4.  v4:= temp @kind object;
  #L43fef6.  if v4 == 0 then goto L43ff04;
  #L43fefa.  call temp:= `read`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Converter;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43ff00.  v3:= temp @kind object;
  #L43ff02.  return v3 @kind object;
  #L43ff04.  call temp:= `read`(v0, v3) @signature `Lorg/simpleframework/xml/core/Converter;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind interface;
  #L43ff0a.  v3:= temp @kind object;
  #L43ff0c.  return v3 @kind object;
}
procedure `void` `p`(`org.simpleframework.xml.core.Composite` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.core.Label` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.p:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;

  #L440334.  call temp:= `i`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.i:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)Ljava/lang/Object;` @kind direct;
  #L44033a.  v1:= temp @kind object;
  #L44033c.  v2:= v0.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L440340.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L440346.  v2:= temp @kind object;
  #L440348.  if v1 == 0 then goto L440382;
  #L44034c.  v3:= v0.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L440350.  call temp:= `getVersion`(v3, v2) @signature `Lorg/simpleframework/xml/core/Context;.getVersion:(Ljava/lang/Class;)Lorg/simpleframework/xml/Version;` @kind interface;
  #L440356.  v2:= temp @kind object;
  #L440358.  call temp:= `revision`(v2) @signature `Lorg/simpleframework/xml/Version;.revision:()D` @kind interface;
  #L44035e.  v2:= temp @kind wide;
  #L440360.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L440366.  v2:= temp @kind object;
  #L440368.  v3:= v0.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L44036c.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L440372.  v3:= temp;
  #L440374.  if v3 != 0 then goto L440382;
  #L440378.  v3:= v0.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L44037c.  call temp:= `compare`(v3, v2, v1) @signature `Lorg/simpleframework/xml/core/Revision;.compare:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L440382.  return @kind void;
}
procedure `void` `q`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.core.Schema` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.q:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L440394.  call temp:= `getVersion`(v5) @signature `Lorg/simpleframework/xml/core/Schema;.getVersion:()Lorg/simpleframework/xml/core/Label;` @kind interface;
  #L44039a.  v5:= temp @kind object;
  #L44039c.  v0:= v2.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L4403a0.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L4403a6.  v0:= temp @kind object;
  #L4403a8.  if v5 == 0 then goto L440418;
  #L4403ac.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L4403b2.  v1:= temp @kind object;
  #L4403b4.  call temp:= `getAttributes`(v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttributes:()Lorg/simpleframework/xml/stream/NodeMap;` @kind interface;
  #L4403ba.  v3:= temp @kind object;
  #L4403bc.  call temp:= `remove`(v3, v1) @signature `Lorg/simpleframework/xml/stream/NodeMap;.remove:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L4403c2.  v3:= temp @kind object;
  #L4403c4.  v3:= (`org.simpleframework.xml.stream.InputNode`) v3 @kind object;
  #L4403c8.  if v3 == 0 then goto L4403d4;
  #L4403cc.  call `p`(v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/Composite;.p:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L4403d2.  goto L440418;
  #L4403d4.  v3:= v2.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L4403d8.  call temp:= `getVersion`(v3, v0) @signature `Lorg/simpleframework/xml/core/Context;.getVersion:(Ljava/lang/Class;)Lorg/simpleframework/xml/Version;` @kind interface;
  #L4403de.  v3:= temp @kind object;
  #L4403e0.  v4:= v2.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L4403e4.  call temp:= `getDefault`(v4) @signature `Lorg/simpleframework/xml/core/Revision;.getDefault:()D` @kind virtual;
  #L4403ea.  v0:= temp @kind wide;
  #L4403ec.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L4403f2.  v4:= temp @kind object;
  #L4403f4.  call temp:= `revision`(v3) @signature `Lorg/simpleframework/xml/Version;.revision:()D` @kind interface;
  #L4403fa.  v0:= temp @kind wide;
  #L4403fc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L440402.  v3:= temp @kind object;
  #L440404.  v0:= v2.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L440408.  call `set`(v0, v5, v4) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L44040e.  v5:= v2.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L440412.  call temp:= `compare`(v5, v3, v4) @signature `Lorg/simpleframework/xml/core/Revision;.compare:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L440418.  return @kind void;
}
procedure `void` `r`(`org.simpleframework.xml.core.Composite` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object, `org.simpleframework.xml.core.Label` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.r:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L44042c.  v0:= v4.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L440430.  call temp:= `getConverter`(v6, v0) @signature `Lorg/simpleframework/xml/core/Label;.getConverter:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @kind interface;
  #L440436.  v0:= temp @kind object;
  #L440438.  call temp:= `getPosition`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L44043e.  v1:= temp @kind object;
  #L440440.  v2:= v4.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L440444.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L44044a.  v2:= temp @kind object;
  #L44044c.  call temp:= `validate`(v0, v5) @signature `Lorg/simpleframework/xml/core/Converter;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind interface;
  #L440452.  v5:= temp;
  #L440454.  if v5 == 0 then goto L440466;
  #L440458.  v5:= v4.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L44045c.  v0:= 0I;
  #L44045e.  call `set`(v5, v6, v0) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L440464.  return @kind void;
  #L440466.  v5:= new `org.simpleframework.xml.core.PersistenceException`;
  #L44046a.  v0:= 3I;
  #L44046c.  v0:= new `java.lang.Object`[v0];
  #L440470.  v3:= 0I;
  #L440472.  v0[v3]:= v6 @kind object;
  #L440476.  v6:= 1I;
  #L440478.  v0[v6]:= v2 @kind object;
  #L44047c.  v6:= 2I;
  #L44047e.  v0[v6]:= v1 @kind object;
  #L440482.  v6:= "Invalid value for %s in %s at %s" @kind object;
  #L440486.  call `<init>`(v5, v6, v0) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44048c.  throw v5;
}
procedure `void` `s`(`org.simpleframework.xml.core.Composite` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.s:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4404a0.  call temp:= `getPosition`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L4404a6.  v5:= temp @kind object;
  #L4404a8.  call temp:= `iterator`(v6) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4404ae.  v6:= temp @kind object;
  #L4404b0.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4404b6.  v0:= temp;
  #L4404b8.  if v0 == 0 then goto L44051a;
  #L4404bc.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4404c2.  v0:= temp @kind object;
  #L4404c4.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L4404c8.  v1:= v4.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L4404cc.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L4404d2.  v1:= temp @kind object;
  #L4404d4.  call temp:= `isRequired`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L4404da.  v2:= temp;
  #L4404dc.  if v2 == 0 then goto L4404b0;
  #L4404e0.  v2:= v4.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L4404e4.  call temp:= `isEqual`(v2) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L4404ea.  v2:= temp;
  #L4404ec.  if v2 != 0 then goto L4404f2;
  #L4404f0.  goto L4404b0;
  #L4404f2.  v6:= new `org.simpleframework.xml.core.ValueRequiredException`;
  #L4404f6.  v2:= 3I;
  #L4404f8.  v2:= new `java.lang.Object`[v2];
  #L4404fc.  v3:= 0I;
  #L4404fe.  v2[v3]:= v0 @kind object;
  #L440502.  v0:= 1I;
  #L440504.  v2[v0]:= v1 @kind object;
  #L440508.  v0:= 2I;
  #L44050a.  v2[v0]:= v5 @kind object;
  #L44050e.  v5:= "Unable to satisfy %s for %s at %s" @kind object;
  #L440512.  call `<init>`(v6, v5, v2) @signature `Lorg/simpleframework/xml/core/ValueRequiredException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L440518.  throw v6;
  #L44051a.  return @kind void;
}
procedure `void` `t`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `org.simpleframework.xml.core.LabelMap` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.t:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L44052c.  v0:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L440530.  v1:= v3.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L440534.  call temp:= `getType`(v0, v1, v6) @signature `Lorg/simpleframework/xml/core/Context;.getType:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;)Ljava/lang/Class;` @kind interface;
  #L44053a.  v6:= temp @kind object;
  #L44053c.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L440542.  v4:= temp @kind object;
  #L440544.  call temp:= `iterator`(v5) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L44054a.  v5:= temp @kind object;
  #L44054c.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L440552.  v0:= temp;
  #L440554.  if v0 == 0 then goto L4405c6;
  #L440558.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L44055e.  v0:= temp @kind object;
  #L440560.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L440564.  call temp:= `isRequired`(v0) @signature `Lorg/simpleframework/xml/core/Label;.isRequired:()Z` @kind interface;
  #L44056a.  v1:= temp;
  #L44056c.  if v1 == 0 then goto L4405aa;
  #L440570.  v1:= v3.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L440574.  call temp:= `isEqual`(v1) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L44057a.  v1:= temp;
  #L44057c.  if v1 != 0 then goto L440582;
  #L440580.  goto L4405aa;
  #L440582.  v5:= new `org.simpleframework.xml.core.ValueRequiredException`;
  #L440586.  v1:= 3I;
  #L440588.  v1:= new `java.lang.Object`[v1];
  #L44058c.  v2:= 0I;
  #L44058e.  v1[v2]:= v0 @kind object;
  #L440592.  v0:= 1I;
  #L440594.  v1[v0]:= v6 @kind object;
  #L440598.  v6:= 2I;
  #L44059a.  v1[v6]:= v4 @kind object;
  #L44059e.  v4:= "Unable to satisfy %s for %s at %s" @kind object;
  #L4405a2.  call `<init>`(v5, v4, v1) @signature `Lorg/simpleframework/xml/core/ValueRequiredException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L4405a8.  throw v5;
  #L4405aa.  v1:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L4405ae.  call temp:= `getEmpty`(v0, v1) @signature `Lorg/simpleframework/xml/core/Label;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @kind interface;
  #L4405b4.  v1:= temp @kind object;
  #L4405b6.  if v1 == 0 then goto L44054c;
  #L4405ba.  v2:= v3.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L4405be.  call `set`(v2, v0, v1) @signature `Lorg/simpleframework/xml/core/Criteria;.set:(Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @kind interface;
  #L4405c4.  goto L44054c;
  #L4405c6.  return @kind void;
}
procedure `boolean` `u`(`org.simpleframework.xml.core.Composite` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.u:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43fc30.  v0:= v1.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L43fc34.  call temp:= `getSchema`(v0, v3) @signature `Lorg/simpleframework/xml/core/Context;.getSchema:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Schema;` @kind interface;
  #L43fc3a.  v3:= temp @kind object;
  #L43fc3c.  call temp:= `getSection`(v3) @signature `Lorg/simpleframework/xml/core/Schema;.getSection:()Lorg/simpleframework/xml/core/Section;` @kind interface;
  #L43fc42.  v0:= temp @kind object;
  #L43fc44.  call `A`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Composite;.A:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Schema;)V` @kind direct;
  #L43fc4a.  call `z`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Composite;.z:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L43fc50.  call temp:= `isElement`(v2) @signature `Lorg/simpleframework/xml/stream/InputNode;.isElement:()Z` @kind interface;
  #L43fc56.  v2:= temp;
  #L43fc58.  return v2;
}
procedure `void` `v`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.v:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4405d8.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L4405de.  v0:= temp @kind object;
  #L4405e0.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L4405e6.  v1:= temp @kind object;
  #L4405e8.  call temp:= `getAttribute`(v5, v1) @signature `Lorg/simpleframework/xml/core/Section;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L4405ee.  v5:= temp @kind object;
  #L4405f0.  call temp:= `getLabel`(v6, v5) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L4405f6.  v1:= temp @kind object;
  #L4405f8.  if v1 != 0 then goto L440652;
  #L4405fc.  v4:= v3.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L440600.  call temp:= `getType`(v4) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L440606.  v4:= temp @kind object;
  #L440608.  v1:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L44060c.  call temp:= `isStrict`(v6, v1) @signature `Lorg/simpleframework/xml/core/LabelMap;.isStrict:(Lorg/simpleframework/xml/core/Context;)Z` @kind virtual;
  #L440612.  v6:= temp;
  #L440614.  if v6 == 0 then goto L440658;
  #L440618.  v6:= v3.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L44061c.  call temp:= `isEqual`(v6) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L440622.  v6:= temp;
  #L440624.  if v6 != 0 then goto L44062a;
  #L440628.  goto L440658;
  #L44062a.  v6:= new `org.simpleframework.xml.core.AttributeException`;
  #L44062e.  v1:= 3I;
  #L440630.  v1:= new `java.lang.Object`[v1];
  #L440634.  v2:= 0I;
  #L440636.  v1[v2]:= v5 @kind object;
  #L44063a.  v5:= 1I;
  #L44063c.  v1[v5]:= v4 @kind object;
  #L440640.  v4:= 2I;
  #L440642.  v1[v4]:= v0 @kind object;
  #L440646.  v4:= "Attribute '%s' does not exist for %s at %s" @kind object;
  #L44064a.  call `<init>`(v6, v4, v1) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L440650.  throw v6;
  #L440652.  call `r`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/Composite;.r:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L440658.  return @kind void;
}
procedure `void` `w`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.w:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L44066c.  call temp:= `getAttributes`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttributes:()Lorg/simpleframework/xml/stream/NodeMap;` @kind interface;
  #L440672.  v0:= temp @kind object;
  #L440674.  call temp:= `getAttributes`(v5) @signature `Lorg/simpleframework/xml/core/Section;.getAttributes:()Lorg/simpleframework/xml/core/LabelMap;` @kind interface;
  #L44067a.  v1:= temp @kind object;
  #L44067c.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/stream/NodeMap;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L440682.  v0:= temp @kind object;
  #L440684.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L44068a.  v2:= temp;
  #L44068c.  if v2 == 0 then goto L4406b0;
  #L440690.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L440696.  v2:= temp @kind object;
  #L440698.  v2:= (`java.lang.String`) v2 @kind object;
  #L44069c.  call temp:= `getAttribute`(v4, v2) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttribute:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L4406a2.  v2:= temp @kind object;
  #L4406a4.  if v2 == 0 then goto L440684;
  #L4406a8.  call `v`(v3, v2, v5, v1) @signature `Lorg/simpleframework/xml/core/Composite;.v:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L4406ae.  goto L440684;
  #L4406b0.  call `s`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/Composite;.s:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L4406b6.  return @kind void;
}
procedure `void` `x`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object, `org.simpleframework.xml.core.LabelMap` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.x:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4406c8.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L4406ce.  v0:= temp @kind object;
  #L4406d0.  call temp:= `getPath`(v5, v0) @signature `Lorg/simpleframework/xml/core/Section;.getPath:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L4406d6.  v5:= temp @kind object;
  #L4406d8.  call temp:= `getLabel`(v6, v5) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L4406de.  v0:= temp @kind object;
  #L4406e0.  if v0 != 0 then goto L4406f0;
  #L4406e4.  v0:= v3.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L4406e8.  call temp:= `resolve`(v0, v5) @signature `Lorg/simpleframework/xml/core/Criteria;.resolve:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Variable;` @kind interface;
  #L4406ee.  v0:= temp @kind object;
  #L4406f0.  if v0 != 0 then goto L44075a;
  #L4406f4.  call temp:= `getPosition`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L4406fa.  v0:= temp @kind object;
  #L4406fc.  v1:= v3.`org.simpleframework.xml.core.Composite.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L440700.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L440706.  v1:= temp @kind object;
  #L440708.  v2:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L44070c.  call temp:= `isStrict`(v6, v2) @signature `Lorg/simpleframework/xml/core/LabelMap;.isStrict:(Lorg/simpleframework/xml/core/Context;)Z` @kind virtual;
  #L440712.  v6:= temp;
  #L440714.  if v6 == 0 then goto L440752;
  #L440718.  v6:= v3.`org.simpleframework.xml.core.Composite.d` @type ^`org.simpleframework.xml.core.Revision` @kind object;
  #L44071c.  call temp:= `isEqual`(v6) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @kind virtual;
  #L440722.  v6:= temp;
  #L440724.  if v6 != 0 then goto L44072a;
  #L440728.  goto L440752;
  #L44072a.  v4:= new `org.simpleframework.xml.core.ElementException`;
  #L44072e.  v6:= 3I;
  #L440730.  v6:= new `java.lang.Object`[v6];
  #L440734.  v2:= 0I;
  #L440736.  v6[v2]:= v5 @kind object;
  #L44073a.  v5:= 1I;
  #L44073c.  v6[v5]:= v1 @kind object;
  #L440740.  v5:= 2I;
  #L440742.  v6[v5]:= v0 @kind object;
  #L440746.  v5:= "Element '%s' does not exist for %s at %s" @kind object;
  #L44074a.  call `<init>`(v4, v5, v6) @signature `Lorg/simpleframework/xml/core/ElementException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L440750.  throw v4;
  #L440752.  call `skip`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.skip:()V` @kind interface;
  #L440758.  goto L440760;
  #L44075a.  call `B`(v3, v4, v6, v0) @signature `Lorg/simpleframework/xml/core/Composite;.B:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L440760.  return @kind void;
}
procedure `void` `y`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `org.simpleframework.xml.core.Section` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.y:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L440774.  call temp:= `getElements`(v5) @signature `Lorg/simpleframework/xml/core/Section;.getElements:()Lorg/simpleframework/xml/core/LabelMap;` @kind interface;
  #L44077a.  v0:= temp @kind object;
  #L44077c.  call temp:= `getNext`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L440782.  v1:= temp @kind object;
  #L440784.  if v1 == 0 then goto L4407b4;
  #L440788.  call temp:= `getName`(v1) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L44078e.  v2:= temp @kind object;
  #L440790.  call temp:= `getSection`(v5, v2) @signature `Lorg/simpleframework/xml/core/Section;.getSection:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Section;` @kind interface;
  #L440796.  v2:= temp @kind object;
  #L440798.  if v2 == 0 then goto L4407a4;
  #L44079c.  call `z`(v3, v1, v2) @signature `Lorg/simpleframework/xml/core/Composite;.z:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L4407a2.  goto L4407aa;
  #L4407a4.  call `x`(v3, v1, v5, v0) @signature `Lorg/simpleframework/xml/core/Composite;.x:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L4407aa.  call temp:= `getNext`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L4407b0.  v1:= temp @kind object;
  #L4407b2.  goto L440784;
  #L4407b4.  call `s`(v3, v4, v0) @signature `Lorg/simpleframework/xml/core/Composite;.s:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L4407ba.  return @kind void;
}
procedure `void` `z`(`org.simpleframework.xml.core.Composite` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `org.simpleframework.xml.core.Section` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.z:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @AccessFlag PRIVATE {
    temp;

  #L4407cc.  call `w`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/Composite;.w:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L4407d2.  call `y`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/Composite;.y:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Section;)V` @kind direct;
  #L4407d8.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L43fc6c.  v0:= v3.`org.simpleframework.xml.core.Composite.a` @type ^`org.simpleframework.xml.core.ObjectFactory` @kind object;
  #L43fc70.  call temp:= `getInstance`(v0, v4) @signature `Lorg/simpleframework/xml/core/ObjectFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L43fc76.  v0:= temp @kind object;
  #L43fc78.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getType:()Ljava/lang/Class;` @kind interface;
  #L43fc7e.  v1:= temp @kind object;
  #L43fc80.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L43fc86.  v2:= temp;
  #L43fc88.  if v2 == 0 then goto L43fc96;
  #L43fc8c.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getInstance:()Ljava/lang/Object;` @kind interface;
  #L43fc92.  v4:= temp @kind object;
  #L43fc94.  return v4 @kind object;
  #L43fc96.  v2:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L43fc9a.  call temp:= `isPrimitive`(v2, v1) @signature `Lorg/simpleframework/xml/core/Context;.isPrimitive:(Ljava/lang/Class;)Z` @kind interface;
  #L43fca0.  v2:= temp;
  #L43fca2.  if v2 == 0 then goto L43fcb0;
  #L43fca6.  call temp:= `j`(v3, v4, v0) @signature `Lorg/simpleframework/xml/core/Composite;.j:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Instance;)Ljava/lang/Object;` @kind direct;
  #L43fcac.  v4:= temp @kind object;
  #L43fcae.  return v4 @kind object;
  #L43fcb0.  call temp:= `b`(v3, v4, v0, v1) @signature `Lorg/simpleframework/xml/core/Composite;.b:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Instance;Ljava/lang/Class;)Ljava/lang/Object;` @kind direct;
  #L43fcb6.  v4:= temp @kind object;
  #L43fcb8.  return v4 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43fccc.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L43fcd2.  v0:= temp @kind object;
  #L43fcd4.  v1:= v2.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L43fcd8.  call temp:= `getSchema`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getSchema:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Schema;` @kind interface;
  #L43fcde.  v0:= temp @kind object;
  #L43fce0.  call temp:= `getCaller`(v0) @signature `Lorg/simpleframework/xml/core/Schema;.getCaller:()Lorg/simpleframework/xml/core/Caller;` @kind interface;
  #L43fce6.  v1:= temp @kind object;
  #L43fce8.  call `d`(v2, v3, v4, v0) @signature `Lorg/simpleframework/xml/core/Composite;.d:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @kind direct;
  #L43fcee.  v0:= v2.`org.simpleframework.xml.core.Composite.c` @type ^`org.simpleframework.xml.core.Criteria` @kind object;
  #L43fcf2.  call `commit`(v0, v4) @signature `Lorg/simpleframework/xml/core/Criteria;.commit:(Ljava/lang/Object;)V` @kind interface;
  #L43fcf8.  call `validate`(v1, v4) @signature `Lorg/simpleframework/xml/core/Caller;.validate:(Ljava/lang/Object;)V` @kind virtual;
  #L43fcfe.  call `commit`(v1, v4) @signature `Lorg/simpleframework/xml/core/Caller;.commit:(Ljava/lang/Object;)V` @kind virtual;
  #L43fd04.  call temp:= `k`(v2, v3, v4, v1) @signature `Lorg/simpleframework/xml/core/Composite;.k:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Caller;)Ljava/lang/Object;` @kind direct;
  #L43fd0a.  v3:= temp @kind object;
  #L43fd0c.  return v3 @kind object;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.Composite` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43fbe8.  v0:= v2.`org.simpleframework.xml.core.Composite.a` @type ^`org.simpleframework.xml.core.ObjectFactory` @kind object;
  #L43fbec.  call temp:= `getInstance`(v0, v3) @signature `Lorg/simpleframework/xml/core/ObjectFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L43fbf2.  v0:= temp @kind object;
  #L43fbf4.  call temp:= `isReference`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.isReference:()Z` @kind interface;
  #L43fbfa.  v1:= temp;
  #L43fbfc.  if v1 != 0 then goto L43fc1a;
  #L43fc00.  v1:= 0I;
  #L43fc02.  call temp:= `setInstance`(v0, v1) @signature `Lorg/simpleframework/xml/core/Instance;.setInstance:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L43fc08.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/core/Instance;.getType:()Ljava/lang/Class;` @kind interface;
  #L43fc0e.  v0:= temp @kind object;
  #L43fc10.  call temp:= `u`(v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Composite;.u:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind direct;
  #L43fc16.  v3:= temp;
  #L43fc18.  return v3;
  #L43fc1a.  v3:= 1I;
  #L43fc1c.  return v3;
}
procedure `void` `write`(`org.simpleframework.xml.core.Composite` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Composite;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L440860.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L440866.  v0:= temp @kind object;
  #L440868.  v1:= v3.`org.simpleframework.xml.core.Composite.e` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L44086c.  call temp:= `getSchema`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getSchema:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Schema;` @kind interface;
  #L440872.  v0:= temp @kind object;
  #L440874.  call temp:= `getCaller`(v0) @signature `Lorg/simpleframework/xml/core/Schema;.getCaller:()Lorg/simpleframework/xml/core/Caller;` @kind interface;
  #L44087a.  v1:= temp @kind object;
  #L44087c.  call temp:= `isPrimitive`(v0) @signature `Lorg/simpleframework/xml/core/Schema;.isPrimitive:()Z` @kind interface;
  #L440882.  v2:= temp;
  #L440884.  if v2 == 0 then goto L440894;
  #L440888.  v0:= v3.`org.simpleframework.xml.core.Composite.b` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L44088c.  call `write`(v0, v4, v5) @signature `Lorg/simpleframework/xml/core/Primitive;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind virtual;
  #L440892.  goto L4408a0;
  #L440894.  call `persist`(v1, v5) @signature `Lorg/simpleframework/xml/core/Caller;.persist:(Ljava/lang/Object;)V` @kind virtual;
  #L44089a.  call `C`(v3, v4, v5, v0) @signature `Lorg/simpleframework/xml/core/Composite;.C:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/core/Schema;)V` @kind direct;
  #L4408a0.  call `complete`(v1, v5) @signature `Lorg/simpleframework/xml/core/Caller;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4408a6.  return @kind void;
  #L4408a8.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4408aa.  call `complete`(v1, v5) @signature `Lorg/simpleframework/xml/core/Caller;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L4408b0.  throw v4;
  catch `java.lang.Throwable` @[L44087c..L4408a0] goto L4408a8;
}
