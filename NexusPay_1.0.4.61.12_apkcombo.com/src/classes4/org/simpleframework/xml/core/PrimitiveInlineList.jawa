record `org.simpleframework.xml.core.PrimitiveInlineList` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Repeater` @kind interface {
  `org.simpleframework.xml.core.CollectionFactory` `org.simpleframework.xml.core.PrimitiveInlineList.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Primitive` `org.simpleframework.xml.core.PrimitiveInlineList.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.core.PrimitiveInlineList.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.PrimitiveInlineList.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.PrimitiveInlineList` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveInlineList;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44b4d0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44b4d6.  v0:= new `org.simpleframework.xml.core.CollectionFactory`;
  #L44b4da.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L44b4e0.  v1.`org.simpleframework.xml.core.PrimitiveInlineList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` := v0 @kind object;
  #L44b4e4.  v3:= new `org.simpleframework.xml.core.Primitive`;
  #L44b4e8.  call `<init>`(v3, v2, v4) @signature `Lorg/simpleframework/xml/core/Primitive;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L44b4ee.  v1.`org.simpleframework.xml.core.PrimitiveInlineList.b` @type ^`org.simpleframework.xml.core.Primitive` := v3 @kind object;
  #L44b4f2.  v1.`org.simpleframework.xml.core.PrimitiveInlineList.c` @type ^`java.lang.String` := v5 @kind object;
  #L44b4f6.  v1.`org.simpleframework.xml.core.PrimitiveInlineList.d` @type ^`org.simpleframework.xml.strategy.Type` := v4 @kind object;
  #L44b4fa.  return @kind void;
}
procedure `boolean` `a`(`org.simpleframework.xml.core.PrimitiveInlineList` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveInlineList;.a:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L44b3c0.  v0:= v2.`org.simpleframework.xml.core.PrimitiveInlineList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` @kind object;
  #L44b3c4.  v1:= v2.`org.simpleframework.xml.core.PrimitiveInlineList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L44b3c8.  call temp:= `setOverride`(v0, v1, v4, v3) @signature `Lorg/simpleframework/xml/core/Factory;.setOverride:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/OutputNode;)Z` @kind virtual;
  #L44b3ce.  v3:= temp;
  #L44b3d0.  return v3;
}
procedure `java.lang.Object` `b`(`org.simpleframework.xml.core.PrimitiveInlineList` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.util.Collection` v5 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveInlineList;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/util/Collection;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L44b488.  call temp:= `getParent`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getParent:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L44b48e.  v0:= temp @kind object;
  #L44b490.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L44b496.  v1:= temp @kind object;
  #L44b498.  if v4 == 0 then goto L44b4bc;
  #L44b49c.  v2:= v3.`org.simpleframework.xml.core.PrimitiveInlineList.b` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L44b4a0.  call temp:= `read`(v2, v4) @signature `Lorg/simpleframework/xml/core/Primitive;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L44b4a6.  v4:= temp @kind object;
  #L44b4a8.  if v4 == 0 then goto L44b4b2;
  #L44b4ac.  call temp:= `add`(v5, v4) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L44b4b2.  call temp:= `getNext`(v0, v1) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L44b4b8.  v4:= temp @kind object;
  #L44b4ba.  goto L44b498;
  #L44b4bc.  return v5 @kind object;
}
procedure `void` `c`(`org.simpleframework.xml.core.PrimitiveInlineList` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object, `org.simpleframework.xml.stream.Mode` v6 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveInlineList;.c:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/stream/Mode;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L44b548.  v5:= (`java.util.Collection`) v5 @kind object;
  #L44b54c.  call temp:= `iterator`(v5) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L44b552.  v5:= temp @kind object;
  #L44b554.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L44b55a.  v0:= temp;
  #L44b55c.  if v0 == 0 then goto L44b596;
  #L44b560.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L44b566.  v0:= temp @kind object;
  #L44b568.  if v0 == 0 then goto L44b554;
  #L44b56c.  v1:= v3.`org.simpleframework.xml.core.PrimitiveInlineList.c` @type ^`java.lang.String` @kind object;
  #L44b570.  call temp:= `getChild`(v4, v1) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getChild:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L44b576.  v1:= temp @kind object;
  #L44b578.  call temp:= `a`(v3, v1, v0) @signature `Lorg/simpleframework/xml/core/PrimitiveInlineList;.a:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)Z` @kind direct;
  #L44b57e.  v2:= temp;
  #L44b580.  if v2 != 0 then goto L44b554;
  #L44b584.  call `setMode`(v1, v6) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setMode:(Lorg/simpleframework/xml/stream/Mode;)V` @kind interface;
  #L44b58a.  v2:= v3.`org.simpleframework.xml.core.PrimitiveInlineList.b` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L44b58e.  call `write`(v2, v1, v0) @signature `Lorg/simpleframework/xml/core/Primitive;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind virtual;
  #L44b594.  goto L44b554;
  #L44b596.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.PrimitiveInlineList` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveInlineList;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44b42c.  v0:= v1.`org.simpleframework.xml.core.PrimitiveInlineList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` @kind object;
  #L44b430.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.getInstance:()Ljava/lang/Object;` @kind virtual;
  #L44b436.  v0:= temp @kind object;
  #L44b438.  v0:= (`java.util.Collection`) v0 @kind object;
  #L44b43c.  if v0 == 0 then goto L44b448;
  #L44b440.  call temp:= `b`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/PrimitiveInlineList;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/util/Collection;)Ljava/lang/Object;` @kind direct;
  #L44b446.  return v0 @kind object;
  #L44b448.  v2:= 0I;
  #L44b44a.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.PrimitiveInlineList` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveInlineList;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L44b45c.  v2:= (`java.util.Collection`) v2 @kind object;
  #L44b460.  if v2 == 0 then goto L44b46c;
  #L44b464.  call temp:= `b`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/PrimitiveInlineList;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/util/Collection;)Ljava/lang/Object;` @kind direct;
  #L44b46a.  return v2 @kind object;
  #L44b46c.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/core/PrimitiveInlineList;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L44b472.  v1:= temp @kind object;
  #L44b474.  return v1 @kind object;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.PrimitiveInlineList` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveInlineList;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L44b3e4.  call temp:= `getParent`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getParent:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L44b3ea.  v0:= temp @kind object;
  #L44b3ec.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L44b3f2.  v1:= temp @kind object;
  #L44b3f4.  if v4 == 0 then goto L44b416;
  #L44b3f8.  v2:= v3.`org.simpleframework.xml.core.PrimitiveInlineList.b` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L44b3fc.  call temp:= `validate`(v2, v4) @signature `Lorg/simpleframework/xml/core/Primitive;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind virtual;
  #L44b402.  v4:= temp;
  #L44b404.  if v4 != 0 then goto L44b40c;
  #L44b408.  v4:= 0I;
  #L44b40a.  return v4;
  #L44b40c.  call temp:= `getNext`(v0, v1) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L44b412.  v4:= temp @kind object;
  #L44b414.  goto L44b3f4;
  #L44b416.  v4:= 1I;
  #L44b418.  return v4;
}
procedure `void` `write`(`org.simpleframework.xml.core.PrimitiveInlineList` v3 @kind this, `org.simpleframework.xml.stream.OutputNode` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveInlineList;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L44b50c.  call temp:= `getParent`(v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getParent:()Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L44b512.  v0:= temp @kind object;
  #L44b514.  call temp:= `getMode`(v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getMode:()Lorg/simpleframework/xml/stream/Mode;` @kind interface;
  #L44b51a.  v1:= temp @kind object;
  #L44b51c.  call temp:= `isCommitted`(v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.isCommitted:()Z` @kind interface;
  #L44b522.  v2:= temp;
  #L44b524.  if v2 != 0 then goto L44b52e;
  #L44b528.  call `remove`(v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.remove:()V` @kind interface;
  #L44b52e.  call `c`(v3, v0, v5, v1) @signature `Lorg/simpleframework/xml/core/PrimitiveInlineList;.c:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Lorg/simpleframework/xml/stream/Mode;)V` @kind direct;
  #L44b534.  return @kind void;
}
