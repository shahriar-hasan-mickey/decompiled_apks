record `org.simpleframework.xml.core.ConstructorScanner` @kind class @AccessFlag PUBLIC {
  `java.util.List` `org.simpleframework.xml.core.ConstructorScanner.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.ParameterMap` `org.simpleframework.xml.core.ConstructorScanner.b` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Signature` `org.simpleframework.xml.core.ConstructorScanner.c` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Support` `org.simpleframework.xml.core.ConstructorScanner.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ConstructorScanner` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object, `org.simpleframework.xml.core.Support` v3 @kind object) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L440e18.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L440e1e.  v0:= new `java.util.ArrayList`;
  #L440e22.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L440e28.  v1.`org.simpleframework.xml.core.ConstructorScanner.a` @type ^`java.util.List` := v0 @kind object;
  #L440e2c.  v0:= new `org.simpleframework.xml.core.ParameterMap`;
  #L440e30.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/ParameterMap;.<init>:()V` @kind direct;
  #L440e36.  v1.`org.simpleframework.xml.core.ConstructorScanner.b` @type ^`org.simpleframework.xml.core.ParameterMap` := v0 @kind object;
  #L440e3a.  v1.`org.simpleframework.xml.core.ConstructorScanner.d` @type ^`org.simpleframework.xml.core.Support` := v3 @kind object;
  #L440e3e.  call `b`(v1, v2) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.b:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L440e44.  return @kind void;
}
procedure `void` `a`(`org.simpleframework.xml.core.ConstructorScanner` v3 @kind this, `java.lang.reflect.Constructor` v4 @kind object) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.a:(Ljava/lang/reflect/Constructor;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L440e58.  v0:= new `org.simpleframework.xml.core.SignatureScanner`;
  #L440e5c.  v1:= v3.`org.simpleframework.xml.core.ConstructorScanner.b` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L440e60.  v2:= v3.`org.simpleframework.xml.core.ConstructorScanner.d` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L440e64.  call `<init>`(v0, v4, v1, v2) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.<init>:(Ljava/lang/reflect/Constructor;Lorg/simpleframework/xml/core/ParameterMap;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L440e6a.  call temp:= `isValid`(v0) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.isValid:()Z` @kind virtual;
  #L440e70.  v4:= temp;
  #L440e72.  if v4 == 0 then goto L440eba;
  #L440e76.  call temp:= `getSignatures`(v0) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.getSignatures:()Ljava/util/List;` @kind virtual;
  #L440e7c.  v4:= temp @kind object;
  #L440e7e.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L440e84.  v4:= temp @kind object;
  #L440e86.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L440e8c.  v0:= temp;
  #L440e8e.  if v0 == 0 then goto L440eba;
  #L440e92.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L440e98.  v0:= temp @kind object;
  #L440e9a.  v0:= (`org.simpleframework.xml.core.Signature`) v0 @kind object;
  #L440e9e.  call temp:= `size`(v0) @signature `Lorg/simpleframework/xml/core/Signature;.size:()I` @kind virtual;
  #L440ea4.  v1:= temp;
  #L440ea6.  if v1 != 0 then goto L440eae;
  #L440eaa.  v3.`org.simpleframework.xml.core.ConstructorScanner.c` @type ^`org.simpleframework.xml.core.Signature` := v0 @kind object;
  #L440eae.  v1:= v3.`org.simpleframework.xml.core.ConstructorScanner.a` @type ^`java.util.List` @kind object;
  #L440eb2.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L440eb8.  goto L440e86;
  #L440eba.  return @kind void;
}
procedure `void` `b`(`org.simpleframework.xml.core.ConstructorScanner` v5 @kind this, `org.simpleframework.xml.core.Detail` v6 @kind object) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.b:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L440ecc.  call temp:= `getConstructors`(v6) @signature `Lorg/simpleframework/xml/core/Detail;.getConstructors:()[Ljava/lang/reflect/Constructor;` @kind interface;
  #L440ed2.  v0:= temp @kind object;
  #L440ed4.  call temp:= `isInstantiable`(v6) @signature `Lorg/simpleframework/xml/core/Detail;.isInstantiable:()Z` @kind interface;
  #L440eda.  v1:= temp;
  #L440edc.  v2:= 0I;
  #L440ede.  if v1 == 0 then goto L440f06;
  #L440ee2.  v1:= length @variable v0;
  #L440ee4.  if v2 >= v1 then goto L440f04;
  #L440ee8.  v3:= v0[v2] @kind object;
  #L440eec.  call temp:= `isPrimitive`(v6) @signature `Lorg/simpleframework/xml/core/Detail;.isPrimitive:()Z` @kind interface;
  #L440ef2.  v4:= temp;
  #L440ef4.  if v4 != 0 then goto L440efe;
  #L440ef8.  call `a`(v5, v3) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.a:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L440efe.  v2:= v2 + 1;
  #L440f02.  goto L440ee4;
  #L440f04.  return @kind void;
  #L440f06.  v0:= new `org.simpleframework.xml.core.ConstructorException`;
  #L440f0a.  v1:= 1I;
  #L440f0c.  v1:= new `java.lang.Object`[v1];
  #L440f10.  v1[v2]:= v6 @kind object;
  #L440f14.  v6:= "Can not construct inner %s" @kind object;
  #L440f18.  call `<init>`(v0, v6, v1) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L440f1e.  throw v0;
}
procedure `org.simpleframework.xml.core.ParameterMap` `getParameters`(`org.simpleframework.xml.core.ConstructorScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.getParameters:()Lorg/simpleframework/xml/core/ParameterMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L440de8.  v0:= v1.`org.simpleframework.xml.core.ConstructorScanner.b` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L440dec.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Signature` `getSignature`(`org.simpleframework.xml.core.ConstructorScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.getSignature:()Lorg/simpleframework/xml/core/Signature;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L440e00.  v0:= v1.`org.simpleframework.xml.core.ConstructorScanner.c` @type ^`org.simpleframework.xml.core.Signature` @kind object;
  #L440e04.  return v0 @kind object;
}
procedure `java.util.List` `getSignatures`(`org.simpleframework.xml.core.ConstructorScanner` v2 @kind this) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.getSignatures:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L440dc8.  v0:= new `java.util.ArrayList`;
  #L440dcc.  v1:= v2.`org.simpleframework.xml.core.ConstructorScanner.a` @type ^`java.util.List` @kind object;
  #L440dd0.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L440dd6.  return v0 @kind object;
}
