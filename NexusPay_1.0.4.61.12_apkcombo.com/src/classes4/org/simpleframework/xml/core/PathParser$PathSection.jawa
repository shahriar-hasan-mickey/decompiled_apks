record `org.simpleframework.xml.core.PathParser$PathSection` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Expression` @kind interface {
  `java.util.List` `org.simpleframework.xml.core.PathParser$PathSection.a` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.PathParser$PathSection.b` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.PathParser$PathSection.c` @AccessFlag PRIVATE;
  `int` `org.simpleframework.xml.core.PathParser$PathSection.d` @AccessFlag PRIVATE;
  `int` `org.simpleframework.xml.core.PathParser$PathSection.e` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.PathParser` `org.simpleframework.xml.core.PathParser$PathSection.this$0` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.PathParser$PathSection` v0 @kind this, `org.simpleframework.xml.core.PathParser` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.<init>:(Lorg/simpleframework/xml/core/PathParser;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L449be8.  v0.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` := v1 @kind object;
  #L449bec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L449bf2.  v1:= new `java.util.ArrayList`;
  #L449bf6.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L449bfc.  v0.`org.simpleframework.xml.core.PathParser$PathSection.a` @type ^`java.util.List` := v1 @kind object;
  #L449c00.  v0.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int` := v2;
  #L449c04.  v0.`org.simpleframework.xml.core.PathParser$PathSection.e` @type ^`int` := v3;
  #L449c08.  return @kind void;
}
procedure `java.lang.String` `a`(`org.simpleframework.xml.core.PathParser$PathSection` v5 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.a:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L44992c.  v0:= 0I;
  #L44992e.  v1:= 0I;
  #L449930.  v2:= v5.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int`;
  #L449934.  v3:= 47I;
  #L449938.  if v0 >= v2 then goto L449956;
  #L44993c.  v2:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L449940.  v2:= v2.`org.simpleframework.xml.core.PathParser.location` @type ^`java.lang.String` @kind object;
  #L449944.  v1:= v1 + 1;
  #L449948.  call temp:= `indexOf`(v2, v3, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L44994e.  v1:= temp;
  #L449950.  v0:= v0 + 1;
  #L449954.  goto L449930;
  #L449956.  v2:= v1;
  #L449958.  v4:= v5.`org.simpleframework.xml.core.PathParser$PathSection.e` @type ^`int`;
  #L44995c.  if v0 > v4 then goto L449990;
  #L449960.  v4:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L449964.  v4:= v4.`org.simpleframework.xml.core.PathParser.location` @type ^`java.lang.String` @kind object;
  #L449968.  v2:= v2 + 1;
  #L44996c.  call temp:= `indexOf`(v4, v3, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L449972.  v2:= temp;
  #L449974.  v4:= -1I;
  #L449976.  if v2 != v4 then goto L44998a;
  #L44997a.  v2:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L44997e.  v2:= v2.`org.simpleframework.xml.core.PathParser.location` @type ^`java.lang.String` @kind object;
  #L449982.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L449988.  v2:= temp;
  #L44998a.  v0:= v0 + 1;
  #L44998e.  goto L449958;
  #L449990.  v0:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L449994.  v0:= v0.`org.simpleframework.xml.core.PathParser.location` @type ^`java.lang.String` @kind object;
  #L449998.  v1:= v1 + 1;
  #L44999c.  call temp:= `substring`(v0, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4499a2.  v0:= temp @kind object;
  #L4499a4.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`org.simpleframework.xml.core.PathParser$PathSection` v5 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.b:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L449a10.  v0:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L449a14.  v0:= v0.`org.simpleframework.xml.core.PathParser.start` @type ^`int`;
  #L449a18.  v1:= 0I;
  #L449a1a.  v2:= 0I;
  #L449a1c.  v3:= v5.`org.simpleframework.xml.core.PathParser$PathSection.e` @type ^`int`;
  #L449a20.  if v1 > v3 then goto L449a60;
  #L449a24.  v3:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L449a28.  v4:= v3.`org.simpleframework.xml.core.PathParser.count` @type ^`int`;
  #L449a2c.  if v0 < v4 then goto L449a36;
  #L449a30.  v0:= v0 + 1;
  #L449a34.  goto L449a60;
  #L449a36.  v3:= v3.`org.simpleframework.xml.core.PathParser.data` @type ^`char`[] @kind object;
  #L449a3a.  v4:= v0 + 1;
  #L449a3e.  v0:= v3[v0] @kind char;
  #L449a42.  v3:= 47I;
  #L449a46.  if v0 != v3 then goto L449a5c;
  #L449a4a.  v1:= v1 + 1;
  #L449a4e.  v0:= v5.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int`;
  #L449a52.  if v1 != v0 then goto L449a5c;
  #L449a56.  v0:= v4;
  #L449a58.  v2:= v0;
  #L449a5a.  goto L449a1c;
  #L449a5c.  v0:= v4;
  #L449a5e.  goto L449a1c;
  #L449a60.  v1:= new `java.lang.String`;
  #L449a64.  v3:= v5.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L449a68.  v3:= v3.`org.simpleframework.xml.core.PathParser.data` @type ^`char`[] @kind object;
  #L449a6c.  v0:= v0 + -1;
  #L449a70.  v0:= v0 - v2 @kind int;
  #L449a72.  call `<init>`(v1, v3, v2, v0) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L449a78.  return v1 @kind object;
}
procedure `java.lang.String` `getAttribute`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L449900.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPath:()Ljava/lang/String;` @kind virtual;
  #L449906.  v0:= temp @kind object;
  #L449908.  if v0 == 0 then goto L449918;
  #L44990c.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L449910.  call temp:= `getAttributePath`(v1, v0, v3) @signature `Lorg/simpleframework/xml/core/PathParser;.getAttributePath:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L449916.  v3:= temp @kind object;
  #L449918.  return v3 @kind object;
}
procedure `java.lang.String` `getElement`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4499b8.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPath:()Ljava/lang/String;` @kind virtual;
  #L4499be.  v0:= temp @kind object;
  #L4499c0.  if v0 == 0 then goto L4499d0;
  #L4499c4.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L4499c8.  call temp:= `getElementPath`(v1, v0, v3) @signature `Lorg/simpleframework/xml/core/PathParser;.getElementPath:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4499ce.  v3:= temp @kind object;
  #L4499d0.  return v3 @kind object;
}
procedure `java.lang.String` `getFirst`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getFirst:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4499e4.  v0:= v2.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L4499e8.  v0:= v0.`org.simpleframework.xml.core.PathParser.names` @type ^`java.util.List` @kind object;
  #L4499ec.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int`;
  #L4499f0.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4499f6.  v0:= temp @kind object;
  #L4499f8.  v0:= (`java.lang.String`) v0 @kind object;
  #L4499fc.  return v0 @kind object;
}
procedure `int` `getIndex`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4498cc.  v0:= v2.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L4498d0.  v0:= v0.`org.simpleframework.xml.core.PathParser.indexes` @type ^`java.util.List` @kind object;
  #L4498d4.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int`;
  #L4498d8.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4498de.  v0:= temp @kind object;
  #L4498e0.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L4498e4.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4498ea.  v0:= temp;
  #L4498ec.  return v0;
}
procedure `java.lang.String` `getLast`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getLast:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L449a8c.  v0:= v2.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L449a90.  v0:= v0.`org.simpleframework.xml.core.PathParser.names` @type ^`java.util.List` @kind object;
  #L449a94.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.e` @type ^`int`;
  #L449a98.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L449a9e.  v0:= temp @kind object;
  #L449aa0.  v0:= (`java.lang.String`) v0 @kind object;
  #L449aa4.  return v0 @kind object;
}
procedure `java.lang.String` `getPath`(`org.simpleframework.xml.core.PathParser$PathSection` v1 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPath:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L449ab8.  v0:= v1.`org.simpleframework.xml.core.PathParser$PathSection.b` @type ^`java.lang.String` @kind object;
  #L449abc.  if v0 != 0 then goto L449acc;
  #L449ac0.  call temp:= `a`(v1) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.a:()Ljava/lang/String;` @kind direct;
  #L449ac6.  v0:= temp @kind object;
  #L449ac8.  v1.`org.simpleframework.xml.core.PathParser$PathSection.b` @type ^`java.lang.String` := v0 @kind object;
  #L449acc.  v0:= v1.`org.simpleframework.xml.core.PathParser$PathSection.b` @type ^`java.lang.String` @kind object;
  #L449ad0.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Expression` `getPath`(`org.simpleframework.xml.core.PathParser$PathSection` v1 @kind this, `int` v2 ) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPath:(I)Lorg/simpleframework/xml/core/Expression;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L449ba0.  v0:= 0I;
  #L449ba2.  call temp:= `getPath`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPath:(II)Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L449ba8.  v2:= temp @kind object;
  #L449baa.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Expression` `getPath`(`org.simpleframework.xml.core.PathParser$PathSection` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPath:(II)Lorg/simpleframework/xml/core/Expression;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L449bbc.  v0:= new `org.simpleframework.xml.core.PathParser$PathSection`;
  #L449bc0.  v1:= v3.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L449bc4.  v2:= v3.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int`;
  #L449bc8.  v2:= v2 + v4 @kind int;
  #L449bca.  v4:= v3.`org.simpleframework.xml.core.PathParser$PathSection.e` @type ^`int`;
  #L449bce.  v4:= v4 - v5 @kind int;
  #L449bd0.  call `<init>`(v0, v1, v2, v4) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.<init>:(Lorg/simpleframework/xml/core/PathParser;II)V` @kind direct;
  #L449bd6.  return v0 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L449ae4.  v0:= v2.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L449ae8.  v0:= v0.`org.simpleframework.xml.core.PathParser.prefixes` @type ^`java.util.List` @kind object;
  #L449aec.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int`;
  #L449af0.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L449af6.  v0:= temp @kind object;
  #L449af8.  v0:= (`java.lang.String`) v0 @kind object;
  #L449afc.  return v0 @kind object;
}
procedure `boolean` `isAttribute`(`org.simpleframework.xml.core.PathParser$PathSection` v4 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.isAttribute:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L449844.  v0:= v4.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L449848.  v1:= v0.`org.simpleframework.xml.core.PathParser.attribute` @type ^`boolean` @kind boolean;
  #L44984c.  v2:= 0I;
  #L44984e.  if v1 == 0 then goto L44986c;
  #L449852.  v1:= v4.`org.simpleframework.xml.core.PathParser$PathSection.e` @type ^`int`;
  #L449856.  v0:= v0.`org.simpleframework.xml.core.PathParser.names` @type ^`java.util.List` @kind object;
  #L44985a.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L449860.  v0:= temp;
  #L449862.  v3:= 1I;
  #L449864.  v0:= v0 - v3 @kind int;
  #L449866.  if v1 < v0 then goto L44986c;
  #L44986a.  v2:= 1I;
  #L44986c.  return v2;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L449880.  v0:= v2.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int`;
  #L449884.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.e` @type ^`int`;
  #L449888.  if v0 != v1 then goto L449890;
  #L44988c.  v0:= 1I;
  #L44988e.  goto L449892;
  #L449890.  v0:= 0I;
  #L449892.  return v0;
}
procedure `boolean` `isPath`(`org.simpleframework.xml.core.PathParser$PathSection` v2 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.isPath:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4498a4.  v0:= v2.`org.simpleframework.xml.core.PathParser$PathSection.e` @type ^`int`;
  #L4498a8.  v1:= v2.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int`;
  #L4498ac.  v0:= v0 - v1 @kind int;
  #L4498ae.  v1:= 1I;
  #L4498b0.  if v0 < v1 then goto L4498b6;
  #L4498b4.  goto L4498b8;
  #L4498b6.  v1:= 0I;
  #L4498b8.  return v1;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.core.PathParser$PathSection` v3 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L449b3c.  v0:= v3.`org.simpleframework.xml.core.PathParser$PathSection.a` @type ^`java.util.List` @kind object;
  #L449b40.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L449b46.  v0:= temp;
  #L449b48.  if v0 == 0 then goto L449b80;
  #L449b4c.  v0:= v3.`org.simpleframework.xml.core.PathParser$PathSection.d` @type ^`int`;
  #L449b50.  v1:= v3.`org.simpleframework.xml.core.PathParser$PathSection.e` @type ^`int`;
  #L449b54.  if v0 > v1 then goto L449b80;
  #L449b58.  v1:= v3.`org.simpleframework.xml.core.PathParser$PathSection.this$0` @type ^`org.simpleframework.xml.core.PathParser` @kind object;
  #L449b5c.  v1:= v1.`org.simpleframework.xml.core.PathParser.names` @type ^`java.util.List` @kind object;
  #L449b60.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L449b66.  v1:= temp @kind object;
  #L449b68.  v1:= (`java.lang.String`) v1 @kind object;
  #L449b6c.  if v1 == 0 then goto L449b7a;
  #L449b70.  v2:= v3.`org.simpleframework.xml.core.PathParser$PathSection.a` @type ^`java.util.List` @kind object;
  #L449b74.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L449b7a.  v0:= v0 + 1;
  #L449b7e.  goto L449b50;
  #L449b80.  v0:= v3.`org.simpleframework.xml.core.PathParser$PathSection.a` @type ^`java.util.List` @kind object;
  #L449b84.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L449b8a.  v0:= temp @kind object;
  #L449b8c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.PathParser$PathSection` v1 @kind this) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L449b10.  v0:= v1.`org.simpleframework.xml.core.PathParser$PathSection.c` @type ^`java.lang.String` @kind object;
  #L449b14.  if v0 != 0 then goto L449b24;
  #L449b18.  call temp:= `b`(v1) @signature `Lorg/simpleframework/xml/core/PathParser$PathSection;.b:()Ljava/lang/String;` @kind direct;
  #L449b1e.  v0:= temp @kind object;
  #L449b20.  v1.`org.simpleframework.xml.core.PathParser$PathSection.c` @type ^`java.lang.String` := v0 @kind object;
  #L449b24.  v0:= v1.`org.simpleframework.xml.core.PathParser$PathSection.c` @type ^`java.lang.String` @kind object;
  #L449b28.  return v0 @kind object;
}
