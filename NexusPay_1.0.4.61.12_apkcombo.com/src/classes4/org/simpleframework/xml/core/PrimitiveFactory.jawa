record `org.simpleframework.xml.core.PrimitiveFactory` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Factory` @kind class {
}
procedure `void` `<init>`(`org.simpleframework.xml.core.PrimitiveFactory` v0 @kind this, `org.simpleframework.xml.core.Context` v1 @kind object, `org.simpleframework.xml.strategy.Type` v2 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L44b390.  call `<init>`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/Factory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L44b396.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.PrimitiveFactory` v0 @kind this, `org.simpleframework.xml.core.Context` v1 @kind object, `org.simpleframework.xml.strategy.Type` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L44b3a8.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Factory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Class;)V` @kind direct;
  #L44b3ae.  return @kind void;
}
procedure `java.lang.Object` `getInstance`(`org.simpleframework.xml.core.PrimitiveFactory` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.getInstance:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44b2ec.  v0:= v1.`org.simpleframework.xml.core.Factory.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L44b2f0.  call temp:= `read`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/Support;.read:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L44b2f6.  v2:= temp @kind object;
  #L44b2f8.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Instance` `getInstance`(`org.simpleframework.xml.core.PrimitiveFactory` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.getInstance:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/core/Instance;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44b34c.  call temp:= `getOverride`(v2, v3) @signature `Lorg/simpleframework/xml/core/Factory;.getOverride:(Lorg/simpleframework/xml/stream/InputNode;)Lorg/simpleframework/xml/strategy/Value;` @kind virtual;
  #L44b352.  v3:= temp @kind object;
  #L44b354.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/core/Factory;.getType:()Ljava/lang/Class;` @kind virtual;
  #L44b35a.  v0:= temp @kind object;
  #L44b35c.  if v3 != 0 then goto L44b36e;
  #L44b360.  v3:= v2.`org.simpleframework.xml.core.Factory.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L44b364.  call temp:= `getInstance`(v3, v0) @signature `Lorg/simpleframework/xml/core/Context;.getInstance:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Instance;` @kind interface;
  #L44b36a.  v3:= temp @kind object;
  #L44b36c.  return v3 @kind object;
  #L44b36e.  v0:= new `org.simpleframework.xml.core.ObjectInstance`;
  #L44b372.  v1:= v2.`org.simpleframework.xml.core.Factory.context` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L44b376.  call `<init>`(v0, v1, v3) @signature `Lorg/simpleframework/xml/core/ObjectInstance;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Value;)V` @kind direct;
  #L44b37c.  return v0 @kind object;
}
procedure `java.lang.String` `getText`(`org.simpleframework.xml.core.PrimitiveFactory` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.getText:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44b30c.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L44b312.  v0:= temp @kind object;
  #L44b314.  call temp:= `isEnum`(v0) @signature `Ljava/lang/Class;.isEnum:()Z` @kind virtual;
  #L44b31a.  v1:= temp;
  #L44b31c.  if v1 == 0 then goto L44b32e;
  #L44b320.  v1:= v2.`org.simpleframework.xml.core.Factory.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L44b324.  call temp:= `write`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/Support;.write:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;` @kind virtual;
  #L44b32a.  v3:= temp @kind object;
  #L44b32c.  return v3 @kind object;
  #L44b32e.  v1:= v2.`org.simpleframework.xml.core.Factory.support` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L44b332.  call temp:= `write`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/Support;.write:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;` @kind virtual;
  #L44b338.  v3:= temp @kind object;
  #L44b33a.  return v3 @kind object;
}
