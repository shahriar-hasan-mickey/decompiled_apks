record `org.simpleframework.xml.core.Entry` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.ElementMap` `org.simpleframework.xml.core.Entry.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Contact` `org.simpleframework.xml.core.Entry.b` @AccessFlag PRIVATE;
  `java.lang.Class` `org.simpleframework.xml.core.Entry.c` @AccessFlag PRIVATE;
  `java.lang.Class` `org.simpleframework.xml.core.Entry.d` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.Entry.e` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.Entry.f` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.Entry.g` @AccessFlag PRIVATE;
  `boolean` `org.simpleframework.xml.core.Entry.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Entry` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `org.simpleframework.xml.ElementMap` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Entry;.<init>:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/ElementMap;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44442c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L444432.  call temp:= `attribute`(v3) @signature `Lorg/simpleframework/xml/ElementMap;.attribute:()Z` @kind interface;
  #L444438.  v0:= temp;
  #L44443a.  v1.`org.simpleframework.xml.core.Entry.h` @type ^`boolean` := v0 @kind boolean;
  #L44443e.  call temp:= `entry`(v3) @signature `Lorg/simpleframework/xml/ElementMap;.entry:()Ljava/lang/String;` @kind interface;
  #L444444.  v0:= temp @kind object;
  #L444446.  v1.`org.simpleframework.xml.core.Entry.e` @type ^`java.lang.String` := v0 @kind object;
  #L44444a.  call temp:= `value`(v3) @signature `Lorg/simpleframework/xml/ElementMap;.value:()Ljava/lang/String;` @kind interface;
  #L444450.  v0:= temp @kind object;
  #L444452.  v1.`org.simpleframework.xml.core.Entry.f` @type ^`java.lang.String` := v0 @kind object;
  #L444456.  call temp:= `key`(v3) @signature `Lorg/simpleframework/xml/ElementMap;.key:()Ljava/lang/String;` @kind interface;
  #L44445c.  v0:= temp @kind object;
  #L44445e.  v1.`org.simpleframework.xml.core.Entry.g` @type ^`java.lang.String` := v0 @kind object;
  #L444462.  v1.`org.simpleframework.xml.core.Entry.b` @type ^`org.simpleframework.xml.core.Contact` := v2 @kind object;
  #L444466.  v1.`org.simpleframework.xml.core.Entry.a` @type ^`org.simpleframework.xml.ElementMap` := v3 @kind object;
  #L44446a.  return @kind void;
}
procedure `java.lang.Class` `a`(`org.simpleframework.xml.core.Entry` v3 @kind this, `int` v4 ) @signature `Lorg/simpleframework/xml/core/Entry;.a:(I)Ljava/lang/Class;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4441f0.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L4441f4.  v1:= v3.`org.simpleframework.xml.core.Entry.b` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L4441f8.  call temp:= `getDependents`(v1) @signature `Lorg/simpleframework/xml/core/Contact;.getDependents:()[Ljava/lang/Class;` @kind interface;
  #L4441fe.  v1:= temp @kind object;
  #L444200.  v2:= length @variable v1;
  #L444202.  if v2 >= v4 then goto L444208;
  #L444206.  return v0 @kind object;
  #L444208.  v2:= length @variable v1;
  #L44420a.  if v2 != 0 then goto L444210;
  #L44420e.  return v0 @kind object;
  #L444210.  v4:= v1[v4] @kind object;
  #L444214.  return v4 @kind object;
}
procedure `boolean` `b`(`org.simpleframework.xml.core.Entry` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Entry;.b:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;

  #L4441b0.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4441b6.  v1:= temp;
  #L4441b8.  if v1 != 0 then goto L4441c0;
  #L4441bc.  v1:= 1I;
  #L4441be.  goto L4441c2;
  #L4441c0.  v1:= 0I;
  #L4441c2.  return v1;
}
procedure `org.simpleframework.xml.core.Contact` `getContact`(`org.simpleframework.xml.core.Entry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.getContact:()Lorg/simpleframework/xml/core/Contact;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4442fc.  v0:= v1.`org.simpleframework.xml.core.Entry.b` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L444300.  return v0 @kind object;
}
procedure `java.lang.String` `getEntry`(`org.simpleframework.xml.core.Entry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.getEntry:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444228.  v0:= v1.`org.simpleframework.xml.core.Entry.e` @type ^`java.lang.String` @kind object;
  #L44422c.  if v0 != 0 then goto L444232;
  #L444230.  return v0 @kind object;
  #L444232.  call temp:= `b`(v1, v0) @signature `Lorg/simpleframework/xml/core/Entry;.b:(Ljava/lang/String;)Z` @kind direct;
  #L444238.  v0:= temp;
  #L44423a.  if v0 == 0 then goto L444246;
  #L44423e.  v0:= "entry" @kind object;
  #L444242.  v1.`org.simpleframework.xml.core.Entry.e` @type ^`java.lang.String` := v0 @kind object;
  #L444246.  v0:= v1.`org.simpleframework.xml.core.Entry.e` @type ^`java.lang.String` @kind object;
  #L44424a.  return v0 @kind object;
}
procedure `java.lang.String` `getKey`(`org.simpleframework.xml.core.Entry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44425c.  v0:= v1.`org.simpleframework.xml.core.Entry.g` @type ^`java.lang.String` @kind object;
  #L444260.  if v0 != 0 then goto L444266;
  #L444264.  return v0 @kind object;
  #L444266.  call temp:= `b`(v1, v0) @signature `Lorg/simpleframework/xml/core/Entry;.b:(Ljava/lang/String;)Z` @kind direct;
  #L44426c.  v0:= temp;
  #L44426e.  if v0 == 0 then goto L444278;
  #L444272.  v0:= 0I;
  #L444274.  v1.`org.simpleframework.xml.core.Entry.g` @type ^`java.lang.String` := v0 @kind object;
  #L444278.  v0:= v1.`org.simpleframework.xml.core.Entry.g` @type ^`java.lang.String` @kind object;
  #L44427c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Converter` `getKey`(`org.simpleframework.xml.core.Entry` v2 @kind this, `org.simpleframework.xml.core.Context` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L444314.  call temp:= `getKeyType`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.getKeyType:()Lorg/simpleframework/xml/strategy/Type;` @kind virtual;
  #L44431a.  v0:= temp @kind object;
  #L44431c.  call temp:= `isPrimitive`(v3, v0) @signature `Lorg/simpleframework/xml/core/Context;.isPrimitive:(Lorg/simpleframework/xml/strategy/Type;)Z` @kind interface;
  #L444322.  v1:= temp;
  #L444324.  if v1 == 0 then goto L444334;
  #L444328.  v1:= new `org.simpleframework.xml.core.PrimitiveKey`;
  #L44432c.  call `<init>`(v1, v3, v2, v0) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L444332.  return v1 @kind object;
  #L444334.  v1:= new `org.simpleframework.xml.core.CompositeKey`;
  #L444338.  call `<init>`(v1, v3, v2, v0) @signature `Lorg/simpleframework/xml/core/CompositeKey;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L44433e.  return v1 @kind object;
}
procedure `org.simpleframework.xml.strategy.Type` `getKeyType`(`org.simpleframework.xml.core.Entry` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.getKeyType:()Lorg/simpleframework/xml/strategy/Type;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44438c.  v0:= v2.`org.simpleframework.xml.core.Entry.d` @type ^`java.lang.Class` @kind object;
  #L444390.  if v0 != 0 then goto L4443ba;
  #L444394.  v0:= v2.`org.simpleframework.xml.core.Entry.a` @type ^`org.simpleframework.xml.ElementMap` @kind object;
  #L444398.  call temp:= `keyType`(v0) @signature `Lorg/simpleframework/xml/ElementMap;.keyType:()Ljava/lang/Class;` @kind interface;
  #L44439e.  v0:= temp @kind object;
  #L4443a0.  v2.`org.simpleframework.xml.core.Entry.d` @type ^`java.lang.Class` := v0 @kind object;
  #L4443a4.  v1:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L4443a8.  if v0 != v1 then goto L4443ba;
  #L4443ac.  v0:= 0I;
  #L4443ae.  call temp:= `a`(v2, v0) @signature `Lorg/simpleframework/xml/core/Entry;.a:(I)Ljava/lang/Class;` @kind direct;
  #L4443b4.  v0:= temp @kind object;
  #L4443b6.  v2.`org.simpleframework.xml.core.Entry.d` @type ^`java.lang.Class` := v0 @kind object;
  #L4443ba.  v0:= new `org.simpleframework.xml.core.ClassType`;
  #L4443be.  v1:= v2.`org.simpleframework.xml.core.Entry.d` @type ^`java.lang.Class` @kind object;
  #L4443c2.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/ClassType;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L4443c8.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`org.simpleframework.xml.core.Entry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444290.  v0:= v1.`org.simpleframework.xml.core.Entry.f` @type ^`java.lang.String` @kind object;
  #L444294.  if v0 != 0 then goto L44429a;
  #L444298.  return v0 @kind object;
  #L44429a.  call temp:= `b`(v1, v0) @signature `Lorg/simpleframework/xml/core/Entry;.b:(Ljava/lang/String;)Z` @kind direct;
  #L4442a0.  v0:= temp;
  #L4442a2.  if v0 == 0 then goto L4442ac;
  #L4442a6.  v0:= 0I;
  #L4442a8.  v1.`org.simpleframework.xml.core.Entry.f` @type ^`java.lang.String` := v0 @kind object;
  #L4442ac.  v0:= v1.`org.simpleframework.xml.core.Entry.f` @type ^`java.lang.String` @kind object;
  #L4442b0.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Converter` `getValue`(`org.simpleframework.xml.core.Entry` v2 @kind this, `org.simpleframework.xml.core.Context` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Entry;.getValue:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L444350.  call temp:= `getValueType`(v2) @signature `Lorg/simpleframework/xml/core/Entry;.getValueType:()Lorg/simpleframework/xml/strategy/Type;` @kind virtual;
  #L444356.  v0:= temp @kind object;
  #L444358.  call temp:= `isPrimitive`(v3, v0) @signature `Lorg/simpleframework/xml/core/Context;.isPrimitive:(Lorg/simpleframework/xml/strategy/Type;)Z` @kind interface;
  #L44435e.  v1:= temp;
  #L444360.  if v1 == 0 then goto L444370;
  #L444364.  v1:= new `org.simpleframework.xml.core.PrimitiveValue`;
  #L444368.  call `<init>`(v1, v3, v2, v0) @signature `Lorg/simpleframework/xml/core/PrimitiveValue;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L44436e.  return v1 @kind object;
  #L444370.  v1:= new `org.simpleframework.xml.core.CompositeValue`;
  #L444374.  call `<init>`(v1, v3, v2, v0) @signature `Lorg/simpleframework/xml/core/CompositeValue;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L44437a.  return v1 @kind object;
}
procedure `org.simpleframework.xml.strategy.Type` `getValueType`(`org.simpleframework.xml.core.Entry` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.getValueType:()Lorg/simpleframework/xml/strategy/Type;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4443dc.  v0:= v2.`org.simpleframework.xml.core.Entry.c` @type ^`java.lang.Class` @kind object;
  #L4443e0.  if v0 != 0 then goto L44440a;
  #L4443e4.  v0:= v2.`org.simpleframework.xml.core.Entry.a` @type ^`org.simpleframework.xml.ElementMap` @kind object;
  #L4443e8.  call temp:= `valueType`(v0) @signature `Lorg/simpleframework/xml/ElementMap;.valueType:()Ljava/lang/Class;` @kind interface;
  #L4443ee.  v0:= temp @kind object;
  #L4443f0.  v2.`org.simpleframework.xml.core.Entry.c` @type ^`java.lang.Class` := v0 @kind object;
  #L4443f4.  v1:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L4443f8.  if v0 != v1 then goto L44440a;
  #L4443fc.  v0:= 1I;
  #L4443fe.  call temp:= `a`(v2, v0) @signature `Lorg/simpleframework/xml/core/Entry;.a:(I)Ljava/lang/Class;` @kind direct;
  #L444404.  v0:= temp @kind object;
  #L444406.  v2.`org.simpleframework.xml.core.Entry.c` @type ^`java.lang.Class` := v0 @kind object;
  #L44440a.  v0:= new `org.simpleframework.xml.core.ClassType`;
  #L44440e.  v1:= v2.`org.simpleframework.xml.core.Entry.c` @type ^`java.lang.Class` @kind object;
  #L444412.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/ClassType;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L444418.  return v0 @kind object;
}
procedure `boolean` `isAttribute`(`org.simpleframework.xml.core.Entry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.isAttribute:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444198.  v0:= v1.`org.simpleframework.xml.core.Entry.h` @type ^`boolean` @kind boolean;
  #L44419c.  return v0;
}
procedure `boolean` `isInline`(`org.simpleframework.xml.core.Entry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.isInline:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4441d4.  call temp:= `isAttribute`(v1) @signature `Lorg/simpleframework/xml/core/Entry;.isAttribute:()Z` @kind virtual;
  #L4441da.  v0:= temp;
  #L4441dc.  return v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.Entry` v3 @kind this) @signature `Lorg/simpleframework/xml/core/Entry;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4442c4.  v0:= 2I;
  #L4442c6.  v0:= new `java.lang.Object`[v0];
  #L4442ca.  v1:= v3.`org.simpleframework.xml.core.Entry.a` @type ^`org.simpleframework.xml.ElementMap` @kind object;
  #L4442ce.  v2:= 0I;
  #L4442d0.  v0[v2]:= v1 @kind object;
  #L4442d4.  v1:= v3.`org.simpleframework.xml.core.Entry.b` @type ^`org.simpleframework.xml.core.Contact` @kind object;
  #L4442d8.  v2:= 1I;
  #L4442da.  v0[v2]:= v1 @kind object;
  #L4442de.  v1:= "%s on %s" @kind object;
  #L4442e2.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4442e8.  v0:= temp @kind object;
  #L4442ea.  return v0 @kind object;
}
