record `org.simpleframework.xml.core.DetailScanner` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Detail` @kind interface {
  `java.util.List` `org.simpleframework.xml.core.DetailScanner.a` @AccessFlag PRIVATE;
  `java.util.List` `org.simpleframework.xml.core.DetailScanner.b` @AccessFlag PRIVATE;
  `org.simpleframework.xml.NamespaceList` `org.simpleframework.xml.core.DetailScanner.c` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Namespace` `org.simpleframework.xml.core.DetailScanner.d` @AccessFlag PRIVATE;
  `java.lang.annotation.Annotation`[] `org.simpleframework.xml.core.DetailScanner.e` @AccessFlag PRIVATE;
  `org.simpleframework.xml.DefaultType` `org.simpleframework.xml.core.DetailScanner.f` @AccessFlag PRIVATE;
  `org.simpleframework.xml.DefaultType` `org.simpleframework.xml.core.DetailScanner.g` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Order` `org.simpleframework.xml.core.DetailScanner.h` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Root` `org.simpleframework.xml.core.DetailScanner.i` @AccessFlag PRIVATE;
  `java.lang.Class` `org.simpleframework.xml.core.DetailScanner.j` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.DetailScanner.k` @AccessFlag PRIVATE;
  `boolean` `org.simpleframework.xml.core.DetailScanner.l` @AccessFlag PRIVATE;
  `boolean` `org.simpleframework.xml.core.DetailScanner.m` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.<init>:(Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L441968.  v0:= 0I;
  #L44196a.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/DetailScanner;.<init>:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)V` @kind direct;
  #L441970.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this, `java.lang.Class` v2 @kind object, `org.simpleframework.xml.DefaultType` v3 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.<init>:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L441984.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44198a.  v0:= new `java.util.LinkedList`;
  #L44198e.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L441994.  v1.`org.simpleframework.xml.core.DetailScanner.a` @type ^`java.util.List` := v0 @kind object;
  #L441998.  v0:= new `java.util.LinkedList`;
  #L44199c.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L4419a2.  v1.`org.simpleframework.xml.core.DetailScanner.b` @type ^`java.util.List` := v0 @kind object;
  #L4419a6.  call temp:= `getDeclaredAnnotations`(v2) @signature `Ljava/lang/Class;.getDeclaredAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L4419ac.  v0:= temp @kind object;
  #L4419ae.  v1.`org.simpleframework.xml.core.DetailScanner.e` @type ^`java.lang.annotation.Annotation`[] := v0 @kind object;
  #L4419b2.  v1.`org.simpleframework.xml.core.DetailScanner.f` @type ^`org.simpleframework.xml.DefaultType` := v3 @kind object;
  #L4419b6.  v3:= 1I;
  #L4419b8.  v1.`org.simpleframework.xml.core.DetailScanner.m` @type ^`boolean` := v3 @kind boolean;
  #L4419bc.  v1.`org.simpleframework.xml.core.DetailScanner.j` @type ^`java.lang.Class` := v2 @kind object;
  #L4419c0.  call `i`(v1, v2) @signature `Lorg/simpleframework/xml/core/DetailScanner;.i:(Ljava/lang/Class;)V` @kind direct;
  #L4419c6.  return @kind void;
}
procedure `void` `a`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this, `java.lang.annotation.Annotation` v2 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.a:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4419d8.  if v2 == 0 then goto L4419f8;
  #L4419dc.  v2:= (`org.simpleframework.xml.Default`) v2 @kind object;
  #L4419e0.  call temp:= `required`(v2) @signature `Lorg/simpleframework/xml/Default;.required:()Z` @kind interface;
  #L4419e6.  v0:= temp;
  #L4419e8.  v1.`org.simpleframework.xml.core.DetailScanner.l` @type ^`boolean` := v0 @kind boolean;
  #L4419ec.  call temp:= `value`(v2) @signature `Lorg/simpleframework/xml/Default;.value:()Lorg/simpleframework/xml/DefaultType;` @kind interface;
  #L4419f2.  v2:= temp @kind object;
  #L4419f4.  v1.`org.simpleframework.xml.core.DetailScanner.g` @type ^`org.simpleframework.xml.DefaultType` := v2 @kind object;
  #L4419f8.  return @kind void;
}
procedure `void` `b`(`org.simpleframework.xml.core.DetailScanner` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.b:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L441a0c.  v5:= v4.`org.simpleframework.xml.core.DetailScanner.e` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L441a10.  v0:= length @variable v5;
  #L441a12.  v1:= 0I;
  #L441a14.  if v1 >= v0 then goto L441a68;
  #L441a18.  v2:= v5[v1] @kind object;
  #L441a1c.  v3:= instanceof @variable v2 @type ^`org.simpleframework.xml.Namespace` @kind boolean;
  #L441a20.  if v3 == 0 then goto L441a2a;
  #L441a24.  call `f`(v4, v2) @signature `Lorg/simpleframework/xml/core/DetailScanner;.f:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L441a2a.  v3:= instanceof @variable v2 @type ^`org.simpleframework.xml.NamespaceList` @kind boolean;
  #L441a2e.  if v3 == 0 then goto L441a38;
  #L441a32.  call `j`(v4, v2) @signature `Lorg/simpleframework/xml/core/DetailScanner;.j:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L441a38.  v3:= instanceof @variable v2 @type ^`org.simpleframework.xml.Root` @kind boolean;
  #L441a3c.  if v3 == 0 then goto L441a46;
  #L441a40.  call `h`(v4, v2) @signature `Lorg/simpleframework/xml/core/DetailScanner;.h:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L441a46.  v3:= instanceof @variable v2 @type ^`org.simpleframework.xml.Order` @kind boolean;
  #L441a4a.  if v3 == 0 then goto L441a54;
  #L441a4e.  call `g`(v4, v2) @signature `Lorg/simpleframework/xml/core/DetailScanner;.g:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L441a54.  v3:= instanceof @variable v2 @type ^`org.simpleframework.xml.Default` @kind boolean;
  #L441a58.  if v3 == 0 then goto L441a62;
  #L441a5c.  call `a`(v4, v2) @signature `Lorg/simpleframework/xml/core/DetailScanner;.a:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L441a62.  v1:= v1 + 1;
  #L441a66.  goto L441a14;
  #L441a68.  return @kind void;
}
procedure `void` `c`(`org.simpleframework.xml.core.DetailScanner` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.c:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L441a7c.  call temp:= `getDeclaredFields`(v5) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L441a82.  v5:= temp @kind object;
  #L441a84.  v0:= length @variable v5;
  #L441a86.  v1:= 0I;
  #L441a88.  if v1 >= v0 then goto L441aaa;
  #L441a8c.  v2:= v5[v1] @kind object;
  #L441a90.  v3:= new `org.simpleframework.xml.core.FieldDetail`;
  #L441a94.  call `<init>`(v3, v2) @signature `Lorg/simpleframework/xml/core/FieldDetail;.<init>:(Ljava/lang/reflect/Field;)V` @kind direct;
  #L441a9a.  v2:= v4.`org.simpleframework.xml.core.DetailScanner.b` @type ^`java.util.List` @kind object;
  #L441a9e.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L441aa4.  v1:= v1 + 1;
  #L441aa8.  goto L441a88;
  #L441aaa.  return @kind void;
}
procedure `boolean` `d`(`org.simpleframework.xml.core.DetailScanner` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.d:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;

  #L441740.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L441746.  v1:= temp;
  #L441748.  if v1 != 0 then goto L441750;
  #L44174c.  v1:= 1I;
  #L44174e.  goto L441752;
  #L441750.  v1:= 0I;
  #L441752.  return v1;
}
procedure `void` `e`(`org.simpleframework.xml.core.DetailScanner` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.e:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L441abc.  call temp:= `getDeclaredMethods`(v5) @signature `Ljava/lang/Class;.getDeclaredMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L441ac2.  v5:= temp @kind object;
  #L441ac4.  v0:= length @variable v5;
  #L441ac6.  v1:= 0I;
  #L441ac8.  if v1 >= v0 then goto L441aea;
  #L441acc.  v2:= v5[v1] @kind object;
  #L441ad0.  v3:= new `org.simpleframework.xml.core.MethodDetail`;
  #L441ad4.  call `<init>`(v3, v2) @signature `Lorg/simpleframework/xml/core/MethodDetail;.<init>:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L441ada.  v2:= v4.`org.simpleframework.xml.core.DetailScanner.a` @type ^`java.util.List` @kind object;
  #L441ade.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L441ae4.  v1:= v1 + 1;
  #L441ae8.  goto L441ac8;
  #L441aea.  return @kind void;
}
procedure `void` `f`(`org.simpleframework.xml.core.DetailScanner` v0 @kind this, `java.lang.annotation.Annotation` v1 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.f:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;

  #L441afc.  if v1 == 0 then goto L441b08;
  #L441b00.  v1:= (`org.simpleframework.xml.Namespace`) v1 @kind object;
  #L441b04.  v0.`org.simpleframework.xml.core.DetailScanner.d` @type ^`org.simpleframework.xml.Namespace` := v1 @kind object;
  #L441b08.  return @kind void;
}
procedure `void` `g`(`org.simpleframework.xml.core.DetailScanner` v0 @kind this, `java.lang.annotation.Annotation` v1 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.g:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;

  #L441b1c.  if v1 == 0 then goto L441b28;
  #L441b20.  v1:= (`org.simpleframework.xml.Order`) v1 @kind object;
  #L441b24.  v0.`org.simpleframework.xml.core.DetailScanner.h` @type ^`org.simpleframework.xml.Order` := v1 @kind object;
  #L441b28.  return @kind void;
}
procedure `void` `h`(`org.simpleframework.xml.core.DetailScanner` v3 @kind this, `java.lang.annotation.Annotation` v4 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.h:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L441b3c.  if v4 == 0 then goto L441b80;
  #L441b40.  v4:= (`org.simpleframework.xml.Root`) v4 @kind object;
  #L441b44.  v0:= v3.`org.simpleframework.xml.core.DetailScanner.j` @type ^`java.lang.Class` @kind object;
  #L441b48.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L441b4e.  v0:= temp @kind object;
  #L441b50.  call temp:= `name`(v4) @signature `Lorg/simpleframework/xml/Root;.name:()Ljava/lang/String;` @kind interface;
  #L441b56.  v1:= temp @kind object;
  #L441b58.  call temp:= `d`(v3, v1) @signature `Lorg/simpleframework/xml/core/DetailScanner;.d:(Ljava/lang/String;)Z` @kind direct;
  #L441b5e.  v2:= temp;
  #L441b60.  if v2 == 0 then goto L441b6c;
  #L441b64.  call temp:= `getName`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.getName:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L441b6a.  v1:= temp @kind object;
  #L441b6c.  call temp:= `strict`(v4) @signature `Lorg/simpleframework/xml/Root;.strict:()Z` @kind interface;
  #L441b72.  v0:= temp;
  #L441b74.  v3.`org.simpleframework.xml.core.DetailScanner.m` @type ^`boolean` := v0 @kind boolean;
  #L441b78.  v3.`org.simpleframework.xml.core.DetailScanner.i` @type ^`org.simpleframework.xml.Root` := v4 @kind object;
  #L441b7c.  v3.`org.simpleframework.xml.core.DetailScanner.k` @type ^`java.lang.String` := v1 @kind object;
  #L441b80.  return @kind void;
}
procedure `void` `i`(`org.simpleframework.xml.core.DetailScanner` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.i:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;

  #L441b94.  call `e`(v0, v1) @signature `Lorg/simpleframework/xml/core/DetailScanner;.e:(Ljava/lang/Class;)V` @kind direct;
  #L441b9a.  call `c`(v0, v1) @signature `Lorg/simpleframework/xml/core/DetailScanner;.c:(Ljava/lang/Class;)V` @kind direct;
  #L441ba0.  call `b`(v0, v1) @signature `Lorg/simpleframework/xml/core/DetailScanner;.b:(Ljava/lang/Class;)V` @kind direct;
  #L441ba6.  return @kind void;
}
procedure `void` `j`(`org.simpleframework.xml.core.DetailScanner` v0 @kind this, `java.lang.annotation.Annotation` v1 @kind object) @signature `Lorg/simpleframework/xml/core/DetailScanner;.j:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;

  #L441bb8.  if v1 == 0 then goto L441bc4;
  #L441bbc.  v1:= (`org.simpleframework.xml.NamespaceList`) v1 @kind object;
  #L441bc0.  v0.`org.simpleframework.xml.core.DetailScanner.c` @type ^`org.simpleframework.xml.NamespaceList` := v1 @kind object;
  #L441bc4.  return @kind void;
}
procedure `org.simpleframework.xml.DefaultType` `getAccess`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getAccess:()Lorg/simpleframework/xml/DefaultType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4418d0.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.f` @type ^`org.simpleframework.xml.DefaultType` @kind object;
  #L4418d4.  if v0 == 0 then goto L4418da;
  #L4418d8.  return v0 @kind object;
  #L4418da.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.g` @type ^`org.simpleframework.xml.DefaultType` @kind object;
  #L4418de.  return v0 @kind object;
}
procedure `java.lang.annotation.Annotation`[] `getAnnotations`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441868.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.e` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L44186c.  return v0 @kind object;
}
procedure `java.lang.reflect.Constructor`[] `getConstructors`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getConstructors:()[Ljava/lang/reflect/Constructor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441880.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.j` @type ^`java.lang.Class` @kind object;
  #L441884.  call temp:= `getDeclaredConstructors`(v0) @signature `Ljava/lang/Class;.getDeclaredConstructors:()[Ljava/lang/reflect/Constructor;` @kind virtual;
  #L44188a.  v0:= temp @kind object;
  #L44188c.  return v0 @kind object;
}
procedure `java.util.List` `getFields`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getFields:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4418a0.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.b` @type ^`java.util.List` @kind object;
  #L4418a4.  return v0 @kind object;
}
procedure `java.util.List` `getMethods`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getMethods:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4418b8.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.a` @type ^`java.util.List` @kind object;
  #L4418bc.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441830.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.k` @type ^`java.lang.String` @kind object;
  #L441834.  return v0 @kind object;
}
procedure `org.simpleframework.xml.Namespace` `getNamespace`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getNamespace:()Lorg/simpleframework/xml/Namespace;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441908.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.d` @type ^`org.simpleframework.xml.Namespace` @kind object;
  #L44190c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.NamespaceList` `getNamespaceList`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getNamespaceList:()Lorg/simpleframework/xml/NamespaceList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441920.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.c` @type ^`org.simpleframework.xml.NamespaceList` @kind object;
  #L441924.  return v0 @kind object;
}
procedure `org.simpleframework.xml.Order` `getOrder`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getOrder:()Lorg/simpleframework/xml/Order;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441938.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.h` @type ^`org.simpleframework.xml.Order` @kind object;
  #L44193c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.DefaultType` `getOverride`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getOverride:()Lorg/simpleframework/xml/DefaultType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4418f0.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.f` @type ^`org.simpleframework.xml.DefaultType` @kind object;
  #L4418f4.  return v0 @kind object;
}
procedure `org.simpleframework.xml.Root` `getRoot`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getRoot:()Lorg/simpleframework/xml/Root;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441950.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.i` @type ^`org.simpleframework.xml.Root` @kind object;
  #L441954.  return v0 @kind object;
}
procedure `java.lang.Class` `getSuper`(`org.simpleframework.xml.core.DetailScanner` v2 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getSuper:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4417f0.  v0:= v2.`org.simpleframework.xml.core.DetailScanner.j` @type ^`java.lang.Class` @kind object;
  #L4417f4.  call temp:= `getSuperclass`(v0) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L4417fa.  v0:= temp @kind object;
  #L4417fc.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L441800.  if v0 != v1 then goto L441806;
  #L441804.  v0:= 0I;
  #L441806.  return v0 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441818.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.j` @type ^`java.lang.Class` @kind object;
  #L44181c.  return v0 @kind object;
}
procedure `boolean` `isInstantiable`(`org.simpleframework.xml.core.DetailScanner` v2 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.isInstantiable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L441764.  v0:= v2.`org.simpleframework.xml.core.DetailScanner.j` @type ^`java.lang.Class` @kind object;
  #L441768.  call temp:= `getModifiers`(v0) @signature `Ljava/lang/Class;.getModifiers:()I` @kind virtual;
  #L44176e.  v0:= temp;
  #L441770.  call temp:= `isStatic`(v0) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L441776.  v0:= temp;
  #L441778.  v1:= 1I;
  #L44177a.  if v0 == 0 then goto L441780;
  #L44177e.  return v1;
  #L441780.  v0:= v2.`org.simpleframework.xml.core.DetailScanner.j` @type ^`java.lang.Class` @kind object;
  #L441784.  call temp:= `isMemberClass`(v0) @signature `Ljava/lang/Class;.isMemberClass:()Z` @kind virtual;
  #L44178a.  v0:= temp;
  #L44178c.  v0:= v0 ^~ v1 @kind int;
  #L44178e.  return v0;
}
procedure `boolean` `isPrimitive`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.isPrimitive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4417a0.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.j` @type ^`java.lang.Class` @kind object;
  #L4417a4.  call temp:= `isPrimitive`(v0) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L4417aa.  v0:= temp;
  #L4417ac.  return v0;
}
procedure `boolean` `isRequired`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.isRequired:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4417c0.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.l` @type ^`boolean` @kind boolean;
  #L4417c4.  return v0;
}
procedure `boolean` `isStrict`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.isStrict:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4417d8.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.m` @type ^`boolean` @kind boolean;
  #L4417dc.  return v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.DetailScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/DetailScanner;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441848.  v0:= v1.`org.simpleframework.xml.core.DetailScanner.j` @type ^`java.lang.Class` @kind object;
  #L44184c.  call temp:= `toString`(v0) @signature `Ljava/lang/Class;.toString:()Ljava/lang/String;` @kind virtual;
  #L441852.  v0:= temp @kind object;
  #L441854.  return v0 @kind object;
}
