record `org.simpleframework.xml.core.SignatureScanner` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.SignatureBuilder` `org.simpleframework.xml.core.SignatureScanner.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.ParameterFactory` `org.simpleframework.xml.core.SignatureScanner.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.ParameterMap` `org.simpleframework.xml.core.SignatureScanner.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Constructor` `org.simpleframework.xml.core.SignatureScanner.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `org.simpleframework.xml.core.SignatureScanner.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.SignatureScanner` v1 @kind this, `java.lang.reflect.Constructor` v2 @kind object, `org.simpleframework.xml.core.ParameterMap` v3 @kind object, `org.simpleframework.xml.core.Support` v4 @kind object) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.<init>:(Ljava/lang/reflect/Constructor;Lorg/simpleframework/xml/core/ParameterMap;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44d8bc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44d8c2.  v0:= new `org.simpleframework.xml.core.SignatureBuilder`;
  #L44d8c6.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L44d8cc.  v1.`org.simpleframework.xml.core.SignatureScanner.a` @type ^`org.simpleframework.xml.core.SignatureBuilder` := v0 @kind object;
  #L44d8d0.  v0:= new `org.simpleframework.xml.core.ParameterFactory`;
  #L44d8d4.  call `<init>`(v0, v4) @signature `Lorg/simpleframework/xml/core/ParameterFactory;.<init>:(Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L44d8da.  v1.`org.simpleframework.xml.core.SignatureScanner.b` @type ^`org.simpleframework.xml.core.ParameterFactory` := v0 @kind object;
  #L44d8de.  call temp:= `getDeclaringClass`(v2) @signature `Ljava/lang/reflect/Constructor;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L44d8e4.  v4:= temp @kind object;
  #L44d8e6.  v1.`org.simpleframework.xml.core.SignatureScanner.e` @type ^`java.lang.Class` := v4 @kind object;
  #L44d8ea.  v1.`org.simpleframework.xml.core.SignatureScanner.d` @type ^`java.lang.reflect.Constructor` := v2 @kind object;
  #L44d8ee.  v1.`org.simpleframework.xml.core.SignatureScanner.c` @type ^`org.simpleframework.xml.core.ParameterMap` := v3 @kind object;
  #L44d8f2.  call `e`(v1, v4) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.e:(Ljava/lang/Class;)V` @kind direct;
  #L44d8f8.  return @kind void;
}
procedure `java.util.List` `a`(`org.simpleframework.xml.core.SignatureScanner` v2 @kind this, `java.lang.annotation.Annotation` v3 @kind object, `int` v4 ) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.a:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L44d70c.  v0:= v2.`org.simpleframework.xml.core.SignatureScanner.b` @type ^`org.simpleframework.xml.core.ParameterFactory` @kind object;
  #L44d710.  v1:= v2.`org.simpleframework.xml.core.SignatureScanner.d` @type ^`java.lang.reflect.Constructor` @kind object;
  #L44d714.  call temp:= `getInstance`(v0, v1, v3, v4) @signature `Lorg/simpleframework/xml/core/ParameterFactory;.getInstance:(Ljava/lang/reflect/Constructor;Ljava/lang/annotation/Annotation;I)Lorg/simpleframework/xml/core/Parameter;` @kind virtual;
  #L44d71a.  v3:= temp @kind object;
  #L44d71c.  if v3 == 0 then goto L44d726;
  #L44d720.  call `d`(v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.d:(Lorg/simpleframework/xml/core/Parameter;)V` @kind direct;
  #L44d726.  call temp:= `singletonList`(v3) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L44d72c.  v3:= temp @kind object;
  #L44d72e.  return v3 @kind object;
}
procedure `java.lang.annotation.Annotation`[] `b`(`org.simpleframework.xml.core.SignatureScanner` v4 @kind this, `java.lang.annotation.Annotation` v5 @kind object) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.b:(Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L44d6a8.  call temp:= `annotationType`(v5) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L44d6ae.  v0:= temp @kind object;
  #L44d6b0.  call temp:= `getDeclaredMethods`(v0) @signature `Ljava/lang/Class;.getDeclaredMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L44d6b6.  v0:= temp @kind object;
  #L44d6b8.  v1:= length @variable v0;
  #L44d6ba.  v2:= 1I;
  #L44d6bc.  v3:= 0I;
  #L44d6be.  if v1 != v2 then goto L44d6d8;
  #L44d6c2.  v0:= v0[v3] @kind object;
  #L44d6c6.  v1:= new `java.lang.Object`[v3];
  #L44d6ca.  call temp:= `invoke`(v0, v5, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L44d6d0.  v5:= temp @kind object;
  #L44d6d2.  v5:= (`java.lang.annotation.Annotation`[]) v5 @kind object;
  #L44d6d6.  return v5 @kind object;
  #L44d6d8.  v0:= new `org.simpleframework.xml.core.UnionException`;
  #L44d6dc.  v1:= 2I;
  #L44d6de.  v1:= new `java.lang.Object`[v1];
  #L44d6e2.  v1[v3]:= v5 @kind object;
  #L44d6e6.  v5:= v4.`org.simpleframework.xml.core.SignatureScanner.e` @type ^`java.lang.Class` @kind object;
  #L44d6ea.  v1[v2]:= v5 @kind object;
  #L44d6ee.  v5:= "Annotation '%s' is not a valid union for %s" @kind object;
  #L44d6f2.  call `<init>`(v0, v5, v1) @signature `Lorg/simpleframework/xml/core/UnionException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44d6f8.  throw v0;
}
procedure `java.util.List` `c`(`org.simpleframework.xml.core.SignatureScanner` v1 @kind this, `java.lang.annotation.Annotation` v2 @kind object, `int` v3 ) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.c:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44d760.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.Attribute` @kind boolean;
  #L44d764.  if v0 == 0 then goto L44d772;
  #L44d768.  call temp:= `a`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.a:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L44d76e.  v2:= temp @kind object;
  #L44d770.  return v2 @kind object;
  #L44d772.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.Element` @kind boolean;
  #L44d776.  if v0 == 0 then goto L44d784;
  #L44d77a.  call temp:= `a`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.a:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L44d780.  v2:= temp @kind object;
  #L44d782.  return v2 @kind object;
  #L44d784.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.ElementList` @kind boolean;
  #L44d788.  if v0 == 0 then goto L44d796;
  #L44d78c.  call temp:= `a`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.a:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L44d792.  v2:= temp @kind object;
  #L44d794.  return v2 @kind object;
  #L44d796.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.ElementArray` @kind boolean;
  #L44d79a.  if v0 == 0 then goto L44d7a8;
  #L44d79e.  call temp:= `a`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.a:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L44d7a4.  v2:= temp @kind object;
  #L44d7a6.  return v2 @kind object;
  #L44d7a8.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.ElementMap` @kind boolean;
  #L44d7ac.  if v0 == 0 then goto L44d7ba;
  #L44d7b0.  call temp:= `a`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.a:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L44d7b6.  v2:= temp @kind object;
  #L44d7b8.  return v2 @kind object;
  #L44d7ba.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.ElementListUnion` @kind boolean;
  #L44d7be.  if v0 == 0 then goto L44d7cc;
  #L44d7c2.  call temp:= `g`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.g:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L44d7c8.  v2:= temp @kind object;
  #L44d7ca.  return v2 @kind object;
  #L44d7cc.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.ElementMapUnion` @kind boolean;
  #L44d7d0.  if v0 == 0 then goto L44d7de;
  #L44d7d4.  call temp:= `g`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.g:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L44d7da.  v2:= temp @kind object;
  #L44d7dc.  return v2 @kind object;
  #L44d7de.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.ElementUnion` @kind boolean;
  #L44d7e2.  if v0 == 0 then goto L44d7f0;
  #L44d7e6.  call temp:= `g`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.g:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L44d7ec.  v2:= temp @kind object;
  #L44d7ee.  return v2 @kind object;
  #L44d7f0.  v0:= instanceof @variable v2 @type ^`org.simpleframework.xml.Text` @kind boolean;
  #L44d7f4.  if v0 == 0 then goto L44d802;
  #L44d7f8.  call temp:= `a`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.a:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L44d7fe.  v2:= temp @kind object;
  #L44d800.  return v2 @kind object;
  #L44d802.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L44d808.  v2:= temp @kind object;
  #L44d80a.  return v2 @kind object;
}
procedure `void` `d`(`org.simpleframework.xml.core.SignatureScanner` v3 @kind this, `org.simpleframework.xml.core.Parameter` v4 @kind object) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.d:(Lorg/simpleframework/xml/core/Parameter;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L44d90c.  call temp:= `getPath`(v4) @signature `Lorg/simpleframework/xml/core/Parameter;.getPath:()Ljava/lang/String;` @kind interface;
  #L44d912.  v0:= temp @kind object;
  #L44d914.  call temp:= `getKey`(v4) @signature `Lorg/simpleframework/xml/core/Parameter;.getKey:()Ljava/lang/Object;` @kind interface;
  #L44d91a.  v1:= temp @kind object;
  #L44d91c.  v2:= v3.`org.simpleframework.xml.core.SignatureScanner.c` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L44d920.  call temp:= `containsKey`(v2, v1) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L44d926.  v2:= temp;
  #L44d928.  if v2 == 0 then goto L44d932;
  #L44d92c.  call `h`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.h:(Lorg/simpleframework/xml/core/Parameter;Ljava/lang/Object;)V` @kind direct;
  #L44d932.  v2:= v3.`org.simpleframework.xml.core.SignatureScanner.c` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L44d936.  call temp:= `containsKey`(v2, v0) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L44d93c.  v2:= temp;
  #L44d93e.  if v2 == 0 then goto L44d948;
  #L44d942.  call `h`(v3, v4, v0) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.h:(Lorg/simpleframework/xml/core/Parameter;Ljava/lang/Object;)V` @kind direct;
  #L44d948.  v2:= v3.`org.simpleframework.xml.core.SignatureScanner.c` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L44d94c.  call temp:= `put`(v2, v0, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L44d952.  v0:= v3.`org.simpleframework.xml.core.SignatureScanner.c` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L44d956.  call temp:= `put`(v0, v1, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L44d95c.  return @kind void;
}
procedure `void` `e`(`org.simpleframework.xml.core.SignatureScanner` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.e:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L44d970.  v3:= v2.`org.simpleframework.xml.core.SignatureScanner.d` @type ^`java.lang.reflect.Constructor` @kind object;
  #L44d974.  call temp:= `getParameterTypes`(v3) @signature `Ljava/lang/reflect/Constructor;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L44d97a.  v3:= temp @kind object;
  #L44d97c.  v0:= 0I;
  #L44d97e.  v1:= length @variable v3;
  #L44d980.  if v0 >= v1 then goto L44d994;
  #L44d984.  v1:= v3[v0] @kind object;
  #L44d988.  call `f`(v2, v1, v0) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.f:(Ljava/lang/Class;I)V` @kind direct;
  #L44d98e.  v0:= v0 + 1;
  #L44d992.  goto L44d97e;
  #L44d994.  return @kind void;
}
procedure `void` `f`(`org.simpleframework.xml.core.SignatureScanner` v4 @kind this, `java.lang.Class` v5 @kind object, `int` v6 ) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.f:(Ljava/lang/Class;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L44d9a8.  v5:= v4.`org.simpleframework.xml.core.SignatureScanner.d` @type ^`java.lang.reflect.Constructor` @kind object;
  #L44d9ac.  call temp:= `getParameterAnnotations`(v5) @signature `Ljava/lang/reflect/Constructor;.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L44d9b2.  v5:= temp @kind object;
  #L44d9b4.  v0:= 0I;
  #L44d9b6.  v1:= v5[v6] @kind object;
  #L44d9ba.  v1:= length @variable v1;
  #L44d9bc.  if v0 >= v1 then goto L44da02;
  #L44d9c0.  v1:= v5[v6] @kind object;
  #L44d9c4.  v1:= v1[v0] @kind object;
  #L44d9c8.  call temp:= `c`(v4, v1, v6) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.c:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @kind direct;
  #L44d9ce.  v1:= temp @kind object;
  #L44d9d0.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L44d9d6.  v1:= temp @kind object;
  #L44d9d8.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L44d9de.  v2:= temp;
  #L44d9e0.  if v2 == 0 then goto L44d9fc;
  #L44d9e4.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L44d9ea.  v2:= temp @kind object;
  #L44d9ec.  v2:= (`org.simpleframework.xml.core.Parameter`) v2 @kind object;
  #L44d9f0.  v3:= v4.`org.simpleframework.xml.core.SignatureScanner.a` @type ^`org.simpleframework.xml.core.SignatureBuilder` @kind object;
  #L44d9f4.  call `insert`(v3, v2, v6) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.insert:(Lorg/simpleframework/xml/core/Parameter;I)V` @kind virtual;
  #L44d9fa.  goto L44d9d8;
  #L44d9fc.  v0:= v0 + 1;
  #L44da00.  goto L44d9b6;
  #L44da02.  return @kind void;
}
procedure `java.util.List` `g`(`org.simpleframework.xml.core.SignatureScanner` v8 @kind this, `java.lang.annotation.Annotation` v9 @kind object, `int` v10 ) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.g:(Ljava/lang/annotation/Annotation;I)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L44d81c.  v0:= new `org.simpleframework.xml.core.Signature`;
  #L44d820.  v1:= v8.`org.simpleframework.xml.core.SignatureScanner.d` @type ^`java.lang.reflect.Constructor` @kind object;
  #L44d824.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/Signature;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L44d82a.  call temp:= `b`(v8, v9) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.b:(Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;` @kind direct;
  #L44d830.  v1:= temp @kind object;
  #L44d832.  v2:= length @variable v1;
  #L44d834.  v3:= 0I;
  #L44d836.  v4:= 0I;
  #L44d838.  if v4 >= v2 then goto L44d8a0;
  #L44d83c.  v5:= v1[v4] @kind object;
  #L44d840.  v6:= v8.`org.simpleframework.xml.core.SignatureScanner.b` @type ^`org.simpleframework.xml.core.ParameterFactory` @kind object;
  #L44d844.  v7:= v8.`org.simpleframework.xml.core.SignatureScanner.d` @type ^`java.lang.reflect.Constructor` @kind object;
  #L44d848.  call temp:= `getInstance`(v6, v7, v9, v5, v10) @signature `Lorg/simpleframework/xml/core/ParameterFactory;.getInstance:(Ljava/lang/reflect/Constructor;Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;I)Lorg/simpleframework/xml/core/Parameter;` @kind virtual;
  #L44d84e.  v5:= temp @kind object;
  #L44d850.  call temp:= `getPath`(v5) @signature `Lorg/simpleframework/xml/core/Parameter;.getPath:()Ljava/lang/String;` @kind interface;
  #L44d856.  v6:= temp @kind object;
  #L44d858.  call temp:= `contains`(v0, v6) @signature `Lorg/simpleframework/xml/core/Signature;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L44d85e.  v7:= temp;
  #L44d860.  if v7 != 0 then goto L44d876;
  #L44d864.  call `set`(v0, v6, v5) @signature `Lorg/simpleframework/xml/core/Signature;.set:(Ljava/lang/Object;Lorg/simpleframework/xml/core/Parameter;)V` @kind virtual;
  #L44d86a.  call `d`(v8, v5) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.d:(Lorg/simpleframework/xml/core/Parameter;)V` @kind direct;
  #L44d870.  v4:= v4 + 1;
  #L44d874.  goto L44d838;
  #L44d876.  v10:= new `org.simpleframework.xml.core.UnionException`;
  #L44d87a.  v0:= 3I;
  #L44d87c.  v0:= new `java.lang.Object`[v0];
  #L44d880.  v0[v3]:= v6 @kind object;
  #L44d884.  v1:= 1I;
  #L44d886.  v0[v1]:= v9 @kind object;
  #L44d88a.  v9:= v8.`org.simpleframework.xml.core.SignatureScanner.e` @type ^`java.lang.Class` @kind object;
  #L44d88e.  v1:= 2I;
  #L44d890.  v0[v1]:= v9 @kind object;
  #L44d894.  v9:= "Annotation name '%s' used more than once in %s for %s" @kind object;
  #L44d898.  call `<init>`(v10, v9, v0) @signature `Lorg/simpleframework/xml/core/UnionException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44d89e.  throw v10;
  #L44d8a0.  call temp:= `getAll`(v0) @signature `Lorg/simpleframework/xml/core/Signature;.getAll:()Ljava/util/List;` @kind virtual;
  #L44d8a6.  v9:= temp @kind object;
  #L44d8a8.  return v9 @kind object;
}
procedure `void` `h`(`org.simpleframework.xml.core.SignatureScanner` v5 @kind this, `org.simpleframework.xml.core.Parameter` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.h:(Lorg/simpleframework/xml/core/Parameter;Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L44da14.  v0:= v5.`org.simpleframework.xml.core.SignatureScanner.c` @type ^`org.simpleframework.xml.core.ParameterMap` @kind object;
  #L44da18.  call temp:= `get`(v0, v7) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L44da1e.  v7:= temp @kind object;
  #L44da20.  v7:= (`org.simpleframework.xml.core.Parameter`) v7 @kind object;
  #L44da24.  call temp:= `isText`(v6) @signature `Lorg/simpleframework/xml/core/Parameter;.isText:()Z` @kind interface;
  #L44da2a.  v0:= temp;
  #L44da2c.  call temp:= `isText`(v7) @signature `Lorg/simpleframework/xml/core/Parameter;.isText:()Z` @kind interface;
  #L44da32.  v1:= temp;
  #L44da34.  if v0 == v1 then goto L44dab8;
  #L44da38.  call temp:= `getAnnotation`(v6) @signature `Lorg/simpleframework/xml/core/Parameter;.getAnnotation:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L44da3e.  v0:= temp @kind object;
  #L44da40.  call temp:= `getAnnotation`(v7) @signature `Lorg/simpleframework/xml/core/Parameter;.getAnnotation:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L44da46.  v1:= temp @kind object;
  #L44da48.  call temp:= `getPath`(v6) @signature `Lorg/simpleframework/xml/core/Parameter;.getPath:()Ljava/lang/String;` @kind interface;
  #L44da4e.  v2:= temp @kind object;
  #L44da50.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L44da56.  v0:= temp;
  #L44da58.  v1:= 1I;
  #L44da5a.  v3:= 0I;
  #L44da5c.  v4:= 2I;
  #L44da5e.  if v0 == 0 then goto L44da98;
  #L44da62.  call temp:= `getType`(v7) @signature `Lorg/simpleframework/xml/core/Parameter;.getType:()Ljava/lang/Class;` @kind interface;
  #L44da68.  v7:= temp @kind object;
  #L44da6a.  call temp:= `getType`(v6) @signature `Lorg/simpleframework/xml/core/Parameter;.getType:()Ljava/lang/Class;` @kind interface;
  #L44da70.  v6:= temp @kind object;
  #L44da72.  if v7 != v6 then goto L44da78;
  #L44da76.  goto L44dab8;
  #L44da78.  v6:= new `org.simpleframework.xml.core.ConstructorException`;
  #L44da7c.  v7:= new `java.lang.Object`[v4];
  #L44da80.  v7[v3]:= v2 @kind object;
  #L44da84.  v0:= v5.`org.simpleframework.xml.core.SignatureScanner.e` @type ^`java.lang.Class` @kind object;
  #L44da88.  v7[v1]:= v0 @kind object;
  #L44da8c.  v0:= "Parameter types do not match for '%s' in %s" @kind object;
  #L44da90.  call `<init>`(v6, v0, v7) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44da96.  throw v6;
  #L44da98.  v6:= new `org.simpleframework.xml.core.ConstructorException`;
  #L44da9c.  v7:= new `java.lang.Object`[v4];
  #L44daa0.  v7[v3]:= v2 @kind object;
  #L44daa4.  v0:= v5.`org.simpleframework.xml.core.SignatureScanner.e` @type ^`java.lang.Class` @kind object;
  #L44daa8.  v7[v1]:= v0 @kind object;
  #L44daac.  v0:= "Annotations do not match for '%s' in %s" @kind object;
  #L44dab0.  call `<init>`(v6, v0, v7) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44dab6.  throw v6;
  #L44dab8.  return @kind void;
}
procedure `java.util.List` `getSignatures`(`org.simpleframework.xml.core.SignatureScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.getSignatures:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44d740.  v0:= v1.`org.simpleframework.xml.core.SignatureScanner.a` @type ^`org.simpleframework.xml.core.SignatureBuilder` @kind object;
  #L44d744.  call temp:= `build`(v0) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.build:()Ljava/util/List;` @kind virtual;
  #L44d74a.  v0:= temp @kind object;
  #L44d74c.  return v0 @kind object;
}
procedure `boolean` `isValid`(`org.simpleframework.xml.core.SignatureScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/SignatureScanner;.isValid:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44d688.  v0:= v1.`org.simpleframework.xml.core.SignatureScanner.a` @type ^`org.simpleframework.xml.core.SignatureBuilder` @kind object;
  #L44d68c.  call temp:= `isValid`(v0) @signature `Lorg/simpleframework/xml/core/SignatureBuilder;.isValid:()Z` @kind virtual;
  #L44d692.  v0:= temp;
  #L44d694.  return v0;
}
