record `org.simpleframework.xml.core.VersionLabel` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.TemplateLabel` @kind class {
  `org.simpleframework.xml.core.Decorator` `org.simpleframework.xml.core.VersionLabel.b` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Introspector` `org.simpleframework.xml.core.VersionLabel.c` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Expression` `org.simpleframework.xml.core.VersionLabel.d` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Version` `org.simpleframework.xml.core.VersionLabel.e` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.Format` `org.simpleframework.xml.core.VersionLabel.f` @AccessFlag PRIVATE;
  `java.lang.Class` `org.simpleframework.xml.core.VersionLabel.g` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.core.VersionLabel.h` @AccessFlag PRIVATE;
  `boolean` `org.simpleframework.xml.core.VersionLabel.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.VersionLabel` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `org.simpleframework.xml.Version` v3 @kind object, `org.simpleframework.xml.stream.Format` v4 @kind object) @signature `Lorg/simpleframework/xml/core/VersionLabel;.<init>:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/Version;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4512c4.  call `<init>`(v1) @signature `Lorg/simpleframework/xml/core/TemplateLabel;.<init>:()V` @kind direct;
  #L4512ca.  v0:= new `org.simpleframework.xml.core.Introspector`;
  #L4512ce.  call `<init>`(v0, v2, v1, v4) @signature `Lorg/simpleframework/xml/core/Introspector;.<init>:(Lorg/simpleframework/xml/core/Contact;Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L4512d4.  v1.`org.simpleframework.xml.core.VersionLabel.c` @type ^`org.simpleframework.xml.core.Introspector` := v0 @kind object;
  #L4512d8.  v0:= new `org.simpleframework.xml.core.Qualifier`;
  #L4512dc.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/Qualifier;.<init>:(Lorg/simpleframework/xml/core/Contact;)V` @kind direct;
  #L4512e2.  v1.`org.simpleframework.xml.core.VersionLabel.b` @type ^`org.simpleframework.xml.core.Decorator` := v0 @kind object;
  #L4512e6.  call temp:= `required`(v3) @signature `Lorg/simpleframework/xml/Version;.required:()Z` @kind interface;
  #L4512ec.  v0:= temp;
  #L4512ee.  v1.`org.simpleframework.xml.core.VersionLabel.i` @type ^`boolean` := v0 @kind boolean;
  #L4512f2.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L4512f8.  v2:= temp @kind object;
  #L4512fa.  v1.`org.simpleframework.xml.core.VersionLabel.g` @type ^`java.lang.Class` := v2 @kind object;
  #L4512fe.  call temp:= `name`(v3) @signature `Lorg/simpleframework/xml/Version;.name:()Ljava/lang/String;` @kind interface;
  #L451304.  v2:= temp @kind object;
  #L451306.  v1.`org.simpleframework.xml.core.VersionLabel.h` @type ^`java.lang.String` := v2 @kind object;
  #L45130a.  v1.`org.simpleframework.xml.core.VersionLabel.f` @type ^`org.simpleframework.xml.stream.Format` := v4 @kind object;
  #L45130e.  v1.`org.simpleframework.xml.core.VersionLabel.e` @type ^`org.simpleframework.xml.Version` := v3 @kind object;
  #L451312.  return @kind void;
}
procedure `java.lang.annotation.Annotation` `getAnnotation`(`org.simpleframework.xml.core.VersionLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/VersionLabel;.getAnnotation:()Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4511e4.  v0:= v1.`org.simpleframework.xml.core.VersionLabel.e` @type ^`org.simpleframework.xml.Version` @kind object;
  #L4511e8.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Contact` `getContact`(`org.simpleframework.xml.core.VersionLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/VersionLabel;.getContact:()Lorg/simpleframework/xml/core/Contact;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4511fc.  v0:= v1.`org.simpleframework.xml.core.VersionLabel.c` @type ^`org.simpleframework.xml.core.Introspector` @kind object;
  #L451200.  call temp:= `getContact`(v0) @signature `Lorg/simpleframework/xml/core/Introspector;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind virtual;
  #L451206.  v0:= temp @kind object;
  #L451208.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Converter` `getConverter`(`org.simpleframework.xml.core.VersionLabel` v4 @kind this, `org.simpleframework.xml.core.Context` v5 @kind object) @signature `Lorg/simpleframework/xml/core/VersionLabel;.getConverter:(Lorg/simpleframework/xml/core/Context;)Lorg/simpleframework/xml/core/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45121c.  call temp:= `getEmpty`(v4, v5) @signature `Lorg/simpleframework/xml/core/VersionLabel;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/String;` @kind virtual;
  #L451222.  v0:= temp @kind object;
  #L451224.  call temp:= `getContact`(v4) @signature `Lorg/simpleframework/xml/core/VersionLabel;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind virtual;
  #L45122a.  v1:= temp @kind object;
  #L45122c.  call temp:= `isFloat`(v5, v1) @signature `Lorg/simpleframework/xml/core/Context;.isFloat:(Lorg/simpleframework/xml/strategy/Type;)Z` @kind interface;
  #L451232.  v2:= temp;
  #L451234.  if v2 == 0 then goto L451244;
  #L451238.  v2:= new `org.simpleframework.xml.core.Primitive`;
  #L45123c.  call `<init>`(v2, v5, v1, v0) @signature `Lorg/simpleframework/xml/core/Primitive;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/String;)V` @kind direct;
  #L451242.  return v2 @kind object;
  #L451244.  v5:= new `org.simpleframework.xml.core.AttributeException`;
  #L451248.  v0:= 2I;
  #L45124a.  v0:= new `java.lang.Object`[v0];
  #L45124e.  v2:= v4.`org.simpleframework.xml.core.VersionLabel.e` @type ^`org.simpleframework.xml.Version` @kind object;
  #L451252.  v3:= 0I;
  #L451254.  v0[v3]:= v2 @kind object;
  #L451258.  v2:= 1I;
  #L45125a.  v0[v2]:= v1 @kind object;
  #L45125e.  v1:= "Cannot use %s to represent %s" @kind object;
  #L451262.  call `<init>`(v5, v1, v0) @signature `Lorg/simpleframework/xml/core/AttributeException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L451268.  throw v5;
}
procedure `org.simpleframework.xml.core.Decorator` `getDecorator`(`org.simpleframework.xml.core.VersionLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/VersionLabel;.getDecorator:()Lorg/simpleframework/xml/core/Decorator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45127c.  v0:= v1.`org.simpleframework.xml.core.VersionLabel.b` @type ^`org.simpleframework.xml.core.Decorator` @kind object;
  #L451280.  return v0 @kind object;
}
procedure `java.lang.Object` `getEmpty`(`org.simpleframework.xml.core.VersionLabel` v0 @kind this, `org.simpleframework.xml.core.Context` v1 @kind object) @signature `Lorg/simpleframework/xml/core/VersionLabel;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L45111c.  call temp:= `getEmpty`(v0, v1) @signature `Lorg/simpleframework/xml/core/VersionLabel;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/String;` @kind virtual;
  #L451122.  v1:= temp @kind object;
  #L451124.  return v1 @kind object;
}
procedure `java.lang.String` `getEmpty`(`org.simpleframework.xml.core.VersionLabel` v0 @kind this, `org.simpleframework.xml.core.Context` v1 @kind object) @signature `Lorg/simpleframework/xml/core/VersionLabel;.getEmpty:(Lorg/simpleframework/xml/core/Context;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L451138.  v1:= 0I;
  #L45113a.  return v1 @kind object;
}
procedure `org.simpleframework.xml.core.Expression` `getExpression`(`org.simpleframework.xml.core.VersionLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/VersionLabel;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L451294.  v0:= v1.`org.simpleframework.xml.core.VersionLabel.d` @type ^`org.simpleframework.xml.core.Expression` @kind object;
  #L451298.  if v0 != 0 then goto L4512ac;
  #L45129c.  v0:= v1.`org.simpleframework.xml.core.VersionLabel.c` @type ^`org.simpleframework.xml.core.Introspector` @kind object;
  #L4512a0.  call temp:= `getExpression`(v0) @signature `Lorg/simpleframework/xml/core/Introspector;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L4512a6.  v0:= temp @kind object;
  #L4512a8.  v1.`org.simpleframework.xml.core.VersionLabel.d` @type ^`org.simpleframework.xml.core.Expression` := v0 @kind object;
  #L4512ac.  v0:= v1.`org.simpleframework.xml.core.VersionLabel.d` @type ^`org.simpleframework.xml.core.Expression` @kind object;
  #L4512b0.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.VersionLabel` v2 @kind this) @signature `Lorg/simpleframework/xml/core/VersionLabel;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45114c.  v0:= v2.`org.simpleframework.xml.core.VersionLabel.f` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L451150.  call temp:= `getStyle`(v0) @signature `Lorg/simpleframework/xml/stream/Format;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind virtual;
  #L451156.  v0:= temp @kind object;
  #L451158.  v1:= v2.`org.simpleframework.xml.core.VersionLabel.c` @type ^`org.simpleframework.xml.core.Introspector` @kind object;
  #L45115c.  call temp:= `getName`(v1) @signature `Lorg/simpleframework/xml/core/Introspector;.getName:()Ljava/lang/String;` @kind virtual;
  #L451162.  v1:= temp @kind object;
  #L451164.  call temp:= `getAttribute`(v0, v1) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L45116a.  v0:= temp @kind object;
  #L45116c.  return v0 @kind object;
}
procedure `java.lang.String` `getOverride`(`org.simpleframework.xml.core.VersionLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/VersionLabel;.getOverride:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L451180.  v0:= v1.`org.simpleframework.xml.core.VersionLabel.h` @type ^`java.lang.String` @kind object;
  #L451184.  return v0 @kind object;
}
procedure `java.lang.String` `getPath`(`org.simpleframework.xml.core.VersionLabel` v2 @kind this) @signature `Lorg/simpleframework/xml/core/VersionLabel;.getPath:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L451198.  call temp:= `getExpression`(v2) @signature `Lorg/simpleframework/xml/core/VersionLabel;.getExpression:()Lorg/simpleframework/xml/core/Expression;` @kind virtual;
  #L45119e.  v0:= temp @kind object;
  #L4511a0.  call temp:= `getName`(v2) @signature `Lorg/simpleframework/xml/core/VersionLabel;.getName:()Ljava/lang/String;` @kind virtual;
  #L4511a6.  v1:= temp @kind object;
  #L4511a8.  call temp:= `getAttribute`(v0, v1) @signature `Lorg/simpleframework/xml/core/Expression;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L4511ae.  v0:= temp @kind object;
  #L4511b0.  return v0 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.VersionLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/VersionLabel;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L451104.  v0:= v1.`org.simpleframework.xml.core.VersionLabel.g` @type ^`java.lang.Class` @kind object;
  #L451108.  return v0 @kind object;
}
procedure `boolean` `isAttribute`(`org.simpleframework.xml.core.VersionLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/VersionLabel;.isAttribute:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4510c4.  v0:= 1I;
  #L4510c6.  return v0;
}
procedure `boolean` `isData`(`org.simpleframework.xml.core.VersionLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/VersionLabel;.isData:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4510d8.  v0:= 0I;
  #L4510da.  return v0;
}
procedure `boolean` `isRequired`(`org.simpleframework.xml.core.VersionLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/VersionLabel;.isRequired:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4510ec.  v0:= v1.`org.simpleframework.xml.core.VersionLabel.i` @type ^`boolean` @kind boolean;
  #L4510f0.  return v0;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.VersionLabel` v1 @kind this) @signature `Lorg/simpleframework/xml/core/VersionLabel;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4511c4.  v0:= v1.`org.simpleframework.xml.core.VersionLabel.c` @type ^`org.simpleframework.xml.core.Introspector` @kind object;
  #L4511c8.  call temp:= `toString`(v0) @signature `Lorg/simpleframework/xml/core/Introspector;.toString:()Ljava/lang/String;` @kind virtual;
  #L4511ce.  v0:= temp @kind object;
  #L4511d0.  return v0 @kind object;
}
