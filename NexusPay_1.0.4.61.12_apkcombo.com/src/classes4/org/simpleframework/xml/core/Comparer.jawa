record `org.simpleframework.xml.core.Comparer` @kind class @AccessFlag PUBLIC {
  `java.lang.String`[] `org.simpleframework.xml.core.Comparer.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Comparer` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Comparer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L43e38c.  v0:= "name" @kind object;
  #L43e390.  temp:= new `java.lang.String`[v0];
  #L43e396.  v0:= temp @kind object;
  #L43e398.  call `<init>`(v1, v0) @signature `Lorg/simpleframework/xml/core/Comparer;.<init>:([Ljava/lang/String;)V` @kind direct;
  #L43e39e.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Comparer` v0 @kind this, `java.lang.String`[] v1 @kind object) @signature `Lorg/simpleframework/xml/core/Comparer;.<init>:([Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43e3b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43e3b6.  v0.`org.simpleframework.xml.core.Comparer.a` @type ^`java.lang.String`[] := v1 @kind object;
  #L43e3ba.  return @kind void;
}
procedure `boolean` `a`(`org.simpleframework.xml.core.Comparer` v5 @kind this, `java.lang.reflect.Method` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Comparer;.a:(Ljava/lang/reflect/Method;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L43e344.  call temp:= `getName`(v6) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L43e34a.  v6:= temp @kind object;
  #L43e34c.  v0:= v5.`org.simpleframework.xml.core.Comparer.a` @type ^`java.lang.String`[] @kind object;
  #L43e350.  v1:= 0I;
  #L43e352.  if v0 == 0 then goto L43e378;
  #L43e356.  v2:= length @variable v0;
  #L43e358.  v3:= 0I;
  #L43e35a.  if v3 >= v2 then goto L43e378;
  #L43e35e.  v4:= v0[v3] @kind object;
  #L43e362.  call temp:= `equals`(v6, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L43e368.  v4:= temp;
  #L43e36a.  if v4 == 0 then goto L43e372;
  #L43e36e.  v6:= 1I;
  #L43e370.  return v6;
  #L43e372.  v3:= v3 + 1;
  #L43e376.  goto L43e35a;
  #L43e378.  return v1;
}
procedure `boolean` `equals`(`org.simpleframework.xml.core.Comparer` v7 @kind this, `java.lang.annotation.Annotation` v8 @kind object, `java.lang.annotation.Annotation` v9 @kind object) @signature `Lorg/simpleframework/xml/core/Comparer;.equals:(Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L43e2c4.  call temp:= `annotationType`(v8) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L43e2ca.  v0:= temp @kind object;
  #L43e2cc.  call temp:= `annotationType`(v9) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L43e2d2.  v1:= temp @kind object;
  #L43e2d4.  call temp:= `getDeclaredMethods`(v0) @signature `Ljava/lang/Class;.getDeclaredMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L43e2da.  v2:= temp @kind object;
  #L43e2dc.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L43e2e2.  v0:= temp;
  #L43e2e4.  v1:= 0I;
  #L43e2e6.  if v0 == 0 then goto L43e332;
  #L43e2ea.  v0:= length @variable v2;
  #L43e2ec.  v3:= 0I;
  #L43e2ee.  if v3 >= v0 then goto L43e32e;
  #L43e2f2.  v4:= v2[v3] @kind object;
  #L43e2f6.  call temp:= `a`(v7, v4) @signature `Lorg/simpleframework/xml/core/Comparer;.a:(Ljava/lang/reflect/Method;)Z` @kind direct;
  #L43e2fc.  v5:= temp;
  #L43e2fe.  if v5 != 0 then goto L43e328;
  #L43e302.  v5:= new `java.lang.Object`[v1];
  #L43e306.  call temp:= `invoke`(v4, v8, v5) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L43e30c.  v5:= temp @kind object;
  #L43e30e.  v6:= new `java.lang.Object`[v1];
  #L43e312.  call temp:= `invoke`(v4, v9, v6) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L43e318.  v4:= temp @kind object;
  #L43e31a.  call temp:= `equals`(v5, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L43e320.  v4:= temp;
  #L43e322.  if v4 != 0 then goto L43e328;
  #L43e326.  return v1;
  #L43e328.  v3:= v3 + 1;
  #L43e32c.  goto L43e2ee;
  #L43e32e.  v8:= 1I;
  #L43e330.  return v8;
  #L43e332.  return v1;
}
