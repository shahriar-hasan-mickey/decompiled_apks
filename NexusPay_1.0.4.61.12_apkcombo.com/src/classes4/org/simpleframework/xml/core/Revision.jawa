record `org.simpleframework.xml.core.Revision` @kind class @AccessFlag PUBLIC {
  `boolean` `org.simpleframework.xml.core.Revision.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Revision` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Revision;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44c944.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44c94a.  v0:= 1I;
  #L44c94c.  v1.`org.simpleframework.xml.core.Revision.a` @type ^`boolean` := v0 @kind boolean;
  #L44c950.  return @kind void;
}
procedure `boolean` `compare`(`org.simpleframework.xml.core.Revision` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Revision;.compare:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44c8d0.  if v4 == 0 then goto L44c8e2;
  #L44c8d4.  call temp:= `equals`(v4, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L44c8da.  v3:= temp;
  #L44c8dc.  v2.`org.simpleframework.xml.core.Revision.a` @type ^`boolean` := v3 @kind boolean;
  #L44c8e0.  goto L44c8fe;
  #L44c8e2.  if v3 == 0 then goto L44c8fe;
  #L44c8e6.  v0:= 1.0D;
  #L44c8ea.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L44c8f0.  v4:= temp @kind object;
  #L44c8f2.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L44c8f8.  v3:= temp;
  #L44c8fa.  v2.`org.simpleframework.xml.core.Revision.a` @type ^`boolean` := v3 @kind boolean;
  #L44c8fe.  v3:= v2.`org.simpleframework.xml.core.Revision.a` @type ^`boolean` @kind boolean;
  #L44c902.  return v3;
}
procedure `double` `getDefault`(`org.simpleframework.xml.core.Revision` v2 @kind this) @signature `Lorg/simpleframework/xml/core/Revision;.getDefault:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44c92c.  v0:= 1.0D;
  #L44c930.  return v0 @kind wide;
}
procedure `boolean` `isEqual`(`org.simpleframework.xml.core.Revision` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Revision;.isEqual:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44c914.  v0:= v1.`org.simpleframework.xml.core.Revision.a` @type ^`boolean` @kind boolean;
  #L44c918.  return v0;
}
