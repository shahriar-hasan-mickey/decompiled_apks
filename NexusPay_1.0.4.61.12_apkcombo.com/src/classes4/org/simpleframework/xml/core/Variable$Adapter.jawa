record `org.simpleframework.xml.core.Variable$Adapter` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Repeater` @kind interface {
  `org.simpleframework.xml.core.Converter` `org.simpleframework.xml.core.Variable$Adapter.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `org.simpleframework.xml.core.Variable$Adapter.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.Variable$Adapter.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Variable$Adapter` v0 @kind this, `org.simpleframework.xml.core.Converter` v1 @kind object, `org.simpleframework.xml.core.Label` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Variable$Adapter;.<init>:(Lorg/simpleframework/xml/core/Converter;Lorg/simpleframework/xml/core/Label;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L450d00.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L450d06.  v0.`org.simpleframework.xml.core.Variable$Adapter.a` @type ^`org.simpleframework.xml.core.Converter` := v1 @kind object;
  #L450d0a.  v0.`org.simpleframework.xml.core.Variable$Adapter.b` @type ^`java.lang.Object` := v3 @kind object;
  #L450d0e.  v0.`org.simpleframework.xml.core.Variable$Adapter.c` @type ^`org.simpleframework.xml.core.Label` := v2 @kind object;
  #L450d12.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Variable$Adapter` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Variable$Adapter;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L450c78.  v0:= v1.`org.simpleframework.xml.core.Variable$Adapter.b` @type ^`java.lang.Object` @kind object;
  #L450c7c.  call temp:= `read`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Variable$Adapter;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L450c82.  v2:= temp @kind object;
  #L450c84.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Variable$Adapter` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Variable$Adapter;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L450c98.  call temp:= `getPosition`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L450c9e.  v0:= temp @kind object;
  #L450ca0.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L450ca6.  v1:= temp @kind object;
  #L450ca8.  v2:= v4.`org.simpleframework.xml.core.Variable$Adapter.a` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L450cac.  v3:= instanceof @variable v2 @type ^`org.simpleframework.xml.core.Repeater` @kind boolean;
  #L450cb0.  if v3 == 0 then goto L450cc2;
  #L450cb4.  v2:= (`org.simpleframework.xml.core.Repeater`) v2 @kind object;
  #L450cb8.  call temp:= `read`(v2, v5, v6) @signature `Lorg/simpleframework/xml/core/Repeater;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L450cbe.  v5:= temp @kind object;
  #L450cc0.  return v5 @kind object;
  #L450cc2.  v5:= new `org.simpleframework.xml.core.PersistenceException`;
  #L450cc6.  v6:= 3I;
  #L450cc8.  v6:= new `java.lang.Object`[v6];
  #L450ccc.  v2:= 0I;
  #L450cce.  v6[v2]:= v1 @kind object;
  #L450cd2.  v1:= v4.`org.simpleframework.xml.core.Variable$Adapter.c` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L450cd6.  v2:= 1I;
  #L450cd8.  v6[v2]:= v1 @kind object;
  #L450cdc.  v1:= 2I;
  #L450cde.  v6[v1]:= v0 @kind object;
  #L450ce2.  v0:= "Element '%s' is already used with %s at %s" @kind object;
  #L450ce6.  call `<init>`(v5, v0, v6) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L450cec.  throw v5;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.Variable$Adapter` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Variable$Adapter;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L450c1c.  call temp:= `getPosition`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getPosition:()Lorg/simpleframework/xml/stream/Position;` @kind interface;
  #L450c22.  v0:= temp @kind object;
  #L450c24.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L450c2a.  v1:= temp @kind object;
  #L450c2c.  v2:= v4.`org.simpleframework.xml.core.Variable$Adapter.a` @type ^`org.simpleframework.xml.core.Converter` @kind object;
  #L450c30.  v3:= instanceof @variable v2 @type ^`org.simpleframework.xml.core.Repeater` @kind boolean;
  #L450c34.  if v3 == 0 then goto L450c46;
  #L450c38.  v2:= (`org.simpleframework.xml.core.Repeater`) v2 @kind object;
  #L450c3c.  call temp:= `validate`(v2, v5) @signature `Lorg/simpleframework/xml/core/Converter;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind interface;
  #L450c42.  v5:= temp;
  #L450c44.  return v5;
  #L450c46.  v5:= new `org.simpleframework.xml.core.PersistenceException`;
  #L450c4a.  v2:= 2I;
  #L450c4c.  v2:= new `java.lang.Object`[v2];
  #L450c50.  v3:= 0I;
  #L450c52.  v2[v3]:= v1 @kind object;
  #L450c56.  v1:= 1I;
  #L450c58.  v2[v1]:= v0 @kind object;
  #L450c5c.  v0:= "Element '%s' declared twice at %s" @kind object;
  #L450c60.  call `<init>`(v5, v0, v2) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L450c66.  throw v5;
}
procedure `void` `write`(`org.simpleframework.xml.core.Variable$Adapter` v0 @kind this, `org.simpleframework.xml.stream.OutputNode` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Variable$Adapter;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L450d24.  call `write`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/Variable$Adapter;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind virtual;
  #L450d2a.  return @kind void;
}
