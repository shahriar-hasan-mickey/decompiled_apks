record `org.simpleframework.xml.core.Support` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.filter.Filter` @kind interface {
  `org.simpleframework.xml.core.InstanceFactory` `org.simpleframework.xml.core.Support.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.ScannerFactory` `org.simpleframework.xml.core.Support.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.DetailExtractor` `org.simpleframework.xml.core.Support.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.DetailExtractor` `org.simpleframework.xml.core.Support.d` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.LabelExtractor` `org.simpleframework.xml.core.Support.e` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.transform.Transformer` `org.simpleframework.xml.core.Support.f` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.transform.Matcher` `org.simpleframework.xml.core.Support.g` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.filter.Filter` `org.simpleframework.xml.core.Support.h` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Format` `org.simpleframework.xml.core.Support.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Support` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Support;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44ef90.  v0:= new `org.simpleframework.xml.filter.PlatformFilter`;
  #L44ef94.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/filter/PlatformFilter;.<init>:()V` @kind direct;
  #L44ef9a.  call `<init>`(v1, v0) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;)V` @kind direct;
  #L44efa0.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Support` v1 @kind this, `org.simpleframework.xml.filter.Filter` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44efb4.  v0:= new `org.simpleframework.xml.core.EmptyMatcher`;
  #L44efb8.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/EmptyMatcher;.<init>:()V` @kind direct;
  #L44efbe.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;)V` @kind direct;
  #L44efc4.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Support` v1 @kind this, `org.simpleframework.xml.filter.Filter` v2 @kind object, `org.simpleframework.xml.transform.Matcher` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44efd8.  v0:= new `org.simpleframework.xml.stream.Format`;
  #L44efdc.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/stream/Format;.<init>:()V` @kind direct;
  #L44efe2.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L44efe8.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Support` v2 @kind this, `org.simpleframework.xml.filter.Filter` v3 @kind object, `org.simpleframework.xml.transform.Matcher` v4 @kind object, `org.simpleframework.xml.stream.Format` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L44effc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44f002.  v0:= new `org.simpleframework.xml.core.DetailExtractor`;
  #L44f006.  v1:= `@@org.simpleframework.xml.DefaultType.FIELD` @type ^`org.simpleframework.xml.DefaultType` @kind object;
  #L44f00a.  call `<init>`(v0, v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.<init>:(Lorg/simpleframework/xml/core/Support;Lorg/simpleframework/xml/DefaultType;)V` @kind direct;
  #L44f010.  v2.`org.simpleframework.xml.core.Support.c` @type ^`org.simpleframework.xml.core.DetailExtractor` := v0 @kind object;
  #L44f014.  v0:= new `org.simpleframework.xml.transform.Transformer`;
  #L44f018.  call `<init>`(v0, v4) @signature `Lorg/simpleframework/xml/transform/Transformer;.<init>:(Lorg/simpleframework/xml/transform/Matcher;)V` @kind direct;
  #L44f01e.  v2.`org.simpleframework.xml.core.Support.f` @type ^`org.simpleframework.xml.transform.Transformer` := v0 @kind object;
  #L44f022.  v0:= new `org.simpleframework.xml.core.ScannerFactory`;
  #L44f026.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/ScannerFactory;.<init>:(Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L44f02c.  v2.`org.simpleframework.xml.core.Support.b` @type ^`org.simpleframework.xml.core.ScannerFactory` := v0 @kind object;
  #L44f030.  v0:= new `org.simpleframework.xml.core.DetailExtractor`;
  #L44f034.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.<init>:(Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L44f03a.  v2.`org.simpleframework.xml.core.Support.d` @type ^`org.simpleframework.xml.core.DetailExtractor` := v0 @kind object;
  #L44f03e.  v0:= new `org.simpleframework.xml.core.LabelExtractor`;
  #L44f042.  call `<init>`(v0, v5) @signature `Lorg/simpleframework/xml/core/LabelExtractor;.<init>:(Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L44f048.  v2.`org.simpleframework.xml.core.Support.e` @type ^`org.simpleframework.xml.core.LabelExtractor` := v0 @kind object;
  #L44f04c.  v0:= new `org.simpleframework.xml.core.InstanceFactory`;
  #L44f050.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/InstanceFactory;.<init>:()V` @kind direct;
  #L44f056.  v2.`org.simpleframework.xml.core.Support.a` @type ^`org.simpleframework.xml.core.InstanceFactory` := v0 @kind object;
  #L44f05a.  v2.`org.simpleframework.xml.core.Support.g` @type ^`org.simpleframework.xml.transform.Matcher` := v4 @kind object;
  #L44f05e.  v2.`org.simpleframework.xml.core.Support.h` @type ^`org.simpleframework.xml.filter.Filter` := v3 @kind object;
  #L44f062.  v2.`org.simpleframework.xml.core.Support.i` @type ^`org.simpleframework.xml.stream.Format` := v5 @kind object;
  #L44f066.  return @kind void;
}
procedure `java.lang.String` `a`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.a:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44ed00.  call temp:= `isArray`(v2) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L44ed06.  v0:= temp;
  #L44ed08.  if v0 == 0 then goto L44ed14;
  #L44ed0c.  call temp:= `getComponentType`(v2) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L44ed12.  v2:= temp @kind object;
  #L44ed14.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L44ed1a.  v0:= temp @kind object;
  #L44ed1c.  call temp:= `isPrimitive`(v2) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L44ed22.  v2:= temp;
  #L44ed24.  if v2 == 0 then goto L44ed2a;
  #L44ed28.  return v0 @kind object;
  #L44ed2a.  call temp:= `getName`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.getName:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L44ed30.  v2:= temp @kind object;
  #L44ed32.  return v2 @kind object;
}
procedure `java.lang.Class` `getPrimitive`(`java.lang.Class` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L44ec60.  v0:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L44ec64.  if v1 != v0 then goto L44ec6e;
  #L44ec68.  v1:= constclass @type ^`java.lang.Double` @kind object;
  #L44ec6c.  return v1 @kind object;
  #L44ec6e.  v0:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L44ec72.  if v1 != v0 then goto L44ec7c;
  #L44ec76.  v1:= constclass @type ^`java.lang.Float` @kind object;
  #L44ec7a.  return v1 @kind object;
  #L44ec7c.  v0:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L44ec80.  if v1 != v0 then goto L44ec8a;
  #L44ec84.  v1:= constclass @type ^`java.lang.Integer` @kind object;
  #L44ec88.  return v1 @kind object;
  #L44ec8a.  v0:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L44ec8e.  if v1 != v0 then goto L44ec98;
  #L44ec92.  v1:= constclass @type ^`java.lang.Long` @kind object;
  #L44ec96.  return v1 @kind object;
  #L44ec98.  v0:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L44ec9c.  if v1 != v0 then goto L44eca6;
  #L44eca0.  v1:= constclass @type ^`java.lang.Boolean` @kind object;
  #L44eca4.  return v1 @kind object;
  #L44eca6.  v0:= `@@java.lang.Character.TYPE` @type ^`java.lang.Class` @kind object;
  #L44ecaa.  if v1 != v0 then goto L44ecb4;
  #L44ecae.  v1:= constclass @type ^`java.lang.Character` @kind object;
  #L44ecb2.  return v1 @kind object;
  #L44ecb4.  v0:= `@@java.lang.Short.TYPE` @type ^`java.lang.Class` @kind object;
  #L44ecb8.  if v1 != v0 then goto L44ecc2;
  #L44ecbc.  v1:= constclass @type ^`java.lang.Short` @kind object;
  #L44ecc0.  return v1 @kind object;
  #L44ecc2.  v0:= `@@java.lang.Byte.TYPE` @type ^`java.lang.Class` @kind object;
  #L44ecc6.  if v1 != v0 then goto L44ecce;
  #L44ecca.  v1:= constclass @type ^`java.lang.Byte` @kind object;
  #L44ecce.  return v1 @kind object;
}
procedure `boolean` `isAssignable`(`java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.isAssignable:(Ljava/lang/Class;Ljava/lang/Class;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L44eb04.  call temp:= `isPrimitive`(v1) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L44eb0a.  v0:= temp;
  #L44eb0c.  if v0 == 0 then goto L44eb18;
  #L44eb10.  call temp:= `getPrimitive`(v1) @signature `Lorg/simpleframework/xml/core/Support;.getPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L44eb16.  v1:= temp @kind object;
  #L44eb18.  call temp:= `isPrimitive`(v2) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L44eb1e.  v0:= temp;
  #L44eb20.  if v0 == 0 then goto L44eb2c;
  #L44eb24.  call temp:= `getPrimitive`(v2) @signature `Lorg/simpleframework/xml/core/Support;.getPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L44eb2a.  v2:= temp @kind object;
  #L44eb2c.  call temp:= `isAssignableFrom`(v2, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L44eb32.  v1:= temp;
  #L44eb34.  return v1;
}
procedure `boolean` `isFloat`(`java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.isFloat:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L44eb88.  v0:= constclass @type ^`java.lang.Double` @kind object;
  #L44eb8c.  v1:= 1I;
  #L44eb8e.  if v2 != v0 then goto L44eb94;
  #L44eb92.  return v1;
  #L44eb94.  v0:= constclass @type ^`java.lang.Float` @kind object;
  #L44eb98.  if v2 != v0 then goto L44eb9e;
  #L44eb9c.  return v1;
  #L44eb9e.  v0:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L44eba2.  if v2 != v0 then goto L44eba8;
  #L44eba6.  return v1;
  #L44eba8.  v0:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L44ebac.  if v2 != v0 then goto L44ebb2;
  #L44ebb0.  return v1;
  #L44ebb2.  v2:= 0I;
  #L44ebb4.  return v2;
}
procedure `org.simpleframework.xml.core.Detail` `getDetail`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getDetail:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Detail;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44ee6c.  v0:= 0I;
  #L44ee6e.  call temp:= `getDetail`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Support;.getDetail:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/Detail;` @kind virtual;
  #L44ee74.  v2:= temp @kind object;
  #L44ee76.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Detail` `getDetail`(`org.simpleframework.xml.core.Support` v0 @kind this, `java.lang.Class` v1 @kind object, `org.simpleframework.xml.DefaultType` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getDetail:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/Detail;` @AccessFlag PUBLIC {
    temp;

  #L44ee88.  if v2 == 0 then goto L44ee9a;
  #L44ee8c.  v2:= v0.`org.simpleframework.xml.core.Support.c` @type ^`org.simpleframework.xml.core.DetailExtractor` @kind object;
  #L44ee90.  call temp:= `getDetail`(v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getDetail:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Detail;` @kind virtual;
  #L44ee96.  v1:= temp @kind object;
  #L44ee98.  return v1 @kind object;
  #L44ee9a.  v2:= v0.`org.simpleframework.xml.core.Support.d` @type ^`org.simpleframework.xml.core.DetailExtractor` @kind object;
  #L44ee9e.  call temp:= `getDetail`(v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getDetail:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Detail;` @kind virtual;
  #L44eea4.  v1:= temp @kind object;
  #L44eea6.  return v1 @kind object;
}
procedure `org.simpleframework.xml.core.ContactList` `getFields`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getFields:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44edd4.  v0:= 0I;
  #L44edd6.  call temp:= `getFields`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Support;.getFields:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L44eddc.  v2:= temp @kind object;
  #L44edde.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.ContactList` `getFields`(`org.simpleframework.xml.core.Support` v0 @kind this, `java.lang.Class` v1 @kind object, `org.simpleframework.xml.DefaultType` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getFields:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PUBLIC {
    temp;

  #L44edf0.  if v2 == 0 then goto L44ee02;
  #L44edf4.  v2:= v0.`org.simpleframework.xml.core.Support.c` @type ^`org.simpleframework.xml.core.DetailExtractor` @kind object;
  #L44edf8.  call temp:= `getFields`(v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getFields:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L44edfe.  v1:= temp @kind object;
  #L44ee00.  return v1 @kind object;
  #L44ee02.  v2:= v0.`org.simpleframework.xml.core.Support.d` @type ^`org.simpleframework.xml.core.DetailExtractor` @kind object;
  #L44ee06.  call temp:= `getFields`(v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getFields:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L44ee0c.  v1:= temp @kind object;
  #L44ee0e.  return v1 @kind object;
}
procedure `org.simpleframework.xml.stream.Format` `getFormat`(`org.simpleframework.xml.core.Support` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Support;.getFormat:()Lorg/simpleframework/xml/stream/Format;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44ef38.  v0:= v1.`org.simpleframework.xml.core.Support.i` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L44ef3c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Instance` `getInstance`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getInstance:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Instance;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44eeb8.  v0:= v1.`org.simpleframework.xml.core.Support.a` @type ^`org.simpleframework.xml.core.InstanceFactory` @kind object;
  #L44eebc.  call temp:= `getInstance`(v0, v2) @signature `Lorg/simpleframework/xml/core/InstanceFactory;.getInstance:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L44eec2.  v2:= temp @kind object;
  #L44eec4.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Instance` `getInstance`(`org.simpleframework.xml.core.Support` v1 @kind this, `org.simpleframework.xml.strategy.Value` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getInstance:(Lorg/simpleframework/xml/strategy/Value;)Lorg/simpleframework/xml/core/Instance;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44eed8.  v0:= v1.`org.simpleframework.xml.core.Support.a` @type ^`org.simpleframework.xml.core.InstanceFactory` @kind object;
  #L44eedc.  call temp:= `getInstance`(v0, v2) @signature `Lorg/simpleframework/xml/core/InstanceFactory;.getInstance:(Lorg/simpleframework/xml/strategy/Value;)Lorg/simpleframework/xml/core/Instance;` @kind virtual;
  #L44eee2.  v2:= temp @kind object;
  #L44eee4.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `getLabel`(`org.simpleframework.xml.core.Support` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getLabel:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44eef8.  v0:= v1.`org.simpleframework.xml.core.Support.e` @type ^`org.simpleframework.xml.core.LabelExtractor` @kind object;
  #L44eefc.  call temp:= `getLabel`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/LabelExtractor;.getLabel:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Lorg/simpleframework/xml/core/Label;` @kind virtual;
  #L44ef02.  v2:= temp @kind object;
  #L44ef04.  return v2 @kind object;
}
procedure `java.util.List` `getLabels`(`org.simpleframework.xml.core.Support` v1 @kind this, `org.simpleframework.xml.core.Contact` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getLabels:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44edb4.  v0:= v1.`org.simpleframework.xml.core.Support.e` @type ^`org.simpleframework.xml.core.LabelExtractor` @kind object;
  #L44edb8.  call temp:= `getList`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/LabelExtractor;.getList:(Lorg/simpleframework/xml/core/Contact;Ljava/lang/annotation/Annotation;)Ljava/util/List;` @kind virtual;
  #L44edbe.  v2:= temp @kind object;
  #L44edc0.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.ContactList` `getMethods`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getMethods:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44ee20.  v0:= 0I;
  #L44ee22.  call temp:= `getMethods`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Support;.getMethods:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L44ee28.  v2:= temp @kind object;
  #L44ee2a.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.ContactList` `getMethods`(`org.simpleframework.xml.core.Support` v0 @kind this, `java.lang.Class` v1 @kind object, `org.simpleframework.xml.DefaultType` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getMethods:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/ContactList;` @AccessFlag PUBLIC {
    temp;

  #L44ee3c.  if v2 == 0 then goto L44ee4e;
  #L44ee40.  v2:= v0.`org.simpleframework.xml.core.Support.c` @type ^`org.simpleframework.xml.core.DetailExtractor` @kind object;
  #L44ee44.  call temp:= `getMethods`(v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getMethods:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L44ee4a.  v1:= temp @kind object;
  #L44ee4c.  return v1 @kind object;
  #L44ee4e.  v2:= v0.`org.simpleframework.xml.core.Support.d` @type ^`org.simpleframework.xml.core.DetailExtractor` @kind object;
  #L44ee52.  call temp:= `getMethods`(v2, v1) @signature `Lorg/simpleframework/xml/core/DetailExtractor;.getMethods:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L44ee58.  v1:= temp @kind object;
  #L44ee5a.  return v1 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44ed44.  call temp:= `getScanner`(v1, v2) @signature `Lorg/simpleframework/xml/core/Support;.getScanner:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Scanner;` @kind virtual;
  #L44ed4a.  v0:= temp @kind object;
  #L44ed4c.  call temp:= `getName`(v0) @signature `Lorg/simpleframework/xml/core/Scanner;.getName:()Ljava/lang/String;` @kind interface;
  #L44ed52.  v0:= temp @kind object;
  #L44ed54.  if v0 == 0 then goto L44ed5a;
  #L44ed58.  return v0 @kind object;
  #L44ed5a.  call temp:= `a`(v1, v2) @signature `Lorg/simpleframework/xml/core/Support;.a:(Ljava/lang/Class;)Ljava/lang/String;` @kind direct;
  #L44ed60.  v2:= temp @kind object;
  #L44ed62.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Scanner` `getScanner`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getScanner:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Scanner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44ef18.  v0:= v1.`org.simpleframework.xml.core.Support.b` @type ^`org.simpleframework.xml.core.ScannerFactory` @kind object;
  #L44ef1c.  call temp:= `getInstance`(v0, v2) @signature `Lorg/simpleframework/xml/core/ScannerFactory;.getInstance:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Scanner;` @kind virtual;
  #L44ef22.  v2:= temp @kind object;
  #L44ef24.  return v2 @kind object;
}
procedure `org.simpleframework.xml.stream.Style` `getStyle`(`org.simpleframework.xml.core.Support` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Support;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44ef50.  v0:= v1.`org.simpleframework.xml.core.Support.i` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L44ef54.  call temp:= `getStyle`(v0) @signature `Lorg/simpleframework/xml/stream/Format;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind virtual;
  #L44ef5a.  v0:= temp @kind object;
  #L44ef5c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.transform.Transform` `getTransform`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.getTransform:(Ljava/lang/Class;)Lorg/simpleframework/xml/transform/Transform;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44ef70.  v0:= v1.`org.simpleframework.xml.core.Support.g` @type ^`org.simpleframework.xml.transform.Matcher` @kind object;
  #L44ef74.  call temp:= `match`(v0, v2) @signature `Lorg/simpleframework/xml/transform/Matcher;.match:(Ljava/lang/Class;)Lorg/simpleframework/xml/transform/Transform;` @kind interface;
  #L44ef7a.  v2:= temp @kind object;
  #L44ef7c.  return v2 @kind object;
}
procedure `boolean` `isContainer`(`org.simpleframework.xml.core.Support` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.isContainer:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44eb48.  v0:= constclass @type ^`java.util.Collection` @kind object;
  #L44eb4c.  call temp:= `isAssignableFrom`(v0, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L44eb52.  v0:= temp;
  #L44eb54.  v1:= 1I;
  #L44eb56.  if v0 == 0 then goto L44eb5c;
  #L44eb5a.  return v1;
  #L44eb5c.  v0:= constclass @type ^`java.util.Map` @kind object;
  #L44eb60.  call temp:= `isAssignableFrom`(v0, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L44eb66.  v0:= temp;
  #L44eb68.  if v0 == 0 then goto L44eb6e;
  #L44eb6c.  return v1;
  #L44eb6e.  call temp:= `isArray`(v3) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L44eb74.  v3:= temp;
  #L44eb76.  return v3;
}
procedure `boolean` `isPrimitive`(`org.simpleframework.xml.core.Support` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.isPrimitive:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44ebc8.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L44ebcc.  v1:= 1I;
  #L44ebce.  if v3 != v0 then goto L44ebd4;
  #L44ebd2.  return v1;
  #L44ebd4.  v0:= constclass @type ^`java.lang.Float` @kind object;
  #L44ebd8.  if v3 != v0 then goto L44ebde;
  #L44ebdc.  return v1;
  #L44ebde.  v0:= constclass @type ^`java.lang.Double` @kind object;
  #L44ebe2.  if v3 != v0 then goto L44ebe8;
  #L44ebe6.  return v1;
  #L44ebe8.  v0:= constclass @type ^`java.lang.Long` @kind object;
  #L44ebec.  if v3 != v0 then goto L44ebf2;
  #L44ebf0.  return v1;
  #L44ebf2.  v0:= constclass @type ^`java.lang.Integer` @kind object;
  #L44ebf6.  if v3 != v0 then goto L44ebfc;
  #L44ebfa.  return v1;
  #L44ebfc.  v0:= constclass @type ^`java.lang.Boolean` @kind object;
  #L44ec00.  if v3 != v0 then goto L44ec06;
  #L44ec04.  return v1;
  #L44ec06.  call temp:= `isEnum`(v3) @signature `Ljava/lang/Class;.isEnum:()Z` @kind virtual;
  #L44ec0c.  v0:= temp;
  #L44ec0e.  if v0 == 0 then goto L44ec14;
  #L44ec12.  return v1;
  #L44ec14.  call temp:= `isPrimitive`(v3) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L44ec1a.  v0:= temp;
  #L44ec1c.  if v0 == 0 then goto L44ec22;
  #L44ec20.  return v1;
  #L44ec22.  v0:= v2.`org.simpleframework.xml.core.Support.f` @type ^`org.simpleframework.xml.transform.Transformer` @kind object;
  #L44ec26.  call temp:= `valid`(v0, v3) @signature `Lorg/simpleframework/xml/transform/Transformer;.valid:(Ljava/lang/Class;)Z` @kind virtual;
  #L44ec2c.  v3:= temp;
  #L44ec2e.  return v3;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.read:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44ece0.  v0:= v1.`org.simpleframework.xml.core.Support.f` @type ^`org.simpleframework.xml.transform.Transformer` @kind object;
  #L44ece4.  call temp:= `read`(v0, v2, v3) @signature `Lorg/simpleframework/xml/transform/Transformer;.read:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L44ecea.  v2:= temp @kind object;
  #L44ecec.  return v2 @kind object;
}
procedure `java.lang.String` `replace`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.replace:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44ed74.  v0:= v1.`org.simpleframework.xml.core.Support.h` @type ^`org.simpleframework.xml.filter.Filter` @kind object;
  #L44ed78.  call temp:= `replace`(v0, v2) @signature `Lorg/simpleframework/xml/filter/Filter;.replace:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L44ed7e.  v2:= temp @kind object;
  #L44ed80.  return v2 @kind object;
}
procedure `boolean` `valid`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.valid:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44ec40.  v0:= v1.`org.simpleframework.xml.core.Support.f` @type ^`org.simpleframework.xml.transform.Transformer` @kind object;
  #L44ec44.  call temp:= `valid`(v0, v2) @signature `Lorg/simpleframework/xml/transform/Transformer;.valid:(Ljava/lang/Class;)Z` @kind virtual;
  #L44ec4a.  v2:= temp;
  #L44ec4c.  return v2;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.core.Support` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Support;.write:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44ed94.  v0:= v1.`org.simpleframework.xml.core.Support.f` @type ^`org.simpleframework.xml.transform.Transformer` @kind object;
  #L44ed98.  call temp:= `write`(v0, v2, v3) @signature `Lorg/simpleframework/xml/transform/Transformer;.write:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;` @kind virtual;
  #L44ed9e.  v2:= temp @kind object;
  #L44eda0.  return v2 @kind object;
}
