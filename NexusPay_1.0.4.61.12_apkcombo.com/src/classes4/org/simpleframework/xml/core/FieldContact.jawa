record `org.simpleframework.xml.core.FieldContact` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Contact` @kind interface {
  `org.simpleframework.xml.util.Cache` `org.simpleframework.xml.core.FieldContact.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.annotation.Annotation`[] `org.simpleframework.xml.core.FieldContact.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.annotation.Annotation` `org.simpleframework.xml.core.FieldContact.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Field` `org.simpleframework.xml.core.FieldContact.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.core.FieldContact.e` @AccessFlag PRIVATE_FINAL;
  `int` `org.simpleframework.xml.core.FieldContact.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.FieldContact` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object, `java.lang.annotation.Annotation`[] v4 @kind object) @signature `Lorg/simpleframework/xml/core/FieldContact;.<init>:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L444de8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L444dee.  v0:= new `org.simpleframework.xml.util.ConcurrentCache`;
  #L444df2.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/util/ConcurrentCache;.<init>:()V` @kind direct;
  #L444df8.  v1.`org.simpleframework.xml.core.FieldContact.a` @type ^`org.simpleframework.xml.util.Cache` := v0 @kind object;
  #L444dfc.  call temp:= `getModifiers`(v2) @signature `Ljava/lang/reflect/Field;.getModifiers:()I` @kind virtual;
  #L444e02.  v0:= temp;
  #L444e04.  v1.`org.simpleframework.xml.core.FieldContact.f` @type ^`int` := v0;
  #L444e08.  call temp:= `getName`(v2) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L444e0e.  v0:= temp @kind object;
  #L444e10.  v1.`org.simpleframework.xml.core.FieldContact.e` @type ^`java.lang.String` := v0 @kind object;
  #L444e14.  v1.`org.simpleframework.xml.core.FieldContact.c` @type ^`java.lang.annotation.Annotation` := v3 @kind object;
  #L444e18.  v1.`org.simpleframework.xml.core.FieldContact.d` @type ^`java.lang.reflect.Field` := v2 @kind object;
  #L444e1c.  v1.`org.simpleframework.xml.core.FieldContact.b` @type ^`java.lang.annotation.Annotation`[] := v4 @kind object;
  #L444e20.  return @kind void;
}
procedure `java.lang.annotation.Annotation` `a`(`org.simpleframework.xml.core.FieldContact` v6 @kind this, `java.lang.Class` v7 @kind object) @signature `Lorg/simpleframework/xml/core/FieldContact;.a:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L444d8c.  v0:= v6.`org.simpleframework.xml.core.FieldContact.a` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L444d90.  call temp:= `isEmpty`(v0) @signature `Lorg/simpleframework/xml/util/Cache;.isEmpty:()Z` @kind interface;
  #L444d96.  v0:= temp;
  #L444d98.  if v0 == 0 then goto L444dc4;
  #L444d9c.  v0:= v6.`org.simpleframework.xml.core.FieldContact.b` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L444da0.  v1:= length @variable v0;
  #L444da2.  v2:= 0I;
  #L444da4.  if v2 >= v1 then goto L444dc4;
  #L444da8.  v3:= v0[v2] @kind object;
  #L444dac.  call temp:= `annotationType`(v3) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L444db2.  v4:= temp @kind object;
  #L444db4.  v5:= v6.`org.simpleframework.xml.core.FieldContact.a` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L444db8.  call `cache`(v5, v4, v3) @signature `Lorg/simpleframework/xml/util/Cache;.cache:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind interface;
  #L444dbe.  v2:= v2 + 1;
  #L444dc2.  goto L444da4;
  #L444dc4.  v0:= v6.`org.simpleframework.xml.core.FieldContact.a` @type ^`org.simpleframework.xml.util.Cache` @kind object;
  #L444dc8.  call temp:= `fetch`(v0, v7) @signature `Lorg/simpleframework/xml/util/Cache;.fetch:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L444dce.  v7:= temp @kind object;
  #L444dd0.  v7:= (`java.lang.annotation.Annotation`) v7 @kind object;
  #L444dd4.  return v7 @kind object;
}
procedure `java.lang.Object` `get`(`org.simpleframework.xml.core.FieldContact` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/FieldContact;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444cc8.  v0:= v1.`org.simpleframework.xml.core.FieldContact.d` @type ^`java.lang.reflect.Field` @kind object;
  #L444ccc.  call temp:= `get`(v0, v2) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L444cd2.  v2:= temp @kind object;
  #L444cd4.  return v2 @kind object;
}
procedure `java.lang.annotation.Annotation` `getAnnotation`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.getAnnotation:()Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444d44.  v0:= v1.`org.simpleframework.xml.core.FieldContact.c` @type ^`java.lang.annotation.Annotation` @kind object;
  #L444d48.  return v0 @kind object;
}
procedure `java.lang.annotation.Annotation` `getAnnotation`(`org.simpleframework.xml.core.FieldContact` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/FieldContact;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444d5c.  v0:= v1.`org.simpleframework.xml.core.FieldContact.c` @type ^`java.lang.annotation.Annotation` @kind object;
  #L444d60.  call temp:= `annotationType`(v0) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L444d66.  v0:= temp @kind object;
  #L444d68.  if v2 != v0 then goto L444d72;
  #L444d6c.  v2:= v1.`org.simpleframework.xml.core.FieldContact.c` @type ^`java.lang.annotation.Annotation` @kind object;
  #L444d70.  return v2 @kind object;
  #L444d72.  call temp:= `a`(v1, v2) @signature `Lorg/simpleframework/xml/core/FieldContact;.a:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind direct;
  #L444d78.  v2:= temp @kind object;
  #L444d7a.  return v2 @kind object;
}
procedure `java.lang.Class` `getDeclaringClass`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.getDeclaringClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444c48.  v0:= v1.`org.simpleframework.xml.core.FieldContact.d` @type ^`java.lang.reflect.Field` @kind object;
  #L444c4c.  call temp:= `getDeclaringClass`(v0) @signature `Ljava/lang/reflect/Field;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L444c52.  v0:= temp @kind object;
  #L444c54.  return v0 @kind object;
}
procedure `java.lang.Class` `getDependent`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.getDependent:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444c68.  v0:= v1.`org.simpleframework.xml.core.FieldContact.d` @type ^`java.lang.reflect.Field` @kind object;
  #L444c6c.  call temp:= `getDependent`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.getDependent:(Ljava/lang/reflect/Field;)Ljava/lang/Class;` @kind static;
  #L444c72.  v0:= temp @kind object;
  #L444c74.  return v0 @kind object;
}
procedure `java.lang.Class`[] `getDependents`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.getDependents:()[Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444ca8.  v0:= v1.`org.simpleframework.xml.core.FieldContact.d` @type ^`java.lang.reflect.Field` @kind object;
  #L444cac.  call temp:= `getDependents`(v0) @signature `Lorg/simpleframework/xml/core/Reflector;.getDependents:(Ljava/lang/reflect/Field;)[Ljava/lang/Class;` @kind static;
  #L444cb2.  v0:= temp @kind object;
  #L444cb4.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444ce8.  v0:= v1.`org.simpleframework.xml.core.FieldContact.e` @type ^`java.lang.String` @kind object;
  #L444cec.  return v0 @kind object;
}
procedure `java.lang.Class` `getType`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444c88.  v0:= v1.`org.simpleframework.xml.core.FieldContact.d` @type ^`java.lang.reflect.Field` @kind object;
  #L444c8c.  call temp:= `getType`(v0) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L444c92.  v0:= temp @kind object;
  #L444c94.  return v0 @kind object;
}
procedure `boolean` `isFinal`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.isFinal:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444bd8.  v0:= v1.`org.simpleframework.xml.core.FieldContact.f` @type ^`int`;
  #L444bdc.  call temp:= `isFinal`(v0) @signature `Ljava/lang/reflect/Modifier;.isFinal:(I)Z` @kind static;
  #L444be2.  v0:= temp;
  #L444be4.  return v0;
}
procedure `boolean` `isReadOnly`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.isReadOnly:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444bf8.  call temp:= `isStatic`(v1) @signature `Lorg/simpleframework/xml/core/FieldContact;.isStatic:()Z` @kind virtual;
  #L444bfe.  v0:= temp;
  #L444c00.  if v0 != 0 then goto L444c14;
  #L444c04.  call temp:= `isFinal`(v1) @signature `Lorg/simpleframework/xml/core/FieldContact;.isFinal:()Z` @kind virtual;
  #L444c0a.  v0:= temp;
  #L444c0c.  if v0 == 0 then goto L444c14;
  #L444c10.  v0:= 1I;
  #L444c12.  goto L444c16;
  #L444c14.  v0:= 0I;
  #L444c16.  return v0;
}
procedure `boolean` `isStatic`(`org.simpleframework.xml.core.FieldContact` v1 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.isStatic:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444c28.  v0:= v1.`org.simpleframework.xml.core.FieldContact.f` @type ^`int`;
  #L444c2c.  call temp:= `isStatic`(v0) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L444c32.  v0:= temp;
  #L444c34.  return v0;
}
procedure `void` `set`(`org.simpleframework.xml.core.FieldContact` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/simpleframework/xml/core/FieldContact;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L444e34.  call temp:= `isFinal`(v1) @signature `Lorg/simpleframework/xml/core/FieldContact;.isFinal:()Z` @kind virtual;
  #L444e3a.  v0:= temp;
  #L444e3c.  if v0 != 0 then goto L444e4a;
  #L444e40.  v0:= v1.`org.simpleframework.xml.core.FieldContact.d` @type ^`java.lang.reflect.Field` @kind object;
  #L444e44.  call `set`(v0, v2, v3) @signature `Ljava/lang/reflect/Field;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L444e4a.  return @kind void;
}
procedure `java.lang.String` `toString`(`org.simpleframework.xml.core.FieldContact` v3 @kind this) @signature `Lorg/simpleframework/xml/core/FieldContact;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L444d00.  v0:= 2I;
  #L444d02.  v0:= new `java.lang.Object`[v0];
  #L444d06.  call temp:= `getName`(v3) @signature `Lorg/simpleframework/xml/core/FieldContact;.getName:()Ljava/lang/String;` @kind virtual;
  #L444d0c.  v1:= temp @kind object;
  #L444d0e.  v2:= 0I;
  #L444d10.  v0[v2]:= v1 @kind object;
  #L444d14.  v1:= v3.`org.simpleframework.xml.core.FieldContact.d` @type ^`java.lang.reflect.Field` @kind object;
  #L444d18.  call temp:= `toString`(v1) @signature `Ljava/lang/reflect/Field;.toString:()Ljava/lang/String;` @kind virtual;
  #L444d1e.  v1:= temp @kind object;
  #L444d20.  v2:= 1I;
  #L444d22.  v0[v2]:= v1 @kind object;
  #L444d26.  v1:= "field '%s' %s" @kind object;
  #L444d2a.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L444d30.  v0:= temp @kind object;
  #L444d32.  return v0 @kind object;
}
