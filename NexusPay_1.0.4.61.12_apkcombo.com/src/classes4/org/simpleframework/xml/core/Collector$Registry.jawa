record `org.simpleframework.xml.core.Collector$Registry` @kind class @AccessFlag PUBLIC extends `java.util.LinkedHashMap` @kind class {
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Collector$Registry` v0 @kind this) @signature `Lorg/simpleframework/xml/core/Collector$Registry;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L43e0ec.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L43e0f2.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Collector$Registry` v0 @kind this, `org.simpleframework.xml.core.Collector$1` v1 @kind object) @signature `Lorg/simpleframework/xml/core/Collector$Registry;.<init>:(Lorg/simpleframework/xml/core/Collector$1;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L43e104.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/Collector$Registry;.<init>:()V` @kind direct;
  #L43e10a.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.core.Collector$Registry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Collector$Registry;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43e0c8.  call temp:= `keySet`(v1) @signature `Ljava/util/LinkedHashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L43e0ce.  v0:= temp @kind object;
  #L43e0d0.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L43e0d6.  v0:= temp @kind object;
  #L43e0d8.  return v0 @kind object;
}
