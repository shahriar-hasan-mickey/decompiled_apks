record `org.simpleframework.xml.core.LabelMap` @kind class @AccessFlag PUBLIC extends `java.util.LinkedHashMap` @kind class, `java.lang.Iterable` @kind interface {
  `org.simpleframework.xml.core.Policy` `org.simpleframework.xml.core.LabelMap.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.LabelMap` v1 @kind this) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L447130.  v0:= 0I;
  #L447132.  call `<init>`(v1, v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L447138.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.LabelMap` v0 @kind this, `org.simpleframework.xml.core.Policy` v1 @kind object) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L44714c.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L447152.  v0.`org.simpleframework.xml.core.LabelMap.a` @type ^`org.simpleframework.xml.core.Policy` := v1 @kind object;
  #L447156.  return @kind void;
}
procedure `java.lang.String`[] `b`(`org.simpleframework.xml.core.LabelMap` v1 @kind this, `java.util.Set` v2 @kind object) @signature `Lorg/simpleframework/xml/core/LabelMap;.b:(Ljava/util/Set;)[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L446fb4.  v0:= 0I;
  #L446fb6.  v0:= new `java.lang.String`[v0];
  #L446fba.  call temp:= `toArray`(v2, v0) @signature `Ljava/util/Set;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L446fc0.  v2:= temp @kind object;
  #L446fc2.  v2:= (`java.lang.String`[]) v2 @kind object;
  #L446fc6.  return v2 @kind object;
}
procedure `java.lang.String`[] `getKeys`(`org.simpleframework.xml.core.LabelMap` v4 @kind this) @signature `Lorg/simpleframework/xml/core/LabelMap;.getKeys:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L446fd8.  v0:= new `java.util.HashSet`;
  #L446fdc.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L446fe2.  call temp:= `iterator`(v4) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L446fe8.  v1:= temp @kind object;
  #L446fea.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L446ff0.  v2:= temp;
  #L446ff2.  if v2 == 0 then goto L447024;
  #L446ff6.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L446ffc.  v2:= temp @kind object;
  #L446ffe.  v2:= (`org.simpleframework.xml.core.Label`) v2 @kind object;
  #L447002.  if v2 == 0 then goto L446fea;
  #L447006.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L44700c.  v3:= temp @kind object;
  #L44700e.  call temp:= `getName`(v2) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L447014.  v2:= temp @kind object;
  #L447016.  call temp:= `add`(v0, v3) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L44701c.  call temp:= `add`(v0, v2) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L447022.  goto L446fea;
  #L447024.  call temp:= `b`(v4, v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.b:(Ljava/util/Set;)[Ljava/lang/String;` @kind direct;
  #L44702a.  v0:= temp @kind object;
  #L44702c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `getLabel`(`org.simpleframework.xml.core.LabelMap` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabel:(Ljava/lang/String;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PUBLIC {
    temp;

  #L4470bc.  call temp:= `remove`(v0, v1) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4470c2.  v1:= temp @kind object;
  #L4470c4.  v1:= (`org.simpleframework.xml.core.Label`) v1 @kind object;
  #L4470c8.  return v1 @kind object;
}
procedure `org.simpleframework.xml.core.LabelMap` `getLabels`(`org.simpleframework.xml.core.LabelMap` v4 @kind this) @signature `Lorg/simpleframework/xml/core/LabelMap;.getLabels:()Lorg/simpleframework/xml/core/LabelMap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4470dc.  v0:= new `org.simpleframework.xml.core.LabelMap`;
  #L4470e0.  v1:= v4.`org.simpleframework.xml.core.LabelMap.a` @type ^`org.simpleframework.xml.core.Policy` @kind object;
  #L4470e4.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:(Lorg/simpleframework/xml/core/Policy;)V` @kind direct;
  #L4470ea.  call temp:= `iterator`(v4) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4470f0.  v1:= temp @kind object;
  #L4470f2.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4470f8.  v2:= temp;
  #L4470fa.  if v2 == 0 then goto L44711e;
  #L4470fe.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L447104.  v2:= temp @kind object;
  #L447106.  v2:= (`org.simpleframework.xml.core.Label`) v2 @kind object;
  #L44710a.  if v2 == 0 then goto L4470f2;
  #L44710e.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L447114.  v3:= temp @kind object;
  #L447116.  call temp:= `put`(v0, v3, v2) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L44711c.  goto L4470f2;
  #L44711e.  return v0 @kind object;
}
procedure `java.lang.String`[] `getPaths`(`org.simpleframework.xml.core.LabelMap` v3 @kind this) @signature `Lorg/simpleframework/xml/core/LabelMap;.getPaths:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L447040.  v0:= new `java.util.HashSet`;
  #L447044.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L44704a.  call temp:= `iterator`(v3) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L447050.  v1:= temp @kind object;
  #L447052.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L447058.  v2:= temp;
  #L44705a.  if v2 == 0 then goto L44707e;
  #L44705e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L447064.  v2:= temp @kind object;
  #L447066.  v2:= (`org.simpleframework.xml.core.Label`) v2 @kind object;
  #L44706a.  if v2 == 0 then goto L447052;
  #L44706e.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L447074.  v2:= temp @kind object;
  #L447076.  call temp:= `add`(v0, v2) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L44707c.  goto L447052;
  #L44707e.  call temp:= `b`(v3, v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.b:(Ljava/util/Set;)[Ljava/lang/String;` @kind direct;
  #L447084.  v0:= temp @kind object;
  #L447086.  return v0 @kind object;
}
procedure `boolean` `isStrict`(`org.simpleframework.xml.core.LabelMap` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object) @signature `Lorg/simpleframework/xml/core/LabelMap;.isStrict:(Lorg/simpleframework/xml/core/Context;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L446f6c.  v0:= v1.`org.simpleframework.xml.core.LabelMap.a` @type ^`org.simpleframework.xml.core.Policy` @kind object;
  #L446f70.  if v0 != 0 then goto L446f7e;
  #L446f74.  call temp:= `isStrict`(v2) @signature `Lorg/simpleframework/xml/core/Context;.isStrict:()Z` @kind interface;
  #L446f7a.  v2:= temp;
  #L446f7c.  return v2;
  #L446f7e.  call temp:= `isStrict`(v2) @signature `Lorg/simpleframework/xml/core/Context;.isStrict:()Z` @kind interface;
  #L446f84.  v2:= temp;
  #L446f86.  if v2 == 0 then goto L446f9e;
  #L446f8a.  v2:= v1.`org.simpleframework.xml.core.LabelMap.a` @type ^`org.simpleframework.xml.core.Policy` @kind object;
  #L446f8e.  call temp:= `isStrict`(v2) @signature `Lorg/simpleframework/xml/core/Policy;.isStrict:()Z` @kind interface;
  #L446f94.  v2:= temp;
  #L446f96.  if v2 == 0 then goto L446f9e;
  #L446f9a.  v2:= 1I;
  #L446f9c.  goto L446fa0;
  #L446f9e.  v2:= 0I;
  #L446fa0.  return v2;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.core.LabelMap` v1 @kind this) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L447098.  call temp:= `values`(v1) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L44709e.  v0:= temp @kind object;
  #L4470a0.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4470a6.  v0:= temp @kind object;
  #L4470a8.  return v0 @kind object;
}
