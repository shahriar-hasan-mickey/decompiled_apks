record `org.simpleframework.xml.core.Persister` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.Serializer` @kind interface {
  `org.simpleframework.xml.core.SessionManager` `org.simpleframework.xml.core.Persister.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Strategy` `org.simpleframework.xml.core.Persister.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Support` `org.simpleframework.xml.core.Persister.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Format` `org.simpleframework.xml.core.Persister.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44accc.  v0:= new `java.util.HashMap`;
  #L44acd0.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L44acd6.  call `<init>`(v1, v0) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L44acdc.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44acf0.  v0:= new `org.simpleframework.xml.filter.PlatformFilter`;
  #L44acf4.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/filter/PlatformFilter;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L44acfa.  call `<init>`(v1, v0) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/filter/Filter;)V` @kind direct;
  #L44ad00.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v0 @kind this, `java.util.Map` v1 @kind object, `org.simpleframework.xml.stream.Format` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Ljava/util/Map;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L44ad14.  v2:= new `org.simpleframework.xml.filter.PlatformFilter`;
  #L44ad18.  call `<init>`(v2, v1) @signature `Lorg/simpleframework/xml/filter/PlatformFilter;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L44ad1e.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/filter/Filter;)V` @kind direct;
  #L44ad24.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this, `org.simpleframework.xml.filter.Filter` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/filter/Filter;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44ad38.  v0:= new `org.simpleframework.xml.strategy.TreeStrategy`;
  #L44ad3c.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.<init>:()V` @kind direct;
  #L44ad42.  call `<init>`(v1, v0, v2) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/filter/Filter;)V` @kind direct;
  #L44ad48.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this, `org.simpleframework.xml.filter.Filter` v2 @kind object, `org.simpleframework.xml.stream.Format` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44ad5c.  v0:= new `org.simpleframework.xml.strategy.TreeStrategy`;
  #L44ad60.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.<init>:()V` @kind direct;
  #L44ad66.  call `<init>`(v1, v0, v2, v3) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L44ad6c.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this, `org.simpleframework.xml.filter.Filter` v2 @kind object, `org.simpleframework.xml.transform.Matcher` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44ad80.  v0:= new `org.simpleframework.xml.strategy.TreeStrategy`;
  #L44ad84.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.<init>:()V` @kind direct;
  #L44ad8a.  call `<init>`(v1, v0, v2, v3) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;)V` @kind direct;
  #L44ad90.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this, `org.simpleframework.xml.filter.Filter` v2 @kind object, `org.simpleframework.xml.transform.Matcher` v3 @kind object, `org.simpleframework.xml.stream.Format` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44ada4.  v0:= new `org.simpleframework.xml.strategy.TreeStrategy`;
  #L44ada8.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.<init>:()V` @kind direct;
  #L44adae.  call `<init>`(v1, v0, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L44adb4.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this, `org.simpleframework.xml.strategy.Strategy` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44adc8.  v0:= new `java.util.HashMap`;
  #L44adcc.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L44add2.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Ljava/util/Map;)V` @kind direct;
  #L44add8.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this, `org.simpleframework.xml.strategy.Strategy` v2 @kind object, `java.util.Map` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44adec.  v0:= new `org.simpleframework.xml.filter.PlatformFilter`;
  #L44adf0.  call `<init>`(v0, v3) @signature `Lorg/simpleframework/xml/filter/PlatformFilter;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L44adf6.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/filter/Filter;)V` @kind direct;
  #L44adfc.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this, `org.simpleframework.xml.strategy.Strategy` v2 @kind object, `java.util.Map` v3 @kind object, `org.simpleframework.xml.stream.Format` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Ljava/util/Map;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44ae10.  v0:= new `org.simpleframework.xml.filter.PlatformFilter`;
  #L44ae14.  call `<init>`(v0, v3) @signature `Lorg/simpleframework/xml/filter/PlatformFilter;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L44ae1a.  call `<init>`(v1, v2, v0, v4) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L44ae20.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this, `org.simpleframework.xml.strategy.Strategy` v2 @kind object, `org.simpleframework.xml.filter.Filter` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/filter/Filter;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44ae34.  v0:= new `org.simpleframework.xml.stream.Format`;
  #L44ae38.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/stream/Format;.<init>:()V` @kind direct;
  #L44ae3e.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L44ae44.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this, `org.simpleframework.xml.strategy.Strategy` v2 @kind object, `org.simpleframework.xml.filter.Filter` v3 @kind object, `org.simpleframework.xml.stream.Format` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44ae58.  v0:= new `org.simpleframework.xml.core.EmptyMatcher`;
  #L44ae5c.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/EmptyMatcher;.<init>:()V` @kind direct;
  #L44ae62.  call `<init>`(v1, v2, v3, v0, v4) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L44ae68.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this, `org.simpleframework.xml.strategy.Strategy` v2 @kind object, `org.simpleframework.xml.filter.Filter` v3 @kind object, `org.simpleframework.xml.transform.Matcher` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44ae7c.  v0:= new `org.simpleframework.xml.stream.Format`;
  #L44ae80.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/stream/Format;.<init>:()V` @kind direct;
  #L44ae86.  call `<init>`(v1, v2, v3, v4, v0) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L44ae8c.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this, `org.simpleframework.xml.strategy.Strategy` v2 @kind object, `org.simpleframework.xml.filter.Filter` v3 @kind object, `org.simpleframework.xml.transform.Matcher` v4 @kind object, `org.simpleframework.xml.stream.Format` v5 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44aea0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44aea6.  v0:= new `org.simpleframework.xml.core.Support`;
  #L44aeaa.  call `<init>`(v0, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/Support;.<init>:(Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L44aeb0.  v1.`org.simpleframework.xml.core.Persister.c` @type ^`org.simpleframework.xml.core.Support` := v0 @kind object;
  #L44aeb4.  v3:= new `org.simpleframework.xml.core.SessionManager`;
  #L44aeb8.  call `<init>`(v3) @signature `Lorg/simpleframework/xml/core/SessionManager;.<init>:()V` @kind direct;
  #L44aebe.  v1.`org.simpleframework.xml.core.Persister.a` @type ^`org.simpleframework.xml.core.SessionManager` := v3 @kind object;
  #L44aec2.  v1.`org.simpleframework.xml.core.Persister.b` @type ^`org.simpleframework.xml.strategy.Strategy` := v2 @kind object;
  #L44aec6.  v1.`org.simpleframework.xml.core.Persister.d` @type ^`org.simpleframework.xml.stream.Format` := v5 @kind object;
  #L44aeca.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this, `org.simpleframework.xml.strategy.Strategy` v2 @kind object, `org.simpleframework.xml.stream.Format` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44aedc.  v0:= new `java.util.HashMap`;
  #L44aee0.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L44aee6.  call `<init>`(v1, v2, v0, v3) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Ljava/util/Map;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L44aeec.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this, `org.simpleframework.xml.strategy.Strategy` v2 @kind object, `org.simpleframework.xml.transform.Matcher` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/transform/Matcher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44af00.  v0:= new `org.simpleframework.xml.filter.PlatformFilter`;
  #L44af04.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/filter/PlatformFilter;.<init>:()V` @kind direct;
  #L44af0a.  call `<init>`(v1, v2, v0, v3) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;)V` @kind direct;
  #L44af10.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this, `org.simpleframework.xml.strategy.Strategy` v2 @kind object, `org.simpleframework.xml.transform.Matcher` v3 @kind object, `org.simpleframework.xml.stream.Format` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/transform/Matcher;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44af24.  v0:= new `org.simpleframework.xml.filter.PlatformFilter`;
  #L44af28.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/filter/PlatformFilter;.<init>:()V` @kind direct;
  #L44af2e.  call `<init>`(v1, v2, v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/filter/Filter;Lorg/simpleframework/xml/transform/Matcher;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L44af34.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this, `org.simpleframework.xml.stream.Format` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44af48.  v0:= new `org.simpleframework.xml.strategy.TreeStrategy`;
  #L44af4c.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.<init>:()V` @kind direct;
  #L44af52.  call `<init>`(v1, v0, v2) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L44af58.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this, `org.simpleframework.xml.transform.Matcher` v2 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/transform/Matcher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44af6c.  v0:= new `org.simpleframework.xml.strategy.TreeStrategy`;
  #L44af70.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.<init>:()V` @kind direct;
  #L44af76.  call `<init>`(v1, v0, v2) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/transform/Matcher;)V` @kind direct;
  #L44af7c.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.Persister` v1 @kind this, `org.simpleframework.xml.transform.Matcher` v2 @kind object, `org.simpleframework.xml.stream.Format` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/transform/Matcher;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44af90.  v0:= new `org.simpleframework.xml.strategy.TreeStrategy`;
  #L44af94.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.<init>:()V` @kind direct;
  #L44af9a.  call `<init>`(v1, v0, v2, v3) @signature `Lorg/simpleframework/xml/core/Persister;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/transform/Matcher;Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L44afa0.  return @kind void;
}
procedure `java.lang.Object` `a`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Class` v2 @kind object, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `org.simpleframework.xml.core.Context` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.a:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44aaa8.  v0:= new `org.simpleframework.xml.core.Traverser`;
  #L44aaac.  call `<init>`(v0, v4) @signature `Lorg/simpleframework/xml/core/Traverser;.<init>:(Lorg/simpleframework/xml/core/Context;)V` @kind direct;
  #L44aab2.  call temp:= `read`(v0, v3, v2) @signature `Lorg/simpleframework/xml/core/Traverser;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L44aab8.  v2:= temp @kind object;
  #L44aaba.  return v2 @kind object;
}
procedure `java.lang.Object` `b`(`org.simpleframework.xml.core.Persister` v3 @kind this, `java.lang.Class` v4 @kind object, `org.simpleframework.xml.stream.InputNode` v5 @kind object, `org.simpleframework.xml.core.Session` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.b:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Session;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L44aacc.  v0:= new `org.simpleframework.xml.core.Source`;
  #L44aad0.  v1:= v3.`org.simpleframework.xml.core.Persister.b` @type ^`org.simpleframework.xml.strategy.Strategy` @kind object;
  #L44aad4.  v2:= v3.`org.simpleframework.xml.core.Persister.c` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L44aad8.  call `<init>`(v0, v1, v2, v6) @signature `Lorg/simpleframework/xml/core/Source;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/core/Support;Lorg/simpleframework/xml/core/Session;)V` @kind direct;
  #L44aade.  call temp:= `a`(v3, v4, v5, v0) @signature `Lorg/simpleframework/xml/core/Persister;.a:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @kind direct;
  #L44aae4.  v4:= temp @kind object;
  #L44aae6.  return v4 @kind object;
}
procedure `java.lang.Object` `c`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `org.simpleframework.xml.core.Context` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.c:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44ac7c.  v0:= new `org.simpleframework.xml.core.Traverser`;
  #L44ac80.  call `<init>`(v0, v4) @signature `Lorg/simpleframework/xml/core/Traverser;.<init>:(Lorg/simpleframework/xml/core/Context;)V` @kind direct;
  #L44ac86.  call temp:= `read`(v0, v3, v2) @signature `Lorg/simpleframework/xml/core/Traverser;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L44ac8c.  v2:= temp @kind object;
  #L44ac8e.  return v2 @kind object;
}
procedure `java.lang.Object` `d`(`org.simpleframework.xml.core.Persister` v3 @kind this, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.stream.InputNode` v5 @kind object, `org.simpleframework.xml.core.Session` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.d:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Session;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L44aca0.  v0:= new `org.simpleframework.xml.core.Source`;
  #L44aca4.  v1:= v3.`org.simpleframework.xml.core.Persister.b` @type ^`org.simpleframework.xml.strategy.Strategy` @kind object;
  #L44aca8.  v2:= v3.`org.simpleframework.xml.core.Persister.c` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L44acac.  call `<init>`(v0, v1, v2, v6) @signature `Lorg/simpleframework/xml/core/Source;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/core/Support;Lorg/simpleframework/xml/core/Session;)V` @kind direct;
  #L44acb2.  call temp:= `c`(v3, v4, v5, v0) @signature `Lorg/simpleframework/xml/core/Persister;.c:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Context;)Ljava/lang/Object;` @kind direct;
  #L44acb8.  v4:= temp @kind object;
  #L44acba.  return v4 @kind object;
}
procedure `boolean` `e`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Class` v2 @kind object, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `org.simpleframework.xml.core.Context` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.e:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Context;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44a8d4.  v0:= new `org.simpleframework.xml.core.Traverser`;
  #L44a8d8.  call `<init>`(v0, v4) @signature `Lorg/simpleframework/xml/core/Traverser;.<init>:(Lorg/simpleframework/xml/core/Context;)V` @kind direct;
  #L44a8de.  call temp:= `validate`(v0, v3, v2) @signature `Lorg/simpleframework/xml/core/Traverser;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind virtual;
  #L44a8e4.  v2:= temp;
  #L44a8e6.  return v2;
}
procedure `boolean` `f`(`org.simpleframework.xml.core.Persister` v3 @kind this, `java.lang.Class` v4 @kind object, `org.simpleframework.xml.stream.InputNode` v5 @kind object, `org.simpleframework.xml.core.Session` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.f:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Session;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L44a8f8.  v0:= new `org.simpleframework.xml.core.Source`;
  #L44a8fc.  v1:= v3.`org.simpleframework.xml.core.Persister.b` @type ^`org.simpleframework.xml.strategy.Strategy` @kind object;
  #L44a900.  v2:= v3.`org.simpleframework.xml.core.Persister.c` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L44a904.  call `<init>`(v0, v1, v2, v6) @signature `Lorg/simpleframework/xml/core/Source;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/core/Support;Lorg/simpleframework/xml/core/Session;)V` @kind direct;
  #L44a90a.  call temp:= `e`(v3, v4, v5, v0) @signature `Lorg/simpleframework/xml/core/Persister;.e:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Context;)Z` @kind direct;
  #L44a910.  v4:= temp;
  #L44a912.  return v4;
}
procedure `void` `g`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `org.simpleframework.xml.core.Context` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.g:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/core/Context;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44b0a0.  v0:= new `org.simpleframework.xml.core.Traverser`;
  #L44b0a4.  call `<init>`(v0, v4) @signature `Lorg/simpleframework/xml/core/Traverser;.<init>:(Lorg/simpleframework/xml/core/Context;)V` @kind direct;
  #L44b0aa.  call `write`(v0, v3, v2) @signature `Lorg/simpleframework/xml/core/Traverser;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind virtual;
  #L44b0b0.  return @kind void;
}
procedure `void` `h`(`org.simpleframework.xml.core.Persister` v3 @kind this, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.stream.OutputNode` v5 @kind object, `org.simpleframework.xml.core.Session` v6 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.h:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/core/Session;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L44b0c4.  v0:= new `org.simpleframework.xml.core.Source`;
  #L44b0c8.  v1:= v3.`org.simpleframework.xml.core.Persister.b` @type ^`org.simpleframework.xml.strategy.Strategy` @kind object;
  #L44b0cc.  v2:= v3.`org.simpleframework.xml.core.Persister.c` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L44b0d0.  call `<init>`(v0, v1, v2, v6) @signature `Lorg/simpleframework/xml/core/Source;.<init>:(Lorg/simpleframework/xml/strategy/Strategy;Lorg/simpleframework/xml/core/Support;Lorg/simpleframework/xml/core/Session;)V` @kind direct;
  #L44b0d6.  call `g`(v3, v4, v5, v0) @signature `Lorg/simpleframework/xml/core/Persister;.g:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/core/Context;)V` @kind direct;
  #L44b0dc.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Class` v2 @kind object, `java.io.File` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Ljava/io/File;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44a924.  v0:= 1I;
  #L44a926.  call temp:= `read`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Ljava/io/File;Z)Ljava/lang/Object;` @kind virtual;
  #L44a92c.  v2:= temp @kind object;
  #L44a92e.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Class` v2 @kind object, `java.io.File` v3 @kind object, `boolean` v4 ) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Ljava/io/File;Z)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44a940.  v0:= new `java.io.FileInputStream`;
  #L44a944.  call `<init>`(v0, v3) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L44a94a.  call temp:= `read`(v1, v2, v0, v4) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Ljava/io/InputStream;Z)Ljava/lang/Object;` @kind virtual;
  #L44a950.  v2:= temp @kind object;
  #L44a952.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L44a958.  return v2 @kind object;
  #L44a95a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44a95c.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L44a962.  throw v2;
  catch `java.lang.Throwable` @[L44a94a..L44a952] goto L44a95a;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Class` v2 @kind object, `java.io.InputStream` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Ljava/io/InputStream;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44a980.  v0:= 1I;
  #L44a982.  call temp:= `read`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Ljava/io/InputStream;Z)Ljava/lang/Object;` @kind virtual;
  #L44a988.  v2:= temp @kind object;
  #L44a98a.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v0 @kind this, `java.lang.Class` v1 @kind object, `java.io.InputStream` v2 @kind object, `boolean` v3 ) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Ljava/io/InputStream;Z)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L44a99c.  call temp:= `read`(v2) @signature `Lorg/simpleframework/xml/stream/NodeBuilder;.read:(Ljava/io/InputStream;)Lorg/simpleframework/xml/stream/InputNode;` @kind static;
  #L44a9a2.  v2:= temp @kind object;
  #L44a9a4.  call temp:= `read`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/InputNode;Z)Ljava/lang/Object;` @kind virtual;
  #L44a9aa.  v1:= temp @kind object;
  #L44a9ac.  return v1 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Class` v2 @kind object, `java.io.Reader` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Ljava/io/Reader;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44a9c0.  v0:= 1I;
  #L44a9c2.  call temp:= `read`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Ljava/io/Reader;Z)Ljava/lang/Object;` @kind virtual;
  #L44a9c8.  v2:= temp @kind object;
  #L44a9ca.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v0 @kind this, `java.lang.Class` v1 @kind object, `java.io.Reader` v2 @kind object, `boolean` v3 ) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Ljava/io/Reader;Z)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L44a9dc.  call temp:= `read`(v2) @signature `Lorg/simpleframework/xml/stream/NodeBuilder;.read:(Ljava/io/Reader;)Lorg/simpleframework/xml/stream/InputNode;` @kind static;
  #L44a9e2.  v2:= temp @kind object;
  #L44a9e4.  call temp:= `read`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/InputNode;Z)Ljava/lang/Object;` @kind virtual;
  #L44a9ea.  v1:= temp @kind object;
  #L44a9ec.  return v1 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44aa00.  v0:= 1I;
  #L44aa02.  call temp:= `read`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/Object;` @kind virtual;
  #L44aa08.  v2:= temp @kind object;
  #L44aa0a.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44aa1c.  v0:= new `java.io.StringReader`;
  #L44aa20.  call `<init>`(v0, v3) @signature `Ljava/io/StringReader;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L44aa26.  call temp:= `read`(v1, v2, v0, v4) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Ljava/io/Reader;Z)Ljava/lang/Object;` @kind virtual;
  #L44aa2c.  v2:= temp @kind object;
  #L44aa2e.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Class` v2 @kind object, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44aa40.  v0:= 1I;
  #L44aa42.  call temp:= `read`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/InputNode;Z)Ljava/lang/Object;` @kind virtual;
  #L44aa48.  v2:= temp @kind object;
  #L44aa4a.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Class` v2 @kind object, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `boolean` v4 ) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/InputNode;Z)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44aa5c.  v0:= v1.`org.simpleframework.xml.core.Persister.a` @type ^`org.simpleframework.xml.core.SessionManager` @kind object;
  #L44aa60.  call temp:= `open`(v0, v4) @signature `Lorg/simpleframework/xml/core/SessionManager;.open:(Z)Lorg/simpleframework/xml/core/Session;` @kind virtual;
  #L44aa66.  v4:= temp @kind object;
  #L44aa68.  call temp:= `b`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/Persister;.b:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Session;)Ljava/lang/Object;` @kind direct;
  #L44aa6e.  v2:= temp @kind object;
  #L44aa70.  v3:= v1.`org.simpleframework.xml.core.Persister.a` @type ^`org.simpleframework.xml.core.SessionManager` @kind object;
  #L44aa74.  call `close`(v3) @signature `Lorg/simpleframework/xml/core/SessionManager;.close:()V` @kind virtual;
  #L44aa7a.  return v2 @kind object;
  #L44aa7c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44aa7e.  v3:= v1.`org.simpleframework.xml.core.Persister.a` @type ^`org.simpleframework.xml.core.SessionManager` @kind object;
  #L44aa82.  call `close`(v3) @signature `Lorg/simpleframework/xml/core/SessionManager;.close:()V` @kind virtual;
  #L44aa88.  throw v2;
  catch `java.lang.Throwable` @[L44aa68..L44aa70] goto L44aa7c;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Object` v2 @kind object, `java.io.File` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Ljava/io/File;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44aaf8.  v0:= 1I;
  #L44aafa.  call temp:= `read`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Ljava/io/File;Z)Ljava/lang/Object;` @kind virtual;
  #L44ab00.  v2:= temp @kind object;
  #L44ab02.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Object` v2 @kind object, `java.io.File` v3 @kind object, `boolean` v4 ) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Ljava/io/File;Z)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44ab14.  v0:= new `java.io.FileInputStream`;
  #L44ab18.  call `<init>`(v0, v3) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L44ab1e.  call temp:= `read`(v1, v2, v0, v4) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Ljava/io/InputStream;Z)Ljava/lang/Object;` @kind virtual;
  #L44ab24.  v2:= temp @kind object;
  #L44ab26.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L44ab2c.  return v2 @kind object;
  #L44ab2e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44ab30.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L44ab36.  throw v2;
  catch `java.lang.Throwable` @[L44ab1e..L44ab26] goto L44ab2e;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Object` v2 @kind object, `java.io.InputStream` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Ljava/io/InputStream;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44ab54.  v0:= 1I;
  #L44ab56.  call temp:= `read`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Ljava/io/InputStream;Z)Ljava/lang/Object;` @kind virtual;
  #L44ab5c.  v2:= temp @kind object;
  #L44ab5e.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v0 @kind this, `java.lang.Object` v1 @kind object, `java.io.InputStream` v2 @kind object, `boolean` v3 ) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Ljava/io/InputStream;Z)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L44ab70.  call temp:= `read`(v2) @signature `Lorg/simpleframework/xml/stream/NodeBuilder;.read:(Ljava/io/InputStream;)Lorg/simpleframework/xml/stream/InputNode;` @kind static;
  #L44ab76.  v2:= temp @kind object;
  #L44ab78.  call temp:= `read`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/InputNode;Z)Ljava/lang/Object;` @kind virtual;
  #L44ab7e.  v1:= temp @kind object;
  #L44ab80.  return v1 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Object` v2 @kind object, `java.io.Reader` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Ljava/io/Reader;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44ab94.  v0:= 1I;
  #L44ab96.  call temp:= `read`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Ljava/io/Reader;Z)Ljava/lang/Object;` @kind virtual;
  #L44ab9c.  v2:= temp @kind object;
  #L44ab9e.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v0 @kind this, `java.lang.Object` v1 @kind object, `java.io.Reader` v2 @kind object, `boolean` v3 ) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Ljava/io/Reader;Z)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L44abb0.  call temp:= `read`(v2) @signature `Lorg/simpleframework/xml/stream/NodeBuilder;.read:(Ljava/io/Reader;)Lorg/simpleframework/xml/stream/InputNode;` @kind static;
  #L44abb6.  v2:= temp @kind object;
  #L44abb8.  call temp:= `read`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/InputNode;Z)Ljava/lang/Object;` @kind virtual;
  #L44abbe.  v1:= temp @kind object;
  #L44abc0.  return v1 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44abd4.  v0:= 1I;
  #L44abd6.  call temp:= `read`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/Object;` @kind virtual;
  #L44abdc.  v2:= temp @kind object;
  #L44abde.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44abf0.  v0:= new `java.io.StringReader`;
  #L44abf4.  call `<init>`(v0, v3) @signature `Ljava/io/StringReader;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L44abfa.  call temp:= `read`(v1, v2, v0, v4) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Ljava/io/Reader;Z)Ljava/lang/Object;` @kind virtual;
  #L44ac00.  v2:= temp @kind object;
  #L44ac02.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44ac14.  v0:= 1I;
  #L44ac16.  call temp:= `read`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/InputNode;Z)Ljava/lang/Object;` @kind virtual;
  #L44ac1c.  v2:= temp @kind object;
  #L44ac1e.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `boolean` v4 ) @signature `Lorg/simpleframework/xml/core/Persister;.read:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/InputNode;Z)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44ac30.  v0:= v1.`org.simpleframework.xml.core.Persister.a` @type ^`org.simpleframework.xml.core.SessionManager` @kind object;
  #L44ac34.  call temp:= `open`(v0, v4) @signature `Lorg/simpleframework/xml/core/SessionManager;.open:(Z)Lorg/simpleframework/xml/core/Session;` @kind virtual;
  #L44ac3a.  v4:= temp @kind object;
  #L44ac3c.  call temp:= `d`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/Persister;.d:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Session;)Ljava/lang/Object;` @kind direct;
  #L44ac42.  v2:= temp @kind object;
  #L44ac44.  v3:= v1.`org.simpleframework.xml.core.Persister.a` @type ^`org.simpleframework.xml.core.SessionManager` @kind object;
  #L44ac48.  call `close`(v3) @signature `Lorg/simpleframework/xml/core/SessionManager;.close:()V` @kind virtual;
  #L44ac4e.  return v2 @kind object;
  #L44ac50.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44ac52.  v3:= v1.`org.simpleframework.xml.core.Persister.a` @type ^`org.simpleframework.xml.core.SessionManager` @kind object;
  #L44ac56.  call `close`(v3) @signature `Lorg/simpleframework/xml/core/SessionManager;.close:()V` @kind virtual;
  #L44ac5c.  throw v2;
  catch `java.lang.Throwable` @[L44ac3c..L44ac44] goto L44ac50;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Class` v2 @kind object, `java.io.File` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Ljava/io/File;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44a750.  v0:= 1I;
  #L44a752.  call temp:= `validate`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Ljava/io/File;Z)Z` @kind virtual;
  #L44a758.  v2:= temp;
  #L44a75a.  return v2;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Class` v2 @kind object, `java.io.File` v3 @kind object, `boolean` v4 ) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Ljava/io/File;Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44a76c.  v0:= new `java.io.FileInputStream`;
  #L44a770.  call `<init>`(v0, v3) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L44a776.  call temp:= `validate`(v1, v2, v0, v4) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Ljava/io/InputStream;Z)Z` @kind virtual;
  #L44a77c.  v2:= temp;
  #L44a77e.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L44a784.  return v2;
  #L44a786.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44a788.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L44a78e.  throw v2;
  catch `java.lang.Throwable` @[L44a776..L44a77e] goto L44a786;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Class` v2 @kind object, `java.io.InputStream` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Ljava/io/InputStream;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44a7ac.  v0:= 1I;
  #L44a7ae.  call temp:= `validate`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Ljava/io/InputStream;Z)Z` @kind virtual;
  #L44a7b4.  v2:= temp;
  #L44a7b6.  return v2;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.Persister` v0 @kind this, `java.lang.Class` v1 @kind object, `java.io.InputStream` v2 @kind object, `boolean` v3 ) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Ljava/io/InputStream;Z)Z` @AccessFlag PUBLIC {
    temp;

  #L44a7c8.  call temp:= `read`(v2) @signature `Lorg/simpleframework/xml/stream/NodeBuilder;.read:(Ljava/io/InputStream;)Lorg/simpleframework/xml/stream/InputNode;` @kind static;
  #L44a7ce.  v2:= temp @kind object;
  #L44a7d0.  call temp:= `validate`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/InputNode;Z)Z` @kind virtual;
  #L44a7d6.  v1:= temp;
  #L44a7d8.  return v1;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Class` v2 @kind object, `java.io.Reader` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Ljava/io/Reader;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44a7ec.  v0:= 1I;
  #L44a7ee.  call temp:= `validate`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Ljava/io/Reader;Z)Z` @kind virtual;
  #L44a7f4.  v2:= temp;
  #L44a7f6.  return v2;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.Persister` v0 @kind this, `java.lang.Class` v1 @kind object, `java.io.Reader` v2 @kind object, `boolean` v3 ) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Ljava/io/Reader;Z)Z` @AccessFlag PUBLIC {
    temp;

  #L44a808.  call temp:= `read`(v2) @signature `Lorg/simpleframework/xml/stream/NodeBuilder;.read:(Ljava/io/Reader;)Lorg/simpleframework/xml/stream/InputNode;` @kind static;
  #L44a80e.  v2:= temp @kind object;
  #L44a810.  call temp:= `validate`(v0, v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/InputNode;Z)Z` @kind virtual;
  #L44a816.  v1:= temp;
  #L44a818.  return v1;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44a82c.  v0:= 1I;
  #L44a82e.  call temp:= `validate`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Ljava/lang/String;Z)Z` @kind virtual;
  #L44a834.  v2:= temp;
  #L44a836.  return v2;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Ljava/lang/String;Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44a848.  v0:= new `java.io.StringReader`;
  #L44a84c.  call `<init>`(v0, v3) @signature `Ljava/io/StringReader;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L44a852.  call temp:= `validate`(v1, v2, v0, v4) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Ljava/io/Reader;Z)Z` @kind virtual;
  #L44a858.  v2:= temp;
  #L44a85a.  return v2;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Class` v2 @kind object, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44a86c.  v0:= 1I;
  #L44a86e.  call temp:= `validate`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/InputNode;Z)Z` @kind virtual;
  #L44a874.  v2:= temp;
  #L44a876.  return v2;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Class` v2 @kind object, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `boolean` v4 ) @signature `Lorg/simpleframework/xml/core/Persister;.validate:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/InputNode;Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44a888.  v0:= v1.`org.simpleframework.xml.core.Persister.a` @type ^`org.simpleframework.xml.core.SessionManager` @kind object;
  #L44a88c.  call temp:= `open`(v0, v4) @signature `Lorg/simpleframework/xml/core/SessionManager;.open:(Z)Lorg/simpleframework/xml/core/Session;` @kind virtual;
  #L44a892.  v4:= temp @kind object;
  #L44a894.  call temp:= `f`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/Persister;.f:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/core/Session;)Z` @kind direct;
  #L44a89a.  v2:= temp;
  #L44a89c.  v3:= v1.`org.simpleframework.xml.core.Persister.a` @type ^`org.simpleframework.xml.core.SessionManager` @kind object;
  #L44a8a0.  call `close`(v3) @signature `Lorg/simpleframework/xml/core/SessionManager;.close:()V` @kind virtual;
  #L44a8a6.  return v2;
  #L44a8a8.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44a8aa.  v3:= v1.`org.simpleframework.xml.core.Persister.a` @type ^`org.simpleframework.xml.core.SessionManager` @kind object;
  #L44a8ae.  call `close`(v3) @signature `Lorg/simpleframework/xml/core/SessionManager;.close:()V` @kind virtual;
  #L44a8b4.  throw v2;
  catch `java.lang.Throwable` @[L44a894..L44a89c] goto L44a8a8;
}
procedure `void` `write`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Object` v2 @kind object, `java.io.File` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.write:(Ljava/lang/Object;Ljava/io/File;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44afb4.  v0:= new `java.io.FileOutputStream`;
  #L44afb8.  call `<init>`(v0, v3) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L44afbe.  call `write`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Persister;.write:(Ljava/lang/Object;Ljava/io/OutputStream;)V` @kind virtual;
  #L44afc4.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L44afca.  return @kind void;
  #L44afcc.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44afce.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L44afd4.  throw v2;
  catch `java.lang.Throwable` @[L44afbe..L44afc4] goto L44afcc;
}
procedure `void` `write`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Object` v2 @kind object, `java.io.OutputStream` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.write:(Ljava/lang/Object;Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44aff4.  v0:= "utf-8" @kind object;
  #L44aff8.  call `write`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Persister;.write:(Ljava/lang/Object;Ljava/io/OutputStream;Ljava/lang/String;)V` @kind virtual;
  #L44affe.  return @kind void;
}
procedure `void` `write`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Object` v2 @kind object, `java.io.OutputStream` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.write:(Ljava/lang/Object;Ljava/io/OutputStream;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44b010.  v0:= new `java.io.OutputStreamWriter`;
  #L44b014.  call `<init>`(v0, v3, v4) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/lang/String;)V` @kind direct;
  #L44b01a.  call `write`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/Persister;.write:(Ljava/lang/Object;Ljava/io/Writer;)V` @kind virtual;
  #L44b020.  return @kind void;
}
procedure `void` `write`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Object` v2 @kind object, `java.io.Writer` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.write:(Ljava/lang/Object;Ljava/io/Writer;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44b034.  v0:= v1.`org.simpleframework.xml.core.Persister.d` @type ^`org.simpleframework.xml.stream.Format` @kind object;
  #L44b038.  call temp:= `write`(v3, v0) @signature `Lorg/simpleframework/xml/stream/NodeBuilder;.write:(Ljava/io/Writer;Lorg/simpleframework/xml/stream/Format;)Lorg/simpleframework/xml/stream/OutputNode;` @kind static;
  #L44b03e.  v3:= temp @kind object;
  #L44b040.  call `write`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/Persister;.write:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/OutputNode;)V` @kind virtual;
  #L44b046.  return @kind void;
}
procedure `void` `write`(`org.simpleframework.xml.core.Persister` v1 @kind this, `java.lang.Object` v2 @kind object, `org.simpleframework.xml.stream.OutputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/Persister;.write:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/OutputNode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44b058.  v0:= v1.`org.simpleframework.xml.core.Persister.a` @type ^`org.simpleframework.xml.core.SessionManager` @kind object;
  #L44b05c.  call temp:= `open`(v0) @signature `Lorg/simpleframework/xml/core/SessionManager;.open:()Lorg/simpleframework/xml/core/Session;` @kind virtual;
  #L44b062.  v0:= temp @kind object;
  #L44b064.  call `h`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/core/Persister;.h:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/OutputNode;Lorg/simpleframework/xml/core/Session;)V` @kind direct;
  #L44b06a.  v2:= v1.`org.simpleframework.xml.core.Persister.a` @type ^`org.simpleframework.xml.core.SessionManager` @kind object;
  #L44b06e.  call `close`(v2) @signature `Lorg/simpleframework/xml/core/SessionManager;.close:()V` @kind virtual;
  #L44b074.  return @kind void;
  #L44b076.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L44b078.  v3:= v1.`org.simpleframework.xml.core.Persister.a` @type ^`org.simpleframework.xml.core.SessionManager` @kind object;
  #L44b07c.  call `close`(v3) @signature `Lorg/simpleframework/xml/core/SessionManager;.close:()V` @kind virtual;
  #L44b082.  throw v2;
  catch `java.lang.Throwable` @[L44b064..L44b06a] goto L44b076;
}
