record `org.simpleframework.xml.core.SessionManager` @kind class @AccessFlag PUBLIC {
  `java.lang.ThreadLocal` `org.simpleframework.xml.core.SessionManager.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.SessionManager` v1 @kind this) @signature `Lorg/simpleframework/xml/core/SessionManager;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44cb48.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44cb4e.  v0:= new `java.lang.ThreadLocal`;
  #L44cb52.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L44cb58.  v1.`org.simpleframework.xml.core.SessionManager.a` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L44cb5c.  return @kind void;
}
procedure `org.simpleframework.xml.core.Session` `a`(`org.simpleframework.xml.core.SessionManager` v1 @kind this, `boolean` v2 ) @signature `Lorg/simpleframework/xml/core/SessionManager;.a:(Z)Lorg/simpleframework/xml/core/Session;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44cac4.  v0:= new `org.simpleframework.xml.core.SessionManager$Reference`;
  #L44cac8.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/SessionManager$Reference;.<init>:(Z)V` @kind direct;
  #L44cace.  v2:= v1.`org.simpleframework.xml.core.SessionManager.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L44cad2.  call `set`(v2, v0) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L44cad8.  call temp:= `get`(v0) @signature `Lorg/simpleframework/xml/core/SessionManager$Reference;.get:()Lorg/simpleframework/xml/core/Session;` @kind virtual;
  #L44cade.  v2:= temp @kind object;
  #L44cae0.  return v2 @kind object;
}
procedure `void` `close`(`org.simpleframework.xml.core.SessionManager` v3 @kind this) @signature `Lorg/simpleframework/xml/core/SessionManager;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L44cb70.  v0:= v3.`org.simpleframework.xml.core.SessionManager.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L44cb74.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L44cb7a.  v0:= temp @kind object;
  #L44cb7c.  v0:= (`org.simpleframework.xml.core.SessionManager$Reference`) v0 @kind object;
  #L44cb80.  if v0 == 0 then goto L44cb9c;
  #L44cb84.  call temp:= `clear`(v0) @signature `Lorg/simpleframework/xml/core/SessionManager$Reference;.clear:()I` @kind virtual;
  #L44cb8a.  v0:= temp;
  #L44cb8c.  if v0 != 0 then goto L44cb9a;
  #L44cb90.  v0:= v3.`org.simpleframework.xml.core.SessionManager.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L44cb94.  call `remove`(v0) @signature `Ljava/lang/ThreadLocal;.remove:()V` @kind virtual;
  #L44cb9a.  return @kind void;
  #L44cb9c.  v0:= new `org.simpleframework.xml.core.PersistenceException`;
  #L44cba0.  v1:= 0I;
  #L44cba2.  v1:= new `java.lang.Object`[v1];
  #L44cba6.  v2:= "Session does not exist" @kind object;
  #L44cbaa.  call `<init>`(v0, v2, v1) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44cbb0.  throw v0;
}
procedure `org.simpleframework.xml.core.Session` `open`(`org.simpleframework.xml.core.SessionManager` v1 @kind this) @signature `Lorg/simpleframework/xml/core/SessionManager;.open:()Lorg/simpleframework/xml/core/Session;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44caf4.  v0:= 1I;
  #L44caf6.  call temp:= `open`(v1, v0) @signature `Lorg/simpleframework/xml/core/SessionManager;.open:(Z)Lorg/simpleframework/xml/core/Session;` @kind virtual;
  #L44cafc.  v0:= temp @kind object;
  #L44cafe.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Session` `open`(`org.simpleframework.xml.core.SessionManager` v1 @kind this, `boolean` v2 ) @signature `Lorg/simpleframework/xml/core/SessionManager;.open:(Z)Lorg/simpleframework/xml/core/Session;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44cb10.  v0:= v1.`org.simpleframework.xml.core.SessionManager.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L44cb14.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L44cb1a.  v0:= temp @kind object;
  #L44cb1c.  v0:= (`org.simpleframework.xml.core.SessionManager$Reference`) v0 @kind object;
  #L44cb20.  if v0 == 0 then goto L44cb2e;
  #L44cb24.  call temp:= `get`(v0) @signature `Lorg/simpleframework/xml/core/SessionManager$Reference;.get:()Lorg/simpleframework/xml/core/Session;` @kind virtual;
  #L44cb2a.  v2:= temp @kind object;
  #L44cb2c.  return v2 @kind object;
  #L44cb2e.  call temp:= `a`(v1, v2) @signature `Lorg/simpleframework/xml/core/SessionManager;.a:(Z)Lorg/simpleframework/xml/core/Session;` @kind direct;
  #L44cb34.  v2:= temp @kind object;
  #L44cb36.  return v2 @kind object;
}
