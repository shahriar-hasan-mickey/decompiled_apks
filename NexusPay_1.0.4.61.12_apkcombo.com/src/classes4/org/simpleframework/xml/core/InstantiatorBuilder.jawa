record `org.simpleframework.xml.core.InstantiatorBuilder` @kind class @AccessFlag PUBLIC {
  `java.util.List` `org.simpleframework.xml.core.InstantiatorBuilder.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Instantiator` `org.simpleframework.xml.core.InstantiatorBuilder.b` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.InstantiatorBuilder.c` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.InstantiatorBuilder.d` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.InstantiatorBuilder.e` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Comparer` `org.simpleframework.xml.core.InstantiatorBuilder.f` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Scanner` `org.simpleframework.xml.core.InstantiatorBuilder.g` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Detail` `org.simpleframework.xml.core.InstantiatorBuilder.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.InstantiatorBuilder` v1 @kind this, `org.simpleframework.xml.core.Scanner` v2 @kind object, `org.simpleframework.xml.core.Detail` v3 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.<init>:(Lorg/simpleframework/xml/core/Scanner;Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L445e00.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L445e06.  v0:= new `java.util.ArrayList`;
  #L445e0a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L445e10.  v1.`org.simpleframework.xml.core.InstantiatorBuilder.a` @type ^`java.util.List` := v0 @kind object;
  #L445e14.  v0:= new `org.simpleframework.xml.core.Comparer`;
  #L445e18.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/Comparer;.<init>:()V` @kind direct;
  #L445e1e.  v1.`org.simpleframework.xml.core.InstantiatorBuilder.f` @type ^`org.simpleframework.xml.core.Comparer` := v0 @kind object;
  #L445e22.  v0:= new `org.simpleframework.xml.core.LabelMap`;
  #L445e26.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:()V` @kind direct;
  #L445e2c.  v1.`org.simpleframework.xml.core.InstantiatorBuilder.c` @type ^`org.simpleframework.xml.core.LabelMap` := v0 @kind object;
  #L445e30.  v0:= new `org.simpleframework.xml.core.LabelMap`;
  #L445e34.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:()V` @kind direct;
  #L445e3a.  v1.`org.simpleframework.xml.core.InstantiatorBuilder.d` @type ^`org.simpleframework.xml.core.LabelMap` := v0 @kind object;
  #L445e3e.  v0:= new `org.simpleframework.xml.core.LabelMap`;
  #L445e42.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/LabelMap;.<init>:()V` @kind direct;
  #L445e48.  v1.`org.simpleframework.xml.core.InstantiatorBuilder.e` @type ^`org.simpleframework.xml.core.LabelMap` := v0 @kind object;
  #L445e4c.  v1.`org.simpleframework.xml.core.InstantiatorBuilder.g` @type ^`org.simpleframework.xml.core.Scanner` := v2 @kind object;
  #L445e50.  v1.`org.simpleframework.xml.core.InstantiatorBuilder.h` @type ^`org.simpleframework.xml.core.Detail` := v3 @kind object;
  #L445e54.  return @kind void;
}
procedure `org.simpleframework.xml.core.Instantiator` `a`(`org.simpleframework.xml.core.InstantiatorBuilder` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.a:(Lorg/simpleframework/xml/core/Detail;)Lorg/simpleframework/xml/core/Instantiator;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L445cc8.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.b` @type ^`org.simpleframework.xml.core.Instantiator` @kind object;
  #L445ccc.  if v0 != 0 then goto L445cdc;
  #L445cd0.  call temp:= `d`(v1, v2) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.d:(Lorg/simpleframework/xml/core/Detail;)Lorg/simpleframework/xml/core/Instantiator;` @kind direct;
  #L445cd6.  v2:= temp @kind object;
  #L445cd8.  v1.`org.simpleframework.xml.core.InstantiatorBuilder.b` @type ^`org.simpleframework.xml.core.Instantiator` := v2 @kind object;
  #L445cdc.  v2:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.b` @type ^`org.simpleframework.xml.core.Instantiator` @kind object;
  #L445ce0.  return v2 @kind object;
}
procedure `boolean` `b`(`org.simpleframework.xml.core.InstantiatorBuilder` v5 @kind this, `java.lang.String`[] v6 @kind object, `java.lang.String` v7 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.b:([Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L445c24.  v0:= length @variable v6;
  #L445c26.  v1:= 0I;
  #L445c28.  v2:= 0I;
  #L445c2a.  if v2 >= v0 then goto L445c4e;
  #L445c2e.  v3:= v6[v2] @kind object;
  #L445c32.  v4:= 1I;
  #L445c34.  if v3 != v7 then goto L445c3a;
  #L445c38.  return v4;
  #L445c3a.  call temp:= `equals`(v3, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L445c40.  v3:= temp;
  #L445c42.  if v3 == 0 then goto L445c48;
  #L445c46.  return v4;
  #L445c48.  v2:= v2 + 1;
  #L445c4c.  goto L445c2a;
  #L445c4e.  return v1;
}
procedure `org.simpleframework.xml.core.Creator` `c`(`org.simpleframework.xml.core.InstantiatorBuilder` v1 @kind this, `org.simpleframework.xml.core.Signature` v2 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.c:(Lorg/simpleframework/xml/core/Signature;)Lorg/simpleframework/xml/core/Creator;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L445c60.  v0:= new `org.simpleframework.xml.core.SignatureCreator`;
  #L445c64.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/SignatureCreator;.<init>:(Lorg/simpleframework/xml/core/Signature;)V` @kind direct;
  #L445c6a.  if v2 == 0 then goto L445c78;
  #L445c6e.  v2:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.a` @type ^`java.util.List` @kind object;
  #L445c72.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L445c78.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Instantiator` `d`(`org.simpleframework.xml.core.InstantiatorBuilder` v4 @kind this, `org.simpleframework.xml.core.Detail` v5 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.d:(Lorg/simpleframework/xml/core/Detail;)Lorg/simpleframework/xml/core/Instantiator;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L445cf4.  v0:= v4.`org.simpleframework.xml.core.InstantiatorBuilder.g` @type ^`org.simpleframework.xml.core.Scanner` @kind object;
  #L445cf8.  call temp:= `getSignature`(v0) @signature `Lorg/simpleframework/xml/core/Scanner;.getSignature:()Lorg/simpleframework/xml/core/Signature;` @kind interface;
  #L445cfe.  v0:= temp @kind object;
  #L445d00.  v1:= v4.`org.simpleframework.xml.core.InstantiatorBuilder.g` @type ^`org.simpleframework.xml.core.Scanner` @kind object;
  #L445d04.  call temp:= `getParameters`(v1) @signature `Lorg/simpleframework/xml/core/Scanner;.getParameters:()Lorg/simpleframework/xml/core/ParameterMap;` @kind interface;
  #L445d0a.  v1:= temp @kind object;
  #L445d0c.  if v0 == 0 then goto L445d1c;
  #L445d10.  v2:= new `org.simpleframework.xml.core.SignatureCreator`;
  #L445d14.  call `<init>`(v2, v0) @signature `Lorg/simpleframework/xml/core/SignatureCreator;.<init>:(Lorg/simpleframework/xml/core/Signature;)V` @kind direct;
  #L445d1a.  goto L445d1e;
  #L445d1c.  v2:= 0I;
  #L445d1e.  v0:= new `org.simpleframework.xml.core.ClassInstantiator`;
  #L445d22.  v3:= v4.`org.simpleframework.xml.core.InstantiatorBuilder.a` @type ^`java.util.List` @kind object;
  #L445d26.  call `<init>`(v0, v3, v2, v1, v5) @signature `Lorg/simpleframework/xml/core/ClassInstantiator;.<init>:(Ljava/util/List;Lorg/simpleframework/xml/core/Creator;Lorg/simpleframework/xml/core/ParameterMap;Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L445d2c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Parameter` `e`(`org.simpleframework.xml.core.InstantiatorBuilder` v2 @kind this, `org.simpleframework.xml.core.Parameter` v3 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.e:(Lorg/simpleframework/xml/core/Parameter;)Lorg/simpleframework/xml/core/Parameter;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L445dd4.  call temp:= `i`(v2, v3) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.i:(Lorg/simpleframework/xml/core/Parameter;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L445dda.  v0:= temp @kind object;
  #L445ddc.  if v0 == 0 then goto L445dec;
  #L445de0.  v1:= new `org.simpleframework.xml.core.CacheParameter`;
  #L445de4.  call `<init>`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/CacheParameter;.<init>:(Lorg/simpleframework/xml/core/Parameter;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L445dea.  return v1 @kind object;
  #L445dec.  v3:= 0I;
  #L445dee.  return v3 @kind object;
}
procedure `void` `f`(`org.simpleframework.xml.core.InstantiatorBuilder` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.f:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L445e68.  v2:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.g` @type ^`org.simpleframework.xml.core.Scanner` @kind object;
  #L445e6c.  call temp:= `getSignatures`(v2) @signature `Lorg/simpleframework/xml/core/Scanner;.getSignatures:()Ljava/util/List;` @kind interface;
  #L445e72.  v2:= temp @kind object;
  #L445e74.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L445e7a.  v2:= temp @kind object;
  #L445e7c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L445e82.  v0:= temp;
  #L445e84.  if v0 == 0 then goto L445e9c;
  #L445e88.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L445e8e.  v0:= temp @kind object;
  #L445e90.  v0:= (`org.simpleframework.xml.core.Signature`) v0 @kind object;
  #L445e94.  call `g`(v1, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.g:(Lorg/simpleframework/xml/core/Signature;)V` @kind direct;
  #L445e9a.  goto L445e7c;
  #L445e9c.  return @kind void;
}
procedure `void` `g`(`org.simpleframework.xml.core.InstantiatorBuilder` v2 @kind this, `org.simpleframework.xml.core.Signature` v3 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.g:(Lorg/simpleframework/xml/core/Signature;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L445eb0.  v0:= new `org.simpleframework.xml.core.Signature`;
  #L445eb4.  call `<init>`(v0, v3) @signature `Lorg/simpleframework/xml/core/Signature;.<init>:(Lorg/simpleframework/xml/core/Signature;)V` @kind direct;
  #L445eba.  call temp:= `iterator`(v3) @signature `Lorg/simpleframework/xml/core/Signature;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L445ec0.  v3:= temp @kind object;
  #L445ec2.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L445ec8.  v1:= temp;
  #L445eca.  if v1 == 0 then goto L445eee;
  #L445ece.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L445ed4.  v1:= temp @kind object;
  #L445ed6.  v1:= (`org.simpleframework.xml.core.Parameter`) v1 @kind object;
  #L445eda.  call temp:= `e`(v2, v1) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.e:(Lorg/simpleframework/xml/core/Parameter;)Lorg/simpleframework/xml/core/Parameter;` @kind direct;
  #L445ee0.  v1:= temp @kind object;
  #L445ee2.  if v1 == 0 then goto L445ec2;
  #L445ee6.  call `add`(v0, v1) @signature `Lorg/simpleframework/xml/core/Signature;.add:(Lorg/simpleframework/xml/core/Parameter;)V` @kind virtual;
  #L445eec.  goto L445ec2;
  #L445eee.  call temp:= `c`(v2, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.c:(Lorg/simpleframework/xml/core/Signature;)Lorg/simpleframework/xml/core/Creator;` @kind direct;
  #L445ef4.  return @kind void;
}
procedure `void` `h`(`org.simpleframework.xml.core.InstantiatorBuilder` v3 @kind this, `org.simpleframework.xml.core.Label` v4 @kind object, `org.simpleframework.xml.core.LabelMap` v5 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.h:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L445f54.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L445f5a.  v0:= temp @kind object;
  #L445f5c.  call temp:= `getPath`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L445f62.  v1:= temp @kind object;
  #L445f64.  call temp:= `containsKey`(v5, v0) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L445f6a.  v2:= temp;
  #L445f6c.  if v2 == 0 then goto L445f98;
  #L445f70.  call temp:= `get`(v5, v0) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L445f76.  v2:= temp @kind object;
  #L445f78.  v2:= (`org.simpleframework.xml.core.Label`) v2 @kind object;
  #L445f7c.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/Label;.getPath:()Ljava/lang/String;` @kind interface;
  #L445f82.  v2:= temp @kind object;
  #L445f84.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L445f8a.  v2:= temp;
  #L445f8c.  if v2 != 0 then goto L445f9e;
  #L445f90.  call temp:= `remove`(v5, v0) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L445f96.  goto L445f9e;
  #L445f98.  call temp:= `put`(v5, v0, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L445f9e.  call temp:= `put`(v5, v1, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L445fa4.  return @kind void;
}
procedure `org.simpleframework.xml.core.Label` `i`(`org.simpleframework.xml.core.InstantiatorBuilder` v1 @kind this, `org.simpleframework.xml.core.Parameter` v2 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.i:(Lorg/simpleframework/xml/core/Parameter;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L445d40.  call temp:= `isAttribute`(v2) @signature `Lorg/simpleframework/xml/core/Parameter;.isAttribute:()Z` @kind interface;
  #L445d46.  v0:= temp;
  #L445d48.  if v0 == 0 then goto L445d5a;
  #L445d4c.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L445d50.  call temp:= `j`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.j:(Lorg/simpleframework/xml/core/Parameter;Lorg/simpleframework/xml/core/LabelMap;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L445d56.  v2:= temp @kind object;
  #L445d58.  return v2 @kind object;
  #L445d5a.  call temp:= `isText`(v2) @signature `Lorg/simpleframework/xml/core/Parameter;.isText:()Z` @kind interface;
  #L445d60.  v0:= temp;
  #L445d62.  if v0 == 0 then goto L445d74;
  #L445d66.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.e` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L445d6a.  call temp:= `j`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.j:(Lorg/simpleframework/xml/core/Parameter;Lorg/simpleframework/xml/core/LabelMap;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L445d70.  v2:= temp @kind object;
  #L445d72.  return v2 @kind object;
  #L445d74.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.d` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L445d78.  call temp:= `j`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.j:(Lorg/simpleframework/xml/core/Parameter;Lorg/simpleframework/xml/core/LabelMap;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L445d7e.  v2:= temp @kind object;
  #L445d80.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `j`(`org.simpleframework.xml.core.InstantiatorBuilder` v1 @kind this, `org.simpleframework.xml.core.Parameter` v2 @kind object, `org.simpleframework.xml.core.LabelMap` v3 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.j:(Lorg/simpleframework/xml/core/Parameter;Lorg/simpleframework/xml/core/LabelMap;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L445d94.  call temp:= `getName`(v2) @signature `Lorg/simpleframework/xml/core/Parameter;.getName:()Ljava/lang/String;` @kind interface;
  #L445d9a.  v0:= temp @kind object;
  #L445d9c.  call temp:= `getPath`(v2) @signature `Lorg/simpleframework/xml/core/Parameter;.getPath:()Ljava/lang/String;` @kind interface;
  #L445da2.  v2:= temp @kind object;
  #L445da4.  call temp:= `get`(v3, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L445daa.  v2:= temp @kind object;
  #L445dac.  v2:= (`org.simpleframework.xml.core.Label`) v2 @kind object;
  #L445db0.  if v2 != 0 then goto L445dc0;
  #L445db4.  call temp:= `get`(v3, v0) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L445dba.  v2:= temp @kind object;
  #L445dbc.  v2:= (`org.simpleframework.xml.core.Label`) v2 @kind object;
  #L445dc0.  return v2 @kind object;
}
procedure `void` `k`(`org.simpleframework.xml.core.InstantiatorBuilder` v4 @kind this, `org.simpleframework.xml.core.Detail` v5 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.k:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L445fb8.  v0:= v4.`org.simpleframework.xml.core.InstantiatorBuilder.g` @type ^`org.simpleframework.xml.core.Scanner` @kind object;
  #L445fbc.  call temp:= `getParameters`(v0) @signature `Lorg/simpleframework/xml/core/Scanner;.getParameters:()Lorg/simpleframework/xml/core/ParameterMap;` @kind interface;
  #L445fc2.  v0:= temp @kind object;
  #L445fc4.  call temp:= `getAll`(v0) @signature `Lorg/simpleframework/xml/core/ParameterMap;.getAll:()Ljava/util/List;` @kind virtual;
  #L445fca.  v0:= temp @kind object;
  #L445fcc.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L445fd2.  v0:= temp @kind object;
  #L445fd4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L445fda.  v1:= temp;
  #L445fdc.  if v1 == 0 then goto L44602a;
  #L445fe0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L445fe6.  v1:= temp @kind object;
  #L445fe8.  v1:= (`org.simpleframework.xml.core.Parameter`) v1 @kind object;
  #L445fec.  call temp:= `i`(v4, v1) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.i:(Lorg/simpleframework/xml/core/Parameter;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L445ff2.  v2:= temp @kind object;
  #L445ff4.  call temp:= `getPath`(v1) @signature `Lorg/simpleframework/xml/core/Parameter;.getPath:()Ljava/lang/String;` @kind interface;
  #L445ffa.  v3:= temp @kind object;
  #L445ffc.  if v2 == 0 then goto L446008;
  #L446000.  call `r`(v4, v2, v1) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.r:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/Parameter;)V` @kind direct;
  #L446006.  goto L445fd4;
  #L446008.  v0:= new `org.simpleframework.xml.core.ConstructorException`;
  #L44600c.  v1:= 2I;
  #L44600e.  v1:= new `java.lang.Object`[v1];
  #L446012.  v2:= 0I;
  #L446014.  v1[v2]:= v3 @kind object;
  #L446018.  v2:= 1I;
  #L44601a.  v1[v2]:= v5 @kind object;
  #L44601e.  v5:= "Parameter '%s' does not have a match in %s" @kind object;
  #L446022.  call `<init>`(v0, v5, v1) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L446028.  throw v0;
  #L44602a.  call `n`(v4) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.n:()V` @kind direct;
  #L446030.  return @kind void;
}
procedure `void` `l`(`org.simpleframework.xml.core.InstantiatorBuilder` v5 @kind this, `org.simpleframework.xml.core.Label` v6 @kind object, `org.simpleframework.xml.core.Parameter` v7 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.l:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/Parameter;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L446044.  call temp:= `getAnnotation`(v6) @signature `Lorg/simpleframework/xml/core/Label;.getAnnotation:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L44604a.  v6:= temp @kind object;
  #L44604c.  call temp:= `getAnnotation`(v7) @signature `Lorg/simpleframework/xml/core/Parameter;.getAnnotation:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L446052.  v0:= temp @kind object;
  #L446054.  call temp:= `getName`(v7) @signature `Lorg/simpleframework/xml/core/Parameter;.getName:()Ljava/lang/String;` @kind interface;
  #L44605a.  v1:= temp @kind object;
  #L44605c.  v2:= v5.`org.simpleframework.xml.core.InstantiatorBuilder.f` @type ^`org.simpleframework.xml.core.Comparer` @kind object;
  #L446060.  call temp:= `equals`(v2, v6, v0) @signature `Lorg/simpleframework/xml/core/Comparer;.equals:(Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Z` @kind virtual;
  #L446066.  v2:= temp;
  #L446068.  if v2 != 0 then goto L4460b8;
  #L44606c.  call temp:= `annotationType`(v6) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L446072.  v6:= temp @kind object;
  #L446074.  call temp:= `annotationType`(v0) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L44607a.  v0:= temp @kind object;
  #L44607c.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L446082.  v2:= temp;
  #L446084.  if v2 == 0 then goto L44608a;
  #L446088.  goto L4460b8;
  #L44608a.  v2:= new `org.simpleframework.xml.core.ConstructorException`;
  #L44608e.  v3:= 4I;
  #L446090.  v3:= new `java.lang.Object`[v3];
  #L446094.  v4:= 0I;
  #L446096.  v3[v4]:= v0 @kind object;
  #L44609a.  v0:= 1I;
  #L44609c.  v3[v0]:= v6 @kind object;
  #L4460a0.  v6:= 2I;
  #L4460a2.  v3[v6]:= v1 @kind object;
  #L4460a6.  v6:= 3I;
  #L4460a8.  v3[v6]:= v7 @kind object;
  #L4460ac.  v6:= "Annotation %s does not match %s for '%s' in %s" @kind object;
  #L4460b0.  call `<init>`(v2, v6, v3) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L4460b6.  throw v2;
  #L4460b8.  return @kind void;
}
procedure `void` `m`(`org.simpleframework.xml.core.InstantiatorBuilder` v3 @kind this, `org.simpleframework.xml.core.Label` v4 @kind object, `java.util.List` v5 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.m:(Lorg/simpleframework/xml/core/Label;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4460cc.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4460d2.  v5:= temp @kind object;
  #L4460d4.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4460da.  v0:= temp;
  #L4460dc.  if v0 == 0 then goto L446124;
  #L4460e0.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4460e6.  v0:= temp @kind object;
  #L4460e8.  v0:= (`org.simpleframework.xml.core.Creator`) v0 @kind object;
  #L4460ec.  call temp:= `getSignature`(v0) @signature `Lorg/simpleframework/xml/core/Creator;.getSignature:()Lorg/simpleframework/xml/core/Signature;` @kind interface;
  #L4460f2.  v0:= temp @kind object;
  #L4460f4.  call temp:= `getContact`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L4460fa.  v1:= temp @kind object;
  #L4460fc.  call temp:= `getKey`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getKey:()Ljava/lang/Object;` @kind interface;
  #L446102.  v2:= temp @kind object;
  #L446104.  call temp:= `isReadOnly`(v1) @signature `Lorg/simpleframework/xml/core/Contact;.isReadOnly:()Z` @kind interface;
  #L44610a.  v1:= temp;
  #L44610c.  if v1 == 0 then goto L4460d4;
  #L446110.  call temp:= `get`(v0, v2) @signature `Lorg/simpleframework/xml/core/Signature;.get:(Ljava/lang/Object;)Lorg/simpleframework/xml/core/Parameter;` @kind virtual;
  #L446116.  v0:= temp @kind object;
  #L446118.  if v0 != 0 then goto L4460d4;
  #L44611c.  call `remove`(v5) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L446122.  goto L4460d4;
  #L446124.  return @kind void;
}
procedure `void` `n`(`org.simpleframework.xml.core.InstantiatorBuilder` v2 @kind this) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.n:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L446138.  v0:= v2.`org.simpleframework.xml.core.InstantiatorBuilder.b` @type ^`org.simpleframework.xml.core.Instantiator` @kind object;
  #L44613c.  call temp:= `getCreators`(v0) @signature `Lorg/simpleframework/xml/core/Instantiator;.getCreators:()Ljava/util/List;` @kind interface;
  #L446142.  v0:= temp @kind object;
  #L446144.  v1:= v2.`org.simpleframework.xml.core.InstantiatorBuilder.b` @type ^`org.simpleframework.xml.core.Instantiator` @kind object;
  #L446148.  call temp:= `isDefault`(v1) @signature `Lorg/simpleframework/xml/core/Instantiator;.isDefault:()Z` @kind interface;
  #L44614e.  v1:= temp;
  #L446150.  if v1 == 0 then goto L446168;
  #L446154.  v1:= v2.`org.simpleframework.xml.core.InstantiatorBuilder.d` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L446158.  call `o`(v2, v1) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.o:(Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L44615e.  v1:= v2.`org.simpleframework.xml.core.InstantiatorBuilder.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L446162.  call `o`(v2, v1) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.o:(Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L446168.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L44616e.  v1:= temp;
  #L446170.  if v1 != 0 then goto L446188;
  #L446174.  v1:= v2.`org.simpleframework.xml.core.InstantiatorBuilder.d` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L446178.  call `p`(v2, v1, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.p:(Lorg/simpleframework/xml/core/LabelMap;Ljava/util/List;)V` @kind direct;
  #L44617e.  v1:= v2.`org.simpleframework.xml.core.InstantiatorBuilder.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L446182.  call `p`(v2, v1, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.p:(Lorg/simpleframework/xml/core/LabelMap;Ljava/util/List;)V` @kind direct;
  #L446188.  return @kind void;
}
procedure `void` `o`(`org.simpleframework.xml.core.InstantiatorBuilder` v3 @kind this, `org.simpleframework.xml.core.LabelMap` v4 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.o:(Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L44619c.  call temp:= `iterator`(v4) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L4461a2.  v4:= temp @kind object;
  #L4461a4.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4461aa.  v0:= temp;
  #L4461ac.  if v0 == 0 then goto L4461fc;
  #L4461b0.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4461b6.  v0:= temp @kind object;
  #L4461b8.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L4461bc.  if v0 == 0 then goto L4461a4;
  #L4461c0.  call temp:= `getContact`(v0) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L4461c6.  v1:= temp @kind object;
  #L4461c8.  call temp:= `isReadOnly`(v1) @signature `Lorg/simpleframework/xml/core/Contact;.isReadOnly:()Z` @kind interface;
  #L4461ce.  v1:= temp;
  #L4461d0.  if v1 != 0 then goto L4461d6;
  #L4461d4.  goto L4461a4;
  #L4461d6.  v4:= new `org.simpleframework.xml.core.ConstructorException`;
  #L4461da.  v1:= 2I;
  #L4461dc.  v1:= new `java.lang.Object`[v1];
  #L4461e0.  v2:= 0I;
  #L4461e2.  v1[v2]:= v0 @kind object;
  #L4461e6.  v0:= v3.`org.simpleframework.xml.core.InstantiatorBuilder.h` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L4461ea.  v2:= 1I;
  #L4461ec.  v1[v2]:= v0 @kind object;
  #L4461f0.  v0:= "Default constructor can not accept read only %s in %s" @kind object;
  #L4461f4.  call `<init>`(v4, v0, v1) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L4461fa.  throw v4;
  #L4461fc.  return @kind void;
}
procedure `void` `p`(`org.simpleframework.xml.core.InstantiatorBuilder` v2 @kind this, `org.simpleframework.xml.core.LabelMap` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.p:(Lorg/simpleframework/xml/core/LabelMap;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L446210.  call temp:= `iterator`(v3) @signature `Lorg/simpleframework/xml/core/LabelMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L446216.  v3:= temp @kind object;
  #L446218.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L44621e.  v0:= temp;
  #L446220.  if v0 == 0 then goto L44623c;
  #L446224.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L44622a.  v0:= temp @kind object;
  #L44622c.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L446230.  if v0 == 0 then goto L446218;
  #L446234.  call `m`(v2, v0, v4) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.m:(Lorg/simpleframework/xml/core/Label;Ljava/util/List;)V` @kind direct;
  #L44623a.  goto L446218;
  #L44623c.  call temp:= `isEmpty`(v4) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L446242.  v3:= temp;
  #L446244.  if v3 != 0 then goto L44624a;
  #L446248.  return @kind void;
  #L44624a.  v3:= new `org.simpleframework.xml.core.ConstructorException`;
  #L44624e.  v4:= 1I;
  #L446250.  v4:= new `java.lang.Object`[v4];
  #L446254.  v0:= v2.`org.simpleframework.xml.core.InstantiatorBuilder.h` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L446258.  v1:= 0I;
  #L44625a.  v4[v1]:= v0 @kind object;
  #L44625e.  v0:= "No constructor accepts all read only values in %s" @kind object;
  #L446262.  call `<init>`(v3, v0, v4) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L446268.  throw v3;
}
procedure `void` `q`(`org.simpleframework.xml.core.InstantiatorBuilder` v7 @kind this, `org.simpleframework.xml.core.Label` v8 @kind object, `org.simpleframework.xml.core.Parameter` v9 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.q:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/Parameter;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L44627c.  call temp:= `getNames`(v8) @signature `Lorg/simpleframework/xml/core/Label;.getNames:()[Ljava/lang/String;` @kind interface;
  #L446282.  v0:= temp @kind object;
  #L446284.  call temp:= `getName`(v9) @signature `Lorg/simpleframework/xml/core/Parameter;.getName:()Ljava/lang/String;` @kind interface;
  #L44628a.  v1:= temp @kind object;
  #L44628c.  call temp:= `b`(v7, v0, v1) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.b:([Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L446292.  v0:= temp;
  #L446294.  if v0 != 0 then goto L4462fe;
  #L446298.  call temp:= `getName`(v8) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L44629e.  v0:= temp @kind object;
  #L4462a0.  if v1 == v0 then goto L4462fe;
  #L4462a4.  v2:= "Annotation does not match %s for '%s' in %s" @kind object;
  #L4462a8.  v3:= 2I;
  #L4462aa.  v4:= 1I;
  #L4462ac.  v5:= 0I;
  #L4462ae.  v6:= 3I;
  #L4462b0.  if v1 == 0 then goto L4462e2;
  #L4462b4.  if v0 == 0 then goto L4462e2;
  #L4462b8.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4462be.  v0:= temp;
  #L4462c0.  if v0 == 0 then goto L4462c6;
  #L4462c4.  goto L4462fe;
  #L4462c6.  v0:= new `org.simpleframework.xml.core.ConstructorException`;
  #L4462ca.  v6:= new `java.lang.Object`[v6];
  #L4462ce.  v6[v5]:= v8 @kind object;
  #L4462d2.  v6[v4]:= v1 @kind object;
  #L4462d6.  v6[v3]:= v9 @kind object;
  #L4462da.  call `<init>`(v0, v2, v6) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L4462e0.  throw v0;
  #L4462e2.  v0:= new `org.simpleframework.xml.core.ConstructorException`;
  #L4462e6.  v6:= new `java.lang.Object`[v6];
  #L4462ea.  v6[v5]:= v8 @kind object;
  #L4462ee.  v6[v4]:= v1 @kind object;
  #L4462f2.  v6[v3]:= v9 @kind object;
  #L4462f6.  call `<init>`(v0, v2, v6) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L4462fc.  throw v0;
  #L4462fe.  return @kind void;
}
procedure `void` `r`(`org.simpleframework.xml.core.InstantiatorBuilder` v4 @kind this, `org.simpleframework.xml.core.Label` v5 @kind object, `org.simpleframework.xml.core.Parameter` v6 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.r:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/Parameter;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L446310.  call temp:= `getContact`(v5) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L446316.  v0:= temp @kind object;
  #L446318.  call temp:= `getName`(v6) @signature `Lorg/simpleframework/xml/core/Parameter;.getName:()Ljava/lang/String;` @kind interface;
  #L44631e.  v1:= temp @kind object;
  #L446320.  call temp:= `getType`(v6) @signature `Lorg/simpleframework/xml/core/Parameter;.getType:()Ljava/lang/Class;` @kind interface;
  #L446326.  v2:= temp @kind object;
  #L446328.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L44632e.  v0:= temp @kind object;
  #L446330.  call temp:= `isAssignable`(v2, v0) @signature `Lorg/simpleframework/xml/core/Support;.isAssignable:(Ljava/lang/Class;Ljava/lang/Class;)Z` @kind static;
  #L446336.  v0:= temp;
  #L446338.  if v0 == 0 then goto L44634a;
  #L44633c.  call `q`(v4, v5, v6) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.q:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/Parameter;)V` @kind direct;
  #L446342.  call `l`(v4, v5, v6) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.l:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/Parameter;)V` @kind direct;
  #L446348.  return @kind void;
  #L44634a.  v0:= new `org.simpleframework.xml.core.ConstructorException`;
  #L44634e.  v2:= 3I;
  #L446350.  v2:= new `java.lang.Object`[v2];
  #L446354.  v3:= 0I;
  #L446356.  v2[v3]:= v5 @kind object;
  #L44635a.  v5:= 1I;
  #L44635c.  v2[v5]:= v1 @kind object;
  #L446360.  v5:= 2I;
  #L446362.  v2[v5]:= v6 @kind object;
  #L446366.  v5:= "Type is not compatible with %s for '%s' in %s" @kind object;
  #L44636a.  call `<init>`(v0, v5, v2) @signature `Lorg/simpleframework/xml/core/ConstructorException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L446370.  throw v0;
}
procedure `org.simpleframework.xml.core.Instantiator` `build`(`org.simpleframework.xml.core.InstantiatorBuilder` v1 @kind this) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.build:()Lorg/simpleframework/xml/core/Instantiator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L445c8c.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.b` @type ^`org.simpleframework.xml.core.Instantiator` @kind object;
  #L445c90.  if v0 != 0 then goto L445cb2;
  #L445c94.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.h` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L445c98.  call `f`(v1, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.f:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L445c9e.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.h` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L445ca2.  call temp:= `a`(v1, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.a:(Lorg/simpleframework/xml/core/Detail;)Lorg/simpleframework/xml/core/Instantiator;` @kind direct;
  #L445ca8.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.h` @type ^`org.simpleframework.xml.core.Detail` @kind object;
  #L445cac.  call `k`(v1, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.k:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L445cb2.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.b` @type ^`org.simpleframework.xml.core.Instantiator` @kind object;
  #L445cb6.  return v0 @kind object;
}
procedure `void` `register`(`org.simpleframework.xml.core.InstantiatorBuilder` v1 @kind this, `org.simpleframework.xml.core.Label` v2 @kind object) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.register:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L445f08.  call temp:= `isAttribute`(v2) @signature `Lorg/simpleframework/xml/core/Label;.isAttribute:()Z` @kind interface;
  #L445f0e.  v0:= temp;
  #L445f10.  if v0 == 0 then goto L445f20;
  #L445f14.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.c` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L445f18.  call `h`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.h:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L445f1e.  goto L445f42;
  #L445f20.  call temp:= `isText`(v2) @signature `Lorg/simpleframework/xml/core/Label;.isText:()Z` @kind interface;
  #L445f26.  v0:= temp;
  #L445f28.  if v0 == 0 then goto L445f38;
  #L445f2c.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.e` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L445f30.  call `h`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.h:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L445f36.  goto L445f42;
  #L445f38.  v0:= v1.`org.simpleframework.xml.core.InstantiatorBuilder.d` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L445f3c.  call `h`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/InstantiatorBuilder;.h:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/core/LabelMap;)V` @kind direct;
  #L445f42.  return @kind void;
}
