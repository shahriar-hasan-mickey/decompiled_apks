record `org.simpleframework.xml.core.FieldScanner` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.ContactList` @kind class {
  `org.simpleframework.xml.core.AnnotationFactory` `org.simpleframework.xml.core.FieldScanner.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.ContactMap` `org.simpleframework.xml.core.FieldScanner.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Support` `org.simpleframework.xml.core.FieldScanner.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.FieldScanner` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object, `org.simpleframework.xml.core.Support` v3 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L445008.  call `<init>`(v1) @signature `Lorg/simpleframework/xml/core/ContactList;.<init>:()V` @kind direct;
  #L44500e.  v0:= new `org.simpleframework.xml.core.AnnotationFactory`;
  #L445012.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L445018.  v1.`org.simpleframework.xml.core.FieldScanner.a` @type ^`org.simpleframework.xml.core.AnnotationFactory` := v0 @kind object;
  #L44501c.  v0:= new `org.simpleframework.xml.core.ContactMap`;
  #L445020.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/ContactMap;.<init>:()V` @kind direct;
  #L445026.  v1.`org.simpleframework.xml.core.FieldScanner.b` @type ^`org.simpleframework.xml.core.ContactMap` := v0 @kind object;
  #L44502a.  v1.`org.simpleframework.xml.core.FieldScanner.c` @type ^`org.simpleframework.xml.core.Support` := v3 @kind object;
  #L44502e.  call `m`(v1, v2) @signature `Lorg/simpleframework/xml/core/FieldScanner;.m:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L445034.  return @kind void;
}
procedure `void` `a`(`org.simpleframework.xml.core.FieldScanner` v2 @kind this) @signature `Lorg/simpleframework/xml/core/FieldScanner;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L445048.  v0:= v2.`org.simpleframework.xml.core.FieldScanner.b` @type ^`org.simpleframework.xml.core.ContactMap` @kind object;
  #L44504c.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/core/ContactMap;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L445052.  v0:= temp @kind object;
  #L445054.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L44505a.  v1:= temp;
  #L44505c.  if v1 == 0 then goto L445074;
  #L445060.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L445066.  v1:= temp @kind object;
  #L445068.  v1:= (`org.simpleframework.xml.core.Contact`) v1 @kind object;
  #L44506c.  call temp:= `add`(v2, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L445072.  goto L445054;
  #L445074.  return @kind void;
}
procedure `void` `b`(`org.simpleframework.xml.core.FieldScanner` v1 @kind this, `java.lang.Class` v2 @kind object, `org.simpleframework.xml.DefaultType` v3 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.b:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L445088.  v0:= v1.`org.simpleframework.xml.core.FieldScanner.c` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L44508c.  call temp:= `getFields`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/Support;.getFields:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/ContactList;` @kind virtual;
  #L445092.  v2:= temp @kind object;
  #L445094.  if v2 == 0 then goto L44509e;
  #L445098.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L44509e.  return @kind void;
}
procedure `void` `c`(`org.simpleframework.xml.core.FieldScanner` v5 @kind this, `org.simpleframework.xml.core.Detail` v6 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.c:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4450b0.  call temp:= `getFields`(v6) @signature `Lorg/simpleframework/xml/core/Detail;.getFields:()Ljava/util/List;` @kind interface;
  #L4450b6.  v6:= temp @kind object;
  #L4450b8.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4450be.  v6:= temp @kind object;
  #L4450c0.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4450c6.  v0:= temp;
  #L4450c8.  if v0 == 0 then goto L445100;
  #L4450cc.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4450d2.  v0:= temp @kind object;
  #L4450d4.  v0:= (`org.simpleframework.xml.core.FieldDetail`) v0 @kind object;
  #L4450d8.  call temp:= `getAnnotations`(v0) @signature `Lorg/simpleframework/xml/core/FieldDetail;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L4450de.  v1:= temp @kind object;
  #L4450e0.  call temp:= `getField`(v0) @signature `Lorg/simpleframework/xml/core/FieldDetail;.getField:()Ljava/lang/reflect/Field;` @kind virtual;
  #L4450e6.  v0:= temp @kind object;
  #L4450e8.  v2:= length @variable v1;
  #L4450ea.  v3:= 0I;
  #L4450ec.  if v3 >= v2 then goto L4450c0;
  #L4450f0.  v4:= v1[v3] @kind object;
  #L4450f4.  call `l`(v5, v0, v4, v1) @signature `Lorg/simpleframework/xml/core/FieldScanner;.l:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L4450fa.  v3:= v3 + 1;
  #L4450fe.  goto L4450ec;
  #L445100.  return @kind void;
}
procedure `void` `d`(`org.simpleframework.xml.core.FieldScanner` v3 @kind this, `org.simpleframework.xml.core.Detail` v4 @kind object, `org.simpleframework.xml.DefaultType` v5 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.d:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/DefaultType;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L445114.  call temp:= `getFields`(v4) @signature `Lorg/simpleframework/xml/core/Detail;.getFields:()Ljava/util/List;` @kind interface;
  #L44511a.  v4:= temp @kind object;
  #L44511c.  v0:= `@@org.simpleframework.xml.DefaultType.FIELD` @type ^`org.simpleframework.xml.DefaultType` @kind object;
  #L445120.  if v5 != v0 then goto L44517c;
  #L445124.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L44512a.  v4:= temp @kind object;
  #L44512c.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L445132.  v5:= temp;
  #L445134.  if v5 == 0 then goto L44517c;
  #L445138.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L44513e.  v5:= temp @kind object;
  #L445140.  v5:= (`org.simpleframework.xml.core.FieldDetail`) v5 @kind object;
  #L445144.  call temp:= `getAnnotations`(v5) @signature `Lorg/simpleframework/xml/core/FieldDetail;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L44514a.  v0:= temp @kind object;
  #L44514c.  call temp:= `getField`(v5) @signature `Lorg/simpleframework/xml/core/FieldDetail;.getField:()Ljava/lang/reflect/Field;` @kind virtual;
  #L445152.  v5:= temp @kind object;
  #L445154.  call temp:= `getType`(v5) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L44515a.  v1:= temp @kind object;
  #L44515c.  call temp:= `f`(v3, v5) @signature `Lorg/simpleframework/xml/core/FieldScanner;.f:(Ljava/lang/reflect/Field;)Z` @kind direct;
  #L445162.  v2:= temp;
  #L445164.  if v2 != 0 then goto L44512c;
  #L445168.  call temp:= `h`(v3, v5) @signature `Lorg/simpleframework/xml/core/FieldScanner;.h:(Ljava/lang/reflect/Field;)Z` @kind direct;
  #L44516e.  v2:= temp;
  #L445170.  if v2 != 0 then goto L44512c;
  #L445174.  call `i`(v3, v5, v1, v0) @signature `Lorg/simpleframework/xml/core/FieldScanner;.i:(Ljava/lang/reflect/Field;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L44517a.  goto L44512c;
  #L44517c.  return @kind void;
}
procedure `void` `e`(`org.simpleframework.xml.core.FieldScanner` v2 @kind this, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.core.Contact` v4 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.e:(Ljava/lang/Object;Lorg/simpleframework/xml/core/Contact;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L445190.  v0:= v2.`org.simpleframework.xml.core.FieldScanner.b` @type ^`org.simpleframework.xml.core.ContactMap` @kind object;
  #L445194.  call temp:= `remove`(v0, v3) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L44519a.  v0:= temp @kind object;
  #L44519c.  v0:= (`org.simpleframework.xml.core.Contact`) v0 @kind object;
  #L4451a0.  if v0 == 0 then goto L4451b2;
  #L4451a4.  call temp:= `g`(v2, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.g:(Lorg/simpleframework/xml/core/Contact;)Z` @kind direct;
  #L4451aa.  v1:= temp;
  #L4451ac.  if v1 == 0 then goto L4451b2;
  #L4451b0.  v4:= v0 @kind object;
  #L4451b2.  v0:= v2.`org.simpleframework.xml.core.FieldScanner.b` @type ^`org.simpleframework.xml.core.ContactMap` @kind object;
  #L4451b6.  call temp:= `put`(v0, v3, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4451bc.  return @kind void;
}
procedure `boolean` `f`(`org.simpleframework.xml.core.FieldScanner` v0 @kind this, `java.lang.reflect.Field` v1 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.f:(Ljava/lang/reflect/Field;)Z` @AccessFlag PRIVATE {
    temp;

  #L444f88.  call temp:= `getModifiers`(v1) @signature `Ljava/lang/reflect/Field;.getModifiers:()I` @kind virtual;
  #L444f8e.  v1:= temp;
  #L444f90.  call temp:= `isStatic`(v1) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L444f96.  v1:= temp;
  #L444f98.  if v1 == 0 then goto L444fa0;
  #L444f9c.  v1:= 1I;
  #L444f9e.  return v1;
  #L444fa0.  v1:= 0I;
  #L444fa2.  return v1;
}
procedure `boolean` `g`(`org.simpleframework.xml.core.FieldScanner` v0 @kind this, `org.simpleframework.xml.core.Contact` v1 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.g:(Lorg/simpleframework/xml/core/Contact;)Z` @AccessFlag PRIVATE {
    temp;

  #L444fb4.  call temp:= `getAnnotation`(v1) @signature `Lorg/simpleframework/xml/core/Contact;.getAnnotation:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L444fba.  v1:= temp @kind object;
  #L444fbc.  v1:= instanceof @variable v1 @type ^`org.simpleframework.xml.Text` @kind boolean;
  #L444fc0.  if v1 == 0 then goto L444fc8;
  #L444fc4.  v1:= 1I;
  #L444fc6.  return v1;
  #L444fc8.  v1:= 0I;
  #L444fca.  return v1;
}
procedure `boolean` `h`(`org.simpleframework.xml.core.FieldScanner` v0 @kind this, `java.lang.reflect.Field` v1 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.h:(Ljava/lang/reflect/Field;)Z` @AccessFlag PRIVATE {
    temp;

  #L444fdc.  call temp:= `getModifiers`(v1) @signature `Ljava/lang/reflect/Field;.getModifiers:()I` @kind virtual;
  #L444fe2.  v1:= temp;
  #L444fe4.  call temp:= `isTransient`(v1) @signature `Ljava/lang/reflect/Modifier;.isTransient:(I)Z` @kind static;
  #L444fea.  v1:= temp;
  #L444fec.  if v1 == 0 then goto L444ff4;
  #L444ff0.  v1:= 1I;
  #L444ff2.  return v1;
  #L444ff4.  v1:= 0I;
  #L444ff6.  return v1;
}
procedure `void` `i`(`org.simpleframework.xml.core.FieldScanner` v2 @kind this, `java.lang.reflect.Field` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.annotation.Annotation`[] v5 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.i:(Ljava/lang/reflect/Field;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4451d0.  call temp:= `getDependents`(v3) @signature `Lorg/simpleframework/xml/core/Reflector;.getDependents:(Ljava/lang/reflect/Field;)[Ljava/lang/Class;` @kind static;
  #L4451d6.  v0:= temp @kind object;
  #L4451d8.  v1:= v2.`org.simpleframework.xml.core.FieldScanner.a` @type ^`org.simpleframework.xml.core.AnnotationFactory` @kind object;
  #L4451dc.  call temp:= `getInstance`(v1, v4, v0) @signature `Lorg/simpleframework/xml/core/AnnotationFactory;.getInstance:(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L4451e2.  v4:= temp @kind object;
  #L4451e4.  if v4 == 0 then goto L4451ee;
  #L4451e8.  call `j`(v2, v3, v4, v5) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L4451ee.  return @kind void;
}
procedure `void` `j`(`org.simpleframework.xml.core.FieldScanner` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object, `java.lang.annotation.Annotation`[] v4 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L445200.  v0:= new `org.simpleframework.xml.core.FieldContact`;
  #L445204.  call `<init>`(v0, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldContact;.<init>:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L44520a.  v3:= new `org.simpleframework.xml.core.FieldScanner$FieldKey`;
  #L44520e.  call `<init>`(v3, v2) @signature `Lorg/simpleframework/xml/core/FieldScanner$FieldKey;.<init>:(Ljava/lang/reflect/Field;)V` @kind direct;
  #L445214.  call temp:= `isAccessible`(v2) @signature `Ljava/lang/reflect/Field;.isAccessible:()Z` @kind virtual;
  #L44521a.  v4:= temp;
  #L44521c.  if v4 != 0 then goto L445228;
  #L445220.  v4:= 1I;
  #L445222.  call `setAccessible`(v2, v4) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L445228.  call `e`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/FieldScanner;.e:(Ljava/lang/Object;Lorg/simpleframework/xml/core/Contact;)V` @kind direct;
  #L44522e.  return @kind void;
}
procedure `void` `k`(`org.simpleframework.xml.core.FieldScanner` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.k:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L445240.  v3:= v1.`org.simpleframework.xml.core.FieldScanner.b` @type ^`org.simpleframework.xml.core.ContactMap` @kind object;
  #L445244.  v0:= new `org.simpleframework.xml.core.FieldScanner$FieldKey`;
  #L445248.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/FieldScanner$FieldKey;.<init>:(Ljava/lang/reflect/Field;)V` @kind direct;
  #L44524e.  call temp:= `remove`(v3, v0) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L445254.  return @kind void;
}
procedure `void` `l`(`org.simpleframework.xml.core.FieldScanner` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `java.lang.annotation.Annotation` v3 @kind object, `java.lang.annotation.Annotation`[] v4 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.l:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L445268.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Attribute` @kind boolean;
  #L44526c.  if v0 == 0 then goto L445276;
  #L445270.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L445276.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementUnion` @kind boolean;
  #L44527a.  if v0 == 0 then goto L445284;
  #L44527e.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L445284.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementListUnion` @kind boolean;
  #L445288.  if v0 == 0 then goto L445292;
  #L44528c.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L445292.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementMapUnion` @kind boolean;
  #L445296.  if v0 == 0 then goto L4452a0;
  #L44529a.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L4452a0.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementList` @kind boolean;
  #L4452a4.  if v0 == 0 then goto L4452ae;
  #L4452a8.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L4452ae.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementArray` @kind boolean;
  #L4452b2.  if v0 == 0 then goto L4452bc;
  #L4452b6.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L4452bc.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.ElementMap` @kind boolean;
  #L4452c0.  if v0 == 0 then goto L4452ca;
  #L4452c4.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L4452ca.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Element` @kind boolean;
  #L4452ce.  if v0 == 0 then goto L4452d8;
  #L4452d2.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L4452d8.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Version` @kind boolean;
  #L4452dc.  if v0 == 0 then goto L4452e6;
  #L4452e0.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L4452e6.  v0:= instanceof @variable v3 @type ^`org.simpleframework.xml.Text` @kind boolean;
  #L4452ea.  if v0 == 0 then goto L4452f4;
  #L4452ee.  call `j`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.j:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L4452f4.  v4:= instanceof @variable v3 @type ^`org.simpleframework.xml.Transient` @kind boolean;
  #L4452f8.  if v4 == 0 then goto L445302;
  #L4452fc.  call `k`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/FieldScanner;.k:(Ljava/lang/reflect/Field;Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L445302.  return @kind void;
}
procedure `void` `m`(`org.simpleframework.xml.core.FieldScanner` v3 @kind this, `org.simpleframework.xml.core.Detail` v4 @kind object) @signature `Lorg/simpleframework/xml/core/FieldScanner;.m:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L445314.  call temp:= `getOverride`(v4) @signature `Lorg/simpleframework/xml/core/Detail;.getOverride:()Lorg/simpleframework/xml/DefaultType;` @kind interface;
  #L44531a.  v0:= temp @kind object;
  #L44531c.  call temp:= `getAccess`(v4) @signature `Lorg/simpleframework/xml/core/Detail;.getAccess:()Lorg/simpleframework/xml/DefaultType;` @kind interface;
  #L445322.  v1:= temp @kind object;
  #L445324.  call temp:= `getSuper`(v4) @signature `Lorg/simpleframework/xml/core/Detail;.getSuper:()Ljava/lang/Class;` @kind interface;
  #L44532a.  v2:= temp @kind object;
  #L44532c.  if v2 == 0 then goto L445336;
  #L445330.  call `b`(v3, v2, v0) @signature `Lorg/simpleframework/xml/core/FieldScanner;.b:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)V` @kind direct;
  #L445336.  call `d`(v3, v4, v1) @signature `Lorg/simpleframework/xml/core/FieldScanner;.d:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/DefaultType;)V` @kind direct;
  #L44533c.  call `c`(v3, v4) @signature `Lorg/simpleframework/xml/core/FieldScanner;.c:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L445342.  call `a`(v3) @signature `Lorg/simpleframework/xml/core/FieldScanner;.a:()V` @kind direct;
  #L445348.  return @kind void;
}
