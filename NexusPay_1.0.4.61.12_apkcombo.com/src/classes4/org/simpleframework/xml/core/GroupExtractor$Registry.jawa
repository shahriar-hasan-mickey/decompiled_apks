record `org.simpleframework.xml.core.GroupExtractor$Registry` @kind class @AccessFlag PUBLIC extends `java.util.LinkedHashMap` @kind class, `java.lang.Iterable` @kind interface {
  `org.simpleframework.xml.core.LabelMap` `org.simpleframework.xml.core.GroupExtractor$Registry.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Label` `org.simpleframework.xml.core.GroupExtractor$Registry.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.GroupExtractor$Registry` v0 @kind this, `org.simpleframework.xml.core.LabelMap` v1 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.<init>:(Lorg/simpleframework/xml/core/LabelMap;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4456a8.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L4456ae.  v0.`org.simpleframework.xml.core.GroupExtractor$Registry.a` @type ^`org.simpleframework.xml.core.LabelMap` := v1 @kind object;
  #L4456b2.  return @kind void;
}
procedure `void` `b`(`org.simpleframework.xml.core.GroupExtractor$Registry` v2 @kind this, `java.lang.Class` v3 @kind object, `org.simpleframework.xml.core.Label` v4 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.b:(Ljava/lang/Class;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4456ec.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/core/Label;.getName:()Ljava/lang/String;` @kind interface;
  #L4456f2.  v0:= temp @kind object;
  #L4456f4.  v1:= v2.`org.simpleframework.xml.core.GroupExtractor$Registry.a` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L4456f8.  call temp:= `containsKey`(v1, v0) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L4456fe.  v1:= temp;
  #L445700.  if v1 != 0 then goto L44570e;
  #L445704.  v1:= v2.`org.simpleframework.xml.core.GroupExtractor$Registry.a` @type ^`org.simpleframework.xml.core.LabelMap` @kind object;
  #L445708.  call temp:= `put`(v1, v0, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L44570e.  call temp:= `containsKey`(v2, v3) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L445714.  v0:= temp;
  #L445716.  if v0 != 0 then goto L445720;
  #L44571a.  call temp:= `put`(v2, v3, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L445720.  return @kind void;
}
procedure `org.simpleframework.xml.core.Label` `c`(`org.simpleframework.xml.core.GroupExtractor$Registry` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.c:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44562c.  if v2 == 0 then goto L44564c;
  #L445630.  call temp:= `get`(v1, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L445636.  v0:= temp @kind object;
  #L445638.  v0:= (`org.simpleframework.xml.core.Label`) v0 @kind object;
  #L44563c.  if v0 == 0 then goto L445642;
  #L445640.  return v0 @kind object;
  #L445642.  call temp:= `getSuperclass`(v2) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L445648.  v2:= temp @kind object;
  #L44564a.  goto L44562c;
  #L44564c.  v2:= 0I;
  #L44564e.  return v2 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `d`(`org.simpleframework.xml.core.GroupExtractor$Registry` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.d:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L445680.  v0:= v2.`org.simpleframework.xml.core.GroupExtractor$Registry.b` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L445684.  if v0 == 0 then goto L445692;
  #L445688.  v1:= constclass @type ^`java.lang.String` @kind object;
  #L44568c.  if v3 != v1 then goto L445692;
  #L445690.  return v0 @kind object;
  #L445692.  v3:= 0I;
  #L445694.  return v3 @kind object;
}
procedure `void` `registerText`(`org.simpleframework.xml.core.GroupExtractor$Registry` v2 @kind this, `org.simpleframework.xml.core.Label` v3 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.registerText:(Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L445734.  call temp:= `getContact`(v3) @signature `Lorg/simpleframework/xml/core/Label;.getContact:()Lorg/simpleframework/xml/core/Contact;` @kind interface;
  #L44573a.  v0:= temp @kind object;
  #L44573c.  v1:= constclass @type ^`org.simpleframework.xml.Text` @kind object;
  #L445740.  call temp:= `getAnnotation`(v0, v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind interface;
  #L445746.  v0:= temp @kind object;
  #L445748.  v0:= (`org.simpleframework.xml.Text`) v0 @kind object;
  #L44574c.  if v0 == 0 then goto L44575e;
  #L445750.  v1:= new `org.simpleframework.xml.core.TextListLabel`;
  #L445754.  call `<init>`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/TextListLabel;.<init>:(Lorg/simpleframework/xml/core/Label;Lorg/simpleframework/xml/Text;)V` @kind direct;
  #L44575a.  v2.`org.simpleframework.xml.core.GroupExtractor$Registry.b` @type ^`org.simpleframework.xml.core.Label` := v1 @kind object;
  #L44575e.  return @kind void;
}
procedure `boolean` `isText`(`org.simpleframework.xml.core.GroupExtractor$Registry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.isText:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4455c0.  v0:= v1.`org.simpleframework.xml.core.GroupExtractor$Registry.b` @type ^`org.simpleframework.xml.core.Label` @kind object;
  #L4455c4.  if v0 == 0 then goto L4455cc;
  #L4455c8.  v0:= 1I;
  #L4455ca.  goto L4455ce;
  #L4455cc.  v0:= 0I;
  #L4455ce.  return v0;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.core.GroupExtractor$Registry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4455e0.  call temp:= `values`(v1) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L4455e6.  v0:= temp @kind object;
  #L4455e8.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4455ee.  v0:= temp @kind object;
  #L4455f0.  return v0 @kind object;
}
procedure `void` `register`(`org.simpleframework.xml.core.GroupExtractor$Registry` v1 @kind this, `java.lang.Class` v2 @kind object, `org.simpleframework.xml.core.Label` v3 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.register:(Ljava/lang/Class;Lorg/simpleframework/xml/core/Label;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4456c4.  v0:= new `org.simpleframework.xml.core.CacheLabel`;
  #L4456c8.  call `<init>`(v0, v3) @signature `Lorg/simpleframework/xml/core/CacheLabel;.<init>:(Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L4456ce.  call `b`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.b:(Ljava/lang/Class;Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L4456d4.  call `registerText`(v1, v0) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.registerText:(Lorg/simpleframework/xml/core/Label;)V` @kind direct;
  #L4456da.  return @kind void;
}
procedure `org.simpleframework.xml.core.Label` `resolve`(`org.simpleframework.xml.core.GroupExtractor$Registry` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.resolve:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L445604.  call temp:= `d`(v1, v2) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.d:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L44560a.  v0:= temp @kind object;
  #L44560c.  if v0 != 0 then goto L44561a;
  #L445610.  call temp:= `c`(v1, v2) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.c:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L445616.  v2:= temp @kind object;
  #L445618.  return v2 @kind object;
  #L44561a.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Label` `resolveText`(`org.simpleframework.xml.core.GroupExtractor$Registry` v1 @kind this) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.resolveText:()Lorg/simpleframework/xml/core/Label;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L445660.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L445664.  call temp:= `d`(v1, v0) @signature `Lorg/simpleframework/xml/core/GroupExtractor$Registry;.d:(Ljava/lang/Class;)Lorg/simpleframework/xml/core/Label;` @kind direct;
  #L44566a.  v0:= temp @kind object;
  #L44566c.  return v0 @kind object;
}
