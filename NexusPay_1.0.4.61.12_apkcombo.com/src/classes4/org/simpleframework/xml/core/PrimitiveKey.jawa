record `org.simpleframework.xml.core.PrimitiveKey` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Converter` @kind interface {
  `org.simpleframework.xml.core.PrimitiveFactory` `org.simpleframework.xml.core.PrimitiveKey.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Context` `org.simpleframework.xml.core.PrimitiveKey.b` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Primitive` `org.simpleframework.xml.core.PrimitiveKey.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.stream.Style` `org.simpleframework.xml.core.PrimitiveKey.d` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Entry` `org.simpleframework.xml.core.PrimitiveKey.e` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.PrimitiveKey.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.PrimitiveKey` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.core.Entry` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/core/Entry;Lorg/simpleframework/xml/strategy/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L44b7c4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L44b7ca.  v0:= new `org.simpleframework.xml.core.PrimitiveFactory`;
  #L44b7ce.  call `<init>`(v0, v2, v4) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L44b7d4.  v1.`org.simpleframework.xml.core.PrimitiveKey.a` @type ^`org.simpleframework.xml.core.PrimitiveFactory` := v0 @kind object;
  #L44b7d8.  v0:= new `org.simpleframework.xml.core.Primitive`;
  #L44b7dc.  call `<init>`(v0, v2, v4) @signature `Lorg/simpleframework/xml/core/Primitive;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L44b7e2.  v1.`org.simpleframework.xml.core.PrimitiveKey.c` @type ^`org.simpleframework.xml.core.Primitive` := v0 @kind object;
  #L44b7e6.  call temp:= `getStyle`(v2) @signature `Lorg/simpleframework/xml/core/Context;.getStyle:()Lorg/simpleframework/xml/stream/Style;` @kind interface;
  #L44b7ec.  v0:= temp @kind object;
  #L44b7ee.  v1.`org.simpleframework.xml.core.PrimitiveKey.d` @type ^`org.simpleframework.xml.stream.Style` := v0 @kind object;
  #L44b7f2.  v1.`org.simpleframework.xml.core.PrimitiveKey.b` @type ^`org.simpleframework.xml.core.Context` := v2 @kind object;
  #L44b7f6.  v1.`org.simpleframework.xml.core.PrimitiveKey.e` @type ^`org.simpleframework.xml.core.Entry` := v3 @kind object;
  #L44b7fa.  v1.`org.simpleframework.xml.core.PrimitiveKey.f` @type ^`org.simpleframework.xml.strategy.Type` := v4 @kind object;
  #L44b7fe.  return @kind void;
}
procedure `boolean` `a`(`org.simpleframework.xml.core.PrimitiveKey` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.a:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L44b5a8.  v0:= v2.`org.simpleframework.xml.core.PrimitiveKey.a` @type ^`org.simpleframework.xml.core.PrimitiveFactory` @kind object;
  #L44b5ac.  v1:= v2.`org.simpleframework.xml.core.PrimitiveKey.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L44b5b0.  call temp:= `setOverride`(v0, v1, v4, v3) @signature `Lorg/simpleframework/xml/core/Factory;.setOverride:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/OutputNode;)Z` @kind virtual;
  #L44b5b6.  v3:= temp;
  #L44b5b8.  return v3;
}
procedure `java.lang.Object` `b`(`org.simpleframework.xml.core.PrimitiveKey` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44b74c.  v0:= v1.`org.simpleframework.xml.core.PrimitiveKey.d` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L44b750.  call temp:= `getAttribute`(v0, v3) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L44b756.  v3:= temp @kind object;
  #L44b758.  call temp:= `getAttribute`(v2, v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttribute:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L44b75e.  v2:= temp @kind object;
  #L44b760.  if v2 != 0 then goto L44b768;
  #L44b764.  v2:= 0I;
  #L44b766.  return v2 @kind object;
  #L44b768.  v3:= v1.`org.simpleframework.xml.core.PrimitiveKey.c` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L44b76c.  call temp:= `read`(v3, v2) @signature `Lorg/simpleframework/xml/core/Primitive;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L44b772.  v2:= temp @kind object;
  #L44b774.  return v2 @kind object;
}
procedure `java.lang.Object` `c`(`org.simpleframework.xml.core.PrimitiveKey` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.c:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44b788.  v0:= v1.`org.simpleframework.xml.core.PrimitiveKey.d` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L44b78c.  call temp:= `getElement`(v0, v3) @signature `Lorg/simpleframework/xml/stream/Style;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L44b792.  v3:= temp @kind object;
  #L44b794.  call temp:= `getNext`(v2, v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L44b79a.  v2:= temp @kind object;
  #L44b79c.  if v2 != 0 then goto L44b7a4;
  #L44b7a0.  v2:= 0I;
  #L44b7a2.  return v2 @kind object;
  #L44b7a4.  v3:= v1.`org.simpleframework.xml.core.PrimitiveKey.c` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L44b7a8.  call temp:= `read`(v3, v2) @signature `Lorg/simpleframework/xml/core/Primitive;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L44b7ae.  v2:= temp @kind object;
  #L44b7b0.  return v2 @kind object;
}
procedure `boolean` `d`(`org.simpleframework.xml.core.PrimitiveKey` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.d:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44b628.  v0:= v1.`org.simpleframework.xml.core.PrimitiveKey.d` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L44b62c.  call temp:= `getElement`(v0, v3) @signature `Lorg/simpleframework/xml/stream/Style;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L44b632.  v3:= temp @kind object;
  #L44b634.  call temp:= `getAttribute`(v2, v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getAttribute:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L44b63a.  v2:= temp @kind object;
  #L44b63c.  if v2 != 0 then goto L44b644;
  #L44b640.  v2:= 1I;
  #L44b642.  return v2;
  #L44b644.  v3:= v1.`org.simpleframework.xml.core.PrimitiveKey.c` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L44b648.  call temp:= `validate`(v3, v2) @signature `Lorg/simpleframework/xml/core/Primitive;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind virtual;
  #L44b64e.  v2:= temp;
  #L44b650.  return v2;
}
procedure `boolean` `e`(`org.simpleframework.xml.core.PrimitiveKey` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.e:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L44b664.  v0:= v1.`org.simpleframework.xml.core.PrimitiveKey.d` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L44b668.  call temp:= `getElement`(v0, v3) @signature `Lorg/simpleframework/xml/stream/Style;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L44b66e.  v3:= temp @kind object;
  #L44b670.  call temp:= `getNext`(v2, v3) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L44b676.  v2:= temp @kind object;
  #L44b678.  if v2 != 0 then goto L44b680;
  #L44b67c.  v2:= 1I;
  #L44b67e.  return v2;
  #L44b680.  v3:= v1.`org.simpleframework.xml.core.PrimitiveKey.c` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L44b684.  call temp:= `validate`(v3, v2) @signature `Lorg/simpleframework/xml/core/Primitive;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @kind virtual;
  #L44b68a.  v2:= temp;
  #L44b68c.  return v2;
}
procedure `void` `f`(`org.simpleframework.xml.core.PrimitiveKey` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.f:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L44b844.  v0:= v2.`org.simpleframework.xml.core.PrimitiveKey.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L44b848.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L44b84e.  v0:= temp @kind object;
  #L44b850.  v1:= v2.`org.simpleframework.xml.core.PrimitiveKey.a` @type ^`org.simpleframework.xml.core.PrimitiveFactory` @kind object;
  #L44b854.  call temp:= `getText`(v1, v4) @signature `Lorg/simpleframework/xml/core/PrimitiveFactory;.getText:(Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L44b85a.  v4:= temp @kind object;
  #L44b85c.  v1:= v2.`org.simpleframework.xml.core.PrimitiveKey.e` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L44b860.  call temp:= `getKey`(v1) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:()Ljava/lang/String;` @kind virtual;
  #L44b866.  v1:= temp @kind object;
  #L44b868.  if v1 != 0 then goto L44b878;
  #L44b86c.  v1:= v2.`org.simpleframework.xml.core.PrimitiveKey.b` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L44b870.  call temp:= `getName`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L44b876.  v1:= temp @kind object;
  #L44b878.  v0:= v2.`org.simpleframework.xml.core.PrimitiveKey.d` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L44b87c.  call temp:= `getAttribute`(v0, v1) @signature `Lorg/simpleframework/xml/stream/Style;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L44b882.  v0:= temp @kind object;
  #L44b884.  if v4 == 0 then goto L44b88e;
  #L44b888.  call temp:= `setAttribute`(v3, v0, v4) @signature `Lorg/simpleframework/xml/stream/OutputNode;.setAttribute:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L44b88e.  return @kind void;
}
procedure `void` `g`(`org.simpleframework.xml.core.PrimitiveKey` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.g:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L44b8a0.  v0:= v2.`org.simpleframework.xml.core.PrimitiveKey.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L44b8a4.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L44b8aa.  v0:= temp @kind object;
  #L44b8ac.  v1:= v2.`org.simpleframework.xml.core.PrimitiveKey.e` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L44b8b0.  call temp:= `getKey`(v1) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:()Ljava/lang/String;` @kind virtual;
  #L44b8b6.  v1:= temp @kind object;
  #L44b8b8.  if v1 != 0 then goto L44b8c8;
  #L44b8bc.  v1:= v2.`org.simpleframework.xml.core.PrimitiveKey.b` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L44b8c0.  call temp:= `getName`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L44b8c6.  v1:= temp @kind object;
  #L44b8c8.  v0:= v2.`org.simpleframework.xml.core.PrimitiveKey.d` @type ^`org.simpleframework.xml.stream.Style` @kind object;
  #L44b8cc.  call temp:= `getElement`(v0, v1) @signature `Lorg/simpleframework/xml/stream/Style;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L44b8d2.  v0:= temp @kind object;
  #L44b8d4.  call temp:= `getChild`(v3, v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getChild:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L44b8da.  v3:= temp @kind object;
  #L44b8dc.  if v4 == 0 then goto L44b8f6;
  #L44b8e0.  call temp:= `a`(v2, v3, v4) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.a:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)Z` @kind direct;
  #L44b8e6.  v0:= temp;
  #L44b8e8.  if v0 != 0 then goto L44b8f6;
  #L44b8ec.  v0:= v2.`org.simpleframework.xml.core.PrimitiveKey.c` @type ^`org.simpleframework.xml.core.Primitive` @kind object;
  #L44b8f0.  call `write`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Primitive;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind virtual;
  #L44b8f6.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.PrimitiveKey` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44b6a0.  v0:= v2.`org.simpleframework.xml.core.PrimitiveKey.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L44b6a4.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L44b6aa.  v0:= temp @kind object;
  #L44b6ac.  v1:= v2.`org.simpleframework.xml.core.PrimitiveKey.e` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L44b6b0.  call temp:= `getKey`(v1) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:()Ljava/lang/String;` @kind virtual;
  #L44b6b6.  v1:= temp @kind object;
  #L44b6b8.  if v1 != 0 then goto L44b6c8;
  #L44b6bc.  v1:= v2.`org.simpleframework.xml.core.PrimitiveKey.b` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L44b6c0.  call temp:= `getName`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L44b6c6.  v1:= temp @kind object;
  #L44b6c8.  v0:= v2.`org.simpleframework.xml.core.PrimitiveKey.e` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L44b6cc.  call temp:= `isAttribute`(v0) @signature `Lorg/simpleframework/xml/core/Entry;.isAttribute:()Z` @kind virtual;
  #L44b6d2.  v0:= temp;
  #L44b6d4.  if v0 != 0 then goto L44b6e2;
  #L44b6d8.  call temp:= `c`(v2, v3, v1) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.c:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Ljava/lang/Object;` @kind direct;
  #L44b6de.  v3:= temp @kind object;
  #L44b6e0.  return v3 @kind object;
  #L44b6e2.  call temp:= `b`(v2, v3, v1) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Ljava/lang/Object;` @kind direct;
  #L44b6e8.  v3:= temp @kind object;
  #L44b6ea.  return v3 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.PrimitiveKey` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44b6fc.  v0:= v2.`org.simpleframework.xml.core.PrimitiveKey.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L44b700.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L44b706.  v0:= temp @kind object;
  #L44b708.  if v4 != 0 then goto L44b716;
  #L44b70c.  call temp:= `read`(v2, v3) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L44b712.  v3:= temp @kind object;
  #L44b714.  return v3 @kind object;
  #L44b716.  v3:= new `org.simpleframework.xml.core.PersistenceException`;
  #L44b71a.  v4:= 2I;
  #L44b71c.  v4:= new `java.lang.Object`[v4];
  #L44b720.  v1:= 0I;
  #L44b722.  v4[v1]:= v0 @kind object;
  #L44b726.  v0:= v2.`org.simpleframework.xml.core.PrimitiveKey.e` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L44b72a.  v1:= 1I;
  #L44b72c.  v4[v1]:= v0 @kind object;
  #L44b730.  v0:= "Can not read key of %s for %s" @kind object;
  #L44b734.  call `<init>`(v3, v0, v4) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L44b73a.  throw v3;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.PrimitiveKey` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L44b5cc.  v0:= v2.`org.simpleframework.xml.core.PrimitiveKey.f` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L44b5d0.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L44b5d6.  v0:= temp @kind object;
  #L44b5d8.  v1:= v2.`org.simpleframework.xml.core.PrimitiveKey.e` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L44b5dc.  call temp:= `getKey`(v1) @signature `Lorg/simpleframework/xml/core/Entry;.getKey:()Ljava/lang/String;` @kind virtual;
  #L44b5e2.  v1:= temp @kind object;
  #L44b5e4.  if v1 != 0 then goto L44b5f4;
  #L44b5e8.  v1:= v2.`org.simpleframework.xml.core.PrimitiveKey.b` @type ^`org.simpleframework.xml.core.Context` @kind object;
  #L44b5ec.  call temp:= `getName`(v1, v0) @signature `Lorg/simpleframework/xml/core/Context;.getName:(Ljava/lang/Class;)Ljava/lang/String;` @kind interface;
  #L44b5f2.  v1:= temp @kind object;
  #L44b5f4.  v0:= v2.`org.simpleframework.xml.core.PrimitiveKey.e` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L44b5f8.  call temp:= `isAttribute`(v0) @signature `Lorg/simpleframework/xml/core/Entry;.isAttribute:()Z` @kind virtual;
  #L44b5fe.  v0:= temp;
  #L44b600.  if v0 != 0 then goto L44b60e;
  #L44b604.  call temp:= `e`(v2, v3, v1) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.e:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Z` @kind direct;
  #L44b60a.  v3:= temp;
  #L44b60c.  return v3;
  #L44b60e.  call temp:= `d`(v2, v3, v1) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.d:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;)Z` @kind direct;
  #L44b614.  v3:= temp;
  #L44b616.  return v3;
}
procedure `void` `write`(`org.simpleframework.xml.core.PrimitiveKey` v1 @kind this, `org.simpleframework.xml.stream.OutputNode` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L44b810.  v0:= v1.`org.simpleframework.xml.core.PrimitiveKey.e` @type ^`org.simpleframework.xml.core.Entry` @kind object;
  #L44b814.  call temp:= `isAttribute`(v0) @signature `Lorg/simpleframework/xml/core/Entry;.isAttribute:()Z` @kind virtual;
  #L44b81a.  v0:= temp;
  #L44b81c.  if v0 != 0 then goto L44b828;
  #L44b820.  call `g`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.g:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind direct;
  #L44b826.  goto L44b832;
  #L44b828.  if v3 == 0 then goto L44b832;
  #L44b82c.  call `f`(v1, v2, v3) @signature `Lorg/simpleframework/xml/core/PrimitiveKey;.f:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @kind direct;
  #L44b832.  return @kind void;
}
