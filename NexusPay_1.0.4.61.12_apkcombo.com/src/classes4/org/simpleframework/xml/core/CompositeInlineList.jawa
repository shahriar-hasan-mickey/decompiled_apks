record `org.simpleframework.xml.core.CompositeInlineList` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.core.Repeater` @kind interface {
  `org.simpleframework.xml.core.CollectionFactory` `org.simpleframework.xml.core.CompositeInlineList.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.core.Traverser` `org.simpleframework.xml.core.CompositeInlineList.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.core.CompositeInlineList.c` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.CompositeInlineList.d` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.strategy.Type` `org.simpleframework.xml.core.CompositeInlineList.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.CompositeInlineList` v1 @kind this, `org.simpleframework.xml.core.Context` v2 @kind object, `org.simpleframework.xml.strategy.Type` v3 @kind object, `org.simpleframework.xml.strategy.Type` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/strategy/Type;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L43e88c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43e892.  v0:= new `org.simpleframework.xml.core.CollectionFactory`;
  #L43e896.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.<init>:(Lorg/simpleframework/xml/core/Context;Lorg/simpleframework/xml/strategy/Type;)V` @kind direct;
  #L43e89c.  v1.`org.simpleframework.xml.core.CompositeInlineList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` := v0 @kind object;
  #L43e8a0.  v0:= new `org.simpleframework.xml.core.Traverser`;
  #L43e8a4.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/core/Traverser;.<init>:(Lorg/simpleframework/xml/core/Context;)V` @kind direct;
  #L43e8aa.  v1.`org.simpleframework.xml.core.CompositeInlineList.b` @type ^`org.simpleframework.xml.core.Traverser` := v0 @kind object;
  #L43e8ae.  v1.`org.simpleframework.xml.core.CompositeInlineList.d` @type ^`org.simpleframework.xml.strategy.Type` := v4 @kind object;
  #L43e8b2.  v1.`org.simpleframework.xml.core.CompositeInlineList.e` @type ^`org.simpleframework.xml.strategy.Type` := v3 @kind object;
  #L43e8b6.  v1.`org.simpleframework.xml.core.CompositeInlineList.c` @type ^`java.lang.String` := v5 @kind object;
  #L43e8ba.  return @kind void;
}
procedure `java.lang.Object` `a`(`org.simpleframework.xml.core.CompositeInlineList` v2 @kind this, `org.simpleframework.xml.stream.InputNode` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L43e7a0.  v0:= v2.`org.simpleframework.xml.core.CompositeInlineList.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L43e7a4.  call temp:= `read`(v0, v3, v4) @signature `Lorg/simpleframework/xml/core/Traverser;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L43e7aa.  v3:= temp @kind object;
  #L43e7ac.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L43e7b2.  v4:= temp @kind object;
  #L43e7b4.  v0:= v2.`org.simpleframework.xml.core.CompositeInlineList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L43e7b8.  call temp:= `getType`(v0) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L43e7be.  v0:= temp @kind object;
  #L43e7c0.  call temp:= `isAssignableFrom`(v0, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L43e7c6.  v0:= temp;
  #L43e7c8.  if v0 == 0 then goto L43e7ce;
  #L43e7cc.  return v3 @kind object;
  #L43e7ce.  v3:= new `org.simpleframework.xml.core.PersistenceException`;
  #L43e7d2.  v0:= 3I;
  #L43e7d4.  v0:= new `java.lang.Object`[v0];
  #L43e7d8.  v1:= 0I;
  #L43e7da.  v0[v1]:= v4 @kind object;
  #L43e7de.  v4:= v2.`org.simpleframework.xml.core.CompositeInlineList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L43e7e2.  v1:= 1I;
  #L43e7e4.  v0[v1]:= v4 @kind object;
  #L43e7e8.  v4:= v2.`org.simpleframework.xml.core.CompositeInlineList.e` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L43e7ec.  v1:= 2I;
  #L43e7ee.  v0[v1]:= v4 @kind object;
  #L43e7f2.  v4:= "Entry %s does not match %s for %s" @kind object;
  #L43e7f6.  call `<init>`(v3, v4, v0) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L43e7fc.  throw v3;
}
procedure `java.lang.Object` `b`(`org.simpleframework.xml.core.CompositeInlineList` v3 @kind this, `org.simpleframework.xml.stream.InputNode` v4 @kind object, `java.util.Collection` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/util/Collection;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L43e83c.  call temp:= `getParent`(v4) @signature `Lorg/simpleframework/xml/stream/InputNode;.getParent:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L43e842.  v0:= temp @kind object;
  #L43e844.  call temp:= `getName`(v4) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L43e84a.  v1:= temp @kind object;
  #L43e84c.  if v4 == 0 then goto L43e878;
  #L43e850.  v2:= v3.`org.simpleframework.xml.core.CompositeInlineList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L43e854.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L43e85a.  v2:= temp @kind object;
  #L43e85c.  call temp:= `a`(v3, v4, v2) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.a:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Ljava/lang/Object;` @kind direct;
  #L43e862.  v4:= temp @kind object;
  #L43e864.  if v4 == 0 then goto L43e86e;
  #L43e868.  call temp:= `add`(v5, v4) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L43e86e.  call temp:= `getNext`(v0, v1) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L43e874.  v4:= temp @kind object;
  #L43e876.  goto L43e84c;
  #L43e878.  return v5 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeInlineList` v1 @kind this, `org.simpleframework.xml.stream.InputNode` v2 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43e770.  v0:= v1.`org.simpleframework.xml.core.CompositeInlineList.a` @type ^`org.simpleframework.xml.core.CollectionFactory` @kind object;
  #L43e774.  call temp:= `getInstance`(v0) @signature `Lorg/simpleframework/xml/core/CollectionFactory;.getInstance:()Ljava/lang/Object;` @kind virtual;
  #L43e77a.  v0:= temp @kind object;
  #L43e77c.  v0:= (`java.util.Collection`) v0 @kind object;
  #L43e780.  if v0 == 0 then goto L43e78c;
  #L43e784.  call temp:= `b`(v1, v2, v0) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/util/Collection;)Ljava/lang/Object;` @kind direct;
  #L43e78a.  return v0 @kind object;
  #L43e78c.  v2:= 0I;
  #L43e78e.  return v2 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.core.CompositeInlineList` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.read:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L43e810.  v2:= (`java.util.Collection`) v2 @kind object;
  #L43e814.  if v2 == 0 then goto L43e820;
  #L43e818.  call temp:= `b`(v0, v1, v2) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.b:(Lorg/simpleframework/xml/stream/InputNode;Ljava/util/Collection;)Ljava/lang/Object;` @kind direct;
  #L43e81e.  return v2 @kind object;
  #L43e820.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.read:(Lorg/simpleframework/xml/stream/InputNode;)Ljava/lang/Object;` @kind virtual;
  #L43e826.  v1:= temp @kind object;
  #L43e828.  return v1 @kind object;
}
procedure `boolean` `validate`(`org.simpleframework.xml.core.CompositeInlineList` v4 @kind this, `org.simpleframework.xml.stream.InputNode` v5 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.validate:(Lorg/simpleframework/xml/stream/InputNode;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L43e71c.  call temp:= `getParent`(v5) @signature `Lorg/simpleframework/xml/stream/InputNode;.getParent:()Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L43e722.  v0:= temp @kind object;
  #L43e724.  v1:= v4.`org.simpleframework.xml.core.CompositeInlineList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L43e728.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L43e72e.  v1:= temp @kind object;
  #L43e730.  call temp:= `getName`(v5) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L43e736.  v2:= temp @kind object;
  #L43e738.  if v5 == 0 then goto L43e75a;
  #L43e73c.  v3:= v4.`org.simpleframework.xml.core.CompositeInlineList.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L43e740.  call temp:= `validate`(v3, v5, v1) @signature `Lorg/simpleframework/xml/core/Traverser;.validate:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/Class;)Z` @kind virtual;
  #L43e746.  v5:= temp;
  #L43e748.  if v5 != 0 then goto L43e750;
  #L43e74c.  v5:= 0I;
  #L43e74e.  return v5;
  #L43e750.  call temp:= `getNext`(v0, v2) @signature `Lorg/simpleframework/xml/stream/InputNode;.getNext:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind interface;
  #L43e756.  v5:= temp @kind object;
  #L43e758.  goto L43e738;
  #L43e75a.  v5:= 1I;
  #L43e75c.  return v5;
}
procedure `void` `write`(`org.simpleframework.xml.core.CompositeInlineList` v2 @kind this, `org.simpleframework.xml.stream.OutputNode` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43e8cc.  v4:= (`java.util.Collection`) v4 @kind object;
  #L43e8d0.  call temp:= `getParent`(v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getParent:()Lorg/simpleframework/xml/stream/OutputNode;` @kind interface;
  #L43e8d6.  v0:= temp @kind object;
  #L43e8d8.  call temp:= `isCommitted`(v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.isCommitted:()Z` @kind interface;
  #L43e8de.  v1:= temp;
  #L43e8e0.  if v1 != 0 then goto L43e8ea;
  #L43e8e4.  call `remove`(v3) @signature `Lorg/simpleframework/xml/stream/OutputNode;.remove:()V` @kind interface;
  #L43e8ea.  call `write`(v2, v0, v4) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/util/Collection;)V` @kind virtual;
  #L43e8f0.  return @kind void;
}
procedure `void` `write`(`org.simpleframework.xml.core.CompositeInlineList` v4 @kind this, `org.simpleframework.xml.stream.OutputNode` v5 @kind object, `java.util.Collection` v6 @kind object) @signature `Lorg/simpleframework/xml/core/CompositeInlineList;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/util/Collection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L43e904.  call temp:= `iterator`(v6) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L43e90a.  v6:= temp @kind object;
  #L43e90c.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L43e912.  v0:= temp;
  #L43e914.  if v0 == 0 then goto L43e980;
  #L43e918.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L43e91e.  v0:= temp @kind object;
  #L43e920.  if v0 == 0 then goto L43e90c;
  #L43e924.  v1:= v4.`org.simpleframework.xml.core.CompositeInlineList.d` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L43e928.  call temp:= `getType`(v1) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L43e92e.  v1:= temp @kind object;
  #L43e930.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L43e936.  v2:= temp @kind object;
  #L43e938.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L43e93e.  v3:= temp;
  #L43e940.  if v3 == 0 then goto L43e954;
  #L43e944.  v2:= v4.`org.simpleframework.xml.core.CompositeInlineList.b` @type ^`org.simpleframework.xml.core.Traverser` @kind object;
  #L43e948.  v3:= v4.`org.simpleframework.xml.core.CompositeInlineList.c` @type ^`java.lang.String` @kind object;
  #L43e94c.  call `write`(v2, v5, v0, v1, v3) @signature `Lorg/simpleframework/xml/core/Traverser;.write:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)V` @kind virtual;
  #L43e952.  goto L43e90c;
  #L43e954.  v5:= new `org.simpleframework.xml.core.PersistenceException`;
  #L43e958.  v6:= 3I;
  #L43e95a.  v6:= new `java.lang.Object`[v6];
  #L43e95e.  v0:= 0I;
  #L43e960.  v6[v0]:= v2 @kind object;
  #L43e964.  v0:= 1I;
  #L43e966.  v6[v0]:= v1 @kind object;
  #L43e96a.  v0:= v4.`org.simpleframework.xml.core.CompositeInlineList.e` @type ^`org.simpleframework.xml.strategy.Type` @kind object;
  #L43e96e.  v1:= 2I;
  #L43e970.  v6[v1]:= v0 @kind object;
  #L43e974.  v0:= "Entry %s does not match %s for %s" @kind object;
  #L43e978.  call `<init>`(v5, v0, v6) @signature `Lorg/simpleframework/xml/core/PersistenceException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L43e97e.  throw v5;
  #L43e980.  return @kind void;
}
