record `org.simpleframework.xml.core.ClassScanner` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.core.NamespaceDecorator` `org.simpleframework.xml.core.ClassScanner.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.ConstructorScanner` `org.simpleframework.xml.core.ClassScanner.b` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.ClassScanner.c` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.ClassScanner.d` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.ClassScanner.e` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.ClassScanner.f` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.ClassScanner.g` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Function` `org.simpleframework.xml.core.ClassScanner.h` @AccessFlag PRIVATE;
  `org.simpleframework.xml.core.Support` `org.simpleframework.xml.core.ClassScanner.i` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Root` `org.simpleframework.xml.core.ClassScanner.j` @AccessFlag PRIVATE;
  `org.simpleframework.xml.Order` `org.simpleframework.xml.core.ClassScanner.k` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object, `org.simpleframework.xml.core.Support` v3 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L43d9d0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43d9d6.  v0:= new `org.simpleframework.xml.core.ConstructorScanner`;
  #L43d9da.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.<init>:(Lorg/simpleframework/xml/core/Detail;Lorg/simpleframework/xml/core/Support;)V` @kind direct;
  #L43d9e0.  v1.`org.simpleframework.xml.core.ClassScanner.b` @type ^`org.simpleframework.xml.core.ConstructorScanner` := v0 @kind object;
  #L43d9e4.  v0:= new `org.simpleframework.xml.core.NamespaceDecorator`;
  #L43d9e8.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.<init>:()V` @kind direct;
  #L43d9ee.  v1.`org.simpleframework.xml.core.ClassScanner.a` @type ^`org.simpleframework.xml.core.NamespaceDecorator` := v0 @kind object;
  #L43d9f2.  v1.`org.simpleframework.xml.core.ClassScanner.i` @type ^`org.simpleframework.xml.core.Support` := v3 @kind object;
  #L43d9f6.  call `m`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.m:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L43d9fc.  return @kind void;
}
procedure `void` `a`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.a:(Ljava/lang/reflect/Method;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43da10.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.c` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L43da14.  if v0 != 0 then goto L43da24;
  #L43da18.  call temp:= `e`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.e:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @kind direct;
  #L43da1e.  v2:= temp @kind object;
  #L43da20.  v1.`org.simpleframework.xml.core.ClassScanner.c` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L43da24.  return @kind void;
}
procedure `void` `b`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.b:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43da38.  call temp:= `getNamespace`(v2) @signature `Lorg/simpleframework/xml/core/Detail;.getNamespace:()Lorg/simpleframework/xml/Namespace;` @kind interface;
  #L43da3e.  v2:= temp @kind object;
  #L43da40.  if v2 == 0 then goto L43da4e;
  #L43da44.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.a` @type ^`org.simpleframework.xml.core.NamespaceDecorator` @kind object;
  #L43da48.  call `set`(v0, v2) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.set:(Lorg/simpleframework/xml/Namespace;)V` @kind virtual;
  #L43da4e.  return @kind void;
}
procedure `void` `c`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.c:(Ljava/lang/reflect/Method;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43da60.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.f` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L43da64.  if v0 != 0 then goto L43da74;
  #L43da68.  call temp:= `e`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.e:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @kind direct;
  #L43da6e.  v2:= temp @kind object;
  #L43da70.  v1.`org.simpleframework.xml.core.ClassScanner.f` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L43da74.  return @kind void;
}
procedure `void` `d`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.d:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43da88.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.j` @type ^`org.simpleframework.xml.Root` @kind object;
  #L43da8c.  if v0 != 0 then goto L43da9c;
  #L43da90.  call temp:= `getRoot`(v2) @signature `Lorg/simpleframework/xml/core/Detail;.getRoot:()Lorg/simpleframework/xml/Root;` @kind interface;
  #L43da96.  v0:= temp @kind object;
  #L43da98.  v1.`org.simpleframework.xml.core.ClassScanner.j` @type ^`org.simpleframework.xml.Root` := v0 @kind object;
  #L43da9c.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.k` @type ^`org.simpleframework.xml.Order` @kind object;
  #L43daa0.  if v0 != 0 then goto L43dab0;
  #L43daa4.  call temp:= `getOrder`(v2) @signature `Lorg/simpleframework/xml/core/Detail;.getOrder:()Lorg/simpleframework/xml/Order;` @kind interface;
  #L43daaa.  v2:= temp @kind object;
  #L43daac.  v1.`org.simpleframework.xml.core.ClassScanner.k` @type ^`org.simpleframework.xml.Order` := v2 @kind object;
  #L43dab0.  return @kind void;
}
procedure `org.simpleframework.xml.core.Function` `e`(`org.simpleframework.xml.core.ClassScanner` v2 @kind this, `java.lang.reflect.Method` v3 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.e:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L43d8f8.  call temp:= `f`(v2, v3) @signature `Lorg/simpleframework/xml/core/ClassScanner;.f:(Ljava/lang/reflect/Method;)Z` @kind direct;
  #L43d8fe.  v0:= temp;
  #L43d900.  call temp:= `isAccessible`(v3) @signature `Ljava/lang/reflect/Method;.isAccessible:()Z` @kind virtual;
  #L43d906.  v1:= temp;
  #L43d908.  if v1 != 0 then goto L43d914;
  #L43d90c.  v1:= 1I;
  #L43d90e.  call `setAccessible`(v3, v1) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L43d914.  v1:= new `org.simpleframework.xml.core.Function`;
  #L43d918.  call `<init>`(v1, v3, v0) @signature `Lorg/simpleframework/xml/core/Function;.<init>:(Ljava/lang/reflect/Method;Z)V` @kind direct;
  #L43d91e.  return v1 @kind object;
}
procedure `boolean` `f`(`org.simpleframework.xml.core.ClassScanner` v3 @kind this, `java.lang.reflect.Method` v4 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.f:(Ljava/lang/reflect/Method;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L43d828.  call temp:= `getParameterTypes`(v4) @signature `Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L43d82e.  v4:= temp @kind object;
  #L43d830.  v0:= length @variable v4;
  #L43d832.  v1:= 0I;
  #L43d834.  v2:= 1I;
  #L43d836.  if v0 != v2 then goto L43d84c;
  #L43d83a.  v4:= v4[v1] @kind object;
  #L43d83e.  v0:= constclass @type ^`java.util.Map` @kind object;
  #L43d842.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L43d848.  v4:= temp;
  #L43d84a.  return v4;
  #L43d84c.  return v1;
}
procedure `void` `g`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `org.simpleframework.xml.core.Detail` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.g:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43dac4.  call temp:= `getMethods`(v2) @signature `Lorg/simpleframework/xml/core/Detail;.getMethods:()Ljava/util/List;` @kind interface;
  #L43daca.  v2:= temp @kind object;
  #L43dacc.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L43dad2.  v2:= temp @kind object;
  #L43dad4.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L43dada.  v0:= temp;
  #L43dadc.  if v0 == 0 then goto L43daf4;
  #L43dae0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L43dae6.  v0:= temp @kind object;
  #L43dae8.  v0:= (`org.simpleframework.xml.core.MethodDetail`) v0 @kind object;
  #L43daec.  call `h`(v1, v0) @signature `Lorg/simpleframework/xml/core/ClassScanner;.h:(Lorg/simpleframework/xml/core/MethodDetail;)V` @kind direct;
  #L43daf2.  goto L43dad4;
  #L43daf4.  return @kind void;
}
procedure `void` `h`(`org.simpleframework.xml.core.ClassScanner` v5 @kind this, `org.simpleframework.xml.core.MethodDetail` v6 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.h:(Lorg/simpleframework/xml/core/MethodDetail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L43db08.  call temp:= `getAnnotations`(v6) @signature `Lorg/simpleframework/xml/core/MethodDetail;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L43db0e.  v0:= temp @kind object;
  #L43db10.  call temp:= `getMethod`(v6) @signature `Lorg/simpleframework/xml/core/MethodDetail;.getMethod:()Ljava/lang/reflect/Method;` @kind virtual;
  #L43db16.  v6:= temp @kind object;
  #L43db18.  v1:= length @variable v0;
  #L43db1a.  v2:= 0I;
  #L43db1c.  if v2 >= v1 then goto L43db7e;
  #L43db20.  v3:= v0[v2] @kind object;
  #L43db24.  v4:= instanceof @variable v3 @type ^`org.simpleframework.xml.core.Commit` @kind boolean;
  #L43db28.  if v4 == 0 then goto L43db32;
  #L43db2c.  call `a`(v5, v6) @signature `Lorg/simpleframework/xml/core/ClassScanner;.a:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L43db32.  v4:= instanceof @variable v3 @type ^`org.simpleframework.xml.core.Validate` @kind boolean;
  #L43db36.  if v4 == 0 then goto L43db40;
  #L43db3a.  call `n`(v5, v6) @signature `Lorg/simpleframework/xml/core/ClassScanner;.n:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L43db40.  v4:= instanceof @variable v3 @type ^`org.simpleframework.xml.core.Persist` @kind boolean;
  #L43db44.  if v4 == 0 then goto L43db4e;
  #L43db48.  call `j`(v5, v6) @signature `Lorg/simpleframework/xml/core/ClassScanner;.j:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L43db4e.  v4:= instanceof @variable v3 @type ^`org.simpleframework.xml.core.Complete` @kind boolean;
  #L43db52.  if v4 == 0 then goto L43db5c;
  #L43db56.  call `c`(v5, v6) @signature `Lorg/simpleframework/xml/core/ClassScanner;.c:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L43db5c.  v4:= instanceof @variable v3 @type ^`org.simpleframework.xml.core.Replace` @kind boolean;
  #L43db60.  if v4 == 0 then goto L43db6a;
  #L43db64.  call `k`(v5, v6) @signature `Lorg/simpleframework/xml/core/ClassScanner;.k:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L43db6a.  v3:= instanceof @variable v3 @type ^`org.simpleframework.xml.core.Resolve` @kind boolean;
  #L43db6e.  if v3 == 0 then goto L43db78;
  #L43db72.  call `l`(v5, v6) @signature `Lorg/simpleframework/xml/core/ClassScanner;.l:(Ljava/lang/reflect/Method;)V` @kind direct;
  #L43db78.  v2:= v2 + 1;
  #L43db7c.  goto L43db1c;
  #L43db7e.  return @kind void;
}
procedure `void` `i`(`org.simpleframework.xml.core.ClassScanner` v4 @kind this, `org.simpleframework.xml.core.Detail` v5 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.i:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L43db90.  call temp:= `getNamespaceList`(v5) @signature `Lorg/simpleframework/xml/core/Detail;.getNamespaceList:()Lorg/simpleframework/xml/NamespaceList;` @kind interface;
  #L43db96.  v0:= temp @kind object;
  #L43db98.  call temp:= `getNamespace`(v5) @signature `Lorg/simpleframework/xml/core/Detail;.getNamespace:()Lorg/simpleframework/xml/Namespace;` @kind interface;
  #L43db9e.  v5:= temp @kind object;
  #L43dba0.  if v5 == 0 then goto L43dbae;
  #L43dba4.  v1:= v4.`org.simpleframework.xml.core.ClassScanner.a` @type ^`org.simpleframework.xml.core.NamespaceDecorator` @kind object;
  #L43dba8.  call `add`(v1, v5) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.add:(Lorg/simpleframework/xml/Namespace;)V` @kind virtual;
  #L43dbae.  if v0 == 0 then goto L43dbd6;
  #L43dbb2.  call temp:= `value`(v0) @signature `Lorg/simpleframework/xml/NamespaceList;.value:()[Lorg/simpleframework/xml/Namespace;` @kind interface;
  #L43dbb8.  v5:= temp @kind object;
  #L43dbba.  v0:= length @variable v5;
  #L43dbbc.  v1:= 0I;
  #L43dbbe.  if v1 >= v0 then goto L43dbd6;
  #L43dbc2.  v2:= v5[v1] @kind object;
  #L43dbc6.  v3:= v4.`org.simpleframework.xml.core.ClassScanner.a` @type ^`org.simpleframework.xml.core.NamespaceDecorator` @kind object;
  #L43dbca.  call `add`(v3, v2) @signature `Lorg/simpleframework/xml/core/NamespaceDecorator;.add:(Lorg/simpleframework/xml/Namespace;)V` @kind virtual;
  #L43dbd0.  v1:= v1 + 1;
  #L43dbd4.  goto L43dbbe;
  #L43dbd6.  return @kind void;
}
procedure `void` `j`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.j:(Ljava/lang/reflect/Method;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43dbe8.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.e` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L43dbec.  if v0 != 0 then goto L43dbfc;
  #L43dbf0.  call temp:= `e`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.e:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @kind direct;
  #L43dbf6.  v2:= temp @kind object;
  #L43dbf8.  v1.`org.simpleframework.xml.core.ClassScanner.e` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L43dbfc.  return @kind void;
}
procedure `void` `k`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.k:(Ljava/lang/reflect/Method;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43dc10.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.g` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L43dc14.  if v0 != 0 then goto L43dc24;
  #L43dc18.  call temp:= `e`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.e:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @kind direct;
  #L43dc1e.  v2:= temp @kind object;
  #L43dc20.  v1.`org.simpleframework.xml.core.ClassScanner.g` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L43dc24.  return @kind void;
}
procedure `void` `l`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.l:(Ljava/lang/reflect/Method;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43dc38.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.h` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L43dc3c.  if v0 != 0 then goto L43dc4c;
  #L43dc40.  call temp:= `e`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.e:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @kind direct;
  #L43dc46.  v2:= temp @kind object;
  #L43dc48.  v1.`org.simpleframework.xml.core.ClassScanner.h` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L43dc4c.  return @kind void;
}
procedure `void` `m`(`org.simpleframework.xml.core.ClassScanner` v3 @kind this, `org.simpleframework.xml.core.Detail` v4 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.m:(Lorg/simpleframework/xml/core/Detail;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L43dc60.  call temp:= `getOverride`(v4) @signature `Lorg/simpleframework/xml/core/Detail;.getOverride:()Lorg/simpleframework/xml/DefaultType;` @kind interface;
  #L43dc66.  v0:= temp @kind object;
  #L43dc68.  call temp:= `getType`(v4) @signature `Lorg/simpleframework/xml/core/Detail;.getType:()Ljava/lang/Class;` @kind interface;
  #L43dc6e.  v1:= temp @kind object;
  #L43dc70.  if v1 == 0 then goto L43dc9c;
  #L43dc74.  v2:= v3.`org.simpleframework.xml.core.ClassScanner.i` @type ^`org.simpleframework.xml.core.Support` @kind object;
  #L43dc78.  call temp:= `getDetail`(v2, v1, v0) @signature `Lorg/simpleframework/xml/core/Support;.getDetail:(Ljava/lang/Class;Lorg/simpleframework/xml/DefaultType;)Lorg/simpleframework/xml/core/Detail;` @kind virtual;
  #L43dc7e.  v1:= temp @kind object;
  #L43dc80.  call `i`(v3, v1) @signature `Lorg/simpleframework/xml/core/ClassScanner;.i:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L43dc86.  call `g`(v3, v1) @signature `Lorg/simpleframework/xml/core/ClassScanner;.g:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L43dc8c.  call `d`(v3, v1) @signature `Lorg/simpleframework/xml/core/ClassScanner;.d:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L43dc92.  call temp:= `getSuper`(v1) @signature `Lorg/simpleframework/xml/core/Detail;.getSuper:()Ljava/lang/Class;` @kind interface;
  #L43dc98.  v1:= temp @kind object;
  #L43dc9a.  goto L43dc70;
  #L43dc9c.  call `b`(v3, v4) @signature `Lorg/simpleframework/xml/core/ClassScanner;.b:(Lorg/simpleframework/xml/core/Detail;)V` @kind direct;
  #L43dca2.  return @kind void;
}
procedure `void` `n`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this, `java.lang.reflect.Method` v2 @kind object) @signature `Lorg/simpleframework/xml/core/ClassScanner;.n:(Ljava/lang/reflect/Method;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L43dcb4.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.d` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L43dcb8.  if v0 != 0 then goto L43dcc8;
  #L43dcbc.  call temp:= `e`(v1, v2) @signature `Lorg/simpleframework/xml/core/ClassScanner;.e:(Ljava/lang/reflect/Method;)Lorg/simpleframework/xml/core/Function;` @kind direct;
  #L43dcc2.  v2:= temp @kind object;
  #L43dcc4.  v1.`org.simpleframework.xml.core.ClassScanner.d` @type ^`org.simpleframework.xml.core.Function` := v2 @kind object;
  #L43dcc8.  return @kind void;
}
procedure `org.simpleframework.xml.core.Function` `getCommit`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getCommit:()Lorg/simpleframework/xml/core/Function;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d8c8.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.c` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L43d8cc.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Function` `getComplete`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getComplete:()Lorg/simpleframework/xml/core/Function;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d8e0.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.f` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L43d8e4.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Decorator` `getDecorator`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getDecorator:()Lorg/simpleframework/xml/core/Decorator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d8b0.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.a` @type ^`org.simpleframework.xml.core.NamespaceDecorator` @kind object;
  #L43d8b4.  return v0 @kind object;
}
procedure `org.simpleframework.xml.Order` `getOrder`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getOrder:()Lorg/simpleframework/xml/Order;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d880.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.k` @type ^`org.simpleframework.xml.Order` @kind object;
  #L43d884.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.ParameterMap` `getParameters`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getParameters:()Lorg/simpleframework/xml/core/ParameterMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d990.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.b` @type ^`org.simpleframework.xml.core.ConstructorScanner` @kind object;
  #L43d994.  call temp:= `getParameters`(v0) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.getParameters:()Lorg/simpleframework/xml/core/ParameterMap;` @kind virtual;
  #L43d99a.  v0:= temp @kind object;
  #L43d99c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Function` `getPersist`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getPersist:()Lorg/simpleframework/xml/core/Function;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d930.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.e` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L43d934.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Function` `getReplace`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getReplace:()Lorg/simpleframework/xml/core/Function;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d948.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.g` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L43d94c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Function` `getResolve`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getResolve:()Lorg/simpleframework/xml/core/Function;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d960.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.h` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L43d964.  return v0 @kind object;
}
procedure `org.simpleframework.xml.Root` `getRoot`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getRoot:()Lorg/simpleframework/xml/Root;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d898.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.j` @type ^`org.simpleframework.xml.Root` @kind object;
  #L43d89c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Signature` `getSignature`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getSignature:()Lorg/simpleframework/xml/core/Signature;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d9b0.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.b` @type ^`org.simpleframework.xml.core.ConstructorScanner` @kind object;
  #L43d9b4.  call temp:= `getSignature`(v0) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.getSignature:()Lorg/simpleframework/xml/core/Signature;` @kind virtual;
  #L43d9ba.  v0:= temp @kind object;
  #L43d9bc.  return v0 @kind object;
}
procedure `java.util.List` `getSignatures`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getSignatures:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d860.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.b` @type ^`org.simpleframework.xml.core.ConstructorScanner` @kind object;
  #L43d864.  call temp:= `getSignatures`(v0) @signature `Lorg/simpleframework/xml/core/ConstructorScanner;.getSignatures:()Ljava/util/List;` @kind virtual;
  #L43d86a.  v0:= temp @kind object;
  #L43d86c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.core.Function` `getValidate`(`org.simpleframework.xml.core.ClassScanner` v1 @kind this) @signature `Lorg/simpleframework/xml/core/ClassScanner;.getValidate:()Lorg/simpleframework/xml/core/Function;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43d978.  v0:= v1.`org.simpleframework.xml.core.ClassScanner.d` @type ^`org.simpleframework.xml.core.Function` @kind object;
  #L43d97c.  return v0 @kind object;
}
