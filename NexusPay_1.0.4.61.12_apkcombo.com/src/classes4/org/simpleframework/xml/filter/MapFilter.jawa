record `org.simpleframework.xml.filter.MapFilter` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.filter.Filter` @kind interface {
  `org.simpleframework.xml.filter.Filter` `org.simpleframework.xml.filter.MapFilter.a` @AccessFlag PRIVATE;
  `java.util.Map` `org.simpleframework.xml.filter.MapFilter.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.filter.MapFilter` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lorg/simpleframework/xml/filter/MapFilter;.<init>:(Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4513d8.  v0:= 0I;
  #L4513da.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/filter/MapFilter;.<init>:(Ljava/util/Map;Lorg/simpleframework/xml/filter/Filter;)V` @kind direct;
  #L4513e0.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.filter.MapFilter` v0 @kind this, `java.util.Map` v1 @kind object, `org.simpleframework.xml.filter.Filter` v2 @kind object) @signature `Lorg/simpleframework/xml/filter/MapFilter;.<init>:(Ljava/util/Map;Lorg/simpleframework/xml/filter/Filter;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4513f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4513fa.  v0.`org.simpleframework.xml.filter.MapFilter.a` @type ^`org.simpleframework.xml.filter.Filter` := v2 @kind object;
  #L4513fe.  v0.`org.simpleframework.xml.filter.MapFilter.b` @type ^`java.util.Map` := v1 @kind object;
  #L451402.  return @kind void;
}
procedure `java.lang.String` `replace`(`org.simpleframework.xml.filter.MapFilter` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/filter/MapFilter;.replace:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L451390.  v0:= v2.`org.simpleframework.xml.filter.MapFilter.b` @type ^`java.util.Map` @kind object;
  #L451394.  v1:= 0I;
  #L451396.  if v0 == 0 then goto L4513a4;
  #L45139a.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4513a0.  v0:= temp @kind object;
  #L4513a2.  goto L4513a6;
  #L4513a4.  v0:= v1 @kind object;
  #L4513a6.  if v0 == 0 then goto L4513b4;
  #L4513aa.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L4513b0.  v3:= temp @kind object;
  #L4513b2.  return v3 @kind object;
  #L4513b4.  v0:= v2.`org.simpleframework.xml.filter.MapFilter.a` @type ^`org.simpleframework.xml.filter.Filter` @kind object;
  #L4513b8.  if v0 == 0 then goto L4513c6;
  #L4513bc.  call temp:= `replace`(v0, v3) @signature `Lorg/simpleframework/xml/filter/Filter;.replace:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L4513c2.  v3:= temp @kind object;
  #L4513c4.  return v3 @kind object;
  #L4513c6.  return v1 @kind object;
}
