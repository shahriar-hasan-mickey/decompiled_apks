record `org.simpleframework.xml.transform.LocaleTransform` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.transform.Transform` @kind interface {
  `java.util.regex.Pattern` `org.simpleframework.xml.transform.LocaleTransform.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.transform.LocaleTransform` v1 @kind this) @signature `Lorg/simpleframework/xml/transform/LocaleTransform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L457a44.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L457a4a.  v0:= "_" @kind object;
  #L457a4e.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L457a54.  v0:= temp @kind object;
  #L457a56.  v1.`org.simpleframework.xml.transform.LocaleTransform.a` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L457a5a.  return @kind void;
}
procedure `java.util.Locale` `a`(`org.simpleframework.xml.transform.LocaleTransform` v4 @kind this, `java.lang.String`[] v5 @kind object) @signature `Lorg/simpleframework/xml/transform/LocaleTransform;.a:([Ljava/lang/String;)Ljava/util/Locale;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4579ec.  v0:= "" @kind object;
  #L4579f0.  temp:= new `java.lang.String`[v0, v0, v0];
  #L4579f6.  v0:= temp @kind object;
  #L4579f8.  v1:= 0I;
  #L4579fa.  v2:= 0I;
  #L4579fc.  v3:= 3I;
  #L4579fe.  if v2 >= v3 then goto L457a16;
  #L457a02.  v3:= length @variable v5;
  #L457a04.  if v2 >= v3 then goto L457a10;
  #L457a08.  v3:= v5[v2] @kind object;
  #L457a0c.  v0[v2]:= v3 @kind object;
  #L457a10.  v2:= v2 + 1;
  #L457a14.  goto L4579fc;
  #L457a16.  v5:= new `java.util.Locale`;
  #L457a1a.  v1:= v0[v1] @kind object;
  #L457a1e.  v2:= 1I;
  #L457a20.  v2:= v0[v2] @kind object;
  #L457a24.  v3:= 2I;
  #L457a26.  v0:= v0[v3] @kind object;
  #L457a2a.  call `<init>`(v5, v1, v2, v0) @signature `Ljava/util/Locale;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L457a30.  return v5 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.transform.LocaleTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/LocaleTransform;.read:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L45794c.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/transform/LocaleTransform;.read:(Ljava/lang/String;)Ljava/util/Locale;` @kind virtual;
  #L457952.  v1:= temp @kind object;
  #L457954.  return v1 @kind object;
}
procedure `java.util.Locale` `read`(`org.simpleframework.xml.transform.LocaleTransform` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/transform/LocaleTransform;.read:(Ljava/lang/String;)Ljava/util/Locale;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4579a4.  v0:= v3.`org.simpleframework.xml.transform.LocaleTransform.a` @type ^`java.util.regex.Pattern` @kind object;
  #L4579a8.  call temp:= `split`(v0, v4) @signature `Ljava/util/regex/Pattern;.split:(Ljava/lang/CharSequence;)[Ljava/lang/String;` @kind virtual;
  #L4579ae.  v0:= temp @kind object;
  #L4579b0.  v1:= length @variable v0;
  #L4579b2.  v2:= 1I;
  #L4579b4.  if v1 < v2 then goto L4579c2;
  #L4579b8.  call temp:= `a`(v3, v0) @signature `Lorg/simpleframework/xml/transform/LocaleTransform;.a:([Ljava/lang/String;)Ljava/util/Locale;` @kind direct;
  #L4579be.  v4:= temp @kind object;
  #L4579c0.  return v4 @kind object;
  #L4579c2.  v0:= new `org.simpleframework.xml.transform.InvalidFormatException`;
  #L4579c6.  v1:= new `java.lang.Object`[v2];
  #L4579ca.  v2:= 0I;
  #L4579cc.  v1[v2]:= v4 @kind object;
  #L4579d0.  v4:= "Invalid locale %s" @kind object;
  #L4579d4.  call `<init>`(v0, v4, v1) @signature `Lorg/simpleframework/xml/transform/InvalidFormatException;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L4579da.  throw v0;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.LocaleTransform` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/LocaleTransform;.write:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L457968.  v1:= (`java.util.Locale`) v1 @kind object;
  #L45796c.  call temp:= `write`(v0, v1) @signature `Lorg/simpleframework/xml/transform/LocaleTransform;.write:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L457972.  v1:= temp @kind object;
  #L457974.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.LocaleTransform` v0 @kind this, `java.util.Locale` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/LocaleTransform;.write:(Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L457988.  call temp:= `toString`(v1) @signature `Ljava/util/Locale;.toString:()Ljava/lang/String;` @kind virtual;
  #L45798e.  v1:= temp @kind object;
  #L457990.  return v1 @kind object;
}
