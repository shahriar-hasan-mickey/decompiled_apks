record `org.simpleframework.xml.transform.FloatTransform` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.transform.Transform` @kind interface {
}
procedure `void` `<init>`(`org.simpleframework.xml.transform.FloatTransform` v0 @kind this) @signature `Lorg/simpleframework/xml/transform/FloatTransform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L45775c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L457762.  return @kind void;
}
procedure `java.lang.Float` `read`(`org.simpleframework.xml.transform.FloatTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/FloatTransform;.read:(Ljava/lang/String;)Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;

  #L4576e8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(Ljava/lang/String;)Ljava/lang/Float;` @kind static;
  #L4576ee.  v1:= temp @kind object;
  #L4576f0.  return v1 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.transform.FloatTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/FloatTransform;.read:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L457704.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/transform/FloatTransform;.read:(Ljava/lang/String;)Ljava/lang/Float;` @kind virtual;
  #L45770a.  v1:= temp @kind object;
  #L45770c.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.FloatTransform` v0 @kind this, `java.lang.Float` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/FloatTransform;.write:(Ljava/lang/Float;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L457720.  call temp:= `toString`(v1) @signature `Ljava/lang/Float;.toString:()Ljava/lang/String;` @kind virtual;
  #L457726.  v1:= temp @kind object;
  #L457728.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.FloatTransform` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/FloatTransform;.write:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L45773c.  v1:= (`java.lang.Float`) v1 @kind object;
  #L457740.  call temp:= `write`(v0, v1) @signature `Lorg/simpleframework/xml/transform/FloatTransform;.write:(Ljava/lang/Float;)Ljava/lang/String;` @kind virtual;
  #L457746.  v1:= temp @kind object;
  #L457748.  return v1 @kind object;
}
