record `org.simpleframework.xml.transform.ByteTransform` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.transform.Transform` @kind interface {
}
procedure `void` `<init>`(`org.simpleframework.xml.transform.ByteTransform` v0 @kind this) @signature `Lorg/simpleframework/xml/transform/ByteTransform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L456c70.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L456c76.  return @kind void;
}
procedure `java.lang.Byte` `read`(`org.simpleframework.xml.transform.ByteTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/ByteTransform;.read:(Ljava/lang/String;)Ljava/lang/Byte;` @AccessFlag PUBLIC {
    temp;

  #L456bfc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Byte;.valueOf:(Ljava/lang/String;)Ljava/lang/Byte;` @kind static;
  #L456c02.  v1:= temp @kind object;
  #L456c04.  return v1 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.transform.ByteTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/ByteTransform;.read:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L456c18.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/transform/ByteTransform;.read:(Ljava/lang/String;)Ljava/lang/Byte;` @kind virtual;
  #L456c1e.  v1:= temp @kind object;
  #L456c20.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.ByteTransform` v0 @kind this, `java.lang.Byte` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/ByteTransform;.write:(Ljava/lang/Byte;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L456c34.  call temp:= `toString`(v1) @signature `Ljava/lang/Byte;.toString:()Ljava/lang/String;` @kind virtual;
  #L456c3a.  v1:= temp @kind object;
  #L456c3c.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.ByteTransform` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/ByteTransform;.write:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L456c50.  v1:= (`java.lang.Byte`) v1 @kind object;
  #L456c54.  call temp:= `write`(v0, v1) @signature `Lorg/simpleframework/xml/transform/ByteTransform;.write:(Ljava/lang/Byte;)Ljava/lang/String;` @kind virtual;
  #L456c5a.  v1:= temp @kind object;
  #L456c5c.  return v1 @kind object;
}
