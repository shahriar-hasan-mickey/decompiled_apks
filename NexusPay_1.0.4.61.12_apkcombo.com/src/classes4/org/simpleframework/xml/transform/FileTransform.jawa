record `org.simpleframework.xml.transform.FileTransform` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.transform.Transform` @kind interface {
}
procedure `void` `<init>`(`org.simpleframework.xml.transform.FileTransform` v0 @kind this) @signature `Lorg/simpleframework/xml/transform/FileTransform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4576d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4576d6.  return @kind void;
}
procedure `java.io.File` `read`(`org.simpleframework.xml.transform.FileTransform` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/transform/FileTransform;.read:(Ljava/lang/String;)Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45765c.  v0:= new `java.io.File`;
  #L457660.  call `<init>`(v0, v2) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L457666.  return v0 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.transform.FileTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/FileTransform;.read:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L457678.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/transform/FileTransform;.read:(Ljava/lang/String;)Ljava/io/File;` @kind virtual;
  #L45767e.  v1:= temp @kind object;
  #L457680.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.FileTransform` v0 @kind this, `java.io.File` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/FileTransform;.write:(Ljava/io/File;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L457694.  call temp:= `getPath`(v1) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L45769a.  v1:= temp @kind object;
  #L45769c.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.FileTransform` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/FileTransform;.write:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4576b0.  v1:= (`java.io.File`) v1 @kind object;
  #L4576b4.  call temp:= `write`(v0, v1) @signature `Lorg/simpleframework/xml/transform/FileTransform;.write:(Ljava/io/File;)Ljava/lang/String;` @kind virtual;
  #L4576ba.  v1:= temp @kind object;
  #L4576bc.  return v1 @kind object;
}
