record `org.simpleframework.xml.transform.DateType$DateFormat` @kind class @AccessFlag PUBLIC {
  `java.text.SimpleDateFormat` `org.simpleframework.xml.transform.DateType$DateFormat.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.transform.DateType$DateFormat` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/transform/DateType$DateFormat;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L457270.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L457276.  v0:= new `java.text.SimpleDateFormat`;
  #L45727a.  call `<init>`(v0, v2) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L457280.  v1.`org.simpleframework.xml.transform.DateType$DateFormat.a` @type ^`java.text.SimpleDateFormat` := v0 @kind object;
  #L457284.  return @kind void;
}
procedure `java.util.Date` `getDate`(`org.simpleframework.xml.transform.DateType$DateFormat` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/transform/DateType$DateFormat;.getDate:(Ljava/lang/String;)Ljava/util/Date;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45723c.  @monitorenter v1
  #L45723e.  v0:= v1.`org.simpleframework.xml.transform.DateType$DateFormat.a` @type ^`java.text.SimpleDateFormat` @kind object;
  #L457242.  call temp:= `parse`(v0, v2) @signature `Ljava/text/SimpleDateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #L457248.  v2:= temp @kind object;
  #L45724a.  @monitorexit v1
  #L45724c.  return v2 @kind object;
  #L45724e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L457250.  @monitorexit v1
  #L457252.  throw v2;
  catch `java.lang.Throwable` @[L45723e..L45724a] goto L45724e;
}
procedure `java.lang.String` `getText`(`org.simpleframework.xml.transform.DateType$DateFormat` v1 @kind this, `java.util.Date` v2 @kind object) @signature `Lorg/simpleframework/xml/transform/DateType$DateFormat;.getText:(Ljava/util/Date;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L457208.  @monitorenter v1
  #L45720a.  v0:= v1.`org.simpleframework.xml.transform.DateType$DateFormat.a` @type ^`java.text.SimpleDateFormat` @kind object;
  #L45720e.  call temp:= `format`(v0, v2) @signature `Ljava/text/SimpleDateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L457214.  v2:= temp @kind object;
  #L457216.  @monitorexit v1
  #L457218.  return v2 @kind object;
  #L45721a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L45721c.  @monitorexit v1
  #L45721e.  throw v2;
  catch `java.lang.Throwable` @[L45720a..L457216] goto L45721a;
}
