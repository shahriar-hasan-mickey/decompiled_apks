record `org.simpleframework.xml.transform.ArrayTransform` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.transform.Transform` @kind interface {
  `org.simpleframework.xml.transform.StringArrayTransform` `org.simpleframework.xml.transform.ArrayTransform.a` @AccessFlag PRIVATE_FINAL;
  `org.simpleframework.xml.transform.Transform` `org.simpleframework.xml.transform.ArrayTransform.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `org.simpleframework.xml.transform.ArrayTransform.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.transform.ArrayTransform` v1 @kind this, `org.simpleframework.xml.transform.Transform` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/simpleframework/xml/transform/ArrayTransform;.<init>:(Lorg/simpleframework/xml/transform/Transform;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4568f0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4568f6.  v0:= new `org.simpleframework.xml.transform.StringArrayTransform`;
  #L4568fa.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/transform/StringArrayTransform;.<init>:()V` @kind direct;
  #L456900.  v1.`org.simpleframework.xml.transform.ArrayTransform.a` @type ^`org.simpleframework.xml.transform.StringArrayTransform` := v0 @kind object;
  #L456904.  v1.`org.simpleframework.xml.transform.ArrayTransform.b` @type ^`org.simpleframework.xml.transform.Transform` := v2 @kind object;
  #L456908.  v1.`org.simpleframework.xml.transform.ArrayTransform.c` @type ^`java.lang.Class` := v3 @kind object;
  #L45690c.  return @kind void;
}
procedure `java.lang.Object` `a`(`org.simpleframework.xml.transform.ArrayTransform` v4 @kind this, `java.lang.String`[] v5 @kind object, `int` v6 ) @signature `Lorg/simpleframework/xml/transform/ArrayTransform;.a:([Ljava/lang/String;I)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L45683c.  v0:= v4.`org.simpleframework.xml.transform.ArrayTransform.c` @type ^`java.lang.Class` @kind object;
  #L456840.  call temp:= `newInstance`(v0, v6) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L456846.  v0:= temp @kind object;
  #L456848.  v1:= 0I;
  #L45684a.  if v1 >= v6 then goto L45686e;
  #L45684e.  v2:= v4.`org.simpleframework.xml.transform.ArrayTransform.b` @type ^`org.simpleframework.xml.transform.Transform` @kind object;
  #L456852.  v3:= v5[v1] @kind object;
  #L456856.  call temp:= `read`(v2, v3) @signature `Lorg/simpleframework/xml/transform/Transform;.read:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L45685c.  v2:= temp @kind object;
  #L45685e.  if v2 == 0 then goto L456868;
  #L456862.  call `set`(v0, v1, v2) @signature `Ljava/lang/reflect/Array;.set:(Ljava/lang/Object;ILjava/lang/Object;)V` @kind static;
  #L456868.  v1:= v1 + 1;
  #L45686c.  goto L45684a;
  #L45686e.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`org.simpleframework.xml.transform.ArrayTransform` v4 @kind this, `java.lang.Object` v5 @kind object, `int` v6 ) @signature `Lorg/simpleframework/xml/transform/ArrayTransform;.b:(Ljava/lang/Object;I)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4568a4.  v0:= new `java.lang.String`[v6];
  #L4568a8.  v1:= 0I;
  #L4568aa.  if v1 >= v6 then goto L4568d0;
  #L4568ae.  call temp:= `get`(v5, v1) @signature `Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L4568b4.  v2:= temp @kind object;
  #L4568b6.  if v2 == 0 then goto L4568ca;
  #L4568ba.  v3:= v4.`org.simpleframework.xml.transform.ArrayTransform.b` @type ^`org.simpleframework.xml.transform.Transform` @kind object;
  #L4568be.  call temp:= `write`(v3, v2) @signature `Lorg/simpleframework/xml/transform/Transform;.write:(Ljava/lang/Object;)Ljava/lang/String;` @kind interface;
  #L4568c4.  v2:= temp @kind object;
  #L4568c6.  v0[v1]:= v2 @kind object;
  #L4568ca.  v1:= v1 + 1;
  #L4568ce.  goto L4568aa;
  #L4568d0.  v5:= v4.`org.simpleframework.xml.transform.ArrayTransform.a` @type ^`org.simpleframework.xml.transform.StringArrayTransform` @kind object;
  #L4568d4.  call temp:= `write`(v5, v0) @signature `Lorg/simpleframework/xml/transform/StringArrayTransform;.write:([Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4568da.  v5:= temp @kind object;
  #L4568dc.  return v5 @kind object;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.transform.ArrayTransform` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/transform/ArrayTransform;.read:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456814.  v0:= v1.`org.simpleframework.xml.transform.ArrayTransform.a` @type ^`org.simpleframework.xml.transform.StringArrayTransform` @kind object;
  #L456818.  call temp:= `read`(v0, v2) @signature `Lorg/simpleframework/xml/transform/StringArrayTransform;.read:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L45681e.  v2:= temp @kind object;
  #L456820.  v0:= length @variable v2;
  #L456822.  call temp:= `a`(v1, v2, v0) @signature `Lorg/simpleframework/xml/transform/ArrayTransform;.a:([Ljava/lang/String;I)Ljava/lang/Object;` @kind direct;
  #L456828.  v2:= temp @kind object;
  #L45682a.  return v2 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.ArrayTransform` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/transform/ArrayTransform;.write:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456880.  call temp:= `getLength`(v2) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L456886.  v0:= temp;
  #L456888.  call temp:= `b`(v1, v2, v0) @signature `Lorg/simpleframework/xml/transform/ArrayTransform;.b:(Ljava/lang/Object;I)Ljava/lang/String;` @kind direct;
  #L45688e.  v2:= temp @kind object;
  #L456890.  return v2 @kind object;
}
