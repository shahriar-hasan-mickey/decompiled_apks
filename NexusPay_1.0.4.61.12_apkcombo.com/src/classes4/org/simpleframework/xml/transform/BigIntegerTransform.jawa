record `org.simpleframework.xml.transform.BigIntegerTransform` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.transform.Transform` @kind interface {
}
procedure `void` `<init>`(`org.simpleframework.xml.transform.BigIntegerTransform` v0 @kind this) @signature `Lorg/simpleframework/xml/transform/BigIntegerTransform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L456b58.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L456b5e.  return @kind void;
}
procedure `java.lang.Object` `read`(`org.simpleframework.xml.transform.BigIntegerTransform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/BigIntegerTransform;.read:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L456ae4.  call temp:= `read`(v0, v1) @signature `Lorg/simpleframework/xml/transform/BigIntegerTransform;.read:(Ljava/lang/String;)Ljava/math/BigInteger;` @kind virtual;
  #L456aea.  v1:= temp @kind object;
  #L456aec.  return v1 @kind object;
}
procedure `java.math.BigInteger` `read`(`org.simpleframework.xml.transform.BigIntegerTransform` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/transform/BigIntegerTransform;.read:(Ljava/lang/String;)Ljava/math/BigInteger;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456b3c.  v0:= new `java.math.BigInteger`;
  #L456b40.  call `<init>`(v0, v2) @signature `Ljava/math/BigInteger;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L456b46.  return v0 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.BigIntegerTransform` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/BigIntegerTransform;.write:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L456b00.  v1:= (`java.math.BigInteger`) v1 @kind object;
  #L456b04.  call temp:= `write`(v0, v1) @signature `Lorg/simpleframework/xml/transform/BigIntegerTransform;.write:(Ljava/math/BigInteger;)Ljava/lang/String;` @kind virtual;
  #L456b0a.  v1:= temp @kind object;
  #L456b0c.  return v1 @kind object;
}
procedure `java.lang.String` `write`(`org.simpleframework.xml.transform.BigIntegerTransform` v0 @kind this, `java.math.BigInteger` v1 @kind object) @signature `Lorg/simpleframework/xml/transform/BigIntegerTransform;.write:(Ljava/math/BigInteger;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L456b20.  call temp:= `toString`(v1) @signature `Ljava/math/BigInteger;.toString:()Ljava/lang/String;` @kind virtual;
  #L456b26.  v1:= temp @kind object;
  #L456b28.  return v1 @kind object;
}
