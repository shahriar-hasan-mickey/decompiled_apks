record `org.simpleframework.xml.stream.PrefixResolver` @kind class @AccessFlag PUBLIC extends `java.util.LinkedHashMap` @kind class, `org.simpleframework.xml.stream.NamespaceMap` @kind interface {
  `org.simpleframework.xml.stream.OutputNode` `org.simpleframework.xml.stream.PrefixResolver.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.PrefixResolver` v0 @kind this, `org.simpleframework.xml.stream.OutputNode` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.<init>:(Lorg/simpleframework/xml/stream/OutputNode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L455950.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L455956.  v0.`org.simpleframework.xml.stream.PrefixResolver.a` @type ^`org.simpleframework.xml.stream.OutputNode` := v1 @kind object;
  #L45595a.  return @kind void;
}
procedure `java.lang.String` `b`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.b:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L455870.  v0:= v1.`org.simpleframework.xml.stream.PrefixResolver.a` @type ^`org.simpleframework.xml.stream.OutputNode` @kind object;
  #L455874.  call temp:= `getNamespaces`(v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getNamespaces:()Lorg/simpleframework/xml/stream/NamespaceMap;` @kind interface;
  #L45587a.  v0:= temp @kind object;
  #L45587c.  if v0 == 0 then goto L455896;
  #L455880.  call temp:= `getPrefix`(v0, v2) @signature `Lorg/simpleframework/xml/stream/NamespaceMap;.getPrefix:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L455886.  v2:= temp @kind object;
  #L455888.  call temp:= `containsValue`(v1, v2) @signature `Ljava/util/LinkedHashMap;.containsValue:(Ljava/lang/Object;)Z` @kind virtual;
  #L45588e.  v0:= temp;
  #L455890.  if v0 != 0 then goto L455896;
  #L455894.  return v2 @kind object;
  #L455896.  v2:= 0I;
  #L455898.  return v2 @kind object;
}
procedure `java.lang.String` `c`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.c:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4558ac.  v0:= v1.`org.simpleframework.xml.stream.PrefixResolver.a` @type ^`org.simpleframework.xml.stream.OutputNode` @kind object;
  #L4558b0.  call temp:= `getNamespaces`(v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getNamespaces:()Lorg/simpleframework/xml/stream/NamespaceMap;` @kind interface;
  #L4558b6.  v0:= temp @kind object;
  #L4558b8.  if v0 == 0 then goto L4558c6;
  #L4558bc.  call temp:= `getReference`(v0, v2) @signature `Lorg/simpleframework/xml/stream/NamespaceMap;.getReference:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L4558c2.  v2:= temp @kind object;
  #L4558c4.  return v2 @kind object;
  #L4558c6.  v2:= 0I;
  #L4558c8.  return v2 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4557b4.  v0:= v1.`org.simpleframework.xml.stream.PrefixResolver.a` @type ^`org.simpleframework.xml.stream.OutputNode` @kind object;
  #L4557b8.  call temp:= `getPrefix`(v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.getPrefix:()Ljava/lang/String;` @kind interface;
  #L4557be.  v0:= temp @kind object;
  #L4557c0.  return v0 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.getPrefix:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4557d4.  call temp:= `size`(v1) @signature `Ljava/util/LinkedHashMap;.size:()I` @kind virtual;
  #L4557da.  v0:= temp;
  #L4557dc.  if v0 <= 0 then goto L4557f2;
  #L4557e0.  call temp:= `get`(v1, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4557e6.  v0:= temp @kind object;
  #L4557e8.  v0:= (`java.lang.String`) v0 @kind object;
  #L4557ec.  if v0 == 0 then goto L4557f2;
  #L4557f0.  return v0 @kind object;
  #L4557f2.  call temp:= `b`(v1, v2) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L4557f8.  v2:= temp @kind object;
  #L4557fa.  return v2 @kind object;
}
procedure `java.lang.String` `getReference`(`org.simpleframework.xml.stream.PrefixResolver` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.getReference:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45580c.  call temp:= `containsValue`(v3, v4) @signature `Ljava/util/LinkedHashMap;.containsValue:(Ljava/lang/Object;)Z` @kind virtual;
  #L455812.  v0:= temp;
  #L455814.  if v0 == 0 then goto L455856;
  #L455818.  call temp:= `iterator`(v3) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L45581e.  v0:= temp @kind object;
  #L455820.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L455826.  v1:= temp;
  #L455828.  if v1 == 0 then goto L455856;
  #L45582c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L455832.  v1:= temp @kind object;
  #L455834.  v1:= (`java.lang.String`) v1 @kind object;
  #L455838.  call temp:= `get`(v3, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L45583e.  v2:= temp @kind object;
  #L455840.  v2:= (`java.lang.String`) v2 @kind object;
  #L455844.  if v2 == 0 then goto L455820;
  #L455848.  call temp:= `equals`(v2, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L45584e.  v2:= temp;
  #L455850.  if v2 == 0 then goto L455820;
  #L455854.  return v1 @kind object;
  #L455856.  call temp:= `c`(v3, v4) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L45585c.  v4:= temp @kind object;
  #L45585e.  return v4 @kind object;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L45592c.  call temp:= `keySet`(v1) @signature `Ljava/util/LinkedHashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L455932.  v0:= temp @kind object;
  #L455934.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L45593a.  v0:= temp @kind object;
  #L45593c.  return v0 @kind object;
}
procedure `java.lang.String` `setReference`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.setReference:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4558dc.  v0:= "" @kind object;
  #L4558e0.  call temp:= `setReference`(v1, v2, v0) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.setReference:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4558e6.  v2:= temp @kind object;
  #L4558e8.  return v2 @kind object;
}
procedure `java.lang.String` `setReference`(`org.simpleframework.xml.stream.PrefixResolver` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.setReference:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4558fc.  call temp:= `b`(v1, v2) @signature `Lorg/simpleframework/xml/stream/PrefixResolver;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L455902.  v0:= temp @kind object;
  #L455904.  if v0 == 0 then goto L45590c;
  #L455908.  v2:= 0I;
  #L45590a.  return v2 @kind object;
  #L45590c.  call temp:= `put`(v1, v2, v3) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L455912.  v2:= temp @kind object;
  #L455914.  v2:= (`java.lang.String`) v2 @kind object;
  #L455918.  return v2 @kind object;
}
