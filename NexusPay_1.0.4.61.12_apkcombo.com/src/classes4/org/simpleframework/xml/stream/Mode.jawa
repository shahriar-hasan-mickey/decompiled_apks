record `org.simpleframework.xml.stream.Mode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `org.simpleframework.xml.stream.Mode`[] `@@org.simpleframework.xml.stream.Mode.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `org.simpleframework.xml.stream.Mode` `@@org.simpleframework.xml.stream.Mode.DATA` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `org.simpleframework.xml.stream.Mode` `@@org.simpleframework.xml.stream.Mode.ESCAPE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `org.simpleframework.xml.stream.Mode` `@@org.simpleframework.xml.stream.Mode.INHERIT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lorg/simpleframework/xml/stream/Mode;.<clinit>:()V` @AccessFlag PUBLIC_STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L45402c.  v0:= new `org.simpleframework.xml.stream.Mode`;
  #L454030.  v1:= "DATA" @kind object;
  #L454034.  v2:= 0I;
  #L454036.  call `<init>`(v0, v1, v2) @signature `Lorg/simpleframework/xml/stream/Mode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L45403c.  `@@org.simpleframework.xml.stream.Mode.DATA` @type ^`org.simpleframework.xml.stream.Mode` := v0 @kind object;
  #L454040.  v1:= new `org.simpleframework.xml.stream.Mode`;
  #L454044.  v3:= "ESCAPE" @kind object;
  #L454048.  v4:= 1I;
  #L45404a.  call `<init>`(v1, v3, v4) @signature `Lorg/simpleframework/xml/stream/Mode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L454050.  `@@org.simpleframework.xml.stream.Mode.ESCAPE` @type ^`org.simpleframework.xml.stream.Mode` := v1 @kind object;
  #L454054.  v3:= new `org.simpleframework.xml.stream.Mode`;
  #L454058.  v5:= "INHERIT" @kind object;
  #L45405c.  v6:= 2I;
  #L45405e.  call `<init>`(v3, v5, v6) @signature `Lorg/simpleframework/xml/stream/Mode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L454064.  `@@org.simpleframework.xml.stream.Mode.INHERIT` @type ^`org.simpleframework.xml.stream.Mode` := v3 @kind object;
  #L454068.  v5:= 3I;
  #L45406a.  v5:= new `org.simpleframework.xml.stream.Mode`[v5];
  #L45406e.  v5[v2]:= v0 @kind object;
  #L454072.  v5[v4]:= v1 @kind object;
  #L454076.  v5[v6]:= v3 @kind object;
  #L45407a.  `@@org.simpleframework.xml.stream.Mode.$VALUES` @type ^`org.simpleframework.xml.stream.Mode`[] := v5 @kind object;
  #L45407e.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.Mode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lorg/simpleframework/xml/stream/Mode;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L454090.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L454096.  return @kind void;
}
procedure `org.simpleframework.xml.stream.Mode` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/Mode;.valueOf:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/Mode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L453fe4.  v0:= constclass @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L453fe8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L453fee.  v1:= temp @kind object;
  #L453ff0.  v1:= (`org.simpleframework.xml.stream.Mode`) v1 @kind object;
  #L453ff4.  return v1 @kind object;
}
procedure `org.simpleframework.xml.stream.Mode`[] `values`() @signature `Lorg/simpleframework/xml/stream/Mode;.values:()[Lorg/simpleframework/xml/stream/Mode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L454008.  v0:= `@@org.simpleframework.xml.stream.Mode.$VALUES` @type ^`org.simpleframework.xml.stream.Mode`[] @kind object;
  #L45400c.  call temp:= `clone`(v0) @signature `[Lorg/simpleframework/xml/stream/Mode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L454012.  v0:= temp @kind object;
  #L454014.  v0:= (`org.simpleframework.xml.stream.Mode`[]) v0 @kind object;
  #L454018.  return v0 @kind object;
}
