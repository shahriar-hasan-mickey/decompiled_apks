record `org.simpleframework.xml.stream.DocumentReader` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.stream.EventReader` @kind interface {
  `org.simpleframework.xml.stream.NodeExtractor` `org.simpleframework.xml.stream.DocumentReader.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.NodeStack` `org.simpleframework.xml.stream.DocumentReader.b` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.EventNode` `org.simpleframework.xml.stream.DocumentReader.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.DocumentReader` v1 @kind this, `org.w3c.dom.Document` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.<init>:(Lorg/w3c/dom/Document;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L452904.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45290a.  v0:= new `org.simpleframework.xml.stream.NodeExtractor`;
  #L45290e.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/stream/NodeExtractor;.<init>:(Lorg/w3c/dom/Document;)V` @kind direct;
  #L452914.  v1.`org.simpleframework.xml.stream.DocumentReader.a` @type ^`org.simpleframework.xml.stream.NodeExtractor` := v0 @kind object;
  #L452918.  v0:= new `org.simpleframework.xml.stream.NodeStack`;
  #L45291c.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/stream/NodeStack;.<init>:()V` @kind direct;
  #L452922.  v1.`org.simpleframework.xml.stream.DocumentReader.b` @type ^`org.simpleframework.xml.stream.NodeStack` := v0 @kind object;
  #L452926.  call temp:= `push`(v0, v2) @signature `Lorg/simpleframework/xml/stream/Stack;.push:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L45292c.  return @kind void;
}
procedure `org.simpleframework.xml.stream.DocumentReader$Entry` `a`(`org.simpleframework.xml.stream.DocumentReader` v1 @kind this, `org.w3c.dom.Node` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.a:(Lorg/w3c/dom/Node;)Lorg/simpleframework/xml/stream/DocumentReader$Entry;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L452728.  v0:= new `org.simpleframework.xml.stream.DocumentReader$Entry`;
  #L45272c.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/stream/DocumentReader$Entry;.<init>:(Lorg/w3c/dom/Node;)V` @kind direct;
  #L452732.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.DocumentReader$Start` `b`(`org.simpleframework.xml.stream.DocumentReader` v5 @kind this, `org.simpleframework.xml.stream.DocumentReader$Start` v6 @kind object) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.b:(Lorg/simpleframework/xml/stream/DocumentReader$Start;)Lorg/simpleframework/xml/stream/DocumentReader$Start;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L452744.  call temp:= `getAttributes`(v6) @signature `Lorg/simpleframework/xml/stream/DocumentReader$Start;.getAttributes:()Lorg/w3c/dom/NamedNodeMap;` @kind virtual;
  #L45274a.  v0:= temp @kind object;
  #L45274c.  call temp:= `getLength`(v0) @signature `Lorg/w3c/dom/NamedNodeMap;.getLength:()I` @kind interface;
  #L452752.  v1:= temp;
  #L452754.  v2:= 0I;
  #L452756.  if v2 >= v1 then goto L452782;
  #L45275a.  call temp:= `item`(v0, v2) @signature `Lorg/w3c/dom/NamedNodeMap;.item:(I)Lorg/w3c/dom/Node;` @kind interface;
  #L452760.  v3:= temp @kind object;
  #L452762.  call temp:= `a`(v5, v3) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.a:(Lorg/w3c/dom/Node;)Lorg/simpleframework/xml/stream/DocumentReader$Entry;` @kind direct;
  #L452768.  v3:= temp @kind object;
  #L45276a.  call temp:= `isReserved`(v3) @signature `Lorg/simpleframework/xml/stream/Attribute;.isReserved:()Z` @kind interface;
  #L452770.  v4:= temp;
  #L452772.  if v4 != 0 then goto L45277c;
  #L452776.  call temp:= `add`(v6, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L45277c.  v2:= v2 + 1;
  #L452780.  goto L452756;
  #L452782.  return v6 @kind object;
}
procedure `org.simpleframework.xml.stream.EventNode` `c`(`org.simpleframework.xml.stream.DocumentReader` v2 @kind this, `org.w3c.dom.Node` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.c:(Lorg/w3c/dom/Node;)Lorg/simpleframework/xml/stream/EventNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4527e0.  call temp:= `getNodeType`(v3) @signature `Lorg/w3c/dom/Node;.getNodeType:()S` @kind interface;
  #L4527e6.  v0:= temp;
  #L4527e8.  v1:= 1I;
  #L4527ea.  if v0 != v1 then goto L452802;
  #L4527ee.  v0:= v2.`org.simpleframework.xml.stream.DocumentReader.b` @type ^`org.simpleframework.xml.stream.NodeStack` @kind object;
  #L4527f2.  call temp:= `push`(v0, v3) @signature `Lorg/simpleframework/xml/stream/Stack;.push:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4527f8.  call temp:= `g`(v2, v3) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.g:(Lorg/w3c/dom/Node;)Lorg/simpleframework/xml/stream/DocumentReader$Start;` @kind direct;
  #L4527fe.  v3:= temp @kind object;
  #L452800.  return v3 @kind object;
  #L452802.  call temp:= `h`(v2, v3) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.h:(Lorg/w3c/dom/Node;)Lorg/simpleframework/xml/stream/DocumentReader$Text;` @kind direct;
  #L452808.  v3:= temp @kind object;
  #L45280a.  return v3 @kind object;
}
procedure `org.simpleframework.xml.stream.DocumentReader$End` `d`(`org.simpleframework.xml.stream.DocumentReader` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.d:()Lorg/simpleframework/xml/stream/DocumentReader$End;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L452708.  v0:= new `org.simpleframework.xml.stream.DocumentReader$End`;
  #L45270c.  v1:= 0I;
  #L45270e.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/stream/DocumentReader$End;.<init>:(Lorg/simpleframework/xml/stream/DocumentReader$1;)V` @kind direct;
  #L452714.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.EventNode` `e`(`org.simpleframework.xml.stream.DocumentReader` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.e:()Lorg/simpleframework/xml/stream/EventNode;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L452874.  v0:= v1.`org.simpleframework.xml.stream.DocumentReader.a` @type ^`org.simpleframework.xml.stream.NodeExtractor` @kind object;
  #L452878.  call temp:= `peek`(v0) @signature `Ljava/util/LinkedList;.peek:()Ljava/lang/Object;` @kind virtual;
  #L45287e.  v0:= temp @kind object;
  #L452880.  v0:= (`org.w3c.dom.Node`) v0 @kind object;
  #L452884.  if v0 != 0 then goto L452892;
  #L452888.  call temp:= `d`(v1) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.d:()Lorg/simpleframework/xml/stream/DocumentReader$End;` @kind direct;
  #L45288e.  v0:= temp @kind object;
  #L452890.  return v0 @kind object;
  #L452892.  call temp:= `f`(v1, v0) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.f:(Lorg/w3c/dom/Node;)Lorg/simpleframework/xml/stream/EventNode;` @kind direct;
  #L452898.  v0:= temp @kind object;
  #L45289a.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.EventNode` `f`(`org.simpleframework.xml.stream.DocumentReader` v2 @kind this, `org.w3c.dom.Node` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.f:(Lorg/w3c/dom/Node;)Lorg/simpleframework/xml/stream/EventNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4528ac.  call temp:= `getParentNode`(v3) @signature `Lorg/w3c/dom/Node;.getParentNode:()Lorg/w3c/dom/Node;` @kind interface;
  #L4528b2.  v0:= temp @kind object;
  #L4528b4.  v1:= v2.`org.simpleframework.xml.stream.DocumentReader.b` @type ^`org.simpleframework.xml.stream.NodeStack` @kind object;
  #L4528b8.  call temp:= `top`(v1) @signature `Lorg/simpleframework/xml/stream/Stack;.top:()Ljava/lang/Object;` @kind virtual;
  #L4528be.  v1:= temp @kind object;
  #L4528c0.  v1:= (`org.w3c.dom.Node`) v1 @kind object;
  #L4528c4.  if v0 == v1 then goto L4528e0;
  #L4528c8.  if v1 == 0 then goto L4528d6;
  #L4528cc.  v3:= v2.`org.simpleframework.xml.stream.DocumentReader.b` @type ^`org.simpleframework.xml.stream.NodeStack` @kind object;
  #L4528d0.  call temp:= `pop`(v3) @signature `Lorg/simpleframework/xml/stream/Stack;.pop:()Ljava/lang/Object;` @kind virtual;
  #L4528d6.  call temp:= `d`(v2) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.d:()Lorg/simpleframework/xml/stream/DocumentReader$End;` @kind direct;
  #L4528dc.  v3:= temp @kind object;
  #L4528de.  return v3 @kind object;
  #L4528e0.  v0:= v2.`org.simpleframework.xml.stream.DocumentReader.a` @type ^`org.simpleframework.xml.stream.NodeExtractor` @kind object;
  #L4528e4.  call temp:= `poll`(v0) @signature `Ljava/util/LinkedList;.poll:()Ljava/lang/Object;` @kind virtual;
  #L4528ea.  call temp:= `c`(v2, v3) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.c:(Lorg/w3c/dom/Node;)Lorg/simpleframework/xml/stream/EventNode;` @kind direct;
  #L4528f0.  v3:= temp @kind object;
  #L4528f2.  return v3 @kind object;
}
procedure `org.simpleframework.xml.stream.DocumentReader$Start` `g`(`org.simpleframework.xml.stream.DocumentReader` v1 @kind this, `org.w3c.dom.Node` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.g:(Lorg/w3c/dom/Node;)Lorg/simpleframework/xml/stream/DocumentReader$Start;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L452794.  v0:= new `org.simpleframework.xml.stream.DocumentReader$Start`;
  #L452798.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/stream/DocumentReader$Start;.<init>:(Lorg/w3c/dom/Node;)V` @kind direct;
  #L45279e.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L4527a4.  v2:= temp;
  #L4527a6.  if v2 == 0 then goto L4527b0;
  #L4527aa.  call temp:= `b`(v1, v0) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.b:(Lorg/simpleframework/xml/stream/DocumentReader$Start;)Lorg/simpleframework/xml/stream/DocumentReader$Start;` @kind direct;
  #L4527b0.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.DocumentReader$Text` `h`(`org.simpleframework.xml.stream.DocumentReader` v1 @kind this, `org.w3c.dom.Node` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.h:(Lorg/w3c/dom/Node;)Lorg/simpleframework/xml/stream/DocumentReader$Text;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4527c4.  v0:= new `org.simpleframework.xml.stream.DocumentReader$Text`;
  #L4527c8.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/stream/DocumentReader$Text;.<init>:(Lorg/w3c/dom/Node;)V` @kind direct;
  #L4527ce.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.EventNode` `next`(`org.simpleframework.xml.stream.DocumentReader` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.next:()Lorg/simpleframework/xml/stream/EventNode;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45281c.  v0:= v2.`org.simpleframework.xml.stream.DocumentReader.c` @type ^`org.simpleframework.xml.stream.EventNode` @kind object;
  #L452820.  if v0 != 0 then goto L45282e;
  #L452824.  call temp:= `e`(v2) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.e:()Lorg/simpleframework/xml/stream/EventNode;` @kind direct;
  #L45282a.  v0:= temp @kind object;
  #L45282c.  goto L452834;
  #L45282e.  v1:= 0I;
  #L452830.  v2.`org.simpleframework.xml.stream.DocumentReader.c` @type ^`org.simpleframework.xml.stream.EventNode` := v1 @kind object;
  #L452834.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.EventNode` `peek`(`org.simpleframework.xml.stream.DocumentReader` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.peek:()Lorg/simpleframework/xml/stream/EventNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L452848.  v0:= v1.`org.simpleframework.xml.stream.DocumentReader.c` @type ^`org.simpleframework.xml.stream.EventNode` @kind object;
  #L45284c.  if v0 != 0 then goto L45285c;
  #L452850.  call temp:= `next`(v1) @signature `Lorg/simpleframework/xml/stream/DocumentReader;.next:()Lorg/simpleframework/xml/stream/EventNode;` @kind virtual;
  #L452856.  v0:= temp @kind object;
  #L452858.  v1.`org.simpleframework.xml.stream.DocumentReader.c` @type ^`org.simpleframework.xml.stream.EventNode` := v0 @kind object;
  #L45285c.  v0:= v1.`org.simpleframework.xml.stream.DocumentReader.c` @type ^`org.simpleframework.xml.stream.EventNode` @kind object;
  #L452860.  return v0 @kind object;
}
