record `org.simpleframework.xml.stream.Indenter` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.stream.Indenter$Cache` `org.simpleframework.xml.stream.Indenter.a` @AccessFlag PRIVATE;
  `int` `org.simpleframework.xml.stream.Indenter.b` @AccessFlag PRIVATE;
  `int` `org.simpleframework.xml.stream.Indenter.c` @AccessFlag PRIVATE;
  `int` `org.simpleframework.xml.stream.Indenter.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.Indenter` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/Indenter;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L453854.  v0:= new `org.simpleframework.xml.stream.Format`;
  #L453858.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/stream/Format;.<init>:()V` @kind direct;
  #L45385e.  call `<init>`(v1, v0) @signature `Lorg/simpleframework/xml/stream/Indenter;.<init>:(Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L453864.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.Indenter` v1 @kind this, `org.simpleframework.xml.stream.Format` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/Indenter;.<init>:(Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L453878.  v0:= 16I;
  #L45387c.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/stream/Indenter;.<init>:(Lorg/simpleframework/xml/stream/Format;I)V` @kind direct;
  #L453882.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.Indenter` v0 @kind this, `org.simpleframework.xml.stream.Format` v1 @kind object, `int` v2 ) @signature `Lorg/simpleframework/xml/stream/Indenter;.<init>:(Lorg/simpleframework/xml/stream/Format;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L453894.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45389a.  call temp:= `getIndent`(v1) @signature `Lorg/simpleframework/xml/stream/Format;.getIndent:()I` @kind virtual;
  #L4538a0.  v1:= temp;
  #L4538a2.  v0.`org.simpleframework.xml.stream.Indenter.b` @type ^`int` := v1;
  #L4538a6.  v1:= new `org.simpleframework.xml.stream.Indenter$Cache`;
  #L4538aa.  call `<init>`(v1, v2) @signature `Lorg/simpleframework/xml/stream/Indenter$Cache;.<init>:(I)V` @kind direct;
  #L4538b0.  v0.`org.simpleframework.xml.stream.Indenter.a` @type ^`org.simpleframework.xml.stream.Indenter$Cache` := v1 @kind object;
  #L4538b4.  return @kind void;
}
procedure `java.lang.String` `a`(`org.simpleframework.xml.stream.Indenter` v3 @kind this) @signature `Lorg/simpleframework/xml/stream/Indenter;.a:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L45371c.  v0:= v3.`org.simpleframework.xml.stream.Indenter.c` @type ^`int`;
  #L453720.  v1:= v0 + 1;
  #L453724.  v1:= new `char`[v1];
  #L453728.  if v0 <= 0 then goto L45375a;
  #L45372c.  v0:= 0I;
  #L45372e.  v2:= 10I;
  #L453732.  v1[v0]:= v2 @kind char;
  #L453736.  v0:= 1I;
  #L453738.  v2:= v3.`org.simpleframework.xml.stream.Indenter.c` @type ^`int`;
  #L45373c.  if v0 > v2 then goto L45374e;
  #L453740.  v2:= 32I;
  #L453744.  v1[v0]:= v2 @kind char;
  #L453748.  v0:= v0 + 1;
  #L45374c.  goto L453738;
  #L45374e.  v0:= new `java.lang.String`;
  #L453752.  call `<init>`(v0, v1) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L453758.  return v0 @kind object;
  #L45375a.  v0:= "\n" @kind object;
  #L45375e.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`org.simpleframework.xml.stream.Indenter` v2 @kind this, `int` v3 ) @signature `Lorg/simpleframework/xml/stream/Indenter;.b:(I)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L453770.  v0:= v2.`org.simpleframework.xml.stream.Indenter.b` @type ^`int`;
  #L453774.  if v0 <= 0 then goto L4537ac;
  #L453778.  v0:= v2.`org.simpleframework.xml.stream.Indenter.a` @type ^`org.simpleframework.xml.stream.Indenter$Cache` @kind object;
  #L45377c.  call temp:= `get`(v0, v3) @signature `Lorg/simpleframework/xml/stream/Indenter$Cache;.get:(I)Ljava/lang/String;` @kind virtual;
  #L453782.  v0:= temp @kind object;
  #L453784.  if v0 != 0 then goto L45379a;
  #L453788.  call temp:= `a`(v2) @signature `Lorg/simpleframework/xml/stream/Indenter;.a:()Ljava/lang/String;` @kind direct;
  #L45378e.  v0:= temp @kind object;
  #L453790.  v1:= v2.`org.simpleframework.xml.stream.Indenter.a` @type ^`org.simpleframework.xml.stream.Indenter$Cache` @kind object;
  #L453794.  call `set`(v1, v3, v0) @signature `Lorg/simpleframework/xml/stream/Indenter$Cache;.set:(ILjava/lang/String;)V` @kind virtual;
  #L45379a.  v3:= v2.`org.simpleframework.xml.stream.Indenter.a` @type ^`org.simpleframework.xml.stream.Indenter$Cache` @kind object;
  #L45379e.  call temp:= `size`(v3) @signature `Lorg/simpleframework/xml/stream/Indenter$Cache;.size:()I` @kind virtual;
  #L4537a4.  v3:= temp;
  #L4537a6.  if v3 <= 0 then goto L4537ac;
  #L4537aa.  return v0 @kind object;
  #L4537ac.  v3:= "" @kind object;
  #L4537b0.  return v3 @kind object;
}
procedure `java.lang.String` `pop`(`org.simpleframework.xml.stream.Indenter` v3 @kind this) @signature `Lorg/simpleframework/xml/stream/Indenter;.pop:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4537c4.  v0:= v3.`org.simpleframework.xml.stream.Indenter.d` @type ^`int`;
  #L4537c8.  v0:= v0 + -1;
  #L4537cc.  v3.`org.simpleframework.xml.stream.Indenter.d` @type ^`int` := v0;
  #L4537d0.  call temp:= `b`(v3, v0) @signature `Lorg/simpleframework/xml/stream/Indenter;.b:(I)Ljava/lang/String;` @kind direct;
  #L4537d6.  v0:= temp @kind object;
  #L4537d8.  v1:= v3.`org.simpleframework.xml.stream.Indenter.b` @type ^`int`;
  #L4537dc.  if v1 <= 0 then goto L4537ea;
  #L4537e0.  v2:= v3.`org.simpleframework.xml.stream.Indenter.c` @type ^`int`;
  #L4537e4.  v2:= v2 - v1 @kind int;
  #L4537e6.  v3.`org.simpleframework.xml.stream.Indenter.c` @type ^`int` := v2;
  #L4537ea.  return v0 @kind object;
}
procedure `java.lang.String` `push`(`org.simpleframework.xml.stream.Indenter` v3 @kind this) @signature `Lorg/simpleframework/xml/stream/Indenter;.push:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4537fc.  v0:= v3.`org.simpleframework.xml.stream.Indenter.d` @type ^`int`;
  #L453800.  v1:= v0 + 1;
  #L453804.  v3.`org.simpleframework.xml.stream.Indenter.d` @type ^`int` := v1;
  #L453808.  call temp:= `b`(v3, v0) @signature `Lorg/simpleframework/xml/stream/Indenter;.b:(I)Ljava/lang/String;` @kind direct;
  #L45380e.  v0:= temp @kind object;
  #L453810.  v1:= v3.`org.simpleframework.xml.stream.Indenter.b` @type ^`int`;
  #L453814.  if v1 <= 0 then goto L453822;
  #L453818.  v2:= v3.`org.simpleframework.xml.stream.Indenter.c` @type ^`int`;
  #L45381c.  v2:= v2 + v1 @kind int;
  #L45381e.  v3.`org.simpleframework.xml.stream.Indenter.c` @type ^`int` := v2;
  #L453822.  return v0 @kind object;
}
procedure `java.lang.String` `top`(`org.simpleframework.xml.stream.Indenter` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/Indenter;.top:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L453834.  v0:= v1.`org.simpleframework.xml.stream.Indenter.d` @type ^`int`;
  #L453838.  call temp:= `b`(v1, v0) @signature `Lorg/simpleframework/xml/stream/Indenter;.b:(I)Ljava/lang/String;` @kind direct;
  #L45383e.  v0:= temp @kind object;
  #L453840.  return v0 @kind object;
}
