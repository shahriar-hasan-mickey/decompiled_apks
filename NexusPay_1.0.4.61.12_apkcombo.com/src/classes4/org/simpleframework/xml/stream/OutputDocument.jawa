record `org.simpleframework.xml.stream.OutputDocument` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.stream.OutputNode` @kind interface {
  `org.simpleframework.xml.stream.OutputNodeMap` `org.simpleframework.xml.stream.OutputDocument.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.NodeWriter` `org.simpleframework.xml.stream.OutputDocument.b` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.OutputStack` `org.simpleframework.xml.stream.OutputDocument.c` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.stream.OutputDocument.d` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.stream.OutputDocument.e` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.stream.OutputDocument.f` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.Mode` `org.simpleframework.xml.stream.OutputDocument.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this, `org.simpleframework.xml.stream.NodeWriter` v2 @kind object, `org.simpleframework.xml.stream.OutputStack` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.<init>:(Lorg/simpleframework/xml/stream/NodeWriter;Lorg/simpleframework/xml/stream/OutputStack;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L455004.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L45500a.  v0:= new `org.simpleframework.xml.stream.OutputNodeMap`;
  #L45500e.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/stream/OutputNodeMap;.<init>:(Lorg/simpleframework/xml/stream/OutputNode;)V` @kind direct;
  #L455014.  v1.`org.simpleframework.xml.stream.OutputDocument.a` @type ^`org.simpleframework.xml.stream.OutputNodeMap` := v0 @kind object;
  #L455018.  v0:= `@@org.simpleframework.xml.stream.Mode.INHERIT` @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L45501c.  v1.`org.simpleframework.xml.stream.OutputDocument.g` @type ^`org.simpleframework.xml.stream.Mode` := v0 @kind object;
  #L455020.  v1.`org.simpleframework.xml.stream.OutputDocument.b` @type ^`org.simpleframework.xml.stream.NodeWriter` := v2 @kind object;
  #L455024.  v1.`org.simpleframework.xml.stream.OutputDocument.c` @type ^`org.simpleframework.xml.stream.OutputStack` := v3 @kind object;
  #L455028.  return @kind void;
}
procedure `void` `commit`(`org.simpleframework.xml.stream.OutputDocument` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.commit:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45503c.  v0:= v2.`org.simpleframework.xml.stream.OutputDocument.c` @type ^`org.simpleframework.xml.stream.OutputStack` @kind object;
  #L455040.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L455046.  v0:= temp;
  #L455048.  if v0 != 0 then goto L455060;
  #L45504c.  v0:= v2.`org.simpleframework.xml.stream.OutputDocument.c` @type ^`org.simpleframework.xml.stream.OutputStack` @kind object;
  #L455050.  call temp:= `bottom`(v0) @signature `Lorg/simpleframework/xml/stream/OutputStack;.bottom:()Lorg/simpleframework/xml/stream/OutputNode;` @kind virtual;
  #L455056.  v0:= temp @kind object;
  #L455058.  call `commit`(v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.commit:()V` @kind interface;
  #L45505e.  return @kind void;
  #L455060.  v0:= new `org.simpleframework.xml.stream.NodeException`;
  #L455064.  v1:= "No root node" @kind object;
  #L455068.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NodeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L45506e.  throw v0;
}
procedure `org.simpleframework.xml.stream.NodeMap` `getAttributes`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getAttributes:()Lorg/simpleframework/xml/stream/NodeMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454f98.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.a` @type ^`org.simpleframework.xml.stream.OutputNodeMap` @kind object;
  #L454f9c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.OutputNode` `getChild`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getChild:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454fb0.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.b` @type ^`org.simpleframework.xml.stream.NodeWriter` @kind object;
  #L454fb4.  call temp:= `writeElement`(v0, v1, v2) @signature `Lorg/simpleframework/xml/stream/NodeWriter;.writeElement:(Lorg/simpleframework/xml/stream/OutputNode;Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind virtual;
  #L454fba.  v2:= temp @kind object;
  #L454fbc.  return v2 @kind object;
}
procedure `java.lang.String` `getComment`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getComment:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454ecc.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.e` @type ^`java.lang.String` @kind object;
  #L454ed0.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.Mode` `getMode`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getMode:()Lorg/simpleframework/xml/stream/Mode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454f50.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.g` @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L454f54.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454ee4.  v0:= 0I;
  #L454ee6.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.NamespaceMap` `getNamespaces`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getNamespaces:()Lorg/simpleframework/xml/stream/NamespaceMap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454f68.  v0:= 0I;
  #L454f6a.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.Node` `getParent`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getParent:()Lorg/simpleframework/xml/stream/Node;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L454f7c.  call temp:= `getParent`(v1) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getParent:()Lorg/simpleframework/xml/stream/OutputNode;` @kind virtual;
  #L454f82.  v0:= temp @kind object;
  #L454f84.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.OutputNode` `getParent`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getParent:()Lorg/simpleframework/xml/stream/OutputNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454fd0.  v0:= 0I;
  #L454fd2.  return v0 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454ef8.  v0:= 0I;
  #L454efa.  return v0 @kind object;
}
procedure `java.lang.String` `getPrefix`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `boolean` v1 ) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getPrefix:(Z)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L454f0c.  v1:= 0I;
  #L454f0e.  return v1 @kind object;
}
procedure `java.lang.String` `getReference`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getReference:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454f20.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.d` @type ^`java.lang.String` @kind object;
  #L454f24.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454f38.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.f` @type ^`java.lang.String` @kind object;
  #L454f3c.  return v0 @kind object;
}
procedure `boolean` `isCommitted`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.isCommitted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454e98.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.c` @type ^`org.simpleframework.xml.stream.OutputStack` @kind object;
  #L454e9c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L454ea2.  v0:= temp;
  #L454ea4.  return v0;
}
procedure `boolean` `isRoot`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.isRoot:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454eb8.  v0:= 1I;
  #L454eba.  return v0;
}
procedure `void` `remove`(`org.simpleframework.xml.stream.OutputDocument` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L455080.  v0:= v2.`org.simpleframework.xml.stream.OutputDocument.c` @type ^`org.simpleframework.xml.stream.OutputStack` @kind object;
  #L455084.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L45508a.  v0:= temp;
  #L45508c.  if v0 != 0 then goto L4550a4;
  #L455090.  v0:= v2.`org.simpleframework.xml.stream.OutputDocument.c` @type ^`org.simpleframework.xml.stream.OutputStack` @kind object;
  #L455094.  call temp:= `bottom`(v0) @signature `Lorg/simpleframework/xml/stream/OutputStack;.bottom:()Lorg/simpleframework/xml/stream/OutputNode;` @kind virtual;
  #L45509a.  v0:= temp @kind object;
  #L45509c.  call `remove`(v0) @signature `Lorg/simpleframework/xml/stream/OutputNode;.remove:()V` @kind interface;
  #L4550a2.  return @kind void;
  #L4550a4.  v0:= new `org.simpleframework.xml.stream.NodeException`;
  #L4550a8.  v1:= "No root node" @kind object;
  #L4550ac.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/stream/NodeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4550b2.  throw v0;
}
procedure `org.simpleframework.xml.stream.OutputNode` `setAttribute`(`org.simpleframework.xml.stream.OutputDocument` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setAttribute:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454fe4.  v0:= v1.`org.simpleframework.xml.stream.OutputDocument.a` @type ^`org.simpleframework.xml.stream.OutputNodeMap` @kind object;
  #L454fe8.  call temp:= `put`(v0, v2, v3) @signature `Lorg/simpleframework/xml/stream/OutputNodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/OutputNode;` @kind virtual;
  #L454fee.  v2:= temp @kind object;
  #L454ff0.  return v2 @kind object;
}
procedure `void` `setComment`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setComment:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L4550c4.  v0.`org.simpleframework.xml.stream.OutputDocument.e` @type ^`java.lang.String` := v1 @kind object;
  #L4550c8.  return @kind void;
}
procedure `void` `setData`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `boolean` v1 ) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setData:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L4550dc.  if v1 == 0 then goto L4550ea;
  #L4550e0.  v1:= `@@org.simpleframework.xml.stream.Mode.DATA` @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L4550e4.  v0.`org.simpleframework.xml.stream.OutputDocument.g` @type ^`org.simpleframework.xml.stream.Mode` := v1 @kind object;
  #L4550e8.  goto L4550f2;
  #L4550ea.  v1:= `@@org.simpleframework.xml.stream.Mode.ESCAPE` @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L4550ee.  v0.`org.simpleframework.xml.stream.OutputDocument.g` @type ^`org.simpleframework.xml.stream.Mode` := v1 @kind object;
  #L4550f2.  return @kind void;
}
procedure `void` `setMode`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `org.simpleframework.xml.stream.Mode` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setMode:(Lorg/simpleframework/xml/stream/Mode;)V` @AccessFlag PUBLIC {
    temp;

  #L455104.  v0.`org.simpleframework.xml.stream.OutputDocument.g` @type ^`org.simpleframework.xml.stream.Mode` := v1 @kind object;
  #L455108.  return @kind void;
}
procedure `void` `setName`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L45511c.  return @kind void;
}
procedure `void` `setReference`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setReference:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L455130.  v0.`org.simpleframework.xml.stream.OutputDocument.d` @type ^`java.lang.String` := v1 @kind object;
  #L455134.  return @kind void;
}
procedure `void` `setValue`(`org.simpleframework.xml.stream.OutputDocument` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputDocument;.setValue:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L455148.  v0.`org.simpleframework.xml.stream.OutputDocument.f` @type ^`java.lang.String` := v1 @kind object;
  #L45514c.  return @kind void;
}
