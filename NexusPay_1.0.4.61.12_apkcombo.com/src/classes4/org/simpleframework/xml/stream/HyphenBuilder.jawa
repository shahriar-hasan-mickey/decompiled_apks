record `org.simpleframework.xml.stream.HyphenBuilder` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.stream.Style` @kind interface {
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.HyphenBuilder` v0 @kind this) @signature `Lorg/simpleframework/xml/stream/HyphenBuilder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L453550.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L453556.  return @kind void;
}
procedure `java.lang.String` `getAttribute`(`org.simpleframework.xml.stream.HyphenBuilder` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/HyphenBuilder;.getAttribute:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4534f8.  v0:= 0I;
  #L4534fa.  if v3 == 0 then goto L453512;
  #L4534fe.  v1:= new `org.simpleframework.xml.stream.HyphenBuilder$Parser`;
  #L453502.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/stream/HyphenBuilder$Parser;.<init>:(Lorg/simpleframework/xml/stream/HyphenBuilder;Ljava/lang/String;Lorg/simpleframework/xml/stream/HyphenBuilder$1;)V` @kind direct;
  #L453508.  call temp:= `process`(v1) @signature `Lorg/simpleframework/xml/stream/Splitter;.process:()Ljava/lang/String;` @kind virtual;
  #L45350e.  v3:= temp @kind object;
  #L453510.  return v3 @kind object;
  #L453512.  return v0 @kind object;
}
procedure `java.lang.String` `getElement`(`org.simpleframework.xml.stream.HyphenBuilder` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/HyphenBuilder;.getElement:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L453524.  v0:= 0I;
  #L453526.  if v3 == 0 then goto L45353e;
  #L45352a.  v1:= new `org.simpleframework.xml.stream.HyphenBuilder$Parser`;
  #L45352e.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/simpleframework/xml/stream/HyphenBuilder$Parser;.<init>:(Lorg/simpleframework/xml/stream/HyphenBuilder;Ljava/lang/String;Lorg/simpleframework/xml/stream/HyphenBuilder$1;)V` @kind direct;
  #L453534.  call temp:= `process`(v1) @signature `Lorg/simpleframework/xml/stream/Splitter;.process:()Ljava/lang/String;` @kind virtual;
  #L45353a.  v3:= temp @kind object;
  #L45353c.  return v3 @kind object;
  #L45353e.  return v0 @kind object;
}
