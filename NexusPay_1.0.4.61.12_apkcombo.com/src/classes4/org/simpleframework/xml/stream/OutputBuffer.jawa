record `org.simpleframework.xml.stream.OutputBuffer` @kind class @AccessFlag PUBLIC {
  `java.lang.StringBuilder` `org.simpleframework.xml.stream.OutputBuffer.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.OutputBuffer` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L454da4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L454daa.  v0:= new `java.lang.StringBuilder`;
  #L454dae.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L454db4.  v1.`org.simpleframework.xml.stream.OutputBuffer.a` @type ^`java.lang.StringBuilder` := v0 @kind object;
  #L454db8.  return @kind void;
}
procedure `void` `append`(`org.simpleframework.xml.stream.OutputBuffer` v1 @kind this, `char` v2 ) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.append:(C)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454dcc.  v0:= v1.`org.simpleframework.xml.stream.OutputBuffer.a` @type ^`java.lang.StringBuilder` @kind object;
  #L454dd0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L454dd6.  return @kind void;
}
procedure `void` `append`(`org.simpleframework.xml.stream.OutputBuffer` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.append:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454e24.  v0:= v1.`org.simpleframework.xml.stream.OutputBuffer.a` @type ^`java.lang.StringBuilder` @kind object;
  #L454e28.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L454e2e.  return @kind void;
}
procedure `void` `append`(`org.simpleframework.xml.stream.OutputBuffer` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.append:(Ljava/lang/String;II)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454e40.  v0:= v1.`org.simpleframework.xml.stream.OutputBuffer.a` @type ^`java.lang.StringBuilder` @kind object;
  #L454e44.  call temp:= `append`(v0, v2, v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L454e4a.  return @kind void;
}
procedure `void` `append`(`org.simpleframework.xml.stream.OutputBuffer` v3 @kind this, `char`[] v4 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.append:([C)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L454de8.  v0:= v3.`org.simpleframework.xml.stream.OutputBuffer.a` @type ^`java.lang.StringBuilder` @kind object;
  #L454dec.  v1:= length @variable v4;
  #L454dee.  v2:= 0I;
  #L454df0.  call temp:= `append`(v0, v4, v2, v1) @signature `Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;` @kind virtual;
  #L454df6.  return @kind void;
}
procedure `void` `append`(`org.simpleframework.xml.stream.OutputBuffer` v1 @kind this, `char`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.append:([CII)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454e08.  v0:= v1.`org.simpleframework.xml.stream.OutputBuffer.a` @type ^`java.lang.StringBuilder` @kind object;
  #L454e0c.  call temp:= `append`(v0, v2, v3, v4) @signature `Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;` @kind virtual;
  #L454e12.  return @kind void;
}
procedure `void` `clear`(`org.simpleframework.xml.stream.OutputBuffer` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L454e5c.  v0:= v2.`org.simpleframework.xml.stream.OutputBuffer.a` @type ^`java.lang.StringBuilder` @kind object;
  #L454e60.  v1:= 0I;
  #L454e62.  call `setLength`(v0, v1) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L454e68.  return @kind void;
}
procedure `void` `write`(`org.simpleframework.xml.stream.OutputBuffer` v1 @kind this, `java.io.Writer` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.write:(Ljava/io/Writer;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L454e7c.  v0:= v1.`org.simpleframework.xml.stream.OutputBuffer.a` @type ^`java.lang.StringBuilder` @kind object;
  #L454e80.  call temp:= `append`(v2, v0) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L454e86.  return @kind void;
}
