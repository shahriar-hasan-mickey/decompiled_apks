record `org.simpleframework.xml.stream.PullProvider` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.stream.Provider` @kind interface {
  `org.xmlpull.v1.XmlPullParserFactory` `org.simpleframework.xml.stream.PullProvider.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.PullProvider` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/PullProvider;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L455a38.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L455a3e.  call temp:= `newInstance`() @signature `Lorg/xmlpull/v1/XmlPullParserFactory;.newInstance:()Lorg/xmlpull/v1/XmlPullParserFactory;` @kind static;
  #L455a44.  v0:= temp @kind object;
  #L455a46.  v2.`org.simpleframework.xml.stream.PullProvider.a` @type ^`org.xmlpull.v1.XmlPullParserFactory` := v0 @kind object;
  #L455a4a.  v1:= 1I;
  #L455a4c.  call `setNamespaceAware`(v0, v1) @signature `Lorg/xmlpull/v1/XmlPullParserFactory;.setNamespaceAware:(Z)V` @kind virtual;
  #L455a52.  return @kind void;
}
procedure `org.simpleframework.xml.stream.EventReader` `provide`(`org.simpleframework.xml.stream.PullProvider` v2 @kind this, `java.io.InputStream` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/PullProvider;.provide:(Ljava/io/InputStream;)Lorg/simpleframework/xml/stream/EventReader;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4559d0.  v0:= v2.`org.simpleframework.xml.stream.PullProvider.a` @type ^`org.xmlpull.v1.XmlPullParserFactory` @kind object;
  #L4559d4.  call temp:= `newPullParser`(v0) @signature `Lorg/xmlpull/v1/XmlPullParserFactory;.newPullParser:()Lorg/xmlpull/v1/XmlPullParser;` @kind virtual;
  #L4559da.  v0:= temp @kind object;
  #L4559dc.  if v3 == 0 then goto L4559e8;
  #L4559e0.  v1:= 0I;
  #L4559e2.  call `setInput`(v0, v3, v1) @signature `Lorg/xmlpull/v1/XmlPullParser;.setInput:(Ljava/io/InputStream;Ljava/lang/String;)V` @kind interface;
  #L4559e8.  v3:= new `org.simpleframework.xml.stream.PullReader`;
  #L4559ec.  call `<init>`(v3, v0) @signature `Lorg/simpleframework/xml/stream/PullReader;.<init>:(Lorg/xmlpull/v1/XmlPullParser;)V` @kind direct;
  #L4559f2.  return v3 @kind object;
}
procedure `org.simpleframework.xml.stream.EventReader` `provide`(`org.simpleframework.xml.stream.PullProvider` v1 @kind this, `java.io.Reader` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/PullProvider;.provide:(Ljava/io/Reader;)Lorg/simpleframework/xml/stream/EventReader;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455a04.  v0:= v1.`org.simpleframework.xml.stream.PullProvider.a` @type ^`org.xmlpull.v1.XmlPullParserFactory` @kind object;
  #L455a08.  call temp:= `newPullParser`(v0) @signature `Lorg/xmlpull/v1/XmlPullParserFactory;.newPullParser:()Lorg/xmlpull/v1/XmlPullParser;` @kind virtual;
  #L455a0e.  v0:= temp @kind object;
  #L455a10.  if v2 == 0 then goto L455a1a;
  #L455a14.  call `setInput`(v0, v2) @signature `Lorg/xmlpull/v1/XmlPullParser;.setInput:(Ljava/io/Reader;)V` @kind interface;
  #L455a1a.  v2:= new `org.simpleframework.xml.stream.PullReader`;
  #L455a1e.  call `<init>`(v2, v0) @signature `Lorg/simpleframework/xml/stream/PullReader;.<init>:(Lorg/xmlpull/v1/XmlPullParser;)V` @kind direct;
  #L455a24.  return v2 @kind object;
}
