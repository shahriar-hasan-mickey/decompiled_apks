record `org.simpleframework.xml.stream.PullReader$Text` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.stream.EventToken` @kind class {
  `org.xmlpull.v1.XmlPullParser` `org.simpleframework.xml.stream.PullReader$Text.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.stream.PullReader$Text.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.PullReader$Text` v1 @kind this, `org.xmlpull.v1.XmlPullParser` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/PullReader$Text;.<init>:(Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L455c88.  call `<init>`(v1) @signature `Lorg/simpleframework/xml/stream/EventToken;.<init>:()V` @kind direct;
  #L455c8e.  call temp:= `getText`(v2) @signature `Lorg/xmlpull/v1/XmlPullParser;.getText:()Ljava/lang/String;` @kind interface;
  #L455c94.  v0:= temp @kind object;
  #L455c96.  v1.`org.simpleframework.xml.stream.PullReader$Text.b` @type ^`java.lang.String` := v0 @kind object;
  #L455c9a.  v1.`org.simpleframework.xml.stream.PullReader$Text.a` @type ^`org.xmlpull.v1.XmlPullParser` := v2 @kind object;
  #L455c9e.  return @kind void;
}
procedure `java.lang.Object` `getSource`(`org.simpleframework.xml.stream.PullReader$Text` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/PullReader$Text;.getSource:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455c58.  v0:= v1.`org.simpleframework.xml.stream.PullReader$Text.a` @type ^`org.xmlpull.v1.XmlPullParser` @kind object;
  #L455c5c.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`org.simpleframework.xml.stream.PullReader$Text` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/PullReader$Text;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455c70.  v0:= v1.`org.simpleframework.xml.stream.PullReader$Text.b` @type ^`java.lang.String` @kind object;
  #L455c74.  return v0 @kind object;
}
procedure `boolean` `isText`(`org.simpleframework.xml.stream.PullReader$Text` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/PullReader$Text;.isText:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455c44.  v0:= 1I;
  #L455c46.  return v0;
}
