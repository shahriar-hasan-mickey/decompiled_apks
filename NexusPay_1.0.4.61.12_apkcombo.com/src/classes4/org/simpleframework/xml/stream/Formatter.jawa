record `org.simpleframework.xml.stream.Formatter` @kind class @AccessFlag PUBLIC {
  `org.simpleframework.xml.stream.OutputBuffer` `org.simpleframework.xml.stream.Formatter.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.Indenter` `org.simpleframework.xml.stream.Formatter.b` @AccessFlag PRIVATE;
  `java.io.Writer` `org.simpleframework.xml.stream.Formatter.c` @AccessFlag PRIVATE;
  `java.lang.String` `org.simpleframework.xml.stream.Formatter.d` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.Formatter$Tag` `org.simpleframework.xml.stream.Formatter.e` @AccessFlag PRIVATE;
}
global `char`[] `@@org.simpleframework.xml.stream.Formatter.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `char`[] `@@org.simpleframework.xml.stream.Formatter.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `char`[] `@@org.simpleframework.xml.stream.Formatter.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `char`[] `@@org.simpleframework.xml.stream.Formatter.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `char`[] `@@org.simpleframework.xml.stream.Formatter.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `char`[] `@@org.simpleframework.xml.stream.Formatter.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `char`[] `@@org.simpleframework.xml.stream.Formatter.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `char`[] `@@org.simpleframework.xml.stream.Formatter.m` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/simpleframework/xml/stream/Formatter;.<clinit>:()V` @AccessFlag PUBLIC_STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L452cc4.  v0:= 5I;
  #L452cc6.  v1:= new `char`[v0];
  #L452cca.  goto L452d3c;
  #L452cd0.  `@@org.simpleframework.xml.stream.Formatter.f` @type ^`char`[] := v1 @kind object;
  #L452cd4.  v1:= 4I;
  #L452cd6.  v2:= new `char`[v1];
  #L452cda.  goto L452d50;
  #L452ce0.  `@@org.simpleframework.xml.stream.Formatter.g` @type ^`char`[] := v2 @kind object;
  #L452ce4.  v2:= new `char`[v1];
  #L452ce8.  goto L452d60;
  #L452cee.  `@@org.simpleframework.xml.stream.Formatter.h` @type ^`char`[] := v2 @kind object;
  #L452cf2.  v2:= 6I;
  #L452cf4.  v3:= new `char`[v2];
  #L452cf8.  goto L452d70;
  #L452cfe.  `@@org.simpleframework.xml.stream.Formatter.i` @type ^`char`[] := v3 @kind object;
  #L452d02.  v2:= new `char`[v2];
  #L452d06.  goto L452d84;
  #L452d0c.  `@@org.simpleframework.xml.stream.Formatter.j` @type ^`char`[] := v2 @kind object;
  #L452d10.  v2:= new `char`[v0];
  #L452d14.  goto L452d98;
  #L452d1a.  `@@org.simpleframework.xml.stream.Formatter.k` @type ^`char`[] := v2 @kind object;
  #L452d1e.  v0:= new `char`[v0];
  #L452d22.  goto L452dac;
  #L452d28.  `@@org.simpleframework.xml.stream.Formatter.l` @type ^`char`[] := v0 @kind object;
  #L452d2c.  v0:= new `char`[v1];
  #L452d30.  goto L452dc0;
  #L452d36.  `@@org.simpleframework.xml.stream.Formatter.m` @type ^`char`[] := v0 @kind object;
  #L452d3a.  return @kind void;
  #L452d3c.  v1:= (120I, 109I, 108I, 110I, 115I) @kind object;
  #L452d4d.  goto L452cd0;
  #L452d4e.  
  #L452d50.  v2:= (38I, 108I, 116I, 59I) @kind object;
  #L452d5f.  goto L452ce0;
  #L452d60.  v2:= (38I, 103I, 116I, 59I) @kind object;
  #L452d6f.  goto L452cee;
  #L452d70.  v3:= (38I, 113I, 117I, 111I, 116I, 59I) @kind object;
  #L452d83.  goto L452cfe;
  #L452d84.  v2:= (38I, 97I, 112I, 111I, 115I, 59I) @kind object;
  #L452d97.  goto L452d0c;
  #L452d98.  v2:= (38I, 97I, 109I, 112I, 59I) @kind object;
  #L452da9.  goto L452d1a;
  #L452daa.  
  #L452dac.  v0:= (60I, 33I, 45I, 45I, 32I) @kind object;
  #L452dbd.  goto L452d28;
  #L452dbe.  
  #L452dc0.  v0:= (32I, 45I, 45I, 62I) @kind object;
  #L452dcf.  goto L452d36;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.Formatter` v2 @kind this, `java.io.Writer` v3 @kind object, `org.simpleframework.xml.stream.Format` v4 @kind object) @signature `Lorg/simpleframework/xml/stream/Formatter;.<init>:(Ljava/io/Writer;Lorg/simpleframework/xml/stream/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L452de0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L452de6.  v0:= new `java.io.BufferedWriter`;
  #L452dea.  v1:= 1024I;
  #L452dee.  call `<init>`(v0, v3, v1) @signature `Ljava/io/BufferedWriter;.<init>:(Ljava/io/Writer;I)V` @kind direct;
  #L452df4.  v2.`org.simpleframework.xml.stream.Formatter.c` @type ^`java.io.Writer` := v0 @kind object;
  #L452df8.  v3:= new `org.simpleframework.xml.stream.Indenter`;
  #L452dfc.  call `<init>`(v3, v4) @signature `Lorg/simpleframework/xml/stream/Indenter;.<init>:(Lorg/simpleframework/xml/stream/Format;)V` @kind direct;
  #L452e02.  v2.`org.simpleframework.xml.stream.Formatter.b` @type ^`org.simpleframework.xml.stream.Indenter` := v3 @kind object;
  #L452e06.  v3:= new `org.simpleframework.xml.stream.OutputBuffer`;
  #L452e0a.  call `<init>`(v3) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.<init>:()V` @kind direct;
  #L452e10.  v2.`org.simpleframework.xml.stream.Formatter.a` @type ^`org.simpleframework.xml.stream.OutputBuffer` := v3 @kind object;
  #L452e14.  call temp:= `getProlog`(v4) @signature `Lorg/simpleframework/xml/stream/Format;.getProlog:()Ljava/lang/String;` @kind virtual;
  #L452e1a.  v3:= temp @kind object;
  #L452e1c.  v2.`org.simpleframework.xml.stream.Formatter.d` @type ^`java.lang.String` := v3 @kind object;
  #L452e20.  return @kind void;
}
procedure `void` `a`(`org.simpleframework.xml.stream.Formatter` v1 @kind this, `char` v2 ) @signature `Lorg/simpleframework/xml/stream/Formatter;.a:(C)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L452e34.  v0:= v1.`org.simpleframework.xml.stream.Formatter.a` @type ^`org.simpleframework.xml.stream.OutputBuffer` @kind object;
  #L452e38.  call `append`(v0, v2) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.append:(C)V` @kind virtual;
  #L452e3e.  return @kind void;
}
procedure `void` `b`(`org.simpleframework.xml.stream.Formatter` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/Formatter;.b:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L452e6c.  v0:= v1.`org.simpleframework.xml.stream.Formatter.a` @type ^`org.simpleframework.xml.stream.OutputBuffer` @kind object;
  #L452e70.  call `append`(v0, v2) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.append:(Ljava/lang/String;)V` @kind virtual;
  #L452e76.  return @kind void;
}
procedure `void` `c`(`org.simpleframework.xml.stream.Formatter` v1 @kind this, `char`[] v2 @kind object) @signature `Lorg/simpleframework/xml/stream/Formatter;.c:([C)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L452e50.  v0:= v1.`org.simpleframework.xml.stream.Formatter.a` @type ^`org.simpleframework.xml.stream.OutputBuffer` @kind object;
  #L452e54.  call `append`(v0, v2) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.append:([C)V` @kind virtual;
  #L452e5a.  return @kind void;
}
procedure `void` `d`(`org.simpleframework.xml.stream.Formatter` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/Formatter;.d:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L452e88.  v0:= "<![CDATA[" @kind object;
  #L452e8c.  call `j`(v1, v0) @signature `Lorg/simpleframework/xml/stream/Formatter;.j:(Ljava/lang/String;)V` @kind direct;
  #L452e92.  call `j`(v1, v2) @signature `Lorg/simpleframework/xml/stream/Formatter;.j:(Ljava/lang/String;)V` @kind direct;
  #L452e98.  v2:= "]]>" @kind object;
  #L452e9c.  call `j`(v1, v2) @signature `Lorg/simpleframework/xml/stream/Formatter;.j:(Ljava/lang/String;)V` @kind direct;
  #L452ea2.  return @kind void;
}
procedure `void` `e`(`org.simpleframework.xml.stream.Formatter` v1 @kind this, `char` v2 ) @signature `Lorg/simpleframework/xml/stream/Formatter;.e:(C)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L452eb4.  call temp:= `h`(v1, v2) @signature `Lorg/simpleframework/xml/stream/Formatter;.h:(C)[C` @kind direct;
  #L452eba.  v0:= temp @kind object;
  #L452ebc.  if v0 == 0 then goto L452ec8;
  #L452ec0.  call `l`(v1, v0) @signature `Lorg/simpleframework/xml/stream/Formatter;.l:([C)V` @kind direct;
  #L452ec6.  goto L452ece;
  #L452ec8.  call `i`(v1, v2) @signature `Lorg/simpleframework/xml/stream/Formatter;.i:(C)V` @kind direct;
  #L452ece.  return @kind void;
}
procedure `void` `f`(`org.simpleframework.xml.stream.Formatter` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/stream/Formatter;.f:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L452ee0.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L452ee6.  v0:= temp;
  #L452ee8.  v1:= 0I;
  #L452eea.  if v1 >= v0 then goto L452f02;
  #L452eee.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L452ef4.  v2:= temp;
  #L452ef6.  call `e`(v3, v2) @signature `Lorg/simpleframework/xml/stream/Formatter;.e:(C)V` @kind direct;
  #L452efc.  v1:= v1 + 1;
  #L452f00.  goto L452eea;
  #L452f02.  return @kind void;
}
procedure `boolean` `g`(`org.simpleframework.xml.stream.Formatter` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/Formatter;.g:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L452c40.  v0:= 1I;
  #L452c42.  if v2 == 0 then goto L452c56;
  #L452c46.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L452c4c.  v2:= temp;
  #L452c4e.  if v2 != 0 then goto L452c54;
  #L452c52.  goto L452c56;
  #L452c54.  v0:= 0I;
  #L452c56.  return v0;
}
procedure `char`[] `h`(`org.simpleframework.xml.stream.Formatter` v1 @kind this, `char` v2 ) @signature `Lorg/simpleframework/xml/stream/Formatter;.h:(C)[C` @AccessFlag PRIVATE {
    temp;
    v0;

  #L452c68.  v0:= 34I;
  #L452c6c.  if v2 == v0 then goto L452cac;
  #L452c70.  v0:= 60I;
  #L452c74.  if v2 == v0 then goto L452ca6;
  #L452c78.  v0:= 62I;
  #L452c7c.  if v2 == v0 then goto L452ca0;
  #L452c80.  v0:= 38I;
  #L452c84.  if v2 == v0 then goto L452c9a;
  #L452c88.  v0:= 39I;
  #L452c8c.  if v2 == v0 then goto L452c94;
  #L452c90.  v2:= 0I;
  #L452c92.  return v2 @kind object;
  #L452c94.  v2:= `@@org.simpleframework.xml.stream.Formatter.j` @type ^`char`[] @kind object;
  #L452c98.  return v2 @kind object;
  #L452c9a.  v2:= `@@org.simpleframework.xml.stream.Formatter.k` @type ^`char`[] @kind object;
  #L452c9e.  return v2 @kind object;
  #L452ca0.  v2:= `@@org.simpleframework.xml.stream.Formatter.h` @type ^`char`[] @kind object;
  #L452ca4.  return v2 @kind object;
  #L452ca6.  v2:= `@@org.simpleframework.xml.stream.Formatter.g` @type ^`char`[] @kind object;
  #L452caa.  return v2 @kind object;
  #L452cac.  v2:= `@@org.simpleframework.xml.stream.Formatter.i` @type ^`char`[] @kind object;
  #L452cb0.  return v2 @kind object;
}
procedure `void` `i`(`org.simpleframework.xml.stream.Formatter` v2 @kind this, `char` v3 ) @signature `Lorg/simpleframework/xml/stream/Formatter;.i:(C)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L452f48.  v0:= v2.`org.simpleframework.xml.stream.Formatter.a` @type ^`org.simpleframework.xml.stream.OutputBuffer` @kind object;
  #L452f4c.  v1:= v2.`org.simpleframework.xml.stream.Formatter.c` @type ^`java.io.Writer` @kind object;
  #L452f50.  call `write`(v0, v1) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.write:(Ljava/io/Writer;)V` @kind virtual;
  #L452f56.  v0:= v2.`org.simpleframework.xml.stream.Formatter.a` @type ^`org.simpleframework.xml.stream.OutputBuffer` @kind object;
  #L452f5a.  call `clear`(v0) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.clear:()V` @kind virtual;
  #L452f60.  v0:= v2.`org.simpleframework.xml.stream.Formatter.c` @type ^`java.io.Writer` @kind object;
  #L452f64.  call `write`(v0, v3) @signature `Ljava/io/Writer;.write:(I)V` @kind virtual;
  #L452f6a.  return @kind void;
}
procedure `void` `j`(`org.simpleframework.xml.stream.Formatter` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/stream/Formatter;.j:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L452fb0.  v0:= v2.`org.simpleframework.xml.stream.Formatter.a` @type ^`org.simpleframework.xml.stream.OutputBuffer` @kind object;
  #L452fb4.  v1:= v2.`org.simpleframework.xml.stream.Formatter.c` @type ^`java.io.Writer` @kind object;
  #L452fb8.  call `write`(v0, v1) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.write:(Ljava/io/Writer;)V` @kind virtual;
  #L452fbe.  v0:= v2.`org.simpleframework.xml.stream.Formatter.a` @type ^`org.simpleframework.xml.stream.OutputBuffer` @kind object;
  #L452fc2.  call `clear`(v0) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.clear:()V` @kind virtual;
  #L452fc8.  v0:= v2.`org.simpleframework.xml.stream.Formatter.c` @type ^`java.io.Writer` @kind object;
  #L452fcc.  call `write`(v0, v3) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L452fd2.  return @kind void;
}
procedure `void` `k`(`org.simpleframework.xml.stream.Formatter` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/stream/Formatter;.k:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L452fe4.  v0:= v2.`org.simpleframework.xml.stream.Formatter.a` @type ^`org.simpleframework.xml.stream.OutputBuffer` @kind object;
  #L452fe8.  v1:= v2.`org.simpleframework.xml.stream.Formatter.c` @type ^`java.io.Writer` @kind object;
  #L452fec.  call `write`(v0, v1) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.write:(Ljava/io/Writer;)V` @kind virtual;
  #L452ff2.  v0:= v2.`org.simpleframework.xml.stream.Formatter.a` @type ^`org.simpleframework.xml.stream.OutputBuffer` @kind object;
  #L452ff6.  call `clear`(v0) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.clear:()V` @kind virtual;
  #L452ffc.  call temp:= `g`(v2, v4) @signature `Lorg/simpleframework/xml/stream/Formatter;.g:(Ljava/lang/String;)Z` @kind direct;
  #L453002.  v0:= temp;
  #L453004.  if v0 != 0 then goto L453020;
  #L453008.  v0:= v2.`org.simpleframework.xml.stream.Formatter.c` @type ^`java.io.Writer` @kind object;
  #L45300c.  call `write`(v0, v4) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L453012.  v4:= v2.`org.simpleframework.xml.stream.Formatter.c` @type ^`java.io.Writer` @kind object;
  #L453016.  v0:= 58I;
  #L45301a.  call `write`(v4, v0) @signature `Ljava/io/Writer;.write:(I)V` @kind virtual;
  #L453020.  v4:= v2.`org.simpleframework.xml.stream.Formatter.c` @type ^`java.io.Writer` @kind object;
  #L453024.  call `write`(v4, v3) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L45302a.  return @kind void;
}
procedure `void` `l`(`org.simpleframework.xml.stream.Formatter` v2 @kind this, `char`[] v3 @kind object) @signature `Lorg/simpleframework/xml/stream/Formatter;.l:([C)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L452f7c.  v0:= v2.`org.simpleframework.xml.stream.Formatter.a` @type ^`org.simpleframework.xml.stream.OutputBuffer` @kind object;
  #L452f80.  v1:= v2.`org.simpleframework.xml.stream.Formatter.c` @type ^`java.io.Writer` @kind object;
  #L452f84.  call `write`(v0, v1) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.write:(Ljava/io/Writer;)V` @kind virtual;
  #L452f8a.  v0:= v2.`org.simpleframework.xml.stream.Formatter.a` @type ^`org.simpleframework.xml.stream.OutputBuffer` @kind object;
  #L452f8e.  call `clear`(v0) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.clear:()V` @kind virtual;
  #L452f94.  v0:= v2.`org.simpleframework.xml.stream.Formatter.c` @type ^`java.io.Writer` @kind object;
  #L452f98.  call `write`(v0, v3) @signature `Ljava/io/Writer;.write:([C)V` @kind virtual;
  #L452f9e.  return @kind void;
}
procedure `void` `flush`(`org.simpleframework.xml.stream.Formatter` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/Formatter;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L452f14.  v0:= v2.`org.simpleframework.xml.stream.Formatter.a` @type ^`org.simpleframework.xml.stream.OutputBuffer` @kind object;
  #L452f18.  v1:= v2.`org.simpleframework.xml.stream.Formatter.c` @type ^`java.io.Writer` @kind object;
  #L452f1c.  call `write`(v0, v1) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.write:(Ljava/io/Writer;)V` @kind virtual;
  #L452f22.  v0:= v2.`org.simpleframework.xml.stream.Formatter.a` @type ^`org.simpleframework.xml.stream.OutputBuffer` @kind object;
  #L452f26.  call `clear`(v0) @signature `Lorg/simpleframework/xml/stream/OutputBuffer;.clear:()V` @kind virtual;
  #L452f2c.  v0:= v2.`org.simpleframework.xml.stream.Formatter.c` @type ^`java.io.Writer` @kind object;
  #L452f30.  call `flush`(v0) @signature `Ljava/io/Writer;.flush:()V` @kind virtual;
  #L452f36.  return @kind void;
}
procedure `void` `writeAttribute`(`org.simpleframework.xml.stream.Formatter` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lorg/simpleframework/xml/stream/Formatter;.writeAttribute:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45303c.  v0:= v2.`org.simpleframework.xml.stream.Formatter.e` @type ^`org.simpleframework.xml.stream.Formatter$Tag` @kind object;
  #L453040.  v1:= `@@org.simpleframework.xml.stream.Formatter$Tag.START` @type ^`org.simpleframework.xml.stream.Formatter$Tag` @kind object;
  #L453044.  if v0 != v1 then goto L45307a;
  #L453048.  v0:= 32I;
  #L45304c.  call `i`(v2, v0) @signature `Lorg/simpleframework/xml/stream/Formatter;.i:(C)V` @kind direct;
  #L453052.  call `k`(v2, v3, v5) @signature `Lorg/simpleframework/xml/stream/Formatter;.k:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L453058.  v3:= 61I;
  #L45305c.  call `i`(v2, v3) @signature `Lorg/simpleframework/xml/stream/Formatter;.i:(C)V` @kind direct;
  #L453062.  v3:= 34I;
  #L453066.  call `i`(v2, v3) @signature `Lorg/simpleframework/xml/stream/Formatter;.i:(C)V` @kind direct;
  #L45306c.  call `f`(v2, v4) @signature `Lorg/simpleframework/xml/stream/Formatter;.f:(Ljava/lang/String;)V` @kind direct;
  #L453072.  call `i`(v2, v3) @signature `Lorg/simpleframework/xml/stream/Formatter;.i:(C)V` @kind direct;
  #L453078.  return @kind void;
  #L45307a.  v3:= new `org.simpleframework.xml.stream.NodeException`;
  #L45307e.  v4:= "Start element required" @kind object;
  #L453082.  call `<init>`(v3, v4) @signature `Lorg/simpleframework/xml/stream/NodeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L453088.  throw v3;
}
procedure `void` `writeComment`(`org.simpleframework.xml.stream.Formatter` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/stream/Formatter;.writeComment:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L45309c.  v0:= v3.`org.simpleframework.xml.stream.Formatter.b` @type ^`org.simpleframework.xml.stream.Indenter` @kind object;
  #L4530a0.  call temp:= `top`(v0) @signature `Lorg/simpleframework/xml/stream/Indenter;.top:()Ljava/lang/String;` @kind virtual;
  #L4530a6.  v0:= temp @kind object;
  #L4530a8.  v1:= v3.`org.simpleframework.xml.stream.Formatter.e` @type ^`org.simpleframework.xml.stream.Formatter$Tag` @kind object;
  #L4530ac.  v2:= `@@org.simpleframework.xml.stream.Formatter$Tag.START` @type ^`org.simpleframework.xml.stream.Formatter$Tag` @kind object;
  #L4530b0.  if v1 != v2 then goto L4530be;
  #L4530b4.  v1:= 62I;
  #L4530b8.  call `a`(v3, v1) @signature `Lorg/simpleframework/xml/stream/Formatter;.a:(C)V` @kind direct;
  #L4530be.  if v0 == 0 then goto L4530e2;
  #L4530c2.  call `b`(v3, v0) @signature `Lorg/simpleframework/xml/stream/Formatter;.b:(Ljava/lang/String;)V` @kind direct;
  #L4530c8.  v0:= `@@org.simpleframework.xml.stream.Formatter.l` @type ^`char`[] @kind object;
  #L4530cc.  call `c`(v3, v0) @signature `Lorg/simpleframework/xml/stream/Formatter;.c:([C)V` @kind direct;
  #L4530d2.  call `b`(v3, v4) @signature `Lorg/simpleframework/xml/stream/Formatter;.b:(Ljava/lang/String;)V` @kind direct;
  #L4530d8.  v4:= `@@org.simpleframework.xml.stream.Formatter.m` @type ^`char`[] @kind object;
  #L4530dc.  call `c`(v3, v4) @signature `Lorg/simpleframework/xml/stream/Formatter;.c:([C)V` @kind direct;
  #L4530e2.  v4:= `@@org.simpleframework.xml.stream.Formatter$Tag.COMMENT` @type ^`org.simpleframework.xml.stream.Formatter$Tag` @kind object;
  #L4530e6.  v3.`org.simpleframework.xml.stream.Formatter.e` @type ^`org.simpleframework.xml.stream.Formatter$Tag` := v4 @kind object;
  #L4530ea.  return @kind void;
}
procedure `void` `writeEnd`(`org.simpleframework.xml.stream.Formatter` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lorg/simpleframework/xml/stream/Formatter;.writeEnd:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4530fc.  v0:= v6.`org.simpleframework.xml.stream.Formatter.b` @type ^`org.simpleframework.xml.stream.Indenter` @kind object;
  #L453100.  call temp:= `pop`(v0) @signature `Lorg/simpleframework/xml/stream/Indenter;.pop:()Ljava/lang/String;` @kind virtual;
  #L453106.  v0:= temp @kind object;
  #L453108.  v1:= v6.`org.simpleframework.xml.stream.Formatter.e` @type ^`org.simpleframework.xml.stream.Formatter$Tag` @kind object;
  #L45310c.  v2:= `@@org.simpleframework.xml.stream.Formatter$Tag.START` @type ^`org.simpleframework.xml.stream.Formatter$Tag` @kind object;
  #L453110.  v3:= 62I;
  #L453114.  v4:= 47I;
  #L453118.  if v1 != v2 then goto L45312a;
  #L45311c.  call `i`(v6, v4) @signature `Lorg/simpleframework/xml/stream/Formatter;.i:(C)V` @kind direct;
  #L453122.  call `i`(v6, v3) @signature `Lorg/simpleframework/xml/stream/Formatter;.i:(C)V` @kind direct;
  #L453128.  goto L45315c;
  #L45312a.  v5:= `@@org.simpleframework.xml.stream.Formatter$Tag.TEXT` @type ^`org.simpleframework.xml.stream.Formatter$Tag` @kind object;
  #L45312e.  if v1 == v5 then goto L453138;
  #L453132.  call `j`(v6, v0) @signature `Lorg/simpleframework/xml/stream/Formatter;.j:(Ljava/lang/String;)V` @kind direct;
  #L453138.  v0:= v6.`org.simpleframework.xml.stream.Formatter.e` @type ^`org.simpleframework.xml.stream.Formatter$Tag` @kind object;
  #L45313c.  if v0 == v2 then goto L45315c;
  #L453140.  v0:= 60I;
  #L453144.  call `i`(v6, v0) @signature `Lorg/simpleframework/xml/stream/Formatter;.i:(C)V` @kind direct;
  #L45314a.  call `i`(v6, v4) @signature `Lorg/simpleframework/xml/stream/Formatter;.i:(C)V` @kind direct;
  #L453150.  call `k`(v6, v7, v8) @signature `Lorg/simpleframework/xml/stream/Formatter;.k:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L453156.  call `i`(v6, v3) @signature `Lorg/simpleframework/xml/stream/Formatter;.i:(C)V` @kind direct;
  #L45315c.  v7:= `@@org.simpleframework.xml.stream.Formatter$Tag.END` @type ^`org.simpleframework.xml.stream.Formatter$Tag` @kind object;
  #L453160.  v6.`org.simpleframework.xml.stream.Formatter.e` @type ^`org.simpleframework.xml.stream.Formatter$Tag` := v7 @kind object;
  #L453164.  return @kind void;
}
procedure `void` `writeNamespace`(`org.simpleframework.xml.stream.Formatter` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/stream/Formatter;.writeNamespace:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L453178.  v0:= v2.`org.simpleframework.xml.stream.Formatter.e` @type ^`org.simpleframework.xml.stream.Formatter$Tag` @kind object;
  #L45317c.  v1:= `@@org.simpleframework.xml.stream.Formatter$Tag.START` @type ^`org.simpleframework.xml.stream.Formatter$Tag` @kind object;
  #L453180.  if v0 != v1 then goto L4531d6;
  #L453184.  v0:= 32I;
  #L453188.  call `i`(v2, v0) @signature `Lorg/simpleframework/xml/stream/Formatter;.i:(C)V` @kind direct;
  #L45318e.  v0:= `@@org.simpleframework.xml.stream.Formatter.f` @type ^`char`[] @kind object;
  #L453192.  call `l`(v2, v0) @signature `Lorg/simpleframework/xml/stream/Formatter;.l:([C)V` @kind direct;
  #L453198.  call temp:= `g`(v2, v4) @signature `Lorg/simpleframework/xml/stream/Formatter;.g:(Ljava/lang/String;)Z` @kind direct;
  #L45319e.  v0:= temp;
  #L4531a0.  if v0 != 0 then goto L4531b4;
  #L4531a4.  v0:= 58I;
  #L4531a8.  call `i`(v2, v0) @signature `Lorg/simpleframework/xml/stream/Formatter;.i:(C)V` @kind direct;
  #L4531ae.  call `j`(v2, v4) @signature `Lorg/simpleframework/xml/stream/Formatter;.j:(Ljava/lang/String;)V` @kind direct;
  #L4531b4.  v4:= 61I;
  #L4531b8.  call `i`(v2, v4) @signature `Lorg/simpleframework/xml/stream/Formatter;.i:(C)V` @kind direct;
  #L4531be.  v4:= 34I;
  #L4531c2.  call `i`(v2, v4) @signature `Lorg/simpleframework/xml/stream/Formatter;.i:(C)V` @kind direct;
  #L4531c8.  call `f`(v2, v3) @signature `Lorg/simpleframework/xml/stream/Formatter;.f:(Ljava/lang/String;)V` @kind direct;
  #L4531ce.  call `i`(v2, v4) @signature `Lorg/simpleframework/xml/stream/Formatter;.i:(C)V` @kind direct;
  #L4531d4.  return @kind void;
  #L4531d6.  v3:= new `org.simpleframework.xml.stream.NodeException`;
  #L4531da.  v4:= "Start element required" @kind object;
  #L4531de.  call `<init>`(v3, v4) @signature `Lorg/simpleframework/xml/stream/NodeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4531e4.  throw v3;
}
procedure `void` `writeProlog`(`org.simpleframework.xml.stream.Formatter` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/Formatter;.writeProlog:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4531f8.  v0:= v1.`org.simpleframework.xml.stream.Formatter.d` @type ^`java.lang.String` @kind object;
  #L4531fc.  if v0 == 0 then goto L453210;
  #L453200.  call `j`(v1, v0) @signature `Lorg/simpleframework/xml/stream/Formatter;.j:(Ljava/lang/String;)V` @kind direct;
  #L453206.  v0:= "\n" @kind object;
  #L45320a.  call `j`(v1, v0) @signature `Lorg/simpleframework/xml/stream/Formatter;.j:(Ljava/lang/String;)V` @kind direct;
  #L453210.  return @kind void;
}
procedure `void` `writeStart`(`org.simpleframework.xml.stream.Formatter` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lorg/simpleframework/xml/stream/Formatter;.writeStart:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L453224.  v0:= v3.`org.simpleframework.xml.stream.Formatter.b` @type ^`org.simpleframework.xml.stream.Indenter` @kind object;
  #L453228.  call temp:= `push`(v0) @signature `Lorg/simpleframework/xml/stream/Indenter;.push:()Ljava/lang/String;` @kind virtual;
  #L45322e.  v0:= temp @kind object;
  #L453230.  v1:= v3.`org.simpleframework.xml.stream.Formatter.e` @type ^`org.simpleframework.xml.stream.Formatter$Tag` @kind object;
  #L453234.  v2:= `@@org.simpleframework.xml.stream.Formatter$Tag.START` @type ^`org.simpleframework.xml.stream.Formatter$Tag` @kind object;
  #L453238.  if v1 != v2 then goto L453246;
  #L45323c.  v1:= 62I;
  #L453240.  call `a`(v3, v1) @signature `Lorg/simpleframework/xml/stream/Formatter;.a:(C)V` @kind direct;
  #L453246.  call `flush`(v3) @signature `Lorg/simpleframework/xml/stream/Formatter;.flush:()V` @kind virtual;
  #L45324c.  call `b`(v3, v0) @signature `Lorg/simpleframework/xml/stream/Formatter;.b:(Ljava/lang/String;)V` @kind direct;
  #L453252.  v0:= 60I;
  #L453256.  call `a`(v3, v0) @signature `Lorg/simpleframework/xml/stream/Formatter;.a:(C)V` @kind direct;
  #L45325c.  call temp:= `g`(v3, v5) @signature `Lorg/simpleframework/xml/stream/Formatter;.g:(Ljava/lang/String;)Z` @kind direct;
  #L453262.  v0:= temp;
  #L453264.  if v0 != 0 then goto L453278;
  #L453268.  call `b`(v3, v5) @signature `Lorg/simpleframework/xml/stream/Formatter;.b:(Ljava/lang/String;)V` @kind direct;
  #L45326e.  v5:= 58I;
  #L453272.  call `a`(v3, v5) @signature `Lorg/simpleframework/xml/stream/Formatter;.a:(C)V` @kind direct;
  #L453278.  call `b`(v3, v4) @signature `Lorg/simpleframework/xml/stream/Formatter;.b:(Ljava/lang/String;)V` @kind direct;
  #L45327e.  v3.`org.simpleframework.xml.stream.Formatter.e` @type ^`org.simpleframework.xml.stream.Formatter$Tag` := v2 @kind object;
  #L453282.  return @kind void;
}
procedure `void` `writeText`(`org.simpleframework.xml.stream.Formatter` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/Formatter;.writeText:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L453294.  v0:= `@@org.simpleframework.xml.stream.Mode.ESCAPE` @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L453298.  call `writeText`(v1, v2, v0) @signature `Lorg/simpleframework/xml/stream/Formatter;.writeText:(Ljava/lang/String;Lorg/simpleframework/xml/stream/Mode;)V` @kind virtual;
  #L45329e.  return @kind void;
}
procedure `void` `writeText`(`org.simpleframework.xml.stream.Formatter` v2 @kind this, `java.lang.String` v3 @kind object, `org.simpleframework.xml.stream.Mode` v4 @kind object) @signature `Lorg/simpleframework/xml/stream/Formatter;.writeText:(Ljava/lang/String;Lorg/simpleframework/xml/stream/Mode;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4532b0.  v0:= v2.`org.simpleframework.xml.stream.Formatter.e` @type ^`org.simpleframework.xml.stream.Formatter$Tag` @kind object;
  #L4532b4.  v1:= `@@org.simpleframework.xml.stream.Formatter$Tag.START` @type ^`org.simpleframework.xml.stream.Formatter$Tag` @kind object;
  #L4532b8.  if v0 != v1 then goto L4532c6;
  #L4532bc.  v0:= 62I;
  #L4532c0.  call `i`(v2, v0) @signature `Lorg/simpleframework/xml/stream/Formatter;.i:(C)V` @kind direct;
  #L4532c6.  v0:= `@@org.simpleframework.xml.stream.Mode.DATA` @type ^`org.simpleframework.xml.stream.Mode` @kind object;
  #L4532ca.  if v4 != v0 then goto L4532d6;
  #L4532ce.  call `d`(v2, v3) @signature `Lorg/simpleframework/xml/stream/Formatter;.d:(Ljava/lang/String;)V` @kind direct;
  #L4532d4.  goto L4532dc;
  #L4532d6.  call `f`(v2, v3) @signature `Lorg/simpleframework/xml/stream/Formatter;.f:(Ljava/lang/String;)V` @kind direct;
  #L4532dc.  v3:= `@@org.simpleframework.xml.stream.Formatter$Tag.TEXT` @type ^`org.simpleframework.xml.stream.Formatter$Tag` @kind object;
  #L4532e0.  v2.`org.simpleframework.xml.stream.Formatter.e` @type ^`org.simpleframework.xml.stream.Formatter$Tag` := v3 @kind object;
  #L4532e4.  return @kind void;
}
