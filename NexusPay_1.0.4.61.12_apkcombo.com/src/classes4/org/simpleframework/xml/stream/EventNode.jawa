record `org.simpleframework.xml.stream.EventNode` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `java.lang.Iterable` @kind interface {
}
procedure `int` `getLine`() @signature `Lorg/simpleframework/xml/stream/EventNode;.getLine:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getName`() @signature `Lorg/simpleframework/xml/stream/EventNode;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getPrefix`() @signature `Lorg/simpleframework/xml/stream/EventNode;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getReference`() @signature `Lorg/simpleframework/xml/stream/EventNode;.getReference:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `getSource`() @signature `Lorg/simpleframework/xml/stream/EventNode;.getSource:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getValue`() @signature `Lorg/simpleframework/xml/stream/EventNode;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isEnd`() @signature `Lorg/simpleframework/xml/stream/EventNode;.isEnd:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isStart`() @signature `Lorg/simpleframework/xml/stream/EventNode;.isStart:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isText`() @signature `Lorg/simpleframework/xml/stream/EventNode;.isText:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
