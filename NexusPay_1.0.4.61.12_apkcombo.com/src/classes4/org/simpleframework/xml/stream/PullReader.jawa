record `org.simpleframework.xml.stream.PullReader` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.stream.EventReader` @kind interface {
  `org.xmlpull.v1.XmlPullParser` `org.simpleframework.xml.stream.PullReader.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.EventNode` `org.simpleframework.xml.stream.PullReader.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.PullReader` v0 @kind this, `org.xmlpull.v1.XmlPullParser` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/PullReader;.<init>:(Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L455e40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L455e46.  v0.`org.simpleframework.xml.stream.PullReader.a` @type ^`org.xmlpull.v1.XmlPullParser` := v1 @kind object;
  #L455e4a.  return @kind void;
}
procedure `org.simpleframework.xml.stream.PullReader$Entry` `a`(`org.simpleframework.xml.stream.PullReader` v2 @kind this, `int` v3 ) @signature `Lorg/simpleframework/xml/stream/PullReader;.a:(I)Lorg/simpleframework/xml/stream/PullReader$Entry;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L455d88.  v0:= new `org.simpleframework.xml.stream.PullReader$Entry`;
  #L455d8c.  v1:= v2.`org.simpleframework.xml.stream.PullReader.a` @type ^`org.xmlpull.v1.XmlPullParser` @kind object;
  #L455d90.  call `<init>`(v0, v1, v3) @signature `Lorg/simpleframework/xml/stream/PullReader$Entry;.<init>:(Lorg/xmlpull/v1/XmlPullParser;I)V` @kind direct;
  #L455d96.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.PullReader$Start` `b`(`org.simpleframework.xml.stream.PullReader` v4 @kind this, `org.simpleframework.xml.stream.PullReader$Start` v5 @kind object) @signature `Lorg/simpleframework/xml/stream/PullReader;.b:(Lorg/simpleframework/xml/stream/PullReader$Start;)Lorg/simpleframework/xml/stream/PullReader$Start;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L455da8.  v0:= v4.`org.simpleframework.xml.stream.PullReader.a` @type ^`org.xmlpull.v1.XmlPullParser` @kind object;
  #L455dac.  call temp:= `getAttributeCount`(v0) @signature `Lorg/xmlpull/v1/XmlPullParser;.getAttributeCount:()I` @kind interface;
  #L455db2.  v0:= temp;
  #L455db4.  v1:= 0I;
  #L455db6.  if v1 >= v0 then goto L455dda;
  #L455dba.  call temp:= `a`(v4, v1) @signature `Lorg/simpleframework/xml/stream/PullReader;.a:(I)Lorg/simpleframework/xml/stream/PullReader$Entry;` @kind direct;
  #L455dc0.  v2:= temp @kind object;
  #L455dc2.  call temp:= `isReserved`(v2) @signature `Lorg/simpleframework/xml/stream/PullReader$Entry;.isReserved:()Z` @kind virtual;
  #L455dc8.  v3:= temp;
  #L455dca.  if v3 != 0 then goto L455dd4;
  #L455dce.  call temp:= `add`(v5, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L455dd4.  v1:= v1 + 1;
  #L455dd8.  goto L455db6;
  #L455dda.  return v5 @kind object;
}
procedure `org.simpleframework.xml.stream.PullReader$End` `c`(`org.simpleframework.xml.stream.PullReader` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/PullReader;.c:()Lorg/simpleframework/xml/stream/PullReader$End;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L455d68.  v0:= new `org.simpleframework.xml.stream.PullReader$End`;
  #L455d6c.  v1:= 0I;
  #L455d6e.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/stream/PullReader$End;.<init>:(Lorg/simpleframework/xml/stream/PullReader$1;)V` @kind direct;
  #L455d74.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.EventNode` `d`(`org.simpleframework.xml.stream.PullReader` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/PullReader;.d:()Lorg/simpleframework/xml/stream/EventNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L455d08.  v0:= v2.`org.simpleframework.xml.stream.PullReader.a` @type ^`org.xmlpull.v1.XmlPullParser` @kind object;
  #L455d0c.  call temp:= `next`(v0) @signature `Lorg/xmlpull/v1/XmlPullParser;.next:()I` @kind interface;
  #L455d12.  v0:= temp;
  #L455d14.  v1:= 1I;
  #L455d16.  if v0 == v1 then goto L455d54;
  #L455d1a.  v1:= 2I;
  #L455d1c.  if v0 != v1 then goto L455d2a;
  #L455d20.  call temp:= `e`(v2) @signature `Lorg/simpleframework/xml/stream/PullReader;.e:()Lorg/simpleframework/xml/stream/PullReader$Start;` @kind direct;
  #L455d26.  v0:= temp @kind object;
  #L455d28.  return v0 @kind object;
  #L455d2a.  v1:= 4I;
  #L455d2c.  if v0 != v1 then goto L455d3a;
  #L455d30.  call temp:= `f`(v2) @signature `Lorg/simpleframework/xml/stream/PullReader;.f:()Lorg/simpleframework/xml/stream/PullReader$Text;` @kind direct;
  #L455d36.  v0:= temp @kind object;
  #L455d38.  return v0 @kind object;
  #L455d3a.  v1:= 3I;
  #L455d3c.  if v0 != v1 then goto L455d4a;
  #L455d40.  call temp:= `c`(v2) @signature `Lorg/simpleframework/xml/stream/PullReader;.c:()Lorg/simpleframework/xml/stream/PullReader$End;` @kind direct;
  #L455d46.  v0:= temp @kind object;
  #L455d48.  return v0 @kind object;
  #L455d4a.  call temp:= `d`(v2) @signature `Lorg/simpleframework/xml/stream/PullReader;.d:()Lorg/simpleframework/xml/stream/EventNode;` @kind direct;
  #L455d50.  v0:= temp @kind object;
  #L455d52.  return v0 @kind object;
  #L455d54.  v0:= 0I;
  #L455d56.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.PullReader$Start` `e`(`org.simpleframework.xml.stream.PullReader` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/PullReader;.e:()Lorg/simpleframework/xml/stream/PullReader$Start;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L455dec.  v0:= new `org.simpleframework.xml.stream.PullReader$Start`;
  #L455df0.  v1:= v2.`org.simpleframework.xml.stream.PullReader.a` @type ^`org.xmlpull.v1.XmlPullParser` @kind object;
  #L455df4.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/stream/PullReader$Start;.<init>:(Lorg/xmlpull/v1/XmlPullParser;)V` @kind direct;
  #L455dfa.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L455e00.  v1:= temp;
  #L455e02.  if v1 == 0 then goto L455e0c;
  #L455e06.  call temp:= `b`(v2, v0) @signature `Lorg/simpleframework/xml/stream/PullReader;.b:(Lorg/simpleframework/xml/stream/PullReader$Start;)Lorg/simpleframework/xml/stream/PullReader$Start;` @kind direct;
  #L455e0c.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.PullReader$Text` `f`(`org.simpleframework.xml.stream.PullReader` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/PullReader;.f:()Lorg/simpleframework/xml/stream/PullReader$Text;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L455e20.  v0:= new `org.simpleframework.xml.stream.PullReader$Text`;
  #L455e24.  v1:= v2.`org.simpleframework.xml.stream.PullReader.a` @type ^`org.xmlpull.v1.XmlPullParser` @kind object;
  #L455e28.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/stream/PullReader$Text;.<init>:(Lorg/xmlpull/v1/XmlPullParser;)V` @kind direct;
  #L455e2e.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.EventNode` `next`(`org.simpleframework.xml.stream.PullReader` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/PullReader;.next:()Lorg/simpleframework/xml/stream/EventNode;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L455cb0.  v0:= v2.`org.simpleframework.xml.stream.PullReader.b` @type ^`org.simpleframework.xml.stream.EventNode` @kind object;
  #L455cb4.  if v0 != 0 then goto L455cc2;
  #L455cb8.  call temp:= `d`(v2) @signature `Lorg/simpleframework/xml/stream/PullReader;.d:()Lorg/simpleframework/xml/stream/EventNode;` @kind direct;
  #L455cbe.  v0:= temp @kind object;
  #L455cc0.  goto L455cc8;
  #L455cc2.  v1:= 0I;
  #L455cc4.  v2.`org.simpleframework.xml.stream.PullReader.b` @type ^`org.simpleframework.xml.stream.EventNode` := v1 @kind object;
  #L455cc8.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.EventNode` `peek`(`org.simpleframework.xml.stream.PullReader` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/PullReader;.peek:()Lorg/simpleframework/xml/stream/EventNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L455cdc.  v0:= v1.`org.simpleframework.xml.stream.PullReader.b` @type ^`org.simpleframework.xml.stream.EventNode` @kind object;
  #L455ce0.  if v0 != 0 then goto L455cf0;
  #L455ce4.  call temp:= `next`(v1) @signature `Lorg/simpleframework/xml/stream/PullReader;.next:()Lorg/simpleframework/xml/stream/EventNode;` @kind virtual;
  #L455cea.  v0:= temp @kind object;
  #L455cec.  v1.`org.simpleframework.xml.stream.PullReader.b` @type ^`org.simpleframework.xml.stream.EventNode` := v0 @kind object;
  #L455cf0.  v0:= v1.`org.simpleframework.xml.stream.PullReader.b` @type ^`org.simpleframework.xml.stream.EventNode` @kind object;
  #L455cf4.  return v0 @kind object;
}
