record `org.simpleframework.xml.stream.InputNodeMap` @kind class @AccessFlag PUBLIC extends `java.util.LinkedHashMap` @kind class, `org.simpleframework.xml.stream.NodeMap` @kind interface {
  `org.simpleframework.xml.stream.InputNode` `org.simpleframework.xml.stream.InputNodeMap.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.InputNodeMap` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.<init>:(Lorg/simpleframework/xml/stream/InputNode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L453e80.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L453e86.  v0.`org.simpleframework.xml.stream.InputNodeMap.a` @type ^`org.simpleframework.xml.stream.InputNode` := v1 @kind object;
  #L453e8a.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.InputNodeMap` v0 @kind this, `org.simpleframework.xml.stream.InputNode` v1 @kind object, `org.simpleframework.xml.stream.EventNode` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.<init>:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/stream/EventNode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L453e9c.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L453ea2.  v0.`org.simpleframework.xml.stream.InputNodeMap.a` @type ^`org.simpleframework.xml.stream.InputNode` := v1 @kind object;
  #L453ea6.  call `b`(v0, v2) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.b:(Lorg/simpleframework/xml/stream/EventNode;)V` @kind direct;
  #L453eac.  return @kind void;
}
procedure `void` `b`(`org.simpleframework.xml.stream.InputNodeMap` v3 @kind this, `org.simpleframework.xml.stream.EventNode` v4 @kind object) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.b:(Lorg/simpleframework/xml/stream/EventNode;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L453ec0.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L453ec6.  v4:= temp @kind object;
  #L453ec8.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L453ece.  v0:= temp;
  #L453ed0.  if v0 == 0 then goto L453f0a;
  #L453ed4.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L453eda.  v0:= temp @kind object;
  #L453edc.  v0:= (`org.simpleframework.xml.stream.Attribute`) v0 @kind object;
  #L453ee0.  v1:= new `org.simpleframework.xml.stream.InputAttribute`;
  #L453ee4.  v2:= v3.`org.simpleframework.xml.stream.InputNodeMap.a` @type ^`org.simpleframework.xml.stream.InputNode` @kind object;
  #L453ee8.  call `<init>`(v1, v2, v0) @signature `Lorg/simpleframework/xml/stream/InputAttribute;.<init>:(Lorg/simpleframework/xml/stream/InputNode;Lorg/simpleframework/xml/stream/Attribute;)V` @kind direct;
  #L453eee.  call temp:= `isReserved`(v0) @signature `Lorg/simpleframework/xml/stream/Attribute;.isReserved:()Z` @kind interface;
  #L453ef4.  v0:= temp;
  #L453ef6.  if v0 != 0 then goto L453ec8;
  #L453efa.  call temp:= `getName`(v1) @signature `Lorg/simpleframework/xml/stream/InputAttribute;.getName:()Ljava/lang/String;` @kind virtual;
  #L453f00.  v0:= temp @kind object;
  #L453f02.  call temp:= `put`(v3, v0, v1) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L453f08.  goto L453ec8;
  #L453f0a.  return @kind void;
}
procedure `org.simpleframework.xml.stream.InputNode` `get`(`org.simpleframework.xml.stream.InputNodeMap` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.get:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @AccessFlag PUBLIC {
    temp;

  #L453d8c.  call temp:= `get`(v0, v1) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L453d92.  v1:= temp @kind object;
  #L453d94.  v1:= (`org.simpleframework.xml.stream.InputNode`) v1 @kind object;
  #L453d98.  return v1 @kind object;
}
procedure `org.simpleframework.xml.stream.Node` `get`(`org.simpleframework.xml.stream.InputNodeMap` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.get:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L453e10.  call temp:= `get`(v0, v1) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.get:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind virtual;
  #L453e16.  v1:= temp @kind object;
  #L453e18.  return v1 @kind object;
}
procedure `java.lang.String` `getName`(`org.simpleframework.xml.stream.InputNodeMap` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L453d48.  v0:= v1.`org.simpleframework.xml.stream.InputNodeMap.a` @type ^`org.simpleframework.xml.stream.InputNode` @kind object;
  #L453d4c.  call temp:= `getName`(v0) @signature `Lorg/simpleframework/xml/stream/Node;.getName:()Ljava/lang/String;` @kind interface;
  #L453d52.  v0:= temp @kind object;
  #L453d54.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.InputNode` `getNode`(`org.simpleframework.xml.stream.InputNodeMap` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.getNode:()Lorg/simpleframework/xml/stream/InputNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L453dac.  v0:= v1.`org.simpleframework.xml.stream.InputNodeMap.a` @type ^`org.simpleframework.xml.stream.InputNode` @kind object;
  #L453db0.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.Node` `getNode`(`org.simpleframework.xml.stream.InputNodeMap` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.getNode:()Lorg/simpleframework/xml/stream/Node;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L453e2c.  call temp:= `getNode`(v1) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.getNode:()Lorg/simpleframework/xml/stream/InputNode;` @kind virtual;
  #L453e32.  v0:= temp @kind object;
  #L453e34.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`org.simpleframework.xml.stream.InputNodeMap` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L453d68.  call temp:= `keySet`(v1) @signature `Ljava/util/LinkedHashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L453d6e.  v0:= temp @kind object;
  #L453d70.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L453d76.  v0:= temp @kind object;
  #L453d78.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.InputNode` `put`(`org.simpleframework.xml.stream.InputNodeMap` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L453dc4.  v0:= new `org.simpleframework.xml.stream.InputAttribute`;
  #L453dc8.  v1:= v2.`org.simpleframework.xml.stream.InputNodeMap.a` @type ^`org.simpleframework.xml.stream.InputNode` @kind object;
  #L453dcc.  call `<init>`(v0, v1, v3, v4) @signature `Lorg/simpleframework/xml/stream/InputAttribute;.<init>:(Lorg/simpleframework/xml/stream/InputNode;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L453dd2.  if v3 == 0 then goto L453ddc;
  #L453dd6.  call temp:= `put`(v2, v3, v0) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L453ddc.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.Node` `put`(`org.simpleframework.xml.stream.InputNodeMap` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L453e48.  call temp:= `put`(v0, v1, v2) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind virtual;
  #L453e4e.  v1:= temp @kind object;
  #L453e50.  return v1 @kind object;
}
procedure `org.simpleframework.xml.stream.InputNode` `remove`(`org.simpleframework.xml.stream.InputNodeMap` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.remove:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @AccessFlag PUBLIC {
    temp;

  #L453df0.  call temp:= `remove`(v0, v1) @signature `Ljava/util/HashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L453df6.  v1:= temp @kind object;
  #L453df8.  v1:= (`org.simpleframework.xml.stream.InputNode`) v1 @kind object;
  #L453dfc.  return v1 @kind object;
}
procedure `org.simpleframework.xml.stream.Node` `remove`(`org.simpleframework.xml.stream.InputNodeMap` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.remove:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L453e64.  call temp:= `remove`(v0, v1) @signature `Lorg/simpleframework/xml/stream/InputNodeMap;.remove:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/InputNode;` @kind virtual;
  #L453e6a.  v1:= temp @kind object;
  #L453e6c.  return v1 @kind object;
}
