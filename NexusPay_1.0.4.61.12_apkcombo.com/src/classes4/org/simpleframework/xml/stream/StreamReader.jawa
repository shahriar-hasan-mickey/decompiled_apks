record `org.simpleframework.xml.stream.StreamReader` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.stream.EventReader` @kind interface {
  `javax.xml.stream.XMLEventReader` `org.simpleframework.xml.stream.StreamReader.a` @AccessFlag PRIVATE;
  `org.simpleframework.xml.stream.EventNode` `org.simpleframework.xml.stream.StreamReader.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.stream.StreamReader` v0 @kind this, `javax.xml.stream.XMLEventReader` v1 @kind object) @signature `Lorg/simpleframework/xml/stream/StreamReader;.<init>:(Ljavax/xml/stream/XMLEventReader;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4566a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4566a6.  v0.`org.simpleframework.xml.stream.StreamReader.a` @type ^`javax.xml.stream.XMLEventReader` := v1 @kind object;
  #L4566aa.  return @kind void;
}
procedure `org.simpleframework.xml.stream.StreamReader$Entry` `a`(`org.simpleframework.xml.stream.StreamReader` v1 @kind this, `javax.xml.stream.events.Attribute` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/StreamReader;.a:(Ljavax/xml/stream/events/Attribute;)Lorg/simpleframework/xml/stream/StreamReader$Entry;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4565e8.  v0:= new `org.simpleframework.xml.stream.StreamReader$Entry`;
  #L4565ec.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/stream/StreamReader$Entry;.<init>:(Ljavax/xml/stream/events/Attribute;)V` @kind direct;
  #L4565f2.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.StreamReader$Start` `b`(`org.simpleframework.xml.stream.StreamReader` v3 @kind this, `org.simpleframework.xml.stream.StreamReader$Start` v4 @kind object) @signature `Lorg/simpleframework/xml/stream/StreamReader;.b:(Lorg/simpleframework/xml/stream/StreamReader$Start;)Lorg/simpleframework/xml/stream/StreamReader$Start;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L456604.  call temp:= `getAttributes`(v4) @signature `Lorg/simpleframework/xml/stream/StreamReader$Start;.getAttributes:()Ljava/util/Iterator;` @kind virtual;
  #L45660a.  v0:= temp @kind object;
  #L45660c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L456612.  v1:= temp;
  #L456614.  if v1 == 0 then goto L456640;
  #L456618.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L45661e.  v1:= temp @kind object;
  #L456620.  v1:= (`javax.xml.stream.events.Attribute`) v1 @kind object;
  #L456624.  call temp:= `a`(v3, v1) @signature `Lorg/simpleframework/xml/stream/StreamReader;.a:(Ljavax/xml/stream/events/Attribute;)Lorg/simpleframework/xml/stream/StreamReader$Entry;` @kind direct;
  #L45662a.  v1:= temp @kind object;
  #L45662c.  call temp:= `isReserved`(v1) @signature `Lorg/simpleframework/xml/stream/StreamReader$Entry;.isReserved:()Z` @kind virtual;
  #L456632.  v2:= temp;
  #L456634.  if v2 != 0 then goto L45660c;
  #L456638.  call temp:= `add`(v4, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L45663e.  goto L45660c;
  #L456640.  return v4 @kind object;
}
procedure `org.simpleframework.xml.stream.StreamReader$End` `c`(`org.simpleframework.xml.stream.StreamReader` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/StreamReader;.c:()Lorg/simpleframework/xml/stream/StreamReader$End;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4565c8.  v0:= new `org.simpleframework.xml.stream.StreamReader$End`;
  #L4565cc.  v1:= 0I;
  #L4565ce.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/stream/StreamReader$End;.<init>:(Lorg/simpleframework/xml/stream/StreamReader$1;)V` @kind direct;
  #L4565d4.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.EventNode` `d`(`org.simpleframework.xml.stream.StreamReader` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/StreamReader;.d:()Lorg/simpleframework/xml/stream/EventNode;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L456550.  v0:= v2.`org.simpleframework.xml.stream.StreamReader.a` @type ^`javax.xml.stream.XMLEventReader` @kind object;
  #L456554.  call temp:= `nextEvent`(v0) @signature `Ljavax/xml/stream/XMLEventReader;.nextEvent:()Ljavax/xml/stream/events/XMLEvent;` @kind interface;
  #L45655a.  v0:= temp @kind object;
  #L45655c.  call temp:= `isEndDocument`(v0) @signature `Ljavax/xml/stream/events/XMLEvent;.isEndDocument:()Z` @kind interface;
  #L456562.  v1:= temp;
  #L456564.  if v1 != 0 then goto L4565b4;
  #L456568.  call temp:= `isStartElement`(v0) @signature `Ljavax/xml/stream/events/XMLEvent;.isStartElement:()Z` @kind interface;
  #L45656e.  v1:= temp;
  #L456570.  if v1 == 0 then goto L45657e;
  #L456574.  call temp:= `e`(v2, v0) @signature `Lorg/simpleframework/xml/stream/StreamReader;.e:(Ljavax/xml/stream/events/XMLEvent;)Lorg/simpleframework/xml/stream/StreamReader$Start;` @kind direct;
  #L45657a.  v0:= temp @kind object;
  #L45657c.  return v0 @kind object;
  #L45657e.  call temp:= `isCharacters`(v0) @signature `Ljavax/xml/stream/events/XMLEvent;.isCharacters:()Z` @kind interface;
  #L456584.  v1:= temp;
  #L456586.  if v1 == 0 then goto L456594;
  #L45658a.  call temp:= `f`(v2, v0) @signature `Lorg/simpleframework/xml/stream/StreamReader;.f:(Ljavax/xml/stream/events/XMLEvent;)Lorg/simpleframework/xml/stream/StreamReader$Text;` @kind direct;
  #L456590.  v0:= temp @kind object;
  #L456592.  return v0 @kind object;
  #L456594.  call temp:= `isEndElement`(v0) @signature `Ljavax/xml/stream/events/XMLEvent;.isEndElement:()Z` @kind interface;
  #L45659a.  v0:= temp;
  #L45659c.  if v0 == 0 then goto L4565aa;
  #L4565a0.  call temp:= `c`(v2) @signature `Lorg/simpleframework/xml/stream/StreamReader;.c:()Lorg/simpleframework/xml/stream/StreamReader$End;` @kind direct;
  #L4565a6.  v0:= temp @kind object;
  #L4565a8.  return v0 @kind object;
  #L4565aa.  call temp:= `d`(v2) @signature `Lorg/simpleframework/xml/stream/StreamReader;.d:()Lorg/simpleframework/xml/stream/EventNode;` @kind direct;
  #L4565b0.  v0:= temp @kind object;
  #L4565b2.  return v0 @kind object;
  #L4565b4.  v0:= 0I;
  #L4565b6.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.StreamReader$Start` `e`(`org.simpleframework.xml.stream.StreamReader` v1 @kind this, `javax.xml.stream.events.XMLEvent` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/StreamReader;.e:(Ljavax/xml/stream/events/XMLEvent;)Lorg/simpleframework/xml/stream/StreamReader$Start;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L456654.  v0:= new `org.simpleframework.xml.stream.StreamReader$Start`;
  #L456658.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/stream/StreamReader$Start;.<init>:(Ljavax/xml/stream/events/XMLEvent;)V` @kind direct;
  #L45665e.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L456664.  v2:= temp;
  #L456666.  if v2 == 0 then goto L456670;
  #L45666a.  call temp:= `b`(v1, v0) @signature `Lorg/simpleframework/xml/stream/StreamReader;.b:(Lorg/simpleframework/xml/stream/StreamReader$Start;)Lorg/simpleframework/xml/stream/StreamReader$Start;` @kind direct;
  #L456670.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.StreamReader$Text` `f`(`org.simpleframework.xml.stream.StreamReader` v1 @kind this, `javax.xml.stream.events.XMLEvent` v2 @kind object) @signature `Lorg/simpleframework/xml/stream/StreamReader;.f:(Ljavax/xml/stream/events/XMLEvent;)Lorg/simpleframework/xml/stream/StreamReader$Text;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L456684.  v0:= new `org.simpleframework.xml.stream.StreamReader$Text`;
  #L456688.  call `<init>`(v0, v2) @signature `Lorg/simpleframework/xml/stream/StreamReader$Text;.<init>:(Ljavax/xml/stream/events/XMLEvent;)V` @kind direct;
  #L45668e.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.EventNode` `next`(`org.simpleframework.xml.stream.StreamReader` v2 @kind this) @signature `Lorg/simpleframework/xml/stream/StreamReader;.next:()Lorg/simpleframework/xml/stream/EventNode;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4564f8.  v0:= v2.`org.simpleframework.xml.stream.StreamReader.b` @type ^`org.simpleframework.xml.stream.EventNode` @kind object;
  #L4564fc.  if v0 != 0 then goto L45650a;
  #L456500.  call temp:= `d`(v2) @signature `Lorg/simpleframework/xml/stream/StreamReader;.d:()Lorg/simpleframework/xml/stream/EventNode;` @kind direct;
  #L456506.  v0:= temp @kind object;
  #L456508.  goto L456510;
  #L45650a.  v1:= 0I;
  #L45650c.  v2.`org.simpleframework.xml.stream.StreamReader.b` @type ^`org.simpleframework.xml.stream.EventNode` := v1 @kind object;
  #L456510.  return v0 @kind object;
}
procedure `org.simpleframework.xml.stream.EventNode` `peek`(`org.simpleframework.xml.stream.StreamReader` v1 @kind this) @signature `Lorg/simpleframework/xml/stream/StreamReader;.peek:()Lorg/simpleframework/xml/stream/EventNode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L456524.  v0:= v1.`org.simpleframework.xml.stream.StreamReader.b` @type ^`org.simpleframework.xml.stream.EventNode` @kind object;
  #L456528.  if v0 != 0 then goto L456538;
  #L45652c.  call temp:= `next`(v1) @signature `Lorg/simpleframework/xml/stream/StreamReader;.next:()Lorg/simpleframework/xml/stream/EventNode;` @kind virtual;
  #L456532.  v0:= temp @kind object;
  #L456534.  v1.`org.simpleframework.xml.stream.StreamReader.b` @type ^`org.simpleframework.xml.stream.EventNode` := v0 @kind object;
  #L456538.  v0:= v1.`org.simpleframework.xml.stream.StreamReader.b` @type ^`org.simpleframework.xml.stream.EventNode` @kind object;
  #L45653c.  return v0 @kind object;
}
