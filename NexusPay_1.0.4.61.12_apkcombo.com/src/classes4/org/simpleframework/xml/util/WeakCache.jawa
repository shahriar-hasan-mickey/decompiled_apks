record `org.simpleframework.xml.util.WeakCache` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.util.Cache` @kind interface {
  `org.simpleframework.xml.util.WeakCache$SegmentList` `org.simpleframework.xml.util.WeakCache.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.simpleframework.xml.util.WeakCache` v1 @kind this) @signature `Lorg/simpleframework/xml/util/WeakCache;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L458f4c.  v0:= 10I;
  #L458f50.  call `<init>`(v1, v0) @signature `Lorg/simpleframework/xml/util/WeakCache;.<init>:(I)V` @kind direct;
  #L458f56.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.util.WeakCache` v1 @kind this, `int` v2 ) @signature `Lorg/simpleframework/xml/util/WeakCache;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L458f68.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L458f6e.  v0:= new `org.simpleframework.xml.util.WeakCache$SegmentList`;
  #L458f72.  call `<init>`(v0, v1, v2) @signature `Lorg/simpleframework/xml/util/WeakCache$SegmentList;.<init>:(Lorg/simpleframework/xml/util/WeakCache;I)V` @kind direct;
  #L458f78.  v1.`org.simpleframework.xml.util.WeakCache.a` @type ^`org.simpleframework.xml.util.WeakCache$SegmentList` := v0 @kind object;
  #L458f7c.  return @kind void;
}
procedure `org.simpleframework.xml.util.WeakCache$Segment` `a`(`org.simpleframework.xml.util.WeakCache` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache;.a:(Ljava/lang/Object;)Lorg/simpleframework/xml/util/WeakCache$Segment;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L458f2c.  v0:= v1.`org.simpleframework.xml.util.WeakCache.a` @type ^`org.simpleframework.xml.util.WeakCache$SegmentList` @kind object;
  #L458f30.  call temp:= `get`(v0, v2) @signature `Lorg/simpleframework/xml/util/WeakCache$SegmentList;.get:(Ljava/lang/Object;)Lorg/simpleframework/xml/util/WeakCache$Segment;` @kind virtual;
  #L458f36.  v2:= temp @kind object;
  #L458f38.  return v2 @kind object;
}
procedure `void` `cache`(`org.simpleframework.xml.util.WeakCache` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache;.cache:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L458f90.  call temp:= `a`(v1, v2) @signature `Lorg/simpleframework/xml/util/WeakCache;.a:(Ljava/lang/Object;)Lorg/simpleframework/xml/util/WeakCache$Segment;` @kind direct;
  #L458f96.  v0:= temp @kind object;
  #L458f98.  call `cache`(v0, v2, v3) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.cache:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L458f9e.  return @kind void;
}
procedure `boolean` `contains`(`org.simpleframework.xml.util.WeakCache` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L458e78.  call temp:= `a`(v1, v2) @signature `Lorg/simpleframework/xml/util/WeakCache;.a:(Ljava/lang/Object;)Lorg/simpleframework/xml/util/WeakCache$Segment;` @kind direct;
  #L458e7e.  v0:= temp @kind object;
  #L458e80.  call temp:= `contains`(v0, v2) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L458e86.  v2:= temp;
  #L458e88.  return v2;
}
procedure `java.lang.Object` `fetch`(`org.simpleframework.xml.util.WeakCache` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache;.fetch:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L458ee4.  call temp:= `a`(v1, v2) @signature `Lorg/simpleframework/xml/util/WeakCache;.a:(Ljava/lang/Object;)Lorg/simpleframework/xml/util/WeakCache$Segment;` @kind direct;
  #L458eea.  v0:= temp @kind object;
  #L458eec.  call temp:= `fetch`(v0, v2) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.fetch:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L458ef2.  v2:= temp @kind object;
  #L458ef4.  return v2 @kind object;
}
procedure `boolean` `isEmpty`(`org.simpleframework.xml.util.WeakCache` v2 @kind this) @signature `Lorg/simpleframework/xml/util/WeakCache;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L458e9c.  v0:= v2.`org.simpleframework.xml.util.WeakCache.a` @type ^`org.simpleframework.xml.util.WeakCache$SegmentList` @kind object;
  #L458ea0.  call temp:= `iterator`(v0) @signature `Lorg/simpleframework/xml/util/WeakCache$SegmentList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L458ea6.  v0:= temp @kind object;
  #L458ea8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L458eae.  v1:= temp;
  #L458eb0.  if v1 == 0 then goto L458ed0;
  #L458eb4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L458eba.  v1:= temp @kind object;
  #L458ebc.  v1:= (`org.simpleframework.xml.util.WeakCache$Segment`) v1 @kind object;
  #L458ec0.  call temp:= `isEmpty`(v1) @signature `Ljava/util/WeakHashMap;.isEmpty:()Z` @kind virtual;
  #L458ec6.  v1:= temp;
  #L458ec8.  if v1 != 0 then goto L458ea8;
  #L458ecc.  v0:= 0I;
  #L458ece.  return v0;
  #L458ed0.  v0:= 1I;
  #L458ed2.  return v0;
}
procedure `java.lang.Object` `take`(`org.simpleframework.xml.util.WeakCache` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/simpleframework/xml/util/WeakCache;.take:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L458f08.  call temp:= `a`(v1, v2) @signature `Lorg/simpleframework/xml/util/WeakCache;.a:(Ljava/lang/Object;)Lorg/simpleframework/xml/util/WeakCache$Segment;` @kind direct;
  #L458f0e.  v0:= temp @kind object;
  #L458f10.  call temp:= `take`(v0, v2) @signature `Lorg/simpleframework/xml/util/WeakCache$Segment;.take:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L458f16.  v2:= temp @kind object;
  #L458f18.  return v2 @kind object;
}
