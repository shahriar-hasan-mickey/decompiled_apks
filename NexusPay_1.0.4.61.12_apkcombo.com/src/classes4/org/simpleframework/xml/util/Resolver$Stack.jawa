record `org.simpleframework.xml.util.Resolver$Stack` @kind class @AccessFlag PUBLIC extends `java.util.LinkedList` @kind class {
  `org.simpleframework.xml.util.Resolver` `org.simpleframework.xml.util.Resolver$Stack.this$0` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.simpleframework.xml.util.Resolver$Stack` v0 @kind this, `org.simpleframework.xml.util.Resolver` v1 @kind object) @signature `Lorg/simpleframework/xml/util/Resolver$Stack;.<init>:(Lorg/simpleframework/xml/util/Resolver;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4588f0.  v0.`org.simpleframework.xml.util.Resolver$Stack.this$0` @type ^`org.simpleframework.xml.util.Resolver` := v1 @kind object;
  #L4588f4.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L4588fa.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.util.Resolver$Stack` v0 @kind this, `org.simpleframework.xml.util.Resolver` v1 @kind object, `org.simpleframework.xml.util.Resolver$1` v2 @kind object) @signature `Lorg/simpleframework/xml/util/Resolver$Stack;.<init>:(Lorg/simpleframework/xml/util/Resolver;Lorg/simpleframework/xml/util/Resolver$1;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L45890c.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/util/Resolver$Stack;.<init>:(Lorg/simpleframework/xml/util/Resolver;)V` @kind direct;
  #L458912.  return @kind void;
}
procedure `void` `purge`(`org.simpleframework.xml.util.Resolver$Stack` v1 @kind this, `int` v2 ) @signature `Lorg/simpleframework/xml/util/Resolver$Stack;.purge:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L458924.  v0:= v1.`org.simpleframework.xml.util.Resolver$Stack.this$0` @type ^`org.simpleframework.xml.util.Resolver` @kind object;
  #L458928.  v0:= v0.`org.simpleframework.xml.util.Resolver.cache` @type ^`org.simpleframework.xml.util.Resolver$Cache` @kind object;
  #L45892c.  call `clear`(v0) @signature `Ljava/util/LinkedHashMap;.clear:()V` @kind virtual;
  #L458932.  call temp:= `remove`(v1, v2) @signature `Ljava/util/LinkedList;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L458938.  return @kind void;
}
procedure `void` `push`(`org.simpleframework.xml.util.Resolver$Stack` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/simpleframework/xml/util/Resolver$Stack;.push:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L45894c.  v1:= (`org.simpleframework.xml.util.Match`) v1 @kind object;
  #L458950.  call `push`(v0, v1) @signature `Lorg/simpleframework/xml/util/Resolver$Stack;.push:(Lorg/simpleframework/xml/util/Match;)V` @kind virtual;
  #L458956.  return @kind void;
}
procedure `void` `push`(`org.simpleframework.xml.util.Resolver$Stack` v1 @kind this, `org.simpleframework.xml.util.Match` v2 @kind object) @signature `Lorg/simpleframework/xml/util/Resolver$Stack;.push:(Lorg/simpleframework/xml/util/Match;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L458968.  v0:= v1.`org.simpleframework.xml.util.Resolver$Stack.this$0` @type ^`org.simpleframework.xml.util.Resolver` @kind object;
  #L45896c.  v0:= v0.`org.simpleframework.xml.util.Resolver.cache` @type ^`org.simpleframework.xml.util.Resolver$Cache` @kind object;
  #L458970.  call `clear`(v0) @signature `Ljava/util/LinkedHashMap;.clear:()V` @kind virtual;
  #L458976.  call `addFirst`(v1, v2) @signature `Ljava/util/LinkedList;.addFirst:(Ljava/lang/Object;)V` @kind virtual;
  #L45897c.  return @kind void;
}
procedure `java.util.Iterator` `sequence`(`org.simpleframework.xml.util.Resolver$Stack` v1 @kind this) @signature `Lorg/simpleframework/xml/util/Resolver$Stack;.sequence:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4588d4.  v0:= new `org.simpleframework.xml.util.Resolver$Stack$Sequence`;
  #L4588d8.  call `<init>`(v0, v1) @signature `Lorg/simpleframework/xml/util/Resolver$Stack$Sequence;.<init>:(Lorg/simpleframework/xml/util/Resolver$Stack;)V` @kind direct;
  #L4588de.  return v0 @kind object;
}
