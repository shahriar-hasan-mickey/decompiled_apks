record `org.simpleframework.xml.strategy.WriteGraph` @kind class @AccessFlag PUBLIC extends `java.util.IdentityHashMap` @kind class {
  `java.lang.String` `org.simpleframework.xml.strategy.WriteGraph.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.strategy.WriteGraph.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.strategy.WriteGraph.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.strategy.WriteGraph.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.strategy.WriteGraph` v1 @kind this, `org.simpleframework.xml.strategy.Contract` v2 @kind object) @signature `Lorg/simpleframework/xml/strategy/WriteGraph;.<init>:(Lorg/simpleframework/xml/strategy/Contract;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L452024.  call `<init>`(v1) @signature `Ljava/util/IdentityHashMap;.<init>:()V` @kind direct;
  #L45202a.  call temp:= `getReference`(v2) @signature `Lorg/simpleframework/xml/strategy/Contract;.getReference:()Ljava/lang/String;` @kind virtual;
  #L452030.  v0:= temp @kind object;
  #L452032.  v1.`org.simpleframework.xml.strategy.WriteGraph.d` @type ^`java.lang.String` := v0 @kind object;
  #L452036.  call temp:= `getIdentity`(v2) @signature `Lorg/simpleframework/xml/strategy/Contract;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L45203c.  v0:= temp @kind object;
  #L45203e.  v1.`org.simpleframework.xml.strategy.WriteGraph.c` @type ^`java.lang.String` := v0 @kind object;
  #L452042.  call temp:= `getLength`(v2) @signature `Lorg/simpleframework/xml/strategy/Contract;.getLength:()Ljava/lang/String;` @kind virtual;
  #L452048.  v0:= temp @kind object;
  #L45204a.  v1.`org.simpleframework.xml.strategy.WriteGraph.a` @type ^`java.lang.String` := v0 @kind object;
  #L45204e.  call temp:= `getLabel`(v2) @signature `Lorg/simpleframework/xml/strategy/Contract;.getLabel:()Ljava/lang/String;` @kind virtual;
  #L452054.  v2:= temp @kind object;
  #L452056.  v1.`org.simpleframework.xml.strategy.WriteGraph.b` @type ^`java.lang.String` := v2 @kind object;
  #L45205a.  return @kind void;
}
procedure `java.lang.Class` `b`(`org.simpleframework.xml.strategy.WriteGraph` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.stream.NodeMap` v4 @kind object) @signature `Lorg/simpleframework/xml/strategy/WriteGraph;.b:(Ljava/lang/Class;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Ljava/lang/Class;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L451fe4.  call temp:= `getLength`(v3) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L451fea.  v0:= temp;
  #L451fec.  call temp:= `containsKey`(v1, v3) @signature `Ljava/util/IdentityHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L451ff2.  v3:= temp;
  #L451ff4.  if v3 != 0 then goto L45200a;
  #L451ff8.  v3:= v1.`org.simpleframework.xml.strategy.WriteGraph.a` @type ^`java.lang.String` @kind object;
  #L451ffc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L452002.  v0:= temp @kind object;
  #L452004.  call temp:= `put`(v4, v3, v0) @signature `Lorg/simpleframework/xml/stream/NodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L45200a.  call temp:= `getComponentType`(v2) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L452010.  v2:= temp @kind object;
  #L452012.  return v2 @kind object;
}
procedure `boolean` `c`(`org.simpleframework.xml.strategy.WriteGraph` v2 @kind this, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.stream.NodeMap` v4 @kind object) @signature `Lorg/simpleframework/xml/strategy/WriteGraph;.c:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L451f90.  call temp:= `get`(v2, v3) @signature `Ljava/util/IdentityHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L451f96.  v0:= temp @kind object;
  #L451f98.  v0:= (`java.lang.String`) v0 @kind object;
  #L451f9c.  call temp:= `size`(v2) @signature `Ljava/util/IdentityHashMap;.size:()I` @kind virtual;
  #L451fa2.  v1:= temp;
  #L451fa4.  if v0 == 0 then goto L451fb6;
  #L451fa8.  v3:= v2.`org.simpleframework.xml.strategy.WriteGraph.d` @type ^`java.lang.String` @kind object;
  #L451fac.  call temp:= `put`(v4, v3, v0) @signature `Lorg/simpleframework/xml/stream/NodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L451fb2.  v3:= 1I;
  #L451fb4.  return v3;
  #L451fb6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L451fbc.  v0:= temp @kind object;
  #L451fbe.  v1:= v2.`org.simpleframework.xml.strategy.WriteGraph.c` @type ^`java.lang.String` @kind object;
  #L451fc2.  call temp:= `put`(v4, v1, v0) @signature `Lorg/simpleframework/xml/stream/NodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L451fc8.  call temp:= `put`(v2, v3, v0) @signature `Ljava/util/IdentityHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L451fce.  v3:= 0I;
  #L451fd0.  return v3;
}
procedure `boolean` `write`(`org.simpleframework.xml.strategy.WriteGraph` v2 @kind this, `org.simpleframework.xml.strategy.Type` v3 @kind object, `java.lang.Object` v4 @kind object, `org.simpleframework.xml.stream.NodeMap` v5 @kind object) @signature `Lorg/simpleframework/xml/strategy/WriteGraph;.write:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L451f38.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L451f3e.  v0:= temp @kind object;
  #L451f40.  call temp:= `getType`(v3) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L451f46.  v3:= temp @kind object;
  #L451f48.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L451f4e.  v1:= temp;
  #L451f50.  if v1 == 0 then goto L451f5e;
  #L451f54.  call temp:= `b`(v2, v0, v4, v5) @signature `Lorg/simpleframework/xml/strategy/WriteGraph;.b:(Ljava/lang/Class;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Ljava/lang/Class;` @kind direct;
  #L451f5a.  v1:= temp @kind object;
  #L451f5c.  goto L451f60;
  #L451f5e.  v1:= v0 @kind object;
  #L451f60.  if v0 == v3 then goto L451f76;
  #L451f64.  v3:= v2.`org.simpleframework.xml.strategy.WriteGraph.b` @type ^`java.lang.String` @kind object;
  #L451f68.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L451f6e.  v0:= temp @kind object;
  #L451f70.  call temp:= `put`(v5, v3, v0) @signature `Lorg/simpleframework/xml/stream/NodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L451f76.  call temp:= `c`(v2, v4, v5) @signature `Lorg/simpleframework/xml/strategy/WriteGraph;.c:(Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Z` @kind direct;
  #L451f7c.  v3:= temp;
  #L451f7e.  return v3;
}
