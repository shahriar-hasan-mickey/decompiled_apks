record `org.simpleframework.xml.strategy.TreeStrategy` @kind class @AccessFlag PUBLIC extends `org.simpleframework.xml.strategy.Strategy` @kind interface {
  `org.simpleframework.xml.strategy.Loader` `org.simpleframework.xml.strategy.TreeStrategy.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.strategy.TreeStrategy.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.simpleframework.xml.strategy.TreeStrategy.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.simpleframework.xml.strategy.TreeStrategy` v2 @kind this) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L451e4c.  v0:= "class" @kind object;
  #L451e50.  v1:= "length" @kind object;
  #L451e54.  call `<init>`(v2, v0, v1) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L451e5a.  return @kind void;
}
procedure `void` `<init>`(`org.simpleframework.xml.strategy.TreeStrategy` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L451e6c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L451e72.  v0:= new `org.simpleframework.xml.strategy.Loader`;
  #L451e76.  call `<init>`(v0) @signature `Lorg/simpleframework/xml/strategy/Loader;.<init>:()V` @kind direct;
  #L451e7c.  v1.`org.simpleframework.xml.strategy.TreeStrategy.a` @type ^`org.simpleframework.xml.strategy.Loader` := v0 @kind object;
  #L451e80.  v1.`org.simpleframework.xml.strategy.TreeStrategy.b` @type ^`java.lang.String` := v3 @kind object;
  #L451e84.  v1.`org.simpleframework.xml.strategy.TreeStrategy.c` @type ^`java.lang.String` := v2 @kind object;
  #L451e88.  return @kind void;
}
procedure `org.simpleframework.xml.strategy.Value` `a`(`org.simpleframework.xml.strategy.TreeStrategy` v1 @kind this, `java.lang.Class` v2 @kind object, `org.simpleframework.xml.stream.NodeMap` v3 @kind object) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.a:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/NodeMap;)Lorg/simpleframework/xml/strategy/Value;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L451e0c.  v0:= v1.`org.simpleframework.xml.strategy.TreeStrategy.b` @type ^`java.lang.String` @kind object;
  #L451e10.  call temp:= `remove`(v3, v0) @signature `Lorg/simpleframework/xml/stream/NodeMap;.remove:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L451e16.  v3:= temp @kind object;
  #L451e18.  if v3 == 0 then goto L451e2e;
  #L451e1c.  call temp:= `getValue`(v3) @signature `Lorg/simpleframework/xml/stream/Node;.getValue:()Ljava/lang/String;` @kind interface;
  #L451e22.  v3:= temp @kind object;
  #L451e24.  call temp:= `parseInt`(v3) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L451e2a.  v3:= temp;
  #L451e2c.  goto L451e30;
  #L451e2e.  v3:= 0I;
  #L451e30.  v0:= new `org.simpleframework.xml.strategy.ArrayValue`;
  #L451e34.  call `<init>`(v0, v2, v3) @signature `Lorg/simpleframework/xml/strategy/ArrayValue;.<init>:(Ljava/lang/Class;I)V` @kind direct;
  #L451e3a.  return v0 @kind object;
}
procedure `java.lang.Class` `b`(`org.simpleframework.xml.strategy.TreeStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Type` v2 @kind object, `org.simpleframework.xml.stream.NodeMap` v3 @kind object) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.b:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;)Ljava/lang/Class;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L451d34.  v0:= v1.`org.simpleframework.xml.strategy.TreeStrategy.c` @type ^`java.lang.String` @kind object;
  #L451d38.  call temp:= `remove`(v3, v0) @signature `Lorg/simpleframework/xml/stream/NodeMap;.remove:(Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L451d3e.  v3:= temp @kind object;
  #L451d40.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L451d46.  v2:= temp @kind object;
  #L451d48.  call temp:= `isArray`(v2) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L451d4e.  v0:= temp;
  #L451d50.  if v0 == 0 then goto L451d5c;
  #L451d54.  call temp:= `getComponentType`(v2) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L451d5a.  v2:= temp @kind object;
  #L451d5c.  if v3 == 0 then goto L451d74;
  #L451d60.  call temp:= `getValue`(v3) @signature `Lorg/simpleframework/xml/stream/Node;.getValue:()Ljava/lang/String;` @kind interface;
  #L451d66.  v2:= temp @kind object;
  #L451d68.  v3:= v1.`org.simpleframework.xml.strategy.TreeStrategy.a` @type ^`org.simpleframework.xml.strategy.Loader` @kind object;
  #L451d6c.  call temp:= `load`(v3, v2) @signature `Lorg/simpleframework/xml/strategy/Loader;.load:(Ljava/lang/String;)Ljava/lang/Class;` @kind virtual;
  #L451d72.  v2:= temp @kind object;
  #L451d74.  return v2 @kind object;
}
procedure `java.lang.Class` `c`(`org.simpleframework.xml.strategy.TreeStrategy` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.stream.NodeMap` v4 @kind object) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.c:(Ljava/lang/Class;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Ljava/lang/Class;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L451d88.  call temp:= `getLength`(v3) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L451d8e.  v3:= temp;
  #L451d90.  v0:= v1.`org.simpleframework.xml.strategy.TreeStrategy.b` @type ^`java.lang.String` @kind object;
  #L451d94.  if v0 == 0 then goto L451da6;
  #L451d98.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L451d9e.  v3:= temp @kind object;
  #L451da0.  call temp:= `put`(v4, v0, v3) @signature `Lorg/simpleframework/xml/stream/NodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L451da6.  call temp:= `getComponentType`(v2) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L451dac.  v2:= temp @kind object;
  #L451dae.  return v2 @kind object;
}
procedure `org.simpleframework.xml.strategy.Value` `read`(`org.simpleframework.xml.strategy.TreeStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Type` v2 @kind object, `org.simpleframework.xml.stream.NodeMap` v3 @kind object, `java.util.Map` v4 @kind object) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.read:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;Ljava/util/Map;)Lorg/simpleframework/xml/strategy/Value;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L451dc0.  call temp:= `b`(v1, v2, v3) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.b:(Lorg/simpleframework/xml/strategy/Type;Lorg/simpleframework/xml/stream/NodeMap;)Ljava/lang/Class;` @kind direct;
  #L451dc6.  v4:= temp @kind object;
  #L451dc8.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L451dce.  v2:= temp @kind object;
  #L451dd0.  call temp:= `isArray`(v2) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L451dd6.  v0:= temp;
  #L451dd8.  if v0 == 0 then goto L451de6;
  #L451ddc.  call temp:= `a`(v1, v4, v3) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.a:(Ljava/lang/Class;Lorg/simpleframework/xml/stream/NodeMap;)Lorg/simpleframework/xml/strategy/Value;` @kind direct;
  #L451de2.  v2:= temp @kind object;
  #L451de4.  return v2 @kind object;
  #L451de6.  if v2 == v4 then goto L451df6;
  #L451dea.  v2:= new `org.simpleframework.xml.strategy.ObjectValue`;
  #L451dee.  call `<init>`(v2, v4) @signature `Lorg/simpleframework/xml/strategy/ObjectValue;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L451df4.  return v2 @kind object;
  #L451df6.  v2:= 0I;
  #L451df8.  return v2 @kind object;
}
procedure `boolean` `write`(`org.simpleframework.xml.strategy.TreeStrategy` v1 @kind this, `org.simpleframework.xml.strategy.Type` v2 @kind object, `java.lang.Object` v3 @kind object, `org.simpleframework.xml.stream.NodeMap` v4 @kind object, `java.util.Map` v5 @kind object) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.write:(Lorg/simpleframework/xml/strategy/Type;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;Ljava/util/Map;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L451ce0.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L451ce6.  v5:= temp @kind object;
  #L451ce8.  call temp:= `getType`(v2) @signature `Lorg/simpleframework/xml/strategy/Type;.getType:()Ljava/lang/Class;` @kind interface;
  #L451cee.  v2:= temp @kind object;
  #L451cf0.  call temp:= `isArray`(v5) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L451cf6.  v0:= temp;
  #L451cf8.  if v0 == 0 then goto L451d06;
  #L451cfc.  call temp:= `c`(v1, v2, v3, v4) @signature `Lorg/simpleframework/xml/strategy/TreeStrategy;.c:(Ljava/lang/Class;Ljava/lang/Object;Lorg/simpleframework/xml/stream/NodeMap;)Ljava/lang/Class;` @kind direct;
  #L451d02.  v3:= temp @kind object;
  #L451d04.  goto L451d08;
  #L451d06.  v3:= v5 @kind object;
  #L451d08.  if v5 == v2 then goto L451d1e;
  #L451d0c.  v2:= v1.`org.simpleframework.xml.strategy.TreeStrategy.c` @type ^`java.lang.String` @kind object;
  #L451d10.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L451d16.  v3:= temp @kind object;
  #L451d18.  call temp:= `put`(v4, v2, v3) @signature `Lorg/simpleframework/xml/stream/NodeMap;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/simpleframework/xml/stream/Node;` @kind interface;
  #L451d1e.  v2:= 0I;
  #L451d20.  return v2;
}
