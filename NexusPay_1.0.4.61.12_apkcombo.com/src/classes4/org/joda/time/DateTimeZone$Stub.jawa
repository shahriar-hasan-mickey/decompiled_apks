record `org.joda.time.DateTimeZone$Stub` @kind class @AccessFlag FINAL extends `java.io.Serializable` @kind interface {
  `java.lang.String` `org.joda.time.DateTimeZone$Stub.iID` @AccessFlag PRIVATE_TRANSIENT;
}
global `long` `@@org.joda.time.DateTimeZone$Stub.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.DateTimeZone$Stub` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/joda/time/DateTimeZone$Stub;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3975cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3975d2.  v0.`org.joda.time.DateTimeZone$Stub.iID` @type ^`java.lang.String` := v1 @kind object;
  #L3975d6.  return @kind void;
}
procedure `void` `readObject`(`org.joda.time.DateTimeZone$Stub` v0 @kind this, `java.io.ObjectInputStream` v1 @kind object) @signature `Lorg/joda/time/DateTimeZone$Stub;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {
    temp;

  #L3975e8.  call temp:= `readUTF`(v1) @signature `Ljava/io/ObjectInputStream;.readUTF:()Ljava/lang/String;` @kind virtual;
  #L3975ee.  v1:= temp @kind object;
  #L3975f0.  v0.`org.joda.time.DateTimeZone$Stub.iID` @type ^`java.lang.String` := v1 @kind object;
  #L3975f4.  return @kind void;
}
procedure `java.lang.Object` `readResolve`(`org.joda.time.DateTimeZone$Stub` v1 @kind this) @signature `Lorg/joda/time/DateTimeZone$Stub;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3975ac.  v0:= v1.`org.joda.time.DateTimeZone$Stub.iID` @type ^`java.lang.String` @kind object;
  #L3975b0.  call temp:= `forID`(v0) @signature `Lorg/joda/time/DateTimeZone;.forID:(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;` @kind static;
  #L3975b6.  v0:= temp @kind object;
  #L3975b8.  return v0 @kind object;
}
procedure `void` `writeObject`(`org.joda.time.DateTimeZone$Stub` v1 @kind this, `java.io.ObjectOutputStream` v2 @kind object) @signature `Lorg/joda/time/DateTimeZone$Stub;.writeObject:(Ljava/io/ObjectOutputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L397608.  v0:= v1.`org.joda.time.DateTimeZone$Stub.iID` @type ^`java.lang.String` @kind object;
  #L39760c.  call `writeUTF`(v2, v0) @signature `Ljava/io/ObjectOutputStream;.writeUTF:(Ljava/lang/String;)V` @kind virtual;
  #L397612.  return @kind void;
}
