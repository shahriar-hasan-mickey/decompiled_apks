record `org.joda.time.Seconds` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.base.BaseSingleFieldPeriod` @kind class {
}
global `org.joda.time.Seconds` `@@org.joda.time.Seconds.MAX_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Seconds` `@@org.joda.time.Seconds.MIN_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Seconds` `@@org.joda.time.Seconds.ONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.format.PeriodFormatter` `@@org.joda.time.Seconds.PARSER` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.joda.time.Seconds` `@@org.joda.time.Seconds.THREE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Seconds` `@@org.joda.time.Seconds.TWO` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Seconds` `@@org.joda.time.Seconds.ZERO` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@org.joda.time.Seconds.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/Seconds;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a8880.  v0:= new `org.joda.time.Seconds`;
  #L3a8884.  v1:= 0I;
  #L3a8886.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Seconds;.<init>:(I)V` @kind direct;
  #L3a888c.  `@@org.joda.time.Seconds.ZERO` @type ^`org.joda.time.Seconds` := v0 @kind object;
  #L3a8890.  v0:= new `org.joda.time.Seconds`;
  #L3a8894.  v1:= 1I;
  #L3a8896.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Seconds;.<init>:(I)V` @kind direct;
  #L3a889c.  `@@org.joda.time.Seconds.ONE` @type ^`org.joda.time.Seconds` := v0 @kind object;
  #L3a88a0.  v0:= new `org.joda.time.Seconds`;
  #L3a88a4.  v1:= 2I;
  #L3a88a6.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Seconds;.<init>:(I)V` @kind direct;
  #L3a88ac.  `@@org.joda.time.Seconds.TWO` @type ^`org.joda.time.Seconds` := v0 @kind object;
  #L3a88b0.  v0:= new `org.joda.time.Seconds`;
  #L3a88b4.  v1:= 3I;
  #L3a88b6.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Seconds;.<init>:(I)V` @kind direct;
  #L3a88bc.  `@@org.joda.time.Seconds.THREE` @type ^`org.joda.time.Seconds` := v0 @kind object;
  #L3a88c0.  v0:= new `org.joda.time.Seconds`;
  #L3a88c4.  v1:= 2147483647I;
  #L3a88ca.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Seconds;.<init>:(I)V` @kind direct;
  #L3a88d0.  `@@org.joda.time.Seconds.MAX_VALUE` @type ^`org.joda.time.Seconds` := v0 @kind object;
  #L3a88d4.  v0:= new `org.joda.time.Seconds`;
  #L3a88d8.  v1:= -2147483648I;
  #L3a88dc.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Seconds;.<init>:(I)V` @kind direct;
  #L3a88e2.  `@@org.joda.time.Seconds.MIN_VALUE` @type ^`org.joda.time.Seconds` := v0 @kind object;
  #L3a88e6.  call temp:= `standard`() @signature `Lorg/joda/time/format/ISOPeriodFormat;.standard:()Lorg/joda/time/format/PeriodFormatter;` @kind static;
  #L3a88ec.  v0:= temp @kind object;
  #L3a88ee.  call temp:= `seconds`() @signature `Lorg/joda/time/PeriodType;.seconds:()Lorg/joda/time/PeriodType;` @kind static;
  #L3a88f4.  v1:= temp @kind object;
  #L3a88f6.  call temp:= `withParseType`(v0, v1) @signature `Lorg/joda/time/format/PeriodFormatter;.withParseType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/format/PeriodFormatter;` @kind virtual;
  #L3a88fc.  v0:= temp @kind object;
  #L3a88fe.  `@@org.joda.time.Seconds.PARSER` @type ^`org.joda.time.format.PeriodFormatter` := v0 @kind object;
  #L3a8902.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Seconds` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/Seconds;.<init>:(I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3a8914.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.<init>:(I)V` @kind direct;
  #L3a891a.  return @kind void;
}
procedure `org.joda.time.Seconds` `parseSeconds`(`java.lang.String` v1 @kind object) @signature `Lorg/joda/time/Seconds;.parseSeconds:(Ljava/lang/String;)Lorg/joda/time/Seconds;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a864c.  if v1 != 0 then goto L3a8656;
  #L3a8650.  v1:= `@@org.joda.time.Seconds.ZERO` @type ^`org.joda.time.Seconds` @kind object;
  #L3a8654.  return v1 @kind object;
  #L3a8656.  v0:= `@@org.joda.time.Seconds.PARSER` @type ^`org.joda.time.format.PeriodFormatter` @kind object;
  #L3a865a.  call temp:= `parsePeriod`(v0, v1) @signature `Lorg/joda/time/format/PeriodFormatter;.parsePeriod:(Ljava/lang/String;)Lorg/joda/time/Period;` @kind virtual;
  #L3a8660.  v1:= temp @kind object;
  #L3a8662.  call temp:= `getSeconds`(v1) @signature `Lorg/joda/time/Period;.getSeconds:()I` @kind virtual;
  #L3a8668.  v1:= temp;
  #L3a866a.  call temp:= `seconds`(v1) @signature `Lorg/joda/time/Seconds;.seconds:(I)Lorg/joda/time/Seconds;` @kind static;
  #L3a8670.  v1:= temp @kind object;
  #L3a8672.  return v1 @kind object;
}
procedure `java.lang.Object` `readResolve`(`org.joda.time.Seconds` v1 @kind this) @signature `Lorg/joda/time/Seconds;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3a8424.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a842a.  v0:= temp;
  #L3a842c.  call temp:= `seconds`(v0) @signature `Lorg/joda/time/Seconds;.seconds:(I)Lorg/joda/time/Seconds;` @kind static;
  #L3a8432.  v0:= temp @kind object;
  #L3a8434.  return v0 @kind object;
}
procedure `org.joda.time.Seconds` `seconds`(`int` v1 ) @signature `Lorg/joda/time/Seconds;.seconds:(I)Lorg/joda/time/Seconds;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a86dc.  v0:= -2147483648I;
  #L3a86e0.  if v1 == v0 then goto L3a872e;
  #L3a86e4.  v0:= 2147483647I;
  #L3a86ea.  if v1 == v0 then goto L3a8728;
  #L3a86ee.  if v1 == 0 then goto L3a8722;
  #L3a86f2.  v0:= 1I;
  #L3a86f4.  if v1 == v0 then goto L3a871c;
  #L3a86f8.  v0:= 2I;
  #L3a86fa.  if v1 == v0 then goto L3a8716;
  #L3a86fe.  v0:= 3I;
  #L3a8700.  if v1 == v0 then goto L3a8710;
  #L3a8704.  v0:= new `org.joda.time.Seconds`;
  #L3a8708.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Seconds;.<init>:(I)V` @kind direct;
  #L3a870e.  return v0 @kind object;
  #L3a8710.  v1:= `@@org.joda.time.Seconds.THREE` @type ^`org.joda.time.Seconds` @kind object;
  #L3a8714.  return v1 @kind object;
  #L3a8716.  v1:= `@@org.joda.time.Seconds.TWO` @type ^`org.joda.time.Seconds` @kind object;
  #L3a871a.  return v1 @kind object;
  #L3a871c.  v1:= `@@org.joda.time.Seconds.ONE` @type ^`org.joda.time.Seconds` @kind object;
  #L3a8720.  return v1 @kind object;
  #L3a8722.  v1:= `@@org.joda.time.Seconds.ZERO` @type ^`org.joda.time.Seconds` @kind object;
  #L3a8726.  return v1 @kind object;
  #L3a8728.  v1:= `@@org.joda.time.Seconds.MAX_VALUE` @type ^`org.joda.time.Seconds` @kind object;
  #L3a872c.  return v1 @kind object;
  #L3a872e.  v1:= `@@org.joda.time.Seconds.MIN_VALUE` @type ^`org.joda.time.Seconds` @kind object;
  #L3a8732.  return v1 @kind object;
}
procedure `org.joda.time.Seconds` `secondsBetween`(`org.joda.time.ReadableInstant` v1 @kind object, `org.joda.time.ReadableInstant` v2 @kind object) @signature `Lorg/joda/time/Seconds;.secondsBetween:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Seconds;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a8744.  call temp:= `seconds`() @signature `Lorg/joda/time/DurationFieldType;.seconds:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a874a.  v0:= temp @kind object;
  #L3a874c.  call temp:= `between`(v1, v2, v0) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.between:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;Lorg/joda/time/DurationFieldType;)I` @kind static;
  #L3a8752.  v1:= temp;
  #L3a8754.  call temp:= `seconds`(v1) @signature `Lorg/joda/time/Seconds;.seconds:(I)Lorg/joda/time/Seconds;` @kind static;
  #L3a875a.  v1:= temp @kind object;
  #L3a875c.  return v1 @kind object;
}
procedure `org.joda.time.Seconds` `secondsBetween`(`org.joda.time.ReadablePartial` v3 @kind object, `org.joda.time.ReadablePartial` v4 @kind object) @signature `Lorg/joda/time/Seconds;.secondsBetween:(Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePartial;)Lorg/joda/time/Seconds;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3a8770.  v0:= instanceof @variable v3 @type ^`org.joda.time.LocalTime` @kind boolean;
  #L3a8774.  if v0 == 0 then goto L3a87c2;
  #L3a8778.  v0:= instanceof @variable v4 @type ^`org.joda.time.LocalTime` @kind boolean;
  #L3a877c.  if v0 == 0 then goto L3a87c2;
  #L3a8780.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadablePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3a8786.  v0:= temp @kind object;
  #L3a8788.  call temp:= `getChronology`(v0) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L3a878e.  v0:= temp @kind object;
  #L3a8790.  call temp:= `seconds`(v0) @signature `Lorg/joda/time/Chronology;.seconds:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3a8796.  v0:= temp @kind object;
  #L3a8798.  v4:= (`org.joda.time.LocalTime`) v4 @kind object;
  #L3a879c.  call temp:= `getLocalMillis`(v4) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a87a2.  v1:= temp @kind wide;
  #L3a87a4.  v3:= (`org.joda.time.LocalTime`) v3 @kind object;
  #L3a87a8.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a87ae.  v3:= temp @kind wide;
  #L3a87b0.  call temp:= `getDifference`(v0, v1, v3) @signature `Lorg/joda/time/DurationField;.getDifference:(JJ)I` @kind virtual;
  #L3a87b6.  v3:= temp;
  #L3a87b8.  call temp:= `seconds`(v3) @signature `Lorg/joda/time/Seconds;.seconds:(I)Lorg/joda/time/Seconds;` @kind static;
  #L3a87be.  v3:= temp @kind object;
  #L3a87c0.  return v3 @kind object;
  #L3a87c2.  v0:= `@@org.joda.time.Seconds.ZERO` @type ^`org.joda.time.Seconds` @kind object;
  #L3a87c6.  call temp:= `between`(v3, v4, v0) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.between:(Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePeriod;)I` @kind static;
  #L3a87cc.  v3:= temp;
  #L3a87ce.  call temp:= `seconds`(v3) @signature `Lorg/joda/time/Seconds;.seconds:(I)Lorg/joda/time/Seconds;` @kind static;
  #L3a87d4.  v3:= temp @kind object;
  #L3a87d6.  return v3 @kind object;
}
procedure `org.joda.time.Seconds` `secondsIn`(`org.joda.time.ReadableInterval` v2 @kind object) @signature `Lorg/joda/time/Seconds;.secondsIn:(Lorg/joda/time/ReadableInterval;)Lorg/joda/time/Seconds;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a87e8.  if v2 != 0 then goto L3a87f2;
  #L3a87ec.  v2:= `@@org.joda.time.Seconds.ZERO` @type ^`org.joda.time.Seconds` @kind object;
  #L3a87f0.  return v2 @kind object;
  #L3a87f2.  call temp:= `getStart`(v2) @signature `Lorg/joda/time/ReadableInterval;.getStart:()Lorg/joda/time/DateTime;` @kind interface;
  #L3a87f8.  v0:= temp @kind object;
  #L3a87fa.  call temp:= `getEnd`(v2) @signature `Lorg/joda/time/ReadableInterval;.getEnd:()Lorg/joda/time/DateTime;` @kind interface;
  #L3a8800.  v2:= temp @kind object;
  #L3a8802.  call temp:= `seconds`() @signature `Lorg/joda/time/DurationFieldType;.seconds:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a8808.  v1:= temp @kind object;
  #L3a880a.  call temp:= `between`(v0, v2, v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.between:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;Lorg/joda/time/DurationFieldType;)I` @kind static;
  #L3a8810.  v2:= temp;
  #L3a8812.  call temp:= `seconds`(v2) @signature `Lorg/joda/time/Seconds;.seconds:(I)Lorg/joda/time/Seconds;` @kind static;
  #L3a8818.  v2:= temp @kind object;
  #L3a881a.  return v2 @kind object;
}
procedure `org.joda.time.Seconds` `standardSecondsIn`(`org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/Seconds;.standardSecondsIn:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/Seconds;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a882c.  v0:= 1000L;
  #L3a8830.  call temp:= `standardPeriodIn`(v2, v0) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.standardPeriodIn:(Lorg/joda/time/ReadablePeriod;J)I` @kind static;
  #L3a8836.  v2:= temp;
  #L3a8838.  call temp:= `seconds`(v2) @signature `Lorg/joda/time/Seconds;.seconds:(I)Lorg/joda/time/Seconds;` @kind static;
  #L3a883e.  v2:= temp @kind object;
  #L3a8840.  return v2 @kind object;
}
procedure `org.joda.time.Seconds` `dividedBy`(`org.joda.time.Seconds` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/Seconds;.dividedBy:(I)Lorg/joda/time/Seconds;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a857c.  v0:= 1I;
  #L3a857e.  if v2 != v0 then goto L3a8584;
  #L3a8582.  return v1 @kind object;
  #L3a8584.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a858a.  v0:= temp;
  #L3a858c.  v0:= v0 / v2 @kind int;
  #L3a858e.  call temp:= `seconds`(v0) @signature `Lorg/joda/time/Seconds;.seconds:(I)Lorg/joda/time/Seconds;` @kind static;
  #L3a8594.  v2:= temp @kind object;
  #L3a8596.  return v2 @kind object;
}
procedure `org.joda.time.DurationFieldType` `getFieldType`(`org.joda.time.Seconds` v1 @kind this) @signature `Lorg/joda/time/Seconds;.getFieldType:()Lorg/joda/time/DurationFieldType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a84f4.  call temp:= `seconds`() @signature `Lorg/joda/time/DurationFieldType;.seconds:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a84fa.  v0:= temp @kind object;
  #L3a84fc.  return v0 @kind object;
}
procedure `org.joda.time.PeriodType` `getPeriodType`(`org.joda.time.Seconds` v1 @kind this) @signature `Lorg/joda/time/Seconds;.getPeriodType:()Lorg/joda/time/PeriodType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8560.  call temp:= `seconds`() @signature `Lorg/joda/time/PeriodType;.seconds:()Lorg/joda/time/PeriodType;` @kind static;
  #L3a8566.  v0:= temp @kind object;
  #L3a8568.  return v0 @kind object;
}
procedure `int` `getSeconds`(`org.joda.time.Seconds` v1 @kind this) @signature `Lorg/joda/time/Seconds;.getSeconds:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8408.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a840e.  v0:= temp;
  #L3a8410.  return v0;
}
procedure `boolean` `isGreaterThan`(`org.joda.time.Seconds` v3 @kind this, `org.joda.time.Seconds` v4 @kind object) @signature `Lorg/joda/time/Seconds;.isGreaterThan:(Lorg/joda/time/Seconds;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a8380.  v0:= 1I;
  #L3a8382.  v1:= 0I;
  #L3a8384.  if v4 != 0 then goto L3a839a;
  #L3a8388.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a838e.  v4:= temp;
  #L3a8390.  if v4 <= 0 then goto L3a8396;
  #L3a8394.  goto L3a8398;
  #L3a8396.  v0:= 0I;
  #L3a8398.  return v0;
  #L3a839a.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a83a0.  v2:= temp;
  #L3a83a2.  call temp:= `getValue`(v4) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a83a8.  v4:= temp;
  #L3a83aa.  if v2 <= v4 then goto L3a83b0;
  #L3a83ae.  goto L3a83b2;
  #L3a83b0.  v0:= 0I;
  #L3a83b2.  return v0;
}
procedure `boolean` `isLessThan`(`org.joda.time.Seconds` v3 @kind this, `org.joda.time.Seconds` v4 @kind object) @signature `Lorg/joda/time/Seconds;.isLessThan:(Lorg/joda/time/Seconds;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a83c4.  v0:= 1I;
  #L3a83c6.  v1:= 0I;
  #L3a83c8.  if v4 != 0 then goto L3a83de;
  #L3a83cc.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a83d2.  v4:= temp;
  #L3a83d4.  if v4 >= 0 then goto L3a83da;
  #L3a83d8.  goto L3a83dc;
  #L3a83da.  v0:= 0I;
  #L3a83dc.  return v0;
  #L3a83de.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a83e4.  v2:= temp;
  #L3a83e6.  call temp:= `getValue`(v4) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a83ec.  v4:= temp;
  #L3a83ee.  if v2 >= v4 then goto L3a83f4;
  #L3a83f2.  goto L3a83f6;
  #L3a83f4.  v0:= 0I;
  #L3a83f6.  return v0;
}
procedure `org.joda.time.Seconds` `minus`(`org.joda.time.Seconds` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/Seconds;.minus:(I)Lorg/joda/time/Seconds;` @AccessFlag PUBLIC {
    temp;

  #L3a85a8.  call temp:= `safeNegate`(v1) @signature `Lorg/joda/time/field/FieldUtils;.safeNegate:(I)I` @kind static;
  #L3a85ae.  v1:= temp;
  #L3a85b0.  call temp:= `plus`(v0, v1) @signature `Lorg/joda/time/Seconds;.plus:(I)Lorg/joda/time/Seconds;` @kind virtual;
  #L3a85b6.  v1:= temp @kind object;
  #L3a85b8.  return v1 @kind object;
}
procedure `org.joda.time.Seconds` `minus`(`org.joda.time.Seconds` v0 @kind this, `org.joda.time.Seconds` v1 @kind object) @signature `Lorg/joda/time/Seconds;.minus:(Lorg/joda/time/Seconds;)Lorg/joda/time/Seconds;` @AccessFlag PUBLIC {
    temp;

  #L3a85cc.  if v1 != 0 then goto L3a85d2;
  #L3a85d0.  return v0 @kind object;
  #L3a85d2.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a85d8.  v1:= temp;
  #L3a85da.  call temp:= `minus`(v0, v1) @signature `Lorg/joda/time/Seconds;.minus:(I)Lorg/joda/time/Seconds;` @kind virtual;
  #L3a85e0.  v1:= temp @kind object;
  #L3a85e2.  return v1 @kind object;
}
procedure `org.joda.time.Seconds` `multipliedBy`(`org.joda.time.Seconds` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/Seconds;.multipliedBy:(I)Lorg/joda/time/Seconds;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a85f4.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a85fa.  v0:= temp;
  #L3a85fc.  call temp:= `safeMultiply`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L3a8602.  v2:= temp;
  #L3a8604.  call temp:= `seconds`(v2) @signature `Lorg/joda/time/Seconds;.seconds:(I)Lorg/joda/time/Seconds;` @kind static;
  #L3a860a.  v2:= temp @kind object;
  #L3a860c.  return v2 @kind object;
}
procedure `org.joda.time.Seconds` `negated`(`org.joda.time.Seconds` v1 @kind this) @signature `Lorg/joda/time/Seconds;.negated:()Lorg/joda/time/Seconds;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8620.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a8626.  v0:= temp;
  #L3a8628.  call temp:= `safeNegate`(v0) @signature `Lorg/joda/time/field/FieldUtils;.safeNegate:(I)I` @kind static;
  #L3a862e.  v0:= temp;
  #L3a8630.  call temp:= `seconds`(v0) @signature `Lorg/joda/time/Seconds;.seconds:(I)Lorg/joda/time/Seconds;` @kind static;
  #L3a8636.  v0:= temp @kind object;
  #L3a8638.  return v0 @kind object;
}
procedure `org.joda.time.Seconds` `plus`(`org.joda.time.Seconds` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/Seconds;.plus:(I)Lorg/joda/time/Seconds;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8684.  if v2 != 0 then goto L3a868a;
  #L3a8688.  return v1 @kind object;
  #L3a868a.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a8690.  v0:= temp;
  #L3a8692.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(II)I` @kind static;
  #L3a8698.  v2:= temp;
  #L3a869a.  call temp:= `seconds`(v2) @signature `Lorg/joda/time/Seconds;.seconds:(I)Lorg/joda/time/Seconds;` @kind static;
  #L3a86a0.  v2:= temp @kind object;
  #L3a86a2.  return v2 @kind object;
}
procedure `org.joda.time.Seconds` `plus`(`org.joda.time.Seconds` v0 @kind this, `org.joda.time.Seconds` v1 @kind object) @signature `Lorg/joda/time/Seconds;.plus:(Lorg/joda/time/Seconds;)Lorg/joda/time/Seconds;` @AccessFlag PUBLIC {
    temp;

  #L3a86b4.  if v1 != 0 then goto L3a86ba;
  #L3a86b8.  return v0 @kind object;
  #L3a86ba.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a86c0.  v1:= temp;
  #L3a86c2.  call temp:= `plus`(v0, v1) @signature `Lorg/joda/time/Seconds;.plus:(I)Lorg/joda/time/Seconds;` @kind virtual;
  #L3a86c8.  v1:= temp @kind object;
  #L3a86ca.  return v1 @kind object;
}
procedure `org.joda.time.Days` `toStandardDays`(`org.joda.time.Seconds` v2 @kind this) @signature `Lorg/joda/time/Seconds;.toStandardDays:()Lorg/joda/time/Days;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a8498.  call temp:= `getValue`(v2) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a849e.  v0:= temp;
  #L3a84a0.  v1:= 86400I;
  #L3a84a6.  v0:= v0 / v1 @kind int;
  #L3a84a8.  call temp:= `days`(v0) @signature `Lorg/joda/time/Days;.days:(I)Lorg/joda/time/Days;` @kind static;
  #L3a84ae.  v0:= temp @kind object;
  #L3a84b0.  return v0 @kind object;
}
procedure `org.joda.time.Duration` `toStandardDuration`(`org.joda.time.Seconds` v5 @kind this) @signature `Lorg/joda/time/Seconds;.toStandardDuration:()Lorg/joda/time/Duration;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a84c4.  call temp:= `getValue`(v5) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a84ca.  v0:= temp;
  #L3a84cc.  v0:= (`long`) v0 @kind i2l;
  #L3a84ce.  v2:= new `org.joda.time.Duration`;
  #L3a84d2.  v3:= 1000L;
  #L3a84d6.  v0:= v0 * v3 @kind long;
  #L3a84da.  call `<init>`(v2, v0) @signature `Lorg/joda/time/Duration;.<init>:(J)V` @kind direct;
  #L3a84e0.  return v2 @kind object;
}
procedure `org.joda.time.Hours` `toStandardHours`(`org.joda.time.Seconds` v1 @kind this) @signature `Lorg/joda/time/Seconds;.toStandardHours:()Lorg/joda/time/Hours;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8510.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a8516.  v0:= temp;
  #L3a8518.  v0:= v0 / 3600;
  #L3a851c.  call temp:= `hours`(v0) @signature `Lorg/joda/time/Hours;.hours:(I)Lorg/joda/time/Hours;` @kind static;
  #L3a8522.  v0:= temp @kind object;
  #L3a8524.  return v0 @kind object;
}
procedure `org.joda.time.Minutes` `toStandardMinutes`(`org.joda.time.Seconds` v1 @kind this) @signature `Lorg/joda/time/Seconds;.toStandardMinutes:()Lorg/joda/time/Minutes;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8538.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a853e.  v0:= temp;
  #L3a8540.  v0:= v0 / 60;
  #L3a8544.  call temp:= `minutes`(v0) @signature `Lorg/joda/time/Minutes;.minutes:(I)Lorg/joda/time/Minutes;` @kind static;
  #L3a854a.  v0:= temp @kind object;
  #L3a854c.  return v0 @kind object;
}
procedure `org.joda.time.Weeks` `toStandardWeeks`(`org.joda.time.Seconds` v2 @kind this) @signature `Lorg/joda/time/Seconds;.toStandardWeeks:()Lorg/joda/time/Weeks;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a8854.  call temp:= `getValue`(v2) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a885a.  v0:= temp;
  #L3a885c.  v1:= 604800I;
  #L3a8862.  v0:= v0 / v1 @kind int;
  #L3a8864.  call temp:= `weeks`(v0) @signature `Lorg/joda/time/Weeks;.weeks:(I)Lorg/joda/time/Weeks;` @kind static;
  #L3a886a.  v0:= temp @kind object;
  #L3a886c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.Seconds` v2 @kind this) @signature `Lorg/joda/time/Seconds;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a8448.  v0:= new `java.lang.StringBuilder`;
  #L3a844c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a8452.  v1:= "PT" @kind object;
  #L3a8456.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a845c.  call temp:= `getValue`(v2) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a8462.  v1:= temp;
  #L3a8464.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L3a846a.  v1:= temp @kind object;
  #L3a846c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8472.  v1:= "S" @kind object;
  #L3a8476.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a847c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a8482.  v0:= temp @kind object;
  #L3a8484.  return v0 @kind object;
}
