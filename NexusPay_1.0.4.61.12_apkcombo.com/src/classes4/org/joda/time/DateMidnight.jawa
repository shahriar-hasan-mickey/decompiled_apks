record `org.joda.time.DateMidnight` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.base.BaseDateTime` @kind class, `org.joda.time.ReadableDateTime` @kind interface, `java.io.Serializable` @kind interface {
}
global `long` `@@org.joda.time.DateMidnight.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.DateMidnight` v0 @kind this) @signature `Lorg/joda/time/DateMidnight;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L395750.  call `<init>`(v0) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:()V` @kind direct;
  #L395756.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateMidnight` v8 @kind this, `int` v9 , `int` v10 , `int` v11 ) @signature `Lorg/joda/time/DateMidnight;.<init>:(III)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L395768.  v4:= 0I;
  #L39576a.  v5:= 0I;
  #L39576c.  v6:= 0I;
  #L39576e.  v7:= 0I;
  #L395770.  v0:= v8 @kind object;
  #L395772.  v1:= v9;
  #L395774.  v2:= v10;
  #L395776.  v3:= v11;
  #L395778.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(IIIIIII)V` @kind direct;
  #L39577e.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateMidnight` v9 @kind this, `int` v10 , `int` v11 , `int` v12 , `org.joda.time.Chronology` v13 @kind object) @signature `Lorg/joda/time/DateMidnight;.<init>:(IIILorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L395790.  v4:= 0I;
  #L395792.  v5:= 0I;
  #L395794.  v6:= 0I;
  #L395796.  v7:= 0I;
  #L395798.  v0:= v9 @kind object;
  #L39579a.  v1:= v10;
  #L39579c.  v2:= v11;
  #L39579e.  v3:= v12;
  #L3957a0.  v8:= v13 @kind object;
  #L3957a2.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(IIIIIIILorg/joda/time/Chronology;)V` @kind direct;
  #L3957a8.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateMidnight` v9 @kind this, `int` v10 , `int` v11 , `int` v12 , `org.joda.time.DateTimeZone` v13 @kind object) @signature `Lorg/joda/time/DateMidnight;.<init>:(IIILorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3957bc.  v4:= 0I;
  #L3957be.  v5:= 0I;
  #L3957c0.  v6:= 0I;
  #L3957c2.  v7:= 0I;
  #L3957c4.  v0:= v9 @kind object;
  #L3957c6.  v1:= v10;
  #L3957c8.  v2:= v11;
  #L3957ca.  v3:= v12;
  #L3957cc.  v8:= v13 @kind object;
  #L3957ce.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(IIIIIIILorg/joda/time/DateTimeZone;)V` @kind direct;
  #L3957d4.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateMidnight` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/DateMidnight;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39583c.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(J)V` @kind direct;
  #L395842.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateMidnight` v0 @kind this, `long` v1 , `org.joda.time.Chronology` v3 @kind object) @signature `Lorg/joda/time/DateMidnight;.<init>:(JLorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L395854.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39585a.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateMidnight` v0 @kind this, `long` v1 , `org.joda.time.DateTimeZone` v3 @kind object) @signature `Lorg/joda/time/DateMidnight;.<init>:(JLorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39586c.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(JLorg/joda/time/DateTimeZone;)V` @kind direct;
  #L395872.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateMidnight` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/joda/time/DateMidnight;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3957e8.  v0:= 0I;
  #L3957ea.  call `<init>`(v1, v2, v0) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3957f0.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateMidnight` v0 @kind this, `java.lang.Object` v1 @kind object, `org.joda.time.Chronology` v2 @kind object) @signature `Lorg/joda/time/DateMidnight;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L395804.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L39580a.  v2:= temp @kind object;
  #L39580c.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;)V` @kind direct;
  #L395812.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateMidnight` v0 @kind this, `java.lang.Object` v1 @kind object, `org.joda.time.DateTimeZone` v2 @kind object) @signature `Lorg/joda/time/DateMidnight;.<init>:(Ljava/lang/Object;Lorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L395824.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(Ljava/lang/Object;Lorg/joda/time/DateTimeZone;)V` @kind direct;
  #L39582a.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateMidnight` v0 @kind this, `org.joda.time.Chronology` v1 @kind object) @signature `Lorg/joda/time/DateMidnight;.<init>:(Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L395884.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(Lorg/joda/time/Chronology;)V` @kind direct;
  #L39588a.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateMidnight` v0 @kind this, `org.joda.time.DateTimeZone` v1 @kind object) @signature `Lorg/joda/time/DateMidnight;.<init>:(Lorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39589c.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(Lorg/joda/time/DateTimeZone;)V` @kind direct;
  #L3958a2.  return @kind void;
}
procedure `org.joda.time.DateMidnight` `now`() @signature `Lorg/joda/time/DateMidnight;.now:()Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L394d2c.  v0:= new `org.joda.time.DateMidnight`;
  #L394d30.  call `<init>`(v0) @signature `Lorg/joda/time/DateMidnight;.<init>:()V` @kind direct;
  #L394d36.  return v0 @kind object;
}
procedure `org.joda.time.DateMidnight` `now`(`org.joda.time.Chronology` v1 @kind object) @signature `Lorg/joda/time/DateMidnight;.now:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L394d48.  if v1 == 0 then goto L394d58;
  #L394d4c.  v0:= new `org.joda.time.DateMidnight`;
  #L394d50.  call `<init>`(v0, v1) @signature `Lorg/joda/time/DateMidnight;.<init>:(Lorg/joda/time/Chronology;)V` @kind direct;
  #L394d56.  return v0 @kind object;
  #L394d58.  v1:= new `java.lang.NullPointerException`;
  #L394d5c.  v0:= "Chronology must not be null" @kind object;
  #L394d60.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L394d66.  throw v1;
}
procedure `org.joda.time.DateMidnight` `now`(`org.joda.time.DateTimeZone` v1 @kind object) @signature `Lorg/joda/time/DateMidnight;.now:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L394d78.  if v1 == 0 then goto L394d88;
  #L394d7c.  v0:= new `org.joda.time.DateMidnight`;
  #L394d80.  call `<init>`(v0, v1) @signature `Lorg/joda/time/DateMidnight;.<init>:(Lorg/joda/time/DateTimeZone;)V` @kind direct;
  #L394d86.  return v0 @kind object;
  #L394d88.  v1:= new `java.lang.NullPointerException`;
  #L394d8c.  v0:= "Zone must not be null" @kind object;
  #L394d90.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L394d96.  throw v1;
}
procedure `org.joda.time.DateMidnight` `parse`(`java.lang.String` v1 @kind object) @signature `Lorg/joda/time/DateMidnight;.parse:(Ljava/lang/String;)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L394da8.  call temp:= `dateTimeParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateTimeParser:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L394dae.  v0:= temp @kind object;
  #L394db0.  call temp:= `withOffsetParsed`(v0) @signature `Lorg/joda/time/format/DateTimeFormatter;.withOffsetParsed:()Lorg/joda/time/format/DateTimeFormatter;` @kind virtual;
  #L394db6.  v0:= temp @kind object;
  #L394db8.  call temp:= `parse`(v1, v0) @signature `Lorg/joda/time/DateMidnight;.parse:(Ljava/lang/String;Lorg/joda/time/format/DateTimeFormatter;)Lorg/joda/time/DateMidnight;` @kind static;
  #L394dbe.  v1:= temp @kind object;
  #L394dc0.  return v1 @kind object;
}
procedure `org.joda.time.DateMidnight` `parse`(`java.lang.String` v0 @kind object, `org.joda.time.format.DateTimeFormatter` v1 @kind object) @signature `Lorg/joda/time/DateMidnight;.parse:(Ljava/lang/String;Lorg/joda/time/format/DateTimeFormatter;)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L394dd4.  call temp:= `parseDateTime`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatter;.parseDateTime:(Ljava/lang/String;)Lorg/joda/time/DateTime;` @kind virtual;
  #L394dda.  v0:= temp @kind object;
  #L394ddc.  call temp:= `toDateMidnight`(v0) @signature `Lorg/joda/time/DateTime;.toDateMidnight:()Lorg/joda/time/DateMidnight;` @kind virtual;
  #L394de2.  v0:= temp @kind object;
  #L394de4.  return v0 @kind object;
}
procedure `org.joda.time.DateMidnight$Property` `centuryOfEra`(`org.joda.time.DateMidnight` v2 @kind this) @signature `Lorg/joda/time/DateMidnight;.centuryOfEra:()Lorg/joda/time/DateMidnight$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L395448.  v0:= new `org.joda.time.DateMidnight$Property`;
  #L39544c.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L395452.  v1:= temp @kind object;
  #L395454.  call temp:= `centuryOfEra`(v1) @signature `Lorg/joda/time/Chronology;.centuryOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39545a.  v1:= temp @kind object;
  #L39545c.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateMidnight$Property;.<init>:(Lorg/joda/time/DateMidnight;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L395462.  return v0 @kind object;
}
procedure `long` `checkInstant`(`org.joda.time.DateMidnight` v0 @kind this, `long` v1 , `org.joda.time.Chronology` v3 @kind object) @signature `Lorg/joda/time/DateMidnight;.checkInstant:(JLorg/joda/time/Chronology;)J` @AccessFlag PROTECTED {
    temp;

  #L394bb4.  call temp:= `dayOfMonth`(v3) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L394bba.  v3:= temp @kind object;
  #L394bbc.  call temp:= `roundFloor`(v3, v1) @signature `Lorg/joda/time/DateTimeField;.roundFloor:(J)J` @kind virtual;
  #L394bc2.  v1:= temp @kind wide;
  #L394bc4.  return v1 @kind wide;
}
procedure `org.joda.time.DateMidnight$Property` `dayOfMonth`(`org.joda.time.DateMidnight` v2 @kind this) @signature `Lorg/joda/time/DateMidnight;.dayOfMonth:()Lorg/joda/time/DateMidnight$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L395474.  v0:= new `org.joda.time.DateMidnight$Property`;
  #L395478.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39547e.  v1:= temp @kind object;
  #L395480.  call temp:= `dayOfMonth`(v1) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L395486.  v1:= temp @kind object;
  #L395488.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateMidnight$Property;.<init>:(Lorg/joda/time/DateMidnight;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39548e.  return v0 @kind object;
}
procedure `org.joda.time.DateMidnight$Property` `dayOfWeek`(`org.joda.time.DateMidnight` v2 @kind this) @signature `Lorg/joda/time/DateMidnight;.dayOfWeek:()Lorg/joda/time/DateMidnight$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3954a0.  v0:= new `org.joda.time.DateMidnight$Property`;
  #L3954a4.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3954aa.  v1:= temp @kind object;
  #L3954ac.  call temp:= `dayOfWeek`(v1) @signature `Lorg/joda/time/Chronology;.dayOfWeek:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3954b2.  v1:= temp @kind object;
  #L3954b4.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateMidnight$Property;.<init>:(Lorg/joda/time/DateMidnight;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L3954ba.  return v0 @kind object;
}
procedure `org.joda.time.DateMidnight$Property` `dayOfYear`(`org.joda.time.DateMidnight` v2 @kind this) @signature `Lorg/joda/time/DateMidnight;.dayOfYear:()Lorg/joda/time/DateMidnight$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3954cc.  v0:= new `org.joda.time.DateMidnight$Property`;
  #L3954d0.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3954d6.  v1:= temp @kind object;
  #L3954d8.  call temp:= `dayOfYear`(v1) @signature `Lorg/joda/time/Chronology;.dayOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3954de.  v1:= temp @kind object;
  #L3954e0.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateMidnight$Property;.<init>:(Lorg/joda/time/DateMidnight;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L3954e6.  return v0 @kind object;
}
procedure `org.joda.time.DateMidnight$Property` `era`(`org.joda.time.DateMidnight` v2 @kind this) @signature `Lorg/joda/time/DateMidnight;.era:()Lorg/joda/time/DateMidnight$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3954f8.  v0:= new `org.joda.time.DateMidnight$Property`;
  #L3954fc.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L395502.  v1:= temp @kind object;
  #L395504.  call temp:= `era`(v1) @signature `Lorg/joda/time/Chronology;.era:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39550a.  v1:= temp @kind object;
  #L39550c.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateMidnight$Property;.<init>:(Lorg/joda/time/DateMidnight;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L395512.  return v0 @kind object;
}
procedure `org.joda.time.DateMidnight` `minus`(`org.joda.time.DateMidnight` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/DateMidnight;.minus:(J)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L394bd8.  v0:= -1I;
  #L394bda.  call temp:= `withDurationAdded`(v1, v2, v0) @signature `Lorg/joda/time/DateMidnight;.withDurationAdded:(JI)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L394be0.  v2:= temp @kind object;
  #L394be2.  return v2 @kind object;
}
procedure `org.joda.time.DateMidnight` `minus`(`org.joda.time.DateMidnight` v1 @kind this, `org.joda.time.ReadableDuration` v2 @kind object) @signature `Lorg/joda/time/DateMidnight;.minus:(Lorg/joda/time/ReadableDuration;)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L394bf4.  v0:= -1I;
  #L394bf6.  call temp:= `withDurationAdded`(v1, v2, v0) @signature `Lorg/joda/time/DateMidnight;.withDurationAdded:(Lorg/joda/time/ReadableDuration;I)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L394bfc.  v2:= temp @kind object;
  #L394bfe.  return v2 @kind object;
}
procedure `org.joda.time.DateMidnight` `minus`(`org.joda.time.DateMidnight` v1 @kind this, `org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/DateMidnight;.minus:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L394c10.  v0:= -1I;
  #L394c12.  call temp:= `withPeriodAdded`(v1, v2, v0) @signature `Lorg/joda/time/DateMidnight;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L394c18.  v2:= temp @kind object;
  #L394c1a.  return v2 @kind object;
}
procedure `org.joda.time.DateMidnight` `minusDays`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.minusDays:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L394c2c.  if v4 != 0 then goto L394c32;
  #L394c30.  return v3 @kind object;
  #L394c32.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L394c38.  v0:= temp @kind object;
  #L394c3a.  call temp:= `days`(v0) @signature `Lorg/joda/time/Chronology;.days:()Lorg/joda/time/DurationField;` @kind virtual;
  #L394c40.  v0:= temp @kind object;
  #L394c42.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L394c48.  v1:= temp @kind wide;
  #L394c4a.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L394c50.  v0:= temp @kind wide;
  #L394c52.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L394c58.  v4:= temp @kind object;
  #L394c5a.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight` `minusMonths`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.minusMonths:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L394c6c.  if v4 != 0 then goto L394c72;
  #L394c70.  return v3 @kind object;
  #L394c72.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L394c78.  v0:= temp @kind object;
  #L394c7a.  call temp:= `months`(v0) @signature `Lorg/joda/time/Chronology;.months:()Lorg/joda/time/DurationField;` @kind virtual;
  #L394c80.  v0:= temp @kind object;
  #L394c82.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L394c88.  v1:= temp @kind wide;
  #L394c8a.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L394c90.  v0:= temp @kind wide;
  #L394c92.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L394c98.  v4:= temp @kind object;
  #L394c9a.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight` `minusWeeks`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.minusWeeks:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L394cac.  if v4 != 0 then goto L394cb2;
  #L394cb0.  return v3 @kind object;
  #L394cb2.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L394cb8.  v0:= temp @kind object;
  #L394cba.  call temp:= `weeks`(v0) @signature `Lorg/joda/time/Chronology;.weeks:()Lorg/joda/time/DurationField;` @kind virtual;
  #L394cc0.  v0:= temp @kind object;
  #L394cc2.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L394cc8.  v1:= temp @kind wide;
  #L394cca.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L394cd0.  v0:= temp @kind wide;
  #L394cd2.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L394cd8.  v4:= temp @kind object;
  #L394cda.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight` `minusYears`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.minusYears:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L394cec.  if v4 != 0 then goto L394cf2;
  #L394cf0.  return v3 @kind object;
  #L394cf2.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L394cf8.  v0:= temp @kind object;
  #L394cfa.  call temp:= `years`(v0) @signature `Lorg/joda/time/Chronology;.years:()Lorg/joda/time/DurationField;` @kind virtual;
  #L394d00.  v0:= temp @kind object;
  #L394d02.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L394d08.  v1:= temp @kind wide;
  #L394d0a.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L394d10.  v0:= temp @kind wide;
  #L394d12.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L394d18.  v4:= temp @kind object;
  #L394d1a.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight$Property` `monthOfYear`(`org.joda.time.DateMidnight` v2 @kind this) @signature `Lorg/joda/time/DateMidnight;.monthOfYear:()Lorg/joda/time/DateMidnight$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L395524.  v0:= new `org.joda.time.DateMidnight$Property`;
  #L395528.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39552e.  v1:= temp @kind object;
  #L395530.  call temp:= `monthOfYear`(v1) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L395536.  v1:= temp @kind object;
  #L395538.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateMidnight$Property;.<init>:(Lorg/joda/time/DateMidnight;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39553e.  return v0 @kind object;
}
procedure `org.joda.time.DateMidnight` `plus`(`org.joda.time.DateMidnight` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/DateMidnight;.plus:(J)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L394df8.  v0:= 1I;
  #L394dfa.  call temp:= `withDurationAdded`(v1, v2, v0) @signature `Lorg/joda/time/DateMidnight;.withDurationAdded:(JI)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L394e00.  v2:= temp @kind object;
  #L394e02.  return v2 @kind object;
}
procedure `org.joda.time.DateMidnight` `plus`(`org.joda.time.DateMidnight` v1 @kind this, `org.joda.time.ReadableDuration` v2 @kind object) @signature `Lorg/joda/time/DateMidnight;.plus:(Lorg/joda/time/ReadableDuration;)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L394e14.  v0:= 1I;
  #L394e16.  call temp:= `withDurationAdded`(v1, v2, v0) @signature `Lorg/joda/time/DateMidnight;.withDurationAdded:(Lorg/joda/time/ReadableDuration;I)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L394e1c.  v2:= temp @kind object;
  #L394e1e.  return v2 @kind object;
}
procedure `org.joda.time.DateMidnight` `plus`(`org.joda.time.DateMidnight` v1 @kind this, `org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/DateMidnight;.plus:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L394e30.  v0:= 1I;
  #L394e32.  call temp:= `withPeriodAdded`(v1, v2, v0) @signature `Lorg/joda/time/DateMidnight;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L394e38.  v2:= temp @kind object;
  #L394e3a.  return v2 @kind object;
}
procedure `org.joda.time.DateMidnight` `plusDays`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.plusDays:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L394e4c.  if v4 != 0 then goto L394e52;
  #L394e50.  return v3 @kind object;
  #L394e52.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L394e58.  v0:= temp @kind object;
  #L394e5a.  call temp:= `days`(v0) @signature `Lorg/joda/time/Chronology;.days:()Lorg/joda/time/DurationField;` @kind virtual;
  #L394e60.  v0:= temp @kind object;
  #L394e62.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L394e68.  v1:= temp @kind wide;
  #L394e6a.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L394e70.  v0:= temp @kind wide;
  #L394e72.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L394e78.  v4:= temp @kind object;
  #L394e7a.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight` `plusMonths`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.plusMonths:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L394e8c.  if v4 != 0 then goto L394e92;
  #L394e90.  return v3 @kind object;
  #L394e92.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L394e98.  v0:= temp @kind object;
  #L394e9a.  call temp:= `months`(v0) @signature `Lorg/joda/time/Chronology;.months:()Lorg/joda/time/DurationField;` @kind virtual;
  #L394ea0.  v0:= temp @kind object;
  #L394ea2.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L394ea8.  v1:= temp @kind wide;
  #L394eaa.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L394eb0.  v0:= temp @kind wide;
  #L394eb2.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L394eb8.  v4:= temp @kind object;
  #L394eba.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight` `plusWeeks`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.plusWeeks:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L394ecc.  if v4 != 0 then goto L394ed2;
  #L394ed0.  return v3 @kind object;
  #L394ed2.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L394ed8.  v0:= temp @kind object;
  #L394eda.  call temp:= `weeks`(v0) @signature `Lorg/joda/time/Chronology;.weeks:()Lorg/joda/time/DurationField;` @kind virtual;
  #L394ee0.  v0:= temp @kind object;
  #L394ee2.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L394ee8.  v1:= temp @kind wide;
  #L394eea.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L394ef0.  v0:= temp @kind wide;
  #L394ef2.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L394ef8.  v4:= temp @kind object;
  #L394efa.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight` `plusYears`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.plusYears:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L394f0c.  if v4 != 0 then goto L394f12;
  #L394f10.  return v3 @kind object;
  #L394f12.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L394f18.  v0:= temp @kind object;
  #L394f1a.  call temp:= `years`(v0) @signature `Lorg/joda/time/Chronology;.years:()Lorg/joda/time/DurationField;` @kind virtual;
  #L394f20.  v0:= temp @kind object;
  #L394f22.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L394f28.  v1:= temp @kind wide;
  #L394f2a.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L394f30.  v0:= temp @kind wide;
  #L394f32.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L394f38.  v4:= temp @kind object;
  #L394f3a.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight$Property` `property`(`org.joda.time.DateMidnight` v3 @kind this, `org.joda.time.DateTimeFieldType` v4 @kind object) @signature `Lorg/joda/time/DateMidnight;.property:(Lorg/joda/time/DateTimeFieldType;)Lorg/joda/time/DateMidnight$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L395550.  if v4 == 0 then goto L3955b4;
  #L395554.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39555a.  v0:= temp @kind object;
  #L39555c.  call temp:= `getField`(v4, v0) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L395562.  v0:= temp @kind object;
  #L395564.  call temp:= `isSupported`(v0) @signature `Lorg/joda/time/DateTimeField;.isSupported:()Z` @kind virtual;
  #L39556a.  v1:= temp;
  #L39556c.  if v1 == 0 then goto L39557c;
  #L395570.  v4:= new `org.joda.time.DateMidnight$Property`;
  #L395574.  call `<init>`(v4, v3, v0) @signature `Lorg/joda/time/DateMidnight$Property;.<init>:(Lorg/joda/time/DateMidnight;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39557a.  return v4 @kind object;
  #L39557c.  v0:= new `java.lang.IllegalArgumentException`;
  #L395580.  v1:= new `java.lang.StringBuilder`;
  #L395584.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39558a.  v2:= "Field '" @kind object;
  #L39558e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L395594.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39559a.  v4:= "' is not supported" @kind object;
  #L39559e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3955a4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3955aa.  v4:= temp @kind object;
  #L3955ac.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3955b2.  throw v0;
  #L3955b4.  v4:= new `java.lang.IllegalArgumentException`;
  #L3955b8.  v0:= "The DateTimeFieldType must not be null" @kind object;
  #L3955bc.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3955c2.  throw v4;
}
procedure `org.joda.time.Interval` `toInterval`(`org.joda.time.DateMidnight` v7 @kind this) @signature `Lorg/joda/time/DateMidnight;.toInterval:()Lorg/joda/time/Interval;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3956b0.  call temp:= `getChronology`(v7) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3956b6.  v5:= temp @kind object;
  #L3956b8.  call temp:= `getMillis`(v7) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3956be.  v1:= temp @kind wide;
  #L3956c0.  call temp:= `days`() @signature `Lorg/joda/time/DurationFieldType;.days:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3956c6.  v0:= temp @kind object;
  #L3956c8.  call temp:= `getField`(v0, v5) @signature `Lorg/joda/time/DurationFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;` @kind virtual;
  #L3956ce.  v0:= temp @kind object;
  #L3956d0.  v3:= 1I;
  #L3956d2.  call temp:= `add`(v0, v1, v3) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L3956d8.  v3:= temp @kind wide;
  #L3956da.  v6:= new `org.joda.time.Interval`;
  #L3956de.  v0:= v6 @kind object;
  #L3956e0.  call `<init>`(v0, v1, v3, v5) @signature `Lorg/joda/time/Interval;.<init>:(JJLorg/joda/time/Chronology;)V` @kind direct;
  #L3956e6.  return v6 @kind object;
}
procedure `org.joda.time.LocalDate` `toLocalDate`(`org.joda.time.DateMidnight` v4 @kind this) @signature `Lorg/joda/time/DateMidnight;.toLocalDate:()Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3956f8.  v0:= new `org.joda.time.LocalDate`;
  #L3956fc.  call temp:= `getMillis`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L395702.  v1:= temp @kind wide;
  #L395704.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39570a.  v3:= temp @kind object;
  #L39570c.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/LocalDate;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L395712.  return v0 @kind object;
}
procedure `org.joda.time.YearMonthDay` `toYearMonthDay`(`org.joda.time.DateMidnight` v4 @kind this) @signature `Lorg/joda/time/DateMidnight;.toYearMonthDay:()Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L395724.  v0:= new `org.joda.time.YearMonthDay`;
  #L395728.  call temp:= `getMillis`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L39572e.  v1:= temp @kind wide;
  #L395730.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L395736.  v3:= temp @kind object;
  #L395738.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/YearMonthDay;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39573e.  return v0 @kind object;
}
procedure `org.joda.time.DateMidnight$Property` `weekOfWeekyear`(`org.joda.time.DateMidnight` v2 @kind this) @signature `Lorg/joda/time/DateMidnight;.weekOfWeekyear:()Lorg/joda/time/DateMidnight$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3955d4.  v0:= new `org.joda.time.DateMidnight$Property`;
  #L3955d8.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3955de.  v1:= temp @kind object;
  #L3955e0.  call temp:= `weekOfWeekyear`(v1) @signature `Lorg/joda/time/Chronology;.weekOfWeekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3955e6.  v1:= temp @kind object;
  #L3955e8.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateMidnight$Property;.<init>:(Lorg/joda/time/DateMidnight;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L3955ee.  return v0 @kind object;
}
procedure `org.joda.time.DateMidnight$Property` `weekyear`(`org.joda.time.DateMidnight` v2 @kind this) @signature `Lorg/joda/time/DateMidnight;.weekyear:()Lorg/joda/time/DateMidnight$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L395600.  v0:= new `org.joda.time.DateMidnight$Property`;
  #L395604.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39560a.  v1:= temp @kind object;
  #L39560c.  call temp:= `weekyear`(v1) @signature `Lorg/joda/time/Chronology;.weekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L395612.  v1:= temp @kind object;
  #L395614.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateMidnight$Property;.<init>:(Lorg/joda/time/DateMidnight;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39561a.  return v0 @kind object;
}
procedure `org.joda.time.DateMidnight` `withCenturyOfEra`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.withCenturyOfEra:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L394f4c.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L394f52.  v0:= temp @kind object;
  #L394f54.  call temp:= `centuryOfEra`(v0) @signature `Lorg/joda/time/Chronology;.centuryOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L394f5a.  v0:= temp @kind object;
  #L394f5c.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L394f62.  v1:= temp @kind wide;
  #L394f64.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L394f6a.  v0:= temp @kind wide;
  #L394f6c.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L394f72.  v4:= temp @kind object;
  #L394f74.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight` `withChronology`(`org.joda.time.DateMidnight` v3 @kind this, `org.joda.time.Chronology` v4 @kind object) @signature `Lorg/joda/time/DateMidnight;.withChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L394f88.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L394f8e.  v0:= temp @kind object;
  #L394f90.  if v4 != v0 then goto L394f98;
  #L394f94.  v0:= v3 @kind object;
  #L394f96.  goto L394faa;
  #L394f98.  v0:= new `org.joda.time.DateMidnight`;
  #L394f9c.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L394fa2.  v1:= temp @kind wide;
  #L394fa4.  call `<init>`(v0, v1, v4) @signature `Lorg/joda/time/DateMidnight;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L394faa.  return v0 @kind object;
}
procedure `org.joda.time.DateMidnight` `withDayOfMonth`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.withDayOfMonth:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L394fbc.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L394fc2.  v0:= temp @kind object;
  #L394fc4.  call temp:= `dayOfMonth`(v0) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L394fca.  v0:= temp @kind object;
  #L394fcc.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L394fd2.  v1:= temp @kind wide;
  #L394fd4.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L394fda.  v0:= temp @kind wide;
  #L394fdc.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L394fe2.  v4:= temp @kind object;
  #L394fe4.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight` `withDayOfWeek`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.withDayOfWeek:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L394ff8.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L394ffe.  v0:= temp @kind object;
  #L395000.  call temp:= `dayOfWeek`(v0) @signature `Lorg/joda/time/Chronology;.dayOfWeek:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L395006.  v0:= temp @kind object;
  #L395008.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L39500e.  v1:= temp @kind wide;
  #L395010.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L395016.  v0:= temp @kind wide;
  #L395018.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L39501e.  v4:= temp @kind object;
  #L395020.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight` `withDayOfYear`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.withDayOfYear:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L395034.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39503a.  v0:= temp @kind object;
  #L39503c.  call temp:= `dayOfYear`(v0) @signature `Lorg/joda/time/Chronology;.dayOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L395042.  v0:= temp @kind object;
  #L395044.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L39504a.  v1:= temp @kind wide;
  #L39504c.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L395052.  v0:= temp @kind wide;
  #L395054.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L39505a.  v4:= temp @kind object;
  #L39505c.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight` `withDurationAdded`(`org.joda.time.DateMidnight` v9 @kind this, `long` v10 , `int` v12 ) @signature `Lorg/joda/time/DateMidnight;.withDurationAdded:(JI)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L395070.  v0:= 0L;
  #L395074.  v2:= lcmp(v10, v0);
  #L395078.  if v2 == 0 then goto L3950a8;
  #L39507c.  if v12 != 0 then goto L395082;
  #L395080.  goto L3950a8;
  #L395082.  call temp:= `getChronology`(v9) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L395088.  v3:= temp @kind object;
  #L39508a.  call temp:= `getMillis`(v9) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L395090.  v4:= temp @kind wide;
  #L395092.  v6:= v10 @kind wide;
  #L395094.  v8:= v12;
  #L395096.  call temp:= `add`(v3, v4, v6, v8) @signature `Lorg/joda/time/Chronology;.add:(JJI)J` @kind virtual;
  #L39509c.  v10:= temp @kind wide;
  #L39509e.  call temp:= `withMillis`(v9, v10) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L3950a4.  v10:= temp @kind object;
  #L3950a6.  return v10 @kind object;
  #L3950a8.  return v9 @kind object;
}
procedure `org.joda.time.DateMidnight` `withDurationAdded`(`org.joda.time.DateMidnight` v2 @kind this, `org.joda.time.ReadableDuration` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.withDurationAdded:(Lorg/joda/time/ReadableDuration;I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3950bc.  if v3 == 0 then goto L3950d8;
  #L3950c0.  if v4 != 0 then goto L3950c6;
  #L3950c4.  goto L3950d8;
  #L3950c6.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableDuration;.getMillis:()J` @kind interface;
  #L3950cc.  v0:= temp @kind wide;
  #L3950ce.  call temp:= `withDurationAdded`(v2, v0, v4) @signature `Lorg/joda/time/DateMidnight;.withDurationAdded:(JI)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L3950d4.  v3:= temp @kind object;
  #L3950d6.  return v3 @kind object;
  #L3950d8.  return v2 @kind object;
}
procedure `org.joda.time.DateMidnight` `withEra`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.withEra:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3950ec.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3950f2.  v0:= temp @kind object;
  #L3950f4.  call temp:= `era`(v0) @signature `Lorg/joda/time/Chronology;.era:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3950fa.  v0:= temp @kind object;
  #L3950fc.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L395102.  v1:= temp @kind wide;
  #L395104.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39510a.  v0:= temp @kind wide;
  #L39510c.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L395112.  v4:= temp @kind object;
  #L395114.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight` `withField`(`org.joda.time.DateMidnight` v2 @kind this, `org.joda.time.DateTimeFieldType` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.withField:(Lorg/joda/time/DateTimeFieldType;I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L395128.  if v3 == 0 then goto L395156;
  #L39512c.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L395132.  v0:= temp @kind object;
  #L395134.  call temp:= `getField`(v3, v0) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39513a.  v3:= temp @kind object;
  #L39513c.  call temp:= `getMillis`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L395142.  v0:= temp @kind wide;
  #L395144.  call temp:= `set`(v3, v0, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39514a.  v3:= temp @kind wide;
  #L39514c.  call temp:= `withMillis`(v2, v3) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L395152.  v3:= temp @kind object;
  #L395154.  return v3 @kind object;
  #L395156.  v3:= new `java.lang.IllegalArgumentException`;
  #L39515a.  v4:= "Field must not be null" @kind object;
  #L39515e.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L395164.  throw v3;
}
procedure `org.joda.time.DateMidnight` `withFieldAdded`(`org.joda.time.DateMidnight` v2 @kind this, `org.joda.time.DurationFieldType` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L395178.  if v3 == 0 then goto L3951ac;
  #L39517c.  if v4 != 0 then goto L395182;
  #L395180.  return v2 @kind object;
  #L395182.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L395188.  v0:= temp @kind object;
  #L39518a.  call temp:= `getField`(v3, v0) @signature `Lorg/joda/time/DurationFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;` @kind virtual;
  #L395190.  v3:= temp @kind object;
  #L395192.  call temp:= `getMillis`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L395198.  v0:= temp @kind wide;
  #L39519a.  call temp:= `add`(v3, v0, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L3951a0.  v3:= temp @kind wide;
  #L3951a2.  call temp:= `withMillis`(v2, v3) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L3951a8.  v3:= temp @kind object;
  #L3951aa.  return v3 @kind object;
  #L3951ac.  v3:= new `java.lang.IllegalArgumentException`;
  #L3951b0.  v4:= "Field must not be null" @kind object;
  #L3951b4.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3951ba.  throw v3;
}
procedure `org.joda.time.DateMidnight` `withFields`(`org.joda.time.DateMidnight` v3 @kind this, `org.joda.time.ReadablePartial` v4 @kind object) @signature `Lorg/joda/time/DateMidnight;.withFields:(Lorg/joda/time/ReadablePartial;)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3951cc.  if v4 != 0 then goto L3951d2;
  #L3951d0.  return v3 @kind object;
  #L3951d2.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3951d8.  v0:= temp @kind object;
  #L3951da.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3951e0.  v1:= temp @kind wide;
  #L3951e2.  call temp:= `set`(v0, v4, v1) @signature `Lorg/joda/time/Chronology;.set:(Lorg/joda/time/ReadablePartial;J)J` @kind virtual;
  #L3951e8.  v0:= temp @kind wide;
  #L3951ea.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L3951f0.  v4:= temp @kind object;
  #L3951f2.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight` `withMillis`(`org.joda.time.DateMidnight` v4 @kind this, `long` v5 ) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L395204.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39520a.  v0:= temp @kind object;
  #L39520c.  call temp:= `checkInstant`(v4, v5, v0) @signature `Lorg/joda/time/DateMidnight;.checkInstant:(JLorg/joda/time/Chronology;)J` @kind virtual;
  #L395212.  v5:= temp @kind wide;
  #L395214.  call temp:= `getMillis`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L39521a.  v1:= temp @kind wide;
  #L39521c.  v3:= lcmp(v5, v1);
  #L395220.  if v3 != 0 then goto L395228;
  #L395224.  v1:= v4 @kind object;
  #L395226.  goto L395232;
  #L395228.  v1:= new `org.joda.time.DateMidnight`;
  #L39522c.  call `<init>`(v1, v5, v0) @signature `Lorg/joda/time/DateMidnight;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L395232.  return v1 @kind object;
}
procedure `org.joda.time.DateMidnight` `withMonthOfYear`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.withMonthOfYear:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L395244.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39524a.  v0:= temp @kind object;
  #L39524c.  call temp:= `monthOfYear`(v0) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L395252.  v0:= temp @kind object;
  #L395254.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L39525a.  v1:= temp @kind wide;
  #L39525c.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L395262.  v0:= temp @kind wide;
  #L395264.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L39526a.  v4:= temp @kind object;
  #L39526c.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight` `withPeriodAdded`(`org.joda.time.DateMidnight` v3 @kind this, `org.joda.time.ReadablePeriod` v4 @kind object, `int` v5 ) @signature `Lorg/joda/time/DateMidnight;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L395280.  if v4 == 0 then goto L3952ac;
  #L395284.  if v5 != 0 then goto L39528a;
  #L395288.  goto L3952ac;
  #L39528a.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L395290.  v0:= temp @kind object;
  #L395292.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L395298.  v1:= temp @kind wide;
  #L39529a.  call temp:= `add`(v0, v4, v1, v5) @signature `Lorg/joda/time/Chronology;.add:(Lorg/joda/time/ReadablePeriod;JI)J` @kind virtual;
  #L3952a0.  v4:= temp @kind wide;
  #L3952a2.  call temp:= `withMillis`(v3, v4) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L3952a8.  v4:= temp @kind object;
  #L3952aa.  return v4 @kind object;
  #L3952ac.  return v3 @kind object;
}
procedure `org.joda.time.DateMidnight` `withWeekOfWeekyear`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.withWeekOfWeekyear:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3952c0.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3952c6.  v0:= temp @kind object;
  #L3952c8.  call temp:= `weekOfWeekyear`(v0) @signature `Lorg/joda/time/Chronology;.weekOfWeekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3952ce.  v0:= temp @kind object;
  #L3952d0.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3952d6.  v1:= temp @kind wide;
  #L3952d8.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3952de.  v0:= temp @kind wide;
  #L3952e0.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L3952e6.  v4:= temp @kind object;
  #L3952e8.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight` `withWeekyear`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.withWeekyear:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3952fc.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L395302.  v0:= temp @kind object;
  #L395304.  call temp:= `weekyear`(v0) @signature `Lorg/joda/time/Chronology;.weekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39530a.  v0:= temp @kind object;
  #L39530c.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L395312.  v1:= temp @kind wide;
  #L395314.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39531a.  v0:= temp @kind wide;
  #L39531c.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L395322.  v4:= temp @kind object;
  #L395324.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight` `withYear`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.withYear:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L395338.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39533e.  v0:= temp @kind object;
  #L395340.  call temp:= `year`(v0) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L395346.  v0:= temp @kind object;
  #L395348.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L39534e.  v1:= temp @kind wide;
  #L395350.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L395356.  v0:= temp @kind wide;
  #L395358.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L39535e.  v4:= temp @kind object;
  #L395360.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight` `withYearOfCentury`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.withYearOfCentury:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L395374.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39537a.  v0:= temp @kind object;
  #L39537c.  call temp:= `yearOfCentury`(v0) @signature `Lorg/joda/time/Chronology;.yearOfCentury:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L395382.  v0:= temp @kind object;
  #L395384.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L39538a.  v1:= temp @kind wide;
  #L39538c.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L395392.  v0:= temp @kind wide;
  #L395394.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L39539a.  v4:= temp @kind object;
  #L39539c.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight` `withYearOfEra`(`org.joda.time.DateMidnight` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateMidnight;.withYearOfEra:(I)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3953b0.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3953b6.  v0:= temp @kind object;
  #L3953b8.  call temp:= `yearOfEra`(v0) @signature `Lorg/joda/time/Chronology;.yearOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3953be.  v0:= temp @kind object;
  #L3953c0.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3953c6.  v1:= temp @kind wide;
  #L3953c8.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3953ce.  v0:= temp @kind wide;
  #L3953d0.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateMidnight;.withMillis:(J)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L3953d6.  v4:= temp @kind object;
  #L3953d8.  return v4 @kind object;
}
procedure `org.joda.time.DateMidnight` `withZoneRetainFields`(`org.joda.time.DateMidnight` v4 @kind this, `org.joda.time.DateTimeZone` v5 @kind object) @signature `Lorg/joda/time/DateMidnight;.withZoneRetainFields:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3953ec.  call temp:= `getZone`(v5) @signature `Lorg/joda/time/DateTimeUtils;.getZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTimeZone;` @kind static;
  #L3953f2.  v5:= temp @kind object;
  #L3953f4.  call temp:= `getZone`(v4) @signature `Lorg/joda/time/base/AbstractInstant;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3953fa.  v0:= temp @kind object;
  #L3953fc.  call temp:= `getZone`(v0) @signature `Lorg/joda/time/DateTimeUtils;.getZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTimeZone;` @kind static;
  #L395402.  v0:= temp @kind object;
  #L395404.  if v5 != v0 then goto L39540a;
  #L395408.  return v4 @kind object;
  #L39540a.  call temp:= `getMillis`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L395410.  v1:= temp @kind wide;
  #L395412.  call temp:= `getMillisKeepLocal`(v0, v5, v1) @signature `Lorg/joda/time/DateTimeZone;.getMillisKeepLocal:(Lorg/joda/time/DateTimeZone;J)J` @kind virtual;
  #L395418.  v0:= temp @kind wide;
  #L39541a.  v2:= new `org.joda.time.DateMidnight`;
  #L39541e.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L395424.  v3:= temp @kind object;
  #L395426.  call temp:= `withZone`(v3, v5) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L39542c.  v5:= temp @kind object;
  #L39542e.  call `<init>`(v2, v0, v5) @signature `Lorg/joda/time/DateMidnight;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L395434.  return v2 @kind object;
}
procedure `org.joda.time.DateMidnight$Property` `year`(`org.joda.time.DateMidnight` v2 @kind this) @signature `Lorg/joda/time/DateMidnight;.year:()Lorg/joda/time/DateMidnight$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39562c.  v0:= new `org.joda.time.DateMidnight$Property`;
  #L395630.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L395636.  v1:= temp @kind object;
  #L395638.  call temp:= `year`(v1) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39563e.  v1:= temp @kind object;
  #L395640.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateMidnight$Property;.<init>:(Lorg/joda/time/DateMidnight;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L395646.  return v0 @kind object;
}
procedure `org.joda.time.DateMidnight$Property` `yearOfCentury`(`org.joda.time.DateMidnight` v2 @kind this) @signature `Lorg/joda/time/DateMidnight;.yearOfCentury:()Lorg/joda/time/DateMidnight$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L395658.  v0:= new `org.joda.time.DateMidnight$Property`;
  #L39565c.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L395662.  v1:= temp @kind object;
  #L395664.  call temp:= `yearOfCentury`(v1) @signature `Lorg/joda/time/Chronology;.yearOfCentury:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39566a.  v1:= temp @kind object;
  #L39566c.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateMidnight$Property;.<init>:(Lorg/joda/time/DateMidnight;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L395672.  return v0 @kind object;
}
procedure `org.joda.time.DateMidnight$Property` `yearOfEra`(`org.joda.time.DateMidnight` v2 @kind this) @signature `Lorg/joda/time/DateMidnight;.yearOfEra:()Lorg/joda/time/DateMidnight$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L395684.  v0:= new `org.joda.time.DateMidnight$Property`;
  #L395688.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39568e.  v1:= temp @kind object;
  #L395690.  call temp:= `yearOfEra`(v1) @signature `Lorg/joda/time/Chronology;.yearOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L395696.  v1:= temp @kind object;
  #L395698.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateMidnight$Property;.<init>:(Lorg/joda/time/DateMidnight;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39569e.  return v0 @kind object;
}
