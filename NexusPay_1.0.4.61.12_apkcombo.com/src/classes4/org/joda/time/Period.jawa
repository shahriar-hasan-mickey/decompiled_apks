record `org.joda.time.Period` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.base.BasePeriod` @kind class, `org.joda.time.ReadablePeriod` @kind interface, `java.io.Serializable` @kind interface {
}
global `org.joda.time.Period` `@@org.joda.time.Period.ZERO` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@org.joda.time.Period.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/Period;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a7fe4.  v0:= new `org.joda.time.Period`;
  #L3a7fe8.  call `<init>`(v0) @signature `Lorg/joda/time/Period;.<init>:()V` @kind direct;
  #L3a7fee.  `@@org.joda.time.Period.ZERO` @type ^`org.joda.time.Period` := v0 @kind object;
  #L3a7ff2.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v3 @kind this) @signature `Lorg/joda/time/Period;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3a8004.  v0:= 0L;
  #L3a8008.  v2:= 0I;
  #L3a800a.  call `<init>`(v3, v0, v2, v2) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(JLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a8010.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v10 @kind this, `int` v11 , `int` v12 , `int` v13 , `int` v14 ) @signature `Lorg/joda/time/Period;.<init>:(IIII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3a8024.  call temp:= `standard`() @signature `Lorg/joda/time/PeriodType;.standard:()Lorg/joda/time/PeriodType;` @kind static;
  #L3a802a.  v9:= temp @kind object;
  #L3a802c.  v1:= 0I;
  #L3a802e.  v2:= 0I;
  #L3a8030.  v3:= 0I;
  #L3a8032.  v4:= 0I;
  #L3a8034.  v0:= v10 @kind object;
  #L3a8036.  v5:= v11;
  #L3a8038.  v6:= v12;
  #L3a803a.  v7:= v13;
  #L3a803c.  v8:= v14;
  #L3a803e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(IIIIIIIILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a8044.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v10 @kind this, `int` v11 , `int` v12 , `int` v13 , `int` v14 , `int` v15 , `int` v16 , `int` v17 , `int` v18 ) @signature `Lorg/joda/time/Period;.<init>:(IIIIIIII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3a8058.  call temp:= `standard`() @signature `Lorg/joda/time/PeriodType;.standard:()Lorg/joda/time/PeriodType;` @kind static;
  #L3a805e.  v9:= temp @kind object;
  #L3a8060.  v0:= v10 @kind object;
  #L3a8062.  v1:= v11;
  #L3a8064.  v2:= v12;
  #L3a8066.  v3:= v13;
  #L3a8068.  v4:= v14;
  #L3a806a.  v5:= v15;
  #L3a806c.  v6:= v16;
  #L3a8070.  v7:= v17;
  #L3a8074.  v8:= v18;
  #L3a8078.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(IIIIIIIILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a807e.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 , `int` v6 , `int` v7 , `int` v8 , `org.joda.time.PeriodType` v9 @kind object) @signature `Lorg/joda/time/Period;.<init>:(IIIIIIIILorg/joda/time/PeriodType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a8090.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(IIIIIIIILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a8096.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/Period;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a812c.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(J)V` @kind direct;
  #L3a8132.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v7 @kind this, `long` v8 , `long` v10 ) @signature `Lorg/joda/time/Period;.<init>:(JJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a8144.  v5:= 0I;
  #L3a8146.  v6:= 0I;
  #L3a8148.  v0:= v7 @kind object;
  #L3a814a.  v1:= v8 @kind wide;
  #L3a814c.  v3:= v10 @kind wide;
  #L3a814e.  call `<init>`(v0, v1, v3, v5, v6) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a8154.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v7 @kind this, `long` v8 , `long` v10 , `org.joda.time.Chronology` v12 @kind object) @signature `Lorg/joda/time/Period;.<init>:(JJLorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a8168.  v5:= 0I;
  #L3a816a.  v0:= v7 @kind object;
  #L3a816c.  v1:= v8 @kind wide;
  #L3a816e.  v3:= v10 @kind wide;
  #L3a8170.  v6:= v12 @kind object;
  #L3a8172.  call `<init>`(v0, v1, v3, v5, v6) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a8178.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v7 @kind this, `long` v8 , `long` v10 , `org.joda.time.PeriodType` v12 @kind object) @signature `Lorg/joda/time/Period;.<init>:(JJLorg/joda/time/PeriodType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a818c.  v6:= 0I;
  #L3a818e.  v0:= v7 @kind object;
  #L3a8190.  v1:= v8 @kind wide;
  #L3a8192.  v3:= v10 @kind wide;
  #L3a8194.  v5:= v12 @kind object;
  #L3a8196.  call `<init>`(v0, v1, v3, v5, v6) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a819c.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v0 @kind this, `long` v1 , `long` v3 , `org.joda.time.PeriodType` v5 @kind object, `org.joda.time.Chronology` v6 @kind object) @signature `Lorg/joda/time/Period;.<init>:(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a81b0.  call `<init>`(v0, v1, v3, v5, v6) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(JJLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a81b6.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v1 @kind this, `long` v2 , `org.joda.time.Chronology` v4 @kind object) @signature `Lorg/joda/time/Period;.<init>:(JLorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a81c8.  v0:= 0I;
  #L3a81ca.  call `<init>`(v1, v2, v0, v4) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(JLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a81d0.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v1 @kind this, `long` v2 , `org.joda.time.PeriodType` v4 @kind object) @signature `Lorg/joda/time/Period;.<init>:(JLorg/joda/time/PeriodType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a81e4.  v0:= 0I;
  #L3a81e6.  call `<init>`(v1, v2, v4, v0) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(JLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a81ec.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v0 @kind this, `long` v1 , `org.joda.time.PeriodType` v3 @kind object, `org.joda.time.Chronology` v4 @kind object) @signature `Lorg/joda/time/Period;.<init>:(JLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a8200.  call `<init>`(v0, v1, v3, v4) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(JLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a8206.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/joda/time/Period;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a80c0.  v0:= 0I;
  #L3a80c2.  call `<init>`(v1, v2, v0, v0) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(Ljava/lang/Object;Lorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a80c8.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v1 @kind this, `java.lang.Object` v2 @kind object, `org.joda.time.Chronology` v3 @kind object) @signature `Lorg/joda/time/Period;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a80dc.  v0:= 0I;
  #L3a80de.  call `<init>`(v1, v2, v0, v3) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(Ljava/lang/Object;Lorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a80e4.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v1 @kind this, `java.lang.Object` v2 @kind object, `org.joda.time.PeriodType` v3 @kind object) @signature `Lorg/joda/time/Period;.<init>:(Ljava/lang/Object;Lorg/joda/time/PeriodType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a80f8.  v0:= 0I;
  #L3a80fa.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(Ljava/lang/Object;Lorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a8100.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v0 @kind this, `java.lang.Object` v1 @kind object, `org.joda.time.PeriodType` v2 @kind object, `org.joda.time.Chronology` v3 @kind object) @signature `Lorg/joda/time/Period;.<init>:(Ljava/lang/Object;Lorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a8114.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(Ljava/lang/Object;Lorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a811a.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v1 @kind this, `org.joda.time.ReadableDuration` v2 @kind object, `org.joda.time.ReadableInstant` v3 @kind object) @signature `Lorg/joda/time/Period;.<init>:(Lorg/joda/time/ReadableDuration;Lorg/joda/time/ReadableInstant;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a8218.  v0:= 0I;
  #L3a821a.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(Lorg/joda/time/ReadableDuration;Lorg/joda/time/ReadableInstant;Lorg/joda/time/PeriodType;)V` @kind direct;
  #L3a8220.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v0 @kind this, `org.joda.time.ReadableDuration` v1 @kind object, `org.joda.time.ReadableInstant` v2 @kind object, `org.joda.time.PeriodType` v3 @kind object) @signature `Lorg/joda/time/Period;.<init>:(Lorg/joda/time/ReadableDuration;Lorg/joda/time/ReadableInstant;Lorg/joda/time/PeriodType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a8234.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(Lorg/joda/time/ReadableDuration;Lorg/joda/time/ReadableInstant;Lorg/joda/time/PeriodType;)V` @kind direct;
  #L3a823a.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v1 @kind this, `org.joda.time.ReadableInstant` v2 @kind object, `org.joda.time.ReadableDuration` v3 @kind object) @signature `Lorg/joda/time/Period;.<init>:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableDuration;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a824c.  v0:= 0I;
  #L3a824e.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableDuration;Lorg/joda/time/PeriodType;)V` @kind direct;
  #L3a8254.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v0 @kind this, `org.joda.time.ReadableInstant` v1 @kind object, `org.joda.time.ReadableDuration` v2 @kind object, `org.joda.time.PeriodType` v3 @kind object) @signature `Lorg/joda/time/Period;.<init>:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableDuration;Lorg/joda/time/PeriodType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a8268.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableDuration;Lorg/joda/time/PeriodType;)V` @kind direct;
  #L3a826e.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v1 @kind this, `org.joda.time.ReadableInstant` v2 @kind object, `org.joda.time.ReadableInstant` v3 @kind object) @signature `Lorg/joda/time/Period;.<init>:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a8280.  v0:= 0I;
  #L3a8282.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;Lorg/joda/time/PeriodType;)V` @kind direct;
  #L3a8288.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v0 @kind this, `org.joda.time.ReadableInstant` v1 @kind object, `org.joda.time.ReadableInstant` v2 @kind object, `org.joda.time.PeriodType` v3 @kind object) @signature `Lorg/joda/time/Period;.<init>:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;Lorg/joda/time/PeriodType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a829c.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;Lorg/joda/time/PeriodType;)V` @kind direct;
  #L3a82a2.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v1 @kind this, `org.joda.time.ReadablePartial` v2 @kind object, `org.joda.time.ReadablePartial` v3 @kind object) @signature `Lorg/joda/time/Period;.<init>:(Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePartial;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a82b4.  v0:= 0I;
  #L3a82b6.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePartial;Lorg/joda/time/PeriodType;)V` @kind direct;
  #L3a82bc.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v0 @kind this, `org.joda.time.ReadablePartial` v1 @kind object, `org.joda.time.ReadablePartial` v2 @kind object, `org.joda.time.PeriodType` v3 @kind object) @signature `Lorg/joda/time/Period;.<init>:(Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePartial;Lorg/joda/time/PeriodType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a82d0.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/joda/time/base/BasePeriod;.<init>:(Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePartial;Lorg/joda/time/PeriodType;)V` @kind direct;
  #L3a82d6.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Period` v0 @kind this, `int`[] v1 @kind object, `org.joda.time.PeriodType` v2 @kind object) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3a80a8.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/base/BasePeriod;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a80ae.  return @kind void;
}
procedure `void` `checkYearsAndMonths`(`org.joda.time.Period` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/joda/time/Period;.checkYearsAndMonths:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3a82e8.  call temp:= `getMonths`(v3) @signature `Lorg/joda/time/Period;.getMonths:()I` @kind virtual;
  #L3a82ee.  v0:= temp;
  #L3a82f0.  v1:= "Cannot convert to " @kind object;
  #L3a82f4.  if v0 != 0 then goto L3a833a;
  #L3a82f8.  call temp:= `getYears`(v3) @signature `Lorg/joda/time/Period;.getYears:()I` @kind virtual;
  #L3a82fe.  v0:= temp;
  #L3a8300.  if v0 != 0 then goto L3a8306;
  #L3a8304.  return @kind void;
  #L3a8306.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3a830a.  v2:= new `java.lang.StringBuilder`;
  #L3a830e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a8314.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a831a.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8320.  v4:= " as this period contains years and years vary in length" @kind object;
  #L3a8324.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a832a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a8330.  v4:= temp @kind object;
  #L3a8332.  call `<init>`(v0, v4) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a8338.  throw v0;
  #L3a833a.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3a833e.  v2:= new `java.lang.StringBuilder`;
  #L3a8342.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a8348.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a834e.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8354.  v4:= " as this period contains months and months vary in length" @kind object;
  #L3a8358.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a835e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a8364.  v4:= temp @kind object;
  #L3a8366.  call `<init>`(v0, v4) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a836c.  throw v0;
}
procedure `org.joda.time.Period` `days`(`int` v4 ) @signature `Lorg/joda/time/Period;.days:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a6ff8.  v0:= new `org.joda.time.Period`;
  #L3a6ffc.  v1:= 8I;
  #L3a7000.  v1:= new `int`[v1];
  #L3a7004.  v2:= 0I;
  #L3a7006.  v1[v2]:= v2;
  #L3a700a.  v3:= 1I;
  #L3a700c.  v1[v3]:= v2;
  #L3a7010.  v3:= 2I;
  #L3a7012.  v1[v3]:= v2;
  #L3a7016.  v3:= 3I;
  #L3a7018.  v1[v3]:= v4;
  #L3a701c.  v4:= 4I;
  #L3a701e.  v1[v4]:= v2;
  #L3a7022.  v4:= 5I;
  #L3a7024.  v1[v4]:= v2;
  #L3a7028.  v4:= 6I;
  #L3a702a.  v1[v4]:= v2;
  #L3a702e.  v4:= 7I;
  #L3a7030.  v1[v4]:= v2;
  #L3a7034.  call temp:= `standard`() @signature `Lorg/joda/time/PeriodType;.standard:()Lorg/joda/time/PeriodType;` @kind static;
  #L3a703a.  v4:= temp @kind object;
  #L3a703c.  call `<init>`(v0, v1, v4) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7042.  return v0 @kind object;
}
procedure `org.joda.time.Period` `fieldDifference`(`org.joda.time.ReadablePartial` v7 @kind object, `org.joda.time.ReadablePartial` v8 @kind object) @signature `Lorg/joda/time/Period;.fieldDifference:(Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePartial;)Lorg/joda/time/Period;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a7054.  if v7 == 0 then goto L3a7130;
  #L3a7058.  if v8 == 0 then goto L3a7130;
  #L3a705c.  call temp:= `size`(v7) @signature `Lorg/joda/time/ReadablePartial;.size:()I` @kind interface;
  #L3a7062.  v0:= temp;
  #L3a7064.  call temp:= `size`(v8) @signature `Lorg/joda/time/ReadablePartial;.size:()I` @kind interface;
  #L3a706a.  v1:= temp;
  #L3a706c.  v2:= "ReadablePartial objects must have the same set of fields" @kind object;
  #L3a7070.  if v0 != v1 then goto L3a7124;
  #L3a7074.  call temp:= `size`(v7) @signature `Lorg/joda/time/ReadablePartial;.size:()I` @kind interface;
  #L3a707a.  v0:= temp;
  #L3a707c.  v0:= new `org.joda.time.DurationFieldType`[v0];
  #L3a7080.  call temp:= `size`(v7) @signature `Lorg/joda/time/ReadablePartial;.size:()I` @kind interface;
  #L3a7086.  v1:= temp;
  #L3a7088.  v1:= new `int`[v1];
  #L3a708c.  v3:= 0I;
  #L3a708e.  call temp:= `size`(v7) @signature `Lorg/joda/time/ReadablePartial;.size:()I` @kind interface;
  #L3a7094.  v4:= temp;
  #L3a7096.  if v3 >= v4 then goto L3a7110;
  #L3a709a.  call temp:= `getFieldType`(v7, v3) @signature `Lorg/joda/time/ReadablePartial;.getFieldType:(I)Lorg/joda/time/DateTimeFieldType;` @kind interface;
  #L3a70a0.  v5:= temp @kind object;
  #L3a70a2.  call temp:= `getFieldType`(v8, v3) @signature `Lorg/joda/time/ReadablePartial;.getFieldType:(I)Lorg/joda/time/DateTimeFieldType;` @kind interface;
  #L3a70a8.  v6:= temp @kind object;
  #L3a70aa.  if v5 != v6 then goto L3a7104;
  #L3a70ae.  call temp:= `getFieldType`(v7, v3) @signature `Lorg/joda/time/ReadablePartial;.getFieldType:(I)Lorg/joda/time/DateTimeFieldType;` @kind interface;
  #L3a70b4.  v5:= temp @kind object;
  #L3a70b6.  call temp:= `getDurationType`(v5) @signature `Lorg/joda/time/DateTimeFieldType;.getDurationType:()Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L3a70bc.  v5:= temp @kind object;
  #L3a70be.  v0[v3]:= v5 @kind object;
  #L3a70c2.  if v3 <= 0 then goto L3a70e8;
  #L3a70c6.  v5:= v3 + -1;
  #L3a70ca.  v5:= v0[v5] @kind object;
  #L3a70ce.  v6:= v0[v3] @kind object;
  #L3a70d2.  if v5 == v6 then goto L3a70d8;
  #L3a70d6.  goto L3a70e8;
  #L3a70d8.  v7:= new `java.lang.IllegalArgumentException`;
  #L3a70dc.  v8:= "ReadablePartial objects must not have overlapping fields" @kind object;
  #L3a70e0.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a70e6.  throw v7;
  #L3a70e8.  call temp:= `getValue`(v8, v3) @signature `Lorg/joda/time/ReadablePartial;.getValue:(I)I` @kind interface;
  #L3a70ee.  v5:= temp;
  #L3a70f0.  call temp:= `getValue`(v7, v3) @signature `Lorg/joda/time/ReadablePartial;.getValue:(I)I` @kind interface;
  #L3a70f6.  v6:= temp;
  #L3a70f8.  v5:= v5 - v6 @kind int;
  #L3a70fa.  v1[v3]:= v5;
  #L3a70fe.  v3:= v3 + 1;
  #L3a7102.  goto L3a7096;
  #L3a7104.  v7:= new `java.lang.IllegalArgumentException`;
  #L3a7108.  call `<init>`(v7, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a710e.  throw v7;
  #L3a7110.  v7:= new `org.joda.time.Period`;
  #L3a7114.  call temp:= `forFields`(v0) @signature `Lorg/joda/time/PeriodType;.forFields:([Lorg/joda/time/DurationFieldType;)Lorg/joda/time/PeriodType;` @kind static;
  #L3a711a.  v8:= temp @kind object;
  #L3a711c.  call `<init>`(v7, v1, v8) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7122.  return v7 @kind object;
  #L3a7124.  v7:= new `java.lang.IllegalArgumentException`;
  #L3a7128.  call `<init>`(v7, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a712e.  throw v7;
  #L3a7130.  v7:= new `java.lang.IllegalArgumentException`;
  #L3a7134.  v8:= "ReadablePartial objects must not be null" @kind object;
  #L3a7138.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a713e.  throw v7;
}
procedure `org.joda.time.Period` `hours`(`int` v4 ) @signature `Lorg/joda/time/Period;.hours:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a7150.  v0:= new `org.joda.time.Period`;
  #L3a7154.  v1:= 8I;
  #L3a7158.  v1:= new `int`[v1];
  #L3a715c.  v2:= 0I;
  #L3a715e.  v1[v2]:= v2;
  #L3a7162.  v3:= 1I;
  #L3a7164.  v1[v3]:= v2;
  #L3a7168.  v3:= 2I;
  #L3a716a.  v1[v3]:= v2;
  #L3a716e.  v3:= 3I;
  #L3a7170.  v1[v3]:= v2;
  #L3a7174.  v3:= 4I;
  #L3a7176.  v1[v3]:= v4;
  #L3a717a.  v4:= 5I;
  #L3a717c.  v1[v4]:= v2;
  #L3a7180.  v4:= 6I;
  #L3a7182.  v1[v4]:= v2;
  #L3a7186.  v4:= 7I;
  #L3a7188.  v1[v4]:= v2;
  #L3a718c.  call temp:= `standard`() @signature `Lorg/joda/time/PeriodType;.standard:()Lorg/joda/time/PeriodType;` @kind static;
  #L3a7192.  v4:= temp @kind object;
  #L3a7194.  call `<init>`(v0, v1, v4) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a719a.  return v0 @kind object;
}
procedure `org.joda.time.Period` `millis`(`int` v4 ) @signature `Lorg/joda/time/Period;.millis:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a71ac.  v0:= new `org.joda.time.Period`;
  #L3a71b0.  v1:= 8I;
  #L3a71b4.  v1:= new `int`[v1];
  #L3a71b8.  v2:= 0I;
  #L3a71ba.  v1[v2]:= v2;
  #L3a71be.  v3:= 1I;
  #L3a71c0.  v1[v3]:= v2;
  #L3a71c4.  v3:= 2I;
  #L3a71c6.  v1[v3]:= v2;
  #L3a71ca.  v3:= 3I;
  #L3a71cc.  v1[v3]:= v2;
  #L3a71d0.  v3:= 4I;
  #L3a71d2.  v1[v3]:= v2;
  #L3a71d6.  v3:= 5I;
  #L3a71d8.  v1[v3]:= v2;
  #L3a71dc.  v3:= 6I;
  #L3a71de.  v1[v3]:= v2;
  #L3a71e2.  v2:= 7I;
  #L3a71e4.  v1[v2]:= v4;
  #L3a71e8.  call temp:= `standard`() @signature `Lorg/joda/time/PeriodType;.standard:()Lorg/joda/time/PeriodType;` @kind static;
  #L3a71ee.  v4:= temp @kind object;
  #L3a71f0.  call `<init>`(v0, v1, v4) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a71f6.  return v0 @kind object;
}
procedure `org.joda.time.Period` `minutes`(`int` v4 ) @signature `Lorg/joda/time/Period;.minutes:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a741c.  v0:= new `org.joda.time.Period`;
  #L3a7420.  v1:= 8I;
  #L3a7424.  v1:= new `int`[v1];
  #L3a7428.  v2:= 0I;
  #L3a742a.  v1[v2]:= v2;
  #L3a742e.  v3:= 1I;
  #L3a7430.  v1[v3]:= v2;
  #L3a7434.  v3:= 2I;
  #L3a7436.  v1[v3]:= v2;
  #L3a743a.  v3:= 3I;
  #L3a743c.  v1[v3]:= v2;
  #L3a7440.  v3:= 4I;
  #L3a7442.  v1[v3]:= v2;
  #L3a7446.  v3:= 5I;
  #L3a7448.  v1[v3]:= v4;
  #L3a744c.  v4:= 6I;
  #L3a744e.  v1[v4]:= v2;
  #L3a7452.  v4:= 7I;
  #L3a7454.  v1[v4]:= v2;
  #L3a7458.  call temp:= `standard`() @signature `Lorg/joda/time/PeriodType;.standard:()Lorg/joda/time/PeriodType;` @kind static;
  #L3a745e.  v4:= temp @kind object;
  #L3a7460.  call `<init>`(v0, v1, v4) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7466.  return v0 @kind object;
}
procedure `org.joda.time.Period` `months`(`int` v4 ) @signature `Lorg/joda/time/Period;.months:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a7478.  v0:= new `org.joda.time.Period`;
  #L3a747c.  v1:= 8I;
  #L3a7480.  v1:= new `int`[v1];
  #L3a7484.  v2:= 0I;
  #L3a7486.  v1[v2]:= v2;
  #L3a748a.  v3:= 1I;
  #L3a748c.  v1[v3]:= v4;
  #L3a7490.  v4:= 2I;
  #L3a7492.  v1[v4]:= v2;
  #L3a7496.  v4:= 3I;
  #L3a7498.  v1[v4]:= v2;
  #L3a749c.  v4:= 4I;
  #L3a749e.  v1[v4]:= v2;
  #L3a74a2.  v4:= 5I;
  #L3a74a4.  v1[v4]:= v2;
  #L3a74a8.  v4:= 6I;
  #L3a74aa.  v1[v4]:= v2;
  #L3a74ae.  v4:= 7I;
  #L3a74b0.  v1[v4]:= v2;
  #L3a74b4.  call temp:= `standard`() @signature `Lorg/joda/time/PeriodType;.standard:()Lorg/joda/time/PeriodType;` @kind static;
  #L3a74ba.  v4:= temp @kind object;
  #L3a74bc.  call `<init>`(v0, v1, v4) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a74c2.  return v0 @kind object;
}
procedure `org.joda.time.Period` `parse`(`java.lang.String` v1 @kind object) @signature `Lorg/joda/time/Period;.parse:(Ljava/lang/String;)Lorg/joda/time/Period;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a76cc.  call temp:= `standard`() @signature `Lorg/joda/time/format/ISOPeriodFormat;.standard:()Lorg/joda/time/format/PeriodFormatter;` @kind static;
  #L3a76d2.  v0:= temp @kind object;
  #L3a76d4.  call temp:= `parse`(v1, v0) @signature `Lorg/joda/time/Period;.parse:(Ljava/lang/String;Lorg/joda/time/format/PeriodFormatter;)Lorg/joda/time/Period;` @kind static;
  #L3a76da.  v1:= temp @kind object;
  #L3a76dc.  return v1 @kind object;
}
procedure `org.joda.time.Period` `parse`(`java.lang.String` v0 @kind object, `org.joda.time.format.PeriodFormatter` v1 @kind object) @signature `Lorg/joda/time/Period;.parse:(Ljava/lang/String;Lorg/joda/time/format/PeriodFormatter;)Lorg/joda/time/Period;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3a76f0.  call temp:= `parsePeriod`(v1, v0) @signature `Lorg/joda/time/format/PeriodFormatter;.parsePeriod:(Ljava/lang/String;)Lorg/joda/time/Period;` @kind virtual;
  #L3a76f6.  v0:= temp @kind object;
  #L3a76f8.  return v0 @kind object;
}
procedure `org.joda.time.Period` `seconds`(`int` v4 ) @signature `Lorg/joda/time/Period;.seconds:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a7a50.  v0:= new `org.joda.time.Period`;
  #L3a7a54.  v1:= 8I;
  #L3a7a58.  v1:= new `int`[v1];
  #L3a7a5c.  v2:= 0I;
  #L3a7a5e.  v1[v2]:= v2;
  #L3a7a62.  v3:= 1I;
  #L3a7a64.  v1[v3]:= v2;
  #L3a7a68.  v3:= 2I;
  #L3a7a6a.  v1[v3]:= v2;
  #L3a7a6e.  v3:= 3I;
  #L3a7a70.  v1[v3]:= v2;
  #L3a7a74.  v3:= 4I;
  #L3a7a76.  v1[v3]:= v2;
  #L3a7a7a.  v3:= 5I;
  #L3a7a7c.  v1[v3]:= v2;
  #L3a7a80.  v3:= 6I;
  #L3a7a82.  v1[v3]:= v4;
  #L3a7a86.  v4:= 7I;
  #L3a7a88.  v1[v4]:= v2;
  #L3a7a8c.  call temp:= `standard`() @signature `Lorg/joda/time/PeriodType;.standard:()Lorg/joda/time/PeriodType;` @kind static;
  #L3a7a92.  v4:= temp @kind object;
  #L3a7a94.  call `<init>`(v0, v1, v4) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7a9a.  return v0 @kind object;
}
procedure `org.joda.time.Period` `weeks`(`int` v4 ) @signature `Lorg/joda/time/Period;.weeks:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a7ac0.  v0:= new `org.joda.time.Period`;
  #L3a7ac4.  v1:= 8I;
  #L3a7ac8.  v1:= new `int`[v1];
  #L3a7acc.  v2:= 0I;
  #L3a7ace.  v1[v2]:= v2;
  #L3a7ad2.  v3:= 1I;
  #L3a7ad4.  v1[v3]:= v2;
  #L3a7ad8.  v3:= 2I;
  #L3a7ada.  v1[v3]:= v4;
  #L3a7ade.  v4:= 3I;
  #L3a7ae0.  v1[v4]:= v2;
  #L3a7ae4.  v4:= 4I;
  #L3a7ae6.  v1[v4]:= v2;
  #L3a7aea.  v4:= 5I;
  #L3a7aec.  v1[v4]:= v2;
  #L3a7af0.  v4:= 6I;
  #L3a7af2.  v1[v4]:= v2;
  #L3a7af6.  v4:= 7I;
  #L3a7af8.  v1[v4]:= v2;
  #L3a7afc.  call temp:= `standard`() @signature `Lorg/joda/time/PeriodType;.standard:()Lorg/joda/time/PeriodType;` @kind static;
  #L3a7b02.  v4:= temp @kind object;
  #L3a7b04.  call `<init>`(v0, v1, v4) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7b0a.  return v0 @kind object;
}
procedure `org.joda.time.Period` `years`(`int` v3 ) @signature `Lorg/joda/time/Period;.years:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3a7e28.  v0:= new `org.joda.time.Period`;
  #L3a7e2c.  v1:= 9I;
  #L3a7e30.  v1:= new `int`[v1];
  #L3a7e34.  v2:= 0I;
  #L3a7e36.  v1[v2]:= v3;
  #L3a7e3a.  v3:= 1I;
  #L3a7e3c.  v1[v3]:= v2;
  #L3a7e40.  v3:= 2I;
  #L3a7e42.  v1[v3]:= v2;
  #L3a7e46.  v3:= 3I;
  #L3a7e48.  v1[v3]:= v2;
  #L3a7e4c.  v3:= 4I;
  #L3a7e4e.  v1[v3]:= v2;
  #L3a7e52.  v3:= 5I;
  #L3a7e54.  v1[v3]:= v2;
  #L3a7e58.  v3:= 6I;
  #L3a7e5a.  v1[v3]:= v2;
  #L3a7e5e.  v3:= 7I;
  #L3a7e60.  v1[v3]:= v2;
  #L3a7e64.  v3:= 8I;
  #L3a7e68.  v1[v3]:= v2;
  #L3a7e6c.  call temp:= `standard`() @signature `Lorg/joda/time/PeriodType;.standard:()Lorg/joda/time/PeriodType;` @kind static;
  #L3a7e72.  v3:= temp @kind object;
  #L3a7e74.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7e7a.  return v0 @kind object;
}
procedure `int` `getDays`(`org.joda.time.Period` v2 @kind this) @signature `Lorg/joda/time/Period;.getDays:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6c0c.  call temp:= `getPeriodType`(v2) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a6c12.  v0:= temp @kind object;
  #L3a6c14.  v1:= `@@org.joda.time.PeriodType.DAY_INDEX` @type ^`int`;
  #L3a6c18.  call temp:= `getIndexedField`(v0, v2, v1) @signature `Lorg/joda/time/PeriodType;.getIndexedField:(Lorg/joda/time/ReadablePeriod;I)I` @kind virtual;
  #L3a6c1e.  v0:= temp;
  #L3a6c20.  return v0;
}
procedure `int` `getHours`(`org.joda.time.Period` v2 @kind this) @signature `Lorg/joda/time/Period;.getHours:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6c34.  call temp:= `getPeriodType`(v2) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a6c3a.  v0:= temp @kind object;
  #L3a6c3c.  v1:= `@@org.joda.time.PeriodType.HOUR_INDEX` @type ^`int`;
  #L3a6c40.  call temp:= `getIndexedField`(v0, v2, v1) @signature `Lorg/joda/time/PeriodType;.getIndexedField:(Lorg/joda/time/ReadablePeriod;I)I` @kind virtual;
  #L3a6c46.  v0:= temp;
  #L3a6c48.  return v0;
}
procedure `int` `getMillis`(`org.joda.time.Period` v2 @kind this) @signature `Lorg/joda/time/Period;.getMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6c5c.  call temp:= `getPeriodType`(v2) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a6c62.  v0:= temp @kind object;
  #L3a6c64.  v1:= `@@org.joda.time.PeriodType.MILLI_INDEX` @type ^`int`;
  #L3a6c68.  call temp:= `getIndexedField`(v0, v2, v1) @signature `Lorg/joda/time/PeriodType;.getIndexedField:(Lorg/joda/time/ReadablePeriod;I)I` @kind virtual;
  #L3a6c6e.  v0:= temp;
  #L3a6c70.  return v0;
}
procedure `int` `getMinutes`(`org.joda.time.Period` v2 @kind this) @signature `Lorg/joda/time/Period;.getMinutes:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6c84.  call temp:= `getPeriodType`(v2) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a6c8a.  v0:= temp @kind object;
  #L3a6c8c.  v1:= `@@org.joda.time.PeriodType.MINUTE_INDEX` @type ^`int`;
  #L3a6c90.  call temp:= `getIndexedField`(v0, v2, v1) @signature `Lorg/joda/time/PeriodType;.getIndexedField:(Lorg/joda/time/ReadablePeriod;I)I` @kind virtual;
  #L3a6c96.  v0:= temp;
  #L3a6c98.  return v0;
}
procedure `int` `getMonths`(`org.joda.time.Period` v2 @kind this) @signature `Lorg/joda/time/Period;.getMonths:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6cac.  call temp:= `getPeriodType`(v2) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a6cb2.  v0:= temp @kind object;
  #L3a6cb4.  v1:= `@@org.joda.time.PeriodType.MONTH_INDEX` @type ^`int`;
  #L3a6cb8.  call temp:= `getIndexedField`(v0, v2, v1) @signature `Lorg/joda/time/PeriodType;.getIndexedField:(Lorg/joda/time/ReadablePeriod;I)I` @kind virtual;
  #L3a6cbe.  v0:= temp;
  #L3a6cc0.  return v0;
}
procedure `int` `getSeconds`(`org.joda.time.Period` v2 @kind this) @signature `Lorg/joda/time/Period;.getSeconds:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6cd4.  call temp:= `getPeriodType`(v2) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a6cda.  v0:= temp @kind object;
  #L3a6cdc.  v1:= `@@org.joda.time.PeriodType.SECOND_INDEX` @type ^`int`;
  #L3a6ce0.  call temp:= `getIndexedField`(v0, v2, v1) @signature `Lorg/joda/time/PeriodType;.getIndexedField:(Lorg/joda/time/ReadablePeriod;I)I` @kind virtual;
  #L3a6ce6.  v0:= temp;
  #L3a6ce8.  return v0;
}
procedure `int` `getWeeks`(`org.joda.time.Period` v2 @kind this) @signature `Lorg/joda/time/Period;.getWeeks:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6cfc.  call temp:= `getPeriodType`(v2) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a6d02.  v0:= temp @kind object;
  #L3a6d04.  v1:= `@@org.joda.time.PeriodType.WEEK_INDEX` @type ^`int`;
  #L3a6d08.  call temp:= `getIndexedField`(v0, v2, v1) @signature `Lorg/joda/time/PeriodType;.getIndexedField:(Lorg/joda/time/ReadablePeriod;I)I` @kind virtual;
  #L3a6d0e.  v0:= temp;
  #L3a6d10.  return v0;
}
procedure `int` `getYears`(`org.joda.time.Period` v2 @kind this) @signature `Lorg/joda/time/Period;.getYears:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6d24.  call temp:= `getPeriodType`(v2) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a6d2a.  v0:= temp @kind object;
  #L3a6d2c.  v1:= `@@org.joda.time.PeriodType.YEAR_INDEX` @type ^`int`;
  #L3a6d30.  call temp:= `getIndexedField`(v0, v2, v1) @signature `Lorg/joda/time/PeriodType;.getIndexedField:(Lorg/joda/time/ReadablePeriod;I)I` @kind virtual;
  #L3a6d36.  v0:= temp;
  #L3a6d38.  return v0;
}
procedure `org.joda.time.Period` `minus`(`org.joda.time.Period` v4 @kind this, `org.joda.time.ReadablePeriod` v5 @kind object) @signature `Lorg/joda/time/Period;.minus:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a7208.  if v5 != 0 then goto L3a720e;
  #L3a720c.  return v4 @kind object;
  #L3a720e.  call temp:= `getValues`(v4) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a7214.  v0:= temp @kind object;
  #L3a7216.  call temp:= `getPeriodType`(v4) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a721c.  v1:= temp @kind object;
  #L3a721e.  v2:= `@@org.joda.time.PeriodType.YEAR_INDEX` @type ^`int`;
  #L3a7222.  v3:= `@@org.joda.time.DurationFieldType.YEARS_TYPE` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3a7226.  call temp:= `get`(v5, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3a722c.  v3:= temp;
  #L3a722e.  v3:= -v3 @kind int;
  #L3a7230.  call temp:= `addIndexedField`(v1, v4, v2, v0, v3) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7236.  call temp:= `getPeriodType`(v4) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a723c.  v1:= temp @kind object;
  #L3a723e.  v2:= `@@org.joda.time.PeriodType.MONTH_INDEX` @type ^`int`;
  #L3a7242.  v3:= `@@org.joda.time.DurationFieldType.MONTHS_TYPE` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3a7246.  call temp:= `get`(v5, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3a724c.  v3:= temp;
  #L3a724e.  v3:= -v3 @kind int;
  #L3a7250.  call temp:= `addIndexedField`(v1, v4, v2, v0, v3) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7256.  call temp:= `getPeriodType`(v4) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a725c.  v1:= temp @kind object;
  #L3a725e.  v2:= `@@org.joda.time.PeriodType.WEEK_INDEX` @type ^`int`;
  #L3a7262.  v3:= `@@org.joda.time.DurationFieldType.WEEKS_TYPE` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3a7266.  call temp:= `get`(v5, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3a726c.  v3:= temp;
  #L3a726e.  v3:= -v3 @kind int;
  #L3a7270.  call temp:= `addIndexedField`(v1, v4, v2, v0, v3) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7276.  call temp:= `getPeriodType`(v4) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a727c.  v1:= temp @kind object;
  #L3a727e.  v2:= `@@org.joda.time.PeriodType.DAY_INDEX` @type ^`int`;
  #L3a7282.  v3:= `@@org.joda.time.DurationFieldType.DAYS_TYPE` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3a7286.  call temp:= `get`(v5, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3a728c.  v3:= temp;
  #L3a728e.  v3:= -v3 @kind int;
  #L3a7290.  call temp:= `addIndexedField`(v1, v4, v2, v0, v3) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7296.  call temp:= `getPeriodType`(v4) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a729c.  v1:= temp @kind object;
  #L3a729e.  v2:= `@@org.joda.time.PeriodType.HOUR_INDEX` @type ^`int`;
  #L3a72a2.  v3:= `@@org.joda.time.DurationFieldType.HOURS_TYPE` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3a72a6.  call temp:= `get`(v5, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3a72ac.  v3:= temp;
  #L3a72ae.  v3:= -v3 @kind int;
  #L3a72b0.  call temp:= `addIndexedField`(v1, v4, v2, v0, v3) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a72b6.  call temp:= `getPeriodType`(v4) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a72bc.  v1:= temp @kind object;
  #L3a72be.  v2:= `@@org.joda.time.PeriodType.MINUTE_INDEX` @type ^`int`;
  #L3a72c2.  v3:= `@@org.joda.time.DurationFieldType.MINUTES_TYPE` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3a72c6.  call temp:= `get`(v5, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3a72cc.  v3:= temp;
  #L3a72ce.  v3:= -v3 @kind int;
  #L3a72d0.  call temp:= `addIndexedField`(v1, v4, v2, v0, v3) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a72d6.  call temp:= `getPeriodType`(v4) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a72dc.  v1:= temp @kind object;
  #L3a72de.  v2:= `@@org.joda.time.PeriodType.SECOND_INDEX` @type ^`int`;
  #L3a72e2.  v3:= `@@org.joda.time.DurationFieldType.SECONDS_TYPE` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3a72e6.  call temp:= `get`(v5, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3a72ec.  v3:= temp;
  #L3a72ee.  v3:= -v3 @kind int;
  #L3a72f0.  call temp:= `addIndexedField`(v1, v4, v2, v0, v3) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a72f6.  call temp:= `getPeriodType`(v4) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a72fc.  v1:= temp @kind object;
  #L3a72fe.  v2:= `@@org.joda.time.PeriodType.MILLI_INDEX` @type ^`int`;
  #L3a7302.  v3:= `@@org.joda.time.DurationFieldType.MILLIS_TYPE` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3a7306.  call temp:= `get`(v5, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3a730c.  v5:= temp;
  #L3a730e.  v5:= -v5 @kind int;
  #L3a7310.  call temp:= `addIndexedField`(v1, v4, v2, v0, v5) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7316.  v5:= new `org.joda.time.Period`;
  #L3a731a.  call temp:= `getPeriodType`(v4) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7320.  v1:= temp @kind object;
  #L3a7322.  call `<init>`(v5, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7328.  return v5 @kind object;
}
procedure `org.joda.time.Period` `minusDays`(`org.joda.time.Period` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/Period;.minusDays:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;

  #L3a733c.  v1:= -v1 @kind int;
  #L3a733e.  call temp:= `plusDays`(v0, v1) @signature `Lorg/joda/time/Period;.plusDays:(I)Lorg/joda/time/Period;` @kind virtual;
  #L3a7344.  v1:= temp @kind object;
  #L3a7346.  return v1 @kind object;
}
procedure `org.joda.time.Period` `minusHours`(`org.joda.time.Period` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/Period;.minusHours:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;

  #L3a7358.  v1:= -v1 @kind int;
  #L3a735a.  call temp:= `plusHours`(v0, v1) @signature `Lorg/joda/time/Period;.plusHours:(I)Lorg/joda/time/Period;` @kind virtual;
  #L3a7360.  v1:= temp @kind object;
  #L3a7362.  return v1 @kind object;
}
procedure `org.joda.time.Period` `minusMillis`(`org.joda.time.Period` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/Period;.minusMillis:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;

  #L3a7374.  v1:= -v1 @kind int;
  #L3a7376.  call temp:= `plusMillis`(v0, v1) @signature `Lorg/joda/time/Period;.plusMillis:(I)Lorg/joda/time/Period;` @kind virtual;
  #L3a737c.  v1:= temp @kind object;
  #L3a737e.  return v1 @kind object;
}
procedure `org.joda.time.Period` `minusMinutes`(`org.joda.time.Period` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/Period;.minusMinutes:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;

  #L3a7390.  v1:= -v1 @kind int;
  #L3a7392.  call temp:= `plusMinutes`(v0, v1) @signature `Lorg/joda/time/Period;.plusMinutes:(I)Lorg/joda/time/Period;` @kind virtual;
  #L3a7398.  v1:= temp @kind object;
  #L3a739a.  return v1 @kind object;
}
procedure `org.joda.time.Period` `minusMonths`(`org.joda.time.Period` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/Period;.minusMonths:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;

  #L3a73ac.  v1:= -v1 @kind int;
  #L3a73ae.  call temp:= `plusMonths`(v0, v1) @signature `Lorg/joda/time/Period;.plusMonths:(I)Lorg/joda/time/Period;` @kind virtual;
  #L3a73b4.  v1:= temp @kind object;
  #L3a73b6.  return v1 @kind object;
}
procedure `org.joda.time.Period` `minusSeconds`(`org.joda.time.Period` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/Period;.minusSeconds:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;

  #L3a73c8.  v1:= -v1 @kind int;
  #L3a73ca.  call temp:= `plusSeconds`(v0, v1) @signature `Lorg/joda/time/Period;.plusSeconds:(I)Lorg/joda/time/Period;` @kind virtual;
  #L3a73d0.  v1:= temp @kind object;
  #L3a73d2.  return v1 @kind object;
}
procedure `org.joda.time.Period` `minusWeeks`(`org.joda.time.Period` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/Period;.minusWeeks:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;

  #L3a73e4.  v1:= -v1 @kind int;
  #L3a73e6.  call temp:= `plusWeeks`(v0, v1) @signature `Lorg/joda/time/Period;.plusWeeks:(I)Lorg/joda/time/Period;` @kind virtual;
  #L3a73ec.  v1:= temp @kind object;
  #L3a73ee.  return v1 @kind object;
}
procedure `org.joda.time.Period` `minusYears`(`org.joda.time.Period` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/Period;.minusYears:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;

  #L3a7400.  v1:= -v1 @kind int;
  #L3a7402.  call temp:= `plusYears`(v0, v1) @signature `Lorg/joda/time/Period;.plusYears:(I)Lorg/joda/time/Period;` @kind virtual;
  #L3a7408.  v1:= temp @kind object;
  #L3a740a.  return v1 @kind object;
}
procedure `org.joda.time.Period` `multipliedBy`(`org.joda.time.Period` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/Period;.multipliedBy:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a74d4.  v0:= `@@org.joda.time.Period.ZERO` @type ^`org.joda.time.Period` @kind object;
  #L3a74d8.  if v3 == v0 then goto L3a751e;
  #L3a74dc.  v0:= 1I;
  #L3a74de.  if v4 != v0 then goto L3a74e4;
  #L3a74e2.  goto L3a751e;
  #L3a74e4.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a74ea.  v0:= temp @kind object;
  #L3a74ec.  v1:= 0I;
  #L3a74ee.  v2:= length @variable v0;
  #L3a74f0.  if v1 >= v2 then goto L3a750a;
  #L3a74f4.  v2:= v0[v1];
  #L3a74f8.  call temp:= `safeMultiply`(v2, v4) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L3a74fe.  v2:= temp;
  #L3a7500.  v0[v1]:= v2;
  #L3a7504.  v1:= v1 + 1;
  #L3a7508.  goto L3a74ee;
  #L3a750a.  v4:= new `org.joda.time.Period`;
  #L3a750e.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7514.  v1:= temp @kind object;
  #L3a7516.  call `<init>`(v4, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a751c.  return v4 @kind object;
  #L3a751e.  return v3 @kind object;
}
procedure `org.joda.time.Period` `negated`(`org.joda.time.Period` v1 @kind this) @signature `Lorg/joda/time/Period;.negated:()Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7530.  v0:= -1I;
  #L3a7532.  call temp:= `multipliedBy`(v1, v0) @signature `Lorg/joda/time/Period;.multipliedBy:(I)Lorg/joda/time/Period;` @kind virtual;
  #L3a7538.  v0:= temp @kind object;
  #L3a753a.  return v0 @kind object;
}
procedure `org.joda.time.Period` `normalizedStandard`(`org.joda.time.Period` v1 @kind this) @signature `Lorg/joda/time/Period;.normalizedStandard:()Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a754c.  call temp:= `standard`() @signature `Lorg/joda/time/PeriodType;.standard:()Lorg/joda/time/PeriodType;` @kind static;
  #L3a7552.  v0:= temp @kind object;
  #L3a7554.  call temp:= `normalizedStandard`(v1, v0) @signature `Lorg/joda/time/Period;.normalizedStandard:(Lorg/joda/time/PeriodType;)Lorg/joda/time/Period;` @kind virtual;
  #L3a755a.  v0:= temp @kind object;
  #L3a755c.  return v0 @kind object;
}
procedure `org.joda.time.Period` `normalizedStandard`(`org.joda.time.Period` v7 @kind this, `org.joda.time.PeriodType` v8 @kind object) @signature `Lorg/joda/time/Period;.normalizedStandard:(Lorg/joda/time/PeriodType;)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a7570.  call temp:= `getPeriodType`(v8) @signature `Lorg/joda/time/DateTimeUtils;.getPeriodType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;` @kind static;
  #L3a7576.  v8:= temp @kind object;
  #L3a7578.  call temp:= `getMillis`(v7) @signature `Lorg/joda/time/Period;.getMillis:()I` @kind virtual;
  #L3a757e.  v0:= temp;
  #L3a7580.  v0:= (`long`) v0 @kind i2l;
  #L3a7582.  call temp:= `getSeconds`(v7) @signature `Lorg/joda/time/Period;.getSeconds:()I` @kind virtual;
  #L3a7588.  v2:= temp;
  #L3a758a.  v2:= (`long`) v2 @kind i2l;
  #L3a758c.  v4:= 1000L;
  #L3a7590.  v2:= v2 * v4 @kind long;
  #L3a7594.  v0:= v0 + v2 @kind long;
  #L3a7596.  call temp:= `getMinutes`(v7) @signature `Lorg/joda/time/Period;.getMinutes:()I` @kind virtual;
  #L3a759c.  v2:= temp;
  #L3a759e.  v2:= (`long`) v2 @kind i2l;
  #L3a75a0.  v4:= 60000L;
  #L3a75a6.  v2:= v2 * v4 @kind long;
  #L3a75aa.  v0:= v0 + v2 @kind long;
  #L3a75ac.  call temp:= `getHours`(v7) @signature `Lorg/joda/time/Period;.getHours:()I` @kind virtual;
  #L3a75b2.  v2:= temp;
  #L3a75b4.  v2:= (`long`) v2 @kind i2l;
  #L3a75b6.  v4:= 3600000L;
  #L3a75bc.  v2:= v2 * v4 @kind long;
  #L3a75c0.  v0:= v0 + v2 @kind long;
  #L3a75c2.  call temp:= `getDays`(v7) @signature `Lorg/joda/time/Period;.getDays:()I` @kind virtual;
  #L3a75c8.  v2:= temp;
  #L3a75ca.  v2:= (`long`) v2 @kind i2l;
  #L3a75cc.  v4:= 86400000L;
  #L3a75d2.  v2:= v2 * v4 @kind long;
  #L3a75d6.  v0:= v0 + v2 @kind long;
  #L3a75d8.  call temp:= `getWeeks`(v7) @signature `Lorg/joda/time/Period;.getWeeks:()I` @kind virtual;
  #L3a75de.  v2:= temp;
  #L3a75e0.  v2:= (`long`) v2 @kind i2l;
  #L3a75e2.  v4:= 604800000L;
  #L3a75e8.  v2:= v2 * v4 @kind long;
  #L3a75ec.  v0:= v0 + v2 @kind long;
  #L3a75ee.  v2:= new `org.joda.time.Period`;
  #L3a75f2.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3a75f8.  v3:= temp @kind object;
  #L3a75fa.  call `<init>`(v2, v0, v8, v3) @signature `Lorg/joda/time/Period;.<init>:(JLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a7600.  call temp:= `getYears`(v7) @signature `Lorg/joda/time/Period;.getYears:()I` @kind virtual;
  #L3a7606.  v0:= temp;
  #L3a7608.  call temp:= `getMonths`(v7) @signature `Lorg/joda/time/Period;.getMonths:()I` @kind virtual;
  #L3a760e.  v1:= temp;
  #L3a7610.  if v0 != 0 then goto L3a7618;
  #L3a7614.  if v1 == 0 then goto L3a7684;
  #L3a7618.  v3:= (`long`) v0 @kind i2l;
  #L3a761a.  v5:= 12L;
  #L3a761e.  v3:= v3 * v5 @kind long;
  #L3a7622.  v0:= (`long`) v1 @kind i2l;
  #L3a7624.  v3:= v3 + v0 @kind long;
  #L3a7626.  v0:= `@@org.joda.time.DurationFieldType.YEARS_TYPE` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3a762a.  call temp:= `isSupported`(v8, v0) @signature `Lorg/joda/time/PeriodType;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @kind virtual;
  #L3a7630.  v0:= temp;
  #L3a7632.  if v0 == 0 then goto L3a7652;
  #L3a7636.  v0:= v3 / v5 @kind long;
  #L3a763a.  call temp:= `safeToInt`(v0) @signature `Lorg/joda/time/field/FieldUtils;.safeToInt:(J)I` @kind static;
  #L3a7640.  v0:= temp;
  #L3a7642.  call temp:= `withYears`(v2, v0) @signature `Lorg/joda/time/Period;.withYears:(I)Lorg/joda/time/Period;` @kind virtual;
  #L3a7648.  v2:= temp @kind object;
  #L3a764a.  v0:= v0 * 12;
  #L3a764e.  v0:= (`long`) v0 @kind i2l;
  #L3a7650.  v3:= v3 - v0 @kind long;
  #L3a7652.  v0:= `@@org.joda.time.DurationFieldType.MONTHS_TYPE` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3a7656.  call temp:= `isSupported`(v8, v0) @signature `Lorg/joda/time/PeriodType;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @kind virtual;
  #L3a765c.  v8:= temp;
  #L3a765e.  if v8 == 0 then goto L3a7678;
  #L3a7662.  call temp:= `safeToInt`(v3) @signature `Lorg/joda/time/field/FieldUtils;.safeToInt:(J)I` @kind static;
  #L3a7668.  v8:= temp;
  #L3a766a.  call temp:= `withMonths`(v2, v8) @signature `Lorg/joda/time/Period;.withMonths:(I)Lorg/joda/time/Period;` @kind virtual;
  #L3a7670.  v0:= temp @kind object;
  #L3a7672.  v1:= (`long`) v8 @kind i2l;
  #L3a7674.  v3:= v3 - v1 @kind long;
  #L3a7676.  v2:= v0 @kind object;
  #L3a7678.  v0:= 0L;
  #L3a767c.  v8:= lcmp(v3, v0);
  #L3a7680.  if v8 != 0 then goto L3a7686;
  #L3a7684.  return v2 @kind object;
  #L3a7686.  v8:= new `java.lang.UnsupportedOperationException`;
  #L3a768a.  v0:= new `java.lang.StringBuilder`;
  #L3a768e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a7694.  v1:= "Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: " @kind object;
  #L3a7698.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a769e.  call temp:= `toString`(v7) @signature `Lorg/joda/time/base/AbstractPeriod;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a76a4.  v1:= temp @kind object;
  #L3a76a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a76ac.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a76b2.  v0:= temp @kind object;
  #L3a76b4.  call `<init>`(v8, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a76ba.  throw v8;
}
procedure `org.joda.time.Period` `plus`(`org.joda.time.Period` v4 @kind this, `org.joda.time.ReadablePeriod` v5 @kind object) @signature `Lorg/joda/time/Period;.plus:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a770c.  if v5 != 0 then goto L3a7712;
  #L3a7710.  return v4 @kind object;
  #L3a7712.  call temp:= `getValues`(v4) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a7718.  v0:= temp @kind object;
  #L3a771a.  call temp:= `getPeriodType`(v4) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7720.  v1:= temp @kind object;
  #L3a7722.  v2:= `@@org.joda.time.PeriodType.YEAR_INDEX` @type ^`int`;
  #L3a7726.  v3:= `@@org.joda.time.DurationFieldType.YEARS_TYPE` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3a772a.  call temp:= `get`(v5, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3a7730.  v3:= temp;
  #L3a7732.  call temp:= `addIndexedField`(v1, v4, v2, v0, v3) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7738.  call temp:= `getPeriodType`(v4) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a773e.  v1:= temp @kind object;
  #L3a7740.  v2:= `@@org.joda.time.PeriodType.MONTH_INDEX` @type ^`int`;
  #L3a7744.  v3:= `@@org.joda.time.DurationFieldType.MONTHS_TYPE` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3a7748.  call temp:= `get`(v5, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3a774e.  v3:= temp;
  #L3a7750.  call temp:= `addIndexedField`(v1, v4, v2, v0, v3) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7756.  call temp:= `getPeriodType`(v4) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a775c.  v1:= temp @kind object;
  #L3a775e.  v2:= `@@org.joda.time.PeriodType.WEEK_INDEX` @type ^`int`;
  #L3a7762.  v3:= `@@org.joda.time.DurationFieldType.WEEKS_TYPE` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3a7766.  call temp:= `get`(v5, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3a776c.  v3:= temp;
  #L3a776e.  call temp:= `addIndexedField`(v1, v4, v2, v0, v3) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7774.  call temp:= `getPeriodType`(v4) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a777a.  v1:= temp @kind object;
  #L3a777c.  v2:= `@@org.joda.time.PeriodType.DAY_INDEX` @type ^`int`;
  #L3a7780.  v3:= `@@org.joda.time.DurationFieldType.DAYS_TYPE` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3a7784.  call temp:= `get`(v5, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3a778a.  v3:= temp;
  #L3a778c.  call temp:= `addIndexedField`(v1, v4, v2, v0, v3) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7792.  call temp:= `getPeriodType`(v4) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7798.  v1:= temp @kind object;
  #L3a779a.  v2:= `@@org.joda.time.PeriodType.HOUR_INDEX` @type ^`int`;
  #L3a779e.  v3:= `@@org.joda.time.DurationFieldType.HOURS_TYPE` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3a77a2.  call temp:= `get`(v5, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3a77a8.  v3:= temp;
  #L3a77aa.  call temp:= `addIndexedField`(v1, v4, v2, v0, v3) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a77b0.  call temp:= `getPeriodType`(v4) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a77b6.  v1:= temp @kind object;
  #L3a77b8.  v2:= `@@org.joda.time.PeriodType.MINUTE_INDEX` @type ^`int`;
  #L3a77bc.  v3:= `@@org.joda.time.DurationFieldType.MINUTES_TYPE` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3a77c0.  call temp:= `get`(v5, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3a77c6.  v3:= temp;
  #L3a77c8.  call temp:= `addIndexedField`(v1, v4, v2, v0, v3) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a77ce.  call temp:= `getPeriodType`(v4) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a77d4.  v1:= temp @kind object;
  #L3a77d6.  v2:= `@@org.joda.time.PeriodType.SECOND_INDEX` @type ^`int`;
  #L3a77da.  v3:= `@@org.joda.time.DurationFieldType.SECONDS_TYPE` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3a77de.  call temp:= `get`(v5, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3a77e4.  v3:= temp;
  #L3a77e6.  call temp:= `addIndexedField`(v1, v4, v2, v0, v3) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a77ec.  call temp:= `getPeriodType`(v4) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a77f2.  v1:= temp @kind object;
  #L3a77f4.  v2:= `@@org.joda.time.PeriodType.MILLI_INDEX` @type ^`int`;
  #L3a77f8.  v3:= `@@org.joda.time.DurationFieldType.MILLIS_TYPE` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3a77fc.  call temp:= `get`(v5, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3a7802.  v5:= temp;
  #L3a7804.  call temp:= `addIndexedField`(v1, v4, v2, v0, v5) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a780a.  v5:= new `org.joda.time.Period`;
  #L3a780e.  call temp:= `getPeriodType`(v4) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7814.  v1:= temp @kind object;
  #L3a7816.  call `<init>`(v5, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a781c.  return v5 @kind object;
}
procedure `org.joda.time.Period` `plusDays`(`org.joda.time.Period` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/Period;.plusDays:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a7830.  if v4 != 0 then goto L3a7836;
  #L3a7834.  return v3 @kind object;
  #L3a7836.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a783c.  v0:= temp @kind object;
  #L3a783e.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7844.  v1:= temp @kind object;
  #L3a7846.  v2:= `@@org.joda.time.PeriodType.DAY_INDEX` @type ^`int`;
  #L3a784a.  call temp:= `addIndexedField`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7850.  v4:= new `org.joda.time.Period`;
  #L3a7854.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a785a.  v1:= temp @kind object;
  #L3a785c.  call `<init>`(v4, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7862.  return v4 @kind object;
}
procedure `org.joda.time.Period` `plusHours`(`org.joda.time.Period` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/Period;.plusHours:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a7874.  if v4 != 0 then goto L3a787a;
  #L3a7878.  return v3 @kind object;
  #L3a787a.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a7880.  v0:= temp @kind object;
  #L3a7882.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7888.  v1:= temp @kind object;
  #L3a788a.  v2:= `@@org.joda.time.PeriodType.HOUR_INDEX` @type ^`int`;
  #L3a788e.  call temp:= `addIndexedField`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7894.  v4:= new `org.joda.time.Period`;
  #L3a7898.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a789e.  v1:= temp @kind object;
  #L3a78a0.  call `<init>`(v4, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a78a6.  return v4 @kind object;
}
procedure `org.joda.time.Period` `plusMillis`(`org.joda.time.Period` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/Period;.plusMillis:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a78b8.  if v4 != 0 then goto L3a78be;
  #L3a78bc.  return v3 @kind object;
  #L3a78be.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a78c4.  v0:= temp @kind object;
  #L3a78c6.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a78cc.  v1:= temp @kind object;
  #L3a78ce.  v2:= `@@org.joda.time.PeriodType.MILLI_INDEX` @type ^`int`;
  #L3a78d2.  call temp:= `addIndexedField`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a78d8.  v4:= new `org.joda.time.Period`;
  #L3a78dc.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a78e2.  v1:= temp @kind object;
  #L3a78e4.  call `<init>`(v4, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a78ea.  return v4 @kind object;
}
procedure `org.joda.time.Period` `plusMinutes`(`org.joda.time.Period` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/Period;.plusMinutes:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a78fc.  if v4 != 0 then goto L3a7902;
  #L3a7900.  return v3 @kind object;
  #L3a7902.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a7908.  v0:= temp @kind object;
  #L3a790a.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7910.  v1:= temp @kind object;
  #L3a7912.  v2:= `@@org.joda.time.PeriodType.MINUTE_INDEX` @type ^`int`;
  #L3a7916.  call temp:= `addIndexedField`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a791c.  v4:= new `org.joda.time.Period`;
  #L3a7920.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7926.  v1:= temp @kind object;
  #L3a7928.  call `<init>`(v4, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a792e.  return v4 @kind object;
}
procedure `org.joda.time.Period` `plusMonths`(`org.joda.time.Period` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/Period;.plusMonths:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a7940.  if v4 != 0 then goto L3a7946;
  #L3a7944.  return v3 @kind object;
  #L3a7946.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a794c.  v0:= temp @kind object;
  #L3a794e.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7954.  v1:= temp @kind object;
  #L3a7956.  v2:= `@@org.joda.time.PeriodType.MONTH_INDEX` @type ^`int`;
  #L3a795a.  call temp:= `addIndexedField`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7960.  v4:= new `org.joda.time.Period`;
  #L3a7964.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a796a.  v1:= temp @kind object;
  #L3a796c.  call `<init>`(v4, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7972.  return v4 @kind object;
}
procedure `org.joda.time.Period` `plusSeconds`(`org.joda.time.Period` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/Period;.plusSeconds:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a7984.  if v4 != 0 then goto L3a798a;
  #L3a7988.  return v3 @kind object;
  #L3a798a.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a7990.  v0:= temp @kind object;
  #L3a7992.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7998.  v1:= temp @kind object;
  #L3a799a.  v2:= `@@org.joda.time.PeriodType.SECOND_INDEX` @type ^`int`;
  #L3a799e.  call temp:= `addIndexedField`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a79a4.  v4:= new `org.joda.time.Period`;
  #L3a79a8.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a79ae.  v1:= temp @kind object;
  #L3a79b0.  call `<init>`(v4, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a79b6.  return v4 @kind object;
}
procedure `org.joda.time.Period` `plusWeeks`(`org.joda.time.Period` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/Period;.plusWeeks:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a79c8.  if v4 != 0 then goto L3a79ce;
  #L3a79cc.  return v3 @kind object;
  #L3a79ce.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a79d4.  v0:= temp @kind object;
  #L3a79d6.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a79dc.  v1:= temp @kind object;
  #L3a79de.  v2:= `@@org.joda.time.PeriodType.WEEK_INDEX` @type ^`int`;
  #L3a79e2.  call temp:= `addIndexedField`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a79e8.  v4:= new `org.joda.time.Period`;
  #L3a79ec.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a79f2.  v1:= temp @kind object;
  #L3a79f4.  call `<init>`(v4, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a79fa.  return v4 @kind object;
}
procedure `org.joda.time.Period` `plusYears`(`org.joda.time.Period` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/Period;.plusYears:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a7a0c.  if v4 != 0 then goto L3a7a12;
  #L3a7a10.  return v3 @kind object;
  #L3a7a12.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a7a18.  v0:= temp @kind object;
  #L3a7a1a.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7a20.  v1:= temp @kind object;
  #L3a7a22.  v2:= `@@org.joda.time.PeriodType.YEAR_INDEX` @type ^`int`;
  #L3a7a26.  call temp:= `addIndexedField`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/PeriodType;.addIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7a2c.  v4:= new `org.joda.time.Period`;
  #L3a7a30.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7a36.  v1:= temp @kind object;
  #L3a7a38.  call `<init>`(v4, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7a3e.  return v4 @kind object;
}
procedure `org.joda.time.Period` `toPeriod`(`org.joda.time.Period` v0 @kind this) @signature `Lorg/joda/time/Period;.toPeriod:()Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;

  #L3a7aac.  return v0 @kind object;
}
procedure `org.joda.time.Days` `toStandardDays`(`org.joda.time.Period` v6 @kind this) @signature `Lorg/joda/time/Period;.toStandardDays:()Lorg/joda/time/Days;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a6d4c.  v0:= "Days" @kind object;
  #L3a6d50.  call `checkYearsAndMonths`(v6, v0) @signature `Lorg/joda/time/Period;.checkYearsAndMonths:(Ljava/lang/String;)V` @kind direct;
  #L3a6d56.  call temp:= `getMillis`(v6) @signature `Lorg/joda/time/Period;.getMillis:()I` @kind virtual;
  #L3a6d5c.  v0:= temp;
  #L3a6d5e.  v0:= (`long`) v0 @kind i2l;
  #L3a6d60.  call temp:= `getSeconds`(v6) @signature `Lorg/joda/time/Period;.getSeconds:()I` @kind virtual;
  #L3a6d66.  v2:= temp;
  #L3a6d68.  v2:= (`long`) v2 @kind i2l;
  #L3a6d6a.  v4:= 1000L;
  #L3a6d6e.  v2:= v2 * v4 @kind long;
  #L3a6d72.  v0:= v0 + v2 @kind long;
  #L3a6d74.  call temp:= `getMinutes`(v6) @signature `Lorg/joda/time/Period;.getMinutes:()I` @kind virtual;
  #L3a6d7a.  v2:= temp;
  #L3a6d7c.  v2:= (`long`) v2 @kind i2l;
  #L3a6d7e.  v4:= 60000L;
  #L3a6d84.  v2:= v2 * v4 @kind long;
  #L3a6d88.  v0:= v0 + v2 @kind long;
  #L3a6d8a.  call temp:= `getHours`(v6) @signature `Lorg/joda/time/Period;.getHours:()I` @kind virtual;
  #L3a6d90.  v2:= temp;
  #L3a6d92.  v2:= (`long`) v2 @kind i2l;
  #L3a6d94.  v4:= 3600000L;
  #L3a6d9a.  v2:= v2 * v4 @kind long;
  #L3a6d9e.  v0:= v0 + v2 @kind long;
  #L3a6da0.  v2:= 86400000L;
  #L3a6da6.  v0:= v0 / v2 @kind long;
  #L3a6da8.  call temp:= `getDays`(v6) @signature `Lorg/joda/time/Period;.getDays:()I` @kind virtual;
  #L3a6dae.  v2:= temp;
  #L3a6db0.  v2:= (`long`) v2 @kind i2l;
  #L3a6db2.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(JJ)J` @kind static;
  #L3a6db8.  v0:= temp @kind wide;
  #L3a6dba.  call temp:= `getWeeks`(v6) @signature `Lorg/joda/time/Period;.getWeeks:()I` @kind virtual;
  #L3a6dc0.  v2:= temp;
  #L3a6dc2.  v2:= (`long`) v2 @kind i2l;
  #L3a6dc4.  v4:= 7L;
  #L3a6dc8.  v2:= v2 * v4 @kind long;
  #L3a6dcc.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(JJ)J` @kind static;
  #L3a6dd2.  v0:= temp @kind wide;
  #L3a6dd4.  call temp:= `safeToInt`(v0) @signature `Lorg/joda/time/field/FieldUtils;.safeToInt:(J)I` @kind static;
  #L3a6dda.  v0:= temp;
  #L3a6ddc.  call temp:= `days`(v0) @signature `Lorg/joda/time/Days;.days:(I)Lorg/joda/time/Days;` @kind static;
  #L3a6de2.  v0:= temp @kind object;
  #L3a6de4.  return v0 @kind object;
}
procedure `org.joda.time.Duration` `toStandardDuration`(`org.joda.time.Period` v6 @kind this) @signature `Lorg/joda/time/Period;.toStandardDuration:()Lorg/joda/time/Duration;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a6df8.  v0:= "Duration" @kind object;
  #L3a6dfc.  call `checkYearsAndMonths`(v6, v0) @signature `Lorg/joda/time/Period;.checkYearsAndMonths:(Ljava/lang/String;)V` @kind direct;
  #L3a6e02.  call temp:= `getMillis`(v6) @signature `Lorg/joda/time/Period;.getMillis:()I` @kind virtual;
  #L3a6e08.  v0:= temp;
  #L3a6e0a.  v0:= (`long`) v0 @kind i2l;
  #L3a6e0c.  call temp:= `getSeconds`(v6) @signature `Lorg/joda/time/Period;.getSeconds:()I` @kind virtual;
  #L3a6e12.  v2:= temp;
  #L3a6e14.  v2:= (`long`) v2 @kind i2l;
  #L3a6e16.  v4:= 1000L;
  #L3a6e1a.  v2:= v2 * v4 @kind long;
  #L3a6e1e.  v0:= v0 + v2 @kind long;
  #L3a6e20.  call temp:= `getMinutes`(v6) @signature `Lorg/joda/time/Period;.getMinutes:()I` @kind virtual;
  #L3a6e26.  v2:= temp;
  #L3a6e28.  v2:= (`long`) v2 @kind i2l;
  #L3a6e2a.  v4:= 60000L;
  #L3a6e30.  v2:= v2 * v4 @kind long;
  #L3a6e34.  v0:= v0 + v2 @kind long;
  #L3a6e36.  call temp:= `getHours`(v6) @signature `Lorg/joda/time/Period;.getHours:()I` @kind virtual;
  #L3a6e3c.  v2:= temp;
  #L3a6e3e.  v2:= (`long`) v2 @kind i2l;
  #L3a6e40.  v4:= 3600000L;
  #L3a6e46.  v2:= v2 * v4 @kind long;
  #L3a6e4a.  v0:= v0 + v2 @kind long;
  #L3a6e4c.  call temp:= `getDays`(v6) @signature `Lorg/joda/time/Period;.getDays:()I` @kind virtual;
  #L3a6e52.  v2:= temp;
  #L3a6e54.  v2:= (`long`) v2 @kind i2l;
  #L3a6e56.  v4:= 86400000L;
  #L3a6e5c.  v2:= v2 * v4 @kind long;
  #L3a6e60.  v0:= v0 + v2 @kind long;
  #L3a6e62.  call temp:= `getWeeks`(v6) @signature `Lorg/joda/time/Period;.getWeeks:()I` @kind virtual;
  #L3a6e68.  v2:= temp;
  #L3a6e6a.  v2:= (`long`) v2 @kind i2l;
  #L3a6e6c.  v4:= 604800000L;
  #L3a6e72.  v2:= v2 * v4 @kind long;
  #L3a6e76.  v0:= v0 + v2 @kind long;
  #L3a6e78.  v2:= new `org.joda.time.Duration`;
  #L3a6e7c.  call `<init>`(v2, v0) @signature `Lorg/joda/time/Duration;.<init>:(J)V` @kind direct;
  #L3a6e82.  return v2 @kind object;
}
procedure `org.joda.time.Hours` `toStandardHours`(`org.joda.time.Period` v6 @kind this) @signature `Lorg/joda/time/Period;.toStandardHours:()Lorg/joda/time/Hours;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a6e94.  v0:= "Hours" @kind object;
  #L3a6e98.  call `checkYearsAndMonths`(v6, v0) @signature `Lorg/joda/time/Period;.checkYearsAndMonths:(Ljava/lang/String;)V` @kind direct;
  #L3a6e9e.  call temp:= `getMillis`(v6) @signature `Lorg/joda/time/Period;.getMillis:()I` @kind virtual;
  #L3a6ea4.  v0:= temp;
  #L3a6ea6.  v0:= (`long`) v0 @kind i2l;
  #L3a6ea8.  call temp:= `getSeconds`(v6) @signature `Lorg/joda/time/Period;.getSeconds:()I` @kind virtual;
  #L3a6eae.  v2:= temp;
  #L3a6eb0.  v2:= (`long`) v2 @kind i2l;
  #L3a6eb2.  v4:= 1000L;
  #L3a6eb6.  v2:= v2 * v4 @kind long;
  #L3a6eba.  v0:= v0 + v2 @kind long;
  #L3a6ebc.  call temp:= `getMinutes`(v6) @signature `Lorg/joda/time/Period;.getMinutes:()I` @kind virtual;
  #L3a6ec2.  v2:= temp;
  #L3a6ec4.  v2:= (`long`) v2 @kind i2l;
  #L3a6ec6.  v4:= 60000L;
  #L3a6ecc.  v2:= v2 * v4 @kind long;
  #L3a6ed0.  v0:= v0 + v2 @kind long;
  #L3a6ed2.  v2:= 3600000L;
  #L3a6ed8.  v0:= v0 / v2 @kind long;
  #L3a6eda.  call temp:= `getHours`(v6) @signature `Lorg/joda/time/Period;.getHours:()I` @kind virtual;
  #L3a6ee0.  v2:= temp;
  #L3a6ee2.  v2:= (`long`) v2 @kind i2l;
  #L3a6ee4.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(JJ)J` @kind static;
  #L3a6eea.  v0:= temp @kind wide;
  #L3a6eec.  call temp:= `getDays`(v6) @signature `Lorg/joda/time/Period;.getDays:()I` @kind virtual;
  #L3a6ef2.  v2:= temp;
  #L3a6ef4.  v2:= (`long`) v2 @kind i2l;
  #L3a6ef6.  v4:= 24L;
  #L3a6efa.  v2:= v2 * v4 @kind long;
  #L3a6efe.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(JJ)J` @kind static;
  #L3a6f04.  v0:= temp @kind wide;
  #L3a6f06.  call temp:= `getWeeks`(v6) @signature `Lorg/joda/time/Period;.getWeeks:()I` @kind virtual;
  #L3a6f0c.  v2:= temp;
  #L3a6f0e.  v2:= (`long`) v2 @kind i2l;
  #L3a6f10.  v4:= 168L;
  #L3a6f14.  v2:= v2 * v4 @kind long;
  #L3a6f18.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(JJ)J` @kind static;
  #L3a6f1e.  v0:= temp @kind wide;
  #L3a6f20.  call temp:= `safeToInt`(v0) @signature `Lorg/joda/time/field/FieldUtils;.safeToInt:(J)I` @kind static;
  #L3a6f26.  v0:= temp;
  #L3a6f28.  call temp:= `hours`(v0) @signature `Lorg/joda/time/Hours;.hours:(I)Lorg/joda/time/Hours;` @kind static;
  #L3a6f2e.  v0:= temp @kind object;
  #L3a6f30.  return v0 @kind object;
}
procedure `org.joda.time.Minutes` `toStandardMinutes`(`org.joda.time.Period` v6 @kind this) @signature `Lorg/joda/time/Period;.toStandardMinutes:()Lorg/joda/time/Minutes;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a6f44.  v0:= "Minutes" @kind object;
  #L3a6f48.  call `checkYearsAndMonths`(v6, v0) @signature `Lorg/joda/time/Period;.checkYearsAndMonths:(Ljava/lang/String;)V` @kind direct;
  #L3a6f4e.  call temp:= `getMillis`(v6) @signature `Lorg/joda/time/Period;.getMillis:()I` @kind virtual;
  #L3a6f54.  v0:= temp;
  #L3a6f56.  v0:= (`long`) v0 @kind i2l;
  #L3a6f58.  call temp:= `getSeconds`(v6) @signature `Lorg/joda/time/Period;.getSeconds:()I` @kind virtual;
  #L3a6f5e.  v2:= temp;
  #L3a6f60.  v2:= (`long`) v2 @kind i2l;
  #L3a6f62.  v4:= 1000L;
  #L3a6f66.  v2:= v2 * v4 @kind long;
  #L3a6f6a.  v0:= v0 + v2 @kind long;
  #L3a6f6c.  v2:= 60000L;
  #L3a6f72.  v0:= v0 / v2 @kind long;
  #L3a6f74.  call temp:= `getMinutes`(v6) @signature `Lorg/joda/time/Period;.getMinutes:()I` @kind virtual;
  #L3a6f7a.  v2:= temp;
  #L3a6f7c.  v2:= (`long`) v2 @kind i2l;
  #L3a6f7e.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(JJ)J` @kind static;
  #L3a6f84.  v0:= temp @kind wide;
  #L3a6f86.  call temp:= `getHours`(v6) @signature `Lorg/joda/time/Period;.getHours:()I` @kind virtual;
  #L3a6f8c.  v2:= temp;
  #L3a6f8e.  v2:= (`long`) v2 @kind i2l;
  #L3a6f90.  v4:= 60L;
  #L3a6f94.  v2:= v2 * v4 @kind long;
  #L3a6f98.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(JJ)J` @kind static;
  #L3a6f9e.  v0:= temp @kind wide;
  #L3a6fa0.  call temp:= `getDays`(v6) @signature `Lorg/joda/time/Period;.getDays:()I` @kind virtual;
  #L3a6fa6.  v2:= temp;
  #L3a6fa8.  v2:= (`long`) v2 @kind i2l;
  #L3a6faa.  v4:= 1440L;
  #L3a6fae.  v2:= v2 * v4 @kind long;
  #L3a6fb2.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(JJ)J` @kind static;
  #L3a6fb8.  v0:= temp @kind wide;
  #L3a6fba.  call temp:= `getWeeks`(v6) @signature `Lorg/joda/time/Period;.getWeeks:()I` @kind virtual;
  #L3a6fc0.  v2:= temp;
  #L3a6fc2.  v2:= (`long`) v2 @kind i2l;
  #L3a6fc4.  v4:= 10080L;
  #L3a6fc8.  v2:= v2 * v4 @kind long;
  #L3a6fcc.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(JJ)J` @kind static;
  #L3a6fd2.  v0:= temp @kind wide;
  #L3a6fd4.  call temp:= `safeToInt`(v0) @signature `Lorg/joda/time/field/FieldUtils;.safeToInt:(J)I` @kind static;
  #L3a6fda.  v0:= temp;
  #L3a6fdc.  call temp:= `minutes`(v0) @signature `Lorg/joda/time/Minutes;.minutes:(I)Lorg/joda/time/Minutes;` @kind static;
  #L3a6fe2.  v0:= temp @kind object;
  #L3a6fe4.  return v0 @kind object;
}
procedure `org.joda.time.Seconds` `toStandardSeconds`(`org.joda.time.Period` v6 @kind this) @signature `Lorg/joda/time/Period;.toStandardSeconds:()Lorg/joda/time/Seconds;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a7e8c.  v0:= "Seconds" @kind object;
  #L3a7e90.  call `checkYearsAndMonths`(v6, v0) @signature `Lorg/joda/time/Period;.checkYearsAndMonths:(Ljava/lang/String;)V` @kind direct;
  #L3a7e96.  call temp:= `getMillis`(v6) @signature `Lorg/joda/time/Period;.getMillis:()I` @kind virtual;
  #L3a7e9c.  v0:= temp;
  #L3a7e9e.  v0:= v0 / 1000;
  #L3a7ea2.  v0:= (`long`) v0 @kind i2l;
  #L3a7ea4.  call temp:= `getSeconds`(v6) @signature `Lorg/joda/time/Period;.getSeconds:()I` @kind virtual;
  #L3a7eaa.  v2:= temp;
  #L3a7eac.  v2:= (`long`) v2 @kind i2l;
  #L3a7eae.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(JJ)J` @kind static;
  #L3a7eb4.  v0:= temp @kind wide;
  #L3a7eb6.  call temp:= `getMinutes`(v6) @signature `Lorg/joda/time/Period;.getMinutes:()I` @kind virtual;
  #L3a7ebc.  v2:= temp;
  #L3a7ebe.  v2:= (`long`) v2 @kind i2l;
  #L3a7ec0.  v4:= 60L;
  #L3a7ec4.  v2:= v2 * v4 @kind long;
  #L3a7ec8.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(JJ)J` @kind static;
  #L3a7ece.  v0:= temp @kind wide;
  #L3a7ed0.  call temp:= `getHours`(v6) @signature `Lorg/joda/time/Period;.getHours:()I` @kind virtual;
  #L3a7ed6.  v2:= temp;
  #L3a7ed8.  v2:= (`long`) v2 @kind i2l;
  #L3a7eda.  v4:= 3600L;
  #L3a7ede.  v2:= v2 * v4 @kind long;
  #L3a7ee2.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(JJ)J` @kind static;
  #L3a7ee8.  v0:= temp @kind wide;
  #L3a7eea.  call temp:= `getDays`(v6) @signature `Lorg/joda/time/Period;.getDays:()I` @kind virtual;
  #L3a7ef0.  v2:= temp;
  #L3a7ef2.  v2:= (`long`) v2 @kind i2l;
  #L3a7ef4.  v4:= 86400L;
  #L3a7efa.  v2:= v2 * v4 @kind long;
  #L3a7efe.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(JJ)J` @kind static;
  #L3a7f04.  v0:= temp @kind wide;
  #L3a7f06.  call temp:= `getWeeks`(v6) @signature `Lorg/joda/time/Period;.getWeeks:()I` @kind virtual;
  #L3a7f0c.  v2:= temp;
  #L3a7f0e.  v2:= (`long`) v2 @kind i2l;
  #L3a7f10.  v4:= 604800L;
  #L3a7f16.  v2:= v2 * v4 @kind long;
  #L3a7f1a.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(JJ)J` @kind static;
  #L3a7f20.  v0:= temp @kind wide;
  #L3a7f22.  call temp:= `safeToInt`(v0) @signature `Lorg/joda/time/field/FieldUtils;.safeToInt:(J)I` @kind static;
  #L3a7f28.  v0:= temp;
  #L3a7f2a.  call temp:= `seconds`(v0) @signature `Lorg/joda/time/Seconds;.seconds:(I)Lorg/joda/time/Seconds;` @kind static;
  #L3a7f30.  v0:= temp @kind object;
  #L3a7f32.  return v0 @kind object;
}
procedure `org.joda.time.Weeks` `toStandardWeeks`(`org.joda.time.Period` v6 @kind this) @signature `Lorg/joda/time/Period;.toStandardWeeks:()Lorg/joda/time/Weeks;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a7f44.  v0:= "Weeks" @kind object;
  #L3a7f48.  call `checkYearsAndMonths`(v6, v0) @signature `Lorg/joda/time/Period;.checkYearsAndMonths:(Ljava/lang/String;)V` @kind direct;
  #L3a7f4e.  call temp:= `getMillis`(v6) @signature `Lorg/joda/time/Period;.getMillis:()I` @kind virtual;
  #L3a7f54.  v0:= temp;
  #L3a7f56.  v0:= (`long`) v0 @kind i2l;
  #L3a7f58.  call temp:= `getSeconds`(v6) @signature `Lorg/joda/time/Period;.getSeconds:()I` @kind virtual;
  #L3a7f5e.  v2:= temp;
  #L3a7f60.  v2:= (`long`) v2 @kind i2l;
  #L3a7f62.  v4:= 1000L;
  #L3a7f66.  v2:= v2 * v4 @kind long;
  #L3a7f6a.  v0:= v0 + v2 @kind long;
  #L3a7f6c.  call temp:= `getMinutes`(v6) @signature `Lorg/joda/time/Period;.getMinutes:()I` @kind virtual;
  #L3a7f72.  v2:= temp;
  #L3a7f74.  v2:= (`long`) v2 @kind i2l;
  #L3a7f76.  v4:= 60000L;
  #L3a7f7c.  v2:= v2 * v4 @kind long;
  #L3a7f80.  v0:= v0 + v2 @kind long;
  #L3a7f82.  call temp:= `getHours`(v6) @signature `Lorg/joda/time/Period;.getHours:()I` @kind virtual;
  #L3a7f88.  v2:= temp;
  #L3a7f8a.  v2:= (`long`) v2 @kind i2l;
  #L3a7f8c.  v4:= 3600000L;
  #L3a7f92.  v2:= v2 * v4 @kind long;
  #L3a7f96.  v0:= v0 + v2 @kind long;
  #L3a7f98.  call temp:= `getDays`(v6) @signature `Lorg/joda/time/Period;.getDays:()I` @kind virtual;
  #L3a7f9e.  v2:= temp;
  #L3a7fa0.  v2:= (`long`) v2 @kind i2l;
  #L3a7fa2.  v4:= 86400000L;
  #L3a7fa8.  v2:= v2 * v4 @kind long;
  #L3a7fac.  v0:= v0 + v2 @kind long;
  #L3a7fae.  call temp:= `getWeeks`(v6) @signature `Lorg/joda/time/Period;.getWeeks:()I` @kind virtual;
  #L3a7fb4.  v2:= temp;
  #L3a7fb6.  v2:= (`long`) v2 @kind i2l;
  #L3a7fb8.  v4:= 604800000L;
  #L3a7fbe.  v0:= v0 / v4 @kind long;
  #L3a7fc0.  v2:= v2 + v0 @kind long;
  #L3a7fc2.  call temp:= `safeToInt`(v2) @signature `Lorg/joda/time/field/FieldUtils;.safeToInt:(J)I` @kind static;
  #L3a7fc8.  v0:= temp;
  #L3a7fca.  call temp:= `weeks`(v0) @signature `Lorg/joda/time/Weeks;.weeks:(I)Lorg/joda/time/Weeks;` @kind static;
  #L3a7fd0.  v0:= temp @kind object;
  #L3a7fd2.  return v0 @kind object;
}
procedure `org.joda.time.Period` `withDays`(`org.joda.time.Period` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/Period;.withDays:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a7b1c.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a7b22.  v0:= temp @kind object;
  #L3a7b24.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7b2a.  v1:= temp @kind object;
  #L3a7b2c.  v2:= `@@org.joda.time.PeriodType.DAY_INDEX` @type ^`int`;
  #L3a7b30.  call temp:= `setIndexedField`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/PeriodType;.setIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7b36.  v4:= new `org.joda.time.Period`;
  #L3a7b3a.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7b40.  v1:= temp @kind object;
  #L3a7b42.  call `<init>`(v4, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7b48.  return v4 @kind object;
}
procedure `org.joda.time.Period` `withField`(`org.joda.time.Period` v1 @kind this, `org.joda.time.DurationFieldType` v2 @kind object, `int` v3 ) @signature `Lorg/joda/time/Period;.withField:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7b5c.  if v2 == 0 then goto L3a7b82;
  #L3a7b60.  call temp:= `getValues`(v1) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a7b66.  v0:= temp @kind object;
  #L3a7b68.  call `setFieldInto`(v1, v0, v2, v3) @signature `Lorg/joda/time/base/BasePeriod;.setFieldInto:([ILorg/joda/time/DurationFieldType;I)V` @kind super;
  #L3a7b6e.  v2:= new `org.joda.time.Period`;
  #L3a7b72.  call temp:= `getPeriodType`(v1) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7b78.  v3:= temp @kind object;
  #L3a7b7a.  call `<init>`(v2, v0, v3) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7b80.  return v2 @kind object;
  #L3a7b82.  v2:= new `java.lang.IllegalArgumentException`;
  #L3a7b86.  v3:= "Field must not be null" @kind object;
  #L3a7b8a.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a7b90.  throw v2;
}
procedure `org.joda.time.Period` `withFieldAdded`(`org.joda.time.Period` v1 @kind this, `org.joda.time.DurationFieldType` v2 @kind object, `int` v3 ) @signature `Lorg/joda/time/Period;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7ba4.  if v2 == 0 then goto L3a7bd0;
  #L3a7ba8.  if v3 != 0 then goto L3a7bae;
  #L3a7bac.  return v1 @kind object;
  #L3a7bae.  call temp:= `getValues`(v1) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a7bb4.  v0:= temp @kind object;
  #L3a7bb6.  call `addFieldInto`(v1, v0, v2, v3) @signature `Lorg/joda/time/base/BasePeriod;.addFieldInto:([ILorg/joda/time/DurationFieldType;I)V` @kind super;
  #L3a7bbc.  v2:= new `org.joda.time.Period`;
  #L3a7bc0.  call temp:= `getPeriodType`(v1) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7bc6.  v3:= temp @kind object;
  #L3a7bc8.  call `<init>`(v2, v0, v3) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7bce.  return v2 @kind object;
  #L3a7bd0.  v2:= new `java.lang.IllegalArgumentException`;
  #L3a7bd4.  v3:= "Field must not be null" @kind object;
  #L3a7bd8.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a7bde.  throw v2;
}
procedure `org.joda.time.Period` `withFields`(`org.joda.time.Period` v2 @kind this, `org.joda.time.ReadablePeriod` v3 @kind object) @signature `Lorg/joda/time/Period;.withFields:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a7bf0.  if v3 != 0 then goto L3a7bf6;
  #L3a7bf4.  return v2 @kind object;
  #L3a7bf6.  call temp:= `getValues`(v2) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a7bfc.  v0:= temp @kind object;
  #L3a7bfe.  call temp:= `mergePeriodInto`(v2, v0, v3) @signature `Lorg/joda/time/base/BasePeriod;.mergePeriodInto:([ILorg/joda/time/ReadablePeriod;)[I` @kind super;
  #L3a7c04.  v3:= temp @kind object;
  #L3a7c06.  v0:= new `org.joda.time.Period`;
  #L3a7c0a.  call temp:= `getPeriodType`(v2) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7c10.  v1:= temp @kind object;
  #L3a7c12.  call `<init>`(v0, v3, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7c18.  return v0 @kind object;
}
procedure `org.joda.time.Period` `withHours`(`org.joda.time.Period` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/Period;.withHours:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a7c2c.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a7c32.  v0:= temp @kind object;
  #L3a7c34.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7c3a.  v1:= temp @kind object;
  #L3a7c3c.  v2:= `@@org.joda.time.PeriodType.HOUR_INDEX` @type ^`int`;
  #L3a7c40.  call temp:= `setIndexedField`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/PeriodType;.setIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7c46.  v4:= new `org.joda.time.Period`;
  #L3a7c4a.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7c50.  v1:= temp @kind object;
  #L3a7c52.  call `<init>`(v4, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7c58.  return v4 @kind object;
}
procedure `org.joda.time.Period` `withMillis`(`org.joda.time.Period` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/Period;.withMillis:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a7c6c.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a7c72.  v0:= temp @kind object;
  #L3a7c74.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7c7a.  v1:= temp @kind object;
  #L3a7c7c.  v2:= `@@org.joda.time.PeriodType.MILLI_INDEX` @type ^`int`;
  #L3a7c80.  call temp:= `setIndexedField`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/PeriodType;.setIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7c86.  v4:= new `org.joda.time.Period`;
  #L3a7c8a.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7c90.  v1:= temp @kind object;
  #L3a7c92.  call `<init>`(v4, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7c98.  return v4 @kind object;
}
procedure `org.joda.time.Period` `withMinutes`(`org.joda.time.Period` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/Period;.withMinutes:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a7cac.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a7cb2.  v0:= temp @kind object;
  #L3a7cb4.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7cba.  v1:= temp @kind object;
  #L3a7cbc.  v2:= `@@org.joda.time.PeriodType.MINUTE_INDEX` @type ^`int`;
  #L3a7cc0.  call temp:= `setIndexedField`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/PeriodType;.setIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7cc6.  v4:= new `org.joda.time.Period`;
  #L3a7cca.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7cd0.  v1:= temp @kind object;
  #L3a7cd2.  call `<init>`(v4, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7cd8.  return v4 @kind object;
}
procedure `org.joda.time.Period` `withMonths`(`org.joda.time.Period` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/Period;.withMonths:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a7cec.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a7cf2.  v0:= temp @kind object;
  #L3a7cf4.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7cfa.  v1:= temp @kind object;
  #L3a7cfc.  v2:= `@@org.joda.time.PeriodType.MONTH_INDEX` @type ^`int`;
  #L3a7d00.  call temp:= `setIndexedField`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/PeriodType;.setIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7d06.  v4:= new `org.joda.time.Period`;
  #L3a7d0a.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7d10.  v1:= temp @kind object;
  #L3a7d12.  call `<init>`(v4, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7d18.  return v4 @kind object;
}
procedure `org.joda.time.Period` `withPeriodType`(`org.joda.time.Period` v1 @kind this, `org.joda.time.PeriodType` v2 @kind object) @signature `Lorg/joda/time/Period;.withPeriodType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7d2c.  call temp:= `getPeriodType`(v2) @signature `Lorg/joda/time/DateTimeUtils;.getPeriodType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;` @kind static;
  #L3a7d32.  v2:= temp @kind object;
  #L3a7d34.  call temp:= `getPeriodType`(v1) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7d3a.  v0:= temp @kind object;
  #L3a7d3c.  call temp:= `equals`(v2, v0) @signature `Lorg/joda/time/PeriodType;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a7d42.  v0:= temp;
  #L3a7d44.  if v0 == 0 then goto L3a7d4a;
  #L3a7d48.  return v1 @kind object;
  #L3a7d4a.  v0:= new `org.joda.time.Period`;
  #L3a7d4e.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/Period;.<init>:(Ljava/lang/Object;Lorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7d54.  return v0 @kind object;
}
procedure `org.joda.time.Period` `withSeconds`(`org.joda.time.Period` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/Period;.withSeconds:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a7d68.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a7d6e.  v0:= temp @kind object;
  #L3a7d70.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7d76.  v1:= temp @kind object;
  #L3a7d78.  v2:= `@@org.joda.time.PeriodType.SECOND_INDEX` @type ^`int`;
  #L3a7d7c.  call temp:= `setIndexedField`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/PeriodType;.setIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7d82.  v4:= new `org.joda.time.Period`;
  #L3a7d86.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7d8c.  v1:= temp @kind object;
  #L3a7d8e.  call `<init>`(v4, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7d94.  return v4 @kind object;
}
procedure `org.joda.time.Period` `withWeeks`(`org.joda.time.Period` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/Period;.withWeeks:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a7da8.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a7dae.  v0:= temp @kind object;
  #L3a7db0.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7db6.  v1:= temp @kind object;
  #L3a7db8.  v2:= `@@org.joda.time.PeriodType.WEEK_INDEX` @type ^`int`;
  #L3a7dbc.  call temp:= `setIndexedField`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/PeriodType;.setIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7dc2.  v4:= new `org.joda.time.Period`;
  #L3a7dc6.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7dcc.  v1:= temp @kind object;
  #L3a7dce.  call `<init>`(v4, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7dd4.  return v4 @kind object;
}
procedure `org.joda.time.Period` `withYears`(`org.joda.time.Period` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/Period;.withYears:(I)Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a7de8.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @kind virtual;
  #L3a7dee.  v0:= temp @kind object;
  #L3a7df0.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7df6.  v1:= temp @kind object;
  #L3a7df8.  v2:= `@@org.joda.time.PeriodType.YEAR_INDEX` @type ^`int`;
  #L3a7dfc.  call temp:= `setIndexedField`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/PeriodType;.setIndexedField:(Lorg/joda/time/ReadablePeriod;I[II)Z` @kind virtual;
  #L3a7e02.  v4:= new `org.joda.time.Period`;
  #L3a7e06.  call temp:= `getPeriodType`(v3) @signature `Lorg/joda/time/base/BasePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind virtual;
  #L3a7e0c.  v1:= temp @kind object;
  #L3a7e0e.  call `<init>`(v4, v0, v1) @signature `Lorg/joda/time/Period;.<init>:([ILorg/joda/time/PeriodType;)V` @kind direct;
  #L3a7e14.  return v4 @kind object;
}
