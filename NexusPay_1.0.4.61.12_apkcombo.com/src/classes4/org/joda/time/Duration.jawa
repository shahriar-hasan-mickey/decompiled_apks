record `org.joda.time.Duration` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.base.BaseDuration` @kind class, `org.joda.time.ReadableDuration` @kind interface, `java.io.Serializable` @kind interface {
}
global `org.joda.time.Duration` `@@org.joda.time.Duration.ZERO` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@org.joda.time.Duration.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/Duration;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L39a964.  v0:= new `org.joda.time.Duration`;
  #L39a968.  v1:= 0L;
  #L39a96c.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Duration;.<init>:(J)V` @kind direct;
  #L39a972.  `@@org.joda.time.Duration.ZERO` @type ^`org.joda.time.Duration` := v0 @kind object;
  #L39a976.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Duration` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/Duration;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39a9a0.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BaseDuration;.<init>:(J)V` @kind direct;
  #L39a9a6.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Duration` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lorg/joda/time/Duration;.<init>:(JJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39a9b8.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/base/BaseDuration;.<init>:(JJ)V` @kind direct;
  #L39a9be.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Duration` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/joda/time/Duration;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39a988.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BaseDuration;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L39a98e.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Duration` v0 @kind this, `org.joda.time.ReadableInstant` v1 @kind object, `org.joda.time.ReadableInstant` v2 @kind object) @signature `Lorg/joda/time/Duration;.<init>:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39a9d0.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/base/BaseDuration;.<init>:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;)V` @kind direct;
  #L39a9d6.  return @kind void;
}
procedure `org.joda.time.Duration` `millis`(`long` v3 ) @signature `Lorg/joda/time/Duration;.millis:(J)Lorg/joda/time/Duration;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L39a5d0.  v0:= 0L;
  #L39a5d4.  v2:= lcmp(v3, v0);
  #L39a5d8.  if v2 != 0 then goto L39a5e2;
  #L39a5dc.  v3:= `@@org.joda.time.Duration.ZERO` @type ^`org.joda.time.Duration` @kind object;
  #L39a5e0.  return v3 @kind object;
  #L39a5e2.  v0:= new `org.joda.time.Duration`;
  #L39a5e6.  call `<init>`(v0, v3) @signature `Lorg/joda/time/Duration;.<init>:(J)V` @kind direct;
  #L39a5ec.  return v0 @kind object;
}
procedure `org.joda.time.Duration` `parse`(`java.lang.String` v1 @kind object) @signature `Lorg/joda/time/Duration;.parse:(Ljava/lang/String;)Lorg/joda/time/Duration;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39a6d0.  v0:= new `org.joda.time.Duration`;
  #L39a6d4.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Duration;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L39a6da.  return v0 @kind object;
}
procedure `org.joda.time.Duration` `standardDays`(`long` v3 ) @signature `Lorg/joda/time/Duration;.standardDays:(J)Lorg/joda/time/Duration;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L39a734.  v0:= 0L;
  #L39a738.  v2:= lcmp(v3, v0);
  #L39a73c.  if v2 != 0 then goto L39a746;
  #L39a740.  v3:= `@@org.joda.time.Duration.ZERO` @type ^`org.joda.time.Duration` @kind object;
  #L39a744.  return v3 @kind object;
  #L39a746.  v0:= new `org.joda.time.Duration`;
  #L39a74a.  v1:= 86400000I;
  #L39a750.  call temp:= `safeMultiply`(v3, v1) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(JI)J` @kind static;
  #L39a756.  v3:= temp @kind wide;
  #L39a758.  call `<init>`(v0, v3) @signature `Lorg/joda/time/Duration;.<init>:(J)V` @kind direct;
  #L39a75e.  return v0 @kind object;
}
procedure `org.joda.time.Duration` `standardHours`(`long` v3 ) @signature `Lorg/joda/time/Duration;.standardHours:(J)Lorg/joda/time/Duration;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L39a770.  v0:= 0L;
  #L39a774.  v2:= lcmp(v3, v0);
  #L39a778.  if v2 != 0 then goto L39a782;
  #L39a77c.  v3:= `@@org.joda.time.Duration.ZERO` @type ^`org.joda.time.Duration` @kind object;
  #L39a780.  return v3 @kind object;
  #L39a782.  v0:= new `org.joda.time.Duration`;
  #L39a786.  v1:= 3600000I;
  #L39a78c.  call temp:= `safeMultiply`(v3, v1) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(JI)J` @kind static;
  #L39a792.  v3:= temp @kind wide;
  #L39a794.  call `<init>`(v0, v3) @signature `Lorg/joda/time/Duration;.<init>:(J)V` @kind direct;
  #L39a79a.  return v0 @kind object;
}
procedure `org.joda.time.Duration` `standardMinutes`(`long` v3 ) @signature `Lorg/joda/time/Duration;.standardMinutes:(J)Lorg/joda/time/Duration;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L39a7ac.  v0:= 0L;
  #L39a7b0.  v2:= lcmp(v3, v0);
  #L39a7b4.  if v2 != 0 then goto L39a7be;
  #L39a7b8.  v3:= `@@org.joda.time.Duration.ZERO` @type ^`org.joda.time.Duration` @kind object;
  #L39a7bc.  return v3 @kind object;
  #L39a7be.  v0:= new `org.joda.time.Duration`;
  #L39a7c2.  v1:= 60000I;
  #L39a7c8.  call temp:= `safeMultiply`(v3, v1) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(JI)J` @kind static;
  #L39a7ce.  v3:= temp @kind wide;
  #L39a7d0.  call `<init>`(v0, v3) @signature `Lorg/joda/time/Duration;.<init>:(J)V` @kind direct;
  #L39a7d6.  return v0 @kind object;
}
procedure `org.joda.time.Duration` `standardSeconds`(`long` v3 ) @signature `Lorg/joda/time/Duration;.standardSeconds:(J)Lorg/joda/time/Duration;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L39a7e8.  v0:= 0L;
  #L39a7ec.  v2:= lcmp(v3, v0);
  #L39a7f0.  if v2 != 0 then goto L39a7fa;
  #L39a7f4.  v3:= `@@org.joda.time.Duration.ZERO` @type ^`org.joda.time.Duration` @kind object;
  #L39a7f8.  return v3 @kind object;
  #L39a7fa.  v0:= new `org.joda.time.Duration`;
  #L39a7fe.  v1:= 1000I;
  #L39a802.  call temp:= `safeMultiply`(v3, v1) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(JI)J` @kind static;
  #L39a808.  v3:= temp @kind wide;
  #L39a80a.  call `<init>`(v0, v3) @signature `Lorg/joda/time/Duration;.<init>:(J)V` @kind direct;
  #L39a810.  return v0 @kind object;
}
procedure `org.joda.time.Duration` `dividedBy`(`org.joda.time.Duration` v3 @kind this, `long` v4 ) @signature `Lorg/joda/time/Duration;.dividedBy:(J)Lorg/joda/time/Duration;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39a594.  v0:= 1L;
  #L39a598.  v2:= lcmp(v4, v0);
  #L39a59c.  if v2 != 0 then goto L39a5a2;
  #L39a5a0.  return v3 @kind object;
  #L39a5a2.  v0:= new `org.joda.time.Duration`;
  #L39a5a6.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDuration;.getMillis:()J` @kind virtual;
  #L39a5ac.  v1:= temp @kind wide;
  #L39a5ae.  call temp:= `safeDivide`(v1, v4) @signature `Lorg/joda/time/field/FieldUtils;.safeDivide:(JJ)J` @kind static;
  #L39a5b4.  v4:= temp @kind wide;
  #L39a5b6.  call `<init>`(v0, v4) @signature `Lorg/joda/time/Duration;.<init>:(J)V` @kind direct;
  #L39a5bc.  return v0 @kind object;
}
procedure `long` `getStandardDays`(`org.joda.time.Duration` v4 @kind this) @signature `Lorg/joda/time/Duration;.getStandardDays:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39a4dc.  call temp:= `getMillis`(v4) @signature `Lorg/joda/time/base/BaseDuration;.getMillis:()J` @kind virtual;
  #L39a4e2.  v0:= temp @kind wide;
  #L39a4e4.  v2:= 86400000L;
  #L39a4ea.  v0:= v0 / v2 @kind long;
  #L39a4ec.  return v0 @kind wide;
}
procedure `long` `getStandardHours`(`org.joda.time.Duration` v4 @kind this) @signature `Lorg/joda/time/Duration;.getStandardHours:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39a500.  call temp:= `getMillis`(v4) @signature `Lorg/joda/time/base/BaseDuration;.getMillis:()J` @kind virtual;
  #L39a506.  v0:= temp @kind wide;
  #L39a508.  v2:= 3600000L;
  #L39a50e.  v0:= v0 / v2 @kind long;
  #L39a510.  return v0 @kind wide;
}
procedure `long` `getStandardMinutes`(`org.joda.time.Duration` v4 @kind this) @signature `Lorg/joda/time/Duration;.getStandardMinutes:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39a524.  call temp:= `getMillis`(v4) @signature `Lorg/joda/time/base/BaseDuration;.getMillis:()J` @kind virtual;
  #L39a52a.  v0:= temp @kind wide;
  #L39a52c.  v2:= 60000L;
  #L39a532.  v0:= v0 / v2 @kind long;
  #L39a534.  return v0 @kind wide;
}
procedure `long` `getStandardSeconds`(`org.joda.time.Duration` v4 @kind this) @signature `Lorg/joda/time/Duration;.getStandardSeconds:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39a548.  call temp:= `getMillis`(v4) @signature `Lorg/joda/time/base/BaseDuration;.getMillis:()J` @kind virtual;
  #L39a54e.  v0:= temp @kind wide;
  #L39a550.  v2:= 1000L;
  #L39a554.  v0:= v0 / v2 @kind long;
  #L39a556.  return v0 @kind wide;
}
procedure `org.joda.time.Duration` `minus`(`org.joda.time.Duration` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/Duration;.minus:(J)Lorg/joda/time/Duration;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39a600.  v0:= -1I;
  #L39a602.  call temp:= `withDurationAdded`(v1, v2, v0) @signature `Lorg/joda/time/Duration;.withDurationAdded:(JI)Lorg/joda/time/Duration;` @kind virtual;
  #L39a608.  v2:= temp @kind object;
  #L39a60a.  return v2 @kind object;
}
procedure `org.joda.time.Duration` `minus`(`org.joda.time.Duration` v2 @kind this, `org.joda.time.ReadableDuration` v3 @kind object) @signature `Lorg/joda/time/Duration;.minus:(Lorg/joda/time/ReadableDuration;)Lorg/joda/time/Duration;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39a61c.  if v3 != 0 then goto L39a622;
  #L39a620.  return v2 @kind object;
  #L39a622.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableDuration;.getMillis:()J` @kind interface;
  #L39a628.  v0:= temp @kind wide;
  #L39a62a.  v3:= -1I;
  #L39a62c.  call temp:= `withDurationAdded`(v2, v0, v3) @signature `Lorg/joda/time/Duration;.withDurationAdded:(JI)Lorg/joda/time/Duration;` @kind virtual;
  #L39a632.  v3:= temp @kind object;
  #L39a634.  return v3 @kind object;
}
procedure `org.joda.time.Duration` `multipliedBy`(`org.joda.time.Duration` v3 @kind this, `long` v4 ) @signature `Lorg/joda/time/Duration;.multipliedBy:(J)Lorg/joda/time/Duration;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39a648.  v0:= 1L;
  #L39a64c.  v2:= lcmp(v4, v0);
  #L39a650.  if v2 != 0 then goto L39a656;
  #L39a654.  return v3 @kind object;
  #L39a656.  v0:= new `org.joda.time.Duration`;
  #L39a65a.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDuration;.getMillis:()J` @kind virtual;
  #L39a660.  v1:= temp @kind wide;
  #L39a662.  call temp:= `safeMultiply`(v1, v4) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(JJ)J` @kind static;
  #L39a668.  v4:= temp @kind wide;
  #L39a66a.  call `<init>`(v0, v4) @signature `Lorg/joda/time/Duration;.<init>:(J)V` @kind direct;
  #L39a670.  return v0 @kind object;
}
procedure `org.joda.time.Duration` `negated`(`org.joda.time.Duration` v5 @kind this) @signature `Lorg/joda/time/Duration;.negated:()Lorg/joda/time/Duration;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L39a684.  call temp:= `getMillis`(v5) @signature `Lorg/joda/time/base/BaseDuration;.getMillis:()J` @kind virtual;
  #L39a68a.  v0:= temp @kind wide;
  #L39a68c.  v2:= -9223372036854775808L;
  #L39a690.  v4:= lcmp(v0, v2);
  #L39a694.  if v4 == 0 then goto L39a6ae;
  #L39a698.  v0:= new `org.joda.time.Duration`;
  #L39a69c.  call temp:= `getMillis`(v5) @signature `Lorg/joda/time/base/BaseDuration;.getMillis:()J` @kind virtual;
  #L39a6a2.  v1:= temp @kind wide;
  #L39a6a4.  v1:= -v1 @kind long;
  #L39a6a6.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Duration;.<init>:(J)V` @kind direct;
  #L39a6ac.  return v0 @kind object;
  #L39a6ae.  v0:= new `java.lang.ArithmeticException`;
  #L39a6b2.  v1:= "Negation of this duration would overflow" @kind object;
  #L39a6b6.  call `<init>`(v0, v1) @signature `Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39a6bc.  throw v0;
}
procedure `org.joda.time.Duration` `plus`(`org.joda.time.Duration` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/Duration;.plus:(J)Lorg/joda/time/Duration;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39a6ec.  v0:= 1I;
  #L39a6ee.  call temp:= `withDurationAdded`(v1, v2, v0) @signature `Lorg/joda/time/Duration;.withDurationAdded:(JI)Lorg/joda/time/Duration;` @kind virtual;
  #L39a6f4.  v2:= temp @kind object;
  #L39a6f6.  return v2 @kind object;
}
procedure `org.joda.time.Duration` `plus`(`org.joda.time.Duration` v2 @kind this, `org.joda.time.ReadableDuration` v3 @kind object) @signature `Lorg/joda/time/Duration;.plus:(Lorg/joda/time/ReadableDuration;)Lorg/joda/time/Duration;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39a708.  if v3 != 0 then goto L39a70e;
  #L39a70c.  return v2 @kind object;
  #L39a70e.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableDuration;.getMillis:()J` @kind interface;
  #L39a714.  v0:= temp @kind wide;
  #L39a716.  v3:= 1I;
  #L39a718.  call temp:= `withDurationAdded`(v2, v0, v3) @signature `Lorg/joda/time/Duration;.withDurationAdded:(JI)Lorg/joda/time/Duration;` @kind virtual;
  #L39a71e.  v3:= temp @kind object;
  #L39a720.  return v3 @kind object;
}
procedure `org.joda.time.Duration` `toDuration`(`org.joda.time.Duration` v0 @kind this) @signature `Lorg/joda/time/Duration;.toDuration:()Lorg/joda/time/Duration;` @AccessFlag PUBLIC {
    temp;

  #L39a824.  return v0 @kind object;
}
procedure `org.joda.time.Days` `toStandardDays`(`org.joda.time.Duration` v2 @kind this) @signature `Lorg/joda/time/Duration;.toStandardDays:()Lorg/joda/time/Days;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39a568.  call temp:= `getStandardDays`(v2) @signature `Lorg/joda/time/Duration;.getStandardDays:()J` @kind virtual;
  #L39a56e.  v0:= temp @kind wide;
  #L39a570.  call temp:= `safeToInt`(v0) @signature `Lorg/joda/time/field/FieldUtils;.safeToInt:(J)I` @kind static;
  #L39a576.  v0:= temp;
  #L39a578.  call temp:= `days`(v0) @signature `Lorg/joda/time/Days;.days:(I)Lorg/joda/time/Days;` @kind static;
  #L39a57e.  v0:= temp @kind object;
  #L39a580.  return v0 @kind object;
}
procedure `org.joda.time.Hours` `toStandardHours`(`org.joda.time.Duration` v2 @kind this) @signature `Lorg/joda/time/Duration;.toStandardHours:()Lorg/joda/time/Hours;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39a8e0.  call temp:= `getStandardHours`(v2) @signature `Lorg/joda/time/Duration;.getStandardHours:()J` @kind virtual;
  #L39a8e6.  v0:= temp @kind wide;
  #L39a8e8.  call temp:= `safeToInt`(v0) @signature `Lorg/joda/time/field/FieldUtils;.safeToInt:(J)I` @kind static;
  #L39a8ee.  v0:= temp;
  #L39a8f0.  call temp:= `hours`(v0) @signature `Lorg/joda/time/Hours;.hours:(I)Lorg/joda/time/Hours;` @kind static;
  #L39a8f6.  v0:= temp @kind object;
  #L39a8f8.  return v0 @kind object;
}
procedure `org.joda.time.Minutes` `toStandardMinutes`(`org.joda.time.Duration` v2 @kind this) @signature `Lorg/joda/time/Duration;.toStandardMinutes:()Lorg/joda/time/Minutes;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39a90c.  call temp:= `getStandardMinutes`(v2) @signature `Lorg/joda/time/Duration;.getStandardMinutes:()J` @kind virtual;
  #L39a912.  v0:= temp @kind wide;
  #L39a914.  call temp:= `safeToInt`(v0) @signature `Lorg/joda/time/field/FieldUtils;.safeToInt:(J)I` @kind static;
  #L39a91a.  v0:= temp;
  #L39a91c.  call temp:= `minutes`(v0) @signature `Lorg/joda/time/Minutes;.minutes:(I)Lorg/joda/time/Minutes;` @kind static;
  #L39a922.  v0:= temp @kind object;
  #L39a924.  return v0 @kind object;
}
procedure `org.joda.time.Seconds` `toStandardSeconds`(`org.joda.time.Duration` v2 @kind this) @signature `Lorg/joda/time/Duration;.toStandardSeconds:()Lorg/joda/time/Seconds;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39a938.  call temp:= `getStandardSeconds`(v2) @signature `Lorg/joda/time/Duration;.getStandardSeconds:()J` @kind virtual;
  #L39a93e.  v0:= temp @kind wide;
  #L39a940.  call temp:= `safeToInt`(v0) @signature `Lorg/joda/time/field/FieldUtils;.safeToInt:(J)I` @kind static;
  #L39a946.  v0:= temp;
  #L39a948.  call temp:= `seconds`(v0) @signature `Lorg/joda/time/Seconds;.seconds:(I)Lorg/joda/time/Seconds;` @kind static;
  #L39a94e.  v0:= temp @kind object;
  #L39a950.  return v0 @kind object;
}
procedure `org.joda.time.Duration` `withDurationAdded`(`org.joda.time.Duration` v3 @kind this, `long` v4 , `int` v6 ) @signature `Lorg/joda/time/Duration;.withDurationAdded:(JI)Lorg/joda/time/Duration;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39a838.  v0:= 0L;
  #L39a83c.  v2:= lcmp(v4, v0);
  #L39a840.  if v2 == 0 then goto L39a86e;
  #L39a844.  if v6 != 0 then goto L39a84a;
  #L39a848.  goto L39a86e;
  #L39a84a.  call temp:= `safeMultiply`(v4, v6) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(JI)J` @kind static;
  #L39a850.  v4:= temp @kind wide;
  #L39a852.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDuration;.getMillis:()J` @kind virtual;
  #L39a858.  v0:= temp @kind wide;
  #L39a85a.  call temp:= `safeAdd`(v0, v4) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(JJ)J` @kind static;
  #L39a860.  v4:= temp @kind wide;
  #L39a862.  v6:= new `org.joda.time.Duration`;
  #L39a866.  call `<init>`(v6, v4) @signature `Lorg/joda/time/Duration;.<init>:(J)V` @kind direct;
  #L39a86c.  return v6 @kind object;
  #L39a86e.  return v3 @kind object;
}
procedure `org.joda.time.Duration` `withDurationAdded`(`org.joda.time.Duration` v2 @kind this, `org.joda.time.ReadableDuration` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/Duration;.withDurationAdded:(Lorg/joda/time/ReadableDuration;I)Lorg/joda/time/Duration;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39a880.  if v3 == 0 then goto L39a89c;
  #L39a884.  if v4 != 0 then goto L39a88a;
  #L39a888.  goto L39a89c;
  #L39a88a.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableDuration;.getMillis:()J` @kind interface;
  #L39a890.  v0:= temp @kind wide;
  #L39a892.  call temp:= `withDurationAdded`(v2, v0, v4) @signature `Lorg/joda/time/Duration;.withDurationAdded:(JI)Lorg/joda/time/Duration;` @kind virtual;
  #L39a898.  v3:= temp @kind object;
  #L39a89a.  return v3 @kind object;
  #L39a89c.  return v2 @kind object;
}
procedure `org.joda.time.Duration` `withMillis`(`org.joda.time.Duration` v3 @kind this, `long` v4 ) @signature `Lorg/joda/time/Duration;.withMillis:(J)Lorg/joda/time/Duration;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39a8b0.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDuration;.getMillis:()J` @kind virtual;
  #L39a8b6.  v0:= temp @kind wide;
  #L39a8b8.  v2:= lcmp(v4, v0);
  #L39a8bc.  if v2 != 0 then goto L39a8c2;
  #L39a8c0.  return v3 @kind object;
  #L39a8c2.  v0:= new `org.joda.time.Duration`;
  #L39a8c6.  call `<init>`(v0, v4) @signature `Lorg/joda/time/Duration;.<init>:(J)V` @kind direct;
  #L39a8cc.  return v0 @kind object;
}
