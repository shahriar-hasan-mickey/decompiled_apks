record `org.joda.time.tz.DateTimeZoneBuilder$Recurrence` @kind class @AccessFlag FINAL {
  `java.lang.String` `org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iNameKey` @AccessFlag FINAL;
  `org.joda.time.tz.DateTimeZoneBuilder$OfYear` `org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iOfYear` @AccessFlag FINAL;
  `int` `org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iSaveMillis` @AccessFlag FINAL;
}
procedure `void` `<init>`(`org.joda.time.tz.DateTimeZoneBuilder$Recurrence` v0 @kind this, `org.joda.time.tz.DateTimeZoneBuilder$OfYear` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;.<init>:(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3cdbbc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cdbc2.  v0.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iOfYear` @type ^`org.joda.time.tz.DateTimeZoneBuilder$OfYear` := v1 @kind object;
  #L3cdbc6.  v0.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iNameKey` @type ^`java.lang.String` := v2 @kind object;
  #L3cdbca.  v0.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iSaveMillis` @type ^`int` := v3;
  #L3cdbce.  return @kind void;
}
procedure `org.joda.time.tz.DateTimeZoneBuilder$Recurrence` `readFrom`(`java.io.DataInput` v5 @kind object) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;.readFrom:(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3cdb1c.  v0:= new `org.joda.time.tz.DateTimeZoneBuilder$Recurrence`;
  #L3cdb20.  call temp:= `readFrom`(v5) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;.readFrom:(Ljava/io/DataInput;)Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;` @kind static;
  #L3cdb26.  v1:= temp @kind object;
  #L3cdb28.  call temp:= `readUTF`(v5) @signature `Ljava/io/DataInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L3cdb2e.  v2:= temp @kind object;
  #L3cdb30.  call temp:= `readMillis`(v5) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder;.readMillis:(Ljava/io/DataInput;)J` @kind static;
  #L3cdb36.  v3:= temp @kind wide;
  #L3cdb38.  v5:= (`int`) v3 @kind l2i;
  #L3cdb3a.  call `<init>`(v0, v1, v2, v5) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;.<init>:(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V` @kind direct;
  #L3cdb40.  return v0 @kind object;
}
procedure `boolean` `equals`(`org.joda.time.tz.DateTimeZoneBuilder$Recurrence` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3cda30.  v0:= 1I;
  #L3cda32.  if v4 != v5 then goto L3cda38;
  #L3cda36.  return v0;
  #L3cda38.  v1:= instanceof @variable v5 @type ^`org.joda.time.tz.DateTimeZoneBuilder$Recurrence` @kind boolean;
  #L3cda3c.  v2:= 0I;
  #L3cda3e.  if v1 == 0 then goto L3cda80;
  #L3cda42.  v5:= (`org.joda.time.tz.DateTimeZoneBuilder$Recurrence`) v5 @kind object;
  #L3cda46.  v1:= v4.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iSaveMillis` @type ^`int`;
  #L3cda4a.  v3:= v5.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iSaveMillis` @type ^`int`;
  #L3cda4e.  if v1 != v3 then goto L3cda7c;
  #L3cda52.  v1:= v4.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iNameKey` @type ^`java.lang.String` @kind object;
  #L3cda56.  v3:= v5.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iNameKey` @type ^`java.lang.String` @kind object;
  #L3cda5a.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cda60.  v1:= temp;
  #L3cda62.  if v1 == 0 then goto L3cda7c;
  #L3cda66.  v1:= v4.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iOfYear` @type ^`org.joda.time.tz.DateTimeZoneBuilder$OfYear` @kind object;
  #L3cda6a.  v5:= v5.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iOfYear` @type ^`org.joda.time.tz.DateTimeZoneBuilder$OfYear` @kind object;
  #L3cda6e.  call temp:= `equals`(v1, v5) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cda74.  v5:= temp;
  #L3cda76.  if v5 == 0 then goto L3cda7c;
  #L3cda7a.  goto L3cda7e;
  #L3cda7c.  v0:= 0I;
  #L3cda7e.  return v0;
  #L3cda80.  return v2;
}
procedure `java.lang.String` `getNameKey`(`org.joda.time.tz.DateTimeZoneBuilder$Recurrence` v1 @kind this) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;.getNameKey:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cdaac.  v0:= v1.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iNameKey` @type ^`java.lang.String` @kind object;
  #L3cdab0.  return v0 @kind object;
}
procedure `org.joda.time.tz.DateTimeZoneBuilder$OfYear` `getOfYear`(`org.joda.time.tz.DateTimeZoneBuilder$Recurrence` v1 @kind this) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;.getOfYear:()Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cdb04.  v0:= v1.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iOfYear` @type ^`org.joda.time.tz.DateTimeZoneBuilder$OfYear` @kind object;
  #L3cdb08.  return v0 @kind object;
}
procedure `int` `getSaveMillis`(`org.joda.time.tz.DateTimeZoneBuilder$Recurrence` v1 @kind this) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;.getSaveMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cda94.  v0:= v1.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iSaveMillis` @type ^`int`;
  #L3cda98.  return v0;
}
procedure `long` `next`(`org.joda.time.tz.DateTimeZoneBuilder$Recurrence` v1 @kind this, `long` v2 , `int` v4 , `int` v5 ) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;.next:(JII)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cdac4.  v0:= v1.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iOfYear` @type ^`org.joda.time.tz.DateTimeZoneBuilder$OfYear` @kind object;
  #L3cdac8.  call temp:= `next`(v0, v2, v4, v5) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;.next:(JII)J` @kind virtual;
  #L3cdace.  v2:= temp @kind wide;
  #L3cdad0.  return v2 @kind wide;
}
procedure `long` `previous`(`org.joda.time.tz.DateTimeZoneBuilder$Recurrence` v1 @kind this, `long` v2 , `int` v4 , `int` v5 ) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;.previous:(JII)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cdae4.  v0:= v1.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iOfYear` @type ^`org.joda.time.tz.DateTimeZoneBuilder$OfYear` @kind object;
  #L3cdae8.  call temp:= `previous`(v0, v2, v4, v5) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;.previous:(JII)J` @kind virtual;
  #L3cdaee.  v2:= temp @kind wide;
  #L3cdaf0.  return v2 @kind wide;
}
procedure `org.joda.time.tz.DateTimeZoneBuilder$Recurrence` `rename`(`org.joda.time.tz.DateTimeZoneBuilder$Recurrence` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;.rename:(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3cdb54.  v0:= new `org.joda.time.tz.DateTimeZoneBuilder$Recurrence`;
  #L3cdb58.  v1:= v3.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iOfYear` @type ^`org.joda.time.tz.DateTimeZoneBuilder$OfYear` @kind object;
  #L3cdb5c.  v2:= v3.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iSaveMillis` @type ^`int`;
  #L3cdb60.  call `<init>`(v0, v1, v4, v2) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;.<init>:(Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;Ljava/lang/String;I)V` @kind direct;
  #L3cdb66.  return v0 @kind object;
}
procedure `org.joda.time.tz.DateTimeZoneBuilder$Recurrence` `renameAppend`(`org.joda.time.tz.DateTimeZoneBuilder$Recurrence` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;.renameAppend:(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3cdb78.  v0:= new `java.lang.StringBuilder`;
  #L3cdb7c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cdb82.  v1:= v2.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iNameKey` @type ^`java.lang.String` @kind object;
  #L3cdb86.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cdb8c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cdb92.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cdb98.  v3:= temp @kind object;
  #L3cdb9a.  call temp:= `intern`(v3) @signature `Ljava/lang/String;.intern:()Ljava/lang/String;` @kind virtual;
  #L3cdba0.  v3:= temp @kind object;
  #L3cdba2.  call temp:= `rename`(v2, v3) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;.rename:(Ljava/lang/String;)Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;` @kind virtual;
  #L3cdba8.  v3:= temp @kind object;
  #L3cdbaa.  return v3 @kind object;
}
procedure `void` `writeTo`(`org.joda.time.tz.DateTimeZoneBuilder$Recurrence` v2 @kind this, `java.io.DataOutput` v3 @kind object) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;.writeTo:(Ljava/io/DataOutput;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cdbe0.  v0:= v2.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iOfYear` @type ^`org.joda.time.tz.DateTimeZoneBuilder$OfYear` @kind object;
  #L3cdbe4.  call `writeTo`(v0, v3) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;.writeTo:(Ljava/io/DataOutput;)V` @kind virtual;
  #L3cdbea.  v0:= v2.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iNameKey` @type ^`java.lang.String` @kind object;
  #L3cdbee.  call `writeUTF`(v3, v0) @signature `Ljava/io/DataOutput;.writeUTF:(Ljava/lang/String;)V` @kind interface;
  #L3cdbf4.  v0:= v2.`org.joda.time.tz.DateTimeZoneBuilder$Recurrence.iSaveMillis` @type ^`int`;
  #L3cdbf8.  v0:= (`long`) v0 @kind i2l;
  #L3cdbfa.  call `writeMillis`(v3, v0) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder;.writeMillis:(Ljava/io/DataOutput;J)V` @kind static;
  #L3cdc00.  return @kind void;
}
