record `org.joda.time.tz.CachedDateTimeZone$Info` @kind class @AccessFlag FINAL {
  `java.lang.String` `org.joda.time.tz.CachedDateTimeZone$Info.iNameKey` @AccessFlag PRIVATE;
  `org.joda.time.tz.CachedDateTimeZone$Info` `org.joda.time.tz.CachedDateTimeZone$Info.iNextInfo` @AccessFlag ;
  `int` `org.joda.time.tz.CachedDateTimeZone$Info.iOffset` @AccessFlag PRIVATE;
  `long` `org.joda.time.tz.CachedDateTimeZone$Info.iPeriodStart` @AccessFlag PUBLIC_FINAL;
  `int` `org.joda.time.tz.CachedDateTimeZone$Info.iStandardOffset` @AccessFlag PRIVATE;
  `org.joda.time.DateTimeZone` `org.joda.time.tz.CachedDateTimeZone$Info.iZoneRef` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`org.joda.time.tz.CachedDateTimeZone$Info` v1 @kind this, `org.joda.time.DateTimeZone` v2 @kind object, `long` v3 ) @signature `Lorg/joda/time/tz/CachedDateTimeZone$Info;.<init>:(Lorg/joda/time/DateTimeZone;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3cc484.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cc48a.  v0:= -2147483648I;
  #L3cc48e.  v1.`org.joda.time.tz.CachedDateTimeZone$Info.iOffset` @type ^`int` := v0;
  #L3cc492.  v1.`org.joda.time.tz.CachedDateTimeZone$Info.iStandardOffset` @type ^`int` := v0;
  #L3cc496.  v1.`org.joda.time.tz.CachedDateTimeZone$Info.iPeriodStart` @type ^`long` := v3 @kind wide;
  #L3cc49a.  v1.`org.joda.time.tz.CachedDateTimeZone$Info.iZoneRef` @type ^`org.joda.time.DateTimeZone` := v2 @kind object;
  #L3cc49e.  return @kind void;
}
procedure `java.lang.String` `getNameKey`(`org.joda.time.tz.CachedDateTimeZone$Info` v4 @kind this, `long` v5 ) @signature `Lorg/joda/time/tz/CachedDateTimeZone$Info;.getNameKey:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3cc430.  v0:= v4.`org.joda.time.tz.CachedDateTimeZone$Info.iNextInfo` @type ^`org.joda.time.tz.CachedDateTimeZone$Info` @kind object;
  #L3cc434.  if v0 == 0 then goto L3cc450;
  #L3cc438.  v1:= v0.`org.joda.time.tz.CachedDateTimeZone$Info.iPeriodStart` @type ^`long` @kind wide;
  #L3cc43c.  v3:= lcmp(v5, v1);
  #L3cc440.  if v3 >= 0 then goto L3cc446;
  #L3cc444.  goto L3cc450;
  #L3cc446.  call temp:= `getNameKey`(v0, v5) @signature `Lorg/joda/time/tz/CachedDateTimeZone$Info;.getNameKey:(J)Ljava/lang/String;` @kind virtual;
  #L3cc44c.  v5:= temp @kind object;
  #L3cc44e.  return v5 @kind object;
  #L3cc450.  v5:= v4.`org.joda.time.tz.CachedDateTimeZone$Info.iNameKey` @type ^`java.lang.String` @kind object;
  #L3cc454.  if v5 != 0 then goto L3cc46c;
  #L3cc458.  v5:= v4.`org.joda.time.tz.CachedDateTimeZone$Info.iZoneRef` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3cc45c.  v0:= v4.`org.joda.time.tz.CachedDateTimeZone$Info.iPeriodStart` @type ^`long` @kind wide;
  #L3cc460.  call temp:= `getNameKey`(v5, v0) @signature `Lorg/joda/time/DateTimeZone;.getNameKey:(J)Ljava/lang/String;` @kind virtual;
  #L3cc466.  v5:= temp @kind object;
  #L3cc468.  v4.`org.joda.time.tz.CachedDateTimeZone$Info.iNameKey` @type ^`java.lang.String` := v5 @kind object;
  #L3cc46c.  v5:= v4.`org.joda.time.tz.CachedDateTimeZone$Info.iNameKey` @type ^`java.lang.String` @kind object;
  #L3cc470.  return v5 @kind object;
}
procedure `int` `getOffset`(`org.joda.time.tz.CachedDateTimeZone$Info` v4 @kind this, `long` v5 ) @signature `Lorg/joda/time/tz/CachedDateTimeZone$Info;.getOffset:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3cc380.  v0:= v4.`org.joda.time.tz.CachedDateTimeZone$Info.iNextInfo` @type ^`org.joda.time.tz.CachedDateTimeZone$Info` @kind object;
  #L3cc384.  if v0 == 0 then goto L3cc3a0;
  #L3cc388.  v1:= v0.`org.joda.time.tz.CachedDateTimeZone$Info.iPeriodStart` @type ^`long` @kind wide;
  #L3cc38c.  v3:= lcmp(v5, v1);
  #L3cc390.  if v3 >= 0 then goto L3cc396;
  #L3cc394.  goto L3cc3a0;
  #L3cc396.  call temp:= `getOffset`(v0, v5) @signature `Lorg/joda/time/tz/CachedDateTimeZone$Info;.getOffset:(J)I` @kind virtual;
  #L3cc39c.  v5:= temp;
  #L3cc39e.  return v5;
  #L3cc3a0.  v5:= v4.`org.joda.time.tz.CachedDateTimeZone$Info.iOffset` @type ^`int`;
  #L3cc3a4.  v6:= -2147483648I;
  #L3cc3a8.  if v5 != v6 then goto L3cc3c0;
  #L3cc3ac.  v5:= v4.`org.joda.time.tz.CachedDateTimeZone$Info.iZoneRef` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3cc3b0.  v0:= v4.`org.joda.time.tz.CachedDateTimeZone$Info.iPeriodStart` @type ^`long` @kind wide;
  #L3cc3b4.  call temp:= `getOffset`(v5, v0) @signature `Lorg/joda/time/DateTimeZone;.getOffset:(J)I` @kind virtual;
  #L3cc3ba.  v5:= temp;
  #L3cc3bc.  v4.`org.joda.time.tz.CachedDateTimeZone$Info.iOffset` @type ^`int` := v5;
  #L3cc3c0.  v5:= v4.`org.joda.time.tz.CachedDateTimeZone$Info.iOffset` @type ^`int`;
  #L3cc3c4.  return v5;
}
procedure `int` `getStandardOffset`(`org.joda.time.tz.CachedDateTimeZone$Info` v4 @kind this, `long` v5 ) @signature `Lorg/joda/time/tz/CachedDateTimeZone$Info;.getStandardOffset:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3cc3d8.  v0:= v4.`org.joda.time.tz.CachedDateTimeZone$Info.iNextInfo` @type ^`org.joda.time.tz.CachedDateTimeZone$Info` @kind object;
  #L3cc3dc.  if v0 == 0 then goto L3cc3f8;
  #L3cc3e0.  v1:= v0.`org.joda.time.tz.CachedDateTimeZone$Info.iPeriodStart` @type ^`long` @kind wide;
  #L3cc3e4.  v3:= lcmp(v5, v1);
  #L3cc3e8.  if v3 >= 0 then goto L3cc3ee;
  #L3cc3ec.  goto L3cc3f8;
  #L3cc3ee.  call temp:= `getStandardOffset`(v0, v5) @signature `Lorg/joda/time/tz/CachedDateTimeZone$Info;.getStandardOffset:(J)I` @kind virtual;
  #L3cc3f4.  v5:= temp;
  #L3cc3f6.  return v5;
  #L3cc3f8.  v5:= v4.`org.joda.time.tz.CachedDateTimeZone$Info.iStandardOffset` @type ^`int`;
  #L3cc3fc.  v6:= -2147483648I;
  #L3cc400.  if v5 != v6 then goto L3cc418;
  #L3cc404.  v5:= v4.`org.joda.time.tz.CachedDateTimeZone$Info.iZoneRef` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3cc408.  v0:= v4.`org.joda.time.tz.CachedDateTimeZone$Info.iPeriodStart` @type ^`long` @kind wide;
  #L3cc40c.  call temp:= `getStandardOffset`(v5, v0) @signature `Lorg/joda/time/DateTimeZone;.getStandardOffset:(J)I` @kind virtual;
  #L3cc412.  v5:= temp;
  #L3cc414.  v4.`org.joda.time.tz.CachedDateTimeZone$Info.iStandardOffset` @type ^`int` := v5;
  #L3cc418.  v5:= v4.`org.joda.time.tz.CachedDateTimeZone$Info.iStandardOffset` @type ^`int`;
  #L3cc41c.  return v5;
}
