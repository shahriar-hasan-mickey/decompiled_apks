record `org.joda.time.tz.ZoneInfoProvider` @kind class @AccessFlag PUBLIC extends `org.joda.time.tz.Provider` @kind interface {
  `java.io.File` `org.joda.time.tz.ZoneInfoProvider.iFileDir` @AccessFlag PRIVATE_FINAL;
  `java.lang.ClassLoader` `org.joda.time.tz.ZoneInfoProvider.iLoader` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.joda.time.tz.ZoneInfoProvider.iResourcePath` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `org.joda.time.tz.ZoneInfoProvider.iZoneInfoKeys` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `org.joda.time.tz.ZoneInfoProvider.iZoneInfoMap` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.joda.time.tz.ZoneInfoProvider` v3 @kind this, `java.io.File` v4 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.<init>:(Ljava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3d0e50.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d0e56.  if v4 == 0 then goto L3d0f18;
  #L3d0e5a.  call temp:= `exists`(v4) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L3d0e60.  v0:= temp;
  #L3d0e62.  if v0 == 0 then goto L3d0eea;
  #L3d0e66.  call temp:= `isDirectory`(v4) @signature `Ljava/io/File;.isDirectory:()Z` @kind virtual;
  #L3d0e6c.  v0:= temp;
  #L3d0e6e.  if v0 == 0 then goto L3d0ebc;
  #L3d0e72.  v3.`org.joda.time.tz.ZoneInfoProvider.iFileDir` @type ^`java.io.File` := v4 @kind object;
  #L3d0e76.  v4:= 0I;
  #L3d0e78.  v3.`org.joda.time.tz.ZoneInfoProvider.iResourcePath` @type ^`java.lang.String` := v4 @kind object;
  #L3d0e7c.  v3.`org.joda.time.tz.ZoneInfoProvider.iLoader` @type ^`java.lang.ClassLoader` := v4 @kind object;
  #L3d0e80.  v4:= "ZoneInfoMap" @kind object;
  #L3d0e84.  call temp:= `openResource`(v3, v4) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.openResource:(Ljava/lang/String;)Ljava/io/InputStream;` @kind direct;
  #L3d0e8a.  v4:= temp @kind object;
  #L3d0e8c.  call temp:= `loadZoneInfoMap`(v4) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.loadZoneInfoMap:(Ljava/io/InputStream;)Ljava/util/Map;` @kind static;
  #L3d0e92.  v4:= temp @kind object;
  #L3d0e94.  v3.`org.joda.time.tz.ZoneInfoProvider.iZoneInfoMap` @type ^`java.util.Map` := v4 @kind object;
  #L3d0e98.  v4:= new `java.util.TreeSet`;
  #L3d0e9c.  v0:= v3.`org.joda.time.tz.ZoneInfoProvider.iZoneInfoMap` @type ^`java.util.Map` @kind object;
  #L3d0ea0.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3d0ea6.  v0:= temp @kind object;
  #L3d0ea8.  call `<init>`(v4, v0) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3d0eae.  call temp:= `unmodifiableSortedSet`(v4) @signature `Ljava/util/Collections;.unmodifiableSortedSet:(Ljava/util/SortedSet;)Ljava/util/SortedSet;` @kind static;
  #L3d0eb4.  v4:= temp @kind object;
  #L3d0eb6.  v3.`org.joda.time.tz.ZoneInfoProvider.iZoneInfoKeys` @type ^`java.util.Set` := v4 @kind object;
  #L3d0eba.  return @kind void;
  #L3d0ebc.  v0:= new `java.io.IOException`;
  #L3d0ec0.  v1:= new `java.lang.StringBuilder`;
  #L3d0ec4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d0eca.  v2:= "File doesn't refer to a directory: " @kind object;
  #L3d0ece.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0ed4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0eda.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d0ee0.  v4:= temp @kind object;
  #L3d0ee2.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d0ee8.  throw v0;
  #L3d0eea.  v0:= new `java.io.IOException`;
  #L3d0eee.  v1:= new `java.lang.StringBuilder`;
  #L3d0ef2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d0ef8.  v2:= "File directory doesn't exist: " @kind object;
  #L3d0efc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0f02.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0f08.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d0f0e.  v4:= temp @kind object;
  #L3d0f10.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d0f16.  throw v0;
  #L3d0f18.  v4:= new `java.lang.IllegalArgumentException`;
  #L3d0f1c.  v0:= "No file directory provided" @kind object;
  #L3d0f20.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d0f26.  throw v4;
}
procedure `void` `<init>`(`org.joda.time.tz.ZoneInfoProvider` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3d0f38.  v0:= 0I;
  #L3d0f3a.  v1:= 0I;
  #L3d0f3c.  call `<init>`(v2, v3, v0, v1) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.<init>:(Ljava/lang/String;Ljava/lang/ClassLoader;Z)V` @kind direct;
  #L3d0f42.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.tz.ZoneInfoProvider` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.ClassLoader` v3 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.<init>:(Ljava/lang/String;Ljava/lang/ClassLoader;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d0f54.  v0:= 1I;
  #L3d0f56.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.<init>:(Ljava/lang/String;Ljava/lang/ClassLoader;Z)V` @kind direct;
  #L3d0f5c.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.tz.ZoneInfoProvider` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.ClassLoader` v3 @kind object, `boolean` v4 ) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.<init>:(Ljava/lang/String;Ljava/lang/ClassLoader;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L3d0f70.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d0f76.  if v2 == 0 then goto L3d100a;
  #L3d0f7a.  v0:= "/" @kind object;
  #L3d0f7e.  call temp:= `endsWith`(v2, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3d0f84.  v0:= temp;
  #L3d0f86.  if v0 != 0 then goto L3d0fac;
  #L3d0f8a.  v0:= new `java.lang.StringBuilder`;
  #L3d0f8e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d0f94.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0f9a.  v2:= 47I;
  #L3d0f9e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0fa4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d0faa.  v2:= temp @kind object;
  #L3d0fac.  v0:= 0I;
  #L3d0fae.  v1.`org.joda.time.tz.ZoneInfoProvider.iFileDir` @type ^`java.io.File` := v0 @kind object;
  #L3d0fb2.  v1.`org.joda.time.tz.ZoneInfoProvider.iResourcePath` @type ^`java.lang.String` := v2 @kind object;
  #L3d0fb6.  if v3 != 0 then goto L3d0fca;
  #L3d0fba.  if v4 != 0 then goto L3d0fca;
  #L3d0fbe.  v2:= constclass @type ^`org.joda.time.tz.ZoneInfoProvider` @kind object;
  #L3d0fc2.  call temp:= `getClassLoader`(v2) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L3d0fc8.  v3:= temp @kind object;
  #L3d0fca.  v1.`org.joda.time.tz.ZoneInfoProvider.iLoader` @type ^`java.lang.ClassLoader` := v3 @kind object;
  #L3d0fce.  v2:= "ZoneInfoMap" @kind object;
  #L3d0fd2.  call temp:= `openResource`(v1, v2) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.openResource:(Ljava/lang/String;)Ljava/io/InputStream;` @kind direct;
  #L3d0fd8.  v2:= temp @kind object;
  #L3d0fda.  call temp:= `loadZoneInfoMap`(v2) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.loadZoneInfoMap:(Ljava/io/InputStream;)Ljava/util/Map;` @kind static;
  #L3d0fe0.  v2:= temp @kind object;
  #L3d0fe2.  v1.`org.joda.time.tz.ZoneInfoProvider.iZoneInfoMap` @type ^`java.util.Map` := v2 @kind object;
  #L3d0fe6.  v2:= new `java.util.TreeSet`;
  #L3d0fea.  v3:= v1.`org.joda.time.tz.ZoneInfoProvider.iZoneInfoMap` @type ^`java.util.Map` @kind object;
  #L3d0fee.  call temp:= `keySet`(v3) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3d0ff4.  v3:= temp @kind object;
  #L3d0ff6.  call `<init>`(v2, v3) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3d0ffc.  call temp:= `unmodifiableSortedSet`(v2) @signature `Ljava/util/Collections;.unmodifiableSortedSet:(Ljava/util/SortedSet;)Ljava/util/SortedSet;` @kind static;
  #L3d1002.  v2:= temp @kind object;
  #L3d1004.  v1.`org.joda.time.tz.ZoneInfoProvider.iZoneInfoKeys` @type ^`java.util.Set` := v2 @kind object;
  #L3d1008.  return @kind void;
  #L3d100a.  v2:= new `java.lang.IllegalArgumentException`;
  #L3d100e.  v3:= "No resource path provided" @kind object;
  #L3d1012.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d1018.  throw v2;
}
procedure `java.lang.ClassLoader` `access$000`(`org.joda.time.tz.ZoneInfoProvider` v0 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.access$000:(Lorg/joda/time/tz/ZoneInfoProvider;)Ljava/lang/ClassLoader;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3d0c68.  v0:= v0.`org.joda.time.tz.ZoneInfoProvider.iLoader` @type ^`java.lang.ClassLoader` @kind object;
  #L3d0c6c.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeZone` `loadZoneData`(`org.joda.time.tz.ZoneInfoProvider` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.loadZoneData:(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d0d88.  v0:= 0I;
  #L3d0d8a.  call temp:= `openResource`(v5, v6) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.openResource:(Ljava/lang/String;)Ljava/io/InputStream;` @kind direct;
  #L3d0d90.  v1:= temp @kind object;
  #L3d0d92.  call temp:= `readFrom`(v1, v6) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder;.readFrom:(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;` @kind static;
  #L3d0d98.  v2:= temp @kind object;
  #L3d0d9a.  v3:= v5.`org.joda.time.tz.ZoneInfoProvider.iZoneInfoMap` @type ^`java.util.Map` @kind object;
  #L3d0d9e.  v4:= new `java.lang.ref.SoftReference`;
  #L3d0da2.  call `<init>`(v4, v2) @signature `Ljava/lang/ref/SoftReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3d0da8.  call temp:= `put`(v3, v6, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d0dae.  if v1 == 0 then goto L3d0db8;
  #L3d0db2.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3d0db8.  return v2 @kind object;
  #L3d0dba.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d0dbc.  v0:= v1 @kind object;
  #L3d0dbe.  goto L3d0de8;
  #L3d0dc0.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L3d0dc2.  goto L3d0dcc;
  #L3d0dc4.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d0dc6.  goto L3d0de8;
  #L3d0dc8.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L3d0dca.  v1:= v0 @kind object;
  #L3d0dcc.  call `uncaughtException`(v5, v2) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.uncaughtException:(Ljava/lang/Exception;)V` @kind virtual;
  #L3d0dd2.  v2:= v5.`org.joda.time.tz.ZoneInfoProvider.iZoneInfoMap` @type ^`java.util.Map` @kind object;
  #L3d0dd6.  call temp:= `remove`(v2, v6) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d0ddc.  if v1 == 0 then goto L3d0de6;
  #L3d0de0.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3d0de6.  return v0 @kind object;
  #L3d0de8.  if v0 == 0 then goto L3d0df2;
  #L3d0dec.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3d0df2.  throw v6;
  catch `java.io.IOException` @[L3d0d8a..L3d0d92] goto L3d0dc8;
  catch `java.lang.Throwable` @[L3d0d8a..L3d0d92] goto L3d0dc4;
  catch `java.io.IOException` @[L3d0d92..L3d0dae] goto L3d0dc0;
  catch `java.lang.Throwable` @[L3d0d92..L3d0dae] goto L3d0dba;
  catch `java.io.IOException` @[L3d0db2..L3d0db8] goto L3d0db8;
  catch `java.lang.Throwable` @[L3d0dcc..L3d0ddc] goto L3d0dba;
  catch `java.io.IOException` @[L3d0de0..L3d0de6] goto L3d0de6;
  catch `java.io.IOException` @[L3d0dec..L3d0df2] goto L3d0df2;
}
procedure `java.util.Map` `loadZoneInfoMap`(`java.io.InputStream` v2 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.loadZoneInfoMap:(Ljava/io/InputStream;)Ljava/util/Map;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3d0c80.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L3d0c84.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L3d0c8a.  v1:= new `java.io.DataInputStream`;
  #L3d0c8e.  call `<init>`(v1, v2) @signature `Ljava/io/DataInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L3d0c94.  call `readZoneInfoMap`(v1, v0) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.readZoneInfoMap:(Ljava/io/DataInputStream;Ljava/util/Map;)V` @kind static;
  #L3d0c9a.  call `close`(v1) @signature `Ljava/io/DataInputStream;.close:()V` @kind virtual;
  #L3d0ca0.  v2:= new `java.lang.ref.SoftReference`;
  #L3d0ca4.  v1:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3d0ca8.  call `<init>`(v2, v1) @signature `Ljava/lang/ref/SoftReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3d0cae.  v1:= "UTC" @kind object;
  #L3d0cb2.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d0cb8.  return v0 @kind object;
  #L3d0cba.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d0cbc.  call `close`(v1) @signature `Ljava/io/DataInputStream;.close:()V` @kind virtual;
  #L3d0cc2.  throw v2;
  catch `java.lang.Throwable` @[L3d0c94..L3d0c9a] goto L3d0cba;
  catch `java.io.IOException` @[L3d0c9a..L3d0ca0] goto L3d0ca0;
  catch `java.io.IOException` @[L3d0cbc..L3d0cc2] goto L3d0cc2;
}
procedure `java.io.InputStream` `openResource`(`org.joda.time.tz.ZoneInfoProvider` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.openResource:(Ljava/lang/String;)Ljava/io/InputStream;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d0bb4.  v0:= v3.`org.joda.time.tz.ZoneInfoProvider.iFileDir` @type ^`java.io.File` @kind object;
  #L3d0bb8.  if v0 == 0 then goto L3d0bd6;
  #L3d0bbc.  v0:= new `java.io.FileInputStream`;
  #L3d0bc0.  v1:= new `java.io.File`;
  #L3d0bc4.  v2:= v3.`org.joda.time.tz.ZoneInfoProvider.iFileDir` @type ^`java.io.File` @kind object;
  #L3d0bc8.  call `<init>`(v1, v2, v4) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L3d0bce.  call `<init>`(v0, v1) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L3d0bd4.  goto L3d0c54;
  #L3d0bd6.  v0:= v3.`org.joda.time.tz.ZoneInfoProvider.iResourcePath` @type ^`java.lang.String` @kind object;
  #L3d0bda.  call temp:= `concat`(v0, v4) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3d0be0.  v4:= temp @kind object;
  #L3d0be2.  v0:= new `org.joda.time.tz.ZoneInfoProvider$1`;
  #L3d0be6.  call `<init>`(v0, v3, v4) @signature `Lorg/joda/time/tz/ZoneInfoProvider$1;.<init>:(Lorg/joda/time/tz/ZoneInfoProvider;Ljava/lang/String;)V` @kind direct;
  #L3d0bec.  call temp:= `doPrivileged`(v0) @signature `Ljava/security/AccessController;.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;` @kind static;
  #L3d0bf2.  v0:= temp @kind object;
  #L3d0bf4.  v0:= (`java.io.InputStream`) v0 @kind object;
  #L3d0bf8.  if v0 != 0 then goto L3d0c54;
  #L3d0bfc.  v0:= new `java.lang.StringBuilder`;
  #L3d0c00.  v1:= 40I;
  #L3d0c04.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3d0c0a.  v1:= "Resource not found: \"" @kind object;
  #L3d0c0e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0c14.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0c1a.  v4:= "\" ClassLoader: " @kind object;
  #L3d0c1e.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0c24.  v4:= v3.`org.joda.time.tz.ZoneInfoProvider.iLoader` @type ^`java.lang.ClassLoader` @kind object;
  #L3d0c28.  if v4 == 0 then goto L3d0c36;
  #L3d0c2c.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d0c32.  v4:= temp @kind object;
  #L3d0c34.  goto L3d0c3a;
  #L3d0c36.  v4:= "system" @kind object;
  #L3d0c3a.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0c40.  v4:= new `java.io.IOException`;
  #L3d0c44.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d0c4a.  v0:= temp @kind object;
  #L3d0c4c.  call `<init>`(v4, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d0c52.  throw v4;
  #L3d0c54.  return v0 @kind object;
}
procedure `void` `readZoneInfoMap`(`java.io.DataInputStream` v5 @kind object, `java.util.Map` v6 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.readZoneInfoMap:(Ljava/io/DataInputStream;Ljava/util/Map;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d102c.  call temp:= `readUnsignedShort`(v5) @signature `Ljava/io/DataInputStream;.readUnsignedShort:()I` @kind virtual;
  #L3d1032.  v0:= temp;
  #L3d1034.  v1:= new `java.lang.String`[v0];
  #L3d1038.  v2:= 0I;
  #L3d103a.  v3:= 0I;
  #L3d103c.  if v3 >= v0 then goto L3d105a;
  #L3d1040.  call temp:= `readUTF`(v5) @signature `Ljava/io/DataInputStream;.readUTF:()Ljava/lang/String;` @kind virtual;
  #L3d1046.  v4:= temp @kind object;
  #L3d1048.  call temp:= `intern`(v4) @signature `Ljava/lang/String;.intern:()Ljava/lang/String;` @kind virtual;
  #L3d104e.  v4:= temp @kind object;
  #L3d1050.  v1[v3]:= v4 @kind object;
  #L3d1054.  v3:= v3 + 1;
  #L3d1058.  goto L3d103c;
  #L3d105a.  call temp:= `readUnsignedShort`(v5) @signature `Ljava/io/DataInputStream;.readUnsignedShort:()I` @kind virtual;
  #L3d1060.  v0:= temp;
  #L3d1062.  if v2 >= v0 then goto L3d109a;
  #L3d1066.  call temp:= `readUnsignedShort`(v5) @signature `Ljava/io/DataInputStream;.readUnsignedShort:()I` @kind virtual;
  #L3d106c.  v3:= temp;
  #L3d106e.  v3:= v1[v3] @kind object;
  #L3d1072.  call temp:= `readUnsignedShort`(v5) @signature `Ljava/io/DataInputStream;.readUnsignedShort:()I` @kind virtual;
  #L3d1078.  v4:= temp;
  #L3d107a.  v4:= v1[v4] @kind object;
  #L3d107e.  call temp:= `put`(v6, v3, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d1084.  v2:= v2 + 1;
  #L3d1088.  goto L3d1062;
  #L3d108a.  v5:= new `java.io.IOException`;
  #L3d108e.  v6:= "Corrupt zone info map" @kind object;
  #L3d1092.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d1098.  throw v5;
  #L3d109a.  return @kind void;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L3d1066..L3d1084] goto L3d108a;
}
procedure `java.util.Set` `getAvailableIDs`(`org.joda.time.tz.ZoneInfoProvider` v1 @kind this) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.getAvailableIDs:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d0cf8.  v0:= v1.`org.joda.time.tz.ZoneInfoProvider.iZoneInfoKeys` @type ^`java.util.Set` @kind object;
  #L3d0cfc.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeZone` `getZone`(`org.joda.time.tz.ZoneInfoProvider` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.getZone:(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d0d10.  v0:= 0I;
  #L3d0d12.  if v3 != 0 then goto L3d0d18;
  #L3d0d16.  return v0 @kind object;
  #L3d0d18.  v1:= v2.`org.joda.time.tz.ZoneInfoProvider.iZoneInfoMap` @type ^`java.util.Map` @kind object;
  #L3d0d1c.  call temp:= `get`(v1, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d0d22.  v1:= temp @kind object;
  #L3d0d24.  if v1 != 0 then goto L3d0d2a;
  #L3d0d28.  return v0 @kind object;
  #L3d0d2a.  v0:= instanceof @variable v1 @type ^`java.lang.ref.SoftReference` @kind boolean;
  #L3d0d2e.  if v0 == 0 then goto L3d0d52;
  #L3d0d32.  v1:= (`java.lang.ref.SoftReference`) v1 @kind object;
  #L3d0d36.  call temp:= `get`(v1) @signature `Ljava/lang/ref/SoftReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3d0d3c.  v0:= temp @kind object;
  #L3d0d3e.  v0:= (`org.joda.time.DateTimeZone`) v0 @kind object;
  #L3d0d42.  if v0 == 0 then goto L3d0d48;
  #L3d0d46.  return v0 @kind object;
  #L3d0d48.  call temp:= `loadZoneData`(v2, v3) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.loadZoneData:(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;` @kind direct;
  #L3d0d4e.  v3:= temp @kind object;
  #L3d0d50.  return v3 @kind object;
  #L3d0d52.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d0d58.  v0:= temp;
  #L3d0d5a.  if v0 == 0 then goto L3d0d68;
  #L3d0d5e.  call temp:= `loadZoneData`(v2, v3) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.loadZoneData:(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;` @kind direct;
  #L3d0d64.  v3:= temp @kind object;
  #L3d0d66.  return v3 @kind object;
  #L3d0d68.  v1:= (`java.lang.String`) v1 @kind object;
  #L3d0d6c.  call temp:= `getZone`(v2, v1) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.getZone:(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3d0d72.  v3:= temp @kind object;
  #L3d0d74.  return v3 @kind object;
}
procedure `void` `uncaughtException`(`org.joda.time.tz.ZoneInfoProvider` v0 @kind this, `java.lang.Exception` v1 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoProvider;.uncaughtException:(Ljava/lang/Exception;)V` @AccessFlag PROTECTED {
    temp;

  #L3d10bc.  call `printStackTrace`(v1) @signature `Ljava/lang/Exception;.printStackTrace:()V` @kind virtual;
  #L3d10c2.  return @kind void;
}
