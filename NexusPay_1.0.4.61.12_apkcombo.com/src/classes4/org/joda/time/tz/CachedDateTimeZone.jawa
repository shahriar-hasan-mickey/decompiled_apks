record `org.joda.time.tz.CachedDateTimeZone` @kind class @AccessFlag PUBLIC extends `org.joda.time.DateTimeZone` @kind class {
  `org.joda.time.tz.CachedDateTimeZone$Info`[] `org.joda.time.tz.CachedDateTimeZone.iInfoCache` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `org.joda.time.DateTimeZone` `org.joda.time.tz.CachedDateTimeZone.iZone` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@org.joda.time.tz.CachedDateTimeZone.cInfoCacheMask` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.joda.time.tz.CachedDateTimeZone.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/tz/CachedDateTimeZone;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3cc6d4.  v0:= "org.joda.time.tz.CachedDateTimeZone.size" @kind object;
  #L3cc6d8.  call temp:= `getInteger`(v0) @signature `Ljava/lang/Integer;.getInteger:(Ljava/lang/String;)Ljava/lang/Integer;` @kind static;
  #L3cc6de.  v0:= temp @kind object;
  #L3cc6e0.  goto L3cc6e4;
  #L3cc6e2.  v0:= 0I;
  #L3cc6e4.  v1:= 1I;
  #L3cc6e6.  if v0 != 0 then goto L3cc6f0;
  #L3cc6ea.  v0:= 512I;
  #L3cc6ee.  goto L3cc710;
  #L3cc6f0.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3cc6f6.  v0:= temp;
  #L3cc6f8.  v0:= v0 + -1;
  #L3cc6fc.  v2:= 0I;
  #L3cc6fe.  if v0 <= 0 then goto L3cc70c;
  #L3cc702.  v2:= v2 + 1;
  #L3cc706.  v0:= v0 ^> 1;
  #L3cc70a.  goto L3cc6fe;
  #L3cc70c.  v0:= v1 ^< v2 @kind int;
  #L3cc710.  v0:= v0 - v1 @kind int;
  #L3cc712.  `@@org.joda.time.tz.CachedDateTimeZone.cInfoCacheMask` @type ^`int` := v0;
  #L3cc716.  return @kind void;
  catch `java.lang.SecurityException` @[L3cc6d4..L3cc6e0] goto L3cc6e2;
}
procedure `void` `<init>`(`org.joda.time.tz.CachedDateTimeZone` v1 @kind this, `org.joda.time.DateTimeZone` v2 @kind object) @signature `Lorg/joda/time/tz/CachedDateTimeZone;.<init>:(Lorg/joda/time/DateTimeZone;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L3cc738.  call temp:= `getID`(v2) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3cc73e.  v0:= temp @kind object;
  #L3cc740.  call `<init>`(v1, v0) @signature `Lorg/joda/time/DateTimeZone;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cc746.  v0:= `@@org.joda.time.tz.CachedDateTimeZone.cInfoCacheMask` @type ^`int`;
  #L3cc74a.  v0:= v0 + 1;
  #L3cc74e.  v0:= new `org.joda.time.tz.CachedDateTimeZone$Info`[v0];
  #L3cc752.  v1.`org.joda.time.tz.CachedDateTimeZone.iInfoCache` @type ^`org.joda.time.tz.CachedDateTimeZone$Info`[] := v0 @kind object;
  #L3cc756.  v1.`org.joda.time.tz.CachedDateTimeZone.iZone` @type ^`org.joda.time.DateTimeZone` := v2 @kind object;
  #L3cc75a.  return @kind void;
}
procedure `org.joda.time.tz.CachedDateTimeZone$Info` `createInfo`(`org.joda.time.tz.CachedDateTimeZone` v7 @kind this, `long` v8 ) @signature `Lorg/joda/time/tz/CachedDateTimeZone;.createInfo:(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3cc61c.  v0:= -4294967296L;
  #L3cc626.  v8:= v8 ^& v0 @kind long;
  #L3cc628.  v0:= new `org.joda.time.tz.CachedDateTimeZone$Info`;
  #L3cc62c.  v1:= v7.`org.joda.time.tz.CachedDateTimeZone.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3cc630.  call `<init>`(v0, v1, v8) @signature `Lorg/joda/time/tz/CachedDateTimeZone$Info;.<init>:(Lorg/joda/time/DateTimeZone;J)V` @kind direct;
  #L3cc636.  v1:= 4294967295L;
  #L3cc640.  v1:= v1 ^| v8 @kind long;
  #L3cc642.  v3:= v0 @kind object;
  #L3cc644.  v4:= v7.`org.joda.time.tz.CachedDateTimeZone.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3cc648.  call temp:= `nextTransition`(v4, v8) @signature `Lorg/joda/time/DateTimeZone;.nextTransition:(J)J` @kind virtual;
  #L3cc64e.  v4:= temp @kind wide;
  #L3cc650.  v6:= lcmp(v4, v8);
  #L3cc654.  if v6 == 0 then goto L3cc67a;
  #L3cc658.  v8:= lcmp(v4, v1);
  #L3cc65c.  if v8 <= 0 then goto L3cc662;
  #L3cc660.  goto L3cc67a;
  #L3cc662.  v8:= new `org.joda.time.tz.CachedDateTimeZone$Info`;
  #L3cc666.  v9:= v7.`org.joda.time.tz.CachedDateTimeZone.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3cc66a.  call `<init>`(v8, v9, v4) @signature `Lorg/joda/time/tz/CachedDateTimeZone$Info;.<init>:(Lorg/joda/time/DateTimeZone;J)V` @kind direct;
  #L3cc670.  v3.`org.joda.time.tz.CachedDateTimeZone$Info.iNextInfo` @type ^`org.joda.time.tz.CachedDateTimeZone$Info` := v8 @kind object;
  #L3cc674.  v3:= v8 @kind object;
  #L3cc676.  v8:= v4 @kind wide;
  #L3cc678.  goto L3cc644;
  #L3cc67a.  return v0 @kind object;
}
procedure `org.joda.time.tz.CachedDateTimeZone` `forZone`(`org.joda.time.DateTimeZone` v1 @kind object) @signature `Lorg/joda/time/tz/CachedDateTimeZone;.forZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/tz/CachedDateTimeZone;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cc5f0.  v0:= instanceof @variable v1 @type ^`org.joda.time.tz.CachedDateTimeZone` @kind boolean;
  #L3cc5f4.  if v0 == 0 then goto L3cc5fe;
  #L3cc5f8.  v1:= (`org.joda.time.tz.CachedDateTimeZone`) v1 @kind object;
  #L3cc5fc.  return v1 @kind object;
  #L3cc5fe.  v0:= new `org.joda.time.tz.CachedDateTimeZone`;
  #L3cc602.  call `<init>`(v0, v1) @signature `Lorg/joda/time/tz/CachedDateTimeZone;.<init>:(Lorg/joda/time/DateTimeZone;)V` @kind direct;
  #L3cc608.  return v0 @kind object;
}
procedure `org.joda.time.tz.CachedDateTimeZone$Info` `getInfo`(`org.joda.time.tz.CachedDateTimeZone` v7 @kind this, `long` v8 ) @signature `Lorg/joda/time/tz/CachedDateTimeZone;.getInfo:(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3cc68c.  v0:= 32I;
  #L3cc690.  v1:= v8 ^> v0 @kind long;
  #L3cc694.  v2:= (`int`) v1 @kind l2i;
  #L3cc696.  v1:= v7.`org.joda.time.tz.CachedDateTimeZone.iInfoCache` @type ^`org.joda.time.tz.CachedDateTimeZone$Info`[] @kind object;
  #L3cc69a.  v3:= `@@org.joda.time.tz.CachedDateTimeZone.cInfoCacheMask` @type ^`int`;
  #L3cc69e.  v3:= v3 ^& v2 @kind int;
  #L3cc6a0.  v4:= v1[v3] @kind object;
  #L3cc6a4.  if v4 == 0 then goto L3cc6b4;
  #L3cc6a8.  v5:= v4.`org.joda.time.tz.CachedDateTimeZone$Info.iPeriodStart` @type ^`long` @kind wide;
  #L3cc6ac.  v5:= v5 ^> v0 @kind long;
  #L3cc6ae.  v0:= (`int`) v5 @kind l2i;
  #L3cc6b0.  if v0 == v2 then goto L3cc6c0;
  #L3cc6b4.  call temp:= `createInfo`(v7, v8) @signature `Lorg/joda/time/tz/CachedDateTimeZone;.createInfo:(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;` @kind direct;
  #L3cc6ba.  v4:= temp @kind object;
  #L3cc6bc.  v1[v3]:= v4 @kind object;
  #L3cc6c0.  return v4 @kind object;
}
procedure `boolean` `equals`(`org.joda.time.tz.CachedDateTimeZone` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/joda/time/tz/CachedDateTimeZone;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc4b0.  if v1 != v2 then goto L3cc4b8;
  #L3cc4b4.  v2:= 1I;
  #L3cc4b6.  return v2;
  #L3cc4b8.  v0:= instanceof @variable v2 @type ^`org.joda.time.tz.CachedDateTimeZone` @kind boolean;
  #L3cc4bc.  if v0 == 0 then goto L3cc4d6;
  #L3cc4c0.  v0:= v1.`org.joda.time.tz.CachedDateTimeZone.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3cc4c4.  v2:= (`org.joda.time.tz.CachedDateTimeZone`) v2 @kind object;
  #L3cc4c8.  v2:= v2.`org.joda.time.tz.CachedDateTimeZone.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3cc4cc.  call temp:= `equals`(v0, v2) @signature `Lorg/joda/time/DateTimeZone;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cc4d2.  v2:= temp;
  #L3cc4d4.  return v2;
  #L3cc4d6.  v2:= 0I;
  #L3cc4d8.  return v2;
}
procedure `java.lang.String` `getNameKey`(`org.joda.time.tz.CachedDateTimeZone` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/tz/CachedDateTimeZone;.getNameKey:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc574.  call temp:= `getInfo`(v1, v2) @signature `Lorg/joda/time/tz/CachedDateTimeZone;.getInfo:(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;` @kind direct;
  #L3cc57a.  v0:= temp @kind object;
  #L3cc57c.  call temp:= `getNameKey`(v0, v2) @signature `Lorg/joda/time/tz/CachedDateTimeZone$Info;.getNameKey:(J)Ljava/lang/String;` @kind virtual;
  #L3cc582.  v2:= temp @kind object;
  #L3cc584.  return v2 @kind object;
}
procedure `int` `getOffset`(`org.joda.time.tz.CachedDateTimeZone` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/tz/CachedDateTimeZone;.getOffset:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc50c.  call temp:= `getInfo`(v1, v2) @signature `Lorg/joda/time/tz/CachedDateTimeZone;.getInfo:(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;` @kind direct;
  #L3cc512.  v0:= temp @kind object;
  #L3cc514.  call temp:= `getOffset`(v0, v2) @signature `Lorg/joda/time/tz/CachedDateTimeZone$Info;.getOffset:(J)I` @kind virtual;
  #L3cc51a.  v2:= temp;
  #L3cc51c.  return v2;
}
procedure `int` `getStandardOffset`(`org.joda.time.tz.CachedDateTimeZone` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/tz/CachedDateTimeZone;.getStandardOffset:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc530.  call temp:= `getInfo`(v1, v2) @signature `Lorg/joda/time/tz/CachedDateTimeZone;.getInfo:(J)Lorg/joda/time/tz/CachedDateTimeZone$Info;` @kind direct;
  #L3cc536.  v0:= temp @kind object;
  #L3cc538.  call temp:= `getStandardOffset`(v0, v2) @signature `Lorg/joda/time/tz/CachedDateTimeZone$Info;.getStandardOffset:(J)I` @kind virtual;
  #L3cc53e.  v2:= temp;
  #L3cc540.  return v2;
}
procedure `org.joda.time.DateTimeZone` `getUncachedZone`(`org.joda.time.tz.CachedDateTimeZone` v1 @kind this) @signature `Lorg/joda/time/tz/CachedDateTimeZone;.getUncachedZone:()Lorg/joda/time/DateTimeZone;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc5d8.  v0:= v1.`org.joda.time.tz.CachedDateTimeZone.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3cc5dc.  return v0 @kind object;
}
procedure `int` `hashCode`(`org.joda.time.tz.CachedDateTimeZone` v1 @kind this) @signature `Lorg/joda/time/tz/CachedDateTimeZone;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc554.  v0:= v1.`org.joda.time.tz.CachedDateTimeZone.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3cc558.  call temp:= `hashCode`(v0) @signature `Lorg/joda/time/DateTimeZone;.hashCode:()I` @kind virtual;
  #L3cc55e.  v0:= temp;
  #L3cc560.  return v0;
}
procedure `boolean` `isFixed`(`org.joda.time.tz.CachedDateTimeZone` v1 @kind this) @signature `Lorg/joda/time/tz/CachedDateTimeZone;.isFixed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc4ec.  v0:= v1.`org.joda.time.tz.CachedDateTimeZone.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3cc4f0.  call temp:= `isFixed`(v0) @signature `Lorg/joda/time/DateTimeZone;.isFixed:()Z` @kind virtual;
  #L3cc4f6.  v0:= temp;
  #L3cc4f8.  return v0;
}
procedure `long` `nextTransition`(`org.joda.time.tz.CachedDateTimeZone` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/tz/CachedDateTimeZone;.nextTransition:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc598.  v0:= v1.`org.joda.time.tz.CachedDateTimeZone.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3cc59c.  call temp:= `nextTransition`(v0, v2) @signature `Lorg/joda/time/DateTimeZone;.nextTransition:(J)J` @kind virtual;
  #L3cc5a2.  v2:= temp @kind wide;
  #L3cc5a4.  return v2 @kind wide;
}
procedure `long` `previousTransition`(`org.joda.time.tz.CachedDateTimeZone` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/tz/CachedDateTimeZone;.previousTransition:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc5b8.  v0:= v1.`org.joda.time.tz.CachedDateTimeZone.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3cc5bc.  call temp:= `previousTransition`(v0, v2) @signature `Lorg/joda/time/DateTimeZone;.previousTransition:(J)J` @kind virtual;
  #L3cc5c2.  v2:= temp @kind wide;
  #L3cc5c4.  return v2 @kind wide;
}
