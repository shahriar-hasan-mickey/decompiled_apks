record `org.joda.time.tz.ZoneInfoCompiler$Zone` @kind class @AccessFlag  {
  `java.lang.String` `org.joda.time.tz.ZoneInfoCompiler$Zone.iFormat` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `org.joda.time.tz.ZoneInfoCompiler$Zone.iName` @AccessFlag PUBLIC_FINAL;
  `org.joda.time.tz.ZoneInfoCompiler$Zone` `org.joda.time.tz.ZoneInfoCompiler$Zone.iNext` @AccessFlag PRIVATE;
  `int` `org.joda.time.tz.ZoneInfoCompiler$Zone.iOffsetMillis` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `org.joda.time.tz.ZoneInfoCompiler$Zone.iRules` @AccessFlag PUBLIC_FINAL;
  `org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear` `org.joda.time.tz.ZoneInfoCompiler$Zone.iUntilDateTimeOfYear` @AccessFlag PUBLIC_FINAL;
  `int` `org.joda.time.tz.ZoneInfoCompiler$Zone.iUntilYear` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`org.joda.time.tz.ZoneInfoCompiler$Zone` v2 @kind this, `java.lang.String` v3 @kind object, `java.util.StringTokenizer` v4 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$Zone;.<init>:(Ljava/lang/String;Ljava/util/StringTokenizer;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3cf86c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cf872.  call temp:= `intern`(v3) @signature `Ljava/lang/String;.intern:()Ljava/lang/String;` @kind virtual;
  #L3cf878.  v3:= temp @kind object;
  #L3cf87a.  v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iName` @type ^`java.lang.String` := v3 @kind object;
  #L3cf87e.  call temp:= `nextToken`(v4) @signature `Ljava/util/StringTokenizer;.nextToken:()Ljava/lang/String;` @kind virtual;
  #L3cf884.  v3:= temp @kind object;
  #L3cf886.  call temp:= `parseTime`(v3) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.parseTime:(Ljava/lang/String;)I` @kind static;
  #L3cf88c.  v3:= temp;
  #L3cf88e.  v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iOffsetMillis` @type ^`int` := v3;
  #L3cf892.  call temp:= `nextToken`(v4) @signature `Ljava/util/StringTokenizer;.nextToken:()Ljava/lang/String;` @kind virtual;
  #L3cf898.  v3:= temp @kind object;
  #L3cf89a.  call temp:= `parseOptional`(v3) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.parseOptional:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3cf8a0.  v3:= temp @kind object;
  #L3cf8a2.  v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iRules` @type ^`java.lang.String` := v3 @kind object;
  #L3cf8a6.  call temp:= `nextToken`(v4) @signature `Ljava/util/StringTokenizer;.nextToken:()Ljava/lang/String;` @kind virtual;
  #L3cf8ac.  v3:= temp @kind object;
  #L3cf8ae.  call temp:= `intern`(v3) @signature `Ljava/lang/String;.intern:()Ljava/lang/String;` @kind virtual;
  #L3cf8b4.  v3:= temp @kind object;
  #L3cf8b6.  v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iFormat` @type ^`java.lang.String` := v3 @kind object;
  #L3cf8ba.  call temp:= `getStartOfYear`() @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.getStartOfYear:()Lorg/joda/time/tz/ZoneInfoCompiler$DateTimeOfYear;` @kind static;
  #L3cf8c0.  v3:= temp @kind object;
  #L3cf8c2.  call temp:= `hasMoreTokens`(v4) @signature `Ljava/util/StringTokenizer;.hasMoreTokens:()Z` @kind virtual;
  #L3cf8c8.  v0:= temp;
  #L3cf8ca.  if v0 == 0 then goto L3cf8f6;
  #L3cf8ce.  call temp:= `nextToken`(v4) @signature `Ljava/util/StringTokenizer;.nextToken:()Ljava/lang/String;` @kind virtual;
  #L3cf8d4.  v0:= temp @kind object;
  #L3cf8d6.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3cf8dc.  v0:= temp;
  #L3cf8de.  call temp:= `hasMoreTokens`(v4) @signature `Ljava/util/StringTokenizer;.hasMoreTokens:()Z` @kind virtual;
  #L3cf8e4.  v1:= temp;
  #L3cf8e6.  if v1 == 0 then goto L3cf8fc;
  #L3cf8ea.  v3:= new `org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear`;
  #L3cf8ee.  call `<init>`(v3, v4) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$DateTimeOfYear;.<init>:(Ljava/util/StringTokenizer;)V` @kind direct;
  #L3cf8f4.  goto L3cf8fc;
  #L3cf8f6.  v0:= 2147483647I;
  #L3cf8fc.  v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iUntilYear` @type ^`int` := v0;
  #L3cf900.  v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iUntilDateTimeOfYear` @type ^`org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear` := v3 @kind object;
  #L3cf904.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.tz.ZoneInfoCompiler$Zone` v1 @kind this, `java.util.StringTokenizer` v2 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$Zone;.<init>:(Ljava/util/StringTokenizer;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3cf918.  call temp:= `nextToken`(v2) @signature `Ljava/util/StringTokenizer;.nextToken:()Ljava/lang/String;` @kind virtual;
  #L3cf91e.  v0:= temp @kind object;
  #L3cf920.  call `<init>`(v1, v0, v2) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$Zone;.<init>:(Ljava/lang/String;Ljava/util/StringTokenizer;)V` @kind direct;
  #L3cf926.  return @kind void;
}
procedure `void` `addToBuilder`(`org.joda.time.tz.ZoneInfoCompiler$Zone` v2 @kind object, `org.joda.time.tz.DateTimeZoneBuilder` v3 @kind object, `java.util.Map` v4 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$Zone;.addToBuilder:(Lorg/joda/time/tz/ZoneInfoCompiler$Zone;Lorg/joda/time/tz/DateTimeZoneBuilder;Ljava/util/Map;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3cf950.  if v2 == 0 then goto L3cf9fa;
  #L3cf954.  v0:= v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iOffsetMillis` @type ^`int`;
  #L3cf958.  call temp:= `setStandardOffset`(v3, v0) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder;.setStandardOffset:(I)Lorg/joda/time/tz/DateTimeZoneBuilder;` @kind virtual;
  #L3cf95e.  v0:= v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iRules` @type ^`java.lang.String` @kind object;
  #L3cf962.  if v0 != 0 then goto L3cf974;
  #L3cf966.  v0:= v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iFormat` @type ^`java.lang.String` @kind object;
  #L3cf96a.  v1:= 0I;
  #L3cf96c.  call temp:= `setFixedSavings`(v3, v0, v1) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder;.setFixedSavings:(Ljava/lang/String;I)Lorg/joda/time/tz/DateTimeZoneBuilder;` @kind virtual;
  #L3cf972.  goto L3cf9a8;
  #L3cf974.  call temp:= `parseTime`(v0) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.parseTime:(Ljava/lang/String;)I` @kind static;
  #L3cf97a.  v0:= temp;
  #L3cf97c.  v1:= v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iFormat` @type ^`java.lang.String` @kind object;
  #L3cf980.  call temp:= `setFixedSavings`(v3, v1, v0) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder;.setFixedSavings:(Ljava/lang/String;I)Lorg/joda/time/tz/DateTimeZoneBuilder;` @kind virtual;
  #L3cf986.  goto L3cf9a8;
  #L3cf988.  
  #L3cf98a.  v0:= v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iRules` @type ^`java.lang.String` @kind object;
  #L3cf98e.  call temp:= `get`(v4, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3cf994.  v0:= temp @kind object;
  #L3cf996.  v0:= (`org.joda.time.tz.ZoneInfoCompiler$RuleSet`) v0 @kind object;
  #L3cf99a.  if v0 == 0 then goto L3cf9c8;
  #L3cf99e.  v1:= v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iFormat` @type ^`java.lang.String` @kind object;
  #L3cf9a2.  call `addRecurring`(v0, v3, v1) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$RuleSet;.addRecurring:(Lorg/joda/time/tz/DateTimeZoneBuilder;Ljava/lang/String;)V` @kind virtual;
  #L3cf9a8.  v0:= v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iUntilYear` @type ^`int`;
  #L3cf9ac.  v1:= 2147483647I;
  #L3cf9b2.  if v0 != v1 then goto L3cf9b8;
  #L3cf9b6.  goto L3cf9fa;
  #L3cf9b8.  v1:= v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iUntilDateTimeOfYear` @type ^`org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear` @kind object;
  #L3cf9bc.  call `addCutover`(v1, v3, v0) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$DateTimeOfYear;.addCutover:(Lorg/joda/time/tz/DateTimeZoneBuilder;I)V` @kind virtual;
  #L3cf9c2.  v2:= v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iNext` @type ^`org.joda.time.tz.ZoneInfoCompiler$Zone` @kind object;
  #L3cf9c6.  goto L3cf950;
  #L3cf9c8.  v3:= new `java.lang.IllegalArgumentException`;
  #L3cf9cc.  v4:= new `java.lang.StringBuilder`;
  #L3cf9d0.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cf9d6.  v0:= "Rules not found: " @kind object;
  #L3cf9da.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf9e0.  v2:= v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iRules` @type ^`java.lang.String` @kind object;
  #L3cf9e4.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf9ea.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cf9f0.  v2:= temp @kind object;
  #L3cf9f2.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cf9f8.  throw v3;
  #L3cf9fa.  return @kind void;
  catch `java.lang.Exception` @[L3cf974..L3cf986] goto L3cf988;
}
procedure `void` `addToBuilder`(`org.joda.time.tz.ZoneInfoCompiler$Zone` v0 @kind this, `org.joda.time.tz.DateTimeZoneBuilder` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$Zone;.addToBuilder:(Lorg/joda/time/tz/DateTimeZoneBuilder;Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;

  #L3cf938.  call `addToBuilder`(v0, v1, v2) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$Zone;.addToBuilder:(Lorg/joda/time/tz/ZoneInfoCompiler$Zone;Lorg/joda/time/tz/DateTimeZoneBuilder;Ljava/util/Map;)V` @kind static;
  #L3cf93e.  return @kind void;
}
procedure `void` `chain`(`org.joda.time.tz.ZoneInfoCompiler$Zone` v2 @kind this, `java.util.StringTokenizer` v3 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$Zone;.chain:(Ljava/util/StringTokenizer;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3cfa1c.  v0:= v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iNext` @type ^`org.joda.time.tz.ZoneInfoCompiler$Zone` @kind object;
  #L3cfa20.  if v0 == 0 then goto L3cfa2c;
  #L3cfa24.  call `chain`(v0, v3) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$Zone;.chain:(Ljava/util/StringTokenizer;)V` @kind virtual;
  #L3cfa2a.  goto L3cfa3e;
  #L3cfa2c.  v0:= new `org.joda.time.tz.ZoneInfoCompiler$Zone`;
  #L3cfa30.  v1:= v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iName` @type ^`java.lang.String` @kind object;
  #L3cfa34.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$Zone;.<init>:(Ljava/lang/String;Ljava/util/StringTokenizer;)V` @kind direct;
  #L3cfa3a.  v2.`org.joda.time.tz.ZoneInfoCompiler$Zone.iNext` @type ^`org.joda.time.tz.ZoneInfoCompiler$Zone` := v0 @kind object;
  #L3cfa3e.  return @kind void;
}
procedure `java.lang.String` `toString`(`org.joda.time.tz.ZoneInfoCompiler$Zone` v3 @kind this) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$Zone;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3cf778.  v0:= new `java.lang.StringBuilder`;
  #L3cf77c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cf782.  v1:= "[Zone]\nName: " @kind object;
  #L3cf786.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf78c.  v1:= v3.`org.joda.time.tz.ZoneInfoCompiler$Zone.iName` @type ^`java.lang.String` @kind object;
  #L3cf790.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf796.  v1:= "\n" @kind object;
  #L3cf79a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf7a0.  v2:= "OffsetMillis: " @kind object;
  #L3cf7a4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf7aa.  v2:= v3.`org.joda.time.tz.ZoneInfoCompiler$Zone.iOffsetMillis` @type ^`int`;
  #L3cf7ae.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf7b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf7ba.  v2:= "Rules: " @kind object;
  #L3cf7be.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf7c4.  v2:= v3.`org.joda.time.tz.ZoneInfoCompiler$Zone.iRules` @type ^`java.lang.String` @kind object;
  #L3cf7c8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf7ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf7d4.  v2:= "Format: " @kind object;
  #L3cf7d8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf7de.  v2:= v3.`org.joda.time.tz.ZoneInfoCompiler$Zone.iFormat` @type ^`java.lang.String` @kind object;
  #L3cf7e2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf7e8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf7ee.  v2:= "UntilYear: " @kind object;
  #L3cf7f2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf7f8.  v2:= v3.`org.joda.time.tz.ZoneInfoCompiler$Zone.iUntilYear` @type ^`int`;
  #L3cf7fc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf802.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf808.  v1:= v3.`org.joda.time.tz.ZoneInfoCompiler$Zone.iUntilDateTimeOfYear` @type ^`org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear` @kind object;
  #L3cf80c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf812.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cf818.  v0:= temp @kind object;
  #L3cf81a.  v1:= v3.`org.joda.time.tz.ZoneInfoCompiler$Zone.iNext` @type ^`org.joda.time.tz.ZoneInfoCompiler$Zone` @kind object;
  #L3cf81e.  if v1 != 0 then goto L3cf824;
  #L3cf822.  return v0 @kind object;
  #L3cf824.  v1:= new `java.lang.StringBuilder`;
  #L3cf828.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cf82e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf834.  v0:= "...\n" @kind object;
  #L3cf838.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf83e.  v0:= v3.`org.joda.time.tz.ZoneInfoCompiler$Zone.iNext` @type ^`org.joda.time.tz.ZoneInfoCompiler$Zone` @kind object;
  #L3cf842.  call temp:= `toString`(v0) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$Zone;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cf848.  v0:= temp @kind object;
  #L3cf84a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cf850.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cf856.  v0:= temp @kind object;
  #L3cf858.  return v0 @kind object;
}
