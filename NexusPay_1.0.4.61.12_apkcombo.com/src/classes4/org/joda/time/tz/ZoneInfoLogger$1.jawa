record `org.joda.time.tz.ZoneInfoLogger$1` @kind class @AccessFlag  extends `java.lang.ThreadLocal` @kind class {
}
procedure `void` `<init>`(`org.joda.time.tz.ZoneInfoLogger$1` v0 @kind this) @signature `Lorg/joda/time/tz/ZoneInfoLogger$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d0a90.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L3d0a96.  return @kind void;
}
procedure `java.lang.Boolean` `initialValue`(`org.joda.time.tz.ZoneInfoLogger$1` v1 @kind this) @signature `Lorg/joda/time/tz/ZoneInfoLogger$1;.initialValue:()Ljava/lang/Boolean;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3d0a5c.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L3d0a60.  return v0 @kind object;
}
procedure `java.lang.Object` `initialValue`(`org.joda.time.tz.ZoneInfoLogger$1` v1 @kind this) @signature `Lorg/joda/time/tz/ZoneInfoLogger$1;.initialValue:()Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L3d0a74.  call temp:= `initialValue`(v1) @signature `Lorg/joda/time/tz/ZoneInfoLogger$1;.initialValue:()Ljava/lang/Boolean;` @kind virtual;
  #L3d0a7a.  v0:= temp @kind object;
  #L3d0a7c.  return v0 @kind object;
}
