record `org.joda.time.tz.ZoneInfoCompiler` @kind class @AccessFlag PUBLIC {
  `java.util.List` `org.joda.time.tz.ZoneInfoCompiler.iBackLinks` @AccessFlag PRIVATE;
  `java.util.List` `org.joda.time.tz.ZoneInfoCompiler.iGoodLinks` @AccessFlag PRIVATE;
  `java.util.Map` `org.joda.time.tz.ZoneInfoCompiler.iRuleSets` @AccessFlag PRIVATE;
  `java.util.List` `org.joda.time.tz.ZoneInfoCompiler.iZones` @AccessFlag PRIVATE;
}
global `org.joda.time.Chronology` `@@org.joda.time.tz.ZoneInfoCompiler.cLenientISO` @AccessFlag STATIC;
global `org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear` `@@org.joda.time.tz.ZoneInfoCompiler.cStartOfYear` @AccessFlag STATIC;
procedure `void` `<init>`(`org.joda.time.tz.ZoneInfoCompiler` v1 @kind this) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d039c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d03a2.  v0:= new `java.util.HashMap`;
  #L3d03a6.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3d03ac.  v1.`org.joda.time.tz.ZoneInfoCompiler.iRuleSets` @type ^`java.util.Map` := v0 @kind object;
  #L3d03b0.  v0:= new `java.util.ArrayList`;
  #L3d03b4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3d03ba.  v1.`org.joda.time.tz.ZoneInfoCompiler.iZones` @type ^`java.util.List` := v0 @kind object;
  #L3d03be.  v0:= new `java.util.ArrayList`;
  #L3d03c2.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3d03c8.  v1.`org.joda.time.tz.ZoneInfoCompiler.iGoodLinks` @type ^`java.util.List` := v0 @kind object;
  #L3d03cc.  v0:= new `java.util.ArrayList`;
  #L3d03d0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3d03d6.  v1.`org.joda.time.tz.ZoneInfoCompiler.iBackLinks` @type ^`java.util.List` := v0 @kind object;
  #L3d03da.  return @kind void;
}
procedure `org.joda.time.Chronology` `getLenientISOChronology`() @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.getLenientISOChronology:()Lorg/joda/time/Chronology;` @AccessFlag STATIC {
    temp;
    v0;

  #L3d033c.  v0:= `@@org.joda.time.tz.ZoneInfoCompiler.cLenientISO` @type ^`org.joda.time.Chronology` @kind object;
  #L3d0340.  if v0 != 0 then goto L3d0358;
  #L3d0344.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3d034a.  v0:= temp @kind object;
  #L3d034c.  call temp:= `getInstance`(v0) @signature `Lorg/joda/time/chrono/LenientChronology;.getInstance:(Lorg/joda/time/Chronology;)Lorg/joda/time/chrono/LenientChronology;` @kind static;
  #L3d0352.  v0:= temp @kind object;
  #L3d0354.  `@@org.joda.time.tz.ZoneInfoCompiler.cLenientISO` @type ^`org.joda.time.Chronology` := v0 @kind object;
  #L3d0358.  v0:= `@@org.joda.time.tz.ZoneInfoCompiler.cLenientISO` @type ^`org.joda.time.Chronology` @kind object;
  #L3d035c.  return v0 @kind object;
}
procedure `org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear` `getStartOfYear`() @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.getStartOfYear:()Lorg/joda/time/tz/ZoneInfoCompiler$DateTimeOfYear;` @AccessFlag STATIC {
    temp;
    v0;

  #L3d0370.  v0:= `@@org.joda.time.tz.ZoneInfoCompiler.cStartOfYear` @type ^`org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear` @kind object;
  #L3d0374.  if v0 != 0 then goto L3d0386;
  #L3d0378.  v0:= new `org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear`;
  #L3d037c.  call `<init>`(v0) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$DateTimeOfYear;.<init>:()V` @kind direct;
  #L3d0382.  `@@org.joda.time.tz.ZoneInfoCompiler.cStartOfYear` @type ^`org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear` := v0 @kind object;
  #L3d0386.  v0:= `@@org.joda.time.tz.ZoneInfoCompiler.cStartOfYear` @type ^`org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear` @kind object;
  #L3d038a.  return v0 @kind object;
}
procedure `void` `main`(`java.lang.String`[] v9 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.main:([Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3d03ec.  v0:= length @variable v9;
  #L3d03ee.  if v0 != 0 then goto L3d03fa;
  #L3d03f2.  call `printUsage`() @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.printUsage:()V` @kind static;
  #L3d03f8.  return @kind void;
  #L3d03fa.  v0:= 0I;
  #L3d03fc.  v1:= 0I;
  #L3d03fe.  v2:= v0 @kind object;
  #L3d0400.  v3:= 0I;
  #L3d0402.  v4:= 0I;
  #L3d0404.  v5:= length @variable v9;
  #L3d0406.  v6:= 1I;
  #L3d0408.  if v3 >= v5 then goto L3d049a;
  #L3d040c.  v5:= "-src" @kind object;
  #L3d0410.  v7:= v9[v3] @kind object;
  #L3d0414.  call temp:= `equals`(v5, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d041a.  v5:= temp;
  #L3d041c.  if v5 == 0 then goto L3d0434;
  #L3d0420.  v0:= new `java.io.File`;
  #L3d0424.  v3:= v3 + 1;
  #L3d0428.  v5:= v9[v3] @kind object;
  #L3d042c.  call `<init>`(v0, v5) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d0432.  goto L3d0472;
  #L3d0434.  v5:= "-dst" @kind object;
  #L3d0438.  v7:= v9[v3] @kind object;
  #L3d043c.  call temp:= `equals`(v5, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d0442.  v5:= temp;
  #L3d0444.  if v5 == 0 then goto L3d045c;
  #L3d0448.  v2:= new `java.io.File`;
  #L3d044c.  v3:= v3 + 1;
  #L3d0450.  v5:= v9[v3] @kind object;
  #L3d0454.  call `<init>`(v2, v5) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d045a.  goto L3d0472;
  #L3d045c.  v5:= "-verbose" @kind object;
  #L3d0460.  v7:= v9[v3] @kind object;
  #L3d0464.  call temp:= `equals`(v5, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d046a.  v5:= temp;
  #L3d046c.  if v5 == 0 then goto L3d0476;
  #L3d0470.  v4:= 1I;
  #L3d0472.  v3:= v3 + v6 @kind int;
  #L3d0474.  goto L3d0404;
  #L3d0476.  v5:= "-?" @kind object;
  #L3d047a.  v7:= v9[v3] @kind object;
  #L3d047e.  call temp:= `equals`(v5, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d0484.  v5:= temp;
  #L3d0486.  if v5 == 0 then goto L3d049a;
  #L3d048a.  call `printUsage`() @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.printUsage:()V` @kind static;
  #L3d0490.  return @kind void;
  #L3d0492.  call `printUsage`() @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.printUsage:()V` @kind static;
  #L3d0498.  return @kind void;
  #L3d049a.  v5:= length @variable v9;
  #L3d049c.  if v3 < v5 then goto L3d04a8;
  #L3d04a0.  call `printUsage`() @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.printUsage:()V` @kind static;
  #L3d04a6.  return @kind void;
  #L3d04a8.  v5:= length @variable v9;
  #L3d04aa.  v5:= v5 - v3 @kind int;
  #L3d04ac.  v5:= new `java.io.File`[v5];
  #L3d04b0.  v7:= length @variable v9;
  #L3d04b2.  if v3 >= v7 then goto L3d04e0;
  #L3d04b6.  v7:= new `java.io.File`;
  #L3d04ba.  if v0 != 0 then goto L3d04ca;
  #L3d04be.  v8:= v9[v3] @kind object;
  #L3d04c2.  call `<init>`(v7, v8) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d04c8.  goto L3d04d4;
  #L3d04ca.  v8:= v9[v3] @kind object;
  #L3d04ce.  call `<init>`(v7, v0, v8) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L3d04d4.  v5[v1]:= v7 @kind object;
  #L3d04d8.  v3:= v3 + 1;
  #L3d04dc.  v1:= v1 + v6 @kind int;
  #L3d04de.  goto L3d04b0;
  #L3d04e0.  call `set`(v4) @signature `Lorg/joda/time/tz/ZoneInfoLogger;.set:(Z)V` @kind static;
  #L3d04e6.  v9:= new `org.joda.time.tz.ZoneInfoCompiler`;
  #L3d04ea.  call `<init>`(v9) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.<init>:()V` @kind direct;
  #L3d04f0.  call temp:= `compile`(v9, v2, v5) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.compile:(Ljava/io/File;[Ljava/io/File;)Ljava/util/Map;` @kind virtual;
  #L3d04f6.  return @kind void;
  catch `java.lang.IndexOutOfBoundsException` @[L3d040c..L3d0490] goto L3d0492;
}
procedure `int` `parseDayOfWeek`(`java.lang.String` v4 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.parseDayOfWeek:(Ljava/lang/String;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3cfd64.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3cfd6a.  v0:= temp @kind object;
  #L3cfd6c.  call temp:= `dayOfWeek`(v0) @signature `Lorg/joda/time/chrono/AssembledChronology;.dayOfWeek:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3cfd72.  v0:= temp @kind object;
  #L3cfd74.  v1:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L3cfd78.  v2:= 0L;
  #L3cfd7c.  call temp:= `set`(v0, v2, v4, v1) @signature `Lorg/joda/time/DateTimeField;.set:(JLjava/lang/String;Ljava/util/Locale;)J` @kind virtual;
  #L3cfd82.  v1:= temp @kind wide;
  #L3cfd84.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3cfd8a.  v4:= temp;
  #L3cfd8c.  return v4;
}
procedure `int` `parseMonth`(`java.lang.String` v4 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.parseMonth:(Ljava/lang/String;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3cfda0.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3cfda6.  v0:= temp @kind object;
  #L3cfda8.  call temp:= `monthOfYear`(v0) @signature `Lorg/joda/time/chrono/AssembledChronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3cfdae.  v0:= temp @kind object;
  #L3cfdb0.  v1:= `@@java.util.Locale.ENGLISH` @type ^`java.util.Locale` @kind object;
  #L3cfdb4.  v2:= 0L;
  #L3cfdb8.  call temp:= `set`(v0, v2, v4, v1) @signature `Lorg/joda/time/DateTimeField;.set:(JLjava/lang/String;Ljava/util/Locale;)J` @kind virtual;
  #L3cfdbe.  v1:= temp @kind wide;
  #L3cfdc0.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3cfdc6.  v4:= temp;
  #L3cfdc8.  return v4;
}
procedure `java.lang.String` `parseOptional`(`java.lang.String` v1 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.parseOptional:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L3cfecc.  v0:= "-" @kind object;
  #L3cfed0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cfed6.  v0:= temp;
  #L3cfed8.  if v0 == 0 then goto L3cfede;
  #L3cfedc.  v1:= 0I;
  #L3cfede.  return v1 @kind object;
}
procedure `int` `parseTime`(`java.lang.String` v5 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.parseTime:(Ljava/lang/String;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3cfddc.  call temp:= `hourMinuteSecondFraction`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.hourMinuteSecondFraction:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3cfde2.  v0:= temp @kind object;
  #L3cfde4.  v1:= new `org.joda.time.MutableDateTime`;
  #L3cfde8.  call temp:= `getLenientISOChronology`() @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.getLenientISOChronology:()Lorg/joda/time/Chronology;` @kind static;
  #L3cfdee.  v2:= temp @kind object;
  #L3cfdf0.  v3:= 0L;
  #L3cfdf4.  call `<init>`(v1, v3, v2) @signature `Lorg/joda/time/MutableDateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3cfdfa.  v2:= "-" @kind object;
  #L3cfdfe.  call temp:= `startsWith`(v5, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3cfe04.  v2:= temp;
  #L3cfe06.  call temp:= `parseInto`(v0, v1, v5, v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.parseInto:(Lorg/joda/time/ReadWritableInstant;Ljava/lang/String;I)I` @kind virtual;
  #L3cfe0c.  v0:= temp;
  #L3cfe0e.  v3:= ~v2 @kind int;
  #L3cfe10.  if v0 == v3 then goto L3cfe28;
  #L3cfe14.  call temp:= `getMillis`(v1) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3cfe1a.  v0:= temp @kind wide;
  #L3cfe1c.  v5:= (`int`) v0 @kind l2i;
  #L3cfe1e.  v0:= 1I;
  #L3cfe20.  if v2 != v0 then goto L3cfe26;
  #L3cfe24.  v5:= -v5 @kind int;
  #L3cfe26.  return v5;
  #L3cfe28.  v0:= new `java.lang.IllegalArgumentException`;
  #L3cfe2c.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cfe32.  throw v0;
}
procedure `int` `parseYear`(`java.lang.String` v1 @kind object, `int` v2 ) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.parseYear:(Ljava/lang/String;I)I` @AccessFlag STATIC {
    temp;
    v0;

  #L3cfe44.  call temp:= `toLowerCase`(v1) @signature `Ljava/lang/String;.toLowerCase:()Ljava/lang/String;` @kind virtual;
  #L3cfe4a.  v1:= temp @kind object;
  #L3cfe4c.  v0:= "minimum" @kind object;
  #L3cfe50.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cfe56.  v0:= temp;
  #L3cfe58.  if v0 != 0 then goto L3cfeb4;
  #L3cfe5c.  v0:= "min" @kind object;
  #L3cfe60.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cfe66.  v0:= temp;
  #L3cfe68.  if v0 == 0 then goto L3cfe6e;
  #L3cfe6c.  goto L3cfeb4;
  #L3cfe6e.  v0:= "maximum" @kind object;
  #L3cfe72.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cfe78.  v0:= temp;
  #L3cfe7a.  if v0 != 0 then goto L3cfeac;
  #L3cfe7e.  v0:= "max" @kind object;
  #L3cfe82.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cfe88.  v0:= temp;
  #L3cfe8a.  if v0 == 0 then goto L3cfe90;
  #L3cfe8e.  goto L3cfeac;
  #L3cfe90.  v0:= "only" @kind object;
  #L3cfe94.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cfe9a.  v0:= temp;
  #L3cfe9c.  if v0 == 0 then goto L3cfea2;
  #L3cfea0.  return v2;
  #L3cfea2.  call temp:= `parseInt`(v1) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3cfea8.  v1:= temp;
  #L3cfeaa.  return v1;
  #L3cfeac.  v1:= 2147483647I;
  #L3cfeb2.  return v1;
  #L3cfeb4.  v1:= -2147483648I;
  #L3cfeb8.  return v1;
}
procedure `char` `parseZoneChar`(`char` v3 ) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.parseZoneChar:(C)C` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3cfd08.  v0:= 71I;
  #L3cfd0c.  v1:= 117I;
  #L3cfd10.  if v3 == v0 then goto L3cfd50;
  #L3cfd14.  v0:= 83I;
  #L3cfd18.  v2:= 115I;
  #L3cfd1c.  if v3 == v0 then goto L3cfd4e;
  #L3cfd20.  v0:= 85I;
  #L3cfd24.  if v3 == v0 then goto L3cfd50;
  #L3cfd28.  v0:= 90I;
  #L3cfd2c.  if v3 == v0 then goto L3cfd50;
  #L3cfd30.  v0:= 103I;
  #L3cfd34.  if v3 == v0 then goto L3cfd50;
  #L3cfd38.  if v3 == v2 then goto L3cfd4e;
  #L3cfd3c.  if v3 == v1 then goto L3cfd50;
  #L3cfd40.  v0:= 122I;
  #L3cfd44.  if v3 == v0 then goto L3cfd50;
  #L3cfd48.  v3:= 119I;
  #L3cfd4c.  return v3;
  #L3cfd4e.  return v2;
  #L3cfd50.  return v1;
}
procedure `void` `printUsage`() @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.printUsage:()V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3d0728.  v0:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L3d072c.  v1:= "Usage: java org.joda.time.tz.ZoneInfoCompiler <options> <source files>" @kind object;
  #L3d0730.  call `println`(v0, v1) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3d0736.  v0:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L3d073a.  v1:= "where possible options include:" @kind object;
  #L3d073e.  call `println`(v0, v1) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3d0744.  v0:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L3d0748.  v1:= "  -src <directory>    Specify where to read source files" @kind object;
  #L3d074c.  call `println`(v0, v1) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3d0752.  v0:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L3d0756.  v1:= "  -dst <directory>    Specify where to write generated files" @kind object;
  #L3d075a.  call `println`(v0, v1) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3d0760.  v0:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L3d0764.  v1:= "  -verbose            Output verbosely (default false)" @kind object;
  #L3d0768.  call `println`(v0, v1) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3d076e.  return @kind void;
}
procedure `boolean` `test`(`java.lang.String` v17 @kind object, `org.joda.time.DateTimeZone` v18 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.test:(Ljava/lang/String;Lorg/joda/time/DateTimeZone;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L3cfa50.  v0:= v18 @kind object;
  #L3cfa54.  call temp:= `getID`(v18) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3cfa5a.  v1:= temp @kind object;
  #L3cfa5c.  v2:= v17 @kind object;
  #L3cfa60.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cfa66.  v1:= temp;
  #L3cfa68.  v2:= 1I;
  #L3cfa6a.  if v1 != 0 then goto L3cfa70;
  #L3cfa6e.  return v2;
  #L3cfa70.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3cfa76.  v1:= temp @kind object;
  #L3cfa78.  call temp:= `year`(v1) @signature `Lorg/joda/time/chrono/AssembledChronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3cfa7e.  v1:= temp @kind object;
  #L3cfa80.  v3:= 0L;
  #L3cfa84.  v5:= 1850I;
  #L3cfa88.  call temp:= `set`(v1, v3, v5) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3cfa8e.  v6:= temp @kind wide;
  #L3cfa90.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3cfa96.  v1:= temp @kind object;
  #L3cfa98.  call temp:= `year`(v1) @signature `Lorg/joda/time/chrono/AssembledChronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3cfa9e.  v1:= temp @kind object;
  #L3cfaa0.  v8:= 2050I;
  #L3cfaa4.  call temp:= `set`(v1, v3, v8) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3cfaaa.  v9:= temp @kind wide;
  #L3cfaac.  call temp:= `getOffset`(v0, v6) @signature `Lorg/joda/time/DateTimeZone;.getOffset:(J)I` @kind virtual;
  #L3cfab2.  v1:= temp;
  #L3cfab4.  call temp:= `getNameKey`(v0, v6) @signature `Lorg/joda/time/DateTimeZone;.getNameKey:(J)Ljava/lang/String;` @kind virtual;
  #L3cfaba.  v11:= temp @kind object;
  #L3cfabc.  v12:= new `java.util.ArrayList`;
  #L3cfac0.  call `<init>`(v12) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3cfac6.  call temp:= `nextTransition`(v0, v6) @signature `Lorg/joda/time/DateTimeZone;.nextTransition:(J)J` @kind virtual;
  #L3cfacc.  v13:= temp @kind wide;
  #L3cface.  v15:= 0I;
  #L3cfad0.  v2:= " " @kind object;
  #L3cfad4.  v16:= lcmp(v13, v6);
  #L3cfad8.  if v16 == 0 then goto L3cfbfc;
  #L3cfadc.  v6:= lcmp(v13, v9);
  #L3cfae0.  if v6 <= 0 then goto L3cfae8;
  #L3cfae4.  goto L3cfbfc;
  #L3cfae8.  call temp:= `getOffset`(v0, v13) @signature `Lorg/joda/time/DateTimeZone;.getOffset:(J)I` @kind virtual;
  #L3cfaee.  v6:= temp;
  #L3cfaf0.  call temp:= `getNameKey`(v0, v13) @signature `Lorg/joda/time/DateTimeZone;.getNameKey:(J)Ljava/lang/String;` @kind virtual;
  #L3cfaf6.  v7:= temp @kind object;
  #L3cfaf8.  if v1 != v6 then goto L3cfb5c;
  #L3cfafc.  call temp:= `equals`(v11, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cfb02.  v1:= temp;
  #L3cfb04.  if v1 == 0 then goto L3cfb5c;
  #L3cfb08.  v1:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L3cfb0c.  v3:= new `java.lang.StringBuilder`;
  #L3cfb10.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cfb16.  v4:= "*d* Error in " @kind object;
  #L3cfb1a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfb20.  call temp:= `getID`(v18) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3cfb26.  v0:= temp @kind object;
  #L3cfb28.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfb2e.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfb34.  v0:= new `org.joda.time.DateTime`;
  #L3cfb38.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3cfb3e.  v2:= temp @kind object;
  #L3cfb40.  call `<init>`(v0, v13, v2) @signature `Lorg/joda/time/DateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3cfb46.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfb4c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cfb52.  v0:= temp @kind object;
  #L3cfb54.  call `println`(v1, v0) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3cfb5a.  return v15;
  #L3cfb5c.  if v7 == 0 then goto L3cfb98;
  #L3cfb60.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cfb66.  v1:= temp;
  #L3cfb68.  v11:= 3I;
  #L3cfb6a.  if v1 >= v11 then goto L3cfb80;
  #L3cfb6e.  v1:= "??" @kind object;
  #L3cfb72.  call temp:= `equals`(v1, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cfb78.  v1:= temp;
  #L3cfb7a.  if v1 != 0 then goto L3cfb80;
  #L3cfb7e.  goto L3cfb98;
  #L3cfb80.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3cfb86.  v1:= temp @kind object;
  #L3cfb88.  call temp:= `add`(v12, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3cfb8e.  v1:= v6;
  #L3cfb90.  v11:= v7 @kind object;
  #L3cfb92.  v6:= v13 @kind wide;
  #L3cfb94.  v2:= 1I;
  #L3cfb96.  goto L3cfac6;
  #L3cfb98.  v1:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L3cfb9c.  v3:= new `java.lang.StringBuilder`;
  #L3cfba0.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cfba6.  v4:= "*s* Error in " @kind object;
  #L3cfbaa.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfbb0.  call temp:= `getID`(v18) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3cfbb6.  v0:= temp @kind object;
  #L3cfbb8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfbbe.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfbc4.  v0:= new `org.joda.time.DateTime`;
  #L3cfbc8.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3cfbce.  v2:= temp @kind object;
  #L3cfbd0.  call `<init>`(v0, v13, v2) @signature `Lorg/joda/time/DateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3cfbd6.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfbdc.  v0:= ", nameKey=" @kind object;
  #L3cfbe0.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfbe6.  call temp:= `append`(v3, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfbec.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cfbf2.  v0:= temp @kind object;
  #L3cfbf4.  call `println`(v1, v0) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3cfbfa.  return v15;
  #L3cfbfc.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3cfc02.  v1:= temp @kind object;
  #L3cfc04.  call temp:= `year`(v1) @signature `Lorg/joda/time/chrono/AssembledChronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3cfc0a.  v1:= temp @kind object;
  #L3cfc0c.  call temp:= `set`(v1, v3, v8) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3cfc12.  v6:= temp @kind wide;
  #L3cfc14.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3cfc1a.  v1:= temp @kind object;
  #L3cfc1c.  call temp:= `year`(v1) @signature `Lorg/joda/time/chrono/AssembledChronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3cfc22.  v1:= temp @kind object;
  #L3cfc24.  call temp:= `set`(v1, v3, v5) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3cfc2a.  v3:= temp @kind wide;
  #L3cfc2c.  call temp:= `size`(v12) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3cfc32.  v1:= temp;
  #L3cfc34.  v1:= v1 + -1;
  #L3cfc38.  if v1 < 0 then goto L3cfcf2;
  #L3cfc3c.  call temp:= `previousTransition`(v0, v6) @signature `Lorg/joda/time/DateTimeZone;.previousTransition:(J)J` @kind virtual;
  #L3cfc42.  v8:= temp @kind wide;
  #L3cfc44.  v5:= lcmp(v8, v6);
  #L3cfc48.  if v5 == 0 then goto L3cfcf2;
  #L3cfc4c.  v5:= lcmp(v8, v3);
  #L3cfc50.  if v5 >= 0 then goto L3cfc56;
  #L3cfc54.  goto L3cfcf2;
  #L3cfc56.  call temp:= `get`(v12, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3cfc5c.  v5:= temp @kind object;
  #L3cfc5e.  v5:= (`java.lang.Long`) v5 @kind object;
  #L3cfc62.  call temp:= `longValue`(v5) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L3cfc68.  v5:= temp @kind wide;
  #L3cfc6a.  v10:= 1L;
  #L3cfc6e.  v5:= v5 - v10 @kind long;
  #L3cfc70.  v7:= lcmp(v5, v8);
  #L3cfc74.  if v7 == 0 then goto L3cfcee;
  #L3cfc78.  v1:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L3cfc7c.  v3:= new `java.lang.StringBuilder`;
  #L3cfc80.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cfc86.  v4:= "*r* Error in " @kind object;
  #L3cfc8a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfc90.  call temp:= `getID`(v18) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3cfc96.  v0:= temp @kind object;
  #L3cfc98.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfc9e.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfca4.  v0:= new `org.joda.time.DateTime`;
  #L3cfca8.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3cfcae.  v2:= temp @kind object;
  #L3cfcb0.  call `<init>`(v0, v8, v2) @signature `Lorg/joda/time/DateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3cfcb6.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfcbc.  v0:= " != " @kind object;
  #L3cfcc0.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfcc6.  v0:= new `org.joda.time.DateTime`;
  #L3cfcca.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3cfcd0.  v2:= temp @kind object;
  #L3cfcd2.  call `<init>`(v0, v5, v2) @signature `Lorg/joda/time/DateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3cfcd8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfcde.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cfce4.  v0:= temp @kind object;
  #L3cfce6.  call `println`(v1, v0) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3cfcec.  return v15;
  #L3cfcee.  v6:= v8 @kind wide;
  #L3cfcf0.  goto L3cfc34;
  #L3cfcf2.  v0:= 1I;
  #L3cfcf4.  return v0;
}
procedure `void` `writeZone`(`org.joda.time.tz.ZoneInfoCompiler` v3 @kind this, `java.io.File` v4 @kind object, `org.joda.time.tz.DateTimeZoneBuilder` v5 @kind object, `org.joda.time.DateTimeZone` v6 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.writeZone:(Ljava/io/File;Lorg/joda/time/tz/DateTimeZoneBuilder;Lorg/joda/time/DateTimeZone;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d0780.  call temp:= `verbose`() @signature `Lorg/joda/time/tz/ZoneInfoLogger;.verbose:()Z` @kind static;
  #L3d0786.  v0:= temp;
  #L3d0788.  if v0 == 0 then goto L3d07c0;
  #L3d078c.  v0:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L3d0790.  v1:= new `java.lang.StringBuilder`;
  #L3d0794.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d079a.  v2:= "Writing " @kind object;
  #L3d079e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d07a4.  call temp:= `getID`(v6) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3d07aa.  v2:= temp @kind object;
  #L3d07ac.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d07b2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d07b8.  v1:= temp @kind object;
  #L3d07ba.  call `println`(v0, v1) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3d07c0.  v0:= new `java.io.File`;
  #L3d07c4.  call temp:= `getID`(v6) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3d07ca.  v1:= temp @kind object;
  #L3d07cc.  call `<init>`(v0, v4, v1) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L3d07d2.  call temp:= `getParentFile`(v0) @signature `Ljava/io/File;.getParentFile:()Ljava/io/File;` @kind virtual;
  #L3d07d8.  v4:= temp @kind object;
  #L3d07da.  call temp:= `exists`(v4) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L3d07e0.  v4:= temp;
  #L3d07e2.  if v4 != 0 then goto L3d07f4;
  #L3d07e6.  call temp:= `getParentFile`(v0) @signature `Ljava/io/File;.getParentFile:()Ljava/io/File;` @kind virtual;
  #L3d07ec.  v4:= temp @kind object;
  #L3d07ee.  call temp:= `mkdirs`(v4) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L3d07f4.  v4:= new `java.io.FileOutputStream`;
  #L3d07f8.  call `<init>`(v4, v0) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L3d07fe.  call temp:= `getID`(v6) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3d0804.  v1:= temp @kind object;
  #L3d0806.  call `writeTo`(v5, v1, v4) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder;.writeTo:(Ljava/lang/String;Ljava/io/OutputStream;)V` @kind virtual;
  #L3d080c.  call `close`(v4) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L3d0812.  v4:= new `java.io.FileInputStream`;
  #L3d0816.  call `<init>`(v4, v0) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L3d081c.  call temp:= `getID`(v6) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3d0822.  v5:= temp @kind object;
  #L3d0824.  call temp:= `readFrom`(v4, v5) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder;.readFrom:(Ljava/io/InputStream;Ljava/lang/String;)Lorg/joda/time/DateTimeZone;` @kind static;
  #L3d082a.  v5:= temp @kind object;
  #L3d082c.  call `close`(v4) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3d0832.  call temp:= `equals`(v6, v5) @signature `Lorg/joda/time/DateTimeZone;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d0838.  v4:= temp;
  #L3d083a.  if v4 != 0 then goto L3d087c;
  #L3d083e.  v4:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L3d0842.  v5:= new `java.lang.StringBuilder`;
  #L3d0846.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d084c.  v0:= "*e* Error in " @kind object;
  #L3d0850.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0856.  call temp:= `getID`(v6) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3d085c.  v6:= temp @kind object;
  #L3d085e.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0864.  v6:= ": Didn't read properly from file" @kind object;
  #L3d0868.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d086e.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d0874.  v5:= temp @kind object;
  #L3d0876.  call `println`(v4, v5) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3d087c.  return @kind void;
  #L3d087e.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d0880.  call `close`(v4) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L3d0886.  throw v5;
  catch `java.lang.Throwable` @[L3d07fe..L3d080c] goto L3d087e;
}
procedure `void` `writeZoneInfoMap`(`java.io.DataOutputStream` v8 @kind object, `java.util.Map` v9 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.writeZoneInfoMap:(Ljava/io/DataOutputStream;Ljava/util/Map;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3d08a4.  v0:= new `java.util.HashMap`;
  #L3d08a8.  call temp:= `size`(v9) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3d08ae.  v1:= temp;
  #L3d08b0.  call `<init>`(v0, v1) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L3d08b6.  v1:= new `java.util.TreeMap`;
  #L3d08ba.  call `<init>`(v1) @signature `Ljava/util/TreeMap;.<init>:()V` @kind direct;
  #L3d08c0.  call temp:= `entrySet`(v9) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3d08c6.  v2:= temp @kind object;
  #L3d08c8.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3d08ce.  v2:= temp @kind object;
  #L3d08d0.  v3:= 0I;
  #L3d08d2.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3d08d8.  v4:= temp;
  #L3d08da.  if v4 == 0 then goto L3d097e;
  #L3d08de.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3d08e4.  v4:= temp @kind object;
  #L3d08e6.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L3d08ea.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3d08f0.  v5:= temp @kind object;
  #L3d08f2.  v5:= (`java.lang.String`) v5 @kind object;
  #L3d08f6.  call temp:= `containsKey`(v0, v5) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L3d08fc.  v6:= temp;
  #L3d08fe.  v7:= "Too many time zone ids" @kind object;
  #L3d0902.  if v6 != 0 then goto L3d0932;
  #L3d0906.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L3d090c.  v6:= temp @kind object;
  #L3d090e.  call temp:= `put`(v0, v5, v6) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d0914.  call temp:= `put`(v1, v6, v5) @signature `Ljava/util/TreeMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3d091a.  v3:= v3 + 1;
  #L3d091e.  v3:= (`short`) v3 @kind i2s;
  #L3d0920.  if v3 == 0 then goto L3d0926;
  #L3d0924.  goto L3d0932;
  #L3d0926.  v8:= new `java.lang.InternalError`;
  #L3d092a.  call `<init>`(v8, v7) @signature `Ljava/lang/InternalError;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d0930.  throw v8;
  #L3d0932.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3d0938.  v4:= temp @kind object;
  #L3d093a.  v4:= (`org.joda.time.DateTimeZone`) v4 @kind object;
  #L3d093e.  call temp:= `getID`(v4) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3d0944.  v4:= temp @kind object;
  #L3d0946.  call temp:= `containsKey`(v0, v4) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L3d094c.  v5:= temp;
  #L3d094e.  if v5 != 0 then goto L3d08d2;
  #L3d0952.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L3d0958.  v5:= temp @kind object;
  #L3d095a.  call temp:= `put`(v0, v4, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d0960.  call temp:= `put`(v1, v5, v4) @signature `Ljava/util/TreeMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3d0966.  v3:= v3 + 1;
  #L3d096a.  v3:= (`short`) v3 @kind i2s;
  #L3d096c.  if v3 == 0 then goto L3d0972;
  #L3d0970.  goto L3d08d2;
  #L3d0972.  v8:= new `java.lang.InternalError`;
  #L3d0976.  call `<init>`(v8, v7) @signature `Ljava/lang/InternalError;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d097c.  throw v8;
  #L3d097e.  call temp:= `size`(v1) @signature `Ljava/util/TreeMap;.size:()I` @kind virtual;
  #L3d0984.  v2:= temp;
  #L3d0986.  call `writeShort`(v8, v2) @signature `Ljava/io/DataOutputStream;.writeShort:(I)V` @kind virtual;
  #L3d098c.  call temp:= `values`(v1) @signature `Ljava/util/TreeMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L3d0992.  v1:= temp @kind object;
  #L3d0994.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3d099a.  v1:= temp @kind object;
  #L3d099c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3d09a2.  v2:= temp;
  #L3d09a4.  if v2 == 0 then goto L3d09bc;
  #L3d09a8.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3d09ae.  v2:= temp @kind object;
  #L3d09b0.  v2:= (`java.lang.String`) v2 @kind object;
  #L3d09b4.  call `writeUTF`(v8, v2) @signature `Ljava/io/DataOutputStream;.writeUTF:(Ljava/lang/String;)V` @kind virtual;
  #L3d09ba.  goto L3d099c;
  #L3d09bc.  call temp:= `size`(v9) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3d09c2.  v1:= temp;
  #L3d09c4.  call `writeShort`(v8, v1) @signature `Ljava/io/DataOutputStream;.writeShort:(I)V` @kind virtual;
  #L3d09ca.  call temp:= `entrySet`(v9) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3d09d0.  v9:= temp @kind object;
  #L3d09d2.  call temp:= `iterator`(v9) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3d09d8.  v9:= temp @kind object;
  #L3d09da.  call temp:= `hasNext`(v9) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3d09e0.  v1:= temp;
  #L3d09e2.  if v1 == 0 then goto L3d0a48;
  #L3d09e6.  call temp:= `next`(v9) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3d09ec.  v1:= temp @kind object;
  #L3d09ee.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L3d09f2.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3d09f8.  v2:= temp @kind object;
  #L3d09fa.  v2:= (`java.lang.String`) v2 @kind object;
  #L3d09fe.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d0a04.  v2:= temp @kind object;
  #L3d0a06.  v2:= (`java.lang.Short`) v2 @kind object;
  #L3d0a0a.  call temp:= `shortValue`(v2) @signature `Ljava/lang/Short;.shortValue:()S` @kind virtual;
  #L3d0a10.  v2:= temp;
  #L3d0a12.  call `writeShort`(v8, v2) @signature `Ljava/io/DataOutputStream;.writeShort:(I)V` @kind virtual;
  #L3d0a18.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3d0a1e.  v1:= temp @kind object;
  #L3d0a20.  v1:= (`org.joda.time.DateTimeZone`) v1 @kind object;
  #L3d0a24.  call temp:= `getID`(v1) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3d0a2a.  v1:= temp @kind object;
  #L3d0a2c.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d0a32.  v1:= temp @kind object;
  #L3d0a34.  v1:= (`java.lang.Short`) v1 @kind object;
  #L3d0a38.  call temp:= `shortValue`(v1) @signature `Ljava/lang/Short;.shortValue:()S` @kind virtual;
  #L3d0a3e.  v1:= temp;
  #L3d0a40.  call `writeShort`(v8, v1) @signature `Ljava/io/DataOutputStream;.writeShort:(I)V` @kind virtual;
  #L3d0a46.  goto L3d09da;
  #L3d0a48.  return @kind void;
}
procedure `java.util.Map` `compile`(`org.joda.time.tz.ZoneInfoCompiler` v11 @kind this, `java.io.File` v12 @kind object, `java.io.File`[] v13 @kind object) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.compile:(Ljava/io/File;[Ljava/io/File;)Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3cfef0.  v0:= 0I;
  #L3cfef2.  if v13 == 0 then goto L3cff40;
  #L3cfef6.  v1:= 0I;
  #L3cfef8.  v2:= length @variable v13;
  #L3cfefa.  if v1 >= v2 then goto L3cff40;
  #L3cfefe.  v2:= new `java.io.BufferedReader`;
  #L3cff02.  v3:= new `java.io.FileReader`;
  #L3cff06.  v4:= v13[v1] @kind object;
  #L3cff0a.  call `<init>`(v3, v4) @signature `Ljava/io/FileReader;.<init>:(Ljava/io/File;)V` @kind direct;
  #L3cff10.  call `<init>`(v2, v3) @signature `Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L3cff16.  v3:= v13[v1] @kind object;
  #L3cff1a.  call temp:= `getName`(v3) @signature `Ljava/io/File;.getName:()Ljava/lang/String;` @kind virtual;
  #L3cff20.  v3:= temp @kind object;
  #L3cff22.  v4:= "backward" @kind object;
  #L3cff26.  call temp:= `equals`(v4, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cff2c.  v3:= temp;
  #L3cff2e.  call `parseDataFile`(v11, v2, v3) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.parseDataFile:(Ljava/io/BufferedReader;Z)V` @kind virtual;
  #L3cff34.  call `close`(v2) @signature `Ljava/io/BufferedReader;.close:()V` @kind virtual;
  #L3cff3a.  v1:= v1 + 1;
  #L3cff3e.  goto L3cfef8;
  #L3cff40.  if v12 == 0 then goto L3cffc8;
  #L3cff44.  call temp:= `exists`(v12) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L3cff4a.  v13:= temp;
  #L3cff4c.  if v13 != 0 then goto L3cff8c;
  #L3cff50.  call temp:= `mkdirs`(v12) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L3cff56.  v13:= temp;
  #L3cff58.  if v13 == 0 then goto L3cff5e;
  #L3cff5c.  goto L3cff8c;
  #L3cff5e.  v13:= new `java.io.IOException`;
  #L3cff62.  v0:= new `java.lang.StringBuilder`;
  #L3cff66.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cff6c.  v1:= "Destination directory doesn't exist and cannot be created: " @kind object;
  #L3cff70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cff76.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cff7c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cff82.  v12:= temp @kind object;
  #L3cff84.  call `<init>`(v13, v12) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cff8a.  throw v13;
  #L3cff8c.  call temp:= `isDirectory`(v12) @signature `Ljava/io/File;.isDirectory:()Z` @kind virtual;
  #L3cff92.  v13:= temp;
  #L3cff94.  if v13 == 0 then goto L3cff9a;
  #L3cff98.  goto L3cffc8;
  #L3cff9a.  v13:= new `java.io.IOException`;
  #L3cff9e.  v0:= new `java.lang.StringBuilder`;
  #L3cffa2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cffa8.  v1:= "Destination is not a directory: " @kind object;
  #L3cffac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cffb2.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cffb8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cffbe.  v12:= temp @kind object;
  #L3cffc0.  call `<init>`(v13, v12) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cffc6.  throw v13;
  #L3cffc8.  v13:= new `java.util.TreeMap`;
  #L3cffcc.  call `<init>`(v13) @signature `Ljava/util/TreeMap;.<init>:()V` @kind direct;
  #L3cffd2.  v1:= new `java.util.TreeMap`;
  #L3cffd6.  call `<init>`(v1) @signature `Ljava/util/TreeMap;.<init>:()V` @kind direct;
  #L3cffdc.  v2:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L3cffe0.  v3:= "Writing zoneinfo files" @kind object;
  #L3cffe4.  call `println`(v2, v3) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3cffea.  v2:= 0I;
  #L3cffec.  v3:= v11.`org.joda.time.tz.ZoneInfoCompiler.iZones` @type ^`java.util.List` @kind object;
  #L3cfff0.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3cfff6.  v3:= temp;
  #L3cfff8.  v4:= 1I;
  #L3cfffa.  if v2 >= v3 then goto L3d006e;
  #L3cfffe.  v3:= v11.`org.joda.time.tz.ZoneInfoCompiler.iZones` @type ^`java.util.List` @kind object;
  #L3d0002.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3d0008.  v3:= temp @kind object;
  #L3d000a.  v3:= (`org.joda.time.tz.ZoneInfoCompiler$Zone`) v3 @kind object;
  #L3d000e.  v5:= new `org.joda.time.tz.DateTimeZoneBuilder`;
  #L3d0012.  call `<init>`(v5) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder;.<init>:()V` @kind direct;
  #L3d0018.  v6:= v11.`org.joda.time.tz.ZoneInfoCompiler.iRuleSets` @type ^`java.util.Map` @kind object;
  #L3d001c.  call `addToBuilder`(v3, v5, v6) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$Zone;.addToBuilder:(Lorg/joda/time/tz/DateTimeZoneBuilder;Ljava/util/Map;)V` @kind virtual;
  #L3d0022.  v6:= v3.`org.joda.time.tz.ZoneInfoCompiler$Zone.iName` @type ^`java.lang.String` @kind object;
  #L3d0026.  call temp:= `toDateTimeZone`(v5, v6, v4) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder;.toDateTimeZone:(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3d002c.  v4:= temp @kind object;
  #L3d002e.  call temp:= `getID`(v4) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3d0034.  v6:= temp @kind object;
  #L3d0036.  call temp:= `test`(v6, v4) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.test:(Ljava/lang/String;Lorg/joda/time/DateTimeZone;)Z` @kind static;
  #L3d003c.  v6:= temp;
  #L3d003e.  if v6 == 0 then goto L3d0068;
  #L3d0042.  call temp:= `getID`(v4) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3d0048.  v6:= temp @kind object;
  #L3d004a.  call temp:= `put`(v13, v6, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d0050.  call temp:= `getID`(v4) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3d0056.  v6:= temp @kind object;
  #L3d0058.  call temp:= `put`(v1, v6, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d005e.  if v12 == 0 then goto L3d0068;
  #L3d0062.  call `writeZone`(v11, v12, v5, v4) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.writeZone:(Ljava/io/File;Lorg/joda/time/tz/DateTimeZoneBuilder;Lorg/joda/time/DateTimeZone;)V` @kind direct;
  #L3d0068.  v2:= v2 + 1;
  #L3d006c.  goto L3cffec;
  #L3d006e.  v2:= 0I;
  #L3d0070.  v3:= v11.`org.joda.time.tz.ZoneInfoCompiler.iGoodLinks` @type ^`java.util.List` @kind object;
  #L3d0074.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3d007a.  v3:= temp;
  #L3d007c.  v5:= " -> " @kind object;
  #L3d0080.  v6:= "' to" @kind object;
  #L3d0084.  v7:= "' to link alias '" @kind object;
  #L3d0088.  if v2 >= v3 then goto L3d01ac;
  #L3d008c.  v3:= v11.`org.joda.time.tz.ZoneInfoCompiler.iGoodLinks` @type ^`java.util.List` @kind object;
  #L3d0090.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3d0096.  v3:= temp @kind object;
  #L3d0098.  v3:= (`java.lang.String`) v3 @kind object;
  #L3d009c.  v8:= v11.`org.joda.time.tz.ZoneInfoCompiler.iGoodLinks` @type ^`java.util.List` @kind object;
  #L3d00a0.  v9:= v2 + 1;
  #L3d00a4.  call temp:= `get`(v8, v9) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3d00aa.  v8:= temp @kind object;
  #L3d00ac.  v8:= (`java.lang.String`) v8 @kind object;
  #L3d00b0.  call temp:= `get`(v1, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d00b6.  v9:= temp @kind object;
  #L3d00b8.  v9:= (`org.joda.time.tz.ZoneInfoCompiler$Zone`) v9 @kind object;
  #L3d00bc.  if v9 != 0 then goto L3d0100;
  #L3d00c0.  v5:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L3d00c4.  v9:= new `java.lang.StringBuilder`;
  #L3d00c8.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d00ce.  v10:= "Cannot find source zone '" @kind object;
  #L3d00d2.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d00d8.  call temp:= `append`(v9, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d00de.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d00e4.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d00ea.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d00f0.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d00f6.  v3:= temp @kind object;
  #L3d00f8.  call `println`(v5, v3) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3d00fe.  goto L3d01a4;
  #L3d0100.  v6:= new `org.joda.time.tz.DateTimeZoneBuilder`;
  #L3d0104.  call `<init>`(v6) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder;.<init>:()V` @kind direct;
  #L3d010a.  v7:= v11.`org.joda.time.tz.ZoneInfoCompiler.iRuleSets` @type ^`java.util.Map` @kind object;
  #L3d010e.  call `addToBuilder`(v9, v6, v7) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$Zone;.addToBuilder:(Lorg/joda/time/tz/DateTimeZoneBuilder;Ljava/util/Map;)V` @kind virtual;
  #L3d0114.  call temp:= `toDateTimeZone`(v6, v8, v4) @signature `Lorg/joda/time/tz/DateTimeZoneBuilder;.toDateTimeZone:(Ljava/lang/String;Z)Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3d011a.  v7:= temp @kind object;
  #L3d011c.  call temp:= `getID`(v7) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3d0122.  v9:= temp @kind object;
  #L3d0124.  call temp:= `test`(v9, v7) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.test:(Ljava/lang/String;Lorg/joda/time/DateTimeZone;)Z` @kind static;
  #L3d012a.  v9:= temp;
  #L3d012c.  if v9 == 0 then goto L3d0148;
  #L3d0130.  call temp:= `getID`(v7) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3d0136.  v9:= temp @kind object;
  #L3d0138.  call temp:= `put`(v13, v9, v7) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d013e.  if v12 == 0 then goto L3d0148;
  #L3d0142.  call `writeZone`(v11, v12, v6, v7) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.writeZone:(Ljava/io/File;Lorg/joda/time/tz/DateTimeZoneBuilder;Lorg/joda/time/DateTimeZone;)V` @kind direct;
  #L3d0148.  call temp:= `getID`(v7) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3d014e.  v6:= temp @kind object;
  #L3d0150.  call temp:= `put`(v13, v6, v7) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d0156.  call temp:= `verbose`() @signature `Lorg/joda/time/tz/ZoneInfoLogger;.verbose:()Z` @kind static;
  #L3d015c.  v6:= temp;
  #L3d015e.  if v6 == 0 then goto L3d01a4;
  #L3d0162.  v6:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L3d0166.  v7:= new `java.lang.StringBuilder`;
  #L3d016a.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d0170.  v9:= "Good link: " @kind object;
  #L3d0174.  call temp:= `append`(v7, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d017a.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0180.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0186.  call temp:= `append`(v7, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d018c.  v3:= " revived" @kind object;
  #L3d0190.  call temp:= `append`(v7, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0196.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d019c.  v3:= temp @kind object;
  #L3d019e.  call `println`(v6, v3) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3d01a4.  v2:= v2 + 2;
  #L3d01a8.  goto L3d0070;
  #L3d01ac.  v1:= 0I;
  #L3d01ae.  v2:= 2I;
  #L3d01b0.  if v1 >= v2 then goto L3d029c;
  #L3d01b4.  v2:= 0I;
  #L3d01b6.  v3:= v11.`org.joda.time.tz.ZoneInfoCompiler.iBackLinks` @type ^`java.util.List` @kind object;
  #L3d01ba.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3d01c0.  v3:= temp;
  #L3d01c2.  if v2 >= v3 then goto L3d0296;
  #L3d01c6.  v3:= v11.`org.joda.time.tz.ZoneInfoCompiler.iBackLinks` @type ^`java.util.List` @kind object;
  #L3d01ca.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3d01d0.  v3:= temp @kind object;
  #L3d01d2.  v3:= (`java.lang.String`) v3 @kind object;
  #L3d01d6.  v4:= v11.`org.joda.time.tz.ZoneInfoCompiler.iBackLinks` @type ^`java.util.List` @kind object;
  #L3d01da.  v8:= v2 + 1;
  #L3d01de.  call temp:= `get`(v4, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3d01e4.  v4:= temp @kind object;
  #L3d01e6.  v4:= (`java.lang.String`) v4 @kind object;
  #L3d01ea.  call temp:= `get`(v13, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d01f0.  v8:= temp @kind object;
  #L3d01f2.  v8:= (`org.joda.time.DateTimeZone`) v8 @kind object;
  #L3d01f6.  if v8 != 0 then goto L3d023e;
  #L3d01fa.  if v1 <= 0 then goto L3d0290;
  #L3d01fe.  v8:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L3d0202.  v9:= new `java.lang.StringBuilder`;
  #L3d0206.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d020c.  v10:= "Cannot find time zone '" @kind object;
  #L3d0210.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0216.  call temp:= `append`(v9, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d021c.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0222.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0228.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d022e.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d0234.  v3:= temp @kind object;
  #L3d0236.  call `println`(v8, v3) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3d023c.  goto L3d0290;
  #L3d023e.  call temp:= `put`(v13, v4, v8) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d0244.  call temp:= `verbose`() @signature `Lorg/joda/time/tz/ZoneInfoLogger;.verbose:()Z` @kind static;
  #L3d024a.  v3:= temp;
  #L3d024c.  if v3 == 0 then goto L3d0290;
  #L3d0250.  v3:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L3d0254.  v9:= new `java.lang.StringBuilder`;
  #L3d0258.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d025e.  v10:= "Back link: " @kind object;
  #L3d0262.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0268.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d026e.  call temp:= `append`(v9, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0274.  call temp:= `getID`(v8) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3d027a.  v4:= temp @kind object;
  #L3d027c.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0282.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d0288.  v4:= temp @kind object;
  #L3d028a.  call `println`(v3, v4) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3d0290.  v2:= v2 + 2;
  #L3d0294.  goto L3d01b6;
  #L3d0296.  v1:= v1 + 1;
  #L3d029a.  goto L3d01ae;
  #L3d029c.  if v12 == 0 then goto L3d031e;
  #L3d02a0.  v0:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L3d02a4.  v1:= "Writing ZoneInfoMap" @kind object;
  #L3d02a8.  call `println`(v0, v1) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3d02ae.  v0:= new `java.io.File`;
  #L3d02b2.  v1:= "ZoneInfoMap" @kind object;
  #L3d02b6.  call `<init>`(v0, v12, v1) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L3d02bc.  call temp:= `getParentFile`(v0) @signature `Ljava/io/File;.getParentFile:()Ljava/io/File;` @kind virtual;
  #L3d02c2.  v12:= temp @kind object;
  #L3d02c4.  call temp:= `exists`(v12) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L3d02ca.  v12:= temp;
  #L3d02cc.  if v12 != 0 then goto L3d02de;
  #L3d02d0.  call temp:= `getParentFile`(v0) @signature `Ljava/io/File;.getParentFile:()Ljava/io/File;` @kind virtual;
  #L3d02d6.  v12:= temp @kind object;
  #L3d02d8.  call temp:= `mkdirs`(v12) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L3d02de.  v12:= new `java.io.FileOutputStream`;
  #L3d02e2.  call `<init>`(v12, v0) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L3d02e8.  v0:= new `java.io.DataOutputStream`;
  #L3d02ec.  call `<init>`(v0, v12) @signature `Ljava/io/DataOutputStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L3d02f2.  v12:= new `java.util.TreeMap`;
  #L3d02f6.  v1:= `@@java.lang.String.CASE_INSENSITIVE_ORDER` @type ^`java.util.Comparator` @kind object;
  #L3d02fa.  call `<init>`(v12, v1) @signature `Ljava/util/TreeMap;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L3d0300.  call `putAll`(v12, v13) @signature `Ljava/util/Map;.putAll:(Ljava/util/Map;)V` @kind interface;
  #L3d0306.  call `writeZoneInfoMap`(v0, v12) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.writeZoneInfoMap:(Ljava/io/DataOutputStream;Ljava/util/Map;)V` @kind static;
  #L3d030c.  call `close`(v0) @signature `Ljava/io/DataOutputStream;.close:()V` @kind virtual;
  #L3d0312.  goto L3d031e;
  #L3d0314.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d0316.  call `close`(v0) @signature `Ljava/io/DataOutputStream;.close:()V` @kind virtual;
  #L3d031c.  throw v12;
  #L3d031e.  return v13 @kind object;
  catch `java.lang.Throwable` @[L3d02f2..L3d030c] goto L3d0314;
}
procedure `void` `parseDataFile`(`org.joda.time.tz.ZoneInfoCompiler` v6 @kind this, `java.io.BufferedReader` v7 @kind object, `boolean` v8 ) @signature `Lorg/joda/time/tz/ZoneInfoCompiler;.parseDataFile:(Ljava/io/BufferedReader;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d0518.  v0:= 0I;
  #L3d051a.  v1:= v0 @kind object;
  #L3d051c.  call temp:= `readLine`(v7) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #L3d0522.  v2:= temp @kind object;
  #L3d0524.  if v2 == 0 then goto L3d0706;
  #L3d0528.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3d052e.  v3:= temp @kind object;
  #L3d0530.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3d0536.  v4:= temp;
  #L3d0538.  if v4 == 0 then goto L3d051c;
  #L3d053c.  v4:= 0I;
  #L3d053e.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3d0544.  v3:= temp;
  #L3d0546.  v5:= 35I;
  #L3d054a.  if v3 != v5 then goto L3d0550;
  #L3d054e.  goto L3d051c;
  #L3d0550.  call temp:= `indexOf`(v2, v5) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3d0556.  v3:= temp;
  #L3d0558.  if v3 < 0 then goto L3d0564;
  #L3d055c.  call temp:= `substring`(v2, v4, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3d0562.  v2:= temp @kind object;
  #L3d0564.  v3:= new `java.util.StringTokenizer`;
  #L3d0568.  v5:= " \t" @kind object;
  #L3d056c.  call `<init>`(v3, v2, v5) @signature `Ljava/util/StringTokenizer;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L3d0572.  call temp:= `charAt`(v2, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3d0578.  v4:= temp;
  #L3d057a.  call temp:= `isWhitespace`(v4) @signature `Ljava/lang/Character;.isWhitespace:(C)Z` @kind static;
  #L3d0580.  v4:= temp;
  #L3d0582.  if v4 == 0 then goto L3d059e;
  #L3d0586.  call temp:= `hasMoreTokens`(v3) @signature `Ljava/util/StringTokenizer;.hasMoreTokens:()Z` @kind virtual;
  #L3d058c.  v4:= temp;
  #L3d058e.  if v4 == 0 then goto L3d059e;
  #L3d0592.  if v1 == 0 then goto L3d051c;
  #L3d0596.  call `chain`(v1, v3) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$Zone;.chain:(Ljava/util/StringTokenizer;)V` @kind virtual;
  #L3d059c.  goto L3d051c;
  #L3d059e.  if v1 == 0 then goto L3d05ac;
  #L3d05a2.  v4:= v6.`org.joda.time.tz.ZoneInfoCompiler.iZones` @type ^`java.util.List` @kind object;
  #L3d05a6.  call temp:= `add`(v4, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d05ac.  call temp:= `hasMoreTokens`(v3) @signature `Ljava/util/StringTokenizer;.hasMoreTokens:()Z` @kind virtual;
  #L3d05b2.  v1:= temp;
  #L3d05b4.  if v1 == 0 then goto L3d051a;
  #L3d05b8.  call temp:= `nextToken`(v3) @signature `Ljava/util/StringTokenizer;.nextToken:()Ljava/lang/String;` @kind virtual;
  #L3d05be.  v1:= temp @kind object;
  #L3d05c0.  v4:= "Rule" @kind object;
  #L3d05c4.  call temp:= `equalsIgnoreCase`(v1, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d05ca.  v4:= temp;
  #L3d05cc.  if v4 == 0 then goto L3d0614;
  #L3d05d0.  v1:= new `org.joda.time.tz.ZoneInfoCompiler$Rule`;
  #L3d05d4.  call `<init>`(v1, v3) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$Rule;.<init>:(Ljava/util/StringTokenizer;)V` @kind direct;
  #L3d05da.  v2:= v6.`org.joda.time.tz.ZoneInfoCompiler.iRuleSets` @type ^`java.util.Map` @kind object;
  #L3d05de.  v3:= v1.`org.joda.time.tz.ZoneInfoCompiler$Rule.iName` @type ^`java.lang.String` @kind object;
  #L3d05e2.  call temp:= `get`(v2, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d05e8.  v2:= temp @kind object;
  #L3d05ea.  v2:= (`org.joda.time.tz.ZoneInfoCompiler$RuleSet`) v2 @kind object;
  #L3d05ee.  if v2 != 0 then goto L3d060c;
  #L3d05f2.  v2:= new `org.joda.time.tz.ZoneInfoCompiler$RuleSet`;
  #L3d05f6.  call `<init>`(v2, v1) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$RuleSet;.<init>:(Lorg/joda/time/tz/ZoneInfoCompiler$Rule;)V` @kind direct;
  #L3d05fc.  v3:= v6.`org.joda.time.tz.ZoneInfoCompiler.iRuleSets` @type ^`java.util.Map` @kind object;
  #L3d0600.  v1:= v1.`org.joda.time.tz.ZoneInfoCompiler$Rule.iName` @type ^`java.lang.String` @kind object;
  #L3d0604.  call temp:= `put`(v3, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d060a.  goto L3d051a;
  #L3d060c.  call `addRule`(v2, v1) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$RuleSet;.addRule:(Lorg/joda/time/tz/ZoneInfoCompiler$Rule;)V` @kind virtual;
  #L3d0612.  goto L3d051a;
  #L3d0614.  v4:= "Zone" @kind object;
  #L3d0618.  call temp:= `equalsIgnoreCase`(v1, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d061e.  v4:= temp;
  #L3d0620.  if v4 == 0 then goto L3d0650;
  #L3d0624.  call temp:= `countTokens`(v3) @signature `Ljava/util/StringTokenizer;.countTokens:()I` @kind virtual;
  #L3d062a.  v1:= temp;
  #L3d062c.  v2:= 4I;
  #L3d062e.  if v1 < v2 then goto L3d0640;
  #L3d0632.  v1:= new `org.joda.time.tz.ZoneInfoCompiler$Zone`;
  #L3d0636.  call `<init>`(v1, v3) @signature `Lorg/joda/time/tz/ZoneInfoCompiler$Zone;.<init>:(Ljava/util/StringTokenizer;)V` @kind direct;
  #L3d063c.  goto L3d051c;
  #L3d0640.  v7:= new `java.lang.IllegalArgumentException`;
  #L3d0644.  v8:= "Attempting to create a Zone from an incomplete tokenizer" @kind object;
  #L3d0648.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d064e.  throw v7;
  #L3d0650.  v4:= "Link" @kind object;
  #L3d0654.  call temp:= `equalsIgnoreCase`(v1, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d065a.  v1:= temp;
  #L3d065c.  if v1 == 0 then goto L3d06d6;
  #L3d0660.  call temp:= `nextToken`(v3) @signature `Ljava/util/StringTokenizer;.nextToken:()Ljava/lang/String;` @kind virtual;
  #L3d0666.  v1:= temp @kind object;
  #L3d0668.  call temp:= `nextToken`(v3) @signature `Ljava/util/StringTokenizer;.nextToken:()Ljava/lang/String;` @kind virtual;
  #L3d066e.  v2:= temp @kind object;
  #L3d0670.  if v8 != 0 then goto L3d06be;
  #L3d0674.  v3:= "US/Pacific-New" @kind object;
  #L3d0678.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d067e.  v3:= temp;
  #L3d0680.  if v3 != 0 then goto L3d06be;
  #L3d0684.  v3:= "Etc/" @kind object;
  #L3d0688.  call temp:= `startsWith`(v2, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3d068e.  v3:= temp;
  #L3d0690.  if v3 != 0 then goto L3d06be;
  #L3d0694.  v3:= "GMT" @kind object;
  #L3d0698.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d069e.  v3:= temp;
  #L3d06a0.  if v3 == 0 then goto L3d06a6;
  #L3d06a4.  goto L3d06be;
  #L3d06a6.  v3:= v6.`org.joda.time.tz.ZoneInfoCompiler.iGoodLinks` @type ^`java.util.List` @kind object;
  #L3d06aa.  call temp:= `add`(v3, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d06b0.  v1:= v6.`org.joda.time.tz.ZoneInfoCompiler.iGoodLinks` @type ^`java.util.List` @kind object;
  #L3d06b4.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d06ba.  goto L3d051a;
  #L3d06be.  v3:= v6.`org.joda.time.tz.ZoneInfoCompiler.iBackLinks` @type ^`java.util.List` @kind object;
  #L3d06c2.  call temp:= `add`(v3, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d06c8.  v1:= v6.`org.joda.time.tz.ZoneInfoCompiler.iBackLinks` @type ^`java.util.List` @kind object;
  #L3d06cc.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d06d2.  goto L3d051a;
  #L3d06d6.  v1:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L3d06da.  v3:= new `java.lang.StringBuilder`;
  #L3d06de.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d06e4.  v4:= "Unknown line: " @kind object;
  #L3d06e8.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d06ee.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d06f4.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d06fa.  v2:= temp @kind object;
  #L3d06fc.  call `println`(v1, v2) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L3d0702.  goto L3d051a;
  #L3d0706.  if v1 == 0 then goto L3d0714;
  #L3d070a.  v7:= v6.`org.joda.time.tz.ZoneInfoCompiler.iZones` @type ^`java.util.List` @kind object;
  #L3d070e.  call temp:= `add`(v7, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d0714.  return @kind void;
}
