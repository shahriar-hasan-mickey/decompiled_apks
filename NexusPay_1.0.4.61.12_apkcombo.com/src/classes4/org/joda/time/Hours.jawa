record `org.joda.time.Hours` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.base.BaseSingleFieldPeriod` @kind class {
}
global `org.joda.time.Hours` `@@org.joda.time.Hours.EIGHT` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Hours` `@@org.joda.time.Hours.FIVE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Hours` `@@org.joda.time.Hours.FOUR` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Hours` `@@org.joda.time.Hours.MAX_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Hours` `@@org.joda.time.Hours.MIN_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Hours` `@@org.joda.time.Hours.ONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.format.PeriodFormatter` `@@org.joda.time.Hours.PARSER` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.joda.time.Hours` `@@org.joda.time.Hours.SEVEN` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Hours` `@@org.joda.time.Hours.SIX` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Hours` `@@org.joda.time.Hours.THREE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Hours` `@@org.joda.time.Hours.TWO` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Hours` `@@org.joda.time.Hours.ZERO` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@org.joda.time.Hours.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/Hours;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L39af2c.  v0:= new `org.joda.time.Hours`;
  #L39af30.  v1:= 0I;
  #L39af32.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Hours;.<init>:(I)V` @kind direct;
  #L39af38.  `@@org.joda.time.Hours.ZERO` @type ^`org.joda.time.Hours` := v0 @kind object;
  #L39af3c.  v0:= new `org.joda.time.Hours`;
  #L39af40.  v1:= 1I;
  #L39af42.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Hours;.<init>:(I)V` @kind direct;
  #L39af48.  `@@org.joda.time.Hours.ONE` @type ^`org.joda.time.Hours` := v0 @kind object;
  #L39af4c.  v0:= new `org.joda.time.Hours`;
  #L39af50.  v1:= 2I;
  #L39af52.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Hours;.<init>:(I)V` @kind direct;
  #L39af58.  `@@org.joda.time.Hours.TWO` @type ^`org.joda.time.Hours` := v0 @kind object;
  #L39af5c.  v0:= new `org.joda.time.Hours`;
  #L39af60.  v1:= 3I;
  #L39af62.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Hours;.<init>:(I)V` @kind direct;
  #L39af68.  `@@org.joda.time.Hours.THREE` @type ^`org.joda.time.Hours` := v0 @kind object;
  #L39af6c.  v0:= new `org.joda.time.Hours`;
  #L39af70.  v1:= 4I;
  #L39af72.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Hours;.<init>:(I)V` @kind direct;
  #L39af78.  `@@org.joda.time.Hours.FOUR` @type ^`org.joda.time.Hours` := v0 @kind object;
  #L39af7c.  v0:= new `org.joda.time.Hours`;
  #L39af80.  v1:= 5I;
  #L39af82.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Hours;.<init>:(I)V` @kind direct;
  #L39af88.  `@@org.joda.time.Hours.FIVE` @type ^`org.joda.time.Hours` := v0 @kind object;
  #L39af8c.  v0:= new `org.joda.time.Hours`;
  #L39af90.  v1:= 6I;
  #L39af92.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Hours;.<init>:(I)V` @kind direct;
  #L39af98.  `@@org.joda.time.Hours.SIX` @type ^`org.joda.time.Hours` := v0 @kind object;
  #L39af9c.  v0:= new `org.joda.time.Hours`;
  #L39afa0.  v1:= 7I;
  #L39afa2.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Hours;.<init>:(I)V` @kind direct;
  #L39afa8.  `@@org.joda.time.Hours.SEVEN` @type ^`org.joda.time.Hours` := v0 @kind object;
  #L39afac.  v0:= new `org.joda.time.Hours`;
  #L39afb0.  v1:= 8I;
  #L39afb4.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Hours;.<init>:(I)V` @kind direct;
  #L39afba.  `@@org.joda.time.Hours.EIGHT` @type ^`org.joda.time.Hours` := v0 @kind object;
  #L39afbe.  v0:= new `org.joda.time.Hours`;
  #L39afc2.  v1:= 2147483647I;
  #L39afc8.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Hours;.<init>:(I)V` @kind direct;
  #L39afce.  `@@org.joda.time.Hours.MAX_VALUE` @type ^`org.joda.time.Hours` := v0 @kind object;
  #L39afd2.  v0:= new `org.joda.time.Hours`;
  #L39afd6.  v1:= -2147483648I;
  #L39afda.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Hours;.<init>:(I)V` @kind direct;
  #L39afe0.  `@@org.joda.time.Hours.MIN_VALUE` @type ^`org.joda.time.Hours` := v0 @kind object;
  #L39afe4.  call temp:= `standard`() @signature `Lorg/joda/time/format/ISOPeriodFormat;.standard:()Lorg/joda/time/format/PeriodFormatter;` @kind static;
  #L39afea.  v0:= temp @kind object;
  #L39afec.  call temp:= `hours`() @signature `Lorg/joda/time/PeriodType;.hours:()Lorg/joda/time/PeriodType;` @kind static;
  #L39aff2.  v1:= temp @kind object;
  #L39aff4.  call temp:= `withParseType`(v0, v1) @signature `Lorg/joda/time/format/PeriodFormatter;.withParseType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/format/PeriodFormatter;` @kind virtual;
  #L39affa.  v0:= temp @kind object;
  #L39affc.  `@@org.joda.time.Hours.PARSER` @type ^`org.joda.time.format.PeriodFormatter` := v0 @kind object;
  #L39b000.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Hours` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/Hours;.<init>:(I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L39b014.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.<init>:(I)V` @kind direct;
  #L39b01a.  return @kind void;
}
procedure `org.joda.time.Hours` `hours`(`int` v1 ) @signature `Lorg/joda/time/Hours;.hours:(I)Lorg/joda/time/Hours;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39aba0.  v0:= -2147483648I;
  #L39aba4.  if v1 == v0 then goto L39ac00;
  #L39aba8.  v0:= 2147483647I;
  #L39abae.  if v1 == v0 then goto L39abfa;
  #L39abb2.  goto L39ac08;
  #L39abb8.  v0:= new `org.joda.time.Hours`;
  #L39abbc.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Hours;.<init>:(I)V` @kind direct;
  #L39abc2.  return v0 @kind object;
  #L39abc4.  v1:= `@@org.joda.time.Hours.EIGHT` @type ^`org.joda.time.Hours` @kind object;
  #L39abc8.  return v1 @kind object;
  #L39abca.  v1:= `@@org.joda.time.Hours.SEVEN` @type ^`org.joda.time.Hours` @kind object;
  #L39abce.  return v1 @kind object;
  #L39abd0.  v1:= `@@org.joda.time.Hours.SIX` @type ^`org.joda.time.Hours` @kind object;
  #L39abd4.  return v1 @kind object;
  #L39abd6.  v1:= `@@org.joda.time.Hours.FIVE` @type ^`org.joda.time.Hours` @kind object;
  #L39abda.  return v1 @kind object;
  #L39abdc.  v1:= `@@org.joda.time.Hours.FOUR` @type ^`org.joda.time.Hours` @kind object;
  #L39abe0.  return v1 @kind object;
  #L39abe2.  v1:= `@@org.joda.time.Hours.THREE` @type ^`org.joda.time.Hours` @kind object;
  #L39abe6.  return v1 @kind object;
  #L39abe8.  v1:= `@@org.joda.time.Hours.TWO` @type ^`org.joda.time.Hours` @kind object;
  #L39abec.  return v1 @kind object;
  #L39abee.  v1:= `@@org.joda.time.Hours.ONE` @type ^`org.joda.time.Hours` @kind object;
  #L39abf2.  return v1 @kind object;
  #L39abf4.  v1:= `@@org.joda.time.Hours.ZERO` @type ^`org.joda.time.Hours` @kind object;
  #L39abf8.  return v1 @kind object;
  #L39abfa.  v1:= `@@org.joda.time.Hours.MAX_VALUE` @type ^`org.joda.time.Hours` @kind object;
  #L39abfe.  return v1 @kind object;
  #L39ac00.  v1:= `@@org.joda.time.Hours.MIN_VALUE` @type ^`org.joda.time.Hours` @kind object;
  #L39ac04.  return v1 @kind object;
  #L39ac06.  
  #L39ac08.  switch v1
                  | 0 => goto L39abf4
                  | 1 => goto L39abee
                  | 2 => goto L39abe8
                  | 3 => goto L39abe2
                  | 4 => goto L39abdc
                  | 5 => goto L39abd6
                  | 6 => goto L39abd0
                  | 7 => goto L39abca
                  | 8 => goto L39abc4
                  | else => goto L39abb8;
}
procedure `org.joda.time.Hours` `hoursBetween`(`org.joda.time.ReadableInstant` v1 @kind object, `org.joda.time.ReadableInstant` v2 @kind object) @signature `Lorg/joda/time/Hours;.hoursBetween:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Hours;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39ac44.  call temp:= `hours`() @signature `Lorg/joda/time/DurationFieldType;.hours:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L39ac4a.  v0:= temp @kind object;
  #L39ac4c.  call temp:= `between`(v1, v2, v0) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.between:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;Lorg/joda/time/DurationFieldType;)I` @kind static;
  #L39ac52.  v1:= temp;
  #L39ac54.  call temp:= `hours`(v1) @signature `Lorg/joda/time/Hours;.hours:(I)Lorg/joda/time/Hours;` @kind static;
  #L39ac5a.  v1:= temp @kind object;
  #L39ac5c.  return v1 @kind object;
}
procedure `org.joda.time.Hours` `hoursBetween`(`org.joda.time.ReadablePartial` v3 @kind object, `org.joda.time.ReadablePartial` v4 @kind object) @signature `Lorg/joda/time/Hours;.hoursBetween:(Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePartial;)Lorg/joda/time/Hours;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L39ac70.  v0:= instanceof @variable v3 @type ^`org.joda.time.LocalTime` @kind boolean;
  #L39ac74.  if v0 == 0 then goto L39acc2;
  #L39ac78.  v0:= instanceof @variable v4 @type ^`org.joda.time.LocalTime` @kind boolean;
  #L39ac7c.  if v0 == 0 then goto L39acc2;
  #L39ac80.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadablePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L39ac86.  v0:= temp @kind object;
  #L39ac88.  call temp:= `getChronology`(v0) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L39ac8e.  v0:= temp @kind object;
  #L39ac90.  call temp:= `hours`(v0) @signature `Lorg/joda/time/Chronology;.hours:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39ac96.  v0:= temp @kind object;
  #L39ac98.  v4:= (`org.joda.time.LocalTime`) v4 @kind object;
  #L39ac9c.  call temp:= `getLocalMillis`(v4) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L39aca2.  v1:= temp @kind wide;
  #L39aca4.  v3:= (`org.joda.time.LocalTime`) v3 @kind object;
  #L39aca8.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L39acae.  v3:= temp @kind wide;
  #L39acb0.  call temp:= `getDifference`(v0, v1, v3) @signature `Lorg/joda/time/DurationField;.getDifference:(JJ)I` @kind virtual;
  #L39acb6.  v3:= temp;
  #L39acb8.  call temp:= `hours`(v3) @signature `Lorg/joda/time/Hours;.hours:(I)Lorg/joda/time/Hours;` @kind static;
  #L39acbe.  v3:= temp @kind object;
  #L39acc0.  return v3 @kind object;
  #L39acc2.  v0:= `@@org.joda.time.Hours.ZERO` @type ^`org.joda.time.Hours` @kind object;
  #L39acc6.  call temp:= `between`(v3, v4, v0) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.between:(Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePeriod;)I` @kind static;
  #L39accc.  v3:= temp;
  #L39acce.  call temp:= `hours`(v3) @signature `Lorg/joda/time/Hours;.hours:(I)Lorg/joda/time/Hours;` @kind static;
  #L39acd4.  v3:= temp @kind object;
  #L39acd6.  return v3 @kind object;
}
procedure `org.joda.time.Hours` `hoursIn`(`org.joda.time.ReadableInterval` v2 @kind object) @signature `Lorg/joda/time/Hours;.hoursIn:(Lorg/joda/time/ReadableInterval;)Lorg/joda/time/Hours;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L39ace8.  if v2 != 0 then goto L39acf2;
  #L39acec.  v2:= `@@org.joda.time.Hours.ZERO` @type ^`org.joda.time.Hours` @kind object;
  #L39acf0.  return v2 @kind object;
  #L39acf2.  call temp:= `getStart`(v2) @signature `Lorg/joda/time/ReadableInterval;.getStart:()Lorg/joda/time/DateTime;` @kind interface;
  #L39acf8.  v0:= temp @kind object;
  #L39acfa.  call temp:= `getEnd`(v2) @signature `Lorg/joda/time/ReadableInterval;.getEnd:()Lorg/joda/time/DateTime;` @kind interface;
  #L39ad00.  v2:= temp @kind object;
  #L39ad02.  call temp:= `hours`() @signature `Lorg/joda/time/DurationFieldType;.hours:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L39ad08.  v1:= temp @kind object;
  #L39ad0a.  call temp:= `between`(v0, v2, v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.between:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;Lorg/joda/time/DurationFieldType;)I` @kind static;
  #L39ad10.  v2:= temp;
  #L39ad12.  call temp:= `hours`(v2) @signature `Lorg/joda/time/Hours;.hours:(I)Lorg/joda/time/Hours;` @kind static;
  #L39ad18.  v2:= temp @kind object;
  #L39ad1a.  return v2 @kind object;
}
procedure `org.joda.time.Hours` `parseHours`(`java.lang.String` v1 @kind object) @signature `Lorg/joda/time/Hours;.parseHours:(Ljava/lang/String;)Lorg/joda/time/Hours;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39add0.  if v1 != 0 then goto L39adda;
  #L39add4.  v1:= `@@org.joda.time.Hours.ZERO` @type ^`org.joda.time.Hours` @kind object;
  #L39add8.  return v1 @kind object;
  #L39adda.  v0:= `@@org.joda.time.Hours.PARSER` @type ^`org.joda.time.format.PeriodFormatter` @kind object;
  #L39adde.  call temp:= `parsePeriod`(v0, v1) @signature `Lorg/joda/time/format/PeriodFormatter;.parsePeriod:(Ljava/lang/String;)Lorg/joda/time/Period;` @kind virtual;
  #L39ade4.  v1:= temp @kind object;
  #L39ade6.  call temp:= `getHours`(v1) @signature `Lorg/joda/time/Period;.getHours:()I` @kind virtual;
  #L39adec.  v1:= temp;
  #L39adee.  call temp:= `hours`(v1) @signature `Lorg/joda/time/Hours;.hours:(I)Lorg/joda/time/Hours;` @kind static;
  #L39adf4.  v1:= temp @kind object;
  #L39adf6.  return v1 @kind object;
}
procedure `java.lang.Object` `readResolve`(`org.joda.time.Hours` v1 @kind this) @signature `Lorg/joda/time/Hours;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L39aa8c.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39aa92.  v0:= temp;
  #L39aa94.  call temp:= `hours`(v0) @signature `Lorg/joda/time/Hours;.hours:(I)Lorg/joda/time/Hours;` @kind static;
  #L39aa9a.  v0:= temp @kind object;
  #L39aa9c.  return v0 @kind object;
}
procedure `org.joda.time.Hours` `standardHoursIn`(`org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/Hours;.standardHoursIn:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/Hours;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L39ae60.  v0:= 3600000L;
  #L39ae66.  call temp:= `standardPeriodIn`(v2, v0) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.standardPeriodIn:(Lorg/joda/time/ReadablePeriod;J)I` @kind static;
  #L39ae6c.  v2:= temp;
  #L39ae6e.  call temp:= `hours`(v2) @signature `Lorg/joda/time/Hours;.hours:(I)Lorg/joda/time/Hours;` @kind static;
  #L39ae74.  v2:= temp @kind object;
  #L39ae76.  return v2 @kind object;
}
procedure `org.joda.time.Hours` `dividedBy`(`org.joda.time.Hours` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/Hours;.dividedBy:(I)Lorg/joda/time/Hours;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39ab74.  v0:= 1I;
  #L39ab76.  if v2 != v0 then goto L39ab7c;
  #L39ab7a.  return v1 @kind object;
  #L39ab7c.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39ab82.  v0:= temp;
  #L39ab84.  v0:= v0 / v2 @kind int;
  #L39ab86.  call temp:= `hours`(v0) @signature `Lorg/joda/time/Hours;.hours:(I)Lorg/joda/time/Hours;` @kind static;
  #L39ab8c.  v2:= temp @kind object;
  #L39ab8e.  return v2 @kind object;
}
procedure `org.joda.time.DurationFieldType` `getFieldType`(`org.joda.time.Hours` v1 @kind this) @signature `Lorg/joda/time/Hours;.getFieldType:()Lorg/joda/time/DurationFieldType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39ab58.  call temp:= `hours`() @signature `Lorg/joda/time/DurationFieldType;.hours:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L39ab5e.  v0:= temp @kind object;
  #L39ab60.  return v0 @kind object;
}
procedure `int` `getHours`(`org.joda.time.Hours` v1 @kind this) @signature `Lorg/joda/time/Hours;.getHours:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39aa70.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39aa76.  v0:= temp;
  #L39aa78.  return v0;
}
procedure `org.joda.time.PeriodType` `getPeriodType`(`org.joda.time.Hours` v1 @kind this) @signature `Lorg/joda/time/Hours;.getPeriodType:()Lorg/joda/time/PeriodType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39aeb8.  call temp:= `hours`() @signature `Lorg/joda/time/PeriodType;.hours:()Lorg/joda/time/PeriodType;` @kind static;
  #L39aebe.  v0:= temp @kind object;
  #L39aec0.  return v0 @kind object;
}
procedure `boolean` `isGreaterThan`(`org.joda.time.Hours` v3 @kind this, `org.joda.time.Hours` v4 @kind object) @signature `Lorg/joda/time/Hours;.isGreaterThan:(Lorg/joda/time/Hours;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39a9e8.  v0:= 1I;
  #L39a9ea.  v1:= 0I;
  #L39a9ec.  if v4 != 0 then goto L39aa02;
  #L39a9f0.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39a9f6.  v4:= temp;
  #L39a9f8.  if v4 <= 0 then goto L39a9fe;
  #L39a9fc.  goto L39aa00;
  #L39a9fe.  v0:= 0I;
  #L39aa00.  return v0;
  #L39aa02.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39aa08.  v2:= temp;
  #L39aa0a.  call temp:= `getValue`(v4) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39aa10.  v4:= temp;
  #L39aa12.  if v2 <= v4 then goto L39aa18;
  #L39aa16.  goto L39aa1a;
  #L39aa18.  v0:= 0I;
  #L39aa1a.  return v0;
}
procedure `boolean` `isLessThan`(`org.joda.time.Hours` v3 @kind this, `org.joda.time.Hours` v4 @kind object) @signature `Lorg/joda/time/Hours;.isLessThan:(Lorg/joda/time/Hours;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39aa2c.  v0:= 1I;
  #L39aa2e.  v1:= 0I;
  #L39aa30.  if v4 != 0 then goto L39aa46;
  #L39aa34.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39aa3a.  v4:= temp;
  #L39aa3c.  if v4 >= 0 then goto L39aa42;
  #L39aa40.  goto L39aa44;
  #L39aa42.  v0:= 0I;
  #L39aa44.  return v0;
  #L39aa46.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39aa4c.  v2:= temp;
  #L39aa4e.  call temp:= `getValue`(v4) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39aa54.  v4:= temp;
  #L39aa56.  if v2 >= v4 then goto L39aa5c;
  #L39aa5a.  goto L39aa5e;
  #L39aa5c.  v0:= 0I;
  #L39aa5e.  return v0;
}
procedure `org.joda.time.Hours` `minus`(`org.joda.time.Hours` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/Hours;.minus:(I)Lorg/joda/time/Hours;` @AccessFlag PUBLIC {
    temp;

  #L39ad2c.  call temp:= `safeNegate`(v1) @signature `Lorg/joda/time/field/FieldUtils;.safeNegate:(I)I` @kind static;
  #L39ad32.  v1:= temp;
  #L39ad34.  call temp:= `plus`(v0, v1) @signature `Lorg/joda/time/Hours;.plus:(I)Lorg/joda/time/Hours;` @kind virtual;
  #L39ad3a.  v1:= temp @kind object;
  #L39ad3c.  return v1 @kind object;
}
procedure `org.joda.time.Hours` `minus`(`org.joda.time.Hours` v0 @kind this, `org.joda.time.Hours` v1 @kind object) @signature `Lorg/joda/time/Hours;.minus:(Lorg/joda/time/Hours;)Lorg/joda/time/Hours;` @AccessFlag PUBLIC {
    temp;

  #L39ad50.  if v1 != 0 then goto L39ad56;
  #L39ad54.  return v0 @kind object;
  #L39ad56.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39ad5c.  v1:= temp;
  #L39ad5e.  call temp:= `minus`(v0, v1) @signature `Lorg/joda/time/Hours;.minus:(I)Lorg/joda/time/Hours;` @kind virtual;
  #L39ad64.  v1:= temp @kind object;
  #L39ad66.  return v1 @kind object;
}
procedure `org.joda.time.Hours` `multipliedBy`(`org.joda.time.Hours` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/Hours;.multipliedBy:(I)Lorg/joda/time/Hours;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39ad78.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39ad7e.  v0:= temp;
  #L39ad80.  call temp:= `safeMultiply`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L39ad86.  v2:= temp;
  #L39ad88.  call temp:= `hours`(v2) @signature `Lorg/joda/time/Hours;.hours:(I)Lorg/joda/time/Hours;` @kind static;
  #L39ad8e.  v2:= temp @kind object;
  #L39ad90.  return v2 @kind object;
}
procedure `org.joda.time.Hours` `negated`(`org.joda.time.Hours` v1 @kind this) @signature `Lorg/joda/time/Hours;.negated:()Lorg/joda/time/Hours;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39ada4.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39adaa.  v0:= temp;
  #L39adac.  call temp:= `safeNegate`(v0) @signature `Lorg/joda/time/field/FieldUtils;.safeNegate:(I)I` @kind static;
  #L39adb2.  v0:= temp;
  #L39adb4.  call temp:= `hours`(v0) @signature `Lorg/joda/time/Hours;.hours:(I)Lorg/joda/time/Hours;` @kind static;
  #L39adba.  v0:= temp @kind object;
  #L39adbc.  return v0 @kind object;
}
procedure `org.joda.time.Hours` `plus`(`org.joda.time.Hours` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/Hours;.plus:(I)Lorg/joda/time/Hours;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39ae08.  if v2 != 0 then goto L39ae0e;
  #L39ae0c.  return v1 @kind object;
  #L39ae0e.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39ae14.  v0:= temp;
  #L39ae16.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(II)I` @kind static;
  #L39ae1c.  v2:= temp;
  #L39ae1e.  call temp:= `hours`(v2) @signature `Lorg/joda/time/Hours;.hours:(I)Lorg/joda/time/Hours;` @kind static;
  #L39ae24.  v2:= temp @kind object;
  #L39ae26.  return v2 @kind object;
}
procedure `org.joda.time.Hours` `plus`(`org.joda.time.Hours` v0 @kind this, `org.joda.time.Hours` v1 @kind object) @signature `Lorg/joda/time/Hours;.plus:(Lorg/joda/time/Hours;)Lorg/joda/time/Hours;` @AccessFlag PUBLIC {
    temp;

  #L39ae38.  if v1 != 0 then goto L39ae3e;
  #L39ae3c.  return v0 @kind object;
  #L39ae3e.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39ae44.  v1:= temp;
  #L39ae46.  call temp:= `plus`(v0, v1) @signature `Lorg/joda/time/Hours;.plus:(I)Lorg/joda/time/Hours;` @kind virtual;
  #L39ae4c.  v1:= temp @kind object;
  #L39ae4e.  return v1 @kind object;
}
procedure `org.joda.time.Days` `toStandardDays`(`org.joda.time.Hours` v1 @kind this) @signature `Lorg/joda/time/Hours;.toStandardDays:()Lorg/joda/time/Days;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39ab00.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39ab06.  v0:= temp;
  #L39ab08.  v0:= v0 / 24;
  #L39ab0c.  call temp:= `days`(v0) @signature `Lorg/joda/time/Days;.days:(I)Lorg/joda/time/Days;` @kind static;
  #L39ab12.  v0:= temp @kind object;
  #L39ab14.  return v0 @kind object;
}
procedure `org.joda.time.Duration` `toStandardDuration`(`org.joda.time.Hours` v5 @kind this) @signature `Lorg/joda/time/Hours;.toStandardDuration:()Lorg/joda/time/Duration;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L39ab28.  call temp:= `getValue`(v5) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39ab2e.  v0:= temp;
  #L39ab30.  v0:= (`long`) v0 @kind i2l;
  #L39ab32.  v2:= new `org.joda.time.Duration`;
  #L39ab36.  v3:= 3600000L;
  #L39ab3c.  v0:= v0 * v3 @kind long;
  #L39ab40.  call `<init>`(v2, v0) @signature `Lorg/joda/time/Duration;.<init>:(J)V` @kind direct;
  #L39ab46.  return v2 @kind object;
}
procedure `org.joda.time.Minutes` `toStandardMinutes`(`org.joda.time.Hours` v2 @kind this) @signature `Lorg/joda/time/Hours;.toStandardMinutes:()Lorg/joda/time/Minutes;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39ae88.  call temp:= `getValue`(v2) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39ae8e.  v0:= temp;
  #L39ae90.  v1:= 60I;
  #L39ae94.  call temp:= `safeMultiply`(v0, v1) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L39ae9a.  v0:= temp;
  #L39ae9c.  call temp:= `minutes`(v0) @signature `Lorg/joda/time/Minutes;.minutes:(I)Lorg/joda/time/Minutes;` @kind static;
  #L39aea2.  v0:= temp @kind object;
  #L39aea4.  return v0 @kind object;
}
procedure `org.joda.time.Seconds` `toStandardSeconds`(`org.joda.time.Hours` v2 @kind this) @signature `Lorg/joda/time/Hours;.toStandardSeconds:()Lorg/joda/time/Seconds;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39aed4.  call temp:= `getValue`(v2) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39aeda.  v0:= temp;
  #L39aedc.  v1:= 3600I;
  #L39aee0.  call temp:= `safeMultiply`(v0, v1) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L39aee6.  v0:= temp;
  #L39aee8.  call temp:= `seconds`(v0) @signature `Lorg/joda/time/Seconds;.seconds:(I)Lorg/joda/time/Seconds;` @kind static;
  #L39aeee.  v0:= temp @kind object;
  #L39aef0.  return v0 @kind object;
}
procedure `org.joda.time.Weeks` `toStandardWeeks`(`org.joda.time.Hours` v1 @kind this) @signature `Lorg/joda/time/Hours;.toStandardWeeks:()Lorg/joda/time/Weeks;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39af04.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39af0a.  v0:= temp;
  #L39af0c.  v0:= v0 / 168;
  #L39af10.  call temp:= `weeks`(v0) @signature `Lorg/joda/time/Weeks;.weeks:(I)Lorg/joda/time/Weeks;` @kind static;
  #L39af16.  v0:= temp @kind object;
  #L39af18.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.Hours` v2 @kind this) @signature `Lorg/joda/time/Hours;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39aab0.  v0:= new `java.lang.StringBuilder`;
  #L39aab4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39aaba.  v1:= "PT" @kind object;
  #L39aabe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39aac4.  call temp:= `getValue`(v2) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L39aaca.  v1:= temp;
  #L39aacc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L39aad2.  v1:= temp @kind object;
  #L39aad4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39aada.  v1:= "H" @kind object;
  #L39aade.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39aae4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39aaea.  v0:= temp @kind object;
  #L39aaec.  return v0 @kind object;
}
