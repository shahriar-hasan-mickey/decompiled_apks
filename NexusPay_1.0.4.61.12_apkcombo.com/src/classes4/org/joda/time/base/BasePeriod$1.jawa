record `org.joda.time.base.BasePeriod$1` @kind class @AccessFlag  extends `org.joda.time.base.AbstractPeriod` @kind class {
}
procedure `void` `<init>`(`org.joda.time.base.BasePeriod$1` v0 @kind this) @signature `Lorg/joda/time/base/BasePeriod$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3adce0.  call `<init>`(v0) @signature `Lorg/joda/time/base/AbstractPeriod;.<init>:()V` @kind direct;
  #L3adce6.  return @kind void;
}
procedure `org.joda.time.PeriodType` `getPeriodType`(`org.joda.time.base.BasePeriod$1` v1 @kind this) @signature `Lorg/joda/time/base/BasePeriod$1;.getPeriodType:()Lorg/joda/time/PeriodType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3adcc4.  call temp:= `time`() @signature `Lorg/joda/time/PeriodType;.time:()Lorg/joda/time/PeriodType;` @kind static;
  #L3adcca.  v0:= temp @kind object;
  #L3adccc.  return v0 @kind object;
}
procedure `int` `getValue`(`org.joda.time.base.BasePeriod$1` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/base/BasePeriod$1;.getValue:(I)I` @AccessFlag PUBLIC {
    temp;

  #L3adcb0.  v1:= 0I;
  #L3adcb2.  return v1;
}
