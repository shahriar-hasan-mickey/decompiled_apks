record `org.joda.time.base.AbstractDateTime` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.joda.time.base.AbstractInstant` @kind class, `org.joda.time.ReadableDateTime` @kind interface {
}
procedure `void` `<init>`(`org.joda.time.base.AbstractDateTime` v0 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3abb2c.  call `<init>`(v0) @signature `Lorg/joda/time/base/AbstractInstant;.<init>:()V` @kind direct;
  #L3abb32.  return @kind void;
}
procedure `int` `get`(`org.joda.time.base.AbstractDateTime` v2 @kind this, `org.joda.time.DateTimeFieldType` v3 @kind object) @signature `Lorg/joda/time/base/AbstractDateTime;.get:(Lorg/joda/time/DateTimeFieldType;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ab638.  if v3 == 0 then goto L3ab65e;
  #L3ab63c.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab642.  v0:= temp @kind object;
  #L3ab644.  call temp:= `getField`(v3, v0) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3ab64a.  v3:= temp @kind object;
  #L3ab64c.  call temp:= `getMillis`(v2) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3ab652.  v0:= temp @kind wide;
  #L3ab654.  call temp:= `get`(v3, v0) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3ab65a.  v3:= temp;
  #L3ab65c.  return v3;
  #L3ab65e.  v3:= new `java.lang.IllegalArgumentException`;
  #L3ab662.  v0:= "The DateTimeFieldType must not be null" @kind object;
  #L3ab666.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ab66c.  throw v3;
}
procedure `int` `getCenturyOfEra`(`org.joda.time.base.AbstractDateTime` v3 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.getCenturyOfEra:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab680.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab686.  v0:= temp @kind object;
  #L3ab688.  call temp:= `centuryOfEra`(v0) @signature `Lorg/joda/time/Chronology;.centuryOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3ab68e.  v0:= temp @kind object;
  #L3ab690.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3ab696.  v1:= temp @kind wide;
  #L3ab698.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3ab69e.  v0:= temp;
  #L3ab6a0.  return v0;
}
procedure `int` `getDayOfMonth`(`org.joda.time.base.AbstractDateTime` v3 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.getDayOfMonth:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab6b4.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab6ba.  v0:= temp @kind object;
  #L3ab6bc.  call temp:= `dayOfMonth`(v0) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3ab6c2.  v0:= temp @kind object;
  #L3ab6c4.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3ab6ca.  v1:= temp @kind wide;
  #L3ab6cc.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3ab6d2.  v0:= temp;
  #L3ab6d4.  return v0;
}
procedure `int` `getDayOfWeek`(`org.joda.time.base.AbstractDateTime` v3 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.getDayOfWeek:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab6e8.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab6ee.  v0:= temp @kind object;
  #L3ab6f0.  call temp:= `dayOfWeek`(v0) @signature `Lorg/joda/time/Chronology;.dayOfWeek:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3ab6f6.  v0:= temp @kind object;
  #L3ab6f8.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3ab6fe.  v1:= temp @kind wide;
  #L3ab700.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3ab706.  v0:= temp;
  #L3ab708.  return v0;
}
procedure `int` `getDayOfYear`(`org.joda.time.base.AbstractDateTime` v3 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.getDayOfYear:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab71c.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab722.  v0:= temp @kind object;
  #L3ab724.  call temp:= `dayOfYear`(v0) @signature `Lorg/joda/time/Chronology;.dayOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3ab72a.  v0:= temp @kind object;
  #L3ab72c.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3ab732.  v1:= temp @kind wide;
  #L3ab734.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3ab73a.  v0:= temp;
  #L3ab73c.  return v0;
}
procedure `int` `getEra`(`org.joda.time.base.AbstractDateTime` v3 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.getEra:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab750.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab756.  v0:= temp @kind object;
  #L3ab758.  call temp:= `era`(v0) @signature `Lorg/joda/time/Chronology;.era:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3ab75e.  v0:= temp @kind object;
  #L3ab760.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3ab766.  v1:= temp @kind wide;
  #L3ab768.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3ab76e.  v0:= temp;
  #L3ab770.  return v0;
}
procedure `int` `getHourOfDay`(`org.joda.time.base.AbstractDateTime` v3 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.getHourOfDay:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab784.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab78a.  v0:= temp @kind object;
  #L3ab78c.  call temp:= `hourOfDay`(v0) @signature `Lorg/joda/time/Chronology;.hourOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3ab792.  v0:= temp @kind object;
  #L3ab794.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3ab79a.  v1:= temp @kind wide;
  #L3ab79c.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3ab7a2.  v0:= temp;
  #L3ab7a4.  return v0;
}
procedure `int` `getMillisOfDay`(`org.joda.time.base.AbstractDateTime` v3 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.getMillisOfDay:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab7b8.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab7be.  v0:= temp @kind object;
  #L3ab7c0.  call temp:= `millisOfDay`(v0) @signature `Lorg/joda/time/Chronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3ab7c6.  v0:= temp @kind object;
  #L3ab7c8.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3ab7ce.  v1:= temp @kind wide;
  #L3ab7d0.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3ab7d6.  v0:= temp;
  #L3ab7d8.  return v0;
}
procedure `int` `getMillisOfSecond`(`org.joda.time.base.AbstractDateTime` v3 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.getMillisOfSecond:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab7ec.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab7f2.  v0:= temp @kind object;
  #L3ab7f4.  call temp:= `millisOfSecond`(v0) @signature `Lorg/joda/time/Chronology;.millisOfSecond:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3ab7fa.  v0:= temp @kind object;
  #L3ab7fc.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3ab802.  v1:= temp @kind wide;
  #L3ab804.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3ab80a.  v0:= temp;
  #L3ab80c.  return v0;
}
procedure `int` `getMinuteOfDay`(`org.joda.time.base.AbstractDateTime` v3 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.getMinuteOfDay:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab820.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab826.  v0:= temp @kind object;
  #L3ab828.  call temp:= `minuteOfDay`(v0) @signature `Lorg/joda/time/Chronology;.minuteOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3ab82e.  v0:= temp @kind object;
  #L3ab830.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3ab836.  v1:= temp @kind wide;
  #L3ab838.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3ab83e.  v0:= temp;
  #L3ab840.  return v0;
}
procedure `int` `getMinuteOfHour`(`org.joda.time.base.AbstractDateTime` v3 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.getMinuteOfHour:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab854.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab85a.  v0:= temp @kind object;
  #L3ab85c.  call temp:= `minuteOfHour`(v0) @signature `Lorg/joda/time/Chronology;.minuteOfHour:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3ab862.  v0:= temp @kind object;
  #L3ab864.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3ab86a.  v1:= temp @kind wide;
  #L3ab86c.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3ab872.  v0:= temp;
  #L3ab874.  return v0;
}
procedure `int` `getMonthOfYear`(`org.joda.time.base.AbstractDateTime` v3 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.getMonthOfYear:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab888.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab88e.  v0:= temp @kind object;
  #L3ab890.  call temp:= `monthOfYear`(v0) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3ab896.  v0:= temp @kind object;
  #L3ab898.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3ab89e.  v1:= temp @kind wide;
  #L3ab8a0.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3ab8a6.  v0:= temp;
  #L3ab8a8.  return v0;
}
procedure `int` `getSecondOfDay`(`org.joda.time.base.AbstractDateTime` v3 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.getSecondOfDay:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab8bc.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab8c2.  v0:= temp @kind object;
  #L3ab8c4.  call temp:= `secondOfDay`(v0) @signature `Lorg/joda/time/Chronology;.secondOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3ab8ca.  v0:= temp @kind object;
  #L3ab8cc.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3ab8d2.  v1:= temp @kind wide;
  #L3ab8d4.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3ab8da.  v0:= temp;
  #L3ab8dc.  return v0;
}
procedure `int` `getSecondOfMinute`(`org.joda.time.base.AbstractDateTime` v3 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.getSecondOfMinute:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab8f0.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab8f6.  v0:= temp @kind object;
  #L3ab8f8.  call temp:= `secondOfMinute`(v0) @signature `Lorg/joda/time/Chronology;.secondOfMinute:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3ab8fe.  v0:= temp @kind object;
  #L3ab900.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3ab906.  v1:= temp @kind wide;
  #L3ab908.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3ab90e.  v0:= temp;
  #L3ab910.  return v0;
}
procedure `int` `getWeekOfWeekyear`(`org.joda.time.base.AbstractDateTime` v3 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.getWeekOfWeekyear:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab924.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab92a.  v0:= temp @kind object;
  #L3ab92c.  call temp:= `weekOfWeekyear`(v0) @signature `Lorg/joda/time/Chronology;.weekOfWeekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3ab932.  v0:= temp @kind object;
  #L3ab934.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3ab93a.  v1:= temp @kind wide;
  #L3ab93c.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3ab942.  v0:= temp;
  #L3ab944.  return v0;
}
procedure `int` `getWeekyear`(`org.joda.time.base.AbstractDateTime` v3 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.getWeekyear:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab958.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab95e.  v0:= temp @kind object;
  #L3ab960.  call temp:= `weekyear`(v0) @signature `Lorg/joda/time/Chronology;.weekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3ab966.  v0:= temp @kind object;
  #L3ab968.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3ab96e.  v1:= temp @kind wide;
  #L3ab970.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3ab976.  v0:= temp;
  #L3ab978.  return v0;
}
procedure `int` `getYear`(`org.joda.time.base.AbstractDateTime` v3 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.getYear:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab98c.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab992.  v0:= temp @kind object;
  #L3ab994.  call temp:= `year`(v0) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3ab99a.  v0:= temp @kind object;
  #L3ab99c.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3ab9a2.  v1:= temp @kind wide;
  #L3ab9a4.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3ab9aa.  v0:= temp;
  #L3ab9ac.  return v0;
}
procedure `int` `getYearOfCentury`(`org.joda.time.base.AbstractDateTime` v3 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.getYearOfCentury:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab9c0.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab9c6.  v0:= temp @kind object;
  #L3ab9c8.  call temp:= `yearOfCentury`(v0) @signature `Lorg/joda/time/Chronology;.yearOfCentury:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3ab9ce.  v0:= temp @kind object;
  #L3ab9d0.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3ab9d6.  v1:= temp @kind wide;
  #L3ab9d8.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3ab9de.  v0:= temp;
  #L3ab9e0.  return v0;
}
procedure `int` `getYearOfEra`(`org.joda.time.base.AbstractDateTime` v3 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.getYearOfEra:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ab9f4.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3ab9fa.  v0:= temp @kind object;
  #L3ab9fc.  call temp:= `yearOfEra`(v0) @signature `Lorg/joda/time/Chronology;.yearOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3aba02.  v0:= temp @kind object;
  #L3aba04.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3aba0a.  v1:= temp @kind wide;
  #L3aba0c.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3aba12.  v0:= temp;
  #L3aba14.  return v0;
}
procedure `java.util.Calendar` `toCalendar`(`org.joda.time.base.AbstractDateTime` v1 @kind this, `java.util.Locale` v2 @kind object) @signature `Lorg/joda/time/base/AbstractDateTime;.toCalendar:(Ljava/util/Locale;)Ljava/util/Calendar;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3abaac.  if v2 != 0 then goto L3abab8;
  #L3abab0.  call temp:= `getDefault`() @signature `Ljava/util/Locale;.getDefault:()Ljava/util/Locale;` @kind static;
  #L3abab6.  v2:= temp @kind object;
  #L3abab8.  call temp:= `getZone`(v1) @signature `Lorg/joda/time/base/AbstractInstant;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3ababe.  v0:= temp @kind object;
  #L3abac0.  call temp:= `toTimeZone`(v0) @signature `Lorg/joda/time/DateTimeZone;.toTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L3abac6.  v0:= temp @kind object;
  #L3abac8.  call temp:= `getInstance`(v0, v2) @signature `Ljava/util/Calendar;.getInstance:(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;` @kind static;
  #L3abace.  v2:= temp @kind object;
  #L3abad0.  call temp:= `toDate`(v1) @signature `Lorg/joda/time/base/AbstractInstant;.toDate:()Ljava/util/Date;` @kind virtual;
  #L3abad6.  v0:= temp @kind object;
  #L3abad8.  call `setTime`(v2, v0) @signature `Ljava/util/Calendar;.setTime:(Ljava/util/Date;)V` @kind virtual;
  #L3abade.  return v2 @kind object;
}
procedure `java.util.GregorianCalendar` `toGregorianCalendar`(`org.joda.time.base.AbstractDateTime` v2 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.toGregorianCalendar:()Ljava/util/GregorianCalendar;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3abaf0.  call temp:= `getZone`(v2) @signature `Lorg/joda/time/base/AbstractInstant;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3abaf6.  v0:= temp @kind object;
  #L3abaf8.  v1:= new `java.util.GregorianCalendar`;
  #L3abafc.  call temp:= `toTimeZone`(v0) @signature `Lorg/joda/time/DateTimeZone;.toTimeZone:()Ljava/util/TimeZone;` @kind virtual;
  #L3abb02.  v0:= temp @kind object;
  #L3abb04.  call `<init>`(v1, v0) @signature `Ljava/util/GregorianCalendar;.<init>:(Ljava/util/TimeZone;)V` @kind direct;
  #L3abb0a.  call temp:= `toDate`(v2) @signature `Lorg/joda/time/base/AbstractInstant;.toDate:()Ljava/util/Date;` @kind virtual;
  #L3abb10.  v0:= temp @kind object;
  #L3abb12.  call `setTime`(v1, v0) @signature `Ljava/util/GregorianCalendar;.setTime:(Ljava/util/Date;)V` @kind virtual;
  #L3abb18.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.base.AbstractDateTime` v1 @kind this) @signature `Lorg/joda/time/base/AbstractDateTime;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aba28.  call temp:= `toString`(v1) @signature `Lorg/joda/time/base/AbstractInstant;.toString:()Ljava/lang/String;` @kind super;
  #L3aba2e.  v0:= temp @kind object;
  #L3aba30.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.base.AbstractDateTime` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/joda/time/base/AbstractDateTime;.toString:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3aba44.  if v1 != 0 then goto L3aba52;
  #L3aba48.  call temp:= `toString`(v0) @signature `Lorg/joda/time/base/AbstractDateTime;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aba4e.  v1:= temp @kind object;
  #L3aba50.  return v1 @kind object;
  #L3aba52.  call temp:= `forPattern`(v1) @signature `Lorg/joda/time/format/DateTimeFormat;.forPattern:(Ljava/lang/String;)Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3aba58.  v1:= temp @kind object;
  #L3aba5a.  call temp:= `print`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatter;.print:(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;` @kind virtual;
  #L3aba60.  v1:= temp @kind object;
  #L3aba62.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.base.AbstractDateTime` v0 @kind this, `java.lang.String` v1 @kind object, `java.util.Locale` v2 @kind object) @signature `Lorg/joda/time/base/AbstractDateTime;.toString:(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3aba74.  if v1 != 0 then goto L3aba82;
  #L3aba78.  call temp:= `toString`(v0) @signature `Lorg/joda/time/base/AbstractDateTime;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aba7e.  v1:= temp @kind object;
  #L3aba80.  return v1 @kind object;
  #L3aba82.  call temp:= `forPattern`(v1) @signature `Lorg/joda/time/format/DateTimeFormat;.forPattern:(Ljava/lang/String;)Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3aba88.  v1:= temp @kind object;
  #L3aba8a.  call temp:= `withLocale`(v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.withLocale:(Ljava/util/Locale;)Lorg/joda/time/format/DateTimeFormatter;` @kind virtual;
  #L3aba90.  v1:= temp @kind object;
  #L3aba92.  call temp:= `print`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatter;.print:(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;` @kind virtual;
  #L3aba98.  v1:= temp @kind object;
  #L3aba9a.  return v1 @kind object;
}
