record `org.joda.time.base.AbstractPeriod` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.joda.time.ReadablePeriod` @kind interface {
}
procedure `void` `<init>`(`org.joda.time.base.AbstractPeriod` v0 @kind this) @signature `Lorg/joda/time/base/AbstractPeriod;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3ad108.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ad10e.  return @kind void;
}
procedure `boolean` `equals`(`org.joda.time.base.AbstractPeriod` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lorg/joda/time/base/AbstractPeriod;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ace88.  v0:= 1I;
  #L3ace8a.  if v6 != v7 then goto L3ace90;
  #L3ace8e.  return v0;
  #L3ace90.  v1:= instanceof @variable v7 @type ^`org.joda.time.ReadablePeriod` @kind boolean;
  #L3ace94.  v2:= 0I;
  #L3ace96.  if v1 != 0 then goto L3ace9c;
  #L3ace9a.  return v2;
  #L3ace9c.  v7:= (`org.joda.time.ReadablePeriod`) v7 @kind object;
  #L3acea0.  call temp:= `size`(v6) @signature `Lorg/joda/time/base/AbstractPeriod;.size:()I` @kind virtual;
  #L3acea6.  v1:= temp;
  #L3acea8.  call temp:= `size`(v7) @signature `Lorg/joda/time/ReadablePeriod;.size:()I` @kind interface;
  #L3aceae.  v3:= temp;
  #L3aceb0.  if v1 == v3 then goto L3aceb6;
  #L3aceb4.  return v2;
  #L3aceb6.  call temp:= `size`(v6) @signature `Lorg/joda/time/base/AbstractPeriod;.size:()I` @kind virtual;
  #L3acebc.  v1:= temp;
  #L3acebe.  v3:= 0I;
  #L3acec0.  if v3 >= v1 then goto L3acef6;
  #L3acec4.  call temp:= `getValue`(v6, v3) @signature `Lorg/joda/time/ReadablePeriod;.getValue:(I)I` @kind interface;
  #L3aceca.  v4:= temp;
  #L3acecc.  call temp:= `getValue`(v7, v3) @signature `Lorg/joda/time/ReadablePeriod;.getValue:(I)I` @kind interface;
  #L3aced2.  v5:= temp;
  #L3aced4.  if v4 != v5 then goto L3acef4;
  #L3aced8.  call temp:= `getFieldType`(v6, v3) @signature `Lorg/joda/time/base/AbstractPeriod;.getFieldType:(I)Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L3acede.  v4:= temp @kind object;
  #L3acee0.  call temp:= `getFieldType`(v7, v3) @signature `Lorg/joda/time/ReadablePeriod;.getFieldType:(I)Lorg/joda/time/DurationFieldType;` @kind interface;
  #L3acee6.  v5:= temp @kind object;
  #L3acee8.  if v4 == v5 then goto L3aceee;
  #L3aceec.  goto L3acef4;
  #L3aceee.  v3:= v3 + 1;
  #L3acef2.  goto L3acec0;
  #L3acef4.  return v2;
  #L3acef6.  return v0;
}
procedure `int` `get`(`org.joda.time.base.AbstractPeriod` v1 @kind this, `org.joda.time.DurationFieldType` v2 @kind object) @signature `Lorg/joda/time/base/AbstractPeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3acf2c.  call temp:= `indexOf`(v1, v2) @signature `Lorg/joda/time/base/AbstractPeriod;.indexOf:(Lorg/joda/time/DurationFieldType;)I` @kind virtual;
  #L3acf32.  v2:= temp;
  #L3acf34.  v0:= -1I;
  #L3acf36.  if v2 != v0 then goto L3acf3e;
  #L3acf3a.  v2:= 0I;
  #L3acf3c.  return v2;
  #L3acf3e.  call temp:= `getValue`(v1, v2) @signature `Lorg/joda/time/ReadablePeriod;.getValue:(I)I` @kind interface;
  #L3acf44.  v2:= temp;
  #L3acf46.  return v2;
}
procedure `org.joda.time.DurationFieldType` `getFieldType`(`org.joda.time.base.AbstractPeriod` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/base/AbstractPeriod;.getFieldType:(I)Lorg/joda/time/DurationFieldType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ad074.  call temp:= `getPeriodType`(v1) @signature `Lorg/joda/time/ReadablePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind interface;
  #L3ad07a.  v0:= temp @kind object;
  #L3ad07c.  call temp:= `getFieldType`(v0, v2) @signature `Lorg/joda/time/PeriodType;.getFieldType:(I)Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L3ad082.  v2:= temp @kind object;
  #L3ad084.  return v2 @kind object;
}
procedure `org.joda.time.DurationFieldType`[] `getFieldTypes`(`org.joda.time.base.AbstractPeriod` v4 @kind this) @signature `Lorg/joda/time/base/AbstractPeriod;.getFieldTypes:()[Lorg/joda/time/DurationFieldType;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ad098.  call temp:= `size`(v4) @signature `Lorg/joda/time/base/AbstractPeriod;.size:()I` @kind virtual;
  #L3ad09e.  v0:= temp;
  #L3ad0a0.  v1:= new `org.joda.time.DurationFieldType`[v0];
  #L3ad0a4.  v2:= 0I;
  #L3ad0a6.  if v2 >= v0 then goto L3ad0bc;
  #L3ad0aa.  call temp:= `getFieldType`(v4, v2) @signature `Lorg/joda/time/base/AbstractPeriod;.getFieldType:(I)Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L3ad0b0.  v3:= temp @kind object;
  #L3ad0b2.  v1[v2]:= v3 @kind object;
  #L3ad0b6.  v2:= v2 + 1;
  #L3ad0ba.  goto L3ad0a6;
  #L3ad0bc.  return v1 @kind object;
}
procedure `int`[] `getValues`(`org.joda.time.base.AbstractPeriod` v4 @kind this) @signature `Lorg/joda/time/base/AbstractPeriod;.getValues:()[I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3acff0.  call temp:= `size`(v4) @signature `Lorg/joda/time/base/AbstractPeriod;.size:()I` @kind virtual;
  #L3acff6.  v0:= temp;
  #L3acff8.  v1:= new `int`[v0];
  #L3acffc.  v2:= 0I;
  #L3acffe.  if v2 >= v0 then goto L3ad014;
  #L3ad002.  call temp:= `getValue`(v4, v2) @signature `Lorg/joda/time/ReadablePeriod;.getValue:(I)I` @kind interface;
  #L3ad008.  v3:= temp;
  #L3ad00a.  v1[v2]:= v3;
  #L3ad00e.  v2:= v2 + 1;
  #L3ad012.  goto L3acffe;
  #L3ad014.  return v1 @kind object;
}
procedure `int` `hashCode`(`org.joda.time.base.AbstractPeriod` v4 @kind this) @signature `Lorg/joda/time/base/AbstractPeriod;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3acf58.  call temp:= `size`(v4) @signature `Lorg/joda/time/base/AbstractPeriod;.size:()I` @kind virtual;
  #L3acf5e.  v0:= temp;
  #L3acf60.  v1:= 17I;
  #L3acf64.  v2:= 0I;
  #L3acf66.  if v2 >= v0 then goto L3acf94;
  #L3acf6a.  v1:= v1 * 27;
  #L3acf6e.  call temp:= `getValue`(v4, v2) @signature `Lorg/joda/time/ReadablePeriod;.getValue:(I)I` @kind interface;
  #L3acf74.  v3:= temp;
  #L3acf76.  v1:= v1 + v3 @kind int;
  #L3acf78.  v1:= v1 * 27;
  #L3acf7c.  call temp:= `getFieldType`(v4, v2) @signature `Lorg/joda/time/base/AbstractPeriod;.getFieldType:(I)Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L3acf82.  v3:= temp @kind object;
  #L3acf84.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3acf8a.  v3:= temp;
  #L3acf8c.  v1:= v1 + v3 @kind int;
  #L3acf8e.  v2:= v2 + 1;
  #L3acf92.  goto L3acf66;
  #L3acf94.  return v1;
}
procedure `int` `indexOf`(`org.joda.time.base.AbstractPeriod` v1 @kind this, `org.joda.time.DurationFieldType` v2 @kind object) @signature `Lorg/joda/time/base/AbstractPeriod;.indexOf:(Lorg/joda/time/DurationFieldType;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3acfa8.  call temp:= `getPeriodType`(v1) @signature `Lorg/joda/time/ReadablePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind interface;
  #L3acfae.  v0:= temp @kind object;
  #L3acfb0.  call temp:= `indexOf`(v0, v2) @signature `Lorg/joda/time/PeriodType;.indexOf:(Lorg/joda/time/DurationFieldType;)I` @kind virtual;
  #L3acfb6.  v2:= temp;
  #L3acfb8.  return v2;
}
procedure `boolean` `isSupported`(`org.joda.time.base.AbstractPeriod` v1 @kind this, `org.joda.time.DurationFieldType` v2 @kind object) @signature `Lorg/joda/time/base/AbstractPeriod;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3acf08.  call temp:= `getPeriodType`(v1) @signature `Lorg/joda/time/ReadablePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind interface;
  #L3acf0e.  v0:= temp @kind object;
  #L3acf10.  call temp:= `isSupported`(v0, v2) @signature `Lorg/joda/time/PeriodType;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @kind virtual;
  #L3acf16.  v2:= temp;
  #L3acf18.  return v2;
}
procedure `int` `size`(`org.joda.time.base.AbstractPeriod` v1 @kind this) @signature `Lorg/joda/time/base/AbstractPeriod;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3acfcc.  call temp:= `getPeriodType`(v1) @signature `Lorg/joda/time/ReadablePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind interface;
  #L3acfd2.  v0:= temp @kind object;
  #L3acfd4.  call temp:= `size`(v0) @signature `Lorg/joda/time/PeriodType;.size:()I` @kind virtual;
  #L3acfda.  v0:= temp;
  #L3acfdc.  return v0;
}
procedure `org.joda.time.MutablePeriod` `toMutablePeriod`(`org.joda.time.base.AbstractPeriod` v1 @kind this) @signature `Lorg/joda/time/base/AbstractPeriod;.toMutablePeriod:()Lorg/joda/time/MutablePeriod;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ad0d0.  v0:= new `org.joda.time.MutablePeriod`;
  #L3ad0d4.  call `<init>`(v0, v1) @signature `Lorg/joda/time/MutablePeriod;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3ad0da.  return v0 @kind object;
}
procedure `org.joda.time.Period` `toPeriod`(`org.joda.time.base.AbstractPeriod` v1 @kind this) @signature `Lorg/joda/time/base/AbstractPeriod;.toPeriod:()Lorg/joda/time/Period;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ad0ec.  v0:= new `org.joda.time.Period`;
  #L3ad0f0.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Period;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3ad0f6.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.base.AbstractPeriod` v1 @kind this) @signature `Lorg/joda/time/base/AbstractPeriod;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ad028.  call temp:= `standard`() @signature `Lorg/joda/time/format/ISOPeriodFormat;.standard:()Lorg/joda/time/format/PeriodFormatter;` @kind static;
  #L3ad02e.  v0:= temp @kind object;
  #L3ad030.  call temp:= `print`(v0, v1) @signature `Lorg/joda/time/format/PeriodFormatter;.print:(Lorg/joda/time/ReadablePeriod;)Ljava/lang/String;` @kind virtual;
  #L3ad036.  v0:= temp @kind object;
  #L3ad038.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.base.AbstractPeriod` v0 @kind this, `org.joda.time.format.PeriodFormatter` v1 @kind object) @signature `Lorg/joda/time/base/AbstractPeriod;.toString:(Lorg/joda/time/format/PeriodFormatter;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3ad04c.  if v1 != 0 then goto L3ad05a;
  #L3ad050.  call temp:= `toString`(v0) @signature `Lorg/joda/time/base/AbstractPeriod;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ad056.  v1:= temp @kind object;
  #L3ad058.  return v1 @kind object;
  #L3ad05a.  call temp:= `print`(v1, v0) @signature `Lorg/joda/time/format/PeriodFormatter;.print:(Lorg/joda/time/ReadablePeriod;)Ljava/lang/String;` @kind virtual;
  #L3ad060.  v1:= temp @kind object;
  #L3ad062.  return v1 @kind object;
}
