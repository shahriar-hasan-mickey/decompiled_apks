record `org.joda.time.convert.ReadableDurationConverter` @kind class @AccessFlag  extends `org.joda.time.convert.AbstractConverter` @kind class, `org.joda.time.convert.DurationConverter` @kind interface, `org.joda.time.convert.PeriodConverter` @kind interface {
}
global `org.joda.time.convert.ReadableDurationConverter` `@@org.joda.time.convert.ReadableDurationConverter.INSTANCE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/convert/ReadableDurationConverter;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3bac48.  v0:= new `org.joda.time.convert.ReadableDurationConverter`;
  #L3bac4c.  call `<init>`(v0) @signature `Lorg/joda/time/convert/ReadableDurationConverter;.<init>:()V` @kind direct;
  #L3bac52.  `@@org.joda.time.convert.ReadableDurationConverter.INSTANCE` @type ^`org.joda.time.convert.ReadableDurationConverter` := v0 @kind object;
  #L3bac56.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.convert.ReadableDurationConverter` v0 @kind this) @signature `Lorg/joda/time/convert/ReadableDurationConverter;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3bac68.  call `<init>`(v0) @signature `Lorg/joda/time/convert/AbstractConverter;.<init>:()V` @kind direct;
  #L3bac6e.  return @kind void;
}
procedure `long` `getDurationMillis`(`org.joda.time.convert.ReadableDurationConverter` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/joda/time/convert/ReadableDurationConverter;.getDurationMillis:(Ljava/lang/Object;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bac28.  v3:= (`org.joda.time.ReadableDuration`) v3 @kind object;
  #L3bac2c.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableDuration;.getMillis:()J` @kind interface;
  #L3bac32.  v0:= temp @kind wide;
  #L3bac34.  return v0 @kind wide;
}
procedure `java.lang.Class` `getSupportedType`(`org.joda.time.convert.ReadableDurationConverter` v1 @kind this) @signature `Lorg/joda/time/convert/ReadableDurationConverter;.getSupportedType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bac10.  v0:= constclass @type ^`org.joda.time.ReadableDuration` @kind object;
  #L3bac14.  return v0 @kind object;
}
procedure `void` `setInto`(`org.joda.time.convert.ReadableDurationConverter` v2 @kind this, `org.joda.time.ReadWritablePeriod` v3 @kind object, `java.lang.Object` v4 @kind object, `org.joda.time.Chronology` v5 @kind object) @signature `Lorg/joda/time/convert/ReadableDurationConverter;.setInto:(Lorg/joda/time/ReadWritablePeriod;Ljava/lang/Object;Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bac80.  v4:= (`org.joda.time.ReadableDuration`) v4 @kind object;
  #L3bac84.  call temp:= `getChronology`(v5) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L3bac8a.  v5:= temp @kind object;
  #L3bac8c.  call temp:= `getMillis`(v4) @signature `Lorg/joda/time/ReadableDuration;.getMillis:()J` @kind interface;
  #L3bac92.  v0:= temp @kind wide;
  #L3bac94.  call temp:= `get`(v5, v3, v0) @signature `Lorg/joda/time/Chronology;.get:(Lorg/joda/time/ReadablePeriod;J)[I` @kind virtual;
  #L3bac9a.  v4:= temp @kind object;
  #L3bac9c.  v5:= 0I;
  #L3bac9e.  v0:= length @variable v4;
  #L3baca0.  if v5 >= v0 then goto L3bacb4;
  #L3baca4.  v0:= v4[v5];
  #L3baca8.  call `setValue`(v3, v5, v0) @signature `Lorg/joda/time/ReadWritablePeriod;.setValue:(II)V` @kind interface;
  #L3bacae.  v5:= v5 + 1;
  #L3bacb2.  goto L3bac9e;
  #L3bacb4.  return @kind void;
}
