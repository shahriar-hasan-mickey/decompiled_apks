record `org.joda.time.convert.AbstractConverter` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.joda.time.convert.Converter` @kind interface {
}
procedure `void` `<init>`(`org.joda.time.convert.AbstractConverter` v0 @kind this) @signature `Lorg/joda/time/convert/AbstractConverter;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3b9be4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b9bea.  return @kind void;
}
procedure `org.joda.time.Chronology` `getChronology`(`org.joda.time.convert.AbstractConverter` v0 @kind this, `java.lang.Object` v1 @kind object, `org.joda.time.Chronology` v2 @kind object) @signature `Lorg/joda/time/convert/AbstractConverter;.getChronology:(Ljava/lang/Object;Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @AccessFlag PUBLIC {
    temp;

  #L3b9b90.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L3b9b96.  v1:= temp @kind object;
  #L3b9b98.  return v1 @kind object;
}
procedure `org.joda.time.Chronology` `getChronology`(`org.joda.time.convert.AbstractConverter` v0 @kind this, `java.lang.Object` v1 @kind object, `org.joda.time.DateTimeZone` v2 @kind object) @signature `Lorg/joda/time/convert/AbstractConverter;.getChronology:(Ljava/lang/Object;Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @AccessFlag PUBLIC {
    temp;

  #L3b9bac.  call temp:= `getInstance`(v2) @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3b9bb2.  v1:= temp @kind object;
  #L3b9bb4.  return v1 @kind object;
}
procedure `long` `getInstantMillis`(`org.joda.time.convert.AbstractConverter` v0 @kind this, `java.lang.Object` v1 @kind object, `org.joda.time.Chronology` v2 @kind object) @signature `Lorg/joda/time/convert/AbstractConverter;.getInstantMillis:(Ljava/lang/Object;Lorg/joda/time/Chronology;)J` @AccessFlag PUBLIC {
    temp;

  #L3b9b74.  call temp:= `currentTimeMillis`() @signature `Lorg/joda/time/DateTimeUtils;.currentTimeMillis:()J` @kind static;
  #L3b9b7a.  v1:= temp @kind wide;
  #L3b9b7c.  return v1 @kind wide;
}
procedure `int`[] `getPartialValues`(`org.joda.time.convert.AbstractConverter` v2 @kind this, `org.joda.time.ReadablePartial` v3 @kind object, `java.lang.Object` v4 @kind object, `org.joda.time.Chronology` v5 @kind object) @signature `Lorg/joda/time/convert/AbstractConverter;.getPartialValues:(Lorg/joda/time/ReadablePartial;Ljava/lang/Object;Lorg/joda/time/Chronology;)[I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b9ad4.  call temp:= `getInstantMillis`(v2, v4, v5) @signature `Lorg/joda/time/convert/AbstractConverter;.getInstantMillis:(Ljava/lang/Object;Lorg/joda/time/Chronology;)J` @kind virtual;
  #L3b9ada.  v0:= temp @kind wide;
  #L3b9adc.  call temp:= `get`(v5, v3, v0) @signature `Lorg/joda/time/Chronology;.get:(Lorg/joda/time/ReadablePartial;J)[I` @kind virtual;
  #L3b9ae2.  v3:= temp @kind object;
  #L3b9ae4.  return v3 @kind object;
}
procedure `int`[] `getPartialValues`(`org.joda.time.convert.AbstractConverter` v0 @kind this, `org.joda.time.ReadablePartial` v1 @kind object, `java.lang.Object` v2 @kind object, `org.joda.time.Chronology` v3 @kind object, `org.joda.time.format.DateTimeFormatter` v4 @kind object) @signature `Lorg/joda/time/convert/AbstractConverter;.getPartialValues:(Lorg/joda/time/ReadablePartial;Ljava/lang/Object;Lorg/joda/time/Chronology;Lorg/joda/time/format/DateTimeFormatter;)[I` @AccessFlag PUBLIC {
    temp;

  #L3b9af8.  call temp:= `getPartialValues`(v0, v1, v2, v3) @signature `Lorg/joda/time/convert/AbstractConverter;.getPartialValues:(Lorg/joda/time/ReadablePartial;Ljava/lang/Object;Lorg/joda/time/Chronology;)[I` @kind virtual;
  #L3b9afe.  v1:= temp @kind object;
  #L3b9b00.  return v1 @kind object;
}
procedure `org.joda.time.PeriodType` `getPeriodType`(`org.joda.time.convert.AbstractConverter` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/joda/time/convert/AbstractConverter;.getPeriodType:(Ljava/lang/Object;)Lorg/joda/time/PeriodType;` @AccessFlag PUBLIC {
    temp;

  #L3b9bc8.  call temp:= `standard`() @signature `Lorg/joda/time/PeriodType;.standard:()Lorg/joda/time/PeriodType;` @kind static;
  #L3b9bce.  v1:= temp @kind object;
  #L3b9bd0.  return v1 @kind object;
}
procedure `boolean` `isReadableInterval`(`org.joda.time.convert.AbstractConverter` v0 @kind this, `java.lang.Object` v1 @kind object, `org.joda.time.Chronology` v2 @kind object) @signature `Lorg/joda/time/convert/AbstractConverter;.isReadableInterval:(Ljava/lang/Object;Lorg/joda/time/Chronology;)Z` @AccessFlag PUBLIC {
    temp;

  #L3b9ac0.  v1:= 0I;
  #L3b9ac2.  return v1;
}
procedure `java.lang.String` `toString`(`org.joda.time.convert.AbstractConverter` v2 @kind this) @signature `Lorg/joda/time/convert/AbstractConverter;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b9b14.  v0:= new `java.lang.StringBuilder`;
  #L3b9b18.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b9b1e.  v1:= "Converter[" @kind object;
  #L3b9b22.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b9b28.  call temp:= `getSupportedType`(v2) @signature `Lorg/joda/time/convert/Converter;.getSupportedType:()Ljava/lang/Class;` @kind interface;
  #L3b9b2e.  v1:= temp @kind object;
  #L3b9b30.  if v1 != 0 then goto L3b9b3a;
  #L3b9b34.  v1:= "null" @kind object;
  #L3b9b38.  goto L3b9b4a;
  #L3b9b3a.  call temp:= `getSupportedType`(v2) @signature `Lorg/joda/time/convert/Converter;.getSupportedType:()Ljava/lang/Class;` @kind interface;
  #L3b9b40.  v1:= temp @kind object;
  #L3b9b42.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3b9b48.  v1:= temp @kind object;
  #L3b9b4a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b9b50.  v1:= "]" @kind object;
  #L3b9b54.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b9b5a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b9b60.  v0:= temp @kind object;
  #L3b9b62.  return v0 @kind object;
}
