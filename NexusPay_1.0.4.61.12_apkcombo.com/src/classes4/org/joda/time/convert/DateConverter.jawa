record `org.joda.time.convert.DateConverter` @kind class @AccessFlag FINAL extends `org.joda.time.convert.AbstractConverter` @kind class, `org.joda.time.convert.InstantConverter` @kind interface, `org.joda.time.convert.PartialConverter` @kind interface {
}
global `org.joda.time.convert.DateConverter` `@@org.joda.time.convert.DateConverter.INSTANCE` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/convert/DateConverter;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3baaa0.  v0:= new `org.joda.time.convert.DateConverter`;
  #L3baaa4.  call `<init>`(v0) @signature `Lorg/joda/time/convert/DateConverter;.<init>:()V` @kind direct;
  #L3baaaa.  `@@org.joda.time.convert.DateConverter.INSTANCE` @type ^`org.joda.time.convert.DateConverter` := v0 @kind object;
  #L3baaae.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.convert.DateConverter` v0 @kind this) @signature `Lorg/joda/time/convert/DateConverter;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3baac0.  call `<init>`(v0) @signature `Lorg/joda/time/convert/AbstractConverter;.<init>:()V` @kind direct;
  #L3baac6.  return @kind void;
}
procedure `long` `getInstantMillis`(`org.joda.time.convert.DateConverter` v0 @kind this, `java.lang.Object` v1 @kind object, `org.joda.time.Chronology` v2 @kind object) @signature `Lorg/joda/time/convert/DateConverter;.getInstantMillis:(Ljava/lang/Object;Lorg/joda/time/Chronology;)J` @AccessFlag PUBLIC {
    temp;

  #L3baa80.  v1:= (`java.util.Date`) v1 @kind object;
  #L3baa84.  call temp:= `getTime`(v1) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3baa8a.  v1:= temp @kind wide;
  #L3baa8c.  return v1 @kind wide;
}
procedure `java.lang.Class` `getSupportedType`(`org.joda.time.convert.DateConverter` v1 @kind this) @signature `Lorg/joda/time/convert/DateConverter;.getSupportedType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3baa68.  v0:= constclass @type ^`java.util.Date` @kind object;
  #L3baa6c.  return v0 @kind object;
}
