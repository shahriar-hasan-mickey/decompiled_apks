record `org.joda.time.YearMonthDay` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.base.BasePartial` @kind class, `org.joda.time.ReadablePartial` @kind interface, `java.io.Serializable` @kind interface {
}
global `int` `@@org.joda.time.YearMonthDay.DAY_OF_MONTH` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.DateTimeFieldType`[] `@@org.joda.time.YearMonthDay.FIELD_TYPES` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.joda.time.YearMonthDay.MONTH_OF_YEAR` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.joda.time.YearMonthDay.YEAR` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@org.joda.time.YearMonthDay.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/YearMonthDay;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3aa7ac.  v0:= 3I;
  #L3aa7ae.  v0:= new `org.joda.time.DateTimeFieldType`[v0];
  #L3aa7b2.  call temp:= `year`() @signature `Lorg/joda/time/DateTimeFieldType;.year:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3aa7b8.  v1:= temp @kind object;
  #L3aa7ba.  v2:= 0I;
  #L3aa7bc.  v0[v2]:= v1 @kind object;
  #L3aa7c0.  call temp:= `monthOfYear`() @signature `Lorg/joda/time/DateTimeFieldType;.monthOfYear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3aa7c6.  v1:= temp @kind object;
  #L3aa7c8.  v2:= 1I;
  #L3aa7ca.  v0[v2]:= v1 @kind object;
  #L3aa7ce.  call temp:= `dayOfMonth`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfMonth:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3aa7d4.  v1:= temp @kind object;
  #L3aa7d6.  v2:= 2I;
  #L3aa7d8.  v0[v2]:= v1 @kind object;
  #L3aa7dc.  `@@org.joda.time.YearMonthDay.FIELD_TYPES` @type ^`org.joda.time.DateTimeFieldType`[] := v0 @kind object;
  #L3aa7e0.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.YearMonthDay` v0 @kind this) @signature `Lorg/joda/time/YearMonthDay;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3aa7f4.  call `<init>`(v0) @signature `Lorg/joda/time/base/BasePartial;.<init>:()V` @kind direct;
  #L3aa7fa.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.YearMonthDay` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lorg/joda/time/YearMonthDay;.<init>:(III)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3aa80c.  v0:= 0I;
  #L3aa80e.  call `<init>`(v1, v2, v3, v4, v0) @signature `Lorg/joda/time/YearMonthDay;.<init>:(IIILorg/joda/time/Chronology;)V` @kind direct;
  #L3aa814.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.YearMonthDay` v2 @kind this, `int` v3 , `int` v4 , `int` v5 , `org.joda.time.Chronology` v6 @kind object) @signature `Lorg/joda/time/YearMonthDay;.<init>:(IIILorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3aa828.  v0:= 3I;
  #L3aa82a.  v0:= new `int`[v0];
  #L3aa82e.  v1:= 0I;
  #L3aa830.  v0[v1]:= v3;
  #L3aa834.  v3:= 1I;
  #L3aa836.  v0[v3]:= v4;
  #L3aa83a.  v3:= 2I;
  #L3aa83c.  v0[v3]:= v5;
  #L3aa840.  call `<init>`(v2, v0, v6) @signature `Lorg/joda/time/base/BasePartial;.<init>:([ILorg/joda/time/Chronology;)V` @kind direct;
  #L3aa846.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.YearMonthDay` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/YearMonthDay;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3aa8a4.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BasePartial;.<init>:(J)V` @kind direct;
  #L3aa8aa.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.YearMonthDay` v0 @kind this, `long` v1 , `org.joda.time.Chronology` v3 @kind object) @signature `Lorg/joda/time/YearMonthDay;.<init>:(JLorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3aa8bc.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/base/BasePartial;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3aa8c2.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.YearMonthDay` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/joda/time/YearMonthDay;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3aa858.  call temp:= `dateOptionalTimeParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateOptionalTimeParser:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3aa85e.  v0:= temp @kind object;
  #L3aa860.  v1:= 0I;
  #L3aa862.  call `<init>`(v2, v3, v1, v0) @signature `Lorg/joda/time/base/BasePartial;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;Lorg/joda/time/format/DateTimeFormatter;)V` @kind direct;
  #L3aa868.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.YearMonthDay` v1 @kind this, `java.lang.Object` v2 @kind object, `org.joda.time.Chronology` v3 @kind object) @signature `Lorg/joda/time/YearMonthDay;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3aa87c.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L3aa882.  v3:= temp @kind object;
  #L3aa884.  call temp:= `dateOptionalTimeParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateOptionalTimeParser:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3aa88a.  v0:= temp @kind object;
  #L3aa88c.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/joda/time/base/BasePartial;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;Lorg/joda/time/format/DateTimeFormatter;)V` @kind direct;
  #L3aa892.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.YearMonthDay` v0 @kind this, `org.joda.time.Chronology` v1 @kind object) @signature `Lorg/joda/time/YearMonthDay;.<init>:(Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3aa8d4.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BasePartial;.<init>:(Lorg/joda/time/Chronology;)V` @kind direct;
  #L3aa8da.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.YearMonthDay` v0 @kind this, `org.joda.time.DateTimeZone` v1 @kind object) @signature `Lorg/joda/time/YearMonthDay;.<init>:(Lorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3aa8ec.  call temp:= `getInstance`(v1) @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3aa8f2.  v1:= temp @kind object;
  #L3aa8f4.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BasePartial;.<init>:(Lorg/joda/time/Chronology;)V` @kind direct;
  #L3aa8fa.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.YearMonthDay` v0 @kind this, `org.joda.time.YearMonthDay` v1 @kind object, `org.joda.time.Chronology` v2 @kind object) @signature `Lorg/joda/time/YearMonthDay;.<init>:(Lorg/joda/time/YearMonthDay;Lorg/joda/time/Chronology;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3aa924.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/base/BasePartial;.<init>:(Lorg/joda/time/base/BasePartial;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3aa92a.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.YearMonthDay` v0 @kind this, `org.joda.time.YearMonthDay` v1 @kind object, `int`[] v2 @kind object) @signature `Lorg/joda/time/YearMonthDay;.<init>:(Lorg/joda/time/YearMonthDay;[I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3aa90c.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/base/BasePartial;.<init>:(Lorg/joda/time/base/BasePartial;[I)V` @kind direct;
  #L3aa912.  return @kind void;
}
procedure `org.joda.time.YearMonthDay` `fromCalendarFields`(`java.util.Calendar` v4 @kind object) @signature `Lorg/joda/time/YearMonthDay;.fromCalendarFields:(Ljava/util/Calendar;)Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3aa350.  if v4 == 0 then goto L3aa380;
  #L3aa354.  v0:= new `org.joda.time.YearMonthDay`;
  #L3aa358.  v1:= 1I;
  #L3aa35a.  call temp:= `get`(v4, v1) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L3aa360.  v2:= temp;
  #L3aa362.  v3:= 2I;
  #L3aa364.  call temp:= `get`(v4, v3) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L3aa36a.  v3:= temp;
  #L3aa36c.  v3:= v3 + v1 @kind int;
  #L3aa36e.  v1:= 5I;
  #L3aa370.  call temp:= `get`(v4, v1) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L3aa376.  v4:= temp;
  #L3aa378.  call `<init>`(v0, v2, v3, v4) @signature `Lorg/joda/time/YearMonthDay;.<init>:(III)V` @kind direct;
  #L3aa37e.  return v0 @kind object;
  #L3aa380.  v4:= new `java.lang.IllegalArgumentException`;
  #L3aa384.  v0:= "The calendar must not be null" @kind object;
  #L3aa388.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aa38e.  throw v4;
}
procedure `org.joda.time.YearMonthDay` `fromDateFields`(`java.util.Date` v3 @kind object) @signature `Lorg/joda/time/YearMonthDay;.fromDateFields:(Ljava/util/Date;)Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3aa3a0.  if v3 == 0 then goto L3aa3d0;
  #L3aa3a4.  v0:= new `org.joda.time.YearMonthDay`;
  #L3aa3a8.  call temp:= `getYear`(v3) @signature `Ljava/util/Date;.getYear:()I` @kind virtual;
  #L3aa3ae.  v1:= temp;
  #L3aa3b0.  v1:= v1 + 1900;
  #L3aa3b4.  call temp:= `getMonth`(v3) @signature `Ljava/util/Date;.getMonth:()I` @kind virtual;
  #L3aa3ba.  v2:= temp;
  #L3aa3bc.  v2:= v2 + 1;
  #L3aa3c0.  call temp:= `getDate`(v3) @signature `Ljava/util/Date;.getDate:()I` @kind virtual;
  #L3aa3c6.  v3:= temp;
  #L3aa3c8.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/joda/time/YearMonthDay;.<init>:(III)V` @kind direct;
  #L3aa3ce.  return v0 @kind object;
  #L3aa3d0.  v3:= new `java.lang.IllegalArgumentException`;
  #L3aa3d4.  v0:= "The date must not be null" @kind object;
  #L3aa3d8.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aa3de.  throw v3;
}
procedure `org.joda.time.YearMonthDay$Property` `dayOfMonth`(`org.joda.time.YearMonthDay` v2 @kind this) @signature `Lorg/joda/time/YearMonthDay;.dayOfMonth:()Lorg/joda/time/YearMonthDay$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aa728.  v0:= new `org.joda.time.YearMonthDay$Property`;
  #L3aa72c.  v1:= 2I;
  #L3aa72e.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/YearMonthDay$Property;.<init>:(Lorg/joda/time/YearMonthDay;I)V` @kind direct;
  #L3aa734.  return v0 @kind object;
}
procedure `int` `getDayOfMonth`(`org.joda.time.YearMonthDay` v1 @kind this) @signature `Lorg/joda/time/YearMonthDay;.getDayOfMonth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa00c.  v0:= 2I;
  #L3aa00e.  call temp:= `getValue`(v1, v0) @signature `Lorg/joda/time/base/BasePartial;.getValue:(I)I` @kind virtual;
  #L3aa014.  v0:= temp;
  #L3aa016.  return v0;
}
procedure `org.joda.time.DateTimeField` `getField`(`org.joda.time.YearMonthDay` v2 @kind this, `int` v3 , `org.joda.time.Chronology` v4 @kind object) @signature `Lorg/joda/time/YearMonthDay;.getField:(ILorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3aa220.  if v3 == 0 then goto L3aa272;
  #L3aa224.  v0:= 1I;
  #L3aa226.  if v3 == v0 then goto L3aa268;
  #L3aa22a.  v0:= 2I;
  #L3aa22c.  if v3 != v0 then goto L3aa23a;
  #L3aa230.  call temp:= `dayOfMonth`(v4) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3aa236.  v3:= temp @kind object;
  #L3aa238.  return v3 @kind object;
  #L3aa23a.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L3aa23e.  v0:= new `java.lang.StringBuilder`;
  #L3aa242.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3aa248.  v1:= "Invalid index: " @kind object;
  #L3aa24c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa252.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3aa258.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3aa25e.  v3:= temp @kind object;
  #L3aa260.  call `<init>`(v4, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3aa266.  throw v4;
  #L3aa268.  call temp:= `monthOfYear`(v4) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3aa26e.  v3:= temp @kind object;
  #L3aa270.  return v3 @kind object;
  #L3aa272.  call temp:= `year`(v4) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3aa278.  v3:= temp @kind object;
  #L3aa27a.  return v3 @kind object;
}
procedure `org.joda.time.DateTimeFieldType` `getFieldType`(`org.joda.time.YearMonthDay` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/YearMonthDay;.getFieldType:(I)Lorg/joda/time/DateTimeFieldType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa28c.  v0:= `@@org.joda.time.YearMonthDay.FIELD_TYPES` @type ^`org.joda.time.DateTimeFieldType`[] @kind object;
  #L3aa290.  v2:= v0[v2] @kind object;
  #L3aa294.  return v2 @kind object;
}
procedure `org.joda.time.DateTimeFieldType`[] `getFieldTypes`(`org.joda.time.YearMonthDay` v1 @kind this) @signature `Lorg/joda/time/YearMonthDay;.getFieldTypes:()[Lorg/joda/time/DateTimeFieldType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa2a8.  v0:= `@@org.joda.time.YearMonthDay.FIELD_TYPES` @type ^`org.joda.time.DateTimeFieldType`[] @kind object;
  #L3aa2ac.  call temp:= `clone`(v0) @signature `[Lorg/joda/time/DateTimeFieldType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3aa2b2.  v0:= temp @kind object;
  #L3aa2b4.  v0:= (`org.joda.time.DateTimeFieldType`[]) v0 @kind object;
  #L3aa2b8.  return v0 @kind object;
}
procedure `int` `getMonthOfYear`(`org.joda.time.YearMonthDay` v1 @kind this) @signature `Lorg/joda/time/YearMonthDay;.getMonthOfYear:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa028.  v0:= 1I;
  #L3aa02a.  call temp:= `getValue`(v1, v0) @signature `Lorg/joda/time/base/BasePartial;.getValue:(I)I` @kind virtual;
  #L3aa030.  v0:= temp;
  #L3aa032.  return v0;
}
procedure `int` `getYear`(`org.joda.time.YearMonthDay` v1 @kind this) @signature `Lorg/joda/time/YearMonthDay;.getYear:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa044.  v0:= 0I;
  #L3aa046.  call temp:= `getValue`(v1, v0) @signature `Lorg/joda/time/base/BasePartial;.getValue:(I)I` @kind virtual;
  #L3aa04c.  v0:= temp;
  #L3aa04e.  return v0;
}
procedure `org.joda.time.YearMonthDay` `minus`(`org.joda.time.YearMonthDay` v1 @kind this, `org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/YearMonthDay;.minus:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa3f0.  v0:= -1I;
  #L3aa3f2.  call temp:= `withPeriodAdded`(v1, v2, v0) @signature `Lorg/joda/time/YearMonthDay;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/YearMonthDay;` @kind virtual;
  #L3aa3f8.  v2:= temp @kind object;
  #L3aa3fa.  return v2 @kind object;
}
procedure `org.joda.time.YearMonthDay` `minusDays`(`org.joda.time.YearMonthDay` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/YearMonthDay;.minusDays:(I)Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa40c.  call temp:= `days`() @signature `Lorg/joda/time/DurationFieldType;.days:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3aa412.  v0:= temp @kind object;
  #L3aa414.  call temp:= `safeNegate`(v2) @signature `Lorg/joda/time/field/FieldUtils;.safeNegate:(I)I` @kind static;
  #L3aa41a.  v2:= temp;
  #L3aa41c.  call temp:= `withFieldAdded`(v1, v0, v2) @signature `Lorg/joda/time/YearMonthDay;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/YearMonthDay;` @kind virtual;
  #L3aa422.  v2:= temp @kind object;
  #L3aa424.  return v2 @kind object;
}
procedure `org.joda.time.YearMonthDay` `minusMonths`(`org.joda.time.YearMonthDay` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/YearMonthDay;.minusMonths:(I)Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa438.  call temp:= `months`() @signature `Lorg/joda/time/DurationFieldType;.months:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3aa43e.  v0:= temp @kind object;
  #L3aa440.  call temp:= `safeNegate`(v2) @signature `Lorg/joda/time/field/FieldUtils;.safeNegate:(I)I` @kind static;
  #L3aa446.  v2:= temp;
  #L3aa448.  call temp:= `withFieldAdded`(v1, v0, v2) @signature `Lorg/joda/time/YearMonthDay;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/YearMonthDay;` @kind virtual;
  #L3aa44e.  v2:= temp @kind object;
  #L3aa450.  return v2 @kind object;
}
procedure `org.joda.time.YearMonthDay` `minusYears`(`org.joda.time.YearMonthDay` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/YearMonthDay;.minusYears:(I)Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa464.  call temp:= `years`() @signature `Lorg/joda/time/DurationFieldType;.years:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3aa46a.  v0:= temp @kind object;
  #L3aa46c.  call temp:= `safeNegate`(v2) @signature `Lorg/joda/time/field/FieldUtils;.safeNegate:(I)I` @kind static;
  #L3aa472.  v2:= temp;
  #L3aa474.  call temp:= `withFieldAdded`(v1, v0, v2) @signature `Lorg/joda/time/YearMonthDay;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/YearMonthDay;` @kind virtual;
  #L3aa47a.  v2:= temp @kind object;
  #L3aa47c.  return v2 @kind object;
}
procedure `org.joda.time.YearMonthDay$Property` `monthOfYear`(`org.joda.time.YearMonthDay` v2 @kind this) @signature `Lorg/joda/time/YearMonthDay;.monthOfYear:()Lorg/joda/time/YearMonthDay$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aa748.  v0:= new `org.joda.time.YearMonthDay$Property`;
  #L3aa74c.  v1:= 1I;
  #L3aa74e.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/YearMonthDay$Property;.<init>:(Lorg/joda/time/YearMonthDay;I)V` @kind direct;
  #L3aa754.  return v0 @kind object;
}
procedure `org.joda.time.YearMonthDay` `plus`(`org.joda.time.YearMonthDay` v1 @kind this, `org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/YearMonthDay;.plus:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa490.  v0:= 1I;
  #L3aa492.  call temp:= `withPeriodAdded`(v1, v2, v0) @signature `Lorg/joda/time/YearMonthDay;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/YearMonthDay;` @kind virtual;
  #L3aa498.  v2:= temp @kind object;
  #L3aa49a.  return v2 @kind object;
}
procedure `org.joda.time.YearMonthDay` `plusDays`(`org.joda.time.YearMonthDay` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/YearMonthDay;.plusDays:(I)Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa4ac.  call temp:= `days`() @signature `Lorg/joda/time/DurationFieldType;.days:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3aa4b2.  v0:= temp @kind object;
  #L3aa4b4.  call temp:= `withFieldAdded`(v1, v0, v2) @signature `Lorg/joda/time/YearMonthDay;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/YearMonthDay;` @kind virtual;
  #L3aa4ba.  v2:= temp @kind object;
  #L3aa4bc.  return v2 @kind object;
}
procedure `org.joda.time.YearMonthDay` `plusMonths`(`org.joda.time.YearMonthDay` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/YearMonthDay;.plusMonths:(I)Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa4d0.  call temp:= `months`() @signature `Lorg/joda/time/DurationFieldType;.months:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3aa4d6.  v0:= temp @kind object;
  #L3aa4d8.  call temp:= `withFieldAdded`(v1, v0, v2) @signature `Lorg/joda/time/YearMonthDay;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/YearMonthDay;` @kind virtual;
  #L3aa4de.  v2:= temp @kind object;
  #L3aa4e0.  return v2 @kind object;
}
procedure `org.joda.time.YearMonthDay` `plusYears`(`org.joda.time.YearMonthDay` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/YearMonthDay;.plusYears:(I)Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa4f4.  call temp:= `years`() @signature `Lorg/joda/time/DurationFieldType;.years:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3aa4fa.  v0:= temp @kind object;
  #L3aa4fc.  call temp:= `withFieldAdded`(v1, v0, v2) @signature `Lorg/joda/time/YearMonthDay;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/YearMonthDay;` @kind virtual;
  #L3aa502.  v2:= temp @kind object;
  #L3aa504.  return v2 @kind object;
}
procedure `org.joda.time.YearMonthDay$Property` `property`(`org.joda.time.YearMonthDay` v1 @kind this, `org.joda.time.DateTimeFieldType` v2 @kind object) @signature `Lorg/joda/time/YearMonthDay;.property:(Lorg/joda/time/DateTimeFieldType;)Lorg/joda/time/YearMonthDay$Property;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa768.  v0:= new `org.joda.time.YearMonthDay$Property`;
  #L3aa76c.  call temp:= `indexOfSupported`(v1, v2) @signature `Lorg/joda/time/base/AbstractPartial;.indexOfSupported:(Lorg/joda/time/DateTimeFieldType;)I` @kind virtual;
  #L3aa772.  v2:= temp;
  #L3aa774.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/YearMonthDay$Property;.<init>:(Lorg/joda/time/YearMonthDay;I)V` @kind direct;
  #L3aa77a.  return v0 @kind object;
}
procedure `int` `size`(`org.joda.time.YearMonthDay` v1 @kind this) @signature `Lorg/joda/time/YearMonthDay;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa060.  v0:= 3I;
  #L3aa062.  return v0;
}
procedure `org.joda.time.DateMidnight` `toDateMidnight`(`org.joda.time.YearMonthDay` v1 @kind this) @signature `Lorg/joda/time/YearMonthDay;.toDateMidnight:()Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa098.  v0:= 0I;
  #L3aa09a.  call temp:= `toDateMidnight`(v1, v0) @signature `Lorg/joda/time/YearMonthDay;.toDateMidnight:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L3aa0a0.  v0:= temp @kind object;
  #L3aa0a2.  return v0 @kind object;
}
procedure `org.joda.time.DateMidnight` `toDateMidnight`(`org.joda.time.YearMonthDay` v4 @kind this, `org.joda.time.DateTimeZone` v5 @kind object) @signature `Lorg/joda/time/YearMonthDay;.toDateMidnight:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3aa0b4.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/base/BasePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3aa0ba.  v0:= temp @kind object;
  #L3aa0bc.  call temp:= `withZone`(v0, v5) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3aa0c2.  v5:= temp @kind object;
  #L3aa0c4.  v0:= new `org.joda.time.DateMidnight`;
  #L3aa0c8.  call temp:= `getYear`(v4) @signature `Lorg/joda/time/YearMonthDay;.getYear:()I` @kind virtual;
  #L3aa0ce.  v1:= temp;
  #L3aa0d0.  call temp:= `getMonthOfYear`(v4) @signature `Lorg/joda/time/YearMonthDay;.getMonthOfYear:()I` @kind virtual;
  #L3aa0d6.  v2:= temp;
  #L3aa0d8.  call temp:= `getDayOfMonth`(v4) @signature `Lorg/joda/time/YearMonthDay;.getDayOfMonth:()I` @kind virtual;
  #L3aa0de.  v3:= temp;
  #L3aa0e0.  call `<init>`(v0, v1, v2, v3, v5) @signature `Lorg/joda/time/DateMidnight;.<init>:(IIILorg/joda/time/Chronology;)V` @kind direct;
  #L3aa0e6.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTime`(`org.joda.time.YearMonthDay` v1 @kind this, `org.joda.time.TimeOfDay` v2 @kind object) @signature `Lorg/joda/time/YearMonthDay;.toDateTime:(Lorg/joda/time/TimeOfDay;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa0f8.  v0:= 0I;
  #L3aa0fa.  call temp:= `toDateTime`(v1, v2, v0) @signature `Lorg/joda/time/YearMonthDay;.toDateTime:(Lorg/joda/time/TimeOfDay;Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @kind virtual;
  #L3aa100.  v2:= temp @kind object;
  #L3aa102.  return v2 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTime`(`org.joda.time.YearMonthDay` v2 @kind this, `org.joda.time.TimeOfDay` v3 @kind object, `org.joda.time.DateTimeZone` v4 @kind object) @signature `Lorg/joda/time/YearMonthDay;.toDateTime:(Lorg/joda/time/TimeOfDay;Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aa114.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BasePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3aa11a.  v0:= temp @kind object;
  #L3aa11c.  call temp:= `withZone`(v0, v4) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3aa122.  v4:= temp @kind object;
  #L3aa124.  call temp:= `currentTimeMillis`() @signature `Lorg/joda/time/DateTimeUtils;.currentTimeMillis:()J` @kind static;
  #L3aa12a.  v0:= temp @kind wide;
  #L3aa12c.  call temp:= `set`(v4, v2, v0) @signature `Lorg/joda/time/Chronology;.set:(Lorg/joda/time/ReadablePartial;J)J` @kind virtual;
  #L3aa132.  v0:= temp @kind wide;
  #L3aa134.  if v3 == 0 then goto L3aa140;
  #L3aa138.  call temp:= `set`(v4, v3, v0) @signature `Lorg/joda/time/Chronology;.set:(Lorg/joda/time/ReadablePartial;J)J` @kind virtual;
  #L3aa13e.  v0:= temp @kind wide;
  #L3aa140.  v3:= new `org.joda.time.DateTime`;
  #L3aa144.  call `<init>`(v3, v0, v4) @signature `Lorg/joda/time/DateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3aa14a.  return v3 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTimeAtCurrentTime`(`org.joda.time.YearMonthDay` v1 @kind this) @signature `Lorg/joda/time/YearMonthDay;.toDateTimeAtCurrentTime:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa15c.  v0:= 0I;
  #L3aa15e.  call temp:= `toDateTimeAtCurrentTime`(v1, v0) @signature `Lorg/joda/time/YearMonthDay;.toDateTimeAtCurrentTime:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @kind virtual;
  #L3aa164.  v0:= temp @kind object;
  #L3aa166.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTimeAtCurrentTime`(`org.joda.time.YearMonthDay` v3 @kind this, `org.joda.time.DateTimeZone` v4 @kind object) @signature `Lorg/joda/time/YearMonthDay;.toDateTimeAtCurrentTime:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3aa178.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BasePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3aa17e.  v0:= temp @kind object;
  #L3aa180.  call temp:= `withZone`(v0, v4) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3aa186.  v4:= temp @kind object;
  #L3aa188.  call temp:= `currentTimeMillis`() @signature `Lorg/joda/time/DateTimeUtils;.currentTimeMillis:()J` @kind static;
  #L3aa18e.  v0:= temp @kind wide;
  #L3aa190.  call temp:= `set`(v4, v3, v0) @signature `Lorg/joda/time/Chronology;.set:(Lorg/joda/time/ReadablePartial;J)J` @kind virtual;
  #L3aa196.  v0:= temp @kind wide;
  #L3aa198.  v2:= new `org.joda.time.DateTime`;
  #L3aa19c.  call `<init>`(v2, v0, v4) @signature `Lorg/joda/time/DateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3aa1a2.  return v2 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTimeAtMidnight`(`org.joda.time.YearMonthDay` v1 @kind this) @signature `Lorg/joda/time/YearMonthDay;.toDateTimeAtMidnight:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa1b4.  v0:= 0I;
  #L3aa1b6.  call temp:= `toDateTimeAtMidnight`(v1, v0) @signature `Lorg/joda/time/YearMonthDay;.toDateTimeAtMidnight:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @kind virtual;
  #L3aa1bc.  v0:= temp @kind object;
  #L3aa1be.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTimeAtMidnight`(`org.joda.time.YearMonthDay` v10 @kind this, `org.joda.time.DateTimeZone` v11 @kind object) @signature `Lorg/joda/time/YearMonthDay;.toDateTimeAtMidnight:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3aa1d0.  call temp:= `getChronology`(v10) @signature `Lorg/joda/time/base/BasePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3aa1d6.  v0:= temp @kind object;
  #L3aa1d8.  call temp:= `withZone`(v0, v11) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3aa1de.  v9:= temp @kind object;
  #L3aa1e0.  v11:= new `org.joda.time.DateTime`;
  #L3aa1e4.  call temp:= `getYear`(v10) @signature `Lorg/joda/time/YearMonthDay;.getYear:()I` @kind virtual;
  #L3aa1ea.  v2:= temp;
  #L3aa1ec.  call temp:= `getMonthOfYear`(v10) @signature `Lorg/joda/time/YearMonthDay;.getMonthOfYear:()I` @kind virtual;
  #L3aa1f2.  v3:= temp;
  #L3aa1f4.  call temp:= `getDayOfMonth`(v10) @signature `Lorg/joda/time/YearMonthDay;.getDayOfMonth:()I` @kind virtual;
  #L3aa1fa.  v4:= temp;
  #L3aa1fc.  v5:= 0I;
  #L3aa1fe.  v6:= 0I;
  #L3aa200.  v7:= 0I;
  #L3aa202.  v8:= 0I;
  #L3aa204.  v1:= v11 @kind object;
  #L3aa206.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lorg/joda/time/DateTime;.<init>:(IIIIIIILorg/joda/time/Chronology;)V` @kind direct;
  #L3aa20c.  return v11 @kind object;
}
procedure `org.joda.time.Interval` `toInterval`(`org.joda.time.YearMonthDay` v1 @kind this) @signature `Lorg/joda/time/YearMonthDay;.toInterval:()Lorg/joda/time/Interval;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa2cc.  v0:= 0I;
  #L3aa2ce.  call temp:= `toInterval`(v1, v0) @signature `Lorg/joda/time/YearMonthDay;.toInterval:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Interval;` @kind virtual;
  #L3aa2d4.  v0:= temp @kind object;
  #L3aa2d6.  return v0 @kind object;
}
procedure `org.joda.time.Interval` `toInterval`(`org.joda.time.YearMonthDay` v0 @kind this, `org.joda.time.DateTimeZone` v1 @kind object) @signature `Lorg/joda/time/YearMonthDay;.toInterval:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Interval;` @AccessFlag PUBLIC {
    temp;

  #L3aa2e8.  call temp:= `getZone`(v1) @signature `Lorg/joda/time/DateTimeUtils;.getZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTimeZone;` @kind static;
  #L3aa2ee.  v1:= temp @kind object;
  #L3aa2f0.  call temp:= `toDateMidnight`(v0, v1) @signature `Lorg/joda/time/YearMonthDay;.toDateMidnight:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L3aa2f6.  v1:= temp @kind object;
  #L3aa2f8.  call temp:= `toInterval`(v1) @signature `Lorg/joda/time/DateMidnight;.toInterval:()Lorg/joda/time/Interval;` @kind virtual;
  #L3aa2fe.  v1:= temp @kind object;
  #L3aa300.  return v1 @kind object;
}
procedure `org.joda.time.LocalDate` `toLocalDate`(`org.joda.time.YearMonthDay` v5 @kind this) @signature `Lorg/joda/time/YearMonthDay;.toLocalDate:()Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3aa314.  v0:= new `org.joda.time.LocalDate`;
  #L3aa318.  call temp:= `getYear`(v5) @signature `Lorg/joda/time/YearMonthDay;.getYear:()I` @kind virtual;
  #L3aa31e.  v1:= temp;
  #L3aa320.  call temp:= `getMonthOfYear`(v5) @signature `Lorg/joda/time/YearMonthDay;.getMonthOfYear:()I` @kind virtual;
  #L3aa326.  v2:= temp;
  #L3aa328.  call temp:= `getDayOfMonth`(v5) @signature `Lorg/joda/time/YearMonthDay;.getDayOfMonth:()I` @kind virtual;
  #L3aa32e.  v3:= temp;
  #L3aa330.  call temp:= `getChronology`(v5) @signature `Lorg/joda/time/base/BasePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3aa336.  v4:= temp @kind object;
  #L3aa338.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/joda/time/LocalDate;.<init>:(IIILorg/joda/time/Chronology;)V` @kind direct;
  #L3aa33e.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.YearMonthDay` v1 @kind this) @signature `Lorg/joda/time/YearMonthDay;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aa074.  call temp:= `yearMonthDay`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.yearMonthDay:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3aa07a.  v0:= temp @kind object;
  #L3aa07c.  call temp:= `print`(v0, v1) @signature `Lorg/joda/time/format/DateTimeFormatter;.print:(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;` @kind virtual;
  #L3aa082.  v0:= temp @kind object;
  #L3aa084.  return v0 @kind object;
}
procedure `org.joda.time.YearMonthDay` `withChronologyRetainFields`(`org.joda.time.YearMonthDay` v2 @kind this, `org.joda.time.Chronology` v3 @kind object) @signature `Lorg/joda/time/YearMonthDay;.withChronologyRetainFields:(Lorg/joda/time/Chronology;)Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aa518.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L3aa51e.  v3:= temp @kind object;
  #L3aa520.  call temp:= `withUTC`(v3) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3aa526.  v3:= temp @kind object;
  #L3aa528.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BasePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3aa52e.  v0:= temp @kind object;
  #L3aa530.  if v3 != v0 then goto L3aa536;
  #L3aa534.  return v2 @kind object;
  #L3aa536.  v0:= new `org.joda.time.YearMonthDay`;
  #L3aa53a.  call `<init>`(v0, v2, v3) @signature `Lorg/joda/time/YearMonthDay;.<init>:(Lorg/joda/time/YearMonthDay;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3aa540.  call temp:= `getValues`(v2) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3aa546.  v1:= temp @kind object;
  #L3aa548.  call `validate`(v3, v0, v1) @signature `Lorg/joda/time/Chronology;.validate:(Lorg/joda/time/ReadablePartial;[I)V` @kind virtual;
  #L3aa54e.  return v0 @kind object;
}
procedure `org.joda.time.YearMonthDay` `withDayOfMonth`(`org.joda.time.YearMonthDay` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/YearMonthDay;.withDayOfMonth:(I)Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3aa560.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3aa566.  v0:= temp @kind object;
  #L3aa568.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BasePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3aa56e.  v1:= temp @kind object;
  #L3aa570.  call temp:= `dayOfMonth`(v1) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3aa576.  v1:= temp @kind object;
  #L3aa578.  v2:= 2I;
  #L3aa57a.  call temp:= `set`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/DateTimeField;.set:(Lorg/joda/time/ReadablePartial;I[II)[I` @kind virtual;
  #L3aa580.  v4:= temp @kind object;
  #L3aa582.  v0:= new `org.joda.time.YearMonthDay`;
  #L3aa586.  call `<init>`(v0, v3, v4) @signature `Lorg/joda/time/YearMonthDay;.<init>:(Lorg/joda/time/YearMonthDay;[I)V` @kind direct;
  #L3aa58c.  return v0 @kind object;
}
procedure `org.joda.time.YearMonthDay` `withField`(`org.joda.time.YearMonthDay` v2 @kind this, `org.joda.time.DateTimeFieldType` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/YearMonthDay;.withField:(Lorg/joda/time/DateTimeFieldType;I)Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aa5a0.  call temp:= `indexOfSupported`(v2, v3) @signature `Lorg/joda/time/base/AbstractPartial;.indexOfSupported:(Lorg/joda/time/DateTimeFieldType;)I` @kind virtual;
  #L3aa5a6.  v3:= temp;
  #L3aa5a8.  call temp:= `getValue`(v2, v3) @signature `Lorg/joda/time/base/BasePartial;.getValue:(I)I` @kind virtual;
  #L3aa5ae.  v0:= temp;
  #L3aa5b0.  if v4 != v0 then goto L3aa5b6;
  #L3aa5b4.  return v2 @kind object;
  #L3aa5b6.  call temp:= `getValues`(v2) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3aa5bc.  v0:= temp @kind object;
  #L3aa5be.  call temp:= `getField`(v2, v3) @signature `Lorg/joda/time/base/AbstractPartial;.getField:(I)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3aa5c4.  v1:= temp @kind object;
  #L3aa5c6.  call temp:= `set`(v1, v2, v3, v0, v4) @signature `Lorg/joda/time/DateTimeField;.set:(Lorg/joda/time/ReadablePartial;I[II)[I` @kind virtual;
  #L3aa5cc.  v3:= temp @kind object;
  #L3aa5ce.  v4:= new `org.joda.time.YearMonthDay`;
  #L3aa5d2.  call `<init>`(v4, v2, v3) @signature `Lorg/joda/time/YearMonthDay;.<init>:(Lorg/joda/time/YearMonthDay;[I)V` @kind direct;
  #L3aa5d8.  return v4 @kind object;
}
procedure `org.joda.time.YearMonthDay` `withFieldAdded`(`org.joda.time.YearMonthDay` v2 @kind this, `org.joda.time.DurationFieldType` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/YearMonthDay;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aa5ec.  call temp:= `indexOfSupported`(v2, v3) @signature `Lorg/joda/time/base/AbstractPartial;.indexOfSupported:(Lorg/joda/time/DurationFieldType;)I` @kind virtual;
  #L3aa5f2.  v3:= temp;
  #L3aa5f4.  if v4 != 0 then goto L3aa5fa;
  #L3aa5f8.  return v2 @kind object;
  #L3aa5fa.  call temp:= `getValues`(v2) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3aa600.  v0:= temp @kind object;
  #L3aa602.  call temp:= `getField`(v2, v3) @signature `Lorg/joda/time/base/AbstractPartial;.getField:(I)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3aa608.  v1:= temp @kind object;
  #L3aa60a.  call temp:= `add`(v1, v2, v3, v0, v4) @signature `Lorg/joda/time/DateTimeField;.add:(Lorg/joda/time/ReadablePartial;I[II)[I` @kind virtual;
  #L3aa610.  v3:= temp @kind object;
  #L3aa612.  v4:= new `org.joda.time.YearMonthDay`;
  #L3aa616.  call `<init>`(v4, v2, v3) @signature `Lorg/joda/time/YearMonthDay;.<init>:(Lorg/joda/time/YearMonthDay;[I)V` @kind direct;
  #L3aa61c.  return v4 @kind object;
}
procedure `org.joda.time.YearMonthDay` `withMonthOfYear`(`org.joda.time.YearMonthDay` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/YearMonthDay;.withMonthOfYear:(I)Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3aa630.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3aa636.  v0:= temp @kind object;
  #L3aa638.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BasePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3aa63e.  v1:= temp @kind object;
  #L3aa640.  call temp:= `monthOfYear`(v1) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3aa646.  v1:= temp @kind object;
  #L3aa648.  v2:= 1I;
  #L3aa64a.  call temp:= `set`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/DateTimeField;.set:(Lorg/joda/time/ReadablePartial;I[II)[I` @kind virtual;
  #L3aa650.  v4:= temp @kind object;
  #L3aa652.  v0:= new `org.joda.time.YearMonthDay`;
  #L3aa656.  call `<init>`(v0, v3, v4) @signature `Lorg/joda/time/YearMonthDay;.<init>:(Lorg/joda/time/YearMonthDay;[I)V` @kind direct;
  #L3aa65c.  return v0 @kind object;
}
procedure `org.joda.time.YearMonthDay` `withPeriodAdded`(`org.joda.time.YearMonthDay` v5 @kind this, `org.joda.time.ReadablePeriod` v6 @kind object, `int` v7 ) @signature `Lorg/joda/time/YearMonthDay;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3aa670.  if v6 == 0 then goto L3aa6d6;
  #L3aa674.  if v7 != 0 then goto L3aa67a;
  #L3aa678.  goto L3aa6d6;
  #L3aa67a.  call temp:= `getValues`(v5) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3aa680.  v0:= temp @kind object;
  #L3aa682.  v1:= 0I;
  #L3aa684.  call temp:= `size`(v6) @signature `Lorg/joda/time/ReadablePeriod;.size:()I` @kind interface;
  #L3aa68a.  v2:= temp;
  #L3aa68c.  if v1 >= v2 then goto L3aa6ca;
  #L3aa690.  call temp:= `getFieldType`(v6, v1) @signature `Lorg/joda/time/ReadablePeriod;.getFieldType:(I)Lorg/joda/time/DurationFieldType;` @kind interface;
  #L3aa696.  v2:= temp @kind object;
  #L3aa698.  call temp:= `indexOf`(v5, v2) @signature `Lorg/joda/time/base/AbstractPartial;.indexOf:(Lorg/joda/time/DurationFieldType;)I` @kind virtual;
  #L3aa69e.  v2:= temp;
  #L3aa6a0.  if v2 < 0 then goto L3aa6c4;
  #L3aa6a4.  call temp:= `getField`(v5, v2) @signature `Lorg/joda/time/base/AbstractPartial;.getField:(I)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3aa6aa.  v3:= temp @kind object;
  #L3aa6ac.  call temp:= `getValue`(v6, v1) @signature `Lorg/joda/time/ReadablePeriod;.getValue:(I)I` @kind interface;
  #L3aa6b2.  v4:= temp;
  #L3aa6b4.  call temp:= `safeMultiply`(v4, v7) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L3aa6ba.  v4:= temp;
  #L3aa6bc.  call temp:= `add`(v3, v5, v2, v0, v4) @signature `Lorg/joda/time/DateTimeField;.add:(Lorg/joda/time/ReadablePartial;I[II)[I` @kind virtual;
  #L3aa6c2.  v0:= temp @kind object;
  #L3aa6c4.  v1:= v1 + 1;
  #L3aa6c8.  goto L3aa684;
  #L3aa6ca.  v6:= new `org.joda.time.YearMonthDay`;
  #L3aa6ce.  call `<init>`(v6, v5, v0) @signature `Lorg/joda/time/YearMonthDay;.<init>:(Lorg/joda/time/YearMonthDay;[I)V` @kind direct;
  #L3aa6d4.  return v6 @kind object;
  #L3aa6d6.  return v5 @kind object;
}
procedure `org.joda.time.YearMonthDay` `withYear`(`org.joda.time.YearMonthDay` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/YearMonthDay;.withYear:(I)Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3aa6e8.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3aa6ee.  v0:= temp @kind object;
  #L3aa6f0.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BasePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3aa6f6.  v1:= temp @kind object;
  #L3aa6f8.  call temp:= `year`(v1) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3aa6fe.  v1:= temp @kind object;
  #L3aa700.  v2:= 0I;
  #L3aa702.  call temp:= `set`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/DateTimeField;.set:(Lorg/joda/time/ReadablePartial;I[II)[I` @kind virtual;
  #L3aa708.  v4:= temp @kind object;
  #L3aa70a.  v0:= new `org.joda.time.YearMonthDay`;
  #L3aa70e.  call `<init>`(v0, v3, v4) @signature `Lorg/joda/time/YearMonthDay;.<init>:(Lorg/joda/time/YearMonthDay;[I)V` @kind direct;
  #L3aa714.  return v0 @kind object;
}
procedure `org.joda.time.YearMonthDay$Property` `year`(`org.joda.time.YearMonthDay` v2 @kind this) @signature `Lorg/joda/time/YearMonthDay;.year:()Lorg/joda/time/YearMonthDay$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3aa78c.  v0:= new `org.joda.time.YearMonthDay$Property`;
  #L3aa790.  v1:= 0I;
  #L3aa792.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/YearMonthDay$Property;.<init>:(Lorg/joda/time/YearMonthDay;I)V` @kind direct;
  #L3aa798.  return v0 @kind object;
}
