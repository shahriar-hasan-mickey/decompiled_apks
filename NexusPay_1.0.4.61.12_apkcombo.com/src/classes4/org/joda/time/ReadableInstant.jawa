record `org.joda.time.ReadableInstant` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `java.lang.Comparable` @kind interface {
}
procedure `boolean` `equals`(`java.lang.Object` v0 @kind object) @signature `Lorg/joda/time/ReadableInstant;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `get`(`org.joda.time.DateTimeFieldType` v0 @kind object) @signature `Lorg/joda/time/ReadableInstant;.get:(Lorg/joda/time/DateTimeFieldType;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.joda.time.Chronology` `getChronology`() @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `getMillis`() @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.joda.time.DateTimeZone` `getZone`() @signature `Lorg/joda/time/ReadableInstant;.getZone:()Lorg/joda/time/DateTimeZone;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hashCode`() @signature `Lorg/joda/time/ReadableInstant;.hashCode:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isAfter`(`org.joda.time.ReadableInstant` v0 @kind object) @signature `Lorg/joda/time/ReadableInstant;.isAfter:(Lorg/joda/time/ReadableInstant;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isBefore`(`org.joda.time.ReadableInstant` v0 @kind object) @signature `Lorg/joda/time/ReadableInstant;.isBefore:(Lorg/joda/time/ReadableInstant;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isEqual`(`org.joda.time.ReadableInstant` v0 @kind object) @signature `Lorg/joda/time/ReadableInstant;.isEqual:(Lorg/joda/time/ReadableInstant;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isSupported`(`org.joda.time.DateTimeFieldType` v0 @kind object) @signature `Lorg/joda/time/ReadableInstant;.isSupported:(Lorg/joda/time/DateTimeFieldType;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.joda.time.Instant` `toInstant`() @signature `Lorg/joda/time/ReadableInstant;.toInstant:()Lorg/joda/time/Instant;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toString`() @signature `Lorg/joda/time/ReadableInstant;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
