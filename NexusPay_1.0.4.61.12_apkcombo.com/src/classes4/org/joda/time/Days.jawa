record `org.joda.time.Days` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.base.BaseSingleFieldPeriod` @kind class {
}
global `org.joda.time.Days` `@@org.joda.time.Days.FIVE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Days` `@@org.joda.time.Days.FOUR` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Days` `@@org.joda.time.Days.MAX_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Days` `@@org.joda.time.Days.MIN_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Days` `@@org.joda.time.Days.ONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.format.PeriodFormatter` `@@org.joda.time.Days.PARSER` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.joda.time.Days` `@@org.joda.time.Days.SEVEN` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Days` `@@org.joda.time.Days.SIX` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Days` `@@org.joda.time.Days.THREE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Days` `@@org.joda.time.Days.TWO` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Days` `@@org.joda.time.Days.ZERO` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@org.joda.time.Days.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/Days;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L399ee0.  v0:= new `org.joda.time.Days`;
  #L399ee4.  v1:= 0I;
  #L399ee6.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Days;.<init>:(I)V` @kind direct;
  #L399eec.  `@@org.joda.time.Days.ZERO` @type ^`org.joda.time.Days` := v0 @kind object;
  #L399ef0.  v0:= new `org.joda.time.Days`;
  #L399ef4.  v1:= 1I;
  #L399ef6.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Days;.<init>:(I)V` @kind direct;
  #L399efc.  `@@org.joda.time.Days.ONE` @type ^`org.joda.time.Days` := v0 @kind object;
  #L399f00.  v0:= new `org.joda.time.Days`;
  #L399f04.  v1:= 2I;
  #L399f06.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Days;.<init>:(I)V` @kind direct;
  #L399f0c.  `@@org.joda.time.Days.TWO` @type ^`org.joda.time.Days` := v0 @kind object;
  #L399f10.  v0:= new `org.joda.time.Days`;
  #L399f14.  v1:= 3I;
  #L399f16.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Days;.<init>:(I)V` @kind direct;
  #L399f1c.  `@@org.joda.time.Days.THREE` @type ^`org.joda.time.Days` := v0 @kind object;
  #L399f20.  v0:= new `org.joda.time.Days`;
  #L399f24.  v1:= 4I;
  #L399f26.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Days;.<init>:(I)V` @kind direct;
  #L399f2c.  `@@org.joda.time.Days.FOUR` @type ^`org.joda.time.Days` := v0 @kind object;
  #L399f30.  v0:= new `org.joda.time.Days`;
  #L399f34.  v1:= 5I;
  #L399f36.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Days;.<init>:(I)V` @kind direct;
  #L399f3c.  `@@org.joda.time.Days.FIVE` @type ^`org.joda.time.Days` := v0 @kind object;
  #L399f40.  v0:= new `org.joda.time.Days`;
  #L399f44.  v1:= 6I;
  #L399f46.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Days;.<init>:(I)V` @kind direct;
  #L399f4c.  `@@org.joda.time.Days.SIX` @type ^`org.joda.time.Days` := v0 @kind object;
  #L399f50.  v0:= new `org.joda.time.Days`;
  #L399f54.  v1:= 7I;
  #L399f56.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Days;.<init>:(I)V` @kind direct;
  #L399f5c.  `@@org.joda.time.Days.SEVEN` @type ^`org.joda.time.Days` := v0 @kind object;
  #L399f60.  v0:= new `org.joda.time.Days`;
  #L399f64.  v1:= 2147483647I;
  #L399f6a.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Days;.<init>:(I)V` @kind direct;
  #L399f70.  `@@org.joda.time.Days.MAX_VALUE` @type ^`org.joda.time.Days` := v0 @kind object;
  #L399f74.  v0:= new `org.joda.time.Days`;
  #L399f78.  v1:= -2147483648I;
  #L399f7c.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Days;.<init>:(I)V` @kind direct;
  #L399f82.  `@@org.joda.time.Days.MIN_VALUE` @type ^`org.joda.time.Days` := v0 @kind object;
  #L399f86.  call temp:= `standard`() @signature `Lorg/joda/time/format/ISOPeriodFormat;.standard:()Lorg/joda/time/format/PeriodFormatter;` @kind static;
  #L399f8c.  v0:= temp @kind object;
  #L399f8e.  call temp:= `days`() @signature `Lorg/joda/time/PeriodType;.days:()Lorg/joda/time/PeriodType;` @kind static;
  #L399f94.  v1:= temp @kind object;
  #L399f96.  call temp:= `withParseType`(v0, v1) @signature `Lorg/joda/time/format/PeriodFormatter;.withParseType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/format/PeriodFormatter;` @kind virtual;
  #L399f9c.  v0:= temp @kind object;
  #L399f9e.  `@@org.joda.time.Days.PARSER` @type ^`org.joda.time.format.PeriodFormatter` := v0 @kind object;
  #L399fa2.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Days` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/Days;.<init>:(I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L399fb4.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.<init>:(I)V` @kind direct;
  #L399fba.  return @kind void;
}
procedure `org.joda.time.Days` `days`(`int` v1 ) @signature `Lorg/joda/time/Days;.days:(I)Lorg/joda/time/Days;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L399ab8.  v0:= -2147483648I;
  #L399abc.  if v1 == v0 then goto L399b12;
  #L399ac0.  v0:= 2147483647I;
  #L399ac6.  if v1 == v0 then goto L399b0c;
  #L399aca.  goto L399b18;
  #L399ad0.  v0:= new `org.joda.time.Days`;
  #L399ad4.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Days;.<init>:(I)V` @kind direct;
  #L399ada.  return v0 @kind object;
  #L399adc.  v1:= `@@org.joda.time.Days.SEVEN` @type ^`org.joda.time.Days` @kind object;
  #L399ae0.  return v1 @kind object;
  #L399ae2.  v1:= `@@org.joda.time.Days.SIX` @type ^`org.joda.time.Days` @kind object;
  #L399ae6.  return v1 @kind object;
  #L399ae8.  v1:= `@@org.joda.time.Days.FIVE` @type ^`org.joda.time.Days` @kind object;
  #L399aec.  return v1 @kind object;
  #L399aee.  v1:= `@@org.joda.time.Days.FOUR` @type ^`org.joda.time.Days` @kind object;
  #L399af2.  return v1 @kind object;
  #L399af4.  v1:= `@@org.joda.time.Days.THREE` @type ^`org.joda.time.Days` @kind object;
  #L399af8.  return v1 @kind object;
  #L399afa.  v1:= `@@org.joda.time.Days.TWO` @type ^`org.joda.time.Days` @kind object;
  #L399afe.  return v1 @kind object;
  #L399b00.  v1:= `@@org.joda.time.Days.ONE` @type ^`org.joda.time.Days` @kind object;
  #L399b04.  return v1 @kind object;
  #L399b06.  v1:= `@@org.joda.time.Days.ZERO` @type ^`org.joda.time.Days` @kind object;
  #L399b0a.  return v1 @kind object;
  #L399b0c.  v1:= `@@org.joda.time.Days.MAX_VALUE` @type ^`org.joda.time.Days` @kind object;
  #L399b10.  return v1 @kind object;
  #L399b12.  v1:= `@@org.joda.time.Days.MIN_VALUE` @type ^`org.joda.time.Days` @kind object;
  #L399b16.  return v1 @kind object;
  #L399b18.  switch v1
                  | 0 => goto L399b06
                  | 1 => goto L399b00
                  | 2 => goto L399afa
                  | 3 => goto L399af4
                  | 4 => goto L399aee
                  | 5 => goto L399ae8
                  | 6 => goto L399ae2
                  | 7 => goto L399adc
                  | else => goto L399ad0;
}
procedure `org.joda.time.Days` `daysBetween`(`org.joda.time.ReadableInstant` v1 @kind object, `org.joda.time.ReadableInstant` v2 @kind object) @signature `Lorg/joda/time/Days;.daysBetween:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Days;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L399b50.  call temp:= `days`() @signature `Lorg/joda/time/DurationFieldType;.days:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L399b56.  v0:= temp @kind object;
  #L399b58.  call temp:= `between`(v1, v2, v0) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.between:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;Lorg/joda/time/DurationFieldType;)I` @kind static;
  #L399b5e.  v1:= temp;
  #L399b60.  call temp:= `days`(v1) @signature `Lorg/joda/time/Days;.days:(I)Lorg/joda/time/Days;` @kind static;
  #L399b66.  v1:= temp @kind object;
  #L399b68.  return v1 @kind object;
}
procedure `org.joda.time.Days` `daysBetween`(`org.joda.time.ReadablePartial` v3 @kind object, `org.joda.time.ReadablePartial` v4 @kind object) @signature `Lorg/joda/time/Days;.daysBetween:(Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePartial;)Lorg/joda/time/Days;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L399b7c.  v0:= instanceof @variable v3 @type ^`org.joda.time.LocalDate` @kind boolean;
  #L399b80.  if v0 == 0 then goto L399bce;
  #L399b84.  v0:= instanceof @variable v4 @type ^`org.joda.time.LocalDate` @kind boolean;
  #L399b88.  if v0 == 0 then goto L399bce;
  #L399b8c.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadablePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L399b92.  v0:= temp @kind object;
  #L399b94.  call temp:= `getChronology`(v0) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L399b9a.  v0:= temp @kind object;
  #L399b9c.  call temp:= `days`(v0) @signature `Lorg/joda/time/Chronology;.days:()Lorg/joda/time/DurationField;` @kind virtual;
  #L399ba2.  v0:= temp @kind object;
  #L399ba4.  v4:= (`org.joda.time.LocalDate`) v4 @kind object;
  #L399ba8.  call temp:= `getLocalMillis`(v4) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L399bae.  v1:= temp @kind wide;
  #L399bb0.  v3:= (`org.joda.time.LocalDate`) v3 @kind object;
  #L399bb4.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L399bba.  v3:= temp @kind wide;
  #L399bbc.  call temp:= `getDifference`(v0, v1, v3) @signature `Lorg/joda/time/DurationField;.getDifference:(JJ)I` @kind virtual;
  #L399bc2.  v3:= temp;
  #L399bc4.  call temp:= `days`(v3) @signature `Lorg/joda/time/Days;.days:(I)Lorg/joda/time/Days;` @kind static;
  #L399bca.  v3:= temp @kind object;
  #L399bcc.  return v3 @kind object;
  #L399bce.  v0:= `@@org.joda.time.Days.ZERO` @type ^`org.joda.time.Days` @kind object;
  #L399bd2.  call temp:= `between`(v3, v4, v0) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.between:(Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePeriod;)I` @kind static;
  #L399bd8.  v3:= temp;
  #L399bda.  call temp:= `days`(v3) @signature `Lorg/joda/time/Days;.days:(I)Lorg/joda/time/Days;` @kind static;
  #L399be0.  v3:= temp @kind object;
  #L399be2.  return v3 @kind object;
}
procedure `org.joda.time.Days` `daysIn`(`org.joda.time.ReadableInterval` v2 @kind object) @signature `Lorg/joda/time/Days;.daysIn:(Lorg/joda/time/ReadableInterval;)Lorg/joda/time/Days;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L399bf4.  if v2 != 0 then goto L399bfe;
  #L399bf8.  v2:= `@@org.joda.time.Days.ZERO` @type ^`org.joda.time.Days` @kind object;
  #L399bfc.  return v2 @kind object;
  #L399bfe.  call temp:= `getStart`(v2) @signature `Lorg/joda/time/ReadableInterval;.getStart:()Lorg/joda/time/DateTime;` @kind interface;
  #L399c04.  v0:= temp @kind object;
  #L399c06.  call temp:= `getEnd`(v2) @signature `Lorg/joda/time/ReadableInterval;.getEnd:()Lorg/joda/time/DateTime;` @kind interface;
  #L399c0c.  v2:= temp @kind object;
  #L399c0e.  call temp:= `days`() @signature `Lorg/joda/time/DurationFieldType;.days:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L399c14.  v1:= temp @kind object;
  #L399c16.  call temp:= `between`(v0, v2, v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.between:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;Lorg/joda/time/DurationFieldType;)I` @kind static;
  #L399c1c.  v2:= temp;
  #L399c1e.  call temp:= `days`(v2) @signature `Lorg/joda/time/Days;.days:(I)Lorg/joda/time/Days;` @kind static;
  #L399c24.  v2:= temp @kind object;
  #L399c26.  return v2 @kind object;
}
procedure `org.joda.time.Days` `parseDays`(`java.lang.String` v1 @kind object) @signature `Lorg/joda/time/Days;.parseDays:(Ljava/lang/String;)Lorg/joda/time/Days;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L399d08.  if v1 != 0 then goto L399d12;
  #L399d0c.  v1:= `@@org.joda.time.Days.ZERO` @type ^`org.joda.time.Days` @kind object;
  #L399d10.  return v1 @kind object;
  #L399d12.  v0:= `@@org.joda.time.Days.PARSER` @type ^`org.joda.time.format.PeriodFormatter` @kind object;
  #L399d16.  call temp:= `parsePeriod`(v0, v1) @signature `Lorg/joda/time/format/PeriodFormatter;.parsePeriod:(Ljava/lang/String;)Lorg/joda/time/Period;` @kind virtual;
  #L399d1c.  v1:= temp @kind object;
  #L399d1e.  call temp:= `getDays`(v1) @signature `Lorg/joda/time/Period;.getDays:()I` @kind virtual;
  #L399d24.  v1:= temp;
  #L399d26.  call temp:= `days`(v1) @signature `Lorg/joda/time/Days;.days:(I)Lorg/joda/time/Days;` @kind static;
  #L399d2c.  v1:= temp @kind object;
  #L399d2e.  return v1 @kind object;
}
procedure `java.lang.Object` `readResolve`(`org.joda.time.Days` v1 @kind this) @signature `Lorg/joda/time/Days;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L399a44.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L399a4a.  v0:= temp;
  #L399a4c.  call temp:= `days`(v0) @signature `Lorg/joda/time/Days;.days:(I)Lorg/joda/time/Days;` @kind static;
  #L399a52.  v0:= temp @kind object;
  #L399a54.  return v0 @kind object;
}
procedure `org.joda.time.Days` `standardDaysIn`(`org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/Days;.standardDaysIn:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/Days;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L399d98.  v0:= 86400000L;
  #L399d9e.  call temp:= `standardPeriodIn`(v2, v0) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.standardPeriodIn:(Lorg/joda/time/ReadablePeriod;J)I` @kind static;
  #L399da4.  v2:= temp;
  #L399da6.  call temp:= `days`(v2) @signature `Lorg/joda/time/Days;.days:(I)Lorg/joda/time/Days;` @kind static;
  #L399dac.  v2:= temp @kind object;
  #L399dae.  return v2 @kind object;
}
procedure `org.joda.time.Days` `dividedBy`(`org.joda.time.Days` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/Days;.dividedBy:(I)Lorg/joda/time/Days;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L399c38.  v0:= 1I;
  #L399c3a.  if v2 != v0 then goto L399c40;
  #L399c3e.  return v1 @kind object;
  #L399c40.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L399c46.  v0:= temp;
  #L399c48.  v0:= v0 / v2 @kind int;
  #L399c4a.  call temp:= `days`(v0) @signature `Lorg/joda/time/Days;.days:(I)Lorg/joda/time/Days;` @kind static;
  #L399c50.  v2:= temp @kind object;
  #L399c52.  return v2 @kind object;
}
procedure `int` `getDays`(`org.joda.time.Days` v1 @kind this) @signature `Lorg/joda/time/Days;.getDays:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L399a28.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L399a2e.  v0:= temp;
  #L399a30.  return v0;
}
procedure `org.joda.time.DurationFieldType` `getFieldType`(`org.joda.time.Days` v1 @kind this) @signature `Lorg/joda/time/Days;.getFieldType:()Lorg/joda/time/DurationFieldType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L399df0.  call temp:= `days`() @signature `Lorg/joda/time/DurationFieldType;.days:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L399df6.  v0:= temp @kind object;
  #L399df8.  return v0 @kind object;
}
procedure `org.joda.time.PeriodType` `getPeriodType`(`org.joda.time.Days` v1 @kind this) @signature `Lorg/joda/time/Days;.getPeriodType:()Lorg/joda/time/PeriodType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L399e6c.  call temp:= `days`() @signature `Lorg/joda/time/PeriodType;.days:()Lorg/joda/time/PeriodType;` @kind static;
  #L399e72.  v0:= temp @kind object;
  #L399e74.  return v0 @kind object;
}
procedure `boolean` `isGreaterThan`(`org.joda.time.Days` v3 @kind this, `org.joda.time.Days` v4 @kind object) @signature `Lorg/joda/time/Days;.isGreaterThan:(Lorg/joda/time/Days;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3999a0.  v0:= 1I;
  #L3999a2.  v1:= 0I;
  #L3999a4.  if v4 != 0 then goto L3999ba;
  #L3999a8.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3999ae.  v4:= temp;
  #L3999b0.  if v4 <= 0 then goto L3999b6;
  #L3999b4.  goto L3999b8;
  #L3999b6.  v0:= 0I;
  #L3999b8.  return v0;
  #L3999ba.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3999c0.  v2:= temp;
  #L3999c2.  call temp:= `getValue`(v4) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3999c8.  v4:= temp;
  #L3999ca.  if v2 <= v4 then goto L3999d0;
  #L3999ce.  goto L3999d2;
  #L3999d0.  v0:= 0I;
  #L3999d2.  return v0;
}
procedure `boolean` `isLessThan`(`org.joda.time.Days` v3 @kind this, `org.joda.time.Days` v4 @kind object) @signature `Lorg/joda/time/Days;.isLessThan:(Lorg/joda/time/Days;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3999e4.  v0:= 1I;
  #L3999e6.  v1:= 0I;
  #L3999e8.  if v4 != 0 then goto L3999fe;
  #L3999ec.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3999f2.  v4:= temp;
  #L3999f4.  if v4 >= 0 then goto L3999fa;
  #L3999f8.  goto L3999fc;
  #L3999fa.  v0:= 0I;
  #L3999fc.  return v0;
  #L3999fe.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L399a04.  v2:= temp;
  #L399a06.  call temp:= `getValue`(v4) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L399a0c.  v4:= temp;
  #L399a0e.  if v2 >= v4 then goto L399a14;
  #L399a12.  goto L399a16;
  #L399a14.  v0:= 0I;
  #L399a16.  return v0;
}
procedure `org.joda.time.Days` `minus`(`org.joda.time.Days` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/Days;.minus:(I)Lorg/joda/time/Days;` @AccessFlag PUBLIC {
    temp;

  #L399c64.  call temp:= `safeNegate`(v1) @signature `Lorg/joda/time/field/FieldUtils;.safeNegate:(I)I` @kind static;
  #L399c6a.  v1:= temp;
  #L399c6c.  call temp:= `plus`(v0, v1) @signature `Lorg/joda/time/Days;.plus:(I)Lorg/joda/time/Days;` @kind virtual;
  #L399c72.  v1:= temp @kind object;
  #L399c74.  return v1 @kind object;
}
procedure `org.joda.time.Days` `minus`(`org.joda.time.Days` v0 @kind this, `org.joda.time.Days` v1 @kind object) @signature `Lorg/joda/time/Days;.minus:(Lorg/joda/time/Days;)Lorg/joda/time/Days;` @AccessFlag PUBLIC {
    temp;

  #L399c88.  if v1 != 0 then goto L399c8e;
  #L399c8c.  return v0 @kind object;
  #L399c8e.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L399c94.  v1:= temp;
  #L399c96.  call temp:= `minus`(v0, v1) @signature `Lorg/joda/time/Days;.minus:(I)Lorg/joda/time/Days;` @kind virtual;
  #L399c9c.  v1:= temp @kind object;
  #L399c9e.  return v1 @kind object;
}
procedure `org.joda.time.Days` `multipliedBy`(`org.joda.time.Days` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/Days;.multipliedBy:(I)Lorg/joda/time/Days;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L399cb0.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L399cb6.  v0:= temp;
  #L399cb8.  call temp:= `safeMultiply`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L399cbe.  v2:= temp;
  #L399cc0.  call temp:= `days`(v2) @signature `Lorg/joda/time/Days;.days:(I)Lorg/joda/time/Days;` @kind static;
  #L399cc6.  v2:= temp @kind object;
  #L399cc8.  return v2 @kind object;
}
procedure `org.joda.time.Days` `negated`(`org.joda.time.Days` v1 @kind this) @signature `Lorg/joda/time/Days;.negated:()Lorg/joda/time/Days;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L399cdc.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L399ce2.  v0:= temp;
  #L399ce4.  call temp:= `safeNegate`(v0) @signature `Lorg/joda/time/field/FieldUtils;.safeNegate:(I)I` @kind static;
  #L399cea.  v0:= temp;
  #L399cec.  call temp:= `days`(v0) @signature `Lorg/joda/time/Days;.days:(I)Lorg/joda/time/Days;` @kind static;
  #L399cf2.  v0:= temp @kind object;
  #L399cf4.  return v0 @kind object;
}
procedure `org.joda.time.Days` `plus`(`org.joda.time.Days` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/Days;.plus:(I)Lorg/joda/time/Days;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L399d40.  if v2 != 0 then goto L399d46;
  #L399d44.  return v1 @kind object;
  #L399d46.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L399d4c.  v0:= temp;
  #L399d4e.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(II)I` @kind static;
  #L399d54.  v2:= temp;
  #L399d56.  call temp:= `days`(v2) @signature `Lorg/joda/time/Days;.days:(I)Lorg/joda/time/Days;` @kind static;
  #L399d5c.  v2:= temp @kind object;
  #L399d5e.  return v2 @kind object;
}
procedure `org.joda.time.Days` `plus`(`org.joda.time.Days` v0 @kind this, `org.joda.time.Days` v1 @kind object) @signature `Lorg/joda/time/Days;.plus:(Lorg/joda/time/Days;)Lorg/joda/time/Days;` @AccessFlag PUBLIC {
    temp;

  #L399d70.  if v1 != 0 then goto L399d76;
  #L399d74.  return v0 @kind object;
  #L399d76.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L399d7c.  v1:= temp;
  #L399d7e.  call temp:= `plus`(v0, v1) @signature `Lorg/joda/time/Days;.plus:(I)Lorg/joda/time/Days;` @kind virtual;
  #L399d84.  v1:= temp @kind object;
  #L399d86.  return v1 @kind object;
}
procedure `org.joda.time.Duration` `toStandardDuration`(`org.joda.time.Days` v5 @kind this) @signature `Lorg/joda/time/Days;.toStandardDuration:()Lorg/joda/time/Duration;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L399dc0.  call temp:= `getValue`(v5) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L399dc6.  v0:= temp;
  #L399dc8.  v0:= (`long`) v0 @kind i2l;
  #L399dca.  v2:= new `org.joda.time.Duration`;
  #L399dce.  v3:= 86400000L;
  #L399dd4.  v0:= v0 * v3 @kind long;
  #L399dd8.  call `<init>`(v2, v0) @signature `Lorg/joda/time/Duration;.<init>:(J)V` @kind direct;
  #L399dde.  return v2 @kind object;
}
procedure `org.joda.time.Hours` `toStandardHours`(`org.joda.time.Days` v2 @kind this) @signature `Lorg/joda/time/Days;.toStandardHours:()Lorg/joda/time/Hours;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L399e0c.  call temp:= `getValue`(v2) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L399e12.  v0:= temp;
  #L399e14.  v1:= 24I;
  #L399e18.  call temp:= `safeMultiply`(v0, v1) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L399e1e.  v0:= temp;
  #L399e20.  call temp:= `hours`(v0) @signature `Lorg/joda/time/Hours;.hours:(I)Lorg/joda/time/Hours;` @kind static;
  #L399e26.  v0:= temp @kind object;
  #L399e28.  return v0 @kind object;
}
procedure `org.joda.time.Minutes` `toStandardMinutes`(`org.joda.time.Days` v2 @kind this) @signature `Lorg/joda/time/Days;.toStandardMinutes:()Lorg/joda/time/Minutes;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L399e3c.  call temp:= `getValue`(v2) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L399e42.  v0:= temp;
  #L399e44.  v1:= 1440I;
  #L399e48.  call temp:= `safeMultiply`(v0, v1) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L399e4e.  v0:= temp;
  #L399e50.  call temp:= `minutes`(v0) @signature `Lorg/joda/time/Minutes;.minutes:(I)Lorg/joda/time/Minutes;` @kind static;
  #L399e56.  v0:= temp @kind object;
  #L399e58.  return v0 @kind object;
}
procedure `org.joda.time.Seconds` `toStandardSeconds`(`org.joda.time.Days` v2 @kind this) @signature `Lorg/joda/time/Days;.toStandardSeconds:()Lorg/joda/time/Seconds;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L399e88.  call temp:= `getValue`(v2) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L399e8e.  v0:= temp;
  #L399e90.  v1:= 86400I;
  #L399e96.  call temp:= `safeMultiply`(v0, v1) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L399e9c.  v0:= temp;
  #L399e9e.  call temp:= `seconds`(v0) @signature `Lorg/joda/time/Seconds;.seconds:(I)Lorg/joda/time/Seconds;` @kind static;
  #L399ea4.  v0:= temp @kind object;
  #L399ea6.  return v0 @kind object;
}
procedure `org.joda.time.Weeks` `toStandardWeeks`(`org.joda.time.Days` v1 @kind this) @signature `Lorg/joda/time/Days;.toStandardWeeks:()Lorg/joda/time/Weeks;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L399eb8.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L399ebe.  v0:= temp;
  #L399ec0.  v0:= v0 / 7;
  #L399ec4.  call temp:= `weeks`(v0) @signature `Lorg/joda/time/Weeks;.weeks:(I)Lorg/joda/time/Weeks;` @kind static;
  #L399eca.  v0:= temp @kind object;
  #L399ecc.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.Days` v2 @kind this) @signature `Lorg/joda/time/Days;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L399a68.  v0:= new `java.lang.StringBuilder`;
  #L399a6c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L399a72.  v1:= "P" @kind object;
  #L399a76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L399a7c.  call temp:= `getValue`(v2) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L399a82.  v1:= temp;
  #L399a84.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L399a8a.  v1:= temp @kind object;
  #L399a8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L399a92.  v1:= "D" @kind object;
  #L399a96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L399a9c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L399aa2.  v0:= temp @kind object;
  #L399aa4.  return v0 @kind object;
}
