record `org.joda.time.YearMonth$Property` @kind class @AccessFlag PUBLIC extends `org.joda.time.field.AbstractPartialFieldProperty` @kind class, `java.io.Serializable` @kind interface {
  `org.joda.time.YearMonth` `org.joda.time.YearMonth$Property.iBase` @AccessFlag PRIVATE_FINAL;
  `int` `org.joda.time.YearMonth$Property.iFieldIndex` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@org.joda.time.YearMonth$Property.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.YearMonth$Property` v0 @kind this, `org.joda.time.YearMonth` v1 @kind object, `int` v2 ) @signature `Lorg/joda/time/YearMonth$Property;.<init>:(Lorg/joda/time/YearMonth;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3a9ddc.  call `<init>`(v0) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.<init>:()V` @kind direct;
  #L3a9de2.  v0.`org.joda.time.YearMonth$Property.iBase` @type ^`org.joda.time.YearMonth` := v1 @kind object;
  #L3a9de6.  v0.`org.joda.time.YearMonth$Property.iFieldIndex` @type ^`int` := v2;
  #L3a9dea.  return @kind void;
}
procedure `org.joda.time.YearMonth` `addToCopy`(`org.joda.time.YearMonth$Property` v4 @kind this, `int` v5 ) @signature `Lorg/joda/time/YearMonth$Property;.addToCopy:(I)Lorg/joda/time/YearMonth;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a9c94.  v0:= v4.`org.joda.time.YearMonth$Property.iBase` @type ^`org.joda.time.YearMonth` @kind object;
  #L3a9c98.  call temp:= `getValues`(v0) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3a9c9e.  v0:= temp @kind object;
  #L3a9ca0.  call temp:= `getField`(v4) @signature `Lorg/joda/time/YearMonth$Property;.getField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a9ca6.  v1:= temp @kind object;
  #L3a9ca8.  v2:= v4.`org.joda.time.YearMonth$Property.iBase` @type ^`org.joda.time.YearMonth` @kind object;
  #L3a9cac.  v3:= v4.`org.joda.time.YearMonth$Property.iFieldIndex` @type ^`int`;
  #L3a9cb0.  call temp:= `add`(v1, v2, v3, v0, v5) @signature `Lorg/joda/time/DateTimeField;.add:(Lorg/joda/time/ReadablePartial;I[II)[I` @kind virtual;
  #L3a9cb6.  v5:= temp @kind object;
  #L3a9cb8.  v0:= new `org.joda.time.YearMonth`;
  #L3a9cbc.  v1:= v4.`org.joda.time.YearMonth$Property.iBase` @type ^`org.joda.time.YearMonth` @kind object;
  #L3a9cc0.  call `<init>`(v0, v1, v5) @signature `Lorg/joda/time/YearMonth;.<init>:(Lorg/joda/time/YearMonth;[I)V` @kind direct;
  #L3a9cc6.  return v0 @kind object;
}
procedure `org.joda.time.YearMonth` `addWrapFieldToCopy`(`org.joda.time.YearMonth$Property` v4 @kind this, `int` v5 ) @signature `Lorg/joda/time/YearMonth$Property;.addWrapFieldToCopy:(I)Lorg/joda/time/YearMonth;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a9cd8.  v0:= v4.`org.joda.time.YearMonth$Property.iBase` @type ^`org.joda.time.YearMonth` @kind object;
  #L3a9cdc.  call temp:= `getValues`(v0) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3a9ce2.  v0:= temp @kind object;
  #L3a9ce4.  call temp:= `getField`(v4) @signature `Lorg/joda/time/YearMonth$Property;.getField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a9cea.  v1:= temp @kind object;
  #L3a9cec.  v2:= v4.`org.joda.time.YearMonth$Property.iBase` @type ^`org.joda.time.YearMonth` @kind object;
  #L3a9cf0.  v3:= v4.`org.joda.time.YearMonth$Property.iFieldIndex` @type ^`int`;
  #L3a9cf4.  call temp:= `addWrapField`(v1, v2, v3, v0, v5) @signature `Lorg/joda/time/DateTimeField;.addWrapField:(Lorg/joda/time/ReadablePartial;I[II)[I` @kind virtual;
  #L3a9cfa.  v5:= temp @kind object;
  #L3a9cfc.  v0:= new `org.joda.time.YearMonth`;
  #L3a9d00.  v1:= v4.`org.joda.time.YearMonth$Property.iBase` @type ^`org.joda.time.YearMonth` @kind object;
  #L3a9d04.  call `<init>`(v0, v1, v5) @signature `Lorg/joda/time/YearMonth;.<init>:(Lorg/joda/time/YearMonth;[I)V` @kind direct;
  #L3a9d0a.  return v0 @kind object;
}
procedure `int` `get`(`org.joda.time.YearMonth$Property` v2 @kind this) @signature `Lorg/joda/time/YearMonth$Property;.get:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a9c34.  v0:= v2.`org.joda.time.YearMonth$Property.iBase` @type ^`org.joda.time.YearMonth` @kind object;
  #L3a9c38.  v1:= v2.`org.joda.time.YearMonth$Property.iFieldIndex` @type ^`int`;
  #L3a9c3c.  call temp:= `getValue`(v0, v1) @signature `Lorg/joda/time/base/BasePartial;.getValue:(I)I` @kind virtual;
  #L3a9c42.  v0:= temp;
  #L3a9c44.  return v0;
}
procedure `org.joda.time.DateTimeField` `getField`(`org.joda.time.YearMonth$Property` v2 @kind this) @signature `Lorg/joda/time/YearMonth$Property;.getField:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a9c58.  v0:= v2.`org.joda.time.YearMonth$Property.iBase` @type ^`org.joda.time.YearMonth` @kind object;
  #L3a9c5c.  v1:= v2.`org.joda.time.YearMonth$Property.iFieldIndex` @type ^`int`;
  #L3a9c60.  call temp:= `getField`(v0, v1) @signature `Lorg/joda/time/base/AbstractPartial;.getField:(I)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a9c66.  v0:= temp @kind object;
  #L3a9c68.  return v0 @kind object;
}
procedure `org.joda.time.ReadablePartial` `getReadablePartial`(`org.joda.time.YearMonth$Property` v1 @kind this) @signature `Lorg/joda/time/YearMonth$Property;.getReadablePartial:()Lorg/joda/time/ReadablePartial;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3a9c7c.  v0:= v1.`org.joda.time.YearMonth$Property.iBase` @type ^`org.joda.time.YearMonth` @kind object;
  #L3a9c80.  return v0 @kind object;
}
procedure `org.joda.time.YearMonth` `getYearMonth`(`org.joda.time.YearMonth$Property` v1 @kind this) @signature `Lorg/joda/time/YearMonth$Property;.getYearMonth:()Lorg/joda/time/YearMonth;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9d1c.  v0:= v1.`org.joda.time.YearMonth$Property.iBase` @type ^`org.joda.time.YearMonth` @kind object;
  #L3a9d20.  return v0 @kind object;
}
procedure `org.joda.time.YearMonth` `setCopy`(`org.joda.time.YearMonth$Property` v4 @kind this, `int` v5 ) @signature `Lorg/joda/time/YearMonth$Property;.setCopy:(I)Lorg/joda/time/YearMonth;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a9d34.  v0:= v4.`org.joda.time.YearMonth$Property.iBase` @type ^`org.joda.time.YearMonth` @kind object;
  #L3a9d38.  call temp:= `getValues`(v0) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3a9d3e.  v0:= temp @kind object;
  #L3a9d40.  call temp:= `getField`(v4) @signature `Lorg/joda/time/YearMonth$Property;.getField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a9d46.  v1:= temp @kind object;
  #L3a9d48.  v2:= v4.`org.joda.time.YearMonth$Property.iBase` @type ^`org.joda.time.YearMonth` @kind object;
  #L3a9d4c.  v3:= v4.`org.joda.time.YearMonth$Property.iFieldIndex` @type ^`int`;
  #L3a9d50.  call temp:= `set`(v1, v2, v3, v0, v5) @signature `Lorg/joda/time/DateTimeField;.set:(Lorg/joda/time/ReadablePartial;I[II)[I` @kind virtual;
  #L3a9d56.  v5:= temp @kind object;
  #L3a9d58.  v0:= new `org.joda.time.YearMonth`;
  #L3a9d5c.  v1:= v4.`org.joda.time.YearMonth$Property.iBase` @type ^`org.joda.time.YearMonth` @kind object;
  #L3a9d60.  call `<init>`(v0, v1, v5) @signature `Lorg/joda/time/YearMonth;.<init>:(Lorg/joda/time/YearMonth;[I)V` @kind direct;
  #L3a9d66.  return v0 @kind object;
}
procedure `org.joda.time.YearMonth` `setCopy`(`org.joda.time.YearMonth$Property` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/joda/time/YearMonth$Property;.setCopy:(Ljava/lang/String;)Lorg/joda/time/YearMonth;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9d78.  v0:= 0I;
  #L3a9d7a.  call temp:= `setCopy`(v1, v2, v0) @signature `Lorg/joda/time/YearMonth$Property;.setCopy:(Ljava/lang/String;Ljava/util/Locale;)Lorg/joda/time/YearMonth;` @kind virtual;
  #L3a9d80.  v2:= temp @kind object;
  #L3a9d82.  return v2 @kind object;
}
procedure `org.joda.time.YearMonth` `setCopy`(`org.joda.time.YearMonth$Property` v7 @kind this, `java.lang.String` v8 @kind object, `java.util.Locale` v9 @kind object) @signature `Lorg/joda/time/YearMonth$Property;.setCopy:(Ljava/lang/String;Ljava/util/Locale;)Lorg/joda/time/YearMonth;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a9d94.  v0:= v7.`org.joda.time.YearMonth$Property.iBase` @type ^`org.joda.time.YearMonth` @kind object;
  #L3a9d98.  call temp:= `getValues`(v0) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3a9d9e.  v4:= temp @kind object;
  #L3a9da0.  call temp:= `getField`(v7) @signature `Lorg/joda/time/YearMonth$Property;.getField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a9da6.  v1:= temp @kind object;
  #L3a9da8.  v2:= v7.`org.joda.time.YearMonth$Property.iBase` @type ^`org.joda.time.YearMonth` @kind object;
  #L3a9dac.  v3:= v7.`org.joda.time.YearMonth$Property.iFieldIndex` @type ^`int`;
  #L3a9db0.  v5:= v8 @kind object;
  #L3a9db2.  v6:= v9 @kind object;
  #L3a9db4.  call temp:= `set`(v1, v2, v3, v4, v5, v6) @signature `Lorg/joda/time/DateTimeField;.set:(Lorg/joda/time/ReadablePartial;I[ILjava/lang/String;Ljava/util/Locale;)[I` @kind virtual;
  #L3a9dba.  v8:= temp @kind object;
  #L3a9dbc.  v9:= new `org.joda.time.YearMonth`;
  #L3a9dc0.  v0:= v7.`org.joda.time.YearMonth$Property.iBase` @type ^`org.joda.time.YearMonth` @kind object;
  #L3a9dc4.  call `<init>`(v9, v0, v8) @signature `Lorg/joda/time/YearMonth;.<init>:(Lorg/joda/time/YearMonth;[I)V` @kind direct;
  #L3a9dca.  return v9 @kind object;
}
