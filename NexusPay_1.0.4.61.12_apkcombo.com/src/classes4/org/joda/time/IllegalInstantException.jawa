record `org.joda.time.IllegalInstantException` @kind class @AccessFlag PUBLIC extends `java.lang.IllegalArgumentException` @kind class {
}
global `long` `@@org.joda.time.IllegalInstantException.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.IllegalInstantException` v0 @kind this, `long` v1 , `java.lang.String` v3 @kind object) @signature `Lorg/joda/time/IllegalInstantException;.<init>:(JLjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39b600.  call temp:= `createMessage`(v1, v3) @signature `Lorg/joda/time/IllegalInstantException;.createMessage:(JLjava/lang/String;)Ljava/lang/String;` @kind static;
  #L39b606.  v1:= temp @kind object;
  #L39b608.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39b60e.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.IllegalInstantException` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/joda/time/IllegalInstantException;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39b5e8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39b5ee.  return @kind void;
}
procedure `java.lang.String` `createMessage`(`long` v2 , `java.lang.String` v4 @kind object) @signature `Lorg/joda/time/IllegalInstantException;.createMessage:(JLjava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L39b558.  v0:= "yyyy-MM-dd'T'HH:mm:ss.SSS" @kind object;
  #L39b55c.  call temp:= `forPattern`(v0) @signature `Lorg/joda/time/format/DateTimeFormat;.forPattern:(Ljava/lang/String;)Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L39b562.  v0:= temp @kind object;
  #L39b564.  v1:= new `org.joda.time.Instant`;
  #L39b568.  call `<init>`(v1, v2) @signature `Lorg/joda/time/Instant;.<init>:(J)V` @kind direct;
  #L39b56e.  call temp:= `print`(v0, v1) @signature `Lorg/joda/time/format/DateTimeFormatter;.print:(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;` @kind virtual;
  #L39b574.  v2:= temp @kind object;
  #L39b576.  if v4 == 0 then goto L39b5a8;
  #L39b57a.  v3:= new `java.lang.StringBuilder`;
  #L39b57e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39b584.  v0:= " (" @kind object;
  #L39b588.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39b58e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39b594.  v4:= ")" @kind object;
  #L39b598.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39b59e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39b5a4.  v3:= temp @kind object;
  #L39b5a6.  goto L39b5ac;
  #L39b5a8.  v3:= "" @kind object;
  #L39b5ac.  v4:= new `java.lang.StringBuilder`;
  #L39b5b0.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39b5b6.  v0:= "Illegal instant due to time zone offset transition (daylight savings time 'gap'): " @kind object;
  #L39b5ba.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39b5c0.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39b5c6.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39b5cc.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39b5d2.  v2:= temp @kind object;
  #L39b5d4.  return v2 @kind object;
}
procedure `boolean` `isIllegalInstant`(`java.lang.Throwable` v1 @kind object) @signature `Lorg/joda/time/IllegalInstantException;.isIllegalInstant:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39b50c.  v0:= instanceof @variable v1 @type ^`org.joda.time.IllegalInstantException` @kind boolean;
  #L39b510.  if v0 == 0 then goto L39b518;
  #L39b514.  v1:= 1I;
  #L39b516.  return v1;
  #L39b518.  call temp:= `getCause`(v1) @signature `Ljava/lang/Throwable;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L39b51e.  v0:= temp @kind object;
  #L39b520.  if v0 == 0 then goto L39b542;
  #L39b524.  call temp:= `getCause`(v1) @signature `Ljava/lang/Throwable;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L39b52a.  v0:= temp @kind object;
  #L39b52c.  if v0 == v1 then goto L39b542;
  #L39b530.  call temp:= `getCause`(v1) @signature `Ljava/lang/Throwable;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L39b536.  v1:= temp @kind object;
  #L39b538.  call temp:= `isIllegalInstant`(v1) @signature `Lorg/joda/time/IllegalInstantException;.isIllegalInstant:(Ljava/lang/Throwable;)Z` @kind static;
  #L39b53e.  v1:= temp;
  #L39b540.  return v1;
  #L39b542.  v1:= 0I;
  #L39b544.  return v1;
}
