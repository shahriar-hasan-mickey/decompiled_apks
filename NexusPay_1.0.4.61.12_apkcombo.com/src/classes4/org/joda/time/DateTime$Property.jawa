record `org.joda.time.DateTime$Property` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.field.AbstractReadableInstantFieldProperty` @kind class {
  `org.joda.time.DateTimeField` `org.joda.time.DateTime$Property.iField` @AccessFlag PRIVATE;
  `org.joda.time.DateTime` `org.joda.time.DateTime$Property.iInstant` @AccessFlag PRIVATE;
}
global `long` `@@org.joda.time.DateTime$Property.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.DateTime$Property` v0 @kind this, `org.joda.time.DateTime` v1 @kind object, `org.joda.time.DateTimeField` v2 @kind object) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L395c48.  call `<init>`(v0) @signature `Lorg/joda/time/field/AbstractReadableInstantFieldProperty;.<init>:()V` @kind direct;
  #L395c4e.  v0.`org.joda.time.DateTime$Property.iInstant` @type ^`org.joda.time.DateTime` := v1 @kind object;
  #L395c52.  v0.`org.joda.time.DateTime$Property.iField` @type ^`org.joda.time.DateTimeField` := v2 @kind object;
  #L395c56.  return @kind void;
}
procedure `void` `readObject`(`org.joda.time.DateTime$Property` v1 @kind this, `java.io.ObjectInputStream` v2 @kind object) @signature `Lorg/joda/time/DateTime$Property;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L395c68.  call temp:= `readObject`(v2) @signature `Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;` @kind virtual;
  #L395c6e.  v0:= temp @kind object;
  #L395c70.  v0:= (`org.joda.time.DateTime`) v0 @kind object;
  #L395c74.  v1.`org.joda.time.DateTime$Property.iInstant` @type ^`org.joda.time.DateTime` := v0 @kind object;
  #L395c78.  call temp:= `readObject`(v2) @signature `Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;` @kind virtual;
  #L395c7e.  v2:= temp @kind object;
  #L395c80.  v2:= (`org.joda.time.DateTimeFieldType`) v2 @kind object;
  #L395c84.  v0:= v1.`org.joda.time.DateTime$Property.iInstant` @type ^`org.joda.time.DateTime` @kind object;
  #L395c88.  call temp:= `getChronology`(v0) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L395c8e.  v0:= temp @kind object;
  #L395c90.  call temp:= `getField`(v2, v0) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L395c96.  v2:= temp @kind object;
  #L395c98.  v1.`org.joda.time.DateTime$Property.iField` @type ^`org.joda.time.DateTimeField` := v2 @kind object;
  #L395c9c.  return @kind void;
}
procedure `void` `writeObject`(`org.joda.time.DateTime$Property` v1 @kind this, `java.io.ObjectOutputStream` v2 @kind object) @signature `Lorg/joda/time/DateTime$Property;.writeObject:(Ljava/io/ObjectOutputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L395cb0.  v0:= v1.`org.joda.time.DateTime$Property.iInstant` @type ^`org.joda.time.DateTime` @kind object;
  #L395cb4.  call `writeObject`(v2, v0) @signature `Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V` @kind virtual;
  #L395cba.  v0:= v1.`org.joda.time.DateTime$Property.iField` @type ^`org.joda.time.DateTimeField` @kind object;
  #L395cbe.  call temp:= `getType`(v0) @signature `Lorg/joda/time/DateTimeField;.getType:()Lorg/joda/time/DateTimeFieldType;` @kind virtual;
  #L395cc4.  v0:= temp @kind object;
  #L395cc6.  call `writeObject`(v2, v0) @signature `Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V` @kind virtual;
  #L395ccc.  return @kind void;
}
procedure `org.joda.time.DateTime` `addToCopy`(`org.joda.time.DateTime$Property` v4 @kind this, `int` v5 ) @signature `Lorg/joda/time/DateTime$Property;.addToCopy:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3958f4.  v0:= v4.`org.joda.time.DateTime$Property.iInstant` @type ^`org.joda.time.DateTime` @kind object;
  #L3958f8.  v1:= v4.`org.joda.time.DateTime$Property.iField` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3958fc.  call temp:= `getMillis`(v0) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L395902.  v2:= temp @kind wide;
  #L395904.  call temp:= `add`(v1, v2, v5) @signature `Lorg/joda/time/DateTimeField;.add:(JI)J` @kind virtual;
  #L39590a.  v1:= temp @kind wide;
  #L39590c.  call temp:= `withMillis`(v0, v1) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L395912.  v5:= temp @kind object;
  #L395914.  return v5 @kind object;
}
procedure `org.joda.time.DateTime` `addToCopy`(`org.joda.time.DateTime$Property` v4 @kind this, `long` v5 ) @signature `Lorg/joda/time/DateTime$Property;.addToCopy:(J)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L395928.  v0:= v4.`org.joda.time.DateTime$Property.iInstant` @type ^`org.joda.time.DateTime` @kind object;
  #L39592c.  v1:= v4.`org.joda.time.DateTime$Property.iField` @type ^`org.joda.time.DateTimeField` @kind object;
  #L395930.  call temp:= `getMillis`(v0) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L395936.  v2:= temp @kind wide;
  #L395938.  call temp:= `add`(v1, v2, v5) @signature `Lorg/joda/time/DateTimeField;.add:(JJ)J` @kind virtual;
  #L39593e.  v5:= temp @kind wide;
  #L395940.  call temp:= `withMillis`(v0, v5) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L395946.  v5:= temp @kind object;
  #L395948.  return v5 @kind object;
}
procedure `org.joda.time.DateTime` `addWrapFieldToCopy`(`org.joda.time.DateTime$Property` v4 @kind this, `int` v5 ) @signature `Lorg/joda/time/DateTime$Property;.addWrapFieldToCopy:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39595c.  v0:= v4.`org.joda.time.DateTime$Property.iInstant` @type ^`org.joda.time.DateTime` @kind object;
  #L395960.  v1:= v4.`org.joda.time.DateTime$Property.iField` @type ^`org.joda.time.DateTimeField` @kind object;
  #L395964.  call temp:= `getMillis`(v0) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L39596a.  v2:= temp @kind wide;
  #L39596c.  call temp:= `addWrapField`(v1, v2, v5) @signature `Lorg/joda/time/DateTimeField;.addWrapField:(JI)J` @kind virtual;
  #L395972.  v1:= temp @kind wide;
  #L395974.  call temp:= `withMillis`(v0, v1) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L39597a.  v5:= temp @kind object;
  #L39597c.  return v5 @kind object;
}
procedure `org.joda.time.Chronology` `getChronology`(`org.joda.time.DateTime$Property` v1 @kind this) @signature `Lorg/joda/time/DateTime$Property;.getChronology:()Lorg/joda/time/Chronology;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3958d4.  v0:= v1.`org.joda.time.DateTime$Property.iInstant` @type ^`org.joda.time.DateTime` @kind object;
  #L3958d8.  call temp:= `getChronology`(v0) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3958de.  v0:= temp @kind object;
  #L3958e0.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `getDateTime`(`org.joda.time.DateTime$Property` v1 @kind this) @signature `Lorg/joda/time/DateTime$Property;.getDateTime:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L395990.  v0:= v1.`org.joda.time.DateTime$Property.iInstant` @type ^`org.joda.time.DateTime` @kind object;
  #L395994.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `getField`(`org.joda.time.DateTime$Property` v1 @kind this) @signature `Lorg/joda/time/DateTime$Property;.getField:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L395c30.  v0:= v1.`org.joda.time.DateTime$Property.iField` @type ^`org.joda.time.DateTimeField` @kind object;
  #L395c34.  return v0 @kind object;
}
procedure `long` `getMillis`(`org.joda.time.DateTime$Property` v2 @kind this) @signature `Lorg/joda/time/DateTime$Property;.getMillis:()J` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3958b4.  v0:= v2.`org.joda.time.DateTime$Property.iInstant` @type ^`org.joda.time.DateTime` @kind object;
  #L3958b8.  call temp:= `getMillis`(v0) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3958be.  v0:= temp @kind wide;
  #L3958c0.  return v0 @kind wide;
}
procedure `org.joda.time.DateTime` `roundCeilingCopy`(`org.joda.time.DateTime$Property` v4 @kind this) @signature `Lorg/joda/time/DateTime$Property;.roundCeilingCopy:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3959a8.  v0:= v4.`org.joda.time.DateTime$Property.iInstant` @type ^`org.joda.time.DateTime` @kind object;
  #L3959ac.  v1:= v4.`org.joda.time.DateTime$Property.iField` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3959b0.  call temp:= `getMillis`(v0) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3959b6.  v2:= temp @kind wide;
  #L3959b8.  call temp:= `roundCeiling`(v1, v2) @signature `Lorg/joda/time/DateTimeField;.roundCeiling:(J)J` @kind virtual;
  #L3959be.  v1:= temp @kind wide;
  #L3959c0.  call temp:= `withMillis`(v0, v1) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L3959c6.  v0:= temp @kind object;
  #L3959c8.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `roundFloorCopy`(`org.joda.time.DateTime$Property` v4 @kind this) @signature `Lorg/joda/time/DateTime$Property;.roundFloorCopy:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3959dc.  v0:= v4.`org.joda.time.DateTime$Property.iInstant` @type ^`org.joda.time.DateTime` @kind object;
  #L3959e0.  v1:= v4.`org.joda.time.DateTime$Property.iField` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3959e4.  call temp:= `getMillis`(v0) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3959ea.  v2:= temp @kind wide;
  #L3959ec.  call temp:= `roundFloor`(v1, v2) @signature `Lorg/joda/time/DateTimeField;.roundFloor:(J)J` @kind virtual;
  #L3959f2.  v1:= temp @kind wide;
  #L3959f4.  call temp:= `withMillis`(v0, v1) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L3959fa.  v0:= temp @kind object;
  #L3959fc.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `roundHalfCeilingCopy`(`org.joda.time.DateTime$Property` v4 @kind this) @signature `Lorg/joda/time/DateTime$Property;.roundHalfCeilingCopy:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L395a10.  v0:= v4.`org.joda.time.DateTime$Property.iInstant` @type ^`org.joda.time.DateTime` @kind object;
  #L395a14.  v1:= v4.`org.joda.time.DateTime$Property.iField` @type ^`org.joda.time.DateTimeField` @kind object;
  #L395a18.  call temp:= `getMillis`(v0) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L395a1e.  v2:= temp @kind wide;
  #L395a20.  call temp:= `roundHalfCeiling`(v1, v2) @signature `Lorg/joda/time/DateTimeField;.roundHalfCeiling:(J)J` @kind virtual;
  #L395a26.  v1:= temp @kind wide;
  #L395a28.  call temp:= `withMillis`(v0, v1) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L395a2e.  v0:= temp @kind object;
  #L395a30.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `roundHalfEvenCopy`(`org.joda.time.DateTime$Property` v4 @kind this) @signature `Lorg/joda/time/DateTime$Property;.roundHalfEvenCopy:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L395a44.  v0:= v4.`org.joda.time.DateTime$Property.iInstant` @type ^`org.joda.time.DateTime` @kind object;
  #L395a48.  v1:= v4.`org.joda.time.DateTime$Property.iField` @type ^`org.joda.time.DateTimeField` @kind object;
  #L395a4c.  call temp:= `getMillis`(v0) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L395a52.  v2:= temp @kind wide;
  #L395a54.  call temp:= `roundHalfEven`(v1, v2) @signature `Lorg/joda/time/DateTimeField;.roundHalfEven:(J)J` @kind virtual;
  #L395a5a.  v1:= temp @kind wide;
  #L395a5c.  call temp:= `withMillis`(v0, v1) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L395a62.  v0:= temp @kind object;
  #L395a64.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `roundHalfFloorCopy`(`org.joda.time.DateTime$Property` v4 @kind this) @signature `Lorg/joda/time/DateTime$Property;.roundHalfFloorCopy:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L395a78.  v0:= v4.`org.joda.time.DateTime$Property.iInstant` @type ^`org.joda.time.DateTime` @kind object;
  #L395a7c.  v1:= v4.`org.joda.time.DateTime$Property.iField` @type ^`org.joda.time.DateTimeField` @kind object;
  #L395a80.  call temp:= `getMillis`(v0) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L395a86.  v2:= temp @kind wide;
  #L395a88.  call temp:= `roundHalfFloor`(v1, v2) @signature `Lorg/joda/time/DateTimeField;.roundHalfFloor:(J)J` @kind virtual;
  #L395a8e.  v1:= temp @kind wide;
  #L395a90.  call temp:= `withMillis`(v0, v1) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L395a96.  v0:= temp @kind object;
  #L395a98.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `setCopy`(`org.joda.time.DateTime$Property` v4 @kind this, `int` v5 ) @signature `Lorg/joda/time/DateTime$Property;.setCopy:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L395aac.  v0:= v4.`org.joda.time.DateTime$Property.iInstant` @type ^`org.joda.time.DateTime` @kind object;
  #L395ab0.  v1:= v4.`org.joda.time.DateTime$Property.iField` @type ^`org.joda.time.DateTimeField` @kind object;
  #L395ab4.  call temp:= `getMillis`(v0) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L395aba.  v2:= temp @kind wide;
  #L395abc.  call temp:= `set`(v1, v2, v5) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L395ac2.  v1:= temp @kind wide;
  #L395ac4.  call temp:= `withMillis`(v0, v1) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L395aca.  v5:= temp @kind object;
  #L395acc.  return v5 @kind object;
}
procedure `org.joda.time.DateTime` `setCopy`(`org.joda.time.DateTime$Property` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/joda/time/DateTime$Property;.setCopy:(Ljava/lang/String;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L395ae0.  v0:= 0I;
  #L395ae2.  call temp:= `setCopy`(v1, v2, v0) @signature `Lorg/joda/time/DateTime$Property;.setCopy:(Ljava/lang/String;Ljava/util/Locale;)Lorg/joda/time/DateTime;` @kind virtual;
  #L395ae8.  v2:= temp @kind object;
  #L395aea.  return v2 @kind object;
}
procedure `org.joda.time.DateTime` `setCopy`(`org.joda.time.DateTime$Property` v4 @kind this, `java.lang.String` v5 @kind object, `java.util.Locale` v6 @kind object) @signature `Lorg/joda/time/DateTime$Property;.setCopy:(Ljava/lang/String;Ljava/util/Locale;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L395afc.  v0:= v4.`org.joda.time.DateTime$Property.iInstant` @type ^`org.joda.time.DateTime` @kind object;
  #L395b00.  v1:= v4.`org.joda.time.DateTime$Property.iField` @type ^`org.joda.time.DateTimeField` @kind object;
  #L395b04.  call temp:= `getMillis`(v0) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L395b0a.  v2:= temp @kind wide;
  #L395b0c.  call temp:= `set`(v1, v2, v5, v6) @signature `Lorg/joda/time/DateTimeField;.set:(JLjava/lang/String;Ljava/util/Locale;)J` @kind virtual;
  #L395b12.  v5:= temp @kind wide;
  #L395b14.  call temp:= `withMillis`(v0, v5) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L395b1a.  v5:= temp @kind object;
  #L395b1c.  return v5 @kind object;
}
procedure `org.joda.time.DateTime` `withMaximumValue`(`org.joda.time.DateTime$Property` v5 @kind this) @signature `Lorg/joda/time/DateTime$Property;.withMaximumValue:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L395b30.  call temp:= `getMaximumValue`(v5) @signature `Lorg/joda/time/field/AbstractReadableInstantFieldProperty;.getMaximumValue:()I` @kind virtual;
  #L395b36.  v0:= temp;
  #L395b38.  call temp:= `setCopy`(v5, v0) @signature `Lorg/joda/time/DateTime$Property;.setCopy:(I)Lorg/joda/time/DateTime;` @kind virtual;
  #L395b3e.  v0:= temp @kind object;
  #L395b40.  return v0 @kind object;
  #L395b42.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L395b44.  call temp:= `isIllegalInstant`(v0) @signature `Lorg/joda/time/IllegalInstantException;.isIllegalInstant:(Ljava/lang/Throwable;)Z` @kind static;
  #L395b4a.  v1:= temp;
  #L395b4c.  if v1 == 0 then goto L395b8c;
  #L395b50.  call temp:= `getChronology`(v5) @signature `Lorg/joda/time/DateTime$Property;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L395b56.  v0:= temp @kind object;
  #L395b58.  call temp:= `getZone`(v0) @signature `Lorg/joda/time/Chronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L395b5e.  v0:= temp @kind object;
  #L395b60.  call temp:= `getMillis`(v5) @signature `Lorg/joda/time/DateTime$Property;.getMillis:()J` @kind virtual;
  #L395b66.  v1:= temp @kind wide;
  #L395b68.  v3:= 86400000L;
  #L395b6e.  v1:= v1 + v3 @kind long;
  #L395b70.  call temp:= `previousTransition`(v0, v1) @signature `Lorg/joda/time/DateTimeZone;.previousTransition:(J)J` @kind virtual;
  #L395b76.  v0:= temp @kind wide;
  #L395b78.  v2:= new `org.joda.time.DateTime`;
  #L395b7c.  call temp:= `getChronology`(v5) @signature `Lorg/joda/time/DateTime$Property;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L395b82.  v3:= temp @kind object;
  #L395b84.  call `<init>`(v2, v0, v3) @signature `Lorg/joda/time/DateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L395b8a.  return v2 @kind object;
  #L395b8c.  throw v0;
  catch `java.lang.RuntimeException` @[L395b30..L395b40] goto L395b42;
}
procedure `org.joda.time.DateTime` `withMinimumValue`(`org.joda.time.DateTime$Property` v5 @kind this) @signature `Lorg/joda/time/DateTime$Property;.withMinimumValue:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L395bb0.  call temp:= `getMinimumValue`(v5) @signature `Lorg/joda/time/field/AbstractReadableInstantFieldProperty;.getMinimumValue:()I` @kind virtual;
  #L395bb6.  v0:= temp;
  #L395bb8.  call temp:= `setCopy`(v5, v0) @signature `Lorg/joda/time/DateTime$Property;.setCopy:(I)Lorg/joda/time/DateTime;` @kind virtual;
  #L395bbe.  v0:= temp @kind object;
  #L395bc0.  return v0 @kind object;
  #L395bc2.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L395bc4.  call temp:= `isIllegalInstant`(v0) @signature `Lorg/joda/time/IllegalInstantException;.isIllegalInstant:(Ljava/lang/Throwable;)Z` @kind static;
  #L395bca.  v1:= temp;
  #L395bcc.  if v1 == 0 then goto L395c0c;
  #L395bd0.  call temp:= `getChronology`(v5) @signature `Lorg/joda/time/DateTime$Property;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L395bd6.  v0:= temp @kind object;
  #L395bd8.  call temp:= `getZone`(v0) @signature `Lorg/joda/time/Chronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L395bde.  v0:= temp @kind object;
  #L395be0.  call temp:= `getMillis`(v5) @signature `Lorg/joda/time/DateTime$Property;.getMillis:()J` @kind virtual;
  #L395be6.  v1:= temp @kind wide;
  #L395be8.  v3:= 86400000L;
  #L395bee.  v1:= v1 - v3 @kind long;
  #L395bf0.  call temp:= `nextTransition`(v0, v1) @signature `Lorg/joda/time/DateTimeZone;.nextTransition:(J)J` @kind virtual;
  #L395bf6.  v0:= temp @kind wide;
  #L395bf8.  v2:= new `org.joda.time.DateTime`;
  #L395bfc.  call temp:= `getChronology`(v5) @signature `Lorg/joda/time/DateTime$Property;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L395c02.  v3:= temp @kind object;
  #L395c04.  call `<init>`(v2, v0, v3) @signature `Lorg/joda/time/DateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L395c0a.  return v2 @kind object;
  #L395c0c.  throw v0;
  catch `java.lang.RuntimeException` @[L395bb0..L395bc0] goto L395bc2;
}
