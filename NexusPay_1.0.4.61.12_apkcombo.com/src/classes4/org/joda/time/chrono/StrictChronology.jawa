record `org.joda.time.chrono.StrictChronology` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.chrono.AssembledChronology` @kind class {
  `org.joda.time.Chronology` `org.joda.time.chrono.StrictChronology.iWithUTC` @AccessFlag PRIVATE_TRANSIENT;
}
global `long` `@@org.joda.time.chrono.StrictChronology.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.chrono.StrictChronology` v1 @kind this, `org.joda.time.Chronology` v2 @kind object) @signature `Lorg/joda/time/chrono/StrictChronology;.<init>:(Lorg/joda/time/Chronology;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L3b8724.  v0:= 0I;
  #L3b8726.  call `<init>`(v1, v2, v0) @signature `Lorg/joda/time/chrono/AssembledChronology;.<init>:(Lorg/joda/time/Chronology;Ljava/lang/Object;)V` @kind direct;
  #L3b872c.  return @kind void;
}
procedure `org.joda.time.DateTimeField` `convertField`(`org.joda.time.DateTimeField` v0 @kind object) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L3b86d8.  call temp:= `getInstance`(v0) @signature `Lorg/joda/time/field/StrictDateTimeField;.getInstance:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b86de.  v0:= temp @kind object;
  #L3b86e0.  return v0 @kind object;
}
procedure `org.joda.time.chrono.StrictChronology` `getInstance`(`org.joda.time.Chronology` v1 @kind object) @signature `Lorg/joda/time/chrono/StrictChronology;.getInstance:(Lorg/joda/time/Chronology;)Lorg/joda/time/chrono/StrictChronology;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b86f4.  if v1 == 0 then goto L3b8704;
  #L3b86f8.  v0:= new `org.joda.time.chrono.StrictChronology`;
  #L3b86fc.  call `<init>`(v0, v1) @signature `Lorg/joda/time/chrono/StrictChronology;.<init>:(Lorg/joda/time/Chronology;)V` @kind direct;
  #L3b8702.  return v0 @kind object;
  #L3b8704.  v1:= new `java.lang.IllegalArgumentException`;
  #L3b8708.  v0:= "Must supply a chronology" @kind object;
  #L3b870c.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b8712.  throw v1;
}
procedure `void` `assemble`(`org.joda.time.chrono.StrictChronology` v1 @kind this, `org.joda.time.chrono.AssembledChronology$Fields` v2 @kind object) @signature `Lorg/joda/time/chrono/StrictChronology;.assemble:(Lorg/joda/time/chrono/AssembledChronology$Fields;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3b8740.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.year` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b8744.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b874a.  v0:= temp @kind object;
  #L3b874c.  v2.`org.joda.time.chrono.AssembledChronology$Fields.year` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b8750.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.yearOfEra` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b8754.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b875a.  v0:= temp @kind object;
  #L3b875c.  v2.`org.joda.time.chrono.AssembledChronology$Fields.yearOfEra` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b8760.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.yearOfCentury` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b8764.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b876a.  v0:= temp @kind object;
  #L3b876c.  v2.`org.joda.time.chrono.AssembledChronology$Fields.yearOfCentury` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b8770.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.centuryOfEra` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b8774.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b877a.  v0:= temp @kind object;
  #L3b877c.  v2.`org.joda.time.chrono.AssembledChronology$Fields.centuryOfEra` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b8780.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.era` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b8784.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b878a.  v0:= temp @kind object;
  #L3b878c.  v2.`org.joda.time.chrono.AssembledChronology$Fields.era` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b8790.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.dayOfWeek` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b8794.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b879a.  v0:= temp @kind object;
  #L3b879c.  v2.`org.joda.time.chrono.AssembledChronology$Fields.dayOfWeek` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b87a0.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.dayOfMonth` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b87a4.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b87aa.  v0:= temp @kind object;
  #L3b87ac.  v2.`org.joda.time.chrono.AssembledChronology$Fields.dayOfMonth` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b87b0.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.dayOfYear` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b87b4.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b87ba.  v0:= temp @kind object;
  #L3b87bc.  v2.`org.joda.time.chrono.AssembledChronology$Fields.dayOfYear` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b87c0.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.monthOfYear` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b87c4.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b87ca.  v0:= temp @kind object;
  #L3b87cc.  v2.`org.joda.time.chrono.AssembledChronology$Fields.monthOfYear` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b87d0.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.weekOfWeekyear` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b87d4.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b87da.  v0:= temp @kind object;
  #L3b87dc.  v2.`org.joda.time.chrono.AssembledChronology$Fields.weekOfWeekyear` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b87e0.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.weekyear` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b87e4.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b87ea.  v0:= temp @kind object;
  #L3b87ec.  v2.`org.joda.time.chrono.AssembledChronology$Fields.weekyear` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b87f0.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.weekyearOfCentury` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b87f4.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b87fa.  v0:= temp @kind object;
  #L3b87fc.  v2.`org.joda.time.chrono.AssembledChronology$Fields.weekyearOfCentury` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b8800.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.millisOfSecond` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b8804.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b880a.  v0:= temp @kind object;
  #L3b880c.  v2.`org.joda.time.chrono.AssembledChronology$Fields.millisOfSecond` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b8810.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.millisOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b8814.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b881a.  v0:= temp @kind object;
  #L3b881c.  v2.`org.joda.time.chrono.AssembledChronology$Fields.millisOfDay` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b8820.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.secondOfMinute` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b8824.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b882a.  v0:= temp @kind object;
  #L3b882c.  v2.`org.joda.time.chrono.AssembledChronology$Fields.secondOfMinute` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b8830.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.secondOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b8834.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b883a.  v0:= temp @kind object;
  #L3b883c.  v2.`org.joda.time.chrono.AssembledChronology$Fields.secondOfDay` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b8840.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.minuteOfHour` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b8844.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b884a.  v0:= temp @kind object;
  #L3b884c.  v2.`org.joda.time.chrono.AssembledChronology$Fields.minuteOfHour` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b8850.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.minuteOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b8854.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b885a.  v0:= temp @kind object;
  #L3b885c.  v2.`org.joda.time.chrono.AssembledChronology$Fields.minuteOfDay` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b8860.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.hourOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b8864.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b886a.  v0:= temp @kind object;
  #L3b886c.  v2.`org.joda.time.chrono.AssembledChronology$Fields.hourOfDay` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b8870.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.hourOfHalfday` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b8874.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b887a.  v0:= temp @kind object;
  #L3b887c.  v2.`org.joda.time.chrono.AssembledChronology$Fields.hourOfHalfday` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b8880.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.clockhourOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b8884.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b888a.  v0:= temp @kind object;
  #L3b888c.  v2.`org.joda.time.chrono.AssembledChronology$Fields.clockhourOfDay` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b8890.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.clockhourOfHalfday` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b8894.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b889a.  v0:= temp @kind object;
  #L3b889c.  v2.`org.joda.time.chrono.AssembledChronology$Fields.clockhourOfHalfday` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b88a0.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.halfdayOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b88a4.  call temp:= `convertField`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b88aa.  v0:= temp @kind object;
  #L3b88ac.  v2.`org.joda.time.chrono.AssembledChronology$Fields.halfdayOfDay` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b88b0.  return @kind void;
}
procedure `boolean` `equals`(`org.joda.time.chrono.StrictChronology` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/joda/time/chrono/StrictChronology;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b856c.  if v1 != v2 then goto L3b8574;
  #L3b8570.  v2:= 1I;
  #L3b8572.  return v2;
  #L3b8574.  v0:= instanceof @variable v2 @type ^`org.joda.time.chrono.StrictChronology` @kind boolean;
  #L3b8578.  if v0 != 0 then goto L3b8580;
  #L3b857c.  v2:= 0I;
  #L3b857e.  return v2;
  #L3b8580.  v2:= (`org.joda.time.chrono.StrictChronology`) v2 @kind object;
  #L3b8584.  call temp:= `getBase`(v1) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b858a.  v0:= temp @kind object;
  #L3b858c.  call temp:= `getBase`(v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b8592.  v2:= temp @kind object;
  #L3b8594.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b859a.  v2:= temp;
  #L3b859c.  return v2;
}
procedure `int` `hashCode`(`org.joda.time.chrono.StrictChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/StrictChronology;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b85b0.  call temp:= `getBase`(v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b85b6.  v0:= temp @kind object;
  #L3b85b8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3b85be.  v0:= temp;
  #L3b85c0.  v0:= v0 * 7;
  #L3b85c4.  v1:= 352831696I;
  #L3b85ca.  v0:= v0 + v1 @kind int;
  #L3b85cc.  return v0;
}
procedure `java.lang.String` `toString`(`org.joda.time.chrono.StrictChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/StrictChronology;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b85e0.  v0:= new `java.lang.StringBuilder`;
  #L3b85e4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b85ea.  v1:= "StrictChronology[" @kind object;
  #L3b85ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b85f4.  call temp:= `getBase`(v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b85fa.  v1:= temp @kind object;
  #L3b85fc.  call temp:= `toString`(v1) @signature `Lorg/joda/time/Chronology;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b8602.  v1:= temp @kind object;
  #L3b8604.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b860a.  v1:= 93I;
  #L3b860e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b8614.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b861a.  v0:= temp @kind object;
  #L3b861c.  return v0 @kind object;
}
procedure `org.joda.time.Chronology` `withUTC`(`org.joda.time.chrono.StrictChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/StrictChronology;.withUTC:()Lorg/joda/time/Chronology;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b8630.  v0:= v2.`org.joda.time.chrono.StrictChronology.iWithUTC` @type ^`org.joda.time.Chronology` @kind object;
  #L3b8634.  if v0 != 0 then goto L3b866a;
  #L3b8638.  call temp:= `getZone`(v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b863e.  v0:= temp @kind object;
  #L3b8640.  v1:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3b8644.  if v0 != v1 then goto L3b864e;
  #L3b8648.  v2.`org.joda.time.chrono.StrictChronology.iWithUTC` @type ^`org.joda.time.Chronology` := v2 @kind object;
  #L3b864c.  goto L3b866a;
  #L3b864e.  call temp:= `getBase`(v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b8654.  v0:= temp @kind object;
  #L3b8656.  call temp:= `withUTC`(v0) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b865c.  v0:= temp @kind object;
  #L3b865e.  call temp:= `getInstance`(v0) @signature `Lorg/joda/time/chrono/StrictChronology;.getInstance:(Lorg/joda/time/Chronology;)Lorg/joda/time/chrono/StrictChronology;` @kind static;
  #L3b8664.  v0:= temp @kind object;
  #L3b8666.  v2.`org.joda.time.chrono.StrictChronology.iWithUTC` @type ^`org.joda.time.Chronology` := v0 @kind object;
  #L3b866a.  v0:= v2.`org.joda.time.chrono.StrictChronology.iWithUTC` @type ^`org.joda.time.Chronology` @kind object;
  #L3b866e.  return v0 @kind object;
}
procedure `org.joda.time.Chronology` `withZone`(`org.joda.time.chrono.StrictChronology` v1 @kind this, `org.joda.time.DateTimeZone` v2 @kind object) @signature `Lorg/joda/time/chrono/StrictChronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b8680.  if v2 != 0 then goto L3b868c;
  #L3b8684.  call temp:= `getDefault`() @signature `Lorg/joda/time/DateTimeZone;.getDefault:()Lorg/joda/time/DateTimeZone;` @kind static;
  #L3b868a.  v2:= temp @kind object;
  #L3b868c.  v0:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3b8690.  if v2 != v0 then goto L3b869e;
  #L3b8694.  call temp:= `withUTC`(v1) @signature `Lorg/joda/time/chrono/StrictChronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b869a.  v2:= temp @kind object;
  #L3b869c.  return v2 @kind object;
  #L3b869e.  call temp:= `getZone`(v1) @signature `Lorg/joda/time/chrono/AssembledChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b86a4.  v0:= temp @kind object;
  #L3b86a6.  if v2 != v0 then goto L3b86ac;
  #L3b86aa.  return v1 @kind object;
  #L3b86ac.  call temp:= `getBase`(v1) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b86b2.  v0:= temp @kind object;
  #L3b86b4.  call temp:= `withZone`(v0, v2) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3b86ba.  v2:= temp @kind object;
  #L3b86bc.  call temp:= `getInstance`(v2) @signature `Lorg/joda/time/chrono/StrictChronology;.getInstance:(Lorg/joda/time/Chronology;)Lorg/joda/time/chrono/StrictChronology;` @kind static;
  #L3b86c2.  v2:= temp @kind object;
  #L3b86c4.  return v2 @kind object;
}
