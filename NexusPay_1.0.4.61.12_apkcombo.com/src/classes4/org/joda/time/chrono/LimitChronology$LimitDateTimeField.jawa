record `org.joda.time.chrono.LimitChronology$LimitDateTimeField` @kind class @AccessFlag  extends `org.joda.time.field.DecoratedDateTimeField` @kind class {
  `org.joda.time.DurationField` `org.joda.time.chrono.LimitChronology$LimitDateTimeField.iDurationField` @AccessFlag PRIVATE_FINAL;
  `org.joda.time.DurationField` `org.joda.time.chrono.LimitChronology$LimitDateTimeField.iLeapDurationField` @AccessFlag PRIVATE_FINAL;
  `org.joda.time.DurationField` `org.joda.time.chrono.LimitChronology$LimitDateTimeField.iRangeDurationField` @AccessFlag PRIVATE_FINAL;
  `org.joda.time.chrono.LimitChronology` `org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @AccessFlag FINAL_SYNTHETIC;
}
global `long` `@@org.joda.time.chrono.LimitChronology$LimitDateTimeField.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v0 @kind this, `org.joda.time.chrono.LimitChronology` v1 @kind object, `org.joda.time.DateTimeField` v2 @kind object, `org.joda.time.DurationField` v3 @kind object, `org.joda.time.DurationField` v4 @kind object, `org.joda.time.DurationField` v5 @kind object) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.<init>:(Lorg/joda/time/chrono/LimitChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;Lorg/joda/time/DurationField;Lorg/joda/time/DurationField;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3b7abc.  v0.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` := v1 @kind object;
  #L3b7ac0.  call temp:= `getType`(v2) @signature `Lorg/joda/time/DateTimeField;.getType:()Lorg/joda/time/DateTimeFieldType;` @kind virtual;
  #L3b7ac6.  v1:= temp @kind object;
  #L3b7ac8.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V` @kind direct;
  #L3b7ace.  v0.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.iDurationField` @type ^`org.joda.time.DurationField` := v3 @kind object;
  #L3b7ad2.  v0.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.iRangeDurationField` @type ^`org.joda.time.DurationField` := v4 @kind object;
  #L3b7ad6.  v0.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.iLeapDurationField` @type ^`org.joda.time.DurationField` := v5 @kind object;
  #L3b7ada.  return @kind void;
}
procedure `long` `add`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.add:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b77a0.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b77a4.  v1:= 0I;
  #L3b77a6.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b77ac.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b77b2.  v0:= temp @kind object;
  #L3b77b4.  call temp:= `add`(v0, v3, v5) @signature `Lorg/joda/time/DateTimeField;.add:(JI)J` @kind virtual;
  #L3b77ba.  v3:= temp @kind wide;
  #L3b77bc.  v5:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b77c0.  v0:= "resulting" @kind object;
  #L3b77c4.  call `checkLimits`(v5, v3, v0) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b77ca.  return v3 @kind wide;
}
procedure `long` `add`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 , `long` v5 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.add:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b77dc.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b77e0.  v1:= 0I;
  #L3b77e2.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b77e8.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b77ee.  v0:= temp @kind object;
  #L3b77f0.  call temp:= `add`(v0, v3, v5) @signature `Lorg/joda/time/DateTimeField;.add:(JJ)J` @kind virtual;
  #L3b77f6.  v3:= temp @kind wide;
  #L3b77f8.  v5:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b77fc.  v6:= "resulting" @kind object;
  #L3b7800.  call `checkLimits`(v5, v3, v6) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7806.  return v3 @kind wide;
}
procedure `long` `addWrapField`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.addWrapField:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7818.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b781c.  v1:= 0I;
  #L3b781e.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7824.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b782a.  v0:= temp @kind object;
  #L3b782c.  call temp:= `addWrapField`(v0, v3, v5) @signature `Lorg/joda/time/DateTimeField;.addWrapField:(JI)J` @kind virtual;
  #L3b7832.  v3:= temp @kind wide;
  #L3b7834.  v5:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7838.  v0:= "resulting" @kind object;
  #L3b783c.  call `checkLimits`(v5, v3, v0) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7842.  return v3 @kind wide;
}
procedure `int` `get`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.get:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b75f8.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b75fc.  v1:= 0I;
  #L3b75fe.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7604.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b760a.  v0:= temp @kind object;
  #L3b760c.  call temp:= `get`(v0, v3) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3b7612.  v3:= temp;
  #L3b7614.  return v3;
}
procedure `java.lang.String` `getAsShortText`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 , `java.util.Locale` v5 @kind object) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.getAsShortText:(JLjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7740.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7744.  v1:= 0I;
  #L3b7746.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b774c.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b7752.  v0:= temp @kind object;
  #L3b7754.  call temp:= `getAsShortText`(v0, v3, v5) @signature `Lorg/joda/time/DateTimeField;.getAsShortText:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3b775a.  v3:= temp @kind object;
  #L3b775c.  return v3 @kind object;
}
procedure `java.lang.String` `getAsText`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 , `java.util.Locale` v5 @kind object) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.getAsText:(JLjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7770.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7774.  v1:= 0I;
  #L3b7776.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b777c.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b7782.  v0:= temp @kind object;
  #L3b7784.  call temp:= `getAsText`(v0, v3, v5) @signature `Lorg/joda/time/DateTimeField;.getAsText:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3b778a.  v3:= temp @kind object;
  #L3b778c.  return v3 @kind object;
}
procedure `int` `getDifference`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 , `long` v5 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.getDifference:(JJ)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7628.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b762c.  v1:= "minuend" @kind object;
  #L3b7630.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7636.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b763a.  v1:= "subtrahend" @kind object;
  #L3b763e.  call `checkLimits`(v0, v5, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7644.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b764a.  v0:= temp @kind object;
  #L3b764c.  call temp:= `getDifference`(v0, v3, v5) @signature `Lorg/joda/time/DateTimeField;.getDifference:(JJ)I` @kind virtual;
  #L3b7652.  v3:= temp;
  #L3b7654.  return v3;
}
procedure `long` `getDifferenceAsLong`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 , `long` v5 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.getDifferenceAsLong:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7854.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7858.  v1:= "minuend" @kind object;
  #L3b785c.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7862.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7866.  v1:= "subtrahend" @kind object;
  #L3b786a.  call `checkLimits`(v0, v5, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7870.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b7876.  v0:= temp @kind object;
  #L3b7878.  call temp:= `getDifferenceAsLong`(v0, v3, v5) @signature `Lorg/joda/time/DateTimeField;.getDifferenceAsLong:(JJ)J` @kind virtual;
  #L3b787e.  v3:= temp @kind wide;
  #L3b7880.  return v3 @kind wide;
}
procedure `org.joda.time.DurationField` `getDurationField`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v1 @kind this) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3b7a74.  v0:= v1.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.iDurationField` @type ^`org.joda.time.DurationField` @kind object;
  #L3b7a78.  return v0 @kind object;
}
procedure `int` `getLeapAmount`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.getLeapAmount:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7668.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b766c.  v1:= 0I;
  #L3b766e.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7674.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b767a.  v0:= temp @kind object;
  #L3b767c.  call temp:= `getLeapAmount`(v0, v3) @signature `Lorg/joda/time/DateTimeField;.getLeapAmount:(J)I` @kind virtual;
  #L3b7682.  v3:= temp;
  #L3b7684.  return v3;
}
procedure `org.joda.time.DurationField` `getLeapDurationField`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v1 @kind this) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.getLeapDurationField:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3b7a8c.  v0:= v1.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.iLeapDurationField` @type ^`org.joda.time.DurationField` @kind object;
  #L3b7a90.  return v0 @kind object;
}
procedure `int` `getMaximumShortTextLength`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v1 @kind this, `java.util.Locale` v2 @kind object) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.getMaximumShortTextLength:(Ljava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b7698.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b769e.  v0:= temp @kind object;
  #L3b76a0.  call temp:= `getMaximumShortTextLength`(v0, v2) @signature `Lorg/joda/time/DateTimeField;.getMaximumShortTextLength:(Ljava/util/Locale;)I` @kind virtual;
  #L3b76a6.  v2:= temp;
  #L3b76a8.  return v2;
}
procedure `int` `getMaximumTextLength`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v1 @kind this, `java.util.Locale` v2 @kind object) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.getMaximumTextLength:(Ljava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b76bc.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b76c2.  v0:= temp @kind object;
  #L3b76c4.  call temp:= `getMaximumTextLength`(v0, v2) @signature `Lorg/joda/time/DateTimeField;.getMaximumTextLength:(Ljava/util/Locale;)I` @kind virtual;
  #L3b76ca.  v2:= temp;
  #L3b76cc.  return v2;
}
procedure `int` `getMaximumValue`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.getMaximumValue:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b76e0.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b76e4.  v1:= 0I;
  #L3b76e6.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b76ec.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b76f2.  v0:= temp @kind object;
  #L3b76f4.  call temp:= `getMaximumValue`(v0, v3) @signature `Lorg/joda/time/DateTimeField;.getMaximumValue:(J)I` @kind virtual;
  #L3b76fa.  v3:= temp;
  #L3b76fc.  return v3;
}
procedure `int` `getMinimumValue`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.getMinimumValue:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7710.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7714.  v1:= 0I;
  #L3b7716.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b771c.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b7722.  v0:= temp @kind object;
  #L3b7724.  call temp:= `getMinimumValue`(v0, v3) @signature `Lorg/joda/time/DateTimeField;.getMinimumValue:(J)I` @kind virtual;
  #L3b772a.  v3:= temp;
  #L3b772c.  return v3;
}
procedure `org.joda.time.DurationField` `getRangeDurationField`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v1 @kind this) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.getRangeDurationField:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3b7aa4.  v0:= v1.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.iRangeDurationField` @type ^`org.joda.time.DurationField` @kind object;
  #L3b7aa8.  return v0 @kind object;
}
procedure `boolean` `isLeap`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.isLeap:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b75c8.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b75cc.  v1:= 0I;
  #L3b75ce.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b75d4.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b75da.  v0:= temp @kind object;
  #L3b75dc.  call temp:= `isLeap`(v0, v3) @signature `Lorg/joda/time/DateTimeField;.isLeap:(J)Z` @kind virtual;
  #L3b75e2.  v3:= temp;
  #L3b75e4.  return v3;
}
procedure `long` `remainder`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.remainder:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7894.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7898.  v1:= 0I;
  #L3b789a.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b78a0.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b78a6.  v0:= temp @kind object;
  #L3b78a8.  call temp:= `remainder`(v0, v3) @signature `Lorg/joda/time/DateTimeField;.remainder:(J)J` @kind virtual;
  #L3b78ae.  v3:= temp @kind wide;
  #L3b78b0.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b78b4.  v1:= "resulting" @kind object;
  #L3b78b8.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b78be.  return v3 @kind wide;
}
procedure `long` `roundCeiling`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.roundCeiling:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b78d0.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b78d4.  v1:= 0I;
  #L3b78d6.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b78dc.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b78e2.  v0:= temp @kind object;
  #L3b78e4.  call temp:= `roundCeiling`(v0, v3) @signature `Lorg/joda/time/DateTimeField;.roundCeiling:(J)J` @kind virtual;
  #L3b78ea.  v3:= temp @kind wide;
  #L3b78ec.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b78f0.  v1:= "resulting" @kind object;
  #L3b78f4.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b78fa.  return v3 @kind wide;
}
procedure `long` `roundFloor`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.roundFloor:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b790c.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7910.  v1:= 0I;
  #L3b7912.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7918.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b791e.  v0:= temp @kind object;
  #L3b7920.  call temp:= `roundFloor`(v0, v3) @signature `Lorg/joda/time/DateTimeField;.roundFloor:(J)J` @kind virtual;
  #L3b7926.  v3:= temp @kind wide;
  #L3b7928.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b792c.  v1:= "resulting" @kind object;
  #L3b7930.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7936.  return v3 @kind wide;
}
procedure `long` `roundHalfCeiling`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.roundHalfCeiling:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7948.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b794c.  v1:= 0I;
  #L3b794e.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7954.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b795a.  v0:= temp @kind object;
  #L3b795c.  call temp:= `roundHalfCeiling`(v0, v3) @signature `Lorg/joda/time/DateTimeField;.roundHalfCeiling:(J)J` @kind virtual;
  #L3b7962.  v3:= temp @kind wide;
  #L3b7964.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7968.  v1:= "resulting" @kind object;
  #L3b796c.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7972.  return v3 @kind wide;
}
procedure `long` `roundHalfEven`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.roundHalfEven:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7984.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7988.  v1:= 0I;
  #L3b798a.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7990.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b7996.  v0:= temp @kind object;
  #L3b7998.  call temp:= `roundHalfEven`(v0, v3) @signature `Lorg/joda/time/DateTimeField;.roundHalfEven:(J)J` @kind virtual;
  #L3b799e.  v3:= temp @kind wide;
  #L3b79a0.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b79a4.  v1:= "resulting" @kind object;
  #L3b79a8.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b79ae.  return v3 @kind wide;
}
procedure `long` `roundHalfFloor`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.roundHalfFloor:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b79c0.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b79c4.  v1:= 0I;
  #L3b79c6.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b79cc.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b79d2.  v0:= temp @kind object;
  #L3b79d4.  call temp:= `roundHalfFloor`(v0, v3) @signature `Lorg/joda/time/DateTimeField;.roundHalfFloor:(J)J` @kind virtual;
  #L3b79da.  v3:= temp @kind wide;
  #L3b79dc.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b79e0.  v1:= "resulting" @kind object;
  #L3b79e4.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b79ea.  return v3 @kind wide;
}
procedure `long` `set`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.set:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b79fc.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7a00.  v1:= 0I;
  #L3b7a02.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7a08.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b7a0e.  v0:= temp @kind object;
  #L3b7a10.  call temp:= `set`(v0, v3, v5) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3b7a16.  v3:= temp @kind wide;
  #L3b7a18.  v5:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7a1c.  v0:= "resulting" @kind object;
  #L3b7a20.  call `checkLimits`(v5, v3, v0) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7a26.  return v3 @kind wide;
}
procedure `long` `set`(`org.joda.time.chrono.LimitChronology$LimitDateTimeField` v2 @kind this, `long` v3 , `java.lang.String` v5 @kind object, `java.util.Locale` v6 @kind object) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDateTimeField;.set:(JLjava/lang/String;Ljava/util/Locale;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7a38.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7a3c.  v1:= 0I;
  #L3b7a3e.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7a44.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b7a4a.  v0:= temp @kind object;
  #L3b7a4c.  call temp:= `set`(v0, v3, v5, v6) @signature `Lorg/joda/time/DateTimeField;.set:(JLjava/lang/String;Ljava/util/Locale;)J` @kind virtual;
  #L3b7a52.  v3:= temp @kind wide;
  #L3b7a54.  v5:= v2.`org.joda.time.chrono.LimitChronology$LimitDateTimeField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7a58.  v6:= "resulting" @kind object;
  #L3b7a5c.  call `checkLimits`(v5, v3, v6) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7a62.  return v3 @kind wide;
}
