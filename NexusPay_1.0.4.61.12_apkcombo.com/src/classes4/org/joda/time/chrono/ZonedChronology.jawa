record `org.joda.time.chrono.ZonedChronology` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.chrono.AssembledChronology` @kind class {
}
global `long` `@@org.joda.time.chrono.ZonedChronology.NEAR_ZERO` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.joda.time.chrono.ZonedChronology.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.chrono.ZonedChronology` v0 @kind this, `org.joda.time.Chronology` v1 @kind object, `org.joda.time.DateTimeZone` v2 @kind object) @signature `Lorg/joda/time/chrono/ZonedChronology;.<init>:(Lorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3b985c.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.<init>:(Lorg/joda/time/Chronology;Ljava/lang/Object;)V` @kind direct;
  #L3b9862.  return @kind void;
}
procedure `org.joda.time.DateTimeField` `convertField`(`org.joda.time.chrono.ZonedChronology` v7 @kind this, `org.joda.time.DateTimeField` v8 @kind object, `java.util.HashMap` v9 @kind object) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3b96f8.  if v8 == 0 then goto L3b9772;
  #L3b96fc.  call temp:= `isSupported`(v8) @signature `Lorg/joda/time/DateTimeField;.isSupported:()Z` @kind virtual;
  #L3b9702.  v0:= temp;
  #L3b9704.  if v0 != 0 then goto L3b970a;
  #L3b9708.  goto L3b9772;
  #L3b970a.  call temp:= `containsKey`(v9, v8) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b9710.  v0:= temp;
  #L3b9712.  if v0 == 0 then goto L3b9724;
  #L3b9716.  call temp:= `get`(v9, v8) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3b971c.  v8:= temp @kind object;
  #L3b971e.  v8:= (`org.joda.time.DateTimeField`) v8 @kind object;
  #L3b9722.  return v8 @kind object;
  #L3b9724.  v6:= new `org.joda.time.chrono.ZonedChronology$ZonedDateTimeField`;
  #L3b9728.  call temp:= `getZone`(v7) @signature `Lorg/joda/time/chrono/ZonedChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b972e.  v2:= temp @kind object;
  #L3b9730.  call temp:= `getDurationField`(v8) @signature `Lorg/joda/time/DateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3b9736.  v0:= temp @kind object;
  #L3b9738.  call temp:= `convertField`(v7, v0, v9) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DurationField;Ljava/util/HashMap;)Lorg/joda/time/DurationField;` @kind direct;
  #L3b973e.  v3:= temp @kind object;
  #L3b9740.  call temp:= `getRangeDurationField`(v8) @signature `Lorg/joda/time/DateTimeField;.getRangeDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3b9746.  v0:= temp @kind object;
  #L3b9748.  call temp:= `convertField`(v7, v0, v9) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DurationField;Ljava/util/HashMap;)Lorg/joda/time/DurationField;` @kind direct;
  #L3b974e.  v4:= temp @kind object;
  #L3b9750.  call temp:= `getLeapDurationField`(v8) @signature `Lorg/joda/time/DateTimeField;.getLeapDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3b9756.  v0:= temp @kind object;
  #L3b9758.  call temp:= `convertField`(v7, v0, v9) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DurationField;Ljava/util/HashMap;)Lorg/joda/time/DurationField;` @kind direct;
  #L3b975e.  v5:= temp @kind object;
  #L3b9760.  v0:= v6 @kind object;
  #L3b9762.  v1:= v8 @kind object;
  #L3b9764.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/joda/time/chrono/ZonedChronology$ZonedDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeZone;Lorg/joda/time/DurationField;Lorg/joda/time/DurationField;Lorg/joda/time/DurationField;)V` @kind direct;
  #L3b976a.  call temp:= `put`(v9, v8, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3b9770.  return v6 @kind object;
  #L3b9772.  return v8 @kind object;
}
procedure `org.joda.time.DurationField` `convertField`(`org.joda.time.chrono.ZonedChronology` v2 @kind this, `org.joda.time.DurationField` v3 @kind object, `java.util.HashMap` v4 @kind object) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DurationField;Ljava/util/HashMap;)Lorg/joda/time/DurationField;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3b97a4.  if v3 == 0 then goto L3b97ea;
  #L3b97a8.  call temp:= `isSupported`(v3) @signature `Lorg/joda/time/DurationField;.isSupported:()Z` @kind virtual;
  #L3b97ae.  v0:= temp;
  #L3b97b0.  if v0 != 0 then goto L3b97b6;
  #L3b97b4.  goto L3b97ea;
  #L3b97b6.  call temp:= `containsKey`(v4, v3) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b97bc.  v0:= temp;
  #L3b97be.  if v0 == 0 then goto L3b97d0;
  #L3b97c2.  call temp:= `get`(v4, v3) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3b97c8.  v3:= temp @kind object;
  #L3b97ca.  v3:= (`org.joda.time.DurationField`) v3 @kind object;
  #L3b97ce.  return v3 @kind object;
  #L3b97d0.  v0:= new `org.joda.time.chrono.ZonedChronology$ZonedDurationField`;
  #L3b97d4.  call temp:= `getZone`(v2) @signature `Lorg/joda/time/chrono/ZonedChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b97da.  v1:= temp @kind object;
  #L3b97dc.  call `<init>`(v0, v3, v1) @signature `Lorg/joda/time/chrono/ZonedChronology$ZonedDurationField;.<init>:(Lorg/joda/time/DurationField;Lorg/joda/time/DateTimeZone;)V` @kind direct;
  #L3b97e2.  call temp:= `put`(v4, v3, v0) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3b97e8.  return v0 @kind object;
  #L3b97ea.  return v3 @kind object;
}
procedure `org.joda.time.chrono.ZonedChronology` `getInstance`(`org.joda.time.Chronology` v1 @kind object, `org.joda.time.DateTimeZone` v2 @kind object) @signature `Lorg/joda/time/chrono/ZonedChronology;.getInstance:(Lorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/ZonedChronology;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b97fc.  if v1 == 0 then goto L3b983c;
  #L3b9800.  call temp:= `withUTC`(v1) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b9806.  v1:= temp @kind object;
  #L3b9808.  if v1 == 0 then goto L3b982c;
  #L3b980c.  if v2 == 0 then goto L3b981c;
  #L3b9810.  v0:= new `org.joda.time.chrono.ZonedChronology`;
  #L3b9814.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/chrono/ZonedChronology;.<init>:(Lorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;)V` @kind direct;
  #L3b981a.  return v0 @kind object;
  #L3b981c.  v1:= new `java.lang.IllegalArgumentException`;
  #L3b9820.  v2:= "DateTimeZone must not be null" @kind object;
  #L3b9824.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b982a.  throw v1;
  #L3b982c.  v1:= new `java.lang.IllegalArgumentException`;
  #L3b9830.  v2:= "UTC chronology must not be null" @kind object;
  #L3b9834.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b983a.  throw v1;
  #L3b983c.  v1:= new `java.lang.IllegalArgumentException`;
  #L3b9840.  v2:= "Must supply a chronology" @kind object;
  #L3b9844.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b984a.  throw v1;
}
procedure `long` `localToUTC`(`org.joda.time.chrono.ZonedChronology` v13 @kind this, `long` v14 ) @signature `Lorg/joda/time/chrono/ZonedChronology;.localToUTC:(J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L3b95ec.  v0:= 9223372036854775807L;
  #L3b95f6.  v2:= lcmp(v14, v0);
  #L3b95fa.  if v2 != 0 then goto L3b9600;
  #L3b95fe.  return v0 @kind wide;
  #L3b9600.  v2:= -9223372036854775808L;
  #L3b9604.  v4:= lcmp(v14, v2);
  #L3b9608.  if v4 != 0 then goto L3b960e;
  #L3b960c.  return v2 @kind wide;
  #L3b960e.  call temp:= `getZone`(v13) @signature `Lorg/joda/time/chrono/ZonedChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b9614.  v4:= temp @kind object;
  #L3b9616.  call temp:= `getOffsetFromLocal`(v4, v14) @signature `Lorg/joda/time/DateTimeZone;.getOffsetFromLocal:(J)I` @kind virtual;
  #L3b961c.  v5:= temp;
  #L3b961e.  v6:= (`long`) v5 @kind i2l;
  #L3b9620.  v6:= v14 - v6 @kind long;
  #L3b9624.  v8:= 604800000L;
  #L3b962a.  v10:= 0L;
  #L3b962e.  v12:= lcmp(v14, v8);
  #L3b9632.  if v12 <= 0 then goto L3b9640;
  #L3b9636.  v8:= lcmp(v6, v10);
  #L3b963a.  if v8 >= 0 then goto L3b9640;
  #L3b963e.  return v0 @kind wide;
  #L3b9640.  v0:= -604800000L;
  #L3b9646.  v8:= lcmp(v14, v0);
  #L3b964a.  if v8 >= 0 then goto L3b9658;
  #L3b964e.  v0:= lcmp(v6, v10);
  #L3b9652.  if v0 <= 0 then goto L3b9658;
  #L3b9656.  return v2 @kind wide;
  #L3b9658.  call temp:= `getOffset`(v4, v6) @signature `Lorg/joda/time/DateTimeZone;.getOffset:(J)I` @kind virtual;
  #L3b965e.  v0:= temp;
  #L3b9660.  if v5 != v0 then goto L3b9666;
  #L3b9664.  return v6 @kind wide;
  #L3b9666.  v0:= new `org.joda.time.IllegalInstantException`;
  #L3b966a.  call temp:= `getID`(v4) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3b9670.  v1:= temp @kind object;
  #L3b9672.  call `<init>`(v0, v14, v1) @signature `Lorg/joda/time/IllegalInstantException;.<init>:(JLjava/lang/String;)V` @kind direct;
  #L3b9678.  throw v0;
}
procedure `boolean` `useTimeArithmetic`(`org.joda.time.DurationField` v4 @kind object) @signature `Lorg/joda/time/chrono/ZonedChronology;.useTimeArithmetic:(Lorg/joda/time/DurationField;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b9460.  if v4 == 0 then goto L3b947e;
  #L3b9464.  call temp:= `getUnitMillis`(v4) @signature `Lorg/joda/time/DurationField;.getUnitMillis:()J` @kind virtual;
  #L3b946a.  v0:= temp @kind wide;
  #L3b946c.  v2:= 43200000L;
  #L3b9472.  v4:= lcmp(v0, v2);
  #L3b9476.  if v4 >= 0 then goto L3b947e;
  #L3b947a.  v4:= 1I;
  #L3b947c.  goto L3b9480;
  #L3b947e.  v4:= 0I;
  #L3b9480.  return v4;
}
procedure `void` `assemble`(`org.joda.time.chrono.ZonedChronology` v2 @kind this, `org.joda.time.chrono.AssembledChronology$Fields` v3 @kind object) @signature `Lorg/joda/time/chrono/ZonedChronology;.assemble:(Lorg/joda/time/chrono/AssembledChronology$Fields;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3b9874.  v0:= new `java.util.HashMap`;
  #L3b9878.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3b987e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.eras` @type ^`org.joda.time.DurationField` @kind object;
  #L3b9882.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DurationField;Ljava/util/HashMap;)Lorg/joda/time/DurationField;` @kind direct;
  #L3b9888.  v1:= temp @kind object;
  #L3b988a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.eras` @type ^`org.joda.time.DurationField` := v1 @kind object;
  #L3b988e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.centuries` @type ^`org.joda.time.DurationField` @kind object;
  #L3b9892.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DurationField;Ljava/util/HashMap;)Lorg/joda/time/DurationField;` @kind direct;
  #L3b9898.  v1:= temp @kind object;
  #L3b989a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.centuries` @type ^`org.joda.time.DurationField` := v1 @kind object;
  #L3b989e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.years` @type ^`org.joda.time.DurationField` @kind object;
  #L3b98a2.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DurationField;Ljava/util/HashMap;)Lorg/joda/time/DurationField;` @kind direct;
  #L3b98a8.  v1:= temp @kind object;
  #L3b98aa.  v3.`org.joda.time.chrono.AssembledChronology$Fields.years` @type ^`org.joda.time.DurationField` := v1 @kind object;
  #L3b98ae.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.months` @type ^`org.joda.time.DurationField` @kind object;
  #L3b98b2.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DurationField;Ljava/util/HashMap;)Lorg/joda/time/DurationField;` @kind direct;
  #L3b98b8.  v1:= temp @kind object;
  #L3b98ba.  v3.`org.joda.time.chrono.AssembledChronology$Fields.months` @type ^`org.joda.time.DurationField` := v1 @kind object;
  #L3b98be.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.weekyears` @type ^`org.joda.time.DurationField` @kind object;
  #L3b98c2.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DurationField;Ljava/util/HashMap;)Lorg/joda/time/DurationField;` @kind direct;
  #L3b98c8.  v1:= temp @kind object;
  #L3b98ca.  v3.`org.joda.time.chrono.AssembledChronology$Fields.weekyears` @type ^`org.joda.time.DurationField` := v1 @kind object;
  #L3b98ce.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.weeks` @type ^`org.joda.time.DurationField` @kind object;
  #L3b98d2.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DurationField;Ljava/util/HashMap;)Lorg/joda/time/DurationField;` @kind direct;
  #L3b98d8.  v1:= temp @kind object;
  #L3b98da.  v3.`org.joda.time.chrono.AssembledChronology$Fields.weeks` @type ^`org.joda.time.DurationField` := v1 @kind object;
  #L3b98de.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.days` @type ^`org.joda.time.DurationField` @kind object;
  #L3b98e2.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DurationField;Ljava/util/HashMap;)Lorg/joda/time/DurationField;` @kind direct;
  #L3b98e8.  v1:= temp @kind object;
  #L3b98ea.  v3.`org.joda.time.chrono.AssembledChronology$Fields.days` @type ^`org.joda.time.DurationField` := v1 @kind object;
  #L3b98ee.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.halfdays` @type ^`org.joda.time.DurationField` @kind object;
  #L3b98f2.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DurationField;Ljava/util/HashMap;)Lorg/joda/time/DurationField;` @kind direct;
  #L3b98f8.  v1:= temp @kind object;
  #L3b98fa.  v3.`org.joda.time.chrono.AssembledChronology$Fields.halfdays` @type ^`org.joda.time.DurationField` := v1 @kind object;
  #L3b98fe.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.hours` @type ^`org.joda.time.DurationField` @kind object;
  #L3b9902.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DurationField;Ljava/util/HashMap;)Lorg/joda/time/DurationField;` @kind direct;
  #L3b9908.  v1:= temp @kind object;
  #L3b990a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.hours` @type ^`org.joda.time.DurationField` := v1 @kind object;
  #L3b990e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.minutes` @type ^`org.joda.time.DurationField` @kind object;
  #L3b9912.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DurationField;Ljava/util/HashMap;)Lorg/joda/time/DurationField;` @kind direct;
  #L3b9918.  v1:= temp @kind object;
  #L3b991a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.minutes` @type ^`org.joda.time.DurationField` := v1 @kind object;
  #L3b991e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.seconds` @type ^`org.joda.time.DurationField` @kind object;
  #L3b9922.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DurationField;Ljava/util/HashMap;)Lorg/joda/time/DurationField;` @kind direct;
  #L3b9928.  v1:= temp @kind object;
  #L3b992a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.seconds` @type ^`org.joda.time.DurationField` := v1 @kind object;
  #L3b992e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.millis` @type ^`org.joda.time.DurationField` @kind object;
  #L3b9932.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DurationField;Ljava/util/HashMap;)Lorg/joda/time/DurationField;` @kind direct;
  #L3b9938.  v1:= temp @kind object;
  #L3b993a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.millis` @type ^`org.joda.time.DurationField` := v1 @kind object;
  #L3b993e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.year` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b9942.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b9948.  v1:= temp @kind object;
  #L3b994a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.year` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b994e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.yearOfEra` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b9952.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b9958.  v1:= temp @kind object;
  #L3b995a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.yearOfEra` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b995e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.yearOfCentury` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b9962.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b9968.  v1:= temp @kind object;
  #L3b996a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.yearOfCentury` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b996e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.centuryOfEra` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b9972.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b9978.  v1:= temp @kind object;
  #L3b997a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.centuryOfEra` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b997e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.era` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b9982.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b9988.  v1:= temp @kind object;
  #L3b998a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.era` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b998e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.dayOfWeek` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b9992.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b9998.  v1:= temp @kind object;
  #L3b999a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.dayOfWeek` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b999e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.dayOfMonth` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b99a2.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b99a8.  v1:= temp @kind object;
  #L3b99aa.  v3.`org.joda.time.chrono.AssembledChronology$Fields.dayOfMonth` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b99ae.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.dayOfYear` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b99b2.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b99b8.  v1:= temp @kind object;
  #L3b99ba.  v3.`org.joda.time.chrono.AssembledChronology$Fields.dayOfYear` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b99be.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.monthOfYear` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b99c2.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b99c8.  v1:= temp @kind object;
  #L3b99ca.  v3.`org.joda.time.chrono.AssembledChronology$Fields.monthOfYear` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b99ce.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.weekOfWeekyear` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b99d2.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b99d8.  v1:= temp @kind object;
  #L3b99da.  v3.`org.joda.time.chrono.AssembledChronology$Fields.weekOfWeekyear` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b99de.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.weekyear` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b99e2.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b99e8.  v1:= temp @kind object;
  #L3b99ea.  v3.`org.joda.time.chrono.AssembledChronology$Fields.weekyear` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b99ee.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.weekyearOfCentury` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b99f2.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b99f8.  v1:= temp @kind object;
  #L3b99fa.  v3.`org.joda.time.chrono.AssembledChronology$Fields.weekyearOfCentury` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b99fe.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.millisOfSecond` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b9a02.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b9a08.  v1:= temp @kind object;
  #L3b9a0a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.millisOfSecond` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b9a0e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.millisOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b9a12.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b9a18.  v1:= temp @kind object;
  #L3b9a1a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.millisOfDay` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b9a1e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.secondOfMinute` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b9a22.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b9a28.  v1:= temp @kind object;
  #L3b9a2a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.secondOfMinute` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b9a2e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.secondOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b9a32.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b9a38.  v1:= temp @kind object;
  #L3b9a3a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.secondOfDay` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b9a3e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.minuteOfHour` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b9a42.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b9a48.  v1:= temp @kind object;
  #L3b9a4a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.minuteOfHour` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b9a4e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.minuteOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b9a52.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b9a58.  v1:= temp @kind object;
  #L3b9a5a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.minuteOfDay` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b9a5e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.hourOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b9a62.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b9a68.  v1:= temp @kind object;
  #L3b9a6a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.hourOfDay` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b9a6e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.hourOfHalfday` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b9a72.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b9a78.  v1:= temp @kind object;
  #L3b9a7a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.hourOfHalfday` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b9a7e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.clockhourOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b9a82.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b9a88.  v1:= temp @kind object;
  #L3b9a8a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.clockhourOfDay` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b9a8e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.clockhourOfHalfday` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b9a92.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b9a98.  v1:= temp @kind object;
  #L3b9a9a.  v3.`org.joda.time.chrono.AssembledChronology$Fields.clockhourOfHalfday` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3b9a9e.  v1:= v3.`org.joda.time.chrono.AssembledChronology$Fields.halfdayOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b9aa2.  call temp:= `convertField`(v2, v1, v0) @signature `Lorg/joda/time/chrono/ZonedChronology;.convertField:(Lorg/joda/time/DateTimeField;Ljava/util/HashMap;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b9aa8.  v0:= temp @kind object;
  #L3b9aaa.  v3.`org.joda.time.chrono.AssembledChronology$Fields.halfdayOfDay` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b9aae.  return @kind void;
}
procedure `boolean` `equals`(`org.joda.time.chrono.ZonedChronology` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/joda/time/chrono/ZonedChronology;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b93f8.  v0:= 1I;
  #L3b93fa.  if v4 != v5 then goto L3b9400;
  #L3b93fe.  return v0;
  #L3b9400.  v1:= instanceof @variable v5 @type ^`org.joda.time.chrono.ZonedChronology` @kind boolean;
  #L3b9404.  v2:= 0I;
  #L3b9406.  if v1 != 0 then goto L3b940c;
  #L3b940a.  return v2;
  #L3b940c.  v5:= (`org.joda.time.chrono.ZonedChronology`) v5 @kind object;
  #L3b9410.  call temp:= `getBase`(v4) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b9416.  v1:= temp @kind object;
  #L3b9418.  call temp:= `getBase`(v5) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b941e.  v3:= temp @kind object;
  #L3b9420.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b9426.  v1:= temp;
  #L3b9428.  if v1 == 0 then goto L3b944a;
  #L3b942c.  call temp:= `getZone`(v4) @signature `Lorg/joda/time/chrono/ZonedChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b9432.  v1:= temp @kind object;
  #L3b9434.  call temp:= `getZone`(v5) @signature `Lorg/joda/time/chrono/ZonedChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b943a.  v5:= temp @kind object;
  #L3b943c.  call temp:= `equals`(v1, v5) @signature `Lorg/joda/time/DateTimeZone;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b9442.  v5:= temp;
  #L3b9444.  if v5 == 0 then goto L3b944a;
  #L3b9448.  goto L3b944c;
  #L3b944a.  v0:= 0I;
  #L3b944c.  return v0;
}
procedure `long` `getDateTimeMillis`(`org.joda.time.chrono.ZonedChronology` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lorg/joda/time/chrono/ZonedChronology;.getDateTimeMillis:(IIII)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b9540.  call temp:= `getBase`(v1) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b9546.  v0:= temp @kind object;
  #L3b9548.  call temp:= `getDateTimeMillis`(v0, v2, v3, v4, v5) @signature `Lorg/joda/time/Chronology;.getDateTimeMillis:(IIII)J` @kind virtual;
  #L3b954e.  v2:= temp @kind wide;
  #L3b9550.  call temp:= `localToUTC`(v1, v2) @signature `Lorg/joda/time/chrono/ZonedChronology;.localToUTC:(J)J` @kind direct;
  #L3b9556.  v2:= temp @kind wide;
  #L3b9558.  return v2 @kind wide;
}
procedure `long` `getDateTimeMillis`(`org.joda.time.chrono.ZonedChronology` v8 @kind this, `int` v9 , `int` v10 , `int` v11 , `int` v12 , `int` v13 , `int` v14 , `int` v15 ) @signature `Lorg/joda/time/chrono/ZonedChronology;.getDateTimeMillis:(IIIIIII)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3b956c.  call temp:= `getBase`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b9572.  v0:= temp @kind object;
  #L3b9574.  v1:= v9;
  #L3b9576.  v2:= v10;
  #L3b9578.  v3:= v11;
  #L3b957a.  v4:= v12;
  #L3b957c.  v5:= v13;
  #L3b957e.  v6:= v14;
  #L3b9580.  v7:= v15;
  #L3b9582.  call temp:= `getDateTimeMillis`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lorg/joda/time/Chronology;.getDateTimeMillis:(IIIIIII)J` @kind virtual;
  #L3b9588.  v9:= temp @kind wide;
  #L3b958a.  call temp:= `localToUTC`(v8, v9) @signature `Lorg/joda/time/chrono/ZonedChronology;.localToUTC:(J)J` @kind direct;
  #L3b9590.  v9:= temp @kind wide;
  #L3b9592.  return v9 @kind wide;
}
procedure `long` `getDateTimeMillis`(`org.joda.time.chrono.ZonedChronology` v7 @kind this, `long` v8 , `int` v10 , `int` v11 , `int` v12 , `int` v13 ) @signature `Lorg/joda/time/chrono/ZonedChronology;.getDateTimeMillis:(JIIII)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3b95a4.  call temp:= `getBase`(v7) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b95aa.  v0:= temp @kind object;
  #L3b95ac.  call temp:= `getZone`(v7) @signature `Lorg/joda/time/chrono/ZonedChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b95b2.  v1:= temp @kind object;
  #L3b95b4.  call temp:= `getOffset`(v1, v8) @signature `Lorg/joda/time/DateTimeZone;.getOffset:(J)I` @kind virtual;
  #L3b95ba.  v1:= temp;
  #L3b95bc.  v1:= (`long`) v1 @kind i2l;
  #L3b95be.  v1:= v1 + v8 @kind long;
  #L3b95c0.  v3:= v10;
  #L3b95c2.  v4:= v11;
  #L3b95c4.  v5:= v12;
  #L3b95c6.  v6:= v13;
  #L3b95c8.  call temp:= `getDateTimeMillis`(v0, v1, v3, v4, v5, v6) @signature `Lorg/joda/time/Chronology;.getDateTimeMillis:(JIIII)J` @kind virtual;
  #L3b95ce.  v8:= temp @kind wide;
  #L3b95d0.  call temp:= `localToUTC`(v7, v8) @signature `Lorg/joda/time/chrono/ZonedChronology;.localToUTC:(J)J` @kind direct;
  #L3b95d6.  v8:= temp @kind wide;
  #L3b95d8.  return v8 @kind wide;
}
procedure `org.joda.time.DateTimeZone` `getZone`(`org.joda.time.chrono.ZonedChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/ZonedChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b9784.  call temp:= `getParam`(v1) @signature `Lorg/joda/time/chrono/AssembledChronology;.getParam:()Ljava/lang/Object;` @kind virtual;
  #L3b978a.  v0:= temp @kind object;
  #L3b978c.  v0:= (`org.joda.time.DateTimeZone`) v0 @kind object;
  #L3b9790.  return v0 @kind object;
}
procedure `int` `hashCode`(`org.joda.time.chrono.ZonedChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/ZonedChronology;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b9494.  call temp:= `getZone`(v2) @signature `Lorg/joda/time/chrono/ZonedChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b949a.  v0:= temp @kind object;
  #L3b949c.  call temp:= `hashCode`(v0) @signature `Lorg/joda/time/DateTimeZone;.hashCode:()I` @kind virtual;
  #L3b94a2.  v0:= temp;
  #L3b94a4.  v0:= v0 * 11;
  #L3b94a8.  v1:= 326565I;
  #L3b94ae.  v0:= v0 + v1 @kind int;
  #L3b94b0.  call temp:= `getBase`(v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b94b6.  v1:= temp @kind object;
  #L3b94b8.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3b94be.  v1:= temp;
  #L3b94c0.  v1:= v1 * 7;
  #L3b94c4.  v0:= v0 + v1 @kind int;
  #L3b94c6.  return v0;
}
procedure `java.lang.String` `toString`(`org.joda.time.chrono.ZonedChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/ZonedChronology;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b94d8.  v0:= new `java.lang.StringBuilder`;
  #L3b94dc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b94e2.  v1:= "ZonedChronology[" @kind object;
  #L3b94e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b94ec.  call temp:= `getBase`(v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b94f2.  v1:= temp @kind object;
  #L3b94f4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b94fa.  v1:= ", " @kind object;
  #L3b94fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b9504.  call temp:= `getZone`(v2) @signature `Lorg/joda/time/chrono/ZonedChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b950a.  v1:= temp @kind object;
  #L3b950c.  call temp:= `getID`(v1) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3b9512.  v1:= temp @kind object;
  #L3b9514.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b951a.  v1:= 93I;
  #L3b951e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b9524.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b952a.  v0:= temp @kind object;
  #L3b952c.  return v0 @kind object;
}
procedure `org.joda.time.Chronology` `withUTC`(`org.joda.time.chrono.ZonedChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/ZonedChronology;.withUTC:()Lorg/joda/time/Chronology;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b968c.  call temp:= `getBase`(v1) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b9692.  v0:= temp @kind object;
  #L3b9694.  return v0 @kind object;
}
procedure `org.joda.time.Chronology` `withZone`(`org.joda.time.chrono.ZonedChronology` v2 @kind this, `org.joda.time.DateTimeZone` v3 @kind object) @signature `Lorg/joda/time/chrono/ZonedChronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b96a8.  if v3 != 0 then goto L3b96b4;
  #L3b96ac.  call temp:= `getDefault`() @signature `Lorg/joda/time/DateTimeZone;.getDefault:()Lorg/joda/time/DateTimeZone;` @kind static;
  #L3b96b2.  v3:= temp @kind object;
  #L3b96b4.  call temp:= `getParam`(v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.getParam:()Ljava/lang/Object;` @kind virtual;
  #L3b96ba.  v0:= temp @kind object;
  #L3b96bc.  if v3 != v0 then goto L3b96c2;
  #L3b96c0.  return v2 @kind object;
  #L3b96c2.  v0:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3b96c6.  if v3 != v0 then goto L3b96d4;
  #L3b96ca.  call temp:= `getBase`(v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b96d0.  v3:= temp @kind object;
  #L3b96d2.  return v3 @kind object;
  #L3b96d4.  v0:= new `org.joda.time.chrono.ZonedChronology`;
  #L3b96d8.  call temp:= `getBase`(v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b96de.  v1:= temp @kind object;
  #L3b96e0.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/chrono/ZonedChronology;.<init>:(Lorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;)V` @kind direct;
  #L3b96e6.  return v0 @kind object;
}
