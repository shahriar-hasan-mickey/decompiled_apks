record `org.joda.time.chrono.GregorianChronology` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.chrono.BasicGJChronology` @kind class {
}
global `int` `@@org.joda.time.chrono.GregorianChronology.DAYS_0000_TO_1970` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.joda.time.chrono.GregorianChronology` `@@org.joda.time.chrono.GregorianChronology.INSTANCE_UTC` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.joda.time.chrono.GregorianChronology.MAX_YEAR` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.joda.time.chrono.GregorianChronology.MILLIS_PER_MONTH` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.joda.time.chrono.GregorianChronology.MILLIS_PER_YEAR` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.joda.time.chrono.GregorianChronology.MIN_YEAR` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.ConcurrentHashMap` `@@org.joda.time.chrono.GregorianChronology.cCache` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.joda.time.chrono.GregorianChronology.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/chrono/GregorianChronology;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3b5fa0.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L3b5fa4.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L3b5faa.  `@@org.joda.time.chrono.GregorianChronology.cCache` @type ^`java.util.concurrent.ConcurrentHashMap` := v0 @kind object;
  #L3b5fae.  v0:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3b5fb2.  call temp:= `getInstance`(v0) @signature `Lorg/joda/time/chrono/GregorianChronology;.getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/GregorianChronology;` @kind static;
  #L3b5fb8.  v0:= temp @kind object;
  #L3b5fba.  `@@org.joda.time.chrono.GregorianChronology.INSTANCE_UTC` @type ^`org.joda.time.chrono.GregorianChronology` := v0 @kind object;
  #L3b5fbe.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.chrono.GregorianChronology` v0 @kind this, `org.joda.time.Chronology` v1 @kind object, `java.lang.Object` v2 @kind object, `int` v3 ) @signature `Lorg/joda/time/chrono/GregorianChronology;.<init>:(Lorg/joda/time/Chronology;Ljava/lang/Object;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3b5fd0.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/joda/time/chrono/BasicGJChronology;.<init>:(Lorg/joda/time/Chronology;Ljava/lang/Object;I)V` @kind direct;
  #L3b5fd6.  return @kind void;
}
procedure `org.joda.time.chrono.GregorianChronology` `getInstance`() @signature `Lorg/joda/time/chrono/GregorianChronology;.getInstance:()Lorg/joda/time/chrono/GregorianChronology;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3b5e58.  call temp:= `getDefault`() @signature `Lorg/joda/time/DateTimeZone;.getDefault:()Lorg/joda/time/DateTimeZone;` @kind static;
  #L3b5e5e.  v0:= temp @kind object;
  #L3b5e60.  v1:= 4I;
  #L3b5e62.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/chrono/GregorianChronology;.getInstance:(Lorg/joda/time/DateTimeZone;I)Lorg/joda/time/chrono/GregorianChronology;` @kind static;
  #L3b5e68.  v0:= temp @kind object;
  #L3b5e6a.  return v0 @kind object;
}
procedure `org.joda.time.chrono.GregorianChronology` `getInstance`(`org.joda.time.DateTimeZone` v1 @kind object) @signature `Lorg/joda/time/chrono/GregorianChronology;.getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/GregorianChronology;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b5e7c.  v0:= 4I;
  #L3b5e7e.  call temp:= `getInstance`(v1, v0) @signature `Lorg/joda/time/chrono/GregorianChronology;.getInstance:(Lorg/joda/time/DateTimeZone;I)Lorg/joda/time/chrono/GregorianChronology;` @kind static;
  #L3b5e84.  v1:= temp @kind object;
  #L3b5e86.  return v1 @kind object;
}
procedure `org.joda.time.chrono.GregorianChronology` `getInstance`(`org.joda.time.DateTimeZone` v5 @kind object, `int` v6 ) @signature `Lorg/joda/time/chrono/GregorianChronology;.getInstance:(Lorg/joda/time/DateTimeZone;I)Lorg/joda/time/chrono/GregorianChronology;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3b5e98.  if v5 != 0 then goto L3b5ea4;
  #L3b5e9c.  call temp:= `getDefault`() @signature `Lorg/joda/time/DateTimeZone;.getDefault:()Lorg/joda/time/DateTimeZone;` @kind static;
  #L3b5ea2.  v5:= temp @kind object;
  #L3b5ea4.  v0:= `@@org.joda.time.chrono.GregorianChronology.cCache` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L3b5ea8.  call temp:= `get`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3b5eae.  v0:= temp @kind object;
  #L3b5eb0.  v0:= (`org.joda.time.chrono.GregorianChronology`[]) v0 @kind object;
  #L3b5eb4.  if v0 != 0 then goto L3b5ed4;
  #L3b5eb8.  v0:= 7I;
  #L3b5eba.  v0:= new `org.joda.time.chrono.GregorianChronology`[v0];
  #L3b5ebe.  v1:= `@@org.joda.time.chrono.GregorianChronology.cCache` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L3b5ec2.  call temp:= `putIfAbsent`(v1, v5, v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3b5ec8.  v1:= temp @kind object;
  #L3b5eca.  v1:= (`org.joda.time.chrono.GregorianChronology`[]) v1 @kind object;
  #L3b5ece.  if v1 == 0 then goto L3b5ed4;
  #L3b5ed2.  v0:= v1 @kind object;
  #L3b5ed4.  v1:= v6 + -1;
  #L3b5ed8.  v2:= v0[v1] @kind object;
  #L3b5edc.  if v2 != 0 then goto L3b5f30;
  #L3b5ee0.  @monitorenter v0
  #L3b5ee2.  v2:= v0[v1] @kind object;
  #L3b5ee6.  if v2 != 0 then goto L3b5f26;
  #L3b5eea.  v2:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3b5eee.  v3:= 0I;
  #L3b5ef0.  if v5 != v2 then goto L3b5f00;
  #L3b5ef4.  v5:= new `org.joda.time.chrono.GregorianChronology`;
  #L3b5ef8.  call `<init>`(v5, v3, v3, v6) @signature `Lorg/joda/time/chrono/GregorianChronology;.<init>:(Lorg/joda/time/Chronology;Ljava/lang/Object;I)V` @kind direct;
  #L3b5efe.  goto L3b5f20;
  #L3b5f00.  v2:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3b5f04.  call temp:= `getInstance`(v2, v6) @signature `Lorg/joda/time/chrono/GregorianChronology;.getInstance:(Lorg/joda/time/DateTimeZone;I)Lorg/joda/time/chrono/GregorianChronology;` @kind static;
  #L3b5f0a.  v2:= temp @kind object;
  #L3b5f0c.  v4:= new `org.joda.time.chrono.GregorianChronology`;
  #L3b5f10.  call temp:= `getInstance`(v2, v5) @signature `Lorg/joda/time/chrono/ZonedChronology;.getInstance:(Lorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/ZonedChronology;` @kind static;
  #L3b5f16.  v5:= temp @kind object;
  #L3b5f18.  call `<init>`(v4, v5, v3, v6) @signature `Lorg/joda/time/chrono/GregorianChronology;.<init>:(Lorg/joda/time/Chronology;Ljava/lang/Object;I)V` @kind direct;
  #L3b5f1e.  v5:= v4 @kind object;
  #L3b5f20.  v0[v1]:= v5 @kind object;
  #L3b5f24.  v2:= v5 @kind object;
  #L3b5f26.  @monitorexit v0
  #L3b5f28.  goto L3b5f30;
  #L3b5f2a.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3b5f2c.  @monitorexit v0
  #L3b5f2e.  throw v5;
  #L3b5f30.  return v2 @kind object;
  #L3b5f32.  v5:= new `java.lang.IllegalArgumentException`;
  #L3b5f36.  v0:= new `java.lang.StringBuilder`;
  #L3b5f3a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b5f40.  v1:= "Invalid min days in first week: " @kind object;
  #L3b5f44.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b5f4a.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b5f50.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b5f56.  v6:= temp @kind object;
  #L3b5f58.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b5f5e.  throw v5;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L3b5ed8..L3b5edc] goto L3b5f32;
  catch `java.lang.Throwable` @[L3b5ee2..L3b5f2e] goto L3b5f2a;
}
procedure `org.joda.time.chrono.GregorianChronology` `getInstanceUTC`() @signature `Lorg/joda/time/chrono/GregorianChronology;.getInstanceUTC:()Lorg/joda/time/chrono/GregorianChronology;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b5f88.  v0:= `@@org.joda.time.chrono.GregorianChronology.INSTANCE_UTC` @type ^`org.joda.time.chrono.GregorianChronology` @kind object;
  #L3b5f8c.  return v0 @kind object;
}
procedure `java.lang.Object` `readResolve`(`org.joda.time.chrono.GregorianChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/GregorianChronology;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3b5ce8.  call temp:= `getBase`(v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b5cee.  v0:= temp @kind object;
  #L3b5cf0.  call temp:= `getMinimumDaysInFirstWeek`(v2) @signature `Lorg/joda/time/chrono/BasicChronology;.getMinimumDaysInFirstWeek:()I` @kind virtual;
  #L3b5cf6.  v1:= temp;
  #L3b5cf8.  if v1 != 0 then goto L3b5cfe;
  #L3b5cfc.  v1:= 4I;
  #L3b5cfe.  if v0 != 0 then goto L3b5d08;
  #L3b5d02.  v0:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3b5d06.  goto L3b5d10;
  #L3b5d08.  call temp:= `getZone`(v0) @signature `Lorg/joda/time/Chronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b5d0e.  v0:= temp @kind object;
  #L3b5d10.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/chrono/GregorianChronology;.getInstance:(Lorg/joda/time/DateTimeZone;I)Lorg/joda/time/chrono/GregorianChronology;` @kind static;
  #L3b5d16.  v0:= temp @kind object;
  #L3b5d18.  return v0 @kind object;
}
procedure `void` `assemble`(`org.joda.time.chrono.GregorianChronology` v1 @kind this, `org.joda.time.chrono.AssembledChronology$Fields` v2 @kind object) @signature `Lorg/joda/time/chrono/GregorianChronology;.assemble:(Lorg/joda/time/chrono/AssembledChronology$Fields;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3b5fe8.  call temp:= `getBase`(v1) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b5fee.  v0:= temp @kind object;
  #L3b5ff0.  if v0 != 0 then goto L3b5ffa;
  #L3b5ff4.  call `assemble`(v1, v2) @signature `Lorg/joda/time/chrono/BasicChronology;.assemble:(Lorg/joda/time/chrono/AssembledChronology$Fields;)V` @kind super;
  #L3b5ffa.  return @kind void;
}
procedure `long` `calculateFirstDayOfYearMillis`(`org.joda.time.chrono.GregorianChronology` v6 @kind this, `int` v7 ) @signature `Lorg/joda/time/chrono/GregorianChronology;.calculateFirstDayOfYearMillis:(I)J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3b5d2c.  v0:= v7 / 100;
  #L3b5d30.  if v7 >= 0 then goto L3b5d4e;
  #L3b5d34.  v1:= v7 + 3;
  #L3b5d38.  v1:= v1 ^> 2;
  #L3b5d3c.  v1:= v1 - v0 @kind int;
  #L3b5d3e.  v0:= v0 + 3;
  #L3b5d42.  v0:= v0 ^> 2;
  #L3b5d46.  v1:= v1 + v0 @kind int;
  #L3b5d48.  v1:= v1 + -1;
  #L3b5d4c.  goto L3b5d6a;
  #L3b5d4e.  v1:= v7 ^> 2;
  #L3b5d52.  v1:= v1 - v0 @kind int;
  #L3b5d54.  v0:= v0 ^> 2;
  #L3b5d58.  v1:= v1 + v0 @kind int;
  #L3b5d5a.  call temp:= `isLeapYear`(v6, v7) @signature `Lorg/joda/time/chrono/GregorianChronology;.isLeapYear:(I)Z` @kind virtual;
  #L3b5d60.  v0:= temp;
  #L3b5d62.  if v0 == 0 then goto L3b5d6a;
  #L3b5d66.  v1:= v1 + -1;
  #L3b5d6a.  v2:= (`long`) v7 @kind i2l;
  #L3b5d6c.  v4:= 365L;
  #L3b5d70.  v2:= v2 * v4 @kind long;
  #L3b5d74.  v7:= 719527I;
  #L3b5d7a.  v1:= v1 - v7 @kind int;
  #L3b5d7c.  v0:= (`long`) v1 @kind i2l;
  #L3b5d7e.  v2:= v2 + v0 @kind long;
  #L3b5d80.  v0:= 86400000L;
  #L3b5d86.  v2:= v2 * v0 @kind long;
  #L3b5d8a.  return v2 @kind wide;
}
procedure `long` `getApproxMillisAtEpochDividedByTwo`(`org.joda.time.chrono.GregorianChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/GregorianChronology;.getApproxMillisAtEpochDividedByTwo:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3b5d9c.  v0:= 31083597720000L;
  #L3b5da6.  return v0 @kind wide;
}
procedure `long` `getAverageMillisPerMonth`(`org.joda.time.chrono.GregorianChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/GregorianChronology;.getAverageMillisPerMonth:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3b5db8.  v0:= 2629746000L;
  #L3b5dc2.  return v0 @kind wide;
}
procedure `long` `getAverageMillisPerYear`(`org.joda.time.chrono.GregorianChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/GregorianChronology;.getAverageMillisPerYear:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3b5dd4.  v0:= 31556952000L;
  #L3b5dde.  return v0 @kind wide;
}
procedure `long` `getAverageMillisPerYearDividedByTwo`(`org.joda.time.chrono.GregorianChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/GregorianChronology;.getAverageMillisPerYearDividedByTwo:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3b5df0.  v0:= 15778476000L;
  #L3b5dfa.  return v0 @kind wide;
}
procedure `int` `getMaxYear`(`org.joda.time.chrono.GregorianChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/GregorianChronology;.getMaxYear:()I` @AccessFlag  {
    temp;
    v0;

  #L3b5cb8.  v0:= 292278993I;
  #L3b5cbe.  return v0;
}
procedure `int` `getMinYear`(`org.joda.time.chrono.GregorianChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/GregorianChronology;.getMinYear:()I` @AccessFlag  {
    temp;
    v0;

  #L3b5cd0.  v0:= -292275054I;
  #L3b5cd6.  return v0;
}
procedure `boolean` `isLeapYear`(`org.joda.time.chrono.GregorianChronology` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/chrono/GregorianChronology;.isLeapYear:(I)Z` @AccessFlag  {
    temp;
    v0;

  #L3b5c88.  v0:= v2 ^& 3;
  #L3b5c8c.  if v0 != 0 then goto L3b5ca4;
  #L3b5c90.  v0:= v2 %% 100;
  #L3b5c94.  if v0 != 0 then goto L3b5ca0;
  #L3b5c98.  v2:= v2 %% 400;
  #L3b5c9c.  if v2 != 0 then goto L3b5ca4;
  #L3b5ca0.  v2:= 1I;
  #L3b5ca2.  goto L3b5ca6;
  #L3b5ca4.  v2:= 0I;
  #L3b5ca6.  return v2;
}
procedure `org.joda.time.Chronology` `withUTC`(`org.joda.time.chrono.GregorianChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/GregorianChronology;.withUTC:()Lorg/joda/time/Chronology;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5e0c.  v0:= `@@org.joda.time.chrono.GregorianChronology.INSTANCE_UTC` @type ^`org.joda.time.chrono.GregorianChronology` @kind object;
  #L3b5e10.  return v0 @kind object;
}
procedure `org.joda.time.Chronology` `withZone`(`org.joda.time.chrono.GregorianChronology` v1 @kind this, `org.joda.time.DateTimeZone` v2 @kind object) @signature `Lorg/joda/time/chrono/GregorianChronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5e24.  if v2 != 0 then goto L3b5e30;
  #L3b5e28.  call temp:= `getDefault`() @signature `Lorg/joda/time/DateTimeZone;.getDefault:()Lorg/joda/time/DateTimeZone;` @kind static;
  #L3b5e2e.  v2:= temp @kind object;
  #L3b5e30.  call temp:= `getZone`(v1) @signature `Lorg/joda/time/chrono/BasicChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b5e36.  v0:= temp @kind object;
  #L3b5e38.  if v2 != v0 then goto L3b5e3e;
  #L3b5e3c.  return v1 @kind object;
  #L3b5e3e.  call temp:= `getInstance`(v2) @signature `Lorg/joda/time/chrono/GregorianChronology;.getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/GregorianChronology;` @kind static;
  #L3b5e44.  v2:= temp @kind object;
  #L3b5e46.  return v2 @kind object;
}
