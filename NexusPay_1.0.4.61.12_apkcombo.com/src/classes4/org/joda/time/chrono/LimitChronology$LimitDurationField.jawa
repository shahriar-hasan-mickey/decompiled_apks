record `org.joda.time.chrono.LimitChronology$LimitDurationField` @kind class @AccessFlag  extends `org.joda.time.field.DecoratedDurationField` @kind class {
  `org.joda.time.chrono.LimitChronology` `org.joda.time.chrono.LimitChronology$LimitDurationField.this$0` @AccessFlag FINAL_SYNTHETIC;
}
global `long` `@@org.joda.time.chrono.LimitChronology$LimitDurationField.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.chrono.LimitChronology$LimitDurationField` v0 @kind this, `org.joda.time.chrono.LimitChronology` v1 @kind object, `org.joda.time.DurationField` v2 @kind object) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDurationField;.<init>:(Lorg/joda/time/chrono/LimitChronology;Lorg/joda/time/DurationField;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3b7ca4.  v0.`org.joda.time.chrono.LimitChronology$LimitDurationField.this$0` @type ^`org.joda.time.chrono.LimitChronology` := v1 @kind object;
  #L3b7ca8.  call temp:= `getType`(v2) @signature `Lorg/joda/time/DurationField;.getType:()Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L3b7cae.  v1:= temp @kind object;
  #L3b7cb0.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/field/DecoratedDurationField;.<init>:(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V` @kind direct;
  #L3b7cb6.  return @kind void;
}
procedure `long` `add`(`org.joda.time.chrono.LimitChronology$LimitDurationField` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDurationField;.add:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7b5c.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDurationField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7b60.  v1:= 0I;
  #L3b7b62.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7b68.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3b7b6e.  v0:= temp @kind object;
  #L3b7b70.  call temp:= `add`(v0, v3, v5) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L3b7b76.  v3:= temp @kind wide;
  #L3b7b78.  v5:= v2.`org.joda.time.chrono.LimitChronology$LimitDurationField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7b7c.  v0:= "resulting" @kind object;
  #L3b7b80.  call `checkLimits`(v5, v3, v0) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7b86.  return v3 @kind wide;
}
procedure `long` `add`(`org.joda.time.chrono.LimitChronology$LimitDurationField` v2 @kind this, `long` v3 , `long` v5 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDurationField;.add:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7b98.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDurationField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7b9c.  v1:= 0I;
  #L3b7b9e.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7ba4.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3b7baa.  v0:= temp @kind object;
  #L3b7bac.  call temp:= `add`(v0, v3, v5) @signature `Lorg/joda/time/DurationField;.add:(JJ)J` @kind virtual;
  #L3b7bb2.  v3:= temp @kind wide;
  #L3b7bb4.  v5:= v2.`org.joda.time.chrono.LimitChronology$LimitDurationField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7bb8.  v6:= "resulting" @kind object;
  #L3b7bbc.  call `checkLimits`(v5, v3, v6) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7bc2.  return v3 @kind wide;
}
procedure `int` `getDifference`(`org.joda.time.chrono.LimitChronology$LimitDurationField` v2 @kind this, `long` v3 , `long` v5 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDurationField;.getDifference:(JJ)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7aec.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDurationField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7af0.  v1:= "minuend" @kind object;
  #L3b7af4.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7afa.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDurationField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7afe.  v1:= "subtrahend" @kind object;
  #L3b7b02.  call `checkLimits`(v0, v5, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7b08.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3b7b0e.  v0:= temp @kind object;
  #L3b7b10.  call temp:= `getDifference`(v0, v3, v5) @signature `Lorg/joda/time/DurationField;.getDifference:(JJ)I` @kind virtual;
  #L3b7b16.  v3:= temp;
  #L3b7b18.  return v3;
}
procedure `long` `getDifferenceAsLong`(`org.joda.time.chrono.LimitChronology$LimitDurationField` v2 @kind this, `long` v3 , `long` v5 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDurationField;.getDifferenceAsLong:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7bd4.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDurationField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7bd8.  v1:= "minuend" @kind object;
  #L3b7bdc.  call `checkLimits`(v0, v3, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7be2.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDurationField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7be6.  v1:= "subtrahend" @kind object;
  #L3b7bea.  call `checkLimits`(v0, v5, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7bf0.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3b7bf6.  v0:= temp @kind object;
  #L3b7bf8.  call temp:= `getDifferenceAsLong`(v0, v3, v5) @signature `Lorg/joda/time/DurationField;.getDifferenceAsLong:(JJ)J` @kind virtual;
  #L3b7bfe.  v3:= temp @kind wide;
  #L3b7c00.  return v3 @kind wide;
}
procedure `long` `getMillis`(`org.joda.time.chrono.LimitChronology$LimitDurationField` v2 @kind this, `int` v3 , `long` v4 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDurationField;.getMillis:(IJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7c14.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDurationField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7c18.  v1:= 0I;
  #L3b7c1a.  call `checkLimits`(v0, v4, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7c20.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3b7c26.  v0:= temp @kind object;
  #L3b7c28.  call temp:= `getMillis`(v0, v3, v4) @signature `Lorg/joda/time/DurationField;.getMillis:(IJ)J` @kind virtual;
  #L3b7c2e.  v3:= temp @kind wide;
  #L3b7c30.  return v3 @kind wide;
}
procedure `long` `getMillis`(`org.joda.time.chrono.LimitChronology$LimitDurationField` v2 @kind this, `long` v3 , `long` v5 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDurationField;.getMillis:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7c44.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDurationField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7c48.  v1:= 0I;
  #L3b7c4a.  call `checkLimits`(v0, v5, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7c50.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3b7c56.  v0:= temp @kind object;
  #L3b7c58.  call temp:= `getMillis`(v0, v3, v5) @signature `Lorg/joda/time/DurationField;.getMillis:(JJ)J` @kind virtual;
  #L3b7c5e.  v3:= temp @kind wide;
  #L3b7c60.  return v3 @kind wide;
}
procedure `int` `getValue`(`org.joda.time.chrono.LimitChronology$LimitDurationField` v2 @kind this, `long` v3 , `long` v5 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDurationField;.getValue:(JJ)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7b2c.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDurationField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7b30.  v1:= 0I;
  #L3b7b32.  call `checkLimits`(v0, v5, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7b38.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3b7b3e.  v0:= temp @kind object;
  #L3b7b40.  call temp:= `getValue`(v0, v3, v5) @signature `Lorg/joda/time/DurationField;.getValue:(JJ)I` @kind virtual;
  #L3b7b46.  v3:= temp;
  #L3b7b48.  return v3;
}
procedure `long` `getValueAsLong`(`org.joda.time.chrono.LimitChronology$LimitDurationField` v2 @kind this, `long` v3 , `long` v5 ) @signature `Lorg/joda/time/chrono/LimitChronology$LimitDurationField;.getValueAsLong:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b7c74.  v0:= v2.`org.joda.time.chrono.LimitChronology$LimitDurationField.this$0` @type ^`org.joda.time.chrono.LimitChronology` @kind object;
  #L3b7c78.  v1:= 0I;
  #L3b7c7a.  call `checkLimits`(v0, v5, v1) @signature `Lorg/joda/time/chrono/LimitChronology;.checkLimits:(JLjava/lang/String;)V` @kind virtual;
  #L3b7c80.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3b7c86.  v0:= temp @kind object;
  #L3b7c88.  call temp:= `getValueAsLong`(v0, v3, v5) @signature `Lorg/joda/time/DurationField;.getValueAsLong:(JJ)J` @kind virtual;
  #L3b7c8e.  v3:= temp @kind wide;
  #L3b7c90.  return v3 @kind wide;
}
