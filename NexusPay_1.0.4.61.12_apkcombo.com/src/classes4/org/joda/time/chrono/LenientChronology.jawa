record `org.joda.time.chrono.LenientChronology` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.chrono.AssembledChronology` @kind class {
  `org.joda.time.Chronology` `org.joda.time.chrono.LenientChronology.iWithUTC` @AccessFlag PRIVATE_TRANSIENT;
}
global `long` `@@org.joda.time.chrono.LenientChronology.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.chrono.LenientChronology` v1 @kind this, `org.joda.time.Chronology` v2 @kind object) @signature `Lorg/joda/time/chrono/LenientChronology;.<init>:(Lorg/joda/time/Chronology;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L3b7428.  v0:= 0I;
  #L3b742a.  call `<init>`(v1, v2, v0) @signature `Lorg/joda/time/chrono/AssembledChronology;.<init>:(Lorg/joda/time/Chronology;Ljava/lang/Object;)V` @kind direct;
  #L3b7430.  return @kind void;
}
procedure `org.joda.time.DateTimeField` `convertField`(`org.joda.time.chrono.LenientChronology` v1 @kind this, `org.joda.time.DateTimeField` v2 @kind object) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L3b73d4.  call temp:= `getBase`(v1) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b73da.  v0:= temp @kind object;
  #L3b73dc.  call temp:= `getInstance`(v2, v0) @signature `Lorg/joda/time/field/LenientDateTimeField;.getInstance:(Lorg/joda/time/DateTimeField;Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind static;
  #L3b73e2.  v2:= temp @kind object;
  #L3b73e4.  return v2 @kind object;
}
procedure `org.joda.time.chrono.LenientChronology` `getInstance`(`org.joda.time.Chronology` v1 @kind object) @signature `Lorg/joda/time/chrono/LenientChronology;.getInstance:(Lorg/joda/time/Chronology;)Lorg/joda/time/chrono/LenientChronology;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b73f8.  if v1 == 0 then goto L3b7408;
  #L3b73fc.  v0:= new `org.joda.time.chrono.LenientChronology`;
  #L3b7400.  call `<init>`(v0, v1) @signature `Lorg/joda/time/chrono/LenientChronology;.<init>:(Lorg/joda/time/Chronology;)V` @kind direct;
  #L3b7406.  return v0 @kind object;
  #L3b7408.  v1:= new `java.lang.IllegalArgumentException`;
  #L3b740c.  v0:= "Must supply a chronology" @kind object;
  #L3b7410.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b7416.  throw v1;
}
procedure `void` `assemble`(`org.joda.time.chrono.LenientChronology` v1 @kind this, `org.joda.time.chrono.AssembledChronology$Fields` v2 @kind object) @signature `Lorg/joda/time/chrono/LenientChronology;.assemble:(Lorg/joda/time/chrono/AssembledChronology$Fields;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3b7444.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.year` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b7448.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b744e.  v0:= temp @kind object;
  #L3b7450.  v2.`org.joda.time.chrono.AssembledChronology$Fields.year` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b7454.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.yearOfEra` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b7458.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b745e.  v0:= temp @kind object;
  #L3b7460.  v2.`org.joda.time.chrono.AssembledChronology$Fields.yearOfEra` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b7464.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.yearOfCentury` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b7468.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b746e.  v0:= temp @kind object;
  #L3b7470.  v2.`org.joda.time.chrono.AssembledChronology$Fields.yearOfCentury` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b7474.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.centuryOfEra` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b7478.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b747e.  v0:= temp @kind object;
  #L3b7480.  v2.`org.joda.time.chrono.AssembledChronology$Fields.centuryOfEra` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b7484.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.era` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b7488.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b748e.  v0:= temp @kind object;
  #L3b7490.  v2.`org.joda.time.chrono.AssembledChronology$Fields.era` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b7494.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.dayOfWeek` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b7498.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b749e.  v0:= temp @kind object;
  #L3b74a0.  v2.`org.joda.time.chrono.AssembledChronology$Fields.dayOfWeek` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b74a4.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.dayOfMonth` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b74a8.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b74ae.  v0:= temp @kind object;
  #L3b74b0.  v2.`org.joda.time.chrono.AssembledChronology$Fields.dayOfMonth` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b74b4.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.dayOfYear` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b74b8.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b74be.  v0:= temp @kind object;
  #L3b74c0.  v2.`org.joda.time.chrono.AssembledChronology$Fields.dayOfYear` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b74c4.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.monthOfYear` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b74c8.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b74ce.  v0:= temp @kind object;
  #L3b74d0.  v2.`org.joda.time.chrono.AssembledChronology$Fields.monthOfYear` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b74d4.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.weekOfWeekyear` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b74d8.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b74de.  v0:= temp @kind object;
  #L3b74e0.  v2.`org.joda.time.chrono.AssembledChronology$Fields.weekOfWeekyear` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b74e4.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.weekyear` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b74e8.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b74ee.  v0:= temp @kind object;
  #L3b74f0.  v2.`org.joda.time.chrono.AssembledChronology$Fields.weekyear` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b74f4.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.weekyearOfCentury` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b74f8.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b74fe.  v0:= temp @kind object;
  #L3b7500.  v2.`org.joda.time.chrono.AssembledChronology$Fields.weekyearOfCentury` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b7504.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.millisOfSecond` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b7508.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b750e.  v0:= temp @kind object;
  #L3b7510.  v2.`org.joda.time.chrono.AssembledChronology$Fields.millisOfSecond` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b7514.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.millisOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b7518.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b751e.  v0:= temp @kind object;
  #L3b7520.  v2.`org.joda.time.chrono.AssembledChronology$Fields.millisOfDay` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b7524.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.secondOfMinute` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b7528.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b752e.  v0:= temp @kind object;
  #L3b7530.  v2.`org.joda.time.chrono.AssembledChronology$Fields.secondOfMinute` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b7534.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.secondOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b7538.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b753e.  v0:= temp @kind object;
  #L3b7540.  v2.`org.joda.time.chrono.AssembledChronology$Fields.secondOfDay` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b7544.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.minuteOfHour` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b7548.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b754e.  v0:= temp @kind object;
  #L3b7550.  v2.`org.joda.time.chrono.AssembledChronology$Fields.minuteOfHour` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b7554.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.minuteOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b7558.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b755e.  v0:= temp @kind object;
  #L3b7560.  v2.`org.joda.time.chrono.AssembledChronology$Fields.minuteOfDay` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b7564.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.hourOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b7568.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b756e.  v0:= temp @kind object;
  #L3b7570.  v2.`org.joda.time.chrono.AssembledChronology$Fields.hourOfDay` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b7574.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.hourOfHalfday` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b7578.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b757e.  v0:= temp @kind object;
  #L3b7580.  v2.`org.joda.time.chrono.AssembledChronology$Fields.hourOfHalfday` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b7584.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.clockhourOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b7588.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b758e.  v0:= temp @kind object;
  #L3b7590.  v2.`org.joda.time.chrono.AssembledChronology$Fields.clockhourOfDay` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b7594.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.clockhourOfHalfday` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b7598.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b759e.  v0:= temp @kind object;
  #L3b75a0.  v2.`org.joda.time.chrono.AssembledChronology$Fields.clockhourOfHalfday` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b75a4.  v0:= v2.`org.joda.time.chrono.AssembledChronology$Fields.halfdayOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b75a8.  call temp:= `convertField`(v1, v0) @signature `Lorg/joda/time/chrono/LenientChronology;.convertField:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @kind direct;
  #L3b75ae.  v0:= temp @kind object;
  #L3b75b0.  v2.`org.joda.time.chrono.AssembledChronology$Fields.halfdayOfDay` @type ^`org.joda.time.DateTimeField` := v0 @kind object;
  #L3b75b4.  return @kind void;
}
procedure `boolean` `equals`(`org.joda.time.chrono.LenientChronology` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/joda/time/chrono/LenientChronology;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b7268.  if v1 != v2 then goto L3b7270;
  #L3b726c.  v2:= 1I;
  #L3b726e.  return v2;
  #L3b7270.  v0:= instanceof @variable v2 @type ^`org.joda.time.chrono.LenientChronology` @kind boolean;
  #L3b7274.  if v0 != 0 then goto L3b727c;
  #L3b7278.  v2:= 0I;
  #L3b727a.  return v2;
  #L3b727c.  v2:= (`org.joda.time.chrono.LenientChronology`) v2 @kind object;
  #L3b7280.  call temp:= `getBase`(v1) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b7286.  v0:= temp @kind object;
  #L3b7288.  call temp:= `getBase`(v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b728e.  v2:= temp @kind object;
  #L3b7290.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b7296.  v2:= temp;
  #L3b7298.  return v2;
}
procedure `int` `hashCode`(`org.joda.time.chrono.LenientChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/LenientChronology;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b72ac.  call temp:= `getBase`(v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b72b2.  v0:= temp @kind object;
  #L3b72b4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3b72ba.  v0:= temp;
  #L3b72bc.  v0:= v0 * 7;
  #L3b72c0.  v1:= 236548278I;
  #L3b72c6.  v0:= v0 + v1 @kind int;
  #L3b72c8.  return v0;
}
procedure `java.lang.String` `toString`(`org.joda.time.chrono.LenientChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/LenientChronology;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b72dc.  v0:= new `java.lang.StringBuilder`;
  #L3b72e0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3b72e6.  v1:= "LenientChronology[" @kind object;
  #L3b72ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b72f0.  call temp:= `getBase`(v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b72f6.  v1:= temp @kind object;
  #L3b72f8.  call temp:= `toString`(v1) @signature `Lorg/joda/time/Chronology;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b72fe.  v1:= temp @kind object;
  #L3b7300.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b7306.  v1:= 93I;
  #L3b730a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b7310.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b7316.  v0:= temp @kind object;
  #L3b7318.  return v0 @kind object;
}
procedure `org.joda.time.Chronology` `withUTC`(`org.joda.time.chrono.LenientChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/LenientChronology;.withUTC:()Lorg/joda/time/Chronology;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b732c.  v0:= v2.`org.joda.time.chrono.LenientChronology.iWithUTC` @type ^`org.joda.time.Chronology` @kind object;
  #L3b7330.  if v0 != 0 then goto L3b7366;
  #L3b7334.  call temp:= `getZone`(v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b733a.  v0:= temp @kind object;
  #L3b733c.  v1:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3b7340.  if v0 != v1 then goto L3b734a;
  #L3b7344.  v2.`org.joda.time.chrono.LenientChronology.iWithUTC` @type ^`org.joda.time.Chronology` := v2 @kind object;
  #L3b7348.  goto L3b7366;
  #L3b734a.  call temp:= `getBase`(v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b7350.  v0:= temp @kind object;
  #L3b7352.  call temp:= `withUTC`(v0) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b7358.  v0:= temp @kind object;
  #L3b735a.  call temp:= `getInstance`(v0) @signature `Lorg/joda/time/chrono/LenientChronology;.getInstance:(Lorg/joda/time/Chronology;)Lorg/joda/time/chrono/LenientChronology;` @kind static;
  #L3b7360.  v0:= temp @kind object;
  #L3b7362.  v2.`org.joda.time.chrono.LenientChronology.iWithUTC` @type ^`org.joda.time.Chronology` := v0 @kind object;
  #L3b7366.  v0:= v2.`org.joda.time.chrono.LenientChronology.iWithUTC` @type ^`org.joda.time.Chronology` @kind object;
  #L3b736a.  return v0 @kind object;
}
procedure `org.joda.time.Chronology` `withZone`(`org.joda.time.chrono.LenientChronology` v1 @kind this, `org.joda.time.DateTimeZone` v2 @kind object) @signature `Lorg/joda/time/chrono/LenientChronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b737c.  if v2 != 0 then goto L3b7388;
  #L3b7380.  call temp:= `getDefault`() @signature `Lorg/joda/time/DateTimeZone;.getDefault:()Lorg/joda/time/DateTimeZone;` @kind static;
  #L3b7386.  v2:= temp @kind object;
  #L3b7388.  v0:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3b738c.  if v2 != v0 then goto L3b739a;
  #L3b7390.  call temp:= `withUTC`(v1) @signature `Lorg/joda/time/chrono/LenientChronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b7396.  v2:= temp @kind object;
  #L3b7398.  return v2 @kind object;
  #L3b739a.  call temp:= `getZone`(v1) @signature `Lorg/joda/time/chrono/AssembledChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b73a0.  v0:= temp @kind object;
  #L3b73a2.  if v2 != v0 then goto L3b73a8;
  #L3b73a6.  return v1 @kind object;
  #L3b73a8.  call temp:= `getBase`(v1) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b73ae.  v0:= temp @kind object;
  #L3b73b0.  call temp:= `withZone`(v0, v2) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3b73b6.  v2:= temp @kind object;
  #L3b73b8.  call temp:= `getInstance`(v2) @signature `Lorg/joda/time/chrono/LenientChronology;.getInstance:(Lorg/joda/time/Chronology;)Lorg/joda/time/chrono/LenientChronology;` @kind static;
  #L3b73be.  v2:= temp @kind object;
  #L3b73c0.  return v2 @kind object;
}
