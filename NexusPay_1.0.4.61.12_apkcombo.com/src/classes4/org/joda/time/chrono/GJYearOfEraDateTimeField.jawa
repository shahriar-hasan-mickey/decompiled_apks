record `org.joda.time.chrono.GJYearOfEraDateTimeField` @kind class @AccessFlag FINAL extends `org.joda.time.field.DecoratedDateTimeField` @kind class {
  `org.joda.time.chrono.BasicChronology` `org.joda.time.chrono.GJYearOfEraDateTimeField.iChronology` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@org.joda.time.chrono.GJYearOfEraDateTimeField.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.chrono.GJYearOfEraDateTimeField` v1 @kind this, `org.joda.time.DateTimeField` v2 @kind object, `org.joda.time.chrono.BasicChronology` v3 @kind object) @signature `Lorg/joda/time/chrono/GJYearOfEraDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;Lorg/joda/time/chrono/BasicChronology;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3b5c64.  call temp:= `yearOfEra`() @signature `Lorg/joda/time/DateTimeFieldType;.yearOfEra:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3b5c6a.  v0:= temp @kind object;
  #L3b5c6c.  call `<init>`(v1, v2, v0) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V` @kind direct;
  #L3b5c72.  v1.`org.joda.time.chrono.GJYearOfEraDateTimeField.iChronology` @type ^`org.joda.time.chrono.BasicChronology` := v3 @kind object;
  #L3b5c76.  return @kind void;
}
procedure `java.lang.Object` `readResolve`(`org.joda.time.chrono.GJYearOfEraDateTimeField` v1 @kind this) @signature `Lorg/joda/time/chrono/GJYearOfEraDateTimeField;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3b5ae8.  v0:= v1.`org.joda.time.chrono.GJYearOfEraDateTimeField.iChronology` @type ^`org.joda.time.chrono.BasicChronology` @kind object;
  #L3b5aec.  call temp:= `yearOfEra`(v0) @signature `Lorg/joda/time/chrono/AssembledChronology;.yearOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b5af2.  v0:= temp @kind object;
  #L3b5af4.  return v0 @kind object;
}
procedure `long` `add`(`org.joda.time.chrono.GJYearOfEraDateTimeField` v1 @kind this, `long` v2 , `int` v4 ) @signature `Lorg/joda/time/chrono/GJYearOfEraDateTimeField;.add:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5b08.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b5b0e.  v0:= temp @kind object;
  #L3b5b10.  call temp:= `add`(v0, v2, v4) @signature `Lorg/joda/time/DateTimeField;.add:(JI)J` @kind virtual;
  #L3b5b16.  v2:= temp @kind wide;
  #L3b5b18.  return v2 @kind wide;
}
procedure `long` `add`(`org.joda.time.chrono.GJYearOfEraDateTimeField` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/joda/time/chrono/GJYearOfEraDateTimeField;.add:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5b2c.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b5b32.  v0:= temp @kind object;
  #L3b5b34.  call temp:= `add`(v0, v2, v4) @signature `Lorg/joda/time/DateTimeField;.add:(JJ)J` @kind virtual;
  #L3b5b3a.  v2:= temp @kind wide;
  #L3b5b3c.  return v2 @kind wide;
}
procedure `long` `addWrapField`(`org.joda.time.chrono.GJYearOfEraDateTimeField` v1 @kind this, `long` v2 , `int` v4 ) @signature `Lorg/joda/time/chrono/GJYearOfEraDateTimeField;.addWrapField:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5b50.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b5b56.  v0:= temp @kind object;
  #L3b5b58.  call temp:= `addWrapField`(v0, v2, v4) @signature `Lorg/joda/time/DateTimeField;.addWrapField:(JI)J` @kind virtual;
  #L3b5b5e.  v2:= temp @kind wide;
  #L3b5b60.  return v2 @kind wide;
}
procedure `int`[] `addWrapField`(`org.joda.time.chrono.GJYearOfEraDateTimeField` v1 @kind this, `org.joda.time.ReadablePartial` v2 @kind object, `int` v3 , `int`[] v4 @kind object, `int` v5 ) @signature `Lorg/joda/time/chrono/GJYearOfEraDateTimeField;.addWrapField:(Lorg/joda/time/ReadablePartial;I[II)[I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5ac4.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b5aca.  v0:= temp @kind object;
  #L3b5acc.  call temp:= `addWrapField`(v0, v2, v3, v4, v5) @signature `Lorg/joda/time/DateTimeField;.addWrapField:(Lorg/joda/time/ReadablePartial;I[II)[I` @kind virtual;
  #L3b5ad2.  v2:= temp @kind object;
  #L3b5ad4.  return v2 @kind object;
}
procedure `int` `get`(`org.joda.time.chrono.GJYearOfEraDateTimeField` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/chrono/GJYearOfEraDateTimeField;.get:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5a3c.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b5a42.  v0:= temp @kind object;
  #L3b5a44.  call temp:= `get`(v0, v2) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3b5a4a.  v2:= temp;
  #L3b5a4c.  if v2 > 0 then goto L3b5a54;
  #L3b5a50.  v2:= v2 - 1;
  #L3b5a54.  return v2;
}
procedure `int` `getDifference`(`org.joda.time.chrono.GJYearOfEraDateTimeField` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/joda/time/chrono/GJYearOfEraDateTimeField;.getDifference:(JJ)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5a68.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b5a6e.  v0:= temp @kind object;
  #L3b5a70.  call temp:= `getDifference`(v0, v2, v4) @signature `Lorg/joda/time/DateTimeField;.getDifference:(JJ)I` @kind virtual;
  #L3b5a76.  v2:= temp;
  #L3b5a78.  return v2;
}
procedure `long` `getDifferenceAsLong`(`org.joda.time.chrono.GJYearOfEraDateTimeField` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/joda/time/chrono/GJYearOfEraDateTimeField;.getDifferenceAsLong:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5b74.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b5b7a.  v0:= temp @kind object;
  #L3b5b7c.  call temp:= `getDifferenceAsLong`(v0, v2, v4) @signature `Lorg/joda/time/DateTimeField;.getDifferenceAsLong:(JJ)J` @kind virtual;
  #L3b5b82.  v2:= temp @kind wide;
  #L3b5b84.  return v2 @kind wide;
}
procedure `int` `getMaximumValue`(`org.joda.time.chrono.GJYearOfEraDateTimeField` v1 @kind this) @signature `Lorg/joda/time/chrono/GJYearOfEraDateTimeField;.getMaximumValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5a8c.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b5a92.  v0:= temp @kind object;
  #L3b5a94.  call temp:= `getMaximumValue`(v0) @signature `Lorg/joda/time/DateTimeField;.getMaximumValue:()I` @kind virtual;
  #L3b5a9a.  v0:= temp;
  #L3b5a9c.  return v0;
}
procedure `int` `getMinimumValue`(`org.joda.time.chrono.GJYearOfEraDateTimeField` v1 @kind this) @signature `Lorg/joda/time/chrono/GJYearOfEraDateTimeField;.getMinimumValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5ab0.  v0:= 1I;
  #L3b5ab2.  return v0;
}
procedure `org.joda.time.DurationField` `getRangeDurationField`(`org.joda.time.chrono.GJYearOfEraDateTimeField` v1 @kind this) @signature `Lorg/joda/time/chrono/GJYearOfEraDateTimeField;.getRangeDurationField:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5c44.  v0:= v1.`org.joda.time.chrono.GJYearOfEraDateTimeField.iChronology` @type ^`org.joda.time.chrono.BasicChronology` @kind object;
  #L3b5c48.  call temp:= `eras`(v0) @signature `Lorg/joda/time/chrono/AssembledChronology;.eras:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3b5c4e.  v0:= temp @kind object;
  #L3b5c50.  return v0 @kind object;
}
procedure `long` `remainder`(`org.joda.time.chrono.GJYearOfEraDateTimeField` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/chrono/GJYearOfEraDateTimeField;.remainder:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5b98.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b5b9e.  v0:= temp @kind object;
  #L3b5ba0.  call temp:= `remainder`(v0, v2) @signature `Lorg/joda/time/DateTimeField;.remainder:(J)J` @kind virtual;
  #L3b5ba6.  v2:= temp @kind wide;
  #L3b5ba8.  return v2 @kind wide;
}
procedure `long` `roundCeiling`(`org.joda.time.chrono.GJYearOfEraDateTimeField` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/chrono/GJYearOfEraDateTimeField;.roundCeiling:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5bbc.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b5bc2.  v0:= temp @kind object;
  #L3b5bc4.  call temp:= `roundCeiling`(v0, v2) @signature `Lorg/joda/time/DateTimeField;.roundCeiling:(J)J` @kind virtual;
  #L3b5bca.  v2:= temp @kind wide;
  #L3b5bcc.  return v2 @kind wide;
}
procedure `long` `roundFloor`(`org.joda.time.chrono.GJYearOfEraDateTimeField` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/chrono/GJYearOfEraDateTimeField;.roundFloor:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b5be0.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b5be6.  v0:= temp @kind object;
  #L3b5be8.  call temp:= `roundFloor`(v0, v2) @signature `Lorg/joda/time/DateTimeField;.roundFloor:(J)J` @kind virtual;
  #L3b5bee.  v2:= temp @kind wide;
  #L3b5bf0.  return v2 @kind wide;
}
procedure `long` `set`(`org.joda.time.chrono.GJYearOfEraDateTimeField` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lorg/joda/time/chrono/GJYearOfEraDateTimeField;.set:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b5c04.  call temp:= `getMaximumValue`(v2) @signature `Lorg/joda/time/chrono/GJYearOfEraDateTimeField;.getMaximumValue:()I` @kind virtual;
  #L3b5c0a.  v0:= temp;
  #L3b5c0c.  v1:= 1I;
  #L3b5c0e.  call `verifyValueBounds`(v2, v5, v1, v0) @signature `Lorg/joda/time/field/FieldUtils;.verifyValueBounds:(Lorg/joda/time/DateTimeField;III)V` @kind static;
  #L3b5c14.  v0:= v2.`org.joda.time.chrono.GJYearOfEraDateTimeField.iChronology` @type ^`org.joda.time.chrono.BasicChronology` @kind object;
  #L3b5c18.  call temp:= `getYear`(v0, v3) @signature `Lorg/joda/time/chrono/BasicChronology;.getYear:(J)I` @kind virtual;
  #L3b5c1e.  v0:= temp;
  #L3b5c20.  if v0 > 0 then goto L3b5c28;
  #L3b5c24.  v5:= v5 - 1;
  #L3b5c28.  call temp:= `set`(v2, v3, v5) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.set:(JI)J` @kind super;
  #L3b5c2e.  v3:= temp @kind wide;
  #L3b5c30.  return v3 @kind wide;
}
