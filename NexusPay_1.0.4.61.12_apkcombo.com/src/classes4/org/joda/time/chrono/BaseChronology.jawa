record `org.joda.time.chrono.BaseChronology` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.joda.time.Chronology` @kind class, `java.io.Serializable` @kind interface {
}
global `long` `@@org.joda.time.chrono.BaseChronology.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.chrono.BaseChronology` v0 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3affb4.  call `<init>`(v0) @signature `Lorg/joda/time/Chronology;.<init>:()V` @kind direct;
  #L3affba.  return @kind void;
}
procedure `long` `add`(`org.joda.time.chrono.BaseChronology` v3 @kind this, `long` v4 , `long` v6 , `int` v8 ) @signature `Lorg/joda/time/chrono/BaseChronology;.add:(JJI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3af7fc.  v0:= 0L;
  #L3af800.  v2:= lcmp(v6, v0);
  #L3af804.  if v2 == 0 then goto L3af81e;
  #L3af808.  if v8 != 0 then goto L3af80e;
  #L3af80c.  goto L3af81e;
  #L3af80e.  call temp:= `safeMultiply`(v6, v8) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(JI)J` @kind static;
  #L3af814.  v6:= temp @kind wide;
  #L3af816.  call temp:= `safeAdd`(v4, v6) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(JJ)J` @kind static;
  #L3af81c.  v4:= temp @kind wide;
  #L3af81e.  return v4 @kind wide;
}
procedure `long` `add`(`org.joda.time.chrono.BaseChronology` v7 @kind this, `org.joda.time.ReadablePeriod` v8 @kind object, `long` v9 , `int` v11 ) @signature `Lorg/joda/time/chrono/BaseChronology;.add:(Lorg/joda/time/ReadablePeriod;JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3af830.  if v11 == 0 then goto L3af880;
  #L3af834.  if v8 == 0 then goto L3af880;
  #L3af838.  v0:= 0I;
  #L3af83a.  call temp:= `size`(v8) @signature `Lorg/joda/time/ReadablePeriod;.size:()I` @kind interface;
  #L3af840.  v1:= temp;
  #L3af842.  if v0 >= v1 then goto L3af880;
  #L3af846.  call temp:= `getValue`(v8, v0) @signature `Lorg/joda/time/ReadablePeriod;.getValue:(I)I` @kind interface;
  #L3af84c.  v2:= temp;
  #L3af84e.  v2:= (`long`) v2 @kind i2l;
  #L3af850.  v4:= 0L;
  #L3af854.  v6:= lcmp(v2, v4);
  #L3af858.  if v6 == 0 then goto L3af87a;
  #L3af85c.  call temp:= `getFieldType`(v8, v0) @signature `Lorg/joda/time/ReadablePeriod;.getFieldType:(I)Lorg/joda/time/DurationFieldType;` @kind interface;
  #L3af862.  v4:= temp @kind object;
  #L3af864.  call temp:= `getField`(v4, v7) @signature `Lorg/joda/time/DurationFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;` @kind virtual;
  #L3af86a.  v4:= temp @kind object;
  #L3af86c.  v5:= (`long`) v11 @kind i2l;
  #L3af86e.  v2:= v2 * v5 @kind long;
  #L3af872.  call temp:= `add`(v4, v9, v2) @signature `Lorg/joda/time/DurationField;.add:(JJ)J` @kind virtual;
  #L3af878.  v9:= temp @kind wide;
  #L3af87a.  v0:= v0 + 1;
  #L3af87e.  goto L3af842;
  #L3af880.  return v9 @kind wide;
}
procedure `org.joda.time.DurationField` `centuries`(`org.joda.time.chrono.BaseChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.centuries:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3afe04.  call temp:= `centuries`() @signature `Lorg/joda/time/DurationFieldType;.centuries:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3afe0a.  v0:= temp @kind object;
  #L3afe0c.  call temp:= `getInstance`(v0) @signature `Lorg/joda/time/field/UnsupportedDurationField;.getInstance:(Lorg/joda/time/DurationFieldType;)Lorg/joda/time/field/UnsupportedDurationField;` @kind static;
  #L3afe12.  v0:= temp @kind object;
  #L3afe14.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `centuryOfEra`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.centuryOfEra:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afa10.  call temp:= `centuryOfEra`() @signature `Lorg/joda/time/DateTimeFieldType;.centuryOfEra:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afa16.  v0:= temp @kind object;
  #L3afa18.  call temp:= `centuries`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.centuries:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afa1e.  v1:= temp @kind object;
  #L3afa20.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afa26.  v0:= temp @kind object;
  #L3afa28.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `clockhourOfDay`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.clockhourOfDay:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afa3c.  call temp:= `clockhourOfDay`() @signature `Lorg/joda/time/DateTimeFieldType;.clockhourOfDay:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afa42.  v0:= temp @kind object;
  #L3afa44.  call temp:= `hours`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.hours:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afa4a.  v1:= temp @kind object;
  #L3afa4c.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afa52.  v0:= temp @kind object;
  #L3afa54.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `clockhourOfHalfday`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.clockhourOfHalfday:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afa68.  call temp:= `clockhourOfHalfday`() @signature `Lorg/joda/time/DateTimeFieldType;.clockhourOfHalfday:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afa6e.  v0:= temp @kind object;
  #L3afa70.  call temp:= `hours`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.hours:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afa76.  v1:= temp @kind object;
  #L3afa78.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afa7e.  v0:= temp @kind object;
  #L3afa80.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `dayOfMonth`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afa94.  call temp:= `dayOfMonth`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfMonth:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afa9a.  v0:= temp @kind object;
  #L3afa9c.  call temp:= `days`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.days:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afaa2.  v1:= temp @kind object;
  #L3afaa4.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afaaa.  v0:= temp @kind object;
  #L3afaac.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `dayOfWeek`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.dayOfWeek:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afac0.  call temp:= `dayOfWeek`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfWeek:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afac6.  v0:= temp @kind object;
  #L3afac8.  call temp:= `days`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.days:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3aface.  v1:= temp @kind object;
  #L3afad0.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afad6.  v0:= temp @kind object;
  #L3afad8.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `dayOfYear`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.dayOfYear:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afaec.  call temp:= `dayOfYear`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfYear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afaf2.  v0:= temp @kind object;
  #L3afaf4.  call temp:= `days`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.days:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afafa.  v1:= temp @kind object;
  #L3afafc.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afb02.  v0:= temp @kind object;
  #L3afb04.  return v0 @kind object;
}
procedure `org.joda.time.DurationField` `days`(`org.joda.time.chrono.BaseChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.days:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3afe28.  call temp:= `days`() @signature `Lorg/joda/time/DurationFieldType;.days:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3afe2e.  v0:= temp @kind object;
  #L3afe30.  call temp:= `getInstance`(v0) @signature `Lorg/joda/time/field/UnsupportedDurationField;.getInstance:(Lorg/joda/time/DurationFieldType;)Lorg/joda/time/field/UnsupportedDurationField;` @kind static;
  #L3afe36.  v0:= temp @kind object;
  #L3afe38.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `era`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.era:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afb18.  call temp:= `era`() @signature `Lorg/joda/time/DateTimeFieldType;.era:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afb1e.  v0:= temp @kind object;
  #L3afb20.  call temp:= `eras`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.eras:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afb26.  v1:= temp @kind object;
  #L3afb28.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afb2e.  v0:= temp @kind object;
  #L3afb30.  return v0 @kind object;
}
procedure `org.joda.time.DurationField` `eras`(`org.joda.time.chrono.BaseChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.eras:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3afe4c.  call temp:= `eras`() @signature `Lorg/joda/time/DurationFieldType;.eras:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3afe52.  v0:= temp @kind object;
  #L3afe54.  call temp:= `getInstance`(v0) @signature `Lorg/joda/time/field/UnsupportedDurationField;.getInstance:(Lorg/joda/time/DurationFieldType;)Lorg/joda/time/field/UnsupportedDurationField;` @kind static;
  #L3afe5a.  v0:= temp @kind object;
  #L3afe5c.  return v0 @kind object;
}
procedure `int`[] `get`(`org.joda.time.chrono.BaseChronology` v4 @kind this, `org.joda.time.ReadablePartial` v5 @kind object, `long` v6 ) @signature `Lorg/joda/time/chrono/BaseChronology;.get:(Lorg/joda/time/ReadablePartial;J)[I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3af6f0.  call temp:= `size`(v5) @signature `Lorg/joda/time/ReadablePartial;.size:()I` @kind interface;
  #L3af6f6.  v0:= temp;
  #L3af6f8.  v1:= new `int`[v0];
  #L3af6fc.  v2:= 0I;
  #L3af6fe.  if v2 >= v0 then goto L3af724;
  #L3af702.  call temp:= `getFieldType`(v5, v2) @signature `Lorg/joda/time/ReadablePartial;.getFieldType:(I)Lorg/joda/time/DateTimeFieldType;` @kind interface;
  #L3af708.  v3:= temp @kind object;
  #L3af70a.  call temp:= `getField`(v3, v4) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3af710.  v3:= temp @kind object;
  #L3af712.  call temp:= `get`(v3, v6) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3af718.  v3:= temp;
  #L3af71a.  v1[v2]:= v3;
  #L3af71e.  v2:= v2 + 1;
  #L3af722.  goto L3af6fe;
  #L3af724.  return v1 @kind object;
}
procedure `int`[] `get`(`org.joda.time.chrono.BaseChronology` v7 @kind this, `org.joda.time.ReadablePeriod` v8 @kind object, `long` v9 ) @signature `Lorg/joda/time/chrono/BaseChronology;.get:(Lorg/joda/time/ReadablePeriod;J)[I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3af738.  call temp:= `size`(v8) @signature `Lorg/joda/time/ReadablePeriod;.size:()I` @kind interface;
  #L3af73e.  v0:= temp;
  #L3af740.  v1:= new `int`[v0];
  #L3af744.  v2:= 0L;
  #L3af748.  v4:= lcmp(v9, v2);
  #L3af74c.  if v4 == 0 then goto L3af78c;
  #L3af750.  v4:= 0I;
  #L3af752.  if v4 >= v0 then goto L3af78c;
  #L3af756.  call temp:= `getFieldType`(v8, v4) @signature `Lorg/joda/time/ReadablePeriod;.getFieldType:(I)Lorg/joda/time/DurationFieldType;` @kind interface;
  #L3af75c.  v5:= temp @kind object;
  #L3af75e.  call temp:= `getField`(v5, v7) @signature `Lorg/joda/time/DurationFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;` @kind virtual;
  #L3af764.  v5:= temp @kind object;
  #L3af766.  call temp:= `isPrecise`(v5) @signature `Lorg/joda/time/DurationField;.isPrecise:()Z` @kind virtual;
  #L3af76c.  v6:= temp;
  #L3af76e.  if v6 == 0 then goto L3af786;
  #L3af772.  call temp:= `getDifference`(v5, v9, v2) @signature `Lorg/joda/time/DurationField;.getDifference:(JJ)I` @kind virtual;
  #L3af778.  v6:= temp;
  #L3af77a.  call temp:= `add`(v5, v2, v6) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L3af780.  v2:= temp @kind wide;
  #L3af782.  v1[v4]:= v6;
  #L3af786.  v4:= v4 + 1;
  #L3af78a.  goto L3af752;
  #L3af78c.  return v1 @kind object;
}
procedure `int`[] `get`(`org.joda.time.chrono.BaseChronology` v5 @kind this, `org.joda.time.ReadablePeriod` v6 @kind object, `long` v7 , `long` v9 ) @signature `Lorg/joda/time/chrono/BaseChronology;.get:(Lorg/joda/time/ReadablePeriod;JJ)[I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3af7a0.  call temp:= `size`(v6) @signature `Lorg/joda/time/ReadablePeriod;.size:()I` @kind interface;
  #L3af7a6.  v0:= temp;
  #L3af7a8.  v1:= new `int`[v0];
  #L3af7ac.  v2:= lcmp(v7, v9);
  #L3af7b0.  if v2 == 0 then goto L3af7e8;
  #L3af7b4.  v2:= 0I;
  #L3af7b6.  if v2 >= v0 then goto L3af7e8;
  #L3af7ba.  call temp:= `getFieldType`(v6, v2) @signature `Lorg/joda/time/ReadablePeriod;.getFieldType:(I)Lorg/joda/time/DurationFieldType;` @kind interface;
  #L3af7c0.  v3:= temp @kind object;
  #L3af7c2.  call temp:= `getField`(v3, v5) @signature `Lorg/joda/time/DurationFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;` @kind virtual;
  #L3af7c8.  v3:= temp @kind object;
  #L3af7ca.  call temp:= `getDifference`(v3, v9, v7) @signature `Lorg/joda/time/DurationField;.getDifference:(JJ)I` @kind virtual;
  #L3af7d0.  v4:= temp;
  #L3af7d2.  if v4 == 0 then goto L3af7de;
  #L3af7d6.  call temp:= `add`(v3, v7, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L3af7dc.  v7:= temp @kind wide;
  #L3af7de.  v1[v2]:= v4;
  #L3af7e2.  v2:= v2 + 1;
  #L3af7e6.  goto L3af7b6;
  #L3af7e8.  return v1 @kind object;
}
procedure `long` `getDateTimeMillis`(`org.joda.time.chrono.BaseChronology` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lorg/joda/time/chrono/BaseChronology;.getDateTimeMillis:(IIII)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3af894.  call temp:= `year`(v3) @signature `Lorg/joda/time/chrono/BaseChronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3af89a.  v0:= temp @kind object;
  #L3af89c.  v1:= 0L;
  #L3af8a0.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3af8a6.  v0:= temp @kind wide;
  #L3af8a8.  call temp:= `monthOfYear`(v3) @signature `Lorg/joda/time/chrono/BaseChronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3af8ae.  v4:= temp @kind object;
  #L3af8b0.  call temp:= `set`(v4, v0, v5) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3af8b6.  v4:= temp @kind wide;
  #L3af8b8.  call temp:= `dayOfMonth`(v3) @signature `Lorg/joda/time/chrono/BaseChronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3af8be.  v0:= temp @kind object;
  #L3af8c0.  call temp:= `set`(v0, v4, v6) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3af8c6.  v4:= temp @kind wide;
  #L3af8c8.  call temp:= `millisOfDay`(v3) @signature `Lorg/joda/time/chrono/BaseChronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3af8ce.  v6:= temp @kind object;
  #L3af8d0.  call temp:= `set`(v6, v4, v7) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3af8d6.  v4:= temp @kind wide;
  #L3af8d8.  return v4 @kind wide;
}
procedure `long` `getDateTimeMillis`(`org.joda.time.chrono.BaseChronology` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 , `int` v8 , `int` v9 , `int` v10 ) @signature `Lorg/joda/time/chrono/BaseChronology;.getDateTimeMillis:(IIIIIII)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3af8ec.  call temp:= `year`(v3) @signature `Lorg/joda/time/chrono/BaseChronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3af8f2.  v0:= temp @kind object;
  #L3af8f4.  v1:= 0L;
  #L3af8f8.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3af8fe.  v0:= temp @kind wide;
  #L3af900.  call temp:= `monthOfYear`(v3) @signature `Lorg/joda/time/chrono/BaseChronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3af906.  v4:= temp @kind object;
  #L3af908.  call temp:= `set`(v4, v0, v5) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3af90e.  v4:= temp @kind wide;
  #L3af910.  call temp:= `dayOfMonth`(v3) @signature `Lorg/joda/time/chrono/BaseChronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3af916.  v0:= temp @kind object;
  #L3af918.  call temp:= `set`(v0, v4, v6) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3af91e.  v4:= temp @kind wide;
  #L3af920.  call temp:= `hourOfDay`(v3) @signature `Lorg/joda/time/chrono/BaseChronology;.hourOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3af926.  v6:= temp @kind object;
  #L3af928.  call temp:= `set`(v6, v4, v7) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3af92e.  v4:= temp @kind wide;
  #L3af930.  call temp:= `minuteOfHour`(v3) @signature `Lorg/joda/time/chrono/BaseChronology;.minuteOfHour:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3af936.  v6:= temp @kind object;
  #L3af938.  call temp:= `set`(v6, v4, v8) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3af93e.  v4:= temp @kind wide;
  #L3af940.  call temp:= `secondOfMinute`(v3) @signature `Lorg/joda/time/chrono/BaseChronology;.secondOfMinute:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3af946.  v6:= temp @kind object;
  #L3af948.  call temp:= `set`(v6, v4, v9) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3af94e.  v4:= temp @kind wide;
  #L3af950.  call temp:= `millisOfSecond`(v3) @signature `Lorg/joda/time/chrono/BaseChronology;.millisOfSecond:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3af956.  v6:= temp @kind object;
  #L3af958.  call temp:= `set`(v6, v4, v10) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3af95e.  v4:= temp @kind wide;
  #L3af960.  return v4 @kind wide;
}
procedure `long` `getDateTimeMillis`(`org.joda.time.chrono.BaseChronology` v1 @kind this, `long` v2 , `int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lorg/joda/time/chrono/BaseChronology;.getDateTimeMillis:(JIIII)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3af974.  call temp:= `hourOfDay`(v1) @signature `Lorg/joda/time/chrono/BaseChronology;.hourOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3af97a.  v0:= temp @kind object;
  #L3af97c.  call temp:= `set`(v0, v2, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3af982.  v2:= temp @kind wide;
  #L3af984.  call temp:= `minuteOfHour`(v1) @signature `Lorg/joda/time/chrono/BaseChronology;.minuteOfHour:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3af98a.  v4:= temp @kind object;
  #L3af98c.  call temp:= `set`(v4, v2, v5) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3af992.  v2:= temp @kind wide;
  #L3af994.  call temp:= `secondOfMinute`(v1) @signature `Lorg/joda/time/chrono/BaseChronology;.secondOfMinute:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3af99a.  v4:= temp @kind object;
  #L3af99c.  call temp:= `set`(v4, v2, v6) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3af9a2.  v2:= temp @kind wide;
  #L3af9a4.  call temp:= `millisOfSecond`(v1) @signature `Lorg/joda/time/chrono/BaseChronology;.millisOfSecond:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3af9aa.  v4:= temp @kind object;
  #L3af9ac.  call temp:= `set`(v4, v2, v7) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3af9b2.  v2:= temp @kind wide;
  #L3af9b4.  return v2 @kind wide;
}
procedure `org.joda.time.DateTimeZone` `getZone`() @signature `Lorg/joda/time/chrono/BaseChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.joda.time.DateTimeField` `halfdayOfDay`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.halfdayOfDay:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afb44.  call temp:= `halfdayOfDay`() @signature `Lorg/joda/time/DateTimeFieldType;.halfdayOfDay:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afb4a.  v0:= temp @kind object;
  #L3afb4c.  call temp:= `halfdays`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.halfdays:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afb52.  v1:= temp @kind object;
  #L3afb54.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afb5a.  v0:= temp @kind object;
  #L3afb5c.  return v0 @kind object;
}
procedure `org.joda.time.DurationField` `halfdays`(`org.joda.time.chrono.BaseChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.halfdays:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3afe70.  call temp:= `halfdays`() @signature `Lorg/joda/time/DurationFieldType;.halfdays:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3afe76.  v0:= temp @kind object;
  #L3afe78.  call temp:= `getInstance`(v0) @signature `Lorg/joda/time/field/UnsupportedDurationField;.getInstance:(Lorg/joda/time/DurationFieldType;)Lorg/joda/time/field/UnsupportedDurationField;` @kind static;
  #L3afe7e.  v0:= temp @kind object;
  #L3afe80.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `hourOfDay`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.hourOfDay:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afb70.  call temp:= `hourOfDay`() @signature `Lorg/joda/time/DateTimeFieldType;.hourOfDay:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afb76.  v0:= temp @kind object;
  #L3afb78.  call temp:= `hours`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.hours:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afb7e.  v1:= temp @kind object;
  #L3afb80.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afb86.  v0:= temp @kind object;
  #L3afb88.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `hourOfHalfday`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.hourOfHalfday:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afb9c.  call temp:= `hourOfHalfday`() @signature `Lorg/joda/time/DateTimeFieldType;.hourOfHalfday:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afba2.  v0:= temp @kind object;
  #L3afba4.  call temp:= `hours`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.hours:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afbaa.  v1:= temp @kind object;
  #L3afbac.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afbb2.  v0:= temp @kind object;
  #L3afbb4.  return v0 @kind object;
}
procedure `org.joda.time.DurationField` `hours`(`org.joda.time.chrono.BaseChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.hours:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3afe94.  call temp:= `hours`() @signature `Lorg/joda/time/DurationFieldType;.hours:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3afe9a.  v0:= temp @kind object;
  #L3afe9c.  call temp:= `getInstance`(v0) @signature `Lorg/joda/time/field/UnsupportedDurationField;.getInstance:(Lorg/joda/time/DurationFieldType;)Lorg/joda/time/field/UnsupportedDurationField;` @kind static;
  #L3afea2.  v0:= temp @kind object;
  #L3afea4.  return v0 @kind object;
}
procedure `org.joda.time.DurationField` `millis`(`org.joda.time.chrono.BaseChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.millis:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3afeb8.  call temp:= `millis`() @signature `Lorg/joda/time/DurationFieldType;.millis:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3afebe.  v0:= temp @kind object;
  #L3afec0.  call temp:= `getInstance`(v0) @signature `Lorg/joda/time/field/UnsupportedDurationField;.getInstance:(Lorg/joda/time/DurationFieldType;)Lorg/joda/time/field/UnsupportedDurationField;` @kind static;
  #L3afec6.  v0:= temp @kind object;
  #L3afec8.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `millisOfDay`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afbc8.  call temp:= `millisOfDay`() @signature `Lorg/joda/time/DateTimeFieldType;.millisOfDay:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afbce.  v0:= temp @kind object;
  #L3afbd0.  call temp:= `millis`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.millis:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afbd6.  v1:= temp @kind object;
  #L3afbd8.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afbde.  v0:= temp @kind object;
  #L3afbe0.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `millisOfSecond`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.millisOfSecond:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afbf4.  call temp:= `millisOfSecond`() @signature `Lorg/joda/time/DateTimeFieldType;.millisOfSecond:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afbfa.  v0:= temp @kind object;
  #L3afbfc.  call temp:= `millis`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.millis:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afc02.  v1:= temp @kind object;
  #L3afc04.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afc0a.  v0:= temp @kind object;
  #L3afc0c.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `minuteOfDay`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.minuteOfDay:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afc20.  call temp:= `minuteOfDay`() @signature `Lorg/joda/time/DateTimeFieldType;.minuteOfDay:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afc26.  v0:= temp @kind object;
  #L3afc28.  call temp:= `minutes`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.minutes:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afc2e.  v1:= temp @kind object;
  #L3afc30.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afc36.  v0:= temp @kind object;
  #L3afc38.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `minuteOfHour`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.minuteOfHour:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afc4c.  call temp:= `minuteOfHour`() @signature `Lorg/joda/time/DateTimeFieldType;.minuteOfHour:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afc52.  v0:= temp @kind object;
  #L3afc54.  call temp:= `minutes`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.minutes:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afc5a.  v1:= temp @kind object;
  #L3afc5c.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afc62.  v0:= temp @kind object;
  #L3afc64.  return v0 @kind object;
}
procedure `org.joda.time.DurationField` `minutes`(`org.joda.time.chrono.BaseChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.minutes:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3afedc.  call temp:= `minutes`() @signature `Lorg/joda/time/DurationFieldType;.minutes:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3afee2.  v0:= temp @kind object;
  #L3afee4.  call temp:= `getInstance`(v0) @signature `Lorg/joda/time/field/UnsupportedDurationField;.getInstance:(Lorg/joda/time/DurationFieldType;)Lorg/joda/time/field/UnsupportedDurationField;` @kind static;
  #L3afeea.  v0:= temp @kind object;
  #L3afeec.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `monthOfYear`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afc78.  call temp:= `monthOfYear`() @signature `Lorg/joda/time/DateTimeFieldType;.monthOfYear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afc7e.  v0:= temp @kind object;
  #L3afc80.  call temp:= `months`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.months:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afc86.  v1:= temp @kind object;
  #L3afc88.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afc8e.  v0:= temp @kind object;
  #L3afc90.  return v0 @kind object;
}
procedure `org.joda.time.DurationField` `months`(`org.joda.time.chrono.BaseChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.months:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aff00.  call temp:= `months`() @signature `Lorg/joda/time/DurationFieldType;.months:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3aff06.  v0:= temp @kind object;
  #L3aff08.  call temp:= `getInstance`(v0) @signature `Lorg/joda/time/field/UnsupportedDurationField;.getInstance:(Lorg/joda/time/DurationFieldType;)Lorg/joda/time/field/UnsupportedDurationField;` @kind static;
  #L3aff0e.  v0:= temp @kind object;
  #L3aff10.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `secondOfDay`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.secondOfDay:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afca4.  call temp:= `secondOfDay`() @signature `Lorg/joda/time/DateTimeFieldType;.secondOfDay:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afcaa.  v0:= temp @kind object;
  #L3afcac.  call temp:= `seconds`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.seconds:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afcb2.  v1:= temp @kind object;
  #L3afcb4.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afcba.  v0:= temp @kind object;
  #L3afcbc.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `secondOfMinute`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.secondOfMinute:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afcd0.  call temp:= `secondOfMinute`() @signature `Lorg/joda/time/DateTimeFieldType;.secondOfMinute:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afcd6.  v0:= temp @kind object;
  #L3afcd8.  call temp:= `seconds`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.seconds:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afcde.  v1:= temp @kind object;
  #L3afce0.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afce6.  v0:= temp @kind object;
  #L3afce8.  return v0 @kind object;
}
procedure `org.joda.time.DurationField` `seconds`(`org.joda.time.chrono.BaseChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.seconds:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aff24.  call temp:= `seconds`() @signature `Lorg/joda/time/DurationFieldType;.seconds:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3aff2a.  v0:= temp @kind object;
  #L3aff2c.  call temp:= `getInstance`(v0) @signature `Lorg/joda/time/field/UnsupportedDurationField;.getInstance:(Lorg/joda/time/DurationFieldType;)Lorg/joda/time/field/UnsupportedDurationField;` @kind static;
  #L3aff32.  v0:= temp @kind object;
  #L3aff34.  return v0 @kind object;
}
procedure `long` `set`(`org.joda.time.chrono.BaseChronology` v4 @kind this, `org.joda.time.ReadablePartial` v5 @kind object, `long` v6 ) @signature `Lorg/joda/time/chrono/BaseChronology;.set:(Lorg/joda/time/ReadablePartial;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3af9c8.  call temp:= `size`(v5) @signature `Lorg/joda/time/ReadablePartial;.size:()I` @kind interface;
  #L3af9ce.  v0:= temp;
  #L3af9d0.  v1:= 0I;
  #L3af9d2.  if v1 >= v0 then goto L3af9fc;
  #L3af9d6.  call temp:= `getFieldType`(v5, v1) @signature `Lorg/joda/time/ReadablePartial;.getFieldType:(I)Lorg/joda/time/DateTimeFieldType;` @kind interface;
  #L3af9dc.  v2:= temp @kind object;
  #L3af9de.  call temp:= `getField`(v2, v4) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3af9e4.  v2:= temp @kind object;
  #L3af9e6.  call temp:= `getValue`(v5, v1) @signature `Lorg/joda/time/ReadablePartial;.getValue:(I)I` @kind interface;
  #L3af9ec.  v3:= temp;
  #L3af9ee.  call temp:= `set`(v2, v6, v3) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3af9f4.  v6:= temp @kind wide;
  #L3af9f6.  v1:= v1 + 1;
  #L3af9fa.  goto L3af9d2;
  #L3af9fc.  return v6 @kind wide;
}
procedure `java.lang.String` `toString`() @signature `Lorg/joda/time/chrono/BaseChronology;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `validate`(`org.joda.time.chrono.BaseChronology` v7 @kind this, `org.joda.time.ReadablePartial` v8 @kind object, `int`[] v9 @kind object) @signature `Lorg/joda/time/chrono/BaseChronology;.validate:(Lorg/joda/time/ReadablePartial;[I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3affcc.  call temp:= `size`(v8) @signature `Lorg/joda/time/ReadablePartial;.size:()I` @kind interface;
  #L3affd2.  v0:= temp;
  #L3affd4.  v1:= 0I;
  #L3affd6.  v2:= 0I;
  #L3affd8.  v3:= 0I;
  #L3affda.  if v2 >= v0 then goto L3b0060;
  #L3affde.  v4:= v9[v2];
  #L3affe2.  call temp:= `getField`(v8, v2) @signature `Lorg/joda/time/ReadablePartial;.getField:(I)Lorg/joda/time/DateTimeField;` @kind interface;
  #L3affe8.  v5:= temp @kind object;
  #L3affea.  call temp:= `getMinimumValue`(v5) @signature `Lorg/joda/time/DateTimeField;.getMinimumValue:()I` @kind virtual;
  #L3afff0.  v6:= temp;
  #L3afff2.  if v4 < v6 then goto L3b0034;
  #L3afff6.  call temp:= `getMaximumValue`(v5) @signature `Lorg/joda/time/DateTimeField;.getMaximumValue:()I` @kind virtual;
  #L3afffc.  v6:= temp;
  #L3afffe.  if v4 > v6 then goto L3b0008;
  #L3b0002.  v2:= v2 + 1;
  #L3b0006.  goto L3affd8;
  #L3b0008.  v8:= new `org.joda.time.IllegalFieldValueException`;
  #L3b000c.  call temp:= `getType`(v5) @signature `Lorg/joda/time/DateTimeField;.getType:()Lorg/joda/time/DateTimeFieldType;` @kind virtual;
  #L3b0012.  v9:= temp @kind object;
  #L3b0014.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b001a.  v0:= temp @kind object;
  #L3b001c.  call temp:= `getMaximumValue`(v5) @signature `Lorg/joda/time/DateTimeField;.getMaximumValue:()I` @kind virtual;
  #L3b0022.  v1:= temp;
  #L3b0024.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b002a.  v1:= temp @kind object;
  #L3b002c.  call `<init>`(v8, v9, v0, v3, v1) @signature `Lorg/joda/time/IllegalFieldValueException;.<init>:(Lorg/joda/time/DateTimeFieldType;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V` @kind direct;
  #L3b0032.  throw v8;
  #L3b0034.  v8:= new `org.joda.time.IllegalFieldValueException`;
  #L3b0038.  call temp:= `getType`(v5) @signature `Lorg/joda/time/DateTimeField;.getType:()Lorg/joda/time/DateTimeFieldType;` @kind virtual;
  #L3b003e.  v9:= temp @kind object;
  #L3b0040.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b0046.  v0:= temp @kind object;
  #L3b0048.  call temp:= `getMinimumValue`(v5) @signature `Lorg/joda/time/DateTimeField;.getMinimumValue:()I` @kind virtual;
  #L3b004e.  v1:= temp;
  #L3b0050.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b0056.  v1:= temp @kind object;
  #L3b0058.  call `<init>`(v8, v9, v0, v1, v3) @signature `Lorg/joda/time/IllegalFieldValueException;.<init>:(Lorg/joda/time/DateTimeFieldType;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V` @kind direct;
  #L3b005e.  throw v8;
  #L3b0060.  if v1 >= v0 then goto L3b00e6;
  #L3b0064.  v2:= v9[v1];
  #L3b0068.  call temp:= `getField`(v8, v1) @signature `Lorg/joda/time/ReadablePartial;.getField:(I)Lorg/joda/time/DateTimeField;` @kind interface;
  #L3b006e.  v4:= temp @kind object;
  #L3b0070.  call temp:= `getMinimumValue`(v4, v8, v9) @signature `Lorg/joda/time/DateTimeField;.getMinimumValue:(Lorg/joda/time/ReadablePartial;[I)I` @kind virtual;
  #L3b0076.  v5:= temp;
  #L3b0078.  if v2 < v5 then goto L3b00ba;
  #L3b007c.  call temp:= `getMaximumValue`(v4, v8, v9) @signature `Lorg/joda/time/DateTimeField;.getMaximumValue:(Lorg/joda/time/ReadablePartial;[I)I` @kind virtual;
  #L3b0082.  v5:= temp;
  #L3b0084.  if v2 > v5 then goto L3b008e;
  #L3b0088.  v1:= v1 + 1;
  #L3b008c.  goto L3b0060;
  #L3b008e.  v0:= new `org.joda.time.IllegalFieldValueException`;
  #L3b0092.  call temp:= `getType`(v4) @signature `Lorg/joda/time/DateTimeField;.getType:()Lorg/joda/time/DateTimeFieldType;` @kind virtual;
  #L3b0098.  v1:= temp @kind object;
  #L3b009a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b00a0.  v2:= temp @kind object;
  #L3b00a2.  call temp:= `getMaximumValue`(v4, v8, v9) @signature `Lorg/joda/time/DateTimeField;.getMaximumValue:(Lorg/joda/time/ReadablePartial;[I)I` @kind virtual;
  #L3b00a8.  v8:= temp;
  #L3b00aa.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b00b0.  v8:= temp @kind object;
  #L3b00b2.  call `<init>`(v0, v1, v2, v3, v8) @signature `Lorg/joda/time/IllegalFieldValueException;.<init>:(Lorg/joda/time/DateTimeFieldType;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V` @kind direct;
  #L3b00b8.  throw v0;
  #L3b00ba.  v0:= new `org.joda.time.IllegalFieldValueException`;
  #L3b00be.  call temp:= `getType`(v4) @signature `Lorg/joda/time/DateTimeField;.getType:()Lorg/joda/time/DateTimeFieldType;` @kind virtual;
  #L3b00c4.  v1:= temp @kind object;
  #L3b00c6.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b00cc.  v2:= temp @kind object;
  #L3b00ce.  call temp:= `getMinimumValue`(v4, v8, v9) @signature `Lorg/joda/time/DateTimeField;.getMinimumValue:(Lorg/joda/time/ReadablePartial;[I)I` @kind virtual;
  #L3b00d4.  v8:= temp;
  #L3b00d6.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3b00dc.  v8:= temp @kind object;
  #L3b00de.  call `<init>`(v0, v1, v2, v8, v3) @signature `Lorg/joda/time/IllegalFieldValueException;.<init>:(Lorg/joda/time/DateTimeFieldType;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V` @kind direct;
  #L3b00e4.  throw v0;
  #L3b00e6.  return @kind void;
}
procedure `org.joda.time.DateTimeField` `weekOfWeekyear`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.weekOfWeekyear:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afcfc.  call temp:= `weekOfWeekyear`() @signature `Lorg/joda/time/DateTimeFieldType;.weekOfWeekyear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afd02.  v0:= temp @kind object;
  #L3afd04.  call temp:= `weeks`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.weeks:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afd0a.  v1:= temp @kind object;
  #L3afd0c.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afd12.  v0:= temp @kind object;
  #L3afd14.  return v0 @kind object;
}
procedure `org.joda.time.DurationField` `weeks`(`org.joda.time.chrono.BaseChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.weeks:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aff48.  call temp:= `weeks`() @signature `Lorg/joda/time/DurationFieldType;.weeks:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3aff4e.  v0:= temp @kind object;
  #L3aff50.  call temp:= `getInstance`(v0) @signature `Lorg/joda/time/field/UnsupportedDurationField;.getInstance:(Lorg/joda/time/DurationFieldType;)Lorg/joda/time/field/UnsupportedDurationField;` @kind static;
  #L3aff56.  v0:= temp @kind object;
  #L3aff58.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `weekyear`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.weekyear:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afd28.  call temp:= `weekyear`() @signature `Lorg/joda/time/DateTimeFieldType;.weekyear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afd2e.  v0:= temp @kind object;
  #L3afd30.  call temp:= `weekyears`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.weekyears:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afd36.  v1:= temp @kind object;
  #L3afd38.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afd3e.  v0:= temp @kind object;
  #L3afd40.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `weekyearOfCentury`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.weekyearOfCentury:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afd54.  call temp:= `weekyearOfCentury`() @signature `Lorg/joda/time/DateTimeFieldType;.weekyearOfCentury:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afd5a.  v0:= temp @kind object;
  #L3afd5c.  call temp:= `weekyears`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.weekyears:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afd62.  v1:= temp @kind object;
  #L3afd64.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afd6a.  v0:= temp @kind object;
  #L3afd6c.  return v0 @kind object;
}
procedure `org.joda.time.DurationField` `weekyears`(`org.joda.time.chrono.BaseChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.weekyears:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aff6c.  call temp:= `weekyears`() @signature `Lorg/joda/time/DurationFieldType;.weekyears:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3aff72.  v0:= temp @kind object;
  #L3aff74.  call temp:= `getInstance`(v0) @signature `Lorg/joda/time/field/UnsupportedDurationField;.getInstance:(Lorg/joda/time/DurationFieldType;)Lorg/joda/time/field/UnsupportedDurationField;` @kind static;
  #L3aff7a.  v0:= temp @kind object;
  #L3aff7c.  return v0 @kind object;
}
procedure `org.joda.time.Chronology` `withUTC`() @signature `Lorg/joda/time/chrono/BaseChronology;.withUTC:()Lorg/joda/time/Chronology;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.joda.time.Chronology` `withZone`(`org.joda.time.DateTimeZone` v0 @kind object) @signature `Lorg/joda/time/chrono/BaseChronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.joda.time.DateTimeField` `year`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.year:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afd80.  call temp:= `year`() @signature `Lorg/joda/time/DateTimeFieldType;.year:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afd86.  v0:= temp @kind object;
  #L3afd88.  call temp:= `years`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.years:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afd8e.  v1:= temp @kind object;
  #L3afd90.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afd96.  v0:= temp @kind object;
  #L3afd98.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `yearOfCentury`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.yearOfCentury:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afdac.  call temp:= `yearOfCentury`() @signature `Lorg/joda/time/DateTimeFieldType;.yearOfCentury:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afdb2.  v0:= temp @kind object;
  #L3afdb4.  call temp:= `years`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.years:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afdba.  v1:= temp @kind object;
  #L3afdbc.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afdc2.  v0:= temp @kind object;
  #L3afdc4.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `yearOfEra`(`org.joda.time.chrono.BaseChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.yearOfEra:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3afdd8.  call temp:= `yearOfEra`() @signature `Lorg/joda/time/DateTimeFieldType;.yearOfEra:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3afdde.  v0:= temp @kind object;
  #L3afde0.  call temp:= `years`(v2) @signature `Lorg/joda/time/chrono/BaseChronology;.years:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3afde6.  v1:= temp @kind object;
  #L3afde8.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3afdee.  v0:= temp @kind object;
  #L3afdf0.  return v0 @kind object;
}
procedure `org.joda.time.DurationField` `years`(`org.joda.time.chrono.BaseChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/BaseChronology;.years:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3aff90.  call temp:= `years`() @signature `Lorg/joda/time/DurationFieldType;.years:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3aff96.  v0:= temp @kind object;
  #L3aff98.  call temp:= `getInstance`(v0) @signature `Lorg/joda/time/field/UnsupportedDurationField;.getInstance:(Lorg/joda/time/DurationFieldType;)Lorg/joda/time/field/UnsupportedDurationField;` @kind static;
  #L3aff9e.  v0:= temp @kind object;
  #L3affa0.  return v0 @kind object;
}
