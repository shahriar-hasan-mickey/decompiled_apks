record `org.joda.time.chrono.GJChronology` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.chrono.AssembledChronology` @kind class {
  `org.joda.time.Instant` `org.joda.time.chrono.GJChronology.iCutoverInstant` @AccessFlag PRIVATE;
  `long` `org.joda.time.chrono.GJChronology.iCutoverMillis` @AccessFlag PRIVATE;
  `long` `org.joda.time.chrono.GJChronology.iGapDuration` @AccessFlag PRIVATE;
  `org.joda.time.chrono.GregorianChronology` `org.joda.time.chrono.GJChronology.iGregorianChronology` @AccessFlag PRIVATE;
  `org.joda.time.chrono.JulianChronology` `org.joda.time.chrono.GJChronology.iJulianChronology` @AccessFlag PRIVATE;
}
global `org.joda.time.Instant` `@@org.joda.time.chrono.GJChronology.DEFAULT_CUTOVER` @AccessFlag STATIC_FINAL;
global `java.util.concurrent.ConcurrentHashMap` `@@org.joda.time.chrono.GJChronology.cCache` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.joda.time.chrono.GJChronology.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/chrono/GJChronology;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3b4b6c.  v0:= new `org.joda.time.Instant`;
  #L3b4b70.  v1:= -12219292800000L;
  #L3b4b7a.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Instant;.<init>:(J)V` @kind direct;
  #L3b4b80.  `@@org.joda.time.chrono.GJChronology.DEFAULT_CUTOVER` @type ^`org.joda.time.Instant` := v0 @kind object;
  #L3b4b84.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L3b4b88.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L3b4b8e.  `@@org.joda.time.chrono.GJChronology.cCache` @type ^`java.util.concurrent.ConcurrentHashMap` := v0 @kind object;
  #L3b4b92.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.chrono.GJChronology` v2 @kind this, `org.joda.time.Chronology` v3 @kind object, `org.joda.time.chrono.JulianChronology` v4 @kind object, `org.joda.time.chrono.GregorianChronology` v5 @kind object, `org.joda.time.Instant` v6 @kind object) @signature `Lorg/joda/time/chrono/GJChronology;.<init>:(Lorg/joda/time/Chronology;Lorg/joda/time/chrono/JulianChronology;Lorg/joda/time/chrono/GregorianChronology;Lorg/joda/time/Instant;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3b4ba4.  v0:= 3I;
  #L3b4ba6.  v0:= new `java.lang.Object`[v0];
  #L3b4baa.  v1:= 0I;
  #L3b4bac.  v0[v1]:= v4 @kind object;
  #L3b4bb0.  v4:= 1I;
  #L3b4bb2.  v0[v4]:= v5 @kind object;
  #L3b4bb6.  v4:= 2I;
  #L3b4bb8.  v0[v4]:= v6 @kind object;
  #L3b4bbc.  call `<init>`(v2, v3, v0) @signature `Lorg/joda/time/chrono/AssembledChronology;.<init>:(Lorg/joda/time/Chronology;Ljava/lang/Object;)V` @kind direct;
  #L3b4bc2.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.chrono.GJChronology` v2 @kind this, `org.joda.time.chrono.JulianChronology` v3 @kind object, `org.joda.time.chrono.GregorianChronology` v4 @kind object, `org.joda.time.Instant` v5 @kind object) @signature `Lorg/joda/time/chrono/GJChronology;.<init>:(Lorg/joda/time/chrono/JulianChronology;Lorg/joda/time/chrono/GregorianChronology;Lorg/joda/time/Instant;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3b4bd4.  v0:= 3I;
  #L3b4bd6.  v0:= new `java.lang.Object`[v0];
  #L3b4bda.  v1:= 0I;
  #L3b4bdc.  v0[v1]:= v3 @kind object;
  #L3b4be0.  v3:= 1I;
  #L3b4be2.  v0[v3]:= v4 @kind object;
  #L3b4be6.  v3:= 2I;
  #L3b4be8.  v0[v3]:= v5 @kind object;
  #L3b4bec.  v3:= 0I;
  #L3b4bee.  call `<init>`(v2, v3, v0) @signature `Lorg/joda/time/chrono/AssembledChronology;.<init>:(Lorg/joda/time/Chronology;Ljava/lang/Object;)V` @kind direct;
  #L3b4bf4.  return @kind void;
}
procedure `long` `access$000`(`org.joda.time.chrono.GJChronology` v2 @kind object) @signature `Lorg/joda/time/chrono/GJChronology;.access$000:(Lorg/joda/time/chrono/GJChronology;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L3b45e4.  v0:= v2.`org.joda.time.chrono.GJChronology.iGapDuration` @type ^`long` @kind wide;
  #L3b45e8.  return v0 @kind wide;
}
procedure `org.joda.time.chrono.GregorianChronology` `access$100`(`org.joda.time.chrono.GJChronology` v0 @kind object) @signature `Lorg/joda/time/chrono/GJChronology;.access$100:(Lorg/joda/time/chrono/GJChronology;)Lorg/joda/time/chrono/GregorianChronology;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3b4b54.  v0:= v0.`org.joda.time.chrono.GJChronology.iGregorianChronology` @type ^`org.joda.time.chrono.GregorianChronology` @kind object;
  #L3b4b58.  return v0 @kind object;
}
procedure `long` `convertByWeekyear`(`long` v4 , `org.joda.time.Chronology` v6 @kind object, `org.joda.time.Chronology` v7 @kind object) @signature `Lorg/joda/time/chrono/GJChronology;.convertByWeekyear:(JLorg/joda/time/Chronology;Lorg/joda/time/Chronology;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b45fc.  call temp:= `weekyear`(v7) @signature `Lorg/joda/time/Chronology;.weekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4602.  v0:= temp @kind object;
  #L3b4604.  call temp:= `weekyear`(v6) @signature `Lorg/joda/time/Chronology;.weekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b460a.  v1:= temp @kind object;
  #L3b460c.  call temp:= `get`(v1, v4) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3b4612.  v1:= temp;
  #L3b4614.  v2:= 0L;
  #L3b4618.  call temp:= `set`(v0, v2, v1) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3b461e.  v0:= temp @kind wide;
  #L3b4620.  call temp:= `weekOfWeekyear`(v7) @signature `Lorg/joda/time/Chronology;.weekOfWeekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4626.  v2:= temp @kind object;
  #L3b4628.  call temp:= `weekOfWeekyear`(v6) @signature `Lorg/joda/time/Chronology;.weekOfWeekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b462e.  v3:= temp @kind object;
  #L3b4630.  call temp:= `get`(v3, v4) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3b4636.  v3:= temp;
  #L3b4638.  call temp:= `set`(v2, v0, v3) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3b463e.  v0:= temp @kind wide;
  #L3b4640.  call temp:= `dayOfWeek`(v7) @signature `Lorg/joda/time/Chronology;.dayOfWeek:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4646.  v2:= temp @kind object;
  #L3b4648.  call temp:= `dayOfWeek`(v6) @signature `Lorg/joda/time/Chronology;.dayOfWeek:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b464e.  v3:= temp @kind object;
  #L3b4650.  call temp:= `get`(v3, v4) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3b4656.  v3:= temp;
  #L3b4658.  call temp:= `set`(v2, v0, v3) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3b465e.  v0:= temp @kind wide;
  #L3b4660.  call temp:= `millisOfDay`(v7) @signature `Lorg/joda/time/Chronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4666.  v7:= temp @kind object;
  #L3b4668.  call temp:= `millisOfDay`(v6) @signature `Lorg/joda/time/Chronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b466e.  v6:= temp @kind object;
  #L3b4670.  call temp:= `get`(v6, v4) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3b4676.  v4:= temp;
  #L3b4678.  call temp:= `set`(v7, v0, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3b467e.  v4:= temp @kind wide;
  #L3b4680.  return v4 @kind wide;
}
procedure `long` `convertByYear`(`long` v3 , `org.joda.time.Chronology` v5 @kind object, `org.joda.time.Chronology` v6 @kind object) @signature `Lorg/joda/time/chrono/GJChronology;.convertByYear:(JLorg/joda/time/Chronology;Lorg/joda/time/Chronology;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3b4694.  call temp:= `year`(v5) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b469a.  v0:= temp @kind object;
  #L3b469c.  call temp:= `get`(v0, v3) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3b46a2.  v0:= temp;
  #L3b46a4.  call temp:= `monthOfYear`(v5) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b46aa.  v1:= temp @kind object;
  #L3b46ac.  call temp:= `get`(v1, v3) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3b46b2.  v1:= temp;
  #L3b46b4.  call temp:= `dayOfMonth`(v5) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b46ba.  v2:= temp @kind object;
  #L3b46bc.  call temp:= `get`(v2, v3) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3b46c2.  v2:= temp;
  #L3b46c4.  call temp:= `millisOfDay`(v5) @signature `Lorg/joda/time/Chronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b46ca.  v5:= temp @kind object;
  #L3b46cc.  call temp:= `get`(v5, v3) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3b46d2.  v3:= temp;
  #L3b46d4.  call temp:= `getDateTimeMillis`(v6, v0, v1, v2, v3) @signature `Lorg/joda/time/Chronology;.getDateTimeMillis:(IIII)J` @kind virtual;
  #L3b46da.  v3:= temp @kind wide;
  #L3b46dc.  return v3 @kind wide;
}
procedure `org.joda.time.chrono.GJChronology` `getInstance`() @signature `Lorg/joda/time/chrono/GJChronology;.getInstance:()Lorg/joda/time/chrono/GJChronology;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3b49a8.  call temp:= `getDefault`() @signature `Lorg/joda/time/DateTimeZone;.getDefault:()Lorg/joda/time/DateTimeZone;` @kind static;
  #L3b49ae.  v0:= temp @kind object;
  #L3b49b0.  v1:= `@@org.joda.time.chrono.GJChronology.DEFAULT_CUTOVER` @type ^`org.joda.time.Instant` @kind object;
  #L3b49b4.  v2:= 4I;
  #L3b49b6.  call temp:= `getInstance`(v0, v1, v2) @signature `Lorg/joda/time/chrono/GJChronology;.getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;I)Lorg/joda/time/chrono/GJChronology;` @kind static;
  #L3b49bc.  v0:= temp @kind object;
  #L3b49be.  return v0 @kind object;
}
procedure `org.joda.time.chrono.GJChronology` `getInstance`(`org.joda.time.DateTimeZone` v2 @kind object) @signature `Lorg/joda/time/chrono/GJChronology;.getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/GJChronology;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3b49d0.  v0:= `@@org.joda.time.chrono.GJChronology.DEFAULT_CUTOVER` @type ^`org.joda.time.Instant` @kind object;
  #L3b49d4.  v1:= 4I;
  #L3b49d6.  call temp:= `getInstance`(v2, v0, v1) @signature `Lorg/joda/time/chrono/GJChronology;.getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;I)Lorg/joda/time/chrono/GJChronology;` @kind static;
  #L3b49dc.  v2:= temp @kind object;
  #L3b49de.  return v2 @kind object;
}
procedure `org.joda.time.chrono.GJChronology` `getInstance`(`org.joda.time.DateTimeZone` v3 @kind object, `long` v4 , `int` v6 ) @signature `Lorg/joda/time/chrono/GJChronology;.getInstance:(Lorg/joda/time/DateTimeZone;JI)Lorg/joda/time/chrono/GJChronology;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3b49f0.  v0:= `@@org.joda.time.chrono.GJChronology.DEFAULT_CUTOVER` @type ^`org.joda.time.Instant` @kind object;
  #L3b49f4.  call temp:= `getMillis`(v0) @signature `Lorg/joda/time/Instant;.getMillis:()J` @kind virtual;
  #L3b49fa.  v0:= temp @kind wide;
  #L3b49fc.  v2:= lcmp(v4, v0);
  #L3b4a00.  if v2 != 0 then goto L3b4a08;
  #L3b4a04.  v4:= 0I;
  #L3b4a06.  goto L3b4a14;
  #L3b4a08.  v0:= new `org.joda.time.Instant`;
  #L3b4a0c.  call `<init>`(v0, v4) @signature `Lorg/joda/time/Instant;.<init>:(J)V` @kind direct;
  #L3b4a12.  v4:= v0 @kind object;
  #L3b4a14.  call temp:= `getInstance`(v3, v4, v6) @signature `Lorg/joda/time/chrono/GJChronology;.getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;I)Lorg/joda/time/chrono/GJChronology;` @kind static;
  #L3b4a1a.  v3:= temp @kind object;
  #L3b4a1c.  return v3 @kind object;
}
procedure `org.joda.time.chrono.GJChronology` `getInstance`(`org.joda.time.DateTimeZone` v1 @kind object, `org.joda.time.ReadableInstant` v2 @kind object) @signature `Lorg/joda/time/chrono/GJChronology;.getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;)Lorg/joda/time/chrono/GJChronology;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3b4a30.  v0:= 4I;
  #L3b4a32.  call temp:= `getInstance`(v1, v2, v0) @signature `Lorg/joda/time/chrono/GJChronology;.getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;I)Lorg/joda/time/chrono/GJChronology;` @kind static;
  #L3b4a38.  v1:= temp @kind object;
  #L3b4a3a.  return v1 @kind object;
}
procedure `org.joda.time.chrono.GJChronology` `getInstance`(`org.joda.time.DateTimeZone` v4 @kind object, `org.joda.time.ReadableInstant` v5 @kind object, `int` v6 ) @signature `Lorg/joda/time/chrono/GJChronology;.getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;I)Lorg/joda/time/chrono/GJChronology;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b4a4c.  call temp:= `getZone`(v4) @signature `Lorg/joda/time/DateTimeUtils;.getZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTimeZone;` @kind static;
  #L3b4a52.  v4:= temp @kind object;
  #L3b4a54.  if v5 != 0 then goto L3b4a5e;
  #L3b4a58.  v5:= `@@org.joda.time.chrono.GJChronology.DEFAULT_CUTOVER` @type ^`org.joda.time.Instant` @kind object;
  #L3b4a5c.  goto L3b4a8c;
  #L3b4a5e.  call temp:= `toInstant`(v5) @signature `Lorg/joda/time/ReadableInstant;.toInstant:()Lorg/joda/time/Instant;` @kind interface;
  #L3b4a64.  v5:= temp @kind object;
  #L3b4a66.  v0:= new `org.joda.time.LocalDate`;
  #L3b4a6a.  call temp:= `getMillis`(v5) @signature `Lorg/joda/time/Instant;.getMillis:()J` @kind virtual;
  #L3b4a70.  v1:= temp @kind wide;
  #L3b4a72.  call temp:= `getInstance`(v4) @signature `Lorg/joda/time/chrono/GregorianChronology;.getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/GregorianChronology;` @kind static;
  #L3b4a78.  v3:= temp @kind object;
  #L3b4a7a.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/LocalDate;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3b4a80.  call temp:= `getYear`(v0) @signature `Lorg/joda/time/LocalDate;.getYear:()I` @kind virtual;
  #L3b4a86.  v0:= temp;
  #L3b4a88.  if v0 <= 0 then goto L3b4b0e;
  #L3b4a8c.  v0:= new `org.joda.time.chrono.GJCacheKey`;
  #L3b4a90.  call `<init>`(v0, v4, v5, v6) @signature `Lorg/joda/time/chrono/GJCacheKey;.<init>:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/Instant;I)V` @kind direct;
  #L3b4a96.  v1:= `@@org.joda.time.chrono.GJChronology.cCache` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L3b4a9a.  call temp:= `get`(v1, v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3b4aa0.  v1:= temp @kind object;
  #L3b4aa2.  v1:= (`org.joda.time.chrono.GJChronology`) v1 @kind object;
  #L3b4aa6.  if v1 != 0 then goto L3b4b0c;
  #L3b4aaa.  v1:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3b4aae.  if v4 != v1 then goto L3b4ace;
  #L3b4ab2.  v1:= new `org.joda.time.chrono.GJChronology`;
  #L3b4ab6.  call temp:= `getInstance`(v4, v6) @signature `Lorg/joda/time/chrono/JulianChronology;.getInstance:(Lorg/joda/time/DateTimeZone;I)Lorg/joda/time/chrono/JulianChronology;` @kind static;
  #L3b4abc.  v2:= temp @kind object;
  #L3b4abe.  call temp:= `getInstance`(v4, v6) @signature `Lorg/joda/time/chrono/GregorianChronology;.getInstance:(Lorg/joda/time/DateTimeZone;I)Lorg/joda/time/chrono/GregorianChronology;` @kind static;
  #L3b4ac4.  v4:= temp @kind object;
  #L3b4ac6.  call `<init>`(v1, v2, v4, v5) @signature `Lorg/joda/time/chrono/GJChronology;.<init>:(Lorg/joda/time/chrono/JulianChronology;Lorg/joda/time/chrono/GregorianChronology;Lorg/joda/time/Instant;)V` @kind direct;
  #L3b4acc.  goto L3b4af6;
  #L3b4ace.  call temp:= `getInstance`(v1, v5, v6) @signature `Lorg/joda/time/chrono/GJChronology;.getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;I)Lorg/joda/time/chrono/GJChronology;` @kind static;
  #L3b4ad4.  v5:= temp @kind object;
  #L3b4ad6.  v6:= new `org.joda.time.chrono.GJChronology`;
  #L3b4ada.  call temp:= `getInstance`(v5, v4) @signature `Lorg/joda/time/chrono/ZonedChronology;.getInstance:(Lorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/ZonedChronology;` @kind static;
  #L3b4ae0.  v4:= temp @kind object;
  #L3b4ae2.  v1:= v5.`org.joda.time.chrono.GJChronology.iJulianChronology` @type ^`org.joda.time.chrono.JulianChronology` @kind object;
  #L3b4ae6.  v2:= v5.`org.joda.time.chrono.GJChronology.iGregorianChronology` @type ^`org.joda.time.chrono.GregorianChronology` @kind object;
  #L3b4aea.  v5:= v5.`org.joda.time.chrono.GJChronology.iCutoverInstant` @type ^`org.joda.time.Instant` @kind object;
  #L3b4aee.  call `<init>`(v6, v4, v1, v2, v5) @signature `Lorg/joda/time/chrono/GJChronology;.<init>:(Lorg/joda/time/Chronology;Lorg/joda/time/chrono/JulianChronology;Lorg/joda/time/chrono/GregorianChronology;Lorg/joda/time/Instant;)V` @kind direct;
  #L3b4af4.  v1:= v6 @kind object;
  #L3b4af6.  v4:= `@@org.joda.time.chrono.GJChronology.cCache` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L3b4afa.  call temp:= `putIfAbsent`(v4, v0, v1) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3b4b00.  v4:= temp @kind object;
  #L3b4b02.  v4:= (`org.joda.time.chrono.GJChronology`) v4 @kind object;
  #L3b4b06.  if v4 == 0 then goto L3b4b0c;
  #L3b4b0a.  v1:= v4 @kind object;
  #L3b4b0c.  return v1 @kind object;
  #L3b4b0e.  v4:= new `java.lang.IllegalArgumentException`;
  #L3b4b12.  v5:= "Cutover too early. Must be on or after 0001-01-01." @kind object;
  #L3b4b16.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b4b1c.  throw v4;
}
procedure `org.joda.time.chrono.GJChronology` `getInstanceUTC`() @signature `Lorg/joda/time/chrono/GJChronology;.getInstanceUTC:()Lorg/joda/time/chrono/GJChronology;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3b4b30.  v0:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3b4b34.  v1:= `@@org.joda.time.chrono.GJChronology.DEFAULT_CUTOVER` @type ^`org.joda.time.Instant` @kind object;
  #L3b4b38.  v2:= 4I;
  #L3b4b3a.  call temp:= `getInstance`(v0, v1, v2) @signature `Lorg/joda/time/chrono/GJChronology;.getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;I)Lorg/joda/time/chrono/GJChronology;` @kind static;
  #L3b4b40.  v0:= temp @kind object;
  #L3b4b42.  return v0 @kind object;
}
procedure `java.lang.Object` `readResolve`(`org.joda.time.chrono.GJChronology` v3 @kind this) @signature `Lorg/joda/time/chrono/GJChronology;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3b44bc.  call temp:= `getZone`(v3) @signature `Lorg/joda/time/chrono/GJChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b44c2.  v0:= temp @kind object;
  #L3b44c4.  v1:= v3.`org.joda.time.chrono.GJChronology.iCutoverInstant` @type ^`org.joda.time.Instant` @kind object;
  #L3b44c8.  call temp:= `getMinimumDaysInFirstWeek`(v3) @signature `Lorg/joda/time/chrono/GJChronology;.getMinimumDaysInFirstWeek:()I` @kind virtual;
  #L3b44ce.  v2:= temp;
  #L3b44d0.  call temp:= `getInstance`(v0, v1, v2) @signature `Lorg/joda/time/chrono/GJChronology;.getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;I)Lorg/joda/time/chrono/GJChronology;` @kind static;
  #L3b44d6.  v0:= temp @kind object;
  #L3b44d8.  return v0 @kind object;
}
procedure `void` `assemble`(`org.joda.time.chrono.GJChronology` v11 @kind this, `org.joda.time.chrono.AssembledChronology$Fields` v12 @kind object) @signature `Lorg/joda/time/chrono/GJChronology;.assemble:(Lorg/joda/time/chrono/AssembledChronology$Fields;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3b4c08.  call temp:= `getParam`(v11) @signature `Lorg/joda/time/chrono/AssembledChronology;.getParam:()Ljava/lang/Object;` @kind virtual;
  #L3b4c0e.  v0:= temp @kind object;
  #L3b4c10.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L3b4c14.  v1:= 0I;
  #L3b4c16.  v1:= v0[v1] @kind object;
  #L3b4c1a.  v8:= v1 @kind object;
  #L3b4c1c.  v8:= (`org.joda.time.chrono.JulianChronology`) v8 @kind object;
  #L3b4c20.  v1:= 1I;
  #L3b4c22.  v1:= v0[v1] @kind object;
  #L3b4c26.  v9:= v1 @kind object;
  #L3b4c28.  v9:= (`org.joda.time.chrono.GregorianChronology`) v9 @kind object;
  #L3b4c2c.  v1:= 2I;
  #L3b4c2e.  v0:= v0[v1] @kind object;
  #L3b4c32.  v0:= (`org.joda.time.Instant`) v0 @kind object;
  #L3b4c36.  call temp:= `getMillis`(v0) @signature `Lorg/joda/time/Instant;.getMillis:()J` @kind virtual;
  #L3b4c3c.  v1:= temp @kind wide;
  #L3b4c3e.  v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` := v1 @kind wide;
  #L3b4c42.  v11.`org.joda.time.chrono.GJChronology.iJulianChronology` @type ^`org.joda.time.chrono.JulianChronology` := v8 @kind object;
  #L3b4c46.  v11.`org.joda.time.chrono.GJChronology.iGregorianChronology` @type ^`org.joda.time.chrono.GregorianChronology` := v9 @kind object;
  #L3b4c4a.  v11.`org.joda.time.chrono.GJChronology.iCutoverInstant` @type ^`org.joda.time.Instant` := v0 @kind object;
  #L3b4c4e.  call temp:= `getBase`(v11) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b4c54.  v0:= temp @kind object;
  #L3b4c56.  if v0 == 0 then goto L3b4c5c;
  #L3b4c5a.  return @kind void;
  #L3b4c5c.  call temp:= `getMinimumDaysInFirstWeek`(v8) @signature `Lorg/joda/time/chrono/BasicChronology;.getMinimumDaysInFirstWeek:()I` @kind virtual;
  #L3b4c62.  v0:= temp;
  #L3b4c64.  call temp:= `getMinimumDaysInFirstWeek`(v9) @signature `Lorg/joda/time/chrono/BasicChronology;.getMinimumDaysInFirstWeek:()I` @kind virtual;
  #L3b4c6a.  v1:= temp;
  #L3b4c6c.  if v0 != v1 then goto L3b4fea;
  #L3b4c70.  v0:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4c74.  call temp:= `julianToGregorianByYear`(v11, v0) @signature `Lorg/joda/time/chrono/GJChronology;.julianToGregorianByYear:(J)J` @kind virtual;
  #L3b4c7a.  v2:= temp @kind wide;
  #L3b4c7c.  v0:= v0 - v2 @kind long;
  #L3b4c7e.  v11.`org.joda.time.chrono.GJChronology.iGapDuration` @type ^`long` := v0 @kind wide;
  #L3b4c82.  call `copyFieldsFrom`(v12, v9) @signature `Lorg/joda/time/chrono/AssembledChronology$Fields;.copyFieldsFrom:(Lorg/joda/time/Chronology;)V` @kind virtual;
  #L3b4c88.  call temp:= `millisOfDay`(v9) @signature `Lorg/joda/time/chrono/AssembledChronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4c8e.  v0:= temp @kind object;
  #L3b4c90.  v1:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4c94.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3b4c9a.  v0:= temp;
  #L3b4c9c.  if v0 != 0 then goto L3b4e02;
  #L3b4ca0.  v6:= new `org.joda.time.chrono.GJChronology$CutoverField`;
  #L3b4ca4.  call temp:= `millisOfSecond`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.millisOfSecond:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4caa.  v2:= temp @kind object;
  #L3b4cac.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.millisOfSecond` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4cb0.  v4:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4cb4.  v0:= v6 @kind object;
  #L3b4cb6.  v1:= v11 @kind object;
  #L3b4cb8.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/joda/time/chrono/GJChronology$CutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V` @kind direct;
  #L3b4cbe.  v12.`org.joda.time.chrono.AssembledChronology$Fields.millisOfSecond` @type ^`org.joda.time.DateTimeField` := v6 @kind object;
  #L3b4cc2.  v6:= new `org.joda.time.chrono.GJChronology$CutoverField`;
  #L3b4cc6.  call temp:= `millisOfDay`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4ccc.  v2:= temp @kind object;
  #L3b4cce.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.millisOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4cd2.  v4:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4cd6.  v0:= v6 @kind object;
  #L3b4cd8.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/joda/time/chrono/GJChronology$CutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V` @kind direct;
  #L3b4cde.  v12.`org.joda.time.chrono.AssembledChronology$Fields.millisOfDay` @type ^`org.joda.time.DateTimeField` := v6 @kind object;
  #L3b4ce2.  v6:= new `org.joda.time.chrono.GJChronology$CutoverField`;
  #L3b4ce6.  call temp:= `secondOfMinute`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.secondOfMinute:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4cec.  v2:= temp @kind object;
  #L3b4cee.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.secondOfMinute` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4cf2.  v4:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4cf6.  v0:= v6 @kind object;
  #L3b4cf8.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/joda/time/chrono/GJChronology$CutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V` @kind direct;
  #L3b4cfe.  v12.`org.joda.time.chrono.AssembledChronology$Fields.secondOfMinute` @type ^`org.joda.time.DateTimeField` := v6 @kind object;
  #L3b4d02.  v6:= new `org.joda.time.chrono.GJChronology$CutoverField`;
  #L3b4d06.  call temp:= `secondOfDay`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.secondOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4d0c.  v2:= temp @kind object;
  #L3b4d0e.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.secondOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4d12.  v4:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4d16.  v0:= v6 @kind object;
  #L3b4d18.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/joda/time/chrono/GJChronology$CutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V` @kind direct;
  #L3b4d1e.  v12.`org.joda.time.chrono.AssembledChronology$Fields.secondOfDay` @type ^`org.joda.time.DateTimeField` := v6 @kind object;
  #L3b4d22.  v6:= new `org.joda.time.chrono.GJChronology$CutoverField`;
  #L3b4d26.  call temp:= `minuteOfHour`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.minuteOfHour:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4d2c.  v2:= temp @kind object;
  #L3b4d2e.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.minuteOfHour` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4d32.  v4:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4d36.  v0:= v6 @kind object;
  #L3b4d38.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/joda/time/chrono/GJChronology$CutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V` @kind direct;
  #L3b4d3e.  v12.`org.joda.time.chrono.AssembledChronology$Fields.minuteOfHour` @type ^`org.joda.time.DateTimeField` := v6 @kind object;
  #L3b4d42.  v6:= new `org.joda.time.chrono.GJChronology$CutoverField`;
  #L3b4d46.  call temp:= `minuteOfDay`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.minuteOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4d4c.  v2:= temp @kind object;
  #L3b4d4e.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.minuteOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4d52.  v4:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4d56.  v0:= v6 @kind object;
  #L3b4d58.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/joda/time/chrono/GJChronology$CutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V` @kind direct;
  #L3b4d5e.  v12.`org.joda.time.chrono.AssembledChronology$Fields.minuteOfDay` @type ^`org.joda.time.DateTimeField` := v6 @kind object;
  #L3b4d62.  v6:= new `org.joda.time.chrono.GJChronology$CutoverField`;
  #L3b4d66.  call temp:= `hourOfDay`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.hourOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4d6c.  v2:= temp @kind object;
  #L3b4d6e.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.hourOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4d72.  v4:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4d76.  v0:= v6 @kind object;
  #L3b4d78.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/joda/time/chrono/GJChronology$CutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V` @kind direct;
  #L3b4d7e.  v12.`org.joda.time.chrono.AssembledChronology$Fields.hourOfDay` @type ^`org.joda.time.DateTimeField` := v6 @kind object;
  #L3b4d82.  v6:= new `org.joda.time.chrono.GJChronology$CutoverField`;
  #L3b4d86.  call temp:= `hourOfHalfday`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.hourOfHalfday:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4d8c.  v2:= temp @kind object;
  #L3b4d8e.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.hourOfHalfday` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4d92.  v4:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4d96.  v0:= v6 @kind object;
  #L3b4d98.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/joda/time/chrono/GJChronology$CutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V` @kind direct;
  #L3b4d9e.  v12.`org.joda.time.chrono.AssembledChronology$Fields.hourOfHalfday` @type ^`org.joda.time.DateTimeField` := v6 @kind object;
  #L3b4da2.  v6:= new `org.joda.time.chrono.GJChronology$CutoverField`;
  #L3b4da6.  call temp:= `clockhourOfDay`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.clockhourOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4dac.  v2:= temp @kind object;
  #L3b4dae.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.clockhourOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4db2.  v4:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4db6.  v0:= v6 @kind object;
  #L3b4db8.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/joda/time/chrono/GJChronology$CutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V` @kind direct;
  #L3b4dbe.  v12.`org.joda.time.chrono.AssembledChronology$Fields.clockhourOfDay` @type ^`org.joda.time.DateTimeField` := v6 @kind object;
  #L3b4dc2.  v6:= new `org.joda.time.chrono.GJChronology$CutoverField`;
  #L3b4dc6.  call temp:= `clockhourOfHalfday`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.clockhourOfHalfday:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4dcc.  v2:= temp @kind object;
  #L3b4dce.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.clockhourOfHalfday` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4dd2.  v4:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4dd6.  v0:= v6 @kind object;
  #L3b4dd8.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/joda/time/chrono/GJChronology$CutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V` @kind direct;
  #L3b4dde.  v12.`org.joda.time.chrono.AssembledChronology$Fields.clockhourOfHalfday` @type ^`org.joda.time.DateTimeField` := v6 @kind object;
  #L3b4de2.  v6:= new `org.joda.time.chrono.GJChronology$CutoverField`;
  #L3b4de6.  call temp:= `halfdayOfDay`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.halfdayOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4dec.  v2:= temp @kind object;
  #L3b4dee.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.halfdayOfDay` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4df2.  v4:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4df6.  v0:= v6 @kind object;
  #L3b4df8.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/joda/time/chrono/GJChronology$CutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V` @kind direct;
  #L3b4dfe.  v12.`org.joda.time.chrono.AssembledChronology$Fields.halfdayOfDay` @type ^`org.joda.time.DateTimeField` := v6 @kind object;
  #L3b4e02.  v6:= new `org.joda.time.chrono.GJChronology$CutoverField`;
  #L3b4e06.  call temp:= `era`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.era:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4e0c.  v2:= temp @kind object;
  #L3b4e0e.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.era` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4e12.  v4:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4e16.  v0:= v6 @kind object;
  #L3b4e18.  v1:= v11 @kind object;
  #L3b4e1a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/joda/time/chrono/GJChronology$CutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V` @kind direct;
  #L3b4e20.  v12.`org.joda.time.chrono.AssembledChronology$Fields.era` @type ^`org.joda.time.DateTimeField` := v6 @kind object;
  #L3b4e24.  v6:= new `org.joda.time.chrono.GJChronology$ImpreciseCutoverField`;
  #L3b4e28.  call temp:= `year`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4e2e.  v2:= temp @kind object;
  #L3b4e30.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.year` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4e34.  v4:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4e38.  v0:= v6 @kind object;
  #L3b4e3a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/joda/time/chrono/GJChronology$ImpreciseCutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V` @kind direct;
  #L3b4e40.  v12.`org.joda.time.chrono.AssembledChronology$Fields.year` @type ^`org.joda.time.DateTimeField` := v6 @kind object;
  #L3b4e44.  call temp:= `getDurationField`(v6) @signature `Lorg/joda/time/DateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3b4e4a.  v0:= temp @kind object;
  #L3b4e4c.  v12.`org.joda.time.chrono.AssembledChronology$Fields.years` @type ^`org.joda.time.DurationField` := v0 @kind object;
  #L3b4e50.  v7:= new `org.joda.time.chrono.GJChronology$ImpreciseCutoverField`;
  #L3b4e54.  call temp:= `yearOfEra`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.yearOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4e5a.  v2:= temp @kind object;
  #L3b4e5c.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.yearOfEra` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4e60.  v4:= v12.`org.joda.time.chrono.AssembledChronology$Fields.years` @type ^`org.joda.time.DurationField` @kind object;
  #L3b4e64.  v5:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4e68.  v0:= v7 @kind object;
  #L3b4e6a.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/joda/time/chrono/GJChronology$ImpreciseCutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;J)V` @kind direct;
  #L3b4e70.  v12.`org.joda.time.chrono.AssembledChronology$Fields.yearOfEra` @type ^`org.joda.time.DateTimeField` := v7 @kind object;
  #L3b4e74.  v6:= new `org.joda.time.chrono.GJChronology$ImpreciseCutoverField`;
  #L3b4e78.  call temp:= `centuryOfEra`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.centuryOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4e7e.  v2:= temp @kind object;
  #L3b4e80.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.centuryOfEra` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4e84.  v4:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4e88.  v0:= v6 @kind object;
  #L3b4e8a.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/joda/time/chrono/GJChronology$ImpreciseCutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V` @kind direct;
  #L3b4e90.  v12.`org.joda.time.chrono.AssembledChronology$Fields.centuryOfEra` @type ^`org.joda.time.DateTimeField` := v6 @kind object;
  #L3b4e94.  call temp:= `getDurationField`(v6) @signature `Lorg/joda/time/DateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3b4e9a.  v0:= temp @kind object;
  #L3b4e9c.  v12.`org.joda.time.chrono.AssembledChronology$Fields.centuries` @type ^`org.joda.time.DurationField` := v0 @kind object;
  #L3b4ea0.  v10:= new `org.joda.time.chrono.GJChronology$ImpreciseCutoverField`;
  #L3b4ea4.  call temp:= `yearOfCentury`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.yearOfCentury:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4eaa.  v2:= temp @kind object;
  #L3b4eac.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.yearOfCentury` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4eb0.  v4:= v12.`org.joda.time.chrono.AssembledChronology$Fields.years` @type ^`org.joda.time.DurationField` @kind object;
  #L3b4eb4.  v5:= v12.`org.joda.time.chrono.AssembledChronology$Fields.centuries` @type ^`org.joda.time.DurationField` @kind object;
  #L3b4eb8.  v6:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4ebc.  v0:= v10 @kind object;
  #L3b4ebe.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lorg/joda/time/chrono/GJChronology$ImpreciseCutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;Lorg/joda/time/DurationField;J)V` @kind direct;
  #L3b4ec4.  v12.`org.joda.time.chrono.AssembledChronology$Fields.yearOfCentury` @type ^`org.joda.time.DateTimeField` := v10 @kind object;
  #L3b4ec8.  v10:= new `org.joda.time.chrono.GJChronology$ImpreciseCutoverField`;
  #L3b4ecc.  call temp:= `monthOfYear`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4ed2.  v2:= temp @kind object;
  #L3b4ed4.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.monthOfYear` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4ed8.  v4:= 0I;
  #L3b4eda.  v5:= v12.`org.joda.time.chrono.AssembledChronology$Fields.years` @type ^`org.joda.time.DurationField` @kind object;
  #L3b4ede.  v6:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4ee2.  v0:= v10 @kind object;
  #L3b4ee4.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lorg/joda/time/chrono/GJChronology$ImpreciseCutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;Lorg/joda/time/DurationField;J)V` @kind direct;
  #L3b4eea.  v12.`org.joda.time.chrono.AssembledChronology$Fields.monthOfYear` @type ^`org.joda.time.DateTimeField` := v10 @kind object;
  #L3b4eee.  call temp:= `getDurationField`(v10) @signature `Lorg/joda/time/DateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3b4ef4.  v0:= temp @kind object;
  #L3b4ef6.  v12.`org.joda.time.chrono.AssembledChronology$Fields.months` @type ^`org.joda.time.DurationField` := v0 @kind object;
  #L3b4efa.  v10:= new `org.joda.time.chrono.GJChronology$ImpreciseCutoverField`;
  #L3b4efe.  call temp:= `weekyear`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.weekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4f04.  v2:= temp @kind object;
  #L3b4f06.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.weekyear` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4f0a.  v5:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4f0e.  v7:= 1I;
  #L3b4f10.  v0:= v10 @kind object;
  #L3b4f12.  call `<init>`(v0, v1, v2, v3, v4, v5, v7) @signature `Lorg/joda/time/chrono/GJChronology$ImpreciseCutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;JZ)V` @kind direct;
  #L3b4f18.  v12.`org.joda.time.chrono.AssembledChronology$Fields.weekyear` @type ^`org.joda.time.DateTimeField` := v10 @kind object;
  #L3b4f1c.  call temp:= `getDurationField`(v10) @signature `Lorg/joda/time/DateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3b4f22.  v0:= temp @kind object;
  #L3b4f24.  v12.`org.joda.time.chrono.AssembledChronology$Fields.weekyears` @type ^`org.joda.time.DurationField` := v0 @kind object;
  #L3b4f28.  v10:= new `org.joda.time.chrono.GJChronology$ImpreciseCutoverField`;
  #L3b4f2c.  call temp:= `weekyearOfCentury`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.weekyearOfCentury:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4f32.  v2:= temp @kind object;
  #L3b4f34.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.weekyearOfCentury` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4f38.  v4:= v12.`org.joda.time.chrono.AssembledChronology$Fields.weekyears` @type ^`org.joda.time.DurationField` @kind object;
  #L3b4f3c.  v5:= v12.`org.joda.time.chrono.AssembledChronology$Fields.centuries` @type ^`org.joda.time.DurationField` @kind object;
  #L3b4f40.  v6:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4f44.  v0:= v10 @kind object;
  #L3b4f46.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lorg/joda/time/chrono/GJChronology$ImpreciseCutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;Lorg/joda/time/DurationField;J)V` @kind direct;
  #L3b4f4c.  v12.`org.joda.time.chrono.AssembledChronology$Fields.weekyearOfCentury` @type ^`org.joda.time.DateTimeField` := v10 @kind object;
  #L3b4f50.  call temp:= `year`(v9) @signature `Lorg/joda/time/chrono/AssembledChronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4f56.  v0:= temp @kind object;
  #L3b4f58.  v1:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4f5c.  call temp:= `roundCeiling`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.roundCeiling:(J)J` @kind virtual;
  #L3b4f62.  v5:= temp @kind wide;
  #L3b4f64.  v10:= new `org.joda.time.chrono.GJChronology$CutoverField`;
  #L3b4f68.  call temp:= `dayOfYear`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.dayOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4f6e.  v2:= temp @kind object;
  #L3b4f70.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.dayOfYear` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4f74.  v4:= v12.`org.joda.time.chrono.AssembledChronology$Fields.years` @type ^`org.joda.time.DurationField` @kind object;
  #L3b4f78.  v7:= 0I;
  #L3b4f7a.  v0:= v10 @kind object;
  #L3b4f7c.  v1:= v11 @kind object;
  #L3b4f7e.  call `<init>`(v0, v1, v2, v3, v4, v5, v7) @signature `Lorg/joda/time/chrono/GJChronology$CutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;JZ)V` @kind direct;
  #L3b4f84.  v12.`org.joda.time.chrono.AssembledChronology$Fields.dayOfYear` @type ^`org.joda.time.DateTimeField` := v10 @kind object;
  #L3b4f88.  call temp:= `weekyear`(v9) @signature `Lorg/joda/time/chrono/AssembledChronology;.weekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4f8e.  v0:= temp @kind object;
  #L3b4f90.  v1:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4f94.  call temp:= `roundCeiling`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.roundCeiling:(J)J` @kind virtual;
  #L3b4f9a.  v5:= temp @kind wide;
  #L3b4f9c.  v9:= new `org.joda.time.chrono.GJChronology$CutoverField`;
  #L3b4fa0.  call temp:= `weekOfWeekyear`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.weekOfWeekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4fa6.  v2:= temp @kind object;
  #L3b4fa8.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.weekOfWeekyear` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4fac.  v4:= v12.`org.joda.time.chrono.AssembledChronology$Fields.weekyears` @type ^`org.joda.time.DurationField` @kind object;
  #L3b4fb0.  v7:= 1I;
  #L3b4fb2.  v0:= v9 @kind object;
  #L3b4fb4.  v1:= v11 @kind object;
  #L3b4fb6.  call `<init>`(v0, v1, v2, v3, v4, v5, v7) @signature `Lorg/joda/time/chrono/GJChronology$CutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;JZ)V` @kind direct;
  #L3b4fbc.  v12.`org.joda.time.chrono.AssembledChronology$Fields.weekOfWeekyear` @type ^`org.joda.time.DateTimeField` := v9 @kind object;
  #L3b4fc0.  v6:= new `org.joda.time.chrono.GJChronology$CutoverField`;
  #L3b4fc4.  call temp:= `dayOfMonth`(v8) @signature `Lorg/joda/time/chrono/AssembledChronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4fca.  v2:= temp @kind object;
  #L3b4fcc.  v3:= v12.`org.joda.time.chrono.AssembledChronology$Fields.dayOfMonth` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3b4fd0.  v4:= v11.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4fd4.  v0:= v6 @kind object;
  #L3b4fd6.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/joda/time/chrono/GJChronology$CutoverField;.<init>:(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;J)V` @kind direct;
  #L3b4fdc.  v0:= v12.`org.joda.time.chrono.AssembledChronology$Fields.months` @type ^`org.joda.time.DurationField` @kind object;
  #L3b4fe0.  v6.`org.joda.time.chrono.GJChronology$CutoverField.iRangeDurationField` @type ^`org.joda.time.DurationField` := v0 @kind object;
  #L3b4fe4.  v12.`org.joda.time.chrono.AssembledChronology$Fields.dayOfMonth` @type ^`org.joda.time.DateTimeField` := v6 @kind object;
  #L3b4fe8.  return @kind void;
  #L3b4fea.  v0:= new `java.lang.IllegalArgumentException`;
  #L3b4fee.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3b4ff4.  throw v0;
}
procedure `boolean` `equals`(`org.joda.time.chrono.GJChronology` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lorg/joda/time/chrono/GJChronology;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3b43ec.  v0:= 1I;
  #L3b43ee.  if v7 != v8 then goto L3b43f4;
  #L3b43f2.  return v0;
  #L3b43f4.  v1:= instanceof @variable v8 @type ^`org.joda.time.chrono.GJChronology` @kind boolean;
  #L3b43f8.  v2:= 0I;
  #L3b43fa.  if v1 == 0 then goto L3b4448;
  #L3b43fe.  v8:= (`org.joda.time.chrono.GJChronology`) v8 @kind object;
  #L3b4402.  v3:= v7.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4406.  v5:= v8.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b440a.  v1:= lcmp(v3, v5);
  #L3b440e.  if v1 != 0 then goto L3b4444;
  #L3b4412.  call temp:= `getMinimumDaysInFirstWeek`(v7) @signature `Lorg/joda/time/chrono/GJChronology;.getMinimumDaysInFirstWeek:()I` @kind virtual;
  #L3b4418.  v1:= temp;
  #L3b441a.  call temp:= `getMinimumDaysInFirstWeek`(v8) @signature `Lorg/joda/time/chrono/GJChronology;.getMinimumDaysInFirstWeek:()I` @kind virtual;
  #L3b4420.  v3:= temp;
  #L3b4422.  if v1 != v3 then goto L3b4444;
  #L3b4426.  call temp:= `getZone`(v7) @signature `Lorg/joda/time/chrono/GJChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b442c.  v1:= temp @kind object;
  #L3b442e.  call temp:= `getZone`(v8) @signature `Lorg/joda/time/chrono/GJChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b4434.  v8:= temp @kind object;
  #L3b4436.  call temp:= `equals`(v1, v8) @signature `Lorg/joda/time/DateTimeZone;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b443c.  v8:= temp;
  #L3b443e.  if v8 == 0 then goto L3b4444;
  #L3b4442.  goto L3b4446;
  #L3b4444.  v0:= 0I;
  #L3b4446.  return v0;
  #L3b4448.  return v2;
}
procedure `long` `getDateTimeMillis`(`org.joda.time.chrono.GJChronology` v5 @kind this, `int` v6 , `int` v7 , `int` v8 , `int` v9 ) @signature `Lorg/joda/time/chrono/GJChronology;.getDateTimeMillis:(IIII)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3b46f0.  call temp:= `getBase`(v5) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b46f6.  v0:= temp @kind object;
  #L3b46f8.  if v0 == 0 then goto L3b4706;
  #L3b46fc.  call temp:= `getDateTimeMillis`(v0, v6, v7, v8, v9) @signature `Lorg/joda/time/Chronology;.getDateTimeMillis:(IIII)J` @kind virtual;
  #L3b4702.  v6:= temp @kind wide;
  #L3b4704.  return v6 @kind wide;
  #L3b4706.  v0:= v5.`org.joda.time.chrono.GJChronology.iGregorianChronology` @type ^`org.joda.time.chrono.GregorianChronology` @kind object;
  #L3b470a.  call temp:= `getDateTimeMillis`(v0, v6, v7, v8, v9) @signature `Lorg/joda/time/chrono/BasicChronology;.getDateTimeMillis:(IIII)J` @kind virtual;
  #L3b4710.  v0:= temp @kind wide;
  #L3b4712.  v2:= v5.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4716.  v4:= lcmp(v0, v2);
  #L3b471a.  if v4 >= 0 then goto L3b4748;
  #L3b471e.  v0:= v5.`org.joda.time.chrono.GJChronology.iJulianChronology` @type ^`org.joda.time.chrono.JulianChronology` @kind object;
  #L3b4722.  call temp:= `getDateTimeMillis`(v0, v6, v7, v8, v9) @signature `Lorg/joda/time/chrono/BasicChronology;.getDateTimeMillis:(IIII)J` @kind virtual;
  #L3b4728.  v0:= temp @kind wide;
  #L3b472a.  v6:= v5.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b472e.  v8:= lcmp(v0, v6);
  #L3b4732.  if v8 >= 0 then goto L3b4738;
  #L3b4736.  goto L3b4748;
  #L3b4738.  v6:= new `java.lang.IllegalArgumentException`;
  #L3b473c.  v7:= "Specified date does not exist" @kind object;
  #L3b4740.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b4746.  throw v6;
  #L3b4748.  return v0 @kind wide;
}
procedure `long` `getDateTimeMillis`(`org.joda.time.chrono.GJChronology` v13 @kind this, `int` v14 , `int` v15 , `int` v16 , `int` v17 , `int` v18 , `int` v19 , `int` v20 ) @signature `Lorg/joda/time/chrono/GJChronology;.getDateTimeMillis:(IIIIIII)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L3b475c.  v1:= v13 @kind object;
  #L3b475e.  call temp:= `getBase`(v13) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b4764.  v2:= temp @kind object;
  #L3b4766.  if v2 == 0 then goto L3b478c;
  #L3b476a.  v3:= v14;
  #L3b476c.  v4:= v15;
  #L3b476e.  v5:= v16;
  #L3b4772.  v6:= v17;
  #L3b4776.  v7:= v18;
  #L3b477a.  v8:= v19;
  #L3b477e.  v9:= v20;
  #L3b4782.  call temp:= `getDateTimeMillis`(v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lorg/joda/time/Chronology;.getDateTimeMillis:(IIIIIII)J` @kind virtual;
  #L3b4788.  v2:= temp @kind wide;
  #L3b478a.  return v2 @kind wide;
  #L3b478c.  v4:= v1.`org.joda.time.chrono.GJChronology.iGregorianChronology` @type ^`org.joda.time.chrono.GregorianChronology` @kind object;
  #L3b4790.  v5:= v14;
  #L3b4792.  v6:= v15;
  #L3b4794.  v7:= v16;
  #L3b4798.  v8:= v17;
  #L3b479c.  v9:= v18;
  #L3b47a0.  v10:= v19;
  #L3b47a4.  v11:= v20;
  #L3b47a8.  call temp:= `getDateTimeMillis`(v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lorg/joda/time/chrono/BasicChronology;.getDateTimeMillis:(IIIIIII)J` @kind virtual;
  #L3b47ae.  v2:= temp @kind wide;
  #L3b47b0.  v11:= v15;
  #L3b47b2.  v12:= v16;
  #L3b47b6.  goto L3b47fe;
  #L3b47b8.  v0:= Exception @type ^`org.joda.time.IllegalFieldValueException` @kind object;
  #L3b47ba.  v2:= 2I;
  #L3b47bc.  v11:= v15;
  #L3b47be.  if v11 != v2 then goto L3b4850;
  #L3b47c2.  v2:= 29I;
  #L3b47c6.  v12:= v16;
  #L3b47ca.  if v12 != v2 then goto L3b4850;
  #L3b47ce.  v3:= v1.`org.joda.time.chrono.GJChronology.iGregorianChronology` @type ^`org.joda.time.chrono.GregorianChronology` @kind object;
  #L3b47d2.  v6:= 28I;
  #L3b47d6.  v4:= v14;
  #L3b47d8.  v5:= v15;
  #L3b47da.  v7:= v17;
  #L3b47de.  v8:= v18;
  #L3b47e2.  v9:= v19;
  #L3b47e6.  v10:= v20;
  #L3b47ea.  call temp:= `getDateTimeMillis`(v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lorg/joda/time/chrono/BasicChronology;.getDateTimeMillis:(IIIIIII)J` @kind virtual;
  #L3b47f0.  v2:= temp @kind wide;
  #L3b47f2.  v4:= v1.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b47f6.  v6:= lcmp(v2, v4);
  #L3b47fa.  if v6 >= 0 then goto L3b484e;
  #L3b47fe.  v4:= v1.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4802.  v0:= lcmp(v2, v4);
  #L3b4806.  if v0 >= 0 then goto L3b484c;
  #L3b480a.  v3:= v1.`org.joda.time.chrono.GJChronology.iJulianChronology` @type ^`org.joda.time.chrono.JulianChronology` @kind object;
  #L3b480e.  v4:= v14;
  #L3b4810.  v5:= v15;
  #L3b4812.  v6:= v16;
  #L3b4816.  v7:= v17;
  #L3b481a.  v8:= v18;
  #L3b481e.  v9:= v19;
  #L3b4822.  v10:= v20;
  #L3b4826.  call temp:= `getDateTimeMillis`(v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lorg/joda/time/chrono/BasicChronology;.getDateTimeMillis:(IIIIIII)J` @kind virtual;
  #L3b482c.  v2:= temp @kind wide;
  #L3b482e.  v4:= v1.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4832.  v0:= lcmp(v2, v4);
  #L3b4836.  if v0 >= 0 then goto L3b483c;
  #L3b483a.  goto L3b484c;
  #L3b483c.  v0:= new `java.lang.IllegalArgumentException`;
  #L3b4840.  v2:= "Specified date does not exist" @kind object;
  #L3b4844.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b484a.  throw v0;
  #L3b484c.  return v2 @kind wide;
  #L3b484e.  throw v0;
  #L3b4850.  throw v0;
  catch `org.joda.time.IllegalFieldValueException` @[L3b478c..L3b47b0] goto L3b47b8;
}
procedure `org.joda.time.Instant` `getGregorianCutover`(`org.joda.time.chrono.GJChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/GJChronology;.getGregorianCutover:()Lorg/joda/time/Instant;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b4990.  v0:= v1.`org.joda.time.chrono.GJChronology.iCutoverInstant` @type ^`org.joda.time.Instant` @kind object;
  #L3b4994.  return v0 @kind object;
}
procedure `int` `getMinimumDaysInFirstWeek`(`org.joda.time.chrono.GJChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/GJChronology;.getMinimumDaysInFirstWeek:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b445c.  v0:= v1.`org.joda.time.chrono.GJChronology.iGregorianChronology` @type ^`org.joda.time.chrono.GregorianChronology` @kind object;
  #L3b4460.  call temp:= `getMinimumDaysInFirstWeek`(v0) @signature `Lorg/joda/time/chrono/BasicChronology;.getMinimumDaysInFirstWeek:()I` @kind virtual;
  #L3b4466.  v0:= temp;
  #L3b4468.  return v0;
}
procedure `org.joda.time.DateTimeZone` `getZone`(`org.joda.time.chrono.GJChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/GJChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b4964.  call temp:= `getBase`(v1) @signature `Lorg/joda/time/chrono/AssembledChronology;.getBase:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b496a.  v0:= temp @kind object;
  #L3b496c.  if v0 == 0 then goto L3b497a;
  #L3b4970.  call temp:= `getZone`(v0) @signature `Lorg/joda/time/Chronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b4976.  v0:= temp @kind object;
  #L3b4978.  return v0 @kind object;
  #L3b497a.  v0:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3b497e.  return v0 @kind object;
}
procedure `long` `gregorianToJulianByWeekyear`(`org.joda.time.chrono.GJChronology` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/GJChronology;.gregorianToJulianByWeekyear:(J)J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3b4874.  v0:= v2.`org.joda.time.chrono.GJChronology.iGregorianChronology` @type ^`org.joda.time.chrono.GregorianChronology` @kind object;
  #L3b4878.  v1:= v2.`org.joda.time.chrono.GJChronology.iJulianChronology` @type ^`org.joda.time.chrono.JulianChronology` @kind object;
  #L3b487c.  call temp:= `convertByWeekyear`(v3, v0, v1) @signature `Lorg/joda/time/chrono/GJChronology;.convertByWeekyear:(JLorg/joda/time/Chronology;Lorg/joda/time/Chronology;)J` @kind static;
  #L3b4882.  v3:= temp @kind wide;
  #L3b4884.  return v3 @kind wide;
}
procedure `long` `gregorianToJulianByYear`(`org.joda.time.chrono.GJChronology` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/GJChronology;.gregorianToJulianByYear:(J)J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3b4898.  v0:= v2.`org.joda.time.chrono.GJChronology.iGregorianChronology` @type ^`org.joda.time.chrono.GregorianChronology` @kind object;
  #L3b489c.  v1:= v2.`org.joda.time.chrono.GJChronology.iJulianChronology` @type ^`org.joda.time.chrono.JulianChronology` @kind object;
  #L3b48a0.  call temp:= `convertByYear`(v3, v0, v1) @signature `Lorg/joda/time/chrono/GJChronology;.convertByYear:(JLorg/joda/time/Chronology;Lorg/joda/time/Chronology;)J` @kind static;
  #L3b48a6.  v3:= temp @kind wide;
  #L3b48a8.  return v3 @kind wide;
}
procedure `int` `hashCode`(`org.joda.time.chrono.GJChronology` v2 @kind this) @signature `Lorg/joda/time/chrono/GJChronology;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b447c.  call temp:= `getZone`(v2) @signature `Lorg/joda/time/chrono/GJChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b4482.  v0:= temp @kind object;
  #L3b4484.  call temp:= `hashCode`(v0) @signature `Lorg/joda/time/DateTimeZone;.hashCode:()I` @kind virtual;
  #L3b448a.  v0:= temp;
  #L3b448c.  v1:= 25025I;
  #L3b4490.  v1:= v1 + v0 @kind int;
  #L3b4492.  call temp:= `getMinimumDaysInFirstWeek`(v2) @signature `Lorg/joda/time/chrono/GJChronology;.getMinimumDaysInFirstWeek:()I` @kind virtual;
  #L3b4498.  v0:= temp;
  #L3b449a.  v1:= v1 + v0 @kind int;
  #L3b449c.  v0:= v2.`org.joda.time.chrono.GJChronology.iCutoverInstant` @type ^`org.joda.time.Instant` @kind object;
  #L3b44a0.  call temp:= `hashCode`(v0) @signature `Lorg/joda/time/base/AbstractInstant;.hashCode:()I` @kind virtual;
  #L3b44a6.  v0:= temp;
  #L3b44a8.  v1:= v1 + v0 @kind int;
  #L3b44aa.  return v1;
}
procedure `long` `julianToGregorianByWeekyear`(`org.joda.time.chrono.GJChronology` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/GJChronology;.julianToGregorianByWeekyear:(J)J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3b48bc.  v0:= v2.`org.joda.time.chrono.GJChronology.iJulianChronology` @type ^`org.joda.time.chrono.JulianChronology` @kind object;
  #L3b48c0.  v1:= v2.`org.joda.time.chrono.GJChronology.iGregorianChronology` @type ^`org.joda.time.chrono.GregorianChronology` @kind object;
  #L3b48c4.  call temp:= `convertByWeekyear`(v3, v0, v1) @signature `Lorg/joda/time/chrono/GJChronology;.convertByWeekyear:(JLorg/joda/time/Chronology;Lorg/joda/time/Chronology;)J` @kind static;
  #L3b48ca.  v3:= temp @kind wide;
  #L3b48cc.  return v3 @kind wide;
}
procedure `long` `julianToGregorianByYear`(`org.joda.time.chrono.GJChronology` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/GJChronology;.julianToGregorianByYear:(J)J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3b48e0.  v0:= v2.`org.joda.time.chrono.GJChronology.iJulianChronology` @type ^`org.joda.time.chrono.JulianChronology` @kind object;
  #L3b48e4.  v1:= v2.`org.joda.time.chrono.GJChronology.iGregorianChronology` @type ^`org.joda.time.chrono.GregorianChronology` @kind object;
  #L3b48e8.  call temp:= `convertByYear`(v3, v0, v1) @signature `Lorg/joda/time/chrono/GJChronology;.convertByYear:(JLorg/joda/time/Chronology;Lorg/joda/time/Chronology;)J` @kind static;
  #L3b48ee.  v3:= temp @kind wide;
  #L3b48f0.  return v3 @kind wide;
}
procedure `java.lang.String` `toString`(`org.joda.time.chrono.GJChronology` v6 @kind this) @signature `Lorg/joda/time/chrono/GJChronology;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3b44ec.  v0:= new `java.lang.StringBuffer`;
  #L3b44f0.  v1:= 60I;
  #L3b44f4.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuffer;.<init>:(I)V` @kind direct;
  #L3b44fa.  v1:= "GJChronology" @kind object;
  #L3b44fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3b4504.  v1:= 91I;
  #L3b4508.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L3b450e.  call temp:= `getZone`(v6) @signature `Lorg/joda/time/chrono/GJChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b4514.  v1:= temp @kind object;
  #L3b4516.  call temp:= `getID`(v1) @signature `Lorg/joda/time/DateTimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L3b451c.  v1:= temp @kind object;
  #L3b451e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3b4524.  v1:= v6.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4528.  v3:= `@@org.joda.time.chrono.GJChronology.DEFAULT_CUTOVER` @type ^`org.joda.time.Instant` @kind object;
  #L3b452c.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/Instant;.getMillis:()J` @kind virtual;
  #L3b4532.  v3:= temp @kind wide;
  #L3b4534.  v5:= lcmp(v1, v3);
  #L3b4538.  if v5 == 0 then goto L3b459a;
  #L3b453c.  v1:= ",cutover=" @kind object;
  #L3b4540.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3b4546.  call temp:= `withUTC`(v6) @signature `Lorg/joda/time/chrono/GJChronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b454c.  v1:= temp @kind object;
  #L3b454e.  call temp:= `dayOfYear`(v1) @signature `Lorg/joda/time/Chronology;.dayOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b4554.  v1:= temp @kind object;
  #L3b4556.  v2:= v6.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b455a.  call temp:= `remainder`(v1, v2) @signature `Lorg/joda/time/DateTimeField;.remainder:(J)J` @kind virtual;
  #L3b4560.  v1:= temp @kind wide;
  #L3b4562.  v3:= 0L;
  #L3b4566.  v5:= lcmp(v1, v3);
  #L3b456a.  if v5 != 0 then goto L3b4578;
  #L3b456e.  call temp:= `date`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.date:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3b4574.  v1:= temp @kind object;
  #L3b4576.  goto L3b4580;
  #L3b4578.  call temp:= `dateTime`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateTime:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3b457e.  v1:= temp @kind object;
  #L3b4580.  call temp:= `withUTC`(v6) @signature `Lorg/joda/time/chrono/GJChronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3b4586.  v2:= temp @kind object;
  #L3b4588.  call temp:= `withChronology`(v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.withChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;` @kind virtual;
  #L3b458e.  v1:= temp @kind object;
  #L3b4590.  v2:= v6.`org.joda.time.chrono.GJChronology.iCutoverMillis` @type ^`long` @kind wide;
  #L3b4594.  call `printTo`(v1, v0, v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/StringBuffer;J)V` @kind virtual;
  #L3b459a.  call temp:= `getMinimumDaysInFirstWeek`(v6) @signature `Lorg/joda/time/chrono/GJChronology;.getMinimumDaysInFirstWeek:()I` @kind virtual;
  #L3b45a0.  v1:= temp;
  #L3b45a2.  v2:= 4I;
  #L3b45a4.  if v1 == v2 then goto L3b45c0;
  #L3b45a8.  v1:= ",mdfw=" @kind object;
  #L3b45ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3b45b2.  call temp:= `getMinimumDaysInFirstWeek`(v6) @signature `Lorg/joda/time/chrono/GJChronology;.getMinimumDaysInFirstWeek:()I` @kind virtual;
  #L3b45b8.  v1:= temp;
  #L3b45ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(I)Ljava/lang/StringBuffer;` @kind virtual;
  #L3b45c0.  v1:= 93I;
  #L3b45c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L3b45ca.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b45d0.  v0:= temp @kind object;
  #L3b45d2.  return v0 @kind object;
}
procedure `org.joda.time.Chronology` `withUTC`(`org.joda.time.chrono.GJChronology` v1 @kind this) @signature `Lorg/joda/time/chrono/GJChronology;.withUTC:()Lorg/joda/time/Chronology;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b4904.  v0:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3b4908.  call temp:= `withZone`(v1, v0) @signature `Lorg/joda/time/chrono/GJChronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3b490e.  v0:= temp @kind object;
  #L3b4910.  return v0 @kind object;
}
procedure `org.joda.time.Chronology` `withZone`(`org.joda.time.chrono.GJChronology` v2 @kind this, `org.joda.time.DateTimeZone` v3 @kind object) @signature `Lorg/joda/time/chrono/GJChronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b4924.  if v3 != 0 then goto L3b4930;
  #L3b4928.  call temp:= `getDefault`() @signature `Lorg/joda/time/DateTimeZone;.getDefault:()Lorg/joda/time/DateTimeZone;` @kind static;
  #L3b492e.  v3:= temp @kind object;
  #L3b4930.  call temp:= `getZone`(v2) @signature `Lorg/joda/time/chrono/GJChronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3b4936.  v0:= temp @kind object;
  #L3b4938.  if v3 != v0 then goto L3b493e;
  #L3b493c.  return v2 @kind object;
  #L3b493e.  v0:= v2.`org.joda.time.chrono.GJChronology.iCutoverInstant` @type ^`org.joda.time.Instant` @kind object;
  #L3b4942.  call temp:= `getMinimumDaysInFirstWeek`(v2) @signature `Lorg/joda/time/chrono/GJChronology;.getMinimumDaysInFirstWeek:()I` @kind virtual;
  #L3b4948.  v1:= temp;
  #L3b494a.  call temp:= `getInstance`(v3, v0, v1) @signature `Lorg/joda/time/chrono/GJChronology;.getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/ReadableInstant;I)Lorg/joda/time/chrono/GJChronology;` @kind static;
  #L3b4950.  v3:= temp @kind object;
  #L3b4952.  return v3 @kind object;
}
