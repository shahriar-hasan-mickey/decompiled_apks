record `org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField` @kind class @AccessFlag FINAL extends `org.joda.time.field.PreciseDurationDateTimeField` @kind class {
  `org.joda.time.chrono.BasicChronology` `org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.iChronology` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField` v1 @kind this, `org.joda.time.chrono.BasicChronology` v2 @kind object, `org.joda.time.DurationField` v3 @kind object) @signature `Lorg/joda/time/chrono/BasicWeekOfWeekyearDateTimeField;.<init>:(Lorg/joda/time/chrono/BasicChronology;Lorg/joda/time/DurationField;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3b23a8.  call temp:= `weekOfWeekyear`() @signature `Lorg/joda/time/DateTimeFieldType;.weekOfWeekyear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3b23ae.  v0:= temp @kind object;
  #L3b23b0.  call `<init>`(v1, v0, v3) @signature `Lorg/joda/time/field/PreciseDurationDateTimeField;.<init>:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)V` @kind direct;
  #L3b23b6.  v1.`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.iChronology` @type ^`org.joda.time.chrono.BasicChronology` := v2 @kind object;
  #L3b23ba.  return @kind void;
}
procedure `java.lang.Object` `readResolve`(`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField` v1 @kind this) @signature `Lorg/joda/time/chrono/BasicWeekOfWeekyearDateTimeField;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3b22fc.  v0:= v1.`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.iChronology` @type ^`org.joda.time.chrono.BasicChronology` @kind object;
  #L3b2300.  call temp:= `weekOfWeekyear`(v0) @signature `Lorg/joda/time/chrono/AssembledChronology;.weekOfWeekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b2306.  v0:= temp @kind object;
  #L3b2308.  return v0 @kind object;
}
procedure `int` `get`(`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/chrono/BasicWeekOfWeekyearDateTimeField;.get:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b21c8.  v0:= v1.`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.iChronology` @type ^`org.joda.time.chrono.BasicChronology` @kind object;
  #L3b21cc.  call temp:= `getWeekOfWeekyear`(v0, v2) @signature `Lorg/joda/time/chrono/BasicChronology;.getWeekOfWeekyear:(J)I` @kind virtual;
  #L3b21d2.  v2:= temp;
  #L3b21d4.  return v2;
}
procedure `int` `getMaximumValue`(`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField` v1 @kind this) @signature `Lorg/joda/time/chrono/BasicWeekOfWeekyearDateTimeField;.getMaximumValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b21e8.  v0:= 53I;
  #L3b21ec.  return v0;
}
procedure `int` `getMaximumValue`(`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/chrono/BasicWeekOfWeekyearDateTimeField;.getMaximumValue:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b2200.  v0:= v1.`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.iChronology` @type ^`org.joda.time.chrono.BasicChronology` @kind object;
  #L3b2204.  call temp:= `getWeekyear`(v0, v2) @signature `Lorg/joda/time/chrono/BasicChronology;.getWeekyear:(J)I` @kind virtual;
  #L3b220a.  v2:= temp;
  #L3b220c.  v3:= v1.`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.iChronology` @type ^`org.joda.time.chrono.BasicChronology` @kind object;
  #L3b2210.  call temp:= `getWeeksInYear`(v3, v2) @signature `Lorg/joda/time/chrono/BasicChronology;.getWeeksInYear:(I)I` @kind virtual;
  #L3b2216.  v2:= temp;
  #L3b2218.  return v2;
}
procedure `int` `getMaximumValue`(`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField` v1 @kind this, `org.joda.time.ReadablePartial` v2 @kind object) @signature `Lorg/joda/time/chrono/BasicWeekOfWeekyearDateTimeField;.getMaximumValue:(Lorg/joda/time/ReadablePartial;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b222c.  call temp:= `weekyear`() @signature `Lorg/joda/time/DateTimeFieldType;.weekyear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3b2232.  v0:= temp @kind object;
  #L3b2234.  call temp:= `isSupported`(v2, v0) @signature `Lorg/joda/time/ReadablePartial;.isSupported:(Lorg/joda/time/DateTimeFieldType;)Z` @kind interface;
  #L3b223a.  v0:= temp;
  #L3b223c.  if v0 == 0 then goto L3b225e;
  #L3b2240.  call temp:= `weekyear`() @signature `Lorg/joda/time/DateTimeFieldType;.weekyear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3b2246.  v0:= temp @kind object;
  #L3b2248.  call temp:= `get`(v2, v0) @signature `Lorg/joda/time/ReadablePartial;.get:(Lorg/joda/time/DateTimeFieldType;)I` @kind interface;
  #L3b224e.  v2:= temp;
  #L3b2250.  v0:= v1.`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.iChronology` @type ^`org.joda.time.chrono.BasicChronology` @kind object;
  #L3b2254.  call temp:= `getWeeksInYear`(v0, v2) @signature `Lorg/joda/time/chrono/BasicChronology;.getWeeksInYear:(I)I` @kind virtual;
  #L3b225a.  v2:= temp;
  #L3b225c.  return v2;
  #L3b225e.  v2:= 53I;
  #L3b2262.  return v2;
}
procedure `int` `getMaximumValue`(`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField` v4 @kind this, `org.joda.time.ReadablePartial` v5 @kind object, `int`[] v6 @kind object) @signature `Lorg/joda/time/chrono/BasicWeekOfWeekyearDateTimeField;.getMaximumValue:(Lorg/joda/time/ReadablePartial;[I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3b2274.  call temp:= `size`(v5) @signature `Lorg/joda/time/ReadablePartial;.size:()I` @kind interface;
  #L3b227a.  v0:= temp;
  #L3b227c.  v1:= 0I;
  #L3b227e.  if v1 >= v0 then goto L3b22ae;
  #L3b2282.  call temp:= `getFieldType`(v5, v1) @signature `Lorg/joda/time/ReadablePartial;.getFieldType:(I)Lorg/joda/time/DateTimeFieldType;` @kind interface;
  #L3b2288.  v2:= temp @kind object;
  #L3b228a.  call temp:= `weekyear`() @signature `Lorg/joda/time/DateTimeFieldType;.weekyear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3b2290.  v3:= temp @kind object;
  #L3b2292.  if v2 != v3 then goto L3b22a8;
  #L3b2296.  v5:= v6[v1];
  #L3b229a.  v6:= v4.`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.iChronology` @type ^`org.joda.time.chrono.BasicChronology` @kind object;
  #L3b229e.  call temp:= `getWeeksInYear`(v6, v5) @signature `Lorg/joda/time/chrono/BasicChronology;.getWeeksInYear:(I)I` @kind virtual;
  #L3b22a4.  v5:= temp;
  #L3b22a6.  return v5;
  #L3b22a8.  v1:= v1 + 1;
  #L3b22ac.  goto L3b227e;
  #L3b22ae.  v5:= 53I;
  #L3b22b2.  return v5;
}
procedure `int` `getMaximumValueForSet`(`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField` v1 @kind this, `long` v2 , `int` v4 ) @signature `Lorg/joda/time/chrono/BasicWeekOfWeekyearDateTimeField;.getMaximumValueForSet:(JI)I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3b22c4.  v0:= 52I;
  #L3b22c8.  if v4 <= v0 then goto L3b22d4;
  #L3b22cc.  call temp:= `getMaximumValue`(v1, v2) @signature `Lorg/joda/time/chrono/BasicWeekOfWeekyearDateTimeField;.getMaximumValue:(J)I` @kind virtual;
  #L3b22d2.  v0:= temp;
  #L3b22d4.  return v0;
}
procedure `int` `getMinimumValue`(`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField` v1 @kind this) @signature `Lorg/joda/time/chrono/BasicWeekOfWeekyearDateTimeField;.getMinimumValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b22e8.  v0:= 1I;
  #L3b22ea.  return v0;
}
procedure `org.joda.time.DurationField` `getRangeDurationField`(`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField` v1 @kind this) @signature `Lorg/joda/time/chrono/BasicWeekOfWeekyearDateTimeField;.getRangeDurationField:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b2388.  v0:= v1.`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.iChronology` @type ^`org.joda.time.chrono.BasicChronology` @kind object;
  #L3b238c.  call temp:= `weekyears`(v0) @signature `Lorg/joda/time/chrono/AssembledChronology;.weekyears:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3b2392.  v0:= temp @kind object;
  #L3b2394.  return v0 @kind object;
}
procedure `long` `remainder`(`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/BasicWeekOfWeekyearDateTimeField;.remainder:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b231c.  v0:= 259200000L;
  #L3b2322.  v3:= v3 + v0 @kind long;
  #L3b2324.  call temp:= `remainder`(v2, v3) @signature `Lorg/joda/time/field/PreciseDurationDateTimeField;.remainder:(J)J` @kind super;
  #L3b232a.  v3:= temp @kind wide;
  #L3b232c.  return v3 @kind wide;
}
procedure `long` `roundCeiling`(`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/BasicWeekOfWeekyearDateTimeField;.roundCeiling:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b2340.  v0:= 259200000L;
  #L3b2346.  v3:= v3 + v0 @kind long;
  #L3b2348.  call temp:= `roundCeiling`(v2, v3) @signature `Lorg/joda/time/field/PreciseDurationDateTimeField;.roundCeiling:(J)J` @kind super;
  #L3b234e.  v3:= temp @kind wide;
  #L3b2350.  v3:= v3 - v0 @kind long;
  #L3b2352.  return v3 @kind wide;
}
procedure `long` `roundFloor`(`org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/BasicWeekOfWeekyearDateTimeField;.roundFloor:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3b2364.  v0:= 259200000L;
  #L3b236a.  v3:= v3 + v0 @kind long;
  #L3b236c.  call temp:= `roundFloor`(v2, v3) @signature `Lorg/joda/time/field/PreciseDurationDateTimeField;.roundFloor:(J)J` @kind super;
  #L3b2372.  v3:= temp @kind wide;
  #L3b2374.  v3:= v3 - v0 @kind long;
  #L3b2376.  return v3 @kind wide;
}
