record `org.joda.time.chrono.BasicSingleEraDateTimeField` @kind class @AccessFlag FINAL extends `org.joda.time.field.BaseDateTimeField` @kind class {
  `java.lang.String` `org.joda.time.chrono.BasicSingleEraDateTimeField.iEraText` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@org.joda.time.chrono.BasicSingleEraDateTimeField.ERA_VALUE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.chrono.BasicSingleEraDateTimeField` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/joda/time/chrono/BasicSingleEraDateTimeField;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3b21a4.  call temp:= `era`() @signature `Lorg/joda/time/DateTimeFieldType;.era:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3b21aa.  v0:= temp @kind object;
  #L3b21ac.  call `<init>`(v1, v0) @signature `Lorg/joda/time/field/BaseDateTimeField;.<init>:(Lorg/joda/time/DateTimeFieldType;)V` @kind direct;
  #L3b21b2.  v1.`org.joda.time.chrono.BasicSingleEraDateTimeField.iEraText` @type ^`java.lang.String` := v2 @kind object;
  #L3b21b6.  return @kind void;
}
procedure `int` `get`(`org.joda.time.chrono.BasicSingleEraDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/chrono/BasicSingleEraDateTimeField;.get:(J)I` @AccessFlag PUBLIC {
    temp;

  #L3b2018.  v1:= 1I;
  #L3b201a.  return v1;
}
procedure `java.lang.String` `getAsText`(`org.joda.time.chrono.BasicSingleEraDateTimeField` v0 @kind this, `int` v1 , `java.util.Locale` v2 @kind object) @signature `Lorg/joda/time/chrono/BasicSingleEraDateTimeField;.getAsText:(ILjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3b2074.  v1:= v0.`org.joda.time.chrono.BasicSingleEraDateTimeField.iEraText` @type ^`java.lang.String` @kind object;
  #L3b2078.  return v1 @kind object;
}
procedure `org.joda.time.DurationField` `getDurationField`(`org.joda.time.chrono.BasicSingleEraDateTimeField` v1 @kind this) @signature `Lorg/joda/time/chrono/BasicSingleEraDateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b216c.  call temp:= `eras`() @signature `Lorg/joda/time/DurationFieldType;.eras:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3b2172.  v0:= temp @kind object;
  #L3b2174.  call temp:= `getInstance`(v0) @signature `Lorg/joda/time/field/UnsupportedDurationField;.getInstance:(Lorg/joda/time/DurationFieldType;)Lorg/joda/time/field/UnsupportedDurationField;` @kind static;
  #L3b217a.  v0:= temp @kind object;
  #L3b217c.  return v0 @kind object;
}
procedure `int` `getMaximumTextLength`(`org.joda.time.chrono.BasicSingleEraDateTimeField` v0 @kind this, `java.util.Locale` v1 @kind object) @signature `Lorg/joda/time/chrono/BasicSingleEraDateTimeField;.getMaximumTextLength:(Ljava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;

  #L3b202c.  v1:= v0.`org.joda.time.chrono.BasicSingleEraDateTimeField.iEraText` @type ^`java.lang.String` @kind object;
  #L3b2030.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3b2036.  v1:= temp;
  #L3b2038.  return v1;
}
procedure `int` `getMaximumValue`(`org.joda.time.chrono.BasicSingleEraDateTimeField` v1 @kind this) @signature `Lorg/joda/time/chrono/BasicSingleEraDateTimeField;.getMaximumValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b204c.  v0:= 1I;
  #L3b204e.  return v0;
}
procedure `int` `getMinimumValue`(`org.joda.time.chrono.BasicSingleEraDateTimeField` v1 @kind this) @signature `Lorg/joda/time/chrono/BasicSingleEraDateTimeField;.getMinimumValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b2060.  v0:= 1I;
  #L3b2062.  return v0;
}
procedure `org.joda.time.DurationField` `getRangeDurationField`(`org.joda.time.chrono.BasicSingleEraDateTimeField` v1 @kind this) @signature `Lorg/joda/time/chrono/BasicSingleEraDateTimeField;.getRangeDurationField:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b2190.  v0:= 0I;
  #L3b2192.  return v0 @kind object;
}
procedure `boolean` `isLenient`(`org.joda.time.chrono.BasicSingleEraDateTimeField` v1 @kind this) @signature `Lorg/joda/time/chrono/BasicSingleEraDateTimeField;.isLenient:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b2004.  v0:= 0I;
  #L3b2006.  return v0;
}
procedure `long` `roundCeiling`(`org.joda.time.chrono.BasicSingleEraDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/chrono/BasicSingleEraDateTimeField;.roundCeiling:(J)J` @AccessFlag PUBLIC {
    temp;

  #L3b208c.  v1:= 9223372036854775807L;
  #L3b2096.  return v1 @kind wide;
}
procedure `long` `roundFloor`(`org.joda.time.chrono.BasicSingleEraDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/chrono/BasicSingleEraDateTimeField;.roundFloor:(J)J` @AccessFlag PUBLIC {
    temp;

  #L3b20a8.  v1:= -9223372036854775808L;
  #L3b20ac.  return v1 @kind wide;
}
procedure `long` `roundHalfCeiling`(`org.joda.time.chrono.BasicSingleEraDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/chrono/BasicSingleEraDateTimeField;.roundHalfCeiling:(J)J` @AccessFlag PUBLIC {
    temp;

  #L3b20c0.  v1:= -9223372036854775808L;
  #L3b20c4.  return v1 @kind wide;
}
procedure `long` `roundHalfEven`(`org.joda.time.chrono.BasicSingleEraDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/chrono/BasicSingleEraDateTimeField;.roundHalfEven:(J)J` @AccessFlag PUBLIC {
    temp;

  #L3b20d8.  v1:= -9223372036854775808L;
  #L3b20dc.  return v1 @kind wide;
}
procedure `long` `roundHalfFloor`(`org.joda.time.chrono.BasicSingleEraDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/chrono/BasicSingleEraDateTimeField;.roundHalfFloor:(J)J` @AccessFlag PUBLIC {
    temp;

  #L3b20f0.  v1:= -9223372036854775808L;
  #L3b20f4.  return v1 @kind wide;
}
procedure `long` `set`(`org.joda.time.chrono.BasicSingleEraDateTimeField` v1 @kind this, `long` v2 , `int` v4 ) @signature `Lorg/joda/time/chrono/BasicSingleEraDateTimeField;.set:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3b2108.  v0:= 1I;
  #L3b210a.  call `verifyValueBounds`(v1, v4, v0, v0) @signature `Lorg/joda/time/field/FieldUtils;.verifyValueBounds:(Lorg/joda/time/DateTimeField;III)V` @kind static;
  #L3b2110.  return v2 @kind wide;
}
procedure `long` `set`(`org.joda.time.chrono.BasicSingleEraDateTimeField` v0 @kind this, `long` v1 , `java.lang.String` v3 @kind object, `java.util.Locale` v4 @kind object) @signature `Lorg/joda/time/chrono/BasicSingleEraDateTimeField;.set:(JLjava/lang/String;Ljava/util/Locale;)J` @AccessFlag PUBLIC {
    temp;

  #L3b2124.  v4:= v0.`org.joda.time.chrono.BasicSingleEraDateTimeField.iEraText` @type ^`java.lang.String` @kind object;
  #L3b2128.  call temp:= `equals`(v4, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b212e.  v4:= temp;
  #L3b2130.  if v4 != 0 then goto L3b215a;
  #L3b2134.  v4:= "1" @kind object;
  #L3b2138.  call temp:= `equals`(v4, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3b213e.  v4:= temp;
  #L3b2140.  if v4 == 0 then goto L3b2146;
  #L3b2144.  goto L3b215a;
  #L3b2146.  v1:= new `org.joda.time.IllegalFieldValueException`;
  #L3b214a.  call temp:= `era`() @signature `Lorg/joda/time/DateTimeFieldType;.era:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3b2150.  v2:= temp @kind object;
  #L3b2152.  call `<init>`(v1, v2, v3) @signature `Lorg/joda/time/IllegalFieldValueException;.<init>:(Lorg/joda/time/DateTimeFieldType;Ljava/lang/String;)V` @kind direct;
  #L3b2158.  throw v1;
  #L3b215a.  return v1 @kind wide;
}
