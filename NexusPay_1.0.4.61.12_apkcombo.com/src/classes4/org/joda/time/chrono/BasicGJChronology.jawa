record `org.joda.time.chrono.BasicGJChronology` @kind class @AccessFlag ABSTRACT extends `org.joda.time.chrono.BasicChronology` @kind class {
}
global `long` `@@org.joda.time.chrono.BasicGJChronology.FEB_29` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.joda.time.chrono.BasicGJChronology.MAX_DAYS_PER_MONTH_ARRAY` @AccessFlag PRIVATE_STATIC_FINAL;
global `long`[] `@@org.joda.time.chrono.BasicGJChronology.MAX_TOTAL_MILLIS_BY_MONTH_ARRAY` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.joda.time.chrono.BasicGJChronology.MIN_DAYS_PER_MONTH_ARRAY` @AccessFlag PRIVATE_STATIC_FINAL;
global `long`[] `@@org.joda.time.chrono.BasicGJChronology.MIN_TOTAL_MILLIS_BY_MONTH_ARRAY` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.joda.time.chrono.BasicGJChronology.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/chrono/BasicGJChronology;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3b18c0.  v0:= 12I;
  #L3b18c4.  v1:= new `int`[v0];
  #L3b18c8.  goto L3b1944;
  #L3b18ce.  `@@org.joda.time.chrono.BasicGJChronology.MIN_DAYS_PER_MONTH_ARRAY` @type ^`int`[] := v1 @kind object;
  #L3b18d2.  v1:= new `int`[v0];
  #L3b18d6.  goto L3b197c;
  #L3b18dc.  `@@org.joda.time.chrono.BasicGJChronology.MAX_DAYS_PER_MONTH_ARRAY` @type ^`int`[] := v1 @kind object;
  #L3b18e0.  v1:= new `long`[v0];
  #L3b18e4.  `@@org.joda.time.chrono.BasicGJChronology.MIN_TOTAL_MILLIS_BY_MONTH_ARRAY` @type ^`long`[] := v1 @kind object;
  #L3b18e8.  v0:= new `long`[v0];
  #L3b18ec.  `@@org.joda.time.chrono.BasicGJChronology.MAX_TOTAL_MILLIS_BY_MONTH_ARRAY` @type ^`long`[] := v0 @kind object;
  #L3b18f0.  v0:= 0L;
  #L3b18f4.  v2:= 0I;
  #L3b18f6.  v2:= v0 @kind wide;
  #L3b18f8.  v4:= 0I;
  #L3b18fa.  v5:= 11I;
  #L3b18fe.  if v4 >= v5 then goto L3b1940;
  #L3b1902.  v5:= `@@org.joda.time.chrono.BasicGJChronology.MIN_DAYS_PER_MONTH_ARRAY` @type ^`int`[] @kind object;
  #L3b1906.  v5:= v5[v4];
  #L3b190a.  v5:= (`long`) v5 @kind i2l;
  #L3b190c.  v7:= 86400000L;
  #L3b1912.  v5:= v5 * v7 @kind long;
  #L3b1916.  v0:= v0 + v5 @kind long;
  #L3b1918.  v5:= `@@org.joda.time.chrono.BasicGJChronology.MIN_TOTAL_MILLIS_BY_MONTH_ARRAY` @type ^`long`[] @kind object;
  #L3b191c.  v6:= v4 + 1;
  #L3b1920.  v5[v6]:= v0 @kind wide;
  #L3b1924.  v5:= `@@org.joda.time.chrono.BasicGJChronology.MAX_DAYS_PER_MONTH_ARRAY` @type ^`int`[] @kind object;
  #L3b1928.  v4:= v5[v4];
  #L3b192c.  v4:= (`long`) v4 @kind i2l;
  #L3b192e.  v4:= v4 * v7 @kind long;
  #L3b1932.  v2:= v2 + v4 @kind long;
  #L3b1934.  v4:= `@@org.joda.time.chrono.BasicGJChronology.MAX_TOTAL_MILLIS_BY_MONTH_ARRAY` @type ^`long`[] @kind object;
  #L3b1938.  v4[v6]:= v2 @kind wide;
  #L3b193c.  v4:= v6;
  #L3b193e.  goto L3b18fa;
  #L3b1940.  return @kind void;
  #L3b1942.  
  #L3b1944.  v1:= (31I, 28I, 31I, 30I, 31I, 30I, 31I, 31I, 30I, 31I, 30I, 31I) @kind object;
  #L3b197b.  goto L3b18ce;
  #L3b197c.  v1:= (31I, 29I, 31I, 30I, 31I, 30I, 31I, 31I, 30I, 31I, 30I, 31I) @kind object;
  #L3b19b3.  goto L3b18dc;
}
procedure `void` `<init>`(`org.joda.time.chrono.BasicGJChronology` v0 @kind this, `org.joda.time.Chronology` v1 @kind object, `java.lang.Object` v2 @kind object, `int` v3 ) @signature `Lorg/joda/time/chrono/BasicGJChronology;.<init>:(Lorg/joda/time/Chronology;Ljava/lang/Object;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3b19c4.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/joda/time/chrono/BasicChronology;.<init>:(Lorg/joda/time/Chronology;Ljava/lang/Object;I)V` @kind direct;
  #L3b19ca.  return @kind void;
}
procedure `int` `getDaysInMonthMax`(`org.joda.time.chrono.BasicGJChronology` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/chrono/BasicGJChronology;.getDaysInMonthMax:(I)I` @AccessFlag  {
    temp;
    v0;

  #L3b15a0.  v0:= `@@org.joda.time.chrono.BasicGJChronology.MAX_DAYS_PER_MONTH_ARRAY` @type ^`int`[] @kind object;
  #L3b15a4.  v2:= v2 + -1;
  #L3b15a8.  v2:= v0[v2];
  #L3b15ac.  return v2;
}
procedure `int` `getDaysInMonthMaxForSet`(`org.joda.time.chrono.BasicGJChronology` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lorg/joda/time/chrono/BasicGJChronology;.getDaysInMonthMaxForSet:(JI)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3b15c0.  v0:= 28I;
  #L3b15c4.  if v5 > v0 then goto L3b15ce;
  #L3b15c8.  v1:= 1I;
  #L3b15ca.  if v5 >= v1 then goto L3b15d6;
  #L3b15ce.  call temp:= `getDaysInMonthMax`(v2, v3) @signature `Lorg/joda/time/chrono/BasicChronology;.getDaysInMonthMax:(J)I` @kind virtual;
  #L3b15d4.  v0:= temp;
  #L3b15d6.  return v0;
}
procedure `int` `getDaysInYearMonth`(`org.joda.time.chrono.BasicGJChronology` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/joda/time/chrono/BasicGJChronology;.getDaysInYearMonth:(II)I` @AccessFlag  {
    temp;

  #L3b15e8.  call temp:= `isLeapYear`(v0, v1) @signature `Lorg/joda/time/chrono/BasicChronology;.isLeapYear:(I)Z` @kind virtual;
  #L3b15ee.  v1:= temp;
  #L3b15f0.  if v1 == 0 then goto L3b1602;
  #L3b15f4.  v1:= `@@org.joda.time.chrono.BasicGJChronology.MAX_DAYS_PER_MONTH_ARRAY` @type ^`int`[] @kind object;
  #L3b15f8.  v2:= v2 + -1;
  #L3b15fc.  v1:= v1[v2];
  #L3b1600.  return v1;
  #L3b1602.  v1:= `@@org.joda.time.chrono.BasicGJChronology.MIN_DAYS_PER_MONTH_ARRAY` @type ^`int`[] @kind object;
  #L3b1606.  v2:= v2 + -1;
  #L3b160a.  v1:= v1[v2];
  #L3b160e.  return v1;
}
procedure `int` `getMonthOfYear`(`org.joda.time.chrono.BasicGJChronology` v12 @kind this, `long` v13 , `int` v15 ) @signature `Lorg/joda/time/chrono/BasicGJChronology;.getMonthOfYear:(JI)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3b1620.  call temp:= `getYearMillis`(v12, v15) @signature `Lorg/joda/time/chrono/BasicChronology;.getYearMillis:(I)J` @kind virtual;
  #L3b1626.  v0:= temp @kind wide;
  #L3b1628.  v13:= v13 - v0 @kind long;
  #L3b162a.  v0:= 10I;
  #L3b162e.  v13:= v13 ^> v0 @kind long;
  #L3b1630.  v14:= (`int`) v13 @kind l2i;
  #L3b1632.  call temp:= `isLeapYear`(v12, v15) @signature `Lorg/joda/time/chrono/BasicChronology;.isLeapYear:(I)Z` @kind virtual;
  #L3b1638.  v13:= temp;
  #L3b163a.  v15:= 2I;
  #L3b163c.  v1:= 3I;
  #L3b163e.  v2:= 5I;
  #L3b1640.  v3:= 6I;
  #L3b1642.  v4:= 8I;
  #L3b1646.  v5:= 9I;
  #L3b164a.  v6:= 11I;
  #L3b164e.  v7:= 12I;
  #L3b1652.  v8:= 1I;
  #L3b1654.  v9:= 4I;
  #L3b1656.  v10:= 7I;
  #L3b1658.  v11:= 2615625I;
  #L3b165e.  if v13 == 0 then goto L3b16da;
  #L3b1662.  v13:= 15356250I;
  #L3b1668.  if v14 >= v13 then goto L3b16a0;
  #L3b166c.  v13:= 7678125I;
  #L3b1672.  if v14 >= v13 then goto L3b1688;
  #L3b1676.  if v14 >= v11 then goto L3b167c;
  #L3b167a.  goto L3b16f2;
  #L3b167c.  v13:= 5062500I;
  #L3b1682.  if v14 >= v13 then goto L3b1704;
  #L3b1686.  goto L3b1700;
  #L3b1688.  v13:= 10209375I;
  #L3b168e.  if v14 >= v13 then goto L3b1694;
  #L3b1692.  goto L3b1712;
  #L3b1694.  v13:= 12825000I;
  #L3b169a.  if v14 >= v13 then goto L3b1724;
  #L3b169e.  goto L3b1720;
  #L3b16a0.  v13:= 23118750I;
  #L3b16a6.  if v14 >= v13 then goto L3b16c2;
  #L3b16aa.  v13:= 17971875I;
  #L3b16b0.  if v14 >= v13 then goto L3b16b6;
  #L3b16b4.  goto L3b173c;
  #L3b16b6.  v13:= 20587500I;
  #L3b16bc.  if v14 >= v13 then goto L3b1750;
  #L3b16c0.  goto L3b174a;
  #L3b16c2.  v13:= 25734375I;
  #L3b16c8.  if v14 >= v13 then goto L3b16ce;
  #L3b16cc.  goto L3b1776;
  #L3b16ce.  v13:= 28265625I;
  #L3b16d4.  if v14 >= v13 then goto L3b1772;
  #L3b16d8.  goto L3b176c;
  #L3b16da.  v13:= 15271875I;
  #L3b16e0.  if v14 >= v13 then goto L3b1728;
  #L3b16e4.  v13:= 7593750I;
  #L3b16ea.  if v14 >= v13 then goto L3b1708;
  #L3b16ee.  if v14 >= v11 then goto L3b16f6;
  #L3b16f2.  v0:= 1I;
  #L3b16f4.  goto L3b1776;
  #L3b16f6.  v13:= 4978125I;
  #L3b16fc.  if v14 >= v13 then goto L3b1704;
  #L3b1700.  v0:= 2I;
  #L3b1702.  goto L3b1776;
  #L3b1704.  v0:= 3I;
  #L3b1706.  goto L3b1776;
  #L3b1708.  v13:= 10125000I;
  #L3b170e.  if v14 >= v13 then goto L3b1716;
  #L3b1712.  v0:= 4I;
  #L3b1714.  goto L3b1776;
  #L3b1716.  v13:= 12740625I;
  #L3b171c.  if v14 >= v13 then goto L3b1724;
  #L3b1720.  v0:= 5I;
  #L3b1722.  goto L3b1776;
  #L3b1724.  v0:= 6I;
  #L3b1726.  goto L3b1776;
  #L3b1728.  v13:= 23034375I;
  #L3b172e.  if v14 >= v13 then goto L3b1756;
  #L3b1732.  v13:= 17887500I;
  #L3b1738.  if v14 >= v13 then goto L3b1740;
  #L3b173c.  v0:= 7I;
  #L3b173e.  goto L3b1776;
  #L3b1740.  v13:= 20503125I;
  #L3b1746.  if v14 >= v13 then goto L3b1750;
  #L3b174a.  v0:= 8I;
  #L3b174e.  goto L3b1776;
  #L3b1750.  v0:= 9I;
  #L3b1754.  goto L3b1776;
  #L3b1756.  v13:= 25650000I;
  #L3b175c.  if v14 >= v13 then goto L3b1762;
  #L3b1760.  goto L3b1776;
  #L3b1762.  v13:= 28181250I;
  #L3b1768.  if v14 >= v13 then goto L3b1772;
  #L3b176c.  v0:= 11I;
  #L3b1770.  goto L3b1776;
  #L3b1772.  v0:= 12I;
  #L3b1776.  return v0;
}
procedure `long` `getTotalMillisByYearMonth`(`org.joda.time.chrono.BasicGJChronology` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lorg/joda/time/chrono/BasicGJChronology;.getTotalMillisByYearMonth:(II)J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3b1788.  call temp:= `isLeapYear`(v2, v3) @signature `Lorg/joda/time/chrono/BasicChronology;.isLeapYear:(I)Z` @kind virtual;
  #L3b178e.  v3:= temp;
  #L3b1790.  if v3 == 0 then goto L3b17a2;
  #L3b1794.  v3:= `@@org.joda.time.chrono.BasicGJChronology.MAX_TOTAL_MILLIS_BY_MONTH_ARRAY` @type ^`long`[] @kind object;
  #L3b1798.  v4:= v4 + -1;
  #L3b179c.  v0:= v3[v4] @kind wide;
  #L3b17a0.  return v0 @kind wide;
  #L3b17a2.  v3:= `@@org.joda.time.chrono.BasicGJChronology.MIN_TOTAL_MILLIS_BY_MONTH_ARRAY` @type ^`long`[] @kind object;
  #L3b17a6.  v4:= v4 + -1;
  #L3b17aa.  v0:= v3[v4] @kind wide;
  #L3b17ae.  return v0 @kind wide;
}
procedure `long` `getYearDifference`(`org.joda.time.chrono.BasicGJChronology` v7 @kind this, `long` v8 , `long` v10 ) @signature `Lorg/joda/time/chrono/BasicGJChronology;.getYearDifference:(JJ)J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3b17c0.  call temp:= `getYear`(v7, v8) @signature `Lorg/joda/time/chrono/BasicChronology;.getYear:(J)I` @kind virtual;
  #L3b17c6.  v0:= temp;
  #L3b17c8.  call temp:= `getYear`(v7, v10) @signature `Lorg/joda/time/chrono/BasicChronology;.getYear:(J)I` @kind virtual;
  #L3b17ce.  v1:= temp;
  #L3b17d0.  call temp:= `getYearMillis`(v7, v0) @signature `Lorg/joda/time/chrono/BasicChronology;.getYearMillis:(I)J` @kind virtual;
  #L3b17d6.  v2:= temp @kind wide;
  #L3b17d8.  v8:= v8 - v2 @kind long;
  #L3b17da.  call temp:= `getYearMillis`(v7, v1) @signature `Lorg/joda/time/chrono/BasicChronology;.getYearMillis:(I)J` @kind virtual;
  #L3b17e0.  v2:= temp @kind wide;
  #L3b17e2.  v10:= v10 - v2 @kind long;
  #L3b17e4.  v2:= 5097600000L;
  #L3b17ee.  v4:= lcmp(v10, v2);
  #L3b17f2.  if v4 < 0 then goto L3b182e;
  #L3b17f6.  call temp:= `isLeapYear`(v7, v1) @signature `Lorg/joda/time/chrono/BasicChronology;.isLeapYear:(I)Z` @kind virtual;
  #L3b17fc.  v4:= temp;
  #L3b17fe.  v5:= 86400000L;
  #L3b1804.  if v4 == 0 then goto L3b1818;
  #L3b1808.  call temp:= `isLeapYear`(v7, v0) @signature `Lorg/joda/time/chrono/BasicChronology;.isLeapYear:(I)Z` @kind virtual;
  #L3b180e.  v2:= temp;
  #L3b1810.  if v2 != 0 then goto L3b182e;
  #L3b1814.  v10:= v10 - v5 @kind long;
  #L3b1816.  goto L3b182e;
  #L3b1818.  v4:= lcmp(v8, v2);
  #L3b181c.  if v4 < 0 then goto L3b182e;
  #L3b1820.  call temp:= `isLeapYear`(v7, v0) @signature `Lorg/joda/time/chrono/BasicChronology;.isLeapYear:(I)Z` @kind virtual;
  #L3b1826.  v2:= temp;
  #L3b1828.  if v2 == 0 then goto L3b182e;
  #L3b182c.  v8:= v8 - v5 @kind long;
  #L3b182e.  v0:= v0 - v1 @kind int;
  #L3b1830.  v1:= lcmp(v8, v10);
  #L3b1834.  if v1 >= 0 then goto L3b183c;
  #L3b1838.  v0:= v0 + -1;
  #L3b183c.  v8:= (`long`) v0 @kind i2l;
  #L3b183e.  return v8 @kind wide;
}
procedure `boolean` `isLeapDay`(`org.joda.time.chrono.BasicGJChronology` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/chrono/BasicGJChronology;.isLeapDay:(J)Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3b155c.  call temp:= `dayOfMonth`(v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b1562.  v0:= temp @kind object;
  #L3b1564.  call temp:= `get`(v0, v3) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3b156a.  v0:= temp;
  #L3b156c.  v1:= 29I;
  #L3b1570.  if v0 != v1 then goto L3b158c;
  #L3b1574.  call temp:= `monthOfYear`(v2) @signature `Lorg/joda/time/chrono/AssembledChronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3b157a.  v0:= temp @kind object;
  #L3b157c.  call temp:= `isLeap`(v0, v3) @signature `Lorg/joda/time/DateTimeField;.isLeap:(J)Z` @kind virtual;
  #L3b1582.  v3:= temp;
  #L3b1584.  if v3 == 0 then goto L3b158c;
  #L3b1588.  v3:= 1I;
  #L3b158a.  goto L3b158e;
  #L3b158c.  v3:= 0I;
  #L3b158e.  return v3;
}
procedure `long` `setYear`(`org.joda.time.chrono.BasicGJChronology` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lorg/joda/time/chrono/BasicGJChronology;.setYear:(JI)J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3b1850.  call temp:= `getYear`(v2, v3) @signature `Lorg/joda/time/chrono/BasicChronology;.getYear:(J)I` @kind virtual;
  #L3b1856.  v0:= temp;
  #L3b1858.  call temp:= `getDayOfYear`(v2, v3, v0) @signature `Lorg/joda/time/chrono/BasicChronology;.getDayOfYear:(JI)I` @kind virtual;
  #L3b185e.  v1:= temp;
  #L3b1860.  call temp:= `getMillisOfDay`(v2, v3) @signature `Lorg/joda/time/chrono/BasicChronology;.getMillisOfDay:(J)I` @kind virtual;
  #L3b1866.  v3:= temp;
  #L3b1868.  v4:= 59I;
  #L3b186c.  if v1 <= v4 then goto L3b189e;
  #L3b1870.  call temp:= `isLeapYear`(v2, v0) @signature `Lorg/joda/time/chrono/BasicChronology;.isLeapYear:(I)Z` @kind virtual;
  #L3b1876.  v4:= temp;
  #L3b1878.  if v4 == 0 then goto L3b188e;
  #L3b187c.  call temp:= `isLeapYear`(v2, v5) @signature `Lorg/joda/time/chrono/BasicChronology;.isLeapYear:(I)Z` @kind virtual;
  #L3b1882.  v4:= temp;
  #L3b1884.  if v4 != 0 then goto L3b189e;
  #L3b1888.  v1:= v1 + -1;
  #L3b188c.  goto L3b189e;
  #L3b188e.  call temp:= `isLeapYear`(v2, v5) @signature `Lorg/joda/time/chrono/BasicChronology;.isLeapYear:(I)Z` @kind virtual;
  #L3b1894.  v4:= temp;
  #L3b1896.  if v4 == 0 then goto L3b189e;
  #L3b189a.  v1:= v1 + 1;
  #L3b189e.  v4:= 1I;
  #L3b18a0.  call temp:= `getYearMonthDayMillis`(v2, v5, v4, v1) @signature `Lorg/joda/time/chrono/BasicChronology;.getYearMonthDayMillis:(III)J` @kind virtual;
  #L3b18a6.  v4:= temp @kind wide;
  #L3b18a8.  v0:= (`long`) v3 @kind i2l;
  #L3b18aa.  v4:= v4 + v0 @kind long;
  #L3b18ac.  return v4 @kind wide;
}
