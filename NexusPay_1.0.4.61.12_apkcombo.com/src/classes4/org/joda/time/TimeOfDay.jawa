record `org.joda.time.TimeOfDay` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.base.BasePartial` @kind class, `org.joda.time.ReadablePartial` @kind interface, `java.io.Serializable` @kind interface {
}
global `org.joda.time.DateTimeFieldType`[] `@@org.joda.time.TimeOfDay.FIELD_TYPES` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.joda.time.TimeOfDay.HOUR_OF_DAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.TimeOfDay` `@@org.joda.time.TimeOfDay.MIDNIGHT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.joda.time.TimeOfDay.MILLIS_OF_SECOND` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.joda.time.TimeOfDay.MINUTE_OF_HOUR` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.joda.time.TimeOfDay.SECOND_OF_MINUTE` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@org.joda.time.TimeOfDay.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/TimeOfDay;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a92f8.  v0:= 4I;
  #L3a92fa.  v0:= new `org.joda.time.DateTimeFieldType`[v0];
  #L3a92fe.  call temp:= `hourOfDay`() @signature `Lorg/joda/time/DateTimeFieldType;.hourOfDay:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3a9304.  v1:= temp @kind object;
  #L3a9306.  v2:= 0I;
  #L3a9308.  v0[v2]:= v1 @kind object;
  #L3a930c.  call temp:= `minuteOfHour`() @signature `Lorg/joda/time/DateTimeFieldType;.minuteOfHour:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3a9312.  v1:= temp @kind object;
  #L3a9314.  v3:= 1I;
  #L3a9316.  v0[v3]:= v1 @kind object;
  #L3a931a.  call temp:= `secondOfMinute`() @signature `Lorg/joda/time/DateTimeFieldType;.secondOfMinute:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3a9320.  v1:= temp @kind object;
  #L3a9322.  v3:= 2I;
  #L3a9324.  v0[v3]:= v1 @kind object;
  #L3a9328.  call temp:= `millisOfSecond`() @signature `Lorg/joda/time/DateTimeFieldType;.millisOfSecond:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3a932e.  v1:= temp @kind object;
  #L3a9330.  v3:= 3I;
  #L3a9332.  v0[v3]:= v1 @kind object;
  #L3a9336.  `@@org.joda.time.TimeOfDay.FIELD_TYPES` @type ^`org.joda.time.DateTimeFieldType`[] := v0 @kind object;
  #L3a933a.  v0:= new `org.joda.time.TimeOfDay`;
  #L3a933e.  call `<init>`(v0, v2, v2, v2, v2) @signature `Lorg/joda/time/TimeOfDay;.<init>:(IIII)V` @kind direct;
  #L3a9344.  `@@org.joda.time.TimeOfDay.MIDNIGHT` @type ^`org.joda.time.TimeOfDay` := v0 @kind object;
  #L3a9348.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.TimeOfDay` v0 @kind this) @signature `Lorg/joda/time/TimeOfDay;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a935c.  call `<init>`(v0) @signature `Lorg/joda/time/base/BasePartial;.<init>:()V` @kind direct;
  #L3a9362.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.TimeOfDay` v6 @kind this, `int` v7 , `int` v8 ) @signature `Lorg/joda/time/TimeOfDay;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a9374.  v3:= 0I;
  #L3a9376.  v4:= 0I;
  #L3a9378.  v5:= 0I;
  #L3a937a.  v0:= v6 @kind object;
  #L3a937c.  v1:= v7;
  #L3a937e.  v2:= v8;
  #L3a9380.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/joda/time/TimeOfDay;.<init>:(IIIILorg/joda/time/Chronology;)V` @kind direct;
  #L3a9386.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.TimeOfDay` v6 @kind this, `int` v7 , `int` v8 , `int` v9 ) @signature `Lorg/joda/time/TimeOfDay;.<init>:(III)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a9398.  v4:= 0I;
  #L3a939a.  v5:= 0I;
  #L3a939c.  v0:= v6 @kind object;
  #L3a939e.  v1:= v7;
  #L3a93a0.  v2:= v8;
  #L3a93a2.  v3:= v9;
  #L3a93a4.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/joda/time/TimeOfDay;.<init>:(IIIILorg/joda/time/Chronology;)V` @kind direct;
  #L3a93aa.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.TimeOfDay` v6 @kind this, `int` v7 , `int` v8 , `int` v9 , `int` v10 ) @signature `Lorg/joda/time/TimeOfDay;.<init>:(IIII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a93bc.  v5:= 0I;
  #L3a93be.  v0:= v6 @kind object;
  #L3a93c0.  v1:= v7;
  #L3a93c2.  v2:= v8;
  #L3a93c4.  v3:= v9;
  #L3a93c6.  v4:= v10;
  #L3a93c8.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/joda/time/TimeOfDay;.<init>:(IIIILorg/joda/time/Chronology;)V` @kind direct;
  #L3a93ce.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.TimeOfDay` v2 @kind this, `int` v3 , `int` v4 , `int` v5 , `int` v6 , `org.joda.time.Chronology` v7 @kind object) @signature `Lorg/joda/time/TimeOfDay;.<init>:(IIIILorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a93e0.  v0:= 4I;
  #L3a93e2.  v0:= new `int`[v0];
  #L3a93e6.  v1:= 0I;
  #L3a93e8.  v0[v1]:= v3;
  #L3a93ec.  v3:= 1I;
  #L3a93ee.  v0[v3]:= v4;
  #L3a93f2.  v3:= 2I;
  #L3a93f4.  v0[v3]:= v5;
  #L3a93f8.  v3:= 3I;
  #L3a93fa.  v0[v3]:= v6;
  #L3a93fe.  call `<init>`(v2, v0, v7) @signature `Lorg/joda/time/base/BasePartial;.<init>:([ILorg/joda/time/Chronology;)V` @kind direct;
  #L3a9404.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.TimeOfDay` v6 @kind this, `int` v7 , `int` v8 , `int` v9 , `org.joda.time.Chronology` v10 @kind object) @signature `Lorg/joda/time/TimeOfDay;.<init>:(IIILorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a9418.  v4:= 0I;
  #L3a941a.  v0:= v6 @kind object;
  #L3a941c.  v1:= v7;
  #L3a941e.  v2:= v8;
  #L3a9420.  v3:= v9;
  #L3a9422.  v5:= v10 @kind object;
  #L3a9424.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/joda/time/TimeOfDay;.<init>:(IIIILorg/joda/time/Chronology;)V` @kind direct;
  #L3a942a.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.TimeOfDay` v6 @kind this, `int` v7 , `int` v8 , `org.joda.time.Chronology` v9 @kind object) @signature `Lorg/joda/time/TimeOfDay;.<init>:(IILorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a943c.  v3:= 0I;
  #L3a943e.  v4:= 0I;
  #L3a9440.  v0:= v6 @kind object;
  #L3a9442.  v1:= v7;
  #L3a9444.  v2:= v8;
  #L3a9446.  v5:= v9 @kind object;
  #L3a9448.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/joda/time/TimeOfDay;.<init>:(IIIILorg/joda/time/Chronology;)V` @kind direct;
  #L3a944e.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.TimeOfDay` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/TimeOfDay;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a94ac.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BasePartial;.<init>:(J)V` @kind direct;
  #L3a94b2.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.TimeOfDay` v0 @kind this, `long` v1 , `org.joda.time.Chronology` v3 @kind object) @signature `Lorg/joda/time/TimeOfDay;.<init>:(JLorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a94c4.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/base/BasePartial;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3a94ca.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.TimeOfDay` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/joda/time/TimeOfDay;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a9460.  call temp:= `timeParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.timeParser:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3a9466.  v0:= temp @kind object;
  #L3a9468.  v1:= 0I;
  #L3a946a.  call `<init>`(v2, v3, v1, v0) @signature `Lorg/joda/time/base/BasePartial;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;Lorg/joda/time/format/DateTimeFormatter;)V` @kind direct;
  #L3a9470.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.TimeOfDay` v1 @kind this, `java.lang.Object` v2 @kind object, `org.joda.time.Chronology` v3 @kind object) @signature `Lorg/joda/time/TimeOfDay;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a9484.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L3a948a.  v3:= temp @kind object;
  #L3a948c.  call temp:= `timeParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.timeParser:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3a9492.  v0:= temp @kind object;
  #L3a9494.  call `<init>`(v1, v2, v3, v0) @signature `Lorg/joda/time/base/BasePartial;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;Lorg/joda/time/format/DateTimeFormatter;)V` @kind direct;
  #L3a949a.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.TimeOfDay` v0 @kind this, `org.joda.time.Chronology` v1 @kind object) @signature `Lorg/joda/time/TimeOfDay;.<init>:(Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a94dc.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BasePartial;.<init>:(Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a94e2.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.TimeOfDay` v0 @kind this, `org.joda.time.DateTimeZone` v1 @kind object) @signature `Lorg/joda/time/TimeOfDay;.<init>:(Lorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a94f4.  call temp:= `getInstance`(v1) @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3a94fa.  v1:= temp @kind object;
  #L3a94fc.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BasePartial;.<init>:(Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a9502.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.TimeOfDay` v0 @kind this, `org.joda.time.TimeOfDay` v1 @kind object, `org.joda.time.Chronology` v2 @kind object) @signature `Lorg/joda/time/TimeOfDay;.<init>:(Lorg/joda/time/TimeOfDay;Lorg/joda/time/Chronology;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3a952c.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/base/BasePartial;.<init>:(Lorg/joda/time/base/BasePartial;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a9532.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.TimeOfDay` v0 @kind this, `org.joda.time.TimeOfDay` v1 @kind object, `int`[] v2 @kind object) @signature `Lorg/joda/time/TimeOfDay;.<init>:(Lorg/joda/time/TimeOfDay;[I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3a9514.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/base/BasePartial;.<init>:(Lorg/joda/time/base/BasePartial;[I)V` @kind direct;
  #L3a951a.  return @kind void;
}
procedure `org.joda.time.TimeOfDay` `fromCalendarFields`(`java.util.Calendar` v5 @kind object) @signature `Lorg/joda/time/TimeOfDay;.fromCalendarFields:(Ljava/util/Calendar;)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a8d84.  if v5 == 0 then goto L3a8dc4;
  #L3a8d88.  v0:= new `org.joda.time.TimeOfDay`;
  #L3a8d8c.  v1:= 11I;
  #L3a8d90.  call temp:= `get`(v5, v1) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L3a8d96.  v1:= temp;
  #L3a8d98.  v2:= 12I;
  #L3a8d9c.  call temp:= `get`(v5, v2) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L3a8da2.  v2:= temp;
  #L3a8da4.  v3:= 13I;
  #L3a8da8.  call temp:= `get`(v5, v3) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L3a8dae.  v3:= temp;
  #L3a8db0.  v4:= 14I;
  #L3a8db4.  call temp:= `get`(v5, v4) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L3a8dba.  v5:= temp;
  #L3a8dbc.  call `<init>`(v0, v1, v2, v3, v5) @signature `Lorg/joda/time/TimeOfDay;.<init>:(IIII)V` @kind direct;
  #L3a8dc2.  return v0 @kind object;
  #L3a8dc4.  v5:= new `java.lang.IllegalArgumentException`;
  #L3a8dc8.  v0:= "The calendar must not be null" @kind object;
  #L3a8dcc.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a8dd2.  throw v5;
}
procedure `org.joda.time.TimeOfDay` `fromDateFields`(`java.util.Date` v8 @kind object) @signature `Lorg/joda/time/TimeOfDay;.fromDateFields:(Ljava/util/Date;)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3a8de4.  if v8 == 0 then goto L3a8e24;
  #L3a8de8.  v0:= new `org.joda.time.TimeOfDay`;
  #L3a8dec.  call temp:= `getHours`(v8) @signature `Ljava/util/Date;.getHours:()I` @kind virtual;
  #L3a8df2.  v1:= temp;
  #L3a8df4.  call temp:= `getMinutes`(v8) @signature `Ljava/util/Date;.getMinutes:()I` @kind virtual;
  #L3a8dfa.  v2:= temp;
  #L3a8dfc.  call temp:= `getSeconds`(v8) @signature `Ljava/util/Date;.getSeconds:()I` @kind virtual;
  #L3a8e02.  v3:= temp;
  #L3a8e04.  call temp:= `getTime`(v8) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3a8e0a.  v4:= temp @kind wide;
  #L3a8e0c.  v6:= 1000L;
  #L3a8e10.  v4:= v4 %% v6 @kind long;
  #L3a8e12.  v8:= (`int`) v4 @kind l2i;
  #L3a8e14.  v8:= v8 + 1000;
  #L3a8e18.  v8:= v8 %% 1000;
  #L3a8e1c.  call `<init>`(v0, v1, v2, v3, v8) @signature `Lorg/joda/time/TimeOfDay;.<init>:(IIII)V` @kind direct;
  #L3a8e22.  return v0 @kind object;
  #L3a8e24.  v8:= new `java.lang.IllegalArgumentException`;
  #L3a8e28.  v0:= "The date must not be null" @kind object;
  #L3a8e2c.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a8e32.  throw v8;
}
procedure `org.joda.time.TimeOfDay` `fromMillisOfDay`(`long` v1 ) @signature `Lorg/joda/time/TimeOfDay;.fromMillisOfDay:(J)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a8e44.  v0:= 0I;
  #L3a8e46.  call temp:= `fromMillisOfDay`(v1, v0) @signature `Lorg/joda/time/TimeOfDay;.fromMillisOfDay:(JLorg/joda/time/Chronology;)Lorg/joda/time/TimeOfDay;` @kind static;
  #L3a8e4c.  v1:= temp @kind object;
  #L3a8e4e.  return v1 @kind object;
}
procedure `org.joda.time.TimeOfDay` `fromMillisOfDay`(`long` v1 , `org.joda.time.Chronology` v3 @kind object) @signature `Lorg/joda/time/TimeOfDay;.fromMillisOfDay:(JLorg/joda/time/Chronology;)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a8e60.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L3a8e66.  v3:= temp @kind object;
  #L3a8e68.  call temp:= `withUTC`(v3) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a8e6e.  v3:= temp @kind object;
  #L3a8e70.  v0:= new `org.joda.time.TimeOfDay`;
  #L3a8e74.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/TimeOfDay;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3a8e7a.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `getField`(`org.joda.time.TimeOfDay` v2 @kind this, `int` v3 , `org.joda.time.Chronology` v4 @kind object) @signature `Lorg/joda/time/TimeOfDay;.getField:(ILorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3a8c80.  if v3 == 0 then goto L3a8ce2;
  #L3a8c84.  v0:= 1I;
  #L3a8c86.  if v3 == v0 then goto L3a8cd8;
  #L3a8c8a.  v0:= 2I;
  #L3a8c8c.  if v3 == v0 then goto L3a8cce;
  #L3a8c90.  v0:= 3I;
  #L3a8c92.  if v3 != v0 then goto L3a8ca0;
  #L3a8c96.  call temp:= `millisOfSecond`(v4) @signature `Lorg/joda/time/Chronology;.millisOfSecond:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a8c9c.  v3:= temp @kind object;
  #L3a8c9e.  return v3 @kind object;
  #L3a8ca0.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L3a8ca4.  v0:= new `java.lang.StringBuilder`;
  #L3a8ca8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a8cae.  v1:= "Invalid index: " @kind object;
  #L3a8cb2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8cb8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a8cbe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a8cc4.  v3:= temp @kind object;
  #L3a8cc6.  call `<init>`(v4, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a8ccc.  throw v4;
  #L3a8cce.  call temp:= `secondOfMinute`(v4) @signature `Lorg/joda/time/Chronology;.secondOfMinute:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a8cd4.  v3:= temp @kind object;
  #L3a8cd6.  return v3 @kind object;
  #L3a8cd8.  call temp:= `minuteOfHour`(v4) @signature `Lorg/joda/time/Chronology;.minuteOfHour:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a8cde.  v3:= temp @kind object;
  #L3a8ce0.  return v3 @kind object;
  #L3a8ce2.  call temp:= `hourOfDay`(v4) @signature `Lorg/joda/time/Chronology;.hourOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a8ce8.  v3:= temp @kind object;
  #L3a8cea.  return v3 @kind object;
}
procedure `org.joda.time.DateTimeFieldType` `getFieldType`(`org.joda.time.TimeOfDay` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/TimeOfDay;.getFieldType:(I)Lorg/joda/time/DateTimeFieldType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8cfc.  v0:= `@@org.joda.time.TimeOfDay.FIELD_TYPES` @type ^`org.joda.time.DateTimeFieldType`[] @kind object;
  #L3a8d00.  v2:= v0[v2] @kind object;
  #L3a8d04.  return v2 @kind object;
}
procedure `org.joda.time.DateTimeFieldType`[] `getFieldTypes`(`org.joda.time.TimeOfDay` v1 @kind this) @signature `Lorg/joda/time/TimeOfDay;.getFieldTypes:()[Lorg/joda/time/DateTimeFieldType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8d18.  v0:= `@@org.joda.time.TimeOfDay.FIELD_TYPES` @type ^`org.joda.time.DateTimeFieldType`[] @kind object;
  #L3a8d1c.  call temp:= `clone`(v0) @signature `[Lorg/joda/time/DateTimeFieldType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3a8d22.  v0:= temp @kind object;
  #L3a8d24.  v0:= (`org.joda.time.DateTimeFieldType`[]) v0 @kind object;
  #L3a8d28.  return v0 @kind object;
}
procedure `int` `getHourOfDay`(`org.joda.time.TimeOfDay` v1 @kind this) @signature `Lorg/joda/time/TimeOfDay;.getHourOfDay:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8b80.  v0:= 0I;
  #L3a8b82.  call temp:= `getValue`(v1, v0) @signature `Lorg/joda/time/base/BasePartial;.getValue:(I)I` @kind virtual;
  #L3a8b88.  v0:= temp;
  #L3a8b8a.  return v0;
}
procedure `int` `getMillisOfSecond`(`org.joda.time.TimeOfDay` v1 @kind this) @signature `Lorg/joda/time/TimeOfDay;.getMillisOfSecond:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8b9c.  v0:= 3I;
  #L3a8b9e.  call temp:= `getValue`(v1, v0) @signature `Lorg/joda/time/base/BasePartial;.getValue:(I)I` @kind virtual;
  #L3a8ba4.  v0:= temp;
  #L3a8ba6.  return v0;
}
procedure `int` `getMinuteOfHour`(`org.joda.time.TimeOfDay` v1 @kind this) @signature `Lorg/joda/time/TimeOfDay;.getMinuteOfHour:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8bb8.  v0:= 1I;
  #L3a8bba.  call temp:= `getValue`(v1, v0) @signature `Lorg/joda/time/base/BasePartial;.getValue:(I)I` @kind virtual;
  #L3a8bc0.  v0:= temp;
  #L3a8bc2.  return v0;
}
procedure `int` `getSecondOfMinute`(`org.joda.time.TimeOfDay` v1 @kind this) @signature `Lorg/joda/time/TimeOfDay;.getSecondOfMinute:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8bd4.  v0:= 2I;
  #L3a8bd6.  call temp:= `getValue`(v1, v0) @signature `Lorg/joda/time/base/BasePartial;.getValue:(I)I` @kind virtual;
  #L3a8bdc.  v0:= temp;
  #L3a8bde.  return v0;
}
procedure `org.joda.time.TimeOfDay$Property` `hourOfDay`(`org.joda.time.TimeOfDay` v2 @kind this) @signature `Lorg/joda/time/TimeOfDay;.hourOfDay:()Lorg/joda/time/TimeOfDay$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a9254.  v0:= new `org.joda.time.TimeOfDay$Property`;
  #L3a9258.  v1:= 0I;
  #L3a925a.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/TimeOfDay$Property;.<init>:(Lorg/joda/time/TimeOfDay;I)V` @kind direct;
  #L3a9260.  return v0 @kind object;
}
procedure `org.joda.time.TimeOfDay$Property` `millisOfSecond`(`org.joda.time.TimeOfDay` v2 @kind this) @signature `Lorg/joda/time/TimeOfDay;.millisOfSecond:()Lorg/joda/time/TimeOfDay$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a9274.  v0:= new `org.joda.time.TimeOfDay$Property`;
  #L3a9278.  v1:= 3I;
  #L3a927a.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/TimeOfDay$Property;.<init>:(Lorg/joda/time/TimeOfDay;I)V` @kind direct;
  #L3a9280.  return v0 @kind object;
}
procedure `org.joda.time.TimeOfDay` `minus`(`org.joda.time.TimeOfDay` v1 @kind this, `org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/TimeOfDay;.minus:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8e8c.  v0:= -1I;
  #L3a8e8e.  call temp:= `withPeriodAdded`(v1, v2, v0) @signature `Lorg/joda/time/TimeOfDay;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/TimeOfDay;` @kind virtual;
  #L3a8e94.  v2:= temp @kind object;
  #L3a8e96.  return v2 @kind object;
}
procedure `org.joda.time.TimeOfDay` `minusHours`(`org.joda.time.TimeOfDay` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/TimeOfDay;.minusHours:(I)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8ea8.  call temp:= `hours`() @signature `Lorg/joda/time/DurationFieldType;.hours:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a8eae.  v0:= temp @kind object;
  #L3a8eb0.  call temp:= `safeNegate`(v2) @signature `Lorg/joda/time/field/FieldUtils;.safeNegate:(I)I` @kind static;
  #L3a8eb6.  v2:= temp;
  #L3a8eb8.  call temp:= `withFieldAdded`(v1, v0, v2) @signature `Lorg/joda/time/TimeOfDay;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/TimeOfDay;` @kind virtual;
  #L3a8ebe.  v2:= temp @kind object;
  #L3a8ec0.  return v2 @kind object;
}
procedure `org.joda.time.TimeOfDay` `minusMillis`(`org.joda.time.TimeOfDay` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/TimeOfDay;.minusMillis:(I)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8ed4.  call temp:= `millis`() @signature `Lorg/joda/time/DurationFieldType;.millis:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a8eda.  v0:= temp @kind object;
  #L3a8edc.  call temp:= `safeNegate`(v2) @signature `Lorg/joda/time/field/FieldUtils;.safeNegate:(I)I` @kind static;
  #L3a8ee2.  v2:= temp;
  #L3a8ee4.  call temp:= `withFieldAdded`(v1, v0, v2) @signature `Lorg/joda/time/TimeOfDay;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/TimeOfDay;` @kind virtual;
  #L3a8eea.  v2:= temp @kind object;
  #L3a8eec.  return v2 @kind object;
}
procedure `org.joda.time.TimeOfDay` `minusMinutes`(`org.joda.time.TimeOfDay` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/TimeOfDay;.minusMinutes:(I)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8f00.  call temp:= `minutes`() @signature `Lorg/joda/time/DurationFieldType;.minutes:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a8f06.  v0:= temp @kind object;
  #L3a8f08.  call temp:= `safeNegate`(v2) @signature `Lorg/joda/time/field/FieldUtils;.safeNegate:(I)I` @kind static;
  #L3a8f0e.  v2:= temp;
  #L3a8f10.  call temp:= `withFieldAdded`(v1, v0, v2) @signature `Lorg/joda/time/TimeOfDay;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/TimeOfDay;` @kind virtual;
  #L3a8f16.  v2:= temp @kind object;
  #L3a8f18.  return v2 @kind object;
}
procedure `org.joda.time.TimeOfDay` `minusSeconds`(`org.joda.time.TimeOfDay` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/TimeOfDay;.minusSeconds:(I)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8f2c.  call temp:= `seconds`() @signature `Lorg/joda/time/DurationFieldType;.seconds:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a8f32.  v0:= temp @kind object;
  #L3a8f34.  call temp:= `safeNegate`(v2) @signature `Lorg/joda/time/field/FieldUtils;.safeNegate:(I)I` @kind static;
  #L3a8f3a.  v2:= temp;
  #L3a8f3c.  call temp:= `withFieldAdded`(v1, v0, v2) @signature `Lorg/joda/time/TimeOfDay;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/TimeOfDay;` @kind virtual;
  #L3a8f42.  v2:= temp @kind object;
  #L3a8f44.  return v2 @kind object;
}
procedure `org.joda.time.TimeOfDay$Property` `minuteOfHour`(`org.joda.time.TimeOfDay` v2 @kind this) @signature `Lorg/joda/time/TimeOfDay;.minuteOfHour:()Lorg/joda/time/TimeOfDay$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a9294.  v0:= new `org.joda.time.TimeOfDay$Property`;
  #L3a9298.  v1:= 1I;
  #L3a929a.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/TimeOfDay$Property;.<init>:(Lorg/joda/time/TimeOfDay;I)V` @kind direct;
  #L3a92a0.  return v0 @kind object;
}
procedure `org.joda.time.TimeOfDay` `plus`(`org.joda.time.TimeOfDay` v1 @kind this, `org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/TimeOfDay;.plus:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8f58.  v0:= 1I;
  #L3a8f5a.  call temp:= `withPeriodAdded`(v1, v2, v0) @signature `Lorg/joda/time/TimeOfDay;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/TimeOfDay;` @kind virtual;
  #L3a8f60.  v2:= temp @kind object;
  #L3a8f62.  return v2 @kind object;
}
procedure `org.joda.time.TimeOfDay` `plusHours`(`org.joda.time.TimeOfDay` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/TimeOfDay;.plusHours:(I)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8f74.  call temp:= `hours`() @signature `Lorg/joda/time/DurationFieldType;.hours:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a8f7a.  v0:= temp @kind object;
  #L3a8f7c.  call temp:= `withFieldAdded`(v1, v0, v2) @signature `Lorg/joda/time/TimeOfDay;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/TimeOfDay;` @kind virtual;
  #L3a8f82.  v2:= temp @kind object;
  #L3a8f84.  return v2 @kind object;
}
procedure `org.joda.time.TimeOfDay` `plusMillis`(`org.joda.time.TimeOfDay` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/TimeOfDay;.plusMillis:(I)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8f98.  call temp:= `millis`() @signature `Lorg/joda/time/DurationFieldType;.millis:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a8f9e.  v0:= temp @kind object;
  #L3a8fa0.  call temp:= `withFieldAdded`(v1, v0, v2) @signature `Lorg/joda/time/TimeOfDay;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/TimeOfDay;` @kind virtual;
  #L3a8fa6.  v2:= temp @kind object;
  #L3a8fa8.  return v2 @kind object;
}
procedure `org.joda.time.TimeOfDay` `plusMinutes`(`org.joda.time.TimeOfDay` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/TimeOfDay;.plusMinutes:(I)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8fbc.  call temp:= `minutes`() @signature `Lorg/joda/time/DurationFieldType;.minutes:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a8fc2.  v0:= temp @kind object;
  #L3a8fc4.  call temp:= `withFieldAdded`(v1, v0, v2) @signature `Lorg/joda/time/TimeOfDay;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/TimeOfDay;` @kind virtual;
  #L3a8fca.  v2:= temp @kind object;
  #L3a8fcc.  return v2 @kind object;
}
procedure `org.joda.time.TimeOfDay` `plusSeconds`(`org.joda.time.TimeOfDay` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/TimeOfDay;.plusSeconds:(I)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8fe0.  call temp:= `seconds`() @signature `Lorg/joda/time/DurationFieldType;.seconds:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a8fe6.  v0:= temp @kind object;
  #L3a8fe8.  call temp:= `withFieldAdded`(v1, v0, v2) @signature `Lorg/joda/time/TimeOfDay;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/TimeOfDay;` @kind virtual;
  #L3a8fee.  v2:= temp @kind object;
  #L3a8ff0.  return v2 @kind object;
}
procedure `org.joda.time.TimeOfDay$Property` `property`(`org.joda.time.TimeOfDay` v1 @kind this, `org.joda.time.DateTimeFieldType` v2 @kind object) @signature `Lorg/joda/time/TimeOfDay;.property:(Lorg/joda/time/DateTimeFieldType;)Lorg/joda/time/TimeOfDay$Property;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a92b4.  v0:= new `org.joda.time.TimeOfDay$Property`;
  #L3a92b8.  call temp:= `indexOfSupported`(v1, v2) @signature `Lorg/joda/time/base/AbstractPartial;.indexOfSupported:(Lorg/joda/time/DateTimeFieldType;)I` @kind virtual;
  #L3a92be.  v2:= temp;
  #L3a92c0.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/TimeOfDay$Property;.<init>:(Lorg/joda/time/TimeOfDay;I)V` @kind direct;
  #L3a92c6.  return v0 @kind object;
}
procedure `org.joda.time.TimeOfDay$Property` `secondOfMinute`(`org.joda.time.TimeOfDay` v2 @kind this) @signature `Lorg/joda/time/TimeOfDay;.secondOfMinute:()Lorg/joda/time/TimeOfDay$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a92d8.  v0:= new `org.joda.time.TimeOfDay$Property`;
  #L3a92dc.  v1:= 2I;
  #L3a92de.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/TimeOfDay$Property;.<init>:(Lorg/joda/time/TimeOfDay;I)V` @kind direct;
  #L3a92e4.  return v0 @kind object;
}
procedure `int` `size`(`org.joda.time.TimeOfDay` v1 @kind this) @signature `Lorg/joda/time/TimeOfDay;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8bf0.  v0:= 4I;
  #L3a8bf2.  return v0;
}
procedure `org.joda.time.DateTime` `toDateTimeToday`(`org.joda.time.TimeOfDay` v1 @kind this) @signature `Lorg/joda/time/TimeOfDay;.toDateTimeToday:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8c28.  v0:= 0I;
  #L3a8c2a.  call temp:= `toDateTimeToday`(v1, v0) @signature `Lorg/joda/time/TimeOfDay;.toDateTimeToday:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @kind virtual;
  #L3a8c30.  v0:= temp @kind object;
  #L3a8c32.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTimeToday`(`org.joda.time.TimeOfDay` v3 @kind this, `org.joda.time.DateTimeZone` v4 @kind object) @signature `Lorg/joda/time/TimeOfDay;.toDateTimeToday:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a8c44.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BasePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a8c4a.  v0:= temp @kind object;
  #L3a8c4c.  call temp:= `withZone`(v0, v4) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3a8c52.  v4:= temp @kind object;
  #L3a8c54.  call temp:= `currentTimeMillis`() @signature `Lorg/joda/time/DateTimeUtils;.currentTimeMillis:()J` @kind static;
  #L3a8c5a.  v0:= temp @kind wide;
  #L3a8c5c.  call temp:= `set`(v4, v3, v0) @signature `Lorg/joda/time/Chronology;.set:(Lorg/joda/time/ReadablePartial;J)J` @kind virtual;
  #L3a8c62.  v0:= temp @kind wide;
  #L3a8c64.  v2:= new `org.joda.time.DateTime`;
  #L3a8c68.  call `<init>`(v2, v0, v4) @signature `Lorg/joda/time/DateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3a8c6e.  return v2 @kind object;
}
procedure `org.joda.time.LocalTime` `toLocalTime`(`org.joda.time.TimeOfDay` v7 @kind this) @signature `Lorg/joda/time/TimeOfDay;.toLocalTime:()Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a8d3c.  v6:= new `org.joda.time.LocalTime`;
  #L3a8d40.  call temp:= `getHourOfDay`(v7) @signature `Lorg/joda/time/TimeOfDay;.getHourOfDay:()I` @kind virtual;
  #L3a8d46.  v1:= temp;
  #L3a8d48.  call temp:= `getMinuteOfHour`(v7) @signature `Lorg/joda/time/TimeOfDay;.getMinuteOfHour:()I` @kind virtual;
  #L3a8d4e.  v2:= temp;
  #L3a8d50.  call temp:= `getSecondOfMinute`(v7) @signature `Lorg/joda/time/TimeOfDay;.getSecondOfMinute:()I` @kind virtual;
  #L3a8d56.  v3:= temp;
  #L3a8d58.  call temp:= `getMillisOfSecond`(v7) @signature `Lorg/joda/time/TimeOfDay;.getMillisOfSecond:()I` @kind virtual;
  #L3a8d5e.  v4:= temp;
  #L3a8d60.  call temp:= `getChronology`(v7) @signature `Lorg/joda/time/base/BasePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a8d66.  v5:= temp @kind object;
  #L3a8d68.  v0:= v6 @kind object;
  #L3a8d6a.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/joda/time/LocalTime;.<init>:(IIIILorg/joda/time/Chronology;)V` @kind direct;
  #L3a8d70.  return v6 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.TimeOfDay` v1 @kind this) @signature `Lorg/joda/time/TimeOfDay;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a8c04.  call temp:= `tTime`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.tTime:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3a8c0a.  v0:= temp @kind object;
  #L3a8c0c.  call temp:= `print`(v0, v1) @signature `Lorg/joda/time/format/DateTimeFormatter;.print:(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;` @kind virtual;
  #L3a8c12.  v0:= temp @kind object;
  #L3a8c14.  return v0 @kind object;
}
procedure `org.joda.time.TimeOfDay` `withChronologyRetainFields`(`org.joda.time.TimeOfDay` v2 @kind this, `org.joda.time.Chronology` v3 @kind object) @signature `Lorg/joda/time/TimeOfDay;.withChronologyRetainFields:(Lorg/joda/time/Chronology;)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a9004.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L3a900a.  v3:= temp @kind object;
  #L3a900c.  call temp:= `withUTC`(v3) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a9012.  v3:= temp @kind object;
  #L3a9014.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BasePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a901a.  v0:= temp @kind object;
  #L3a901c.  if v3 != v0 then goto L3a9022;
  #L3a9020.  return v2 @kind object;
  #L3a9022.  v0:= new `org.joda.time.TimeOfDay`;
  #L3a9026.  call `<init>`(v0, v2, v3) @signature `Lorg/joda/time/TimeOfDay;.<init>:(Lorg/joda/time/TimeOfDay;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a902c.  call temp:= `getValues`(v2) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3a9032.  v1:= temp @kind object;
  #L3a9034.  call `validate`(v3, v0, v1) @signature `Lorg/joda/time/Chronology;.validate:(Lorg/joda/time/ReadablePartial;[I)V` @kind virtual;
  #L3a903a.  return v0 @kind object;
}
procedure `org.joda.time.TimeOfDay` `withField`(`org.joda.time.TimeOfDay` v2 @kind this, `org.joda.time.DateTimeFieldType` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/TimeOfDay;.withField:(Lorg/joda/time/DateTimeFieldType;I)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a904c.  call temp:= `indexOfSupported`(v2, v3) @signature `Lorg/joda/time/base/AbstractPartial;.indexOfSupported:(Lorg/joda/time/DateTimeFieldType;)I` @kind virtual;
  #L3a9052.  v3:= temp;
  #L3a9054.  call temp:= `getValue`(v2, v3) @signature `Lorg/joda/time/base/BasePartial;.getValue:(I)I` @kind virtual;
  #L3a905a.  v0:= temp;
  #L3a905c.  if v4 != v0 then goto L3a9062;
  #L3a9060.  return v2 @kind object;
  #L3a9062.  call temp:= `getValues`(v2) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3a9068.  v0:= temp @kind object;
  #L3a906a.  call temp:= `getField`(v2, v3) @signature `Lorg/joda/time/base/AbstractPartial;.getField:(I)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a9070.  v1:= temp @kind object;
  #L3a9072.  call temp:= `set`(v1, v2, v3, v0, v4) @signature `Lorg/joda/time/DateTimeField;.set:(Lorg/joda/time/ReadablePartial;I[II)[I` @kind virtual;
  #L3a9078.  v3:= temp @kind object;
  #L3a907a.  v4:= new `org.joda.time.TimeOfDay`;
  #L3a907e.  call `<init>`(v4, v2, v3) @signature `Lorg/joda/time/TimeOfDay;.<init>:(Lorg/joda/time/TimeOfDay;[I)V` @kind direct;
  #L3a9084.  return v4 @kind object;
}
procedure `org.joda.time.TimeOfDay` `withFieldAdded`(`org.joda.time.TimeOfDay` v2 @kind this, `org.joda.time.DurationFieldType` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/TimeOfDay;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a9098.  call temp:= `indexOfSupported`(v2, v3) @signature `Lorg/joda/time/base/AbstractPartial;.indexOfSupported:(Lorg/joda/time/DurationFieldType;)I` @kind virtual;
  #L3a909e.  v3:= temp;
  #L3a90a0.  if v4 != 0 then goto L3a90a6;
  #L3a90a4.  return v2 @kind object;
  #L3a90a6.  call temp:= `getValues`(v2) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3a90ac.  v0:= temp @kind object;
  #L3a90ae.  call temp:= `getField`(v2, v3) @signature `Lorg/joda/time/base/AbstractPartial;.getField:(I)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a90b4.  v1:= temp @kind object;
  #L3a90b6.  call temp:= `addWrapPartial`(v1, v2, v3, v0, v4) @signature `Lorg/joda/time/DateTimeField;.addWrapPartial:(Lorg/joda/time/ReadablePartial;I[II)[I` @kind virtual;
  #L3a90bc.  v3:= temp @kind object;
  #L3a90be.  v4:= new `org.joda.time.TimeOfDay`;
  #L3a90c2.  call `<init>`(v4, v2, v3) @signature `Lorg/joda/time/TimeOfDay;.<init>:(Lorg/joda/time/TimeOfDay;[I)V` @kind direct;
  #L3a90c8.  return v4 @kind object;
}
procedure `org.joda.time.TimeOfDay` `withHourOfDay`(`org.joda.time.TimeOfDay` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/TimeOfDay;.withHourOfDay:(I)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a90dc.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3a90e2.  v0:= temp @kind object;
  #L3a90e4.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BasePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a90ea.  v1:= temp @kind object;
  #L3a90ec.  call temp:= `hourOfDay`(v1) @signature `Lorg/joda/time/Chronology;.hourOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a90f2.  v1:= temp @kind object;
  #L3a90f4.  v2:= 0I;
  #L3a90f6.  call temp:= `set`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/DateTimeField;.set:(Lorg/joda/time/ReadablePartial;I[II)[I` @kind virtual;
  #L3a90fc.  v4:= temp @kind object;
  #L3a90fe.  v0:= new `org.joda.time.TimeOfDay`;
  #L3a9102.  call `<init>`(v0, v3, v4) @signature `Lorg/joda/time/TimeOfDay;.<init>:(Lorg/joda/time/TimeOfDay;[I)V` @kind direct;
  #L3a9108.  return v0 @kind object;
}
procedure `org.joda.time.TimeOfDay` `withMillisOfSecond`(`org.joda.time.TimeOfDay` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/TimeOfDay;.withMillisOfSecond:(I)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a911c.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3a9122.  v0:= temp @kind object;
  #L3a9124.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BasePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a912a.  v1:= temp @kind object;
  #L3a912c.  call temp:= `millisOfSecond`(v1) @signature `Lorg/joda/time/Chronology;.millisOfSecond:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a9132.  v1:= temp @kind object;
  #L3a9134.  v2:= 3I;
  #L3a9136.  call temp:= `set`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/DateTimeField;.set:(Lorg/joda/time/ReadablePartial;I[II)[I` @kind virtual;
  #L3a913c.  v4:= temp @kind object;
  #L3a913e.  v0:= new `org.joda.time.TimeOfDay`;
  #L3a9142.  call `<init>`(v0, v3, v4) @signature `Lorg/joda/time/TimeOfDay;.<init>:(Lorg/joda/time/TimeOfDay;[I)V` @kind direct;
  #L3a9148.  return v0 @kind object;
}
procedure `org.joda.time.TimeOfDay` `withMinuteOfHour`(`org.joda.time.TimeOfDay` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/TimeOfDay;.withMinuteOfHour:(I)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a915c.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3a9162.  v0:= temp @kind object;
  #L3a9164.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BasePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a916a.  v1:= temp @kind object;
  #L3a916c.  call temp:= `minuteOfHour`(v1) @signature `Lorg/joda/time/Chronology;.minuteOfHour:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a9172.  v1:= temp @kind object;
  #L3a9174.  v2:= 1I;
  #L3a9176.  call temp:= `set`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/DateTimeField;.set:(Lorg/joda/time/ReadablePartial;I[II)[I` @kind virtual;
  #L3a917c.  v4:= temp @kind object;
  #L3a917e.  v0:= new `org.joda.time.TimeOfDay`;
  #L3a9182.  call `<init>`(v0, v3, v4) @signature `Lorg/joda/time/TimeOfDay;.<init>:(Lorg/joda/time/TimeOfDay;[I)V` @kind direct;
  #L3a9188.  return v0 @kind object;
}
procedure `org.joda.time.TimeOfDay` `withPeriodAdded`(`org.joda.time.TimeOfDay` v5 @kind this, `org.joda.time.ReadablePeriod` v6 @kind object, `int` v7 ) @signature `Lorg/joda/time/TimeOfDay;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a919c.  if v6 == 0 then goto L3a9202;
  #L3a91a0.  if v7 != 0 then goto L3a91a6;
  #L3a91a4.  goto L3a9202;
  #L3a91a6.  call temp:= `getValues`(v5) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3a91ac.  v0:= temp @kind object;
  #L3a91ae.  v1:= 0I;
  #L3a91b0.  call temp:= `size`(v6) @signature `Lorg/joda/time/ReadablePeriod;.size:()I` @kind interface;
  #L3a91b6.  v2:= temp;
  #L3a91b8.  if v1 >= v2 then goto L3a91f6;
  #L3a91bc.  call temp:= `getFieldType`(v6, v1) @signature `Lorg/joda/time/ReadablePeriod;.getFieldType:(I)Lorg/joda/time/DurationFieldType;` @kind interface;
  #L3a91c2.  v2:= temp @kind object;
  #L3a91c4.  call temp:= `indexOf`(v5, v2) @signature `Lorg/joda/time/base/AbstractPartial;.indexOf:(Lorg/joda/time/DurationFieldType;)I` @kind virtual;
  #L3a91ca.  v2:= temp;
  #L3a91cc.  if v2 < 0 then goto L3a91f0;
  #L3a91d0.  call temp:= `getField`(v5, v2) @signature `Lorg/joda/time/base/AbstractPartial;.getField:(I)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a91d6.  v3:= temp @kind object;
  #L3a91d8.  call temp:= `getValue`(v6, v1) @signature `Lorg/joda/time/ReadablePeriod;.getValue:(I)I` @kind interface;
  #L3a91de.  v4:= temp;
  #L3a91e0.  call temp:= `safeMultiply`(v4, v7) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L3a91e6.  v4:= temp;
  #L3a91e8.  call temp:= `addWrapPartial`(v3, v5, v2, v0, v4) @signature `Lorg/joda/time/DateTimeField;.addWrapPartial:(Lorg/joda/time/ReadablePartial;I[II)[I` @kind virtual;
  #L3a91ee.  v0:= temp @kind object;
  #L3a91f0.  v1:= v1 + 1;
  #L3a91f4.  goto L3a91b0;
  #L3a91f6.  v6:= new `org.joda.time.TimeOfDay`;
  #L3a91fa.  call `<init>`(v6, v5, v0) @signature `Lorg/joda/time/TimeOfDay;.<init>:(Lorg/joda/time/TimeOfDay;[I)V` @kind direct;
  #L3a9200.  return v6 @kind object;
  #L3a9202.  return v5 @kind object;
}
procedure `org.joda.time.TimeOfDay` `withSecondOfMinute`(`org.joda.time.TimeOfDay` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/TimeOfDay;.withSecondOfMinute:(I)Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a9214.  call temp:= `getValues`(v3) @signature `Lorg/joda/time/base/BasePartial;.getValues:()[I` @kind virtual;
  #L3a921a.  v0:= temp @kind object;
  #L3a921c.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BasePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a9222.  v1:= temp @kind object;
  #L3a9224.  call temp:= `secondOfMinute`(v1) @signature `Lorg/joda/time/Chronology;.secondOfMinute:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a922a.  v1:= temp @kind object;
  #L3a922c.  v2:= 2I;
  #L3a922e.  call temp:= `set`(v1, v3, v2, v0, v4) @signature `Lorg/joda/time/DateTimeField;.set:(Lorg/joda/time/ReadablePartial;I[II)[I` @kind virtual;
  #L3a9234.  v4:= temp @kind object;
  #L3a9236.  v0:= new `org.joda.time.TimeOfDay`;
  #L3a923a.  call `<init>`(v0, v3, v4) @signature `Lorg/joda/time/TimeOfDay;.<init>:(Lorg/joda/time/TimeOfDay;[I)V` @kind direct;
  #L3a9240.  return v0 @kind object;
}
