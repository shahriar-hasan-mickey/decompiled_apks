record `org.joda.time.DateTimeUtils` @kind class @AccessFlag PUBLIC {
}
global `org.joda.time.DateTimeUtils$MillisProvider` `@@org.joda.time.DateTimeUtils.SYSTEM_MILLIS_PROVIDER` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.DateTimeUtils$MillisProvider` `@@org.joda.time.DateTimeUtils.cMillisProvider` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `java.util.concurrent.atomic.AtomicReference` `@@org.joda.time.DateTimeUtils.cZoneNames` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/DateTimeUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L397138.  v0:= new `org.joda.time.DateTimeUtils$SystemMillisProvider`;
  #L39713c.  call `<init>`(v0) @signature `Lorg/joda/time/DateTimeUtils$SystemMillisProvider;.<init>:()V` @kind direct;
  #L397142.  `@@org.joda.time.DateTimeUtils.SYSTEM_MILLIS_PROVIDER` @type ^`org.joda.time.DateTimeUtils$MillisProvider` := v0 @kind object;
  #L397146.  `@@org.joda.time.DateTimeUtils.cMillisProvider` @type ^`org.joda.time.DateTimeUtils$MillisProvider` := v0 @kind object;
  #L39714a.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L39714e.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L397154.  `@@org.joda.time.DateTimeUtils.cZoneNames` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L397158.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateTimeUtils` v0 @kind this) @signature `Lorg/joda/time/DateTimeUtils;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L39716c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L397172.  return @kind void;
}
procedure `java.util.Map` `buildDefaultTimeZoneNames`() @signature `Lorg/joda/time/DateTimeUtils;.buildDefaultTimeZoneNames:()Ljava/util/Map;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L396e44.  v0:= new `java.util.LinkedHashMap`;
  #L396e48.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L396e4e.  v1:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L396e52.  v2:= "UT" @kind object;
  #L396e56.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L396e5c.  v1:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L396e60.  v2:= "UTC" @kind object;
  #L396e64.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L396e6a.  v1:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L396e6e.  v2:= "GMT" @kind object;
  #L396e72.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L396e78.  v1:= "EST" @kind object;
  #L396e7c.  v2:= "America/New_York" @kind object;
  #L396e80.  call `put`(v0, v1, v2) @signature `Lorg/joda/time/DateTimeUtils;.put:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L396e86.  v1:= "EDT" @kind object;
  #L396e8a.  call `put`(v0, v1, v2) @signature `Lorg/joda/time/DateTimeUtils;.put:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L396e90.  v1:= "CST" @kind object;
  #L396e94.  v2:= "America/Chicago" @kind object;
  #L396e98.  call `put`(v0, v1, v2) @signature `Lorg/joda/time/DateTimeUtils;.put:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L396e9e.  v1:= "CDT" @kind object;
  #L396ea2.  call `put`(v0, v1, v2) @signature `Lorg/joda/time/DateTimeUtils;.put:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L396ea8.  v1:= "MST" @kind object;
  #L396eac.  v2:= "America/Denver" @kind object;
  #L396eb0.  call `put`(v0, v1, v2) @signature `Lorg/joda/time/DateTimeUtils;.put:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L396eb6.  v1:= "MDT" @kind object;
  #L396eba.  call `put`(v0, v1, v2) @signature `Lorg/joda/time/DateTimeUtils;.put:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L396ec0.  v1:= "PST" @kind object;
  #L396ec4.  v2:= "America/Los_Angeles" @kind object;
  #L396ec8.  call `put`(v0, v1, v2) @signature `Lorg/joda/time/DateTimeUtils;.put:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L396ece.  v1:= "PDT" @kind object;
  #L396ed2.  call `put`(v0, v1, v2) @signature `Lorg/joda/time/DateTimeUtils;.put:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L396ed8.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L396ede.  v0:= temp @kind object;
  #L396ee0.  return v0 @kind object;
}
procedure `void` `checkPermission`() @signature `Lorg/joda/time/DateTimeUtils;.checkPermission:()V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L397184.  call temp:= `getSecurityManager`() @signature `Ljava/lang/System;.getSecurityManager:()Ljava/lang/SecurityManager;` @kind static;
  #L39718a.  v0:= temp @kind object;
  #L39718c.  if v0 == 0 then goto L3971a4;
  #L397190.  v1:= new `org.joda.time.JodaTimePermission`;
  #L397194.  v2:= "CurrentTime.setProvider" @kind object;
  #L397198.  call `<init>`(v1, v2) @signature `Lorg/joda/time/JodaTimePermission;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39719e.  call `checkPermission`(v0, v1) @signature `Ljava/lang/SecurityManager;.checkPermission:(Ljava/security/Permission;)V` @kind virtual;
  #L3971a4.  return @kind void;
}
procedure `long` `currentTimeMillis`() @signature `Lorg/joda/time/DateTimeUtils;.currentTimeMillis:()J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L396f44.  v0:= `@@org.joda.time.DateTimeUtils.cMillisProvider` @type ^`org.joda.time.DateTimeUtils$MillisProvider` @kind object;
  #L396f48.  call temp:= `getMillis`(v0) @signature `Lorg/joda/time/DateTimeUtils$MillisProvider;.getMillis:()J` @kind interface;
  #L396f4e.  v0:= temp @kind wide;
  #L396f50.  return v0 @kind wide;
}
procedure `long` `fromJulianDay`(`double` v2 ) @signature `Lorg/joda/time/DateTimeUtils;.fromJulianDay:(D)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L396f64.  v0:= 2440587.5D;
  #L396f6e.  v2:= v2 - v0 @kind double;
  #L396f70.  v0:= 8.64E7D;
  #L396f7a.  v2:= v2 * v0 @kind double;
  #L396f7e.  v2:= (`long`) v2 @kind d2l;
  #L396f80.  return v2 @kind wide;
}
procedure `org.joda.time.Chronology` `getChronology`(`org.joda.time.Chronology` v0 @kind object) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L39700c.  if v0 != 0 then goto L397018;
  #L397010.  call temp:= `getInstance`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L397016.  v0:= temp @kind object;
  #L397018.  return v0 @kind object;
}
procedure `java.text.DateFormatSymbols` `getDateFormatSymbols`(`java.util.Locale` v6 @kind object) @signature `Lorg/joda/time/DateTimeUtils;.getDateFormatSymbols:(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L396de0.  v0:= constclass @type ^`java.text.DateFormatSymbols` @kind object;
  #L396de4.  v1:= "getInstance" @kind object;
  #L396de8.  v2:= 1I;
  #L396dea.  v3:= new `java.lang.Class`[v2];
  #L396dee.  v4:= constclass @type ^`java.util.Locale` @kind object;
  #L396df2.  v5:= 0I;
  #L396df4.  v3[v5]:= v4 @kind object;
  #L396df8.  call temp:= `getMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L396dfe.  v0:= temp @kind object;
  #L396e00.  v1:= 0I;
  #L396e02.  v2:= new `java.lang.Object`[v2];
  #L396e06.  v2[v5]:= v6 @kind object;
  #L396e0a.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L396e10.  v0:= temp @kind object;
  #L396e12.  v0:= (`java.text.DateFormatSymbols`) v0 @kind object;
  #L396e16.  return v0 @kind object;
  #L396e18.  v0:= new `java.text.DateFormatSymbols`;
  #L396e1c.  call `<init>`(v0, v6) @signature `Ljava/text/DateFormatSymbols;.<init>:(Ljava/util/Locale;)V` @kind direct;
  #L396e22.  return v0 @kind object;
  catch `java.lang.Exception` @[L396de0..L396e16] goto L396e18;
}
procedure `java.util.Map` `getDefaultTimeZoneNames`() @signature `Lorg/joda/time/DateTimeUtils;.getDefaultTimeZoneNames:()Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L396ef4.  v0:= `@@org.joda.time.DateTimeUtils.cZoneNames` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L396ef8.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L396efe.  v0:= temp @kind object;
  #L396f00.  v0:= (`java.util.Map`) v0 @kind object;
  #L396f04.  if v0 != 0 then goto L396f32;
  #L396f08.  call temp:= `buildDefaultTimeZoneNames`() @signature `Lorg/joda/time/DateTimeUtils;.buildDefaultTimeZoneNames:()Ljava/util/Map;` @kind static;
  #L396f0e.  v0:= temp @kind object;
  #L396f10.  v1:= `@@org.joda.time.DateTimeUtils.cZoneNames` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L396f14.  v2:= 0I;
  #L396f16.  call temp:= `compareAndSet`(v1, v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L396f1c.  v1:= temp;
  #L396f1e.  if v1 != 0 then goto L396f32;
  #L396f22.  v0:= `@@org.joda.time.DateTimeUtils.cZoneNames` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L396f26.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L396f2c.  v0:= temp @kind object;
  #L396f2e.  v0:= (`java.util.Map`) v0 @kind object;
  #L396f32.  return v0 @kind object;
}
procedure `long` `getDurationMillis`(`org.joda.time.ReadableDuration` v2 @kind object) @signature `Lorg/joda/time/DateTimeUtils;.getDurationMillis:(Lorg/joda/time/ReadableDuration;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L396f94.  if v2 != 0 then goto L396f9e;
  #L396f98.  v0:= 0L;
  #L396f9c.  return v0 @kind wide;
  #L396f9e.  call temp:= `getMillis`(v2) @signature `Lorg/joda/time/ReadableDuration;.getMillis:()J` @kind interface;
  #L396fa4.  v0:= temp @kind wide;
  #L396fa6.  return v0 @kind wide;
}
procedure `org.joda.time.Chronology` `getInstantChronology`(`org.joda.time.ReadableInstant` v0 @kind object) @signature `Lorg/joda/time/DateTimeUtils;.getInstantChronology:(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L39702c.  if v0 != 0 then goto L39703a;
  #L397030.  call temp:= `getInstance`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L397036.  v0:= temp @kind object;
  #L397038.  return v0 @kind object;
  #L39703a.  call temp:= `getChronology`(v0) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L397040.  v0:= temp @kind object;
  #L397042.  if v0 != 0 then goto L39704e;
  #L397046.  call temp:= `getInstance`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L39704c.  v0:= temp @kind object;
  #L39704e.  return v0 @kind object;
}
procedure `long` `getInstantMillis`(`org.joda.time.ReadableInstant` v2 @kind object) @signature `Lorg/joda/time/DateTimeUtils;.getInstantMillis:(Lorg/joda/time/ReadableInstant;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L396fb8.  if v2 != 0 then goto L396fc6;
  #L396fbc.  call temp:= `currentTimeMillis`() @signature `Lorg/joda/time/DateTimeUtils;.currentTimeMillis:()J` @kind static;
  #L396fc2.  v0:= temp @kind wide;
  #L396fc4.  return v0 @kind wide;
  #L396fc6.  call temp:= `getMillis`(v2) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L396fcc.  v0:= temp @kind wide;
  #L396fce.  return v0 @kind wide;
}
procedure `org.joda.time.Chronology` `getIntervalChronology`(`org.joda.time.ReadableInstant` v0 @kind object, `org.joda.time.ReadableInstant` v1 @kind object) @signature `Lorg/joda/time/DateTimeUtils;.getIntervalChronology:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L397060.  if v0 == 0 then goto L39706e;
  #L397064.  call temp:= `getChronology`(v0) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L39706a.  v0:= temp @kind object;
  #L39706c.  goto L39707e;
  #L39706e.  if v1 == 0 then goto L39707c;
  #L397072.  call temp:= `getChronology`(v1) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L397078.  v0:= temp @kind object;
  #L39707a.  goto L39707e;
  #L39707c.  v0:= 0I;
  #L39707e.  if v0 != 0 then goto L39708a;
  #L397082.  call temp:= `getInstance`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L397088.  v0:= temp @kind object;
  #L39708a.  return v0 @kind object;
}
procedure `org.joda.time.Chronology` `getIntervalChronology`(`org.joda.time.ReadableInterval` v0 @kind object) @signature `Lorg/joda/time/DateTimeUtils;.getIntervalChronology:(Lorg/joda/time/ReadableInterval;)Lorg/joda/time/Chronology;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L39709c.  if v0 != 0 then goto L3970aa;
  #L3970a0.  call temp:= `getInstance`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3970a6.  v0:= temp @kind object;
  #L3970a8.  return v0 @kind object;
  #L3970aa.  call temp:= `getChronology`(v0) @signature `Lorg/joda/time/ReadableInterval;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3970b0.  v0:= temp @kind object;
  #L3970b2.  if v0 != 0 then goto L3970be;
  #L3970b6.  call temp:= `getInstance`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3970bc.  v0:= temp @kind object;
  #L3970be.  return v0 @kind object;
}
procedure `org.joda.time.PeriodType` `getPeriodType`(`org.joda.time.PeriodType` v0 @kind object) @signature `Lorg/joda/time/DateTimeUtils;.getPeriodType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L3970f0.  if v0 != 0 then goto L3970fc;
  #L3970f4.  call temp:= `standard`() @signature `Lorg/joda/time/PeriodType;.standard:()Lorg/joda/time/PeriodType;` @kind static;
  #L3970fa.  v0:= temp @kind object;
  #L3970fc.  return v0 @kind object;
}
procedure `org.joda.time.ReadableInterval` `getReadableInterval`(`org.joda.time.ReadableInterval` v2 @kind object) @signature `Lorg/joda/time/DateTimeUtils;.getReadableInterval:(Lorg/joda/time/ReadableInterval;)Lorg/joda/time/ReadableInterval;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L397110.  if v2 != 0 then goto L397126;
  #L397114.  call temp:= `currentTimeMillis`() @signature `Lorg/joda/time/DateTimeUtils;.currentTimeMillis:()J` @kind static;
  #L39711a.  v0:= temp @kind wide;
  #L39711c.  v2:= new `org.joda.time.Interval`;
  #L397120.  call `<init>`(v2, v0, v0) @signature `Lorg/joda/time/Interval;.<init>:(JJ)V` @kind direct;
  #L397126.  return v2 @kind object;
}
procedure `org.joda.time.DateTimeZone` `getZone`(`org.joda.time.DateTimeZone` v0 @kind object) @signature `Lorg/joda/time/DateTimeUtils;.getZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTimeZone;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L3970d0.  if v0 != 0 then goto L3970dc;
  #L3970d4.  call temp:= `getDefault`() @signature `Lorg/joda/time/DateTimeZone;.getDefault:()Lorg/joda/time/DateTimeZone;` @kind static;
  #L3970da.  v0:= temp @kind object;
  #L3970dc.  return v0 @kind object;
}
procedure `boolean` `isContiguous`(`org.joda.time.ReadablePartial` v5 @kind object) @signature `Lorg/joda/time/DateTimeUtils;.isContiguous:(Lorg/joda/time/ReadablePartial;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L396d34.  if v5 == 0 then goto L396d92;
  #L396d38.  v0:= 0I;
  #L396d3a.  v1:= 0I;
  #L396d3c.  v2:= 0I;
  #L396d3e.  call temp:= `size`(v5) @signature `Lorg/joda/time/ReadablePartial;.size:()I` @kind interface;
  #L396d44.  v3:= temp;
  #L396d46.  if v2 >= v3 then goto L396d8e;
  #L396d4a.  call temp:= `getField`(v5, v2) @signature `Lorg/joda/time/ReadablePartial;.getField:(I)Lorg/joda/time/DateTimeField;` @kind interface;
  #L396d50.  v3:= temp @kind object;
  #L396d52.  if v2 <= 0 then goto L396d78;
  #L396d56.  call temp:= `getRangeDurationField`(v3) @signature `Lorg/joda/time/DateTimeField;.getRangeDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L396d5c.  v4:= temp @kind object;
  #L396d5e.  if v4 == 0 then goto L396d76;
  #L396d62.  call temp:= `getRangeDurationField`(v3) @signature `Lorg/joda/time/DateTimeField;.getRangeDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L396d68.  v4:= temp @kind object;
  #L396d6a.  call temp:= `getType`(v4) @signature `Lorg/joda/time/DurationField;.getType:()Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L396d70.  v4:= temp @kind object;
  #L396d72.  if v4 == v0 then goto L396d78;
  #L396d76.  return v1;
  #L396d78.  call temp:= `getDurationField`(v3) @signature `Lorg/joda/time/DateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L396d7e.  v0:= temp @kind object;
  #L396d80.  call temp:= `getType`(v0) @signature `Lorg/joda/time/DurationField;.getType:()Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L396d86.  v0:= temp @kind object;
  #L396d88.  v2:= v2 + 1;
  #L396d8c.  goto L396d3e;
  #L396d8e.  v5:= 1I;
  #L396d90.  return v5;
  #L396d92.  v5:= new `java.lang.IllegalArgumentException`;
  #L396d96.  v0:= "Partial must not be null" @kind object;
  #L396d9a.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L396da0.  throw v5;
}
procedure `void` `put`(`java.util.Map` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/joda/time/DateTimeUtils;.put:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3971b8.  call temp:= `forID`(v2) @signature `Lorg/joda/time/DateTimeZone;.forID:(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;` @kind static;
  #L3971be.  v2:= temp @kind object;
  #L3971c0.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3971c6.  return @kind void;
  catch `java.lang.RuntimeException` @[L3971b8..L3971c6] goto L3971c6;
}
procedure `void` `setCurrentMillisFixed`(`long` v1 ) @signature `Lorg/joda/time/DateTimeUtils;.setCurrentMillisFixed:(J)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L3971e8.  call `checkPermission`() @signature `Lorg/joda/time/DateTimeUtils;.checkPermission:()V` @kind static;
  #L3971ee.  v0:= new `org.joda.time.DateTimeUtils$FixedMillisProvider`;
  #L3971f2.  call `<init>`(v0, v1) @signature `Lorg/joda/time/DateTimeUtils$FixedMillisProvider;.<init>:(J)V` @kind direct;
  #L3971f8.  `@@org.joda.time.DateTimeUtils.cMillisProvider` @type ^`org.joda.time.DateTimeUtils$MillisProvider` := v0 @kind object;
  #L3971fc.  return @kind void;
}
procedure `void` `setCurrentMillisOffset`(`long` v3 ) @signature `Lorg/joda/time/DateTimeUtils;.setCurrentMillisOffset:(J)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L397210.  call `checkPermission`() @signature `Lorg/joda/time/DateTimeUtils;.checkPermission:()V` @kind static;
  #L397216.  v0:= 0L;
  #L39721a.  v2:= lcmp(v3, v0);
  #L39721e.  if v2 != 0 then goto L39722c;
  #L397222.  v3:= `@@org.joda.time.DateTimeUtils.SYSTEM_MILLIS_PROVIDER` @type ^`org.joda.time.DateTimeUtils$MillisProvider` @kind object;
  #L397226.  `@@org.joda.time.DateTimeUtils.cMillisProvider` @type ^`org.joda.time.DateTimeUtils$MillisProvider` := v3 @kind object;
  #L39722a.  goto L39723a;
  #L39722c.  v0:= new `org.joda.time.DateTimeUtils$OffsetMillisProvider`;
  #L397230.  call `<init>`(v0, v3) @signature `Lorg/joda/time/DateTimeUtils$OffsetMillisProvider;.<init>:(J)V` @kind direct;
  #L397236.  `@@org.joda.time.DateTimeUtils.cMillisProvider` @type ^`org.joda.time.DateTimeUtils$MillisProvider` := v0 @kind object;
  #L39723a.  return @kind void;
}
procedure `void` `setCurrentMillisProvider`(`org.joda.time.DateTimeUtils$MillisProvider` v1 @kind object) @signature `Lorg/joda/time/DateTimeUtils;.setCurrentMillisProvider:(Lorg/joda/time/DateTimeUtils$MillisProvider;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L39724c.  if v1 == 0 then goto L39725c;
  #L397250.  call `checkPermission`() @signature `Lorg/joda/time/DateTimeUtils;.checkPermission:()V` @kind static;
  #L397256.  `@@org.joda.time.DateTimeUtils.cMillisProvider` @type ^`org.joda.time.DateTimeUtils$MillisProvider` := v1 @kind object;
  #L39725a.  return @kind void;
  #L39725c.  v1:= new `java.lang.IllegalArgumentException`;
  #L397260.  v0:= "The MillisProvider must not be null" @kind object;
  #L397264.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39726a.  throw v1;
}
procedure `void` `setCurrentMillisSystem`() @signature `Lorg/joda/time/DateTimeUtils;.setCurrentMillisSystem:()V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L39727c.  call `checkPermission`() @signature `Lorg/joda/time/DateTimeUtils;.checkPermission:()V` @kind static;
  #L397282.  v0:= `@@org.joda.time.DateTimeUtils.SYSTEM_MILLIS_PROVIDER` @type ^`org.joda.time.DateTimeUtils$MillisProvider` @kind object;
  #L397286.  `@@org.joda.time.DateTimeUtils.cMillisProvider` @type ^`org.joda.time.DateTimeUtils$MillisProvider` := v0 @kind object;
  #L39728a.  return @kind void;
}
procedure `void` `setDefaultTimeZoneNames`(`java.util.Map` v2 @kind object) @signature `Lorg/joda/time/DateTimeUtils;.setDefaultTimeZoneNames:(Ljava/util/Map;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L39729c.  v0:= `@@org.joda.time.DateTimeUtils.cZoneNames` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L3972a0.  v1:= new `java.util.HashMap`;
  #L3972a4.  call `<init>`(v1, v2) @signature `Ljava/util/HashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L3972aa.  call temp:= `unmodifiableMap`(v1) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L3972b0.  v2:= temp @kind object;
  #L3972b2.  call `set`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L3972b8.  return @kind void;
}
procedure `double` `toJulianDay`(`long` v2 ) @signature `Lorg/joda/time/DateTimeUtils;.toJulianDay:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L396db4.  v2:= (`double`) v2 @kind l2d;
  #L396db6.  v0:= 8.64E7D;
  #L396dc0.  v2:= v2 / v0 @kind double;
  #L396dc2.  v0:= 2440587.5D;
  #L396dcc.  v2:= v2 + v0 @kind double;
  #L396dce.  return v2 @kind wide;
}
procedure `long` `toJulianDayNumber`(`long` v2 ) @signature `Lorg/joda/time/DateTimeUtils;.toJulianDayNumber:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L396fe0.  call temp:= `toJulianDay`(v2) @signature `Lorg/joda/time/DateTimeUtils;.toJulianDay:(J)D` @kind static;
  #L396fe6.  v2:= temp @kind wide;
  #L396fe8.  v0:= 0.5D;
  #L396fec.  v2:= v2 + v0 @kind double;
  #L396fee.  call temp:= `floor`(v2) @signature `Ljava/lang/Math;.floor:(D)D` @kind static;
  #L396ff4.  v2:= temp @kind wide;
  #L396ff6.  v2:= (`long`) v2 @kind d2l;
  #L396ff8.  return v2 @kind wide;
}
