record `org.joda.time.Minutes` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.base.BaseSingleFieldPeriod` @kind class {
}
global `org.joda.time.Minutes` `@@org.joda.time.Minutes.MAX_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Minutes` `@@org.joda.time.Minutes.MIN_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Minutes` `@@org.joda.time.Minutes.ONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.format.PeriodFormatter` `@@org.joda.time.Minutes.PARSER` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.joda.time.Minutes` `@@org.joda.time.Minutes.THREE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Minutes` `@@org.joda.time.Minutes.TWO` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Minutes` `@@org.joda.time.Minutes.ZERO` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@org.joda.time.Minutes.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/Minutes;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a1784.  v0:= new `org.joda.time.Minutes`;
  #L3a1788.  v1:= 0I;
  #L3a178a.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Minutes;.<init>:(I)V` @kind direct;
  #L3a1790.  `@@org.joda.time.Minutes.ZERO` @type ^`org.joda.time.Minutes` := v0 @kind object;
  #L3a1794.  v0:= new `org.joda.time.Minutes`;
  #L3a1798.  v1:= 1I;
  #L3a179a.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Minutes;.<init>:(I)V` @kind direct;
  #L3a17a0.  `@@org.joda.time.Minutes.ONE` @type ^`org.joda.time.Minutes` := v0 @kind object;
  #L3a17a4.  v0:= new `org.joda.time.Minutes`;
  #L3a17a8.  v1:= 2I;
  #L3a17aa.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Minutes;.<init>:(I)V` @kind direct;
  #L3a17b0.  `@@org.joda.time.Minutes.TWO` @type ^`org.joda.time.Minutes` := v0 @kind object;
  #L3a17b4.  v0:= new `org.joda.time.Minutes`;
  #L3a17b8.  v1:= 3I;
  #L3a17ba.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Minutes;.<init>:(I)V` @kind direct;
  #L3a17c0.  `@@org.joda.time.Minutes.THREE` @type ^`org.joda.time.Minutes` := v0 @kind object;
  #L3a17c4.  v0:= new `org.joda.time.Minutes`;
  #L3a17c8.  v1:= 2147483647I;
  #L3a17ce.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Minutes;.<init>:(I)V` @kind direct;
  #L3a17d4.  `@@org.joda.time.Minutes.MAX_VALUE` @type ^`org.joda.time.Minutes` := v0 @kind object;
  #L3a17d8.  v0:= new `org.joda.time.Minutes`;
  #L3a17dc.  v1:= -2147483648I;
  #L3a17e0.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Minutes;.<init>:(I)V` @kind direct;
  #L3a17e6.  `@@org.joda.time.Minutes.MIN_VALUE` @type ^`org.joda.time.Minutes` := v0 @kind object;
  #L3a17ea.  call temp:= `standard`() @signature `Lorg/joda/time/format/ISOPeriodFormat;.standard:()Lorg/joda/time/format/PeriodFormatter;` @kind static;
  #L3a17f0.  v0:= temp @kind object;
  #L3a17f2.  call temp:= `minutes`() @signature `Lorg/joda/time/PeriodType;.minutes:()Lorg/joda/time/PeriodType;` @kind static;
  #L3a17f8.  v1:= temp @kind object;
  #L3a17fa.  call temp:= `withParseType`(v0, v1) @signature `Lorg/joda/time/format/PeriodFormatter;.withParseType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/format/PeriodFormatter;` @kind virtual;
  #L3a1800.  v0:= temp @kind object;
  #L3a1802.  `@@org.joda.time.Minutes.PARSER` @type ^`org.joda.time.format.PeriodFormatter` := v0 @kind object;
  #L3a1806.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Minutes` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/Minutes;.<init>:(I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3a1818.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.<init>:(I)V` @kind direct;
  #L3a181e.  return @kind void;
}
procedure `org.joda.time.Minutes` `minutes`(`int` v1 ) @signature `Lorg/joda/time/Minutes;.minutes:(I)Lorg/joda/time/Minutes;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a14b0.  v0:= -2147483648I;
  #L3a14b4.  if v1 == v0 then goto L3a1502;
  #L3a14b8.  v0:= 2147483647I;
  #L3a14be.  if v1 == v0 then goto L3a14fc;
  #L3a14c2.  if v1 == 0 then goto L3a14f6;
  #L3a14c6.  v0:= 1I;
  #L3a14c8.  if v1 == v0 then goto L3a14f0;
  #L3a14cc.  v0:= 2I;
  #L3a14ce.  if v1 == v0 then goto L3a14ea;
  #L3a14d2.  v0:= 3I;
  #L3a14d4.  if v1 == v0 then goto L3a14e4;
  #L3a14d8.  v0:= new `org.joda.time.Minutes`;
  #L3a14dc.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Minutes;.<init>:(I)V` @kind direct;
  #L3a14e2.  return v0 @kind object;
  #L3a14e4.  v1:= `@@org.joda.time.Minutes.THREE` @type ^`org.joda.time.Minutes` @kind object;
  #L3a14e8.  return v1 @kind object;
  #L3a14ea.  v1:= `@@org.joda.time.Minutes.TWO` @type ^`org.joda.time.Minutes` @kind object;
  #L3a14ee.  return v1 @kind object;
  #L3a14f0.  v1:= `@@org.joda.time.Minutes.ONE` @type ^`org.joda.time.Minutes` @kind object;
  #L3a14f4.  return v1 @kind object;
  #L3a14f6.  v1:= `@@org.joda.time.Minutes.ZERO` @type ^`org.joda.time.Minutes` @kind object;
  #L3a14fa.  return v1 @kind object;
  #L3a14fc.  v1:= `@@org.joda.time.Minutes.MAX_VALUE` @type ^`org.joda.time.Minutes` @kind object;
  #L3a1500.  return v1 @kind object;
  #L3a1502.  v1:= `@@org.joda.time.Minutes.MIN_VALUE` @type ^`org.joda.time.Minutes` @kind object;
  #L3a1506.  return v1 @kind object;
}
procedure `org.joda.time.Minutes` `minutesBetween`(`org.joda.time.ReadableInstant` v1 @kind object, `org.joda.time.ReadableInstant` v2 @kind object) @signature `Lorg/joda/time/Minutes;.minutesBetween:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Minutes;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a1518.  call temp:= `minutes`() @signature `Lorg/joda/time/DurationFieldType;.minutes:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a151e.  v0:= temp @kind object;
  #L3a1520.  call temp:= `between`(v1, v2, v0) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.between:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;Lorg/joda/time/DurationFieldType;)I` @kind static;
  #L3a1526.  v1:= temp;
  #L3a1528.  call temp:= `minutes`(v1) @signature `Lorg/joda/time/Minutes;.minutes:(I)Lorg/joda/time/Minutes;` @kind static;
  #L3a152e.  v1:= temp @kind object;
  #L3a1530.  return v1 @kind object;
}
procedure `org.joda.time.Minutes` `minutesBetween`(`org.joda.time.ReadablePartial` v3 @kind object, `org.joda.time.ReadablePartial` v4 @kind object) @signature `Lorg/joda/time/Minutes;.minutesBetween:(Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePartial;)Lorg/joda/time/Minutes;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3a1544.  v0:= instanceof @variable v3 @type ^`org.joda.time.LocalTime` @kind boolean;
  #L3a1548.  if v0 == 0 then goto L3a1596;
  #L3a154c.  v0:= instanceof @variable v4 @type ^`org.joda.time.LocalTime` @kind boolean;
  #L3a1550.  if v0 == 0 then goto L3a1596;
  #L3a1554.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadablePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3a155a.  v0:= temp @kind object;
  #L3a155c.  call temp:= `getChronology`(v0) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L3a1562.  v0:= temp @kind object;
  #L3a1564.  call temp:= `minutes`(v0) @signature `Lorg/joda/time/Chronology;.minutes:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3a156a.  v0:= temp @kind object;
  #L3a156c.  v4:= (`org.joda.time.LocalTime`) v4 @kind object;
  #L3a1570.  call temp:= `getLocalMillis`(v4) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a1576.  v1:= temp @kind wide;
  #L3a1578.  v3:= (`org.joda.time.LocalTime`) v3 @kind object;
  #L3a157c.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a1582.  v3:= temp @kind wide;
  #L3a1584.  call temp:= `getDifference`(v0, v1, v3) @signature `Lorg/joda/time/DurationField;.getDifference:(JJ)I` @kind virtual;
  #L3a158a.  v3:= temp;
  #L3a158c.  call temp:= `minutes`(v3) @signature `Lorg/joda/time/Minutes;.minutes:(I)Lorg/joda/time/Minutes;` @kind static;
  #L3a1592.  v3:= temp @kind object;
  #L3a1594.  return v3 @kind object;
  #L3a1596.  v0:= `@@org.joda.time.Minutes.ZERO` @type ^`org.joda.time.Minutes` @kind object;
  #L3a159a.  call temp:= `between`(v3, v4, v0) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.between:(Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePeriod;)I` @kind static;
  #L3a15a0.  v3:= temp;
  #L3a15a2.  call temp:= `minutes`(v3) @signature `Lorg/joda/time/Minutes;.minutes:(I)Lorg/joda/time/Minutes;` @kind static;
  #L3a15a8.  v3:= temp @kind object;
  #L3a15aa.  return v3 @kind object;
}
procedure `org.joda.time.Minutes` `minutesIn`(`org.joda.time.ReadableInterval` v2 @kind object) @signature `Lorg/joda/time/Minutes;.minutesIn:(Lorg/joda/time/ReadableInterval;)Lorg/joda/time/Minutes;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a15bc.  if v2 != 0 then goto L3a15c6;
  #L3a15c0.  v2:= `@@org.joda.time.Minutes.ZERO` @type ^`org.joda.time.Minutes` @kind object;
  #L3a15c4.  return v2 @kind object;
  #L3a15c6.  call temp:= `getStart`(v2) @signature `Lorg/joda/time/ReadableInterval;.getStart:()Lorg/joda/time/DateTime;` @kind interface;
  #L3a15cc.  v0:= temp @kind object;
  #L3a15ce.  call temp:= `getEnd`(v2) @signature `Lorg/joda/time/ReadableInterval;.getEnd:()Lorg/joda/time/DateTime;` @kind interface;
  #L3a15d4.  v2:= temp @kind object;
  #L3a15d6.  call temp:= `minutes`() @signature `Lorg/joda/time/DurationFieldType;.minutes:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a15dc.  v1:= temp @kind object;
  #L3a15de.  call temp:= `between`(v0, v2, v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.between:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;Lorg/joda/time/DurationFieldType;)I` @kind static;
  #L3a15e4.  v2:= temp;
  #L3a15e6.  call temp:= `minutes`(v2) @signature `Lorg/joda/time/Minutes;.minutes:(I)Lorg/joda/time/Minutes;` @kind static;
  #L3a15ec.  v2:= temp @kind object;
  #L3a15ee.  return v2 @kind object;
}
procedure `org.joda.time.Minutes` `parseMinutes`(`java.lang.String` v1 @kind object) @signature `Lorg/joda/time/Minutes;.parseMinutes:(Ljava/lang/String;)Lorg/joda/time/Minutes;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a1658.  if v1 != 0 then goto L3a1662;
  #L3a165c.  v1:= `@@org.joda.time.Minutes.ZERO` @type ^`org.joda.time.Minutes` @kind object;
  #L3a1660.  return v1 @kind object;
  #L3a1662.  v0:= `@@org.joda.time.Minutes.PARSER` @type ^`org.joda.time.format.PeriodFormatter` @kind object;
  #L3a1666.  call temp:= `parsePeriod`(v0, v1) @signature `Lorg/joda/time/format/PeriodFormatter;.parsePeriod:(Ljava/lang/String;)Lorg/joda/time/Period;` @kind virtual;
  #L3a166c.  v1:= temp @kind object;
  #L3a166e.  call temp:= `getMinutes`(v1) @signature `Lorg/joda/time/Period;.getMinutes:()I` @kind virtual;
  #L3a1674.  v1:= temp;
  #L3a1676.  call temp:= `minutes`(v1) @signature `Lorg/joda/time/Minutes;.minutes:(I)Lorg/joda/time/Minutes;` @kind static;
  #L3a167c.  v1:= temp @kind object;
  #L3a167e.  return v1 @kind object;
}
procedure `java.lang.Object` `readResolve`(`org.joda.time.Minutes` v1 @kind this) @signature `Lorg/joda/time/Minutes;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3a1328.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a132e.  v0:= temp;
  #L3a1330.  call temp:= `minutes`(v0) @signature `Lorg/joda/time/Minutes;.minutes:(I)Lorg/joda/time/Minutes;` @kind static;
  #L3a1336.  v0:= temp @kind object;
  #L3a1338.  return v0 @kind object;
}
procedure `org.joda.time.Minutes` `standardMinutesIn`(`org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/Minutes;.standardMinutesIn:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/Minutes;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a16e8.  v0:= 60000L;
  #L3a16ee.  call temp:= `standardPeriodIn`(v2, v0) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.standardPeriodIn:(Lorg/joda/time/ReadablePeriod;J)I` @kind static;
  #L3a16f4.  v2:= temp;
  #L3a16f6.  call temp:= `minutes`(v2) @signature `Lorg/joda/time/Minutes;.minutes:(I)Lorg/joda/time/Minutes;` @kind static;
  #L3a16fc.  v2:= temp @kind object;
  #L3a16fe.  return v2 @kind object;
}
procedure `org.joda.time.Minutes` `dividedBy`(`org.joda.time.Minutes` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/Minutes;.dividedBy:(I)Lorg/joda/time/Minutes;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a1438.  v0:= 1I;
  #L3a143a.  if v2 != v0 then goto L3a1440;
  #L3a143e.  return v1 @kind object;
  #L3a1440.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a1446.  v0:= temp;
  #L3a1448.  v0:= v0 / v2 @kind int;
  #L3a144a.  call temp:= `minutes`(v0) @signature `Lorg/joda/time/Minutes;.minutes:(I)Lorg/joda/time/Minutes;` @kind static;
  #L3a1450.  v2:= temp @kind object;
  #L3a1452.  return v2 @kind object;
}
procedure `org.joda.time.DurationFieldType` `getFieldType`(`org.joda.time.Minutes` v1 @kind this) @signature `Lorg/joda/time/Minutes;.getFieldType:()Lorg/joda/time/DurationFieldType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a13f4.  call temp:= `minutes`() @signature `Lorg/joda/time/DurationFieldType;.minutes:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a13fa.  v0:= temp @kind object;
  #L3a13fc.  return v0 @kind object;
}
procedure `int` `getMinutes`(`org.joda.time.Minutes` v1 @kind this) @signature `Lorg/joda/time/Minutes;.getMinutes:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a130c.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a1312.  v0:= temp;
  #L3a1314.  return v0;
}
procedure `org.joda.time.PeriodType` `getPeriodType`(`org.joda.time.Minutes` v1 @kind this) @signature `Lorg/joda/time/Minutes;.getPeriodType:()Lorg/joda/time/PeriodType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a1710.  call temp:= `minutes`() @signature `Lorg/joda/time/PeriodType;.minutes:()Lorg/joda/time/PeriodType;` @kind static;
  #L3a1716.  v0:= temp @kind object;
  #L3a1718.  return v0 @kind object;
}
procedure `boolean` `isGreaterThan`(`org.joda.time.Minutes` v3 @kind this, `org.joda.time.Minutes` v4 @kind object) @signature `Lorg/joda/time/Minutes;.isGreaterThan:(Lorg/joda/time/Minutes;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a1284.  v0:= 1I;
  #L3a1286.  v1:= 0I;
  #L3a1288.  if v4 != 0 then goto L3a129e;
  #L3a128c.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a1292.  v4:= temp;
  #L3a1294.  if v4 <= 0 then goto L3a129a;
  #L3a1298.  goto L3a129c;
  #L3a129a.  v0:= 0I;
  #L3a129c.  return v0;
  #L3a129e.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a12a4.  v2:= temp;
  #L3a12a6.  call temp:= `getValue`(v4) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a12ac.  v4:= temp;
  #L3a12ae.  if v2 <= v4 then goto L3a12b4;
  #L3a12b2.  goto L3a12b6;
  #L3a12b4.  v0:= 0I;
  #L3a12b6.  return v0;
}
procedure `boolean` `isLessThan`(`org.joda.time.Minutes` v3 @kind this, `org.joda.time.Minutes` v4 @kind object) @signature `Lorg/joda/time/Minutes;.isLessThan:(Lorg/joda/time/Minutes;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a12c8.  v0:= 1I;
  #L3a12ca.  v1:= 0I;
  #L3a12cc.  if v4 != 0 then goto L3a12e2;
  #L3a12d0.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a12d6.  v4:= temp;
  #L3a12d8.  if v4 >= 0 then goto L3a12de;
  #L3a12dc.  goto L3a12e0;
  #L3a12de.  v0:= 0I;
  #L3a12e0.  return v0;
  #L3a12e2.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a12e8.  v2:= temp;
  #L3a12ea.  call temp:= `getValue`(v4) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a12f0.  v4:= temp;
  #L3a12f2.  if v2 >= v4 then goto L3a12f8;
  #L3a12f6.  goto L3a12fa;
  #L3a12f8.  v0:= 0I;
  #L3a12fa.  return v0;
}
procedure `org.joda.time.Minutes` `minus`(`org.joda.time.Minutes` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/Minutes;.minus:(I)Lorg/joda/time/Minutes;` @AccessFlag PUBLIC {
    temp;

  #L3a1464.  call temp:= `safeNegate`(v1) @signature `Lorg/joda/time/field/FieldUtils;.safeNegate:(I)I` @kind static;
  #L3a146a.  v1:= temp;
  #L3a146c.  call temp:= `plus`(v0, v1) @signature `Lorg/joda/time/Minutes;.plus:(I)Lorg/joda/time/Minutes;` @kind virtual;
  #L3a1472.  v1:= temp @kind object;
  #L3a1474.  return v1 @kind object;
}
procedure `org.joda.time.Minutes` `minus`(`org.joda.time.Minutes` v0 @kind this, `org.joda.time.Minutes` v1 @kind object) @signature `Lorg/joda/time/Minutes;.minus:(Lorg/joda/time/Minutes;)Lorg/joda/time/Minutes;` @AccessFlag PUBLIC {
    temp;

  #L3a1488.  if v1 != 0 then goto L3a148e;
  #L3a148c.  return v0 @kind object;
  #L3a148e.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a1494.  v1:= temp;
  #L3a1496.  call temp:= `minus`(v0, v1) @signature `Lorg/joda/time/Minutes;.minus:(I)Lorg/joda/time/Minutes;` @kind virtual;
  #L3a149c.  v1:= temp @kind object;
  #L3a149e.  return v1 @kind object;
}
procedure `org.joda.time.Minutes` `multipliedBy`(`org.joda.time.Minutes` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/Minutes;.multipliedBy:(I)Lorg/joda/time/Minutes;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a1600.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a1606.  v0:= temp;
  #L3a1608.  call temp:= `safeMultiply`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L3a160e.  v2:= temp;
  #L3a1610.  call temp:= `minutes`(v2) @signature `Lorg/joda/time/Minutes;.minutes:(I)Lorg/joda/time/Minutes;` @kind static;
  #L3a1616.  v2:= temp @kind object;
  #L3a1618.  return v2 @kind object;
}
procedure `org.joda.time.Minutes` `negated`(`org.joda.time.Minutes` v1 @kind this) @signature `Lorg/joda/time/Minutes;.negated:()Lorg/joda/time/Minutes;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a162c.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a1632.  v0:= temp;
  #L3a1634.  call temp:= `safeNegate`(v0) @signature `Lorg/joda/time/field/FieldUtils;.safeNegate:(I)I` @kind static;
  #L3a163a.  v0:= temp;
  #L3a163c.  call temp:= `minutes`(v0) @signature `Lorg/joda/time/Minutes;.minutes:(I)Lorg/joda/time/Minutes;` @kind static;
  #L3a1642.  v0:= temp @kind object;
  #L3a1644.  return v0 @kind object;
}
procedure `org.joda.time.Minutes` `plus`(`org.joda.time.Minutes` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/Minutes;.plus:(I)Lorg/joda/time/Minutes;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a1690.  if v2 != 0 then goto L3a1696;
  #L3a1694.  return v1 @kind object;
  #L3a1696.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a169c.  v0:= temp;
  #L3a169e.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(II)I` @kind static;
  #L3a16a4.  v2:= temp;
  #L3a16a6.  call temp:= `minutes`(v2) @signature `Lorg/joda/time/Minutes;.minutes:(I)Lorg/joda/time/Minutes;` @kind static;
  #L3a16ac.  v2:= temp @kind object;
  #L3a16ae.  return v2 @kind object;
}
procedure `org.joda.time.Minutes` `plus`(`org.joda.time.Minutes` v0 @kind this, `org.joda.time.Minutes` v1 @kind object) @signature `Lorg/joda/time/Minutes;.plus:(Lorg/joda/time/Minutes;)Lorg/joda/time/Minutes;` @AccessFlag PUBLIC {
    temp;

  #L3a16c0.  if v1 != 0 then goto L3a16c6;
  #L3a16c4.  return v0 @kind object;
  #L3a16c6.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a16cc.  v1:= temp;
  #L3a16ce.  call temp:= `plus`(v0, v1) @signature `Lorg/joda/time/Minutes;.plus:(I)Lorg/joda/time/Minutes;` @kind virtual;
  #L3a16d4.  v1:= temp @kind object;
  #L3a16d6.  return v1 @kind object;
}
procedure `org.joda.time.Days` `toStandardDays`(`org.joda.time.Minutes` v1 @kind this) @signature `Lorg/joda/time/Minutes;.toStandardDays:()Lorg/joda/time/Days;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a139c.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a13a2.  v0:= temp;
  #L3a13a4.  v0:= v0 / 1440;
  #L3a13a8.  call temp:= `days`(v0) @signature `Lorg/joda/time/Days;.days:(I)Lorg/joda/time/Days;` @kind static;
  #L3a13ae.  v0:= temp @kind object;
  #L3a13b0.  return v0 @kind object;
}
procedure `org.joda.time.Duration` `toStandardDuration`(`org.joda.time.Minutes` v5 @kind this) @signature `Lorg/joda/time/Minutes;.toStandardDuration:()Lorg/joda/time/Duration;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a13c4.  call temp:= `getValue`(v5) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a13ca.  v0:= temp;
  #L3a13cc.  v0:= (`long`) v0 @kind i2l;
  #L3a13ce.  v2:= new `org.joda.time.Duration`;
  #L3a13d2.  v3:= 60000L;
  #L3a13d8.  v0:= v0 * v3 @kind long;
  #L3a13dc.  call `<init>`(v2, v0) @signature `Lorg/joda/time/Duration;.<init>:(J)V` @kind direct;
  #L3a13e2.  return v2 @kind object;
}
procedure `org.joda.time.Hours` `toStandardHours`(`org.joda.time.Minutes` v1 @kind this) @signature `Lorg/joda/time/Minutes;.toStandardHours:()Lorg/joda/time/Hours;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a1410.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a1416.  v0:= temp;
  #L3a1418.  v0:= v0 / 60;
  #L3a141c.  call temp:= `hours`(v0) @signature `Lorg/joda/time/Hours;.hours:(I)Lorg/joda/time/Hours;` @kind static;
  #L3a1422.  v0:= temp @kind object;
  #L3a1424.  return v0 @kind object;
}
procedure `org.joda.time.Seconds` `toStandardSeconds`(`org.joda.time.Minutes` v2 @kind this) @signature `Lorg/joda/time/Minutes;.toStandardSeconds:()Lorg/joda/time/Seconds;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a172c.  call temp:= `getValue`(v2) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a1732.  v0:= temp;
  #L3a1734.  v1:= 60I;
  #L3a1738.  call temp:= `safeMultiply`(v0, v1) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L3a173e.  v0:= temp;
  #L3a1740.  call temp:= `seconds`(v0) @signature `Lorg/joda/time/Seconds;.seconds:(I)Lorg/joda/time/Seconds;` @kind static;
  #L3a1746.  v0:= temp @kind object;
  #L3a1748.  return v0 @kind object;
}
procedure `org.joda.time.Weeks` `toStandardWeeks`(`org.joda.time.Minutes` v1 @kind this) @signature `Lorg/joda/time/Minutes;.toStandardWeeks:()Lorg/joda/time/Weeks;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a175c.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a1762.  v0:= temp;
  #L3a1764.  v0:= v0 / 10080;
  #L3a1768.  call temp:= `weeks`(v0) @signature `Lorg/joda/time/Weeks;.weeks:(I)Lorg/joda/time/Weeks;` @kind static;
  #L3a176e.  v0:= temp @kind object;
  #L3a1770.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.Minutes` v2 @kind this) @signature `Lorg/joda/time/Minutes;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a134c.  v0:= new `java.lang.StringBuilder`;
  #L3a1350.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a1356.  v1:= "PT" @kind object;
  #L3a135a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a1360.  call temp:= `getValue`(v2) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a1366.  v1:= temp;
  #L3a1368.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L3a136e.  v1:= temp @kind object;
  #L3a1370.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a1376.  v1:= "M" @kind object;
  #L3a137a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a1380.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a1386.  v0:= temp @kind object;
  #L3a1388.  return v0 @kind object;
}
