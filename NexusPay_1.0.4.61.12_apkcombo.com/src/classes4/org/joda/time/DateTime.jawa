record `org.joda.time.DateTime` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.base.BaseDateTime` @kind class, `org.joda.time.ReadableDateTime` @kind interface, `java.io.Serializable` @kind interface {
}
global `long` `@@org.joda.time.DateTime.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.DateTime` v0 @kind this) @signature `Lorg/joda/time/DateTime;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L399774.  call `<init>`(v0) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:()V` @kind direct;
  #L39977a.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateTime` v8 @kind this, `int` v9 , `int` v10 , `int` v11 , `int` v12 , `int` v13 ) @signature `Lorg/joda/time/DateTime;.<init>:(IIIII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L39978c.  v6:= 0I;
  #L39978e.  v7:= 0I;
  #L399790.  v0:= v8 @kind object;
  #L399792.  v1:= v9;
  #L399794.  v2:= v10;
  #L399796.  v3:= v11;
  #L399798.  v4:= v12;
  #L39979a.  v5:= v13;
  #L39979c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(IIIIIII)V` @kind direct;
  #L3997a2.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateTime` v8 @kind this, `int` v9 , `int` v10 , `int` v11 , `int` v12 , `int` v13 , `int` v14 ) @signature `Lorg/joda/time/DateTime;.<init>:(IIIIII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3997b4.  v7:= 0I;
  #L3997b6.  v0:= v8 @kind object;
  #L3997b8.  v1:= v9;
  #L3997ba.  v2:= v10;
  #L3997bc.  v3:= v11;
  #L3997be.  v4:= v12;
  #L3997c0.  v5:= v13;
  #L3997c2.  v6:= v14;
  #L3997c4.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(IIIIIII)V` @kind direct;
  #L3997ca.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateTime` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lorg/joda/time/DateTime;.<init>:(IIIIIII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3997dc.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(IIIIIII)V` @kind direct;
  #L3997e2.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateTime` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 , `int` v6 , `int` v7 , `org.joda.time.Chronology` v8 @kind object) @signature `Lorg/joda/time/DateTime;.<init>:(IIIIIIILorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3997f4.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(IIIIIIILorg/joda/time/Chronology;)V` @kind direct;
  #L3997fa.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateTime` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 , `int` v6 , `int` v7 , `org.joda.time.DateTimeZone` v8 @kind object) @signature `Lorg/joda/time/DateTime;.<init>:(IIIIIIILorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39980c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(IIIIIIILorg/joda/time/DateTimeZone;)V` @kind direct;
  #L399812.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateTime` v9 @kind this, `int` v10 , `int` v11 , `int` v12 , `int` v13 , `int` v14 , `int` v15 , `org.joda.time.Chronology` v16 @kind object) @signature `Lorg/joda/time/DateTime;.<init>:(IIIIIILorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L399824.  v7:= 0I;
  #L399826.  v0:= v9 @kind object;
  #L399828.  v1:= v10;
  #L39982a.  v2:= v11;
  #L39982c.  v3:= v12;
  #L39982e.  v4:= v13;
  #L399830.  v5:= v14;
  #L399832.  v6:= v15;
  #L399834.  v8:= v16 @kind object;
  #L399838.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(IIIIIIILorg/joda/time/Chronology;)V` @kind direct;
  #L39983e.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateTime` v9 @kind this, `int` v10 , `int` v11 , `int` v12 , `int` v13 , `int` v14 , `int` v15 , `org.joda.time.DateTimeZone` v16 @kind object) @signature `Lorg/joda/time/DateTime;.<init>:(IIIIIILorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L399850.  v7:= 0I;
  #L399852.  v0:= v9 @kind object;
  #L399854.  v1:= v10;
  #L399856.  v2:= v11;
  #L399858.  v3:= v12;
  #L39985a.  v4:= v13;
  #L39985c.  v5:= v14;
  #L39985e.  v6:= v15;
  #L399860.  v8:= v16 @kind object;
  #L399864.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(IIIIIIILorg/joda/time/DateTimeZone;)V` @kind direct;
  #L39986a.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateTime` v9 @kind this, `int` v10 , `int` v11 , `int` v12 , `int` v13 , `int` v14 , `org.joda.time.Chronology` v15 @kind object) @signature `Lorg/joda/time/DateTime;.<init>:(IIIIILorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L39987c.  v6:= 0I;
  #L39987e.  v7:= 0I;
  #L399880.  v0:= v9 @kind object;
  #L399882.  v1:= v10;
  #L399884.  v2:= v11;
  #L399886.  v3:= v12;
  #L399888.  v4:= v13;
  #L39988a.  v5:= v14;
  #L39988c.  v8:= v15 @kind object;
  #L39988e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(IIIIIIILorg/joda/time/Chronology;)V` @kind direct;
  #L399894.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateTime` v9 @kind this, `int` v10 , `int` v11 , `int` v12 , `int` v13 , `int` v14 , `org.joda.time.DateTimeZone` v15 @kind object) @signature `Lorg/joda/time/DateTime;.<init>:(IIIIILorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3998a8.  v6:= 0I;
  #L3998aa.  v7:= 0I;
  #L3998ac.  v0:= v9 @kind object;
  #L3998ae.  v1:= v10;
  #L3998b0.  v2:= v11;
  #L3998b2.  v3:= v12;
  #L3998b4.  v4:= v13;
  #L3998b6.  v5:= v14;
  #L3998b8.  v8:= v15 @kind object;
  #L3998ba.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(IIIIIIILorg/joda/time/DateTimeZone;)V` @kind direct;
  #L3998c0.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateTime` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/DateTime;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L399928.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(J)V` @kind direct;
  #L39992e.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateTime` v0 @kind this, `long` v1 , `org.joda.time.Chronology` v3 @kind object) @signature `Lorg/joda/time/DateTime;.<init>:(JLorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L399940.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L399946.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateTime` v0 @kind this, `long` v1 , `org.joda.time.DateTimeZone` v3 @kind object) @signature `Lorg/joda/time/DateTime;.<init>:(JLorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L399958.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(JLorg/joda/time/DateTimeZone;)V` @kind direct;
  #L39995e.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateTime` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/joda/time/DateTime;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3998d4.  v0:= 0I;
  #L3998d6.  call `<init>`(v1, v2, v0) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3998dc.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateTime` v0 @kind this, `java.lang.Object` v1 @kind object, `org.joda.time.Chronology` v2 @kind object) @signature `Lorg/joda/time/DateTime;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3998f0.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L3998f6.  v2:= temp @kind object;
  #L3998f8.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3998fe.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateTime` v0 @kind this, `java.lang.Object` v1 @kind object, `org.joda.time.DateTimeZone` v2 @kind object) @signature `Lorg/joda/time/DateTime;.<init>:(Ljava/lang/Object;Lorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L399910.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(Ljava/lang/Object;Lorg/joda/time/DateTimeZone;)V` @kind direct;
  #L399916.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateTime` v0 @kind this, `org.joda.time.Chronology` v1 @kind object) @signature `Lorg/joda/time/DateTime;.<init>:(Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L399970.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(Lorg/joda/time/Chronology;)V` @kind direct;
  #L399976.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.DateTime` v0 @kind this, `org.joda.time.DateTimeZone` v1 @kind object) @signature `Lorg/joda/time/DateTime;.<init>:(Lorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L399988.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BaseDateTime;.<init>:(Lorg/joda/time/DateTimeZone;)V` @kind direct;
  #L39998e.  return @kind void;
}
procedure `org.joda.time.DateTime` `now`() @signature `Lorg/joda/time/DateTime;.now:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L398728.  v0:= new `org.joda.time.DateTime`;
  #L39872c.  call `<init>`(v0) @signature `Lorg/joda/time/DateTime;.<init>:()V` @kind direct;
  #L398732.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `now`(`org.joda.time.Chronology` v1 @kind object) @signature `Lorg/joda/time/DateTime;.now:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L398744.  if v1 == 0 then goto L398754;
  #L398748.  v0:= new `org.joda.time.DateTime`;
  #L39874c.  call `<init>`(v0, v1) @signature `Lorg/joda/time/DateTime;.<init>:(Lorg/joda/time/Chronology;)V` @kind direct;
  #L398752.  return v0 @kind object;
  #L398754.  v1:= new `java.lang.NullPointerException`;
  #L398758.  v0:= "Chronology must not be null" @kind object;
  #L39875c.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L398762.  throw v1;
}
procedure `org.joda.time.DateTime` `now`(`org.joda.time.DateTimeZone` v1 @kind object) @signature `Lorg/joda/time/DateTime;.now:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L398774.  if v1 == 0 then goto L398784;
  #L398778.  v0:= new `org.joda.time.DateTime`;
  #L39877c.  call `<init>`(v0, v1) @signature `Lorg/joda/time/DateTime;.<init>:(Lorg/joda/time/DateTimeZone;)V` @kind direct;
  #L398782.  return v0 @kind object;
  #L398784.  v1:= new `java.lang.NullPointerException`;
  #L398788.  v0:= "Zone must not be null" @kind object;
  #L39878c.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L398792.  throw v1;
}
procedure `org.joda.time.DateTime` `parse`(`java.lang.String` v1 @kind object) @signature `Lorg/joda/time/DateTime;.parse:(Ljava/lang/String;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3987a4.  call temp:= `dateTimeParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateTimeParser:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3987aa.  v0:= temp @kind object;
  #L3987ac.  call temp:= `withOffsetParsed`(v0) @signature `Lorg/joda/time/format/DateTimeFormatter;.withOffsetParsed:()Lorg/joda/time/format/DateTimeFormatter;` @kind virtual;
  #L3987b2.  v0:= temp @kind object;
  #L3987b4.  call temp:= `parse`(v1, v0) @signature `Lorg/joda/time/DateTime;.parse:(Ljava/lang/String;Lorg/joda/time/format/DateTimeFormatter;)Lorg/joda/time/DateTime;` @kind static;
  #L3987ba.  v1:= temp @kind object;
  #L3987bc.  return v1 @kind object;
}
procedure `org.joda.time.DateTime` `parse`(`java.lang.String` v0 @kind object, `org.joda.time.format.DateTimeFormatter` v1 @kind object) @signature `Lorg/joda/time/DateTime;.parse:(Ljava/lang/String;Lorg/joda/time/format/DateTimeFormatter;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3987d0.  call temp:= `parseDateTime`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatter;.parseDateTime:(Ljava/lang/String;)Lorg/joda/time/DateTime;` @kind virtual;
  #L3987d6.  v0:= temp @kind object;
  #L3987d8.  return v0 @kind object;
}
procedure `org.joda.time.DateTime$Property` `centuryOfEra`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.centuryOfEra:()Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3992fc.  v0:= new `org.joda.time.DateTime$Property`;
  #L399300.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L399306.  v1:= temp @kind object;
  #L399308.  call temp:= `centuryOfEra`(v1) @signature `Lorg/joda/time/Chronology;.centuryOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39930e.  v1:= temp @kind object;
  #L399310.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L399316.  return v0 @kind object;
}
procedure `org.joda.time.DateTime$Property` `dayOfMonth`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.dayOfMonth:()Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L399328.  v0:= new `org.joda.time.DateTime$Property`;
  #L39932c.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L399332.  v1:= temp @kind object;
  #L399334.  call temp:= `dayOfMonth`(v1) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39933a.  v1:= temp @kind object;
  #L39933c.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L399342.  return v0 @kind object;
}
procedure `org.joda.time.DateTime$Property` `dayOfWeek`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.dayOfWeek:()Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L399354.  v0:= new `org.joda.time.DateTime$Property`;
  #L399358.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39935e.  v1:= temp @kind object;
  #L399360.  call temp:= `dayOfWeek`(v1) @signature `Lorg/joda/time/Chronology;.dayOfWeek:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L399366.  v1:= temp @kind object;
  #L399368.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39936e.  return v0 @kind object;
}
procedure `org.joda.time.DateTime$Property` `dayOfYear`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.dayOfYear:()Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L399380.  v0:= new `org.joda.time.DateTime$Property`;
  #L399384.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39938a.  v1:= temp @kind object;
  #L39938c.  call temp:= `dayOfYear`(v1) @signature `Lorg/joda/time/Chronology;.dayOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L399392.  v1:= temp @kind object;
  #L399394.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39939a.  return v0 @kind object;
}
procedure `org.joda.time.DateTime$Property` `era`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.era:()Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3993ac.  v0:= new `org.joda.time.DateTime$Property`;
  #L3993b0.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3993b6.  v1:= temp @kind object;
  #L3993b8.  call temp:= `era`(v1) @signature `Lorg/joda/time/Chronology;.era:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3993be.  v1:= temp @kind object;
  #L3993c0.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L3993c6.  return v0 @kind object;
}
procedure `org.joda.time.DateTime$Property` `hourOfDay`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.hourOfDay:()Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3993d8.  v0:= new `org.joda.time.DateTime$Property`;
  #L3993dc.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3993e2.  v1:= temp @kind object;
  #L3993e4.  call temp:= `hourOfDay`(v1) @signature `Lorg/joda/time/Chronology;.hourOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3993ea.  v1:= temp @kind object;
  #L3993ec.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L3993f2.  return v0 @kind object;
}
procedure `org.joda.time.DateTime$Property` `millisOfDay`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.millisOfDay:()Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L399404.  v0:= new `org.joda.time.DateTime$Property`;
  #L399408.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39940e.  v1:= temp @kind object;
  #L399410.  call temp:= `millisOfDay`(v1) @signature `Lorg/joda/time/Chronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L399416.  v1:= temp @kind object;
  #L399418.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39941e.  return v0 @kind object;
}
procedure `org.joda.time.DateTime$Property` `millisOfSecond`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.millisOfSecond:()Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L399430.  v0:= new `org.joda.time.DateTime$Property`;
  #L399434.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39943a.  v1:= temp @kind object;
  #L39943c.  call temp:= `millisOfSecond`(v1) @signature `Lorg/joda/time/Chronology;.millisOfSecond:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L399442.  v1:= temp @kind object;
  #L399444.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39944a.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `minus`(`org.joda.time.DateTime` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/DateTime;.minus:(J)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3984d4.  v0:= -1I;
  #L3984d6.  call temp:= `withDurationAdded`(v1, v2, v0) @signature `Lorg/joda/time/DateTime;.withDurationAdded:(JI)Lorg/joda/time/DateTime;` @kind virtual;
  #L3984dc.  v2:= temp @kind object;
  #L3984de.  return v2 @kind object;
}
procedure `org.joda.time.DateTime` `minus`(`org.joda.time.DateTime` v1 @kind this, `org.joda.time.ReadableDuration` v2 @kind object) @signature `Lorg/joda/time/DateTime;.minus:(Lorg/joda/time/ReadableDuration;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3984f0.  v0:= -1I;
  #L3984f2.  call temp:= `withDurationAdded`(v1, v2, v0) @signature `Lorg/joda/time/DateTime;.withDurationAdded:(Lorg/joda/time/ReadableDuration;I)Lorg/joda/time/DateTime;` @kind virtual;
  #L3984f8.  v2:= temp @kind object;
  #L3984fa.  return v2 @kind object;
}
procedure `org.joda.time.DateTime` `minus`(`org.joda.time.DateTime` v1 @kind this, `org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/DateTime;.minus:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39850c.  v0:= -1I;
  #L39850e.  call temp:= `withPeriodAdded`(v1, v2, v0) @signature `Lorg/joda/time/DateTime;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/DateTime;` @kind virtual;
  #L398514.  v2:= temp @kind object;
  #L398516.  return v2 @kind object;
}
procedure `org.joda.time.DateTime` `minusDays`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.minusDays:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398528.  if v4 != 0 then goto L39852e;
  #L39852c.  return v3 @kind object;
  #L39852e.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398534.  v0:= temp @kind object;
  #L398536.  call temp:= `days`(v0) @signature `Lorg/joda/time/Chronology;.days:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39853c.  v0:= temp @kind object;
  #L39853e.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398544.  v1:= temp @kind wide;
  #L398546.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L39854c.  v0:= temp @kind wide;
  #L39854e.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398554.  v4:= temp @kind object;
  #L398556.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `minusHours`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.minusHours:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398568.  if v4 != 0 then goto L39856e;
  #L39856c.  return v3 @kind object;
  #L39856e.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398574.  v0:= temp @kind object;
  #L398576.  call temp:= `hours`(v0) @signature `Lorg/joda/time/Chronology;.hours:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39857c.  v0:= temp @kind object;
  #L39857e.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398584.  v1:= temp @kind wide;
  #L398586.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L39858c.  v0:= temp @kind wide;
  #L39858e.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398594.  v4:= temp @kind object;
  #L398596.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `minusMillis`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.minusMillis:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3985a8.  if v4 != 0 then goto L3985ae;
  #L3985ac.  return v3 @kind object;
  #L3985ae.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3985b4.  v0:= temp @kind object;
  #L3985b6.  call temp:= `millis`(v0) @signature `Lorg/joda/time/Chronology;.millis:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3985bc.  v0:= temp @kind object;
  #L3985be.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3985c4.  v1:= temp @kind wide;
  #L3985c6.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L3985cc.  v0:= temp @kind wide;
  #L3985ce.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L3985d4.  v4:= temp @kind object;
  #L3985d6.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `minusMinutes`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.minusMinutes:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3985e8.  if v4 != 0 then goto L3985ee;
  #L3985ec.  return v3 @kind object;
  #L3985ee.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3985f4.  v0:= temp @kind object;
  #L3985f6.  call temp:= `minutes`(v0) @signature `Lorg/joda/time/Chronology;.minutes:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3985fc.  v0:= temp @kind object;
  #L3985fe.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398604.  v1:= temp @kind wide;
  #L398606.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L39860c.  v0:= temp @kind wide;
  #L39860e.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398614.  v4:= temp @kind object;
  #L398616.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `minusMonths`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.minusMonths:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398628.  if v4 != 0 then goto L39862e;
  #L39862c.  return v3 @kind object;
  #L39862e.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398634.  v0:= temp @kind object;
  #L398636.  call temp:= `months`(v0) @signature `Lorg/joda/time/Chronology;.months:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39863c.  v0:= temp @kind object;
  #L39863e.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398644.  v1:= temp @kind wide;
  #L398646.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L39864c.  v0:= temp @kind wide;
  #L39864e.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398654.  v4:= temp @kind object;
  #L398656.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `minusSeconds`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.minusSeconds:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398668.  if v4 != 0 then goto L39866e;
  #L39866c.  return v3 @kind object;
  #L39866e.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398674.  v0:= temp @kind object;
  #L398676.  call temp:= `seconds`(v0) @signature `Lorg/joda/time/Chronology;.seconds:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39867c.  v0:= temp @kind object;
  #L39867e.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398684.  v1:= temp @kind wide;
  #L398686.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L39868c.  v0:= temp @kind wide;
  #L39868e.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398694.  v4:= temp @kind object;
  #L398696.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `minusWeeks`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.minusWeeks:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3986a8.  if v4 != 0 then goto L3986ae;
  #L3986ac.  return v3 @kind object;
  #L3986ae.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3986b4.  v0:= temp @kind object;
  #L3986b6.  call temp:= `weeks`(v0) @signature `Lorg/joda/time/Chronology;.weeks:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3986bc.  v0:= temp @kind object;
  #L3986be.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3986c4.  v1:= temp @kind wide;
  #L3986c6.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L3986cc.  v0:= temp @kind wide;
  #L3986ce.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L3986d4.  v4:= temp @kind object;
  #L3986d6.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `minusYears`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.minusYears:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3986e8.  if v4 != 0 then goto L3986ee;
  #L3986ec.  return v3 @kind object;
  #L3986ee.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3986f4.  v0:= temp @kind object;
  #L3986f6.  call temp:= `years`(v0) @signature `Lorg/joda/time/Chronology;.years:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3986fc.  v0:= temp @kind object;
  #L3986fe.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398704.  v1:= temp @kind wide;
  #L398706.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L39870c.  v0:= temp @kind wide;
  #L39870e.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398714.  v4:= temp @kind object;
  #L398716.  return v4 @kind object;
}
procedure `org.joda.time.DateTime$Property` `minuteOfDay`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.minuteOfDay:()Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39945c.  v0:= new `org.joda.time.DateTime$Property`;
  #L399460.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L399466.  v1:= temp @kind object;
  #L399468.  call temp:= `minuteOfDay`(v1) @signature `Lorg/joda/time/Chronology;.minuteOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39946e.  v1:= temp @kind object;
  #L399470.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L399476.  return v0 @kind object;
}
procedure `org.joda.time.DateTime$Property` `minuteOfHour`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.minuteOfHour:()Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L399488.  v0:= new `org.joda.time.DateTime$Property`;
  #L39948c.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L399492.  v1:= temp @kind object;
  #L399494.  call temp:= `minuteOfHour`(v1) @signature `Lorg/joda/time/Chronology;.minuteOfHour:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39949a.  v1:= temp @kind object;
  #L39949c.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L3994a2.  return v0 @kind object;
}
procedure `org.joda.time.DateTime$Property` `monthOfYear`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.monthOfYear:()Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3994b4.  v0:= new `org.joda.time.DateTime$Property`;
  #L3994b8.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3994be.  v1:= temp @kind object;
  #L3994c0.  call temp:= `monthOfYear`(v1) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3994c6.  v1:= temp @kind object;
  #L3994c8.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L3994ce.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `plus`(`org.joda.time.DateTime` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/DateTime;.plus:(J)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3987ec.  v0:= 1I;
  #L3987ee.  call temp:= `withDurationAdded`(v1, v2, v0) @signature `Lorg/joda/time/DateTime;.withDurationAdded:(JI)Lorg/joda/time/DateTime;` @kind virtual;
  #L3987f4.  v2:= temp @kind object;
  #L3987f6.  return v2 @kind object;
}
procedure `org.joda.time.DateTime` `plus`(`org.joda.time.DateTime` v1 @kind this, `org.joda.time.ReadableDuration` v2 @kind object) @signature `Lorg/joda/time/DateTime;.plus:(Lorg/joda/time/ReadableDuration;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L398808.  v0:= 1I;
  #L39880a.  call temp:= `withDurationAdded`(v1, v2, v0) @signature `Lorg/joda/time/DateTime;.withDurationAdded:(Lorg/joda/time/ReadableDuration;I)Lorg/joda/time/DateTime;` @kind virtual;
  #L398810.  v2:= temp @kind object;
  #L398812.  return v2 @kind object;
}
procedure `org.joda.time.DateTime` `plus`(`org.joda.time.DateTime` v1 @kind this, `org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/DateTime;.plus:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L398824.  v0:= 1I;
  #L398826.  call temp:= `withPeriodAdded`(v1, v2, v0) @signature `Lorg/joda/time/DateTime;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/DateTime;` @kind virtual;
  #L39882c.  v2:= temp @kind object;
  #L39882e.  return v2 @kind object;
}
procedure `org.joda.time.DateTime` `plusDays`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.plusDays:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398840.  if v4 != 0 then goto L398846;
  #L398844.  return v3 @kind object;
  #L398846.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39884c.  v0:= temp @kind object;
  #L39884e.  call temp:= `days`(v0) @signature `Lorg/joda/time/Chronology;.days:()Lorg/joda/time/DurationField;` @kind virtual;
  #L398854.  v0:= temp @kind object;
  #L398856.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L39885c.  v1:= temp @kind wide;
  #L39885e.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L398864.  v0:= temp @kind wide;
  #L398866.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L39886c.  v4:= temp @kind object;
  #L39886e.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `plusHours`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.plusHours:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398880.  if v4 != 0 then goto L398886;
  #L398884.  return v3 @kind object;
  #L398886.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39888c.  v0:= temp @kind object;
  #L39888e.  call temp:= `hours`(v0) @signature `Lorg/joda/time/Chronology;.hours:()Lorg/joda/time/DurationField;` @kind virtual;
  #L398894.  v0:= temp @kind object;
  #L398896.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L39889c.  v1:= temp @kind wide;
  #L39889e.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L3988a4.  v0:= temp @kind wide;
  #L3988a6.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L3988ac.  v4:= temp @kind object;
  #L3988ae.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `plusMillis`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.plusMillis:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3988c0.  if v4 != 0 then goto L3988c6;
  #L3988c4.  return v3 @kind object;
  #L3988c6.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3988cc.  v0:= temp @kind object;
  #L3988ce.  call temp:= `millis`(v0) @signature `Lorg/joda/time/Chronology;.millis:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3988d4.  v0:= temp @kind object;
  #L3988d6.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3988dc.  v1:= temp @kind wide;
  #L3988de.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L3988e4.  v0:= temp @kind wide;
  #L3988e6.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L3988ec.  v4:= temp @kind object;
  #L3988ee.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `plusMinutes`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.plusMinutes:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398900.  if v4 != 0 then goto L398906;
  #L398904.  return v3 @kind object;
  #L398906.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39890c.  v0:= temp @kind object;
  #L39890e.  call temp:= `minutes`(v0) @signature `Lorg/joda/time/Chronology;.minutes:()Lorg/joda/time/DurationField;` @kind virtual;
  #L398914.  v0:= temp @kind object;
  #L398916.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L39891c.  v1:= temp @kind wide;
  #L39891e.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L398924.  v0:= temp @kind wide;
  #L398926.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L39892c.  v4:= temp @kind object;
  #L39892e.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `plusMonths`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.plusMonths:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398940.  if v4 != 0 then goto L398946;
  #L398944.  return v3 @kind object;
  #L398946.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39894c.  v0:= temp @kind object;
  #L39894e.  call temp:= `months`(v0) @signature `Lorg/joda/time/Chronology;.months:()Lorg/joda/time/DurationField;` @kind virtual;
  #L398954.  v0:= temp @kind object;
  #L398956.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L39895c.  v1:= temp @kind wide;
  #L39895e.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L398964.  v0:= temp @kind wide;
  #L398966.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L39896c.  v4:= temp @kind object;
  #L39896e.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `plusSeconds`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.plusSeconds:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398980.  if v4 != 0 then goto L398986;
  #L398984.  return v3 @kind object;
  #L398986.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39898c.  v0:= temp @kind object;
  #L39898e.  call temp:= `seconds`(v0) @signature `Lorg/joda/time/Chronology;.seconds:()Lorg/joda/time/DurationField;` @kind virtual;
  #L398994.  v0:= temp @kind object;
  #L398996.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L39899c.  v1:= temp @kind wide;
  #L39899e.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L3989a4.  v0:= temp @kind wide;
  #L3989a6.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L3989ac.  v4:= temp @kind object;
  #L3989ae.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `plusWeeks`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.plusWeeks:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3989c0.  if v4 != 0 then goto L3989c6;
  #L3989c4.  return v3 @kind object;
  #L3989c6.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3989cc.  v0:= temp @kind object;
  #L3989ce.  call temp:= `weeks`(v0) @signature `Lorg/joda/time/Chronology;.weeks:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3989d4.  v0:= temp @kind object;
  #L3989d6.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3989dc.  v1:= temp @kind wide;
  #L3989de.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L3989e4.  v0:= temp @kind wide;
  #L3989e6.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L3989ec.  v4:= temp @kind object;
  #L3989ee.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `plusYears`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.plusYears:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398a00.  if v4 != 0 then goto L398a06;
  #L398a04.  return v3 @kind object;
  #L398a06.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398a0c.  v0:= temp @kind object;
  #L398a0e.  call temp:= `years`(v0) @signature `Lorg/joda/time/Chronology;.years:()Lorg/joda/time/DurationField;` @kind virtual;
  #L398a14.  v0:= temp @kind object;
  #L398a16.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398a1c.  v1:= temp @kind wide;
  #L398a1e.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L398a24.  v0:= temp @kind wide;
  #L398a26.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398a2c.  v4:= temp @kind object;
  #L398a2e.  return v4 @kind object;
}
procedure `org.joda.time.DateTime$Property` `property`(`org.joda.time.DateTime` v3 @kind this, `org.joda.time.DateTimeFieldType` v4 @kind object) @signature `Lorg/joda/time/DateTime;.property:(Lorg/joda/time/DateTimeFieldType;)Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3994e0.  if v4 == 0 then goto L399544;
  #L3994e4.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3994ea.  v0:= temp @kind object;
  #L3994ec.  call temp:= `getField`(v4, v0) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3994f2.  v0:= temp @kind object;
  #L3994f4.  call temp:= `isSupported`(v0) @signature `Lorg/joda/time/DateTimeField;.isSupported:()Z` @kind virtual;
  #L3994fa.  v1:= temp;
  #L3994fc.  if v1 == 0 then goto L39950c;
  #L399500.  v4:= new `org.joda.time.DateTime$Property`;
  #L399504.  call `<init>`(v4, v3, v0) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39950a.  return v4 @kind object;
  #L39950c.  v0:= new `java.lang.IllegalArgumentException`;
  #L399510.  v1:= new `java.lang.StringBuilder`;
  #L399514.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39951a.  v2:= "Field '" @kind object;
  #L39951e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L399524.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39952a.  v4:= "' is not supported" @kind object;
  #L39952e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L399534.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39953a.  v4:= temp @kind object;
  #L39953c.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L399542.  throw v0;
  #L399544.  v4:= new `java.lang.IllegalArgumentException`;
  #L399548.  v0:= "The DateTimeFieldType must not be null" @kind object;
  #L39954c.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L399552.  throw v4;
}
procedure `org.joda.time.DateTime$Property` `secondOfDay`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.secondOfDay:()Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L399564.  v0:= new `org.joda.time.DateTime$Property`;
  #L399568.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39956e.  v1:= temp @kind object;
  #L399570.  call temp:= `secondOfDay`(v1) @signature `Lorg/joda/time/Chronology;.secondOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L399576.  v1:= temp @kind object;
  #L399578.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39957e.  return v0 @kind object;
}
procedure `org.joda.time.DateTime$Property` `secondOfMinute`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.secondOfMinute:()Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L399590.  v0:= new `org.joda.time.DateTime$Property`;
  #L399594.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39959a.  v1:= temp @kind object;
  #L39959c.  call temp:= `secondOfMinute`(v1) @signature `Lorg/joda/time/Chronology;.secondOfMinute:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3995a2.  v1:= temp @kind object;
  #L3995a4.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L3995aa.  return v0 @kind object;
}
procedure `org.joda.time.DateMidnight` `toDateMidnight`(`org.joda.time.DateTime` v4 @kind this) @signature `Lorg/joda/time/DateTime;.toDateMidnight:()Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3984a8.  v0:= new `org.joda.time.DateMidnight`;
  #L3984ac.  call temp:= `getMillis`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3984b2.  v1:= temp @kind wide;
  #L3984b4.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3984ba.  v3:= temp @kind object;
  #L3984bc.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/DateMidnight;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3984c2.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTime`(`org.joda.time.DateTime` v0 @kind this) @signature `Lorg/joda/time/DateTime;.toDateTime:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;

  #L398a40.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTime`(`org.joda.time.DateTime` v1 @kind this, `org.joda.time.Chronology` v2 @kind object) @signature `Lorg/joda/time/DateTime;.toDateTime:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L398a54.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L398a5a.  v2:= temp @kind object;
  #L398a5c.  call temp:= `getChronology`(v1) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398a62.  v0:= temp @kind object;
  #L398a64.  if v0 != v2 then goto L398a6a;
  #L398a68.  return v1 @kind object;
  #L398a6a.  call temp:= `toDateTime`(v1, v2) @signature `Lorg/joda/time/base/AbstractInstant;.toDateTime:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTime;` @kind super;
  #L398a70.  v2:= temp @kind object;
  #L398a72.  return v2 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTime`(`org.joda.time.DateTime` v1 @kind this, `org.joda.time.DateTimeZone` v2 @kind object) @signature `Lorg/joda/time/DateTime;.toDateTime:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L398a84.  call temp:= `getZone`(v2) @signature `Lorg/joda/time/DateTimeUtils;.getZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTimeZone;` @kind static;
  #L398a8a.  v2:= temp @kind object;
  #L398a8c.  call temp:= `getZone`(v1) @signature `Lorg/joda/time/base/AbstractInstant;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L398a92.  v0:= temp @kind object;
  #L398a94.  if v0 != v2 then goto L398a9a;
  #L398a98.  return v1 @kind object;
  #L398a9a.  call temp:= `toDateTime`(v1, v2) @signature `Lorg/joda/time/base/AbstractInstant;.toDateTime:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @kind super;
  #L398aa0.  v2:= temp @kind object;
  #L398aa2.  return v2 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTimeISO`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.toDateTimeISO:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L398ab4.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398aba.  v0:= temp @kind object;
  #L398abc.  call temp:= `getInstance`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L398ac2.  v1:= temp @kind object;
  #L398ac4.  if v0 != v1 then goto L398aca;
  #L398ac8.  return v2 @kind object;
  #L398aca.  call temp:= `toDateTimeISO`(v2) @signature `Lorg/joda/time/base/AbstractInstant;.toDateTimeISO:()Lorg/joda/time/DateTime;` @kind super;
  #L398ad0.  v0:= temp @kind object;
  #L398ad2.  return v0 @kind object;
}
procedure `org.joda.time.LocalDate` `toLocalDate`(`org.joda.time.DateTime` v4 @kind this) @signature `Lorg/joda/time/DateTime;.toLocalDate:()Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L399698.  v0:= new `org.joda.time.LocalDate`;
  #L39969c.  call temp:= `getMillis`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3996a2.  v1:= temp @kind wide;
  #L3996a4.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3996aa.  v3:= temp @kind object;
  #L3996ac.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/LocalDate;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3996b2.  return v0 @kind object;
}
procedure `org.joda.time.LocalDateTime` `toLocalDateTime`(`org.joda.time.DateTime` v4 @kind this) @signature `Lorg/joda/time/DateTime;.toLocalDateTime:()Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3996c4.  v0:= new `org.joda.time.LocalDateTime`;
  #L3996c8.  call temp:= `getMillis`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3996ce.  v1:= temp @kind wide;
  #L3996d0.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3996d6.  v3:= temp @kind object;
  #L3996d8.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/LocalDateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3996de.  return v0 @kind object;
}
procedure `org.joda.time.LocalTime` `toLocalTime`(`org.joda.time.DateTime` v4 @kind this) @signature `Lorg/joda/time/DateTime;.toLocalTime:()Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3996f0.  v0:= new `org.joda.time.LocalTime`;
  #L3996f4.  call temp:= `getMillis`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3996fa.  v1:= temp @kind wide;
  #L3996fc.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L399702.  v3:= temp @kind object;
  #L399704.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/LocalTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39970a.  return v0 @kind object;
}
procedure `org.joda.time.TimeOfDay` `toTimeOfDay`(`org.joda.time.DateTime` v4 @kind this) @signature `Lorg/joda/time/DateTime;.toTimeOfDay:()Lorg/joda/time/TimeOfDay;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39971c.  v0:= new `org.joda.time.TimeOfDay`;
  #L399720.  call temp:= `getMillis`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L399726.  v1:= temp @kind wide;
  #L399728.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39972e.  v3:= temp @kind object;
  #L399730.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/TimeOfDay;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L399736.  return v0 @kind object;
}
procedure `org.joda.time.YearMonthDay` `toYearMonthDay`(`org.joda.time.DateTime` v4 @kind this) @signature `Lorg/joda/time/DateTime;.toYearMonthDay:()Lorg/joda/time/YearMonthDay;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L399748.  v0:= new `org.joda.time.YearMonthDay`;
  #L39974c.  call temp:= `getMillis`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L399752.  v1:= temp @kind wide;
  #L399754.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39975a.  v3:= temp @kind object;
  #L39975c.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/YearMonthDay;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L399762.  return v0 @kind object;
}
procedure `org.joda.time.DateTime$Property` `weekOfWeekyear`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.weekOfWeekyear:()Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3995bc.  v0:= new `org.joda.time.DateTime$Property`;
  #L3995c0.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3995c6.  v1:= temp @kind object;
  #L3995c8.  call temp:= `weekOfWeekyear`(v1) @signature `Lorg/joda/time/Chronology;.weekOfWeekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3995ce.  v1:= temp @kind object;
  #L3995d0.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L3995d6.  return v0 @kind object;
}
procedure `org.joda.time.DateTime$Property` `weekyear`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.weekyear:()Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3995e8.  v0:= new `org.joda.time.DateTime$Property`;
  #L3995ec.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3995f2.  v1:= temp @kind object;
  #L3995f4.  call temp:= `weekyear`(v1) @signature `Lorg/joda/time/Chronology;.weekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3995fa.  v1:= temp @kind object;
  #L3995fc.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L399602.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `withCenturyOfEra`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withCenturyOfEra:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398ae4.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398aea.  v0:= temp @kind object;
  #L398aec.  call temp:= `centuryOfEra`(v0) @signature `Lorg/joda/time/Chronology;.centuryOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L398af2.  v0:= temp @kind object;
  #L398af4.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398afa.  v1:= temp @kind wide;
  #L398afc.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L398b02.  v0:= temp @kind wide;
  #L398b04.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398b0a.  v4:= temp @kind object;
  #L398b0c.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `withChronology`(`org.joda.time.DateTime` v3 @kind this, `org.joda.time.Chronology` v4 @kind object) @signature `Lorg/joda/time/DateTime;.withChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398b20.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L398b26.  v4:= temp @kind object;
  #L398b28.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398b2e.  v0:= temp @kind object;
  #L398b30.  if v4 != v0 then goto L398b38;
  #L398b34.  v0:= v3 @kind object;
  #L398b36.  goto L398b4a;
  #L398b38.  v0:= new `org.joda.time.DateTime`;
  #L398b3c.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398b42.  v1:= temp @kind wide;
  #L398b44.  call `<init>`(v0, v1, v4) @signature `Lorg/joda/time/DateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L398b4a.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `withDate`(`org.joda.time.DateTime` v9 @kind this, `int` v10 , `int` v11 , `int` v12 ) @signature `Lorg/joda/time/DateTime;.withDate:(III)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L398b5c.  call temp:= `getChronology`(v9) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398b62.  v0:= temp @kind object;
  #L398b64.  call temp:= `withUTC`(v0) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398b6a.  v1:= temp @kind object;
  #L398b6c.  call temp:= `getMillisOfDay`(v9) @signature `Lorg/joda/time/base/AbstractDateTime;.getMillisOfDay:()I` @kind virtual;
  #L398b72.  v2:= temp;
  #L398b74.  call temp:= `getDateTimeMillis`(v1, v10, v11, v12, v2) @signature `Lorg/joda/time/Chronology;.getDateTimeMillis:(IIII)J` @kind virtual;
  #L398b7a.  v4:= temp @kind wide;
  #L398b7c.  call temp:= `getZone`(v0) @signature `Lorg/joda/time/Chronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L398b82.  v3:= temp @kind object;
  #L398b84.  call temp:= `getMillis`(v9) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398b8a.  v7:= temp @kind wide;
  #L398b8c.  v6:= 0I;
  #L398b8e.  call temp:= `convertLocalToUTC`(v3, v4, v6, v7) @signature `Lorg/joda/time/DateTimeZone;.convertLocalToUTC:(JZJ)J` @kind virtual;
  #L398b94.  v10:= temp @kind wide;
  #L398b96.  call temp:= `withMillis`(v9, v10) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398b9c.  v10:= temp @kind object;
  #L398b9e.  return v10 @kind object;
}
procedure `org.joda.time.DateTime` `withDate`(`org.joda.time.DateTime` v2 @kind this, `org.joda.time.LocalDate` v3 @kind object) @signature `Lorg/joda/time/DateTime;.withDate:(Lorg/joda/time/LocalDate;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L398bb0.  call temp:= `getYear`(v3) @signature `Lorg/joda/time/LocalDate;.getYear:()I` @kind virtual;
  #L398bb6.  v0:= temp;
  #L398bb8.  call temp:= `getMonthOfYear`(v3) @signature `Lorg/joda/time/LocalDate;.getMonthOfYear:()I` @kind virtual;
  #L398bbe.  v1:= temp;
  #L398bc0.  call temp:= `getDayOfMonth`(v3) @signature `Lorg/joda/time/LocalDate;.getDayOfMonth:()I` @kind virtual;
  #L398bc6.  v3:= temp;
  #L398bc8.  call temp:= `withDate`(v2, v0, v1, v3) @signature `Lorg/joda/time/DateTime;.withDate:(III)Lorg/joda/time/DateTime;` @kind virtual;
  #L398bce.  v3:= temp @kind object;
  #L398bd0.  return v3 @kind object;
}
procedure `org.joda.time.DateTime` `withDayOfMonth`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withDayOfMonth:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398be4.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398bea.  v0:= temp @kind object;
  #L398bec.  call temp:= `dayOfMonth`(v0) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L398bf2.  v0:= temp @kind object;
  #L398bf4.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398bfa.  v1:= temp @kind wide;
  #L398bfc.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L398c02.  v0:= temp @kind wide;
  #L398c04.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398c0a.  v4:= temp @kind object;
  #L398c0c.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `withDayOfWeek`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withDayOfWeek:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398c20.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398c26.  v0:= temp @kind object;
  #L398c28.  call temp:= `dayOfWeek`(v0) @signature `Lorg/joda/time/Chronology;.dayOfWeek:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L398c2e.  v0:= temp @kind object;
  #L398c30.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398c36.  v1:= temp @kind wide;
  #L398c38.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L398c3e.  v0:= temp @kind wide;
  #L398c40.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398c46.  v4:= temp @kind object;
  #L398c48.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `withDayOfYear`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withDayOfYear:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398c5c.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398c62.  v0:= temp @kind object;
  #L398c64.  call temp:= `dayOfYear`(v0) @signature `Lorg/joda/time/Chronology;.dayOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L398c6a.  v0:= temp @kind object;
  #L398c6c.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398c72.  v1:= temp @kind wide;
  #L398c74.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L398c7a.  v0:= temp @kind wide;
  #L398c7c.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398c82.  v4:= temp @kind object;
  #L398c84.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `withDurationAdded`(`org.joda.time.DateTime` v9 @kind this, `long` v10 , `int` v12 ) @signature `Lorg/joda/time/DateTime;.withDurationAdded:(JI)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L398c98.  v0:= 0L;
  #L398c9c.  v2:= lcmp(v10, v0);
  #L398ca0.  if v2 == 0 then goto L398cd0;
  #L398ca4.  if v12 != 0 then goto L398caa;
  #L398ca8.  goto L398cd0;
  #L398caa.  call temp:= `getChronology`(v9) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398cb0.  v3:= temp @kind object;
  #L398cb2.  call temp:= `getMillis`(v9) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398cb8.  v4:= temp @kind wide;
  #L398cba.  v6:= v10 @kind wide;
  #L398cbc.  v8:= v12;
  #L398cbe.  call temp:= `add`(v3, v4, v6, v8) @signature `Lorg/joda/time/Chronology;.add:(JJI)J` @kind virtual;
  #L398cc4.  v10:= temp @kind wide;
  #L398cc6.  call temp:= `withMillis`(v9, v10) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398ccc.  v10:= temp @kind object;
  #L398cce.  return v10 @kind object;
  #L398cd0.  return v9 @kind object;
}
procedure `org.joda.time.DateTime` `withDurationAdded`(`org.joda.time.DateTime` v2 @kind this, `org.joda.time.ReadableDuration` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withDurationAdded:(Lorg/joda/time/ReadableDuration;I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L398ce4.  if v3 == 0 then goto L398d00;
  #L398ce8.  if v4 != 0 then goto L398cee;
  #L398cec.  goto L398d00;
  #L398cee.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/ReadableDuration;.getMillis:()J` @kind interface;
  #L398cf4.  v0:= temp @kind wide;
  #L398cf6.  call temp:= `withDurationAdded`(v2, v0, v4) @signature `Lorg/joda/time/DateTime;.withDurationAdded:(JI)Lorg/joda/time/DateTime;` @kind virtual;
  #L398cfc.  v3:= temp @kind object;
  #L398cfe.  return v3 @kind object;
  #L398d00.  return v2 @kind object;
}
procedure `org.joda.time.DateTime` `withEarlierOffsetAtOverlap`(`org.joda.time.DateTime` v4 @kind this) @signature `Lorg/joda/time/DateTime;.withEarlierOffsetAtOverlap:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L398d14.  call temp:= `getZone`(v4) @signature `Lorg/joda/time/base/AbstractInstant;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L398d1a.  v0:= temp @kind object;
  #L398d1c.  call temp:= `getMillis`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398d22.  v1:= temp @kind wide;
  #L398d24.  v3:= 0I;
  #L398d26.  call temp:= `adjustOffset`(v0, v1, v3) @signature `Lorg/joda/time/DateTimeZone;.adjustOffset:(JZ)J` @kind virtual;
  #L398d2c.  v0:= temp @kind wide;
  #L398d2e.  call temp:= `withMillis`(v4, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398d34.  v0:= temp @kind object;
  #L398d36.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `withEra`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withEra:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398d48.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398d4e.  v0:= temp @kind object;
  #L398d50.  call temp:= `era`(v0) @signature `Lorg/joda/time/Chronology;.era:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L398d56.  v0:= temp @kind object;
  #L398d58.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398d5e.  v1:= temp @kind wide;
  #L398d60.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L398d66.  v0:= temp @kind wide;
  #L398d68.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398d6e.  v4:= temp @kind object;
  #L398d70.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `withField`(`org.joda.time.DateTime` v2 @kind this, `org.joda.time.DateTimeFieldType` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withField:(Lorg/joda/time/DateTimeFieldType;I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L398d84.  if v3 == 0 then goto L398db2;
  #L398d88.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398d8e.  v0:= temp @kind object;
  #L398d90.  call temp:= `getField`(v3, v0) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L398d96.  v3:= temp @kind object;
  #L398d98.  call temp:= `getMillis`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398d9e.  v0:= temp @kind wide;
  #L398da0.  call temp:= `set`(v3, v0, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L398da6.  v3:= temp @kind wide;
  #L398da8.  call temp:= `withMillis`(v2, v3) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398dae.  v3:= temp @kind object;
  #L398db0.  return v3 @kind object;
  #L398db2.  v3:= new `java.lang.IllegalArgumentException`;
  #L398db6.  v4:= "Field must not be null" @kind object;
  #L398dba.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L398dc0.  throw v3;
}
procedure `org.joda.time.DateTime` `withFieldAdded`(`org.joda.time.DateTime` v2 @kind this, `org.joda.time.DurationFieldType` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L398dd4.  if v3 == 0 then goto L398e08;
  #L398dd8.  if v4 != 0 then goto L398dde;
  #L398ddc.  return v2 @kind object;
  #L398dde.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398de4.  v0:= temp @kind object;
  #L398de6.  call temp:= `getField`(v3, v0) @signature `Lorg/joda/time/DurationFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;` @kind virtual;
  #L398dec.  v3:= temp @kind object;
  #L398dee.  call temp:= `getMillis`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398df4.  v0:= temp @kind wide;
  #L398df6.  call temp:= `add`(v3, v0, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L398dfc.  v3:= temp @kind wide;
  #L398dfe.  call temp:= `withMillis`(v2, v3) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398e04.  v3:= temp @kind object;
  #L398e06.  return v3 @kind object;
  #L398e08.  v3:= new `java.lang.IllegalArgumentException`;
  #L398e0c.  v4:= "Field must not be null" @kind object;
  #L398e10.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L398e16.  throw v3;
}
procedure `org.joda.time.DateTime` `withFields`(`org.joda.time.DateTime` v3 @kind this, `org.joda.time.ReadablePartial` v4 @kind object) @signature `Lorg/joda/time/DateTime;.withFields:(Lorg/joda/time/ReadablePartial;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398e28.  if v4 != 0 then goto L398e2e;
  #L398e2c.  return v3 @kind object;
  #L398e2e.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398e34.  v0:= temp @kind object;
  #L398e36.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398e3c.  v1:= temp @kind wide;
  #L398e3e.  call temp:= `set`(v0, v4, v1) @signature `Lorg/joda/time/Chronology;.set:(Lorg/joda/time/ReadablePartial;J)J` @kind virtual;
  #L398e44.  v0:= temp @kind wide;
  #L398e46.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398e4c.  v4:= temp @kind object;
  #L398e4e.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `withHourOfDay`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withHourOfDay:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398e60.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398e66.  v0:= temp @kind object;
  #L398e68.  call temp:= `hourOfDay`(v0) @signature `Lorg/joda/time/Chronology;.hourOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L398e6e.  v0:= temp @kind object;
  #L398e70.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398e76.  v1:= temp @kind wide;
  #L398e78.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L398e7e.  v0:= temp @kind wide;
  #L398e80.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398e86.  v4:= temp @kind object;
  #L398e88.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `withLaterOffsetAtOverlap`(`org.joda.time.DateTime` v4 @kind this) @signature `Lorg/joda/time/DateTime;.withLaterOffsetAtOverlap:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L398e9c.  call temp:= `getZone`(v4) @signature `Lorg/joda/time/base/AbstractInstant;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L398ea2.  v0:= temp @kind object;
  #L398ea4.  call temp:= `getMillis`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398eaa.  v1:= temp @kind wide;
  #L398eac.  v3:= 1I;
  #L398eae.  call temp:= `adjustOffset`(v0, v1, v3) @signature `Lorg/joda/time/DateTimeZone;.adjustOffset:(JZ)J` @kind virtual;
  #L398eb4.  v0:= temp @kind wide;
  #L398eb6.  call temp:= `withMillis`(v4, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398ebc.  v0:= temp @kind object;
  #L398ebe.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `withMillis`(`org.joda.time.DateTime` v3 @kind this, `long` v4 ) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398ed0.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398ed6.  v0:= temp @kind wide;
  #L398ed8.  v2:= lcmp(v4, v0);
  #L398edc.  if v2 != 0 then goto L398ee4;
  #L398ee0.  v0:= v3 @kind object;
  #L398ee2.  goto L398ef6;
  #L398ee4.  v0:= new `org.joda.time.DateTime`;
  #L398ee8.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398eee.  v1:= temp @kind object;
  #L398ef0.  call `<init>`(v0, v4, v1) @signature `Lorg/joda/time/DateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L398ef6.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `withMillisOfDay`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withMillisOfDay:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398f08.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398f0e.  v0:= temp @kind object;
  #L398f10.  call temp:= `millisOfDay`(v0) @signature `Lorg/joda/time/Chronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L398f16.  v0:= temp @kind object;
  #L398f18.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398f1e.  v1:= temp @kind wide;
  #L398f20.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L398f26.  v0:= temp @kind wide;
  #L398f28.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398f2e.  v4:= temp @kind object;
  #L398f30.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `withMillisOfSecond`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withMillisOfSecond:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398f44.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398f4a.  v0:= temp @kind object;
  #L398f4c.  call temp:= `millisOfSecond`(v0) @signature `Lorg/joda/time/Chronology;.millisOfSecond:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L398f52.  v0:= temp @kind object;
  #L398f54.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398f5a.  v1:= temp @kind wide;
  #L398f5c.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L398f62.  v0:= temp @kind wide;
  #L398f64.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398f6a.  v4:= temp @kind object;
  #L398f6c.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `withMinuteOfHour`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withMinuteOfHour:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398f80.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398f86.  v0:= temp @kind object;
  #L398f88.  call temp:= `minuteOfHour`(v0) @signature `Lorg/joda/time/Chronology;.minuteOfHour:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L398f8e.  v0:= temp @kind object;
  #L398f90.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398f96.  v1:= temp @kind wide;
  #L398f98.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L398f9e.  v0:= temp @kind wide;
  #L398fa0.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398fa6.  v4:= temp @kind object;
  #L398fa8.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `withMonthOfYear`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withMonthOfYear:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398fbc.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L398fc2.  v0:= temp @kind object;
  #L398fc4.  call temp:= `monthOfYear`(v0) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L398fca.  v0:= temp @kind object;
  #L398fcc.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L398fd2.  v1:= temp @kind wide;
  #L398fd4.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L398fda.  v0:= temp @kind wide;
  #L398fdc.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L398fe2.  v4:= temp @kind object;
  #L398fe4.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `withPeriodAdded`(`org.joda.time.DateTime` v3 @kind this, `org.joda.time.ReadablePeriod` v4 @kind object, `int` v5 ) @signature `Lorg/joda/time/DateTime;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L398ff8.  if v4 == 0 then goto L399024;
  #L398ffc.  if v5 != 0 then goto L399002;
  #L399000.  goto L399024;
  #L399002.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L399008.  v0:= temp @kind object;
  #L39900a.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L399010.  v1:= temp @kind wide;
  #L399012.  call temp:= `add`(v0, v4, v1, v5) @signature `Lorg/joda/time/Chronology;.add:(Lorg/joda/time/ReadablePeriod;JI)J` @kind virtual;
  #L399018.  v4:= temp @kind wide;
  #L39901a.  call temp:= `withMillis`(v3, v4) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L399020.  v4:= temp @kind object;
  #L399022.  return v4 @kind object;
  #L399024.  return v3 @kind object;
}
procedure `org.joda.time.DateTime` `withSecondOfMinute`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withSecondOfMinute:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L399038.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39903e.  v0:= temp @kind object;
  #L399040.  call temp:= `secondOfMinute`(v0) @signature `Lorg/joda/time/Chronology;.secondOfMinute:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L399046.  v0:= temp @kind object;
  #L399048.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L39904e.  v1:= temp @kind wide;
  #L399050.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L399056.  v0:= temp @kind wide;
  #L399058.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L39905e.  v4:= temp @kind object;
  #L399060.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `withTime`(`org.joda.time.DateTime` v11 @kind this, `int` v12 , `int` v13 , `int` v14 , `int` v15 ) @signature `Lorg/joda/time/DateTime;.withTime:(IIII)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L399074.  call temp:= `getChronology`(v11) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39907a.  v0:= temp @kind object;
  #L39907c.  call temp:= `withUTC`(v0) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L399082.  v1:= temp @kind object;
  #L399084.  call temp:= `getYear`(v11) @signature `Lorg/joda/time/base/AbstractDateTime;.getYear:()I` @kind virtual;
  #L39908a.  v2:= temp;
  #L39908c.  call temp:= `getMonthOfYear`(v11) @signature `Lorg/joda/time/base/AbstractDateTime;.getMonthOfYear:()I` @kind virtual;
  #L399092.  v3:= temp;
  #L399094.  call temp:= `getDayOfMonth`(v11) @signature `Lorg/joda/time/base/AbstractDateTime;.getDayOfMonth:()I` @kind virtual;
  #L39909a.  v4:= temp;
  #L39909c.  v5:= v12;
  #L39909e.  v6:= v13;
  #L3990a0.  v7:= v14;
  #L3990a2.  v8:= v15;
  #L3990a4.  call temp:= `getDateTimeMillis`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/joda/time/Chronology;.getDateTimeMillis:(IIIIIII)J` @kind virtual;
  #L3990aa.  v6:= temp @kind wide;
  #L3990ac.  call temp:= `getZone`(v0) @signature `Lorg/joda/time/Chronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3990b2.  v5:= temp @kind object;
  #L3990b4.  call temp:= `getMillis`(v11) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3990ba.  v9:= temp @kind wide;
  #L3990bc.  v8:= 0I;
  #L3990be.  call temp:= `convertLocalToUTC`(v5, v6, v8, v9) @signature `Lorg/joda/time/DateTimeZone;.convertLocalToUTC:(JZJ)J` @kind virtual;
  #L3990c4.  v12:= temp @kind wide;
  #L3990c6.  call temp:= `withMillis`(v11, v12) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L3990cc.  v12:= temp @kind object;
  #L3990ce.  return v12 @kind object;
}
procedure `org.joda.time.DateTime` `withTime`(`org.joda.time.DateTime` v3 @kind this, `org.joda.time.LocalTime` v4 @kind object) @signature `Lorg/joda/time/DateTime;.withTime:(Lorg/joda/time/LocalTime;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3990e0.  call temp:= `getHourOfDay`(v4) @signature `Lorg/joda/time/LocalTime;.getHourOfDay:()I` @kind virtual;
  #L3990e6.  v0:= temp;
  #L3990e8.  call temp:= `getMinuteOfHour`(v4) @signature `Lorg/joda/time/LocalTime;.getMinuteOfHour:()I` @kind virtual;
  #L3990ee.  v1:= temp;
  #L3990f0.  call temp:= `getSecondOfMinute`(v4) @signature `Lorg/joda/time/LocalTime;.getSecondOfMinute:()I` @kind virtual;
  #L3990f6.  v2:= temp;
  #L3990f8.  call temp:= `getMillisOfSecond`(v4) @signature `Lorg/joda/time/LocalTime;.getMillisOfSecond:()I` @kind virtual;
  #L3990fe.  v4:= temp;
  #L399100.  call temp:= `withTime`(v3, v0, v1, v2, v4) @signature `Lorg/joda/time/DateTime;.withTime:(IIII)Lorg/joda/time/DateTime;` @kind virtual;
  #L399106.  v4:= temp @kind object;
  #L399108.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `withTimeAtStartOfDay`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.withTimeAtStartOfDay:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39911c.  call temp:= `toLocalDate`(v2) @signature `Lorg/joda/time/DateTime;.toLocalDate:()Lorg/joda/time/LocalDate;` @kind virtual;
  #L399122.  v0:= temp @kind object;
  #L399124.  call temp:= `getZone`(v2) @signature `Lorg/joda/time/base/AbstractInstant;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L39912a.  v1:= temp @kind object;
  #L39912c.  call temp:= `toDateTimeAtStartOfDay`(v0, v1) @signature `Lorg/joda/time/LocalDate;.toDateTimeAtStartOfDay:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @kind virtual;
  #L399132.  v0:= temp @kind object;
  #L399134.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `withWeekOfWeekyear`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withWeekOfWeekyear:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L399148.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39914e.  v0:= temp @kind object;
  #L399150.  call temp:= `weekOfWeekyear`(v0) @signature `Lorg/joda/time/Chronology;.weekOfWeekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L399156.  v0:= temp @kind object;
  #L399158.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L39915e.  v1:= temp @kind wide;
  #L399160.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L399166.  v0:= temp @kind wide;
  #L399168.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L39916e.  v4:= temp @kind object;
  #L399170.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `withWeekyear`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withWeekyear:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L399184.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39918a.  v0:= temp @kind object;
  #L39918c.  call temp:= `weekyear`(v0) @signature `Lorg/joda/time/Chronology;.weekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L399192.  v0:= temp @kind object;
  #L399194.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L39919a.  v1:= temp @kind wide;
  #L39919c.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3991a2.  v0:= temp @kind wide;
  #L3991a4.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L3991aa.  v4:= temp @kind object;
  #L3991ac.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `withYear`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withYear:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3991c0.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3991c6.  v0:= temp @kind object;
  #L3991c8.  call temp:= `year`(v0) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3991ce.  v0:= temp @kind object;
  #L3991d0.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3991d6.  v1:= temp @kind wide;
  #L3991d8.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3991de.  v0:= temp @kind wide;
  #L3991e0.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L3991e6.  v4:= temp @kind object;
  #L3991e8.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `withYearOfCentury`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withYearOfCentury:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3991fc.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L399202.  v0:= temp @kind object;
  #L399204.  call temp:= `yearOfCentury`(v0) @signature `Lorg/joda/time/Chronology;.yearOfCentury:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39920a.  v0:= temp @kind object;
  #L39920c.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L399212.  v1:= temp @kind wide;
  #L399214.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39921a.  v0:= temp @kind wide;
  #L39921c.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L399222.  v4:= temp @kind object;
  #L399224.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `withYearOfEra`(`org.joda.time.DateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/DateTime;.withYearOfEra:(I)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L399238.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39923e.  v0:= temp @kind object;
  #L399240.  call temp:= `yearOfEra`(v0) @signature `Lorg/joda/time/Chronology;.yearOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L399246.  v0:= temp @kind object;
  #L399248.  call temp:= `getMillis`(v3) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L39924e.  v1:= temp @kind wide;
  #L399250.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L399256.  v0:= temp @kind wide;
  #L399258.  call temp:= `withMillis`(v3, v0) @signature `Lorg/joda/time/DateTime;.withMillis:(J)Lorg/joda/time/DateTime;` @kind virtual;
  #L39925e.  v4:= temp @kind object;
  #L399260.  return v4 @kind object;
}
procedure `org.joda.time.DateTime` `withZone`(`org.joda.time.DateTime` v1 @kind this, `org.joda.time.DateTimeZone` v2 @kind object) @signature `Lorg/joda/time/DateTime;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L399274.  call temp:= `getChronology`(v1) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39927a.  v0:= temp @kind object;
  #L39927c.  call temp:= `withZone`(v0, v2) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L399282.  v2:= temp @kind object;
  #L399284.  call temp:= `withChronology`(v1, v2) @signature `Lorg/joda/time/DateTime;.withChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTime;` @kind virtual;
  #L39928a.  v2:= temp @kind object;
  #L39928c.  return v2 @kind object;
}
procedure `org.joda.time.DateTime` `withZoneRetainFields`(`org.joda.time.DateTime` v4 @kind this, `org.joda.time.DateTimeZone` v5 @kind object) @signature `Lorg/joda/time/DateTime;.withZoneRetainFields:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3992a0.  call temp:= `getZone`(v5) @signature `Lorg/joda/time/DateTimeUtils;.getZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTimeZone;` @kind static;
  #L3992a6.  v5:= temp @kind object;
  #L3992a8.  call temp:= `getZone`(v4) @signature `Lorg/joda/time/base/AbstractInstant;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3992ae.  v0:= temp @kind object;
  #L3992b0.  call temp:= `getZone`(v0) @signature `Lorg/joda/time/DateTimeUtils;.getZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTimeZone;` @kind static;
  #L3992b6.  v0:= temp @kind object;
  #L3992b8.  if v5 != v0 then goto L3992be;
  #L3992bc.  return v4 @kind object;
  #L3992be.  call temp:= `getMillis`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getMillis:()J` @kind virtual;
  #L3992c4.  v1:= temp @kind wide;
  #L3992c6.  call temp:= `getMillisKeepLocal`(v0, v5, v1) @signature `Lorg/joda/time/DateTimeZone;.getMillisKeepLocal:(Lorg/joda/time/DateTimeZone;J)J` @kind virtual;
  #L3992cc.  v0:= temp @kind wide;
  #L3992ce.  v2:= new `org.joda.time.DateTime`;
  #L3992d2.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3992d8.  v3:= temp @kind object;
  #L3992da.  call temp:= `withZone`(v3, v5) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3992e0.  v5:= temp @kind object;
  #L3992e2.  call `<init>`(v2, v0, v5) @signature `Lorg/joda/time/DateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3992e8.  return v2 @kind object;
}
procedure `org.joda.time.DateTime$Property` `year`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.year:()Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L399614.  v0:= new `org.joda.time.DateTime$Property`;
  #L399618.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39961e.  v1:= temp @kind object;
  #L399620.  call temp:= `year`(v1) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L399626.  v1:= temp @kind object;
  #L399628.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39962e.  return v0 @kind object;
}
procedure `org.joda.time.DateTime$Property` `yearOfCentury`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.yearOfCentury:()Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L399640.  v0:= new `org.joda.time.DateTime$Property`;
  #L399644.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39964a.  v1:= temp @kind object;
  #L39964c.  call temp:= `yearOfCentury`(v1) @signature `Lorg/joda/time/Chronology;.yearOfCentury:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L399652.  v1:= temp @kind object;
  #L399654.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39965a.  return v0 @kind object;
}
procedure `org.joda.time.DateTime$Property` `yearOfEra`(`org.joda.time.DateTime` v2 @kind this) @signature `Lorg/joda/time/DateTime;.yearOfEra:()Lorg/joda/time/DateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39966c.  v0:= new `org.joda.time.DateTime$Property`;
  #L399670.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/base/BaseDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L399676.  v1:= temp @kind object;
  #L399678.  call temp:= `yearOfEra`(v1) @signature `Lorg/joda/time/Chronology;.yearOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39967e.  v1:= temp @kind object;
  #L399680.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/DateTime$Property;.<init>:(Lorg/joda/time/DateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L399686.  return v0 @kind object;
}
