record `org.joda.time.DateTimeUtils$OffsetMillisProvider` @kind class @AccessFlag  extends `org.joda.time.DateTimeUtils$MillisProvider` @kind interface {
  `long` `org.joda.time.DateTimeUtils$OffsetMillisProvider.iMillis` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.joda.time.DateTimeUtils$OffsetMillisProvider` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/DateTimeUtils$OffsetMillisProvider;.<init>:(J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L396ce4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L396cea.  v0.`org.joda.time.DateTimeUtils$OffsetMillisProvider.iMillis` @type ^`long` := v1 @kind wide;
  #L396cee.  return @kind void;
}
procedure `long` `getMillis`(`org.joda.time.DateTimeUtils$OffsetMillisProvider` v4 @kind this) @signature `Lorg/joda/time/DateTimeUtils$OffsetMillisProvider;.getMillis:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L396cc4.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L396cca.  v0:= temp @kind wide;
  #L396ccc.  v2:= v4.`org.joda.time.DateTimeUtils$OffsetMillisProvider.iMillis` @type ^`long` @kind wide;
  #L396cd0.  v0:= v0 + v2 @kind long;
  #L396cd2.  return v0 @kind wide;
}
