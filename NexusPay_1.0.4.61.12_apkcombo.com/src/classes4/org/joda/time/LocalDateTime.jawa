record `org.joda.time.LocalDateTime` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.base.BaseLocal` @kind class, `org.joda.time.ReadablePartial` @kind interface, `java.io.Serializable` @kind interface {
  `org.joda.time.Chronology` `org.joda.time.LocalDateTime.iChronology` @AccessFlag PRIVATE_FINAL;
  `long` `org.joda.time.LocalDateTime.iLocalMillis` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@org.joda.time.LocalDateTime.DAY_OF_MONTH` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.joda.time.LocalDateTime.MILLIS_OF_DAY` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.joda.time.LocalDateTime.MONTH_OF_YEAR` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.joda.time.LocalDateTime.YEAR` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.joda.time.LocalDateTime.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.LocalDateTime` v3 @kind this) @signature `Lorg/joda/time/LocalDateTime;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L39e078.  call temp:= `currentTimeMillis`() @signature `Lorg/joda/time/DateTimeUtils;.currentTimeMillis:()J` @kind static;
  #L39e07e.  v0:= temp @kind wide;
  #L39e080.  call temp:= `getInstance`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L39e086.  v2:= temp @kind object;
  #L39e088.  call `<init>`(v3, v0, v2) @signature `Lorg/joda/time/LocalDateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39e08e.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDateTime` v9 @kind this, `int` v10 , `int` v11 , `int` v12 , `int` v13 , `int` v14 ) @signature `Lorg/joda/time/LocalDateTime;.<init>:(IIIII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L39e0a0.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L39e0a6.  v8:= temp @kind object;
  #L39e0a8.  v6:= 0I;
  #L39e0aa.  v7:= 0I;
  #L39e0ac.  v0:= v9 @kind object;
  #L39e0ae.  v1:= v10;
  #L39e0b0.  v2:= v11;
  #L39e0b2.  v3:= v12;
  #L39e0b4.  v4:= v13;
  #L39e0b6.  v5:= v14;
  #L39e0b8.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/joda/time/LocalDateTime;.<init>:(IIIIIIILorg/joda/time/Chronology;)V` @kind direct;
  #L39e0be.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDateTime` v9 @kind this, `int` v10 , `int` v11 , `int` v12 , `int` v13 , `int` v14 , `int` v15 ) @signature `Lorg/joda/time/LocalDateTime;.<init>:(IIIIII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L39e0d0.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L39e0d6.  v8:= temp @kind object;
  #L39e0d8.  v7:= 0I;
  #L39e0da.  v0:= v9 @kind object;
  #L39e0dc.  v1:= v10;
  #L39e0de.  v2:= v11;
  #L39e0e0.  v3:= v12;
  #L39e0e2.  v4:= v13;
  #L39e0e4.  v5:= v14;
  #L39e0e6.  v6:= v15;
  #L39e0e8.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/joda/time/LocalDateTime;.<init>:(IIIIIIILorg/joda/time/Chronology;)V` @kind direct;
  #L39e0ee.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDateTime` v9 @kind this, `int` v10 , `int` v11 , `int` v12 , `int` v13 , `int` v14 , `int` v15 , `int` v16 ) @signature `Lorg/joda/time/LocalDateTime;.<init>:(IIIIIII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L39e100.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L39e106.  v8:= temp @kind object;
  #L39e108.  v0:= v9 @kind object;
  #L39e10a.  v1:= v10;
  #L39e10c.  v2:= v11;
  #L39e10e.  v3:= v12;
  #L39e110.  v4:= v13;
  #L39e112.  v5:= v14;
  #L39e114.  v6:= v15;
  #L39e116.  v7:= v16;
  #L39e11a.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/joda/time/LocalDateTime;.<init>:(IIIIIIILorg/joda/time/Chronology;)V` @kind direct;
  #L39e120.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDateTime` v10 @kind this, `int` v11 , `int` v12 , `int` v13 , `int` v14 , `int` v15 , `int` v16 , `int` v17 , `org.joda.time.Chronology` v18 @kind object) @signature `Lorg/joda/time/LocalDateTime;.<init>:(IIIIIIILorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L39e134.  v0:= v10 @kind object;
  #L39e136.  call `<init>`(v10) @signature `Lorg/joda/time/base/BaseLocal;.<init>:()V` @kind direct;
  #L39e13c.  call temp:= `getChronology`(v18) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L39e142.  v1:= temp @kind object;
  #L39e144.  call temp:= `withUTC`(v1) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e14a.  v1:= temp @kind object;
  #L39e14c.  v2:= v1 @kind object;
  #L39e14e.  v3:= v11;
  #L39e150.  v4:= v12;
  #L39e152.  v5:= v13;
  #L39e154.  v6:= v14;
  #L39e156.  v7:= v15;
  #L39e158.  v8:= v16;
  #L39e15c.  v9:= v17;
  #L39e160.  call temp:= `getDateTimeMillis`(v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lorg/joda/time/Chronology;.getDateTimeMillis:(IIIIIII)J` @kind virtual;
  #L39e166.  v2:= temp @kind wide;
  #L39e168.  v0.`org.joda.time.LocalDateTime.iChronology` @type ^`org.joda.time.Chronology` := v1 @kind object;
  #L39e16c.  v0.`org.joda.time.LocalDateTime.iLocalMillis` @type ^`long` := v2 @kind wide;
  #L39e170.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDateTime` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/LocalDateTime;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L39e298.  call temp:= `getInstance`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L39e29e.  v0:= temp @kind object;
  #L39e2a0.  call `<init>`(v1, v2, v0) @signature `Lorg/joda/time/LocalDateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39e2a6.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDateTime` v2 @kind this, `long` v3 , `org.joda.time.Chronology` v5 @kind object) @signature `Lorg/joda/time/LocalDateTime;.<init>:(JLorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L39e2b8.  call `<init>`(v2) @signature `Lorg/joda/time/base/BaseLocal;.<init>:()V` @kind direct;
  #L39e2be.  call temp:= `getChronology`(v5) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L39e2c4.  v5:= temp @kind object;
  #L39e2c6.  call temp:= `getZone`(v5) @signature `Lorg/joda/time/Chronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L39e2cc.  v0:= temp @kind object;
  #L39e2ce.  v1:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L39e2d2.  call temp:= `getMillisKeepLocal`(v0, v1, v3) @signature `Lorg/joda/time/DateTimeZone;.getMillisKeepLocal:(Lorg/joda/time/DateTimeZone;J)J` @kind virtual;
  #L39e2d8.  v3:= temp @kind wide;
  #L39e2da.  v2.`org.joda.time.LocalDateTime.iLocalMillis` @type ^`long` := v3 @kind wide;
  #L39e2de.  call temp:= `withUTC`(v5) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e2e4.  v3:= temp @kind object;
  #L39e2e6.  v2.`org.joda.time.LocalDateTime.iChronology` @type ^`org.joda.time.Chronology` := v3 @kind object;
  #L39e2ea.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDateTime` v0 @kind this, `long` v1 , `org.joda.time.DateTimeZone` v3 @kind object) @signature `Lorg/joda/time/LocalDateTime;.<init>:(JLorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39e2fc.  call temp:= `getInstance`(v3) @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L39e302.  v3:= temp @kind object;
  #L39e304.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/LocalDateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39e30a.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDateTime` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/joda/time/LocalDateTime;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L39e184.  v0:= 0I;
  #L39e186.  call `<init>`(v1, v2, v0) @signature `Lorg/joda/time/LocalDateTime;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;)V` @kind direct;
  #L39e18c.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDateTime` v4 @kind this, `java.lang.Object` v5 @kind object, `org.joda.time.Chronology` v6 @kind object) @signature `Lorg/joda/time/LocalDateTime;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39e1a0.  call `<init>`(v4) @signature `Lorg/joda/time/base/BaseLocal;.<init>:()V` @kind direct;
  #L39e1a6.  call temp:= `getInstance`() @signature `Lorg/joda/time/convert/ConverterManager;.getInstance:()Lorg/joda/time/convert/ConverterManager;` @kind static;
  #L39e1ac.  v0:= temp @kind object;
  #L39e1ae.  call temp:= `getPartialConverter`(v0, v5) @signature `Lorg/joda/time/convert/ConverterManager;.getPartialConverter:(Ljava/lang/Object;)Lorg/joda/time/convert/PartialConverter;` @kind virtual;
  #L39e1b4.  v0:= temp @kind object;
  #L39e1b6.  call temp:= `getChronology`(v0, v5, v6) @signature `Lorg/joda/time/convert/PartialConverter;.getChronology:(Ljava/lang/Object;Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind interface;
  #L39e1bc.  v6:= temp @kind object;
  #L39e1be.  call temp:= `getChronology`(v6) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L39e1c4.  v6:= temp @kind object;
  #L39e1c6.  call temp:= `withUTC`(v6) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e1cc.  v1:= temp @kind object;
  #L39e1ce.  v4.`org.joda.time.LocalDateTime.iChronology` @type ^`org.joda.time.Chronology` := v1 @kind object;
  #L39e1d2.  call temp:= `localDateOptionalTimeParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.localDateOptionalTimeParser:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L39e1d8.  v1:= temp @kind object;
  #L39e1da.  call temp:= `getPartialValues`(v0, v4, v5, v6, v1) @signature `Lorg/joda/time/convert/PartialConverter;.getPartialValues:(Lorg/joda/time/ReadablePartial;Ljava/lang/Object;Lorg/joda/time/Chronology;Lorg/joda/time/format/DateTimeFormatter;)[I` @kind interface;
  #L39e1e0.  v5:= temp @kind object;
  #L39e1e2.  v6:= v4.`org.joda.time.LocalDateTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39e1e6.  v0:= 0I;
  #L39e1e8.  v0:= v5[v0];
  #L39e1ec.  v1:= 1I;
  #L39e1ee.  v1:= v5[v1];
  #L39e1f2.  v2:= 2I;
  #L39e1f4.  v2:= v5[v2];
  #L39e1f8.  v3:= 3I;
  #L39e1fa.  v5:= v5[v3];
  #L39e1fe.  call temp:= `getDateTimeMillis`(v6, v0, v1, v2, v5) @signature `Lorg/joda/time/Chronology;.getDateTimeMillis:(IIII)J` @kind virtual;
  #L39e204.  v5:= temp @kind wide;
  #L39e206.  v4.`org.joda.time.LocalDateTime.iLocalMillis` @type ^`long` := v5 @kind wide;
  #L39e20a.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDateTime` v4 @kind this, `java.lang.Object` v5 @kind object, `org.joda.time.DateTimeZone` v6 @kind object) @signature `Lorg/joda/time/LocalDateTime;.<init>:(Ljava/lang/Object;Lorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39e21c.  call `<init>`(v4) @signature `Lorg/joda/time/base/BaseLocal;.<init>:()V` @kind direct;
  #L39e222.  call temp:= `getInstance`() @signature `Lorg/joda/time/convert/ConverterManager;.getInstance:()Lorg/joda/time/convert/ConverterManager;` @kind static;
  #L39e228.  v0:= temp @kind object;
  #L39e22a.  call temp:= `getPartialConverter`(v0, v5) @signature `Lorg/joda/time/convert/ConverterManager;.getPartialConverter:(Ljava/lang/Object;)Lorg/joda/time/convert/PartialConverter;` @kind virtual;
  #L39e230.  v0:= temp @kind object;
  #L39e232.  call temp:= `getChronology`(v0, v5, v6) @signature `Lorg/joda/time/convert/PartialConverter;.getChronology:(Ljava/lang/Object;Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind interface;
  #L39e238.  v6:= temp @kind object;
  #L39e23a.  call temp:= `getChronology`(v6) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L39e240.  v6:= temp @kind object;
  #L39e242.  call temp:= `withUTC`(v6) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e248.  v1:= temp @kind object;
  #L39e24a.  v4.`org.joda.time.LocalDateTime.iChronology` @type ^`org.joda.time.Chronology` := v1 @kind object;
  #L39e24e.  call temp:= `localDateOptionalTimeParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.localDateOptionalTimeParser:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L39e254.  v1:= temp @kind object;
  #L39e256.  call temp:= `getPartialValues`(v0, v4, v5, v6, v1) @signature `Lorg/joda/time/convert/PartialConverter;.getPartialValues:(Lorg/joda/time/ReadablePartial;Ljava/lang/Object;Lorg/joda/time/Chronology;Lorg/joda/time/format/DateTimeFormatter;)[I` @kind interface;
  #L39e25c.  v5:= temp @kind object;
  #L39e25e.  v6:= v4.`org.joda.time.LocalDateTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39e262.  v0:= 0I;
  #L39e264.  v0:= v5[v0];
  #L39e268.  v1:= 1I;
  #L39e26a.  v1:= v5[v1];
  #L39e26e.  v2:= 2I;
  #L39e270.  v2:= v5[v2];
  #L39e274.  v3:= 3I;
  #L39e276.  v5:= v5[v3];
  #L39e27a.  call temp:= `getDateTimeMillis`(v6, v0, v1, v2, v5) @signature `Lorg/joda/time/Chronology;.getDateTimeMillis:(IIII)J` @kind virtual;
  #L39e280.  v5:= temp @kind wide;
  #L39e282.  v4.`org.joda.time.LocalDateTime.iLocalMillis` @type ^`long` := v5 @kind wide;
  #L39e286.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDateTime` v2 @kind this, `org.joda.time.Chronology` v3 @kind object) @signature `Lorg/joda/time/LocalDateTime;.<init>:(Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L39e31c.  call temp:= `currentTimeMillis`() @signature `Lorg/joda/time/DateTimeUtils;.currentTimeMillis:()J` @kind static;
  #L39e322.  v0:= temp @kind wide;
  #L39e324.  call `<init>`(v2, v0, v3) @signature `Lorg/joda/time/LocalDateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39e32a.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDateTime` v2 @kind this, `org.joda.time.DateTimeZone` v3 @kind object) @signature `Lorg/joda/time/LocalDateTime;.<init>:(Lorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L39e33c.  call temp:= `currentTimeMillis`() @signature `Lorg/joda/time/DateTimeUtils;.currentTimeMillis:()J` @kind static;
  #L39e342.  v0:= temp @kind wide;
  #L39e344.  call temp:= `getInstance`(v3) @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L39e34a.  v3:= temp @kind object;
  #L39e34c.  call `<init>`(v2, v0, v3) @signature `Lorg/joda/time/LocalDateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39e352.  return @kind void;
}
procedure `java.util.Date` `correctDstTransition`(`org.joda.time.LocalDateTime` v5 @kind this, `java.util.Date` v6 @kind object, `java.util.TimeZone` v7 @kind object) @signature `Lorg/joda/time/LocalDateTime;.correctDstTransition:(Ljava/util/Date;Ljava/util/TimeZone;)Ljava/util/Date;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L39cd1c.  call temp:= `getInstance`(v7) @signature `Ljava/util/Calendar;.getInstance:(Ljava/util/TimeZone;)Ljava/util/Calendar;` @kind static;
  #L39cd22.  v0:= temp @kind object;
  #L39cd24.  call `setTime`(v0, v6) @signature `Ljava/util/Calendar;.setTime:(Ljava/util/Date;)V` @kind virtual;
  #L39cd2a.  call temp:= `fromCalendarFields`(v0) @signature `Lorg/joda/time/LocalDateTime;.fromCalendarFields:(Ljava/util/Calendar;)Lorg/joda/time/LocalDateTime;` @kind static;
  #L39cd30.  v6:= temp @kind object;
  #L39cd32.  call temp:= `isBefore`(v6, v5) @signature `Lorg/joda/time/base/AbstractPartial;.isBefore:(Lorg/joda/time/ReadablePartial;)Z` @kind virtual;
  #L39cd38.  v1:= temp;
  #L39cd3a.  if v1 == 0 then goto L39cda6;
  #L39cd3e.  call temp:= `isBefore`(v6, v5) @signature `Lorg/joda/time/base/AbstractPartial;.isBefore:(Lorg/joda/time/ReadablePartial;)Z` @kind virtual;
  #L39cd44.  v7:= temp;
  #L39cd46.  if v7 == 0 then goto L39cd6a;
  #L39cd4a.  call temp:= `getTimeInMillis`(v0) @signature `Ljava/util/Calendar;.getTimeInMillis:()J` @kind virtual;
  #L39cd50.  v6:= temp @kind wide;
  #L39cd52.  v1:= 60000L;
  #L39cd58.  v6:= v6 + v1 @kind long;
  #L39cd5a.  call `setTimeInMillis`(v0, v6) @signature `Ljava/util/Calendar;.setTimeInMillis:(J)V` @kind virtual;
  #L39cd60.  call temp:= `fromCalendarFields`(v0) @signature `Lorg/joda/time/LocalDateTime;.fromCalendarFields:(Ljava/util/Calendar;)Lorg/joda/time/LocalDateTime;` @kind static;
  #L39cd66.  v6:= temp @kind object;
  #L39cd68.  goto L39cd3e;
  #L39cd6a.  call temp:= `isBefore`(v6, v5) @signature `Lorg/joda/time/base/AbstractPartial;.isBefore:(Lorg/joda/time/ReadablePartial;)Z` @kind virtual;
  #L39cd70.  v6:= temp;
  #L39cd72.  v1:= 1000L;
  #L39cd76.  if v6 != 0 then goto L39cd94;
  #L39cd7a.  call temp:= `getTimeInMillis`(v0) @signature `Ljava/util/Calendar;.getTimeInMillis:()J` @kind virtual;
  #L39cd80.  v6:= temp @kind wide;
  #L39cd82.  v6:= v6 - v1 @kind long;
  #L39cd84.  call `setTimeInMillis`(v0, v6) @signature `Ljava/util/Calendar;.setTimeInMillis:(J)V` @kind virtual;
  #L39cd8a.  call temp:= `fromCalendarFields`(v0) @signature `Lorg/joda/time/LocalDateTime;.fromCalendarFields:(Ljava/util/Calendar;)Lorg/joda/time/LocalDateTime;` @kind static;
  #L39cd90.  v6:= temp @kind object;
  #L39cd92.  goto L39cd6a;
  #L39cd94.  call temp:= `getTimeInMillis`(v0) @signature `Ljava/util/Calendar;.getTimeInMillis:()J` @kind virtual;
  #L39cd9a.  v6:= temp @kind wide;
  #L39cd9c.  v6:= v6 + v1 @kind long;
  #L39cd9e.  call `setTimeInMillis`(v0, v6) @signature `Ljava/util/Calendar;.setTimeInMillis:(J)V` @kind virtual;
  #L39cda4.  goto L39cdea;
  #L39cda6.  call temp:= `equals`(v6, v5) @signature `Lorg/joda/time/LocalDateTime;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39cdac.  v6:= temp;
  #L39cdae.  if v6 == 0 then goto L39cdea;
  #L39cdb2.  call temp:= `getInstance`(v7) @signature `Ljava/util/Calendar;.getInstance:(Ljava/util/TimeZone;)Ljava/util/Calendar;` @kind static;
  #L39cdb8.  v6:= temp @kind object;
  #L39cdba.  call temp:= `getTimeInMillis`(v0) @signature `Ljava/util/Calendar;.getTimeInMillis:()J` @kind virtual;
  #L39cdc0.  v1:= temp @kind wide;
  #L39cdc2.  call temp:= `getDSTSavings`(v7) @signature `Ljava/util/TimeZone;.getDSTSavings:()I` @kind virtual;
  #L39cdc8.  v7:= temp;
  #L39cdca.  v3:= (`long`) v7 @kind i2l;
  #L39cdcc.  v1:= v1 - v3 @kind long;
  #L39cdce.  call `setTimeInMillis`(v6, v1) @signature `Ljava/util/Calendar;.setTimeInMillis:(J)V` @kind virtual;
  #L39cdd4.  call temp:= `fromCalendarFields`(v6) @signature `Lorg/joda/time/LocalDateTime;.fromCalendarFields:(Ljava/util/Calendar;)Lorg/joda/time/LocalDateTime;` @kind static;
  #L39cdda.  v7:= temp @kind object;
  #L39cddc.  call temp:= `equals`(v7, v5) @signature `Lorg/joda/time/LocalDateTime;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39cde2.  v7:= temp;
  #L39cde4.  if v7 == 0 then goto L39cdea;
  #L39cde8.  v0:= v6 @kind object;
  #L39cdea.  call temp:= `getTime`(v0) @signature `Ljava/util/Calendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L39cdf0.  v6:= temp @kind object;
  #L39cdf2.  return v6 @kind object;
}
procedure `org.joda.time.LocalDateTime` `fromCalendarFields`(`java.util.Calendar` v12 @kind object) @signature `Lorg/joda/time/LocalDateTime;.fromCalendarFields:(Ljava/util/Calendar;)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L39d06c.  if v12 == 0 then goto L39d0e6;
  #L39d070.  v0:= 0I;
  #L39d072.  call temp:= `get`(v12, v0) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L39d078.  v0:= temp;
  #L39d07a.  v1:= 1I;
  #L39d07c.  call temp:= `get`(v12, v1) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L39d082.  v2:= temp;
  #L39d084.  v11:= new `org.joda.time.LocalDateTime`;
  #L39d088.  if v0 != v1 then goto L39d08e;
  #L39d08c.  goto L39d092;
  #L39d08e.  v2:= v2 - 1;
  #L39d092.  v4:= v2;
  #L39d094.  v0:= 2I;
  #L39d096.  call temp:= `get`(v12, v0) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L39d09c.  v0:= temp;
  #L39d09e.  v5:= v0 + 1;
  #L39d0a2.  v0:= 5I;
  #L39d0a4.  call temp:= `get`(v12, v0) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L39d0aa.  v6:= temp;
  #L39d0ac.  v0:= 11I;
  #L39d0b0.  call temp:= `get`(v12, v0) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L39d0b6.  v7:= temp;
  #L39d0b8.  v0:= 12I;
  #L39d0bc.  call temp:= `get`(v12, v0) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L39d0c2.  v8:= temp;
  #L39d0c4.  v0:= 13I;
  #L39d0c8.  call temp:= `get`(v12, v0) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L39d0ce.  v9:= temp;
  #L39d0d0.  v0:= 14I;
  #L39d0d4.  call temp:= `get`(v12, v0) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L39d0da.  v10:= temp;
  #L39d0dc.  v3:= v11 @kind object;
  #L39d0de.  call `<init>`(v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lorg/joda/time/LocalDateTime;.<init>:(IIIIIII)V` @kind direct;
  #L39d0e4.  return v11 @kind object;
  #L39d0e6.  v12:= new `java.lang.IllegalArgumentException`;
  #L39d0ea.  v0:= "The calendar must not be null" @kind object;
  #L39d0ee.  call `<init>`(v12, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39d0f4.  throw v12;
}
procedure `org.joda.time.LocalDateTime` `fromDateFields`(`java.util.Date` v13 @kind object) @signature `Lorg/joda/time/LocalDateTime;.fromDateFields:(Ljava/util/Date;)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L39d108.  if v13 == 0 then goto L39d198;
  #L39d10c.  call temp:= `getTime`(v13) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L39d112.  v0:= temp @kind wide;
  #L39d114.  v2:= 0L;
  #L39d118.  v4:= lcmp(v0, v2);
  #L39d11c.  if v4 >= 0 then goto L39d13a;
  #L39d120.  v0:= new `java.util.GregorianCalendar`;
  #L39d124.  call `<init>`(v0) @signature `Ljava/util/GregorianCalendar;.<init>:()V` @kind direct;
  #L39d12a.  call `setTime`(v0, v13) @signature `Ljava/util/GregorianCalendar;.setTime:(Ljava/util/Date;)V` @kind virtual;
  #L39d130.  call temp:= `fromCalendarFields`(v0) @signature `Lorg/joda/time/LocalDateTime;.fromCalendarFields:(Ljava/util/Calendar;)Lorg/joda/time/LocalDateTime;` @kind static;
  #L39d136.  v13:= temp @kind object;
  #L39d138.  return v13 @kind object;
  #L39d13a.  v8:= new `org.joda.time.LocalDateTime`;
  #L39d13e.  call temp:= `getYear`(v13) @signature `Ljava/util/Date;.getYear:()I` @kind virtual;
  #L39d144.  v0:= temp;
  #L39d146.  v1:= v0 + 1900;
  #L39d14a.  call temp:= `getMonth`(v13) @signature `Ljava/util/Date;.getMonth:()I` @kind virtual;
  #L39d150.  v0:= temp;
  #L39d152.  v2:= v0 + 1;
  #L39d156.  call temp:= `getDate`(v13) @signature `Ljava/util/Date;.getDate:()I` @kind virtual;
  #L39d15c.  v3:= temp;
  #L39d15e.  call temp:= `getHours`(v13) @signature `Ljava/util/Date;.getHours:()I` @kind virtual;
  #L39d164.  v4:= temp;
  #L39d166.  call temp:= `getMinutes`(v13) @signature `Ljava/util/Date;.getMinutes:()I` @kind virtual;
  #L39d16c.  v5:= temp;
  #L39d16e.  call temp:= `getSeconds`(v13) @signature `Ljava/util/Date;.getSeconds:()I` @kind virtual;
  #L39d174.  v6:= temp;
  #L39d176.  call temp:= `getTime`(v13) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L39d17c.  v9:= temp @kind wide;
  #L39d17e.  v11:= 1000L;
  #L39d182.  v9:= v9 %% v11 @kind long;
  #L39d184.  v13:= (`int`) v9 @kind l2i;
  #L39d186.  v13:= v13 + 1000;
  #L39d18a.  v7:= v13 %% 1000;
  #L39d18e.  v0:= v8 @kind object;
  #L39d190.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lorg/joda/time/LocalDateTime;.<init>:(IIIIIII)V` @kind direct;
  #L39d196.  return v8 @kind object;
  #L39d198.  v13:= new `java.lang.IllegalArgumentException`;
  #L39d19c.  v0:= "The date must not be null" @kind object;
  #L39d1a0.  call `<init>`(v13, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39d1a6.  throw v13;
}
procedure `org.joda.time.LocalDateTime` `now`() @signature `Lorg/joda/time/LocalDateTime;.now:()Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39d3f0.  v0:= new `org.joda.time.LocalDateTime`;
  #L39d3f4.  call `<init>`(v0) @signature `Lorg/joda/time/LocalDateTime;.<init>:()V` @kind direct;
  #L39d3fa.  return v0 @kind object;
}
procedure `org.joda.time.LocalDateTime` `now`(`org.joda.time.Chronology` v1 @kind object) @signature `Lorg/joda/time/LocalDateTime;.now:(Lorg/joda/time/Chronology;)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39d40c.  if v1 == 0 then goto L39d41c;
  #L39d410.  v0:= new `org.joda.time.LocalDateTime`;
  #L39d414.  call `<init>`(v0, v1) @signature `Lorg/joda/time/LocalDateTime;.<init>:(Lorg/joda/time/Chronology;)V` @kind direct;
  #L39d41a.  return v0 @kind object;
  #L39d41c.  v1:= new `java.lang.NullPointerException`;
  #L39d420.  v0:= "Chronology must not be null" @kind object;
  #L39d424.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39d42a.  throw v1;
}
procedure `org.joda.time.LocalDateTime` `now`(`org.joda.time.DateTimeZone` v1 @kind object) @signature `Lorg/joda/time/LocalDateTime;.now:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39d43c.  if v1 == 0 then goto L39d44c;
  #L39d440.  v0:= new `org.joda.time.LocalDateTime`;
  #L39d444.  call `<init>`(v0, v1) @signature `Lorg/joda/time/LocalDateTime;.<init>:(Lorg/joda/time/DateTimeZone;)V` @kind direct;
  #L39d44a.  return v0 @kind object;
  #L39d44c.  v1:= new `java.lang.NullPointerException`;
  #L39d450.  v0:= "Zone must not be null" @kind object;
  #L39d454.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39d45a.  throw v1;
}
procedure `org.joda.time.LocalDateTime` `parse`(`java.lang.String` v1 @kind object) @signature `Lorg/joda/time/LocalDateTime;.parse:(Ljava/lang/String;)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39d46c.  call temp:= `localDateOptionalTimeParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.localDateOptionalTimeParser:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L39d472.  v0:= temp @kind object;
  #L39d474.  call temp:= `parse`(v1, v0) @signature `Lorg/joda/time/LocalDateTime;.parse:(Ljava/lang/String;Lorg/joda/time/format/DateTimeFormatter;)Lorg/joda/time/LocalDateTime;` @kind static;
  #L39d47a.  v1:= temp @kind object;
  #L39d47c.  return v1 @kind object;
}
procedure `org.joda.time.LocalDateTime` `parse`(`java.lang.String` v0 @kind object, `org.joda.time.format.DateTimeFormatter` v1 @kind object) @signature `Lorg/joda/time/LocalDateTime;.parse:(Ljava/lang/String;Lorg/joda/time/format/DateTimeFormatter;)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L39d490.  call temp:= `parseLocalDateTime`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatter;.parseLocalDateTime:(Ljava/lang/String;)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d496.  v0:= temp @kind object;
  #L39d498.  return v0 @kind object;
}
procedure `java.lang.Object` `readResolve`(`org.joda.time.LocalDateTime` v4 @kind this) @signature `Lorg/joda/time/LocalDateTime;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39cc28.  v0:= v4.`org.joda.time.LocalDateTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39cc2c.  if v0 != 0 then goto L39cc48;
  #L39cc30.  v0:= new `org.joda.time.LocalDateTime`;
  #L39cc34.  v1:= v4.`org.joda.time.LocalDateTime.iLocalMillis` @type ^`long` @kind wide;
  #L39cc38.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L39cc3e.  v3:= temp @kind object;
  #L39cc40.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/LocalDateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39cc46.  return v0 @kind object;
  #L39cc48.  v1:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L39cc4c.  call temp:= `getZone`(v0) @signature `Lorg/joda/time/Chronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L39cc52.  v0:= temp @kind object;
  #L39cc54.  call temp:= `equals`(v1, v0) @signature `Lorg/joda/time/DateTimeZone;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39cc5a.  v0:= temp;
  #L39cc5c.  if v0 != 0 then goto L39cc7c;
  #L39cc60.  v0:= new `org.joda.time.LocalDateTime`;
  #L39cc64.  v1:= v4.`org.joda.time.LocalDateTime.iLocalMillis` @type ^`long` @kind wide;
  #L39cc68.  v3:= v4.`org.joda.time.LocalDateTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39cc6c.  call temp:= `withUTC`(v3) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39cc72.  v3:= temp @kind object;
  #L39cc74.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/LocalDateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39cc7a.  return v0 @kind object;
  #L39cc7c.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime$Property` `centuryOfEra`(`org.joda.time.LocalDateTime` v2 @kind this) @signature `Lorg/joda/time/LocalDateTime;.centuryOfEra:()Lorg/joda/time/LocalDateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39dd08.  v0:= new `org.joda.time.LocalDateTime$Property`;
  #L39dd0c.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39dd12.  v1:= temp @kind object;
  #L39dd14.  call temp:= `centuryOfEra`(v1) @signature `Lorg/joda/time/Chronology;.centuryOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39dd1a.  v1:= temp @kind object;
  #L39dd1c.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDateTime$Property;.<init>:(Lorg/joda/time/LocalDateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39dd22.  return v0 @kind object;
}
procedure `int` `compareTo`(`org.joda.time.LocalDateTime` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/joda/time/LocalDateTime;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L39c728.  v1:= (`org.joda.time.ReadablePartial`) v1 @kind object;
  #L39c72c.  call temp:= `compareTo`(v0, v1) @signature `Lorg/joda/time/LocalDateTime;.compareTo:(Lorg/joda/time/ReadablePartial;)I` @kind virtual;
  #L39c732.  v1:= temp;
  #L39c734.  return v1;
}
procedure `int` `compareTo`(`org.joda.time.LocalDateTime` v6 @kind this, `org.joda.time.ReadablePartial` v7 @kind object) @signature `Lorg/joda/time/LocalDateTime;.compareTo:(Lorg/joda/time/ReadablePartial;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39c748.  v0:= 0I;
  #L39c74a.  if v6 != v7 then goto L39c750;
  #L39c74e.  return v0;
  #L39c750.  v1:= instanceof @variable v7 @type ^`org.joda.time.LocalDateTime` @kind boolean;
  #L39c754.  if v1 == 0 then goto L39c794;
  #L39c758.  v1:= v7 @kind object;
  #L39c75a.  v1:= (`org.joda.time.LocalDateTime`) v1 @kind object;
  #L39c75e.  v2:= v6.`org.joda.time.LocalDateTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39c762.  v3:= v1.`org.joda.time.LocalDateTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39c766.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39c76c.  v2:= temp;
  #L39c76e.  if v2 == 0 then goto L39c794;
  #L39c772.  v2:= v6.`org.joda.time.LocalDateTime.iLocalMillis` @type ^`long` @kind wide;
  #L39c776.  v4:= v1.`org.joda.time.LocalDateTime.iLocalMillis` @type ^`long` @kind wide;
  #L39c77a.  v7:= lcmp(v2, v4);
  #L39c77e.  if v7 >= 0 then goto L39c786;
  #L39c782.  v0:= -1I;
  #L39c784.  goto L39c792;
  #L39c786.  v7:= lcmp(v2, v4);
  #L39c78a.  if v7 != 0 then goto L39c790;
  #L39c78e.  goto L39c792;
  #L39c790.  v0:= 1I;
  #L39c792.  return v0;
  #L39c794.  call temp:= `compareTo`(v6, v7) @signature `Lorg/joda/time/base/AbstractPartial;.compareTo:(Lorg/joda/time/ReadablePartial;)I` @kind super;
  #L39c79a.  v7:= temp;
  #L39c79c.  return v7;
}
procedure `org.joda.time.LocalDateTime$Property` `dayOfMonth`(`org.joda.time.LocalDateTime` v2 @kind this) @signature `Lorg/joda/time/LocalDateTime;.dayOfMonth:()Lorg/joda/time/LocalDateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39dd34.  v0:= new `org.joda.time.LocalDateTime$Property`;
  #L39dd38.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39dd3e.  v1:= temp @kind object;
  #L39dd40.  call temp:= `dayOfMonth`(v1) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39dd46.  v1:= temp @kind object;
  #L39dd48.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDateTime$Property;.<init>:(Lorg/joda/time/LocalDateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39dd4e.  return v0 @kind object;
}
procedure `org.joda.time.LocalDateTime$Property` `dayOfWeek`(`org.joda.time.LocalDateTime` v2 @kind this) @signature `Lorg/joda/time/LocalDateTime;.dayOfWeek:()Lorg/joda/time/LocalDateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39dd60.  v0:= new `org.joda.time.LocalDateTime$Property`;
  #L39dd64.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39dd6a.  v1:= temp @kind object;
  #L39dd6c.  call temp:= `dayOfWeek`(v1) @signature `Lorg/joda/time/Chronology;.dayOfWeek:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39dd72.  v1:= temp @kind object;
  #L39dd74.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDateTime$Property;.<init>:(Lorg/joda/time/LocalDateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39dd7a.  return v0 @kind object;
}
procedure `org.joda.time.LocalDateTime$Property` `dayOfYear`(`org.joda.time.LocalDateTime` v2 @kind this) @signature `Lorg/joda/time/LocalDateTime;.dayOfYear:()Lorg/joda/time/LocalDateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39dd8c.  v0:= new `org.joda.time.LocalDateTime$Property`;
  #L39dd90.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39dd96.  v1:= temp @kind object;
  #L39dd98.  call temp:= `dayOfYear`(v1) @signature `Lorg/joda/time/Chronology;.dayOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39dd9e.  v1:= temp @kind object;
  #L39dda0.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDateTime$Property;.<init>:(Lorg/joda/time/LocalDateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39dda6.  return v0 @kind object;
}
procedure `boolean` `equals`(`org.joda.time.LocalDateTime` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lorg/joda/time/LocalDateTime;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39c664.  v0:= 1I;
  #L39c666.  if v6 != v7 then goto L39c66c;
  #L39c66a.  return v0;
  #L39c66c.  v1:= instanceof @variable v7 @type ^`org.joda.time.LocalDateTime` @kind boolean;
  #L39c670.  if v1 == 0 then goto L39c6a4;
  #L39c674.  v1:= v7 @kind object;
  #L39c676.  v1:= (`org.joda.time.LocalDateTime`) v1 @kind object;
  #L39c67a.  v2:= v6.`org.joda.time.LocalDateTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39c67e.  v3:= v1.`org.joda.time.LocalDateTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39c682.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39c688.  v2:= temp;
  #L39c68a.  if v2 == 0 then goto L39c6a4;
  #L39c68e.  v2:= v6.`org.joda.time.LocalDateTime.iLocalMillis` @type ^`long` @kind wide;
  #L39c692.  v4:= v1.`org.joda.time.LocalDateTime.iLocalMillis` @type ^`long` @kind wide;
  #L39c696.  v7:= lcmp(v2, v4);
  #L39c69a.  if v7 != 0 then goto L39c6a0;
  #L39c69e.  goto L39c6a2;
  #L39c6a0.  v0:= 0I;
  #L39c6a2.  return v0;
  #L39c6a4.  call temp:= `equals`(v6, v7) @signature `Lorg/joda/time/base/AbstractPartial;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L39c6aa.  v7:= temp;
  #L39c6ac.  return v7;
}
procedure `org.joda.time.LocalDateTime$Property` `era`(`org.joda.time.LocalDateTime` v2 @kind this) @signature `Lorg/joda/time/LocalDateTime;.era:()Lorg/joda/time/LocalDateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39ddb8.  v0:= new `org.joda.time.LocalDateTime$Property`;
  #L39ddbc.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39ddc2.  v1:= temp @kind object;
  #L39ddc4.  call temp:= `era`(v1) @signature `Lorg/joda/time/Chronology;.era:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39ddca.  v1:= temp @kind object;
  #L39ddcc.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDateTime$Property;.<init>:(Lorg/joda/time/LocalDateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39ddd2.  return v0 @kind object;
}
procedure `int` `get`(`org.joda.time.LocalDateTime` v2 @kind this, `org.joda.time.DateTimeFieldType` v3 @kind object) @signature `Lorg/joda/time/LocalDateTime;.get:(Lorg/joda/time/DateTimeFieldType;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39c7b0.  if v3 == 0 then goto L39c7d6;
  #L39c7b4.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39c7ba.  v0:= temp @kind object;
  #L39c7bc.  call temp:= `getField`(v3, v0) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39c7c2.  v3:= temp @kind object;
  #L39c7c4.  call temp:= `getLocalMillis`(v2) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39c7ca.  v0:= temp @kind wide;
  #L39c7cc.  call temp:= `get`(v3, v0) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39c7d2.  v3:= temp;
  #L39c7d4.  return v3;
  #L39c7d6.  v3:= new `java.lang.IllegalArgumentException`;
  #L39c7da.  v0:= "The DateTimeFieldType must not be null" @kind object;
  #L39c7de.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39c7e4.  throw v3;
}
procedure `int` `getCenturyOfEra`(`org.joda.time.LocalDateTime` v3 @kind this) @signature `Lorg/joda/time/LocalDateTime;.getCenturyOfEra:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39c7f8.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39c7fe.  v0:= temp @kind object;
  #L39c800.  call temp:= `centuryOfEra`(v0) @signature `Lorg/joda/time/Chronology;.centuryOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39c806.  v0:= temp @kind object;
  #L39c808.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39c80e.  v1:= temp @kind wide;
  #L39c810.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39c816.  v0:= temp;
  #L39c818.  return v0;
}
procedure `org.joda.time.Chronology` `getChronology`(`org.joda.time.LocalDateTime` v1 @kind this) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39cf24.  v0:= v1.`org.joda.time.LocalDateTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39cf28.  return v0 @kind object;
}
procedure `int` `getDayOfMonth`(`org.joda.time.LocalDateTime` v3 @kind this) @signature `Lorg/joda/time/LocalDateTime;.getDayOfMonth:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39c82c.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39c832.  v0:= temp @kind object;
  #L39c834.  call temp:= `dayOfMonth`(v0) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39c83a.  v0:= temp @kind object;
  #L39c83c.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39c842.  v1:= temp @kind wide;
  #L39c844.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39c84a.  v0:= temp;
  #L39c84c.  return v0;
}
procedure `int` `getDayOfWeek`(`org.joda.time.LocalDateTime` v3 @kind this) @signature `Lorg/joda/time/LocalDateTime;.getDayOfWeek:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39c860.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39c866.  v0:= temp @kind object;
  #L39c868.  call temp:= `dayOfWeek`(v0) @signature `Lorg/joda/time/Chronology;.dayOfWeek:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39c86e.  v0:= temp @kind object;
  #L39c870.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39c876.  v1:= temp @kind wide;
  #L39c878.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39c87e.  v0:= temp;
  #L39c880.  return v0;
}
procedure `int` `getDayOfYear`(`org.joda.time.LocalDateTime` v3 @kind this) @signature `Lorg/joda/time/LocalDateTime;.getDayOfYear:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39c894.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39c89a.  v0:= temp @kind object;
  #L39c89c.  call temp:= `dayOfYear`(v0) @signature `Lorg/joda/time/Chronology;.dayOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39c8a2.  v0:= temp @kind object;
  #L39c8a4.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39c8aa.  v1:= temp @kind wide;
  #L39c8ac.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39c8b2.  v0:= temp;
  #L39c8b4.  return v0;
}
procedure `int` `getEra`(`org.joda.time.LocalDateTime` v3 @kind this) @signature `Lorg/joda/time/LocalDateTime;.getEra:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39c8c8.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39c8ce.  v0:= temp @kind object;
  #L39c8d0.  call temp:= `era`(v0) @signature `Lorg/joda/time/Chronology;.era:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39c8d6.  v0:= temp @kind object;
  #L39c8d8.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39c8de.  v1:= temp @kind wide;
  #L39c8e0.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39c8e6.  v0:= temp;
  #L39c8e8.  return v0;
}
procedure `org.joda.time.DateTimeField` `getField`(`org.joda.time.LocalDateTime` v2 @kind this, `int` v3 , `org.joda.time.Chronology` v4 @kind object) @signature `Lorg/joda/time/LocalDateTime;.getField:(ILorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L39cfc4.  if v3 == 0 then goto L39d026;
  #L39cfc8.  v0:= 1I;
  #L39cfca.  if v3 == v0 then goto L39d01c;
  #L39cfce.  v0:= 2I;
  #L39cfd0.  if v3 == v0 then goto L39d012;
  #L39cfd4.  v0:= 3I;
  #L39cfd6.  if v3 != v0 then goto L39cfe4;
  #L39cfda.  call temp:= `millisOfDay`(v4) @signature `Lorg/joda/time/Chronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39cfe0.  v3:= temp @kind object;
  #L39cfe2.  return v3 @kind object;
  #L39cfe4.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L39cfe8.  v0:= new `java.lang.StringBuilder`;
  #L39cfec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39cff2.  v1:= "Invalid index: " @kind object;
  #L39cff6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39cffc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L39d002.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39d008.  v3:= temp @kind object;
  #L39d00a.  call `<init>`(v4, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39d010.  throw v4;
  #L39d012.  call temp:= `dayOfMonth`(v4) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39d018.  v3:= temp @kind object;
  #L39d01a.  return v3 @kind object;
  #L39d01c.  call temp:= `monthOfYear`(v4) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39d022.  v3:= temp @kind object;
  #L39d024.  return v3 @kind object;
  #L39d026.  call temp:= `year`(v4) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39d02c.  v3:= temp @kind object;
  #L39d02e.  return v3 @kind object;
}
procedure `int` `getHourOfDay`(`org.joda.time.LocalDateTime` v3 @kind this) @signature `Lorg/joda/time/LocalDateTime;.getHourOfDay:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39c8fc.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39c902.  v0:= temp @kind object;
  #L39c904.  call temp:= `hourOfDay`(v0) @signature `Lorg/joda/time/Chronology;.hourOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39c90a.  v0:= temp @kind object;
  #L39c90c.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39c912.  v1:= temp @kind wide;
  #L39c914.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39c91a.  v0:= temp;
  #L39c91c.  return v0;
}
procedure `long` `getLocalMillis`(`org.joda.time.LocalDateTime` v2 @kind this) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L39cf0c.  v0:= v2.`org.joda.time.LocalDateTime.iLocalMillis` @type ^`long` @kind wide;
  #L39cf10.  return v0 @kind wide;
}
procedure `int` `getMillisOfDay`(`org.joda.time.LocalDateTime` v3 @kind this) @signature `Lorg/joda/time/LocalDateTime;.getMillisOfDay:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39c930.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39c936.  v0:= temp @kind object;
  #L39c938.  call temp:= `millisOfDay`(v0) @signature `Lorg/joda/time/Chronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39c93e.  v0:= temp @kind object;
  #L39c940.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39c946.  v1:= temp @kind wide;
  #L39c948.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39c94e.  v0:= temp;
  #L39c950.  return v0;
}
procedure `int` `getMillisOfSecond`(`org.joda.time.LocalDateTime` v3 @kind this) @signature `Lorg/joda/time/LocalDateTime;.getMillisOfSecond:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39c964.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39c96a.  v0:= temp @kind object;
  #L39c96c.  call temp:= `millisOfSecond`(v0) @signature `Lorg/joda/time/Chronology;.millisOfSecond:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39c972.  v0:= temp @kind object;
  #L39c974.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39c97a.  v1:= temp @kind wide;
  #L39c97c.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39c982.  v0:= temp;
  #L39c984.  return v0;
}
procedure `int` `getMinuteOfHour`(`org.joda.time.LocalDateTime` v3 @kind this) @signature `Lorg/joda/time/LocalDateTime;.getMinuteOfHour:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39c998.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39c99e.  v0:= temp @kind object;
  #L39c9a0.  call temp:= `minuteOfHour`(v0) @signature `Lorg/joda/time/Chronology;.minuteOfHour:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39c9a6.  v0:= temp @kind object;
  #L39c9a8.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39c9ae.  v1:= temp @kind wide;
  #L39c9b0.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39c9b6.  v0:= temp;
  #L39c9b8.  return v0;
}
procedure `int` `getMonthOfYear`(`org.joda.time.LocalDateTime` v3 @kind this) @signature `Lorg/joda/time/LocalDateTime;.getMonthOfYear:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39c9cc.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39c9d2.  v0:= temp @kind object;
  #L39c9d4.  call temp:= `monthOfYear`(v0) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39c9da.  v0:= temp @kind object;
  #L39c9dc.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39c9e2.  v1:= temp @kind wide;
  #L39c9e4.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39c9ea.  v0:= temp;
  #L39c9ec.  return v0;
}
procedure `int` `getSecondOfMinute`(`org.joda.time.LocalDateTime` v3 @kind this) @signature `Lorg/joda/time/LocalDateTime;.getSecondOfMinute:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39ca00.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39ca06.  v0:= temp @kind object;
  #L39ca08.  call temp:= `secondOfMinute`(v0) @signature `Lorg/joda/time/Chronology;.secondOfMinute:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39ca0e.  v0:= temp @kind object;
  #L39ca10.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39ca16.  v1:= temp @kind wide;
  #L39ca18.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39ca1e.  v0:= temp;
  #L39ca20.  return v0;
}
procedure `int` `getValue`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.getValue:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39ca34.  if v4 == 0 then goto L39cade;
  #L39ca38.  v0:= 1I;
  #L39ca3a.  if v4 == v0 then goto L39cabc;
  #L39ca3e.  v0:= 2I;
  #L39ca40.  if v4 == v0 then goto L39ca9a;
  #L39ca44.  v0:= 3I;
  #L39ca46.  if v4 != v0 then goto L39ca6c;
  #L39ca4a.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39ca50.  v4:= temp @kind object;
  #L39ca52.  call temp:= `millisOfDay`(v4) @signature `Lorg/joda/time/Chronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39ca58.  v4:= temp @kind object;
  #L39ca5a.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39ca60.  v0:= temp @kind wide;
  #L39ca62.  call temp:= `get`(v4, v0) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39ca68.  v4:= temp;
  #L39ca6a.  return v4;
  #L39ca6c.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L39ca70.  v1:= new `java.lang.StringBuilder`;
  #L39ca74.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39ca7a.  v2:= "Invalid index: " @kind object;
  #L39ca7e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ca84.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L39ca8a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39ca90.  v4:= temp @kind object;
  #L39ca92.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39ca98.  throw v0;
  #L39ca9a.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39caa0.  v4:= temp @kind object;
  #L39caa2.  call temp:= `dayOfMonth`(v4) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39caa8.  v4:= temp @kind object;
  #L39caaa.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39cab0.  v0:= temp @kind wide;
  #L39cab2.  call temp:= `get`(v4, v0) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39cab8.  v4:= temp;
  #L39caba.  return v4;
  #L39cabc.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39cac2.  v4:= temp @kind object;
  #L39cac4.  call temp:= `monthOfYear`(v4) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39caca.  v4:= temp @kind object;
  #L39cacc.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39cad2.  v0:= temp @kind wide;
  #L39cad4.  call temp:= `get`(v4, v0) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39cada.  v4:= temp;
  #L39cadc.  return v4;
  #L39cade.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39cae4.  v4:= temp @kind object;
  #L39cae6.  call temp:= `year`(v4) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39caec.  v4:= temp @kind object;
  #L39caee.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39caf4.  v0:= temp @kind wide;
  #L39caf6.  call temp:= `get`(v4, v0) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39cafc.  v4:= temp;
  #L39cafe.  return v4;
}
procedure `int` `getWeekOfWeekyear`(`org.joda.time.LocalDateTime` v3 @kind this) @signature `Lorg/joda/time/LocalDateTime;.getWeekOfWeekyear:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39cb10.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39cb16.  v0:= temp @kind object;
  #L39cb18.  call temp:= `weekOfWeekyear`(v0) @signature `Lorg/joda/time/Chronology;.weekOfWeekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39cb1e.  v0:= temp @kind object;
  #L39cb20.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39cb26.  v1:= temp @kind wide;
  #L39cb28.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39cb2e.  v0:= temp;
  #L39cb30.  return v0;
}
procedure `int` `getWeekyear`(`org.joda.time.LocalDateTime` v3 @kind this) @signature `Lorg/joda/time/LocalDateTime;.getWeekyear:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39cb44.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39cb4a.  v0:= temp @kind object;
  #L39cb4c.  call temp:= `weekyear`(v0) @signature `Lorg/joda/time/Chronology;.weekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39cb52.  v0:= temp @kind object;
  #L39cb54.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39cb5a.  v1:= temp @kind wide;
  #L39cb5c.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39cb62.  v0:= temp;
  #L39cb64.  return v0;
}
procedure `int` `getYear`(`org.joda.time.LocalDateTime` v3 @kind this) @signature `Lorg/joda/time/LocalDateTime;.getYear:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39cb78.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39cb7e.  v0:= temp @kind object;
  #L39cb80.  call temp:= `year`(v0) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39cb86.  v0:= temp @kind object;
  #L39cb88.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39cb8e.  v1:= temp @kind wide;
  #L39cb90.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39cb96.  v0:= temp;
  #L39cb98.  return v0;
}
procedure `int` `getYearOfCentury`(`org.joda.time.LocalDateTime` v3 @kind this) @signature `Lorg/joda/time/LocalDateTime;.getYearOfCentury:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39cbac.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39cbb2.  v0:= temp @kind object;
  #L39cbb4.  call temp:= `yearOfCentury`(v0) @signature `Lorg/joda/time/Chronology;.yearOfCentury:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39cbba.  v0:= temp @kind object;
  #L39cbbc.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39cbc2.  v1:= temp @kind wide;
  #L39cbc4.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39cbca.  v0:= temp;
  #L39cbcc.  return v0;
}
procedure `int` `getYearOfEra`(`org.joda.time.LocalDateTime` v3 @kind this) @signature `Lorg/joda/time/LocalDateTime;.getYearOfEra:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39cbe0.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39cbe6.  v0:= temp @kind object;
  #L39cbe8.  call temp:= `yearOfEra`(v0) @signature `Lorg/joda/time/Chronology;.yearOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39cbee.  v0:= temp @kind object;
  #L39cbf0.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39cbf6.  v1:= temp @kind wide;
  #L39cbf8.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39cbfe.  v0:= temp;
  #L39cc00.  return v0;
}
procedure `org.joda.time.LocalDateTime$Property` `hourOfDay`(`org.joda.time.LocalDateTime` v2 @kind this) @signature `Lorg/joda/time/LocalDateTime;.hourOfDay:()Lorg/joda/time/LocalDateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39dde4.  v0:= new `org.joda.time.LocalDateTime$Property`;
  #L39dde8.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39ddee.  v1:= temp @kind object;
  #L39ddf0.  call temp:= `hourOfDay`(v1) @signature `Lorg/joda/time/Chronology;.hourOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39ddf6.  v1:= temp @kind object;
  #L39ddf8.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDateTime$Property;.<init>:(Lorg/joda/time/LocalDateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39ddfe.  return v0 @kind object;
}
procedure `boolean` `isSupported`(`org.joda.time.LocalDateTime` v1 @kind this, `org.joda.time.DateTimeFieldType` v2 @kind object) @signature `Lorg/joda/time/LocalDateTime;.isSupported:(Lorg/joda/time/DateTimeFieldType;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39c6c0.  if v2 != 0 then goto L39c6c8;
  #L39c6c4.  v2:= 0I;
  #L39c6c6.  return v2;
  #L39c6c8.  call temp:= `getChronology`(v1) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39c6ce.  v0:= temp @kind object;
  #L39c6d0.  call temp:= `getField`(v2, v0) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39c6d6.  v2:= temp @kind object;
  #L39c6d8.  call temp:= `isSupported`(v2) @signature `Lorg/joda/time/DateTimeField;.isSupported:()Z` @kind virtual;
  #L39c6de.  v2:= temp;
  #L39c6e0.  return v2;
}
procedure `boolean` `isSupported`(`org.joda.time.LocalDateTime` v1 @kind this, `org.joda.time.DurationFieldType` v2 @kind object) @signature `Lorg/joda/time/LocalDateTime;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39c6f4.  if v2 != 0 then goto L39c6fc;
  #L39c6f8.  v2:= 0I;
  #L39c6fa.  return v2;
  #L39c6fc.  call temp:= `getChronology`(v1) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39c702.  v0:= temp @kind object;
  #L39c704.  call temp:= `getField`(v2, v0) @signature `Lorg/joda/time/DurationFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;` @kind virtual;
  #L39c70a.  v2:= temp @kind object;
  #L39c70c.  call temp:= `isSupported`(v2) @signature `Lorg/joda/time/DurationField;.isSupported:()Z` @kind virtual;
  #L39c712.  v2:= temp;
  #L39c714.  return v2;
}
procedure `org.joda.time.LocalDateTime$Property` `millisOfDay`(`org.joda.time.LocalDateTime` v2 @kind this) @signature `Lorg/joda/time/LocalDateTime;.millisOfDay:()Lorg/joda/time/LocalDateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39de10.  v0:= new `org.joda.time.LocalDateTime$Property`;
  #L39de14.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39de1a.  v1:= temp @kind object;
  #L39de1c.  call temp:= `millisOfDay`(v1) @signature `Lorg/joda/time/Chronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39de22.  v1:= temp @kind object;
  #L39de24.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDateTime$Property;.<init>:(Lorg/joda/time/LocalDateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39de2a.  return v0 @kind object;
}
procedure `org.joda.time.LocalDateTime$Property` `millisOfSecond`(`org.joda.time.LocalDateTime` v2 @kind this) @signature `Lorg/joda/time/LocalDateTime;.millisOfSecond:()Lorg/joda/time/LocalDateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39de3c.  v0:= new `org.joda.time.LocalDateTime$Property`;
  #L39de40.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39de46.  v1:= temp @kind object;
  #L39de48.  call temp:= `millisOfSecond`(v1) @signature `Lorg/joda/time/Chronology;.millisOfSecond:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39de4e.  v1:= temp @kind object;
  #L39de50.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDateTime$Property;.<init>:(Lorg/joda/time/LocalDateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39de56.  return v0 @kind object;
}
procedure `org.joda.time.LocalDateTime` `minus`(`org.joda.time.LocalDateTime` v1 @kind this, `org.joda.time.ReadableDuration` v2 @kind object) @signature `Lorg/joda/time/LocalDateTime;.minus:(Lorg/joda/time/ReadableDuration;)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39d1b8.  v0:= -1I;
  #L39d1ba.  call temp:= `withDurationAdded`(v1, v2, v0) @signature `Lorg/joda/time/LocalDateTime;.withDurationAdded:(Lorg/joda/time/ReadableDuration;I)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d1c0.  v2:= temp @kind object;
  #L39d1c2.  return v2 @kind object;
}
procedure `org.joda.time.LocalDateTime` `minus`(`org.joda.time.LocalDateTime` v1 @kind this, `org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/LocalDateTime;.minus:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39d1d4.  v0:= -1I;
  #L39d1d6.  call temp:= `withPeriodAdded`(v1, v2, v0) @signature `Lorg/joda/time/LocalDateTime;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d1dc.  v2:= temp @kind object;
  #L39d1de.  return v2 @kind object;
}
procedure `org.joda.time.LocalDateTime` `minusDays`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.minusDays:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d1f0.  if v4 != 0 then goto L39d1f6;
  #L39d1f4.  return v3 @kind object;
  #L39d1f6.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d1fc.  v0:= temp @kind object;
  #L39d1fe.  call temp:= `days`(v0) @signature `Lorg/joda/time/Chronology;.days:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39d204.  v0:= temp @kind object;
  #L39d206.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d20c.  v1:= temp @kind wide;
  #L39d20e.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L39d214.  v0:= temp @kind wide;
  #L39d216.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d21c.  v4:= temp @kind object;
  #L39d21e.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `minusHours`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.minusHours:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d230.  if v4 != 0 then goto L39d236;
  #L39d234.  return v3 @kind object;
  #L39d236.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d23c.  v0:= temp @kind object;
  #L39d23e.  call temp:= `hours`(v0) @signature `Lorg/joda/time/Chronology;.hours:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39d244.  v0:= temp @kind object;
  #L39d246.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d24c.  v1:= temp @kind wide;
  #L39d24e.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L39d254.  v0:= temp @kind wide;
  #L39d256.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d25c.  v4:= temp @kind object;
  #L39d25e.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `minusMillis`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.minusMillis:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d270.  if v4 != 0 then goto L39d276;
  #L39d274.  return v3 @kind object;
  #L39d276.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d27c.  v0:= temp @kind object;
  #L39d27e.  call temp:= `millis`(v0) @signature `Lorg/joda/time/Chronology;.millis:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39d284.  v0:= temp @kind object;
  #L39d286.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d28c.  v1:= temp @kind wide;
  #L39d28e.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L39d294.  v0:= temp @kind wide;
  #L39d296.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d29c.  v4:= temp @kind object;
  #L39d29e.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `minusMinutes`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.minusMinutes:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d2b0.  if v4 != 0 then goto L39d2b6;
  #L39d2b4.  return v3 @kind object;
  #L39d2b6.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d2bc.  v0:= temp @kind object;
  #L39d2be.  call temp:= `minutes`(v0) @signature `Lorg/joda/time/Chronology;.minutes:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39d2c4.  v0:= temp @kind object;
  #L39d2c6.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d2cc.  v1:= temp @kind wide;
  #L39d2ce.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L39d2d4.  v0:= temp @kind wide;
  #L39d2d6.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d2dc.  v4:= temp @kind object;
  #L39d2de.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `minusMonths`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.minusMonths:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d2f0.  if v4 != 0 then goto L39d2f6;
  #L39d2f4.  return v3 @kind object;
  #L39d2f6.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d2fc.  v0:= temp @kind object;
  #L39d2fe.  call temp:= `months`(v0) @signature `Lorg/joda/time/Chronology;.months:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39d304.  v0:= temp @kind object;
  #L39d306.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d30c.  v1:= temp @kind wide;
  #L39d30e.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L39d314.  v0:= temp @kind wide;
  #L39d316.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d31c.  v4:= temp @kind object;
  #L39d31e.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `minusSeconds`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.minusSeconds:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d330.  if v4 != 0 then goto L39d336;
  #L39d334.  return v3 @kind object;
  #L39d336.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d33c.  v0:= temp @kind object;
  #L39d33e.  call temp:= `seconds`(v0) @signature `Lorg/joda/time/Chronology;.seconds:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39d344.  v0:= temp @kind object;
  #L39d346.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d34c.  v1:= temp @kind wide;
  #L39d34e.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L39d354.  v0:= temp @kind wide;
  #L39d356.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d35c.  v4:= temp @kind object;
  #L39d35e.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `minusWeeks`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.minusWeeks:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d370.  if v4 != 0 then goto L39d376;
  #L39d374.  return v3 @kind object;
  #L39d376.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d37c.  v0:= temp @kind object;
  #L39d37e.  call temp:= `weeks`(v0) @signature `Lorg/joda/time/Chronology;.weeks:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39d384.  v0:= temp @kind object;
  #L39d386.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d38c.  v1:= temp @kind wide;
  #L39d38e.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L39d394.  v0:= temp @kind wide;
  #L39d396.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d39c.  v4:= temp @kind object;
  #L39d39e.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `minusYears`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.minusYears:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d3b0.  if v4 != 0 then goto L39d3b6;
  #L39d3b4.  return v3 @kind object;
  #L39d3b6.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d3bc.  v0:= temp @kind object;
  #L39d3be.  call temp:= `years`(v0) @signature `Lorg/joda/time/Chronology;.years:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39d3c4.  v0:= temp @kind object;
  #L39d3c6.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d3cc.  v1:= temp @kind wide;
  #L39d3ce.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L39d3d4.  v0:= temp @kind wide;
  #L39d3d6.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d3dc.  v4:= temp @kind object;
  #L39d3de.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime$Property` `minuteOfHour`(`org.joda.time.LocalDateTime` v2 @kind this) @signature `Lorg/joda/time/LocalDateTime;.minuteOfHour:()Lorg/joda/time/LocalDateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39de68.  v0:= new `org.joda.time.LocalDateTime$Property`;
  #L39de6c.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39de72.  v1:= temp @kind object;
  #L39de74.  call temp:= `minuteOfHour`(v1) @signature `Lorg/joda/time/Chronology;.minuteOfHour:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39de7a.  v1:= temp @kind object;
  #L39de7c.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDateTime$Property;.<init>:(Lorg/joda/time/LocalDateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39de82.  return v0 @kind object;
}
procedure `org.joda.time.LocalDateTime$Property` `monthOfYear`(`org.joda.time.LocalDateTime` v2 @kind this) @signature `Lorg/joda/time/LocalDateTime;.monthOfYear:()Lorg/joda/time/LocalDateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39de94.  v0:= new `org.joda.time.LocalDateTime$Property`;
  #L39de98.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39de9e.  v1:= temp @kind object;
  #L39dea0.  call temp:= `monthOfYear`(v1) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39dea6.  v1:= temp @kind object;
  #L39dea8.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDateTime$Property;.<init>:(Lorg/joda/time/LocalDateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39deae.  return v0 @kind object;
}
procedure `org.joda.time.LocalDateTime` `plus`(`org.joda.time.LocalDateTime` v1 @kind this, `org.joda.time.ReadableDuration` v2 @kind object) @signature `Lorg/joda/time/LocalDateTime;.plus:(Lorg/joda/time/ReadableDuration;)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39d4ac.  v0:= 1I;
  #L39d4ae.  call temp:= `withDurationAdded`(v1, v2, v0) @signature `Lorg/joda/time/LocalDateTime;.withDurationAdded:(Lorg/joda/time/ReadableDuration;I)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d4b4.  v2:= temp @kind object;
  #L39d4b6.  return v2 @kind object;
}
procedure `org.joda.time.LocalDateTime` `plus`(`org.joda.time.LocalDateTime` v1 @kind this, `org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/LocalDateTime;.plus:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39d4c8.  v0:= 1I;
  #L39d4ca.  call temp:= `withPeriodAdded`(v1, v2, v0) @signature `Lorg/joda/time/LocalDateTime;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d4d0.  v2:= temp @kind object;
  #L39d4d2.  return v2 @kind object;
}
procedure `org.joda.time.LocalDateTime` `plusDays`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.plusDays:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d4e4.  if v4 != 0 then goto L39d4ea;
  #L39d4e8.  return v3 @kind object;
  #L39d4ea.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d4f0.  v0:= temp @kind object;
  #L39d4f2.  call temp:= `days`(v0) @signature `Lorg/joda/time/Chronology;.days:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39d4f8.  v0:= temp @kind object;
  #L39d4fa.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d500.  v1:= temp @kind wide;
  #L39d502.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L39d508.  v0:= temp @kind wide;
  #L39d50a.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d510.  v4:= temp @kind object;
  #L39d512.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `plusHours`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.plusHours:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d524.  if v4 != 0 then goto L39d52a;
  #L39d528.  return v3 @kind object;
  #L39d52a.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d530.  v0:= temp @kind object;
  #L39d532.  call temp:= `hours`(v0) @signature `Lorg/joda/time/Chronology;.hours:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39d538.  v0:= temp @kind object;
  #L39d53a.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d540.  v1:= temp @kind wide;
  #L39d542.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L39d548.  v0:= temp @kind wide;
  #L39d54a.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d550.  v4:= temp @kind object;
  #L39d552.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `plusMillis`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.plusMillis:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d564.  if v4 != 0 then goto L39d56a;
  #L39d568.  return v3 @kind object;
  #L39d56a.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d570.  v0:= temp @kind object;
  #L39d572.  call temp:= `millis`(v0) @signature `Lorg/joda/time/Chronology;.millis:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39d578.  v0:= temp @kind object;
  #L39d57a.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d580.  v1:= temp @kind wide;
  #L39d582.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L39d588.  v0:= temp @kind wide;
  #L39d58a.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d590.  v4:= temp @kind object;
  #L39d592.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `plusMinutes`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.plusMinutes:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d5a4.  if v4 != 0 then goto L39d5aa;
  #L39d5a8.  return v3 @kind object;
  #L39d5aa.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d5b0.  v0:= temp @kind object;
  #L39d5b2.  call temp:= `minutes`(v0) @signature `Lorg/joda/time/Chronology;.minutes:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39d5b8.  v0:= temp @kind object;
  #L39d5ba.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d5c0.  v1:= temp @kind wide;
  #L39d5c2.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L39d5c8.  v0:= temp @kind wide;
  #L39d5ca.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d5d0.  v4:= temp @kind object;
  #L39d5d2.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `plusMonths`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.plusMonths:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d5e4.  if v4 != 0 then goto L39d5ea;
  #L39d5e8.  return v3 @kind object;
  #L39d5ea.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d5f0.  v0:= temp @kind object;
  #L39d5f2.  call temp:= `months`(v0) @signature `Lorg/joda/time/Chronology;.months:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39d5f8.  v0:= temp @kind object;
  #L39d5fa.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d600.  v1:= temp @kind wide;
  #L39d602.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L39d608.  v0:= temp @kind wide;
  #L39d60a.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d610.  v4:= temp @kind object;
  #L39d612.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `plusSeconds`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.plusSeconds:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d624.  if v4 != 0 then goto L39d62a;
  #L39d628.  return v3 @kind object;
  #L39d62a.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d630.  v0:= temp @kind object;
  #L39d632.  call temp:= `seconds`(v0) @signature `Lorg/joda/time/Chronology;.seconds:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39d638.  v0:= temp @kind object;
  #L39d63a.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d640.  v1:= temp @kind wide;
  #L39d642.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L39d648.  v0:= temp @kind wide;
  #L39d64a.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d650.  v4:= temp @kind object;
  #L39d652.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `plusWeeks`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.plusWeeks:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d664.  if v4 != 0 then goto L39d66a;
  #L39d668.  return v3 @kind object;
  #L39d66a.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d670.  v0:= temp @kind object;
  #L39d672.  call temp:= `weeks`(v0) @signature `Lorg/joda/time/Chronology;.weeks:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39d678.  v0:= temp @kind object;
  #L39d67a.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d680.  v1:= temp @kind wide;
  #L39d682.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L39d688.  v0:= temp @kind wide;
  #L39d68a.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d690.  v4:= temp @kind object;
  #L39d692.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `plusYears`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.plusYears:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d6a4.  if v4 != 0 then goto L39d6aa;
  #L39d6a8.  return v3 @kind object;
  #L39d6aa.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d6b0.  v0:= temp @kind object;
  #L39d6b2.  call temp:= `years`(v0) @signature `Lorg/joda/time/Chronology;.years:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39d6b8.  v0:= temp @kind object;
  #L39d6ba.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d6c0.  v1:= temp @kind wide;
  #L39d6c2.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L39d6c8.  v0:= temp @kind wide;
  #L39d6ca.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d6d0.  v4:= temp @kind object;
  #L39d6d2.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime$Property` `property`(`org.joda.time.LocalDateTime` v3 @kind this, `org.joda.time.DateTimeFieldType` v4 @kind object) @signature `Lorg/joda/time/LocalDateTime;.property:(Lorg/joda/time/DateTimeFieldType;)Lorg/joda/time/LocalDateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39dec0.  if v4 == 0 then goto L39df24;
  #L39dec4.  call temp:= `isSupported`(v3, v4) @signature `Lorg/joda/time/LocalDateTime;.isSupported:(Lorg/joda/time/DateTimeFieldType;)Z` @kind virtual;
  #L39deca.  v0:= temp;
  #L39decc.  if v0 == 0 then goto L39deec;
  #L39ded0.  v0:= new `org.joda.time.LocalDateTime$Property`;
  #L39ded4.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39deda.  v1:= temp @kind object;
  #L39dedc.  call temp:= `getField`(v4, v1) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39dee2.  v4:= temp @kind object;
  #L39dee4.  call `<init>`(v0, v3, v4) @signature `Lorg/joda/time/LocalDateTime$Property;.<init>:(Lorg/joda/time/LocalDateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39deea.  return v0 @kind object;
  #L39deec.  v0:= new `java.lang.IllegalArgumentException`;
  #L39def0.  v1:= new `java.lang.StringBuilder`;
  #L39def4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39defa.  v2:= "Field '" @kind object;
  #L39defe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39df04.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39df0a.  v4:= "' is not supported" @kind object;
  #L39df0e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39df14.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39df1a.  v4:= temp @kind object;
  #L39df1c.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39df22.  throw v0;
  #L39df24.  v4:= new `java.lang.IllegalArgumentException`;
  #L39df28.  v0:= "The DateTimeFieldType must not be null" @kind object;
  #L39df2c.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39df32.  throw v4;
}
procedure `org.joda.time.LocalDateTime$Property` `secondOfMinute`(`org.joda.time.LocalDateTime` v2 @kind this) @signature `Lorg/joda/time/LocalDateTime;.secondOfMinute:()Lorg/joda/time/LocalDateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39df44.  v0:= new `org.joda.time.LocalDateTime$Property`;
  #L39df48.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39df4e.  v1:= temp @kind object;
  #L39df50.  call temp:= `secondOfMinute`(v1) @signature `Lorg/joda/time/Chronology;.secondOfMinute:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39df56.  v1:= temp @kind object;
  #L39df58.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDateTime$Property;.<init>:(Lorg/joda/time/LocalDateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39df5e.  return v0 @kind object;
}
procedure `int` `size`(`org.joda.time.LocalDateTime` v1 @kind this) @signature `Lorg/joda/time/LocalDateTime;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39cc14.  v0:= 4I;
  #L39cc16.  return v0;
}
procedure `java.util.Date` `toDate`(`org.joda.time.LocalDateTime` v8 @kind this) @signature `Lorg/joda/time/LocalDateTime;.toDate:()Ljava/util/Date;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L39ce04.  call temp:= `getDayOfMonth`(v8) @signature `Lorg/joda/time/LocalDateTime;.getDayOfMonth:()I` @kind virtual;
  #L39ce0a.  v3:= temp;
  #L39ce0c.  v7:= new `java.util.Date`;
  #L39ce10.  call temp:= `getYear`(v8) @signature `Lorg/joda/time/LocalDateTime;.getYear:()I` @kind virtual;
  #L39ce16.  v0:= temp;
  #L39ce18.  v1:= v0 + -1900;
  #L39ce1c.  call temp:= `getMonthOfYear`(v8) @signature `Lorg/joda/time/LocalDateTime;.getMonthOfYear:()I` @kind virtual;
  #L39ce22.  v0:= temp;
  #L39ce24.  v2:= v0 + -1;
  #L39ce28.  call temp:= `getHourOfDay`(v8) @signature `Lorg/joda/time/LocalDateTime;.getHourOfDay:()I` @kind virtual;
  #L39ce2e.  v4:= temp;
  #L39ce30.  call temp:= `getMinuteOfHour`(v8) @signature `Lorg/joda/time/LocalDateTime;.getMinuteOfHour:()I` @kind virtual;
  #L39ce36.  v5:= temp;
  #L39ce38.  call temp:= `getSecondOfMinute`(v8) @signature `Lorg/joda/time/LocalDateTime;.getSecondOfMinute:()I` @kind virtual;
  #L39ce3e.  v6:= temp;
  #L39ce40.  v0:= v7 @kind object;
  #L39ce42.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Ljava/util/Date;.<init>:(IIIIII)V` @kind direct;
  #L39ce48.  call temp:= `getTime`(v7) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L39ce4e.  v0:= temp @kind wide;
  #L39ce50.  call temp:= `getMillisOfSecond`(v8) @signature `Lorg/joda/time/LocalDateTime;.getMillisOfSecond:()I` @kind virtual;
  #L39ce56.  v2:= temp;
  #L39ce58.  v2:= (`long`) v2 @kind i2l;
  #L39ce5a.  v0:= v0 + v2 @kind long;
  #L39ce5c.  call `setTime`(v7, v0) @signature `Ljava/util/Date;.setTime:(J)V` @kind virtual;
  #L39ce62.  call temp:= `getDefault`() @signature `Ljava/util/TimeZone;.getDefault:()Ljava/util/TimeZone;` @kind static;
  #L39ce68.  v0:= temp @kind object;
  #L39ce6a.  call temp:= `correctDstTransition`(v8, v7, v0) @signature `Lorg/joda/time/LocalDateTime;.correctDstTransition:(Ljava/util/Date;Ljava/util/TimeZone;)Ljava/util/Date;` @kind direct;
  #L39ce70.  v0:= temp @kind object;
  #L39ce72.  return v0 @kind object;
}
procedure `java.util.Date` `toDate`(`org.joda.time.LocalDateTime` v8 @kind this, `java.util.TimeZone` v9 @kind object) @signature `Lorg/joda/time/LocalDateTime;.toDate:(Ljava/util/TimeZone;)Ljava/util/Date;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L39ce84.  call temp:= `getInstance`(v9) @signature `Ljava/util/Calendar;.getInstance:(Ljava/util/TimeZone;)Ljava/util/Calendar;` @kind static;
  #L39ce8a.  v7:= temp @kind object;
  #L39ce8c.  call `clear`(v7) @signature `Ljava/util/Calendar;.clear:()V` @kind virtual;
  #L39ce92.  call temp:= `getYear`(v8) @signature `Lorg/joda/time/LocalDateTime;.getYear:()I` @kind virtual;
  #L39ce98.  v1:= temp;
  #L39ce9a.  call temp:= `getMonthOfYear`(v8) @signature `Lorg/joda/time/LocalDateTime;.getMonthOfYear:()I` @kind virtual;
  #L39cea0.  v0:= temp;
  #L39cea2.  v2:= v0 + -1;
  #L39cea6.  call temp:= `getDayOfMonth`(v8) @signature `Lorg/joda/time/LocalDateTime;.getDayOfMonth:()I` @kind virtual;
  #L39ceac.  v3:= temp;
  #L39ceae.  call temp:= `getHourOfDay`(v8) @signature `Lorg/joda/time/LocalDateTime;.getHourOfDay:()I` @kind virtual;
  #L39ceb4.  v4:= temp;
  #L39ceb6.  call temp:= `getMinuteOfHour`(v8) @signature `Lorg/joda/time/LocalDateTime;.getMinuteOfHour:()I` @kind virtual;
  #L39cebc.  v5:= temp;
  #L39cebe.  call temp:= `getSecondOfMinute`(v8) @signature `Lorg/joda/time/LocalDateTime;.getSecondOfMinute:()I` @kind virtual;
  #L39cec4.  v6:= temp;
  #L39cec6.  v0:= v7 @kind object;
  #L39cec8.  call `set`(v0, v1, v2, v3, v4, v5, v6) @signature `Ljava/util/Calendar;.set:(IIIIII)V` @kind virtual;
  #L39cece.  call temp:= `getTime`(v7) @signature `Ljava/util/Calendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L39ced4.  v0:= temp @kind object;
  #L39ced6.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L39cedc.  v1:= temp @kind wide;
  #L39cede.  call temp:= `getMillisOfSecond`(v8) @signature `Lorg/joda/time/LocalDateTime;.getMillisOfSecond:()I` @kind virtual;
  #L39cee4.  v3:= temp;
  #L39cee6.  v3:= (`long`) v3 @kind i2l;
  #L39cee8.  v1:= v1 + v3 @kind long;
  #L39ceea.  call `setTime`(v0, v1) @signature `Ljava/util/Date;.setTime:(J)V` @kind virtual;
  #L39cef0.  call temp:= `correctDstTransition`(v8, v0, v9) @signature `Lorg/joda/time/LocalDateTime;.correctDstTransition:(Ljava/util/Date;Ljava/util/TimeZone;)Ljava/util/Date;` @kind direct;
  #L39cef6.  v9:= temp @kind object;
  #L39cef8.  return v9 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTime`(`org.joda.time.LocalDateTime` v1 @kind this) @signature `Lorg/joda/time/LocalDateTime;.toDateTime:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39cf3c.  v0:= 0I;
  #L39cf3e.  call temp:= `toDateTime`(v1, v0) @signature `Lorg/joda/time/LocalDateTime;.toDateTime:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @kind virtual;
  #L39cf44.  v0:= temp @kind object;
  #L39cf46.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTime`(`org.joda.time.LocalDateTime` v10 @kind this, `org.joda.time.DateTimeZone` v11 @kind object) @signature `Lorg/joda/time/LocalDateTime;.toDateTime:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L39cf58.  call temp:= `getZone`(v11) @signature `Lorg/joda/time/DateTimeUtils;.getZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTimeZone;` @kind static;
  #L39cf5e.  v11:= temp @kind object;
  #L39cf60.  v0:= v10.`org.joda.time.LocalDateTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39cf64.  call temp:= `withZone`(v0, v11) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L39cf6a.  v9:= temp @kind object;
  #L39cf6c.  v11:= new `org.joda.time.DateTime`;
  #L39cf70.  call temp:= `getYear`(v10) @signature `Lorg/joda/time/LocalDateTime;.getYear:()I` @kind virtual;
  #L39cf76.  v2:= temp;
  #L39cf78.  call temp:= `getMonthOfYear`(v10) @signature `Lorg/joda/time/LocalDateTime;.getMonthOfYear:()I` @kind virtual;
  #L39cf7e.  v3:= temp;
  #L39cf80.  call temp:= `getDayOfMonth`(v10) @signature `Lorg/joda/time/LocalDateTime;.getDayOfMonth:()I` @kind virtual;
  #L39cf86.  v4:= temp;
  #L39cf88.  call temp:= `getHourOfDay`(v10) @signature `Lorg/joda/time/LocalDateTime;.getHourOfDay:()I` @kind virtual;
  #L39cf8e.  v5:= temp;
  #L39cf90.  call temp:= `getMinuteOfHour`(v10) @signature `Lorg/joda/time/LocalDateTime;.getMinuteOfHour:()I` @kind virtual;
  #L39cf96.  v6:= temp;
  #L39cf98.  call temp:= `getSecondOfMinute`(v10) @signature `Lorg/joda/time/LocalDateTime;.getSecondOfMinute:()I` @kind virtual;
  #L39cf9e.  v7:= temp;
  #L39cfa0.  call temp:= `getMillisOfSecond`(v10) @signature `Lorg/joda/time/LocalDateTime;.getMillisOfSecond:()I` @kind virtual;
  #L39cfa6.  v8:= temp;
  #L39cfa8.  v1:= v11 @kind object;
  #L39cfaa.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lorg/joda/time/DateTime;.<init>:(IIIIIIILorg/joda/time/Chronology;)V` @kind direct;
  #L39cfb0.  return v11 @kind object;
}
procedure `org.joda.time.LocalDate` `toLocalDate`(`org.joda.time.LocalDateTime` v4 @kind this) @signature `Lorg/joda/time/LocalDateTime;.toLocalDate:()Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39d040.  v0:= new `org.joda.time.LocalDate`;
  #L39d044.  call temp:= `getLocalMillis`(v4) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d04a.  v1:= temp @kind wide;
  #L39d04c.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d052.  v3:= temp @kind object;
  #L39d054.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/LocalDate;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39d05a.  return v0 @kind object;
}
procedure `org.joda.time.LocalTime` `toLocalTime`(`org.joda.time.LocalDateTime` v4 @kind this) @signature `Lorg/joda/time/LocalDateTime;.toLocalTime:()Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39e04c.  v0:= new `org.joda.time.LocalTime`;
  #L39e050.  call temp:= `getLocalMillis`(v4) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39e056.  v1:= temp @kind wide;
  #L39e058.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e05e.  v3:= temp @kind object;
  #L39e060.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/LocalTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39e066.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.LocalDateTime` v1 @kind this) @signature `Lorg/joda/time/LocalDateTime;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39cc90.  call temp:= `dateTime`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateTime:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L39cc96.  v0:= temp @kind object;
  #L39cc98.  call temp:= `print`(v0, v1) @signature `Lorg/joda/time/format/DateTimeFormatter;.print:(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;` @kind virtual;
  #L39cc9e.  v0:= temp @kind object;
  #L39cca0.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.LocalDateTime` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/joda/time/LocalDateTime;.toString:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L39ccb4.  if v1 != 0 then goto L39ccc2;
  #L39ccb8.  call temp:= `toString`(v0) @signature `Lorg/joda/time/LocalDateTime;.toString:()Ljava/lang/String;` @kind virtual;
  #L39ccbe.  v1:= temp @kind object;
  #L39ccc0.  return v1 @kind object;
  #L39ccc2.  call temp:= `forPattern`(v1) @signature `Lorg/joda/time/format/DateTimeFormat;.forPattern:(Ljava/lang/String;)Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L39ccc8.  v1:= temp @kind object;
  #L39ccca.  call temp:= `print`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatter;.print:(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;` @kind virtual;
  #L39ccd0.  v1:= temp @kind object;
  #L39ccd2.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.LocalDateTime` v0 @kind this, `java.lang.String` v1 @kind object, `java.util.Locale` v2 @kind object) @signature `Lorg/joda/time/LocalDateTime;.toString:(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L39cce4.  if v1 != 0 then goto L39ccf2;
  #L39cce8.  call temp:= `toString`(v0) @signature `Lorg/joda/time/LocalDateTime;.toString:()Ljava/lang/String;` @kind virtual;
  #L39ccee.  v1:= temp @kind object;
  #L39ccf0.  return v1 @kind object;
  #L39ccf2.  call temp:= `forPattern`(v1) @signature `Lorg/joda/time/format/DateTimeFormat;.forPattern:(Ljava/lang/String;)Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L39ccf8.  v1:= temp @kind object;
  #L39ccfa.  call temp:= `withLocale`(v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.withLocale:(Ljava/util/Locale;)Lorg/joda/time/format/DateTimeFormatter;` @kind virtual;
  #L39cd00.  v1:= temp @kind object;
  #L39cd02.  call temp:= `print`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatter;.print:(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;` @kind virtual;
  #L39cd08.  v1:= temp @kind object;
  #L39cd0a.  return v1 @kind object;
}
procedure `org.joda.time.LocalDateTime$Property` `weekOfWeekyear`(`org.joda.time.LocalDateTime` v2 @kind this) @signature `Lorg/joda/time/LocalDateTime;.weekOfWeekyear:()Lorg/joda/time/LocalDateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39df70.  v0:= new `org.joda.time.LocalDateTime$Property`;
  #L39df74.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39df7a.  v1:= temp @kind object;
  #L39df7c.  call temp:= `weekOfWeekyear`(v1) @signature `Lorg/joda/time/Chronology;.weekOfWeekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39df82.  v1:= temp @kind object;
  #L39df84.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDateTime$Property;.<init>:(Lorg/joda/time/LocalDateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39df8a.  return v0 @kind object;
}
procedure `org.joda.time.LocalDateTime$Property` `weekyear`(`org.joda.time.LocalDateTime` v2 @kind this) @signature `Lorg/joda/time/LocalDateTime;.weekyear:()Lorg/joda/time/LocalDateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39df9c.  v0:= new `org.joda.time.LocalDateTime$Property`;
  #L39dfa0.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39dfa6.  v1:= temp @kind object;
  #L39dfa8.  call temp:= `weekyear`(v1) @signature `Lorg/joda/time/Chronology;.weekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39dfae.  v1:= temp @kind object;
  #L39dfb0.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDateTime$Property;.<init>:(Lorg/joda/time/LocalDateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39dfb6.  return v0 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withCenturyOfEra`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withCenturyOfEra:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d6e4.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d6ea.  v0:= temp @kind object;
  #L39d6ec.  call temp:= `centuryOfEra`(v0) @signature `Lorg/joda/time/Chronology;.centuryOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39d6f2.  v0:= temp @kind object;
  #L39d6f4.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d6fa.  v1:= temp @kind wide;
  #L39d6fc.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39d702.  v0:= temp @kind wide;
  #L39d704.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d70a.  v4:= temp @kind object;
  #L39d70c.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withDate`(`org.joda.time.LocalDateTime` v4 @kind this, `int` v5 , `int` v6 , `int` v7 ) @signature `Lorg/joda/time/LocalDateTime;.withDate:(III)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39d720.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d726.  v0:= temp @kind object;
  #L39d728.  call temp:= `getLocalMillis`(v4) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d72e.  v1:= temp @kind wide;
  #L39d730.  call temp:= `year`(v0) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39d736.  v3:= temp @kind object;
  #L39d738.  call temp:= `set`(v3, v1, v5) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39d73e.  v1:= temp @kind wide;
  #L39d740.  call temp:= `monthOfYear`(v0) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39d746.  v5:= temp @kind object;
  #L39d748.  call temp:= `set`(v5, v1, v6) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39d74e.  v5:= temp @kind wide;
  #L39d750.  call temp:= `dayOfMonth`(v0) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39d756.  v0:= temp @kind object;
  #L39d758.  call temp:= `set`(v0, v5, v7) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39d75e.  v5:= temp @kind wide;
  #L39d760.  call temp:= `withLocalMillis`(v4, v5) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d766.  v5:= temp @kind object;
  #L39d768.  return v5 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withDayOfMonth`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withDayOfMonth:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d77c.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d782.  v0:= temp @kind object;
  #L39d784.  call temp:= `dayOfMonth`(v0) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39d78a.  v0:= temp @kind object;
  #L39d78c.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d792.  v1:= temp @kind wide;
  #L39d794.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39d79a.  v0:= temp @kind wide;
  #L39d79c.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d7a2.  v4:= temp @kind object;
  #L39d7a4.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withDayOfWeek`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withDayOfWeek:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d7b8.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d7be.  v0:= temp @kind object;
  #L39d7c0.  call temp:= `dayOfWeek`(v0) @signature `Lorg/joda/time/Chronology;.dayOfWeek:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39d7c6.  v0:= temp @kind object;
  #L39d7c8.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d7ce.  v1:= temp @kind wide;
  #L39d7d0.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39d7d6.  v0:= temp @kind wide;
  #L39d7d8.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d7de.  v4:= temp @kind object;
  #L39d7e0.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withDayOfYear`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withDayOfYear:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d7f4.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d7fa.  v0:= temp @kind object;
  #L39d7fc.  call temp:= `dayOfYear`(v0) @signature `Lorg/joda/time/Chronology;.dayOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39d802.  v0:= temp @kind object;
  #L39d804.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d80a.  v1:= temp @kind wide;
  #L39d80c.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39d812.  v0:= temp @kind wide;
  #L39d814.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d81a.  v4:= temp @kind object;
  #L39d81c.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withDurationAdded`(`org.joda.time.LocalDateTime` v6 @kind this, `org.joda.time.ReadableDuration` v7 @kind object, `int` v8 ) @signature `Lorg/joda/time/LocalDateTime;.withDurationAdded:(Lorg/joda/time/ReadableDuration;I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39d830.  if v7 == 0 then goto L39d866;
  #L39d834.  if v8 != 0 then goto L39d83a;
  #L39d838.  goto L39d866;
  #L39d83a.  call temp:= `getChronology`(v6) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d840.  v0:= temp @kind object;
  #L39d842.  call temp:= `getLocalMillis`(v6) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d848.  v1:= temp @kind wide;
  #L39d84a.  call temp:= `getMillis`(v7) @signature `Lorg/joda/time/ReadableDuration;.getMillis:()J` @kind interface;
  #L39d850.  v3:= temp @kind wide;
  #L39d852.  v5:= v8;
  #L39d854.  call temp:= `add`(v0, v1, v3, v5) @signature `Lorg/joda/time/Chronology;.add:(JJI)J` @kind virtual;
  #L39d85a.  v7:= temp @kind wide;
  #L39d85c.  call temp:= `withLocalMillis`(v6, v7) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d862.  v7:= temp @kind object;
  #L39d864.  return v7 @kind object;
  #L39d866.  return v6 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withEra`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withEra:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d878.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d87e.  v0:= temp @kind object;
  #L39d880.  call temp:= `era`(v0) @signature `Lorg/joda/time/Chronology;.era:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39d886.  v0:= temp @kind object;
  #L39d888.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d88e.  v1:= temp @kind wide;
  #L39d890.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39d896.  v0:= temp @kind wide;
  #L39d898.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d89e.  v4:= temp @kind object;
  #L39d8a0.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withField`(`org.joda.time.LocalDateTime` v2 @kind this, `org.joda.time.DateTimeFieldType` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withField:(Lorg/joda/time/DateTimeFieldType;I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39d8b4.  if v3 == 0 then goto L39d8e2;
  #L39d8b8.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d8be.  v0:= temp @kind object;
  #L39d8c0.  call temp:= `getField`(v3, v0) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39d8c6.  v3:= temp @kind object;
  #L39d8c8.  call temp:= `getLocalMillis`(v2) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d8ce.  v0:= temp @kind wide;
  #L39d8d0.  call temp:= `set`(v3, v0, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39d8d6.  v3:= temp @kind wide;
  #L39d8d8.  call temp:= `withLocalMillis`(v2, v3) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d8de.  v3:= temp @kind object;
  #L39d8e0.  return v3 @kind object;
  #L39d8e2.  v3:= new `java.lang.IllegalArgumentException`;
  #L39d8e6.  v4:= "Field must not be null" @kind object;
  #L39d8ea.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39d8f0.  throw v3;
}
procedure `org.joda.time.LocalDateTime` `withFieldAdded`(`org.joda.time.LocalDateTime` v2 @kind this, `org.joda.time.DurationFieldType` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39d904.  if v3 == 0 then goto L39d938;
  #L39d908.  if v4 != 0 then goto L39d90e;
  #L39d90c.  return v2 @kind object;
  #L39d90e.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d914.  v0:= temp @kind object;
  #L39d916.  call temp:= `getField`(v3, v0) @signature `Lorg/joda/time/DurationFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;` @kind virtual;
  #L39d91c.  v3:= temp @kind object;
  #L39d91e.  call temp:= `getLocalMillis`(v2) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d924.  v0:= temp @kind wide;
  #L39d926.  call temp:= `add`(v3, v0, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L39d92c.  v3:= temp @kind wide;
  #L39d92e.  call temp:= `withLocalMillis`(v2, v3) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d934.  v3:= temp @kind object;
  #L39d936.  return v3 @kind object;
  #L39d938.  v3:= new `java.lang.IllegalArgumentException`;
  #L39d93c.  v4:= "Field must not be null" @kind object;
  #L39d940.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39d946.  throw v3;
}
procedure `org.joda.time.LocalDateTime` `withFields`(`org.joda.time.LocalDateTime` v3 @kind this, `org.joda.time.ReadablePartial` v4 @kind object) @signature `Lorg/joda/time/LocalDateTime;.withFields:(Lorg/joda/time/ReadablePartial;)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d958.  if v4 != 0 then goto L39d95e;
  #L39d95c.  return v3 @kind object;
  #L39d95e.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d964.  v0:= temp @kind object;
  #L39d966.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d96c.  v1:= temp @kind wide;
  #L39d96e.  call temp:= `set`(v0, v4, v1) @signature `Lorg/joda/time/Chronology;.set:(Lorg/joda/time/ReadablePartial;J)J` @kind virtual;
  #L39d974.  v0:= temp @kind wide;
  #L39d976.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d97c.  v4:= temp @kind object;
  #L39d97e.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withHourOfDay`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withHourOfDay:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39d990.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d996.  v0:= temp @kind object;
  #L39d998.  call temp:= `hourOfDay`(v0) @signature `Lorg/joda/time/Chronology;.hourOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39d99e.  v0:= temp @kind object;
  #L39d9a0.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d9a6.  v1:= temp @kind wide;
  #L39d9a8.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39d9ae.  v0:= temp @kind wide;
  #L39d9b0.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39d9b6.  v4:= temp @kind object;
  #L39d9b8.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withLocalMillis`(`org.joda.time.LocalDateTime` v3 @kind this, `long` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L39d9cc.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39d9d2.  v0:= temp @kind wide;
  #L39d9d4.  v2:= lcmp(v4, v0);
  #L39d9d8.  if v2 != 0 then goto L39d9e0;
  #L39d9dc.  v0:= v3 @kind object;
  #L39d9de.  goto L39d9f2;
  #L39d9e0.  v0:= new `org.joda.time.LocalDateTime`;
  #L39d9e4.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39d9ea.  v1:= temp @kind object;
  #L39d9ec.  call `<init>`(v0, v4, v1) @signature `Lorg/joda/time/LocalDateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39d9f2.  return v0 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withMillisOfDay`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withMillisOfDay:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39da04.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39da0a.  v0:= temp @kind object;
  #L39da0c.  call temp:= `millisOfDay`(v0) @signature `Lorg/joda/time/Chronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39da12.  v0:= temp @kind object;
  #L39da14.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39da1a.  v1:= temp @kind wide;
  #L39da1c.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39da22.  v0:= temp @kind wide;
  #L39da24.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39da2a.  v4:= temp @kind object;
  #L39da2c.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withMillisOfSecond`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withMillisOfSecond:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39da40.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39da46.  v0:= temp @kind object;
  #L39da48.  call temp:= `millisOfSecond`(v0) @signature `Lorg/joda/time/Chronology;.millisOfSecond:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39da4e.  v0:= temp @kind object;
  #L39da50.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39da56.  v1:= temp @kind wide;
  #L39da58.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39da5e.  v0:= temp @kind wide;
  #L39da60.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39da66.  v4:= temp @kind object;
  #L39da68.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withMinuteOfHour`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withMinuteOfHour:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39da7c.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39da82.  v0:= temp @kind object;
  #L39da84.  call temp:= `minuteOfHour`(v0) @signature `Lorg/joda/time/Chronology;.minuteOfHour:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39da8a.  v0:= temp @kind object;
  #L39da8c.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39da92.  v1:= temp @kind wide;
  #L39da94.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39da9a.  v0:= temp @kind wide;
  #L39da9c.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39daa2.  v4:= temp @kind object;
  #L39daa4.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withMonthOfYear`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withMonthOfYear:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39dab8.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39dabe.  v0:= temp @kind object;
  #L39dac0.  call temp:= `monthOfYear`(v0) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39dac6.  v0:= temp @kind object;
  #L39dac8.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39dace.  v1:= temp @kind wide;
  #L39dad0.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39dad6.  v0:= temp @kind wide;
  #L39dad8.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39dade.  v4:= temp @kind object;
  #L39dae0.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withPeriodAdded`(`org.joda.time.LocalDateTime` v3 @kind this, `org.joda.time.ReadablePeriod` v4 @kind object, `int` v5 ) @signature `Lorg/joda/time/LocalDateTime;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39daf4.  if v4 == 0 then goto L39db20;
  #L39daf8.  if v5 != 0 then goto L39dafe;
  #L39dafc.  goto L39db20;
  #L39dafe.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39db04.  v0:= temp @kind object;
  #L39db06.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39db0c.  v1:= temp @kind wide;
  #L39db0e.  call temp:= `add`(v0, v4, v1, v5) @signature `Lorg/joda/time/Chronology;.add:(Lorg/joda/time/ReadablePeriod;JI)J` @kind virtual;
  #L39db14.  v4:= temp @kind wide;
  #L39db16.  call temp:= `withLocalMillis`(v3, v4) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39db1c.  v4:= temp @kind object;
  #L39db1e.  return v4 @kind object;
  #L39db20.  return v3 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withSecondOfMinute`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withSecondOfMinute:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39db34.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39db3a.  v0:= temp @kind object;
  #L39db3c.  call temp:= `secondOfMinute`(v0) @signature `Lorg/joda/time/Chronology;.secondOfMinute:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39db42.  v0:= temp @kind object;
  #L39db44.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39db4a.  v1:= temp @kind wide;
  #L39db4c.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39db52.  v0:= temp @kind wide;
  #L39db54.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39db5a.  v4:= temp @kind object;
  #L39db5c.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withTime`(`org.joda.time.LocalDateTime` v4 @kind this, `int` v5 , `int` v6 , `int` v7 , `int` v8 ) @signature `Lorg/joda/time/LocalDateTime;.withTime:(IIII)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39db70.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39db76.  v0:= temp @kind object;
  #L39db78.  call temp:= `getLocalMillis`(v4) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39db7e.  v1:= temp @kind wide;
  #L39db80.  call temp:= `hourOfDay`(v0) @signature `Lorg/joda/time/Chronology;.hourOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39db86.  v3:= temp @kind object;
  #L39db88.  call temp:= `set`(v3, v1, v5) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39db8e.  v1:= temp @kind wide;
  #L39db90.  call temp:= `minuteOfHour`(v0) @signature `Lorg/joda/time/Chronology;.minuteOfHour:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39db96.  v5:= temp @kind object;
  #L39db98.  call temp:= `set`(v5, v1, v6) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39db9e.  v5:= temp @kind wide;
  #L39dba0.  call temp:= `secondOfMinute`(v0) @signature `Lorg/joda/time/Chronology;.secondOfMinute:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39dba6.  v1:= temp @kind object;
  #L39dba8.  call temp:= `set`(v1, v5, v7) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39dbae.  v5:= temp @kind wide;
  #L39dbb0.  call temp:= `millisOfSecond`(v0) @signature `Lorg/joda/time/Chronology;.millisOfSecond:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39dbb6.  v7:= temp @kind object;
  #L39dbb8.  call temp:= `set`(v7, v5, v8) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39dbbe.  v5:= temp @kind wide;
  #L39dbc0.  call temp:= `withLocalMillis`(v4, v5) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39dbc6.  v5:= temp @kind object;
  #L39dbc8.  return v5 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withWeekOfWeekyear`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withWeekOfWeekyear:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39dbdc.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39dbe2.  v0:= temp @kind object;
  #L39dbe4.  call temp:= `weekOfWeekyear`(v0) @signature `Lorg/joda/time/Chronology;.weekOfWeekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39dbea.  v0:= temp @kind object;
  #L39dbec.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39dbf2.  v1:= temp @kind wide;
  #L39dbf4.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39dbfa.  v0:= temp @kind wide;
  #L39dbfc.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39dc02.  v4:= temp @kind object;
  #L39dc04.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withWeekyear`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withWeekyear:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39dc18.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39dc1e.  v0:= temp @kind object;
  #L39dc20.  call temp:= `weekyear`(v0) @signature `Lorg/joda/time/Chronology;.weekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39dc26.  v0:= temp @kind object;
  #L39dc28.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39dc2e.  v1:= temp @kind wide;
  #L39dc30.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39dc36.  v0:= temp @kind wide;
  #L39dc38.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39dc3e.  v4:= temp @kind object;
  #L39dc40.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withYear`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withYear:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39dc54.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39dc5a.  v0:= temp @kind object;
  #L39dc5c.  call temp:= `year`(v0) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39dc62.  v0:= temp @kind object;
  #L39dc64.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39dc6a.  v1:= temp @kind wide;
  #L39dc6c.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39dc72.  v0:= temp @kind wide;
  #L39dc74.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39dc7a.  v4:= temp @kind object;
  #L39dc7c.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withYearOfCentury`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withYearOfCentury:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39dc90.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39dc96.  v0:= temp @kind object;
  #L39dc98.  call temp:= `yearOfCentury`(v0) @signature `Lorg/joda/time/Chronology;.yearOfCentury:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39dc9e.  v0:= temp @kind object;
  #L39dca0.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39dca6.  v1:= temp @kind wide;
  #L39dca8.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39dcae.  v0:= temp @kind wide;
  #L39dcb0.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39dcb6.  v4:= temp @kind object;
  #L39dcb8.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime` `withYearOfEra`(`org.joda.time.LocalDateTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDateTime;.withYearOfEra:(I)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39dccc.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39dcd2.  v0:= temp @kind object;
  #L39dcd4.  call temp:= `yearOfEra`(v0) @signature `Lorg/joda/time/Chronology;.yearOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39dcda.  v0:= temp @kind object;
  #L39dcdc.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDateTime;.getLocalMillis:()J` @kind virtual;
  #L39dce2.  v1:= temp @kind wide;
  #L39dce4.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39dcea.  v0:= temp @kind wide;
  #L39dcec.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDateTime;.withLocalMillis:(J)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L39dcf2.  v4:= temp @kind object;
  #L39dcf4.  return v4 @kind object;
}
procedure `org.joda.time.LocalDateTime$Property` `year`(`org.joda.time.LocalDateTime` v2 @kind this) @signature `Lorg/joda/time/LocalDateTime;.year:()Lorg/joda/time/LocalDateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39dfc8.  v0:= new `org.joda.time.LocalDateTime$Property`;
  #L39dfcc.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39dfd2.  v1:= temp @kind object;
  #L39dfd4.  call temp:= `year`(v1) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39dfda.  v1:= temp @kind object;
  #L39dfdc.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDateTime$Property;.<init>:(Lorg/joda/time/LocalDateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39dfe2.  return v0 @kind object;
}
procedure `org.joda.time.LocalDateTime$Property` `yearOfCentury`(`org.joda.time.LocalDateTime` v2 @kind this) @signature `Lorg/joda/time/LocalDateTime;.yearOfCentury:()Lorg/joda/time/LocalDateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39dff4.  v0:= new `org.joda.time.LocalDateTime$Property`;
  #L39dff8.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39dffe.  v1:= temp @kind object;
  #L39e000.  call temp:= `yearOfCentury`(v1) @signature `Lorg/joda/time/Chronology;.yearOfCentury:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39e006.  v1:= temp @kind object;
  #L39e008.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDateTime$Property;.<init>:(Lorg/joda/time/LocalDateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39e00e.  return v0 @kind object;
}
procedure `org.joda.time.LocalDateTime$Property` `yearOfEra`(`org.joda.time.LocalDateTime` v2 @kind this) @signature `Lorg/joda/time/LocalDateTime;.yearOfEra:()Lorg/joda/time/LocalDateTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39e020.  v0:= new `org.joda.time.LocalDateTime$Property`;
  #L39e024.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDateTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e02a.  v1:= temp @kind object;
  #L39e02c.  call temp:= `yearOfEra`(v1) @signature `Lorg/joda/time/Chronology;.yearOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39e032.  v1:= temp @kind object;
  #L39e034.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDateTime$Property;.<init>:(Lorg/joda/time/LocalDateTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39e03a.  return v0 @kind object;
}
