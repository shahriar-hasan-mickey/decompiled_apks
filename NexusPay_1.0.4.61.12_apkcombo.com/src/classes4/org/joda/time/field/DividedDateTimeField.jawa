record `org.joda.time.field.DividedDateTimeField` @kind class @AccessFlag PUBLIC extends `org.joda.time.field.DecoratedDateTimeField` @kind class {
  `int` `org.joda.time.field.DividedDateTimeField.iDivisor` @AccessFlag FINAL;
  `org.joda.time.DurationField` `org.joda.time.field.DividedDateTimeField.iDurationField` @AccessFlag FINAL;
  `int` `org.joda.time.field.DividedDateTimeField.iMax` @AccessFlag PRIVATE_FINAL;
  `int` `org.joda.time.field.DividedDateTimeField.iMin` @AccessFlag PRIVATE_FINAL;
  `org.joda.time.DurationField` `org.joda.time.field.DividedDateTimeField.iRangeDurationField` @AccessFlag FINAL;
}
global `long` `@@org.joda.time.field.DividedDateTimeField.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.field.DividedDateTimeField` v1 @kind this, `org.joda.time.DateTimeField` v2 @kind object, `org.joda.time.DateTimeFieldType` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/field/DividedDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3bdafc.  call temp:= `getRangeDurationField`(v2) @signature `Lorg/joda/time/DateTimeField;.getRangeDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bdb02.  v0:= temp @kind object;
  #L3bdb04.  call `<init>`(v1, v2, v0, v3, v4) @signature `Lorg/joda/time/field/DividedDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;Lorg/joda/time/DateTimeFieldType;I)V` @kind direct;
  #L3bdb0a.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.field.DividedDateTimeField` v2 @kind this, `org.joda.time.DateTimeField` v3 @kind object, `org.joda.time.DurationField` v4 @kind object, `org.joda.time.DateTimeFieldType` v5 @kind object, `int` v6 ) @signature `Lorg/joda/time/field/DividedDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;Lorg/joda/time/DateTimeFieldType;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3bdb1c.  call `<init>`(v2, v3, v5) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V` @kind direct;
  #L3bdb22.  v0:= 2I;
  #L3bdb24.  if v6 < v0 then goto L3bdb98;
  #L3bdb28.  call temp:= `getDurationField`(v3) @signature `Lorg/joda/time/DateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bdb2e.  v0:= temp @kind object;
  #L3bdb30.  if v0 != 0 then goto L3bdb3c;
  #L3bdb34.  v5:= 0I;
  #L3bdb36.  v2.`org.joda.time.field.DividedDateTimeField.iDurationField` @type ^`org.joda.time.DurationField` := v5 @kind object;
  #L3bdb3a.  goto L3bdb52;
  #L3bdb3c.  v1:= new `org.joda.time.field.ScaledDurationField`;
  #L3bdb40.  call temp:= `getDurationType`(v5) @signature `Lorg/joda/time/DateTimeFieldType;.getDurationType:()Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L3bdb46.  v5:= temp @kind object;
  #L3bdb48.  call `<init>`(v1, v0, v5, v6) @signature `Lorg/joda/time/field/ScaledDurationField;.<init>:(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;I)V` @kind direct;
  #L3bdb4e.  v2.`org.joda.time.field.DividedDateTimeField.iDurationField` @type ^`org.joda.time.DurationField` := v1 @kind object;
  #L3bdb52.  v2.`org.joda.time.field.DividedDateTimeField.iRangeDurationField` @type ^`org.joda.time.DurationField` := v4 @kind object;
  #L3bdb56.  v2.`org.joda.time.field.DividedDateTimeField.iDivisor` @type ^`int` := v6;
  #L3bdb5a.  call temp:= `getMinimumValue`(v3) @signature `Lorg/joda/time/DateTimeField;.getMinimumValue:()I` @kind virtual;
  #L3bdb60.  v4:= temp;
  #L3bdb62.  if v4 < 0 then goto L3bdb6a;
  #L3bdb66.  v4:= v4 / v6 @kind int;
  #L3bdb68.  goto L3bdb74;
  #L3bdb6a.  v4:= v4 + 1;
  #L3bdb6e.  v4:= v4 / v6 @kind int;
  #L3bdb70.  v4:= v4 + -1;
  #L3bdb74.  call temp:= `getMaximumValue`(v3) @signature `Lorg/joda/time/DateTimeField;.getMaximumValue:()I` @kind virtual;
  #L3bdb7a.  v3:= temp;
  #L3bdb7c.  if v3 < 0 then goto L3bdb84;
  #L3bdb80.  v3:= v3 / v6 @kind int;
  #L3bdb82.  goto L3bdb8e;
  #L3bdb84.  v3:= v3 + 1;
  #L3bdb88.  v3:= v3 / v6 @kind int;
  #L3bdb8a.  v3:= v3 + -1;
  #L3bdb8e.  v2.`org.joda.time.field.DividedDateTimeField.iMin` @type ^`int` := v4;
  #L3bdb92.  v2.`org.joda.time.field.DividedDateTimeField.iMax` @type ^`int` := v3;
  #L3bdb96.  return @kind void;
  #L3bdb98.  v3:= new `java.lang.IllegalArgumentException`;
  #L3bdb9c.  v4:= "The divisor must be at least 2" @kind object;
  #L3bdba0.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3bdba6.  throw v3;
}
procedure `void` `<init>`(`org.joda.time.field.DividedDateTimeField` v1 @kind this, `org.joda.time.field.RemainderDateTimeField` v2 @kind object, `org.joda.time.DateTimeFieldType` v3 @kind object) @signature `Lorg/joda/time/field/DividedDateTimeField;.<init>:(Lorg/joda/time/field/RemainderDateTimeField;Lorg/joda/time/DateTimeFieldType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3bdbb8.  v0:= 0I;
  #L3bdbba.  call `<init>`(v1, v2, v0, v3) @signature `Lorg/joda/time/field/DividedDateTimeField;.<init>:(Lorg/joda/time/field/RemainderDateTimeField;Lorg/joda/time/DurationField;Lorg/joda/time/DateTimeFieldType;)V` @kind direct;
  #L3bdbc0.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.field.DividedDateTimeField` v1 @kind this, `org.joda.time.field.RemainderDateTimeField` v2 @kind object, `org.joda.time.DurationField` v3 @kind object, `org.joda.time.DateTimeFieldType` v4 @kind object) @signature `Lorg/joda/time/field/DividedDateTimeField;.<init>:(Lorg/joda/time/field/RemainderDateTimeField;Lorg/joda/time/DurationField;Lorg/joda/time/DateTimeFieldType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3bdbd4.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bdbda.  v0:= temp @kind object;
  #L3bdbdc.  call `<init>`(v1, v0, v4) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V` @kind direct;
  #L3bdbe2.  v4:= v2.`org.joda.time.field.RemainderDateTimeField.iDivisor` @type ^`int`;
  #L3bdbe6.  v1.`org.joda.time.field.DividedDateTimeField.iDivisor` @type ^`int` := v4;
  #L3bdbea.  v2:= v2.`org.joda.time.field.RemainderDateTimeField.iRangeField` @type ^`org.joda.time.DurationField` @kind object;
  #L3bdbee.  v1.`org.joda.time.field.DividedDateTimeField.iDurationField` @type ^`org.joda.time.DurationField` := v2 @kind object;
  #L3bdbf2.  v1.`org.joda.time.field.DividedDateTimeField.iRangeDurationField` @type ^`org.joda.time.DurationField` := v3 @kind object;
  #L3bdbf6.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bdbfc.  v2:= temp @kind object;
  #L3bdbfe.  call temp:= `getMinimumValue`(v2) @signature `Lorg/joda/time/DateTimeField;.getMinimumValue:()I` @kind virtual;
  #L3bdc04.  v3:= temp;
  #L3bdc06.  if v3 < 0 then goto L3bdc0e;
  #L3bdc0a.  v3:= v3 / v4 @kind int;
  #L3bdc0c.  goto L3bdc18;
  #L3bdc0e.  v3:= v3 + 1;
  #L3bdc12.  v3:= v3 / v4 @kind int;
  #L3bdc14.  v3:= v3 + -1;
  #L3bdc18.  call temp:= `getMaximumValue`(v2) @signature `Lorg/joda/time/DateTimeField;.getMaximumValue:()I` @kind virtual;
  #L3bdc1e.  v2:= temp;
  #L3bdc20.  if v2 < 0 then goto L3bdc28;
  #L3bdc24.  v2:= v2 / v4 @kind int;
  #L3bdc26.  goto L3bdc32;
  #L3bdc28.  v2:= v2 + 1;
  #L3bdc2c.  v2:= v2 / v4 @kind int;
  #L3bdc2e.  v2:= v2 + -1;
  #L3bdc32.  v1.`org.joda.time.field.DividedDateTimeField.iMin` @type ^`int` := v3;
  #L3bdc36.  v1.`org.joda.time.field.DividedDateTimeField.iMax` @type ^`int` := v2;
  #L3bdc3a.  return @kind void;
}
procedure `int` `getRemainder`(`org.joda.time.field.DividedDateTimeField` v2 @kind this, `int` v3 ) @signature `Lorg/joda/time/field/DividedDateTimeField;.getRemainder:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3bd914.  if v3 < 0 then goto L3bd920;
  #L3bd918.  v0:= v2.`org.joda.time.field.DividedDateTimeField.iDivisor` @type ^`int`;
  #L3bd91c.  v3:= v3 %% v0 @kind int;
  #L3bd91e.  return v3;
  #L3bd920.  v0:= v2.`org.joda.time.field.DividedDateTimeField.iDivisor` @type ^`int`;
  #L3bd924.  v1:= v0 + -1;
  #L3bd928.  v3:= v3 + 1;
  #L3bd92c.  v3:= v3 %% v0 @kind int;
  #L3bd92e.  v1:= v1 + v3 @kind int;
  #L3bd930.  return v1;
}
procedure `long` `add`(`org.joda.time.field.DividedDateTimeField` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lorg/joda/time/field/DividedDateTimeField;.add:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bd944.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bd94a.  v0:= temp @kind object;
  #L3bd94c.  v1:= v2.`org.joda.time.field.DividedDateTimeField.iDivisor` @type ^`int`;
  #L3bd950.  v5:= v5 * v1 @kind int;
  #L3bd954.  call temp:= `add`(v0, v3, v5) @signature `Lorg/joda/time/DateTimeField;.add:(JI)J` @kind virtual;
  #L3bd95a.  v3:= temp @kind wide;
  #L3bd95c.  return v3 @kind wide;
}
procedure `long` `add`(`org.joda.time.field.DividedDateTimeField` v3 @kind this, `long` v4 , `long` v6 ) @signature `Lorg/joda/time/field/DividedDateTimeField;.add:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3bd970.  call temp:= `getWrappedField`(v3) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bd976.  v0:= temp @kind object;
  #L3bd978.  v1:= v3.`org.joda.time.field.DividedDateTimeField.iDivisor` @type ^`int`;
  #L3bd97c.  v1:= (`long`) v1 @kind i2l;
  #L3bd97e.  v6:= v6 * v1 @kind long;
  #L3bd982.  call temp:= `add`(v0, v4, v6) @signature `Lorg/joda/time/DateTimeField;.add:(JJ)J` @kind virtual;
  #L3bd988.  v4:= temp @kind wide;
  #L3bd98a.  return v4 @kind wide;
}
procedure `long` `addWrapField`(`org.joda.time.field.DividedDateTimeField` v3 @kind this, `long` v4 , `int` v6 ) @signature `Lorg/joda/time/field/DividedDateTimeField;.addWrapField:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3bd99c.  call temp:= `get`(v3, v4) @signature `Lorg/joda/time/field/DividedDateTimeField;.get:(J)I` @kind virtual;
  #L3bd9a2.  v0:= temp;
  #L3bd9a4.  v1:= v3.`org.joda.time.field.DividedDateTimeField.iMin` @type ^`int`;
  #L3bd9a8.  v2:= v3.`org.joda.time.field.DividedDateTimeField.iMax` @type ^`int`;
  #L3bd9ac.  call temp:= `getWrappedValue`(v0, v6, v1, v2) @signature `Lorg/joda/time/field/FieldUtils;.getWrappedValue:(IIII)I` @kind static;
  #L3bd9b2.  v6:= temp;
  #L3bd9b4.  call temp:= `set`(v3, v4, v6) @signature `Lorg/joda/time/field/DividedDateTimeField;.set:(JI)J` @kind virtual;
  #L3bd9ba.  v4:= temp @kind wide;
  #L3bd9bc.  return v4 @kind wide;
}
procedure `int` `get`(`org.joda.time.field.DividedDateTimeField` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/field/DividedDateTimeField;.get:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bd868.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bd86e.  v0:= temp @kind object;
  #L3bd870.  call temp:= `get`(v0, v2) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3bd876.  v2:= temp;
  #L3bd878.  if v2 < 0 then goto L3bd884;
  #L3bd87c.  v3:= v1.`org.joda.time.field.DividedDateTimeField.iDivisor` @type ^`int`;
  #L3bd880.  v2:= v2 / v3 @kind int;
  #L3bd882.  return v2;
  #L3bd884.  v2:= v2 + 1;
  #L3bd888.  v3:= v1.`org.joda.time.field.DividedDateTimeField.iDivisor` @type ^`int`;
  #L3bd88c.  v2:= v2 / v3 @kind int;
  #L3bd88e.  v2:= v2 + -1;
  #L3bd892.  return v2;
}
procedure `int` `getDifference`(`org.joda.time.field.DividedDateTimeField` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/joda/time/field/DividedDateTimeField;.getDifference:(JJ)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bd8a4.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bd8aa.  v0:= temp @kind object;
  #L3bd8ac.  call temp:= `getDifference`(v0, v2, v4) @signature `Lorg/joda/time/DateTimeField;.getDifference:(JJ)I` @kind virtual;
  #L3bd8b2.  v2:= temp;
  #L3bd8b4.  v3:= v1.`org.joda.time.field.DividedDateTimeField.iDivisor` @type ^`int`;
  #L3bd8b8.  v2:= v2 / v3 @kind int;
  #L3bd8ba.  return v2;
}
procedure `long` `getDifferenceAsLong`(`org.joda.time.field.DividedDateTimeField` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/joda/time/field/DividedDateTimeField;.getDifferenceAsLong:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bd9d0.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bd9d6.  v0:= temp @kind object;
  #L3bd9d8.  call temp:= `getDifferenceAsLong`(v0, v2, v4) @signature `Lorg/joda/time/DateTimeField;.getDifferenceAsLong:(JJ)J` @kind virtual;
  #L3bd9de.  v2:= temp @kind wide;
  #L3bd9e0.  v4:= v1.`org.joda.time.field.DividedDateTimeField.iDivisor` @type ^`int`;
  #L3bd9e4.  v4:= (`long`) v4 @kind i2l;
  #L3bd9e6.  v2:= v2 / v4 @kind long;
  #L3bd9e8.  return v2 @kind wide;
}
procedure `int` `getDivisor`(`org.joda.time.field.DividedDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/DividedDateTimeField;.getDivisor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bd8cc.  v0:= v1.`org.joda.time.field.DividedDateTimeField.iDivisor` @type ^`int`;
  #L3bd8d0.  return v0;
}
procedure `org.joda.time.DurationField` `getDurationField`(`org.joda.time.field.DividedDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/DividedDateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdac0.  v0:= v1.`org.joda.time.field.DividedDateTimeField.iDurationField` @type ^`org.joda.time.DurationField` @kind object;
  #L3bdac4.  return v0 @kind object;
}
procedure `int` `getMaximumValue`(`org.joda.time.field.DividedDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/DividedDateTimeField;.getMaximumValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bd8e4.  v0:= v1.`org.joda.time.field.DividedDateTimeField.iMax` @type ^`int`;
  #L3bd8e8.  return v0;
}
procedure `int` `getMinimumValue`(`org.joda.time.field.DividedDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/DividedDateTimeField;.getMinimumValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bd8fc.  v0:= v1.`org.joda.time.field.DividedDateTimeField.iMin` @type ^`int`;
  #L3bd900.  return v0;
}
procedure `org.joda.time.DurationField` `getRangeDurationField`(`org.joda.time.field.DividedDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/DividedDateTimeField;.getRangeDurationField:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bdad8.  v0:= v1.`org.joda.time.field.DividedDateTimeField.iRangeDurationField` @type ^`org.joda.time.DurationField` @kind object;
  #L3bdadc.  if v0 == 0 then goto L3bdae2;
  #L3bdae0.  return v0 @kind object;
  #L3bdae2.  call temp:= `getRangeDurationField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getRangeDurationField:()Lorg/joda/time/DurationField;` @kind super;
  #L3bdae8.  v0:= temp @kind object;
  #L3bdaea.  return v0 @kind object;
}
procedure `long` `remainder`(`org.joda.time.field.DividedDateTimeField` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/field/DividedDateTimeField;.remainder:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bd9fc.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bda02.  v0:= temp @kind object;
  #L3bda04.  call temp:= `remainder`(v0, v3) @signature `Lorg/joda/time/DateTimeField;.remainder:(J)J` @kind virtual;
  #L3bda0a.  v0:= temp @kind wide;
  #L3bda0c.  call temp:= `get`(v2, v0) @signature `Lorg/joda/time/field/DividedDateTimeField;.get:(J)I` @kind virtual;
  #L3bda12.  v0:= temp;
  #L3bda14.  call temp:= `set`(v2, v3, v0) @signature `Lorg/joda/time/field/DividedDateTimeField;.set:(JI)J` @kind virtual;
  #L3bda1a.  v3:= temp @kind wide;
  #L3bda1c.  return v3 @kind wide;
}
procedure `long` `roundFloor`(`org.joda.time.field.DividedDateTimeField` v3 @kind this, `long` v4 ) @signature `Lorg/joda/time/field/DividedDateTimeField;.roundFloor:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3bda30.  call temp:= `getWrappedField`(v3) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bda36.  v0:= temp @kind object;
  #L3bda38.  call temp:= `get`(v3, v4) @signature `Lorg/joda/time/field/DividedDateTimeField;.get:(J)I` @kind virtual;
  #L3bda3e.  v1:= temp;
  #L3bda40.  v2:= v3.`org.joda.time.field.DividedDateTimeField.iDivisor` @type ^`int`;
  #L3bda44.  v1:= v1 * v2 @kind int;
  #L3bda48.  call temp:= `set`(v0, v4, v1) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3bda4e.  v4:= temp @kind wide;
  #L3bda50.  call temp:= `roundFloor`(v0, v4) @signature `Lorg/joda/time/DateTimeField;.roundFloor:(J)J` @kind virtual;
  #L3bda56.  v4:= temp @kind wide;
  #L3bda58.  return v4 @kind wide;
}
procedure `long` `set`(`org.joda.time.field.DividedDateTimeField` v3 @kind this, `long` v4 , `int` v6 ) @signature `Lorg/joda/time/field/DividedDateTimeField;.set:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3bda6c.  v0:= v3.`org.joda.time.field.DividedDateTimeField.iMin` @type ^`int`;
  #L3bda70.  v1:= v3.`org.joda.time.field.DividedDateTimeField.iMax` @type ^`int`;
  #L3bda74.  call `verifyValueBounds`(v3, v6, v0, v1) @signature `Lorg/joda/time/field/FieldUtils;.verifyValueBounds:(Lorg/joda/time/DateTimeField;III)V` @kind static;
  #L3bda7a.  call temp:= `getWrappedField`(v3) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bda80.  v0:= temp @kind object;
  #L3bda82.  call temp:= `get`(v0, v4) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3bda88.  v0:= temp;
  #L3bda8a.  call temp:= `getRemainder`(v3, v0) @signature `Lorg/joda/time/field/DividedDateTimeField;.getRemainder:(I)I` @kind direct;
  #L3bda90.  v0:= temp;
  #L3bda92.  call temp:= `getWrappedField`(v3) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bda98.  v1:= temp @kind object;
  #L3bda9a.  v2:= v3.`org.joda.time.field.DividedDateTimeField.iDivisor` @type ^`int`;
  #L3bda9e.  v6:= v6 * v2 @kind int;
  #L3bdaa2.  v6:= v6 + v0 @kind int;
  #L3bdaa4.  call temp:= `set`(v1, v4, v6) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3bdaaa.  v4:= temp @kind wide;
  #L3bdaac.  return v4 @kind wide;
}
