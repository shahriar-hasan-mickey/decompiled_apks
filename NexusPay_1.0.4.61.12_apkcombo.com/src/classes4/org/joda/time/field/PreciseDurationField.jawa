record `org.joda.time.field.PreciseDurationField` @kind class @AccessFlag PUBLIC extends `org.joda.time.field.BaseDurationField` @kind class {
  `long` `org.joda.time.field.PreciseDurationField.iUnitMillis` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@org.joda.time.field.PreciseDurationField.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.field.PreciseDurationField` v0 @kind this, `org.joda.time.DurationFieldType` v1 @kind object, `long` v2 ) @signature `Lorg/joda/time/field/PreciseDurationField;.<init>:(Lorg/joda/time/DurationFieldType;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3bf028.  call `<init>`(v0, v1) @signature `Lorg/joda/time/field/BaseDurationField;.<init>:(Lorg/joda/time/DurationFieldType;)V` @kind direct;
  #L3bf02e.  v0.`org.joda.time.field.PreciseDurationField.iUnitMillis` @type ^`long` := v2 @kind wide;
  #L3bf032.  return @kind void;
}
procedure `long` `add`(`org.joda.time.field.PreciseDurationField` v4 @kind this, `long` v5 , `int` v7 ) @signature `Lorg/joda/time/field/PreciseDurationField;.add:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bef50.  v0:= (`long`) v7 @kind i2l;
  #L3bef52.  v2:= v4.`org.joda.time.field.PreciseDurationField.iUnitMillis` @type ^`long` @kind wide;
  #L3bef56.  v0:= v0 * v2 @kind long;
  #L3bef5a.  call temp:= `safeAdd`(v5, v0) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(JJ)J` @kind static;
  #L3bef60.  v5:= temp @kind wide;
  #L3bef62.  return v5 @kind wide;
}
procedure `long` `add`(`org.joda.time.field.PreciseDurationField` v2 @kind this, `long` v3 , `long` v5 ) @signature `Lorg/joda/time/field/PreciseDurationField;.add:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bef74.  v0:= v2.`org.joda.time.field.PreciseDurationField.iUnitMillis` @type ^`long` @kind wide;
  #L3bef78.  call temp:= `safeMultiply`(v5, v0) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(JJ)J` @kind static;
  #L3bef7e.  v5:= temp @kind wide;
  #L3bef80.  call temp:= `safeAdd`(v3, v5) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(JJ)J` @kind static;
  #L3bef86.  v3:= temp @kind wide;
  #L3bef88.  return v3 @kind wide;
}
procedure `boolean` `equals`(`org.joda.time.field.PreciseDurationField` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lorg/joda/time/field/PreciseDurationField;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3beeb4.  v0:= 1I;
  #L3beeb6.  if v7 != v8 then goto L3beebc;
  #L3beeba.  return v0;
  #L3beebc.  v1:= instanceof @variable v8 @type ^`org.joda.time.field.PreciseDurationField` @kind boolean;
  #L3beec0.  v2:= 0I;
  #L3beec2.  if v1 == 0 then goto L3beef4;
  #L3beec6.  v8:= (`org.joda.time.field.PreciseDurationField`) v8 @kind object;
  #L3beeca.  call temp:= `getType`(v7) @signature `Lorg/joda/time/field/BaseDurationField;.getType:()Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L3beed0.  v1:= temp @kind object;
  #L3beed2.  call temp:= `getType`(v8) @signature `Lorg/joda/time/field/BaseDurationField;.getType:()Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L3beed8.  v3:= temp @kind object;
  #L3beeda.  if v1 != v3 then goto L3beef0;
  #L3beede.  v3:= v7.`org.joda.time.field.PreciseDurationField.iUnitMillis` @type ^`long` @kind wide;
  #L3beee2.  v5:= v8.`org.joda.time.field.PreciseDurationField.iUnitMillis` @type ^`long` @kind wide;
  #L3beee6.  v8:= lcmp(v3, v5);
  #L3beeea.  if v8 != 0 then goto L3beef0;
  #L3beeee.  goto L3beef2;
  #L3beef0.  v0:= 0I;
  #L3beef2.  return v0;
  #L3beef4.  return v2;
}
procedure `long` `getDifferenceAsLong`(`org.joda.time.field.PreciseDurationField` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lorg/joda/time/field/PreciseDurationField;.getDifferenceAsLong:(JJ)J` @AccessFlag PUBLIC {
    temp;

  #L3bef9c.  call temp:= `safeSubtract`(v1, v3) @signature `Lorg/joda/time/field/FieldUtils;.safeSubtract:(JJ)J` @kind static;
  #L3befa2.  v1:= temp @kind wide;
  #L3befa4.  v3:= v0.`org.joda.time.field.PreciseDurationField.iUnitMillis` @type ^`long` @kind wide;
  #L3befa8.  v1:= v1 / v3 @kind long;
  #L3befaa.  return v1 @kind wide;
}
procedure `long` `getMillis`(`org.joda.time.field.PreciseDurationField` v2 @kind this, `int` v3 , `long` v4 ) @signature `Lorg/joda/time/field/PreciseDurationField;.getMillis:(IJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3befbc.  v3:= (`long`) v3 @kind i2l;
  #L3befbe.  v0:= v2.`org.joda.time.field.PreciseDurationField.iUnitMillis` @type ^`long` @kind wide;
  #L3befc2.  v3:= v3 * v0 @kind long;
  #L3befc6.  return v3 @kind wide;
}
procedure `long` `getMillis`(`org.joda.time.field.PreciseDurationField` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lorg/joda/time/field/PreciseDurationField;.getMillis:(JJ)J` @AccessFlag PUBLIC {
    temp;

  #L3befd8.  v3:= v0.`org.joda.time.field.PreciseDurationField.iUnitMillis` @type ^`long` @kind wide;
  #L3befdc.  call temp:= `safeMultiply`(v1, v3) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(JJ)J` @kind static;
  #L3befe2.  v1:= temp @kind wide;
  #L3befe4.  return v1 @kind wide;
}
procedure `long` `getUnitMillis`(`org.joda.time.field.PreciseDurationField` v2 @kind this) @signature `Lorg/joda/time/field/PreciseDurationField;.getUnitMillis:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3beff8.  v0:= v2.`org.joda.time.field.PreciseDurationField.iUnitMillis` @type ^`long` @kind wide;
  #L3beffc.  return v0 @kind wide;
}
procedure `long` `getValueAsLong`(`org.joda.time.field.PreciseDurationField` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lorg/joda/time/field/PreciseDurationField;.getValueAsLong:(JJ)J` @AccessFlag PUBLIC {
    temp;

  #L3bf010.  v3:= v0.`org.joda.time.field.PreciseDurationField.iUnitMillis` @type ^`long` @kind wide;
  #L3bf014.  v1:= v1 / v3 @kind long;
  #L3bf016.  return v1 @kind wide;
}
procedure `int` `hashCode`(`org.joda.time.field.PreciseDurationField` v4 @kind this) @signature `Lorg/joda/time/field/PreciseDurationField;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bef1c.  v0:= v4.`org.joda.time.field.PreciseDurationField.iUnitMillis` @type ^`long` @kind wide;
  #L3bef20.  v2:= 32I;
  #L3bef24.  v2:= v0 ^>> v2 @kind long;
  #L3bef28.  v0:= v0 ^~ v2 @kind long;
  #L3bef2a.  v1:= (`int`) v0 @kind l2i;
  #L3bef2c.  call temp:= `getType`(v4) @signature `Lorg/joda/time/field/BaseDurationField;.getType:()Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L3bef32.  v0:= temp @kind object;
  #L3bef34.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3bef3a.  v0:= temp;
  #L3bef3c.  v1:= v1 + v0 @kind int;
  #L3bef3e.  return v1;
}
procedure `boolean` `isPrecise`(`org.joda.time.field.PreciseDurationField` v1 @kind this) @signature `Lorg/joda/time/field/PreciseDurationField;.isPrecise:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3bef08.  v0:= 1I;
  #L3bef0a.  return v0;
}
