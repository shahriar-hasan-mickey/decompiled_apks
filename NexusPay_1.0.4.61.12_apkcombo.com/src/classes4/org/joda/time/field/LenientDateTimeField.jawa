record `org.joda.time.field.LenientDateTimeField` @kind class @AccessFlag PUBLIC extends `org.joda.time.field.DelegatedDateTimeField` @kind class {
  `org.joda.time.Chronology` `org.joda.time.field.LenientDateTimeField.iBase` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@org.joda.time.field.LenientDateTimeField.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.field.LenientDateTimeField` v0 @kind this, `org.joda.time.DateTimeField` v1 @kind object, `org.joda.time.Chronology` v2 @kind object) @signature `Lorg/joda/time/field/LenientDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;Lorg/joda/time/Chronology;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3be544.  call `<init>`(v0, v1) @signature `Lorg/joda/time/field/DelegatedDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L3be54a.  v0.`org.joda.time.field.LenientDateTimeField.iBase` @type ^`org.joda.time.Chronology` := v2 @kind object;
  #L3be54e.  return @kind void;
}
procedure `org.joda.time.DateTimeField` `getInstance`(`org.joda.time.DateTimeField` v1 @kind object, `org.joda.time.Chronology` v2 @kind object) @signature `Lorg/joda/time/field/LenientDateTimeField;.getInstance:(Lorg/joda/time/DateTimeField;Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3be4fc.  if v1 != 0 then goto L3be504;
  #L3be500.  v1:= 0I;
  #L3be502.  return v1 @kind object;
  #L3be504.  v0:= instanceof @variable v1 @type ^`org.joda.time.field.StrictDateTimeField` @kind boolean;
  #L3be508.  if v0 == 0 then goto L3be518;
  #L3be50c.  v1:= (`org.joda.time.field.StrictDateTimeField`) v1 @kind object;
  #L3be510.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DelegatedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3be516.  v1:= temp @kind object;
  #L3be518.  call temp:= `isLenient`(v1) @signature `Lorg/joda/time/DateTimeField;.isLenient:()Z` @kind virtual;
  #L3be51e.  v0:= temp;
  #L3be520.  if v0 == 0 then goto L3be526;
  #L3be524.  return v1 @kind object;
  #L3be526.  v0:= new `org.joda.time.field.LenientDateTimeField`;
  #L3be52a.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/field/LenientDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3be530.  return v0 @kind object;
}
procedure `boolean` `isLenient`(`org.joda.time.field.LenientDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/LenientDateTimeField;.isLenient:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3be470.  v0:= 1I;
  #L3be472.  return v0;
}
procedure `long` `set`(`org.joda.time.field.LenientDateTimeField` v10 @kind this, `long` v11 , `int` v13 ) @signature `Lorg/joda/time/field/LenientDateTimeField;.set:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3be484.  v0:= v10.`org.joda.time.field.LenientDateTimeField.iBase` @type ^`org.joda.time.Chronology` @kind object;
  #L3be488.  call temp:= `getZone`(v0) @signature `Lorg/joda/time/Chronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3be48e.  v0:= temp @kind object;
  #L3be490.  call temp:= `convertUTCToLocal`(v0, v11) @signature `Lorg/joda/time/DateTimeZone;.convertUTCToLocal:(J)J` @kind virtual;
  #L3be496.  v0:= temp @kind wide;
  #L3be498.  v2:= (`long`) v13 @kind i2l;
  #L3be49a.  call temp:= `get`(v10, v11) @signature `Lorg/joda/time/field/DelegatedDateTimeField;.get:(J)I` @kind virtual;
  #L3be4a0.  v13:= temp;
  #L3be4a2.  v4:= (`long`) v13 @kind i2l;
  #L3be4a4.  call temp:= `safeSubtract`(v2, v4) @signature `Lorg/joda/time/field/FieldUtils;.safeSubtract:(JJ)J` @kind static;
  #L3be4aa.  v2:= temp @kind wide;
  #L3be4ac.  call temp:= `getType`(v10) @signature `Lorg/joda/time/field/DelegatedDateTimeField;.getType:()Lorg/joda/time/DateTimeFieldType;` @kind virtual;
  #L3be4b2.  v13:= temp @kind object;
  #L3be4b4.  v4:= v10.`org.joda.time.field.LenientDateTimeField.iBase` @type ^`org.joda.time.Chronology` @kind object;
  #L3be4b8.  call temp:= `withUTC`(v4) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3be4be.  v4:= temp @kind object;
  #L3be4c0.  call temp:= `getField`(v13, v4) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3be4c6.  v13:= temp @kind object;
  #L3be4c8.  call temp:= `add`(v13, v0, v2) @signature `Lorg/joda/time/DateTimeField;.add:(JJ)J` @kind virtual;
  #L3be4ce.  v5:= temp @kind wide;
  #L3be4d0.  v13:= v10.`org.joda.time.field.LenientDateTimeField.iBase` @type ^`org.joda.time.Chronology` @kind object;
  #L3be4d4.  call temp:= `getZone`(v13) @signature `Lorg/joda/time/Chronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3be4da.  v4:= temp @kind object;
  #L3be4dc.  v7:= 0I;
  #L3be4de.  v8:= v11 @kind wide;
  #L3be4e0.  call temp:= `convertLocalToUTC`(v4, v5, v7, v8) @signature `Lorg/joda/time/DateTimeZone;.convertLocalToUTC:(JZJ)J` @kind virtual;
  #L3be4e6.  v11:= temp @kind wide;
  #L3be4e8.  return v11 @kind wide;
}
