record `org.joda.time.field.AbstractPartialFieldProperty` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`org.joda.time.field.AbstractPartialFieldProperty` v0 @kind this) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3bb9c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3bb9c6.  return @kind void;
}
procedure `int` `compareTo`(`org.joda.time.field.AbstractPartialFieldProperty` v2 @kind this, `org.joda.time.ReadableInstant` v3 @kind object) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.compareTo:(Lorg/joda/time/ReadableInstant;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bb648.  if v3 == 0 then goto L3bb678;
  #L3bb64c.  call temp:= `get`(v2) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.get:()I` @kind virtual;
  #L3bb652.  v0:= temp;
  #L3bb654.  call temp:= `getFieldType`(v2) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getFieldType:()Lorg/joda/time/DateTimeFieldType;` @kind virtual;
  #L3bb65a.  v1:= temp @kind object;
  #L3bb65c.  call temp:= `get`(v3, v1) @signature `Lorg/joda/time/ReadableInstant;.get:(Lorg/joda/time/DateTimeFieldType;)I` @kind interface;
  #L3bb662.  v3:= temp;
  #L3bb664.  if v0 >= v3 then goto L3bb66c;
  #L3bb668.  v3:= -1I;
  #L3bb66a.  return v3;
  #L3bb66c.  if v0 <= v3 then goto L3bb674;
  #L3bb670.  v3:= 1I;
  #L3bb672.  return v3;
  #L3bb674.  v3:= 0I;
  #L3bb676.  return v3;
  #L3bb678.  v3:= new `java.lang.IllegalArgumentException`;
  #L3bb67c.  v0:= "The instant must not be null" @kind object;
  #L3bb680.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3bb686.  throw v3;
}
procedure `int` `compareTo`(`org.joda.time.field.AbstractPartialFieldProperty` v2 @kind this, `org.joda.time.ReadablePartial` v3 @kind object) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.compareTo:(Lorg/joda/time/ReadablePartial;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bb698.  if v3 == 0 then goto L3bb6c8;
  #L3bb69c.  call temp:= `get`(v2) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.get:()I` @kind virtual;
  #L3bb6a2.  v0:= temp;
  #L3bb6a4.  call temp:= `getFieldType`(v2) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getFieldType:()Lorg/joda/time/DateTimeFieldType;` @kind virtual;
  #L3bb6aa.  v1:= temp @kind object;
  #L3bb6ac.  call temp:= `get`(v3, v1) @signature `Lorg/joda/time/ReadablePartial;.get:(Lorg/joda/time/DateTimeFieldType;)I` @kind interface;
  #L3bb6b2.  v3:= temp;
  #L3bb6b4.  if v0 >= v3 then goto L3bb6bc;
  #L3bb6b8.  v3:= -1I;
  #L3bb6ba.  return v3;
  #L3bb6bc.  if v0 <= v3 then goto L3bb6c4;
  #L3bb6c0.  v3:= 1I;
  #L3bb6c2.  return v3;
  #L3bb6c4.  v3:= 0I;
  #L3bb6c6.  return v3;
  #L3bb6c8.  v3:= new `java.lang.IllegalArgumentException`;
  #L3bb6cc.  v0:= "The instant must not be null" @kind object;
  #L3bb6d0.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3bb6d6.  throw v3;
}
procedure `boolean` `equals`(`org.joda.time.field.AbstractPartialFieldProperty` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bb5c4.  v0:= 1I;
  #L3bb5c6.  if v4 != v5 then goto L3bb5cc;
  #L3bb5ca.  return v0;
  #L3bb5cc.  v1:= instanceof @variable v5 @type ^`org.joda.time.field.AbstractPartialFieldProperty` @kind boolean;
  #L3bb5d0.  v2:= 0I;
  #L3bb5d2.  if v1 != 0 then goto L3bb5d8;
  #L3bb5d6.  return v2;
  #L3bb5d8.  v5:= (`org.joda.time.field.AbstractPartialFieldProperty`) v5 @kind object;
  #L3bb5dc.  call temp:= `get`(v4) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.get:()I` @kind virtual;
  #L3bb5e2.  v1:= temp;
  #L3bb5e4.  call temp:= `get`(v5) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.get:()I` @kind virtual;
  #L3bb5ea.  v3:= temp;
  #L3bb5ec.  if v1 != v3 then goto L3bb632;
  #L3bb5f0.  call temp:= `getFieldType`(v4) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getFieldType:()Lorg/joda/time/DateTimeFieldType;` @kind virtual;
  #L3bb5f6.  v1:= temp @kind object;
  #L3bb5f8.  call temp:= `getFieldType`(v5) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getFieldType:()Lorg/joda/time/DateTimeFieldType;` @kind virtual;
  #L3bb5fe.  v3:= temp @kind object;
  #L3bb600.  if v1 != v3 then goto L3bb632;
  #L3bb604.  call temp:= `getReadablePartial`(v4) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getReadablePartial:()Lorg/joda/time/ReadablePartial;` @kind virtual;
  #L3bb60a.  v1:= temp @kind object;
  #L3bb60c.  call temp:= `getChronology`(v1) @signature `Lorg/joda/time/ReadablePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3bb612.  v1:= temp @kind object;
  #L3bb614.  call temp:= `getReadablePartial`(v5) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getReadablePartial:()Lorg/joda/time/ReadablePartial;` @kind virtual;
  #L3bb61a.  v5:= temp @kind object;
  #L3bb61c.  call temp:= `getChronology`(v5) @signature `Lorg/joda/time/ReadablePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3bb622.  v5:= temp @kind object;
  #L3bb624.  call temp:= `equals`(v1, v5) @signature `Lorg/joda/time/field/FieldUtils;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3bb62a.  v5:= temp;
  #L3bb62c.  if v5 == 0 then goto L3bb632;
  #L3bb630.  goto L3bb634;
  #L3bb632.  v0:= 0I;
  #L3bb634.  return v0;
}
procedure `int` `get`() @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.get:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getAsShortText`(`org.joda.time.field.AbstractPartialFieldProperty` v1 @kind this) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getAsShortText:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb824.  v0:= 0I;
  #L3bb826.  call temp:= `getAsShortText`(v1, v0) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getAsShortText:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3bb82c.  v0:= temp @kind object;
  #L3bb82e.  return v0 @kind object;
}
procedure `java.lang.String` `getAsShortText`(`org.joda.time.field.AbstractPartialFieldProperty` v3 @kind this, `java.util.Locale` v4 @kind object) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getAsShortText:(Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3bb840.  call temp:= `getField`(v3) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bb846.  v0:= temp @kind object;
  #L3bb848.  call temp:= `getReadablePartial`(v3) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getReadablePartial:()Lorg/joda/time/ReadablePartial;` @kind virtual;
  #L3bb84e.  v1:= temp @kind object;
  #L3bb850.  call temp:= `get`(v3) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.get:()I` @kind virtual;
  #L3bb856.  v2:= temp;
  #L3bb858.  call temp:= `getAsShortText`(v0, v1, v2, v4) @signature `Lorg/joda/time/DateTimeField;.getAsShortText:(Lorg/joda/time/ReadablePartial;ILjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3bb85e.  v4:= temp @kind object;
  #L3bb860.  return v4 @kind object;
}
procedure `java.lang.String` `getAsString`(`org.joda.time.field.AbstractPartialFieldProperty` v1 @kind this) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getAsString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb874.  call temp:= `get`(v1) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.get:()I` @kind virtual;
  #L3bb87a.  v0:= temp;
  #L3bb87c.  call temp:= `toString`(v0) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L3bb882.  v0:= temp @kind object;
  #L3bb884.  return v0 @kind object;
}
procedure `java.lang.String` `getAsText`(`org.joda.time.field.AbstractPartialFieldProperty` v1 @kind this) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getAsText:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb898.  v0:= 0I;
  #L3bb89a.  call temp:= `getAsText`(v1, v0) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getAsText:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3bb8a0.  v0:= temp @kind object;
  #L3bb8a2.  return v0 @kind object;
}
procedure `java.lang.String` `getAsText`(`org.joda.time.field.AbstractPartialFieldProperty` v3 @kind this, `java.util.Locale` v4 @kind object) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getAsText:(Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3bb8b4.  call temp:= `getField`(v3) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bb8ba.  v0:= temp @kind object;
  #L3bb8bc.  call temp:= `getReadablePartial`(v3) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getReadablePartial:()Lorg/joda/time/ReadablePartial;` @kind virtual;
  #L3bb8c2.  v1:= temp @kind object;
  #L3bb8c4.  call temp:= `get`(v3) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.get:()I` @kind virtual;
  #L3bb8ca.  v2:= temp;
  #L3bb8cc.  call temp:= `getAsText`(v0, v1, v2, v4) @signature `Lorg/joda/time/DateTimeField;.getAsText:(Lorg/joda/time/ReadablePartial;ILjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3bb8d2.  v4:= temp @kind object;
  #L3bb8d4.  return v4 @kind object;
}
procedure `org.joda.time.DurationField` `getDurationField`(`org.joda.time.field.AbstractPartialFieldProperty` v1 @kind this) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getDurationField:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb978.  call temp:= `getField`(v1) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bb97e.  v0:= temp @kind object;
  #L3bb980.  call temp:= `getDurationField`(v0) @signature `Lorg/joda/time/DateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bb986.  v0:= temp @kind object;
  #L3bb988.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `getField`() @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getField:()Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.joda.time.DateTimeFieldType` `getFieldType`(`org.joda.time.field.AbstractPartialFieldProperty` v1 @kind this) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getFieldType:()Lorg/joda/time/DateTimeFieldType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb954.  call temp:= `getField`(v1) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bb95a.  v0:= temp @kind object;
  #L3bb95c.  call temp:= `getType`(v0) @signature `Lorg/joda/time/DateTimeField;.getType:()Lorg/joda/time/DateTimeFieldType;` @kind virtual;
  #L3bb962.  v0:= temp @kind object;
  #L3bb964.  return v0 @kind object;
}
procedure `int` `getMaximumShortTextLength`(`org.joda.time.field.AbstractPartialFieldProperty` v1 @kind this, `java.util.Locale` v2 @kind object) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getMaximumShortTextLength:(Ljava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb6e8.  call temp:= `getField`(v1) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bb6ee.  v0:= temp @kind object;
  #L3bb6f0.  call temp:= `getMaximumShortTextLength`(v0, v2) @signature `Lorg/joda/time/DateTimeField;.getMaximumShortTextLength:(Ljava/util/Locale;)I` @kind virtual;
  #L3bb6f6.  v2:= temp;
  #L3bb6f8.  return v2;
}
procedure `int` `getMaximumTextLength`(`org.joda.time.field.AbstractPartialFieldProperty` v1 @kind this, `java.util.Locale` v2 @kind object) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getMaximumTextLength:(Ljava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb70c.  call temp:= `getField`(v1) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bb712.  v0:= temp @kind object;
  #L3bb714.  call temp:= `getMaximumTextLength`(v0, v2) @signature `Lorg/joda/time/DateTimeField;.getMaximumTextLength:(Ljava/util/Locale;)I` @kind virtual;
  #L3bb71a.  v2:= temp;
  #L3bb71c.  return v2;
}
procedure `int` `getMaximumValue`(`org.joda.time.field.AbstractPartialFieldProperty` v2 @kind this) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getMaximumValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bb730.  call temp:= `getField`(v2) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bb736.  v0:= temp @kind object;
  #L3bb738.  call temp:= `getReadablePartial`(v2) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getReadablePartial:()Lorg/joda/time/ReadablePartial;` @kind virtual;
  #L3bb73e.  v1:= temp @kind object;
  #L3bb740.  call temp:= `getMaximumValue`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.getMaximumValue:(Lorg/joda/time/ReadablePartial;)I` @kind virtual;
  #L3bb746.  v0:= temp;
  #L3bb748.  return v0;
}
procedure `int` `getMaximumValueOverall`(`org.joda.time.field.AbstractPartialFieldProperty` v1 @kind this) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getMaximumValueOverall:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb75c.  call temp:= `getField`(v1) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bb762.  v0:= temp @kind object;
  #L3bb764.  call temp:= `getMaximumValue`(v0) @signature `Lorg/joda/time/DateTimeField;.getMaximumValue:()I` @kind virtual;
  #L3bb76a.  v0:= temp;
  #L3bb76c.  return v0;
}
procedure `int` `getMinimumValue`(`org.joda.time.field.AbstractPartialFieldProperty` v2 @kind this) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getMinimumValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bb780.  call temp:= `getField`(v2) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bb786.  v0:= temp @kind object;
  #L3bb788.  call temp:= `getReadablePartial`(v2) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getReadablePartial:()Lorg/joda/time/ReadablePartial;` @kind virtual;
  #L3bb78e.  v1:= temp @kind object;
  #L3bb790.  call temp:= `getMinimumValue`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.getMinimumValue:(Lorg/joda/time/ReadablePartial;)I` @kind virtual;
  #L3bb796.  v0:= temp;
  #L3bb798.  return v0;
}
procedure `int` `getMinimumValueOverall`(`org.joda.time.field.AbstractPartialFieldProperty` v1 @kind this) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getMinimumValueOverall:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb7ac.  call temp:= `getField`(v1) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bb7b2.  v0:= temp @kind object;
  #L3bb7b4.  call temp:= `getMinimumValue`(v0) @signature `Lorg/joda/time/DateTimeField;.getMinimumValue:()I` @kind virtual;
  #L3bb7ba.  v0:= temp;
  #L3bb7bc.  return v0;
}
procedure `java.lang.String` `getName`(`org.joda.time.field.AbstractPartialFieldProperty` v1 @kind this) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb8e8.  call temp:= `getField`(v1) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bb8ee.  v0:= temp @kind object;
  #L3bb8f0.  call temp:= `getName`(v0) @signature `Lorg/joda/time/DateTimeField;.getName:()Ljava/lang/String;` @kind virtual;
  #L3bb8f6.  v0:= temp @kind object;
  #L3bb8f8.  return v0 @kind object;
}
procedure `org.joda.time.DurationField` `getRangeDurationField`(`org.joda.time.field.AbstractPartialFieldProperty` v1 @kind this) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getRangeDurationField:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bb99c.  call temp:= `getField`(v1) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bb9a2.  v0:= temp @kind object;
  #L3bb9a4.  call temp:= `getRangeDurationField`(v0) @signature `Lorg/joda/time/DateTimeField;.getRangeDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bb9aa.  v0:= temp @kind object;
  #L3bb9ac.  return v0 @kind object;
}
procedure `org.joda.time.ReadablePartial` `getReadablePartial`() @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getReadablePartial:()Lorg/joda/time/ReadablePartial;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `int` `hashCode`(`org.joda.time.field.AbstractPartialFieldProperty` v2 @kind this) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bb7d0.  call temp:= `get`(v2) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.get:()I` @kind virtual;
  #L3bb7d6.  v0:= temp;
  #L3bb7d8.  v1:= 247I;
  #L3bb7dc.  v1:= v1 + v0 @kind int;
  #L3bb7de.  v1:= v1 * 13;
  #L3bb7e2.  call temp:= `getFieldType`(v2) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getFieldType:()Lorg/joda/time/DateTimeFieldType;` @kind virtual;
  #L3bb7e8.  v0:= temp @kind object;
  #L3bb7ea.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3bb7f0.  v0:= temp;
  #L3bb7f2.  v1:= v1 + v0 @kind int;
  #L3bb7f4.  v1:= v1 * 13;
  #L3bb7f8.  call temp:= `getReadablePartial`(v2) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getReadablePartial:()Lorg/joda/time/ReadablePartial;` @kind virtual;
  #L3bb7fe.  v0:= temp @kind object;
  #L3bb800.  call temp:= `getChronology`(v0) @signature `Lorg/joda/time/ReadablePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3bb806.  v0:= temp @kind object;
  #L3bb808.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3bb80e.  v0:= temp;
  #L3bb810.  v1:= v1 + v0 @kind int;
  #L3bb812.  return v1;
}
procedure `java.lang.String` `toString`(`org.joda.time.field.AbstractPartialFieldProperty` v2 @kind this) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bb90c.  v0:= new `java.lang.StringBuilder`;
  #L3bb910.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3bb916.  v1:= "Property[" @kind object;
  #L3bb91a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bb920.  call temp:= `getName`(v2) @signature `Lorg/joda/time/field/AbstractPartialFieldProperty;.getName:()Ljava/lang/String;` @kind virtual;
  #L3bb926.  v1:= temp @kind object;
  #L3bb928.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bb92e.  v1:= "]" @kind object;
  #L3bb932.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bb938.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bb93e.  v0:= temp @kind object;
  #L3bb940.  return v0 @kind object;
}
