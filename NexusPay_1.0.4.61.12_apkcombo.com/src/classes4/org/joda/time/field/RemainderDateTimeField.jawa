record `org.joda.time.field.RemainderDateTimeField` @kind class @AccessFlag PUBLIC extends `org.joda.time.field.DecoratedDateTimeField` @kind class {
  `int` `org.joda.time.field.RemainderDateTimeField.iDivisor` @AccessFlag FINAL;
  `org.joda.time.DurationField` `org.joda.time.field.RemainderDateTimeField.iDurationField` @AccessFlag FINAL;
  `org.joda.time.DurationField` `org.joda.time.field.RemainderDateTimeField.iRangeField` @AccessFlag FINAL;
}
global `long` `@@org.joda.time.field.RemainderDateTimeField.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.field.RemainderDateTimeField` v2 @kind this, `org.joda.time.DateTimeField` v3 @kind object, `org.joda.time.DateTimeFieldType` v4 @kind object, `int` v5 ) @signature `Lorg/joda/time/field/RemainderDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3bf288.  call `<init>`(v2, v3, v4) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V` @kind direct;
  #L3bf28e.  v0:= 2I;
  #L3bf290.  if v5 < v0 then goto L3bf2d0;
  #L3bf294.  call temp:= `getDurationField`(v3) @signature `Lorg/joda/time/DateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf29a.  v0:= temp @kind object;
  #L3bf29c.  if v0 != 0 then goto L3bf2a8;
  #L3bf2a0.  v4:= 0I;
  #L3bf2a2.  v2.`org.joda.time.field.RemainderDateTimeField.iRangeField` @type ^`org.joda.time.DurationField` := v4 @kind object;
  #L3bf2a6.  goto L3bf2be;
  #L3bf2a8.  v1:= new `org.joda.time.field.ScaledDurationField`;
  #L3bf2ac.  call temp:= `getRangeDurationType`(v4) @signature `Lorg/joda/time/DateTimeFieldType;.getRangeDurationType:()Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L3bf2b2.  v4:= temp @kind object;
  #L3bf2b4.  call `<init>`(v1, v0, v4, v5) @signature `Lorg/joda/time/field/ScaledDurationField;.<init>:(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;I)V` @kind direct;
  #L3bf2ba.  v2.`org.joda.time.field.RemainderDateTimeField.iRangeField` @type ^`org.joda.time.DurationField` := v1 @kind object;
  #L3bf2be.  call temp:= `getDurationField`(v3) @signature `Lorg/joda/time/DateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf2c4.  v3:= temp @kind object;
  #L3bf2c6.  v2.`org.joda.time.field.RemainderDateTimeField.iDurationField` @type ^`org.joda.time.DurationField` := v3 @kind object;
  #L3bf2ca.  v2.`org.joda.time.field.RemainderDateTimeField.iDivisor` @type ^`int` := v5;
  #L3bf2ce.  return @kind void;
  #L3bf2d0.  v3:= new `java.lang.IllegalArgumentException`;
  #L3bf2d4.  v4:= "The divisor must be at least 2" @kind object;
  #L3bf2d8.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3bf2de.  throw v3;
}
procedure `void` `<init>`(`org.joda.time.field.RemainderDateTimeField` v0 @kind this, `org.joda.time.DateTimeField` v1 @kind object, `org.joda.time.DurationField` v2 @kind object, `org.joda.time.DateTimeFieldType` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/field/RemainderDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;Lorg/joda/time/DurationField;Lorg/joda/time/DateTimeFieldType;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3bf2f0.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V` @kind direct;
  #L3bf2f6.  v3:= 2I;
  #L3bf2f8.  if v4 < v3 then goto L3bf312;
  #L3bf2fc.  v0.`org.joda.time.field.RemainderDateTimeField.iRangeField` @type ^`org.joda.time.DurationField` := v2 @kind object;
  #L3bf300.  call temp:= `getDurationField`(v1) @signature `Lorg/joda/time/DateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf306.  v1:= temp @kind object;
  #L3bf308.  v0.`org.joda.time.field.RemainderDateTimeField.iDurationField` @type ^`org.joda.time.DurationField` := v1 @kind object;
  #L3bf30c.  v0.`org.joda.time.field.RemainderDateTimeField.iDivisor` @type ^`int` := v4;
  #L3bf310.  return @kind void;
  #L3bf312.  v1:= new `java.lang.IllegalArgumentException`;
  #L3bf316.  v2:= "The divisor must be at least 2" @kind object;
  #L3bf31a.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3bf320.  throw v1;
}
procedure `void` `<init>`(`org.joda.time.field.RemainderDateTimeField` v1 @kind this, `org.joda.time.field.DividedDateTimeField` v2 @kind object) @signature `Lorg/joda/time/field/RemainderDateTimeField;.<init>:(Lorg/joda/time/field/DividedDateTimeField;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3bf334.  call temp:= `getType`(v2) @signature `Lorg/joda/time/field/BaseDateTimeField;.getType:()Lorg/joda/time/DateTimeFieldType;` @kind virtual;
  #L3bf33a.  v0:= temp @kind object;
  #L3bf33c.  call `<init>`(v1, v2, v0) @signature `Lorg/joda/time/field/RemainderDateTimeField;.<init>:(Lorg/joda/time/field/DividedDateTimeField;Lorg/joda/time/DateTimeFieldType;)V` @kind direct;
  #L3bf342.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.field.RemainderDateTimeField` v1 @kind this, `org.joda.time.field.DividedDateTimeField` v2 @kind object, `org.joda.time.DateTimeFieldType` v3 @kind object) @signature `Lorg/joda/time/field/RemainderDateTimeField;.<init>:(Lorg/joda/time/field/DividedDateTimeField;Lorg/joda/time/DateTimeFieldType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3bf354.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bf35a.  v0:= temp @kind object;
  #L3bf35c.  call temp:= `getDurationField`(v0) @signature `Lorg/joda/time/DateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf362.  v0:= temp @kind object;
  #L3bf364.  call `<init>`(v1, v2, v0, v3) @signature `Lorg/joda/time/field/RemainderDateTimeField;.<init>:(Lorg/joda/time/field/DividedDateTimeField;Lorg/joda/time/DurationField;Lorg/joda/time/DateTimeFieldType;)V` @kind direct;
  #L3bf36a.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.field.RemainderDateTimeField` v1 @kind this, `org.joda.time.field.DividedDateTimeField` v2 @kind object, `org.joda.time.DurationField` v3 @kind object, `org.joda.time.DateTimeFieldType` v4 @kind object) @signature `Lorg/joda/time/field/RemainderDateTimeField;.<init>:(Lorg/joda/time/field/DividedDateTimeField;Lorg/joda/time/DurationField;Lorg/joda/time/DateTimeFieldType;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3bf37c.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bf382.  v0:= temp @kind object;
  #L3bf384.  call `<init>`(v1, v0, v4) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V` @kind direct;
  #L3bf38a.  v4:= v2.`org.joda.time.field.DividedDateTimeField.iDivisor` @type ^`int`;
  #L3bf38e.  v1.`org.joda.time.field.RemainderDateTimeField.iDivisor` @type ^`int` := v4;
  #L3bf392.  v1.`org.joda.time.field.RemainderDateTimeField.iDurationField` @type ^`org.joda.time.DurationField` := v3 @kind object;
  #L3bf396.  v2:= v2.`org.joda.time.field.DividedDateTimeField.iDurationField` @type ^`org.joda.time.DurationField` @kind object;
  #L3bf39a.  v1.`org.joda.time.field.RemainderDateTimeField.iRangeField` @type ^`org.joda.time.DurationField` := v2 @kind object;
  #L3bf39e.  return @kind void;
}
procedure `int` `getDivided`(`org.joda.time.field.RemainderDateTimeField` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/field/RemainderDateTimeField;.getDivided:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3bf084.  if v2 < 0 then goto L3bf090;
  #L3bf088.  v0:= v1.`org.joda.time.field.RemainderDateTimeField.iDivisor` @type ^`int`;
  #L3bf08c.  v2:= v2 / v0 @kind int;
  #L3bf08e.  return v2;
  #L3bf090.  v2:= v2 + 1;
  #L3bf094.  v0:= v1.`org.joda.time.field.RemainderDateTimeField.iDivisor` @type ^`int`;
  #L3bf098.  v2:= v2 / v0 @kind int;
  #L3bf09a.  v2:= v2 + -1;
  #L3bf09e.  return v2;
}
procedure `long` `addWrapField`(`org.joda.time.field.RemainderDateTimeField` v3 @kind this, `long` v4 , `int` v6 ) @signature `Lorg/joda/time/field/RemainderDateTimeField;.addWrapField:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3bf0f8.  call temp:= `get`(v3, v4) @signature `Lorg/joda/time/field/RemainderDateTimeField;.get:(J)I` @kind virtual;
  #L3bf0fe.  v0:= temp;
  #L3bf100.  v1:= v3.`org.joda.time.field.RemainderDateTimeField.iDivisor` @type ^`int`;
  #L3bf104.  v1:= v1 + -1;
  #L3bf108.  v2:= 0I;
  #L3bf10a.  call temp:= `getWrappedValue`(v0, v6, v2, v1) @signature `Lorg/joda/time/field/FieldUtils;.getWrappedValue:(IIII)I` @kind static;
  #L3bf110.  v6:= temp;
  #L3bf112.  call temp:= `set`(v3, v4, v6) @signature `Lorg/joda/time/field/RemainderDateTimeField;.set:(JI)J` @kind virtual;
  #L3bf118.  v4:= temp @kind wide;
  #L3bf11a.  return v4 @kind wide;
}
procedure `int` `get`(`org.joda.time.field.RemainderDateTimeField` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/field/RemainderDateTimeField;.get:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf044.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bf04a.  v0:= temp @kind object;
  #L3bf04c.  call temp:= `get`(v0, v2) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3bf052.  v2:= temp;
  #L3bf054.  if v2 < 0 then goto L3bf060;
  #L3bf058.  v3:= v1.`org.joda.time.field.RemainderDateTimeField.iDivisor` @type ^`int`;
  #L3bf05c.  v2:= v2 %% v3 @kind int;
  #L3bf05e.  return v2;
  #L3bf060.  v3:= v1.`org.joda.time.field.RemainderDateTimeField.iDivisor` @type ^`int`;
  #L3bf064.  v0:= v3 + -1;
  #L3bf068.  v2:= v2 + 1;
  #L3bf06c.  v2:= v2 %% v3 @kind int;
  #L3bf06e.  v0:= v0 + v2 @kind int;
  #L3bf070.  return v0;
}
procedure `int` `getDivisor`(`org.joda.time.field.RemainderDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/RemainderDateTimeField;.getDivisor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf0b0.  v0:= v1.`org.joda.time.field.RemainderDateTimeField.iDivisor` @type ^`int`;
  #L3bf0b4.  return v0;
}
procedure `org.joda.time.DurationField` `getDurationField`(`org.joda.time.field.RemainderDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/RemainderDateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf258.  v0:= v1.`org.joda.time.field.RemainderDateTimeField.iDurationField` @type ^`org.joda.time.DurationField` @kind object;
  #L3bf25c.  return v0 @kind object;
}
procedure `int` `getMaximumValue`(`org.joda.time.field.RemainderDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/RemainderDateTimeField;.getMaximumValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf0c8.  v0:= v1.`org.joda.time.field.RemainderDateTimeField.iDivisor` @type ^`int`;
  #L3bf0cc.  v0:= v0 + -1;
  #L3bf0d0.  return v0;
}
procedure `int` `getMinimumValue`(`org.joda.time.field.RemainderDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/RemainderDateTimeField;.getMinimumValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf0e4.  v0:= 0I;
  #L3bf0e6.  return v0;
}
procedure `org.joda.time.DurationField` `getRangeDurationField`(`org.joda.time.field.RemainderDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/RemainderDateTimeField;.getRangeDurationField:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf270.  v0:= v1.`org.joda.time.field.RemainderDateTimeField.iRangeField` @type ^`org.joda.time.DurationField` @kind object;
  #L3bf274.  return v0 @kind object;
}
procedure `long` `remainder`(`org.joda.time.field.RemainderDateTimeField` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/field/RemainderDateTimeField;.remainder:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf12c.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bf132.  v0:= temp @kind object;
  #L3bf134.  call temp:= `remainder`(v0, v2) @signature `Lorg/joda/time/DateTimeField;.remainder:(J)J` @kind virtual;
  #L3bf13a.  v2:= temp @kind wide;
  #L3bf13c.  return v2 @kind wide;
}
procedure `long` `roundCeiling`(`org.joda.time.field.RemainderDateTimeField` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/field/RemainderDateTimeField;.roundCeiling:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf150.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bf156.  v0:= temp @kind object;
  #L3bf158.  call temp:= `roundCeiling`(v0, v2) @signature `Lorg/joda/time/DateTimeField;.roundCeiling:(J)J` @kind virtual;
  #L3bf15e.  v2:= temp @kind wide;
  #L3bf160.  return v2 @kind wide;
}
procedure `long` `roundFloor`(`org.joda.time.field.RemainderDateTimeField` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/field/RemainderDateTimeField;.roundFloor:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf174.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bf17a.  v0:= temp @kind object;
  #L3bf17c.  call temp:= `roundFloor`(v0, v2) @signature `Lorg/joda/time/DateTimeField;.roundFloor:(J)J` @kind virtual;
  #L3bf182.  v2:= temp @kind wide;
  #L3bf184.  return v2 @kind wide;
}
procedure `long` `roundHalfCeiling`(`org.joda.time.field.RemainderDateTimeField` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/field/RemainderDateTimeField;.roundHalfCeiling:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf198.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bf19e.  v0:= temp @kind object;
  #L3bf1a0.  call temp:= `roundHalfCeiling`(v0, v2) @signature `Lorg/joda/time/DateTimeField;.roundHalfCeiling:(J)J` @kind virtual;
  #L3bf1a6.  v2:= temp @kind wide;
  #L3bf1a8.  return v2 @kind wide;
}
procedure `long` `roundHalfEven`(`org.joda.time.field.RemainderDateTimeField` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/field/RemainderDateTimeField;.roundHalfEven:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf1bc.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bf1c2.  v0:= temp @kind object;
  #L3bf1c4.  call temp:= `roundHalfEven`(v0, v2) @signature `Lorg/joda/time/DateTimeField;.roundHalfEven:(J)J` @kind virtual;
  #L3bf1ca.  v2:= temp @kind wide;
  #L3bf1cc.  return v2 @kind wide;
}
procedure `long` `roundHalfFloor`(`org.joda.time.field.RemainderDateTimeField` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/field/RemainderDateTimeField;.roundHalfFloor:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf1e0.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bf1e6.  v0:= temp @kind object;
  #L3bf1e8.  call temp:= `roundHalfFloor`(v0, v2) @signature `Lorg/joda/time/DateTimeField;.roundHalfFloor:(J)J` @kind virtual;
  #L3bf1ee.  v2:= temp @kind wide;
  #L3bf1f0.  return v2 @kind wide;
}
procedure `long` `set`(`org.joda.time.field.RemainderDateTimeField` v3 @kind this, `long` v4 , `int` v6 ) @signature `Lorg/joda/time/field/RemainderDateTimeField;.set:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3bf204.  v0:= v3.`org.joda.time.field.RemainderDateTimeField.iDivisor` @type ^`int`;
  #L3bf208.  v0:= v0 + -1;
  #L3bf20c.  v1:= 0I;
  #L3bf20e.  call `verifyValueBounds`(v3, v6, v1, v0) @signature `Lorg/joda/time/field/FieldUtils;.verifyValueBounds:(Lorg/joda/time/DateTimeField;III)V` @kind static;
  #L3bf214.  call temp:= `getWrappedField`(v3) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bf21a.  v0:= temp @kind object;
  #L3bf21c.  call temp:= `get`(v0, v4) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3bf222.  v0:= temp;
  #L3bf224.  call temp:= `getDivided`(v3, v0) @signature `Lorg/joda/time/field/RemainderDateTimeField;.getDivided:(I)I` @kind direct;
  #L3bf22a.  v0:= temp;
  #L3bf22c.  call temp:= `getWrappedField`(v3) @signature `Lorg/joda/time/field/DecoratedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bf232.  v1:= temp @kind object;
  #L3bf234.  v2:= v3.`org.joda.time.field.RemainderDateTimeField.iDivisor` @type ^`int`;
  #L3bf238.  v0:= v0 * v2 @kind int;
  #L3bf23c.  v0:= v0 + v6 @kind int;
  #L3bf23e.  call temp:= `set`(v1, v4, v0) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3bf244.  v4:= temp @kind wide;
  #L3bf246.  return v4 @kind wide;
}
