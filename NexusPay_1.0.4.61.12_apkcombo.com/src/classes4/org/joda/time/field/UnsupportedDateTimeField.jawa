record `org.joda.time.field.UnsupportedDateTimeField` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.DateTimeField` @kind class, `java.io.Serializable` @kind interface {
  `org.joda.time.DurationField` `org.joda.time.field.UnsupportedDateTimeField.iDurationField` @AccessFlag PRIVATE_FINAL;
  `org.joda.time.DateTimeFieldType` `org.joda.time.field.UnsupportedDateTimeField.iType` @AccessFlag PRIVATE_FINAL;
}
global `java.util.HashMap` `@@org.joda.time.field.UnsupportedDateTimeField.cCache` @AccessFlag PRIVATE_STATIC;
global `long` `@@org.joda.time.field.UnsupportedDateTimeField.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `org.joda.time.DateTimeFieldType` v1 @kind object, `org.joda.time.DurationField` v2 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.<init>:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3c0028.  call `<init>`(v0) @signature `Lorg/joda/time/DateTimeField;.<init>:()V` @kind direct;
  #L3c002e.  if v1 == 0 then goto L3c0040;
  #L3c0032.  if v2 == 0 then goto L3c0040;
  #L3c0036.  v0.`org.joda.time.field.UnsupportedDateTimeField.iType` @type ^`org.joda.time.DateTimeFieldType` := v1 @kind object;
  #L3c003a.  v0.`org.joda.time.field.UnsupportedDateTimeField.iDurationField` @type ^`org.joda.time.DurationField` := v2 @kind object;
  #L3c003e.  return @kind void;
  #L3c0040.  v1:= new `java.lang.IllegalArgumentException`;
  #L3c0044.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3c004a.  throw v1;
}
procedure `org.joda.time.field.UnsupportedDateTimeField` `getInstance`(`org.joda.time.DateTimeFieldType` v4 @kind object, `org.joda.time.DurationField` v5 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bffa4.  v0:= constclass @type ^`org.joda.time.field.UnsupportedDateTimeField` @kind object;
  #L3bffa8.  @monitorenter v0
  #L3bffaa.  v1:= `@@org.joda.time.field.UnsupportedDateTimeField.cCache` @type ^`java.util.HashMap` @kind object;
  #L3bffae.  v2:= 0I;
  #L3bffb0.  if v1 != 0 then goto L3bffc6;
  #L3bffb4.  v1:= new `java.util.HashMap`;
  #L3bffb8.  v3:= 7I;
  #L3bffba.  call `<init>`(v1, v3) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L3bffc0.  `@@org.joda.time.field.UnsupportedDateTimeField.cCache` @type ^`java.util.HashMap` := v1 @kind object;
  #L3bffc4.  goto L3bffea;
  #L3bffc6.  v1:= `@@org.joda.time.field.UnsupportedDateTimeField.cCache` @type ^`java.util.HashMap` @kind object;
  #L3bffca.  call temp:= `get`(v1, v4) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3bffd0.  v1:= temp @kind object;
  #L3bffd2.  v1:= (`org.joda.time.field.UnsupportedDateTimeField`) v1 @kind object;
  #L3bffd6.  if v1 == 0 then goto L3bffe8;
  #L3bffda.  call temp:= `getDurationField`(v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bffe0.  v3:= temp @kind object;
  #L3bffe2.  if v3 == v5 then goto L3bffe8;
  #L3bffe6.  goto L3bffea;
  #L3bffe8.  v2:= v1 @kind object;
  #L3bffea.  if v2 != 0 then goto L3c0002;
  #L3bffee.  v2:= new `org.joda.time.field.UnsupportedDateTimeField`;
  #L3bfff2.  call `<init>`(v2, v4, v5) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.<init>:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)V` @kind direct;
  #L3bfff8.  v5:= `@@org.joda.time.field.UnsupportedDateTimeField.cCache` @type ^`java.util.HashMap` @kind object;
  #L3bfffc.  call temp:= `put`(v5, v4, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3c0002.  @monitorexit v0
  #L3c0004.  return v2 @kind object;
  #L3c0006.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3c0008.  @monitorexit v0
  #L3c000a.  throw v4;
  catch `java.lang.Throwable` @[L3bffaa..L3c0002] goto L3c0006;
}
procedure `java.lang.Object` `readResolve`(`org.joda.time.field.UnsupportedDateTimeField` v2 @kind this) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3bfc10.  v0:= v2.`org.joda.time.field.UnsupportedDateTimeField.iType` @type ^`org.joda.time.DateTimeFieldType` @kind object;
  #L3bfc14.  v1:= v2.`org.joda.time.field.UnsupportedDateTimeField.iDurationField` @type ^`org.joda.time.DurationField` @kind object;
  #L3bfc18.  call temp:= `getInstance`(v0, v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getInstance:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;)Lorg/joda/time/field/UnsupportedDateTimeField;` @kind static;
  #L3bfc1e.  v0:= temp @kind object;
  #L3bfc20.  return v0 @kind object;
}
procedure `java.lang.UnsupportedOperationException` `unsupported`(`org.joda.time.field.UnsupportedDateTimeField` v3 @kind this) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3bfd84.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3bfd88.  v1:= new `java.lang.StringBuilder`;
  #L3bfd8c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3bfd92.  v2:= v3.`org.joda.time.field.UnsupportedDateTimeField.iType` @type ^`org.joda.time.DateTimeFieldType` @kind object;
  #L3bfd96.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bfd9c.  v2:= " field is unsupported" @kind object;
  #L3bfda0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bfda6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bfdac.  v1:= temp @kind object;
  #L3bfdae.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3bfdb4.  return v0 @kind object;
}
procedure `long` `add`(`org.joda.time.field.UnsupportedDateTimeField` v1 @kind this, `long` v2 , `int` v4 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.add:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bfdc8.  call temp:= `getDurationField`(v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bfdce.  v0:= temp @kind object;
  #L3bfdd0.  call temp:= `add`(v0, v2, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L3bfdd6.  v2:= temp @kind wide;
  #L3bfdd8.  return v2 @kind wide;
}
procedure `long` `add`(`org.joda.time.field.UnsupportedDateTimeField` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.add:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bfdec.  call temp:= `getDurationField`(v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bfdf2.  v0:= temp @kind object;
  #L3bfdf4.  call temp:= `add`(v0, v2, v4) @signature `Lorg/joda/time/DurationField;.add:(JJ)J` @kind virtual;
  #L3bfdfa.  v2:= temp @kind wide;
  #L3bfdfc.  return v2 @kind wide;
}
procedure `int`[] `add`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `org.joda.time.ReadablePartial` v1 @kind object, `int` v2 , `int`[] v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.add:(Lorg/joda/time/ReadablePartial;I[II)[I` @AccessFlag PUBLIC {
    temp;

  #L3bfb84.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfb8a.  v1:= temp @kind object;
  #L3bfb8c.  throw v1;
}
procedure `long` `addWrapField`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 , `int` v3 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.addWrapField:(JI)J` @AccessFlag PUBLIC {
    temp;

  #L3bfe10.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfe16.  v1:= temp @kind object;
  #L3bfe18.  throw v1;
}
procedure `int`[] `addWrapField`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `org.joda.time.ReadablePartial` v1 @kind object, `int` v2 , `int`[] v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.addWrapField:(Lorg/joda/time/ReadablePartial;I[II)[I` @AccessFlag PUBLIC {
    temp;

  #L3bfba0.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfba6.  v1:= temp @kind object;
  #L3bfba8.  throw v1;
}
procedure `int`[] `addWrapPartial`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `org.joda.time.ReadablePartial` v1 @kind object, `int` v2 , `int`[] v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.addWrapPartial:(Lorg/joda/time/ReadablePartial;I[II)[I` @AccessFlag PUBLIC {
    temp;

  #L3bfbbc.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfbc2.  v1:= temp @kind object;
  #L3bfbc4.  throw v1;
}
procedure `int` `get`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.get:(J)I` @AccessFlag PUBLIC {
    temp;

  #L3bfa10.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfa16.  v1:= temp @kind object;
  #L3bfa18.  throw v1;
}
procedure `java.lang.String` `getAsShortText`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `int` v1 , `java.util.Locale` v2 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getAsShortText:(ILjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3bfc34.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfc3a.  v1:= temp @kind object;
  #L3bfc3c.  throw v1;
}
procedure `java.lang.String` `getAsShortText`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getAsShortText:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3bfc50.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfc56.  v1:= temp @kind object;
  #L3bfc58.  throw v1;
}
procedure `java.lang.String` `getAsShortText`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 , `java.util.Locale` v3 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getAsShortText:(JLjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3bfc6c.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfc72.  v1:= temp @kind object;
  #L3bfc74.  throw v1;
}
procedure `java.lang.String` `getAsShortText`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `org.joda.time.ReadablePartial` v1 @kind object, `int` v2 , `java.util.Locale` v3 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getAsShortText:(Lorg/joda/time/ReadablePartial;ILjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3bfc88.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfc8e.  v1:= temp @kind object;
  #L3bfc90.  throw v1;
}
procedure `java.lang.String` `getAsShortText`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `org.joda.time.ReadablePartial` v1 @kind object, `java.util.Locale` v2 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getAsShortText:(Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3bfca4.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfcaa.  v1:= temp @kind object;
  #L3bfcac.  throw v1;
}
procedure `java.lang.String` `getAsText`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `int` v1 , `java.util.Locale` v2 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getAsText:(ILjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3bfcc0.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfcc6.  v1:= temp @kind object;
  #L3bfcc8.  throw v1;
}
procedure `java.lang.String` `getAsText`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getAsText:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3bfcdc.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfce2.  v1:= temp @kind object;
  #L3bfce4.  throw v1;
}
procedure `java.lang.String` `getAsText`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 , `java.util.Locale` v3 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getAsText:(JLjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3bfcf8.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfcfe.  v1:= temp @kind object;
  #L3bfd00.  throw v1;
}
procedure `java.lang.String` `getAsText`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `org.joda.time.ReadablePartial` v1 @kind object, `int` v2 , `java.util.Locale` v3 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getAsText:(Lorg/joda/time/ReadablePartial;ILjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3bfd14.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfd1a.  v1:= temp @kind object;
  #L3bfd1c.  throw v1;
}
procedure `java.lang.String` `getAsText`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `org.joda.time.ReadablePartial` v1 @kind object, `java.util.Locale` v2 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getAsText:(Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3bfd30.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfd36.  v1:= temp @kind object;
  #L3bfd38.  throw v1;
}
procedure `int` `getDifference`(`org.joda.time.field.UnsupportedDateTimeField` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getDifference:(JJ)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bfa2c.  call temp:= `getDurationField`(v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bfa32.  v0:= temp @kind object;
  #L3bfa34.  call temp:= `getDifference`(v0, v2, v4) @signature `Lorg/joda/time/DurationField;.getDifference:(JJ)I` @kind virtual;
  #L3bfa3a.  v2:= temp;
  #L3bfa3c.  return v2;
}
procedure `long` `getDifferenceAsLong`(`org.joda.time.field.UnsupportedDateTimeField` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getDifferenceAsLong:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bfe2c.  call temp:= `getDurationField`(v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bfe32.  v0:= temp @kind object;
  #L3bfe34.  call temp:= `getDifferenceAsLong`(v0, v2, v4) @signature `Lorg/joda/time/DurationField;.getDifferenceAsLong:(JJ)J` @kind virtual;
  #L3bfe3a.  v2:= temp @kind wide;
  #L3bfe3c.  return v2 @kind wide;
}
procedure `org.joda.time.DurationField` `getDurationField`(`org.joda.time.field.UnsupportedDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bff64.  v0:= v1.`org.joda.time.field.UnsupportedDateTimeField.iDurationField` @type ^`org.joda.time.DurationField` @kind object;
  #L3bff68.  return v0 @kind object;
}
procedure `int` `getLeapAmount`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getLeapAmount:(J)I` @AccessFlag PUBLIC {
    temp;

  #L3bfa50.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfa56.  v1:= temp @kind object;
  #L3bfa58.  throw v1;
}
procedure `org.joda.time.DurationField` `getLeapDurationField`(`org.joda.time.field.UnsupportedDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getLeapDurationField:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bff7c.  v0:= 0I;
  #L3bff7e.  return v0 @kind object;
}
procedure `int` `getMaximumShortTextLength`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `java.util.Locale` v1 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getMaximumShortTextLength:(Ljava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;

  #L3bfa6c.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfa72.  v1:= temp @kind object;
  #L3bfa74.  throw v1;
}
procedure `int` `getMaximumTextLength`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `java.util.Locale` v1 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getMaximumTextLength:(Ljava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;

  #L3bfa88.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfa8e.  v1:= temp @kind object;
  #L3bfa90.  throw v1;
}
procedure `int` `getMaximumValue`(`org.joda.time.field.UnsupportedDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getMaximumValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bfaa4.  call temp:= `unsupported`(v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfaaa.  v0:= temp @kind object;
  #L3bfaac.  throw v0;
}
procedure `int` `getMaximumValue`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getMaximumValue:(J)I` @AccessFlag PUBLIC {
    temp;

  #L3bfac0.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfac6.  v1:= temp @kind object;
  #L3bfac8.  throw v1;
}
procedure `int` `getMaximumValue`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `org.joda.time.ReadablePartial` v1 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getMaximumValue:(Lorg/joda/time/ReadablePartial;)I` @AccessFlag PUBLIC {
    temp;

  #L3bfadc.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfae2.  v1:= temp @kind object;
  #L3bfae4.  throw v1;
}
procedure `int` `getMaximumValue`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `org.joda.time.ReadablePartial` v1 @kind object, `int`[] v2 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getMaximumValue:(Lorg/joda/time/ReadablePartial;[I)I` @AccessFlag PUBLIC {
    temp;

  #L3bfaf8.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfafe.  v1:= temp @kind object;
  #L3bfb00.  throw v1;
}
procedure `int` `getMinimumValue`(`org.joda.time.field.UnsupportedDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getMinimumValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bfb14.  call temp:= `unsupported`(v1) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfb1a.  v0:= temp @kind object;
  #L3bfb1c.  throw v0;
}
procedure `int` `getMinimumValue`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getMinimumValue:(J)I` @AccessFlag PUBLIC {
    temp;

  #L3bfb30.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfb36.  v1:= temp @kind object;
  #L3bfb38.  throw v1;
}
procedure `int` `getMinimumValue`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `org.joda.time.ReadablePartial` v1 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getMinimumValue:(Lorg/joda/time/ReadablePartial;)I` @AccessFlag PUBLIC {
    temp;

  #L3bfb4c.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfb52.  v1:= temp @kind object;
  #L3bfb54.  throw v1;
}
procedure `int` `getMinimumValue`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `org.joda.time.ReadablePartial` v1 @kind object, `int`[] v2 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getMinimumValue:(Lorg/joda/time/ReadablePartial;[I)I` @AccessFlag PUBLIC {
    temp;

  #L3bfb68.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfb6e.  v1:= temp @kind object;
  #L3bfb70.  throw v1;
}
procedure `java.lang.String` `getName`(`org.joda.time.field.UnsupportedDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bfd4c.  v0:= v1.`org.joda.time.field.UnsupportedDateTimeField.iType` @type ^`org.joda.time.DateTimeFieldType` @kind object;
  #L3bfd50.  call temp:= `getName`(v0) @signature `Lorg/joda/time/DateTimeFieldType;.getName:()Ljava/lang/String;` @kind virtual;
  #L3bfd56.  v0:= temp @kind object;
  #L3bfd58.  return v0 @kind object;
}
procedure `org.joda.time.DurationField` `getRangeDurationField`(`org.joda.time.field.UnsupportedDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getRangeDurationField:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bff90.  v0:= 0I;
  #L3bff92.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeFieldType` `getType`(`org.joda.time.field.UnsupportedDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.getType:()Lorg/joda/time/DateTimeFieldType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bff4c.  v0:= v1.`org.joda.time.field.UnsupportedDateTimeField.iType` @type ^`org.joda.time.DateTimeFieldType` @kind object;
  #L3bff50.  return v0 @kind object;
}
procedure `boolean` `isLeap`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.isLeap:(J)Z` @AccessFlag PUBLIC {
    temp;

  #L3bf9cc.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bf9d2.  v1:= temp @kind object;
  #L3bf9d4.  throw v1;
}
procedure `boolean` `isLenient`(`org.joda.time.field.UnsupportedDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.isLenient:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf9e8.  v0:= 0I;
  #L3bf9ea.  return v0;
}
procedure `boolean` `isSupported`(`org.joda.time.field.UnsupportedDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.isSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf9fc.  v0:= 0I;
  #L3bf9fe.  return v0;
}
procedure `long` `remainder`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.remainder:(J)J` @AccessFlag PUBLIC {
    temp;

  #L3bfe50.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfe56.  v1:= temp @kind object;
  #L3bfe58.  throw v1;
}
procedure `long` `roundCeiling`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.roundCeiling:(J)J` @AccessFlag PUBLIC {
    temp;

  #L3bfe6c.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfe72.  v1:= temp @kind object;
  #L3bfe74.  throw v1;
}
procedure `long` `roundFloor`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.roundFloor:(J)J` @AccessFlag PUBLIC {
    temp;

  #L3bfe88.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfe8e.  v1:= temp @kind object;
  #L3bfe90.  throw v1;
}
procedure `long` `roundHalfCeiling`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.roundHalfCeiling:(J)J` @AccessFlag PUBLIC {
    temp;

  #L3bfea4.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfeaa.  v1:= temp @kind object;
  #L3bfeac.  throw v1;
}
procedure `long` `roundHalfEven`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.roundHalfEven:(J)J` @AccessFlag PUBLIC {
    temp;

  #L3bfec0.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfec6.  v1:= temp @kind object;
  #L3bfec8.  throw v1;
}
procedure `long` `roundHalfFloor`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.roundHalfFloor:(J)J` @AccessFlag PUBLIC {
    temp;

  #L3bfedc.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfee2.  v1:= temp @kind object;
  #L3bfee4.  throw v1;
}
procedure `long` `set`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 , `int` v3 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.set:(JI)J` @AccessFlag PUBLIC {
    temp;

  #L3bfef8.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfefe.  v1:= temp @kind object;
  #L3bff00.  throw v1;
}
procedure `long` `set`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 , `java.lang.String` v3 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.set:(JLjava/lang/String;)J` @AccessFlag PUBLIC {
    temp;

  #L3bff14.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bff1a.  v1:= temp @kind object;
  #L3bff1c.  throw v1;
}
procedure `long` `set`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `long` v1 , `java.lang.String` v3 @kind object, `java.util.Locale` v4 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.set:(JLjava/lang/String;Ljava/util/Locale;)J` @AccessFlag PUBLIC {
    temp;

  #L3bff30.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bff36.  v1:= temp @kind object;
  #L3bff38.  throw v1;
}
procedure `int`[] `set`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `org.joda.time.ReadablePartial` v1 @kind object, `int` v2 , `int`[] v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.set:(Lorg/joda/time/ReadablePartial;I[II)[I` @AccessFlag PUBLIC {
    temp;

  #L3bfbd8.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfbde.  v1:= temp @kind object;
  #L3bfbe0.  throw v1;
}
procedure `int`[] `set`(`org.joda.time.field.UnsupportedDateTimeField` v0 @kind this, `org.joda.time.ReadablePartial` v1 @kind object, `int` v2 , `int`[] v3 @kind object, `java.lang.String` v4 @kind object, `java.util.Locale` v5 @kind object) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.set:(Lorg/joda/time/ReadablePartial;I[ILjava/lang/String;Ljava/util/Locale;)[I` @AccessFlag PUBLIC {
    temp;

  #L3bfbf4.  call temp:= `unsupported`(v0) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.unsupported:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3bfbfa.  v1:= temp @kind object;
  #L3bfbfc.  throw v1;
}
procedure `java.lang.String` `toString`(`org.joda.time.field.UnsupportedDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/UnsupportedDateTimeField;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bfd6c.  v0:= "UnsupportedDateTimeField" @kind object;
  #L3bfd70.  return v0 @kind object;
}
