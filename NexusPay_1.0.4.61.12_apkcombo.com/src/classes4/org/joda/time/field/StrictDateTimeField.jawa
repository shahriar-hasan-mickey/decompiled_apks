record `org.joda.time.field.StrictDateTimeField` @kind class @AccessFlag PUBLIC extends `org.joda.time.field.DelegatedDateTimeField` @kind class {
}
global `long` `@@org.joda.time.field.StrictDateTimeField.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.field.StrictDateTimeField` v0 @kind this, `org.joda.time.DateTimeField` v1 @kind object) @signature `Lorg/joda/time/field/StrictDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3bf9b4.  call `<init>`(v0, v1) @signature `Lorg/joda/time/field/DelegatedDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L3bf9ba.  return @kind void;
}
procedure `org.joda.time.DateTimeField` `getInstance`(`org.joda.time.DateTimeField` v1 @kind object) @signature `Lorg/joda/time/field/StrictDateTimeField;.getInstance:(Lorg/joda/time/DateTimeField;)Lorg/joda/time/DateTimeField;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3bf96c.  if v1 != 0 then goto L3bf974;
  #L3bf970.  v1:= 0I;
  #L3bf972.  return v1 @kind object;
  #L3bf974.  v0:= instanceof @variable v1 @type ^`org.joda.time.field.LenientDateTimeField` @kind boolean;
  #L3bf978.  if v0 == 0 then goto L3bf988;
  #L3bf97c.  v1:= (`org.joda.time.field.LenientDateTimeField`) v1 @kind object;
  #L3bf980.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DelegatedDateTimeField;.getWrappedField:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3bf986.  v1:= temp @kind object;
  #L3bf988.  call temp:= `isLenient`(v1) @signature `Lorg/joda/time/DateTimeField;.isLenient:()Z` @kind virtual;
  #L3bf98e.  v0:= temp;
  #L3bf990.  if v0 != 0 then goto L3bf996;
  #L3bf994.  return v1 @kind object;
  #L3bf996.  v0:= new `org.joda.time.field.StrictDateTimeField`;
  #L3bf99a.  call `<init>`(v0, v1) @signature `Lorg/joda/time/field/StrictDateTimeField;.<init>:(Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L3bf9a0.  return v0 @kind object;
}
procedure `boolean` `isLenient`(`org.joda.time.field.StrictDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/StrictDateTimeField;.isLenient:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3bf928.  v0:= 0I;
  #L3bf92a.  return v0;
}
procedure `long` `set`(`org.joda.time.field.StrictDateTimeField` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lorg/joda/time/field/StrictDateTimeField;.set:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bf93c.  call temp:= `getMinimumValue`(v2, v3) @signature `Lorg/joda/time/field/DelegatedDateTimeField;.getMinimumValue:(J)I` @kind virtual;
  #L3bf942.  v0:= temp;
  #L3bf944.  call temp:= `getMaximumValue`(v2, v3) @signature `Lorg/joda/time/field/DelegatedDateTimeField;.getMaximumValue:(J)I` @kind virtual;
  #L3bf94a.  v1:= temp;
  #L3bf94c.  call `verifyValueBounds`(v2, v5, v0, v1) @signature `Lorg/joda/time/field/FieldUtils;.verifyValueBounds:(Lorg/joda/time/DateTimeField;III)V` @kind static;
  #L3bf952.  call temp:= `set`(v2, v3, v5) @signature `Lorg/joda/time/field/DelegatedDateTimeField;.set:(JI)J` @kind super;
  #L3bf958.  v3:= temp @kind wide;
  #L3bf95a.  return v3 @kind wide;
}
