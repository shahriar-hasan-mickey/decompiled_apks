record `org.joda.time.field.ImpreciseDateTimeField` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.joda.time.field.BaseDateTimeField` @kind class {
  `org.joda.time.DurationField` `org.joda.time.field.ImpreciseDateTimeField.iDurationField` @AccessFlag PRIVATE_FINAL;
  `long` `org.joda.time.field.ImpreciseDateTimeField.iUnitMillis` @AccessFlag FINAL;
}
global `long` `@@org.joda.time.field.ImpreciseDateTimeField.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.field.ImpreciseDateTimeField` v0 @kind this, `org.joda.time.DateTimeFieldType` v1 @kind object, `long` v2 ) @signature `Lorg/joda/time/field/ImpreciseDateTimeField;.<init>:(Lorg/joda/time/DateTimeFieldType;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3be43c.  call `<init>`(v0, v1) @signature `Lorg/joda/time/field/BaseDateTimeField;.<init>:(Lorg/joda/time/DateTimeFieldType;)V` @kind direct;
  #L3be442.  v0.`org.joda.time.field.ImpreciseDateTimeField.iUnitMillis` @type ^`long` := v2 @kind wide;
  #L3be446.  v2:= new `org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField`;
  #L3be44a.  call temp:= `getDurationType`(v1) @signature `Lorg/joda/time/DateTimeFieldType;.getDurationType:()Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L3be450.  v1:= temp @kind object;
  #L3be452.  call `<init>`(v2, v0, v1) @signature `Lorg/joda/time/field/ImpreciseDateTimeField$LinkedDurationField;.<init>:(Lorg/joda/time/field/ImpreciseDateTimeField;Lorg/joda/time/DurationFieldType;)V` @kind direct;
  #L3be458.  v0.`org.joda.time.field.ImpreciseDateTimeField.iDurationField` @type ^`org.joda.time.DurationField` := v2 @kind object;
  #L3be45c.  return @kind void;
}
procedure `long` `add`(`long` v0 , `int` v2 ) @signature `Lorg/joda/time/field/ImpreciseDateTimeField;.add:(JI)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `add`(`long` v0 , `long` v2 ) @signature `Lorg/joda/time/field/ImpreciseDateTimeField;.add:(JJ)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `get`(`long` v0 ) @signature `Lorg/joda/time/field/ImpreciseDateTimeField;.get:(J)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getDifference`(`org.joda.time.field.ImpreciseDateTimeField` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lorg/joda/time/field/ImpreciseDateTimeField;.getDifference:(JJ)I` @AccessFlag PUBLIC {
    temp;

  #L3be36c.  call temp:= `getDifferenceAsLong`(v0, v1, v3) @signature `Lorg/joda/time/field/ImpreciseDateTimeField;.getDifferenceAsLong:(JJ)J` @kind virtual;
  #L3be372.  v1:= temp @kind wide;
  #L3be374.  call temp:= `safeToInt`(v1) @signature `Lorg/joda/time/field/FieldUtils;.safeToInt:(J)I` @kind static;
  #L3be37a.  v1:= temp;
  #L3be37c.  return v1;
}
procedure `long` `getDifferenceAsLong`(`org.joda.time.field.ImpreciseDateTimeField` v7 @kind this, `long` v8 , `long` v10 ) @signature `Lorg/joda/time/field/ImpreciseDateTimeField;.getDifferenceAsLong:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3be390.  v0:= lcmp(v8, v10);
  #L3be394.  if v0 >= 0 then goto L3be3a4;
  #L3be398.  call temp:= `getDifferenceAsLong`(v7, v10, v8) @signature `Lorg/joda/time/field/ImpreciseDateTimeField;.getDifferenceAsLong:(JJ)J` @kind virtual;
  #L3be39e.  v8:= temp @kind wide;
  #L3be3a0.  v8:= -v8 @kind long;
  #L3be3a2.  return v8 @kind wide;
  #L3be3a4.  v0:= v8 - v10 @kind long;
  #L3be3a8.  v2:= v7.`org.joda.time.field.ImpreciseDateTimeField.iUnitMillis` @type ^`long` @kind wide;
  #L3be3ac.  v0:= v0 / v2 @kind long;
  #L3be3ae.  call temp:= `add`(v7, v10, v0) @signature `Lorg/joda/time/field/ImpreciseDateTimeField;.add:(JJ)J` @kind virtual;
  #L3be3b4.  v2:= temp @kind wide;
  #L3be3b6.  v4:= 1L;
  #L3be3ba.  v6:= lcmp(v2, v8);
  #L3be3be.  if v6 >= 0 then goto L3be3d8;
  #L3be3c2.  v0:= v0 + v4 @kind long;
  #L3be3c4.  call temp:= `add`(v7, v10, v0) @signature `Lorg/joda/time/field/ImpreciseDateTimeField;.add:(JJ)J` @kind virtual;
  #L3be3ca.  v2:= temp @kind wide;
  #L3be3cc.  v6:= lcmp(v2, v8);
  #L3be3d0.  if v6 <= 0 then goto L3be3c2;
  #L3be3d4.  v0:= v0 - v4 @kind long;
  #L3be3d6.  goto L3be3fa;
  #L3be3d8.  call temp:= `add`(v7, v10, v0) @signature `Lorg/joda/time/field/ImpreciseDateTimeField;.add:(JJ)J` @kind virtual;
  #L3be3de.  v2:= temp @kind wide;
  #L3be3e0.  v6:= lcmp(v2, v8);
  #L3be3e4.  if v6 <= 0 then goto L3be3fa;
  #L3be3e8.  v0:= v0 - v4 @kind long;
  #L3be3ea.  call temp:= `add`(v7, v10, v0) @signature `Lorg/joda/time/field/ImpreciseDateTimeField;.add:(JJ)J` @kind virtual;
  #L3be3f0.  v2:= temp @kind wide;
  #L3be3f2.  v6:= lcmp(v2, v8);
  #L3be3f6.  if v6 > 0 then goto L3be3e8;
  #L3be3fa.  return v0 @kind wide;
}
procedure `org.joda.time.DurationField` `getDurationField`(`org.joda.time.field.ImpreciseDateTimeField` v1 @kind this) @signature `Lorg/joda/time/field/ImpreciseDateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3be424.  v0:= v1.`org.joda.time.field.ImpreciseDateTimeField.iDurationField` @type ^`org.joda.time.DurationField` @kind object;
  #L3be428.  return v0 @kind object;
}
procedure `long` `getDurationUnitMillis`(`org.joda.time.field.ImpreciseDateTimeField` v2 @kind this) @signature `Lorg/joda/time/field/ImpreciseDateTimeField;.getDurationUnitMillis:()J` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L3be40c.  v0:= v2.`org.joda.time.field.ImpreciseDateTimeField.iUnitMillis` @type ^`long` @kind wide;
  #L3be410.  return v0 @kind wide;
}
procedure `org.joda.time.DurationField` `getRangeDurationField`() @signature `Lorg/joda/time/field/ImpreciseDateTimeField;.getRangeDurationField:()Lorg/joda/time/DurationField;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `roundFloor`(`long` v0 ) @signature `Lorg/joda/time/field/ImpreciseDateTimeField;.roundFloor:(J)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `set`(`long` v0 , `int` v2 ) @signature `Lorg/joda/time/field/ImpreciseDateTimeField;.set:(JI)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
