record `org.joda.time.field.ScaledDurationField` @kind class @AccessFlag PUBLIC extends `org.joda.time.field.DecoratedDurationField` @kind class {
  `int` `org.joda.time.field.ScaledDurationField.iScalar` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@org.joda.time.field.ScaledDurationField.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.field.ScaledDurationField` v0 @kind this, `org.joda.time.DurationField` v1 @kind object, `org.joda.time.DurationFieldType` v2 @kind object, `int` v3 ) @signature `Lorg/joda/time/field/ScaledDurationField;.<init>:(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3bf6c4.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/field/DecoratedDurationField;.<init>:(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V` @kind direct;
  #L3bf6ca.  if v3 == 0 then goto L3bf6da;
  #L3bf6ce.  v1:= 1I;
  #L3bf6d0.  if v3 == v1 then goto L3bf6da;
  #L3bf6d4.  v0.`org.joda.time.field.ScaledDurationField.iScalar` @type ^`int` := v3;
  #L3bf6d8.  return @kind void;
  #L3bf6da.  v1:= new `java.lang.IllegalArgumentException`;
  #L3bf6de.  v2:= "The scalar must not be 0 or 1" @kind object;
  #L3bf6e2.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3bf6e8.  throw v1;
}
procedure `long` `add`(`org.joda.time.field.ScaledDurationField` v4 @kind this, `long` v5 , `int` v7 ) @signature `Lorg/joda/time/field/ScaledDurationField;.add:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bf4f4.  v0:= (`long`) v7 @kind i2l;
  #L3bf4f6.  v7:= v4.`org.joda.time.field.ScaledDurationField.iScalar` @type ^`int`;
  #L3bf4fa.  v2:= (`long`) v7 @kind i2l;
  #L3bf4fc.  v0:= v0 * v2 @kind long;
  #L3bf500.  call temp:= `getWrappedField`(v4) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf506.  v7:= temp @kind object;
  #L3bf508.  call temp:= `add`(v7, v5, v0) @signature `Lorg/joda/time/DurationField;.add:(JJ)J` @kind virtual;
  #L3bf50e.  v5:= temp @kind wide;
  #L3bf510.  return v5 @kind wide;
}
procedure `long` `add`(`org.joda.time.field.ScaledDurationField` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/joda/time/field/ScaledDurationField;.add:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf524.  v0:= v1.`org.joda.time.field.ScaledDurationField.iScalar` @type ^`int`;
  #L3bf528.  call temp:= `safeMultiply`(v4, v0) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(JI)J` @kind static;
  #L3bf52e.  v4:= temp @kind wide;
  #L3bf530.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf536.  v0:= temp @kind object;
  #L3bf538.  call temp:= `add`(v0, v2, v4) @signature `Lorg/joda/time/DurationField;.add:(JJ)J` @kind virtual;
  #L3bf53e.  v2:= temp @kind wide;
  #L3bf540.  return v2 @kind wide;
}
procedure `boolean` `equals`(`org.joda.time.field.ScaledDurationField` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/joda/time/field/ScaledDurationField;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bf3b0.  v0:= 1I;
  #L3bf3b2.  if v4 != v5 then goto L3bf3b8;
  #L3bf3b6.  return v0;
  #L3bf3b8.  v1:= instanceof @variable v5 @type ^`org.joda.time.field.ScaledDurationField` @kind boolean;
  #L3bf3bc.  v2:= 0I;
  #L3bf3be.  if v1 == 0 then goto L3bf408;
  #L3bf3c2.  v5:= (`org.joda.time.field.ScaledDurationField`) v5 @kind object;
  #L3bf3c6.  call temp:= `getWrappedField`(v4) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf3cc.  v1:= temp @kind object;
  #L3bf3ce.  call temp:= `getWrappedField`(v5) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf3d4.  v3:= temp @kind object;
  #L3bf3d6.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3bf3dc.  v1:= temp;
  #L3bf3de.  if v1 == 0 then goto L3bf404;
  #L3bf3e2.  call temp:= `getType`(v4) @signature `Lorg/joda/time/field/BaseDurationField;.getType:()Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L3bf3e8.  v1:= temp @kind object;
  #L3bf3ea.  call temp:= `getType`(v5) @signature `Lorg/joda/time/field/BaseDurationField;.getType:()Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L3bf3f0.  v3:= temp @kind object;
  #L3bf3f2.  if v1 != v3 then goto L3bf404;
  #L3bf3f6.  v1:= v4.`org.joda.time.field.ScaledDurationField.iScalar` @type ^`int`;
  #L3bf3fa.  v5:= v5.`org.joda.time.field.ScaledDurationField.iScalar` @type ^`int`;
  #L3bf3fe.  if v1 != v5 then goto L3bf404;
  #L3bf402.  goto L3bf406;
  #L3bf404.  v0:= 0I;
  #L3bf406.  return v0;
  #L3bf408.  return v2;
}
procedure `int` `getDifference`(`org.joda.time.field.ScaledDurationField` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/joda/time/field/ScaledDurationField;.getDifference:(JJ)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf41c.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf422.  v0:= temp @kind object;
  #L3bf424.  call temp:= `getDifference`(v0, v2, v4) @signature `Lorg/joda/time/DurationField;.getDifference:(JJ)I` @kind virtual;
  #L3bf42a.  v2:= temp;
  #L3bf42c.  v3:= v1.`org.joda.time.field.ScaledDurationField.iScalar` @type ^`int`;
  #L3bf430.  v2:= v2 / v3 @kind int;
  #L3bf432.  return v2;
}
procedure `long` `getDifferenceAsLong`(`org.joda.time.field.ScaledDurationField` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/joda/time/field/ScaledDurationField;.getDifferenceAsLong:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf554.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf55a.  v0:= temp @kind object;
  #L3bf55c.  call temp:= `getDifferenceAsLong`(v0, v2, v4) @signature `Lorg/joda/time/DurationField;.getDifferenceAsLong:(JJ)J` @kind virtual;
  #L3bf562.  v2:= temp @kind wide;
  #L3bf564.  v4:= v1.`org.joda.time.field.ScaledDurationField.iScalar` @type ^`int`;
  #L3bf568.  v4:= (`long`) v4 @kind i2l;
  #L3bf56a.  v2:= v2 / v4 @kind long;
  #L3bf56c.  return v2 @kind wide;
}
procedure `long` `getMillis`(`org.joda.time.field.ScaledDurationField` v4 @kind this, `int` v5 ) @signature `Lorg/joda/time/field/ScaledDurationField;.getMillis:(I)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bf580.  v0:= (`long`) v5 @kind i2l;
  #L3bf582.  v5:= v4.`org.joda.time.field.ScaledDurationField.iScalar` @type ^`int`;
  #L3bf586.  v2:= (`long`) v5 @kind i2l;
  #L3bf588.  v0:= v0 * v2 @kind long;
  #L3bf58c.  call temp:= `getWrappedField`(v4) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf592.  v5:= temp @kind object;
  #L3bf594.  call temp:= `getMillis`(v5, v0) @signature `Lorg/joda/time/DurationField;.getMillis:(J)J` @kind virtual;
  #L3bf59a.  v0:= temp @kind wide;
  #L3bf59c.  return v0 @kind wide;
}
procedure `long` `getMillis`(`org.joda.time.field.ScaledDurationField` v4 @kind this, `int` v5 , `long` v6 ) @signature `Lorg/joda/time/field/ScaledDurationField;.getMillis:(IJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bf5b0.  v0:= (`long`) v5 @kind i2l;
  #L3bf5b2.  v5:= v4.`org.joda.time.field.ScaledDurationField.iScalar` @type ^`int`;
  #L3bf5b6.  v2:= (`long`) v5 @kind i2l;
  #L3bf5b8.  v0:= v0 * v2 @kind long;
  #L3bf5bc.  call temp:= `getWrappedField`(v4) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf5c2.  v5:= temp @kind object;
  #L3bf5c4.  call temp:= `getMillis`(v5, v0, v6) @signature `Lorg/joda/time/DurationField;.getMillis:(JJ)J` @kind virtual;
  #L3bf5ca.  v5:= temp @kind wide;
  #L3bf5cc.  return v5 @kind wide;
}
procedure `long` `getMillis`(`org.joda.time.field.ScaledDurationField` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/field/ScaledDurationField;.getMillis:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf5e0.  v0:= v1.`org.joda.time.field.ScaledDurationField.iScalar` @type ^`int`;
  #L3bf5e4.  call temp:= `safeMultiply`(v2, v0) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(JI)J` @kind static;
  #L3bf5ea.  v2:= temp @kind wide;
  #L3bf5ec.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf5f2.  v0:= temp @kind object;
  #L3bf5f4.  call temp:= `getMillis`(v0, v2) @signature `Lorg/joda/time/DurationField;.getMillis:(J)J` @kind virtual;
  #L3bf5fa.  v2:= temp @kind wide;
  #L3bf5fc.  return v2 @kind wide;
}
procedure `long` `getMillis`(`org.joda.time.field.ScaledDurationField` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/joda/time/field/ScaledDurationField;.getMillis:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf610.  v0:= v1.`org.joda.time.field.ScaledDurationField.iScalar` @type ^`int`;
  #L3bf614.  call temp:= `safeMultiply`(v2, v0) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(JI)J` @kind static;
  #L3bf61a.  v2:= temp @kind wide;
  #L3bf61c.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf622.  v0:= temp @kind object;
  #L3bf624.  call temp:= `getMillis`(v0, v2, v4) @signature `Lorg/joda/time/DurationField;.getMillis:(JJ)J` @kind virtual;
  #L3bf62a.  v2:= temp @kind wide;
  #L3bf62c.  return v2 @kind wide;
}
procedure `int` `getScalar`(`org.joda.time.field.ScaledDurationField` v1 @kind this) @signature `Lorg/joda/time/field/ScaledDurationField;.getScalar:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf444.  v0:= v1.`org.joda.time.field.ScaledDurationField.iScalar` @type ^`int`;
  #L3bf448.  return v0;
}
procedure `long` `getUnitMillis`(`org.joda.time.field.ScaledDurationField` v4 @kind this) @signature `Lorg/joda/time/field/ScaledDurationField;.getUnitMillis:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bf640.  call temp:= `getWrappedField`(v4) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf646.  v0:= temp @kind object;
  #L3bf648.  call temp:= `getUnitMillis`(v0) @signature `Lorg/joda/time/DurationField;.getUnitMillis:()J` @kind virtual;
  #L3bf64e.  v0:= temp @kind wide;
  #L3bf650.  v2:= v4.`org.joda.time.field.ScaledDurationField.iScalar` @type ^`int`;
  #L3bf654.  v2:= (`long`) v2 @kind i2l;
  #L3bf656.  v0:= v0 * v2 @kind long;
  #L3bf65a.  return v0 @kind wide;
}
procedure `int` `getValue`(`org.joda.time.field.ScaledDurationField` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/field/ScaledDurationField;.getValue:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf45c.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf462.  v0:= temp @kind object;
  #L3bf464.  call temp:= `getValue`(v0, v2) @signature `Lorg/joda/time/DurationField;.getValue:(J)I` @kind virtual;
  #L3bf46a.  v2:= temp;
  #L3bf46c.  v3:= v1.`org.joda.time.field.ScaledDurationField.iScalar` @type ^`int`;
  #L3bf470.  v2:= v2 / v3 @kind int;
  #L3bf472.  return v2;
}
procedure `int` `getValue`(`org.joda.time.field.ScaledDurationField` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/joda/time/field/ScaledDurationField;.getValue:(JJ)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf484.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf48a.  v0:= temp @kind object;
  #L3bf48c.  call temp:= `getValue`(v0, v2, v4) @signature `Lorg/joda/time/DurationField;.getValue:(JJ)I` @kind virtual;
  #L3bf492.  v2:= temp;
  #L3bf494.  v3:= v1.`org.joda.time.field.ScaledDurationField.iScalar` @type ^`int`;
  #L3bf498.  v2:= v2 / v3 @kind int;
  #L3bf49a.  return v2;
}
procedure `long` `getValueAsLong`(`org.joda.time.field.ScaledDurationField` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/field/ScaledDurationField;.getValueAsLong:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bf66c.  call temp:= `getWrappedField`(v2) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf672.  v0:= temp @kind object;
  #L3bf674.  call temp:= `getValueAsLong`(v0, v3) @signature `Lorg/joda/time/DurationField;.getValueAsLong:(J)J` @kind virtual;
  #L3bf67a.  v3:= temp @kind wide;
  #L3bf67c.  v0:= v2.`org.joda.time.field.ScaledDurationField.iScalar` @type ^`int`;
  #L3bf680.  v0:= (`long`) v0 @kind i2l;
  #L3bf682.  v3:= v3 / v0 @kind long;
  #L3bf684.  return v3 @kind wide;
}
procedure `long` `getValueAsLong`(`org.joda.time.field.ScaledDurationField` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/joda/time/field/ScaledDurationField;.getValueAsLong:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3bf698.  call temp:= `getWrappedField`(v1) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf69e.  v0:= temp @kind object;
  #L3bf6a0.  call temp:= `getValueAsLong`(v0, v2, v4) @signature `Lorg/joda/time/DurationField;.getValueAsLong:(JJ)J` @kind virtual;
  #L3bf6a6.  v2:= temp @kind wide;
  #L3bf6a8.  v4:= v1.`org.joda.time.field.ScaledDurationField.iScalar` @type ^`int`;
  #L3bf6ac.  v4:= (`long`) v4 @kind i2l;
  #L3bf6ae.  v2:= v2 / v4 @kind long;
  #L3bf6b0.  return v2 @kind wide;
}
procedure `int` `hashCode`(`org.joda.time.field.ScaledDurationField` v4 @kind this) @signature `Lorg/joda/time/field/ScaledDurationField;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bf4ac.  v0:= v4.`org.joda.time.field.ScaledDurationField.iScalar` @type ^`int`;
  #L3bf4b0.  v0:= (`long`) v0 @kind i2l;
  #L3bf4b2.  v2:= 32I;
  #L3bf4b6.  v2:= v0 ^>> v2 @kind long;
  #L3bf4ba.  v0:= v0 ^~ v2 @kind long;
  #L3bf4bc.  v1:= (`int`) v0 @kind l2i;
  #L3bf4be.  call temp:= `getType`(v4) @signature `Lorg/joda/time/field/BaseDurationField;.getType:()Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L3bf4c4.  v0:= temp @kind object;
  #L3bf4c6.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3bf4cc.  v0:= temp;
  #L3bf4ce.  v1:= v1 + v0 @kind int;
  #L3bf4d0.  call temp:= `getWrappedField`(v4) @signature `Lorg/joda/time/field/DecoratedDurationField;.getWrappedField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3bf4d6.  v0:= temp @kind object;
  #L3bf4d8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3bf4de.  v0:= temp;
  #L3bf4e0.  v1:= v1 + v0 @kind int;
  #L3bf4e2.  return v1;
}
