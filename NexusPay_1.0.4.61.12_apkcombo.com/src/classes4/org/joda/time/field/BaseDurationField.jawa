record `org.joda.time.field.BaseDurationField` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.joda.time.DurationField` @kind class, `java.io.Serializable` @kind interface {
  `org.joda.time.DurationFieldType` `org.joda.time.field.BaseDurationField.iType` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@org.joda.time.field.BaseDurationField.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.field.BaseDurationField` v1 @kind this, `org.joda.time.DurationFieldType` v2 @kind object) @signature `Lorg/joda/time/field/BaseDurationField;.<init>:(Lorg/joda/time/DurationFieldType;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L3bcae8.  call `<init>`(v1) @signature `Lorg/joda/time/DurationField;.<init>:()V` @kind direct;
  #L3bcaee.  if v2 == 0 then goto L3bcaf8;
  #L3bcaf2.  v1.`org.joda.time.field.BaseDurationField.iType` @type ^`org.joda.time.DurationFieldType` := v2 @kind object;
  #L3bcaf6.  return @kind void;
  #L3bcaf8.  v2:= new `java.lang.IllegalArgumentException`;
  #L3bcafc.  v0:= "The type must not be null" @kind object;
  #L3bcb00.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3bcb06.  throw v2;
}
procedure `int` `compareTo`(`org.joda.time.field.BaseDurationField` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/joda/time/field/BaseDurationField;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3bc944.  v1:= (`org.joda.time.DurationField`) v1 @kind object;
  #L3bc948.  call temp:= `compareTo`(v0, v1) @signature `Lorg/joda/time/field/BaseDurationField;.compareTo:(Lorg/joda/time/DurationField;)I` @kind virtual;
  #L3bc94e.  v1:= temp;
  #L3bc950.  return v1;
}
procedure `int` `compareTo`(`org.joda.time.field.BaseDurationField` v4 @kind this, `org.joda.time.DurationField` v5 @kind object) @signature `Lorg/joda/time/field/BaseDurationField;.compareTo:(Lorg/joda/time/DurationField;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bc964.  call temp:= `getUnitMillis`(v5) @signature `Lorg/joda/time/DurationField;.getUnitMillis:()J` @kind virtual;
  #L3bc96a.  v0:= temp @kind wide;
  #L3bc96c.  call temp:= `getUnitMillis`(v4) @signature `Lorg/joda/time/DurationField;.getUnitMillis:()J` @kind virtual;
  #L3bc972.  v2:= temp @kind wide;
  #L3bc974.  v5:= lcmp(v2, v0);
  #L3bc978.  if v5 != 0 then goto L3bc980;
  #L3bc97c.  v5:= 0I;
  #L3bc97e.  return v5;
  #L3bc980.  if v5 >= 0 then goto L3bc988;
  #L3bc984.  v5:= -1I;
  #L3bc986.  return v5;
  #L3bc988.  v5:= 1I;
  #L3bc98a.  return v5;
}
procedure `int` `getDifference`(`org.joda.time.field.BaseDurationField` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lorg/joda/time/field/BaseDurationField;.getDifference:(JJ)I` @AccessFlag PUBLIC {
    temp;

  #L3bc99c.  call temp:= `getDifferenceAsLong`(v0, v1, v3) @signature `Lorg/joda/time/DurationField;.getDifferenceAsLong:(JJ)J` @kind virtual;
  #L3bc9a2.  v1:= temp @kind wide;
  #L3bc9a4.  call temp:= `safeToInt`(v1) @signature `Lorg/joda/time/field/FieldUtils;.safeToInt:(J)I` @kind static;
  #L3bc9aa.  v1:= temp;
  #L3bc9ac.  return v1;
}
procedure `long` `getMillis`(`org.joda.time.field.BaseDurationField` v4 @kind this, `int` v5 ) @signature `Lorg/joda/time/field/BaseDurationField;.getMillis:(I)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3bca70.  v0:= (`long`) v5 @kind i2l;
  #L3bca72.  call temp:= `getUnitMillis`(v4) @signature `Lorg/joda/time/DurationField;.getUnitMillis:()J` @kind virtual;
  #L3bca78.  v2:= temp @kind wide;
  #L3bca7a.  v0:= v0 * v2 @kind long;
  #L3bca7e.  return v0 @kind wide;
}
procedure `long` `getMillis`(`org.joda.time.field.BaseDurationField` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/field/BaseDurationField;.getMillis:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bca90.  call temp:= `getUnitMillis`(v2) @signature `Lorg/joda/time/DurationField;.getUnitMillis:()J` @kind virtual;
  #L3bca96.  v0:= temp @kind wide;
  #L3bca98.  call temp:= `safeMultiply`(v3, v0) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(JJ)J` @kind static;
  #L3bca9e.  v3:= temp @kind wide;
  #L3bcaa0.  return v3 @kind wide;
}
procedure `java.lang.String` `getName`(`org.joda.time.field.BaseDurationField` v1 @kind this) @signature `Lorg/joda/time/field/BaseDurationField;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3bca08.  v0:= v1.`org.joda.time.field.BaseDurationField.iType` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3bca0c.  call temp:= `getName`(v0) @signature `Lorg/joda/time/DurationFieldType;.getName:()Ljava/lang/String;` @kind virtual;
  #L3bca12.  v0:= temp @kind object;
  #L3bca14.  return v0 @kind object;
}
procedure `org.joda.time.DurationFieldType` `getType`(`org.joda.time.field.BaseDurationField` v1 @kind this) @signature `Lorg/joda/time/field/BaseDurationField;.getType:()Lorg/joda/time/DurationFieldType;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3bcad0.  v0:= v1.`org.joda.time.field.BaseDurationField.iType` @type ^`org.joda.time.DurationFieldType` @kind object;
  #L3bcad4.  return v0 @kind object;
}
procedure `int` `getValue`(`org.joda.time.field.BaseDurationField` v0 @kind this, `long` v1 ) @signature `Lorg/joda/time/field/BaseDurationField;.getValue:(J)I` @AccessFlag PUBLIC {
    temp;

  #L3bc9c0.  call temp:= `getValueAsLong`(v0, v1) @signature `Lorg/joda/time/field/BaseDurationField;.getValueAsLong:(J)J` @kind virtual;
  #L3bc9c6.  v1:= temp @kind wide;
  #L3bc9c8.  call temp:= `safeToInt`(v1) @signature `Lorg/joda/time/field/FieldUtils;.safeToInt:(J)I` @kind static;
  #L3bc9ce.  v1:= temp;
  #L3bc9d0.  return v1;
}
procedure `int` `getValue`(`org.joda.time.field.BaseDurationField` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lorg/joda/time/field/BaseDurationField;.getValue:(JJ)I` @AccessFlag PUBLIC {
    temp;

  #L3bc9e4.  call temp:= `getValueAsLong`(v0, v1, v3) @signature `Lorg/joda/time/DurationField;.getValueAsLong:(JJ)J` @kind virtual;
  #L3bc9ea.  v1:= temp @kind wide;
  #L3bc9ec.  call temp:= `safeToInt`(v1) @signature `Lorg/joda/time/field/FieldUtils;.safeToInt:(J)I` @kind static;
  #L3bc9f2.  v1:= temp;
  #L3bc9f4.  return v1;
}
procedure `long` `getValueAsLong`(`org.joda.time.field.BaseDurationField` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/field/BaseDurationField;.getValueAsLong:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bcab4.  call temp:= `getUnitMillis`(v2) @signature `Lorg/joda/time/DurationField;.getUnitMillis:()J` @kind virtual;
  #L3bcaba.  v0:= temp @kind wide;
  #L3bcabc.  v3:= v3 / v0 @kind long;
  #L3bcabe.  return v3 @kind wide;
}
procedure `boolean` `isSupported`(`org.joda.time.field.BaseDurationField` v1 @kind this) @signature `Lorg/joda/time/field/BaseDurationField;.isSupported:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3bc930.  v0:= 1I;
  #L3bc932.  return v0;
}
procedure `java.lang.String` `toString`(`org.joda.time.field.BaseDurationField` v2 @kind this) @signature `Lorg/joda/time/field/BaseDurationField;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3bca28.  v0:= new `java.lang.StringBuilder`;
  #L3bca2c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3bca32.  v1:= "DurationField[" @kind object;
  #L3bca36.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bca3c.  call temp:= `getName`(v2) @signature `Lorg/joda/time/field/BaseDurationField;.getName:()Ljava/lang/String;` @kind virtual;
  #L3bca42.  v1:= temp @kind object;
  #L3bca44.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bca4a.  v1:= 93I;
  #L3bca4e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3bca54.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3bca5a.  v0:= temp @kind object;
  #L3bca5c.  return v0 @kind object;
}
