record `org.joda.time.DurationField` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Comparable` @kind interface {
}
procedure `void` `<init>`(`org.joda.time.DurationField` v0 @kind this) @signature `Lorg/joda/time/DurationField;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39a4c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L39a4ca.  return @kind void;
}
procedure `long` `add`(`long` v0 , `int` v2 ) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `add`(`long` v0 , `long` v2 ) @signature `Lorg/joda/time/DurationField;.add:(JJ)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getDifference`(`long` v0 , `long` v2 ) @signature `Lorg/joda/time/DurationField;.getDifference:(JJ)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `getDifferenceAsLong`(`long` v0 , `long` v2 ) @signature `Lorg/joda/time/DurationField;.getDifferenceAsLong:(JJ)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `getMillis`(`int` v0 ) @signature `Lorg/joda/time/DurationField;.getMillis:(I)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `getMillis`(`int` v0 , `long` v1 ) @signature `Lorg/joda/time/DurationField;.getMillis:(IJ)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `getMillis`(`long` v0 ) @signature `Lorg/joda/time/DurationField;.getMillis:(J)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `getMillis`(`long` v0 , `long` v2 ) @signature `Lorg/joda/time/DurationField;.getMillis:(JJ)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getName`() @signature `Lorg/joda/time/DurationField;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.joda.time.DurationFieldType` `getType`() @signature `Lorg/joda/time/DurationField;.getType:()Lorg/joda/time/DurationFieldType;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `getUnitMillis`() @signature `Lorg/joda/time/DurationField;.getUnitMillis:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getValue`(`long` v0 ) @signature `Lorg/joda/time/DurationField;.getValue:(J)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getValue`(`long` v0 , `long` v2 ) @signature `Lorg/joda/time/DurationField;.getValue:(JJ)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `getValueAsLong`(`long` v0 ) @signature `Lorg/joda/time/DurationField;.getValueAsLong:(J)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `getValueAsLong`(`long` v0 , `long` v2 ) @signature `Lorg/joda/time/DurationField;.getValueAsLong:(JJ)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isPrecise`() @signature `Lorg/joda/time/DurationField;.isPrecise:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isSupported`() @signature `Lorg/joda/time/DurationField;.isSupported:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `subtract`(`org.joda.time.DurationField` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39a45c.  v0:= -2147483648I;
  #L39a460.  if v5 != v0 then goto L39a470;
  #L39a464.  v0:= (`long`) v5 @kind i2l;
  #L39a466.  call temp:= `subtract`(v2, v3, v0) @signature `Lorg/joda/time/DurationField;.subtract:(JJ)J` @kind virtual;
  #L39a46c.  v3:= temp @kind wide;
  #L39a46e.  return v3 @kind wide;
  #L39a470.  v5:= -v5 @kind int;
  #L39a472.  call temp:= `add`(v2, v3, v5) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L39a478.  v3:= temp @kind wide;
  #L39a47a.  return v3 @kind wide;
}
procedure `long` `subtract`(`org.joda.time.DurationField` v3 @kind this, `long` v4 , `long` v6 ) @signature `Lorg/joda/time/DurationField;.subtract:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39a48c.  v0:= -9223372036854775808L;
  #L39a490.  v2:= lcmp(v6, v0);
  #L39a494.  if v2 == 0 then goto L39a4a4;
  #L39a498.  v6:= -v6 @kind long;
  #L39a49a.  call temp:= `add`(v3, v4, v6) @signature `Lorg/joda/time/DurationField;.add:(JJ)J` @kind virtual;
  #L39a4a0.  v4:= temp @kind wide;
  #L39a4a2.  return v4 @kind wide;
  #L39a4a4.  v4:= new `java.lang.ArithmeticException`;
  #L39a4a8.  v5:= "Long.MIN_VALUE cannot be negated" @kind object;
  #L39a4ac.  call `<init>`(v4, v5) @signature `Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39a4b2.  throw v4;
}
procedure `java.lang.String` `toString`() @signature `Lorg/joda/time/DurationField;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
