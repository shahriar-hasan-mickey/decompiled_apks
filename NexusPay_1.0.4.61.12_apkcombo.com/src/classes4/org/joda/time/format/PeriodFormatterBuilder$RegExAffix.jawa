record `org.joda.time.format.PeriodFormatterBuilder$RegExAffix` @kind class @AccessFlag  extends `org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix` @kind class {
  `java.util.regex.Pattern`[] `org.joda.time.format.PeriodFormatterBuilder$RegExAffix.iPatterns` @AccessFlag PRIVATE_FINAL;
  `java.lang.String`[] `org.joda.time.format.PeriodFormatterBuilder$RegExAffix.iSuffixes` @AccessFlag PRIVATE_FINAL;
  `java.lang.String`[] `org.joda.time.format.PeriodFormatterBuilder$RegExAffix.iSuffixesSortedDescByLength` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Comparator` `@@org.joda.time.format.PeriodFormatterBuilder$RegExAffix.LENGTH_DESC_COMPARATOR` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/format/PeriodFormatterBuilder$RegExAffix;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3cae90.  v0:= new `org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1`;
  #L3cae94.  call `<init>`(v0) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$RegExAffix$1;.<init>:()V` @kind direct;
  #L3cae9a.  `@@org.joda.time.format.PeriodFormatterBuilder$RegExAffix.LENGTH_DESC_COMPARATOR` @type ^`java.util.Comparator` := v0 @kind object;
  #L3cae9e.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.format.PeriodFormatterBuilder$RegExAffix` v3 @kind this, `java.lang.String`[] v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$RegExAffix;.<init>:([Ljava/lang/String;[Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3caeb0.  call `<init>`(v3) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$IgnorableAffix;.<init>:()V` @kind direct;
  #L3caeb6.  call temp:= `clone`(v5) @signature `[Ljava/lang/String;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3caebc.  v5:= temp @kind object;
  #L3caebe.  v5:= (`java.lang.String`[]) v5 @kind object;
  #L3caec2.  v3.`org.joda.time.format.PeriodFormatterBuilder$RegExAffix.iSuffixes` @type ^`java.lang.String`[] := v5 @kind object;
  #L3caec6.  v5:= length @variable v4;
  #L3caec8.  v5:= new `java.util.regex.Pattern`[v5];
  #L3caecc.  v3.`org.joda.time.format.PeriodFormatterBuilder$RegExAffix.iPatterns` @type ^`java.util.regex.Pattern`[] := v5 @kind object;
  #L3caed0.  v5:= 0I;
  #L3caed2.  v0:= length @variable v4;
  #L3caed4.  if v5 >= v0 then goto L3caf20;
  #L3caed8.  call temp:= `access$200`() @signature `Lorg/joda/time/format/PeriodFormatterBuilder;.access$200:()Ljava/util/concurrent/ConcurrentMap;` @kind static;
  #L3caede.  v0:= temp @kind object;
  #L3caee0.  v1:= v4[v5] @kind object;
  #L3caee4.  call temp:= `get`(v0, v1) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3caeea.  v0:= temp @kind object;
  #L3caeec.  v0:= (`java.util.regex.Pattern`) v0 @kind object;
  #L3caef0.  if v0 != 0 then goto L3caf12;
  #L3caef4.  v0:= v4[v5] @kind object;
  #L3caef8.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L3caefe.  v0:= temp @kind object;
  #L3caf00.  call temp:= `access$200`() @signature `Lorg/joda/time/format/PeriodFormatterBuilder;.access$200:()Ljava/util/concurrent/ConcurrentMap;` @kind static;
  #L3caf06.  v1:= temp @kind object;
  #L3caf08.  v2:= v4[v5] @kind object;
  #L3caf0c.  call temp:= `putIfAbsent`(v1, v2, v0) @signature `Ljava/util/concurrent/ConcurrentMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3caf12.  v1:= v3.`org.joda.time.format.PeriodFormatterBuilder$RegExAffix.iPatterns` @type ^`java.util.regex.Pattern`[] @kind object;
  #L3caf16.  v1[v5]:= v0 @kind object;
  #L3caf1a.  v5:= v5 + 1;
  #L3caf1e.  goto L3caed2;
  #L3caf20.  v4:= v3.`org.joda.time.format.PeriodFormatterBuilder$RegExAffix.iSuffixes` @type ^`java.lang.String`[] @kind object;
  #L3caf24.  call temp:= `clone`(v4) @signature `[Ljava/lang/String;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3caf2a.  v4:= temp @kind object;
  #L3caf2c.  v4:= (`java.lang.String`[]) v4 @kind object;
  #L3caf30.  v3.`org.joda.time.format.PeriodFormatterBuilder$RegExAffix.iSuffixesSortedDescByLength` @type ^`java.lang.String`[] := v4 @kind object;
  #L3caf34.  v5:= `@@org.joda.time.format.PeriodFormatterBuilder$RegExAffix.LENGTH_DESC_COMPARATOR` @type ^`java.util.Comparator` @kind object;
  #L3caf38.  call `sort`(v4, v5) @signature `Ljava/util/Arrays;.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V` @kind static;
  #L3caf3e.  return @kind void;
}
procedure `int` `selectSuffixIndex`(`org.joda.time.format.PeriodFormatterBuilder$RegExAffix` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$RegExAffix;.selectSuffixIndex:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3cae20.  call temp:= `valueOf`(v4) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L3cae26.  v4:= temp @kind object;
  #L3cae28.  v0:= 0I;
  #L3cae2a.  v1:= v3.`org.joda.time.format.PeriodFormatterBuilder$RegExAffix.iPatterns` @type ^`java.util.regex.Pattern`[] @kind object;
  #L3cae2e.  v2:= length @variable v1;
  #L3cae30.  if v0 >= v2 then goto L3cae54;
  #L3cae34.  v1:= v1[v0] @kind object;
  #L3cae38.  call temp:= `matcher`(v1, v4) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L3cae3e.  v1:= temp @kind object;
  #L3cae40.  call temp:= `matches`(v1) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L3cae46.  v1:= temp;
  #L3cae48.  if v1 == 0 then goto L3cae4e;
  #L3cae4c.  return v0;
  #L3cae4e.  v0:= v0 + 1;
  #L3cae52.  goto L3cae2a;
  #L3cae54.  v4:= length @variable v1;
  #L3cae56.  v4:= v4 + -1;
  #L3cae5a.  return v4;
}
procedure `int` `calculatePrintedLength`(`org.joda.time.format.PeriodFormatterBuilder$RegExAffix` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$RegExAffix;.calculatePrintedLength:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cad18.  v0:= v1.`org.joda.time.format.PeriodFormatterBuilder$RegExAffix.iSuffixes` @type ^`java.lang.String`[] @kind object;
  #L3cad1c.  call temp:= `selectSuffixIndex`(v1, v2) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$RegExAffix;.selectSuffixIndex:(I)I` @kind direct;
  #L3cad22.  v2:= temp;
  #L3cad24.  v2:= v0[v2] @kind object;
  #L3cad28.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cad2e.  v2:= temp;
  #L3cad30.  return v2;
}
procedure `java.lang.String`[] `getAffixes`(`org.joda.time.format.PeriodFormatterBuilder$RegExAffix` v1 @kind this) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$RegExAffix;.getAffixes:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cae6c.  v0:= v1.`org.joda.time.format.PeriodFormatterBuilder$RegExAffix.iSuffixes` @type ^`java.lang.String`[] @kind object;
  #L3cae70.  call temp:= `clone`(v0) @signature `[Ljava/lang/String;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3cae76.  v0:= temp @kind object;
  #L3cae78.  v0:= (`java.lang.String`[]) v0 @kind object;
  #L3cae7c.  return v0 @kind object;
}
procedure `int` `parse`(`org.joda.time.format.PeriodFormatterBuilder$RegExAffix` v10 @kind this, `java.lang.String` v11 @kind object, `int` v12 ) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$RegExAffix;.parse:(Ljava/lang/String;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3cad44.  v0:= v10.`org.joda.time.format.PeriodFormatterBuilder$RegExAffix.iSuffixesSortedDescByLength` @type ^`java.lang.String`[] @kind object;
  #L3cad48.  v1:= length @variable v0;
  #L3cad4a.  v2:= 0I;
  #L3cad4c.  if v2 >= v1 then goto L3cad98;
  #L3cad50.  v9:= v0[v2] @kind object;
  #L3cad54.  v4:= 1I;
  #L3cad56.  v7:= 0I;
  #L3cad58.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cad5e.  v8:= temp;
  #L3cad60.  v3:= v11 @kind object;
  #L3cad62.  v5:= v12;
  #L3cad64.  v6:= v9 @kind object;
  #L3cad66.  call temp:= `regionMatches`(v3, v4, v5, v6, v7, v8) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L3cad6c.  v3:= temp;
  #L3cad6e.  if v3 == 0 then goto L3cad92;
  #L3cad72.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cad78.  v3:= temp;
  #L3cad7a.  call temp:= `matchesOtherAffix`(v10, v3, v11, v12) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$IgnorableAffix;.matchesOtherAffix:(ILjava/lang/String;I)Z` @kind virtual;
  #L3cad80.  v3:= temp;
  #L3cad82.  if v3 != 0 then goto L3cad92;
  #L3cad86.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cad8c.  v11:= temp;
  #L3cad8e.  v12:= v12 + v11 @kind int;
  #L3cad90.  return v12;
  #L3cad92.  v2:= v2 + 1;
  #L3cad96.  goto L3cad4c;
  #L3cad98.  v11:= ~v12 @kind int;
  #L3cad9a.  return v11;
}
procedure `void` `printTo`(`org.joda.time.format.PeriodFormatterBuilder$RegExAffix` v1 @kind this, `java.io.Writer` v2 @kind object, `int` v3 ) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$RegExAffix;.printTo:(Ljava/io/Writer;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3caf50.  v0:= v1.`org.joda.time.format.PeriodFormatterBuilder$RegExAffix.iSuffixes` @type ^`java.lang.String`[] @kind object;
  #L3caf54.  call temp:= `selectSuffixIndex`(v1, v3) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$RegExAffix;.selectSuffixIndex:(I)I` @kind direct;
  #L3caf5a.  v3:= temp;
  #L3caf5c.  v3:= v0[v3] @kind object;
  #L3caf60.  call `write`(v2, v3) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L3caf66.  return @kind void;
}
procedure `void` `printTo`(`org.joda.time.format.PeriodFormatterBuilder$RegExAffix` v1 @kind this, `java.lang.StringBuffer` v2 @kind object, `int` v3 ) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$RegExAffix;.printTo:(Ljava/lang/StringBuffer;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3caf78.  v0:= v1.`org.joda.time.format.PeriodFormatterBuilder$RegExAffix.iSuffixes` @type ^`java.lang.String`[] @kind object;
  #L3caf7c.  call temp:= `selectSuffixIndex`(v1, v3) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$RegExAffix;.selectSuffixIndex:(I)I` @kind direct;
  #L3caf82.  v3:= temp;
  #L3caf84.  v3:= v0[v3] @kind object;
  #L3caf88.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3caf8e.  return @kind void;
}
procedure `int` `scan`(`org.joda.time.format.PeriodFormatterBuilder$RegExAffix` v12 @kind this, `java.lang.String` v13 @kind object, `int` v14 ) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$RegExAffix;.scan:(Ljava/lang/String;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3cadac.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cadb2.  v0:= temp;
  #L3cadb4.  v7:= v14;
  #L3cadb6.  if v7 >= v0 then goto L3cae0c;
  #L3cadba.  v8:= v12.`org.joda.time.format.PeriodFormatterBuilder$RegExAffix.iSuffixesSortedDescByLength` @type ^`java.lang.String`[] @kind object;
  #L3cadbe.  v9:= length @variable v8;
  #L3cadc0.  v1:= 0I;
  #L3cadc2.  v10:= 0I;
  #L3cadc4.  if v10 >= v9 then goto L3cae06;
  #L3cadc8.  v11:= v8[v10] @kind object;
  #L3cadcc.  v2:= 1I;
  #L3cadce.  v5:= 0I;
  #L3cadd0.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cadd6.  v6:= temp;
  #L3cadd8.  v1:= v13 @kind object;
  #L3cadda.  v3:= v7;
  #L3caddc.  v4:= v11 @kind object;
  #L3cadde.  call temp:= `regionMatches`(v1, v2, v3, v4, v5, v6) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L3cade4.  v1:= temp;
  #L3cade6.  if v1 == 0 then goto L3cae00;
  #L3cadea.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cadf0.  v1:= temp;
  #L3cadf2.  call temp:= `matchesOtherAffix`(v12, v1, v13, v7) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$IgnorableAffix;.matchesOtherAffix:(ILjava/lang/String;I)Z` @kind virtual;
  #L3cadf8.  v1:= temp;
  #L3cadfa.  if v1 != 0 then goto L3cae00;
  #L3cadfe.  return v7;
  #L3cae00.  v10:= v10 + 1;
  #L3cae04.  goto L3cadc4;
  #L3cae06.  v7:= v7 + 1;
  #L3cae0a.  goto L3cadb6;
  #L3cae0c.  v13:= ~v14 @kind int;
  #L3cae0e.  return v13;
}
