record `org.joda.time.format.DateTimeFormatter` @kind class @AccessFlag PUBLIC {
  `org.joda.time.Chronology` `org.joda.time.format.DateTimeFormatter.iChrono` @AccessFlag PRIVATE_FINAL;
  `int` `org.joda.time.format.DateTimeFormatter.iDefaultYear` @AccessFlag PRIVATE_FINAL;
  `java.util.Locale` `org.joda.time.format.DateTimeFormatter.iLocale` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.joda.time.format.DateTimeFormatter.iOffsetParsed` @AccessFlag PRIVATE_FINAL;
  `org.joda.time.format.InternalParser` `org.joda.time.format.DateTimeFormatter.iParser` @AccessFlag PRIVATE_FINAL;
  `java.lang.Integer` `org.joda.time.format.DateTimeFormatter.iPivotYear` @AccessFlag PRIVATE_FINAL;
  `org.joda.time.format.InternalPrinter` `org.joda.time.format.DateTimeFormatter.iPrinter` @AccessFlag PRIVATE_FINAL;
  `org.joda.time.DateTimeZone` `org.joda.time.format.DateTimeFormatter.iZone` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.joda.time.format.DateTimeFormatter` v0 @kind this, `org.joda.time.format.DateTimePrinter` v1 @kind object, `org.joda.time.format.DateTimeParser` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.<init>:(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3c4648.  call temp:= `of`(v1) @signature `Lorg/joda/time/format/DateTimePrinterInternalPrinter;.of:(Lorg/joda/time/format/DateTimePrinter;)Lorg/joda/time/format/InternalPrinter;` @kind static;
  #L3c464e.  v1:= temp @kind object;
  #L3c4650.  call temp:= `of`(v2) @signature `Lorg/joda/time/format/DateTimeParserInternalParser;.of:(Lorg/joda/time/format/DateTimeParser;)Lorg/joda/time/format/InternalParser;` @kind static;
  #L3c4656.  v2:= temp @kind object;
  #L3c4658.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.<init>:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;)V` @kind direct;
  #L3c465e.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.format.DateTimeFormatter` v0 @kind this, `org.joda.time.format.InternalPrinter` v1 @kind object, `org.joda.time.format.InternalParser` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.<init>:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3c4670.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c4676.  v0.`org.joda.time.format.DateTimeFormatter.iPrinter` @type ^`org.joda.time.format.InternalPrinter` := v1 @kind object;
  #L3c467a.  v0.`org.joda.time.format.DateTimeFormatter.iParser` @type ^`org.joda.time.format.InternalParser` := v2 @kind object;
  #L3c467e.  v1:= 0I;
  #L3c4680.  v0.`org.joda.time.format.DateTimeFormatter.iLocale` @type ^`java.util.Locale` := v1 @kind object;
  #L3c4684.  v2:= 0I;
  #L3c4686.  v0.`org.joda.time.format.DateTimeFormatter.iOffsetParsed` @type ^`boolean` := v2 @kind boolean;
  #L3c468a.  v0.`org.joda.time.format.DateTimeFormatter.iChrono` @type ^`org.joda.time.Chronology` := v1 @kind object;
  #L3c468e.  v0.`org.joda.time.format.DateTimeFormatter.iZone` @type ^`org.joda.time.DateTimeZone` := v1 @kind object;
  #L3c4692.  v0.`org.joda.time.format.DateTimeFormatter.iPivotYear` @type ^`java.lang.Integer` := v1 @kind object;
  #L3c4696.  v1:= 2000I;
  #L3c469a.  v0.`org.joda.time.format.DateTimeFormatter.iDefaultYear` @type ^`int` := v1;
  #L3c469e.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.format.DateTimeFormatter` v0 @kind this, `org.joda.time.format.InternalPrinter` v1 @kind object, `org.joda.time.format.InternalParser` v2 @kind object, `java.util.Locale` v3 @kind object, `boolean` v4 , `org.joda.time.Chronology` v5 @kind object, `org.joda.time.DateTimeZone` v6 @kind object, `java.lang.Integer` v7 @kind object, `int` v8 ) @signature `Lorg/joda/time/format/DateTimeFormatter;.<init>:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3c46b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c46b6.  v0.`org.joda.time.format.DateTimeFormatter.iPrinter` @type ^`org.joda.time.format.InternalPrinter` := v1 @kind object;
  #L3c46ba.  v0.`org.joda.time.format.DateTimeFormatter.iParser` @type ^`org.joda.time.format.InternalParser` := v2 @kind object;
  #L3c46be.  v0.`org.joda.time.format.DateTimeFormatter.iLocale` @type ^`java.util.Locale` := v3 @kind object;
  #L3c46c2.  v0.`org.joda.time.format.DateTimeFormatter.iOffsetParsed` @type ^`boolean` := v4 @kind boolean;
  #L3c46c6.  v0.`org.joda.time.format.DateTimeFormatter.iChrono` @type ^`org.joda.time.Chronology` := v5 @kind object;
  #L3c46ca.  v0.`org.joda.time.format.DateTimeFormatter.iZone` @type ^`org.joda.time.DateTimeZone` := v6 @kind object;
  #L3c46ce.  v0.`org.joda.time.format.DateTimeFormatter.iPivotYear` @type ^`java.lang.Integer` := v7 @kind object;
  #L3c46d2.  v0.`org.joda.time.format.DateTimeFormatter.iDefaultYear` @type ^`int` := v8;
  #L3c46d6.  return @kind void;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatter` v16 @kind this, `java.lang.Appendable` v17 @kind object, `long` v18 , `org.joda.time.Chronology` v20 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/Appendable;JLorg/joda/time/Chronology;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3c474c.  v0:= v16 @kind object;
  #L3c4750.  v1:= v18 @kind wide;
  #L3c4754.  call temp:= `requirePrinter`(v16) @signature `Lorg/joda/time/format/DateTimeFormatter;.requirePrinter:()Lorg/joda/time/format/InternalPrinter;` @kind direct;
  #L3c475a.  v3:= temp @kind object;
  #L3c475c.  v4:= v20 @kind object;
  #L3c4760.  call temp:= `selectChronology`(v0, v4) @signature `Lorg/joda/time/format/DateTimeFormatter;.selectChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind direct;
  #L3c4766.  v4:= temp @kind object;
  #L3c4768.  call temp:= `getZone`(v4) @signature `Lorg/joda/time/Chronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3c476e.  v5:= temp @kind object;
  #L3c4770.  call temp:= `getOffset`(v5, v1) @signature `Lorg/joda/time/DateTimeZone;.getOffset:(J)I` @kind virtual;
  #L3c4776.  v6:= temp;
  #L3c4778.  v7:= (`long`) v6 @kind i2l;
  #L3c477a.  v9:= v1 + v7 @kind long;
  #L3c477e.  v11:= v1 ^~ v9 @kind long;
  #L3c4782.  v13:= 0L;
  #L3c4786.  v15:= lcmp(v11, v13);
  #L3c478a.  if v15 >= 0 then goto L3c47a0;
  #L3c478e.  v7:= v7 ^~ v1 @kind long;
  #L3c4790.  v11:= lcmp(v7, v13);
  #L3c4794.  if v11 < 0 then goto L3c47a0;
  #L3c4798.  v5:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3c479c.  v6:= 0I;
  #L3c479e.  v9:= v1 @kind wide;
  #L3c47a0.  v7:= v5 @kind object;
  #L3c47a2.  call temp:= `withUTC`(v4) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3c47a8.  v5:= temp @kind object;
  #L3c47aa.  v8:= v0.`org.joda.time.format.DateTimeFormatter.iLocale` @type ^`java.util.Locale` @kind object;
  #L3c47ae.  v1:= v3 @kind object;
  #L3c47b0.  v2:= v17 @kind object;
  #L3c47b4.  v3:= v9 @kind wide;
  #L3c47b6.  call `printTo`(v1, v2, v3, v5, v6, v7, v8) @signature `Lorg/joda/time/format/InternalPrinter;.printTo:(Ljava/lang/Appendable;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V` @kind interface;
  #L3c47bc.  return @kind void;
}
procedure `org.joda.time.format.InternalParser` `requireParser`(`org.joda.time.format.DateTimeFormatter` v2 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatter;.requireParser:()Lorg/joda/time/format/InternalParser;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3c45d8.  v0:= v2.`org.joda.time.format.DateTimeFormatter.iParser` @type ^`org.joda.time.format.InternalParser` @kind object;
  #L3c45dc.  if v0 == 0 then goto L3c45e2;
  #L3c45e0.  return v0 @kind object;
  #L3c45e2.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3c45e6.  v1:= "Parsing not supported" @kind object;
  #L3c45ea.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c45f0.  throw v0;
}
procedure `org.joda.time.format.InternalPrinter` `requirePrinter`(`org.joda.time.format.DateTimeFormatter` v2 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatter;.requirePrinter:()Lorg/joda/time/format/InternalPrinter;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3c461c.  v0:= v2.`org.joda.time.format.DateTimeFormatter.iPrinter` @type ^`org.joda.time.format.InternalPrinter` @kind object;
  #L3c4620.  if v0 == 0 then goto L3c4626;
  #L3c4624.  return v0 @kind object;
  #L3c4626.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3c462a.  v1:= "Printing not supported" @kind object;
  #L3c462e.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c4634.  throw v0;
}
procedure `org.joda.time.Chronology` `selectChronology`(`org.joda.time.format.DateTimeFormatter` v1 @kind this, `org.joda.time.Chronology` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.selectChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3c4034.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L3c403a.  v2:= temp @kind object;
  #L3c403c.  v0:= v1.`org.joda.time.format.DateTimeFormatter.iChrono` @type ^`org.joda.time.Chronology` @kind object;
  #L3c4040.  if v0 == 0 then goto L3c4046;
  #L3c4044.  v2:= v0 @kind object;
  #L3c4046.  v0:= v1.`org.joda.time.format.DateTimeFormatter.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3c404a.  if v0 == 0 then goto L3c4056;
  #L3c404e.  call temp:= `withZone`(v2, v0) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3c4054.  v2:= temp @kind object;
  #L3c4056.  return v2 @kind object;
}
procedure `org.joda.time.Chronology` `getChronolgy`(`org.joda.time.format.DateTimeFormatter` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatter;.getChronolgy:()Lorg/joda/time/Chronology;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c4004.  v0:= v1.`org.joda.time.format.DateTimeFormatter.iChrono` @type ^`org.joda.time.Chronology` @kind object;
  #L3c4008.  return v0 @kind object;
}
procedure `org.joda.time.Chronology` `getChronology`(`org.joda.time.format.DateTimeFormatter` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatter;.getChronology:()Lorg/joda/time/Chronology;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c401c.  v0:= v1.`org.joda.time.format.DateTimeFormatter.iChrono` @type ^`org.joda.time.Chronology` @kind object;
  #L3c4020.  return v0 @kind object;
}
procedure `int` `getDefaultYear`(`org.joda.time.format.DateTimeFormatter` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatter;.getDefaultYear:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3d84.  v0:= v1.`org.joda.time.format.DateTimeFormatter.iDefaultYear` @type ^`int`;
  #L3c3d88.  return v0;
}
procedure `java.util.Locale` `getLocale`(`org.joda.time.format.DateTimeFormatter` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatter;.getLocale:()Ljava/util/Locale;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3fa0.  v0:= v1.`org.joda.time.format.DateTimeFormatter.iLocale` @type ^`java.util.Locale` @kind object;
  #L3c3fa4.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeParser` `getParser`(`org.joda.time.format.DateTimeFormatter` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatter;.getParser:()Lorg/joda/time/format/DateTimeParser;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c4580.  v0:= v1.`org.joda.time.format.DateTimeFormatter.iParser` @type ^`org.joda.time.format.InternalParser` @kind object;
  #L3c4584.  call temp:= `of`(v0) @signature `Lorg/joda/time/format/InternalParserDateTimeParser;.of:(Lorg/joda/time/format/InternalParser;)Lorg/joda/time/format/DateTimeParser;` @kind static;
  #L3c458a.  v0:= temp @kind object;
  #L3c458c.  return v0 @kind object;
}
procedure `org.joda.time.format.InternalParser` `getParser0`(`org.joda.time.format.DateTimeFormatter` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatter;.getParser0:()Lorg/joda/time/format/InternalParser;` @AccessFlag  {
    temp;
    v0;

  #L3c45c0.  v0:= v1.`org.joda.time.format.DateTimeFormatter.iParser` @type ^`org.joda.time.format.InternalParser` @kind object;
  #L3c45c4.  return v0 @kind object;
}
procedure `java.lang.Integer` `getPivotYear`(`org.joda.time.format.DateTimeFormatter` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatter;.getPivotYear:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3ea4.  v0:= v1.`org.joda.time.format.DateTimeFormatter.iPivotYear` @type ^`java.lang.Integer` @kind object;
  #L3c3ea8.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimePrinter` `getPrinter`(`org.joda.time.format.DateTimeFormatter` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatter;.getPrinter:()Lorg/joda/time/format/DateTimePrinter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c45a0.  v0:= v1.`org.joda.time.format.DateTimeFormatter.iPrinter` @type ^`org.joda.time.format.InternalPrinter` @kind object;
  #L3c45a4.  call temp:= `of`(v0) @signature `Lorg/joda/time/format/InternalPrinterDateTimePrinter;.of:(Lorg/joda/time/format/InternalPrinter;)Lorg/joda/time/format/DateTimePrinter;` @kind static;
  #L3c45aa.  v0:= temp @kind object;
  #L3c45ac.  return v0 @kind object;
}
procedure `org.joda.time.format.InternalPrinter` `getPrinter0`(`org.joda.time.format.DateTimeFormatter` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatter;.getPrinter0:()Lorg/joda/time/format/InternalPrinter;` @AccessFlag  {
    temp;
    v0;

  #L3c4604.  v0:= v1.`org.joda.time.format.DateTimeFormatter.iPrinter` @type ^`org.joda.time.format.InternalPrinter` @kind object;
  #L3c4608.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeZone` `getZone`(`org.joda.time.format.DateTimeFormatter` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatter;.getZone:()Lorg/joda/time/DateTimeZone;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c4150.  v0:= v1.`org.joda.time.format.DateTimeFormatter.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3c4154.  return v0 @kind object;
}
procedure `boolean` `isOffsetParsed`(`org.joda.time.format.DateTimeFormatter` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatter;.isOffsetParsed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3d2c.  v0:= v1.`org.joda.time.format.DateTimeFormatter.iOffsetParsed` @type ^`boolean` @kind boolean;
  #L3c3d30.  return v0;
}
procedure `boolean` `isParser`(`org.joda.time.format.DateTimeFormatter` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatter;.isParser:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3d44.  v0:= v1.`org.joda.time.format.DateTimeFormatter.iParser` @type ^`org.joda.time.format.InternalParser` @kind object;
  #L3c3d48.  if v0 == 0 then goto L3c3d50;
  #L3c3d4c.  v0:= 1I;
  #L3c3d4e.  goto L3c3d52;
  #L3c3d50.  v0:= 0I;
  #L3c3d52.  return v0;
}
procedure `boolean` `isPrinter`(`org.joda.time.format.DateTimeFormatter` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatter;.isPrinter:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3d64.  v0:= v1.`org.joda.time.format.DateTimeFormatter.iPrinter` @type ^`org.joda.time.format.InternalPrinter` @kind object;
  #L3c3d68.  if v0 == 0 then goto L3c3d70;
  #L3c3d6c.  v0:= 1I;
  #L3c3d6e.  goto L3c3d72;
  #L3c3d70.  v0:= 0I;
  #L3c3d72.  return v0;
}
procedure `org.joda.time.DateTime` `parseDateTime`(`org.joda.time.format.DateTimeFormatter` v10 @kind this, `java.lang.String` v11 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.parseDateTime:(Ljava/lang/String;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3c4068.  call temp:= `requireParser`(v10) @signature `Lorg/joda/time/format/DateTimeFormatter;.requireParser:()Lorg/joda/time/format/InternalParser;` @kind direct;
  #L3c406e.  v0:= temp @kind object;
  #L3c4070.  v1:= 0I;
  #L3c4072.  call temp:= `selectChronology`(v10, v1) @signature `Lorg/joda/time/format/DateTimeFormatter;.selectChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind direct;
  #L3c4078.  v1:= temp @kind object;
  #L3c407a.  v9:= new `org.joda.time.format.DateTimeParserBucket`;
  #L3c407e.  v6:= v10.`org.joda.time.format.DateTimeFormatter.iLocale` @type ^`java.util.Locale` @kind object;
  #L3c4082.  v7:= v10.`org.joda.time.format.DateTimeFormatter.iPivotYear` @type ^`java.lang.Integer` @kind object;
  #L3c4086.  v8:= v10.`org.joda.time.format.DateTimeFormatter.iDefaultYear` @type ^`int`;
  #L3c408a.  v3:= 0L;
  #L3c408e.  v2:= v9 @kind object;
  #L3c4090.  v5:= v1 @kind object;
  #L3c4092.  call `<init>`(v2, v3, v5, v6, v7, v8) @signature `Lorg/joda/time/format/DateTimeParserBucket;.<init>:(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V` @kind direct;
  #L3c4098.  v2:= 0I;
  #L3c409a.  call temp:= `parseInto`(v0, v9, v11, v2) @signature `Lorg/joda/time/format/InternalParser;.parseInto:(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/CharSequence;I)I` @kind interface;
  #L3c40a0.  v0:= temp;
  #L3c40a2.  if v0 < 0 then goto L3c412a;
  #L3c40a6.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c40ac.  v2:= temp;
  #L3c40ae.  if v0 < v2 then goto L3c412c;
  #L3c40b2.  v0:= 1I;
  #L3c40b4.  call temp:= `computeMillis`(v9, v0, v11) @signature `Lorg/joda/time/format/DateTimeParserBucket;.computeMillis:(ZLjava/lang/String;)J` @kind virtual;
  #L3c40ba.  v2:= temp @kind wide;
  #L3c40bc.  v11:= v10.`org.joda.time.format.DateTimeFormatter.iOffsetParsed` @type ^`boolean` @kind boolean;
  #L3c40c0.  if v11 == 0 then goto L3c40f2;
  #L3c40c4.  call temp:= `getOffsetInteger`(v9) @signature `Lorg/joda/time/format/DateTimeParserBucket;.getOffsetInteger:()Ljava/lang/Integer;` @kind virtual;
  #L3c40ca.  v11:= temp @kind object;
  #L3c40cc.  if v11 == 0 then goto L3c40f2;
  #L3c40d0.  call temp:= `getOffsetInteger`(v9) @signature `Lorg/joda/time/format/DateTimeParserBucket;.getOffsetInteger:()Ljava/lang/Integer;` @kind virtual;
  #L3c40d6.  v11:= temp @kind object;
  #L3c40d8.  call temp:= `intValue`(v11) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3c40de.  v11:= temp;
  #L3c40e0.  call temp:= `forOffsetMillis`(v11) @signature `Lorg/joda/time/DateTimeZone;.forOffsetMillis:(I)Lorg/joda/time/DateTimeZone;` @kind static;
  #L3c40e6.  v11:= temp @kind object;
  #L3c40e8.  call temp:= `withZone`(v1, v11) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3c40ee.  v1:= temp @kind object;
  #L3c40f0.  goto L3c410e;
  #L3c40f2.  call temp:= `getZone`(v9) @signature `Lorg/joda/time/format/DateTimeParserBucket;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3c40f8.  v11:= temp @kind object;
  #L3c40fa.  if v11 == 0 then goto L3c410e;
  #L3c40fe.  call temp:= `getZone`(v9) @signature `Lorg/joda/time/format/DateTimeParserBucket;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3c4104.  v11:= temp @kind object;
  #L3c4106.  call temp:= `withZone`(v1, v11) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3c410c.  v1:= temp @kind object;
  #L3c410e.  v11:= new `org.joda.time.DateTime`;
  #L3c4112.  call `<init>`(v11, v2, v1) @signature `Lorg/joda/time/DateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3c4118.  v0:= v10.`org.joda.time.format.DateTimeFormatter.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3c411c.  if v0 == 0 then goto L3c4128;
  #L3c4120.  call temp:= `withZone`(v11, v0) @signature `Lorg/joda/time/DateTime;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @kind virtual;
  #L3c4126.  v11:= temp @kind object;
  #L3c4128.  return v11 @kind object;
  #L3c412a.  v0:= ~v0 @kind int;
  #L3c412c.  v1:= new `java.lang.IllegalArgumentException`;
  #L3c4130.  call temp:= `createErrorMessage`(v11, v0) @signature `Lorg/joda/time/format/FormatUtils;.createErrorMessage:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L3c4136.  v11:= temp @kind object;
  #L3c4138.  call `<init>`(v1, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c413e.  throw v1;
}
procedure `int` `parseInto`(`org.joda.time.format.DateTimeFormatter` v12 @kind this, `org.joda.time.ReadWritableInstant` v13 @kind object, `java.lang.String` v14 @kind object, `int` v15 ) @signature `Lorg/joda/time/format/DateTimeFormatter;.parseInto:(Lorg/joda/time/ReadWritableInstant;Ljava/lang/String;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3c3d9c.  call temp:= `requireParser`(v12) @signature `Lorg/joda/time/format/DateTimeFormatter;.requireParser:()Lorg/joda/time/format/InternalParser;` @kind direct;
  #L3c3da2.  v0:= temp @kind object;
  #L3c3da4.  if v13 == 0 then goto L3c3e84;
  #L3c3da8.  call temp:= `getMillis`(v13) @signature `Lorg/joda/time/ReadableInstant;.getMillis:()J` @kind interface;
  #L3c3dae.  v1:= temp @kind wide;
  #L3c3db0.  call temp:= `getChronology`(v13) @signature `Lorg/joda/time/ReadableInstant;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3c3db6.  v3:= temp @kind object;
  #L3c3db8.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L3c3dbe.  v4:= temp @kind object;
  #L3c3dc0.  call temp:= `year`(v4) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3c3dc6.  v4:= temp @kind object;
  #L3c3dc8.  call temp:= `get`(v4, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3c3dce.  v11:= temp;
  #L3c3dd0.  call temp:= `getZone`(v3) @signature `Lorg/joda/time/Chronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3c3dd6.  v4:= temp @kind object;
  #L3c3dd8.  call temp:= `getOffset`(v4, v1) @signature `Lorg/joda/time/DateTimeZone;.getOffset:(J)I` @kind virtual;
  #L3c3dde.  v4:= temp;
  #L3c3de0.  v4:= (`long`) v4 @kind i2l;
  #L3c3de2.  v6:= v1 + v4 @kind long;
  #L3c3de6.  call temp:= `selectChronology`(v12, v3) @signature `Lorg/joda/time/format/DateTimeFormatter;.selectChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind direct;
  #L3c3dec.  v1:= temp @kind object;
  #L3c3dee.  v2:= new `org.joda.time.format.DateTimeParserBucket`;
  #L3c3df2.  v9:= v12.`org.joda.time.format.DateTimeFormatter.iLocale` @type ^`java.util.Locale` @kind object;
  #L3c3df6.  v10:= v12.`org.joda.time.format.DateTimeFormatter.iPivotYear` @type ^`java.lang.Integer` @kind object;
  #L3c3dfa.  v5:= v2 @kind object;
  #L3c3dfc.  v8:= v1 @kind object;
  #L3c3dfe.  call `<init>`(v5, v6, v8, v9, v10, v11) @signature `Lorg/joda/time/format/DateTimeParserBucket;.<init>:(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V` @kind direct;
  #L3c3e04.  call temp:= `parseInto`(v0, v2, v14, v15) @signature `Lorg/joda/time/format/InternalParser;.parseInto:(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/CharSequence;I)I` @kind interface;
  #L3c3e0a.  v15:= temp;
  #L3c3e0c.  v0:= 0I;
  #L3c3e0e.  call temp:= `computeMillis`(v2, v0, v14) @signature `Lorg/joda/time/format/DateTimeParserBucket;.computeMillis:(ZLjava/lang/String;)J` @kind virtual;
  #L3c3e14.  v3:= temp @kind wide;
  #L3c3e16.  call `setMillis`(v13, v3) @signature `Lorg/joda/time/ReadWritableInstant;.setMillis:(J)V` @kind interface;
  #L3c3e1c.  v14:= v12.`org.joda.time.format.DateTimeFormatter.iOffsetParsed` @type ^`boolean` @kind boolean;
  #L3c3e20.  if v14 == 0 then goto L3c3e52;
  #L3c3e24.  call temp:= `getOffsetInteger`(v2) @signature `Lorg/joda/time/format/DateTimeParserBucket;.getOffsetInteger:()Ljava/lang/Integer;` @kind virtual;
  #L3c3e2a.  v14:= temp @kind object;
  #L3c3e2c.  if v14 == 0 then goto L3c3e52;
  #L3c3e30.  call temp:= `getOffsetInteger`(v2) @signature `Lorg/joda/time/format/DateTimeParserBucket;.getOffsetInteger:()Ljava/lang/Integer;` @kind virtual;
  #L3c3e36.  v14:= temp @kind object;
  #L3c3e38.  call temp:= `intValue`(v14) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3c3e3e.  v14:= temp;
  #L3c3e40.  call temp:= `forOffsetMillis`(v14) @signature `Lorg/joda/time/DateTimeZone;.forOffsetMillis:(I)Lorg/joda/time/DateTimeZone;` @kind static;
  #L3c3e46.  v14:= temp @kind object;
  #L3c3e48.  call temp:= `withZone`(v1, v14) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3c3e4e.  v1:= temp @kind object;
  #L3c3e50.  goto L3c3e6e;
  #L3c3e52.  call temp:= `getZone`(v2) @signature `Lorg/joda/time/format/DateTimeParserBucket;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3c3e58.  v14:= temp @kind object;
  #L3c3e5a.  if v14 == 0 then goto L3c3e6e;
  #L3c3e5e.  call temp:= `getZone`(v2) @signature `Lorg/joda/time/format/DateTimeParserBucket;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3c3e64.  v14:= temp @kind object;
  #L3c3e66.  call temp:= `withZone`(v1, v14) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3c3e6c.  v1:= temp @kind object;
  #L3c3e6e.  call `setChronology`(v13, v1) @signature `Lorg/joda/time/ReadWritableInstant;.setChronology:(Lorg/joda/time/Chronology;)V` @kind interface;
  #L3c3e74.  v14:= v12.`org.joda.time.format.DateTimeFormatter.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3c3e78.  if v14 == 0 then goto L3c3e82;
  #L3c3e7c.  call `setZone`(v13, v14) @signature `Lorg/joda/time/ReadWritableInstant;.setZone:(Lorg/joda/time/DateTimeZone;)V` @kind interface;
  #L3c3e82.  return v15;
  #L3c3e84.  v13:= new `java.lang.IllegalArgumentException`;
  #L3c3e88.  v14:= "Instant must not be null" @kind object;
  #L3c3e8c.  call `<init>`(v13, v14) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c3e92.  throw v13;
}
procedure `org.joda.time.LocalDate` `parseLocalDate`(`org.joda.time.format.DateTimeFormatter` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.parseLocalDate:(Ljava/lang/String;)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;

  #L3c4168.  call temp:= `parseLocalDateTime`(v0, v1) @signature `Lorg/joda/time/format/DateTimeFormatter;.parseLocalDateTime:(Ljava/lang/String;)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L3c416e.  v1:= temp @kind object;
  #L3c4170.  call temp:= `toLocalDate`(v1) @signature `Lorg/joda/time/LocalDateTime;.toLocalDate:()Lorg/joda/time/LocalDate;` @kind virtual;
  #L3c4176.  v1:= temp @kind object;
  #L3c4178.  return v1 @kind object;
}
procedure `org.joda.time.LocalDateTime` `parseLocalDateTime`(`org.joda.time.format.DateTimeFormatter` v10 @kind this, `java.lang.String` v11 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.parseLocalDateTime:(Ljava/lang/String;)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3c418c.  call temp:= `requireParser`(v10) @signature `Lorg/joda/time/format/DateTimeFormatter;.requireParser:()Lorg/joda/time/format/InternalParser;` @kind direct;
  #L3c4192.  v0:= temp @kind object;
  #L3c4194.  v1:= 0I;
  #L3c4196.  call temp:= `selectChronology`(v10, v1) @signature `Lorg/joda/time/format/DateTimeFormatter;.selectChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind direct;
  #L3c419c.  v1:= temp @kind object;
  #L3c419e.  call temp:= `withUTC`(v1) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3c41a4.  v1:= temp @kind object;
  #L3c41a6.  v9:= new `org.joda.time.format.DateTimeParserBucket`;
  #L3c41aa.  v6:= v10.`org.joda.time.format.DateTimeFormatter.iLocale` @type ^`java.util.Locale` @kind object;
  #L3c41ae.  v7:= v10.`org.joda.time.format.DateTimeFormatter.iPivotYear` @type ^`java.lang.Integer` @kind object;
  #L3c41b2.  v8:= v10.`org.joda.time.format.DateTimeFormatter.iDefaultYear` @type ^`int`;
  #L3c41b6.  v3:= 0L;
  #L3c41ba.  v2:= v9 @kind object;
  #L3c41bc.  v5:= v1 @kind object;
  #L3c41be.  call `<init>`(v2, v3, v5, v6, v7, v8) @signature `Lorg/joda/time/format/DateTimeParserBucket;.<init>:(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V` @kind direct;
  #L3c41c4.  v2:= 0I;
  #L3c41c6.  call temp:= `parseInto`(v0, v9, v11, v2) @signature `Lorg/joda/time/format/InternalParser;.parseInto:(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/CharSequence;I)I` @kind interface;
  #L3c41cc.  v0:= temp;
  #L3c41ce.  if v0 < 0 then goto L3c423e;
  #L3c41d2.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c41d8.  v2:= temp;
  #L3c41da.  if v0 < v2 then goto L3c4240;
  #L3c41de.  v0:= 1I;
  #L3c41e0.  call temp:= `computeMillis`(v9, v0, v11) @signature `Lorg/joda/time/format/DateTimeParserBucket;.computeMillis:(ZLjava/lang/String;)J` @kind virtual;
  #L3c41e6.  v2:= temp @kind wide;
  #L3c41e8.  call temp:= `getOffsetInteger`(v9) @signature `Lorg/joda/time/format/DateTimeParserBucket;.getOffsetInteger:()Ljava/lang/Integer;` @kind virtual;
  #L3c41ee.  v11:= temp @kind object;
  #L3c41f0.  if v11 == 0 then goto L3c4216;
  #L3c41f4.  call temp:= `getOffsetInteger`(v9) @signature `Lorg/joda/time/format/DateTimeParserBucket;.getOffsetInteger:()Ljava/lang/Integer;` @kind virtual;
  #L3c41fa.  v11:= temp @kind object;
  #L3c41fc.  call temp:= `intValue`(v11) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3c4202.  v11:= temp;
  #L3c4204.  call temp:= `forOffsetMillis`(v11) @signature `Lorg/joda/time/DateTimeZone;.forOffsetMillis:(I)Lorg/joda/time/DateTimeZone;` @kind static;
  #L3c420a.  v11:= temp @kind object;
  #L3c420c.  call temp:= `withZone`(v1, v11) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3c4212.  v1:= temp @kind object;
  #L3c4214.  goto L3c4232;
  #L3c4216.  call temp:= `getZone`(v9) @signature `Lorg/joda/time/format/DateTimeParserBucket;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3c421c.  v11:= temp @kind object;
  #L3c421e.  if v11 == 0 then goto L3c4232;
  #L3c4222.  call temp:= `getZone`(v9) @signature `Lorg/joda/time/format/DateTimeParserBucket;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3c4228.  v11:= temp @kind object;
  #L3c422a.  call temp:= `withZone`(v1, v11) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3c4230.  v1:= temp @kind object;
  #L3c4232.  v11:= new `org.joda.time.LocalDateTime`;
  #L3c4236.  call `<init>`(v11, v2, v1) @signature `Lorg/joda/time/LocalDateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3c423c.  return v11 @kind object;
  #L3c423e.  v0:= ~v0 @kind int;
  #L3c4240.  v1:= new `java.lang.IllegalArgumentException`;
  #L3c4244.  call temp:= `createErrorMessage`(v11, v0) @signature `Lorg/joda/time/format/FormatUtils;.createErrorMessage:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L3c424a.  v11:= temp @kind object;
  #L3c424c.  call `<init>`(v1, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c4252.  throw v1;
}
procedure `org.joda.time.LocalTime` `parseLocalTime`(`org.joda.time.format.DateTimeFormatter` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.parseLocalTime:(Ljava/lang/String;)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;

  #L3c4264.  call temp:= `parseLocalDateTime`(v0, v1) @signature `Lorg/joda/time/format/DateTimeFormatter;.parseLocalDateTime:(Ljava/lang/String;)Lorg/joda/time/LocalDateTime;` @kind virtual;
  #L3c426a.  v1:= temp @kind object;
  #L3c426c.  call temp:= `toLocalTime`(v1) @signature `Lorg/joda/time/LocalDateTime;.toLocalTime:()Lorg/joda/time/LocalTime;` @kind virtual;
  #L3c4272.  v1:= temp @kind object;
  #L3c4274.  return v1 @kind object;
}
procedure `long` `parseMillis`(`org.joda.time.format.DateTimeFormatter` v9 @kind this, `java.lang.String` v10 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.parseMillis:(Ljava/lang/String;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3c3fb8.  call temp:= `requireParser`(v9) @signature `Lorg/joda/time/format/DateTimeFormatter;.requireParser:()Lorg/joda/time/format/InternalParser;` @kind direct;
  #L3c3fbe.  v0:= temp @kind object;
  #L3c3fc0.  v1:= v9.`org.joda.time.format.DateTimeFormatter.iChrono` @type ^`org.joda.time.Chronology` @kind object;
  #L3c3fc4.  call temp:= `selectChronology`(v9, v1) @signature `Lorg/joda/time/format/DateTimeFormatter;.selectChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind direct;
  #L3c3fca.  v5:= temp @kind object;
  #L3c3fcc.  v1:= new `org.joda.time.format.DateTimeParserBucket`;
  #L3c3fd0.  v6:= v9.`org.joda.time.format.DateTimeFormatter.iLocale` @type ^`java.util.Locale` @kind object;
  #L3c3fd4.  v7:= v9.`org.joda.time.format.DateTimeFormatter.iPivotYear` @type ^`java.lang.Integer` @kind object;
  #L3c3fd8.  v8:= v9.`org.joda.time.format.DateTimeFormatter.iDefaultYear` @type ^`int`;
  #L3c3fdc.  v3:= 0L;
  #L3c3fe0.  v2:= v1 @kind object;
  #L3c3fe2.  call `<init>`(v2, v3, v5, v6, v7, v8) @signature `Lorg/joda/time/format/DateTimeParserBucket;.<init>:(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V` @kind direct;
  #L3c3fe8.  call temp:= `doParseMillis`(v1, v0, v10) @signature `Lorg/joda/time/format/DateTimeParserBucket;.doParseMillis:(Lorg/joda/time/format/InternalParser;Ljava/lang/CharSequence;)J` @kind virtual;
  #L3c3fee.  v0:= temp @kind wide;
  #L3c3ff0.  return v0 @kind wide;
}
procedure `org.joda.time.MutableDateTime` `parseMutableDateTime`(`org.joda.time.format.DateTimeFormatter` v10 @kind this, `java.lang.String` v11 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.parseMutableDateTime:(Ljava/lang/String;)Lorg/joda/time/MutableDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3c4288.  call temp:= `requireParser`(v10) @signature `Lorg/joda/time/format/DateTimeFormatter;.requireParser:()Lorg/joda/time/format/InternalParser;` @kind direct;
  #L3c428e.  v0:= temp @kind object;
  #L3c4290.  v1:= 0I;
  #L3c4292.  call temp:= `selectChronology`(v10, v1) @signature `Lorg/joda/time/format/DateTimeFormatter;.selectChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind direct;
  #L3c4298.  v1:= temp @kind object;
  #L3c429a.  v9:= new `org.joda.time.format.DateTimeParserBucket`;
  #L3c429e.  v6:= v10.`org.joda.time.format.DateTimeFormatter.iLocale` @type ^`java.util.Locale` @kind object;
  #L3c42a2.  v7:= v10.`org.joda.time.format.DateTimeFormatter.iPivotYear` @type ^`java.lang.Integer` @kind object;
  #L3c42a6.  v8:= v10.`org.joda.time.format.DateTimeFormatter.iDefaultYear` @type ^`int`;
  #L3c42aa.  v3:= 0L;
  #L3c42ae.  v2:= v9 @kind object;
  #L3c42b0.  v5:= v1 @kind object;
  #L3c42b2.  call `<init>`(v2, v3, v5, v6, v7, v8) @signature `Lorg/joda/time/format/DateTimeParserBucket;.<init>:(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V` @kind direct;
  #L3c42b8.  v2:= 0I;
  #L3c42ba.  call temp:= `parseInto`(v0, v9, v11, v2) @signature `Lorg/joda/time/format/InternalParser;.parseInto:(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/CharSequence;I)I` @kind interface;
  #L3c42c0.  v0:= temp;
  #L3c42c2.  if v0 < 0 then goto L3c4348;
  #L3c42c6.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c42cc.  v2:= temp;
  #L3c42ce.  if v0 < v2 then goto L3c434a;
  #L3c42d2.  v0:= 1I;
  #L3c42d4.  call temp:= `computeMillis`(v9, v0, v11) @signature `Lorg/joda/time/format/DateTimeParserBucket;.computeMillis:(ZLjava/lang/String;)J` @kind virtual;
  #L3c42da.  v2:= temp @kind wide;
  #L3c42dc.  v11:= v10.`org.joda.time.format.DateTimeFormatter.iOffsetParsed` @type ^`boolean` @kind boolean;
  #L3c42e0.  if v11 == 0 then goto L3c4312;
  #L3c42e4.  call temp:= `getOffsetInteger`(v9) @signature `Lorg/joda/time/format/DateTimeParserBucket;.getOffsetInteger:()Ljava/lang/Integer;` @kind virtual;
  #L3c42ea.  v11:= temp @kind object;
  #L3c42ec.  if v11 == 0 then goto L3c4312;
  #L3c42f0.  call temp:= `getOffsetInteger`(v9) @signature `Lorg/joda/time/format/DateTimeParserBucket;.getOffsetInteger:()Ljava/lang/Integer;` @kind virtual;
  #L3c42f6.  v11:= temp @kind object;
  #L3c42f8.  call temp:= `intValue`(v11) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3c42fe.  v11:= temp;
  #L3c4300.  call temp:= `forOffsetMillis`(v11) @signature `Lorg/joda/time/DateTimeZone;.forOffsetMillis:(I)Lorg/joda/time/DateTimeZone;` @kind static;
  #L3c4306.  v11:= temp @kind object;
  #L3c4308.  call temp:= `withZone`(v1, v11) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3c430e.  v1:= temp @kind object;
  #L3c4310.  goto L3c432e;
  #L3c4312.  call temp:= `getZone`(v9) @signature `Lorg/joda/time/format/DateTimeParserBucket;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3c4318.  v11:= temp @kind object;
  #L3c431a.  if v11 == 0 then goto L3c432e;
  #L3c431e.  call temp:= `getZone`(v9) @signature `Lorg/joda/time/format/DateTimeParserBucket;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3c4324.  v11:= temp @kind object;
  #L3c4326.  call temp:= `withZone`(v1, v11) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3c432c.  v1:= temp @kind object;
  #L3c432e.  v11:= new `org.joda.time.MutableDateTime`;
  #L3c4332.  call `<init>`(v11, v2, v1) @signature `Lorg/joda/time/MutableDateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3c4338.  v0:= v10.`org.joda.time.format.DateTimeFormatter.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3c433c.  if v0 == 0 then goto L3c4346;
  #L3c4340.  call `setZone`(v11, v0) @signature `Lorg/joda/time/MutableDateTime;.setZone:(Lorg/joda/time/DateTimeZone;)V` @kind virtual;
  #L3c4346.  return v11 @kind object;
  #L3c4348.  v0:= ~v0 @kind int;
  #L3c434a.  v1:= new `java.lang.IllegalArgumentException`;
  #L3c434e.  call temp:= `createErrorMessage`(v11, v0) @signature `Lorg/joda/time/format/FormatUtils;.createErrorMessage:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L3c4354.  v11:= temp @kind object;
  #L3c4356.  call `<init>`(v1, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c435c.  throw v1;
}
procedure `java.lang.String` `print`(`org.joda.time.format.DateTimeFormatter` v2 @kind this, `long` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatter;.print:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3ebc.  v0:= new `java.lang.StringBuilder`;
  #L3c3ec0.  call temp:= `requirePrinter`(v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.requirePrinter:()Lorg/joda/time/format/InternalPrinter;` @kind direct;
  #L3c3ec6.  v1:= temp @kind object;
  #L3c3ec8.  call temp:= `estimatePrintedLength`(v1) @signature `Lorg/joda/time/format/InternalPrinter;.estimatePrintedLength:()I` @kind interface;
  #L3c3ece.  v1:= temp;
  #L3c3ed0.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3c3ed6.  call `printTo`(v2, v0, v3) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/Appendable;J)V` @kind virtual;
  #L3c3edc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c3ee2.  v3:= temp @kind object;
  #L3c3ee4.  return v3 @kind object;
  catch `java.io.IOException` @[L3c3ed6..L3c3edc] goto L3c3edc;
}
procedure `java.lang.String` `print`(`org.joda.time.format.DateTimeFormatter` v2 @kind this, `org.joda.time.ReadableInstant` v3 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.print:(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3f08.  v0:= new `java.lang.StringBuilder`;
  #L3c3f0c.  call temp:= `requirePrinter`(v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.requirePrinter:()Lorg/joda/time/format/InternalPrinter;` @kind direct;
  #L3c3f12.  v1:= temp @kind object;
  #L3c3f14.  call temp:= `estimatePrintedLength`(v1) @signature `Lorg/joda/time/format/InternalPrinter;.estimatePrintedLength:()I` @kind interface;
  #L3c3f1a.  v1:= temp;
  #L3c3f1c.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3c3f22.  call `printTo`(v2, v0, v3) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/Appendable;Lorg/joda/time/ReadableInstant;)V` @kind virtual;
  #L3c3f28.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c3f2e.  v3:= temp @kind object;
  #L3c3f30.  return v3 @kind object;
  catch `java.io.IOException` @[L3c3f22..L3c3f28] goto L3c3f28;
}
procedure `java.lang.String` `print`(`org.joda.time.format.DateTimeFormatter` v2 @kind this, `org.joda.time.ReadablePartial` v3 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.print:(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3f54.  v0:= new `java.lang.StringBuilder`;
  #L3c3f58.  call temp:= `requirePrinter`(v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.requirePrinter:()Lorg/joda/time/format/InternalPrinter;` @kind direct;
  #L3c3f5e.  v1:= temp @kind object;
  #L3c3f60.  call temp:= `estimatePrintedLength`(v1) @signature `Lorg/joda/time/format/InternalPrinter;.estimatePrintedLength:()I` @kind interface;
  #L3c3f66.  v1:= temp;
  #L3c3f68.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3c3f6e.  call `printTo`(v2, v0, v3) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/Appendable;Lorg/joda/time/ReadablePartial;)V` @kind virtual;
  #L3c3f74.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c3f7a.  v3:= temp @kind object;
  #L3c3f7c.  return v3 @kind object;
  catch `java.io.IOException` @[L3c3f6e..L3c3f74] goto L3c3f74;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatter` v0 @kind this, `java.io.Writer` v1 @kind object, `long` v2 ) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/io/Writer;J)V` @AccessFlag PUBLIC {
    temp;

  #L3c46e8.  call `printTo`(v0, v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/Appendable;J)V` @kind virtual;
  #L3c46ee.  return @kind void;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatter` v0 @kind this, `java.io.Writer` v1 @kind object, `org.joda.time.ReadableInstant` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/io/Writer;Lorg/joda/time/ReadableInstant;)V` @AccessFlag PUBLIC {
    temp;

  #L3c4700.  call `printTo`(v0, v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/Appendable;Lorg/joda/time/ReadableInstant;)V` @kind virtual;
  #L3c4706.  return @kind void;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatter` v0 @kind this, `java.io.Writer` v1 @kind object, `org.joda.time.ReadablePartial` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;)V` @AccessFlag PUBLIC {
    temp;

  #L3c4718.  call `printTo`(v0, v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/Appendable;Lorg/joda/time/ReadablePartial;)V` @kind virtual;
  #L3c471e.  return @kind void;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatter` v1 @kind this, `java.lang.Appendable` v2 @kind object, `long` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/Appendable;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c4730.  v0:= 0I;
  #L3c4732.  call `printTo`(v1, v2, v3, v0) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/Appendable;JLorg/joda/time/Chronology;)V` @kind direct;
  #L3c4738.  return @kind void;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatter` v2 @kind this, `java.lang.Appendable` v3 @kind object, `org.joda.time.ReadableInstant` v4 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/Appendable;Lorg/joda/time/ReadableInstant;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c47d0.  call temp:= `getInstantMillis`(v4) @signature `Lorg/joda/time/DateTimeUtils;.getInstantMillis:(Lorg/joda/time/ReadableInstant;)J` @kind static;
  #L3c47d6.  v0:= temp @kind wide;
  #L3c47d8.  call temp:= `getInstantChronology`(v4) @signature `Lorg/joda/time/DateTimeUtils;.getInstantChronology:(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;` @kind static;
  #L3c47de.  v4:= temp @kind object;
  #L3c47e0.  call `printTo`(v2, v3, v0, v4) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/Appendable;JLorg/joda/time/Chronology;)V` @kind direct;
  #L3c47e6.  return @kind void;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatter` v2 @kind this, `java.lang.Appendable` v3 @kind object, `org.joda.time.ReadablePartial` v4 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/Appendable;Lorg/joda/time/ReadablePartial;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c47f8.  call temp:= `requirePrinter`(v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.requirePrinter:()Lorg/joda/time/format/InternalPrinter;` @kind direct;
  #L3c47fe.  v0:= temp @kind object;
  #L3c4800.  if v4 == 0 then goto L3c4810;
  #L3c4804.  v1:= v2.`org.joda.time.format.DateTimeFormatter.iLocale` @type ^`java.util.Locale` @kind object;
  #L3c4808.  call `printTo`(v0, v3, v4, v1) @signature `Lorg/joda/time/format/InternalPrinter;.printTo:(Ljava/lang/Appendable;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V` @kind interface;
  #L3c480e.  return @kind void;
  #L3c4810.  v3:= new `java.lang.IllegalArgumentException`;
  #L3c4814.  v4:= "The partial must not be null" @kind object;
  #L3c4818.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c481e.  throw v3;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatter` v0 @kind this, `java.lang.StringBuffer` v1 @kind object, `long` v2 ) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/StringBuffer;J)V` @AccessFlag PUBLIC {
    temp;

  #L3c4830.  call `printTo`(v0, v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/Appendable;J)V` @kind virtual;
  #L3c4836.  return @kind void;
  catch `java.io.IOException` @[L3c4830..L3c4836] goto L3c4836;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatter` v0 @kind this, `java.lang.StringBuffer` v1 @kind object, `org.joda.time.ReadableInstant` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V` @AccessFlag PUBLIC {
    temp;

  #L3c4858.  call `printTo`(v0, v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/Appendable;Lorg/joda/time/ReadableInstant;)V` @kind virtual;
  #L3c485e.  return @kind void;
  catch `java.io.IOException` @[L3c4858..L3c485e] goto L3c485e;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatter` v0 @kind this, `java.lang.StringBuffer` v1 @kind object, `org.joda.time.ReadablePartial` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;)V` @AccessFlag PUBLIC {
    temp;

  #L3c4880.  call `printTo`(v0, v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/Appendable;Lorg/joda/time/ReadablePartial;)V` @kind virtual;
  #L3c4886.  return @kind void;
  catch `java.io.IOException` @[L3c4880..L3c4886] goto L3c4886;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatter` v0 @kind this, `java.lang.StringBuilder` v1 @kind object, `long` v2 ) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/StringBuilder;J)V` @AccessFlag PUBLIC {
    temp;

  #L3c48a8.  call `printTo`(v0, v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/Appendable;J)V` @kind virtual;
  #L3c48ae.  return @kind void;
  catch `java.io.IOException` @[L3c48a8..L3c48ae] goto L3c48ae;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatter` v0 @kind this, `java.lang.StringBuilder` v1 @kind object, `org.joda.time.ReadableInstant` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/StringBuilder;Lorg/joda/time/ReadableInstant;)V` @AccessFlag PUBLIC {
    temp;

  #L3c48d0.  call `printTo`(v0, v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/Appendable;Lorg/joda/time/ReadableInstant;)V` @kind virtual;
  #L3c48d6.  return @kind void;
  catch `java.io.IOException` @[L3c48d0..L3c48d6] goto L3c48d6;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatter` v0 @kind this, `java.lang.StringBuilder` v1 @kind object, `org.joda.time.ReadablePartial` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/StringBuilder;Lorg/joda/time/ReadablePartial;)V` @AccessFlag PUBLIC {
    temp;

  #L3c48f8.  call `printTo`(v0, v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.printTo:(Ljava/lang/Appendable;Lorg/joda/time/ReadablePartial;)V` @kind virtual;
  #L3c48fe.  return @kind void;
  catch `java.io.IOException` @[L3c48f8..L3c48fe] goto L3c48fe;
}
procedure `org.joda.time.format.DateTimeFormatter` `withChronology`(`org.joda.time.format.DateTimeFormatter` v10 @kind this, `org.joda.time.Chronology` v11 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.withChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3c4370.  v0:= v10.`org.joda.time.format.DateTimeFormatter.iChrono` @type ^`org.joda.time.Chronology` @kind object;
  #L3c4374.  if v0 != v11 then goto L3c437a;
  #L3c4378.  return v10 @kind object;
  #L3c437a.  v0:= new `org.joda.time.format.DateTimeFormatter`;
  #L3c437e.  v2:= v10.`org.joda.time.format.DateTimeFormatter.iPrinter` @type ^`org.joda.time.format.InternalPrinter` @kind object;
  #L3c4382.  v3:= v10.`org.joda.time.format.DateTimeFormatter.iParser` @type ^`org.joda.time.format.InternalParser` @kind object;
  #L3c4386.  v4:= v10.`org.joda.time.format.DateTimeFormatter.iLocale` @type ^`java.util.Locale` @kind object;
  #L3c438a.  v5:= v10.`org.joda.time.format.DateTimeFormatter.iOffsetParsed` @type ^`boolean` @kind boolean;
  #L3c438e.  v7:= v10.`org.joda.time.format.DateTimeFormatter.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3c4392.  v8:= v10.`org.joda.time.format.DateTimeFormatter.iPivotYear` @type ^`java.lang.Integer` @kind object;
  #L3c4396.  v9:= v10.`org.joda.time.format.DateTimeFormatter.iDefaultYear` @type ^`int`;
  #L3c439a.  v1:= v0 @kind object;
  #L3c439c.  v6:= v11 @kind object;
  #L3c439e.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lorg/joda/time/format/DateTimeFormatter;.<init>:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V` @kind direct;
  #L3c43a4.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `withDefaultYear`(`org.joda.time.format.DateTimeFormatter` v10 @kind this, `int` v11 ) @signature `Lorg/joda/time/format/DateTimeFormatter;.withDefaultYear:(I)Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3c43b8.  v9:= new `org.joda.time.format.DateTimeFormatter`;
  #L3c43bc.  v1:= v10.`org.joda.time.format.DateTimeFormatter.iPrinter` @type ^`org.joda.time.format.InternalPrinter` @kind object;
  #L3c43c0.  v2:= v10.`org.joda.time.format.DateTimeFormatter.iParser` @type ^`org.joda.time.format.InternalParser` @kind object;
  #L3c43c4.  v3:= v10.`org.joda.time.format.DateTimeFormatter.iLocale` @type ^`java.util.Locale` @kind object;
  #L3c43c8.  v4:= v10.`org.joda.time.format.DateTimeFormatter.iOffsetParsed` @type ^`boolean` @kind boolean;
  #L3c43cc.  v5:= v10.`org.joda.time.format.DateTimeFormatter.iChrono` @type ^`org.joda.time.Chronology` @kind object;
  #L3c43d0.  v6:= v10.`org.joda.time.format.DateTimeFormatter.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3c43d4.  v7:= v10.`org.joda.time.format.DateTimeFormatter.iPivotYear` @type ^`java.lang.Integer` @kind object;
  #L3c43d8.  v0:= v9 @kind object;
  #L3c43da.  v8:= v11;
  #L3c43dc.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/joda/time/format/DateTimeFormatter;.<init>:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V` @kind direct;
  #L3c43e2.  return v9 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `withLocale`(`org.joda.time.format.DateTimeFormatter` v10 @kind this, `java.util.Locale` v11 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.withLocale:(Ljava/util/Locale;)Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3c43f4.  call temp:= `getLocale`(v10) @signature `Lorg/joda/time/format/DateTimeFormatter;.getLocale:()Ljava/util/Locale;` @kind virtual;
  #L3c43fa.  v0:= temp @kind object;
  #L3c43fc.  if v11 == v0 then goto L3c4446;
  #L3c4400.  if v11 == 0 then goto L3c441a;
  #L3c4404.  call temp:= `getLocale`(v10) @signature `Lorg/joda/time/format/DateTimeFormatter;.getLocale:()Ljava/util/Locale;` @kind virtual;
  #L3c440a.  v0:= temp @kind object;
  #L3c440c.  call temp:= `equals`(v11, v0) @signature `Ljava/util/Locale;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c4412.  v0:= temp;
  #L3c4414.  if v0 == 0 then goto L3c441a;
  #L3c4418.  goto L3c4446;
  #L3c441a.  v0:= new `org.joda.time.format.DateTimeFormatter`;
  #L3c441e.  v2:= v10.`org.joda.time.format.DateTimeFormatter.iPrinter` @type ^`org.joda.time.format.InternalPrinter` @kind object;
  #L3c4422.  v3:= v10.`org.joda.time.format.DateTimeFormatter.iParser` @type ^`org.joda.time.format.InternalParser` @kind object;
  #L3c4426.  v5:= v10.`org.joda.time.format.DateTimeFormatter.iOffsetParsed` @type ^`boolean` @kind boolean;
  #L3c442a.  v6:= v10.`org.joda.time.format.DateTimeFormatter.iChrono` @type ^`org.joda.time.Chronology` @kind object;
  #L3c442e.  v7:= v10.`org.joda.time.format.DateTimeFormatter.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3c4432.  v8:= v10.`org.joda.time.format.DateTimeFormatter.iPivotYear` @type ^`java.lang.Integer` @kind object;
  #L3c4436.  v9:= v10.`org.joda.time.format.DateTimeFormatter.iDefaultYear` @type ^`int`;
  #L3c443a.  v1:= v0 @kind object;
  #L3c443c.  v4:= v11 @kind object;
  #L3c443e.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lorg/joda/time/format/DateTimeFormatter;.<init>:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V` @kind direct;
  #L3c4444.  return v0 @kind object;
  #L3c4446.  return v10 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `withOffsetParsed`(`org.joda.time.format.DateTimeFormatter` v11 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatter;.withOffsetParsed:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3c4458.  v0:= v11.`org.joda.time.format.DateTimeFormatter.iOffsetParsed` @type ^`boolean` @kind boolean;
  #L3c445c.  v1:= 1I;
  #L3c445e.  if v0 != v1 then goto L3c4464;
  #L3c4462.  return v11 @kind object;
  #L3c4464.  v0:= new `org.joda.time.format.DateTimeFormatter`;
  #L3c4468.  v3:= v11.`org.joda.time.format.DateTimeFormatter.iPrinter` @type ^`org.joda.time.format.InternalPrinter` @kind object;
  #L3c446c.  v4:= v11.`org.joda.time.format.DateTimeFormatter.iParser` @type ^`org.joda.time.format.InternalParser` @kind object;
  #L3c4470.  v5:= v11.`org.joda.time.format.DateTimeFormatter.iLocale` @type ^`java.util.Locale` @kind object;
  #L3c4474.  v6:= 1I;
  #L3c4476.  v7:= v11.`org.joda.time.format.DateTimeFormatter.iChrono` @type ^`org.joda.time.Chronology` @kind object;
  #L3c447a.  v8:= 0I;
  #L3c447c.  v9:= v11.`org.joda.time.format.DateTimeFormatter.iPivotYear` @type ^`java.lang.Integer` @kind object;
  #L3c4480.  v10:= v11.`org.joda.time.format.DateTimeFormatter.iDefaultYear` @type ^`int`;
  #L3c4484.  v2:= v0 @kind object;
  #L3c4486.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lorg/joda/time/format/DateTimeFormatter;.<init>:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V` @kind direct;
  #L3c448c.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `withPivotYear`(`org.joda.time.format.DateTimeFormatter` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/format/DateTimeFormatter;.withPivotYear:(I)Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC {
    temp;

  #L3c44a0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3c44a6.  v1:= temp @kind object;
  #L3c44a8.  call temp:= `withPivotYear`(v0, v1) @signature `Lorg/joda/time/format/DateTimeFormatter;.withPivotYear:(Ljava/lang/Integer;)Lorg/joda/time/format/DateTimeFormatter;` @kind virtual;
  #L3c44ae.  v1:= temp @kind object;
  #L3c44b0.  return v1 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `withPivotYear`(`org.joda.time.format.DateTimeFormatter` v10 @kind this, `java.lang.Integer` v11 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.withPivotYear:(Ljava/lang/Integer;)Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3c44c4.  v0:= v10.`org.joda.time.format.DateTimeFormatter.iPivotYear` @type ^`java.lang.Integer` @kind object;
  #L3c44c8.  if v0 == v11 then goto L3c450a;
  #L3c44cc.  if v0 == 0 then goto L3c44de;
  #L3c44d0.  call temp:= `equals`(v0, v11) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c44d6.  v0:= temp;
  #L3c44d8.  if v0 == 0 then goto L3c44de;
  #L3c44dc.  goto L3c450a;
  #L3c44de.  v0:= new `org.joda.time.format.DateTimeFormatter`;
  #L3c44e2.  v2:= v10.`org.joda.time.format.DateTimeFormatter.iPrinter` @type ^`org.joda.time.format.InternalPrinter` @kind object;
  #L3c44e6.  v3:= v10.`org.joda.time.format.DateTimeFormatter.iParser` @type ^`org.joda.time.format.InternalParser` @kind object;
  #L3c44ea.  v4:= v10.`org.joda.time.format.DateTimeFormatter.iLocale` @type ^`java.util.Locale` @kind object;
  #L3c44ee.  v5:= v10.`org.joda.time.format.DateTimeFormatter.iOffsetParsed` @type ^`boolean` @kind boolean;
  #L3c44f2.  v6:= v10.`org.joda.time.format.DateTimeFormatter.iChrono` @type ^`org.joda.time.Chronology` @kind object;
  #L3c44f6.  v7:= v10.`org.joda.time.format.DateTimeFormatter.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3c44fa.  v9:= v10.`org.joda.time.format.DateTimeFormatter.iDefaultYear` @type ^`int`;
  #L3c44fe.  v1:= v0 @kind object;
  #L3c4500.  v8:= v11 @kind object;
  #L3c4502.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lorg/joda/time/format/DateTimeFormatter;.<init>:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V` @kind direct;
  #L3c4508.  return v0 @kind object;
  #L3c450a.  return v10 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `withZone`(`org.joda.time.format.DateTimeFormatter` v10 @kind this, `org.joda.time.DateTimeZone` v11 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatter;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3c451c.  v0:= v10.`org.joda.time.format.DateTimeFormatter.iZone` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3c4520.  if v0 != v11 then goto L3c4526;
  #L3c4524.  return v10 @kind object;
  #L3c4526.  v0:= new `org.joda.time.format.DateTimeFormatter`;
  #L3c452a.  v2:= v10.`org.joda.time.format.DateTimeFormatter.iPrinter` @type ^`org.joda.time.format.InternalPrinter` @kind object;
  #L3c452e.  v3:= v10.`org.joda.time.format.DateTimeFormatter.iParser` @type ^`org.joda.time.format.InternalParser` @kind object;
  #L3c4532.  v4:= v10.`org.joda.time.format.DateTimeFormatter.iLocale` @type ^`java.util.Locale` @kind object;
  #L3c4536.  v5:= 0I;
  #L3c4538.  v6:= v10.`org.joda.time.format.DateTimeFormatter.iChrono` @type ^`org.joda.time.Chronology` @kind object;
  #L3c453c.  v8:= v10.`org.joda.time.format.DateTimeFormatter.iPivotYear` @type ^`java.lang.Integer` @kind object;
  #L3c4540.  v9:= v10.`org.joda.time.format.DateTimeFormatter.iDefaultYear` @type ^`int`;
  #L3c4544.  v1:= v0 @kind object;
  #L3c4546.  v7:= v11 @kind object;
  #L3c4548.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lorg/joda/time/format/DateTimeFormatter;.<init>:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V` @kind direct;
  #L3c454e.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `withZoneUTC`(`org.joda.time.format.DateTimeFormatter` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatter;.withZoneUTC:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c4560.  v0:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3c4564.  call temp:= `withZone`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatter;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/format/DateTimeFormatter;` @kind virtual;
  #L3c456a.  v0:= temp @kind object;
  #L3c456c.  return v0 @kind object;
}
