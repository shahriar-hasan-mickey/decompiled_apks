record `org.joda.time.format.DateTimeFormatterBuilder$Fraction` @kind class @AccessFlag  extends `org.joda.time.format.InternalPrinter` @kind interface, `org.joda.time.format.InternalParser` @kind interface {
  `org.joda.time.DateTimeFieldType` `org.joda.time.format.DateTimeFormatterBuilder$Fraction.iFieldType` @AccessFlag PRIVATE_FINAL;
  `int` `org.joda.time.format.DateTimeFormatterBuilder$Fraction.iMaxDigits` @AccessFlag PROTECTED;
  `int` `org.joda.time.format.DateTimeFormatterBuilder$Fraction.iMinDigits` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.joda.time.format.DateTimeFormatterBuilder$Fraction` v0 @kind this, `org.joda.time.DateTimeFieldType` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$Fraction;.<init>:(Lorg/joda/time/DateTimeFieldType;II)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3c174c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c1752.  v0.`org.joda.time.format.DateTimeFormatterBuilder$Fraction.iFieldType` @type ^`org.joda.time.DateTimeFieldType` := v1 @kind object;
  #L3c1756.  v1:= 18I;
  #L3c175a.  if v3 <= v1 then goto L3c1762;
  #L3c175e.  v3:= 18I;
  #L3c1762.  v0.`org.joda.time.format.DateTimeFormatterBuilder$Fraction.iMinDigits` @type ^`int` := v2;
  #L3c1766.  v0.`org.joda.time.format.DateTimeFormatterBuilder$Fraction.iMaxDigits` @type ^`int` := v3;
  #L3c176a.  return @kind void;
}
procedure `long`[] `getFractionData`(`org.joda.time.format.DateTimeFormatterBuilder$Fraction` v7 @kind this, `long` v8 , `org.joda.time.DateTimeField` v10 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$Fraction;.getFractionData:(JLorg/joda/time/DateTimeField;)[J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3c15f0.  call temp:= `getDurationField`(v10) @signature `Lorg/joda/time/DateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3c15f6.  v10:= temp @kind object;
  #L3c15f8.  call temp:= `getUnitMillis`(v10) @signature `Lorg/joda/time/DurationField;.getUnitMillis:()J` @kind virtual;
  #L3c15fe.  v0:= temp @kind wide;
  #L3c1600.  v10:= v7.`org.joda.time.format.DateTimeFormatterBuilder$Fraction.iMaxDigits` @type ^`int`;
  #L3c1604.  goto L3c16ec;
  #L3c160a.  v2:= 1L;
  #L3c160e.  goto L3c16ba;
  #L3c1610.  v2:= 1000000000000000000L;
  #L3c161a.  goto L3c16ba;
  #L3c161c.  v2:= 100000000000000000L;
  #L3c1626.  goto L3c16ba;
  #L3c1628.  v2:= 10000000000000000L;
  #L3c1632.  goto L3c16ba;
  #L3c1634.  v2:= 1000000000000000L;
  #L3c163e.  goto L3c16ba;
  #L3c1640.  v2:= 100000000000000L;
  #L3c164a.  goto L3c16ba;
  #L3c164c.  v2:= 10000000000000L;
  #L3c1656.  goto L3c16ba;
  #L3c1658.  v2:= 1000000000000L;
  #L3c1662.  goto L3c16ba;
  #L3c1664.  v2:= 100000000000L;
  #L3c166e.  goto L3c16ba;
  #L3c1670.  v2:= 10000000000L;
  #L3c167a.  goto L3c16ba;
  #L3c167c.  v2:= 1000000000L;
  #L3c1682.  goto L3c16ba;
  #L3c1684.  v2:= 100000000L;
  #L3c168a.  goto L3c16ba;
  #L3c168c.  v2:= 10000000L;
  #L3c1692.  goto L3c16ba;
  #L3c1694.  v2:= 1000000L;
  #L3c169a.  goto L3c16ba;
  #L3c169c.  v2:= 100000L;
  #L3c16a2.  goto L3c16ba;
  #L3c16a4.  v2:= 10000L;
  #L3c16a8.  goto L3c16ba;
  #L3c16aa.  v2:= 1000L;
  #L3c16ae.  goto L3c16ba;
  #L3c16b0.  v2:= 100L;
  #L3c16b4.  goto L3c16ba;
  #L3c16b6.  v2:= 10L;
  #L3c16ba.  v4:= v0 * v2 @kind long;
  #L3c16be.  v4:= v4 / v2 @kind long;
  #L3c16c0.  v6:= lcmp(v4, v0);
  #L3c16c4.  if v6 != 0 then goto L3c16e4;
  #L3c16c8.  v4:= 2I;
  #L3c16ca.  v4:= new `long`[v4];
  #L3c16ce.  v5:= 0I;
  #L3c16d0.  v8:= v8 * v2 @kind long;
  #L3c16d4.  v8:= v8 / v0 @kind long;
  #L3c16d6.  v4[v5]:= v8 @kind wide;
  #L3c16da.  v8:= 1I;
  #L3c16dc.  v9:= (`long`) v10 @kind i2l;
  #L3c16de.  v4[v8]:= v9 @kind wide;
  #L3c16e2.  return v4 @kind object;
  #L3c16e4.  v10:= v10 + -1;
  #L3c16e8.  goto L3c1604;
  #L3c16ea.  
  #L3c16ec.  switch v10
                  | 1 => goto L3c16b6
                  | 2 => goto L3c16b0
                  | 3 => goto L3c16aa
                  | 4 => goto L3c16a4
                  | 5 => goto L3c169c
                  | 6 => goto L3c1694
                  | 7 => goto L3c168c
                  | 8 => goto L3c1684
                  | 9 => goto L3c167c
                  | 10 => goto L3c1670
                  | 11 => goto L3c1664
                  | 12 => goto L3c1658
                  | 13 => goto L3c164c
                  | 14 => goto L3c1640
                  | 15 => goto L3c1634
                  | 16 => goto L3c1628
                  | 17 => goto L3c161c
                  | 18 => goto L3c1610
                  | else => goto L3c160a;
}
procedure `int` `estimateParsedLength`(`org.joda.time.format.DateTimeFormatterBuilder$Fraction` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$Fraction;.estimateParsedLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c14ec.  v0:= v1.`org.joda.time.format.DateTimeFormatterBuilder$Fraction.iMaxDigits` @type ^`int`;
  #L3c14f0.  return v0;
}
procedure `int` `estimatePrintedLength`(`org.joda.time.format.DateTimeFormatterBuilder$Fraction` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$Fraction;.estimatePrintedLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c1504.  v0:= v1.`org.joda.time.format.DateTimeFormatterBuilder$Fraction.iMaxDigits` @type ^`int`;
  #L3c1508.  return v0;
}
procedure `int` `parseInto`(`org.joda.time.format.DateTimeFormatterBuilder$Fraction` v11 @kind this, `org.joda.time.format.DateTimeParserBucket` v12 @kind object, `java.lang.CharSequence` v13 @kind object, `int` v14 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$Fraction;.parseInto:(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3c151c.  v0:= v11.`org.joda.time.format.DateTimeFormatterBuilder$Fraction.iFieldType` @type ^`org.joda.time.DateTimeFieldType` @kind object;
  #L3c1520.  call temp:= `getChronology`(v12) @signature `Lorg/joda/time/format/DateTimeParserBucket;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3c1526.  v1:= temp @kind object;
  #L3c1528.  call temp:= `getField`(v0, v1) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3c152e.  v0:= temp @kind object;
  #L3c1530.  v1:= v11.`org.joda.time.format.DateTimeFormatterBuilder$Fraction.iMaxDigits` @type ^`int`;
  #L3c1534.  call temp:= `length`(v13) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3c153a.  v2:= temp;
  #L3c153c.  v2:= v2 - v14 @kind int;
  #L3c153e.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3c1544.  v1:= temp;
  #L3c1546.  call temp:= `getDurationField`(v0) @signature `Lorg/joda/time/DateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3c154c.  v2:= temp @kind object;
  #L3c154e.  call temp:= `getUnitMillis`(v2) @signature `Lorg/joda/time/DurationField;.getUnitMillis:()J` @kind virtual;
  #L3c1554.  v2:= temp @kind wide;
  #L3c1556.  v4:= 10L;
  #L3c155a.  v2:= v2 * v4 @kind long;
  #L3c155e.  v6:= 0L;
  #L3c1562.  v8:= 0I;
  #L3c1564.  if v8 >= v1 then goto L3c159a;
  #L3c1568.  v9:= v14 + v8 @kind int;
  #L3c156c.  call temp:= `charAt`(v13, v9) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3c1572.  v9:= temp;
  #L3c1574.  v10:= 48I;
  #L3c1578.  if v9 < v10 then goto L3c159a;
  #L3c157c.  v10:= 57I;
  #L3c1580.  if v9 <= v10 then goto L3c1586;
  #L3c1584.  goto L3c159a;
  #L3c1586.  v8:= v8 + 1;
  #L3c158a.  v2:= v2 / v4 @kind long;
  #L3c158c.  v9:= v9 + -48;
  #L3c1590.  v9:= (`long`) v9 @kind i2l;
  #L3c1592.  v9:= v9 * v2 @kind long;
  #L3c1596.  v6:= v6 + v9 @kind long;
  #L3c1598.  goto L3c1564;
  #L3c159a.  v6:= v6 / v4 @kind long;
  #L3c159c.  if v8 != 0 then goto L3c15a4;
  #L3c15a0.  v12:= ~v14 @kind int;
  #L3c15a2.  return v12;
  #L3c15a4.  v1:= 2147483647L;
  #L3c15aa.  v13:= lcmp(v6, v1);
  #L3c15ae.  if v13 <= 0 then goto L3c15b6;
  #L3c15b2.  v12:= ~v14 @kind int;
  #L3c15b4.  return v12;
  #L3c15b6.  v13:= new `org.joda.time.field.PreciseDateTimeField`;
  #L3c15ba.  call temp:= `millisOfSecond`() @signature `Lorg/joda/time/DateTimeFieldType;.millisOfSecond:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c15c0.  v1:= temp @kind object;
  #L3c15c2.  v2:= `@@org.joda.time.field.MillisDurationField.INSTANCE` @type ^`org.joda.time.DurationField` @kind object;
  #L3c15c6.  call temp:= `getDurationField`(v0) @signature `Lorg/joda/time/DateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3c15cc.  v0:= temp @kind object;
  #L3c15ce.  call `<init>`(v13, v1, v2, v0) @signature `Lorg/joda/time/field/PreciseDateTimeField;.<init>:(Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/DurationField;Lorg/joda/time/DurationField;)V` @kind direct;
  #L3c15d4.  v0:= (`int`) v6 @kind l2i;
  #L3c15d6.  call `saveField`(v12, v13, v0) @signature `Lorg/joda/time/format/DateTimeParserBucket;.saveField:(Lorg/joda/time/DateTimeField;I)V` @kind virtual;
  #L3c15dc.  v14:= v14 + v8 @kind int;
  #L3c15de.  return v14;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatterBuilder$Fraction` v7 @kind this, `java.lang.Appendable` v8 @kind object, `long` v9 , `org.joda.time.Chronology` v11 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$Fraction;.printTo:(Ljava/lang/Appendable;JLorg/joda/time/Chronology;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3c177c.  v0:= v7.`org.joda.time.format.DateTimeFormatterBuilder$Fraction.iFieldType` @type ^`org.joda.time.DateTimeFieldType` @kind object;
  #L3c1780.  call temp:= `getField`(v0, v11) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3c1786.  v11:= temp @kind object;
  #L3c1788.  v0:= v7.`org.joda.time.format.DateTimeFormatterBuilder$Fraction.iMinDigits` @type ^`int`;
  #L3c178c.  call temp:= `remainder`(v11, v9) @signature `Lorg/joda/time/DateTimeField;.remainder:(J)J` @kind virtual;
  #L3c1792.  v9:= temp @kind wide;
  #L3c1794.  v1:= 0L;
  #L3c1798.  v3:= 48I;
  #L3c179c.  v4:= lcmp(v9, v1);
  #L3c17a0.  if v4 != 0 then goto L3c17b6;
  #L3c17a4.  v0:= v0 + -1;
  #L3c17a8.  if v0 < 0 then goto L3c17b4;
  #L3c17ac.  call temp:= `append`(v8, v3) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3c17b2.  goto L3c17a4;
  #L3c17b4.  return @kind void;
  #L3c17b6.  call temp:= `getFractionData`(v7, v9, v11) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$Fraction;.getFractionData:(JLorg/joda/time/DateTimeField;)[J` @kind direct;
  #L3c17bc.  v9:= temp @kind object;
  #L3c17be.  v10:= 0I;
  #L3c17c0.  v1:= v9[v10] @kind wide;
  #L3c17c4.  v11:= 1I;
  #L3c17c6.  v4:= v9[v11] @kind wide;
  #L3c17ca.  v9:= (`int`) v4 @kind l2i;
  #L3c17cc.  v4:= 2147483647L;
  #L3c17d2.  v4:= v4 ^& v1 @kind long;
  #L3c17d4.  v6:= lcmp(v4, v1);
  #L3c17d8.  if v6 != 0 then goto L3c17e8;
  #L3c17dc.  v2:= (`int`) v1 @kind l2i;
  #L3c17de.  call temp:= `toString`(v2) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L3c17e4.  v1:= temp @kind object;
  #L3c17e6.  goto L3c17f0;
  #L3c17e8.  call temp:= `toString`(v1) @signature `Ljava/lang/Long;.toString:(J)Ljava/lang/String;` @kind static;
  #L3c17ee.  v1:= temp @kind object;
  #L3c17f0.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c17f6.  v2:= temp;
  #L3c17f8.  if v2 >= v9 then goto L3c180c;
  #L3c17fc.  call temp:= `append`(v8, v3) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3c1802.  v0:= v0 + -1;
  #L3c1806.  v9:= v9 + -1;
  #L3c180a.  goto L3c17f8;
  #L3c180c.  if v0 >= v9 then goto L3c185a;
  #L3c1810.  if v0 >= v9 then goto L3c1834;
  #L3c1814.  if v2 <= v11 then goto L3c1834;
  #L3c1818.  v4:= v2 + -1;
  #L3c181c.  call temp:= `charAt`(v1, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3c1822.  v4:= temp;
  #L3c1824.  if v4 == v3 then goto L3c182a;
  #L3c1828.  goto L3c1834;
  #L3c182a.  v9:= v9 + -1;
  #L3c182e.  v2:= v2 + -1;
  #L3c1832.  goto L3c1810;
  #L3c1834.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c183a.  v9:= temp;
  #L3c183c.  if v2 >= v9 then goto L3c185a;
  #L3c1840.  if v10 >= v2 then goto L3c1858;
  #L3c1844.  call temp:= `charAt`(v1, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3c184a.  v9:= temp;
  #L3c184c.  call temp:= `append`(v8, v9) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3c1852.  v10:= v10 + 1;
  #L3c1856.  goto L3c1840;
  #L3c1858.  return @kind void;
  #L3c185a.  call temp:= `append`(v8, v1) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L3c1860.  return @kind void;
  #L3c1862.  call `appendUnknownString`(v8, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendUnknownString:(Ljava/lang/Appendable;I)V` @kind static;
  #L3c1868.  return @kind void;
  catch `java.lang.RuntimeException` @[L3c178c..L3c1794] goto L3c1862;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatterBuilder$Fraction` v0 @kind this, `java.lang.Appendable` v1 @kind object, `long` v2 , `org.joda.time.Chronology` v4 @kind object, `int` v5 , `org.joda.time.DateTimeZone` v6 @kind object, `java.util.Locale` v7 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$Fraction;.printTo:(Ljava/lang/Appendable;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;

  #L3c188c.  call `printTo`(v0, v1, v2, v4) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$Fraction;.printTo:(Ljava/lang/Appendable;JLorg/joda/time/Chronology;)V` @kind virtual;
  #L3c1892.  return @kind void;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatterBuilder$Fraction` v2 @kind this, `java.lang.Appendable` v3 @kind object, `org.joda.time.ReadablePartial` v4 @kind object, `java.util.Locale` v5 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$Fraction;.printTo:(Ljava/lang/Appendable;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c18a4.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/ReadablePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3c18aa.  v5:= temp @kind object;
  #L3c18ac.  v0:= 0L;
  #L3c18b0.  call temp:= `set`(v5, v4, v0) @signature `Lorg/joda/time/Chronology;.set:(Lorg/joda/time/ReadablePartial;J)J` @kind virtual;
  #L3c18b6.  v0:= temp @kind wide;
  #L3c18b8.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/ReadablePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3c18be.  v4:= temp @kind object;
  #L3c18c0.  call `printTo`(v2, v3, v0, v4) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$Fraction;.printTo:(Ljava/lang/Appendable;JLorg/joda/time/Chronology;)V` @kind virtual;
  #L3c18c6.  return @kind void;
}
