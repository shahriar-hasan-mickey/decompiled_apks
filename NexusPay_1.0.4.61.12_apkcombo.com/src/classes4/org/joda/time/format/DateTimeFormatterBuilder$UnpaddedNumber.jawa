record `org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber` @kind class @AccessFlag  extends `org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter` @kind class {
}
procedure `void` `<init>`(`org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber` v0 @kind this, `org.joda.time.DateTimeFieldType` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$UnpaddedNumber;.<init>:(Lorg/joda/time/DateTimeFieldType;IZ)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3c2cbc.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$NumberFormatter;.<init>:(Lorg/joda/time/DateTimeFieldType;IZ)V` @kind direct;
  #L3c2cc2.  return @kind void;
}
procedure `int` `estimatePrintedLength`(`org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$UnpaddedNumber;.estimatePrintedLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c2ca4.  v0:= v1.`org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.iMaxParsedDigits` @type ^`int`;
  #L3c2ca8.  return v0;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber` v0 @kind this, `java.lang.Appendable` v1 @kind object, `long` v2 , `org.joda.time.Chronology` v4 @kind object, `int` v5 , `org.joda.time.DateTimeZone` v6 @kind object, `java.util.Locale` v7 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$UnpaddedNumber;.printTo:(Ljava/lang/Appendable;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;

  #L3c2cd4.  v5:= v0.`org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.iFieldType` @type ^`org.joda.time.DateTimeFieldType` @kind object;
  #L3c2cd8.  call temp:= `getField`(v5, v4) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3c2cde.  v4:= temp @kind object;
  #L3c2ce0.  call temp:= `get`(v4, v2) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3c2ce6.  v2:= temp;
  #L3c2ce8.  call `appendUnpaddedInteger`(v1, v2) @signature `Lorg/joda/time/format/FormatUtils;.appendUnpaddedInteger:(Ljava/lang/Appendable;I)V` @kind static;
  #L3c2cee.  goto L3c2cfc;
  #L3c2cf0.  v2:= 65533I;
  #L3c2cf6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3c2cfc.  return @kind void;
  catch `java.lang.RuntimeException` @[L3c2cd4..L3c2cee] goto L3c2cf0;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber` v1 @kind this, `java.lang.Appendable` v2 @kind object, `org.joda.time.ReadablePartial` v3 @kind object, `java.util.Locale` v4 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$UnpaddedNumber;.printTo:(Ljava/lang/Appendable;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c2d20.  v4:= v1.`org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.iFieldType` @type ^`org.joda.time.DateTimeFieldType` @kind object;
  #L3c2d24.  call temp:= `isSupported`(v3, v4) @signature `Lorg/joda/time/ReadablePartial;.isSupported:(Lorg/joda/time/DateTimeFieldType;)Z` @kind interface;
  #L3c2d2a.  v4:= temp;
  #L3c2d2c.  v0:= 65533I;
  #L3c2d32.  if v4 == 0 then goto L3c2d52;
  #L3c2d36.  v4:= v1.`org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.iFieldType` @type ^`org.joda.time.DateTimeFieldType` @kind object;
  #L3c2d3a.  call temp:= `get`(v3, v4) @signature `Lorg/joda/time/ReadablePartial;.get:(Lorg/joda/time/DateTimeFieldType;)I` @kind interface;
  #L3c2d40.  v3:= temp;
  #L3c2d42.  call `appendUnpaddedInteger`(v2, v3) @signature `Lorg/joda/time/format/FormatUtils;.appendUnpaddedInteger:(Ljava/lang/Appendable;I)V` @kind static;
  #L3c2d48.  goto L3c2d58;
  #L3c2d4a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3c2d50.  goto L3c2d58;
  #L3c2d52.  call temp:= `append`(v2, v0) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3c2d58.  return @kind void;
  catch `java.lang.RuntimeException` @[L3c2d36..L3c2d48] goto L3c2d4a;
}
