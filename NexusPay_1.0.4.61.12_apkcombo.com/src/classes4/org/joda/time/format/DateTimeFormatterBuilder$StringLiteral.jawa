record `org.joda.time.format.DateTimeFormatterBuilder$StringLiteral` @kind class @AccessFlag  extends `org.joda.time.format.InternalPrinter` @kind interface, `org.joda.time.format.InternalParser` @kind interface {
  `java.lang.String` `org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.iValue` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.joda.time.format.DateTimeFormatterBuilder$StringLiteral` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$StringLiteral;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3c1d18.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c1d1e.  v0.`org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.iValue` @type ^`java.lang.String` := v1 @kind object;
  #L3c1d22.  return @kind void;
}
procedure `int` `estimateParsedLength`(`org.joda.time.format.DateTimeFormatterBuilder$StringLiteral` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$StringLiteral;.estimateParsedLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c1ca4.  v0:= v1.`org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.iValue` @type ^`java.lang.String` @kind object;
  #L3c1ca8.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c1cae.  v0:= temp;
  #L3c1cb0.  return v0;
}
procedure `int` `estimatePrintedLength`(`org.joda.time.format.DateTimeFormatterBuilder$StringLiteral` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$StringLiteral;.estimatePrintedLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c1cc4.  v0:= v1.`org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.iValue` @type ^`java.lang.String` @kind object;
  #L3c1cc8.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c1cce.  v0:= temp;
  #L3c1cd0.  return v0;
}
procedure `int` `parseInto`(`org.joda.time.format.DateTimeFormatterBuilder$StringLiteral` v0 @kind this, `org.joda.time.format.DateTimeParserBucket` v1 @kind object, `java.lang.CharSequence` v2 @kind object, `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$StringLiteral;.parseInto:(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;

  #L3c1ce4.  v1:= v0.`org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.iValue` @type ^`java.lang.String` @kind object;
  #L3c1ce8.  call temp:= `csStartsWithIgnoreCase`(v2, v3, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.csStartsWithIgnoreCase:(Ljava/lang/CharSequence;ILjava/lang/String;)Z` @kind static;
  #L3c1cee.  v1:= temp;
  #L3c1cf0.  if v1 == 0 then goto L3c1d04;
  #L3c1cf4.  v1:= v0.`org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.iValue` @type ^`java.lang.String` @kind object;
  #L3c1cf8.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c1cfe.  v1:= temp;
  #L3c1d00.  v3:= v3 + v1 @kind int;
  #L3c1d02.  return v3;
  #L3c1d04.  v1:= ~v3 @kind int;
  #L3c1d06.  return v1;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatterBuilder$StringLiteral` v0 @kind this, `java.lang.Appendable` v1 @kind object, `long` v2 , `org.joda.time.Chronology` v4 @kind object, `int` v5 , `org.joda.time.DateTimeZone` v6 @kind object, `java.util.Locale` v7 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$StringLiteral;.printTo:(Ljava/lang/Appendable;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;

  #L3c1d34.  v2:= v0.`org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.iValue` @type ^`java.lang.String` @kind object;
  #L3c1d38.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L3c1d3e.  return @kind void;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatterBuilder$StringLiteral` v0 @kind this, `java.lang.Appendable` v1 @kind object, `org.joda.time.ReadablePartial` v2 @kind object, `java.util.Locale` v3 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$StringLiteral;.printTo:(Ljava/lang/Appendable;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;

  #L3c1d50.  v2:= v0.`org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.iValue` @type ^`java.lang.String` @kind object;
  #L3c1d54.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L3c1d5a.  return @kind void;
}
