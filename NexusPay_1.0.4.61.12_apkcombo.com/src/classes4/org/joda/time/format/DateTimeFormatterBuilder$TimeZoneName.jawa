record `org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName` @kind class @AccessFlag  extends `org.joda.time.format.InternalPrinter` @kind interface, `org.joda.time.format.InternalParser` @kind interface {
  `java.util.Map` `org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.iParseLookup` @AccessFlag PRIVATE_FINAL;
  `int` `org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.iType` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.LONG_NAME` @AccessFlag STATIC_FINAL;
global `int` `@@org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.SHORT_NAME` @AccessFlag STATIC_FINAL;
procedure `void` `<init>`(`org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName` v0 @kind this, `int` v1 , `java.util.Map` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneName;.<init>:(ILjava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3c2494.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c249a.  v0.`org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.iType` @type ^`int` := v1;
  #L3c249e.  v0.`org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.iParseLookup` @type ^`java.util.Map` := v2 @kind object;
  #L3c24a2.  return @kind void;
}
procedure `java.lang.String` `print`(`org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName` v3 @kind this, `long` v4 , `org.joda.time.DateTimeZone` v6 @kind object, `java.util.Locale` v7 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneName;.print:(JLorg/joda/time/DateTimeZone;Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3c2454.  v0:= "" @kind object;
  #L3c2458.  if v6 != 0 then goto L3c245e;
  #L3c245c.  return v0 @kind object;
  #L3c245e.  v1:= v3.`org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.iType` @type ^`int`;
  #L3c2462.  if v1 == 0 then goto L3c2478;
  #L3c2466.  v2:= 1I;
  #L3c2468.  if v1 == v2 then goto L3c246e;
  #L3c246c.  return v0 @kind object;
  #L3c246e.  call temp:= `getShortName`(v6, v4, v7) @signature `Lorg/joda/time/DateTimeZone;.getShortName:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3c2474.  v4:= temp @kind object;
  #L3c2476.  return v4 @kind object;
  #L3c2478.  call temp:= `getName`(v6, v4, v7) @signature `Lorg/joda/time/DateTimeZone;.getName:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3c247e.  v4:= temp @kind object;
  #L3c2480.  return v4 @kind object;
}
procedure `int` `estimateParsedLength`(`org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName` v2 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneName;.estimateParsedLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c2370.  v0:= v2.`org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.iType` @type ^`int`;
  #L3c2374.  v1:= 1I;
  #L3c2376.  if v0 != v1 then goto L3c237e;
  #L3c237a.  v0:= 4I;
  #L3c237c.  goto L3c2382;
  #L3c237e.  v0:= 20I;
  #L3c2382.  return v0;
}
procedure `int` `estimatePrintedLength`(`org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName` v2 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneName;.estimatePrintedLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c2394.  v0:= v2.`org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.iType` @type ^`int`;
  #L3c2398.  v1:= 1I;
  #L3c239a.  if v0 != v1 then goto L3c23a2;
  #L3c239e.  v0:= 4I;
  #L3c23a0.  goto L3c23a6;
  #L3c23a2.  v0:= 20I;
  #L3c23a6.  return v0;
}
procedure `int` `parseInto`(`org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName` v6 @kind this, `org.joda.time.format.DateTimeParserBucket` v7 @kind object, `java.lang.CharSequence` v8 @kind object, `int` v9 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneName;.parseInto:(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3c23b8.  v0:= v6.`org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.iParseLookup` @type ^`java.util.Map` @kind object;
  #L3c23bc.  if v0 == 0 then goto L3c23c2;
  #L3c23c0.  goto L3c23ca;
  #L3c23c2.  call temp:= `getDefaultTimeZoneNames`() @signature `Lorg/joda/time/DateTimeUtils;.getDefaultTimeZoneNames:()Ljava/util/Map;` @kind static;
  #L3c23c8.  v0:= temp @kind object;
  #L3c23ca.  v1:= 0I;
  #L3c23cc.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3c23d2.  v2:= temp @kind object;
  #L3c23d4.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3c23da.  v2:= temp @kind object;
  #L3c23dc.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3c23e2.  v3:= temp;
  #L3c23e4.  if v3 == 0 then goto L3c241c;
  #L3c23e8.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3c23ee.  v3:= temp @kind object;
  #L3c23f0.  v3:= (`java.lang.String`) v3 @kind object;
  #L3c23f4.  call temp:= `csStartsWith`(v8, v9, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.csStartsWith:(Ljava/lang/CharSequence;ILjava/lang/String;)Z` @kind static;
  #L3c23fa.  v4:= temp;
  #L3c23fc.  if v4 == 0 then goto L3c23dc;
  #L3c2400.  if v1 == 0 then goto L3c2418;
  #L3c2404.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c240a.  v4:= temp;
  #L3c240c.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c2412.  v5:= temp;
  #L3c2414.  if v4 <= v5 then goto L3c23dc;
  #L3c2418.  v1:= v3 @kind object;
  #L3c241a.  goto L3c23dc;
  #L3c241c.  if v1 == 0 then goto L3c243e;
  #L3c2420.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3c2426.  v8:= temp @kind object;
  #L3c2428.  v8:= (`org.joda.time.DateTimeZone`) v8 @kind object;
  #L3c242c.  call `setZone`(v7, v8) @signature `Lorg/joda/time/format/DateTimeParserBucket;.setZone:(Lorg/joda/time/DateTimeZone;)V` @kind virtual;
  #L3c2432.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c2438.  v7:= temp;
  #L3c243a.  v9:= v9 + v7 @kind int;
  #L3c243c.  return v9;
  #L3c243e.  v7:= ~v9 @kind int;
  #L3c2440.  return v7;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName` v0 @kind this, `java.lang.Appendable` v1 @kind object, `long` v2 , `org.joda.time.Chronology` v4 @kind object, `int` v5 , `org.joda.time.DateTimeZone` v6 @kind object, `java.util.Locale` v7 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneName;.printTo:(Ljava/lang/Appendable;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;

  #L3c24b4.  v4:= (`long`) v5 @kind i2l;
  #L3c24b6.  v2:= v2 - v4 @kind long;
  #L3c24b8.  call temp:= `print`(v0, v2, v6, v7) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneName;.print:(JLorg/joda/time/DateTimeZone;Ljava/util/Locale;)Ljava/lang/String;` @kind direct;
  #L3c24be.  v2:= temp @kind object;
  #L3c24c0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L3c24c6.  return @kind void;
}
procedure `void` `printTo`(`org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName` v0 @kind this, `java.lang.Appendable` v1 @kind object, `org.joda.time.ReadablePartial` v2 @kind object, `java.util.Locale` v3 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneName;.printTo:(Ljava/lang/Appendable;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;

  #L3c24d8.  return @kind void;
}
