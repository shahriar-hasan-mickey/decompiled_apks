record `org.joda.time.format.PeriodFormatterBuilder$FieldFormatter` @kind class @AccessFlag  extends `org.joda.time.format.PeriodPrinter` @kind interface, `org.joda.time.format.PeriodParser` @kind interface {
  `org.joda.time.format.PeriodFormatterBuilder$FieldFormatter`[] `org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldFormatters` @AccessFlag PRIVATE_FINAL;
  `int` `org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @AccessFlag PRIVATE_FINAL;
  `int` `org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iMaxParsedDigits` @AccessFlag PRIVATE_FINAL;
  `int` `org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iMinPrintedDigits` @AccessFlag PRIVATE_FINAL;
  `org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` `org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iPrefix` @AccessFlag PRIVATE_FINAL;
  `int` `org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iPrintZeroSetting` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iRejectSignedValues` @AccessFlag PRIVATE_FINAL;
  `org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` `org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iSuffix` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `boolean` v4 , `int` v5 , `org.joda.time.format.PeriodFormatterBuilder$FieldFormatter`[] v6 @kind object, `org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` v7 @kind object, `org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` v8 @kind object) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.<init>:(IIIZI[Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;Lorg/joda/time/format/PeriodFormatterBuilder$PeriodFieldAffix;Lorg/joda/time/format/PeriodFormatterBuilder$PeriodFieldAffix;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ca4f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ca4fe.  v0.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iMinPrintedDigits` @type ^`int` := v1;
  #L3ca502.  v0.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iPrintZeroSetting` @type ^`int` := v2;
  #L3ca506.  v0.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iMaxParsedDigits` @type ^`int` := v3;
  #L3ca50a.  v0.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iRejectSignedValues` @type ^`boolean` := v4 @kind boolean;
  #L3ca50e.  v0.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int` := v5;
  #L3ca512.  v0.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldFormatters` @type ^`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter`[] := v6 @kind object;
  #L3ca516.  v0.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iPrefix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` := v7 @kind object;
  #L3ca51a.  v0.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iSuffix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` := v8 @kind object;
  #L3ca51e.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter` v1 @kind this, `org.joda.time.format.PeriodFormatterBuilder$FieldFormatter` v2 @kind object, `org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` v3 @kind object) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.<init>:(Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;Lorg/joda/time/format/PeriodFormatterBuilder$PeriodFieldAffix;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3ca530.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ca536.  v0:= v2.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iMinPrintedDigits` @type ^`int`;
  #L3ca53a.  v1.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iMinPrintedDigits` @type ^`int` := v0;
  #L3ca53e.  v0:= v2.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iPrintZeroSetting` @type ^`int`;
  #L3ca542.  v1.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iPrintZeroSetting` @type ^`int` := v0;
  #L3ca546.  v0:= v2.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iMaxParsedDigits` @type ^`int`;
  #L3ca54a.  v1.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iMaxParsedDigits` @type ^`int` := v0;
  #L3ca54e.  v0:= v2.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iRejectSignedValues` @type ^`boolean` @kind boolean;
  #L3ca552.  v1.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iRejectSignedValues` @type ^`boolean` := v0 @kind boolean;
  #L3ca556.  v0:= v2.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int`;
  #L3ca55a.  v1.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int` := v0;
  #L3ca55e.  v0:= v2.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldFormatters` @type ^`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter`[] @kind object;
  #L3ca562.  v1.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldFormatters` @type ^`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter`[] := v0 @kind object;
  #L3ca566.  v0:= v2.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iPrefix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` @kind object;
  #L3ca56a.  v1.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iPrefix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` := v0 @kind object;
  #L3ca56e.  v2:= v2.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iSuffix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` @kind object;
  #L3ca572.  if v2 == 0 then goto L3ca582;
  #L3ca576.  v0:= new `org.joda.time.format.PeriodFormatterBuilder$CompositeAffix`;
  #L3ca57a.  call `<init>`(v0, v2, v3) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$CompositeAffix;.<init>:(Lorg/joda/time/format/PeriodFormatterBuilder$PeriodFieldAffix;Lorg/joda/time/format/PeriodFormatterBuilder$PeriodFieldAffix;)V` @kind direct;
  #L3ca580.  v3:= v0 @kind object;
  #L3ca582.  v1.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iSuffix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` := v3 @kind object;
  #L3ca586.  return @kind void;
}
procedure `int` `parseInt`(`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter` v3 @kind this, `java.lang.String` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.parseInt:(Ljava/lang/String;II)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3c9fc4.  v0:= 10I;
  #L3c9fc8.  if v6 < v0 then goto L3c9fe0;
  #L3c9fcc.  v6:= v6 + v5 @kind int;
  #L3c9fce.  call temp:= `substring`(v4, v5, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3c9fd4.  v4:= temp @kind object;
  #L3c9fd6.  call temp:= `parseInt`(v4) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3c9fdc.  v4:= temp;
  #L3c9fde.  return v4;
  #L3c9fe0.  v0:= 0I;
  #L3c9fe2.  if v6 > 0 then goto L3c9fe8;
  #L3c9fe6.  return v0;
  #L3c9fe8.  v1:= v5 + 1;
  #L3c9fec.  call temp:= `charAt`(v4, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3c9ff2.  v5:= temp;
  #L3c9ff4.  v6:= v6 + -1;
  #L3c9ff8.  v2:= 45I;
  #L3c9ffc.  if v5 != v2 then goto L3ca01e;
  #L3ca000.  v6:= v6 + -1;
  #L3ca004.  if v6 >= 0 then goto L3ca00a;
  #L3ca008.  return v0;
  #L3ca00a.  v5:= v1 + 1;
  #L3ca00e.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3ca014.  v0:= temp;
  #L3ca016.  v1:= 1I;
  #L3ca018.  v1:= v5;
  #L3ca01a.  v5:= v0;
  #L3ca01c.  v0:= 1I;
  #L3ca01e.  v5:= v5 + -48;
  #L3ca022.  v2:= v6 + -1;
  #L3ca026.  if v6 <= 0 then goto L3ca04e;
  #L3ca02a.  v6:= v5 ^< 3;
  #L3ca02e.  v5:= v5 ^< 1;
  #L3ca032.  v6:= v6 + v5 @kind int;
  #L3ca034.  v5:= v1 + 1;
  #L3ca038.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3ca03e.  v1:= temp;
  #L3ca040.  v6:= v6 + v1 @kind int;
  #L3ca042.  v6:= v6 + -48;
  #L3ca046.  v1:= v5;
  #L3ca048.  v5:= v6;
  #L3ca04a.  v6:= v2;
  #L3ca04c.  goto L3ca022;
  #L3ca04e.  if v0 == 0 then goto L3ca054;
  #L3ca052.  v5:= -v5 @kind int;
  #L3ca054.  return v5;
}
procedure `int` `calculatePrintedLength`(`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter` v8 @kind this, `org.joda.time.ReadablePeriod` v9 @kind object, `java.util.Locale` v10 @kind object) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.calculatePrintedLength:(Lorg/joda/time/ReadablePeriod;Ljava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3c9eac.  call temp:= `getFieldValue`(v8, v9) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.getFieldValue:(Lorg/joda/time/ReadablePeriod;)J` @kind virtual;
  #L3c9eb2.  v9:= temp @kind wide;
  #L3c9eb4.  v0:= 9223372036854775807L;
  #L3c9ebe.  v2:= lcmp(v9, v0);
  #L3c9ec2.  if v2 != 0 then goto L3c9eca;
  #L3c9ec6.  v9:= 0I;
  #L3c9ec8.  return v9;
  #L3c9eca.  call temp:= `calculateDigitCount`(v9) @signature `Lorg/joda/time/format/FormatUtils;.calculateDigitCount:(J)I` @kind static;
  #L3c9ed0.  v0:= temp;
  #L3c9ed2.  v1:= v8.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iMinPrintedDigits` @type ^`int`;
  #L3c9ed6.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3c9edc.  v0:= temp;
  #L3c9ede.  v1:= v8.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int`;
  #L3c9ee2.  v2:= 8I;
  #L3c9ee6.  if v1 < v2 then goto L3c9f30;
  #L3c9eea.  v1:= 0L;
  #L3c9eee.  v3:= lcmp(v9, v1);
  #L3c9ef2.  if v3 >= 0 then goto L3c9efa;
  #L3c9ef6.  v3:= 5I;
  #L3c9ef8.  goto L3c9efc;
  #L3c9efa.  v3:= 4I;
  #L3c9efc.  call temp:= `max`(v0, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3c9f02.  v0:= temp;
  #L3c9f04.  v0:= v0 + 1;
  #L3c9f08.  v3:= v8.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int`;
  #L3c9f0c.  v4:= 9I;
  #L3c9f10.  v5:= 1000L;
  #L3c9f14.  if v3 != v4 then goto L3c9f2e;
  #L3c9f18.  call temp:= `abs`(v9) @signature `Ljava/lang/Math;.abs:(J)J` @kind static;
  #L3c9f1e.  v3:= temp @kind wide;
  #L3c9f20.  v3:= v3 %% v5 @kind long;
  #L3c9f22.  v7:= lcmp(v3, v1);
  #L3c9f26.  if v7 != 0 then goto L3c9f2e;
  #L3c9f2a.  v0:= v0 + -4;
  #L3c9f2e.  v9:= v9 / v5 @kind long;
  #L3c9f30.  v10:= (`int`) v9 @kind l2i;
  #L3c9f32.  v9:= v8.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iPrefix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` @kind object;
  #L3c9f36.  if v9 == 0 then goto L3c9f44;
  #L3c9f3a.  call temp:= `calculatePrintedLength`(v9, v10) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$PeriodFieldAffix;.calculatePrintedLength:(I)I` @kind interface;
  #L3c9f40.  v9:= temp;
  #L3c9f42.  v0:= v0 + v9 @kind int;
  #L3c9f44.  v9:= v8.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iSuffix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` @kind object;
  #L3c9f48.  if v9 == 0 then goto L3c9f56;
  #L3c9f4c.  call temp:= `calculatePrintedLength`(v9, v10) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$PeriodFieldAffix;.calculatePrintedLength:(I)I` @kind interface;
  #L3c9f52.  v9:= temp;
  #L3c9f54.  v0:= v0 + v9 @kind int;
  #L3c9f56.  return v0;
}
procedure `int` `countFieldsToPrint`(`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter` v3 @kind this, `org.joda.time.ReadablePeriod` v4 @kind object, `int` v5 , `java.util.Locale` v6 @kind object) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.countFieldsToPrint:(Lorg/joda/time/ReadablePeriod;ILjava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3c9f68.  v6:= 0I;
  #L3c9f6a.  if v5 > 0 then goto L3c9f70;
  #L3c9f6e.  return v6;
  #L3c9f70.  v5:= v3.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iPrintZeroSetting` @type ^`int`;
  #L3c9f74.  v0:= 4I;
  #L3c9f76.  if v5 == v0 then goto L3c9f98;
  #L3c9f7a.  call temp:= `getFieldValue`(v3, v4) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.getFieldValue:(Lorg/joda/time/ReadablePeriod;)J` @kind virtual;
  #L3c9f80.  v4:= temp @kind wide;
  #L3c9f82.  v0:= 9223372036854775807L;
  #L3c9f8c.  v2:= lcmp(v4, v0);
  #L3c9f90.  if v2 == 0 then goto L3c9f96;
  #L3c9f94.  goto L3c9f98;
  #L3c9f96.  return v6;
  #L3c9f98.  v4:= 1I;
  #L3c9f9a.  return v4;
}
procedure `void` `finish`(`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter` v6 @kind this, `org.joda.time.format.PeriodFormatterBuilder$FieldFormatter`[] v7 @kind object) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.finish:([Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ca598.  v0:= new `java.util.HashSet`;
  #L3ca59c.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L3ca5a2.  v1:= new `java.util.HashSet`;
  #L3ca5a6.  call `<init>`(v1) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L3ca5ac.  v2:= length @variable v7;
  #L3ca5ae.  v3:= 0I;
  #L3ca5b0.  if v3 >= v2 then goto L3ca5e2;
  #L3ca5b4.  v4:= v7[v3] @kind object;
  #L3ca5b8.  if v4 == 0 then goto L3ca5dc;
  #L3ca5bc.  call temp:= `equals`(v6, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ca5c2.  v5:= temp;
  #L3ca5c4.  if v5 != 0 then goto L3ca5dc;
  #L3ca5c8.  v5:= v4.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iPrefix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` @kind object;
  #L3ca5cc.  call temp:= `add`(v0, v5) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3ca5d2.  v4:= v4.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iSuffix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` @kind object;
  #L3ca5d6.  call temp:= `add`(v1, v4) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3ca5dc.  v3:= v3 + 1;
  #L3ca5e0.  goto L3ca5b0;
  #L3ca5e2.  v7:= v6.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iPrefix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` @kind object;
  #L3ca5e6.  if v7 == 0 then goto L3ca5f0;
  #L3ca5ea.  call `finish`(v7, v0) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$PeriodFieldAffix;.finish:(Ljava/util/Set;)V` @kind interface;
  #L3ca5f0.  v7:= v6.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iSuffix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` @kind object;
  #L3ca5f4.  if v7 == 0 then goto L3ca5fe;
  #L3ca5f8.  call `finish`(v7, v1) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$PeriodFieldAffix;.finish:(Ljava/util/Set;)V` @kind interface;
  #L3ca5fe.  return @kind void;
}
procedure `int` `getFieldType`(`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter` v1 @kind this) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.getFieldType:()I` @AccessFlag  {
    temp;
    v0;

  #L3c9fac.  v0:= v1.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int`;
  #L3c9fb0.  return v0;
}
procedure `long` `getFieldValue`(`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter` v9 @kind this, `org.joda.time.ReadablePeriod` v10 @kind object) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.getFieldValue:(Lorg/joda/time/ReadablePeriod;)J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3ca2f8.  v0:= v9.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iPrintZeroSetting` @type ^`int`;
  #L3ca2fc.  v1:= 4I;
  #L3ca2fe.  if v0 != v1 then goto L3ca306;
  #L3ca302.  v0:= 0I;
  #L3ca304.  goto L3ca30e;
  #L3ca306.  call temp:= `getPeriodType`(v10) @signature `Lorg/joda/time/ReadablePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind interface;
  #L3ca30c.  v0:= temp @kind object;
  #L3ca30e.  v1:= 9223372036854775807L;
  #L3ca318.  if v0 == 0 then goto L3ca32e;
  #L3ca31c.  v3:= v9.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int`;
  #L3ca320.  call temp:= `isSupported`(v9, v0, v3) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.isSupported:(Lorg/joda/time/PeriodType;I)Z` @kind virtual;
  #L3ca326.  v3:= temp;
  #L3ca328.  if v3 != 0 then goto L3ca32e;
  #L3ca32c.  return v1 @kind wide;
  #L3ca32e.  v3:= v9.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int`;
  #L3ca332.  goto L3ca4b8;
  #L3ca338.  return v1 @kind wide;
  #L3ca33a.  call temp:= `seconds`() @signature `Lorg/joda/time/DurationFieldType;.seconds:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3ca340.  v3:= temp @kind object;
  #L3ca342.  call temp:= `get`(v10, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3ca348.  v3:= temp;
  #L3ca34a.  call temp:= `millis`() @signature `Lorg/joda/time/DurationFieldType;.millis:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3ca350.  v4:= temp @kind object;
  #L3ca352.  call temp:= `get`(v10, v4) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3ca358.  v4:= temp;
  #L3ca35a.  v5:= (`long`) v3 @kind i2l;
  #L3ca35c.  v7:= 1000L;
  #L3ca360.  v5:= v5 * v7 @kind long;
  #L3ca364.  v3:= (`long`) v4 @kind i2l;
  #L3ca366.  v5:= v5 + v3 @kind long;
  #L3ca368.  goto L3ca3fa;
  #L3ca36a.  call temp:= `millis`() @signature `Lorg/joda/time/DurationFieldType;.millis:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3ca370.  v3:= temp @kind object;
  #L3ca372.  call temp:= `get`(v10, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3ca378.  v3:= temp;
  #L3ca37a.  goto L3ca3f8;
  #L3ca37c.  call temp:= `seconds`() @signature `Lorg/joda/time/DurationFieldType;.seconds:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3ca382.  v3:= temp @kind object;
  #L3ca384.  call temp:= `get`(v10, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3ca38a.  v3:= temp;
  #L3ca38c.  goto L3ca3f8;
  #L3ca38e.  call temp:= `minutes`() @signature `Lorg/joda/time/DurationFieldType;.minutes:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3ca394.  v3:= temp @kind object;
  #L3ca396.  call temp:= `get`(v10, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3ca39c.  v3:= temp;
  #L3ca39e.  goto L3ca3f8;
  #L3ca3a0.  call temp:= `hours`() @signature `Lorg/joda/time/DurationFieldType;.hours:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3ca3a6.  v3:= temp @kind object;
  #L3ca3a8.  call temp:= `get`(v10, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3ca3ae.  v3:= temp;
  #L3ca3b0.  goto L3ca3f8;
  #L3ca3b2.  call temp:= `days`() @signature `Lorg/joda/time/DurationFieldType;.days:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3ca3b8.  v3:= temp @kind object;
  #L3ca3ba.  call temp:= `get`(v10, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3ca3c0.  v3:= temp;
  #L3ca3c2.  goto L3ca3f8;
  #L3ca3c4.  call temp:= `weeks`() @signature `Lorg/joda/time/DurationFieldType;.weeks:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3ca3ca.  v3:= temp @kind object;
  #L3ca3cc.  call temp:= `get`(v10, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3ca3d2.  v3:= temp;
  #L3ca3d4.  goto L3ca3f8;
  #L3ca3d6.  call temp:= `months`() @signature `Lorg/joda/time/DurationFieldType;.months:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3ca3dc.  v3:= temp @kind object;
  #L3ca3de.  call temp:= `get`(v10, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3ca3e4.  v3:= temp;
  #L3ca3e6.  goto L3ca3f8;
  #L3ca3e8.  call temp:= `years`() @signature `Lorg/joda/time/DurationFieldType;.years:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3ca3ee.  v3:= temp @kind object;
  #L3ca3f0.  call temp:= `get`(v10, v3) @signature `Lorg/joda/time/ReadablePeriod;.get:(Lorg/joda/time/DurationFieldType;)I` @kind interface;
  #L3ca3f6.  v3:= temp;
  #L3ca3f8.  v5:= (`long`) v3 @kind i2l;
  #L3ca3fa.  v3:= 0L;
  #L3ca3fe.  v7:= lcmp(v5, v3);
  #L3ca402.  if v7 != 0 then goto L3ca4b6;
  #L3ca406.  v3:= v9.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iPrintZeroSetting` @type ^`int`;
  #L3ca40a.  v4:= 9I;
  #L3ca40e.  v7:= 1I;
  #L3ca410.  if v3 == v7 then goto L3ca468;
  #L3ca414.  v8:= 2I;
  #L3ca416.  if v3 == v8 then goto L3ca424;
  #L3ca41a.  v10:= 5I;
  #L3ca41c.  if v3 == v10 then goto L3ca422;
  #L3ca420.  goto L3ca4b6;
  #L3ca422.  return v1 @kind wide;
  #L3ca424.  call temp:= `isZero`(v9, v10) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.isZero:(Lorg/joda/time/ReadablePeriod;)Z` @kind virtual;
  #L3ca42a.  v10:= temp;
  #L3ca42c.  if v10 == 0 then goto L3ca466;
  #L3ca430.  v10:= v9.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldFormatters` @type ^`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter`[] @kind object;
  #L3ca434.  v3:= v9.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int`;
  #L3ca438.  v10:= v10[v3] @kind object;
  #L3ca43c.  if v10 != v9 then goto L3ca466;
  #L3ca440.  v3:= v3 + v7 @kind int;
  #L3ca442.  if v3 > v4 then goto L3ca4b6;
  #L3ca446.  call temp:= `isSupported`(v9, v0, v3) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.isSupported:(Lorg/joda/time/PeriodType;I)Z` @kind virtual;
  #L3ca44c.  v10:= temp;
  #L3ca44e.  if v10 == 0 then goto L3ca460;
  #L3ca452.  v10:= v9.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldFormatters` @type ^`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter`[] @kind object;
  #L3ca456.  v10:= v10[v3] @kind object;
  #L3ca45a.  if v10 == 0 then goto L3ca460;
  #L3ca45e.  return v1 @kind wide;
  #L3ca460.  v3:= v3 + 1;
  #L3ca464.  goto L3ca442;
  #L3ca466.  return v1 @kind wide;
  #L3ca468.  call temp:= `isZero`(v9, v10) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.isZero:(Lorg/joda/time/ReadablePeriod;)Z` @kind virtual;
  #L3ca46e.  v10:= temp;
  #L3ca470.  if v10 == 0 then goto L3ca4b4;
  #L3ca474.  v10:= v9.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldFormatters` @type ^`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter`[] @kind object;
  #L3ca478.  v3:= v9.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int`;
  #L3ca47c.  v10:= v10[v3] @kind object;
  #L3ca480.  if v10 != v9 then goto L3ca4b4;
  #L3ca484.  v10:= 8I;
  #L3ca488.  call temp:= `min`(v3, v10) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3ca48e.  v10:= temp;
  #L3ca490.  v10:= v10 + -1;
  #L3ca494.  if v10 < 0 then goto L3ca4b6;
  #L3ca498.  if v10 > v4 then goto L3ca4b6;
  #L3ca49c.  call temp:= `isSupported`(v9, v0, v10) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.isSupported:(Lorg/joda/time/PeriodType;I)Z` @kind virtual;
  #L3ca4a2.  v3:= temp;
  #L3ca4a4.  if v3 == 0 then goto L3ca490;
  #L3ca4a8.  v3:= v9.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldFormatters` @type ^`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter`[] @kind object;
  #L3ca4ac.  v3:= v3[v10] @kind object;
  #L3ca4b0.  if v3 == 0 then goto L3ca490;
  #L3ca4b4.  return v1 @kind wide;
  #L3ca4b6.  return v5 @kind wide;
  #L3ca4b8.  switch v3
                  | 0 => goto L3ca3e8
                  | 1 => goto L3ca3d6
                  | 2 => goto L3ca3c4
                  | 3 => goto L3ca3b2
                  | 4 => goto L3ca3a0
                  | 5 => goto L3ca38e
                  | 6 => goto L3ca37c
                  | 7 => goto L3ca36a
                  | 8 => goto L3ca33a
                  | 9 => goto L3ca33a
                  | else => goto L3ca338;
}
procedure `boolean` `isSupported`(`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter` v1 @kind this, `org.joda.time.PeriodType` v2 @kind object, `int` v3 ) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.isSupported:(Lorg/joda/time/PeriodType;I)Z` @AccessFlag  {
    temp;
    v0;

  #L3c9d6c.  v0:= 0I;
  #L3c9d6e.  goto L3c9e34;
  #L3c9d74.  return v0;
  #L3c9d76.  call temp:= `seconds`() @signature `Lorg/joda/time/DurationFieldType;.seconds:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3c9d7c.  v3:= temp @kind object;
  #L3c9d7e.  call temp:= `isSupported`(v2, v3) @signature `Lorg/joda/time/PeriodType;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @kind virtual;
  #L3c9d84.  v3:= temp;
  #L3c9d86.  if v3 != 0 then goto L3c9d9e;
  #L3c9d8a.  call temp:= `millis`() @signature `Lorg/joda/time/DurationFieldType;.millis:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3c9d90.  v3:= temp @kind object;
  #L3c9d92.  call temp:= `isSupported`(v2, v3) @signature `Lorg/joda/time/PeriodType;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @kind virtual;
  #L3c9d98.  v2:= temp;
  #L3c9d9a.  if v2 == 0 then goto L3c9da0;
  #L3c9d9e.  v0:= 1I;
  #L3c9da0.  return v0;
  #L3c9da2.  call temp:= `millis`() @signature `Lorg/joda/time/DurationFieldType;.millis:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3c9da8.  v3:= temp @kind object;
  #L3c9daa.  call temp:= `isSupported`(v2, v3) @signature `Lorg/joda/time/PeriodType;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @kind virtual;
  #L3c9db0.  v2:= temp;
  #L3c9db2.  return v2;
  #L3c9db4.  call temp:= `seconds`() @signature `Lorg/joda/time/DurationFieldType;.seconds:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3c9dba.  v3:= temp @kind object;
  #L3c9dbc.  call temp:= `isSupported`(v2, v3) @signature `Lorg/joda/time/PeriodType;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @kind virtual;
  #L3c9dc2.  v2:= temp;
  #L3c9dc4.  return v2;
  #L3c9dc6.  call temp:= `minutes`() @signature `Lorg/joda/time/DurationFieldType;.minutes:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3c9dcc.  v3:= temp @kind object;
  #L3c9dce.  call temp:= `isSupported`(v2, v3) @signature `Lorg/joda/time/PeriodType;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @kind virtual;
  #L3c9dd4.  v2:= temp;
  #L3c9dd6.  return v2;
  #L3c9dd8.  call temp:= `hours`() @signature `Lorg/joda/time/DurationFieldType;.hours:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3c9dde.  v3:= temp @kind object;
  #L3c9de0.  call temp:= `isSupported`(v2, v3) @signature `Lorg/joda/time/PeriodType;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @kind virtual;
  #L3c9de6.  v2:= temp;
  #L3c9de8.  return v2;
  #L3c9dea.  call temp:= `days`() @signature `Lorg/joda/time/DurationFieldType;.days:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3c9df0.  v3:= temp @kind object;
  #L3c9df2.  call temp:= `isSupported`(v2, v3) @signature `Lorg/joda/time/PeriodType;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @kind virtual;
  #L3c9df8.  v2:= temp;
  #L3c9dfa.  return v2;
  #L3c9dfc.  call temp:= `weeks`() @signature `Lorg/joda/time/DurationFieldType;.weeks:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3c9e02.  v3:= temp @kind object;
  #L3c9e04.  call temp:= `isSupported`(v2, v3) @signature `Lorg/joda/time/PeriodType;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @kind virtual;
  #L3c9e0a.  v2:= temp;
  #L3c9e0c.  return v2;
  #L3c9e0e.  call temp:= `months`() @signature `Lorg/joda/time/DurationFieldType;.months:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3c9e14.  v3:= temp @kind object;
  #L3c9e16.  call temp:= `isSupported`(v2, v3) @signature `Lorg/joda/time/PeriodType;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @kind virtual;
  #L3c9e1c.  v2:= temp;
  #L3c9e1e.  return v2;
  #L3c9e20.  call temp:= `years`() @signature `Lorg/joda/time/DurationFieldType;.years:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3c9e26.  v3:= temp @kind object;
  #L3c9e28.  call temp:= `isSupported`(v2, v3) @signature `Lorg/joda/time/PeriodType;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @kind virtual;
  #L3c9e2e.  v2:= temp;
  #L3c9e30.  return v2;
  #L3c9e32.  
  #L3c9e34.  switch v3
                  | 0 => goto L3c9e20
                  | 1 => goto L3c9e0e
                  | 2 => goto L3c9dfc
                  | 3 => goto L3c9dea
                  | 4 => goto L3c9dd8
                  | 5 => goto L3c9dc6
                  | 6 => goto L3c9db4
                  | 7 => goto L3c9da2
                  | 8 => goto L3c9d76
                  | 9 => goto L3c9d76
                  | else => goto L3c9d74;
}
procedure `boolean` `isZero`(`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter` v4 @kind this, `org.joda.time.ReadablePeriod` v5 @kind object) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.isZero:(Lorg/joda/time/ReadablePeriod;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c9e74.  call temp:= `size`(v5) @signature `Lorg/joda/time/ReadablePeriod;.size:()I` @kind interface;
  #L3c9e7a.  v0:= temp;
  #L3c9e7c.  v1:= 0I;
  #L3c9e7e.  v2:= 0I;
  #L3c9e80.  if v2 >= v0 then goto L3c9e98;
  #L3c9e84.  call temp:= `getValue`(v5, v2) @signature `Lorg/joda/time/ReadablePeriod;.getValue:(I)I` @kind interface;
  #L3c9e8a.  v3:= temp;
  #L3c9e8c.  if v3 == 0 then goto L3c9e92;
  #L3c9e90.  return v1;
  #L3c9e92.  v2:= v2 + 1;
  #L3c9e96.  goto L3c9e80;
  #L3c9e98.  v5:= 1I;
  #L3c9e9a.  return v5;
}
procedure `int` `parseInto`(`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter` v16 @kind this, `org.joda.time.ReadWritablePeriod` v17 @kind object, `java.lang.String` v18 @kind object, `int` v19 , `java.util.Locale` v20 @kind object) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.parseInto:(Lorg/joda/time/ReadWritablePeriod;Ljava/lang/String;ILjava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3ca068.  v0:= v16 @kind object;
  #L3ca06c.  v1:= v17 @kind object;
  #L3ca070.  v2:= v18 @kind object;
  #L3ca074.  v3:= v19;
  #L3ca078.  v4:= v0.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iPrintZeroSetting` @type ^`int`;
  #L3ca07c.  v7:= 4I;
  #L3ca07e.  if v4 != v7 then goto L3ca086;
  #L3ca082.  v4:= 1I;
  #L3ca084.  goto L3ca088;
  #L3ca086.  v4:= 0I;
  #L3ca088.  call temp:= `length`(v18) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3ca08e.  v7:= temp;
  #L3ca090.  if v3 < v7 then goto L3ca0a0;
  #L3ca094.  if v4 == 0 then goto L3ca09c;
  #L3ca098.  v1:= ~v3 @kind int;
  #L3ca09a.  goto L3ca09e;
  #L3ca09c.  v1:= v3;
  #L3ca09e.  return v1;
  #L3ca0a0.  v7:= v0.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iPrefix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` @kind object;
  #L3ca0a4.  if v7 == 0 then goto L3ca0c2;
  #L3ca0a8.  call temp:= `parse`(v7, v2, v3) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$PeriodFieldAffix;.parse:(Ljava/lang/String;I)I` @kind interface;
  #L3ca0ae.  v3:= temp;
  #L3ca0b0.  if v3 < 0 then goto L3ca0b8;
  #L3ca0b4.  v4:= 1I;
  #L3ca0b6.  goto L3ca0c2;
  #L3ca0b8.  if v4 != 0 then goto L3ca0c0;
  #L3ca0bc.  v1:= ~v3 @kind int;
  #L3ca0be.  return v1;
  #L3ca0c0.  return v3;
  #L3ca0c2.  v7:= v0.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iSuffix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` @kind object;
  #L3ca0c6.  v8:= -1I;
  #L3ca0c8.  if v7 == 0 then goto L3ca0ea;
  #L3ca0cc.  if v4 != 0 then goto L3ca0ea;
  #L3ca0d0.  call temp:= `scan`(v7, v2, v3) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$PeriodFieldAffix;.scan:(Ljava/lang/String;I)I` @kind interface;
  #L3ca0d6.  v7:= temp;
  #L3ca0d8.  if v7 < 0 then goto L3ca0e0;
  #L3ca0dc.  v4:= 1I;
  #L3ca0de.  goto L3ca0ec;
  #L3ca0e0.  if v4 != 0 then goto L3ca0e8;
  #L3ca0e4.  v1:= ~v7 @kind int;
  #L3ca0e6.  return v1;
  #L3ca0e8.  return v7;
  #L3ca0ea.  v7:= -1I;
  #L3ca0ec.  if v4 != 0 then goto L3ca10a;
  #L3ca0f0.  call temp:= `getPeriodType`(v17) @signature `Lorg/joda/time/ReadablePeriod;.getPeriodType:()Lorg/joda/time/PeriodType;` @kind interface;
  #L3ca0f6.  v4:= temp @kind object;
  #L3ca0f8.  v9:= v0.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int`;
  #L3ca0fc.  call temp:= `isSupported`(v0, v4, v9) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.isSupported:(Lorg/joda/time/PeriodType;I)Z` @kind virtual;
  #L3ca102.  v4:= temp;
  #L3ca104.  if v4 != 0 then goto L3ca10a;
  #L3ca108.  return v3;
  #L3ca10a.  if v7 <= 0 then goto L3ca120;
  #L3ca10e.  v4:= v0.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iMaxParsedDigits` @type ^`int`;
  #L3ca112.  v9:= v7 - v3 @kind int;
  #L3ca116.  call temp:= `min`(v4, v9) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3ca11c.  v4:= temp;
  #L3ca11e.  goto L3ca136;
  #L3ca120.  v4:= v0.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iMaxParsedDigits` @type ^`int`;
  #L3ca124.  call temp:= `length`(v18) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3ca12a.  v9:= temp;
  #L3ca12c.  v9:= v9 - v3 @kind int;
  #L3ca12e.  call temp:= `min`(v4, v9) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3ca134.  v4:= temp;
  #L3ca136.  v9:= 0I;
  #L3ca138.  v10:= 0I;
  #L3ca13a.  v11:= 0I;
  #L3ca13c.  if v9 >= v4 then goto L3ca214;
  #L3ca140.  v14:= v3 + v9 @kind int;
  #L3ca144.  call temp:= `charAt`(v2, v14) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3ca14a.  v15:= temp;
  #L3ca14c.  v6:= 57I;
  #L3ca150.  v5:= 48I;
  #L3ca154.  if v9 != 0 then goto L3ca1bc;
  #L3ca158.  v12:= 45I;
  #L3ca15c.  if v15 == v12 then goto L3ca168;
  #L3ca160.  v13:= 43I;
  #L3ca164.  if v15 != v13 then goto L3ca1bc;
  #L3ca168.  v13:= v0.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iRejectSignedValues` @type ^`boolean` @kind boolean;
  #L3ca16c.  if v13 != 0 then goto L3ca1bc;
  #L3ca170.  if v15 != v12 then goto L3ca178;
  #L3ca174.  v11:= 1I;
  #L3ca176.  goto L3ca17a;
  #L3ca178.  v11:= 0I;
  #L3ca17a.  v12:= v9 + 1;
  #L3ca17e.  if v12 >= v4 then goto L3ca214;
  #L3ca182.  v14:= v14 + 1;
  #L3ca186.  call temp:= `charAt`(v2, v14) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3ca18c.  v13:= temp;
  #L3ca18e.  if v13 < v5 then goto L3ca214;
  #L3ca192.  if v13 <= v6 then goto L3ca198;
  #L3ca196.  goto L3ca214;
  #L3ca198.  if v11 == 0 then goto L3ca1a0;
  #L3ca19c.  v9:= v12;
  #L3ca19e.  goto L3ca1a4;
  #L3ca1a0.  v3:= v3 + 1;
  #L3ca1a4.  v4:= v4 + 1;
  #L3ca1a8.  call temp:= `length`(v18) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3ca1ae.  v5:= temp;
  #L3ca1b0.  v5:= v5 - v3 @kind int;
  #L3ca1b2.  call temp:= `min`(v4, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3ca1b8.  v4:= temp;
  #L3ca1ba.  goto L3ca13c;
  #L3ca1bc.  if v15 < v5 then goto L3ca1c8;
  #L3ca1c0.  if v15 > v6 then goto L3ca1c8;
  #L3ca1c4.  v10:= 1I;
  #L3ca1c6.  goto L3ca20e;
  #L3ca1c8.  v5:= 46I;
  #L3ca1cc.  if v15 == v5 then goto L3ca1d8;
  #L3ca1d0.  v5:= 44I;
  #L3ca1d4.  if v15 != v5 then goto L3ca214;
  #L3ca1d8.  v5:= v0.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int`;
  #L3ca1dc.  v6:= 8I;
  #L3ca1e0.  if v5 == v6 then goto L3ca1ec;
  #L3ca1e4.  v6:= 9I;
  #L3ca1e8.  if v5 != v6 then goto L3ca214;
  #L3ca1ec.  if v8 < 0 then goto L3ca1f2;
  #L3ca1f0.  goto L3ca214;
  #L3ca1f2.  v14:= v14 + 1;
  #L3ca1f6.  v4:= v4 + 1;
  #L3ca1fa.  call temp:= `length`(v18) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3ca200.  v5:= temp;
  #L3ca202.  v5:= v5 - v3 @kind int;
  #L3ca204.  call temp:= `min`(v4, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3ca20a.  v4:= temp;
  #L3ca20c.  v8:= v14;
  #L3ca20e.  v9:= v9 + 1;
  #L3ca212.  goto L3ca13c;
  #L3ca214.  if v10 != 0 then goto L3ca21c;
  #L3ca218.  v1:= ~v3 @kind int;
  #L3ca21a.  return v1;
  #L3ca21c.  if v7 < 0 then goto L3ca22a;
  #L3ca220.  v4:= v3 + v9 @kind int;
  #L3ca224.  if v4 == v7 then goto L3ca22a;
  #L3ca228.  return v3;
  #L3ca22a.  v4:= v0.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int`;
  #L3ca22e.  v5:= 8I;
  #L3ca232.  if v4 == v5 then goto L3ca24e;
  #L3ca236.  v5:= 9I;
  #L3ca23a.  if v4 == v5 then goto L3ca24e;
  #L3ca23e.  call temp:= `parseInt`(v0, v2, v3, v9) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.parseInt:(Ljava/lang/String;II)I` @kind direct;
  #L3ca244.  v5:= temp;
  #L3ca246.  call `setFieldValue`(v0, v1, v4, v5) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.setFieldValue:(Lorg/joda/time/ReadWritablePeriod;II)V` @kind virtual;
  #L3ca24c.  goto L3ca2ce;
  #L3ca24e.  v4:= 7I;
  #L3ca250.  v5:= 6I;
  #L3ca252.  if v8 >= 0 then goto L3ca26e;
  #L3ca256.  call temp:= `parseInt`(v0, v2, v3, v9) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.parseInt:(Ljava/lang/String;II)I` @kind direct;
  #L3ca25c.  v6:= temp;
  #L3ca25e.  call `setFieldValue`(v0, v1, v5, v6) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.setFieldValue:(Lorg/joda/time/ReadWritablePeriod;II)V` @kind virtual;
  #L3ca264.  v6:= 0I;
  #L3ca266.  call `setFieldValue`(v0, v1, v4, v6) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.setFieldValue:(Lorg/joda/time/ReadWritablePeriod;II)V` @kind virtual;
  #L3ca26c.  goto L3ca2ce;
  #L3ca26e.  v6:= 0I;
  #L3ca270.  v7:= v8 - v3 @kind int;
  #L3ca274.  v10:= 1I;
  #L3ca276.  v7:= v7 - v10 @kind int;
  #L3ca278.  call temp:= `parseInt`(v0, v2, v3, v7) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.parseInt:(Ljava/lang/String;II)I` @kind direct;
  #L3ca27e.  v7:= temp;
  #L3ca280.  call `setFieldValue`(v0, v1, v5, v7) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.setFieldValue:(Lorg/joda/time/ReadWritablePeriod;II)V` @kind virtual;
  #L3ca286.  v5:= v3 + v9 @kind int;
  #L3ca28a.  v5:= v5 - v8 @kind int;
  #L3ca28c.  if v5 > 0 then goto L3ca294;
  #L3ca290.  v5:= 0I;
  #L3ca292.  goto L3ca2c8;
  #L3ca294.  v6:= 3I;
  #L3ca296.  if v5 < v6 then goto L3ca2a4;
  #L3ca29a.  call temp:= `parseInt`(v0, v2, v8, v6) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.parseInt:(Ljava/lang/String;II)I` @kind direct;
  #L3ca2a0.  v5:= temp;
  #L3ca2a2.  goto L3ca2be;
  #L3ca2a4.  call temp:= `parseInt`(v0, v2, v8, v5) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.parseInt:(Ljava/lang/String;II)I` @kind direct;
  #L3ca2aa.  v6:= temp;
  #L3ca2ac.  v8:= 1I;
  #L3ca2ae.  if v5 != v8 then goto L3ca2b8;
  #L3ca2b2.  v6:= v6 * 100;
  #L3ca2b6.  goto L3ca2bc;
  #L3ca2b8.  v6:= v6 * 10;
  #L3ca2bc.  v5:= v6;
  #L3ca2be.  if v11 != 0 then goto L3ca2c6;
  #L3ca2c2.  if v7 >= 0 then goto L3ca2c8;
  #L3ca2c6.  v5:= -v5 @kind int;
  #L3ca2c8.  call `setFieldValue`(v0, v1, v4, v5) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.setFieldValue:(Lorg/joda/time/ReadWritablePeriod;II)V` @kind virtual;
  #L3ca2ce.  v3:= v3 + v9 @kind int;
  #L3ca2d0.  if v3 < 0 then goto L3ca2e4;
  #L3ca2d4.  v1:= v0.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iSuffix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` @kind object;
  #L3ca2d8.  if v1 == 0 then goto L3ca2e4;
  #L3ca2dc.  call temp:= `parse`(v1, v2, v3) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$PeriodFieldAffix;.parse:(Ljava/lang/String;I)I` @kind interface;
  #L3ca2e2.  v3:= temp;
  #L3ca2e4.  return v3;
}
procedure `void` `printTo`(`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter` v6 @kind this, `java.io.Writer` v7 @kind object, `org.joda.time.ReadablePeriod` v8 @kind object, `java.util.Locale` v9 @kind object) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.printTo:(Ljava/io/Writer;Lorg/joda/time/ReadablePeriod;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ca610.  call temp:= `getFieldValue`(v6, v8) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.getFieldValue:(Lorg/joda/time/ReadablePeriod;)J` @kind virtual;
  #L3ca616.  v8:= temp @kind wide;
  #L3ca618.  v0:= 9223372036854775807L;
  #L3ca622.  v2:= lcmp(v8, v0);
  #L3ca626.  if v2 != 0 then goto L3ca62c;
  #L3ca62a.  return @kind void;
  #L3ca62c.  v0:= (`int`) v8 @kind l2i;
  #L3ca62e.  v1:= v6.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int`;
  #L3ca632.  v2:= 1000L;
  #L3ca636.  v4:= 8I;
  #L3ca63a.  if v1 < v4 then goto L3ca644;
  #L3ca63e.  v0:= v8 / v2 @kind long;
  #L3ca642.  v0:= (`int`) v0 @kind l2i;
  #L3ca644.  v1:= v6.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iPrefix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` @kind object;
  #L3ca648.  if v1 == 0 then goto L3ca652;
  #L3ca64c.  call `printTo`(v1, v7, v0) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$PeriodFieldAffix;.printTo:(Ljava/io/Writer;I)V` @kind interface;
  #L3ca652.  v1:= v6.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iMinPrintedDigits` @type ^`int`;
  #L3ca656.  v5:= 1I;
  #L3ca658.  if v1 > v5 then goto L3ca664;
  #L3ca65c.  call `writeUnpaddedInteger`(v7, v0) @signature `Lorg/joda/time/format/FormatUtils;.writeUnpaddedInteger:(Ljava/io/Writer;I)V` @kind static;
  #L3ca662.  goto L3ca66a;
  #L3ca664.  call `writePaddedInteger`(v7, v0, v1) @signature `Lorg/joda/time/format/FormatUtils;.writePaddedInteger:(Ljava/io/Writer;II)V` @kind static;
  #L3ca66a.  v1:= v6.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int`;
  #L3ca66e.  if v1 < v4 then goto L3ca69c;
  #L3ca672.  call temp:= `abs`(v8) @signature `Ljava/lang/Math;.abs:(J)J` @kind static;
  #L3ca678.  v8:= temp @kind wide;
  #L3ca67a.  v8:= v8 %% v2 @kind long;
  #L3ca67c.  v9:= (`int`) v8 @kind l2i;
  #L3ca67e.  v8:= v6.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int`;
  #L3ca682.  if v8 == v4 then goto L3ca68a;
  #L3ca686.  if v9 <= 0 then goto L3ca69c;
  #L3ca68a.  v8:= 46I;
  #L3ca68e.  call `write`(v7, v8) @signature `Ljava/io/Writer;.write:(I)V` @kind virtual;
  #L3ca694.  v8:= 3I;
  #L3ca696.  call `writePaddedInteger`(v7, v9, v8) @signature `Lorg/joda/time/format/FormatUtils;.writePaddedInteger:(Ljava/io/Writer;II)V` @kind static;
  #L3ca69c.  v8:= v6.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iSuffix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` @kind object;
  #L3ca6a0.  if v8 == 0 then goto L3ca6aa;
  #L3ca6a4.  call `printTo`(v8, v7, v0) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$PeriodFieldAffix;.printTo:(Ljava/io/Writer;I)V` @kind interface;
  #L3ca6aa.  return @kind void;
}
procedure `void` `printTo`(`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter` v7 @kind this, `java.lang.StringBuffer` v8 @kind object, `org.joda.time.ReadablePeriod` v9 @kind object, `java.util.Locale` v10 @kind object) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.printTo:(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePeriod;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ca6bc.  call temp:= `getFieldValue`(v7, v9) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.getFieldValue:(Lorg/joda/time/ReadablePeriod;)J` @kind virtual;
  #L3ca6c2.  v9:= temp @kind wide;
  #L3ca6c4.  v0:= 9223372036854775807L;
  #L3ca6ce.  v2:= lcmp(v9, v0);
  #L3ca6d2.  if v2 != 0 then goto L3ca6d8;
  #L3ca6d6.  return @kind void;
  #L3ca6d8.  v0:= (`int`) v9 @kind l2i;
  #L3ca6da.  v1:= v7.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int`;
  #L3ca6de.  v2:= 1000L;
  #L3ca6e2.  v4:= 8I;
  #L3ca6e6.  if v1 < v4 then goto L3ca6f0;
  #L3ca6ea.  v0:= v9 / v2 @kind long;
  #L3ca6ee.  v0:= (`int`) v0 @kind l2i;
  #L3ca6f0.  v1:= v7.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iPrefix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` @kind object;
  #L3ca6f4.  if v1 == 0 then goto L3ca6fe;
  #L3ca6f8.  call `printTo`(v1, v8, v0) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$PeriodFieldAffix;.printTo:(Ljava/lang/StringBuffer;I)V` @kind interface;
  #L3ca6fe.  call temp:= `length`(v8) @signature `Ljava/lang/StringBuffer;.length:()I` @kind virtual;
  #L3ca704.  v1:= temp;
  #L3ca706.  v5:= v7.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iMinPrintedDigits` @type ^`int`;
  #L3ca70a.  v6:= 1I;
  #L3ca70c.  if v5 > v6 then goto L3ca718;
  #L3ca710.  call `appendUnpaddedInteger`(v8, v0) @signature `Lorg/joda/time/format/FormatUtils;.appendUnpaddedInteger:(Ljava/lang/StringBuffer;I)V` @kind static;
  #L3ca716.  goto L3ca71e;
  #L3ca718.  call `appendPaddedInteger`(v8, v0, v5) @signature `Lorg/joda/time/format/FormatUtils;.appendPaddedInteger:(Ljava/lang/StringBuffer;II)V` @kind static;
  #L3ca71e.  v5:= v7.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int`;
  #L3ca722.  if v5 < v4 then goto L3ca772;
  #L3ca726.  call temp:= `abs`(v9) @signature `Ljava/lang/Math;.abs:(J)J` @kind static;
  #L3ca72c.  v5:= temp @kind wide;
  #L3ca72e.  v5:= v5 %% v2 @kind long;
  #L3ca730.  v2:= (`int`) v5 @kind l2i;
  #L3ca732.  v3:= v7.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iFieldType` @type ^`int`;
  #L3ca736.  if v3 == v4 then goto L3ca73e;
  #L3ca73a.  if v2 <= 0 then goto L3ca772;
  #L3ca73e.  v3:= 0L;
  #L3ca742.  v5:= lcmp(v9, v3);
  #L3ca746.  if v5 >= 0 then goto L3ca760;
  #L3ca74a.  v3:= -1000L;
  #L3ca74e.  v5:= lcmp(v9, v3);
  #L3ca752.  if v5 <= 0 then goto L3ca760;
  #L3ca756.  v9:= 45I;
  #L3ca75a.  call temp:= `insert`(v8, v1, v9) @signature `Ljava/lang/StringBuffer;.insert:(IC)Ljava/lang/StringBuffer;` @kind virtual;
  #L3ca760.  v9:= 46I;
  #L3ca764.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L3ca76a.  v9:= 3I;
  #L3ca76c.  call `appendPaddedInteger`(v8, v2, v9) @signature `Lorg/joda/time/format/FormatUtils;.appendPaddedInteger:(Ljava/lang/StringBuffer;II)V` @kind static;
  #L3ca772.  v9:= v7.`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.iSuffix` @type ^`org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix` @kind object;
  #L3ca776.  if v9 == 0 then goto L3ca780;
  #L3ca77a.  call `printTo`(v9, v8, v0) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$PeriodFieldAffix;.printTo:(Ljava/lang/StringBuffer;I)V` @kind interface;
  #L3ca780.  return @kind void;
}
procedure `void` `setFieldValue`(`org.joda.time.format.PeriodFormatterBuilder$FieldFormatter` v0 @kind this, `org.joda.time.ReadWritablePeriod` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$FieldFormatter;.setFieldValue:(Lorg/joda/time/ReadWritablePeriod;II)V` @AccessFlag  {
    temp;

  #L3ca794.  goto L3ca7dc;
  #L3ca79a.  goto L3ca7da;
  #L3ca79c.  call `setMillis`(v1, v3) @signature `Lorg/joda/time/ReadWritablePeriod;.setMillis:(I)V` @kind interface;
  #L3ca7a2.  goto L3ca7da;
  #L3ca7a4.  call `setSeconds`(v1, v3) @signature `Lorg/joda/time/ReadWritablePeriod;.setSeconds:(I)V` @kind interface;
  #L3ca7aa.  goto L3ca7da;
  #L3ca7ac.  call `setMinutes`(v1, v3) @signature `Lorg/joda/time/ReadWritablePeriod;.setMinutes:(I)V` @kind interface;
  #L3ca7b2.  goto L3ca7da;
  #L3ca7b4.  call `setHours`(v1, v3) @signature `Lorg/joda/time/ReadWritablePeriod;.setHours:(I)V` @kind interface;
  #L3ca7ba.  goto L3ca7da;
  #L3ca7bc.  call `setDays`(v1, v3) @signature `Lorg/joda/time/ReadWritablePeriod;.setDays:(I)V` @kind interface;
  #L3ca7c2.  goto L3ca7da;
  #L3ca7c4.  call `setWeeks`(v1, v3) @signature `Lorg/joda/time/ReadWritablePeriod;.setWeeks:(I)V` @kind interface;
  #L3ca7ca.  goto L3ca7da;
  #L3ca7cc.  call `setMonths`(v1, v3) @signature `Lorg/joda/time/ReadWritablePeriod;.setMonths:(I)V` @kind interface;
  #L3ca7d2.  goto L3ca7da;
  #L3ca7d4.  call `setYears`(v1, v3) @signature `Lorg/joda/time/ReadWritablePeriod;.setYears:(I)V` @kind interface;
  #L3ca7da.  return @kind void;
  #L3ca7dc.  switch v2
                  | 0 => goto L3ca7d4
                  | 1 => goto L3ca7cc
                  | 2 => goto L3ca7c4
                  | 3 => goto L3ca7bc
                  | 4 => goto L3ca7b4
                  | 5 => goto L3ca7ac
                  | 6 => goto L3ca7a4
                  | 7 => goto L3ca79c
                  | else => goto L3ca79a;
}
