record `org.joda.time.format.PeriodFormatterBuilder$PluralAffix` @kind class @AccessFlag  extends `org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix` @kind class {
  `java.lang.String` `org.joda.time.format.PeriodFormatterBuilder$PluralAffix.iPluralText` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.joda.time.format.PeriodFormatterBuilder$PluralAffix.iSingularText` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.joda.time.format.PeriodFormatterBuilder$PluralAffix` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$PluralAffix;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3cac48.  call `<init>`(v0) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$IgnorableAffix;.<init>:()V` @kind direct;
  #L3cac4e.  v0.`org.joda.time.format.PeriodFormatterBuilder$PluralAffix.iSingularText` @type ^`java.lang.String` := v1 @kind object;
  #L3cac52.  v0.`org.joda.time.format.PeriodFormatterBuilder$PluralAffix.iPluralText` @type ^`java.lang.String` := v2 @kind object;
  #L3cac56.  return @kind void;
}
procedure `int` `calculatePrintedLength`(`org.joda.time.format.PeriodFormatterBuilder$PluralAffix` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$PluralAffix;.calculatePrintedLength:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3caa78.  v0:= 1I;
  #L3caa7a.  if v2 != v0 then goto L3caa84;
  #L3caa7e.  v2:= v1.`org.joda.time.format.PeriodFormatterBuilder$PluralAffix.iSingularText` @type ^`java.lang.String` @kind object;
  #L3caa82.  goto L3caa88;
  #L3caa84.  v2:= v1.`org.joda.time.format.PeriodFormatterBuilder$PluralAffix.iPluralText` @type ^`java.lang.String` @kind object;
  #L3caa88.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3caa8e.  v2:= temp;
  #L3caa90.  return v2;
}
procedure `java.lang.String`[] `getAffixes`(`org.joda.time.format.PeriodFormatterBuilder$PluralAffix` v3 @kind this) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$PluralAffix;.getAffixes:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3cac1c.  v0:= 2I;
  #L3cac1e.  v0:= new `java.lang.String`[v0];
  #L3cac22.  v1:= v3.`org.joda.time.format.PeriodFormatterBuilder$PluralAffix.iSingularText` @type ^`java.lang.String` @kind object;
  #L3cac26.  v2:= 0I;
  #L3cac28.  v0[v2]:= v1 @kind object;
  #L3cac2c.  v1:= v3.`org.joda.time.format.PeriodFormatterBuilder$PluralAffix.iPluralText` @type ^`java.lang.String` @kind object;
  #L3cac30.  v2:= 1I;
  #L3cac32.  v0[v2]:= v1 @kind object;
  #L3cac36.  return v0 @kind object;
}
procedure `int` `parse`(`org.joda.time.format.PeriodFormatterBuilder$PluralAffix` v11 @kind this, `java.lang.String` v12 @kind object, `int` v13 ) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$PluralAffix;.parse:(Ljava/lang/String;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3caaa4.  v0:= v11.`org.joda.time.format.PeriodFormatterBuilder$PluralAffix.iPluralText` @type ^`java.lang.String` @kind object;
  #L3caaa8.  v1:= v11.`org.joda.time.format.PeriodFormatterBuilder$PluralAffix.iSingularText` @type ^`java.lang.String` @kind object;
  #L3caaac.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3caab2.  v2:= temp;
  #L3caab4.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3caaba.  v3:= temp;
  #L3caabc.  if v2 >= v3 then goto L3caac6;
  #L3caac0.  v10:= v0 @kind object;
  #L3caac2.  v0:= v1 @kind object;
  #L3caac4.  goto L3caac8;
  #L3caac6.  v10:= v1 @kind object;
  #L3caac8.  v5:= 1I;
  #L3caaca.  v8:= 0I;
  #L3caacc.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3caad2.  v9:= temp;
  #L3caad4.  v4:= v12 @kind object;
  #L3caad6.  v6:= v13;
  #L3caad8.  v7:= v0 @kind object;
  #L3caada.  call temp:= `regionMatches`(v4, v5, v6, v7, v8, v9) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L3caae0.  v1:= temp;
  #L3caae2.  if v1 == 0 then goto L3cab06;
  #L3caae6.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3caaec.  v1:= temp;
  #L3caaee.  call temp:= `matchesOtherAffix`(v11, v1, v12, v13) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$IgnorableAffix;.matchesOtherAffix:(ILjava/lang/String;I)Z` @kind virtual;
  #L3caaf4.  v1:= temp;
  #L3caaf6.  if v1 != 0 then goto L3cab06;
  #L3caafa.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cab00.  v12:= temp;
  #L3cab02.  v13:= v13 + v12 @kind int;
  #L3cab04.  return v13;
  #L3cab06.  v2:= 1I;
  #L3cab08.  v5:= 0I;
  #L3cab0a.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cab10.  v6:= temp;
  #L3cab12.  v1:= v12 @kind object;
  #L3cab14.  v3:= v13;
  #L3cab16.  v4:= v10 @kind object;
  #L3cab18.  call temp:= `regionMatches`(v1, v2, v3, v4, v5, v6) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L3cab1e.  v0:= temp;
  #L3cab20.  if v0 == 0 then goto L3cab42;
  #L3cab24.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cab2a.  v0:= temp;
  #L3cab2c.  call temp:= `matchesOtherAffix`(v11, v0, v12, v13) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$IgnorableAffix;.matchesOtherAffix:(ILjava/lang/String;I)Z` @kind virtual;
  #L3cab32.  v12:= temp;
  #L3cab34.  if v12 != 0 then goto L3cab42;
  #L3cab38.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cab3e.  v12:= temp;
  #L3cab40.  goto L3cab02;
  #L3cab42.  v12:= ~v13 @kind int;
  #L3cab44.  return v12;
}
procedure `void` `printTo`(`org.joda.time.format.PeriodFormatterBuilder$PluralAffix` v1 @kind this, `java.io.Writer` v2 @kind object, `int` v3 ) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$PluralAffix;.printTo:(Ljava/io/Writer;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cac68.  v0:= 1I;
  #L3cac6a.  if v3 != v0 then goto L3cac74;
  #L3cac6e.  v3:= v1.`org.joda.time.format.PeriodFormatterBuilder$PluralAffix.iSingularText` @type ^`java.lang.String` @kind object;
  #L3cac72.  goto L3cac78;
  #L3cac74.  v3:= v1.`org.joda.time.format.PeriodFormatterBuilder$PluralAffix.iPluralText` @type ^`java.lang.String` @kind object;
  #L3cac78.  call `write`(v2, v3) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L3cac7e.  return @kind void;
}
procedure `void` `printTo`(`org.joda.time.format.PeriodFormatterBuilder$PluralAffix` v1 @kind this, `java.lang.StringBuffer` v2 @kind object, `int` v3 ) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$PluralAffix;.printTo:(Ljava/lang/StringBuffer;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cac90.  v0:= 1I;
  #L3cac92.  if v3 != v0 then goto L3cac9c;
  #L3cac96.  v3:= v1.`org.joda.time.format.PeriodFormatterBuilder$PluralAffix.iSingularText` @type ^`java.lang.String` @kind object;
  #L3cac9a.  goto L3caca0;
  #L3cac9c.  v3:= v1.`org.joda.time.format.PeriodFormatterBuilder$PluralAffix.iPluralText` @type ^`java.lang.String` @kind object;
  #L3caca0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3caca6.  return @kind void;
}
procedure `int` `scan`(`org.joda.time.format.PeriodFormatterBuilder$PluralAffix` v14 @kind this, `java.lang.String` v15 @kind object, `int` v16 ) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$PluralAffix;.scan:(Ljava/lang/String;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L3cab58.  v0:= v14 @kind object;
  #L3cab5a.  v7:= v15 @kind object;
  #L3cab5c.  v1:= v0.`org.joda.time.format.PeriodFormatterBuilder$PluralAffix.iPluralText` @type ^`java.lang.String` @kind object;
  #L3cab60.  v2:= v0.`org.joda.time.format.PeriodFormatterBuilder$PluralAffix.iSingularText` @type ^`java.lang.String` @kind object;
  #L3cab64.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cab6a.  v3:= temp;
  #L3cab6c.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cab72.  v4:= temp;
  #L3cab74.  if v3 >= v4 then goto L3cab7e;
  #L3cab78.  v9:= v1 @kind object;
  #L3cab7a.  v8:= v2 @kind object;
  #L3cab7c.  goto L3cab82;
  #L3cab7e.  v8:= v1 @kind object;
  #L3cab80.  v9:= v2 @kind object;
  #L3cab82.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cab88.  v10:= temp;
  #L3cab8a.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cab90.  v11:= temp;
  #L3cab92.  call temp:= `length`(v15) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cab98.  v12:= temp;
  #L3cab9a.  v13:= v16;
  #L3cab9e.  if v13 >= v12 then goto L3cac04;
  #L3caba2.  v2:= 1I;
  #L3caba4.  v5:= 0I;
  #L3caba6.  v1:= v15 @kind object;
  #L3caba8.  v3:= v13;
  #L3cabaa.  v4:= v8 @kind object;
  #L3cabac.  v6:= v10;
  #L3cabae.  call temp:= `regionMatches`(v1, v2, v3, v4, v5, v6) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L3cabb4.  v1:= temp;
  #L3cabb6.  if v1 == 0 then goto L3cabd0;
  #L3cabba.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cabc0.  v1:= temp;
  #L3cabc2.  call temp:= `matchesOtherAffix`(v14, v1, v15, v13) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$IgnorableAffix;.matchesOtherAffix:(ILjava/lang/String;I)Z` @kind virtual;
  #L3cabc8.  v1:= temp;
  #L3cabca.  if v1 != 0 then goto L3cabd0;
  #L3cabce.  return v13;
  #L3cabd0.  v2:= 1I;
  #L3cabd2.  v5:= 0I;
  #L3cabd4.  v1:= v15 @kind object;
  #L3cabd6.  v3:= v13;
  #L3cabd8.  v4:= v9 @kind object;
  #L3cabda.  v6:= v11;
  #L3cabdc.  call temp:= `regionMatches`(v1, v2, v3, v4, v5, v6) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L3cabe2.  v1:= temp;
  #L3cabe4.  if v1 == 0 then goto L3cabfe;
  #L3cabe8.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3cabee.  v1:= temp;
  #L3cabf0.  call temp:= `matchesOtherAffix`(v14, v1, v15, v13) @signature `Lorg/joda/time/format/PeriodFormatterBuilder$IgnorableAffix;.matchesOtherAffix:(ILjava/lang/String;I)Z` @kind virtual;
  #L3cabf6.  v1:= temp;
  #L3cabf8.  if v1 != 0 then goto L3cabfe;
  #L3cabfc.  return v13;
  #L3cabfe.  v13:= v13 + 1;
  #L3cac02.  goto L3cab9e;
  #L3cac04.  v1:= v16;
  #L3cac08.  v1:= ~v1 @kind int;
  #L3cac0a.  return v1;
}
