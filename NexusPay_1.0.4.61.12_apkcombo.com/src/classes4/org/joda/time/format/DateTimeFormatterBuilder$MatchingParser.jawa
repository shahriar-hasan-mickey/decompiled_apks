record `org.joda.time.format.DateTimeFormatterBuilder$MatchingParser` @kind class @AccessFlag  extends `org.joda.time.format.InternalParser` @kind interface {
  `int` `org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.iParsedLengthEstimate` @AccessFlag PRIVATE_FINAL;
  `org.joda.time.format.InternalParser`[] `org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.iParsers` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.joda.time.format.DateTimeFormatterBuilder$MatchingParser` v3 @kind this, `org.joda.time.format.InternalParser`[] v4 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$MatchingParser;.<init>:([Lorg/joda/time/format/InternalParser;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3c19a0.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c19a6.  v3.`org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.iParsers` @type ^`org.joda.time.format.InternalParser`[] := v4 @kind object;
  #L3c19aa.  v0:= length @variable v4;
  #L3c19ac.  v1:= 0I;
  #L3c19ae.  v0:= v0 + -1;
  #L3c19b2.  if v0 < 0 then goto L3c19ce;
  #L3c19b6.  v2:= v4[v0] @kind object;
  #L3c19ba.  if v2 == 0 then goto L3c19ae;
  #L3c19be.  call temp:= `estimateParsedLength`(v2) @signature `Lorg/joda/time/format/InternalParser;.estimateParsedLength:()I` @kind interface;
  #L3c19c4.  v2:= temp;
  #L3c19c6.  if v2 <= v1 then goto L3c19ae;
  #L3c19ca.  v1:= v2;
  #L3c19cc.  goto L3c19ae;
  #L3c19ce.  v3.`org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.iParsedLengthEstimate` @type ^`int` := v1;
  #L3c19d2.  return @kind void;
}
procedure `int` `estimateParsedLength`(`org.joda.time.format.DateTimeFormatterBuilder$MatchingParser` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$MatchingParser;.estimateParsedLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c18d8.  v0:= v1.`org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.iParsedLengthEstimate` @type ^`int`;
  #L3c18dc.  return v0;
}
procedure `int` `parseInto`(`org.joda.time.format.DateTimeFormatterBuilder$MatchingParser` v9 @kind this, `org.joda.time.format.DateTimeParserBucket` v10 @kind object, `java.lang.CharSequence` v11 @kind object, `int` v12 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$MatchingParser;.parseInto:(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3c18f0.  v0:= v9.`org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.iParsers` @type ^`org.joda.time.format.InternalParser`[] @kind object;
  #L3c18f4.  v1:= length @variable v0;
  #L3c18f6.  call temp:= `saveState`(v10) @signature `Lorg/joda/time/format/DateTimeParserBucket;.saveState:()Ljava/lang/Object;` @kind virtual;
  #L3c18fc.  v2:= temp @kind object;
  #L3c18fe.  v3:= 0I;
  #L3c1900.  v4:= 0I;
  #L3c1902.  v6:= v12;
  #L3c1904.  v7:= v6;
  #L3c1906.  v5:= 0I;
  #L3c1908.  if v5 >= v1 then goto L3c1972;
  #L3c190c.  v8:= v0[v5] @kind object;
  #L3c1910.  if v8 != 0 then goto L3c191e;
  #L3c1914.  if v6 > v12 then goto L3c191a;
  #L3c1918.  return v12;
  #L3c191a.  v3:= 1I;
  #L3c191c.  goto L3c1972;
  #L3c191e.  call temp:= `parseInto`(v8, v10, v11, v12) @signature `Lorg/joda/time/format/InternalParser;.parseInto:(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/CharSequence;I)I` @kind interface;
  #L3c1924.  v8:= temp;
  #L3c1926.  if v8 < v12 then goto L3c195a;
  #L3c192a.  if v8 <= v6 then goto L3c1966;
  #L3c192e.  call temp:= `length`(v11) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3c1934.  v4:= temp;
  #L3c1936.  if v8 >= v4 then goto L3c1958;
  #L3c193a.  v4:= v5 + 1;
  #L3c193e.  if v4 >= v1 then goto L3c1958;
  #L3c1942.  v4:= v0[v4] @kind object;
  #L3c1946.  if v4 != 0 then goto L3c194c;
  #L3c194a.  goto L3c1958;
  #L3c194c.  call temp:= `saveState`(v10) @signature `Lorg/joda/time/format/DateTimeParserBucket;.saveState:()Ljava/lang/Object;` @kind virtual;
  #L3c1952.  v4:= temp @kind object;
  #L3c1954.  v6:= v8;
  #L3c1956.  goto L3c1966;
  #L3c1958.  return v8;
  #L3c195a.  if v8 >= 0 then goto L3c1966;
  #L3c195e.  v8:= ~v8 @kind int;
  #L3c1960.  if v8 <= v7 then goto L3c1966;
  #L3c1964.  v7:= v8;
  #L3c1966.  call temp:= `restoreState`(v10, v2) @signature `Lorg/joda/time/format/DateTimeParserBucket;.restoreState:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c196c.  v5:= v5 + 1;
  #L3c1970.  goto L3c1908;
  #L3c1972.  if v6 > v12 then goto L3c1984;
  #L3c1976.  if v6 != v12 then goto L3c1980;
  #L3c197a.  if v3 == 0 then goto L3c1980;
  #L3c197e.  goto L3c1984;
  #L3c1980.  v10:= ~v7 @kind int;
  #L3c1982.  return v10;
  #L3c1984.  if v4 == 0 then goto L3c198e;
  #L3c1988.  call temp:= `restoreState`(v10, v4) @signature `Lorg/joda/time/format/DateTimeParserBucket;.restoreState:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c198e.  return v6;
}
