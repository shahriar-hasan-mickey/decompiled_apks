record `org.joda.time.format.DateTimeFormatterBuilder` @kind class @AccessFlag PUBLIC {
  `java.util.ArrayList` `org.joda.time.format.DateTimeFormatterBuilder.iElementPairs` @AccessFlag PRIVATE;
  `java.lang.Object` `org.joda.time.format.DateTimeFormatterBuilder.iFormatter` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3c3c68.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c3c6e.  v0:= new `java.util.ArrayList`;
  #L3c3c72.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3c3c78.  v1.`org.joda.time.format.DateTimeFormatterBuilder.iElementPairs` @type ^`java.util.ArrayList` := v0 @kind object;
  #L3c3c7c.  return @kind void;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `append0`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Ljava/lang/Object;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3c322c.  v0:= 0I;
  #L3c322e.  v1.`org.joda.time.format.DateTimeFormatterBuilder.iFormatter` @type ^`java.lang.Object` := v0 @kind object;
  #L3c3232.  v0:= v1.`org.joda.time.format.DateTimeFormatterBuilder.iElementPairs` @type ^`java.util.ArrayList` @kind object;
  #L3c3236.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c323c.  v0:= v1.`org.joda.time.format.DateTimeFormatterBuilder.iElementPairs` @type ^`java.util.ArrayList` @kind object;
  #L3c3240.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c3246.  return v1 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `append0`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `org.joda.time.format.InternalPrinter` v2 @kind object, `org.joda.time.format.InternalParser` v3 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3c3258.  v0:= 0I;
  #L3c325a.  v1.`org.joda.time.format.DateTimeFormatterBuilder.iFormatter` @type ^`java.lang.Object` := v0 @kind object;
  #L3c325e.  v0:= v1.`org.joda.time.format.DateTimeFormatterBuilder.iElementPairs` @type ^`java.util.ArrayList` @kind object;
  #L3c3262.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c3268.  v2:= v1.`org.joda.time.format.DateTimeFormatterBuilder.iElementPairs` @type ^`java.util.ArrayList` @kind object;
  #L3c326c.  call temp:= `add`(v2, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L3c3272.  return v1 @kind object;
}
procedure `void` `appendUnknownString`(`java.lang.Appendable` v1 @kind object, `int` v2 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendUnknownString:(Ljava/lang/Appendable;I)V` @AccessFlag STATIC {
    temp;
    v0;

  #L3c3c90.  v2:= v2 + -1;
  #L3c3c94.  if v2 < 0 then goto L3c3ca6;
  #L3c3c98.  v0:= 65533I;
  #L3c3c9e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3c3ca4.  goto L3c3c90;
  #L3c3ca6.  return @kind void;
}
procedure `void` `checkParser`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `org.joda.time.format.DateTimeParser` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.checkParser:(Lorg/joda/time/format/DateTimeParser;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3c3cb8.  if v2 == 0 then goto L3c3cbe;
  #L3c3cbc.  return @kind void;
  #L3c3cbe.  v2:= new `java.lang.IllegalArgumentException`;
  #L3c3cc2.  v0:= "No parser supplied" @kind object;
  #L3c3cc6.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c3ccc.  throw v2;
}
procedure `void` `checkPrinter`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `org.joda.time.format.DateTimePrinter` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.checkPrinter:(Lorg/joda/time/format/DateTimePrinter;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3c3ce0.  if v2 == 0 then goto L3c3ce6;
  #L3c3ce4.  return @kind void;
  #L3c3ce6.  v2:= new `java.lang.IllegalArgumentException`;
  #L3c3cea.  v0:= "No printer supplied" @kind object;
  #L3c3cee.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c3cf4.  throw v2;
}
procedure `int` `csCompare`(`java.lang.CharSequence` v6 @kind object, `int` v7 , `java.lang.String` v8 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.csCompare:(Ljava/lang/CharSequence;ILjava/lang/String;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3c2f5c.  call temp:= `length`(v6) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3c2f62.  v0:= temp;
  #L3c2f64.  v0:= v0 - v7 @kind int;
  #L3c2f66.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c2f6c.  v1:= temp;
  #L3c2f6e.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3c2f74.  v2:= temp;
  #L3c2f76.  v3:= 0I;
  #L3c2f78.  if v3 >= v2 then goto L3c2f9e;
  #L3c2f7c.  call temp:= `charAt`(v8, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3c2f82.  v4:= temp;
  #L3c2f84.  v5:= v7 + v3 @kind int;
  #L3c2f88.  call temp:= `charAt`(v6, v5) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3c2f8e.  v5:= temp;
  #L3c2f90.  v4:= v4 - v5 @kind int;
  #L3c2f92.  if v4 == 0 then goto L3c2f98;
  #L3c2f96.  return v4;
  #L3c2f98.  v3:= v3 + 1;
  #L3c2f9c.  goto L3c2f78;
  #L3c2f9e.  v1:= v1 - v0 @kind int;
  #L3c2fa0.  return v1;
}
procedure `boolean` `csStartsWith`(`java.lang.CharSequence` v5 @kind object, `int` v6 , `java.lang.String` v7 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.csStartsWith:(Ljava/lang/CharSequence;ILjava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3c2de8.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c2dee.  v0:= temp;
  #L3c2df0.  call temp:= `length`(v5) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3c2df6.  v1:= temp;
  #L3c2df8.  v1:= v1 - v6 @kind int;
  #L3c2dfa.  v2:= 0I;
  #L3c2dfc.  if v1 >= v0 then goto L3c2e02;
  #L3c2e00.  return v2;
  #L3c2e02.  v1:= 0I;
  #L3c2e04.  if v1 >= v0 then goto L3c2e28;
  #L3c2e08.  v3:= v6 + v1 @kind int;
  #L3c2e0c.  call temp:= `charAt`(v5, v3) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3c2e12.  v3:= temp;
  #L3c2e14.  call temp:= `charAt`(v7, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3c2e1a.  v4:= temp;
  #L3c2e1c.  if v3 == v4 then goto L3c2e22;
  #L3c2e20.  return v2;
  #L3c2e22.  v1:= v1 + 1;
  #L3c2e26.  goto L3c2e04;
  #L3c2e28.  v5:= 1I;
  #L3c2e2a.  return v5;
}
procedure `boolean` `csStartsWithIgnoreCase`(`java.lang.CharSequence` v5 @kind object, `int` v6 , `java.lang.String` v7 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.csStartsWithIgnoreCase:(Ljava/lang/CharSequence;ILjava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3c2e3c.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c2e42.  v0:= temp;
  #L3c2e44.  call temp:= `length`(v5) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3c2e4a.  v1:= temp;
  #L3c2e4c.  v1:= v1 - v6 @kind int;
  #L3c2e4e.  v2:= 0I;
  #L3c2e50.  if v1 >= v0 then goto L3c2e56;
  #L3c2e54.  return v2;
  #L3c2e56.  v1:= 0I;
  #L3c2e58.  if v1 >= v0 then goto L3c2ea4;
  #L3c2e5c.  v3:= v6 + v1 @kind int;
  #L3c2e60.  call temp:= `charAt`(v5, v3) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3c2e66.  v3:= temp;
  #L3c2e68.  call temp:= `charAt`(v7, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3c2e6e.  v4:= temp;
  #L3c2e70.  if v3 == v4 then goto L3c2e9e;
  #L3c2e74.  call temp:= `toUpperCase`(v3) @signature `Ljava/lang/Character;.toUpperCase:(C)C` @kind static;
  #L3c2e7a.  v3:= temp;
  #L3c2e7c.  call temp:= `toUpperCase`(v4) @signature `Ljava/lang/Character;.toUpperCase:(C)C` @kind static;
  #L3c2e82.  v4:= temp;
  #L3c2e84.  if v3 == v4 then goto L3c2e9e;
  #L3c2e88.  call temp:= `toLowerCase`(v3) @signature `Ljava/lang/Character;.toLowerCase:(C)C` @kind static;
  #L3c2e8e.  v3:= temp;
  #L3c2e90.  call temp:= `toLowerCase`(v4) @signature `Ljava/lang/Character;.toLowerCase:(C)C` @kind static;
  #L3c2e96.  v4:= temp;
  #L3c2e98.  if v3 == v4 then goto L3c2e9e;
  #L3c2e9c.  return v2;
  #L3c2e9e.  v1:= v1 + 1;
  #L3c2ea2.  goto L3c2e58;
  #L3c2ea4.  v5:= 1I;
  #L3c2ea6.  return v5;
}
procedure `java.lang.Object` `getFormatter`(`org.joda.time.format.DateTimeFormatterBuilder` v4 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.getFormatter:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c2fb4.  v0:= v4.`org.joda.time.format.DateTimeFormatterBuilder.iFormatter` @type ^`java.lang.Object` @kind object;
  #L3c2fb8.  if v0 != 0 then goto L3c3012;
  #L3c2fbc.  v1:= v4.`org.joda.time.format.DateTimeFormatterBuilder.iElementPairs` @type ^`java.util.ArrayList` @kind object;
  #L3c2fc0.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L3c2fc6.  v1:= temp;
  #L3c2fc8.  v2:= 2I;
  #L3c2fca.  if v1 != v2 then goto L3c2ffc;
  #L3c2fce.  v1:= v4.`org.joda.time.format.DateTimeFormatterBuilder.iElementPairs` @type ^`java.util.ArrayList` @kind object;
  #L3c2fd2.  v2:= 0I;
  #L3c2fd4.  call temp:= `get`(v1, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3c2fda.  v1:= temp @kind object;
  #L3c2fdc.  v2:= v4.`org.joda.time.format.DateTimeFormatterBuilder.iElementPairs` @type ^`java.util.ArrayList` @kind object;
  #L3c2fe0.  v3:= 1I;
  #L3c2fe2.  call temp:= `get`(v2, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3c2fe8.  v2:= temp @kind object;
  #L3c2fea.  if v1 == 0 then goto L3c2ffa;
  #L3c2fee.  if v1 == v2 then goto L3c2ff6;
  #L3c2ff2.  if v2 != 0 then goto L3c2ffc;
  #L3c2ff6.  v0:= v1 @kind object;
  #L3c2ff8.  goto L3c2ffc;
  #L3c2ffa.  v0:= v2 @kind object;
  #L3c2ffc.  if v0 != 0 then goto L3c300e;
  #L3c3000.  v0:= new `org.joda.time.format.DateTimeFormatterBuilder$Composite`;
  #L3c3004.  v1:= v4.`org.joda.time.format.DateTimeFormatterBuilder.iElementPairs` @type ^`java.util.ArrayList` @kind object;
  #L3c3008.  call `<init>`(v0, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$Composite;.<init>:(Ljava/util/List;)V` @kind direct;
  #L3c300e.  v4.`org.joda.time.format.DateTimeFormatterBuilder.iFormatter` @type ^`java.lang.Object` := v0 @kind object;
  #L3c3012.  return v0 @kind object;
}
procedure `boolean` `isFormatter`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.isFormatter:(Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3c2eb8.  call temp:= `isPrinter`(v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.isPrinter:(Ljava/lang/Object;)Z` @kind direct;
  #L3c2ebe.  v0:= temp;
  #L3c2ec0.  if v0 != 0 then goto L3c2ed6;
  #L3c2ec4.  call temp:= `isParser`(v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.isParser:(Ljava/lang/Object;)Z` @kind direct;
  #L3c2eca.  v2:= temp;
  #L3c2ecc.  if v2 == 0 then goto L3c2ed2;
  #L3c2ed0.  goto L3c2ed6;
  #L3c2ed2.  v2:= 0I;
  #L3c2ed4.  goto L3c2ed8;
  #L3c2ed6.  v2:= 1I;
  #L3c2ed8.  return v2;
}
procedure `boolean` `isParser`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.isParser:(Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3c2eec.  v0:= instanceof @variable v2 @type ^`org.joda.time.format.InternalParser` @kind boolean;
  #L3c2ef0.  if v0 == 0 then goto L3c2f0e;
  #L3c2ef4.  v0:= instanceof @variable v2 @type ^`org.joda.time.format.DateTimeFormatterBuilder$Composite` @kind boolean;
  #L3c2ef8.  if v0 == 0 then goto L3c2f0a;
  #L3c2efc.  v2:= (`org.joda.time.format.DateTimeFormatterBuilder$Composite`) v2 @kind object;
  #L3c2f00.  call temp:= `isParser`(v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$Composite;.isParser:()Z` @kind virtual;
  #L3c2f06.  v2:= temp;
  #L3c2f08.  return v2;
  #L3c2f0a.  v2:= 1I;
  #L3c2f0c.  return v2;
  #L3c2f0e.  v2:= 0I;
  #L3c2f10.  return v2;
}
procedure `boolean` `isPrinter`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.isPrinter:(Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3c2f24.  v0:= instanceof @variable v2 @type ^`org.joda.time.format.InternalPrinter` @kind boolean;
  #L3c2f28.  if v0 == 0 then goto L3c2f46;
  #L3c2f2c.  v0:= instanceof @variable v2 @type ^`org.joda.time.format.DateTimeFormatterBuilder$Composite` @kind boolean;
  #L3c2f30.  if v0 == 0 then goto L3c2f42;
  #L3c2f34.  v2:= (`org.joda.time.format.DateTimeFormatterBuilder$Composite`) v2 @kind object;
  #L3c2f38.  call temp:= `isPrinter`(v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$Composite;.isPrinter:()Z` @kind virtual;
  #L3c2f3e.  v2:= temp;
  #L3c2f40.  return v2;
  #L3c2f42.  v2:= 1I;
  #L3c2f44.  return v2;
  #L3c2f46.  v2:= 0I;
  #L3c2f48.  return v2;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `append`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `org.joda.time.format.DateTimeFormatter` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append:(Lorg/joda/time/format/DateTimeFormatter;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c308c.  if v2 == 0 then goto L3c30aa;
  #L3c3090.  call temp:= `getPrinter0`(v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.getPrinter0:()Lorg/joda/time/format/InternalPrinter;` @kind virtual;
  #L3c3096.  v0:= temp @kind object;
  #L3c3098.  call temp:= `getParser0`(v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.getParser0:()Lorg/joda/time/format/InternalParser;` @kind virtual;
  #L3c309e.  v2:= temp @kind object;
  #L3c30a0.  call temp:= `append0`(v1, v0, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c30a6.  v2:= temp @kind object;
  #L3c30a8.  return v2 @kind object;
  #L3c30aa.  v2:= new `java.lang.IllegalArgumentException`;
  #L3c30ae.  v0:= "No formatter supplied" @kind object;
  #L3c30b2.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c30b8.  throw v2;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `append`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `org.joda.time.format.DateTimeParser` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append:(Lorg/joda/time/format/DateTimeParser;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c30cc.  call `checkParser`(v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.checkParser:(Lorg/joda/time/format/DateTimeParser;)V` @kind direct;
  #L3c30d2.  call temp:= `of`(v2) @signature `Lorg/joda/time/format/DateTimeParserInternalParser;.of:(Lorg/joda/time/format/DateTimeParser;)Lorg/joda/time/format/InternalParser;` @kind static;
  #L3c30d8.  v2:= temp @kind object;
  #L3c30da.  v0:= 0I;
  #L3c30dc.  call temp:= `append0`(v1, v0, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c30e2.  v2:= temp @kind object;
  #L3c30e4.  return v2 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `append`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `org.joda.time.format.DateTimePrinter` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append:(Lorg/joda/time/format/DateTimePrinter;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c30f8.  call `checkPrinter`(v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.checkPrinter:(Lorg/joda/time/format/DateTimePrinter;)V` @kind direct;
  #L3c30fe.  call temp:= `of`(v2) @signature `Lorg/joda/time/format/DateTimePrinterInternalPrinter;.of:(Lorg/joda/time/format/DateTimePrinter;)Lorg/joda/time/format/InternalPrinter;` @kind static;
  #L3c3104.  v2:= temp @kind object;
  #L3c3106.  v0:= 0I;
  #L3c3108.  call temp:= `append0`(v1, v2, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c310e.  v2:= temp @kind object;
  #L3c3110.  return v2 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `append`(`org.joda.time.format.DateTimeFormatterBuilder` v0 @kind this, `org.joda.time.format.DateTimePrinter` v1 @kind object, `org.joda.time.format.DateTimeParser` v2 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append:(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c3124.  call `checkPrinter`(v0, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.checkPrinter:(Lorg/joda/time/format/DateTimePrinter;)V` @kind direct;
  #L3c312a.  call `checkParser`(v0, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.checkParser:(Lorg/joda/time/format/DateTimeParser;)V` @kind direct;
  #L3c3130.  call temp:= `of`(v1) @signature `Lorg/joda/time/format/DateTimePrinterInternalPrinter;.of:(Lorg/joda/time/format/DateTimePrinter;)Lorg/joda/time/format/InternalPrinter;` @kind static;
  #L3c3136.  v1:= temp @kind object;
  #L3c3138.  call temp:= `of`(v2) @signature `Lorg/joda/time/format/DateTimeParserInternalParser;.of:(Lorg/joda/time/format/DateTimeParser;)Lorg/joda/time/format/InternalParser;` @kind static;
  #L3c313e.  v2:= temp @kind object;
  #L3c3140.  call temp:= `append0`(v0, v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c3146.  v1:= temp @kind object;
  #L3c3148.  return v1 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `append`(`org.joda.time.format.DateTimeFormatterBuilder` v5 @kind this, `org.joda.time.format.DateTimePrinter` v6 @kind object, `org.joda.time.format.DateTimeParser`[] v7 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append:(Lorg/joda/time/format/DateTimePrinter;[Lorg/joda/time/format/DateTimeParser;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3c315c.  if v6 == 0 then goto L3c3166;
  #L3c3160.  call `checkPrinter`(v5, v6) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.checkPrinter:(Lorg/joda/time/format/DateTimePrinter;)V` @kind direct;
  #L3c3166.  if v7 == 0 then goto L3c320c;
  #L3c316a.  v0:= length @variable v7;
  #L3c316c.  v1:= 0I;
  #L3c316e.  v2:= 1I;
  #L3c3170.  if v0 != v2 then goto L3c31aa;
  #L3c3174.  v0:= v7[v1] @kind object;
  #L3c3178.  if v0 == 0 then goto L3c319a;
  #L3c317c.  call temp:= `of`(v6) @signature `Lorg/joda/time/format/DateTimePrinterInternalPrinter;.of:(Lorg/joda/time/format/DateTimePrinter;)Lorg/joda/time/format/InternalPrinter;` @kind static;
  #L3c3182.  v6:= temp @kind object;
  #L3c3184.  v7:= v7[v1] @kind object;
  #L3c3188.  call temp:= `of`(v7) @signature `Lorg/joda/time/format/DateTimeParserInternalParser;.of:(Lorg/joda/time/format/DateTimeParser;)Lorg/joda/time/format/InternalParser;` @kind static;
  #L3c318e.  v7:= temp @kind object;
  #L3c3190.  call temp:= `append0`(v5, v6, v7) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c3196.  v6:= temp @kind object;
  #L3c3198.  return v6 @kind object;
  #L3c319a.  v6:= new `java.lang.IllegalArgumentException`;
  #L3c319e.  v7:= "No parser supplied" @kind object;
  #L3c31a2.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c31a8.  throw v6;
  #L3c31aa.  v3:= new `org.joda.time.format.InternalParser`[v0];
  #L3c31ae.  v4:= v0 + -1;
  #L3c31b2.  if v1 >= v4 then goto L3c31e0;
  #L3c31b6.  v4:= v7[v1] @kind object;
  #L3c31ba.  call temp:= `of`(v4) @signature `Lorg/joda/time/format/DateTimeParserInternalParser;.of:(Lorg/joda/time/format/DateTimeParser;)Lorg/joda/time/format/InternalParser;` @kind static;
  #L3c31c0.  v4:= temp @kind object;
  #L3c31c2.  v3[v1]:= v4 @kind object;
  #L3c31c6.  if v4 == 0 then goto L3c31d0;
  #L3c31ca.  v1:= v1 + 1;
  #L3c31ce.  goto L3c31ae;
  #L3c31d0.  v6:= new `java.lang.IllegalArgumentException`;
  #L3c31d4.  v7:= "Incomplete parser array" @kind object;
  #L3c31d8.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c31de.  throw v6;
  #L3c31e0.  v7:= v7[v1] @kind object;
  #L3c31e4.  call temp:= `of`(v7) @signature `Lorg/joda/time/format/DateTimeParserInternalParser;.of:(Lorg/joda/time/format/DateTimeParser;)Lorg/joda/time/format/InternalParser;` @kind static;
  #L3c31ea.  v7:= temp @kind object;
  #L3c31ec.  v3[v1]:= v7 @kind object;
  #L3c31f0.  call temp:= `of`(v6) @signature `Lorg/joda/time/format/DateTimePrinterInternalPrinter;.of:(Lorg/joda/time/format/DateTimePrinter;)Lorg/joda/time/format/InternalPrinter;` @kind static;
  #L3c31f6.  v6:= temp @kind object;
  #L3c31f8.  v7:= new `org.joda.time.format.DateTimeFormatterBuilder$MatchingParser`;
  #L3c31fc.  call `<init>`(v7, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$MatchingParser;.<init>:([Lorg/joda/time/format/InternalParser;)V` @kind direct;
  #L3c3202.  call temp:= `append0`(v5, v6, v7) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c3208.  v6:= temp @kind object;
  #L3c320a.  return v6 @kind object;
  #L3c320c.  v6:= new `java.lang.IllegalArgumentException`;
  #L3c3210.  v7:= "No parsers supplied" @kind object;
  #L3c3214.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c321a.  throw v6;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendCenturyOfEra`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendCenturyOfEra:(II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3284.  call temp:= `centuryOfEra`() @signature `Lorg/joda/time/DateTimeFieldType;.centuryOfEra:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c328a.  v0:= temp @kind object;
  #L3c328c.  call temp:= `appendSignedDecimal`(v1, v0, v2, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendSignedDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3292.  v2:= temp @kind object;
  #L3c3294.  return v2 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendClockhourOfDay`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendClockhourOfDay:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c32a8.  call temp:= `clockhourOfDay`() @signature `Lorg/joda/time/DateTimeFieldType;.clockhourOfDay:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c32ae.  v0:= temp @kind object;
  #L3c32b0.  v1:= 2I;
  #L3c32b2.  call temp:= `appendDecimal`(v2, v0, v3, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c32b8.  v3:= temp @kind object;
  #L3c32ba.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendClockhourOfHalfday`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendClockhourOfHalfday:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c32cc.  call temp:= `clockhourOfHalfday`() @signature `Lorg/joda/time/DateTimeFieldType;.clockhourOfHalfday:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c32d2.  v0:= temp @kind object;
  #L3c32d4.  v1:= 2I;
  #L3c32d6.  call temp:= `appendDecimal`(v2, v0, v3, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c32dc.  v3:= temp @kind object;
  #L3c32de.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendDayOfMonth`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDayOfMonth:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c32f0.  call temp:= `dayOfMonth`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfMonth:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c32f6.  v0:= temp @kind object;
  #L3c32f8.  v1:= 2I;
  #L3c32fa.  call temp:= `appendDecimal`(v2, v0, v3, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3300.  v3:= temp @kind object;
  #L3c3302.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendDayOfWeek`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDayOfWeek:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3314.  call temp:= `dayOfWeek`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfWeek:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c331a.  v0:= temp @kind object;
  #L3c331c.  v1:= 1I;
  #L3c331e.  call temp:= `appendDecimal`(v2, v0, v3, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3324.  v3:= temp @kind object;
  #L3c3326.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendDayOfWeekShortText`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDayOfWeekShortText:()Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3338.  call temp:= `dayOfWeek`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfWeek:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c333e.  v0:= temp @kind object;
  #L3c3340.  call temp:= `appendShortText`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendShortText:(Lorg/joda/time/DateTimeFieldType;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3346.  v0:= temp @kind object;
  #L3c3348.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendDayOfWeekText`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDayOfWeekText:()Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c335c.  call temp:= `dayOfWeek`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfWeek:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c3362.  v0:= temp @kind object;
  #L3c3364.  call temp:= `appendText`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendText:(Lorg/joda/time/DateTimeFieldType;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c336a.  v0:= temp @kind object;
  #L3c336c.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendDayOfYear`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDayOfYear:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3380.  call temp:= `dayOfYear`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfYear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c3386.  v0:= temp @kind object;
  #L3c3388.  v1:= 3I;
  #L3c338a.  call temp:= `appendDecimal`(v2, v0, v3, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3390.  v3:= temp @kind object;
  #L3c3392.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendDecimal`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `org.joda.time.DateTimeFieldType` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c33a4.  if v3 == 0 then goto L3c33f2;
  #L3c33a8.  if v5 >= v4 then goto L3c33ae;
  #L3c33ac.  v5:= v4;
  #L3c33ae.  if v4 < 0 then goto L3c33e6;
  #L3c33b2.  if v5 <= 0 then goto L3c33e6;
  #L3c33b6.  v0:= 1I;
  #L3c33b8.  v1:= 0I;
  #L3c33ba.  if v4 > v0 then goto L3c33d2;
  #L3c33be.  v4:= new `org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber`;
  #L3c33c2.  call `<init>`(v4, v3, v5, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$UnpaddedNumber;.<init>:(Lorg/joda/time/DateTimeFieldType;IZ)V` @kind direct;
  #L3c33c8.  call temp:= `append0`(v2, v4) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Ljava/lang/Object;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c33ce.  v3:= temp @kind object;
  #L3c33d0.  return v3 @kind object;
  #L3c33d2.  v0:= new `org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber`;
  #L3c33d6.  call `<init>`(v0, v3, v5, v1, v4) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$PaddedNumber;.<init>:(Lorg/joda/time/DateTimeFieldType;IZI)V` @kind direct;
  #L3c33dc.  call temp:= `append0`(v2, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Ljava/lang/Object;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c33e2.  v3:= temp @kind object;
  #L3c33e4.  return v3 @kind object;
  #L3c33e6.  v3:= new `java.lang.IllegalArgumentException`;
  #L3c33ea.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3c33f0.  throw v3;
  #L3c33f2.  v3:= new `java.lang.IllegalArgumentException`;
  #L3c33f6.  v4:= "Field type must not be null" @kind object;
  #L3c33fa.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c3400.  throw v3;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendEraText`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendEraText:()Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3414.  call temp:= `era`() @signature `Lorg/joda/time/DateTimeFieldType;.era:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c341a.  v0:= temp @kind object;
  #L3c341c.  call temp:= `appendText`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendText:(Lorg/joda/time/DateTimeFieldType;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3422.  v0:= temp @kind object;
  #L3c3424.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendFixedDecimal`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `org.joda.time.DateTimeFieldType` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendFixedDecimal:(Lorg/joda/time/DateTimeFieldType;I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3438.  if v3 == 0 then goto L3c3484;
  #L3c343c.  if v4 <= 0 then goto L3c3456;
  #L3c3440.  v0:= new `org.joda.time.format.DateTimeFormatterBuilder$FixedNumber`;
  #L3c3444.  v1:= 0I;
  #L3c3446.  call `<init>`(v0, v3, v4, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$FixedNumber;.<init>:(Lorg/joda/time/DateTimeFieldType;IZ)V` @kind direct;
  #L3c344c.  call temp:= `append0`(v2, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Ljava/lang/Object;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c3452.  v3:= temp @kind object;
  #L3c3454.  return v3 @kind object;
  #L3c3456.  v3:= new `java.lang.IllegalArgumentException`;
  #L3c345a.  v0:= new `java.lang.StringBuilder`;
  #L3c345e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c3464.  v1:= "Illegal number of digits: " @kind object;
  #L3c3468.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c346e.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c3474.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c347a.  v4:= temp @kind object;
  #L3c347c.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c3482.  throw v3;
  #L3c3484.  v3:= new `java.lang.IllegalArgumentException`;
  #L3c3488.  v4:= "Field type must not be null" @kind object;
  #L3c348c.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c3492.  throw v3;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendFixedSignedDecimal`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `org.joda.time.DateTimeFieldType` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendFixedSignedDecimal:(Lorg/joda/time/DateTimeFieldType;I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c34a4.  if v3 == 0 then goto L3c34f0;
  #L3c34a8.  if v4 <= 0 then goto L3c34c2;
  #L3c34ac.  v0:= new `org.joda.time.format.DateTimeFormatterBuilder$FixedNumber`;
  #L3c34b0.  v1:= 1I;
  #L3c34b2.  call `<init>`(v0, v3, v4, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$FixedNumber;.<init>:(Lorg/joda/time/DateTimeFieldType;IZ)V` @kind direct;
  #L3c34b8.  call temp:= `append0`(v2, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Ljava/lang/Object;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c34be.  v3:= temp @kind object;
  #L3c34c0.  return v3 @kind object;
  #L3c34c2.  v3:= new `java.lang.IllegalArgumentException`;
  #L3c34c6.  v0:= new `java.lang.StringBuilder`;
  #L3c34ca.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c34d0.  v1:= "Illegal number of digits: " @kind object;
  #L3c34d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c34da.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c34e0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c34e6.  v4:= temp @kind object;
  #L3c34e8.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c34ee.  throw v3;
  #L3c34f0.  v3:= new `java.lang.IllegalArgumentException`;
  #L3c34f4.  v4:= "Field type must not be null" @kind object;
  #L3c34f8.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c34fe.  throw v3;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendFraction`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `org.joda.time.DateTimeFieldType` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendFraction:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3510.  if v2 == 0 then goto L3c3542;
  #L3c3514.  if v4 >= v3 then goto L3c351a;
  #L3c3518.  v4:= v3;
  #L3c351a.  if v3 < 0 then goto L3c3536;
  #L3c351e.  if v4 <= 0 then goto L3c3536;
  #L3c3522.  v0:= new `org.joda.time.format.DateTimeFormatterBuilder$Fraction`;
  #L3c3526.  call `<init>`(v0, v2, v3, v4) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$Fraction;.<init>:(Lorg/joda/time/DateTimeFieldType;II)V` @kind direct;
  #L3c352c.  call temp:= `append0`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Ljava/lang/Object;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c3532.  v2:= temp @kind object;
  #L3c3534.  return v2 @kind object;
  #L3c3536.  v2:= new `java.lang.IllegalArgumentException`;
  #L3c353a.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3c3540.  throw v2;
  #L3c3542.  v2:= new `java.lang.IllegalArgumentException`;
  #L3c3546.  v3:= "Field type must not be null" @kind object;
  #L3c354a.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c3550.  throw v2;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendFractionOfDay`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendFractionOfDay:(II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3564.  call temp:= `dayOfYear`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfYear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c356a.  v0:= temp @kind object;
  #L3c356c.  call temp:= `appendFraction`(v1, v0, v2, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendFraction:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3572.  v2:= temp @kind object;
  #L3c3574.  return v2 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendFractionOfHour`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendFractionOfHour:(II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3588.  call temp:= `hourOfDay`() @signature `Lorg/joda/time/DateTimeFieldType;.hourOfDay:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c358e.  v0:= temp @kind object;
  #L3c3590.  call temp:= `appendFraction`(v1, v0, v2, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendFraction:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3596.  v2:= temp @kind object;
  #L3c3598.  return v2 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendFractionOfMinute`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendFractionOfMinute:(II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c35ac.  call temp:= `minuteOfDay`() @signature `Lorg/joda/time/DateTimeFieldType;.minuteOfDay:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c35b2.  v0:= temp @kind object;
  #L3c35b4.  call temp:= `appendFraction`(v1, v0, v2, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendFraction:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c35ba.  v2:= temp @kind object;
  #L3c35bc.  return v2 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendFractionOfSecond`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendFractionOfSecond:(II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c35d0.  call temp:= `secondOfDay`() @signature `Lorg/joda/time/DateTimeFieldType;.secondOfDay:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c35d6.  v0:= temp @kind object;
  #L3c35d8.  call temp:= `appendFraction`(v1, v0, v2, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendFraction:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c35de.  v2:= temp @kind object;
  #L3c35e0.  return v2 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendHalfdayOfDayText`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendHalfdayOfDayText:()Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c35f4.  call temp:= `halfdayOfDay`() @signature `Lorg/joda/time/DateTimeFieldType;.halfdayOfDay:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c35fa.  v0:= temp @kind object;
  #L3c35fc.  call temp:= `appendText`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendText:(Lorg/joda/time/DateTimeFieldType;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3602.  v0:= temp @kind object;
  #L3c3604.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendHourOfDay`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendHourOfDay:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3618.  call temp:= `hourOfDay`() @signature `Lorg/joda/time/DateTimeFieldType;.hourOfDay:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c361e.  v0:= temp @kind object;
  #L3c3620.  v1:= 2I;
  #L3c3622.  call temp:= `appendDecimal`(v2, v0, v3, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3628.  v3:= temp @kind object;
  #L3c362a.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendHourOfHalfday`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendHourOfHalfday:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c363c.  call temp:= `hourOfHalfday`() @signature `Lorg/joda/time/DateTimeFieldType;.hourOfHalfday:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c3642.  v0:= temp @kind object;
  #L3c3644.  v1:= 2I;
  #L3c3646.  call temp:= `appendDecimal`(v2, v0, v3, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c364c.  v3:= temp @kind object;
  #L3c364e.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendLiteral`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `char` v2 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3660.  v0:= new `org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral`;
  #L3c3664.  call `<init>`(v0, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$CharacterLiteral;.<init>:(C)V` @kind direct;
  #L3c366a.  call temp:= `append0`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Ljava/lang/Object;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c3670.  v2:= temp @kind object;
  #L3c3672.  return v2 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendLiteral`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(Ljava/lang/String;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3684.  if v3 == 0 then goto L3c36ce;
  #L3c3688.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c368e.  v0:= temp;
  #L3c3690.  if v0 == 0 then goto L3c36cc;
  #L3c3694.  v1:= 1I;
  #L3c3696.  if v0 == v1 then goto L3c36ae;
  #L3c369a.  v0:= new `org.joda.time.format.DateTimeFormatterBuilder$StringLiteral`;
  #L3c369e.  call `<init>`(v0, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$StringLiteral;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c36a4.  call temp:= `append0`(v2, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Ljava/lang/Object;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c36aa.  v3:= temp @kind object;
  #L3c36ac.  return v3 @kind object;
  #L3c36ae.  v0:= new `org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral`;
  #L3c36b2.  v1:= 0I;
  #L3c36b4.  call temp:= `charAt`(v3, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3c36ba.  v3:= temp;
  #L3c36bc.  call `<init>`(v0, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$CharacterLiteral;.<init>:(C)V` @kind direct;
  #L3c36c2.  call temp:= `append0`(v2, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Ljava/lang/Object;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c36c8.  v3:= temp @kind object;
  #L3c36ca.  return v3 @kind object;
  #L3c36cc.  return v2 @kind object;
  #L3c36ce.  v3:= new `java.lang.IllegalArgumentException`;
  #L3c36d2.  v0:= "Literal must not be null" @kind object;
  #L3c36d6.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c36dc.  throw v3;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendMillisOfDay`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendMillisOfDay:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c36f0.  call temp:= `millisOfDay`() @signature `Lorg/joda/time/DateTimeFieldType;.millisOfDay:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c36f6.  v0:= temp @kind object;
  #L3c36f8.  v1:= 8I;
  #L3c36fc.  call temp:= `appendDecimal`(v2, v0, v3, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3702.  v3:= temp @kind object;
  #L3c3704.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendMillisOfSecond`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendMillisOfSecond:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3718.  call temp:= `millisOfSecond`() @signature `Lorg/joda/time/DateTimeFieldType;.millisOfSecond:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c371e.  v0:= temp @kind object;
  #L3c3720.  v1:= 3I;
  #L3c3722.  call temp:= `appendDecimal`(v2, v0, v3, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3728.  v3:= temp @kind object;
  #L3c372a.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendMinuteOfDay`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendMinuteOfDay:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c373c.  call temp:= `minuteOfDay`() @signature `Lorg/joda/time/DateTimeFieldType;.minuteOfDay:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c3742.  v0:= temp @kind object;
  #L3c3744.  v1:= 4I;
  #L3c3746.  call temp:= `appendDecimal`(v2, v0, v3, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c374c.  v3:= temp @kind object;
  #L3c374e.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendMinuteOfHour`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendMinuteOfHour:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3760.  call temp:= `minuteOfHour`() @signature `Lorg/joda/time/DateTimeFieldType;.minuteOfHour:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c3766.  v0:= temp @kind object;
  #L3c3768.  v1:= 2I;
  #L3c376a.  call temp:= `appendDecimal`(v2, v0, v3, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3770.  v3:= temp @kind object;
  #L3c3772.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendMonthOfYear`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendMonthOfYear:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3784.  call temp:= `monthOfYear`() @signature `Lorg/joda/time/DateTimeFieldType;.monthOfYear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c378a.  v0:= temp @kind object;
  #L3c378c.  v1:= 2I;
  #L3c378e.  call temp:= `appendDecimal`(v2, v0, v3, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3794.  v3:= temp @kind object;
  #L3c3796.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendMonthOfYearShortText`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendMonthOfYearShortText:()Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c37a8.  call temp:= `monthOfYear`() @signature `Lorg/joda/time/DateTimeFieldType;.monthOfYear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c37ae.  v0:= temp @kind object;
  #L3c37b0.  call temp:= `appendShortText`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendShortText:(Lorg/joda/time/DateTimeFieldType;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c37b6.  v0:= temp @kind object;
  #L3c37b8.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendMonthOfYearText`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendMonthOfYearText:()Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c37cc.  call temp:= `monthOfYear`() @signature `Lorg/joda/time/DateTimeFieldType;.monthOfYear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c37d2.  v0:= temp @kind object;
  #L3c37d4.  call temp:= `appendText`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendText:(Lorg/joda/time/DateTimeFieldType;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c37da.  v0:= temp @kind object;
  #L3c37dc.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendOptional`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `org.joda.time.format.DateTimeParser` v3 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendOptional:(Lorg/joda/time/format/DateTimeParser;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c37f0.  call `checkParser`(v2, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.checkParser:(Lorg/joda/time/format/DateTimeParser;)V` @kind direct;
  #L3c37f6.  v0:= 2I;
  #L3c37f8.  v0:= new `org.joda.time.format.InternalParser`[v0];
  #L3c37fc.  call temp:= `of`(v3) @signature `Lorg/joda/time/format/DateTimeParserInternalParser;.of:(Lorg/joda/time/format/DateTimeParser;)Lorg/joda/time/format/InternalParser;` @kind static;
  #L3c3802.  v3:= temp @kind object;
  #L3c3804.  v1:= 0I;
  #L3c3806.  v0[v1]:= v3 @kind object;
  #L3c380a.  v3:= 1I;
  #L3c380c.  v1:= 0I;
  #L3c380e.  v0[v3]:= v1 @kind object;
  #L3c3812.  v3:= new `org.joda.time.format.DateTimeFormatterBuilder$MatchingParser`;
  #L3c3816.  call `<init>`(v3, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$MatchingParser;.<init>:([Lorg/joda/time/format/InternalParser;)V` @kind direct;
  #L3c381c.  call temp:= `append0`(v2, v1, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c3822.  v3:= temp @kind object;
  #L3c3824.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendPattern`(`org.joda.time.format.DateTimeFormatterBuilder` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendPattern:(Ljava/lang/String;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c3838.  call `appendPatternTo`(v0, v1) @signature `Lorg/joda/time/format/DateTimeFormat;.appendPatternTo:(Lorg/joda/time/format/DateTimeFormatterBuilder;Ljava/lang/String;)V` @kind static;
  #L3c383e.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendSecondOfDay`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendSecondOfDay:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3850.  call temp:= `secondOfDay`() @signature `Lorg/joda/time/DateTimeFieldType;.secondOfDay:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c3856.  v0:= temp @kind object;
  #L3c3858.  v1:= 5I;
  #L3c385a.  call temp:= `appendDecimal`(v2, v0, v3, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3860.  v3:= temp @kind object;
  #L3c3862.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendSecondOfMinute`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendSecondOfMinute:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3874.  call temp:= `secondOfMinute`() @signature `Lorg/joda/time/DateTimeFieldType;.secondOfMinute:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c387a.  v0:= temp @kind object;
  #L3c387c.  v1:= 2I;
  #L3c387e.  call temp:= `appendDecimal`(v2, v0, v3, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3884.  v3:= temp @kind object;
  #L3c3886.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendShortText`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `org.joda.time.DateTimeFieldType` v3 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendShortText:(Lorg/joda/time/DateTimeFieldType;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3898.  if v3 == 0 then goto L3c38b2;
  #L3c389c.  v0:= new `org.joda.time.format.DateTimeFormatterBuilder$TextField`;
  #L3c38a0.  v1:= 1I;
  #L3c38a2.  call `<init>`(v0, v3, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$TextField;.<init>:(Lorg/joda/time/DateTimeFieldType;Z)V` @kind direct;
  #L3c38a8.  call temp:= `append0`(v2, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Ljava/lang/Object;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c38ae.  v3:= temp @kind object;
  #L3c38b0.  return v3 @kind object;
  #L3c38b2.  v3:= new `java.lang.IllegalArgumentException`;
  #L3c38b6.  v0:= "Field type must not be null" @kind object;
  #L3c38ba.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c38c0.  throw v3;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendSignedDecimal`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `org.joda.time.DateTimeFieldType` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendSignedDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c38d4.  if v3 == 0 then goto L3c3920;
  #L3c38d8.  if v5 >= v4 then goto L3c38de;
  #L3c38dc.  v5:= v4;
  #L3c38de.  if v4 < 0 then goto L3c3914;
  #L3c38e2.  if v5 <= 0 then goto L3c3914;
  #L3c38e6.  v0:= 1I;
  #L3c38e8.  if v4 > v0 then goto L3c3900;
  #L3c38ec.  v4:= new `org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber`;
  #L3c38f0.  call `<init>`(v4, v3, v5, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$UnpaddedNumber;.<init>:(Lorg/joda/time/DateTimeFieldType;IZ)V` @kind direct;
  #L3c38f6.  call temp:= `append0`(v2, v4) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Ljava/lang/Object;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c38fc.  v3:= temp @kind object;
  #L3c38fe.  return v3 @kind object;
  #L3c3900.  v1:= new `org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber`;
  #L3c3904.  call `<init>`(v1, v3, v5, v0, v4) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$PaddedNumber;.<init>:(Lorg/joda/time/DateTimeFieldType;IZI)V` @kind direct;
  #L3c390a.  call temp:= `append0`(v2, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Ljava/lang/Object;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c3910.  v3:= temp @kind object;
  #L3c3912.  return v3 @kind object;
  #L3c3914.  v3:= new `java.lang.IllegalArgumentException`;
  #L3c3918.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3c391e.  throw v3;
  #L3c3920.  v3:= new `java.lang.IllegalArgumentException`;
  #L3c3924.  v4:= "Field type must not be null" @kind object;
  #L3c3928.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c392e.  throw v3;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendText`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `org.joda.time.DateTimeFieldType` v3 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendText:(Lorg/joda/time/DateTimeFieldType;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3940.  if v3 == 0 then goto L3c395a;
  #L3c3944.  v0:= new `org.joda.time.format.DateTimeFormatterBuilder$TextField`;
  #L3c3948.  v1:= 0I;
  #L3c394a.  call `<init>`(v0, v3, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$TextField;.<init>:(Lorg/joda/time/DateTimeFieldType;Z)V` @kind direct;
  #L3c3950.  call temp:= `append0`(v2, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Ljava/lang/Object;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c3956.  v3:= temp @kind object;
  #L3c3958.  return v3 @kind object;
  #L3c395a.  v3:= new `java.lang.IllegalArgumentException`;
  #L3c395e.  v0:= "Field type must not be null" @kind object;
  #L3c3962.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c3968.  throw v3;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendTimeZoneId`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendTimeZoneId:()Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c397c.  v0:= `@@org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.INSTANCE` @type ^`org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId` @kind object;
  #L3c3980.  call temp:= `append0`(v1, v0, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c3986.  v0:= temp @kind object;
  #L3c3988.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendTimeZoneName`(`org.joda.time.format.DateTimeFormatterBuilder` v3 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendTimeZoneName:()Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3c399c.  v0:= new `org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName`;
  #L3c39a0.  v1:= 0I;
  #L3c39a2.  v2:= 0I;
  #L3c39a4.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneName;.<init>:(ILjava/util/Map;)V` @kind direct;
  #L3c39aa.  call temp:= `append0`(v3, v0, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c39b0.  v0:= temp @kind object;
  #L3c39b2.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendTimeZoneName`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendTimeZoneName:(Ljava/util/Map;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c39c4.  v0:= new `org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName`;
  #L3c39c8.  v1:= 0I;
  #L3c39ca.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneName;.<init>:(ILjava/util/Map;)V` @kind direct;
  #L3c39d0.  call temp:= `append0`(v2, v0, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c39d6.  v3:= temp @kind object;
  #L3c39d8.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendTimeZoneOffset`(`org.joda.time.format.DateTimeFormatterBuilder` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object, `boolean` v10 , `int` v11 , `int` v12 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendTimeZoneOffset:(Ljava/lang/String;Ljava/lang/String;ZII)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3c3a1c.  v6:= new `org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset`;
  #L3c3a20.  v0:= v6 @kind object;
  #L3c3a22.  v1:= v8 @kind object;
  #L3c3a24.  v2:= v9 @kind object;
  #L3c3a26.  v3:= v10;
  #L3c3a28.  v4:= v11;
  #L3c3a2a.  v5:= v12;
  #L3c3a2c.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneOffset;.<init>:(Ljava/lang/String;Ljava/lang/String;ZII)V` @kind direct;
  #L3c3a32.  call temp:= `append0`(v7, v6) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Ljava/lang/Object;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c3a38.  v8:= temp @kind object;
  #L3c3a3a.  return v8 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendTimeZoneOffset`(`org.joda.time.format.DateTimeFormatterBuilder` v7 @kind this, `java.lang.String` v8 @kind object, `boolean` v9 , `int` v10 , `int` v11 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendTimeZoneOffset:(Ljava/lang/String;ZII)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3c39ec.  v6:= new `org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset`;
  #L3c39f0.  v0:= v6 @kind object;
  #L3c39f2.  v1:= v8 @kind object;
  #L3c39f4.  v2:= v8 @kind object;
  #L3c39f6.  v3:= v9;
  #L3c39f8.  v4:= v10;
  #L3c39fa.  v5:= v11;
  #L3c39fc.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneOffset;.<init>:(Ljava/lang/String;Ljava/lang/String;ZII)V` @kind direct;
  #L3c3a02.  call temp:= `append0`(v7, v6) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Ljava/lang/Object;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c3a08.  v8:= temp @kind object;
  #L3c3a0a.  return v8 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendTimeZoneShortName`(`org.joda.time.format.DateTimeFormatterBuilder` v3 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendTimeZoneShortName:()Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3c3a4c.  v0:= new `org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName`;
  #L3c3a50.  v1:= 1I;
  #L3c3a52.  v2:= 0I;
  #L3c3a54.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneName;.<init>:(ILjava/util/Map;)V` @kind direct;
  #L3c3a5a.  call temp:= `append0`(v3, v0, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c3a60.  v0:= temp @kind object;
  #L3c3a62.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendTimeZoneShortName`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendTimeZoneShortName:(Ljava/util/Map;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3a74.  v0:= new `org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName`;
  #L3c3a78.  v1:= 1I;
  #L3c3a7a.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneName;.<init>:(ILjava/util/Map;)V` @kind direct;
  #L3c3a80.  call temp:= `append0`(v2, v0, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c3a86.  v3:= temp @kind object;
  #L3c3a88.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendTwoDigitWeekyear`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendTwoDigitWeekyear:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3a9c.  v0:= 0I;
  #L3c3a9e.  call temp:= `appendTwoDigitWeekyear`(v1, v2, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendTwoDigitWeekyear:(IZ)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3aa4.  v2:= temp @kind object;
  #L3c3aa6.  return v2 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendTwoDigitWeekyear`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `int` v3 , `boolean` v4 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendTwoDigitWeekyear:(IZ)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3ab8.  v0:= new `org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear`;
  #L3c3abc.  call temp:= `weekyear`() @signature `Lorg/joda/time/DateTimeFieldType;.weekyear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c3ac2.  v1:= temp @kind object;
  #L3c3ac4.  call `<init>`(v0, v1, v3, v4) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$TwoDigitYear;.<init>:(Lorg/joda/time/DateTimeFieldType;IZ)V` @kind direct;
  #L3c3aca.  call temp:= `append0`(v2, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Ljava/lang/Object;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c3ad0.  v3:= temp @kind object;
  #L3c3ad2.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendTwoDigitYear`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendTwoDigitYear:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3ae4.  v0:= 0I;
  #L3c3ae6.  call temp:= `appendTwoDigitYear`(v1, v2, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendTwoDigitYear:(IZ)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3aec.  v2:= temp @kind object;
  #L3c3aee.  return v2 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendTwoDigitYear`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `int` v3 , `boolean` v4 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendTwoDigitYear:(IZ)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3b00.  v0:= new `org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear`;
  #L3c3b04.  call temp:= `year`() @signature `Lorg/joda/time/DateTimeFieldType;.year:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c3b0a.  v1:= temp @kind object;
  #L3c3b0c.  call `<init>`(v0, v1, v3, v4) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder$TwoDigitYear;.<init>:(Lorg/joda/time/DateTimeFieldType;IZ)V` @kind direct;
  #L3c3b12.  call temp:= `append0`(v2, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append0:(Ljava/lang/Object;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind direct;
  #L3c3b18.  v3:= temp @kind object;
  #L3c3b1a.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendWeekOfWeekyear`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this, `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendWeekOfWeekyear:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3b2c.  call temp:= `weekOfWeekyear`() @signature `Lorg/joda/time/DateTimeFieldType;.weekOfWeekyear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c3b32.  v0:= temp @kind object;
  #L3c3b34.  v1:= 2I;
  #L3c3b36.  call temp:= `appendDecimal`(v2, v0, v3, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3b3c.  v3:= temp @kind object;
  #L3c3b3e.  return v3 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendWeekyear`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendWeekyear:(II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3b50.  call temp:= `weekyear`() @signature `Lorg/joda/time/DateTimeFieldType;.weekyear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c3b56.  v0:= temp @kind object;
  #L3c3b58.  call temp:= `appendSignedDecimal`(v1, v0, v2, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendSignedDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3b5e.  v2:= temp @kind object;
  #L3c3b60.  return v2 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendYear`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendYear:(II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3b74.  call temp:= `year`() @signature `Lorg/joda/time/DateTimeFieldType;.year:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c3b7a.  v0:= temp @kind object;
  #L3c3b7c.  call temp:= `appendSignedDecimal`(v1, v0, v2, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendSignedDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3b82.  v2:= temp @kind object;
  #L3c3b84.  return v2 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendYearOfCentury`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendYearOfCentury:(II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3b98.  call temp:= `yearOfCentury`() @signature `Lorg/joda/time/DateTimeFieldType;.yearOfCentury:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c3b9e.  v0:= temp @kind object;
  #L3c3ba0.  call temp:= `appendDecimal`(v1, v0, v2, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3ba6.  v2:= temp @kind object;
  #L3c3ba8.  return v2 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatterBuilder` `appendYearOfEra`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendYearOfEra:(II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3bbc.  call temp:= `yearOfEra`() @signature `Lorg/joda/time/DateTimeFieldType;.yearOfEra:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c3bc2.  v0:= temp @kind object;
  #L3c3bc4.  call temp:= `appendDecimal`(v1, v0, v2, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDecimal:(Lorg/joda/time/DateTimeFieldType;II)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c3bca.  v2:= temp @kind object;
  #L3c3bcc.  return v2 @kind object;
}
procedure `boolean` `canBuildFormatter`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.canBuildFormatter:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c2d7c.  call temp:= `getFormatter`(v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.getFormatter:()Ljava/lang/Object;` @kind direct;
  #L3c2d82.  v0:= temp @kind object;
  #L3c2d84.  call temp:= `isFormatter`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.isFormatter:(Ljava/lang/Object;)Z` @kind direct;
  #L3c2d8a.  v0:= temp;
  #L3c2d8c.  return v0;
}
procedure `boolean` `canBuildParser`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.canBuildParser:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c2da0.  call temp:= `getFormatter`(v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.getFormatter:()Ljava/lang/Object;` @kind direct;
  #L3c2da6.  v0:= temp @kind object;
  #L3c2da8.  call temp:= `isParser`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.isParser:(Ljava/lang/Object;)Z` @kind direct;
  #L3c2dae.  v0:= temp;
  #L3c2db0.  return v0;
}
procedure `boolean` `canBuildPrinter`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.canBuildPrinter:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c2dc4.  call temp:= `getFormatter`(v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.getFormatter:()Ljava/lang/Object;` @kind direct;
  #L3c2dca.  v0:= temp @kind object;
  #L3c2dcc.  call temp:= `isPrinter`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.isPrinter:(Ljava/lang/Object;)Z` @kind direct;
  #L3c2dd2.  v0:= temp;
  #L3c2dd4.  return v0;
}
procedure `void` `clear`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3d08.  v0:= 0I;
  #L3c3d0a.  v1.`org.joda.time.format.DateTimeFormatterBuilder.iFormatter` @type ^`java.lang.Object` := v0 @kind object;
  #L3c3d0e.  v0:= v1.`org.joda.time.format.DateTimeFormatterBuilder.iElementPairs` @type ^`java.util.ArrayList` @kind object;
  #L3c3d12.  call `clear`(v0) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L3c3d18.  return @kind void;
}
procedure `org.joda.time.format.DateTimeFormatter` `toFormatter`(`org.joda.time.format.DateTimeFormatterBuilder` v4 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.toFormatter:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c3024.  call temp:= `getFormatter`(v4) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.getFormatter:()Ljava/lang/Object;` @kind direct;
  #L3c302a.  v0:= temp @kind object;
  #L3c302c.  call temp:= `isPrinter`(v4, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.isPrinter:(Ljava/lang/Object;)Z` @kind direct;
  #L3c3032.  v1:= temp;
  #L3c3034.  v2:= 0I;
  #L3c3036.  if v1 == 0 then goto L3c3042;
  #L3c303a.  v1:= v0 @kind object;
  #L3c303c.  v1:= (`org.joda.time.format.InternalPrinter`) v1 @kind object;
  #L3c3040.  goto L3c3044;
  #L3c3042.  v1:= v2 @kind object;
  #L3c3044.  call temp:= `isParser`(v4, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.isParser:(Ljava/lang/Object;)Z` @kind direct;
  #L3c304a.  v3:= temp;
  #L3c304c.  if v3 == 0 then goto L3c3056;
  #L3c3050.  v2:= v0 @kind object;
  #L3c3052.  v2:= (`org.joda.time.format.InternalParser`) v2 @kind object;
  #L3c3056.  if v1 != 0 then goto L3c3070;
  #L3c305a.  if v2 == 0 then goto L3c3060;
  #L3c305e.  goto L3c3070;
  #L3c3060.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3c3064.  v1:= "Both printing and parsing not supported" @kind object;
  #L3c3068.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c306e.  throw v0;
  #L3c3070.  v0:= new `org.joda.time.format.DateTimeFormatter`;
  #L3c3074.  call `<init>`(v0, v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.<init>:(Lorg/joda/time/format/InternalPrinter;Lorg/joda/time/format/InternalParser;)V` @kind direct;
  #L3c307a.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeParser` `toParser`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.toParser:()Lorg/joda/time/format/DateTimeParser;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3be0.  call temp:= `getFormatter`(v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.getFormatter:()Ljava/lang/Object;` @kind direct;
  #L3c3be6.  v0:= temp @kind object;
  #L3c3be8.  call temp:= `isParser`(v2, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.isParser:(Ljava/lang/Object;)Z` @kind direct;
  #L3c3bee.  v1:= temp;
  #L3c3bf0.  if v1 == 0 then goto L3c3c02;
  #L3c3bf4.  v0:= (`org.joda.time.format.InternalParser`) v0 @kind object;
  #L3c3bf8.  call temp:= `of`(v0) @signature `Lorg/joda/time/format/InternalParserDateTimeParser;.of:(Lorg/joda/time/format/InternalParser;)Lorg/joda/time/format/DateTimeParser;` @kind static;
  #L3c3bfe.  v0:= temp @kind object;
  #L3c3c00.  return v0 @kind object;
  #L3c3c02.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3c3c06.  v1:= "Parsing is not supported" @kind object;
  #L3c3c0a.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c3c10.  throw v0;
}
procedure `org.joda.time.format.DateTimePrinter` `toPrinter`(`org.joda.time.format.DateTimeFormatterBuilder` v2 @kind this) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.toPrinter:()Lorg/joda/time/format/DateTimePrinter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3c24.  call temp:= `getFormatter`(v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.getFormatter:()Ljava/lang/Object;` @kind direct;
  #L3c3c2a.  v0:= temp @kind object;
  #L3c3c2c.  call temp:= `isPrinter`(v2, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.isPrinter:(Ljava/lang/Object;)Z` @kind direct;
  #L3c3c32.  v1:= temp;
  #L3c3c34.  if v1 == 0 then goto L3c3c46;
  #L3c3c38.  v0:= (`org.joda.time.format.InternalPrinter`) v0 @kind object;
  #L3c3c3c.  call temp:= `of`(v0) @signature `Lorg/joda/time/format/InternalPrinterDateTimePrinter;.of:(Lorg/joda/time/format/InternalPrinter;)Lorg/joda/time/format/DateTimePrinter;` @kind static;
  #L3c3c42.  v0:= temp @kind object;
  #L3c3c44.  return v0 @kind object;
  #L3c3c46.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3c3c4a.  v1:= "Printing is not supported" @kind object;
  #L3c3c4e.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c3c54.  throw v0;
}
