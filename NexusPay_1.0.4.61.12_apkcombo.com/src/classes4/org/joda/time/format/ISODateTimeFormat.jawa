record `org.joda.time.format.ISODateTimeFormat` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`org.joda.time.format.ISODateTimeFormat` v0 @kind this) @signature `Lorg/joda/time/format/ISODateTimeFormat;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3c8760.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c8766.  return @kind void;
}
procedure `void` `appendSeparator`(`org.joda.time.format.DateTimeFormatterBuilder` v0 @kind object, `boolean` v1 ) @signature `Lorg/joda/time/format/ISODateTimeFormat;.appendSeparator:(Lorg/joda/time/format/DateTimeFormatterBuilder;Z)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3c8778.  if v1 == 0 then goto L3c8786;
  #L3c877c.  v1:= 45I;
  #L3c8780.  call temp:= `appendLiteral`(v0, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c8786.  return @kind void;
}
procedure `org.joda.time.format.DateTimeFormatter` `basicDate`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.basicDate:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c801c.  call temp:= `access$2300`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$2300:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c8022.  v0:= temp @kind object;
  #L3c8024.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `basicDateTime`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.basicDateTime:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8038.  call temp:= `access$2800`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$2800:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c803e.  v0:= temp @kind object;
  #L3c8040.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `basicDateTimeNoMillis`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.basicDateTimeNoMillis:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8054.  call temp:= `access$2900`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$2900:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c805a.  v0:= temp @kind object;
  #L3c805c.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `basicOrdinalDate`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.basicOrdinalDate:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8070.  call temp:= `access$3000`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$3000:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c8076.  v0:= temp @kind object;
  #L3c8078.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `basicOrdinalDateTime`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.basicOrdinalDateTime:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c808c.  call temp:= `access$3100`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$3100:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c8092.  v0:= temp @kind object;
  #L3c8094.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `basicOrdinalDateTimeNoMillis`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.basicOrdinalDateTimeNoMillis:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c80a8.  call temp:= `access$3200`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$3200:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c80ae.  v0:= temp @kind object;
  #L3c80b0.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `basicTTime`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.basicTTime:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c80c4.  call temp:= `access$2600`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$2600:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c80ca.  v0:= temp @kind object;
  #L3c80cc.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `basicTTimeNoMillis`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.basicTTimeNoMillis:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c80e0.  call temp:= `access$2700`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$2700:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c80e6.  v0:= temp @kind object;
  #L3c80e8.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `basicTime`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.basicTime:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c80fc.  call temp:= `access$2400`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$2400:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c8102.  v0:= temp @kind object;
  #L3c8104.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `basicTimeNoMillis`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.basicTimeNoMillis:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8118.  call temp:= `access$2500`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$2500:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c811e.  v0:= temp @kind object;
  #L3c8120.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `basicWeekDate`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.basicWeekDate:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8134.  call temp:= `access$3300`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$3300:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c813a.  v0:= temp @kind object;
  #L3c813c.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `basicWeekDateTime`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.basicWeekDateTime:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8150.  call temp:= `access$3400`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$3400:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c8156.  v0:= temp @kind object;
  #L3c8158.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `basicWeekDateTimeNoMillis`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.basicWeekDateTimeNoMillis:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c816c.  call temp:= `access$3500`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$3500:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c8172.  v0:= temp @kind object;
  #L3c8174.  return v0 @kind object;
}
procedure `void` `checkNotStrictISO`(`java.util.Collection` v2 @kind object, `boolean` v3 ) @signature `Lorg/joda/time/format/ISODateTimeFormat;.checkNotStrictISO:(Ljava/util/Collection;Z)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3c8798.  if v3 != 0 then goto L3c879e;
  #L3c879c.  return @kind void;
  #L3c879e.  v3:= new `java.lang.IllegalArgumentException`;
  #L3c87a2.  v0:= new `java.lang.StringBuilder`;
  #L3c87a6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c87ac.  v1:= "No valid ISO8601 format for fields: " @kind object;
  #L3c87b0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c87b6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c87bc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c87c2.  v2:= temp @kind object;
  #L3c87c4.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c87ca.  throw v3;
}
procedure `org.joda.time.format.DateTimeFormatter` `date`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.date:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8188.  call temp:= `yearMonthDay`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.yearMonthDay:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c818e.  v0:= temp @kind object;
  #L3c8190.  return v0 @kind object;
}
procedure `boolean` `dateByMonth`(`org.joda.time.format.DateTimeFormatterBuilder` v4 @kind object, `java.util.Collection` v5 @kind object, `boolean` v6 , `boolean` v7 ) @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateByMonth:(Lorg/joda/time/format/DateTimeFormatterBuilder;Ljava/util/Collection;ZZ)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c7d34.  call temp:= `year`() @signature `Lorg/joda/time/DateTimeFieldType;.year:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c7d3a.  v0:= temp @kind object;
  #L3c7d3c.  call temp:= `remove`(v5, v0) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c7d42.  v0:= temp;
  #L3c7d44.  v1:= 1I;
  #L3c7d46.  v2:= 2I;
  #L3c7d48.  v3:= 45I;
  #L3c7d4c.  if v0 == 0 then goto L3c7ddc;
  #L3c7d50.  call temp:= `access$000`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$000:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c7d56.  v0:= temp @kind object;
  #L3c7d58.  call temp:= `append`(v4, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append:(Lorg/joda/time/format/DateTimeFormatter;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7d5e.  call temp:= `monthOfYear`() @signature `Lorg/joda/time/DateTimeFieldType;.monthOfYear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c7d64.  v0:= temp @kind object;
  #L3c7d66.  call temp:= `remove`(v5, v0) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c7d6c.  v0:= temp;
  #L3c7d6e.  if v0 == 0 then goto L3c7dae;
  #L3c7d72.  call temp:= `dayOfMonth`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfMonth:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c7d78.  v7:= temp @kind object;
  #L3c7d7a.  call temp:= `remove`(v5, v7) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c7d80.  v5:= temp;
  #L3c7d82.  if v5 == 0 then goto L3c7da0;
  #L3c7d86.  call `appendSeparator`(v4, v6) @signature `Lorg/joda/time/format/ISODateTimeFormat;.appendSeparator:(Lorg/joda/time/format/DateTimeFormatterBuilder;Z)V` @kind static;
  #L3c7d8c.  call temp:= `appendMonthOfYear`(v4, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendMonthOfYear:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7d92.  call `appendSeparator`(v4, v6) @signature `Lorg/joda/time/format/ISODateTimeFormat;.appendSeparator:(Lorg/joda/time/format/DateTimeFormatterBuilder;Z)V` @kind static;
  #L3c7d98.  call temp:= `appendDayOfMonth`(v4, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDayOfMonth:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7d9e.  goto L3c7e50;
  #L3c7da0.  call temp:= `appendLiteral`(v4, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7da6.  call temp:= `appendMonthOfYear`(v4, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendMonthOfYear:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7dac.  goto L3c7e52;
  #L3c7dae.  call temp:= `dayOfMonth`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfMonth:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c7db4.  v6:= temp @kind object;
  #L3c7db6.  call temp:= `remove`(v5, v6) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c7dbc.  v6:= temp;
  #L3c7dbe.  if v6 == 0 then goto L3c7e52;
  #L3c7dc2.  call `checkNotStrictISO`(v5, v7) @signature `Lorg/joda/time/format/ISODateTimeFormat;.checkNotStrictISO:(Ljava/util/Collection;Z)V` @kind static;
  #L3c7dc8.  call temp:= `appendLiteral`(v4, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7dce.  call temp:= `appendLiteral`(v4, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7dd4.  call temp:= `appendDayOfMonth`(v4, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDayOfMonth:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7dda.  goto L3c7e50;
  #L3c7ddc.  call temp:= `monthOfYear`() @signature `Lorg/joda/time/DateTimeFieldType;.monthOfYear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c7de2.  v7:= temp @kind object;
  #L3c7de4.  call temp:= `remove`(v5, v7) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c7dea.  v7:= temp;
  #L3c7dec.  if v7 == 0 then goto L3c7e24;
  #L3c7df0.  call temp:= `appendLiteral`(v4, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7df6.  call temp:= `appendLiteral`(v4, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7dfc.  call temp:= `appendMonthOfYear`(v4, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendMonthOfYear:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7e02.  call temp:= `dayOfMonth`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfMonth:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c7e08.  v7:= temp @kind object;
  #L3c7e0a.  call temp:= `remove`(v5, v7) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c7e10.  v5:= temp;
  #L3c7e12.  if v5 == 0 then goto L3c7e52;
  #L3c7e16.  call `appendSeparator`(v4, v6) @signature `Lorg/joda/time/format/ISODateTimeFormat;.appendSeparator:(Lorg/joda/time/format/DateTimeFormatterBuilder;Z)V` @kind static;
  #L3c7e1c.  call temp:= `appendDayOfMonth`(v4, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDayOfMonth:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7e22.  goto L3c7e50;
  #L3c7e24.  call temp:= `dayOfMonth`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfMonth:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c7e2a.  v6:= temp @kind object;
  #L3c7e2c.  call temp:= `remove`(v5, v6) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c7e32.  v5:= temp;
  #L3c7e34.  if v5 == 0 then goto L3c7e50;
  #L3c7e38.  call temp:= `appendLiteral`(v4, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7e3e.  call temp:= `appendLiteral`(v4, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7e44.  call temp:= `appendLiteral`(v4, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7e4a.  call temp:= `appendDayOfMonth`(v4, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDayOfMonth:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7e50.  v1:= 0I;
  #L3c7e52.  return v1;
}
procedure `boolean` `dateByOrdinal`(`org.joda.time.format.DateTimeFormatterBuilder` v1 @kind object, `java.util.Collection` v2 @kind object, `boolean` v3 , `boolean` v4 ) @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateByOrdinal:(Lorg/joda/time/format/DateTimeFormatterBuilder;Ljava/util/Collection;ZZ)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3c7e64.  call temp:= `year`() @signature `Lorg/joda/time/DateTimeFieldType;.year:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c7e6a.  v4:= temp @kind object;
  #L3c7e6c.  call temp:= `remove`(v2, v4) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c7e72.  v4:= temp;
  #L3c7e74.  v0:= 3I;
  #L3c7e76.  if v4 == 0 then goto L3c7eae;
  #L3c7e7a.  call temp:= `access$000`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$000:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c7e80.  v4:= temp @kind object;
  #L3c7e82.  call temp:= `append`(v1, v4) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append:(Lorg/joda/time/format/DateTimeFormatter;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7e88.  call temp:= `dayOfYear`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfYear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c7e8e.  v4:= temp @kind object;
  #L3c7e90.  call temp:= `remove`(v2, v4) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c7e96.  v2:= temp;
  #L3c7e98.  if v2 == 0 then goto L3c7eaa;
  #L3c7e9c.  call `appendSeparator`(v1, v3) @signature `Lorg/joda/time/format/ISODateTimeFormat;.appendSeparator:(Lorg/joda/time/format/DateTimeFormatterBuilder;Z)V` @kind static;
  #L3c7ea2.  call temp:= `appendDayOfYear`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDayOfYear:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7ea8.  goto L3c7ed2;
  #L3c7eaa.  v1:= 1I;
  #L3c7eac.  goto L3c7ed4;
  #L3c7eae.  call temp:= `dayOfYear`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfYear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c7eb4.  v3:= temp @kind object;
  #L3c7eb6.  call temp:= `remove`(v2, v3) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c7ebc.  v2:= temp;
  #L3c7ebe.  if v2 == 0 then goto L3c7ed2;
  #L3c7ec2.  v2:= 45I;
  #L3c7ec6.  call temp:= `appendLiteral`(v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7ecc.  call temp:= `appendDayOfYear`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDayOfYear:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7ed2.  v1:= 0I;
  #L3c7ed4.  return v1;
}
procedure `boolean` `dateByWeek`(`org.joda.time.format.DateTimeFormatterBuilder` v5 @kind object, `java.util.Collection` v6 @kind object, `boolean` v7 , `boolean` v8 ) @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateByWeek:(Lorg/joda/time/format/DateTimeFormatterBuilder;Ljava/util/Collection;ZZ)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3c7ee8.  call temp:= `weekyear`() @signature `Lorg/joda/time/DateTimeFieldType;.weekyear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c7eee.  v0:= temp @kind object;
  #L3c7ef0.  call temp:= `remove`(v6, v0) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c7ef6.  v0:= temp;
  #L3c7ef8.  v1:= 2I;
  #L3c7efa.  v2:= 87I;
  #L3c7efe.  v3:= 45I;
  #L3c7f02.  v4:= 1I;
  #L3c7f04.  if v0 == 0 then goto L3c7f92;
  #L3c7f08.  call temp:= `access$100`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$100:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c7f0e.  v0:= temp @kind object;
  #L3c7f10.  call temp:= `append`(v5, v0) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append:(Lorg/joda/time/format/DateTimeFormatter;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7f16.  call temp:= `weekOfWeekyear`() @signature `Lorg/joda/time/DateTimeFieldType;.weekOfWeekyear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c7f1c.  v0:= temp @kind object;
  #L3c7f1e.  call temp:= `remove`(v6, v0) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c7f24.  v0:= temp;
  #L3c7f26.  if v0 == 0 then goto L3c7f5e;
  #L3c7f2a.  call `appendSeparator`(v5, v7) @signature `Lorg/joda/time/format/ISODateTimeFormat;.appendSeparator:(Lorg/joda/time/format/DateTimeFormatterBuilder;Z)V` @kind static;
  #L3c7f30.  call temp:= `appendLiteral`(v5, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7f36.  call temp:= `appendWeekOfWeekyear`(v5, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendWeekOfWeekyear:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7f3c.  call temp:= `dayOfWeek`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfWeek:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c7f42.  v8:= temp @kind object;
  #L3c7f44.  call temp:= `remove`(v6, v8) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c7f4a.  v6:= temp;
  #L3c7f4c.  if v6 == 0 then goto L3c8008;
  #L3c7f50.  call `appendSeparator`(v5, v7) @signature `Lorg/joda/time/format/ISODateTimeFormat;.appendSeparator:(Lorg/joda/time/format/DateTimeFormatterBuilder;Z)V` @kind static;
  #L3c7f56.  call temp:= `appendDayOfWeek`(v5, v4) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDayOfWeek:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7f5c.  goto L3c8006;
  #L3c7f5e.  call temp:= `dayOfWeek`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfWeek:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c7f64.  v0:= temp @kind object;
  #L3c7f66.  call temp:= `remove`(v6, v0) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c7f6c.  v0:= temp;
  #L3c7f6e.  if v0 == 0 then goto L3c8008;
  #L3c7f72.  call `checkNotStrictISO`(v6, v8) @signature `Lorg/joda/time/format/ISODateTimeFormat;.checkNotStrictISO:(Ljava/util/Collection;Z)V` @kind static;
  #L3c7f78.  call `appendSeparator`(v5, v7) @signature `Lorg/joda/time/format/ISODateTimeFormat;.appendSeparator:(Lorg/joda/time/format/DateTimeFormatterBuilder;Z)V` @kind static;
  #L3c7f7e.  call temp:= `appendLiteral`(v5, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7f84.  call temp:= `appendLiteral`(v5, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7f8a.  call temp:= `appendDayOfWeek`(v5, v4) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDayOfWeek:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7f90.  goto L3c8006;
  #L3c7f92.  call temp:= `weekOfWeekyear`() @signature `Lorg/joda/time/DateTimeFieldType;.weekOfWeekyear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c7f98.  v8:= temp @kind object;
  #L3c7f9a.  call temp:= `remove`(v6, v8) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c7fa0.  v8:= temp;
  #L3c7fa2.  if v8 == 0 then goto L3c7fda;
  #L3c7fa6.  call temp:= `appendLiteral`(v5, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7fac.  call temp:= `appendLiteral`(v5, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7fb2.  call temp:= `appendWeekOfWeekyear`(v5, v1) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendWeekOfWeekyear:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7fb8.  call temp:= `dayOfWeek`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfWeek:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c7fbe.  v8:= temp @kind object;
  #L3c7fc0.  call temp:= `remove`(v6, v8) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c7fc6.  v6:= temp;
  #L3c7fc8.  if v6 == 0 then goto L3c8008;
  #L3c7fcc.  call `appendSeparator`(v5, v7) @signature `Lorg/joda/time/format/ISODateTimeFormat;.appendSeparator:(Lorg/joda/time/format/DateTimeFormatterBuilder;Z)V` @kind static;
  #L3c7fd2.  call temp:= `appendDayOfWeek`(v5, v4) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDayOfWeek:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7fd8.  goto L3c8006;
  #L3c7fda.  call temp:= `dayOfWeek`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfWeek:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c7fe0.  v7:= temp @kind object;
  #L3c7fe2.  call temp:= `remove`(v6, v7) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c7fe8.  v6:= temp;
  #L3c7fea.  if v6 == 0 then goto L3c8006;
  #L3c7fee.  call temp:= `appendLiteral`(v5, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7ff4.  call temp:= `appendLiteral`(v5, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c7ffa.  call temp:= `appendLiteral`(v5, v3) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c8000.  call temp:= `appendDayOfWeek`(v5, v4) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendDayOfWeek:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c8006.  v4:= 0I;
  #L3c8008.  return v4;
}
procedure `org.joda.time.format.DateTimeFormatter` `dateElementParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateElementParser:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c81a4.  call temp:= `access$400`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$400:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c81aa.  v0:= temp @kind object;
  #L3c81ac.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `dateHour`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateHour:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c81c0.  call temp:= `access$4400`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$4400:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c81c6.  v0:= temp @kind object;
  #L3c81c8.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `dateHourMinute`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateHourMinute:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c81dc.  call temp:= `access$4500`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$4500:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c81e2.  v0:= temp @kind object;
  #L3c81e4.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `dateHourMinuteSecond`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateHourMinuteSecond:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c81f8.  call temp:= `access$4600`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$4600:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c81fe.  v0:= temp @kind object;
  #L3c8200.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `dateHourMinuteSecondFraction`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateHourMinuteSecondFraction:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8214.  call temp:= `access$4800`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$4800:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c821a.  v0:= temp @kind object;
  #L3c821c.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `dateHourMinuteSecondMillis`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateHourMinuteSecondMillis:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8230.  call temp:= `access$4700`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$4700:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c8236.  v0:= temp @kind object;
  #L3c8238.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `dateOptionalTimeParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateOptionalTimeParser:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c824c.  call temp:= `access$900`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$900:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c8252.  v0:= temp @kind object;
  #L3c8254.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `dateParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateParser:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8268.  call temp:= `access$200`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$200:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c826e.  v0:= temp @kind object;
  #L3c8270.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `dateTime`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateTime:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8284.  call temp:= `access$1500`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$1500:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c828a.  v0:= temp @kind object;
  #L3c828c.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `dateTimeNoMillis`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateTimeNoMillis:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c82a0.  call temp:= `access$1600`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$1600:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c82a6.  v0:= temp @kind object;
  #L3c82a8.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `dateTimeParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateTimeParser:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c82bc.  call temp:= `access$800`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$800:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c82c2.  v0:= temp @kind object;
  #L3c82c4.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `forFields`(`java.util.Collection` v8 @kind object, `boolean` v9 , `boolean` v10 ) @signature `Lorg/joda/time/format/ISODateTimeFormat;.forFields:(Ljava/util/Collection;ZZ)Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3c82d8.  if v8 == 0 then goto L3c8456;
  #L3c82dc.  call temp:= `size`(v8) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L3c82e2.  v0:= temp;
  #L3c82e4.  if v0 == 0 then goto L3c8456;
  #L3c82e8.  v0:= new `java.util.HashSet`;
  #L3c82ec.  call `<init>`(v0, v8) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3c82f2.  call temp:= `size`(v0) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L3c82f8.  v1:= temp;
  #L3c82fa.  v7:= new `org.joda.time.format.DateTimeFormatterBuilder`;
  #L3c82fe.  call `<init>`(v7) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.<init>:()V` @kind direct;
  #L3c8304.  call temp:= `monthOfYear`() @signature `Lorg/joda/time/DateTimeFieldType;.monthOfYear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c830a.  v2:= temp @kind object;
  #L3c830c.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3c8312.  v2:= temp;
  #L3c8314.  v3:= 0I;
  #L3c8316.  v4:= 1I;
  #L3c8318.  if v2 == 0 then goto L3c8328;
  #L3c831c.  call temp:= `dateByMonth`(v7, v0, v9, v10) @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateByMonth:(Lorg/joda/time/format/DateTimeFormatterBuilder;Ljava/util/Collection;ZZ)Z` @kind static;
  #L3c8322.  v2:= temp;
  #L3c8324.  v5:= v2;
  #L3c8326.  goto L3c83ec;
  #L3c8328.  call temp:= `dayOfYear`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfYear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c832e.  v2:= temp @kind object;
  #L3c8330.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3c8336.  v2:= temp;
  #L3c8338.  if v2 == 0 then goto L3c8346;
  #L3c833c.  call temp:= `dateByOrdinal`(v7, v0, v9, v10) @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateByOrdinal:(Lorg/joda/time/format/DateTimeFormatterBuilder;Ljava/util/Collection;ZZ)Z` @kind static;
  #L3c8342.  v2:= temp;
  #L3c8344.  goto L3c8324;
  #L3c8346.  call temp:= `weekOfWeekyear`() @signature `Lorg/joda/time/DateTimeFieldType;.weekOfWeekyear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c834c.  v2:= temp @kind object;
  #L3c834e.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3c8354.  v2:= temp;
  #L3c8356.  if v2 == 0 then goto L3c8364;
  #L3c835a.  call temp:= `dateByWeek`(v7, v0, v9, v10) @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateByWeek:(Lorg/joda/time/format/DateTimeFormatterBuilder;Ljava/util/Collection;ZZ)Z` @kind static;
  #L3c8360.  v2:= temp;
  #L3c8362.  goto L3c8324;
  #L3c8364.  call temp:= `dayOfMonth`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfMonth:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c836a.  v2:= temp @kind object;
  #L3c836c.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3c8372.  v2:= temp;
  #L3c8374.  if v2 == 0 then goto L3c8382;
  #L3c8378.  call temp:= `dateByMonth`(v7, v0, v9, v10) @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateByMonth:(Lorg/joda/time/format/DateTimeFormatterBuilder;Ljava/util/Collection;ZZ)Z` @kind static;
  #L3c837e.  v2:= temp;
  #L3c8380.  goto L3c8324;
  #L3c8382.  call temp:= `dayOfWeek`() @signature `Lorg/joda/time/DateTimeFieldType;.dayOfWeek:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c8388.  v2:= temp @kind object;
  #L3c838a.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3c8390.  v2:= temp;
  #L3c8392.  if v2 == 0 then goto L3c83a0;
  #L3c8396.  call temp:= `dateByWeek`(v7, v0, v9, v10) @signature `Lorg/joda/time/format/ISODateTimeFormat;.dateByWeek:(Lorg/joda/time/format/DateTimeFormatterBuilder;Ljava/util/Collection;ZZ)Z` @kind static;
  #L3c839c.  v2:= temp;
  #L3c839e.  goto L3c8324;
  #L3c83a0.  call temp:= `year`() @signature `Lorg/joda/time/DateTimeFieldType;.year:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c83a6.  v2:= temp @kind object;
  #L3c83a8.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c83ae.  v2:= temp;
  #L3c83b0.  if v2 == 0 then goto L3c83c6;
  #L3c83b4.  call temp:= `access$000`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$000:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c83ba.  v2:= temp @kind object;
  #L3c83bc.  call temp:= `append`(v7, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append:(Lorg/joda/time/format/DateTimeFormatter;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c83c2.  v5:= 1I;
  #L3c83c4.  goto L3c83ec;
  #L3c83c6.  call temp:= `weekyear`() @signature `Lorg/joda/time/DateTimeFieldType;.weekyear:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c83cc.  v2:= temp @kind object;
  #L3c83ce.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c83d4.  v2:= temp;
  #L3c83d6.  if v2 == 0 then goto L3c83ea;
  #L3c83da.  call temp:= `access$100`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$100:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c83e0.  v2:= temp @kind object;
  #L3c83e2.  call temp:= `append`(v7, v2) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.append:(Lorg/joda/time/format/DateTimeFormatter;)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c83e8.  goto L3c83c2;
  #L3c83ea.  v5:= 0I;
  #L3c83ec.  call temp:= `size`(v0) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L3c83f2.  v2:= temp;
  #L3c83f4.  if v2 >= v1 then goto L3c83fc;
  #L3c83f8.  v6:= 1I;
  #L3c83fa.  goto L3c83fe;
  #L3c83fc.  v6:= 0I;
  #L3c83fe.  v1:= v7 @kind object;
  #L3c8400.  v2:= v0 @kind object;
  #L3c8402.  v3:= v9;
  #L3c8404.  v4:= v10;
  #L3c8406.  call `time`(v1, v2, v3, v4, v5, v6) @signature `Lorg/joda/time/format/ISODateTimeFormat;.time:(Lorg/joda/time/format/DateTimeFormatterBuilder;Ljava/util/Collection;ZZZZ)V` @kind static;
  #L3c840c.  call temp:= `canBuildFormatter`(v7) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.canBuildFormatter:()Z` @kind virtual;
  #L3c8412.  v9:= temp;
  #L3c8414.  if v9 == 0 then goto L3c8428;
  #L3c8418.  call temp:= `retainAll`(v8, v0) @signature `Ljava/util/Collection;.retainAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3c841e.  call temp:= `toFormatter`(v7) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.toFormatter:()Lorg/joda/time/format/DateTimeFormatter;` @kind virtual;
  #L3c8424.  v8:= temp @kind object;
  #L3c8426.  return v8 @kind object;
  #L3c8428.  v9:= new `java.lang.IllegalArgumentException`;
  #L3c842c.  v10:= new `java.lang.StringBuilder`;
  #L3c8430.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c8436.  v0:= "No valid format for fields: " @kind object;
  #L3c843a.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8440.  call temp:= `append`(v10, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8446.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c844c.  v8:= temp @kind object;
  #L3c844e.  call `<init>`(v9, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c8454.  throw v9;
  #L3c8456.  v8:= new `java.lang.IllegalArgumentException`;
  #L3c845a.  v9:= "The fields must not be null or empty" @kind object;
  #L3c845e.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c8464.  throw v8;
  catch `java.lang.UnsupportedOperationException` @[L3c8418..L3c841e] goto L3c841e;
}
procedure `org.joda.time.format.DateTimeFormatter` `hour`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.hour:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8488.  call temp:= `access$3900`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$3900:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c848e.  v0:= temp @kind object;
  #L3c8490.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `hourMinute`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.hourMinute:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c84a4.  call temp:= `access$4000`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$4000:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c84aa.  v0:= temp @kind object;
  #L3c84ac.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `hourMinuteSecond`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.hourMinuteSecond:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c84c0.  call temp:= `access$4100`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$4100:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c84c6.  v0:= temp @kind object;
  #L3c84c8.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `hourMinuteSecondFraction`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.hourMinuteSecondFraction:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c84dc.  call temp:= `access$4300`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$4300:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c84e2.  v0:= temp @kind object;
  #L3c84e4.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `hourMinuteSecondMillis`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.hourMinuteSecondMillis:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c84f8.  call temp:= `access$4200`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$4200:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c84fe.  v0:= temp @kind object;
  #L3c8500.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `localDateOptionalTimeParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.localDateOptionalTimeParser:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8514.  call temp:= `access$1000`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$1000:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c851a.  v0:= temp @kind object;
  #L3c851c.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `localDateParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.localDateParser:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8530.  call temp:= `access$300`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$300:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c8536.  v0:= temp @kind object;
  #L3c8538.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `localTimeParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.localTimeParser:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c854c.  call temp:= `access$600`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$600:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c8552.  v0:= temp @kind object;
  #L3c8554.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `ordinalDate`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.ordinalDate:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8568.  call temp:= `access$1700`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$1700:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c856e.  v0:= temp @kind object;
  #L3c8570.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `ordinalDateTime`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.ordinalDateTime:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8584.  call temp:= `access$1800`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$1800:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c858a.  v0:= temp @kind object;
  #L3c858c.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `ordinalDateTimeNoMillis`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.ordinalDateTimeNoMillis:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c85a0.  call temp:= `access$1900`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$1900:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c85a6.  v0:= temp @kind object;
  #L3c85a8.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `tTime`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.tTime:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c85bc.  call temp:= `access$1300`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$1300:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c85c2.  v0:= temp @kind object;
  #L3c85c4.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `tTimeNoMillis`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.tTimeNoMillis:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c85d8.  call temp:= `access$1400`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$1400:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c85de.  v0:= temp @kind object;
  #L3c85e0.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `time`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.time:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c85f4.  call temp:= `access$1100`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$1100:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c85fa.  v0:= temp @kind object;
  #L3c85fc.  return v0 @kind object;
}
procedure `void` `time`(`org.joda.time.format.DateTimeFormatterBuilder` v4 @kind object, `java.util.Collection` v5 @kind object, `boolean` v6 , `boolean` v7 , `boolean` v8 , `boolean` v9 ) @signature `Lorg/joda/time/format/ISODateTimeFormat;.time:(Lorg/joda/time/format/DateTimeFormatterBuilder;Ljava/util/Collection;ZZZZ)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c87dc.  call temp:= `hourOfDay`() @signature `Lorg/joda/time/DateTimeFieldType;.hourOfDay:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c87e2.  v0:= temp @kind object;
  #L3c87e4.  call temp:= `remove`(v5, v0) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c87ea.  v0:= temp;
  #L3c87ec.  call temp:= `minuteOfHour`() @signature `Lorg/joda/time/DateTimeFieldType;.minuteOfHour:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c87f2.  v1:= temp @kind object;
  #L3c87f4.  call temp:= `remove`(v5, v1) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c87fa.  v1:= temp;
  #L3c87fc.  call temp:= `secondOfMinute`() @signature `Lorg/joda/time/DateTimeFieldType;.secondOfMinute:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c8802.  v2:= temp @kind object;
  #L3c8804.  call temp:= `remove`(v5, v2) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c880a.  v2:= temp;
  #L3c880c.  call temp:= `millisOfSecond`() @signature `Lorg/joda/time/DateTimeFieldType;.millisOfSecond:()Lorg/joda/time/DateTimeFieldType;` @kind static;
  #L3c8812.  v3:= temp @kind object;
  #L3c8814.  call temp:= `remove`(v5, v3) @signature `Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3c881a.  v3:= temp;
  #L3c881c.  if v0 != 0 then goto L3c882e;
  #L3c8820.  if v1 != 0 then goto L3c882e;
  #L3c8824.  if v2 != 0 then goto L3c882e;
  #L3c8828.  if v3 != 0 then goto L3c882e;
  #L3c882c.  return @kind void;
  #L3c882e.  if v0 != 0 then goto L3c883e;
  #L3c8832.  if v1 != 0 then goto L3c883e;
  #L3c8836.  if v2 != 0 then goto L3c883e;
  #L3c883a.  if v3 == 0 then goto L3c8884;
  #L3c883e.  if v7 == 0 then goto L3c8876;
  #L3c8842.  if v8 != 0 then goto L3c8848;
  #L3c8846.  goto L3c8876;
  #L3c8848.  v4:= new `java.lang.IllegalArgumentException`;
  #L3c884c.  v6:= new `java.lang.StringBuilder`;
  #L3c8850.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c8856.  v7:= "No valid ISO8601 format for fields because Date was reduced precision: " @kind object;
  #L3c885a.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8860.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c8866.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c886c.  v5:= temp @kind object;
  #L3c886e.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c8874.  throw v4;
  #L3c8876.  if v9 == 0 then goto L3c8884;
  #L3c887a.  v8:= 84I;
  #L3c887e.  call temp:= `appendLiteral`(v4, v8) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c8884.  if v0 == 0 then goto L3c8890;
  #L3c8888.  if v1 == 0 then goto L3c8890;
  #L3c888c.  if v2 != 0 then goto L3c88f4;
  #L3c8890.  if v0 == 0 then goto L3c889e;
  #L3c8894.  if v2 != 0 then goto L3c889e;
  #L3c8898.  if v3 != 0 then goto L3c889e;
  #L3c889c.  goto L3c88f4;
  #L3c889e.  if v7 == 0 then goto L3c88d6;
  #L3c88a2.  if v9 != 0 then goto L3c88a8;
  #L3c88a6.  goto L3c88d6;
  #L3c88a8.  v4:= new `java.lang.IllegalArgumentException`;
  #L3c88ac.  v6:= new `java.lang.StringBuilder`;
  #L3c88b0.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c88b6.  v7:= "No valid ISO8601 format for fields because Time was truncated: " @kind object;
  #L3c88ba.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c88c0.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c88c6.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c88cc.  v5:= temp @kind object;
  #L3c88ce.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c88d4.  throw v4;
  #L3c88d6.  if v0 != 0 then goto L3c88f0;
  #L3c88da.  if v1 == 0 then goto L3c88e2;
  #L3c88de.  if v2 != 0 then goto L3c88f4;
  #L3c88e2.  if v1 == 0 then goto L3c88ea;
  #L3c88e6.  if v3 == 0 then goto L3c88f4;
  #L3c88ea.  if v2 == 0 then goto L3c88f0;
  #L3c88ee.  goto L3c88f4;
  #L3c88f0.  if v7 != 0 then goto L3c8988;
  #L3c88f4.  v5:= 45I;
  #L3c88f8.  v7:= 2I;
  #L3c88fa.  if v0 == 0 then goto L3c8906;
  #L3c88fe.  call temp:= `appendHourOfDay`(v4, v7) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendHourOfDay:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c8904.  goto L3c8918;
  #L3c8906.  if v1 != 0 then goto L3c8912;
  #L3c890a.  if v2 != 0 then goto L3c8912;
  #L3c890e.  if v3 == 0 then goto L3c8918;
  #L3c8912.  call temp:= `appendLiteral`(v4, v5) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c8918.  v8:= 58I;
  #L3c891c.  if v6 == 0 then goto L3c892e;
  #L3c8920.  if v0 == 0 then goto L3c892e;
  #L3c8924.  if v1 == 0 then goto L3c892e;
  #L3c8928.  call temp:= `appendLiteral`(v4, v8) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c892e.  if v1 == 0 then goto L3c893a;
  #L3c8932.  call temp:= `appendMinuteOfHour`(v4, v7) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendMinuteOfHour:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c8938.  goto L3c8948;
  #L3c893a.  if v2 != 0 then goto L3c8942;
  #L3c893e.  if v3 == 0 then goto L3c8948;
  #L3c8942.  call temp:= `appendLiteral`(v4, v5) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c8948.  if v6 == 0 then goto L3c895a;
  #L3c894c.  if v1 == 0 then goto L3c895a;
  #L3c8950.  if v2 == 0 then goto L3c895a;
  #L3c8954.  call temp:= `appendLiteral`(v4, v8) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c895a.  if v2 == 0 then goto L3c8966;
  #L3c895e.  call temp:= `appendSecondOfMinute`(v4, v7) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendSecondOfMinute:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c8964.  goto L3c8970;
  #L3c8966.  if v3 == 0 then goto L3c8970;
  #L3c896a.  call temp:= `appendLiteral`(v4, v5) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c8970.  if v3 == 0 then goto L3c8986;
  #L3c8974.  v5:= 46I;
  #L3c8978.  call temp:= `appendLiteral`(v4, v5) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendLiteral:(C)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c897e.  v5:= 3I;
  #L3c8980.  call temp:= `appendMillisOfSecond`(v4, v5) @signature `Lorg/joda/time/format/DateTimeFormatterBuilder;.appendMillisOfSecond:(I)Lorg/joda/time/format/DateTimeFormatterBuilder;` @kind virtual;
  #L3c8986.  return @kind void;
  #L3c8988.  v4:= new `java.lang.IllegalArgumentException`;
  #L3c898c.  v6:= new `java.lang.StringBuilder`;
  #L3c8990.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c8996.  v7:= "No valid ISO8601 format for fields: " @kind object;
  #L3c899a.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c89a0.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c89a6.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c89ac.  v5:= temp @kind object;
  #L3c89ae.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c89b4.  throw v4;
}
procedure `org.joda.time.format.DateTimeFormatter` `timeElementParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.timeElementParser:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8610.  call temp:= `access$700`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$700:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c8616.  v0:= temp @kind object;
  #L3c8618.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `timeNoMillis`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.timeNoMillis:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c862c.  call temp:= `access$1200`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$1200:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c8632.  v0:= temp @kind object;
  #L3c8634.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `timeParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.timeParser:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8648.  call temp:= `access$500`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$500:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c864e.  v0:= temp @kind object;
  #L3c8650.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `weekDate`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.weekDate:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8664.  call temp:= `access$2000`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$2000:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c866a.  v0:= temp @kind object;
  #L3c866c.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `weekDateTime`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.weekDateTime:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8680.  call temp:= `access$2100`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$2100:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c8686.  v0:= temp @kind object;
  #L3c8688.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `weekDateTimeNoMillis`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.weekDateTimeNoMillis:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c869c.  call temp:= `access$2200`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$2200:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c86a2.  v0:= temp @kind object;
  #L3c86a4.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `weekyear`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.weekyear:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c86b8.  call temp:= `access$100`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$100:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c86be.  v0:= temp @kind object;
  #L3c86c0.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `weekyearWeek`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.weekyearWeek:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c86d4.  call temp:= `access$3800`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$3800:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c86da.  v0:= temp @kind object;
  #L3c86dc.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `weekyearWeekDay`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.weekyearWeekDay:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c86f0.  call temp:= `access$2000`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$2000:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c86f6.  v0:= temp @kind object;
  #L3c86f8.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `year`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.year:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c870c.  call temp:= `access$000`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$000:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c8712.  v0:= temp @kind object;
  #L3c8714.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `yearMonth`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.yearMonth:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8728.  call temp:= `access$3600`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$3600:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c872e.  v0:= temp @kind object;
  #L3c8730.  return v0 @kind object;
}
procedure `org.joda.time.format.DateTimeFormatter` `yearMonthDay`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.yearMonthDay:()Lorg/joda/time/format/DateTimeFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3c8744.  call temp:= `access$3700`() @signature `Lorg/joda/time/format/ISODateTimeFormat$Constants;.access$3700:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3c874a.  v0:= temp @kind object;
  #L3c874c.  return v0 @kind object;
}
