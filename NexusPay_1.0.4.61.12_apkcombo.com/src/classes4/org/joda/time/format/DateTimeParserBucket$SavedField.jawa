record `org.joda.time.format.DateTimeParserBucket$SavedField` @kind class @AccessFlag  extends `java.lang.Comparable` @kind interface {
  `org.joda.time.DateTimeField` `org.joda.time.format.DateTimeParserBucket$SavedField.iField` @AccessFlag ;
  `java.util.Locale` `org.joda.time.format.DateTimeParserBucket$SavedField.iLocale` @AccessFlag ;
  `java.lang.String` `org.joda.time.format.DateTimeParserBucket$SavedField.iText` @AccessFlag ;
  `int` `org.joda.time.format.DateTimeParserBucket$SavedField.iValue` @AccessFlag ;
}
procedure `void` `<init>`(`org.joda.time.format.DateTimeParserBucket$SavedField` v0 @kind this) @signature `Lorg/joda/time/format/DateTimeParserBucket$SavedField;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3c4da4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c4daa.  return @kind void;
}
procedure `int` `compareTo`(`org.joda.time.format.DateTimeParserBucket$SavedField` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/joda/time/format/DateTimeParserBucket$SavedField;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3c4ce4.  v1:= (`org.joda.time.format.DateTimeParserBucket$SavedField`) v1 @kind object;
  #L3c4ce8.  call temp:= `compareTo`(v0, v1) @signature `Lorg/joda/time/format/DateTimeParserBucket$SavedField;.compareTo:(Lorg/joda/time/format/DateTimeParserBucket$SavedField;)I` @kind virtual;
  #L3c4cee.  v1:= temp;
  #L3c4cf0.  return v1;
}
procedure `int` `compareTo`(`org.joda.time.format.DateTimeParserBucket$SavedField` v2 @kind this, `org.joda.time.format.DateTimeParserBucket$SavedField` v3 @kind object) @signature `Lorg/joda/time/format/DateTimeParserBucket$SavedField;.compareTo:(Lorg/joda/time/format/DateTimeParserBucket$SavedField;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c4d04.  v3:= v3.`org.joda.time.format.DateTimeParserBucket$SavedField.iField` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3c4d08.  v0:= v2.`org.joda.time.format.DateTimeParserBucket$SavedField.iField` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3c4d0c.  call temp:= `getRangeDurationField`(v0) @signature `Lorg/joda/time/DateTimeField;.getRangeDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3c4d12.  v0:= temp @kind object;
  #L3c4d14.  call temp:= `getRangeDurationField`(v3) @signature `Lorg/joda/time/DateTimeField;.getRangeDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3c4d1a.  v1:= temp @kind object;
  #L3c4d1c.  call temp:= `compareReverse`(v0, v1) @signature `Lorg/joda/time/format/DateTimeParserBucket;.compareReverse:(Lorg/joda/time/DurationField;Lorg/joda/time/DurationField;)I` @kind static;
  #L3c4d22.  v0:= temp;
  #L3c4d24.  if v0 == 0 then goto L3c4d2a;
  #L3c4d28.  return v0;
  #L3c4d2a.  v0:= v2.`org.joda.time.format.DateTimeParserBucket$SavedField.iField` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3c4d2e.  call temp:= `getDurationField`(v0) @signature `Lorg/joda/time/DateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3c4d34.  v0:= temp @kind object;
  #L3c4d36.  call temp:= `getDurationField`(v3) @signature `Lorg/joda/time/DateTimeField;.getDurationField:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3c4d3c.  v3:= temp @kind object;
  #L3c4d3e.  call temp:= `compareReverse`(v0, v3) @signature `Lorg/joda/time/format/DateTimeParserBucket;.compareReverse:(Lorg/joda/time/DurationField;Lorg/joda/time/DurationField;)I` @kind static;
  #L3c4d44.  v3:= temp;
  #L3c4d46.  return v3;
}
procedure `void` `init`(`org.joda.time.format.DateTimeParserBucket$SavedField` v0 @kind this, `org.joda.time.DateTimeField` v1 @kind object, `int` v2 ) @signature `Lorg/joda/time/format/DateTimeParserBucket$SavedField;.init:(Lorg/joda/time/DateTimeField;I)V` @AccessFlag  {
    temp;

  #L3c4dbc.  v0.`org.joda.time.format.DateTimeParserBucket$SavedField.iField` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3c4dc0.  v0.`org.joda.time.format.DateTimeParserBucket$SavedField.iValue` @type ^`int` := v2;
  #L3c4dc4.  v1:= 0I;
  #L3c4dc6.  v0.`org.joda.time.format.DateTimeParserBucket$SavedField.iText` @type ^`java.lang.String` := v1 @kind object;
  #L3c4dca.  v0.`org.joda.time.format.DateTimeParserBucket$SavedField.iLocale` @type ^`java.util.Locale` := v1 @kind object;
  #L3c4dce.  return @kind void;
}
procedure `void` `init`(`org.joda.time.format.DateTimeParserBucket$SavedField` v0 @kind this, `org.joda.time.DateTimeField` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.Locale` v3 @kind object) @signature `Lorg/joda/time/format/DateTimeParserBucket$SavedField;.init:(Lorg/joda/time/DateTimeField;Ljava/lang/String;Ljava/util/Locale;)V` @AccessFlag  {
    temp;

  #L3c4de0.  v0.`org.joda.time.format.DateTimeParserBucket$SavedField.iField` @type ^`org.joda.time.DateTimeField` := v1 @kind object;
  #L3c4de4.  v1:= 0I;
  #L3c4de6.  v0.`org.joda.time.format.DateTimeParserBucket$SavedField.iValue` @type ^`int` := v1;
  #L3c4dea.  v0.`org.joda.time.format.DateTimeParserBucket$SavedField.iText` @type ^`java.lang.String` := v2 @kind object;
  #L3c4dee.  v0.`org.joda.time.format.DateTimeParserBucket$SavedField.iLocale` @type ^`java.util.Locale` := v3 @kind object;
  #L3c4df2.  return @kind void;
}
procedure `long` `set`(`org.joda.time.format.DateTimeParserBucket$SavedField` v3 @kind this, `long` v4 , `boolean` v6 ) @signature `Lorg/joda/time/format/DateTimeParserBucket$SavedField;.set:(JZ)J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3c4d58.  v0:= v3.`org.joda.time.format.DateTimeParserBucket$SavedField.iText` @type ^`java.lang.String` @kind object;
  #L3c4d5c.  if v0 != 0 then goto L3c4d72;
  #L3c4d60.  v0:= v3.`org.joda.time.format.DateTimeParserBucket$SavedField.iField` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3c4d64.  v1:= v3.`org.joda.time.format.DateTimeParserBucket$SavedField.iValue` @type ^`int`;
  #L3c4d68.  call temp:= `setExtended`(v0, v4, v1) @signature `Lorg/joda/time/DateTimeField;.setExtended:(JI)J` @kind virtual;
  #L3c4d6e.  v4:= temp @kind wide;
  #L3c4d70.  goto L3c4d82;
  #L3c4d72.  v1:= v3.`org.joda.time.format.DateTimeParserBucket$SavedField.iField` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3c4d76.  v2:= v3.`org.joda.time.format.DateTimeParserBucket$SavedField.iLocale` @type ^`java.util.Locale` @kind object;
  #L3c4d7a.  call temp:= `set`(v1, v4, v0, v2) @signature `Lorg/joda/time/DateTimeField;.set:(JLjava/lang/String;Ljava/util/Locale;)J` @kind virtual;
  #L3c4d80.  v4:= temp @kind wide;
  #L3c4d82.  if v6 == 0 then goto L3c4d92;
  #L3c4d86.  v6:= v3.`org.joda.time.format.DateTimeParserBucket$SavedField.iField` @type ^`org.joda.time.DateTimeField` @kind object;
  #L3c4d8a.  call temp:= `roundFloor`(v6, v4) @signature `Lorg/joda/time/DateTimeField;.roundFloor:(J)J` @kind virtual;
  #L3c4d90.  v4:= temp @kind wide;
  #L3c4d92.  return v4 @kind wide;
}
