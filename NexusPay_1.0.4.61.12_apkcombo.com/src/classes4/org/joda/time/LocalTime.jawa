record `org.joda.time.LocalTime` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.base.BaseLocal` @kind class, `org.joda.time.ReadablePartial` @kind interface, `java.io.Serializable` @kind interface {
  `org.joda.time.Chronology` `org.joda.time.LocalTime.iChronology` @AccessFlag PRIVATE_FINAL;
  `long` `org.joda.time.LocalTime.iLocalMillis` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@org.joda.time.LocalTime.HOUR_OF_DAY` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.joda.time.LocalTime` `@@org.joda.time.LocalTime.MIDNIGHT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.joda.time.LocalTime.MILLIS_OF_SECOND` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.joda.time.LocalTime.MINUTE_OF_HOUR` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.joda.time.LocalTime.SECOND_OF_MINUTE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Set` `@@org.joda.time.LocalTime.TIME_DURATION_TYPES` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.joda.time.LocalTime.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/LocalTime;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a0f20.  v0:= new `org.joda.time.LocalTime`;
  #L3a0f24.  v1:= 0I;
  #L3a0f26.  call `<init>`(v0, v1, v1, v1, v1) @signature `Lorg/joda/time/LocalTime;.<init>:(IIII)V` @kind direct;
  #L3a0f2c.  `@@org.joda.time.LocalTime.MIDNIGHT` @type ^`org.joda.time.LocalTime` := v0 @kind object;
  #L3a0f30.  v0:= new `java.util.HashSet`;
  #L3a0f34.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L3a0f3a.  `@@org.joda.time.LocalTime.TIME_DURATION_TYPES` @type ^`java.util.Set` := v0 @kind object;
  #L3a0f3e.  call temp:= `millis`() @signature `Lorg/joda/time/DurationFieldType;.millis:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a0f44.  v1:= temp @kind object;
  #L3a0f46.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a0f4c.  v0:= `@@org.joda.time.LocalTime.TIME_DURATION_TYPES` @type ^`java.util.Set` @kind object;
  #L3a0f50.  call temp:= `seconds`() @signature `Lorg/joda/time/DurationFieldType;.seconds:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a0f56.  v1:= temp @kind object;
  #L3a0f58.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a0f5e.  v0:= `@@org.joda.time.LocalTime.TIME_DURATION_TYPES` @type ^`java.util.Set` @kind object;
  #L3a0f62.  call temp:= `minutes`() @signature `Lorg/joda/time/DurationFieldType;.minutes:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a0f68.  v1:= temp @kind object;
  #L3a0f6a.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a0f70.  v0:= `@@org.joda.time.LocalTime.TIME_DURATION_TYPES` @type ^`java.util.Set` @kind object;
  #L3a0f74.  call temp:= `hours`() @signature `Lorg/joda/time/DurationFieldType;.hours:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a0f7a.  v1:= temp @kind object;
  #L3a0f7c.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3a0f82.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalTime` v3 @kind this) @signature `Lorg/joda/time/LocalTime;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3a0f94.  call temp:= `currentTimeMillis`() @signature `Lorg/joda/time/DateTimeUtils;.currentTimeMillis:()J` @kind static;
  #L3a0f9a.  v0:= temp @kind wide;
  #L3a0f9c.  call temp:= `getInstance`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3a0fa2.  v2:= temp @kind object;
  #L3a0fa4.  call `<init>`(v3, v0, v2) @signature `Lorg/joda/time/LocalTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3a0faa.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalTime` v6 @kind this, `int` v7 , `int` v8 ) @signature `Lorg/joda/time/LocalTime;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a0fbc.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3a0fc2.  v5:= temp @kind object;
  #L3a0fc4.  v3:= 0I;
  #L3a0fc6.  v4:= 0I;
  #L3a0fc8.  v0:= v6 @kind object;
  #L3a0fca.  v1:= v7;
  #L3a0fcc.  v2:= v8;
  #L3a0fce.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/joda/time/LocalTime;.<init>:(IIIILorg/joda/time/Chronology;)V` @kind direct;
  #L3a0fd4.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalTime` v6 @kind this, `int` v7 , `int` v8 , `int` v9 ) @signature `Lorg/joda/time/LocalTime;.<init>:(III)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a0fe8.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3a0fee.  v5:= temp @kind object;
  #L3a0ff0.  v4:= 0I;
  #L3a0ff2.  v0:= v6 @kind object;
  #L3a0ff4.  v1:= v7;
  #L3a0ff6.  v2:= v8;
  #L3a0ff8.  v3:= v9;
  #L3a0ffa.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/joda/time/LocalTime;.<init>:(IIIILorg/joda/time/Chronology;)V` @kind direct;
  #L3a1000.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalTime` v6 @kind this, `int` v7 , `int` v8 , `int` v9 , `int` v10 ) @signature `Lorg/joda/time/LocalTime;.<init>:(IIII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a1014.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3a101a.  v5:= temp @kind object;
  #L3a101c.  v0:= v6 @kind object;
  #L3a101e.  v1:= v7;
  #L3a1020.  v2:= v8;
  #L3a1022.  v3:= v9;
  #L3a1024.  v4:= v10;
  #L3a1026.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/joda/time/LocalTime;.<init>:(IIIILorg/joda/time/Chronology;)V` @kind direct;
  #L3a102c.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalTime` v7 @kind this, `int` v8 , `int` v9 , `int` v10 , `int` v11 , `org.joda.time.Chronology` v12 @kind object) @signature `Lorg/joda/time/LocalTime;.<init>:(IIIILorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a1040.  call `<init>`(v7) @signature `Lorg/joda/time/base/BaseLocal;.<init>:()V` @kind direct;
  #L3a1046.  call temp:= `getChronology`(v12) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L3a104c.  v12:= temp @kind object;
  #L3a104e.  call temp:= `withUTC`(v12) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a1054.  v12:= temp @kind object;
  #L3a1056.  v1:= 0L;
  #L3a105a.  v0:= v12 @kind object;
  #L3a105c.  v3:= v8;
  #L3a105e.  v4:= v9;
  #L3a1060.  v5:= v10;
  #L3a1062.  v6:= v11;
  #L3a1064.  call temp:= `getDateTimeMillis`(v0, v1, v3, v4, v5, v6) @signature `Lorg/joda/time/Chronology;.getDateTimeMillis:(JIIII)J` @kind virtual;
  #L3a106a.  v8:= temp @kind wide;
  #L3a106c.  v7.`org.joda.time.LocalTime.iChronology` @type ^`org.joda.time.Chronology` := v12 @kind object;
  #L3a1070.  v7.`org.joda.time.LocalTime.iLocalMillis` @type ^`long` := v8 @kind wide;
  #L3a1074.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalTime` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/LocalTime;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a11a4.  call temp:= `getInstance`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3a11aa.  v0:= temp @kind object;
  #L3a11ac.  call `<init>`(v1, v2, v0) @signature `Lorg/joda/time/LocalTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3a11b2.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalTime` v2 @kind this, `long` v3 , `org.joda.time.Chronology` v5 @kind object) @signature `Lorg/joda/time/LocalTime;.<init>:(JLorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a11c4.  call `<init>`(v2) @signature `Lorg/joda/time/base/BaseLocal;.<init>:()V` @kind direct;
  #L3a11ca.  call temp:= `getChronology`(v5) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L3a11d0.  v5:= temp @kind object;
  #L3a11d2.  call temp:= `getZone`(v5) @signature `Lorg/joda/time/Chronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3a11d8.  v0:= temp @kind object;
  #L3a11da.  v1:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3a11de.  call temp:= `getMillisKeepLocal`(v0, v1, v3) @signature `Lorg/joda/time/DateTimeZone;.getMillisKeepLocal:(Lorg/joda/time/DateTimeZone;J)J` @kind virtual;
  #L3a11e4.  v3:= temp @kind wide;
  #L3a11e6.  call temp:= `withUTC`(v5) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a11ec.  v5:= temp @kind object;
  #L3a11ee.  call temp:= `millisOfDay`(v5) @signature `Lorg/joda/time/Chronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a11f4.  v0:= temp @kind object;
  #L3a11f6.  call temp:= `get`(v0, v3) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3a11fc.  v3:= temp;
  #L3a11fe.  v3:= (`long`) v3 @kind i2l;
  #L3a1200.  v2.`org.joda.time.LocalTime.iLocalMillis` @type ^`long` := v3 @kind wide;
  #L3a1204.  v2.`org.joda.time.LocalTime.iChronology` @type ^`org.joda.time.Chronology` := v5 @kind object;
  #L3a1208.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalTime` v0 @kind this, `long` v1 , `org.joda.time.DateTimeZone` v3 @kind object) @signature `Lorg/joda/time/LocalTime;.<init>:(JLorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a121c.  call temp:= `getInstance`(v3) @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3a1222.  v3:= temp @kind object;
  #L3a1224.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/LocalTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3a122a.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalTime` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/joda/time/LocalTime;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a1088.  v0:= 0I;
  #L3a108a.  call `<init>`(v1, v2, v0) @signature `Lorg/joda/time/LocalTime;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a1090.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalTime` v7 @kind this, `java.lang.Object` v8 @kind object, `org.joda.time.Chronology` v9 @kind object) @signature `Lorg/joda/time/LocalTime;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a10a4.  call `<init>`(v7) @signature `Lorg/joda/time/base/BaseLocal;.<init>:()V` @kind direct;
  #L3a10aa.  call temp:= `getInstance`() @signature `Lorg/joda/time/convert/ConverterManager;.getInstance:()Lorg/joda/time/convert/ConverterManager;` @kind static;
  #L3a10b0.  v0:= temp @kind object;
  #L3a10b2.  call temp:= `getPartialConverter`(v0, v8) @signature `Lorg/joda/time/convert/ConverterManager;.getPartialConverter:(Ljava/lang/Object;)Lorg/joda/time/convert/PartialConverter;` @kind virtual;
  #L3a10b8.  v0:= temp @kind object;
  #L3a10ba.  call temp:= `getChronology`(v0, v8, v9) @signature `Lorg/joda/time/convert/PartialConverter;.getChronology:(Ljava/lang/Object;Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind interface;
  #L3a10c0.  v9:= temp @kind object;
  #L3a10c2.  call temp:= `getChronology`(v9) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L3a10c8.  v9:= temp @kind object;
  #L3a10ca.  call temp:= `withUTC`(v9) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a10d0.  v1:= temp @kind object;
  #L3a10d2.  v7.`org.joda.time.LocalTime.iChronology` @type ^`org.joda.time.Chronology` := v1 @kind object;
  #L3a10d6.  call temp:= `localTimeParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.localTimeParser:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3a10dc.  v1:= temp @kind object;
  #L3a10de.  call temp:= `getPartialValues`(v0, v7, v8, v9, v1) @signature `Lorg/joda/time/convert/PartialConverter;.getPartialValues:(Lorg/joda/time/ReadablePartial;Ljava/lang/Object;Lorg/joda/time/Chronology;Lorg/joda/time/format/DateTimeFormatter;)[I` @kind interface;
  #L3a10e4.  v8:= temp @kind object;
  #L3a10e6.  v0:= v7.`org.joda.time.LocalTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L3a10ea.  v9:= 0I;
  #L3a10ec.  v3:= v8[v9];
  #L3a10f0.  v9:= 1I;
  #L3a10f2.  v4:= v8[v9];
  #L3a10f6.  v9:= 2I;
  #L3a10f8.  v5:= v8[v9];
  #L3a10fc.  v9:= 3I;
  #L3a10fe.  v6:= v8[v9];
  #L3a1102.  v1:= 0L;
  #L3a1106.  call temp:= `getDateTimeMillis`(v0, v1, v3, v4, v5, v6) @signature `Lorg/joda/time/Chronology;.getDateTimeMillis:(JIIII)J` @kind virtual;
  #L3a110c.  v8:= temp @kind wide;
  #L3a110e.  v7.`org.joda.time.LocalTime.iLocalMillis` @type ^`long` := v8 @kind wide;
  #L3a1112.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalTime` v7 @kind this, `java.lang.Object` v8 @kind object, `org.joda.time.DateTimeZone` v9 @kind object) @signature `Lorg/joda/time/LocalTime;.<init>:(Ljava/lang/Object;Lorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a1124.  call `<init>`(v7) @signature `Lorg/joda/time/base/BaseLocal;.<init>:()V` @kind direct;
  #L3a112a.  call temp:= `getInstance`() @signature `Lorg/joda/time/convert/ConverterManager;.getInstance:()Lorg/joda/time/convert/ConverterManager;` @kind static;
  #L3a1130.  v0:= temp @kind object;
  #L3a1132.  call temp:= `getPartialConverter`(v0, v8) @signature `Lorg/joda/time/convert/ConverterManager;.getPartialConverter:(Ljava/lang/Object;)Lorg/joda/time/convert/PartialConverter;` @kind virtual;
  #L3a1138.  v0:= temp @kind object;
  #L3a113a.  call temp:= `getChronology`(v0, v8, v9) @signature `Lorg/joda/time/convert/PartialConverter;.getChronology:(Ljava/lang/Object;Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind interface;
  #L3a1140.  v9:= temp @kind object;
  #L3a1142.  call temp:= `getChronology`(v9) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L3a1148.  v9:= temp @kind object;
  #L3a114a.  call temp:= `withUTC`(v9) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a1150.  v1:= temp @kind object;
  #L3a1152.  v7.`org.joda.time.LocalTime.iChronology` @type ^`org.joda.time.Chronology` := v1 @kind object;
  #L3a1156.  call temp:= `localTimeParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.localTimeParser:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3a115c.  v1:= temp @kind object;
  #L3a115e.  call temp:= `getPartialValues`(v0, v7, v8, v9, v1) @signature `Lorg/joda/time/convert/PartialConverter;.getPartialValues:(Lorg/joda/time/ReadablePartial;Ljava/lang/Object;Lorg/joda/time/Chronology;Lorg/joda/time/format/DateTimeFormatter;)[I` @kind interface;
  #L3a1164.  v8:= temp @kind object;
  #L3a1166.  v0:= v7.`org.joda.time.LocalTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L3a116a.  v9:= 0I;
  #L3a116c.  v3:= v8[v9];
  #L3a1170.  v9:= 1I;
  #L3a1172.  v4:= v8[v9];
  #L3a1176.  v9:= 2I;
  #L3a1178.  v5:= v8[v9];
  #L3a117c.  v9:= 3I;
  #L3a117e.  v6:= v8[v9];
  #L3a1182.  v1:= 0L;
  #L3a1186.  call temp:= `getDateTimeMillis`(v0, v1, v3, v4, v5, v6) @signature `Lorg/joda/time/Chronology;.getDateTimeMillis:(JIIII)J` @kind virtual;
  #L3a118c.  v8:= temp @kind wide;
  #L3a118e.  v7.`org.joda.time.LocalTime.iLocalMillis` @type ^`long` := v8 @kind wide;
  #L3a1192.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalTime` v2 @kind this, `org.joda.time.Chronology` v3 @kind object) @signature `Lorg/joda/time/LocalTime;.<init>:(Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a123c.  call temp:= `currentTimeMillis`() @signature `Lorg/joda/time/DateTimeUtils;.currentTimeMillis:()J` @kind static;
  #L3a1242.  v0:= temp @kind wide;
  #L3a1244.  call `<init>`(v2, v0, v3) @signature `Lorg/joda/time/LocalTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3a124a.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalTime` v2 @kind this, `org.joda.time.DateTimeZone` v3 @kind object) @signature `Lorg/joda/time/LocalTime;.<init>:(Lorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a125c.  call temp:= `currentTimeMillis`() @signature `Lorg/joda/time/DateTimeUtils;.currentTimeMillis:()J` @kind static;
  #L3a1262.  v0:= temp @kind wide;
  #L3a1264.  call temp:= `getInstance`(v3) @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3a126a.  v3:= temp @kind object;
  #L3a126c.  call `<init>`(v2, v0, v3) @signature `Lorg/joda/time/LocalTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3a1272.  return @kind void;
}
procedure `org.joda.time.LocalTime` `fromCalendarFields`(`java.util.Calendar` v5 @kind object) @signature `Lorg/joda/time/LocalTime;.fromCalendarFields:(Ljava/util/Calendar;)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a06bc.  if v5 == 0 then goto L3a06fc;
  #L3a06c0.  v0:= new `org.joda.time.LocalTime`;
  #L3a06c4.  v1:= 11I;
  #L3a06c8.  call temp:= `get`(v5, v1) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L3a06ce.  v1:= temp;
  #L3a06d0.  v2:= 12I;
  #L3a06d4.  call temp:= `get`(v5, v2) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L3a06da.  v2:= temp;
  #L3a06dc.  v3:= 13I;
  #L3a06e0.  call temp:= `get`(v5, v3) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L3a06e6.  v3:= temp;
  #L3a06e8.  v4:= 14I;
  #L3a06ec.  call temp:= `get`(v5, v4) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L3a06f2.  v5:= temp;
  #L3a06f4.  call `<init>`(v0, v1, v2, v3, v5) @signature `Lorg/joda/time/LocalTime;.<init>:(IIII)V` @kind direct;
  #L3a06fa.  return v0 @kind object;
  #L3a06fc.  v5:= new `java.lang.IllegalArgumentException`;
  #L3a0700.  v0:= "The calendar must not be null" @kind object;
  #L3a0704.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a070a.  throw v5;
}
procedure `org.joda.time.LocalTime` `fromDateFields`(`java.util.Date` v8 @kind object) @signature `Lorg/joda/time/LocalTime;.fromDateFields:(Ljava/util/Date;)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3a071c.  if v8 == 0 then goto L3a075c;
  #L3a0720.  v0:= new `org.joda.time.LocalTime`;
  #L3a0724.  call temp:= `getHours`(v8) @signature `Ljava/util/Date;.getHours:()I` @kind virtual;
  #L3a072a.  v1:= temp;
  #L3a072c.  call temp:= `getMinutes`(v8) @signature `Ljava/util/Date;.getMinutes:()I` @kind virtual;
  #L3a0732.  v2:= temp;
  #L3a0734.  call temp:= `getSeconds`(v8) @signature `Ljava/util/Date;.getSeconds:()I` @kind virtual;
  #L3a073a.  v3:= temp;
  #L3a073c.  call temp:= `getTime`(v8) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3a0742.  v4:= temp @kind wide;
  #L3a0744.  v6:= 1000L;
  #L3a0748.  v4:= v4 %% v6 @kind long;
  #L3a074a.  v8:= (`int`) v4 @kind l2i;
  #L3a074c.  v8:= v8 + 1000;
  #L3a0750.  v8:= v8 %% 1000;
  #L3a0754.  call `<init>`(v0, v1, v2, v3, v8) @signature `Lorg/joda/time/LocalTime;.<init>:(IIII)V` @kind direct;
  #L3a075a.  return v0 @kind object;
  #L3a075c.  v8:= new `java.lang.IllegalArgumentException`;
  #L3a0760.  v0:= "The date must not be null" @kind object;
  #L3a0764.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a076a.  throw v8;
}
procedure `org.joda.time.LocalTime` `fromMillisOfDay`(`long` v1 ) @signature `Lorg/joda/time/LocalTime;.fromMillisOfDay:(J)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a077c.  v0:= 0I;
  #L3a077e.  call temp:= `fromMillisOfDay`(v1, v0) @signature `Lorg/joda/time/LocalTime;.fromMillisOfDay:(JLorg/joda/time/Chronology;)Lorg/joda/time/LocalTime;` @kind static;
  #L3a0784.  v1:= temp @kind object;
  #L3a0786.  return v1 @kind object;
}
procedure `org.joda.time.LocalTime` `fromMillisOfDay`(`long` v1 , `org.joda.time.Chronology` v3 @kind object) @signature `Lorg/joda/time/LocalTime;.fromMillisOfDay:(JLorg/joda/time/Chronology;)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a0798.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L3a079e.  v3:= temp @kind object;
  #L3a07a0.  call temp:= `withUTC`(v3) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a07a6.  v3:= temp @kind object;
  #L3a07a8.  v0:= new `org.joda.time.LocalTime`;
  #L3a07ac.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/LocalTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3a07b2.  return v0 @kind object;
}
procedure `org.joda.time.LocalTime` `now`() @signature `Lorg/joda/time/LocalTime;.now:()Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a08e0.  v0:= new `org.joda.time.LocalTime`;
  #L3a08e4.  call `<init>`(v0) @signature `Lorg/joda/time/LocalTime;.<init>:()V` @kind direct;
  #L3a08ea.  return v0 @kind object;
}
procedure `org.joda.time.LocalTime` `now`(`org.joda.time.Chronology` v1 @kind object) @signature `Lorg/joda/time/LocalTime;.now:(Lorg/joda/time/Chronology;)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a08fc.  if v1 == 0 then goto L3a090c;
  #L3a0900.  v0:= new `org.joda.time.LocalTime`;
  #L3a0904.  call `<init>`(v0, v1) @signature `Lorg/joda/time/LocalTime;.<init>:(Lorg/joda/time/Chronology;)V` @kind direct;
  #L3a090a.  return v0 @kind object;
  #L3a090c.  v1:= new `java.lang.NullPointerException`;
  #L3a0910.  v0:= "Chronology must not be null" @kind object;
  #L3a0914.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a091a.  throw v1;
}
procedure `org.joda.time.LocalTime` `now`(`org.joda.time.DateTimeZone` v1 @kind object) @signature `Lorg/joda/time/LocalTime;.now:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a092c.  if v1 == 0 then goto L3a093c;
  #L3a0930.  v0:= new `org.joda.time.LocalTime`;
  #L3a0934.  call `<init>`(v0, v1) @signature `Lorg/joda/time/LocalTime;.<init>:(Lorg/joda/time/DateTimeZone;)V` @kind direct;
  #L3a093a.  return v0 @kind object;
  #L3a093c.  v1:= new `java.lang.NullPointerException`;
  #L3a0940.  v0:= "Zone must not be null" @kind object;
  #L3a0944.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a094a.  throw v1;
}
procedure `org.joda.time.LocalTime` `parse`(`java.lang.String` v1 @kind object) @signature `Lorg/joda/time/LocalTime;.parse:(Ljava/lang/String;)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a095c.  call temp:= `localTimeParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.localTimeParser:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3a0962.  v0:= temp @kind object;
  #L3a0964.  call temp:= `parse`(v1, v0) @signature `Lorg/joda/time/LocalTime;.parse:(Ljava/lang/String;Lorg/joda/time/format/DateTimeFormatter;)Lorg/joda/time/LocalTime;` @kind static;
  #L3a096a.  v1:= temp @kind object;
  #L3a096c.  return v1 @kind object;
}
procedure `org.joda.time.LocalTime` `parse`(`java.lang.String` v0 @kind object, `org.joda.time.format.DateTimeFormatter` v1 @kind object) @signature `Lorg/joda/time/LocalTime;.parse:(Ljava/lang/String;Lorg/joda/time/format/DateTimeFormatter;)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3a0980.  call temp:= `parseLocalTime`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatter;.parseLocalTime:(Ljava/lang/String;)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a0986.  v0:= temp @kind object;
  #L3a0988.  return v0 @kind object;
}
procedure `java.lang.Object` `readResolve`(`org.joda.time.LocalTime` v4 @kind this) @signature `Lorg/joda/time/LocalTime;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a04c4.  v0:= v4.`org.joda.time.LocalTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L3a04c8.  if v0 != 0 then goto L3a04e4;
  #L3a04cc.  v0:= new `org.joda.time.LocalTime`;
  #L3a04d0.  v1:= v4.`org.joda.time.LocalTime.iLocalMillis` @type ^`long` @kind wide;
  #L3a04d4.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L3a04da.  v3:= temp @kind object;
  #L3a04dc.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/LocalTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3a04e2.  return v0 @kind object;
  #L3a04e4.  v1:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L3a04e8.  call temp:= `getZone`(v0) @signature `Lorg/joda/time/Chronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L3a04ee.  v0:= temp @kind object;
  #L3a04f0.  call temp:= `equals`(v1, v0) @signature `Lorg/joda/time/DateTimeZone;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a04f6.  v0:= temp;
  #L3a04f8.  if v0 != 0 then goto L3a0518;
  #L3a04fc.  v0:= new `org.joda.time.LocalTime`;
  #L3a0500.  v1:= v4.`org.joda.time.LocalTime.iLocalMillis` @type ^`long` @kind wide;
  #L3a0504.  v3:= v4.`org.joda.time.LocalTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L3a0508.  call temp:= `withUTC`(v3) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a050e.  v3:= temp @kind object;
  #L3a0510.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/LocalTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3a0516.  return v0 @kind object;
  #L3a0518.  return v4 @kind object;
}
procedure `int` `compareTo`(`org.joda.time.LocalTime` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/joda/time/LocalTime;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3a01bc.  v1:= (`org.joda.time.ReadablePartial`) v1 @kind object;
  #L3a01c0.  call temp:= `compareTo`(v0, v1) @signature `Lorg/joda/time/LocalTime;.compareTo:(Lorg/joda/time/ReadablePartial;)I` @kind virtual;
  #L3a01c6.  v1:= temp;
  #L3a01c8.  return v1;
}
procedure `int` `compareTo`(`org.joda.time.LocalTime` v6 @kind this, `org.joda.time.ReadablePartial` v7 @kind object) @signature `Lorg/joda/time/LocalTime;.compareTo:(Lorg/joda/time/ReadablePartial;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a01dc.  v0:= 0I;
  #L3a01de.  if v6 != v7 then goto L3a01e4;
  #L3a01e2.  return v0;
  #L3a01e4.  v1:= instanceof @variable v7 @type ^`org.joda.time.LocalTime` @kind boolean;
  #L3a01e8.  if v1 == 0 then goto L3a0228;
  #L3a01ec.  v1:= v7 @kind object;
  #L3a01ee.  v1:= (`org.joda.time.LocalTime`) v1 @kind object;
  #L3a01f2.  v2:= v6.`org.joda.time.LocalTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L3a01f6.  v3:= v1.`org.joda.time.LocalTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L3a01fa.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a0200.  v2:= temp;
  #L3a0202.  if v2 == 0 then goto L3a0228;
  #L3a0206.  v2:= v6.`org.joda.time.LocalTime.iLocalMillis` @type ^`long` @kind wide;
  #L3a020a.  v4:= v1.`org.joda.time.LocalTime.iLocalMillis` @type ^`long` @kind wide;
  #L3a020e.  v7:= lcmp(v2, v4);
  #L3a0212.  if v7 >= 0 then goto L3a021a;
  #L3a0216.  v0:= -1I;
  #L3a0218.  goto L3a0226;
  #L3a021a.  v7:= lcmp(v2, v4);
  #L3a021e.  if v7 != 0 then goto L3a0224;
  #L3a0222.  goto L3a0226;
  #L3a0224.  v0:= 1I;
  #L3a0226.  return v0;
  #L3a0228.  call temp:= `compareTo`(v6, v7) @signature `Lorg/joda/time/base/AbstractPartial;.compareTo:(Lorg/joda/time/ReadablePartial;)I` @kind super;
  #L3a022e.  v7:= temp;
  #L3a0230.  return v7;
}
procedure `boolean` `equals`(`org.joda.time.LocalTime` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lorg/joda/time/LocalTime;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a009c.  v0:= 1I;
  #L3a009e.  if v6 != v7 then goto L3a00a4;
  #L3a00a2.  return v0;
  #L3a00a4.  v1:= instanceof @variable v7 @type ^`org.joda.time.LocalTime` @kind boolean;
  #L3a00a8.  if v1 == 0 then goto L3a00dc;
  #L3a00ac.  v1:= v7 @kind object;
  #L3a00ae.  v1:= (`org.joda.time.LocalTime`) v1 @kind object;
  #L3a00b2.  v2:= v6.`org.joda.time.LocalTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L3a00b6.  v3:= v1.`org.joda.time.LocalTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L3a00ba.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a00c0.  v2:= temp;
  #L3a00c2.  if v2 == 0 then goto L3a00dc;
  #L3a00c6.  v2:= v6.`org.joda.time.LocalTime.iLocalMillis` @type ^`long` @kind wide;
  #L3a00ca.  v4:= v1.`org.joda.time.LocalTime.iLocalMillis` @type ^`long` @kind wide;
  #L3a00ce.  v7:= lcmp(v2, v4);
  #L3a00d2.  if v7 != 0 then goto L3a00d8;
  #L3a00d6.  goto L3a00da;
  #L3a00d8.  v0:= 0I;
  #L3a00da.  return v0;
  #L3a00dc.  call temp:= `equals`(v6, v7) @signature `Lorg/joda/time/base/AbstractPartial;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L3a00e2.  v7:= temp;
  #L3a00e4.  return v7;
}
procedure `int` `get`(`org.joda.time.LocalTime` v3 @kind this, `org.joda.time.DateTimeFieldType` v4 @kind object) @signature `Lorg/joda/time/LocalTime;.get:(Lorg/joda/time/DateTimeFieldType;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0244.  if v4 == 0 then goto L3a02ae;
  #L3a0248.  call temp:= `isSupported`(v3, v4) @signature `Lorg/joda/time/LocalTime;.isSupported:(Lorg/joda/time/DateTimeFieldType;)Z` @kind virtual;
  #L3a024e.  v0:= temp;
  #L3a0250.  if v0 == 0 then goto L3a0276;
  #L3a0254.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a025a.  v0:= temp @kind object;
  #L3a025c.  call temp:= `getField`(v4, v0) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a0262.  v4:= temp @kind object;
  #L3a0264.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a026a.  v0:= temp @kind wide;
  #L3a026c.  call temp:= `get`(v4, v0) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3a0272.  v4:= temp;
  #L3a0274.  return v4;
  #L3a0276.  v0:= new `java.lang.IllegalArgumentException`;
  #L3a027a.  v1:= new `java.lang.StringBuilder`;
  #L3a027e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a0284.  v2:= "Field '" @kind object;
  #L3a0288.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a028e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a0294.  v4:= "' is not supported" @kind object;
  #L3a0298.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a029e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a02a4.  v4:= temp @kind object;
  #L3a02a6.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a02ac.  throw v0;
  #L3a02ae.  v4:= new `java.lang.IllegalArgumentException`;
  #L3a02b2.  v0:= "The DateTimeFieldType must not be null" @kind object;
  #L3a02b6.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a02bc.  throw v4;
}
procedure `org.joda.time.Chronology` `getChronology`(`org.joda.time.LocalTime` v1 @kind this) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a05d0.  v0:= v1.`org.joda.time.LocalTime.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L3a05d4.  return v0 @kind object;
}
procedure `org.joda.time.DateTimeField` `getField`(`org.joda.time.LocalTime` v2 @kind this, `int` v3 , `org.joda.time.Chronology` v4 @kind object) @signature `Lorg/joda/time/LocalTime;.getField:(ILorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3a0640.  if v3 == 0 then goto L3a06a2;
  #L3a0644.  v0:= 1I;
  #L3a0646.  if v3 == v0 then goto L3a0698;
  #L3a064a.  v0:= 2I;
  #L3a064c.  if v3 == v0 then goto L3a068e;
  #L3a0650.  v0:= 3I;
  #L3a0652.  if v3 != v0 then goto L3a0660;
  #L3a0656.  call temp:= `millisOfSecond`(v4) @signature `Lorg/joda/time/Chronology;.millisOfSecond:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a065c.  v3:= temp @kind object;
  #L3a065e.  return v3 @kind object;
  #L3a0660.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L3a0664.  v0:= new `java.lang.StringBuilder`;
  #L3a0668.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a066e.  v1:= "Invalid index: " @kind object;
  #L3a0672.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a0678.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a067e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a0684.  v3:= temp @kind object;
  #L3a0686.  call `<init>`(v4, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a068c.  throw v4;
  #L3a068e.  call temp:= `secondOfMinute`(v4) @signature `Lorg/joda/time/Chronology;.secondOfMinute:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a0694.  v3:= temp @kind object;
  #L3a0696.  return v3 @kind object;
  #L3a0698.  call temp:= `minuteOfHour`(v4) @signature `Lorg/joda/time/Chronology;.minuteOfHour:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a069e.  v3:= temp @kind object;
  #L3a06a0.  return v3 @kind object;
  #L3a06a2.  call temp:= `hourOfDay`(v4) @signature `Lorg/joda/time/Chronology;.hourOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a06a8.  v3:= temp @kind object;
  #L3a06aa.  return v3 @kind object;
}
procedure `int` `getHourOfDay`(`org.joda.time.LocalTime` v3 @kind this) @signature `Lorg/joda/time/LocalTime;.getHourOfDay:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a02d0.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a02d6.  v0:= temp @kind object;
  #L3a02d8.  call temp:= `hourOfDay`(v0) @signature `Lorg/joda/time/Chronology;.hourOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a02de.  v0:= temp @kind object;
  #L3a02e0.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a02e6.  v1:= temp @kind wide;
  #L3a02e8.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3a02ee.  v0:= temp;
  #L3a02f0.  return v0;
}
procedure `long` `getLocalMillis`(`org.joda.time.LocalTime` v2 @kind this) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3a05b8.  v0:= v2.`org.joda.time.LocalTime.iLocalMillis` @type ^`long` @kind wide;
  #L3a05bc.  return v0 @kind wide;
}
procedure `int` `getMillisOfDay`(`org.joda.time.LocalTime` v3 @kind this) @signature `Lorg/joda/time/LocalTime;.getMillisOfDay:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0304.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a030a.  v0:= temp @kind object;
  #L3a030c.  call temp:= `millisOfDay`(v0) @signature `Lorg/joda/time/Chronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a0312.  v0:= temp @kind object;
  #L3a0314.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a031a.  v1:= temp @kind wide;
  #L3a031c.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3a0322.  v0:= temp;
  #L3a0324.  return v0;
}
procedure `int` `getMillisOfSecond`(`org.joda.time.LocalTime` v3 @kind this) @signature `Lorg/joda/time/LocalTime;.getMillisOfSecond:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0338.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a033e.  v0:= temp @kind object;
  #L3a0340.  call temp:= `millisOfSecond`(v0) @signature `Lorg/joda/time/Chronology;.millisOfSecond:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a0346.  v0:= temp @kind object;
  #L3a0348.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a034e.  v1:= temp @kind wide;
  #L3a0350.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3a0356.  v0:= temp;
  #L3a0358.  return v0;
}
procedure `int` `getMinuteOfHour`(`org.joda.time.LocalTime` v3 @kind this) @signature `Lorg/joda/time/LocalTime;.getMinuteOfHour:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a036c.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0372.  v0:= temp @kind object;
  #L3a0374.  call temp:= `minuteOfHour`(v0) @signature `Lorg/joda/time/Chronology;.minuteOfHour:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a037a.  v0:= temp @kind object;
  #L3a037c.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a0382.  v1:= temp @kind wide;
  #L3a0384.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3a038a.  v0:= temp;
  #L3a038c.  return v0;
}
procedure `int` `getSecondOfMinute`(`org.joda.time.LocalTime` v3 @kind this) @signature `Lorg/joda/time/LocalTime;.getSecondOfMinute:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a03a0.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a03a6.  v0:= temp @kind object;
  #L3a03a8.  call temp:= `secondOfMinute`(v0) @signature `Lorg/joda/time/Chronology;.secondOfMinute:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a03ae.  v0:= temp @kind object;
  #L3a03b0.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a03b6.  v1:= temp @kind wide;
  #L3a03b8.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3a03be.  v0:= temp;
  #L3a03c0.  return v0;
}
procedure `int` `getValue`(`org.joda.time.LocalTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalTime;.getValue:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a03d4.  if v4 == 0 then goto L3a047e;
  #L3a03d8.  v0:= 1I;
  #L3a03da.  if v4 == v0 then goto L3a045c;
  #L3a03de.  v0:= 2I;
  #L3a03e0.  if v4 == v0 then goto L3a043a;
  #L3a03e4.  v0:= 3I;
  #L3a03e6.  if v4 != v0 then goto L3a040c;
  #L3a03ea.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a03f0.  v4:= temp @kind object;
  #L3a03f2.  call temp:= `millisOfSecond`(v4) @signature `Lorg/joda/time/Chronology;.millisOfSecond:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a03f8.  v4:= temp @kind object;
  #L3a03fa.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a0400.  v0:= temp @kind wide;
  #L3a0402.  call temp:= `get`(v4, v0) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3a0408.  v4:= temp;
  #L3a040a.  return v4;
  #L3a040c.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L3a0410.  v1:= new `java.lang.StringBuilder`;
  #L3a0414.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a041a.  v2:= "Invalid index: " @kind object;
  #L3a041e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a0424.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a042a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a0430.  v4:= temp @kind object;
  #L3a0432.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a0438.  throw v0;
  #L3a043a.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0440.  v4:= temp @kind object;
  #L3a0442.  call temp:= `secondOfMinute`(v4) @signature `Lorg/joda/time/Chronology;.secondOfMinute:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a0448.  v4:= temp @kind object;
  #L3a044a.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a0450.  v0:= temp @kind wide;
  #L3a0452.  call temp:= `get`(v4, v0) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3a0458.  v4:= temp;
  #L3a045a.  return v4;
  #L3a045c.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0462.  v4:= temp @kind object;
  #L3a0464.  call temp:= `minuteOfHour`(v4) @signature `Lorg/joda/time/Chronology;.minuteOfHour:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a046a.  v4:= temp @kind object;
  #L3a046c.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a0472.  v0:= temp @kind wide;
  #L3a0474.  call temp:= `get`(v4, v0) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3a047a.  v4:= temp;
  #L3a047c.  return v4;
  #L3a047e.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0484.  v4:= temp @kind object;
  #L3a0486.  call temp:= `hourOfDay`(v4) @signature `Lorg/joda/time/Chronology;.hourOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a048c.  v4:= temp @kind object;
  #L3a048e.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a0494.  v0:= temp @kind wide;
  #L3a0496.  call temp:= `get`(v4, v0) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L3a049c.  v4:= temp;
  #L3a049e.  return v4;
}
procedure `org.joda.time.LocalTime$Property` `hourOfDay`(`org.joda.time.LocalTime` v2 @kind this) @signature `Lorg/joda/time/LocalTime;.hourOfDay:()Lorg/joda/time/LocalTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a0dc0.  v0:= new `org.joda.time.LocalTime$Property`;
  #L3a0dc4.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0dca.  v1:= temp @kind object;
  #L3a0dcc.  call temp:= `hourOfDay`(v1) @signature `Lorg/joda/time/Chronology;.hourOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a0dd2.  v1:= temp @kind object;
  #L3a0dd4.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalTime$Property;.<init>:(Lorg/joda/time/LocalTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L3a0dda.  return v0 @kind object;
}
procedure `boolean` `isSupported`(`org.joda.time.LocalTime` v2 @kind this, `org.joda.time.DateTimeFieldType` v3 @kind object) @signature `Lorg/joda/time/LocalTime;.isSupported:(Lorg/joda/time/DateTimeFieldType;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a00f8.  v0:= 0I;
  #L3a00fa.  if v3 != 0 then goto L3a0100;
  #L3a00fe.  return v0;
  #L3a0100.  call temp:= `getDurationType`(v3) @signature `Lorg/joda/time/DateTimeFieldType;.getDurationType:()Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L3a0106.  v1:= temp @kind object;
  #L3a0108.  call temp:= `isSupported`(v2, v1) @signature `Lorg/joda/time/LocalTime;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @kind virtual;
  #L3a010e.  v1:= temp;
  #L3a0110.  if v1 != 0 then goto L3a0116;
  #L3a0114.  return v0;
  #L3a0116.  call temp:= `getRangeDurationType`(v3) @signature `Lorg/joda/time/DateTimeFieldType;.getRangeDurationType:()Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L3a011c.  v3:= temp @kind object;
  #L3a011e.  call temp:= `isSupported`(v2, v3) @signature `Lorg/joda/time/LocalTime;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @kind virtual;
  #L3a0124.  v1:= temp;
  #L3a0126.  if v1 != 0 then goto L3a0136;
  #L3a012a.  call temp:= `days`() @signature `Lorg/joda/time/DurationFieldType;.days:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a0130.  v1:= temp @kind object;
  #L3a0132.  if v3 != v1 then goto L3a0138;
  #L3a0136.  v0:= 1I;
  #L3a0138.  return v0;
}
procedure `boolean` `isSupported`(`org.joda.time.LocalTime` v6 @kind this, `org.joda.time.DurationFieldType` v7 @kind object) @signature `Lorg/joda/time/LocalTime;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a014c.  v0:= 0I;
  #L3a014e.  if v7 != 0 then goto L3a0154;
  #L3a0152.  return v0;
  #L3a0154.  call temp:= `getChronology`(v6) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a015a.  v1:= temp @kind object;
  #L3a015c.  call temp:= `getField`(v7, v1) @signature `Lorg/joda/time/DurationFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;` @kind virtual;
  #L3a0162.  v1:= temp @kind object;
  #L3a0164.  v2:= `@@org.joda.time.LocalTime.TIME_DURATION_TYPES` @type ^`java.util.Set` @kind object;
  #L3a0168.  call temp:= `contains`(v2, v7) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3a016e.  v7:= temp;
  #L3a0170.  if v7 != 0 then goto L3a01a0;
  #L3a0174.  call temp:= `getUnitMillis`(v1) @signature `Lorg/joda/time/DurationField;.getUnitMillis:()J` @kind virtual;
  #L3a017a.  v2:= temp @kind wide;
  #L3a017c.  call temp:= `getChronology`(v6) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0182.  v7:= temp @kind object;
  #L3a0184.  call temp:= `days`(v7) @signature `Lorg/joda/time/Chronology;.days:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3a018a.  v7:= temp @kind object;
  #L3a018c.  call temp:= `getUnitMillis`(v7) @signature `Lorg/joda/time/DurationField;.getUnitMillis:()J` @kind virtual;
  #L3a0192.  v4:= temp @kind wide;
  #L3a0194.  v7:= lcmp(v2, v4);
  #L3a0198.  if v7 >= 0 then goto L3a019e;
  #L3a019c.  goto L3a01a0;
  #L3a019e.  return v0;
  #L3a01a0.  call temp:= `isSupported`(v1) @signature `Lorg/joda/time/DurationField;.isSupported:()Z` @kind virtual;
  #L3a01a6.  v7:= temp;
  #L3a01a8.  return v7;
}
procedure `org.joda.time.LocalTime$Property` `millisOfDay`(`org.joda.time.LocalTime` v2 @kind this) @signature `Lorg/joda/time/LocalTime;.millisOfDay:()Lorg/joda/time/LocalTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a0dec.  v0:= new `org.joda.time.LocalTime$Property`;
  #L3a0df0.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0df6.  v1:= temp @kind object;
  #L3a0df8.  call temp:= `millisOfDay`(v1) @signature `Lorg/joda/time/Chronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a0dfe.  v1:= temp @kind object;
  #L3a0e00.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalTime$Property;.<init>:(Lorg/joda/time/LocalTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L3a0e06.  return v0 @kind object;
}
procedure `org.joda.time.LocalTime$Property` `millisOfSecond`(`org.joda.time.LocalTime` v2 @kind this) @signature `Lorg/joda/time/LocalTime;.millisOfSecond:()Lorg/joda/time/LocalTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a0e18.  v0:= new `org.joda.time.LocalTime$Property`;
  #L3a0e1c.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0e22.  v1:= temp @kind object;
  #L3a0e24.  call temp:= `millisOfSecond`(v1) @signature `Lorg/joda/time/Chronology;.millisOfSecond:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a0e2a.  v1:= temp @kind object;
  #L3a0e2c.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalTime$Property;.<init>:(Lorg/joda/time/LocalTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L3a0e32.  return v0 @kind object;
}
procedure `org.joda.time.LocalTime` `minus`(`org.joda.time.LocalTime` v1 @kind this, `org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/LocalTime;.minus:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a07c4.  v0:= -1I;
  #L3a07c6.  call temp:= `withPeriodAdded`(v1, v2, v0) @signature `Lorg/joda/time/LocalTime;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a07cc.  v2:= temp @kind object;
  #L3a07ce.  return v2 @kind object;
}
procedure `org.joda.time.LocalTime` `minusHours`(`org.joda.time.LocalTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalTime;.minusHours:(I)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a07e0.  if v4 != 0 then goto L3a07e6;
  #L3a07e4.  return v3 @kind object;
  #L3a07e6.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a07ec.  v0:= temp @kind object;
  #L3a07ee.  call temp:= `hours`(v0) @signature `Lorg/joda/time/Chronology;.hours:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3a07f4.  v0:= temp @kind object;
  #L3a07f6.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a07fc.  v1:= temp @kind wide;
  #L3a07fe.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L3a0804.  v0:= temp @kind wide;
  #L3a0806.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalTime;.withLocalMillis:(J)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a080c.  v4:= temp @kind object;
  #L3a080e.  return v4 @kind object;
}
procedure `org.joda.time.LocalTime` `minusMillis`(`org.joda.time.LocalTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalTime;.minusMillis:(I)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0820.  if v4 != 0 then goto L3a0826;
  #L3a0824.  return v3 @kind object;
  #L3a0826.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a082c.  v0:= temp @kind object;
  #L3a082e.  call temp:= `millis`(v0) @signature `Lorg/joda/time/Chronology;.millis:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3a0834.  v0:= temp @kind object;
  #L3a0836.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a083c.  v1:= temp @kind wide;
  #L3a083e.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L3a0844.  v0:= temp @kind wide;
  #L3a0846.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalTime;.withLocalMillis:(J)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a084c.  v4:= temp @kind object;
  #L3a084e.  return v4 @kind object;
}
procedure `org.joda.time.LocalTime` `minusMinutes`(`org.joda.time.LocalTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalTime;.minusMinutes:(I)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0860.  if v4 != 0 then goto L3a0866;
  #L3a0864.  return v3 @kind object;
  #L3a0866.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a086c.  v0:= temp @kind object;
  #L3a086e.  call temp:= `minutes`(v0) @signature `Lorg/joda/time/Chronology;.minutes:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3a0874.  v0:= temp @kind object;
  #L3a0876.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a087c.  v1:= temp @kind wide;
  #L3a087e.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L3a0884.  v0:= temp @kind wide;
  #L3a0886.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalTime;.withLocalMillis:(J)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a088c.  v4:= temp @kind object;
  #L3a088e.  return v4 @kind object;
}
procedure `org.joda.time.LocalTime` `minusSeconds`(`org.joda.time.LocalTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalTime;.minusSeconds:(I)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a08a0.  if v4 != 0 then goto L3a08a6;
  #L3a08a4.  return v3 @kind object;
  #L3a08a6.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a08ac.  v0:= temp @kind object;
  #L3a08ae.  call temp:= `seconds`(v0) @signature `Lorg/joda/time/Chronology;.seconds:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3a08b4.  v0:= temp @kind object;
  #L3a08b6.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a08bc.  v1:= temp @kind wide;
  #L3a08be.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L3a08c4.  v0:= temp @kind wide;
  #L3a08c6.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalTime;.withLocalMillis:(J)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a08cc.  v4:= temp @kind object;
  #L3a08ce.  return v4 @kind object;
}
procedure `org.joda.time.LocalTime$Property` `minuteOfHour`(`org.joda.time.LocalTime` v2 @kind this) @signature `Lorg/joda/time/LocalTime;.minuteOfHour:()Lorg/joda/time/LocalTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a0e44.  v0:= new `org.joda.time.LocalTime$Property`;
  #L3a0e48.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0e4e.  v1:= temp @kind object;
  #L3a0e50.  call temp:= `minuteOfHour`(v1) @signature `Lorg/joda/time/Chronology;.minuteOfHour:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a0e56.  v1:= temp @kind object;
  #L3a0e58.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalTime$Property;.<init>:(Lorg/joda/time/LocalTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L3a0e5e.  return v0 @kind object;
}
procedure `org.joda.time.LocalTime` `plus`(`org.joda.time.LocalTime` v1 @kind this, `org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/LocalTime;.plus:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a099c.  v0:= 1I;
  #L3a099e.  call temp:= `withPeriodAdded`(v1, v2, v0) @signature `Lorg/joda/time/LocalTime;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a09a4.  v2:= temp @kind object;
  #L3a09a6.  return v2 @kind object;
}
procedure `org.joda.time.LocalTime` `plusHours`(`org.joda.time.LocalTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalTime;.plusHours:(I)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a09b8.  if v4 != 0 then goto L3a09be;
  #L3a09bc.  return v3 @kind object;
  #L3a09be.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a09c4.  v0:= temp @kind object;
  #L3a09c6.  call temp:= `hours`(v0) @signature `Lorg/joda/time/Chronology;.hours:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3a09cc.  v0:= temp @kind object;
  #L3a09ce.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a09d4.  v1:= temp @kind wide;
  #L3a09d6.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L3a09dc.  v0:= temp @kind wide;
  #L3a09de.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalTime;.withLocalMillis:(J)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a09e4.  v4:= temp @kind object;
  #L3a09e6.  return v4 @kind object;
}
procedure `org.joda.time.LocalTime` `plusMillis`(`org.joda.time.LocalTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalTime;.plusMillis:(I)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a09f8.  if v4 != 0 then goto L3a09fe;
  #L3a09fc.  return v3 @kind object;
  #L3a09fe.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0a04.  v0:= temp @kind object;
  #L3a0a06.  call temp:= `millis`(v0) @signature `Lorg/joda/time/Chronology;.millis:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3a0a0c.  v0:= temp @kind object;
  #L3a0a0e.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a0a14.  v1:= temp @kind wide;
  #L3a0a16.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L3a0a1c.  v0:= temp @kind wide;
  #L3a0a1e.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalTime;.withLocalMillis:(J)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a0a24.  v4:= temp @kind object;
  #L3a0a26.  return v4 @kind object;
}
procedure `org.joda.time.LocalTime` `plusMinutes`(`org.joda.time.LocalTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalTime;.plusMinutes:(I)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0a38.  if v4 != 0 then goto L3a0a3e;
  #L3a0a3c.  return v3 @kind object;
  #L3a0a3e.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0a44.  v0:= temp @kind object;
  #L3a0a46.  call temp:= `minutes`(v0) @signature `Lorg/joda/time/Chronology;.minutes:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3a0a4c.  v0:= temp @kind object;
  #L3a0a4e.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a0a54.  v1:= temp @kind wide;
  #L3a0a56.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L3a0a5c.  v0:= temp @kind wide;
  #L3a0a5e.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalTime;.withLocalMillis:(J)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a0a64.  v4:= temp @kind object;
  #L3a0a66.  return v4 @kind object;
}
procedure `org.joda.time.LocalTime` `plusSeconds`(`org.joda.time.LocalTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalTime;.plusSeconds:(I)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0a78.  if v4 != 0 then goto L3a0a7e;
  #L3a0a7c.  return v3 @kind object;
  #L3a0a7e.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0a84.  v0:= temp @kind object;
  #L3a0a86.  call temp:= `seconds`(v0) @signature `Lorg/joda/time/Chronology;.seconds:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3a0a8c.  v0:= temp @kind object;
  #L3a0a8e.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a0a94.  v1:= temp @kind wide;
  #L3a0a96.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L3a0a9c.  v0:= temp @kind wide;
  #L3a0a9e.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalTime;.withLocalMillis:(J)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a0aa4.  v4:= temp @kind object;
  #L3a0aa6.  return v4 @kind object;
}
procedure `org.joda.time.LocalTime$Property` `property`(`org.joda.time.LocalTime` v3 @kind this, `org.joda.time.DateTimeFieldType` v4 @kind object) @signature `Lorg/joda/time/LocalTime;.property:(Lorg/joda/time/DateTimeFieldType;)Lorg/joda/time/LocalTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0e70.  if v4 == 0 then goto L3a0ed4;
  #L3a0e74.  call temp:= `isSupported`(v3, v4) @signature `Lorg/joda/time/LocalTime;.isSupported:(Lorg/joda/time/DateTimeFieldType;)Z` @kind virtual;
  #L3a0e7a.  v0:= temp;
  #L3a0e7c.  if v0 == 0 then goto L3a0e9c;
  #L3a0e80.  v0:= new `org.joda.time.LocalTime$Property`;
  #L3a0e84.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0e8a.  v1:= temp @kind object;
  #L3a0e8c.  call temp:= `getField`(v4, v1) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a0e92.  v4:= temp @kind object;
  #L3a0e94.  call `<init>`(v0, v3, v4) @signature `Lorg/joda/time/LocalTime$Property;.<init>:(Lorg/joda/time/LocalTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L3a0e9a.  return v0 @kind object;
  #L3a0e9c.  v0:= new `java.lang.IllegalArgumentException`;
  #L3a0ea0.  v1:= new `java.lang.StringBuilder`;
  #L3a0ea4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a0eaa.  v2:= "Field '" @kind object;
  #L3a0eae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a0eb4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a0eba.  v4:= "' is not supported" @kind object;
  #L3a0ebe.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a0ec4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a0eca.  v4:= temp @kind object;
  #L3a0ecc.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a0ed2.  throw v0;
  #L3a0ed4.  v4:= new `java.lang.IllegalArgumentException`;
  #L3a0ed8.  v0:= "The DateTimeFieldType must not be null" @kind object;
  #L3a0edc.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a0ee2.  throw v4;
}
procedure `org.joda.time.LocalTime$Property` `secondOfMinute`(`org.joda.time.LocalTime` v2 @kind this) @signature `Lorg/joda/time/LocalTime;.secondOfMinute:()Lorg/joda/time/LocalTime$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a0ef4.  v0:= new `org.joda.time.LocalTime$Property`;
  #L3a0ef8.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0efe.  v1:= temp @kind object;
  #L3a0f00.  call temp:= `secondOfMinute`(v1) @signature `Lorg/joda/time/Chronology;.secondOfMinute:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a0f06.  v1:= temp @kind object;
  #L3a0f08.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalTime$Property;.<init>:(Lorg/joda/time/LocalTime;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L3a0f0e.  return v0 @kind object;
}
procedure `int` `size`(`org.joda.time.LocalTime` v1 @kind this) @signature `Lorg/joda/time/LocalTime;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a04b0.  v0:= 4I;
  #L3a04b2.  return v0;
}
procedure `org.joda.time.DateTime` `toDateTimeToday`(`org.joda.time.LocalTime` v1 @kind this) @signature `Lorg/joda/time/LocalTime;.toDateTimeToday:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a05e8.  v0:= 0I;
  #L3a05ea.  call temp:= `toDateTimeToday`(v1, v0) @signature `Lorg/joda/time/LocalTime;.toDateTimeToday:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @kind virtual;
  #L3a05f0.  v0:= temp @kind object;
  #L3a05f2.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTimeToday`(`org.joda.time.LocalTime` v3 @kind this, `org.joda.time.DateTimeZone` v4 @kind object) @signature `Lorg/joda/time/LocalTime;.toDateTimeToday:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0604.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a060a.  v0:= temp @kind object;
  #L3a060c.  call temp:= `withZone`(v0, v4) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0612.  v4:= temp @kind object;
  #L3a0614.  call temp:= `currentTimeMillis`() @signature `Lorg/joda/time/DateTimeUtils;.currentTimeMillis:()J` @kind static;
  #L3a061a.  v0:= temp @kind wide;
  #L3a061c.  call temp:= `set`(v4, v3, v0) @signature `Lorg/joda/time/Chronology;.set:(Lorg/joda/time/ReadablePartial;J)J` @kind virtual;
  #L3a0622.  v0:= temp @kind wide;
  #L3a0624.  v2:= new `org.joda.time.DateTime`;
  #L3a0628.  call `<init>`(v2, v0, v4) @signature `Lorg/joda/time/DateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3a062e.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.LocalTime` v1 @kind this) @signature `Lorg/joda/time/LocalTime;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a052c.  call temp:= `time`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.time:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3a0532.  v0:= temp @kind object;
  #L3a0534.  call temp:= `print`(v0, v1) @signature `Lorg/joda/time/format/DateTimeFormatter;.print:(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;` @kind virtual;
  #L3a053a.  v0:= temp @kind object;
  #L3a053c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.LocalTime` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/joda/time/LocalTime;.toString:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3a0550.  if v1 != 0 then goto L3a055e;
  #L3a0554.  call temp:= `toString`(v0) @signature `Lorg/joda/time/LocalTime;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a055a.  v1:= temp @kind object;
  #L3a055c.  return v1 @kind object;
  #L3a055e.  call temp:= `forPattern`(v1) @signature `Lorg/joda/time/format/DateTimeFormat;.forPattern:(Ljava/lang/String;)Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3a0564.  v1:= temp @kind object;
  #L3a0566.  call temp:= `print`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatter;.print:(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;` @kind virtual;
  #L3a056c.  v1:= temp @kind object;
  #L3a056e.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.LocalTime` v0 @kind this, `java.lang.String` v1 @kind object, `java.util.Locale` v2 @kind object) @signature `Lorg/joda/time/LocalTime;.toString:(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3a0580.  if v1 != 0 then goto L3a058e;
  #L3a0584.  call temp:= `toString`(v0) @signature `Lorg/joda/time/LocalTime;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a058a.  v1:= temp @kind object;
  #L3a058c.  return v1 @kind object;
  #L3a058e.  call temp:= `forPattern`(v1) @signature `Lorg/joda/time/format/DateTimeFormat;.forPattern:(Ljava/lang/String;)Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L3a0594.  v1:= temp @kind object;
  #L3a0596.  call temp:= `withLocale`(v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.withLocale:(Ljava/util/Locale;)Lorg/joda/time/format/DateTimeFormatter;` @kind virtual;
  #L3a059c.  v1:= temp @kind object;
  #L3a059e.  call temp:= `print`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatter;.print:(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;` @kind virtual;
  #L3a05a4.  v1:= temp @kind object;
  #L3a05a6.  return v1 @kind object;
}
procedure `org.joda.time.LocalTime` `withField`(`org.joda.time.LocalTime` v2 @kind this, `org.joda.time.DateTimeFieldType` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/LocalTime;.withField:(Lorg/joda/time/DateTimeFieldType;I)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a0ab8.  if v3 == 0 then goto L3a0b2a;
  #L3a0abc.  call temp:= `isSupported`(v2, v3) @signature `Lorg/joda/time/LocalTime;.isSupported:(Lorg/joda/time/DateTimeFieldType;)Z` @kind virtual;
  #L3a0ac2.  v0:= temp;
  #L3a0ac4.  if v0 == 0 then goto L3a0af2;
  #L3a0ac8.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0ace.  v0:= temp @kind object;
  #L3a0ad0.  call temp:= `getField`(v3, v0) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a0ad6.  v3:= temp @kind object;
  #L3a0ad8.  call temp:= `getLocalMillis`(v2) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a0ade.  v0:= temp @kind wide;
  #L3a0ae0.  call temp:= `set`(v3, v0, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3a0ae6.  v3:= temp @kind wide;
  #L3a0ae8.  call temp:= `withLocalMillis`(v2, v3) @signature `Lorg/joda/time/LocalTime;.withLocalMillis:(J)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a0aee.  v3:= temp @kind object;
  #L3a0af0.  return v3 @kind object;
  #L3a0af2.  v4:= new `java.lang.IllegalArgumentException`;
  #L3a0af6.  v0:= new `java.lang.StringBuilder`;
  #L3a0afa.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a0b00.  v1:= "Field '" @kind object;
  #L3a0b04.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a0b0a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a0b10.  v3:= "' is not supported" @kind object;
  #L3a0b14.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a0b1a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a0b20.  v3:= temp @kind object;
  #L3a0b22.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a0b28.  throw v4;
  #L3a0b2a.  v3:= new `java.lang.IllegalArgumentException`;
  #L3a0b2e.  v4:= "Field must not be null" @kind object;
  #L3a0b32.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a0b38.  throw v3;
}
procedure `org.joda.time.LocalTime` `withFieldAdded`(`org.joda.time.LocalTime` v2 @kind this, `org.joda.time.DurationFieldType` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/LocalTime;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a0b4c.  if v3 == 0 then goto L3a0bc4;
  #L3a0b50.  call temp:= `isSupported`(v2, v3) @signature `Lorg/joda/time/LocalTime;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @kind virtual;
  #L3a0b56.  v0:= temp;
  #L3a0b58.  if v0 == 0 then goto L3a0b8c;
  #L3a0b5c.  if v4 != 0 then goto L3a0b62;
  #L3a0b60.  return v2 @kind object;
  #L3a0b62.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0b68.  v0:= temp @kind object;
  #L3a0b6a.  call temp:= `getField`(v3, v0) @signature `Lorg/joda/time/DurationFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;` @kind virtual;
  #L3a0b70.  v3:= temp @kind object;
  #L3a0b72.  call temp:= `getLocalMillis`(v2) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a0b78.  v0:= temp @kind wide;
  #L3a0b7a.  call temp:= `add`(v3, v0, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L3a0b80.  v3:= temp @kind wide;
  #L3a0b82.  call temp:= `withLocalMillis`(v2, v3) @signature `Lorg/joda/time/LocalTime;.withLocalMillis:(J)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a0b88.  v3:= temp @kind object;
  #L3a0b8a.  return v3 @kind object;
  #L3a0b8c.  v4:= new `java.lang.IllegalArgumentException`;
  #L3a0b90.  v0:= new `java.lang.StringBuilder`;
  #L3a0b94.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a0b9a.  v1:= "Field '" @kind object;
  #L3a0b9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a0ba4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a0baa.  v3:= "' is not supported" @kind object;
  #L3a0bae.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a0bb4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a0bba.  v3:= temp @kind object;
  #L3a0bbc.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a0bc2.  throw v4;
  #L3a0bc4.  v3:= new `java.lang.IllegalArgumentException`;
  #L3a0bc8.  v4:= "Field must not be null" @kind object;
  #L3a0bcc.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a0bd2.  throw v3;
}
procedure `org.joda.time.LocalTime` `withFields`(`org.joda.time.LocalTime` v3 @kind this, `org.joda.time.ReadablePartial` v4 @kind object) @signature `Lorg/joda/time/LocalTime;.withFields:(Lorg/joda/time/ReadablePartial;)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0be4.  if v4 != 0 then goto L3a0bea;
  #L3a0be8.  return v3 @kind object;
  #L3a0bea.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0bf0.  v0:= temp @kind object;
  #L3a0bf2.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a0bf8.  v1:= temp @kind wide;
  #L3a0bfa.  call temp:= `set`(v0, v4, v1) @signature `Lorg/joda/time/Chronology;.set:(Lorg/joda/time/ReadablePartial;J)J` @kind virtual;
  #L3a0c00.  v0:= temp @kind wide;
  #L3a0c02.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalTime;.withLocalMillis:(J)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a0c08.  v4:= temp @kind object;
  #L3a0c0a.  return v4 @kind object;
}
procedure `org.joda.time.LocalTime` `withHourOfDay`(`org.joda.time.LocalTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalTime;.withHourOfDay:(I)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0c1c.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0c22.  v0:= temp @kind object;
  #L3a0c24.  call temp:= `hourOfDay`(v0) @signature `Lorg/joda/time/Chronology;.hourOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a0c2a.  v0:= temp @kind object;
  #L3a0c2c.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a0c32.  v1:= temp @kind wide;
  #L3a0c34.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3a0c3a.  v0:= temp @kind wide;
  #L3a0c3c.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalTime;.withLocalMillis:(J)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a0c42.  v4:= temp @kind object;
  #L3a0c44.  return v4 @kind object;
}
procedure `org.joda.time.LocalTime` `withLocalMillis`(`org.joda.time.LocalTime` v3 @kind this, `long` v4 ) @signature `Lorg/joda/time/LocalTime;.withLocalMillis:(J)Lorg/joda/time/LocalTime;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3a0c58.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a0c5e.  v0:= temp @kind wide;
  #L3a0c60.  v2:= lcmp(v4, v0);
  #L3a0c64.  if v2 != 0 then goto L3a0c6c;
  #L3a0c68.  v0:= v3 @kind object;
  #L3a0c6a.  goto L3a0c7e;
  #L3a0c6c.  v0:= new `org.joda.time.LocalTime`;
  #L3a0c70.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0c76.  v1:= temp @kind object;
  #L3a0c78.  call `<init>`(v0, v4, v1) @signature `Lorg/joda/time/LocalTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L3a0c7e.  return v0 @kind object;
}
procedure `org.joda.time.LocalTime` `withMillisOfDay`(`org.joda.time.LocalTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalTime;.withMillisOfDay:(I)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0c90.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0c96.  v0:= temp @kind object;
  #L3a0c98.  call temp:= `millisOfDay`(v0) @signature `Lorg/joda/time/Chronology;.millisOfDay:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a0c9e.  v0:= temp @kind object;
  #L3a0ca0.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a0ca6.  v1:= temp @kind wide;
  #L3a0ca8.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3a0cae.  v0:= temp @kind wide;
  #L3a0cb0.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalTime;.withLocalMillis:(J)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a0cb6.  v4:= temp @kind object;
  #L3a0cb8.  return v4 @kind object;
}
procedure `org.joda.time.LocalTime` `withMillisOfSecond`(`org.joda.time.LocalTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalTime;.withMillisOfSecond:(I)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0ccc.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0cd2.  v0:= temp @kind object;
  #L3a0cd4.  call temp:= `millisOfSecond`(v0) @signature `Lorg/joda/time/Chronology;.millisOfSecond:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a0cda.  v0:= temp @kind object;
  #L3a0cdc.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a0ce2.  v1:= temp @kind wide;
  #L3a0ce4.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3a0cea.  v0:= temp @kind wide;
  #L3a0cec.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalTime;.withLocalMillis:(J)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a0cf2.  v4:= temp @kind object;
  #L3a0cf4.  return v4 @kind object;
}
procedure `org.joda.time.LocalTime` `withMinuteOfHour`(`org.joda.time.LocalTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalTime;.withMinuteOfHour:(I)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0d08.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0d0e.  v0:= temp @kind object;
  #L3a0d10.  call temp:= `minuteOfHour`(v0) @signature `Lorg/joda/time/Chronology;.minuteOfHour:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a0d16.  v0:= temp @kind object;
  #L3a0d18.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a0d1e.  v1:= temp @kind wide;
  #L3a0d20.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3a0d26.  v0:= temp @kind wide;
  #L3a0d28.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalTime;.withLocalMillis:(J)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a0d2e.  v4:= temp @kind object;
  #L3a0d30.  return v4 @kind object;
}
procedure `org.joda.time.LocalTime` `withPeriodAdded`(`org.joda.time.LocalTime` v3 @kind this, `org.joda.time.ReadablePeriod` v4 @kind object, `int` v5 ) @signature `Lorg/joda/time/LocalTime;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0d44.  if v4 == 0 then goto L3a0d70;
  #L3a0d48.  if v5 != 0 then goto L3a0d4e;
  #L3a0d4c.  goto L3a0d70;
  #L3a0d4e.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0d54.  v0:= temp @kind object;
  #L3a0d56.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a0d5c.  v1:= temp @kind wide;
  #L3a0d5e.  call temp:= `add`(v0, v4, v1, v5) @signature `Lorg/joda/time/Chronology;.add:(Lorg/joda/time/ReadablePeriod;JI)J` @kind virtual;
  #L3a0d64.  v4:= temp @kind wide;
  #L3a0d66.  call temp:= `withLocalMillis`(v3, v4) @signature `Lorg/joda/time/LocalTime;.withLocalMillis:(J)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a0d6c.  v4:= temp @kind object;
  #L3a0d6e.  return v4 @kind object;
  #L3a0d70.  return v3 @kind object;
}
procedure `org.joda.time.LocalTime` `withSecondOfMinute`(`org.joda.time.LocalTime` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalTime;.withSecondOfMinute:(I)Lorg/joda/time/LocalTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a0d84.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L3a0d8a.  v0:= temp @kind object;
  #L3a0d8c.  call temp:= `secondOfMinute`(v0) @signature `Lorg/joda/time/Chronology;.secondOfMinute:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L3a0d92.  v0:= temp @kind object;
  #L3a0d94.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L3a0d9a.  v1:= temp @kind wide;
  #L3a0d9c.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L3a0da2.  v0:= temp @kind wide;
  #L3a0da4.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalTime;.withLocalMillis:(J)Lorg/joda/time/LocalTime;` @kind virtual;
  #L3a0daa.  v4:= temp @kind object;
  #L3a0dac.  return v4 @kind object;
}
