record `org.joda.time.Weeks` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.base.BaseSingleFieldPeriod` @kind class {
}
global `org.joda.time.Weeks` `@@org.joda.time.Weeks.MAX_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Weeks` `@@org.joda.time.Weeks.MIN_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Weeks` `@@org.joda.time.Weeks.ONE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.format.PeriodFormatter` `@@org.joda.time.Weeks.PARSER` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.joda.time.Weeks` `@@org.joda.time.Weeks.THREE` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Weeks` `@@org.joda.time.Weeks.TWO` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.joda.time.Weeks` `@@org.joda.time.Weeks.ZERO` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@org.joda.time.Weeks.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/Weeks;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a9b88.  v0:= new `org.joda.time.Weeks`;
  #L3a9b8c.  v1:= 0I;
  #L3a9b8e.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Weeks;.<init>:(I)V` @kind direct;
  #L3a9b94.  `@@org.joda.time.Weeks.ZERO` @type ^`org.joda.time.Weeks` := v0 @kind object;
  #L3a9b98.  v0:= new `org.joda.time.Weeks`;
  #L3a9b9c.  v1:= 1I;
  #L3a9b9e.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Weeks;.<init>:(I)V` @kind direct;
  #L3a9ba4.  `@@org.joda.time.Weeks.ONE` @type ^`org.joda.time.Weeks` := v0 @kind object;
  #L3a9ba8.  v0:= new `org.joda.time.Weeks`;
  #L3a9bac.  v1:= 2I;
  #L3a9bae.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Weeks;.<init>:(I)V` @kind direct;
  #L3a9bb4.  `@@org.joda.time.Weeks.TWO` @type ^`org.joda.time.Weeks` := v0 @kind object;
  #L3a9bb8.  v0:= new `org.joda.time.Weeks`;
  #L3a9bbc.  v1:= 3I;
  #L3a9bbe.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Weeks;.<init>:(I)V` @kind direct;
  #L3a9bc4.  `@@org.joda.time.Weeks.THREE` @type ^`org.joda.time.Weeks` := v0 @kind object;
  #L3a9bc8.  v0:= new `org.joda.time.Weeks`;
  #L3a9bcc.  v1:= 2147483647I;
  #L3a9bd2.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Weeks;.<init>:(I)V` @kind direct;
  #L3a9bd8.  `@@org.joda.time.Weeks.MAX_VALUE` @type ^`org.joda.time.Weeks` := v0 @kind object;
  #L3a9bdc.  v0:= new `org.joda.time.Weeks`;
  #L3a9be0.  v1:= -2147483648I;
  #L3a9be4.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Weeks;.<init>:(I)V` @kind direct;
  #L3a9bea.  `@@org.joda.time.Weeks.MIN_VALUE` @type ^`org.joda.time.Weeks` := v0 @kind object;
  #L3a9bee.  call temp:= `standard`() @signature `Lorg/joda/time/format/ISOPeriodFormat;.standard:()Lorg/joda/time/format/PeriodFormatter;` @kind static;
  #L3a9bf4.  v0:= temp @kind object;
  #L3a9bf6.  call temp:= `weeks`() @signature `Lorg/joda/time/PeriodType;.weeks:()Lorg/joda/time/PeriodType;` @kind static;
  #L3a9bfc.  v1:= temp @kind object;
  #L3a9bfe.  call temp:= `withParseType`(v0, v1) @signature `Lorg/joda/time/format/PeriodFormatter;.withParseType:(Lorg/joda/time/PeriodType;)Lorg/joda/time/format/PeriodFormatter;` @kind virtual;
  #L3a9c04.  v0:= temp @kind object;
  #L3a9c06.  `@@org.joda.time.Weeks.PARSER` @type ^`org.joda.time.format.PeriodFormatter` := v0 @kind object;
  #L3a9c0a.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.Weeks` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/Weeks;.<init>:(I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3a9c1c.  call `<init>`(v0, v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.<init>:(I)V` @kind direct;
  #L3a9c22.  return @kind void;
}
procedure `org.joda.time.Weeks` `parseWeeks`(`java.lang.String` v1 @kind object) @signature `Lorg/joda/time/Weeks;.parseWeeks:(Ljava/lang/String;)Lorg/joda/time/Weeks;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a9980.  if v1 != 0 then goto L3a998a;
  #L3a9984.  v1:= `@@org.joda.time.Weeks.ZERO` @type ^`org.joda.time.Weeks` @kind object;
  #L3a9988.  return v1 @kind object;
  #L3a998a.  v0:= `@@org.joda.time.Weeks.PARSER` @type ^`org.joda.time.format.PeriodFormatter` @kind object;
  #L3a998e.  call temp:= `parsePeriod`(v0, v1) @signature `Lorg/joda/time/format/PeriodFormatter;.parsePeriod:(Ljava/lang/String;)Lorg/joda/time/Period;` @kind virtual;
  #L3a9994.  v1:= temp @kind object;
  #L3a9996.  call temp:= `getWeeks`(v1) @signature `Lorg/joda/time/Period;.getWeeks:()I` @kind virtual;
  #L3a999c.  v1:= temp;
  #L3a999e.  call temp:= `weeks`(v1) @signature `Lorg/joda/time/Weeks;.weeks:(I)Lorg/joda/time/Weeks;` @kind static;
  #L3a99a4.  v1:= temp @kind object;
  #L3a99a6.  return v1 @kind object;
}
procedure `java.lang.Object` `readResolve`(`org.joda.time.Weeks` v1 @kind this) @signature `Lorg/joda/time/Weeks;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3a9718.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a971e.  v0:= temp;
  #L3a9720.  call temp:= `weeks`(v0) @signature `Lorg/joda/time/Weeks;.weeks:(I)Lorg/joda/time/Weeks;` @kind static;
  #L3a9726.  v0:= temp @kind object;
  #L3a9728.  return v0 @kind object;
}
procedure `org.joda.time.Weeks` `standardWeeksIn`(`org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/Weeks;.standardWeeksIn:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/Weeks;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a9a10.  v0:= 604800000L;
  #L3a9a16.  call temp:= `standardPeriodIn`(v2, v0) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.standardPeriodIn:(Lorg/joda/time/ReadablePeriod;J)I` @kind static;
  #L3a9a1c.  v2:= temp;
  #L3a9a1e.  call temp:= `weeks`(v2) @signature `Lorg/joda/time/Weeks;.weeks:(I)Lorg/joda/time/Weeks;` @kind static;
  #L3a9a24.  v2:= temp @kind object;
  #L3a9a26.  return v2 @kind object;
}
procedure `org.joda.time.Weeks` `weeks`(`int` v1 ) @signature `Lorg/joda/time/Weeks;.weeks:(I)Lorg/joda/time/Weeks;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a9a38.  v0:= -2147483648I;
  #L3a9a3c.  if v1 == v0 then goto L3a9a8a;
  #L3a9a40.  v0:= 2147483647I;
  #L3a9a46.  if v1 == v0 then goto L3a9a84;
  #L3a9a4a.  if v1 == 0 then goto L3a9a7e;
  #L3a9a4e.  v0:= 1I;
  #L3a9a50.  if v1 == v0 then goto L3a9a78;
  #L3a9a54.  v0:= 2I;
  #L3a9a56.  if v1 == v0 then goto L3a9a72;
  #L3a9a5a.  v0:= 3I;
  #L3a9a5c.  if v1 == v0 then goto L3a9a6c;
  #L3a9a60.  v0:= new `org.joda.time.Weeks`;
  #L3a9a64.  call `<init>`(v0, v1) @signature `Lorg/joda/time/Weeks;.<init>:(I)V` @kind direct;
  #L3a9a6a.  return v0 @kind object;
  #L3a9a6c.  v1:= `@@org.joda.time.Weeks.THREE` @type ^`org.joda.time.Weeks` @kind object;
  #L3a9a70.  return v1 @kind object;
  #L3a9a72.  v1:= `@@org.joda.time.Weeks.TWO` @type ^`org.joda.time.Weeks` @kind object;
  #L3a9a76.  return v1 @kind object;
  #L3a9a78.  v1:= `@@org.joda.time.Weeks.ONE` @type ^`org.joda.time.Weeks` @kind object;
  #L3a9a7c.  return v1 @kind object;
  #L3a9a7e.  v1:= `@@org.joda.time.Weeks.ZERO` @type ^`org.joda.time.Weeks` @kind object;
  #L3a9a82.  return v1 @kind object;
  #L3a9a84.  v1:= `@@org.joda.time.Weeks.MAX_VALUE` @type ^`org.joda.time.Weeks` @kind object;
  #L3a9a88.  return v1 @kind object;
  #L3a9a8a.  v1:= `@@org.joda.time.Weeks.MIN_VALUE` @type ^`org.joda.time.Weeks` @kind object;
  #L3a9a8e.  return v1 @kind object;
}
procedure `org.joda.time.Weeks` `weeksBetween`(`org.joda.time.ReadableInstant` v1 @kind object, `org.joda.time.ReadableInstant` v2 @kind object) @signature `Lorg/joda/time/Weeks;.weeksBetween:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Weeks;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a9aa0.  call temp:= `weeks`() @signature `Lorg/joda/time/DurationFieldType;.weeks:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a9aa6.  v0:= temp @kind object;
  #L3a9aa8.  call temp:= `between`(v1, v2, v0) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.between:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;Lorg/joda/time/DurationFieldType;)I` @kind static;
  #L3a9aae.  v1:= temp;
  #L3a9ab0.  call temp:= `weeks`(v1) @signature `Lorg/joda/time/Weeks;.weeks:(I)Lorg/joda/time/Weeks;` @kind static;
  #L3a9ab6.  v1:= temp @kind object;
  #L3a9ab8.  return v1 @kind object;
}
procedure `org.joda.time.Weeks` `weeksBetween`(`org.joda.time.ReadablePartial` v3 @kind object, `org.joda.time.ReadablePartial` v4 @kind object) @signature `Lorg/joda/time/Weeks;.weeksBetween:(Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePartial;)Lorg/joda/time/Weeks;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3a9acc.  v0:= instanceof @variable v3 @type ^`org.joda.time.LocalDate` @kind boolean;
  #L3a9ad0.  if v0 == 0 then goto L3a9b1e;
  #L3a9ad4.  v0:= instanceof @variable v4 @type ^`org.joda.time.LocalDate` @kind boolean;
  #L3a9ad8.  if v0 == 0 then goto L3a9b1e;
  #L3a9adc.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/ReadablePartial;.getChronology:()Lorg/joda/time/Chronology;` @kind interface;
  #L3a9ae2.  v0:= temp @kind object;
  #L3a9ae4.  call temp:= `getChronology`(v0) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L3a9aea.  v0:= temp @kind object;
  #L3a9aec.  call temp:= `weeks`(v0) @signature `Lorg/joda/time/Chronology;.weeks:()Lorg/joda/time/DurationField;` @kind virtual;
  #L3a9af2.  v0:= temp @kind object;
  #L3a9af4.  v4:= (`org.joda.time.LocalDate`) v4 @kind object;
  #L3a9af8.  call temp:= `getLocalMillis`(v4) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L3a9afe.  v1:= temp @kind wide;
  #L3a9b00.  v3:= (`org.joda.time.LocalDate`) v3 @kind object;
  #L3a9b04.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L3a9b0a.  v3:= temp @kind wide;
  #L3a9b0c.  call temp:= `getDifference`(v0, v1, v3) @signature `Lorg/joda/time/DurationField;.getDifference:(JJ)I` @kind virtual;
  #L3a9b12.  v3:= temp;
  #L3a9b14.  call temp:= `weeks`(v3) @signature `Lorg/joda/time/Weeks;.weeks:(I)Lorg/joda/time/Weeks;` @kind static;
  #L3a9b1a.  v3:= temp @kind object;
  #L3a9b1c.  return v3 @kind object;
  #L3a9b1e.  v0:= `@@org.joda.time.Weeks.ZERO` @type ^`org.joda.time.Weeks` @kind object;
  #L3a9b22.  call temp:= `between`(v3, v4, v0) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.between:(Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePartial;Lorg/joda/time/ReadablePeriod;)I` @kind static;
  #L3a9b28.  v3:= temp;
  #L3a9b2a.  call temp:= `weeks`(v3) @signature `Lorg/joda/time/Weeks;.weeks:(I)Lorg/joda/time/Weeks;` @kind static;
  #L3a9b30.  v3:= temp @kind object;
  #L3a9b32.  return v3 @kind object;
}
procedure `org.joda.time.Weeks` `weeksIn`(`org.joda.time.ReadableInterval` v2 @kind object) @signature `Lorg/joda/time/Weeks;.weeksIn:(Lorg/joda/time/ReadableInterval;)Lorg/joda/time/Weeks;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a9b44.  if v2 != 0 then goto L3a9b4e;
  #L3a9b48.  v2:= `@@org.joda.time.Weeks.ZERO` @type ^`org.joda.time.Weeks` @kind object;
  #L3a9b4c.  return v2 @kind object;
  #L3a9b4e.  call temp:= `getStart`(v2) @signature `Lorg/joda/time/ReadableInterval;.getStart:()Lorg/joda/time/DateTime;` @kind interface;
  #L3a9b54.  v0:= temp @kind object;
  #L3a9b56.  call temp:= `getEnd`(v2) @signature `Lorg/joda/time/ReadableInterval;.getEnd:()Lorg/joda/time/DateTime;` @kind interface;
  #L3a9b5c.  v2:= temp @kind object;
  #L3a9b5e.  call temp:= `weeks`() @signature `Lorg/joda/time/DurationFieldType;.weeks:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a9b64.  v1:= temp @kind object;
  #L3a9b66.  call temp:= `between`(v0, v2, v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.between:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;Lorg/joda/time/DurationFieldType;)I` @kind static;
  #L3a9b6c.  v2:= temp;
  #L3a9b6e.  call temp:= `weeks`(v2) @signature `Lorg/joda/time/Weeks;.weeks:(I)Lorg/joda/time/Weeks;` @kind static;
  #L3a9b74.  v2:= temp @kind object;
  #L3a9b76.  return v2 @kind object;
}
procedure `org.joda.time.Weeks` `dividedBy`(`org.joda.time.Weeks` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/Weeks;.dividedBy:(I)Lorg/joda/time/Weeks;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a98b0.  v0:= 1I;
  #L3a98b2.  if v2 != v0 then goto L3a98b8;
  #L3a98b6.  return v1 @kind object;
  #L3a98b8.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a98be.  v0:= temp;
  #L3a98c0.  v0:= v0 / v2 @kind int;
  #L3a98c2.  call temp:= `weeks`(v0) @signature `Lorg/joda/time/Weeks;.weeks:(I)Lorg/joda/time/Weeks;` @kind static;
  #L3a98c8.  v2:= temp @kind object;
  #L3a98ca.  return v2 @kind object;
}
procedure `org.joda.time.DurationFieldType` `getFieldType`(`org.joda.time.Weeks` v1 @kind this) @signature `Lorg/joda/time/Weeks;.getFieldType:()Lorg/joda/time/DurationFieldType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a97e8.  call temp:= `weeks`() @signature `Lorg/joda/time/DurationFieldType;.weeks:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L3a97ee.  v0:= temp @kind object;
  #L3a97f0.  return v0 @kind object;
}
procedure `org.joda.time.PeriodType` `getPeriodType`(`org.joda.time.Weeks` v1 @kind this) @signature `Lorg/joda/time/Weeks;.getPeriodType:()Lorg/joda/time/PeriodType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9864.  call temp:= `weeks`() @signature `Lorg/joda/time/PeriodType;.weeks:()Lorg/joda/time/PeriodType;` @kind static;
  #L3a986a.  v0:= temp @kind object;
  #L3a986c.  return v0 @kind object;
}
procedure `int` `getWeeks`(`org.joda.time.Weeks` v1 @kind this) @signature `Lorg/joda/time/Weeks;.getWeeks:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a96fc.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a9702.  v0:= temp;
  #L3a9704.  return v0;
}
procedure `boolean` `isGreaterThan`(`org.joda.time.Weeks` v3 @kind this, `org.joda.time.Weeks` v4 @kind object) @signature `Lorg/joda/time/Weeks;.isGreaterThan:(Lorg/joda/time/Weeks;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a9674.  v0:= 1I;
  #L3a9676.  v1:= 0I;
  #L3a9678.  if v4 != 0 then goto L3a968e;
  #L3a967c.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a9682.  v4:= temp;
  #L3a9684.  if v4 <= 0 then goto L3a968a;
  #L3a9688.  goto L3a968c;
  #L3a968a.  v0:= 0I;
  #L3a968c.  return v0;
  #L3a968e.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a9694.  v2:= temp;
  #L3a9696.  call temp:= `getValue`(v4) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a969c.  v4:= temp;
  #L3a969e.  if v2 <= v4 then goto L3a96a4;
  #L3a96a2.  goto L3a96a6;
  #L3a96a4.  v0:= 0I;
  #L3a96a6.  return v0;
}
procedure `boolean` `isLessThan`(`org.joda.time.Weeks` v3 @kind this, `org.joda.time.Weeks` v4 @kind object) @signature `Lorg/joda/time/Weeks;.isLessThan:(Lorg/joda/time/Weeks;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a96b8.  v0:= 1I;
  #L3a96ba.  v1:= 0I;
  #L3a96bc.  if v4 != 0 then goto L3a96d2;
  #L3a96c0.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a96c6.  v4:= temp;
  #L3a96c8.  if v4 >= 0 then goto L3a96ce;
  #L3a96cc.  goto L3a96d0;
  #L3a96ce.  v0:= 0I;
  #L3a96d0.  return v0;
  #L3a96d2.  call temp:= `getValue`(v3) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a96d8.  v2:= temp;
  #L3a96da.  call temp:= `getValue`(v4) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a96e0.  v4:= temp;
  #L3a96e2.  if v2 >= v4 then goto L3a96e8;
  #L3a96e6.  goto L3a96ea;
  #L3a96e8.  v0:= 0I;
  #L3a96ea.  return v0;
}
procedure `org.joda.time.Weeks` `minus`(`org.joda.time.Weeks` v0 @kind this, `int` v1 ) @signature `Lorg/joda/time/Weeks;.minus:(I)Lorg/joda/time/Weeks;` @AccessFlag PUBLIC {
    temp;

  #L3a98dc.  call temp:= `safeNegate`(v1) @signature `Lorg/joda/time/field/FieldUtils;.safeNegate:(I)I` @kind static;
  #L3a98e2.  v1:= temp;
  #L3a98e4.  call temp:= `plus`(v0, v1) @signature `Lorg/joda/time/Weeks;.plus:(I)Lorg/joda/time/Weeks;` @kind virtual;
  #L3a98ea.  v1:= temp @kind object;
  #L3a98ec.  return v1 @kind object;
}
procedure `org.joda.time.Weeks` `minus`(`org.joda.time.Weeks` v0 @kind this, `org.joda.time.Weeks` v1 @kind object) @signature `Lorg/joda/time/Weeks;.minus:(Lorg/joda/time/Weeks;)Lorg/joda/time/Weeks;` @AccessFlag PUBLIC {
    temp;

  #L3a9900.  if v1 != 0 then goto L3a9906;
  #L3a9904.  return v0 @kind object;
  #L3a9906.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a990c.  v1:= temp;
  #L3a990e.  call temp:= `minus`(v0, v1) @signature `Lorg/joda/time/Weeks;.minus:(I)Lorg/joda/time/Weeks;` @kind virtual;
  #L3a9914.  v1:= temp @kind object;
  #L3a9916.  return v1 @kind object;
}
procedure `org.joda.time.Weeks` `multipliedBy`(`org.joda.time.Weeks` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/Weeks;.multipliedBy:(I)Lorg/joda/time/Weeks;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9928.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a992e.  v0:= temp;
  #L3a9930.  call temp:= `safeMultiply`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L3a9936.  v2:= temp;
  #L3a9938.  call temp:= `weeks`(v2) @signature `Lorg/joda/time/Weeks;.weeks:(I)Lorg/joda/time/Weeks;` @kind static;
  #L3a993e.  v2:= temp @kind object;
  #L3a9940.  return v2 @kind object;
}
procedure `org.joda.time.Weeks` `negated`(`org.joda.time.Weeks` v1 @kind this) @signature `Lorg/joda/time/Weeks;.negated:()Lorg/joda/time/Weeks;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a9954.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a995a.  v0:= temp;
  #L3a995c.  call temp:= `safeNegate`(v0) @signature `Lorg/joda/time/field/FieldUtils;.safeNegate:(I)I` @kind static;
  #L3a9962.  v0:= temp;
  #L3a9964.  call temp:= `weeks`(v0) @signature `Lorg/joda/time/Weeks;.weeks:(I)Lorg/joda/time/Weeks;` @kind static;
  #L3a996a.  v0:= temp @kind object;
  #L3a996c.  return v0 @kind object;
}
procedure `org.joda.time.Weeks` `plus`(`org.joda.time.Weeks` v1 @kind this, `int` v2 ) @signature `Lorg/joda/time/Weeks;.plus:(I)Lorg/joda/time/Weeks;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a99b8.  if v2 != 0 then goto L3a99be;
  #L3a99bc.  return v1 @kind object;
  #L3a99be.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a99c4.  v0:= temp;
  #L3a99c6.  call temp:= `safeAdd`(v0, v2) @signature `Lorg/joda/time/field/FieldUtils;.safeAdd:(II)I` @kind static;
  #L3a99cc.  v2:= temp;
  #L3a99ce.  call temp:= `weeks`(v2) @signature `Lorg/joda/time/Weeks;.weeks:(I)Lorg/joda/time/Weeks;` @kind static;
  #L3a99d4.  v2:= temp @kind object;
  #L3a99d6.  return v2 @kind object;
}
procedure `org.joda.time.Weeks` `plus`(`org.joda.time.Weeks` v0 @kind this, `org.joda.time.Weeks` v1 @kind object) @signature `Lorg/joda/time/Weeks;.plus:(Lorg/joda/time/Weeks;)Lorg/joda/time/Weeks;` @AccessFlag PUBLIC {
    temp;

  #L3a99e8.  if v1 != 0 then goto L3a99ee;
  #L3a99ec.  return v0 @kind object;
  #L3a99ee.  call temp:= `getValue`(v1) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a99f4.  v1:= temp;
  #L3a99f6.  call temp:= `plus`(v0, v1) @signature `Lorg/joda/time/Weeks;.plus:(I)Lorg/joda/time/Weeks;` @kind virtual;
  #L3a99fc.  v1:= temp @kind object;
  #L3a99fe.  return v1 @kind object;
}
procedure `org.joda.time.Days` `toStandardDays`(`org.joda.time.Weeks` v2 @kind this) @signature `Lorg/joda/time/Weeks;.toStandardDays:()Lorg/joda/time/Days;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a978c.  call temp:= `getValue`(v2) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a9792.  v0:= temp;
  #L3a9794.  v1:= 7I;
  #L3a9796.  call temp:= `safeMultiply`(v0, v1) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L3a979c.  v0:= temp;
  #L3a979e.  call temp:= `days`(v0) @signature `Lorg/joda/time/Days;.days:(I)Lorg/joda/time/Days;` @kind static;
  #L3a97a4.  v0:= temp @kind object;
  #L3a97a6.  return v0 @kind object;
}
procedure `org.joda.time.Duration` `toStandardDuration`(`org.joda.time.Weeks` v5 @kind this) @signature `Lorg/joda/time/Weeks;.toStandardDuration:()Lorg/joda/time/Duration;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a97b8.  call temp:= `getValue`(v5) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a97be.  v0:= temp;
  #L3a97c0.  v0:= (`long`) v0 @kind i2l;
  #L3a97c2.  v2:= new `org.joda.time.Duration`;
  #L3a97c6.  v3:= 604800000L;
  #L3a97cc.  v0:= v0 * v3 @kind long;
  #L3a97d0.  call `<init>`(v2, v0) @signature `Lorg/joda/time/Duration;.<init>:(J)V` @kind direct;
  #L3a97d6.  return v2 @kind object;
}
procedure `org.joda.time.Hours` `toStandardHours`(`org.joda.time.Weeks` v2 @kind this) @signature `Lorg/joda/time/Weeks;.toStandardHours:()Lorg/joda/time/Hours;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a9804.  call temp:= `getValue`(v2) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a980a.  v0:= temp;
  #L3a980c.  v1:= 168I;
  #L3a9810.  call temp:= `safeMultiply`(v0, v1) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L3a9816.  v0:= temp;
  #L3a9818.  call temp:= `hours`(v0) @signature `Lorg/joda/time/Hours;.hours:(I)Lorg/joda/time/Hours;` @kind static;
  #L3a981e.  v0:= temp @kind object;
  #L3a9820.  return v0 @kind object;
}
procedure `org.joda.time.Minutes` `toStandardMinutes`(`org.joda.time.Weeks` v2 @kind this) @signature `Lorg/joda/time/Weeks;.toStandardMinutes:()Lorg/joda/time/Minutes;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a9834.  call temp:= `getValue`(v2) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a983a.  v0:= temp;
  #L3a983c.  v1:= 10080I;
  #L3a9840.  call temp:= `safeMultiply`(v0, v1) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L3a9846.  v0:= temp;
  #L3a9848.  call temp:= `minutes`(v0) @signature `Lorg/joda/time/Minutes;.minutes:(I)Lorg/joda/time/Minutes;` @kind static;
  #L3a984e.  v0:= temp @kind object;
  #L3a9850.  return v0 @kind object;
}
procedure `org.joda.time.Seconds` `toStandardSeconds`(`org.joda.time.Weeks` v2 @kind this) @signature `Lorg/joda/time/Weeks;.toStandardSeconds:()Lorg/joda/time/Seconds;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a9880.  call temp:= `getValue`(v2) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a9886.  v0:= temp;
  #L3a9888.  v1:= 604800I;
  #L3a988e.  call temp:= `safeMultiply`(v0, v1) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L3a9894.  v0:= temp;
  #L3a9896.  call temp:= `seconds`(v0) @signature `Lorg/joda/time/Seconds;.seconds:(I)Lorg/joda/time/Seconds;` @kind static;
  #L3a989c.  v0:= temp @kind object;
  #L3a989e.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.Weeks` v2 @kind this) @signature `Lorg/joda/time/Weeks;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a973c.  v0:= new `java.lang.StringBuilder`;
  #L3a9740.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a9746.  v1:= "P" @kind object;
  #L3a974a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9750.  call temp:= `getValue`(v2) @signature `Lorg/joda/time/base/BaseSingleFieldPeriod;.getValue:()I` @kind virtual;
  #L3a9756.  v1:= temp;
  #L3a9758.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L3a975e.  v1:= temp @kind object;
  #L3a9760.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9766.  v1:= "W" @kind object;
  #L3a976a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a9770.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a9776.  v0:= temp @kind object;
  #L3a9778.  return v0 @kind object;
}
