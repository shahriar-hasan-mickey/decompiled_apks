record `org.joda.time.LocalDate` @kind class @AccessFlag PUBLIC_FINAL extends `org.joda.time.base.BaseLocal` @kind class, `org.joda.time.ReadablePartial` @kind interface, `java.io.Serializable` @kind interface {
  `org.joda.time.Chronology` `org.joda.time.LocalDate.iChronology` @AccessFlag PRIVATE_FINAL;
  `int` `org.joda.time.LocalDate.iHash` @AccessFlag PRIVATE_TRANSIENT;
  `long` `org.joda.time.LocalDate.iLocalMillis` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Set` `@@org.joda.time.LocalDate.DATE_DURATION_TYPES` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.joda.time.LocalDate.DAY_OF_MONTH` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.joda.time.LocalDate.MONTH_OF_YEAR` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.joda.time.LocalDate.YEAR` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.joda.time.LocalDate.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/joda/time/LocalDate;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L39f9b4.  v0:= new `java.util.HashSet`;
  #L39f9b8.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L39f9be.  `@@org.joda.time.LocalDate.DATE_DURATION_TYPES` @type ^`java.util.Set` := v0 @kind object;
  #L39f9c2.  call temp:= `days`() @signature `Lorg/joda/time/DurationFieldType;.days:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L39f9c8.  v1:= temp @kind object;
  #L39f9ca.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39f9d0.  v0:= `@@org.joda.time.LocalDate.DATE_DURATION_TYPES` @type ^`java.util.Set` @kind object;
  #L39f9d4.  call temp:= `weeks`() @signature `Lorg/joda/time/DurationFieldType;.weeks:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L39f9da.  v1:= temp @kind object;
  #L39f9dc.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39f9e2.  v0:= `@@org.joda.time.LocalDate.DATE_DURATION_TYPES` @type ^`java.util.Set` @kind object;
  #L39f9e6.  call temp:= `months`() @signature `Lorg/joda/time/DurationFieldType;.months:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L39f9ec.  v1:= temp @kind object;
  #L39f9ee.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39f9f4.  v0:= `@@org.joda.time.LocalDate.DATE_DURATION_TYPES` @type ^`java.util.Set` @kind object;
  #L39f9f8.  call temp:= `weekyears`() @signature `Lorg/joda/time/DurationFieldType;.weekyears:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L39f9fe.  v1:= temp @kind object;
  #L39fa00.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39fa06.  v0:= `@@org.joda.time.LocalDate.DATE_DURATION_TYPES` @type ^`java.util.Set` @kind object;
  #L39fa0a.  call temp:= `years`() @signature `Lorg/joda/time/DurationFieldType;.years:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L39fa10.  v1:= temp @kind object;
  #L39fa12.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39fa18.  v0:= `@@org.joda.time.LocalDate.DATE_DURATION_TYPES` @type ^`java.util.Set` @kind object;
  #L39fa1c.  call temp:= `centuries`() @signature `Lorg/joda/time/DurationFieldType;.centuries:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L39fa22.  v1:= temp @kind object;
  #L39fa24.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39fa2a.  v0:= `@@org.joda.time.LocalDate.DATE_DURATION_TYPES` @type ^`java.util.Set` @kind object;
  #L39fa2e.  call temp:= `eras`() @signature `Lorg/joda/time/DurationFieldType;.eras:()Lorg/joda/time/DurationFieldType;` @kind static;
  #L39fa34.  v1:= temp @kind object;
  #L39fa36.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39fa3c.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDate` v3 @kind this) @signature `Lorg/joda/time/LocalDate;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L39fa50.  call temp:= `currentTimeMillis`() @signature `Lorg/joda/time/DateTimeUtils;.currentTimeMillis:()J` @kind static;
  #L39fa56.  v0:= temp @kind wide;
  #L39fa58.  call temp:= `getInstance`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L39fa5e.  v2:= temp @kind object;
  #L39fa60.  call `<init>`(v3, v0, v2) @signature `Lorg/joda/time/LocalDate;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39fa66.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDate` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lorg/joda/time/LocalDate;.<init>:(III)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L39fa78.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L39fa7e.  v0:= temp @kind object;
  #L39fa80.  call `<init>`(v1, v2, v3, v4, v0) @signature `Lorg/joda/time/LocalDate;.<init>:(IIILorg/joda/time/Chronology;)V` @kind direct;
  #L39fa86.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDate` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `org.joda.time.Chronology` v5 @kind object) @signature `Lorg/joda/time/LocalDate;.<init>:(IIILorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L39fa98.  call `<init>`(v1) @signature `Lorg/joda/time/base/BaseLocal;.<init>:()V` @kind direct;
  #L39fa9e.  call temp:= `getChronology`(v5) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L39faa4.  v5:= temp @kind object;
  #L39faa6.  call temp:= `withUTC`(v5) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39faac.  v5:= temp @kind object;
  #L39faae.  v0:= 0I;
  #L39fab0.  call temp:= `getDateTimeMillis`(v5, v2, v3, v4, v0) @signature `Lorg/joda/time/Chronology;.getDateTimeMillis:(IIII)J` @kind virtual;
  #L39fab6.  v2:= temp @kind wide;
  #L39fab8.  v1.`org.joda.time.LocalDate.iChronology` @type ^`org.joda.time.Chronology` := v5 @kind object;
  #L39fabc.  v1.`org.joda.time.LocalDate.iLocalMillis` @type ^`long` := v2 @kind wide;
  #L39fac0.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDate` v1 @kind this, `long` v2 ) @signature `Lorg/joda/time/LocalDate;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L39fbe0.  call temp:= `getInstance`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L39fbe6.  v0:= temp @kind object;
  #L39fbe8.  call `<init>`(v1, v2, v0) @signature `Lorg/joda/time/LocalDate;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39fbee.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDate` v2 @kind this, `long` v3 , `org.joda.time.Chronology` v5 @kind object) @signature `Lorg/joda/time/LocalDate;.<init>:(JLorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L39fc00.  call `<init>`(v2) @signature `Lorg/joda/time/base/BaseLocal;.<init>:()V` @kind direct;
  #L39fc06.  call temp:= `getChronology`(v5) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L39fc0c.  v5:= temp @kind object;
  #L39fc0e.  call temp:= `getZone`(v5) @signature `Lorg/joda/time/Chronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L39fc14.  v0:= temp @kind object;
  #L39fc16.  v1:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L39fc1a.  call temp:= `getMillisKeepLocal`(v0, v1, v3) @signature `Lorg/joda/time/DateTimeZone;.getMillisKeepLocal:(Lorg/joda/time/DateTimeZone;J)J` @kind virtual;
  #L39fc20.  v3:= temp @kind wide;
  #L39fc22.  call temp:= `withUTC`(v5) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39fc28.  v5:= temp @kind object;
  #L39fc2a.  call temp:= `dayOfMonth`(v5) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39fc30.  v0:= temp @kind object;
  #L39fc32.  call temp:= `roundFloor`(v0, v3) @signature `Lorg/joda/time/DateTimeField;.roundFloor:(J)J` @kind virtual;
  #L39fc38.  v3:= temp @kind wide;
  #L39fc3a.  v2.`org.joda.time.LocalDate.iLocalMillis` @type ^`long` := v3 @kind wide;
  #L39fc3e.  v2.`org.joda.time.LocalDate.iChronology` @type ^`org.joda.time.Chronology` := v5 @kind object;
  #L39fc42.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDate` v0 @kind this, `long` v1 , `org.joda.time.DateTimeZone` v3 @kind object) @signature `Lorg/joda/time/LocalDate;.<init>:(JLorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39fc54.  call temp:= `getInstance`(v3) @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L39fc5a.  v3:= temp @kind object;
  #L39fc5c.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/LocalDate;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39fc62.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDate` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/joda/time/LocalDate;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L39fad4.  v0:= 0I;
  #L39fad6.  call `<init>`(v1, v2, v0) @signature `Lorg/joda/time/LocalDate;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;)V` @kind direct;
  #L39fadc.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDate` v4 @kind this, `java.lang.Object` v5 @kind object, `org.joda.time.Chronology` v6 @kind object) @signature `Lorg/joda/time/LocalDate;.<init>:(Ljava/lang/Object;Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39faf0.  call `<init>`(v4) @signature `Lorg/joda/time/base/BaseLocal;.<init>:()V` @kind direct;
  #L39faf6.  call temp:= `getInstance`() @signature `Lorg/joda/time/convert/ConverterManager;.getInstance:()Lorg/joda/time/convert/ConverterManager;` @kind static;
  #L39fafc.  v0:= temp @kind object;
  #L39fafe.  call temp:= `getPartialConverter`(v0, v5) @signature `Lorg/joda/time/convert/ConverterManager;.getPartialConverter:(Ljava/lang/Object;)Lorg/joda/time/convert/PartialConverter;` @kind virtual;
  #L39fb04.  v0:= temp @kind object;
  #L39fb06.  call temp:= `getChronology`(v0, v5, v6) @signature `Lorg/joda/time/convert/PartialConverter;.getChronology:(Ljava/lang/Object;Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind interface;
  #L39fb0c.  v6:= temp @kind object;
  #L39fb0e.  call temp:= `getChronology`(v6) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L39fb14.  v6:= temp @kind object;
  #L39fb16.  call temp:= `withUTC`(v6) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39fb1c.  v1:= temp @kind object;
  #L39fb1e.  v4.`org.joda.time.LocalDate.iChronology` @type ^`org.joda.time.Chronology` := v1 @kind object;
  #L39fb22.  call temp:= `localDateParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.localDateParser:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L39fb28.  v1:= temp @kind object;
  #L39fb2a.  call temp:= `getPartialValues`(v0, v4, v5, v6, v1) @signature `Lorg/joda/time/convert/PartialConverter;.getPartialValues:(Lorg/joda/time/ReadablePartial;Ljava/lang/Object;Lorg/joda/time/Chronology;Lorg/joda/time/format/DateTimeFormatter;)[I` @kind interface;
  #L39fb30.  v5:= temp @kind object;
  #L39fb32.  v6:= v4.`org.joda.time.LocalDate.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39fb36.  v0:= 0I;
  #L39fb38.  v1:= v5[v0];
  #L39fb3c.  v2:= 1I;
  #L39fb3e.  v2:= v5[v2];
  #L39fb42.  v3:= 2I;
  #L39fb44.  v5:= v5[v3];
  #L39fb48.  call temp:= `getDateTimeMillis`(v6, v1, v2, v5, v0) @signature `Lorg/joda/time/Chronology;.getDateTimeMillis:(IIII)J` @kind virtual;
  #L39fb4e.  v5:= temp @kind wide;
  #L39fb50.  v4.`org.joda.time.LocalDate.iLocalMillis` @type ^`long` := v5 @kind wide;
  #L39fb54.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDate` v4 @kind this, `java.lang.Object` v5 @kind object, `org.joda.time.DateTimeZone` v6 @kind object) @signature `Lorg/joda/time/LocalDate;.<init>:(Ljava/lang/Object;Lorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39fb68.  call `<init>`(v4) @signature `Lorg/joda/time/base/BaseLocal;.<init>:()V` @kind direct;
  #L39fb6e.  call temp:= `getInstance`() @signature `Lorg/joda/time/convert/ConverterManager;.getInstance:()Lorg/joda/time/convert/ConverterManager;` @kind static;
  #L39fb74.  v0:= temp @kind object;
  #L39fb76.  call temp:= `getPartialConverter`(v0, v5) @signature `Lorg/joda/time/convert/ConverterManager;.getPartialConverter:(Ljava/lang/Object;)Lorg/joda/time/convert/PartialConverter;` @kind virtual;
  #L39fb7c.  v0:= temp @kind object;
  #L39fb7e.  call temp:= `getChronology`(v0, v5, v6) @signature `Lorg/joda/time/convert/PartialConverter;.getChronology:(Ljava/lang/Object;Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind interface;
  #L39fb84.  v6:= temp @kind object;
  #L39fb86.  call temp:= `getChronology`(v6) @signature `Lorg/joda/time/DateTimeUtils;.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;` @kind static;
  #L39fb8c.  v6:= temp @kind object;
  #L39fb8e.  call temp:= `withUTC`(v6) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39fb94.  v1:= temp @kind object;
  #L39fb96.  v4.`org.joda.time.LocalDate.iChronology` @type ^`org.joda.time.Chronology` := v1 @kind object;
  #L39fb9a.  call temp:= `localDateParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.localDateParser:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L39fba0.  v1:= temp @kind object;
  #L39fba2.  call temp:= `getPartialValues`(v0, v4, v5, v6, v1) @signature `Lorg/joda/time/convert/PartialConverter;.getPartialValues:(Lorg/joda/time/ReadablePartial;Ljava/lang/Object;Lorg/joda/time/Chronology;Lorg/joda/time/format/DateTimeFormatter;)[I` @kind interface;
  #L39fba8.  v5:= temp @kind object;
  #L39fbaa.  v6:= v4.`org.joda.time.LocalDate.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39fbae.  v0:= 0I;
  #L39fbb0.  v1:= v5[v0];
  #L39fbb4.  v2:= 1I;
  #L39fbb6.  v2:= v5[v2];
  #L39fbba.  v3:= 2I;
  #L39fbbc.  v5:= v5[v3];
  #L39fbc0.  call temp:= `getDateTimeMillis`(v6, v1, v2, v5, v0) @signature `Lorg/joda/time/Chronology;.getDateTimeMillis:(IIII)J` @kind virtual;
  #L39fbc6.  v5:= temp @kind wide;
  #L39fbc8.  v4.`org.joda.time.LocalDate.iLocalMillis` @type ^`long` := v5 @kind wide;
  #L39fbcc.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDate` v2 @kind this, `org.joda.time.Chronology` v3 @kind object) @signature `Lorg/joda/time/LocalDate;.<init>:(Lorg/joda/time/Chronology;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L39fc74.  call temp:= `currentTimeMillis`() @signature `Lorg/joda/time/DateTimeUtils;.currentTimeMillis:()J` @kind static;
  #L39fc7a.  v0:= temp @kind wide;
  #L39fc7c.  call `<init>`(v2, v0, v3) @signature `Lorg/joda/time/LocalDate;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39fc82.  return @kind void;
}
procedure `void` `<init>`(`org.joda.time.LocalDate` v2 @kind this, `org.joda.time.DateTimeZone` v3 @kind object) @signature `Lorg/joda/time/LocalDate;.<init>:(Lorg/joda/time/DateTimeZone;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L39fc94.  call temp:= `currentTimeMillis`() @signature `Lorg/joda/time/DateTimeUtils;.currentTimeMillis:()J` @kind static;
  #L39fc9a.  v0:= temp @kind wide;
  #L39fc9c.  call temp:= `getInstance`(v3) @signature `Lorg/joda/time/chrono/ISOChronology;.getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L39fca2.  v3:= temp @kind object;
  #L39fca4.  call `<init>`(v2, v0, v3) @signature `Lorg/joda/time/LocalDate;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39fcaa.  return @kind void;
}
procedure `org.joda.time.LocalDate` `fromCalendarFields`(`java.util.Calendar` v4 @kind object) @signature `Lorg/joda/time/LocalDate;.fromCalendarFields:(Ljava/util/Calendar;)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39ee40.  if v4 == 0 then goto L39ee84;
  #L39ee44.  v0:= 0I;
  #L39ee46.  call temp:= `get`(v4, v0) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L39ee4c.  v0:= temp;
  #L39ee4e.  v1:= 1I;
  #L39ee50.  call temp:= `get`(v4, v1) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L39ee56.  v2:= temp;
  #L39ee58.  v3:= new `org.joda.time.LocalDate`;
  #L39ee5c.  if v0 != v1 then goto L39ee62;
  #L39ee60.  goto L39ee66;
  #L39ee62.  v2:= v2 - 1;
  #L39ee66.  v0:= 2I;
  #L39ee68.  call temp:= `get`(v4, v0) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L39ee6e.  v0:= temp;
  #L39ee70.  v0:= v0 + v1 @kind int;
  #L39ee72.  v1:= 5I;
  #L39ee74.  call temp:= `get`(v4, v1) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L39ee7a.  v4:= temp;
  #L39ee7c.  call `<init>`(v3, v2, v0, v4) @signature `Lorg/joda/time/LocalDate;.<init>:(III)V` @kind direct;
  #L39ee82.  return v3 @kind object;
  #L39ee84.  v4:= new `java.lang.IllegalArgumentException`;
  #L39ee88.  v0:= "The calendar must not be null" @kind object;
  #L39ee8c.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39ee92.  throw v4;
}
procedure `org.joda.time.LocalDate` `fromDateFields`(`java.util.Date` v5 @kind object) @signature `Lorg/joda/time/LocalDate;.fromDateFields:(Ljava/util/Date;)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L39eea4.  if v5 == 0 then goto L39ef02;
  #L39eea8.  call temp:= `getTime`(v5) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L39eeae.  v0:= temp @kind wide;
  #L39eeb0.  v2:= 0L;
  #L39eeb4.  v4:= lcmp(v0, v2);
  #L39eeb8.  if v4 >= 0 then goto L39eed6;
  #L39eebc.  v0:= new `java.util.GregorianCalendar`;
  #L39eec0.  call `<init>`(v0) @signature `Ljava/util/GregorianCalendar;.<init>:()V` @kind direct;
  #L39eec6.  call `setTime`(v0, v5) @signature `Ljava/util/GregorianCalendar;.setTime:(Ljava/util/Date;)V` @kind virtual;
  #L39eecc.  call temp:= `fromCalendarFields`(v0) @signature `Lorg/joda/time/LocalDate;.fromCalendarFields:(Ljava/util/Calendar;)Lorg/joda/time/LocalDate;` @kind static;
  #L39eed2.  v5:= temp @kind object;
  #L39eed4.  return v5 @kind object;
  #L39eed6.  v0:= new `org.joda.time.LocalDate`;
  #L39eeda.  call temp:= `getYear`(v5) @signature `Ljava/util/Date;.getYear:()I` @kind virtual;
  #L39eee0.  v1:= temp;
  #L39eee2.  v1:= v1 + 1900;
  #L39eee6.  call temp:= `getMonth`(v5) @signature `Ljava/util/Date;.getMonth:()I` @kind virtual;
  #L39eeec.  v2:= temp;
  #L39eeee.  v2:= v2 + 1;
  #L39eef2.  call temp:= `getDate`(v5) @signature `Ljava/util/Date;.getDate:()I` @kind virtual;
  #L39eef8.  v5:= temp;
  #L39eefa.  call `<init>`(v0, v1, v2, v5) @signature `Lorg/joda/time/LocalDate;.<init>:(III)V` @kind direct;
  #L39ef00.  return v0 @kind object;
  #L39ef02.  v5:= new `java.lang.IllegalArgumentException`;
  #L39ef06.  v0:= "The date must not be null" @kind object;
  #L39ef0a.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39ef10.  throw v5;
}
procedure `org.joda.time.LocalDate` `now`() @signature `Lorg/joda/time/LocalDate;.now:()Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39f040.  v0:= new `org.joda.time.LocalDate`;
  #L39f044.  call `<init>`(v0) @signature `Lorg/joda/time/LocalDate;.<init>:()V` @kind direct;
  #L39f04a.  return v0 @kind object;
}
procedure `org.joda.time.LocalDate` `now`(`org.joda.time.Chronology` v1 @kind object) @signature `Lorg/joda/time/LocalDate;.now:(Lorg/joda/time/Chronology;)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39f05c.  if v1 == 0 then goto L39f06c;
  #L39f060.  v0:= new `org.joda.time.LocalDate`;
  #L39f064.  call `<init>`(v0, v1) @signature `Lorg/joda/time/LocalDate;.<init>:(Lorg/joda/time/Chronology;)V` @kind direct;
  #L39f06a.  return v0 @kind object;
  #L39f06c.  v1:= new `java.lang.NullPointerException`;
  #L39f070.  v0:= "Chronology must not be null" @kind object;
  #L39f074.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39f07a.  throw v1;
}
procedure `org.joda.time.LocalDate` `now`(`org.joda.time.DateTimeZone` v1 @kind object) @signature `Lorg/joda/time/LocalDate;.now:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39f08c.  if v1 == 0 then goto L39f09c;
  #L39f090.  v0:= new `org.joda.time.LocalDate`;
  #L39f094.  call `<init>`(v0, v1) @signature `Lorg/joda/time/LocalDate;.<init>:(Lorg/joda/time/DateTimeZone;)V` @kind direct;
  #L39f09a.  return v0 @kind object;
  #L39f09c.  v1:= new `java.lang.NullPointerException`;
  #L39f0a0.  v0:= "Zone must not be null" @kind object;
  #L39f0a4.  call `<init>`(v1, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39f0aa.  throw v1;
}
procedure `org.joda.time.LocalDate` `parse`(`java.lang.String` v1 @kind object) @signature `Lorg/joda/time/LocalDate;.parse:(Ljava/lang/String;)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39f0bc.  call temp:= `localDateParser`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.localDateParser:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L39f0c2.  v0:= temp @kind object;
  #L39f0c4.  call temp:= `parse`(v1, v0) @signature `Lorg/joda/time/LocalDate;.parse:(Ljava/lang/String;Lorg/joda/time/format/DateTimeFormatter;)Lorg/joda/time/LocalDate;` @kind static;
  #L39f0ca.  v1:= temp @kind object;
  #L39f0cc.  return v1 @kind object;
}
procedure `org.joda.time.LocalDate` `parse`(`java.lang.String` v0 @kind object, `org.joda.time.format.DateTimeFormatter` v1 @kind object) @signature `Lorg/joda/time/LocalDate;.parse:(Ljava/lang/String;Lorg/joda/time/format/DateTimeFormatter;)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L39f0e0.  call temp:= `parseLocalDate`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatter;.parseLocalDate:(Ljava/lang/String;)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f0e6.  v0:= temp @kind object;
  #L39f0e8.  return v0 @kind object;
}
procedure `java.lang.Object` `readResolve`(`org.joda.time.LocalDate` v4 @kind this) @signature `Lorg/joda/time/LocalDate;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39e8f8.  v0:= v4.`org.joda.time.LocalDate.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39e8fc.  if v0 != 0 then goto L39e918;
  #L39e900.  v0:= new `org.joda.time.LocalDate`;
  #L39e904.  v1:= v4.`org.joda.time.LocalDate.iLocalMillis` @type ^`long` @kind wide;
  #L39e908.  call temp:= `getInstanceUTC`() @signature `Lorg/joda/time/chrono/ISOChronology;.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;` @kind static;
  #L39e90e.  v3:= temp @kind object;
  #L39e910.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/LocalDate;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39e916.  return v0 @kind object;
  #L39e918.  v1:= `@@org.joda.time.DateTimeZone.UTC` @type ^`org.joda.time.DateTimeZone` @kind object;
  #L39e91c.  call temp:= `getZone`(v0) @signature `Lorg/joda/time/Chronology;.getZone:()Lorg/joda/time/DateTimeZone;` @kind virtual;
  #L39e922.  v0:= temp @kind object;
  #L39e924.  call temp:= `equals`(v1, v0) @signature `Lorg/joda/time/DateTimeZone;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39e92a.  v0:= temp;
  #L39e92c.  if v0 != 0 then goto L39e94c;
  #L39e930.  v0:= new `org.joda.time.LocalDate`;
  #L39e934.  v1:= v4.`org.joda.time.LocalDate.iLocalMillis` @type ^`long` @kind wide;
  #L39e938.  v3:= v4.`org.joda.time.LocalDate.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39e93c.  call temp:= `withUTC`(v3) @signature `Lorg/joda/time/Chronology;.withUTC:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e942.  v3:= temp @kind object;
  #L39e944.  call `<init>`(v0, v1, v3) @signature `Lorg/joda/time/LocalDate;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39e94a.  return v0 @kind object;
  #L39e94c.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate$Property` `centuryOfEra`(`org.joda.time.LocalDate` v2 @kind this) @signature `Lorg/joda/time/LocalDate;.centuryOfEra:()Lorg/joda/time/LocalDate$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39f6dc.  v0:= new `org.joda.time.LocalDate$Property`;
  #L39f6e0.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f6e6.  v1:= temp @kind object;
  #L39f6e8.  call temp:= `centuryOfEra`(v1) @signature `Lorg/joda/time/Chronology;.centuryOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f6ee.  v1:= temp @kind object;
  #L39f6f0.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDate$Property;.<init>:(Lorg/joda/time/LocalDate;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39f6f6.  return v0 @kind object;
}
procedure `int` `compareTo`(`org.joda.time.LocalDate` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/joda/time/LocalDate;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L39e4b8.  v1:= (`org.joda.time.ReadablePartial`) v1 @kind object;
  #L39e4bc.  call temp:= `compareTo`(v0, v1) @signature `Lorg/joda/time/LocalDate;.compareTo:(Lorg/joda/time/ReadablePartial;)I` @kind virtual;
  #L39e4c2.  v1:= temp;
  #L39e4c4.  return v1;
}
procedure `int` `compareTo`(`org.joda.time.LocalDate` v6 @kind this, `org.joda.time.ReadablePartial` v7 @kind object) @signature `Lorg/joda/time/LocalDate;.compareTo:(Lorg/joda/time/ReadablePartial;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39e4d8.  v0:= 0I;
  #L39e4da.  if v6 != v7 then goto L39e4e0;
  #L39e4de.  return v0;
  #L39e4e0.  v1:= instanceof @variable v7 @type ^`org.joda.time.LocalDate` @kind boolean;
  #L39e4e4.  if v1 == 0 then goto L39e524;
  #L39e4e8.  v1:= v7 @kind object;
  #L39e4ea.  v1:= (`org.joda.time.LocalDate`) v1 @kind object;
  #L39e4ee.  v2:= v6.`org.joda.time.LocalDate.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39e4f2.  v3:= v1.`org.joda.time.LocalDate.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39e4f6.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39e4fc.  v2:= temp;
  #L39e4fe.  if v2 == 0 then goto L39e524;
  #L39e502.  v2:= v6.`org.joda.time.LocalDate.iLocalMillis` @type ^`long` @kind wide;
  #L39e506.  v4:= v1.`org.joda.time.LocalDate.iLocalMillis` @type ^`long` @kind wide;
  #L39e50a.  v7:= lcmp(v2, v4);
  #L39e50e.  if v7 >= 0 then goto L39e516;
  #L39e512.  v0:= -1I;
  #L39e514.  goto L39e522;
  #L39e516.  v7:= lcmp(v2, v4);
  #L39e51a.  if v7 != 0 then goto L39e520;
  #L39e51e.  goto L39e522;
  #L39e520.  v0:= 1I;
  #L39e522.  return v0;
  #L39e524.  call temp:= `compareTo`(v6, v7) @signature `Lorg/joda/time/base/AbstractPartial;.compareTo:(Lorg/joda/time/ReadablePartial;)I` @kind super;
  #L39e52a.  v7:= temp;
  #L39e52c.  return v7;
}
procedure `org.joda.time.LocalDate$Property` `dayOfMonth`(`org.joda.time.LocalDate` v2 @kind this) @signature `Lorg/joda/time/LocalDate;.dayOfMonth:()Lorg/joda/time/LocalDate$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39f708.  v0:= new `org.joda.time.LocalDate$Property`;
  #L39f70c.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f712.  v1:= temp @kind object;
  #L39f714.  call temp:= `dayOfMonth`(v1) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f71a.  v1:= temp @kind object;
  #L39f71c.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDate$Property;.<init>:(Lorg/joda/time/LocalDate;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39f722.  return v0 @kind object;
}
procedure `org.joda.time.LocalDate$Property` `dayOfWeek`(`org.joda.time.LocalDate` v2 @kind this) @signature `Lorg/joda/time/LocalDate;.dayOfWeek:()Lorg/joda/time/LocalDate$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39f734.  v0:= new `org.joda.time.LocalDate$Property`;
  #L39f738.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f73e.  v1:= temp @kind object;
  #L39f740.  call temp:= `dayOfWeek`(v1) @signature `Lorg/joda/time/Chronology;.dayOfWeek:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f746.  v1:= temp @kind object;
  #L39f748.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDate$Property;.<init>:(Lorg/joda/time/LocalDate;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39f74e.  return v0 @kind object;
}
procedure `org.joda.time.LocalDate$Property` `dayOfYear`(`org.joda.time.LocalDate` v2 @kind this) @signature `Lorg/joda/time/LocalDate;.dayOfYear:()Lorg/joda/time/LocalDate$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39f760.  v0:= new `org.joda.time.LocalDate$Property`;
  #L39f764.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f76a.  v1:= temp @kind object;
  #L39f76c.  call temp:= `dayOfYear`(v1) @signature `Lorg/joda/time/Chronology;.dayOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f772.  v1:= temp @kind object;
  #L39f774.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDate$Property;.<init>:(Lorg/joda/time/LocalDate;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39f77a.  return v0 @kind object;
}
procedure `boolean` `equals`(`org.joda.time.LocalDate` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lorg/joda/time/LocalDate;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39e364.  v0:= 1I;
  #L39e366.  if v6 != v7 then goto L39e36c;
  #L39e36a.  return v0;
  #L39e36c.  v1:= instanceof @variable v7 @type ^`org.joda.time.LocalDate` @kind boolean;
  #L39e370.  if v1 == 0 then goto L39e3a4;
  #L39e374.  v1:= v7 @kind object;
  #L39e376.  v1:= (`org.joda.time.LocalDate`) v1 @kind object;
  #L39e37a.  v2:= v6.`org.joda.time.LocalDate.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39e37e.  v3:= v1.`org.joda.time.LocalDate.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39e382.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39e388.  v2:= temp;
  #L39e38a.  if v2 == 0 then goto L39e3a4;
  #L39e38e.  v2:= v6.`org.joda.time.LocalDate.iLocalMillis` @type ^`long` @kind wide;
  #L39e392.  v4:= v1.`org.joda.time.LocalDate.iLocalMillis` @type ^`long` @kind wide;
  #L39e396.  v7:= lcmp(v2, v4);
  #L39e39a.  if v7 != 0 then goto L39e3a0;
  #L39e39e.  goto L39e3a2;
  #L39e3a0.  v0:= 0I;
  #L39e3a2.  return v0;
  #L39e3a4.  call temp:= `equals`(v6, v7) @signature `Lorg/joda/time/base/AbstractPartial;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L39e3aa.  v7:= temp;
  #L39e3ac.  return v7;
}
procedure `org.joda.time.LocalDate$Property` `era`(`org.joda.time.LocalDate` v2 @kind this) @signature `Lorg/joda/time/LocalDate;.era:()Lorg/joda/time/LocalDate$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39f78c.  v0:= new `org.joda.time.LocalDate$Property`;
  #L39f790.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f796.  v1:= temp @kind object;
  #L39f798.  call temp:= `era`(v1) @signature `Lorg/joda/time/Chronology;.era:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f79e.  v1:= temp @kind object;
  #L39f7a0.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDate$Property;.<init>:(Lorg/joda/time/LocalDate;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39f7a6.  return v0 @kind object;
}
procedure `int` `get`(`org.joda.time.LocalDate` v3 @kind this, `org.joda.time.DateTimeFieldType` v4 @kind object) @signature `Lorg/joda/time/LocalDate;.get:(Lorg/joda/time/DateTimeFieldType;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39e540.  if v4 == 0 then goto L39e5aa;
  #L39e544.  call temp:= `isSupported`(v3, v4) @signature `Lorg/joda/time/LocalDate;.isSupported:(Lorg/joda/time/DateTimeFieldType;)Z` @kind virtual;
  #L39e54a.  v0:= temp;
  #L39e54c.  if v0 == 0 then goto L39e572;
  #L39e550.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e556.  v0:= temp @kind object;
  #L39e558.  call temp:= `getField`(v4, v0) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39e55e.  v4:= temp @kind object;
  #L39e560.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39e566.  v0:= temp @kind wide;
  #L39e568.  call temp:= `get`(v4, v0) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39e56e.  v4:= temp;
  #L39e570.  return v4;
  #L39e572.  v0:= new `java.lang.IllegalArgumentException`;
  #L39e576.  v1:= new `java.lang.StringBuilder`;
  #L39e57a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39e580.  v2:= "Field '" @kind object;
  #L39e584.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e58a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e590.  v4:= "' is not supported" @kind object;
  #L39e594.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e59a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39e5a0.  v4:= temp @kind object;
  #L39e5a2.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39e5a8.  throw v0;
  #L39e5aa.  v4:= new `java.lang.IllegalArgumentException`;
  #L39e5ae.  v0:= "The DateTimeFieldType must not be null" @kind object;
  #L39e5b2.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39e5b8.  throw v4;
}
procedure `int` `getCenturyOfEra`(`org.joda.time.LocalDate` v3 @kind this) @signature `Lorg/joda/time/LocalDate;.getCenturyOfEra:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39e5cc.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e5d2.  v0:= temp @kind object;
  #L39e5d4.  call temp:= `centuryOfEra`(v0) @signature `Lorg/joda/time/Chronology;.centuryOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39e5da.  v0:= temp @kind object;
  #L39e5dc.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39e5e2.  v1:= temp @kind wide;
  #L39e5e4.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39e5ea.  v0:= temp;
  #L39e5ec.  return v0;
}
procedure `org.joda.time.Chronology` `getChronology`(`org.joda.time.LocalDate` v1 @kind this) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39eaf4.  v0:= v1.`org.joda.time.LocalDate.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39eaf8.  return v0 @kind object;
}
procedure `int` `getDayOfMonth`(`org.joda.time.LocalDate` v3 @kind this) @signature `Lorg/joda/time/LocalDate;.getDayOfMonth:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39e600.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e606.  v0:= temp @kind object;
  #L39e608.  call temp:= `dayOfMonth`(v0) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39e60e.  v0:= temp @kind object;
  #L39e610.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39e616.  v1:= temp @kind wide;
  #L39e618.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39e61e.  v0:= temp;
  #L39e620.  return v0;
}
procedure `int` `getDayOfWeek`(`org.joda.time.LocalDate` v3 @kind this) @signature `Lorg/joda/time/LocalDate;.getDayOfWeek:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39e634.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e63a.  v0:= temp @kind object;
  #L39e63c.  call temp:= `dayOfWeek`(v0) @signature `Lorg/joda/time/Chronology;.dayOfWeek:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39e642.  v0:= temp @kind object;
  #L39e644.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39e64a.  v1:= temp @kind wide;
  #L39e64c.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39e652.  v0:= temp;
  #L39e654.  return v0;
}
procedure `int` `getDayOfYear`(`org.joda.time.LocalDate` v3 @kind this) @signature `Lorg/joda/time/LocalDate;.getDayOfYear:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39e668.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e66e.  v0:= temp @kind object;
  #L39e670.  call temp:= `dayOfYear`(v0) @signature `Lorg/joda/time/Chronology;.dayOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39e676.  v0:= temp @kind object;
  #L39e678.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39e67e.  v1:= temp @kind wide;
  #L39e680.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39e686.  v0:= temp;
  #L39e688.  return v0;
}
procedure `int` `getEra`(`org.joda.time.LocalDate` v3 @kind this) @signature `Lorg/joda/time/LocalDate;.getEra:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39e69c.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e6a2.  v0:= temp @kind object;
  #L39e6a4.  call temp:= `era`(v0) @signature `Lorg/joda/time/Chronology;.era:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39e6aa.  v0:= temp @kind object;
  #L39e6ac.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39e6b2.  v1:= temp @kind wide;
  #L39e6b4.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39e6ba.  v0:= temp;
  #L39e6bc.  return v0;
}
procedure `org.joda.time.DateTimeField` `getField`(`org.joda.time.LocalDate` v2 @kind this, `int` v3 , `org.joda.time.Chronology` v4 @kind object) @signature `Lorg/joda/time/LocalDate;.getField:(ILorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L39ed78.  if v3 == 0 then goto L39edca;
  #L39ed7c.  v0:= 1I;
  #L39ed7e.  if v3 == v0 then goto L39edc0;
  #L39ed82.  v0:= 2I;
  #L39ed84.  if v3 != v0 then goto L39ed92;
  #L39ed88.  call temp:= `dayOfMonth`(v4) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39ed8e.  v3:= temp @kind object;
  #L39ed90.  return v3 @kind object;
  #L39ed92.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L39ed96.  v0:= new `java.lang.StringBuilder`;
  #L39ed9a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39eda0.  v1:= "Invalid index: " @kind object;
  #L39eda4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39edaa.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L39edb0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39edb6.  v3:= temp @kind object;
  #L39edb8.  call `<init>`(v4, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39edbe.  throw v4;
  #L39edc0.  call temp:= `monthOfYear`(v4) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39edc6.  v3:= temp @kind object;
  #L39edc8.  return v3 @kind object;
  #L39edca.  call temp:= `year`(v4) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39edd0.  v3:= temp @kind object;
  #L39edd2.  return v3 @kind object;
}
procedure `long` `getLocalMillis`(`org.joda.time.LocalDate` v2 @kind this) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L39eadc.  v0:= v2.`org.joda.time.LocalDate.iLocalMillis` @type ^`long` @kind wide;
  #L39eae0.  return v0 @kind wide;
}
procedure `int` `getMonthOfYear`(`org.joda.time.LocalDate` v3 @kind this) @signature `Lorg/joda/time/LocalDate;.getMonthOfYear:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39e6d0.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e6d6.  v0:= temp @kind object;
  #L39e6d8.  call temp:= `monthOfYear`(v0) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39e6de.  v0:= temp @kind object;
  #L39e6e0.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39e6e6.  v1:= temp @kind wide;
  #L39e6e8.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39e6ee.  v0:= temp;
  #L39e6f0.  return v0;
}
procedure `int` `getValue`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.getValue:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39e704.  if v4 == 0 then goto L39e786;
  #L39e708.  v0:= 1I;
  #L39e70a.  if v4 == v0 then goto L39e764;
  #L39e70e.  v0:= 2I;
  #L39e710.  if v4 != v0 then goto L39e736;
  #L39e714.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e71a.  v4:= temp @kind object;
  #L39e71c.  call temp:= `dayOfMonth`(v4) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39e722.  v4:= temp @kind object;
  #L39e724.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39e72a.  v0:= temp @kind wide;
  #L39e72c.  call temp:= `get`(v4, v0) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39e732.  v4:= temp;
  #L39e734.  return v4;
  #L39e736.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L39e73a.  v1:= new `java.lang.StringBuilder`;
  #L39e73e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39e744.  v2:= "Invalid index: " @kind object;
  #L39e748.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e74e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L39e754.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39e75a.  v4:= temp @kind object;
  #L39e75c.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39e762.  throw v0;
  #L39e764.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e76a.  v4:= temp @kind object;
  #L39e76c.  call temp:= `monthOfYear`(v4) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39e772.  v4:= temp @kind object;
  #L39e774.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39e77a.  v0:= temp @kind wide;
  #L39e77c.  call temp:= `get`(v4, v0) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39e782.  v4:= temp;
  #L39e784.  return v4;
  #L39e786.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e78c.  v4:= temp @kind object;
  #L39e78e.  call temp:= `year`(v4) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39e794.  v4:= temp @kind object;
  #L39e796.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39e79c.  v0:= temp @kind wide;
  #L39e79e.  call temp:= `get`(v4, v0) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39e7a4.  v4:= temp;
  #L39e7a6.  return v4;
}
procedure `int` `getWeekOfWeekyear`(`org.joda.time.LocalDate` v3 @kind this) @signature `Lorg/joda/time/LocalDate;.getWeekOfWeekyear:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39e7b8.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e7be.  v0:= temp @kind object;
  #L39e7c0.  call temp:= `weekOfWeekyear`(v0) @signature `Lorg/joda/time/Chronology;.weekOfWeekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39e7c6.  v0:= temp @kind object;
  #L39e7c8.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39e7ce.  v1:= temp @kind wide;
  #L39e7d0.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39e7d6.  v0:= temp;
  #L39e7d8.  return v0;
}
procedure `int` `getWeekyear`(`org.joda.time.LocalDate` v3 @kind this) @signature `Lorg/joda/time/LocalDate;.getWeekyear:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39e7ec.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e7f2.  v0:= temp @kind object;
  #L39e7f4.  call temp:= `weekyear`(v0) @signature `Lorg/joda/time/Chronology;.weekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39e7fa.  v0:= temp @kind object;
  #L39e7fc.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39e802.  v1:= temp @kind wide;
  #L39e804.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39e80a.  v0:= temp;
  #L39e80c.  return v0;
}
procedure `int` `getYear`(`org.joda.time.LocalDate` v3 @kind this) @signature `Lorg/joda/time/LocalDate;.getYear:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39e820.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e826.  v0:= temp @kind object;
  #L39e828.  call temp:= `year`(v0) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39e82e.  v0:= temp @kind object;
  #L39e830.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39e836.  v1:= temp @kind wide;
  #L39e838.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39e83e.  v0:= temp;
  #L39e840.  return v0;
}
procedure `int` `getYearOfCentury`(`org.joda.time.LocalDate` v3 @kind this) @signature `Lorg/joda/time/LocalDate;.getYearOfCentury:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39e854.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e85a.  v0:= temp @kind object;
  #L39e85c.  call temp:= `yearOfCentury`(v0) @signature `Lorg/joda/time/Chronology;.yearOfCentury:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39e862.  v0:= temp @kind object;
  #L39e864.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39e86a.  v1:= temp @kind wide;
  #L39e86c.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39e872.  v0:= temp;
  #L39e874.  return v0;
}
procedure `int` `getYearOfEra`(`org.joda.time.LocalDate` v3 @kind this) @signature `Lorg/joda/time/LocalDate;.getYearOfEra:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39e888.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e88e.  v0:= temp @kind object;
  #L39e890.  call temp:= `yearOfEra`(v0) @signature `Lorg/joda/time/Chronology;.yearOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39e896.  v0:= temp @kind object;
  #L39e898.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39e89e.  v1:= temp @kind wide;
  #L39e8a0.  call temp:= `get`(v0, v1) @signature `Lorg/joda/time/DateTimeField;.get:(J)I` @kind virtual;
  #L39e8a6.  v0:= temp;
  #L39e8a8.  return v0;
}
procedure `int` `hashCode`(`org.joda.time.LocalDate` v1 @kind this) @signature `Lorg/joda/time/LocalDate;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39e8bc.  v0:= v1.`org.joda.time.LocalDate.iHash` @type ^`int`;
  #L39e8c0.  if v0 != 0 then goto L39e8d0;
  #L39e8c4.  call temp:= `hashCode`(v1) @signature `Lorg/joda/time/base/AbstractPartial;.hashCode:()I` @kind super;
  #L39e8ca.  v0:= temp;
  #L39e8cc.  v1.`org.joda.time.LocalDate.iHash` @type ^`int` := v0;
  #L39e8d0.  return v0;
}
procedure `boolean` `isSupported`(`org.joda.time.LocalDate` v6 @kind this, `org.joda.time.DateTimeFieldType` v7 @kind object) @signature `Lorg/joda/time/LocalDate;.isSupported:(Lorg/joda/time/DateTimeFieldType;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39e3c0.  v0:= 0I;
  #L39e3c2.  if v7 != 0 then goto L39e3c8;
  #L39e3c6.  return v0;
  #L39e3c8.  call temp:= `getDurationType`(v7) @signature `Lorg/joda/time/DateTimeFieldType;.getDurationType:()Lorg/joda/time/DurationFieldType;` @kind virtual;
  #L39e3ce.  v1:= temp @kind object;
  #L39e3d0.  v2:= `@@org.joda.time.LocalDate.DATE_DURATION_TYPES` @type ^`java.util.Set` @kind object;
  #L39e3d4.  call temp:= `contains`(v2, v1) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L39e3da.  v2:= temp;
  #L39e3dc.  if v2 != 0 then goto L39e41c;
  #L39e3e0.  call temp:= `getChronology`(v6) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e3e6.  v2:= temp @kind object;
  #L39e3e8.  call temp:= `getField`(v1, v2) @signature `Lorg/joda/time/DurationFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;` @kind virtual;
  #L39e3ee.  v1:= temp @kind object;
  #L39e3f0.  call temp:= `getUnitMillis`(v1) @signature `Lorg/joda/time/DurationField;.getUnitMillis:()J` @kind virtual;
  #L39e3f6.  v1:= temp @kind wide;
  #L39e3f8.  call temp:= `getChronology`(v6) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e3fe.  v3:= temp @kind object;
  #L39e400.  call temp:= `days`(v3) @signature `Lorg/joda/time/Chronology;.days:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39e406.  v3:= temp @kind object;
  #L39e408.  call temp:= `getUnitMillis`(v3) @signature `Lorg/joda/time/DurationField;.getUnitMillis:()J` @kind virtual;
  #L39e40e.  v3:= temp @kind wide;
  #L39e410.  v5:= lcmp(v1, v3);
  #L39e414.  if v5 < 0 then goto L39e41a;
  #L39e418.  goto L39e41c;
  #L39e41a.  return v0;
  #L39e41c.  call temp:= `getChronology`(v6) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e422.  v0:= temp @kind object;
  #L39e424.  call temp:= `getField`(v7, v0) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39e42a.  v7:= temp @kind object;
  #L39e42c.  call temp:= `isSupported`(v7) @signature `Lorg/joda/time/DateTimeField;.isSupported:()Z` @kind virtual;
  #L39e432.  v7:= temp;
  #L39e434.  return v7;
}
procedure `boolean` `isSupported`(`org.joda.time.LocalDate` v6 @kind this, `org.joda.time.DurationFieldType` v7 @kind object) @signature `Lorg/joda/time/LocalDate;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L39e448.  v0:= 0I;
  #L39e44a.  if v7 != 0 then goto L39e450;
  #L39e44e.  return v0;
  #L39e450.  call temp:= `getChronology`(v6) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e456.  v1:= temp @kind object;
  #L39e458.  call temp:= `getField`(v7, v1) @signature `Lorg/joda/time/DurationFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;` @kind virtual;
  #L39e45e.  v1:= temp @kind object;
  #L39e460.  v2:= `@@org.joda.time.LocalDate.DATE_DURATION_TYPES` @type ^`java.util.Set` @kind object;
  #L39e464.  call temp:= `contains`(v2, v7) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L39e46a.  v7:= temp;
  #L39e46c.  if v7 != 0 then goto L39e49c;
  #L39e470.  call temp:= `getUnitMillis`(v1) @signature `Lorg/joda/time/DurationField;.getUnitMillis:()J` @kind virtual;
  #L39e476.  v2:= temp @kind wide;
  #L39e478.  call temp:= `getChronology`(v6) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39e47e.  v7:= temp @kind object;
  #L39e480.  call temp:= `days`(v7) @signature `Lorg/joda/time/Chronology;.days:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39e486.  v7:= temp @kind object;
  #L39e488.  call temp:= `getUnitMillis`(v7) @signature `Lorg/joda/time/DurationField;.getUnitMillis:()J` @kind virtual;
  #L39e48e.  v4:= temp @kind wide;
  #L39e490.  v7:= lcmp(v2, v4);
  #L39e494.  if v7 < 0 then goto L39e49a;
  #L39e498.  goto L39e49c;
  #L39e49a.  return v0;
  #L39e49c.  call temp:= `isSupported`(v1) @signature `Lorg/joda/time/DurationField;.isSupported:()Z` @kind virtual;
  #L39e4a2.  v7:= temp;
  #L39e4a4.  return v7;
}
procedure `org.joda.time.LocalDate` `minus`(`org.joda.time.LocalDate` v1 @kind this, `org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/LocalDate;.minus:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39ef24.  v0:= -1I;
  #L39ef26.  call temp:= `withPeriodAdded`(v1, v2, v0) @signature `Lorg/joda/time/LocalDate;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39ef2c.  v2:= temp @kind object;
  #L39ef2e.  return v2 @kind object;
}
procedure `org.joda.time.LocalDate` `minusDays`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.minusDays:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39ef40.  if v4 != 0 then goto L39ef46;
  #L39ef44.  return v3 @kind object;
  #L39ef46.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39ef4c.  v0:= temp @kind object;
  #L39ef4e.  call temp:= `days`(v0) @signature `Lorg/joda/time/Chronology;.days:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39ef54.  v0:= temp @kind object;
  #L39ef56.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39ef5c.  v1:= temp @kind wide;
  #L39ef5e.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L39ef64.  v0:= temp @kind wide;
  #L39ef66.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39ef6c.  v4:= temp @kind object;
  #L39ef6e.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate` `minusMonths`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.minusMonths:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39ef80.  if v4 != 0 then goto L39ef86;
  #L39ef84.  return v3 @kind object;
  #L39ef86.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39ef8c.  v0:= temp @kind object;
  #L39ef8e.  call temp:= `months`(v0) @signature `Lorg/joda/time/Chronology;.months:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39ef94.  v0:= temp @kind object;
  #L39ef96.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39ef9c.  v1:= temp @kind wide;
  #L39ef9e.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L39efa4.  v0:= temp @kind wide;
  #L39efa6.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39efac.  v4:= temp @kind object;
  #L39efae.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate` `minusWeeks`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.minusWeeks:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39efc0.  if v4 != 0 then goto L39efc6;
  #L39efc4.  return v3 @kind object;
  #L39efc6.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39efcc.  v0:= temp @kind object;
  #L39efce.  call temp:= `weeks`(v0) @signature `Lorg/joda/time/Chronology;.weeks:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39efd4.  v0:= temp @kind object;
  #L39efd6.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39efdc.  v1:= temp @kind wide;
  #L39efde.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L39efe4.  v0:= temp @kind wide;
  #L39efe6.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39efec.  v4:= temp @kind object;
  #L39efee.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate` `minusYears`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.minusYears:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f000.  if v4 != 0 then goto L39f006;
  #L39f004.  return v3 @kind object;
  #L39f006.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f00c.  v0:= temp @kind object;
  #L39f00e.  call temp:= `years`(v0) @signature `Lorg/joda/time/Chronology;.years:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39f014.  v0:= temp @kind object;
  #L39f016.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f01c.  v1:= temp @kind wide;
  #L39f01e.  call temp:= `subtract`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.subtract:(JI)J` @kind virtual;
  #L39f024.  v0:= temp @kind wide;
  #L39f026.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f02c.  v4:= temp @kind object;
  #L39f02e.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate$Property` `monthOfYear`(`org.joda.time.LocalDate` v2 @kind this) @signature `Lorg/joda/time/LocalDate;.monthOfYear:()Lorg/joda/time/LocalDate$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39f7b8.  v0:= new `org.joda.time.LocalDate$Property`;
  #L39f7bc.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f7c2.  v1:= temp @kind object;
  #L39f7c4.  call temp:= `monthOfYear`(v1) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f7ca.  v1:= temp @kind object;
  #L39f7cc.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDate$Property;.<init>:(Lorg/joda/time/LocalDate;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39f7d2.  return v0 @kind object;
}
procedure `org.joda.time.LocalDate` `plus`(`org.joda.time.LocalDate` v1 @kind this, `org.joda.time.ReadablePeriod` v2 @kind object) @signature `Lorg/joda/time/LocalDate;.plus:(Lorg/joda/time/ReadablePeriod;)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39f0fc.  v0:= 1I;
  #L39f0fe.  call temp:= `withPeriodAdded`(v1, v2, v0) @signature `Lorg/joda/time/LocalDate;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f104.  v2:= temp @kind object;
  #L39f106.  return v2 @kind object;
}
procedure `org.joda.time.LocalDate` `plusDays`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.plusDays:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f118.  if v4 != 0 then goto L39f11e;
  #L39f11c.  return v3 @kind object;
  #L39f11e.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f124.  v0:= temp @kind object;
  #L39f126.  call temp:= `days`(v0) @signature `Lorg/joda/time/Chronology;.days:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39f12c.  v0:= temp @kind object;
  #L39f12e.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f134.  v1:= temp @kind wide;
  #L39f136.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L39f13c.  v0:= temp @kind wide;
  #L39f13e.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f144.  v4:= temp @kind object;
  #L39f146.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate` `plusMonths`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.plusMonths:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f158.  if v4 != 0 then goto L39f15e;
  #L39f15c.  return v3 @kind object;
  #L39f15e.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f164.  v0:= temp @kind object;
  #L39f166.  call temp:= `months`(v0) @signature `Lorg/joda/time/Chronology;.months:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39f16c.  v0:= temp @kind object;
  #L39f16e.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f174.  v1:= temp @kind wide;
  #L39f176.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L39f17c.  v0:= temp @kind wide;
  #L39f17e.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f184.  v4:= temp @kind object;
  #L39f186.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate` `plusWeeks`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.plusWeeks:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f198.  if v4 != 0 then goto L39f19e;
  #L39f19c.  return v3 @kind object;
  #L39f19e.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f1a4.  v0:= temp @kind object;
  #L39f1a6.  call temp:= `weeks`(v0) @signature `Lorg/joda/time/Chronology;.weeks:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39f1ac.  v0:= temp @kind object;
  #L39f1ae.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f1b4.  v1:= temp @kind wide;
  #L39f1b6.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L39f1bc.  v0:= temp @kind wide;
  #L39f1be.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f1c4.  v4:= temp @kind object;
  #L39f1c6.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate` `plusYears`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.plusYears:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f1d8.  if v4 != 0 then goto L39f1de;
  #L39f1dc.  return v3 @kind object;
  #L39f1de.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f1e4.  v0:= temp @kind object;
  #L39f1e6.  call temp:= `years`(v0) @signature `Lorg/joda/time/Chronology;.years:()Lorg/joda/time/DurationField;` @kind virtual;
  #L39f1ec.  v0:= temp @kind object;
  #L39f1ee.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f1f4.  v1:= temp @kind wide;
  #L39f1f6.  call temp:= `add`(v0, v1, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L39f1fc.  v0:= temp @kind wide;
  #L39f1fe.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f204.  v4:= temp @kind object;
  #L39f206.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate$Property` `property`(`org.joda.time.LocalDate` v3 @kind this, `org.joda.time.DateTimeFieldType` v4 @kind object) @signature `Lorg/joda/time/LocalDate;.property:(Lorg/joda/time/DateTimeFieldType;)Lorg/joda/time/LocalDate$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f7e4.  if v4 == 0 then goto L39f848;
  #L39f7e8.  call temp:= `isSupported`(v3, v4) @signature `Lorg/joda/time/LocalDate;.isSupported:(Lorg/joda/time/DateTimeFieldType;)Z` @kind virtual;
  #L39f7ee.  v0:= temp;
  #L39f7f0.  if v0 == 0 then goto L39f810;
  #L39f7f4.  v0:= new `org.joda.time.LocalDate$Property`;
  #L39f7f8.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f7fe.  v1:= temp @kind object;
  #L39f800.  call temp:= `getField`(v4, v1) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f806.  v4:= temp @kind object;
  #L39f808.  call `<init>`(v0, v3, v4) @signature `Lorg/joda/time/LocalDate$Property;.<init>:(Lorg/joda/time/LocalDate;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39f80e.  return v0 @kind object;
  #L39f810.  v0:= new `java.lang.IllegalArgumentException`;
  #L39f814.  v1:= new `java.lang.StringBuilder`;
  #L39f818.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39f81e.  v2:= "Field '" @kind object;
  #L39f822.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f828.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f82e.  v4:= "' is not supported" @kind object;
  #L39f832.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f838.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39f83e.  v4:= temp @kind object;
  #L39f840.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39f846.  throw v0;
  #L39f848.  v4:= new `java.lang.IllegalArgumentException`;
  #L39f84c.  v0:= "The DateTimeFieldType must not be null" @kind object;
  #L39f850.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39f856.  throw v4;
}
procedure `int` `size`(`org.joda.time.LocalDate` v1 @kind this) @signature `Lorg/joda/time/LocalDate;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39e8e4.  v0:= 3I;
  #L39e8e6.  return v0;
}
procedure `java.util.Date` `toDate`(`org.joda.time.LocalDate` v7 @kind this) @signature `Lorg/joda/time/LocalDate;.toDate:()Ljava/util/Date;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L39e9ec.  call temp:= `getDayOfMonth`(v7) @signature `Lorg/joda/time/LocalDate;.getDayOfMonth:()I` @kind virtual;
  #L39e9f2.  v0:= temp;
  #L39e9f4.  v1:= new `java.util.Date`;
  #L39e9f8.  call temp:= `getYear`(v7) @signature `Lorg/joda/time/LocalDate;.getYear:()I` @kind virtual;
  #L39e9fe.  v2:= temp;
  #L39ea00.  v2:= v2 + -1900;
  #L39ea04.  call temp:= `getMonthOfYear`(v7) @signature `Lorg/joda/time/LocalDate;.getMonthOfYear:()I` @kind virtual;
  #L39ea0a.  v3:= temp;
  #L39ea0c.  v3:= v3 + -1;
  #L39ea10.  call `<init>`(v1, v2, v3, v0) @signature `Ljava/util/Date;.<init>:(III)V` @kind direct;
  #L39ea16.  call temp:= `fromDateFields`(v1) @signature `Lorg/joda/time/LocalDate;.fromDateFields:(Ljava/util/Date;)Lorg/joda/time/LocalDate;` @kind static;
  #L39ea1c.  v2:= temp @kind object;
  #L39ea1e.  call temp:= `isBefore`(v2, v7) @signature `Lorg/joda/time/base/AbstractPartial;.isBefore:(Lorg/joda/time/ReadablePartial;)Z` @kind virtual;
  #L39ea24.  v3:= temp;
  #L39ea26.  if v3 == 0 then goto L39ea8a;
  #L39ea2a.  call temp:= `equals`(v2, v7) @signature `Lorg/joda/time/LocalDate;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39ea30.  v2:= temp;
  #L39ea32.  if v2 != 0 then goto L39ea56;
  #L39ea36.  call temp:= `getTime`(v1) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L39ea3c.  v2:= temp @kind wide;
  #L39ea3e.  v4:= 3600000L;
  #L39ea44.  v2:= v2 + v4 @kind long;
  #L39ea46.  call `setTime`(v1, v2) @signature `Ljava/util/Date;.setTime:(J)V` @kind virtual;
  #L39ea4c.  call temp:= `fromDateFields`(v1) @signature `Lorg/joda/time/LocalDate;.fromDateFields:(Ljava/util/Date;)Lorg/joda/time/LocalDate;` @kind static;
  #L39ea52.  v2:= temp @kind object;
  #L39ea54.  goto L39ea2a;
  #L39ea56.  call temp:= `getDate`(v1) @signature `Ljava/util/Date;.getDate:()I` @kind virtual;
  #L39ea5c.  v2:= temp;
  #L39ea5e.  v3:= 1000L;
  #L39ea62.  if v2 != v0 then goto L39ea78;
  #L39ea66.  call temp:= `getTime`(v1) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L39ea6c.  v5:= temp @kind wide;
  #L39ea6e.  v5:= v5 - v3 @kind long;
  #L39ea70.  call `setTime`(v1, v5) @signature `Ljava/util/Date;.setTime:(J)V` @kind virtual;
  #L39ea76.  goto L39ea56;
  #L39ea78.  call temp:= `getTime`(v1) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L39ea7e.  v5:= temp @kind wide;
  #L39ea80.  v5:= v5 + v3 @kind long;
  #L39ea82.  call `setTime`(v1, v5) @signature `Ljava/util/Date;.setTime:(J)V` @kind virtual;
  #L39ea88.  goto L39eaca;
  #L39ea8a.  call temp:= `equals`(v2, v7) @signature `Lorg/joda/time/LocalDate;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L39ea90.  v2:= temp;
  #L39ea92.  if v2 == 0 then goto L39eaca;
  #L39ea96.  v2:= new `java.util.Date`;
  #L39ea9a.  call temp:= `getTime`(v1) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L39eaa0.  v3:= temp @kind wide;
  #L39eaa2.  call temp:= `getDefault`() @signature `Ljava/util/TimeZone;.getDefault:()Ljava/util/TimeZone;` @kind static;
  #L39eaa8.  v5:= temp @kind object;
  #L39eaaa.  call temp:= `getDSTSavings`(v5) @signature `Ljava/util/TimeZone;.getDSTSavings:()I` @kind virtual;
  #L39eab0.  v5:= temp;
  #L39eab2.  v5:= (`long`) v5 @kind i2l;
  #L39eab4.  v3:= v3 - v5 @kind long;
  #L39eab6.  call `<init>`(v2, v3) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L39eabc.  call temp:= `getDate`(v2) @signature `Ljava/util/Date;.getDate:()I` @kind virtual;
  #L39eac2.  v3:= temp;
  #L39eac4.  if v3 != v0 then goto L39eaca;
  #L39eac8.  v1:= v2 @kind object;
  #L39eaca.  return v1 @kind object;
}
procedure `org.joda.time.DateMidnight` `toDateMidnight`(`org.joda.time.LocalDate` v1 @kind this) @signature `Lorg/joda/time/LocalDate;.toDateMidnight:()Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39eb0c.  v0:= 0I;
  #L39eb0e.  call temp:= `toDateMidnight`(v1, v0) @signature `Lorg/joda/time/LocalDate;.toDateMidnight:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateMidnight;` @kind virtual;
  #L39eb14.  v0:= temp @kind object;
  #L39eb16.  return v0 @kind object;
}
procedure `org.joda.time.DateMidnight` `toDateMidnight`(`org.joda.time.LocalDate` v4 @kind this, `org.joda.time.DateTimeZone` v5 @kind object) @signature `Lorg/joda/time/LocalDate;.toDateMidnight:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateMidnight;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39eb28.  call temp:= `getZone`(v5) @signature `Lorg/joda/time/DateTimeUtils;.getZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTimeZone;` @kind static;
  #L39eb2e.  v5:= temp @kind object;
  #L39eb30.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39eb36.  v0:= temp @kind object;
  #L39eb38.  call temp:= `withZone`(v0, v5) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L39eb3e.  v5:= temp @kind object;
  #L39eb40.  v0:= new `org.joda.time.DateMidnight`;
  #L39eb44.  call temp:= `getYear`(v4) @signature `Lorg/joda/time/LocalDate;.getYear:()I` @kind virtual;
  #L39eb4a.  v1:= temp;
  #L39eb4c.  call temp:= `getMonthOfYear`(v4) @signature `Lorg/joda/time/LocalDate;.getMonthOfYear:()I` @kind virtual;
  #L39eb52.  v2:= temp;
  #L39eb54.  call temp:= `getDayOfMonth`(v4) @signature `Lorg/joda/time/LocalDate;.getDayOfMonth:()I` @kind virtual;
  #L39eb5a.  v3:= temp;
  #L39eb5c.  call `<init>`(v0, v1, v2, v3, v5) @signature `Lorg/joda/time/DateMidnight;.<init>:(IIILorg/joda/time/Chronology;)V` @kind direct;
  #L39eb62.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTime`(`org.joda.time.LocalDate` v1 @kind this, `org.joda.time.LocalTime` v2 @kind object) @signature `Lorg/joda/time/LocalDate;.toDateTime:(Lorg/joda/time/LocalTime;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39eb74.  v0:= 0I;
  #L39eb76.  call temp:= `toDateTime`(v1, v2, v0) @signature `Lorg/joda/time/LocalDate;.toDateTime:(Lorg/joda/time/LocalTime;Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @kind virtual;
  #L39eb7c.  v2:= temp @kind object;
  #L39eb7e.  return v2 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTime`(`org.joda.time.LocalDate` v10 @kind this, `org.joda.time.LocalTime` v11 @kind object, `org.joda.time.DateTimeZone` v12 @kind object) @signature `Lorg/joda/time/LocalDate;.toDateTime:(Lorg/joda/time/LocalTime;Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L39eb90.  if v11 != 0 then goto L39eb9e;
  #L39eb94.  call temp:= `toDateTimeAtCurrentTime`(v10, v12) @signature `Lorg/joda/time/LocalDate;.toDateTimeAtCurrentTime:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @kind virtual;
  #L39eb9a.  v11:= temp @kind object;
  #L39eb9c.  return v11 @kind object;
  #L39eb9e.  call temp:= `getChronology`(v10) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39eba4.  v0:= temp @kind object;
  #L39eba6.  call temp:= `getChronology`(v11) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39ebac.  v1:= temp @kind object;
  #L39ebae.  if v0 != v1 then goto L39ec08;
  #L39ebb2.  call temp:= `getChronology`(v10) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39ebb8.  v0:= temp @kind object;
  #L39ebba.  call temp:= `withZone`(v0, v12) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L39ebc0.  v9:= temp @kind object;
  #L39ebc2.  v12:= new `org.joda.time.DateTime`;
  #L39ebc6.  call temp:= `getYear`(v10) @signature `Lorg/joda/time/LocalDate;.getYear:()I` @kind virtual;
  #L39ebcc.  v2:= temp;
  #L39ebce.  call temp:= `getMonthOfYear`(v10) @signature `Lorg/joda/time/LocalDate;.getMonthOfYear:()I` @kind virtual;
  #L39ebd4.  v3:= temp;
  #L39ebd6.  call temp:= `getDayOfMonth`(v10) @signature `Lorg/joda/time/LocalDate;.getDayOfMonth:()I` @kind virtual;
  #L39ebdc.  v4:= temp;
  #L39ebde.  call temp:= `getHourOfDay`(v11) @signature `Lorg/joda/time/LocalTime;.getHourOfDay:()I` @kind virtual;
  #L39ebe4.  v5:= temp;
  #L39ebe6.  call temp:= `getMinuteOfHour`(v11) @signature `Lorg/joda/time/LocalTime;.getMinuteOfHour:()I` @kind virtual;
  #L39ebec.  v6:= temp;
  #L39ebee.  call temp:= `getSecondOfMinute`(v11) @signature `Lorg/joda/time/LocalTime;.getSecondOfMinute:()I` @kind virtual;
  #L39ebf4.  v7:= temp;
  #L39ebf6.  call temp:= `getMillisOfSecond`(v11) @signature `Lorg/joda/time/LocalTime;.getMillisOfSecond:()I` @kind virtual;
  #L39ebfc.  v8:= temp;
  #L39ebfe.  v1:= v12 @kind object;
  #L39ec00.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lorg/joda/time/DateTime;.<init>:(IIIIIIILorg/joda/time/Chronology;)V` @kind direct;
  #L39ec06.  return v12 @kind object;
  #L39ec08.  v11:= new `java.lang.IllegalArgumentException`;
  #L39ec0c.  v12:= "The chronology of the time does not match" @kind object;
  #L39ec10.  call `<init>`(v11, v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39ec16.  throw v11;
}
procedure `org.joda.time.DateTime` `toDateTimeAtCurrentTime`(`org.joda.time.LocalDate` v1 @kind this) @signature `Lorg/joda/time/LocalDate;.toDateTimeAtCurrentTime:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39ec28.  v0:= 0I;
  #L39ec2a.  call temp:= `toDateTimeAtCurrentTime`(v1, v0) @signature `Lorg/joda/time/LocalDate;.toDateTimeAtCurrentTime:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @kind virtual;
  #L39ec30.  v0:= temp @kind object;
  #L39ec32.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTimeAtCurrentTime`(`org.joda.time.LocalDate` v3 @kind this, `org.joda.time.DateTimeZone` v4 @kind object) @signature `Lorg/joda/time/LocalDate;.toDateTimeAtCurrentTime:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39ec44.  call temp:= `getZone`(v4) @signature `Lorg/joda/time/DateTimeUtils;.getZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTimeZone;` @kind static;
  #L39ec4a.  v4:= temp @kind object;
  #L39ec4c.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39ec52.  v0:= temp @kind object;
  #L39ec54.  call temp:= `withZone`(v0, v4) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L39ec5a.  v4:= temp @kind object;
  #L39ec5c.  call temp:= `currentTimeMillis`() @signature `Lorg/joda/time/DateTimeUtils;.currentTimeMillis:()J` @kind static;
  #L39ec62.  v0:= temp @kind wide;
  #L39ec64.  call temp:= `set`(v4, v3, v0) @signature `Lorg/joda/time/Chronology;.set:(Lorg/joda/time/ReadablePartial;J)J` @kind virtual;
  #L39ec6a.  v0:= temp @kind wide;
  #L39ec6c.  v2:= new `org.joda.time.DateTime`;
  #L39ec70.  call `<init>`(v2, v0, v4) @signature `Lorg/joda/time/DateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39ec76.  return v2 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTimeAtMidnight`(`org.joda.time.LocalDate` v1 @kind this) @signature `Lorg/joda/time/LocalDate;.toDateTimeAtMidnight:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39ec88.  v0:= 0I;
  #L39ec8a.  call temp:= `toDateTimeAtMidnight`(v1, v0) @signature `Lorg/joda/time/LocalDate;.toDateTimeAtMidnight:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @kind virtual;
  #L39ec90.  v0:= temp @kind object;
  #L39ec92.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTimeAtMidnight`(`org.joda.time.LocalDate` v10 @kind this, `org.joda.time.DateTimeZone` v11 @kind object) @signature `Lorg/joda/time/LocalDate;.toDateTimeAtMidnight:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L39eca4.  call temp:= `getZone`(v11) @signature `Lorg/joda/time/DateTimeUtils;.getZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTimeZone;` @kind static;
  #L39ecaa.  v11:= temp @kind object;
  #L39ecac.  call temp:= `getChronology`(v10) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39ecb2.  v0:= temp @kind object;
  #L39ecb4.  call temp:= `withZone`(v0, v11) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L39ecba.  v9:= temp @kind object;
  #L39ecbc.  v11:= new `org.joda.time.DateTime`;
  #L39ecc0.  call temp:= `getYear`(v10) @signature `Lorg/joda/time/LocalDate;.getYear:()I` @kind virtual;
  #L39ecc6.  v2:= temp;
  #L39ecc8.  call temp:= `getMonthOfYear`(v10) @signature `Lorg/joda/time/LocalDate;.getMonthOfYear:()I` @kind virtual;
  #L39ecce.  v3:= temp;
  #L39ecd0.  call temp:= `getDayOfMonth`(v10) @signature `Lorg/joda/time/LocalDate;.getDayOfMonth:()I` @kind virtual;
  #L39ecd6.  v4:= temp;
  #L39ecd8.  v5:= 0I;
  #L39ecda.  v6:= 0I;
  #L39ecdc.  v7:= 0I;
  #L39ecde.  v8:= 0I;
  #L39ece0.  v1:= v11 @kind object;
  #L39ece2.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lorg/joda/time/DateTime;.<init>:(IIIIIIILorg/joda/time/Chronology;)V` @kind direct;
  #L39ece8.  return v11 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTimeAtStartOfDay`(`org.joda.time.LocalDate` v1 @kind this) @signature `Lorg/joda/time/LocalDate;.toDateTimeAtStartOfDay:()Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39ecfc.  v0:= 0I;
  #L39ecfe.  call temp:= `toDateTimeAtStartOfDay`(v1, v0) @signature `Lorg/joda/time/LocalDate;.toDateTimeAtStartOfDay:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @kind virtual;
  #L39ed04.  v0:= temp @kind object;
  #L39ed06.  return v0 @kind object;
}
procedure `org.joda.time.DateTime` `toDateTimeAtStartOfDay`(`org.joda.time.LocalDate` v5 @kind this, `org.joda.time.DateTimeZone` v6 @kind object) @signature `Lorg/joda/time/LocalDate;.toDateTimeAtStartOfDay:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L39ed18.  call temp:= `getZone`(v6) @signature `Lorg/joda/time/DateTimeUtils;.getZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTimeZone;` @kind static;
  #L39ed1e.  v6:= temp @kind object;
  #L39ed20.  call temp:= `getChronology`(v5) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39ed26.  v0:= temp @kind object;
  #L39ed28.  call temp:= `withZone`(v0, v6) @signature `Lorg/joda/time/Chronology;.withZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Chronology;` @kind virtual;
  #L39ed2e.  v0:= temp @kind object;
  #L39ed30.  call temp:= `getLocalMillis`(v5) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39ed36.  v1:= temp @kind wide;
  #L39ed38.  v3:= 21600000L;
  #L39ed3e.  v1:= v1 + v3 @kind long;
  #L39ed40.  v3:= 0I;
  #L39ed42.  call temp:= `convertLocalToUTC`(v6, v1, v3) @signature `Lorg/joda/time/DateTimeZone;.convertLocalToUTC:(JZ)J` @kind virtual;
  #L39ed48.  v1:= temp @kind wide;
  #L39ed4a.  call temp:= `dayOfMonth`(v0) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39ed50.  v6:= temp @kind object;
  #L39ed52.  call temp:= `roundFloor`(v6, v1) @signature `Lorg/joda/time/DateTimeField;.roundFloor:(J)J` @kind virtual;
  #L39ed58.  v1:= temp @kind wide;
  #L39ed5a.  v6:= new `org.joda.time.DateTime`;
  #L39ed5e.  call `<init>`(v6, v1, v0) @signature `Lorg/joda/time/DateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39ed64.  return v6 @kind object;
}
procedure `org.joda.time.Interval` `toInterval`(`org.joda.time.LocalDate` v1 @kind this) @signature `Lorg/joda/time/LocalDate;.toInterval:()Lorg/joda/time/Interval;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39ede4.  v0:= 0I;
  #L39ede6.  call temp:= `toInterval`(v1, v0) @signature `Lorg/joda/time/LocalDate;.toInterval:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Interval;` @kind virtual;
  #L39edec.  v0:= temp @kind object;
  #L39edee.  return v0 @kind object;
}
procedure `org.joda.time.Interval` `toInterval`(`org.joda.time.LocalDate` v2 @kind this, `org.joda.time.DateTimeZone` v3 @kind object) @signature `Lorg/joda/time/LocalDate;.toInterval:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/Interval;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39ee00.  call temp:= `getZone`(v3) @signature `Lorg/joda/time/DateTimeUtils;.getZone:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTimeZone;` @kind static;
  #L39ee06.  v3:= temp @kind object;
  #L39ee08.  call temp:= `toDateTimeAtStartOfDay`(v2, v3) @signature `Lorg/joda/time/LocalDate;.toDateTimeAtStartOfDay:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @kind virtual;
  #L39ee0e.  v0:= temp @kind object;
  #L39ee10.  v1:= 1I;
  #L39ee12.  call temp:= `plusDays`(v2, v1) @signature `Lorg/joda/time/LocalDate;.plusDays:(I)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39ee18.  v1:= temp @kind object;
  #L39ee1a.  call temp:= `toDateTimeAtStartOfDay`(v1, v3) @signature `Lorg/joda/time/LocalDate;.toDateTimeAtStartOfDay:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;` @kind virtual;
  #L39ee20.  v3:= temp @kind object;
  #L39ee22.  v1:= new `org.joda.time.Interval`;
  #L39ee26.  call `<init>`(v1, v0, v3) @signature `Lorg/joda/time/Interval;.<init>:(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;)V` @kind direct;
  #L39ee2c.  return v1 @kind object;
}
procedure `org.joda.time.LocalDateTime` `toLocalDateTime`(`org.joda.time.LocalDate` v4 @kind this, `org.joda.time.LocalTime` v5 @kind object) @signature `Lorg/joda/time/LocalDate;.toLocalDateTime:(Lorg/joda/time/LocalTime;)Lorg/joda/time/LocalDateTime;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L39f944.  if v5 == 0 then goto L39f992;
  #L39f948.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f94e.  v0:= temp @kind object;
  #L39f950.  call temp:= `getChronology`(v5) @signature `Lorg/joda/time/LocalTime;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f956.  v1:= temp @kind object;
  #L39f958.  if v0 != v1 then goto L39f982;
  #L39f95c.  call temp:= `getLocalMillis`(v4) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f962.  v0:= temp @kind wide;
  #L39f964.  call temp:= `getLocalMillis`(v5) @signature `Lorg/joda/time/LocalTime;.getLocalMillis:()J` @kind virtual;
  #L39f96a.  v2:= temp @kind wide;
  #L39f96c.  v0:= v0 + v2 @kind long;
  #L39f96e.  v5:= new `org.joda.time.LocalDateTime`;
  #L39f972.  call temp:= `getChronology`(v4) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f978.  v2:= temp @kind object;
  #L39f97a.  call `<init>`(v5, v0, v2) @signature `Lorg/joda/time/LocalDateTime;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39f980.  return v5 @kind object;
  #L39f982.  v5:= new `java.lang.IllegalArgumentException`;
  #L39f986.  v0:= "The chronology of the time does not match" @kind object;
  #L39f98a.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39f990.  throw v5;
  #L39f992.  v5:= new `java.lang.IllegalArgumentException`;
  #L39f996.  v0:= "The time must not be null" @kind object;
  #L39f99a.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39f9a0.  throw v5;
}
procedure `java.lang.String` `toString`(`org.joda.time.LocalDate` v1 @kind this) @signature `Lorg/joda/time/LocalDate;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39e960.  call temp:= `date`() @signature `Lorg/joda/time/format/ISODateTimeFormat;.date:()Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L39e966.  v0:= temp @kind object;
  #L39e968.  call temp:= `print`(v0, v1) @signature `Lorg/joda/time/format/DateTimeFormatter;.print:(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;` @kind virtual;
  #L39e96e.  v0:= temp @kind object;
  #L39e970.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.LocalDate` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/joda/time/LocalDate;.toString:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L39e984.  if v1 != 0 then goto L39e992;
  #L39e988.  call temp:= `toString`(v0) @signature `Lorg/joda/time/LocalDate;.toString:()Ljava/lang/String;` @kind virtual;
  #L39e98e.  v1:= temp @kind object;
  #L39e990.  return v1 @kind object;
  #L39e992.  call temp:= `forPattern`(v1) @signature `Lorg/joda/time/format/DateTimeFormat;.forPattern:(Ljava/lang/String;)Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L39e998.  v1:= temp @kind object;
  #L39e99a.  call temp:= `print`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatter;.print:(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;` @kind virtual;
  #L39e9a0.  v1:= temp @kind object;
  #L39e9a2.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`org.joda.time.LocalDate` v0 @kind this, `java.lang.String` v1 @kind object, `java.util.Locale` v2 @kind object) @signature `Lorg/joda/time/LocalDate;.toString:(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L39e9b4.  if v1 != 0 then goto L39e9c2;
  #L39e9b8.  call temp:= `toString`(v0) @signature `Lorg/joda/time/LocalDate;.toString:()Ljava/lang/String;` @kind virtual;
  #L39e9be.  v1:= temp @kind object;
  #L39e9c0.  return v1 @kind object;
  #L39e9c2.  call temp:= `forPattern`(v1) @signature `Lorg/joda/time/format/DateTimeFormat;.forPattern:(Ljava/lang/String;)Lorg/joda/time/format/DateTimeFormatter;` @kind static;
  #L39e9c8.  v1:= temp @kind object;
  #L39e9ca.  call temp:= `withLocale`(v1, v2) @signature `Lorg/joda/time/format/DateTimeFormatter;.withLocale:(Ljava/util/Locale;)Lorg/joda/time/format/DateTimeFormatter;` @kind virtual;
  #L39e9d0.  v1:= temp @kind object;
  #L39e9d2.  call temp:= `print`(v1, v0) @signature `Lorg/joda/time/format/DateTimeFormatter;.print:(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;` @kind virtual;
  #L39e9d8.  v1:= temp @kind object;
  #L39e9da.  return v1 @kind object;
}
procedure `org.joda.time.LocalDate$Property` `weekOfWeekyear`(`org.joda.time.LocalDate` v2 @kind this) @signature `Lorg/joda/time/LocalDate;.weekOfWeekyear:()Lorg/joda/time/LocalDate$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39f868.  v0:= new `org.joda.time.LocalDate$Property`;
  #L39f86c.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f872.  v1:= temp @kind object;
  #L39f874.  call temp:= `weekOfWeekyear`(v1) @signature `Lorg/joda/time/Chronology;.weekOfWeekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f87a.  v1:= temp @kind object;
  #L39f87c.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDate$Property;.<init>:(Lorg/joda/time/LocalDate;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39f882.  return v0 @kind object;
}
procedure `org.joda.time.LocalDate$Property` `weekyear`(`org.joda.time.LocalDate` v2 @kind this) @signature `Lorg/joda/time/LocalDate;.weekyear:()Lorg/joda/time/LocalDate$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39f894.  v0:= new `org.joda.time.LocalDate$Property`;
  #L39f898.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f89e.  v1:= temp @kind object;
  #L39f8a0.  call temp:= `weekyear`(v1) @signature `Lorg/joda/time/Chronology;.weekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f8a6.  v1:= temp @kind object;
  #L39f8a8.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDate$Property;.<init>:(Lorg/joda/time/LocalDate;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39f8ae.  return v0 @kind object;
}
procedure `org.joda.time.LocalDate` `withCenturyOfEra`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.withCenturyOfEra:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f218.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f21e.  v0:= temp @kind object;
  #L39f220.  call temp:= `centuryOfEra`(v0) @signature `Lorg/joda/time/Chronology;.centuryOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f226.  v0:= temp @kind object;
  #L39f228.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f22e.  v1:= temp @kind wide;
  #L39f230.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39f236.  v0:= temp @kind wide;
  #L39f238.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f23e.  v4:= temp @kind object;
  #L39f240.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate` `withDayOfMonth`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.withDayOfMonth:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f254.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f25a.  v0:= temp @kind object;
  #L39f25c.  call temp:= `dayOfMonth`(v0) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f262.  v0:= temp @kind object;
  #L39f264.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f26a.  v1:= temp @kind wide;
  #L39f26c.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39f272.  v0:= temp @kind wide;
  #L39f274.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f27a.  v4:= temp @kind object;
  #L39f27c.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate` `withDayOfWeek`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.withDayOfWeek:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f290.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f296.  v0:= temp @kind object;
  #L39f298.  call temp:= `dayOfWeek`(v0) @signature `Lorg/joda/time/Chronology;.dayOfWeek:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f29e.  v0:= temp @kind object;
  #L39f2a0.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f2a6.  v1:= temp @kind wide;
  #L39f2a8.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39f2ae.  v0:= temp @kind wide;
  #L39f2b0.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f2b6.  v4:= temp @kind object;
  #L39f2b8.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate` `withDayOfYear`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.withDayOfYear:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f2cc.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f2d2.  v0:= temp @kind object;
  #L39f2d4.  call temp:= `dayOfYear`(v0) @signature `Lorg/joda/time/Chronology;.dayOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f2da.  v0:= temp @kind object;
  #L39f2dc.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f2e2.  v1:= temp @kind wide;
  #L39f2e4.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39f2ea.  v0:= temp @kind wide;
  #L39f2ec.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f2f2.  v4:= temp @kind object;
  #L39f2f4.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate` `withEra`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.withEra:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f308.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f30e.  v0:= temp @kind object;
  #L39f310.  call temp:= `era`(v0) @signature `Lorg/joda/time/Chronology;.era:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f316.  v0:= temp @kind object;
  #L39f318.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f31e.  v1:= temp @kind wide;
  #L39f320.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39f326.  v0:= temp @kind wide;
  #L39f328.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f32e.  v4:= temp @kind object;
  #L39f330.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate` `withField`(`org.joda.time.LocalDate` v2 @kind this, `org.joda.time.DateTimeFieldType` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.withField:(Lorg/joda/time/DateTimeFieldType;I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39f344.  if v3 == 0 then goto L39f3b6;
  #L39f348.  call temp:= `isSupported`(v2, v3) @signature `Lorg/joda/time/LocalDate;.isSupported:(Lorg/joda/time/DateTimeFieldType;)Z` @kind virtual;
  #L39f34e.  v0:= temp;
  #L39f350.  if v0 == 0 then goto L39f37e;
  #L39f354.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f35a.  v0:= temp @kind object;
  #L39f35c.  call temp:= `getField`(v3, v0) @signature `Lorg/joda/time/DateTimeFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f362.  v3:= temp @kind object;
  #L39f364.  call temp:= `getLocalMillis`(v2) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f36a.  v0:= temp @kind wide;
  #L39f36c.  call temp:= `set`(v3, v0, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39f372.  v3:= temp @kind wide;
  #L39f374.  call temp:= `withLocalMillis`(v2, v3) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f37a.  v3:= temp @kind object;
  #L39f37c.  return v3 @kind object;
  #L39f37e.  v4:= new `java.lang.IllegalArgumentException`;
  #L39f382.  v0:= new `java.lang.StringBuilder`;
  #L39f386.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39f38c.  v1:= "Field '" @kind object;
  #L39f390.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f396.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f39c.  v3:= "' is not supported" @kind object;
  #L39f3a0.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f3a6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39f3ac.  v3:= temp @kind object;
  #L39f3ae.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39f3b4.  throw v4;
  #L39f3b6.  v3:= new `java.lang.IllegalArgumentException`;
  #L39f3ba.  v4:= "Field must not be null" @kind object;
  #L39f3be.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39f3c4.  throw v3;
}
procedure `org.joda.time.LocalDate` `withFieldAdded`(`org.joda.time.LocalDate` v2 @kind this, `org.joda.time.DurationFieldType` v3 @kind object, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.withFieldAdded:(Lorg/joda/time/DurationFieldType;I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39f3d8.  if v3 == 0 then goto L39f450;
  #L39f3dc.  call temp:= `isSupported`(v2, v3) @signature `Lorg/joda/time/LocalDate;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @kind virtual;
  #L39f3e2.  v0:= temp;
  #L39f3e4.  if v0 == 0 then goto L39f418;
  #L39f3e8.  if v4 != 0 then goto L39f3ee;
  #L39f3ec.  return v2 @kind object;
  #L39f3ee.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f3f4.  v0:= temp @kind object;
  #L39f3f6.  call temp:= `getField`(v3, v0) @signature `Lorg/joda/time/DurationFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;` @kind virtual;
  #L39f3fc.  v3:= temp @kind object;
  #L39f3fe.  call temp:= `getLocalMillis`(v2) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f404.  v0:= temp @kind wide;
  #L39f406.  call temp:= `add`(v3, v0, v4) @signature `Lorg/joda/time/DurationField;.add:(JI)J` @kind virtual;
  #L39f40c.  v3:= temp @kind wide;
  #L39f40e.  call temp:= `withLocalMillis`(v2, v3) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f414.  v3:= temp @kind object;
  #L39f416.  return v3 @kind object;
  #L39f418.  v4:= new `java.lang.IllegalArgumentException`;
  #L39f41c.  v0:= new `java.lang.StringBuilder`;
  #L39f420.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39f426.  v1:= "Field '" @kind object;
  #L39f42a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f430.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f436.  v3:= "' is not supported" @kind object;
  #L39f43a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39f440.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L39f446.  v3:= temp @kind object;
  #L39f448.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39f44e.  throw v4;
  #L39f450.  v3:= new `java.lang.IllegalArgumentException`;
  #L39f454.  v4:= "Field must not be null" @kind object;
  #L39f458.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39f45e.  throw v3;
}
procedure `org.joda.time.LocalDate` `withFields`(`org.joda.time.LocalDate` v3 @kind this, `org.joda.time.ReadablePartial` v4 @kind object) @signature `Lorg/joda/time/LocalDate;.withFields:(Lorg/joda/time/ReadablePartial;)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f470.  if v4 != 0 then goto L39f476;
  #L39f474.  return v3 @kind object;
  #L39f476.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f47c.  v0:= temp @kind object;
  #L39f47e.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f484.  v1:= temp @kind wide;
  #L39f486.  call temp:= `set`(v0, v4, v1) @signature `Lorg/joda/time/Chronology;.set:(Lorg/joda/time/ReadablePartial;J)J` @kind virtual;
  #L39f48c.  v0:= temp @kind wide;
  #L39f48e.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f494.  v4:= temp @kind object;
  #L39f496.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate` `withLocalMillis`(`org.joda.time.LocalDate` v3 @kind this, `long` v4 ) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L39f4a8.  v0:= v3.`org.joda.time.LocalDate.iChronology` @type ^`org.joda.time.Chronology` @kind object;
  #L39f4ac.  call temp:= `dayOfMonth`(v0) @signature `Lorg/joda/time/Chronology;.dayOfMonth:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f4b2.  v0:= temp @kind object;
  #L39f4b4.  call temp:= `roundFloor`(v0, v4) @signature `Lorg/joda/time/DateTimeField;.roundFloor:(J)J` @kind virtual;
  #L39f4ba.  v4:= temp @kind wide;
  #L39f4bc.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f4c2.  v0:= temp @kind wide;
  #L39f4c4.  v2:= lcmp(v4, v0);
  #L39f4c8.  if v2 != 0 then goto L39f4d0;
  #L39f4cc.  v0:= v3 @kind object;
  #L39f4ce.  goto L39f4e2;
  #L39f4d0.  v0:= new `org.joda.time.LocalDate`;
  #L39f4d4.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f4da.  v1:= temp @kind object;
  #L39f4dc.  call `<init>`(v0, v4, v1) @signature `Lorg/joda/time/LocalDate;.<init>:(JLorg/joda/time/Chronology;)V` @kind direct;
  #L39f4e2.  return v0 @kind object;
}
procedure `org.joda.time.LocalDate` `withMonthOfYear`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.withMonthOfYear:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f4f4.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f4fa.  v0:= temp @kind object;
  #L39f4fc.  call temp:= `monthOfYear`(v0) @signature `Lorg/joda/time/Chronology;.monthOfYear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f502.  v0:= temp @kind object;
  #L39f504.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f50a.  v1:= temp @kind wide;
  #L39f50c.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39f512.  v0:= temp @kind wide;
  #L39f514.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f51a.  v4:= temp @kind object;
  #L39f51c.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate` `withPeriodAdded`(`org.joda.time.LocalDate` v8 @kind this, `org.joda.time.ReadablePeriod` v9 @kind object, `int` v10 ) @signature `Lorg/joda/time/LocalDate;.withPeriodAdded:(Lorg/joda/time/ReadablePeriod;I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L39f530.  if v9 == 0 then goto L39f59e;
  #L39f534.  if v10 != 0 then goto L39f53a;
  #L39f538.  goto L39f59e;
  #L39f53a.  call temp:= `getLocalMillis`(v8) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f540.  v0:= temp @kind wide;
  #L39f542.  call temp:= `getChronology`(v8) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f548.  v2:= temp @kind object;
  #L39f54a.  v3:= 0I;
  #L39f54c.  call temp:= `size`(v9) @signature `Lorg/joda/time/ReadablePeriod;.size:()I` @kind interface;
  #L39f552.  v4:= temp;
  #L39f554.  if v3 >= v4 then goto L39f594;
  #L39f558.  call temp:= `getValue`(v9, v3) @signature `Lorg/joda/time/ReadablePeriod;.getValue:(I)I` @kind interface;
  #L39f55e.  v4:= temp;
  #L39f560.  call temp:= `safeMultiply`(v4, v10) @signature `Lorg/joda/time/field/FieldUtils;.safeMultiply:(II)I` @kind static;
  #L39f566.  v4:= temp;
  #L39f568.  v4:= (`long`) v4 @kind i2l;
  #L39f56a.  call temp:= `getFieldType`(v9, v3) @signature `Lorg/joda/time/ReadablePeriod;.getFieldType:(I)Lorg/joda/time/DurationFieldType;` @kind interface;
  #L39f570.  v6:= temp @kind object;
  #L39f572.  call temp:= `isSupported`(v8, v6) @signature `Lorg/joda/time/LocalDate;.isSupported:(Lorg/joda/time/DurationFieldType;)Z` @kind virtual;
  #L39f578.  v7:= temp;
  #L39f57a.  if v7 == 0 then goto L39f58e;
  #L39f57e.  call temp:= `getField`(v6, v2) @signature `Lorg/joda/time/DurationFieldType;.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DurationField;` @kind virtual;
  #L39f584.  v6:= temp @kind object;
  #L39f586.  call temp:= `add`(v6, v0, v4) @signature `Lorg/joda/time/DurationField;.add:(JJ)J` @kind virtual;
  #L39f58c.  v0:= temp @kind wide;
  #L39f58e.  v3:= v3 + 1;
  #L39f592.  goto L39f54c;
  #L39f594.  call temp:= `withLocalMillis`(v8, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f59a.  v9:= temp @kind object;
  #L39f59c.  return v9 @kind object;
  #L39f59e.  return v8 @kind object;
}
procedure `org.joda.time.LocalDate` `withWeekOfWeekyear`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.withWeekOfWeekyear:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f5b0.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f5b6.  v0:= temp @kind object;
  #L39f5b8.  call temp:= `weekOfWeekyear`(v0) @signature `Lorg/joda/time/Chronology;.weekOfWeekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f5be.  v0:= temp @kind object;
  #L39f5c0.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f5c6.  v1:= temp @kind wide;
  #L39f5c8.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39f5ce.  v0:= temp @kind wide;
  #L39f5d0.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f5d6.  v4:= temp @kind object;
  #L39f5d8.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate` `withWeekyear`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.withWeekyear:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f5ec.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f5f2.  v0:= temp @kind object;
  #L39f5f4.  call temp:= `weekyear`(v0) @signature `Lorg/joda/time/Chronology;.weekyear:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f5fa.  v0:= temp @kind object;
  #L39f5fc.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f602.  v1:= temp @kind wide;
  #L39f604.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39f60a.  v0:= temp @kind wide;
  #L39f60c.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f612.  v4:= temp @kind object;
  #L39f614.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate` `withYear`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.withYear:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f628.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f62e.  v0:= temp @kind object;
  #L39f630.  call temp:= `year`(v0) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f636.  v0:= temp @kind object;
  #L39f638.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f63e.  v1:= temp @kind wide;
  #L39f640.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39f646.  v0:= temp @kind wide;
  #L39f648.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f64e.  v4:= temp @kind object;
  #L39f650.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate` `withYearOfCentury`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.withYearOfCentury:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f664.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f66a.  v0:= temp @kind object;
  #L39f66c.  call temp:= `yearOfCentury`(v0) @signature `Lorg/joda/time/Chronology;.yearOfCentury:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f672.  v0:= temp @kind object;
  #L39f674.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f67a.  v1:= temp @kind wide;
  #L39f67c.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39f682.  v0:= temp @kind wide;
  #L39f684.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f68a.  v4:= temp @kind object;
  #L39f68c.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate` `withYearOfEra`(`org.joda.time.LocalDate` v3 @kind this, `int` v4 ) @signature `Lorg/joda/time/LocalDate;.withYearOfEra:(I)Lorg/joda/time/LocalDate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39f6a0.  call temp:= `getChronology`(v3) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f6a6.  v0:= temp @kind object;
  #L39f6a8.  call temp:= `yearOfEra`(v0) @signature `Lorg/joda/time/Chronology;.yearOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f6ae.  v0:= temp @kind object;
  #L39f6b0.  call temp:= `getLocalMillis`(v3) @signature `Lorg/joda/time/LocalDate;.getLocalMillis:()J` @kind virtual;
  #L39f6b6.  v1:= temp @kind wide;
  #L39f6b8.  call temp:= `set`(v0, v1, v4) @signature `Lorg/joda/time/DateTimeField;.set:(JI)J` @kind virtual;
  #L39f6be.  v0:= temp @kind wide;
  #L39f6c0.  call temp:= `withLocalMillis`(v3, v0) @signature `Lorg/joda/time/LocalDate;.withLocalMillis:(J)Lorg/joda/time/LocalDate;` @kind virtual;
  #L39f6c6.  v4:= temp @kind object;
  #L39f6c8.  return v4 @kind object;
}
procedure `org.joda.time.LocalDate$Property` `year`(`org.joda.time.LocalDate` v2 @kind this) @signature `Lorg/joda/time/LocalDate;.year:()Lorg/joda/time/LocalDate$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39f8c0.  v0:= new `org.joda.time.LocalDate$Property`;
  #L39f8c4.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f8ca.  v1:= temp @kind object;
  #L39f8cc.  call temp:= `year`(v1) @signature `Lorg/joda/time/Chronology;.year:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f8d2.  v1:= temp @kind object;
  #L39f8d4.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDate$Property;.<init>:(Lorg/joda/time/LocalDate;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39f8da.  return v0 @kind object;
}
procedure `org.joda.time.LocalDate$Property` `yearOfCentury`(`org.joda.time.LocalDate` v2 @kind this) @signature `Lorg/joda/time/LocalDate;.yearOfCentury:()Lorg/joda/time/LocalDate$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39f8ec.  v0:= new `org.joda.time.LocalDate$Property`;
  #L39f8f0.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f8f6.  v1:= temp @kind object;
  #L39f8f8.  call temp:= `yearOfCentury`(v1) @signature `Lorg/joda/time/Chronology;.yearOfCentury:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f8fe.  v1:= temp @kind object;
  #L39f900.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDate$Property;.<init>:(Lorg/joda/time/LocalDate;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39f906.  return v0 @kind object;
}
procedure `org.joda.time.LocalDate$Property` `yearOfEra`(`org.joda.time.LocalDate` v2 @kind this) @signature `Lorg/joda/time/LocalDate;.yearOfEra:()Lorg/joda/time/LocalDate$Property;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39f918.  v0:= new `org.joda.time.LocalDate$Property`;
  #L39f91c.  call temp:= `getChronology`(v2) @signature `Lorg/joda/time/LocalDate;.getChronology:()Lorg/joda/time/Chronology;` @kind virtual;
  #L39f922.  v1:= temp @kind object;
  #L39f924.  call temp:= `yearOfEra`(v1) @signature `Lorg/joda/time/Chronology;.yearOfEra:()Lorg/joda/time/DateTimeField;` @kind virtual;
  #L39f92a.  v1:= temp @kind object;
  #L39f92c.  call `<init>`(v0, v2, v1) @signature `Lorg/joda/time/LocalDate$Property;.<init>:(Lorg/joda/time/LocalDate;Lorg/joda/time/DateTimeField;)V` @kind direct;
  #L39f932.  return v0 @kind object;
}
