record `org.reactivestreams.FlowAdapters` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`org.reactivestreams.FlowAdapters` v2 @kind this) @signature `Lorg/reactivestreams/FlowAdapters;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L43a95c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43a962.  v0:= new `java.lang.IllegalStateException`;
  #L43a966.  v1:= "No instances!" @kind object;
  #L43a96a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L43a970.  throw v0;
}
procedure `java.util.concurrent.Flow$Processor` `toFlowProcessor`(`org.reactivestreams.Processor` v1 @kind object) @signature `Lorg/reactivestreams/FlowAdapters;.toFlowProcessor:(Lorg/reactivestreams/Processor;)Ljava/util/concurrent/Flow$Processor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43a7ac.  v0:= "reactiveStreamsProcessor" @kind object;
  #L43a7b0.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43a7b6.  v0:= instanceof @variable v1 @type ^`org.reactivestreams.FlowAdapters$f` @kind boolean;
  #L43a7ba.  if v0 == 0 then goto L43a7c8;
  #L43a7be.  v1:= (`org.reactivestreams.FlowAdapters$f`) v1 @kind object;
  #L43a7c2.  v1:= v1.`org.reactivestreams.FlowAdapters$f.a` @type ^`java.util.concurrent.Flow$Processor` @kind object;
  #L43a7c6.  goto L43a7e2;
  #L43a7c8.  v0:= instanceof @variable v1 @type ^`java.util.concurrent.Flow$Processor` @kind boolean;
  #L43a7cc.  if v0 == 0 then goto L43a7d6;
  #L43a7d0.  v1:= (`java.util.concurrent.Flow$Processor`) v1 @kind object;
  #L43a7d4.  goto L43a7e2;
  #L43a7d6.  v0:= new `org.reactivestreams.FlowAdapters$b`;
  #L43a7da.  call `<init>`(v0, v1) @signature `Lorg/reactivestreams/FlowAdapters$b;.<init>:(Lorg/reactivestreams/Processor;)V` @kind direct;
  #L43a7e0.  v1:= v0 @kind object;
  #L43a7e2.  return v1 @kind object;
}
procedure `java.util.concurrent.Flow$Publisher` `toFlowPublisher`(`org.reactivestreams.Publisher` v1 @kind object) @signature `Lorg/reactivestreams/FlowAdapters;.toFlowPublisher:(Lorg/reactivestreams/Publisher;)Ljava/util/concurrent/Flow$Publisher;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43a7f4.  v0:= "reactiveStreamsPublisher" @kind object;
  #L43a7f8.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43a7fe.  v0:= instanceof @variable v1 @type ^`org.reactivestreams.FlowAdapters$e` @kind boolean;
  #L43a802.  if v0 == 0 then goto L43a810;
  #L43a806.  v1:= (`org.reactivestreams.FlowAdapters$e`) v1 @kind object;
  #L43a80a.  v1:= v1.`org.reactivestreams.FlowAdapters$e.a` @type ^`java.util.concurrent.Flow$Publisher` @kind object;
  #L43a80e.  goto L43a82a;
  #L43a810.  v0:= instanceof @variable v1 @type ^`java.util.concurrent.Flow$Publisher` @kind boolean;
  #L43a814.  if v0 == 0 then goto L43a81e;
  #L43a818.  v1:= (`java.util.concurrent.Flow$Publisher`) v1 @kind object;
  #L43a81c.  goto L43a82a;
  #L43a81e.  v0:= new `org.reactivestreams.FlowAdapters$a`;
  #L43a822.  call `<init>`(v0, v1) @signature `Lorg/reactivestreams/FlowAdapters$a;.<init>:(Lorg/reactivestreams/Publisher;)V` @kind direct;
  #L43a828.  v1:= v0 @kind object;
  #L43a82a.  return v1 @kind object;
}
procedure `java.util.concurrent.Flow$Subscriber` `toFlowSubscriber`(`org.reactivestreams.Subscriber` v1 @kind object) @signature `Lorg/reactivestreams/FlowAdapters;.toFlowSubscriber:(Lorg/reactivestreams/Subscriber;)Ljava/util/concurrent/Flow$Subscriber;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43a83c.  v0:= "reactiveStreamsSubscriber" @kind object;
  #L43a840.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43a846.  v0:= instanceof @variable v1 @type ^`org.reactivestreams.FlowAdapters$g` @kind boolean;
  #L43a84a.  if v0 == 0 then goto L43a858;
  #L43a84e.  v1:= (`org.reactivestreams.FlowAdapters$g`) v1 @kind object;
  #L43a852.  v1:= v1.`org.reactivestreams.FlowAdapters$g.a` @type ^`java.util.concurrent.Flow$Subscriber` @kind object;
  #L43a856.  goto L43a872;
  #L43a858.  v0:= instanceof @variable v1 @type ^`java.util.concurrent.Flow$Subscriber` @kind boolean;
  #L43a85c.  if v0 == 0 then goto L43a866;
  #L43a860.  v1:= (`java.util.concurrent.Flow$Subscriber`) v1 @kind object;
  #L43a864.  goto L43a872;
  #L43a866.  v0:= new `org.reactivestreams.FlowAdapters$c`;
  #L43a86a.  call `<init>`(v0, v1) @signature `Lorg/reactivestreams/FlowAdapters$c;.<init>:(Lorg/reactivestreams/Subscriber;)V` @kind direct;
  #L43a870.  v1:= v0 @kind object;
  #L43a872.  return v1 @kind object;
}
procedure `org.reactivestreams.Processor` `toProcessor`(`java.util.concurrent.Flow$Processor` v1 @kind object) @signature `Lorg/reactivestreams/FlowAdapters;.toProcessor:(Ljava/util/concurrent/Flow$Processor;)Lorg/reactivestreams/Processor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43a884.  v0:= "flowProcessor" @kind object;
  #L43a888.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43a88e.  v0:= instanceof @variable v1 @type ^`org.reactivestreams.FlowAdapters$b` @kind boolean;
  #L43a892.  if v0 == 0 then goto L43a8a0;
  #L43a896.  v1:= (`org.reactivestreams.FlowAdapters$b`) v1 @kind object;
  #L43a89a.  v1:= v1.`org.reactivestreams.FlowAdapters$b.a` @type ^`org.reactivestreams.Processor` @kind object;
  #L43a89e.  goto L43a8ba;
  #L43a8a0.  v0:= instanceof @variable v1 @type ^`org.reactivestreams.Processor` @kind boolean;
  #L43a8a4.  if v0 == 0 then goto L43a8ae;
  #L43a8a8.  v1:= (`org.reactivestreams.Processor`) v1 @kind object;
  #L43a8ac.  goto L43a8ba;
  #L43a8ae.  v0:= new `org.reactivestreams.FlowAdapters$f`;
  #L43a8b2.  call `<init>`(v0, v1) @signature `Lorg/reactivestreams/FlowAdapters$f;.<init>:(Ljava/util/concurrent/Flow$Processor;)V` @kind direct;
  #L43a8b8.  v1:= v0 @kind object;
  #L43a8ba.  return v1 @kind object;
}
procedure `org.reactivestreams.Publisher` `toPublisher`(`java.util.concurrent.Flow$Publisher` v1 @kind object) @signature `Lorg/reactivestreams/FlowAdapters;.toPublisher:(Ljava/util/concurrent/Flow$Publisher;)Lorg/reactivestreams/Publisher;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43a8cc.  v0:= "flowPublisher" @kind object;
  #L43a8d0.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43a8d6.  v0:= instanceof @variable v1 @type ^`org.reactivestreams.FlowAdapters$a` @kind boolean;
  #L43a8da.  if v0 == 0 then goto L43a8e8;
  #L43a8de.  v1:= (`org.reactivestreams.FlowAdapters$a`) v1 @kind object;
  #L43a8e2.  v1:= v1.`org.reactivestreams.FlowAdapters$a.a` @type ^`org.reactivestreams.Publisher` @kind object;
  #L43a8e6.  goto L43a902;
  #L43a8e8.  v0:= instanceof @variable v1 @type ^`org.reactivestreams.Publisher` @kind boolean;
  #L43a8ec.  if v0 == 0 then goto L43a8f6;
  #L43a8f0.  v1:= (`org.reactivestreams.Publisher`) v1 @kind object;
  #L43a8f4.  goto L43a902;
  #L43a8f6.  v0:= new `org.reactivestreams.FlowAdapters$e`;
  #L43a8fa.  call `<init>`(v0, v1) @signature `Lorg/reactivestreams/FlowAdapters$e;.<init>:(Ljava/util/concurrent/Flow$Publisher;)V` @kind direct;
  #L43a900.  v1:= v0 @kind object;
  #L43a902.  return v1 @kind object;
}
procedure `org.reactivestreams.Subscriber` `toSubscriber`(`java.util.concurrent.Flow$Subscriber` v1 @kind object) @signature `Lorg/reactivestreams/FlowAdapters;.toSubscriber:(Ljava/util/concurrent/Flow$Subscriber;)Lorg/reactivestreams/Subscriber;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43a914.  v0:= "flowSubscriber" @kind object;
  #L43a918.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L43a91e.  v0:= instanceof @variable v1 @type ^`org.reactivestreams.FlowAdapters$c` @kind boolean;
  #L43a922.  if v0 == 0 then goto L43a930;
  #L43a926.  v1:= (`org.reactivestreams.FlowAdapters$c`) v1 @kind object;
  #L43a92a.  v1:= v1.`org.reactivestreams.FlowAdapters$c.a` @type ^`org.reactivestreams.Subscriber` @kind object;
  #L43a92e.  goto L43a94a;
  #L43a930.  v0:= instanceof @variable v1 @type ^`org.reactivestreams.Subscriber` @kind boolean;
  #L43a934.  if v0 == 0 then goto L43a93e;
  #L43a938.  v1:= (`org.reactivestreams.Subscriber`) v1 @kind object;
  #L43a93c.  goto L43a94a;
  #L43a93e.  v0:= new `org.reactivestreams.FlowAdapters$g`;
  #L43a942.  call `<init>`(v0, v1) @signature `Lorg/reactivestreams/FlowAdapters$g;.<init>:(Ljava/util/concurrent/Flow$Subscriber;)V` @kind direct;
  #L43a948.  v1:= v0 @kind object;
  #L43a94a.  return v1 @kind object;
}
