record `org.reactivestreams.FlowAdapters$b` @kind class @AccessFlag FINAL extends `java.util.concurrent.Flow$Processor` @kind interface {
  `org.reactivestreams.Processor` `org.reactivestreams.FlowAdapters$b.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`org.reactivestreams.FlowAdapters$b` v0 @kind this, `org.reactivestreams.Processor` v1 @kind object) @signature `Lorg/reactivestreams/FlowAdapters$b;.<init>:(Lorg/reactivestreams/Processor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43a3d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43a3de.  v0.`org.reactivestreams.FlowAdapters$b.a` @type ^`org.reactivestreams.Processor` := v1 @kind object;
  #L43a3e2.  return @kind void;
}
procedure `void` `onComplete`(`org.reactivestreams.FlowAdapters$b` v1 @kind this) @signature `Lorg/reactivestreams/FlowAdapters$b;.onComplete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43a3f4.  v0:= v1.`org.reactivestreams.FlowAdapters$b.a` @type ^`org.reactivestreams.Processor` @kind object;
  #L43a3f8.  call `onComplete`(v0) @signature `Lorg/reactivestreams/Subscriber;.onComplete:()V` @kind interface;
  #L43a3fe.  return @kind void;
}
procedure `void` `onError`(`org.reactivestreams.FlowAdapters$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lorg/reactivestreams/FlowAdapters$b;.onError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43a410.  v0:= v1.`org.reactivestreams.FlowAdapters$b.a` @type ^`org.reactivestreams.Processor` @kind object;
  #L43a414.  call `onError`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L43a41a.  return @kind void;
}
procedure `void` `onNext`(`org.reactivestreams.FlowAdapters$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/reactivestreams/FlowAdapters$b;.onNext:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43a42c.  v0:= v1.`org.reactivestreams.FlowAdapters$b.a` @type ^`org.reactivestreams.Processor` @kind object;
  #L43a430.  call `onNext`(v0, v2) @signature `Lorg/reactivestreams/Subscriber;.onNext:(Ljava/lang/Object;)V` @kind interface;
  #L43a436.  return @kind void;
}
procedure `void` `onSubscribe`(`org.reactivestreams.FlowAdapters$b` v2 @kind this, `java.util.concurrent.Flow$Subscription` v3 @kind object) @signature `Lorg/reactivestreams/FlowAdapters$b;.onSubscribe:(Ljava/util/concurrent/Flow$Subscription;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43a448.  v0:= v2.`org.reactivestreams.FlowAdapters$b.a` @type ^`org.reactivestreams.Processor` @kind object;
  #L43a44c.  if v3 != 0 then goto L43a454;
  #L43a450.  v3:= 0I;
  #L43a452.  goto L43a460;
  #L43a454.  v1:= new `org.reactivestreams.FlowAdapters$h`;
  #L43a458.  call `<init>`(v1, v3) @signature `Lorg/reactivestreams/FlowAdapters$h;.<init>:(Ljava/util/concurrent/Flow$Subscription;)V` @kind direct;
  #L43a45e.  v3:= v1 @kind object;
  #L43a460.  call `onSubscribe`(v0, v3) @signature `Lorg/reactivestreams/Subscriber;.onSubscribe:(Lorg/reactivestreams/Subscription;)V` @kind interface;
  #L43a466.  return @kind void;
}
procedure `void` `subscribe`(`org.reactivestreams.FlowAdapters$b` v2 @kind this, `java.util.concurrent.Flow$Subscriber` v3 @kind object) @signature `Lorg/reactivestreams/FlowAdapters$b;.subscribe:(Ljava/util/concurrent/Flow$Subscriber;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43a478.  v0:= v2.`org.reactivestreams.FlowAdapters$b.a` @type ^`org.reactivestreams.Processor` @kind object;
  #L43a47c.  if v3 != 0 then goto L43a484;
  #L43a480.  v3:= 0I;
  #L43a482.  goto L43a490;
  #L43a484.  v1:= new `org.reactivestreams.FlowAdapters$g`;
  #L43a488.  call `<init>`(v1, v3) @signature `Lorg/reactivestreams/FlowAdapters$g;.<init>:(Ljava/util/concurrent/Flow$Subscriber;)V` @kind direct;
  #L43a48e.  v3:= v1 @kind object;
  #L43a490.  call `subscribe`(v0, v3) @signature `Lorg/reactivestreams/Publisher;.subscribe:(Lorg/reactivestreams/Subscriber;)V` @kind interface;
  #L43a496.  return @kind void;
}
