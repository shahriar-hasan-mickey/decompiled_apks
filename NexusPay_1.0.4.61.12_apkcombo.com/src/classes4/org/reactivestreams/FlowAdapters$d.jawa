record `org.reactivestreams.FlowAdapters$d` @kind class @AccessFlag FINAL extends `java.util.concurrent.Flow$Subscription` @kind interface {
  `org.reactivestreams.Subscription` `org.reactivestreams.FlowAdapters$d.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`org.reactivestreams.FlowAdapters$d` v0 @kind this, `org.reactivestreams.Subscription` v1 @kind object) @signature `Lorg/reactivestreams/FlowAdapters$d;.<init>:(Lorg/reactivestreams/Subscription;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43a548.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43a54e.  v0.`org.reactivestreams.FlowAdapters$d.a` @type ^`org.reactivestreams.Subscription` := v1 @kind object;
  #L43a552.  return @kind void;
}
procedure `void` `cancel`(`org.reactivestreams.FlowAdapters$d` v1 @kind this) @signature `Lorg/reactivestreams/FlowAdapters$d;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43a564.  v0:= v1.`org.reactivestreams.FlowAdapters$d.a` @type ^`org.reactivestreams.Subscription` @kind object;
  #L43a568.  call `cancel`(v0) @signature `Lorg/reactivestreams/Subscription;.cancel:()V` @kind interface;
  #L43a56e.  return @kind void;
}
procedure `void` `request`(`org.reactivestreams.FlowAdapters$d` v1 @kind this, `long` v2 ) @signature `Lorg/reactivestreams/FlowAdapters$d;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43a580.  v0:= v1.`org.reactivestreams.FlowAdapters$d.a` @type ^`org.reactivestreams.Subscription` @kind object;
  #L43a584.  call `request`(v0, v2) @signature `Lorg/reactivestreams/Subscription;.request:(J)V` @kind interface;
  #L43a58a.  return @kind void;
}
