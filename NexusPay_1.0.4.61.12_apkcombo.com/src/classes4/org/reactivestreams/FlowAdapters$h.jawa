record `org.reactivestreams.FlowAdapters$h` @kind class @AccessFlag FINAL extends `org.reactivestreams.Subscription` @kind interface {
  `java.util.concurrent.Flow$Subscription` `org.reactivestreams.FlowAdapters$h.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`org.reactivestreams.FlowAdapters$h` v0 @kind this, `java.util.concurrent.Flow$Subscription` v1 @kind object) @signature `Lorg/reactivestreams/FlowAdapters$h;.<init>:(Ljava/util/concurrent/Flow$Subscription;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L43a758.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43a75e.  v0.`org.reactivestreams.FlowAdapters$h.a` @type ^`java.util.concurrent.Flow$Subscription` := v1 @kind object;
  #L43a762.  return @kind void;
}
procedure `void` `cancel`(`org.reactivestreams.FlowAdapters$h` v1 @kind this) @signature `Lorg/reactivestreams/FlowAdapters$h;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43a774.  v0:= v1.`org.reactivestreams.FlowAdapters$h.a` @type ^`java.util.concurrent.Flow$Subscription` @kind object;
  #L43a778.  call `cancel`(v0) @signature `Ljava/util/concurrent/Flow$Subscription;.cancel:()V` @kind interface;
  #L43a77e.  return @kind void;
}
procedure `void` `request`(`org.reactivestreams.FlowAdapters$h` v1 @kind this, `long` v2 ) @signature `Lorg/reactivestreams/FlowAdapters$h;.request:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43a790.  v0:= v1.`org.reactivestreams.FlowAdapters$h.a` @type ^`java.util.concurrent.Flow$Subscription` @kind object;
  #L43a794.  call `request`(v0, v2) @signature `Ljava/util/concurrent/Flow$Subscription;.request:(J)V` @kind interface;
  #L43a79a.  return @kind void;
}
