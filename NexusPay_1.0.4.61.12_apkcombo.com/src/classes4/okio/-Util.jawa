record `okio.-Util` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `int` `and`(`byte` v0 , `int` v1 ) @signature `Lokio/-Util;.and:(BI)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L1c9324.  v0:= v0 ^& v1 @kind int;
  #L1c9326.  return v0;
}
procedure `long` `and`(`byte` v2 , `long` v3 ) @signature `Lokio/-Util;.and:(BJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1c9758.  v0:= (`long`) v2 @kind i2l;
  #L1c975a.  v2:= v0 ^& v3 @kind long;
  #L1c975e.  return v2 @kind wide;
}
procedure `long` `and`(`int` v2 , `long` v3 ) @signature `Lokio/-Util;.and:(IJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1c9770.  v0:= (`long`) v2 @kind i2l;
  #L1c9772.  v2:= v0 ^& v3 @kind long;
  #L1c9776.  return v2 @kind wide;
}
procedure `boolean` `arrayRangeEquals`(`byte`[] v4 @kind object, `int` v5 , `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lokio/-Util;.arrayRangeEquals:([BI[BII)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c92c0.  v0:= "a" @kind object;
  #L1c92c4.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c92ca.  v0:= "b" @kind object;
  #L1c92ce.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c92d4.  v0:= 0I;
  #L1c92d6.  v1:= 0I;
  #L1c92d8.  if v1 >= v8 then goto L1c92f8;
  #L1c92dc.  v2:= v1 + v5 @kind int;
  #L1c92e0.  v2:= v4[v2] @kind byte;
  #L1c92e4.  v3:= v1 + v7 @kind int;
  #L1c92e8.  v3:= v6[v3] @kind byte;
  #L1c92ec.  if v2 == v3 then goto L1c92f2;
  #L1c92f0.  return v0;
  #L1c92f2.  v1:= v1 + 1;
  #L1c92f6.  goto L1c92d8;
  #L1c92f8.  v4:= 1I;
  #L1c92fa.  return v4;
}
procedure `void` `checkOffsetAndCount`(`long` v5 , `long` v7 , `long` v9 ) @signature `Lokio/-Util;.checkOffsetAndCount:(JJJ)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c989c.  v0:= v7 ^| v9 @kind long;
  #L1c98a0.  v2:= 0L;
  #L1c98a4.  v4:= lcmp(v0, v2);
  #L1c98a8.  if v4 < 0 then goto L1c98c2;
  #L1c98ac.  v0:= lcmp(v7, v5);
  #L1c98b0.  if v0 > 0 then goto L1c98c2;
  #L1c98b4.  v0:= v5 - v7 @kind long;
  #L1c98b8.  v2:= lcmp(v0, v9);
  #L1c98bc.  if v2 < 0 then goto L1c98c2;
  #L1c98c0.  return @kind void;
  #L1c98c2.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1c98c6.  v1:= new `java.lang.StringBuilder`;
  #L1c98ca.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c98d0.  v2:= "size=" @kind object;
  #L1c98d4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c98da.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c98e0.  v5:= " offset=" @kind object;
  #L1c98e4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c98ea.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c98f0.  v5:= " byteCount=" @kind object;
  #L1c98f4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c98fa.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c9900.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c9906.  v5:= temp @kind object;
  #L1c9908.  call `<init>`(v0, v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c990e.  throw v0;
}
procedure `int` `leftRotate`(`int` v1 , `int` v2 ) @signature `Lokio/-Util;.leftRotate:(II)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1c9338.  v0:= v1 ^< v2 @kind int;
  #L1c933c.  v2:= v2 - 32;
  #L1c9340.  v1:= v1 ^>> v2 @kind int;
  #L1c9342.  v1:= v1 ^| v0 @kind int;
  #L1c9344.  return v1;
}
procedure `long` `minOf`(`int` v2 , `long` v3 ) @signature `Lokio/-Util;.minOf:(IJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1c9788.  v0:= (`long`) v2 @kind i2l;
  #L1c978a.  call temp:= `min`(v0, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1c9790.  v2:= temp @kind wide;
  #L1c9792.  return v2 @kind wide;
}
procedure `long` `minOf`(`long` v2 , `int` v4 ) @signature `Lokio/-Util;.minOf:(JI)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1c97a4.  v0:= (`long`) v4 @kind i2l;
  #L1c97a6.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1c97ac.  v2:= temp @kind wide;
  #L1c97ae.  return v2 @kind wide;
}
procedure `int` `reverseBytes`(`int` v2 ) @signature `Lokio/-Util;.reverseBytes:(I)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1c9358.  v0:= -16777216I;
  #L1c935c.  v0:= v0 ^& v2 @kind int;
  #L1c935e.  v0:= v0 ^>> 24;
  #L1c9362.  v1:= 16711680I;
  #L1c9366.  v1:= v1 ^& v2 @kind int;
  #L1c9368.  v1:= v1 ^>> 8;
  #L1c936c.  v0:= v0 ^| v1 @kind int;
  #L1c936e.  v1:= 65280I;
  #L1c9374.  v1:= v1 ^& v2 @kind int;
  #L1c9376.  v1:= v1 ^< 8;
  #L1c937a.  v0:= v0 ^| v1 @kind int;
  #L1c937c.  v2:= v2 ^& 255;
  #L1c9380.  v2:= v2 ^< 24;
  #L1c9384.  v2:= v2 ^| v0 @kind int;
  #L1c9386.  return v2;
}
procedure `long` `reverseBytes`(`long` v8 ) @signature `Lokio/-Util;.reverseBytes:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1c97c0.  v0:= -72057594037927936L;
  #L1c97c4.  v0:= v0 ^& v8 @kind long;
  #L1c97c6.  v2:= 56I;
  #L1c97ca.  v0:= v0 ^>> v2 @kind long;
  #L1c97cc.  v3:= 71776119061217280L;
  #L1c97d0.  v3:= v3 ^& v8 @kind long;
  #L1c97d2.  v5:= 40I;
  #L1c97d6.  v3:= v3 ^>> v5 @kind long;
  #L1c97d8.  v0:= v0 ^| v3 @kind long;
  #L1c97da.  v3:= 280375465082880L;
  #L1c97e4.  v3:= v3 ^& v8 @kind long;
  #L1c97e6.  v6:= 24I;
  #L1c97ea.  v3:= v3 ^>> v6 @kind long;
  #L1c97ec.  v0:= v0 ^| v3 @kind long;
  #L1c97ee.  v3:= 1095216660480L;
  #L1c97f8.  v3:= v3 ^& v8 @kind long;
  #L1c97fa.  v7:= 8I;
  #L1c97fe.  v3:= v3 ^>> v7 @kind long;
  #L1c9800.  v0:= v0 ^| v3 @kind long;
  #L1c9802.  v3:= 4278190080L;
  #L1c980c.  v3:= v3 ^& v8 @kind long;
  #L1c980e.  v3:= v3 ^< v7 @kind long;
  #L1c9810.  v0:= v0 ^| v3 @kind long;
  #L1c9812.  v3:= 16711680L;
  #L1c9818.  v3:= v3 ^& v8 @kind long;
  #L1c981a.  v3:= v3 ^< v6 @kind long;
  #L1c981c.  v0:= v0 ^| v3 @kind long;
  #L1c981e.  v3:= 65280L;
  #L1c9824.  v3:= v3 ^& v8 @kind long;
  #L1c9826.  v3:= v3 ^< v5 @kind long;
  #L1c9828.  v0:= v0 ^| v3 @kind long;
  #L1c982a.  v3:= 255L;
  #L1c982e.  v8:= v8 ^& v3 @kind long;
  #L1c9830.  v8:= v8 ^< v2 @kind long;
  #L1c9832.  v8:= v8 ^| v0 @kind long;
  #L1c9834.  return v8 @kind wide;
}
procedure `short` `reverseBytes`(`short` v1 ) @signature `Lokio/-Util;.reverseBytes:(S)S` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1c9868.  v0:= 65535I;
  #L1c986e.  v1:= v1 ^& v0 @kind int;
  #L1c9870.  v0:= 65280I;
  #L1c9876.  v0:= v0 ^& v1 @kind int;
  #L1c9878.  v0:= v0 ^>> 8;
  #L1c987c.  v1:= v1 ^& 255;
  #L1c9880.  v1:= v1 ^< 8;
  #L1c9884.  v1:= v1 ^| v0 @kind int;
  #L1c9886.  v1:= (`short`) v1 @kind i2s;
  #L1c9888.  return v1;
}
procedure `long` `rightRotate`(`long` v2 , `int` v4 ) @signature `Lokio/-Util;.rightRotate:(JI)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1c9848.  v0:= v2 ^>> v4 @kind long;
  #L1c984c.  v4:= v4 - 64;
  #L1c9850.  v2:= v2 ^< v4 @kind long;
  #L1c9852.  v2:= v2 ^| v0 @kind long;
  #L1c9854.  return v2 @kind wide;
}
procedure `int` `shl`(`byte` v0 , `int` v1 ) @signature `Lokio/-Util;.shl:(BI)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L1c9398.  v0:= v0 ^< v1 @kind int;
  #L1c939a.  return v0;
}
procedure `int` `shr`(`byte` v0 , `int` v1 ) @signature `Lokio/-Util;.shr:(BI)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L1c93ac.  v0:= v0 ^> v1 @kind int;
  #L1c93ae.  return v0;
}
procedure `java.lang.String` `toHexString`(`byte` v3 ) @signature `Lokio/-Util;.toHexString:(B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1c93c0.  v0:= 2I;
  #L1c93c2.  v0:= new `char`[v0];
  #L1c93c6.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c93cc.  v1:= temp @kind object;
  #L1c93ce.  v2:= v3 ^> 4;
  #L1c93d2.  v2:= v2 ^& 15;
  #L1c93d6.  v1:= v1[v2] @kind char;
  #L1c93da.  v2:= 0I;
  #L1c93dc.  v0[v2]:= v1 @kind char;
  #L1c93e0.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c93e6.  v1:= temp @kind object;
  #L1c93e8.  v3:= v3 ^& 15;
  #L1c93ec.  v3:= v1[v3] @kind char;
  #L1c93f0.  v1:= 1I;
  #L1c93f2.  v0[v1]:= v3 @kind char;
  #L1c93f6.  v3:= new `java.lang.String`;
  #L1c93fa.  call `<init>`(v3, v0) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L1c9400.  return v3 @kind object;
}
procedure `java.lang.String` `toHexString`(`int` v6 ) @signature `Lokio/-Util;.toHexString:(I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1c9414.  if v6 != 0 then goto L1c941e;
  #L1c9418.  v6:= "0" @kind object;
  #L1c941c.  return v6 @kind object;
  #L1c941e.  v0:= 8I;
  #L1c9422.  v1:= new `char`[v0];
  #L1c9426.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c942c.  v2:= temp @kind object;
  #L1c942e.  v3:= v6 ^> 28;
  #L1c9432.  v3:= v3 ^& 15;
  #L1c9436.  v2:= v2[v3] @kind char;
  #L1c943a.  v3:= 0I;
  #L1c943c.  v1[v3]:= v2 @kind char;
  #L1c9440.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c9446.  v2:= temp @kind object;
  #L1c9448.  v4:= v6 ^> 24;
  #L1c944c.  v4:= v4 ^& 15;
  #L1c9450.  v2:= v2[v4] @kind char;
  #L1c9454.  v4:= 1I;
  #L1c9456.  v1[v4]:= v2 @kind char;
  #L1c945a.  v2:= 2I;
  #L1c945c.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c9462.  v4:= temp @kind object;
  #L1c9464.  v5:= v6 ^> 20;
  #L1c9468.  v5:= v5 ^& 15;
  #L1c946c.  v4:= v4[v5] @kind char;
  #L1c9470.  v1[v2]:= v4 @kind char;
  #L1c9474.  v2:= 3I;
  #L1c9476.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c947c.  v4:= temp @kind object;
  #L1c947e.  v5:= v6 ^> 16;
  #L1c9482.  v5:= v5 ^& 15;
  #L1c9486.  v4:= v4[v5] @kind char;
  #L1c948a.  v1[v2]:= v4 @kind char;
  #L1c948e.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c9494.  v2:= temp @kind object;
  #L1c9496.  v4:= v6 ^> 12;
  #L1c949a.  v4:= v4 ^& 15;
  #L1c949e.  v2:= v2[v4] @kind char;
  #L1c94a2.  v4:= 4I;
  #L1c94a4.  v1[v4]:= v2 @kind char;
  #L1c94a8.  v2:= 5I;
  #L1c94aa.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c94b0.  v4:= temp @kind object;
  #L1c94b2.  v5:= v6 ^> 8;
  #L1c94b6.  v5:= v5 ^& 15;
  #L1c94ba.  v4:= v4[v5] @kind char;
  #L1c94be.  v1[v2]:= v4 @kind char;
  #L1c94c2.  v2:= 6I;
  #L1c94c4.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c94ca.  v4:= temp @kind object;
  #L1c94cc.  v5:= v6 ^> 4;
  #L1c94d0.  v5:= v5 ^& 15;
  #L1c94d4.  v4:= v4[v5] @kind char;
  #L1c94d8.  v1[v2]:= v4 @kind char;
  #L1c94dc.  v2:= 7I;
  #L1c94de.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c94e4.  v4:= temp @kind object;
  #L1c94e6.  v6:= v6 ^& 15;
  #L1c94ea.  v6:= v4[v6] @kind char;
  #L1c94ee.  v1[v2]:= v6 @kind char;
  #L1c94f2.  if v3 >= v0 then goto L1c950a;
  #L1c94f6.  v6:= v1[v3] @kind char;
  #L1c94fa.  v2:= 48I;
  #L1c94fe.  if v6 == v2 then goto L1c9504;
  #L1c9502.  goto L1c950a;
  #L1c9504.  v3:= v3 + 1;
  #L1c9508.  goto L1c94f2;
  #L1c950a.  v6:= v3 - 8;
  #L1c950e.  v0:= new `java.lang.String`;
  #L1c9512.  call `<init>`(v0, v1, v3, v6) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L1c9518.  return v0 @kind object;
}
procedure `java.lang.String` `toHexString`(`long` v12 ) @signature `Lokio/-Util;.toHexString:(J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1c952c.  v0:= 0L;
  #L1c9530.  v2:= lcmp(v12, v0);
  #L1c9534.  if v2 != 0 then goto L1c953e;
  #L1c9538.  v12:= "0" @kind object;
  #L1c953c.  return v12 @kind object;
  #L1c953e.  v0:= 16I;
  #L1c9542.  v1:= new `char`[v0];
  #L1c9546.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c954c.  v2:= temp @kind object;
  #L1c954e.  v3:= 60I;
  #L1c9552.  v3:= v12 ^> v3 @kind long;
  #L1c9556.  v5:= 15L;
  #L1c955a.  v3:= v3 ^& v5 @kind long;
  #L1c955c.  v4:= (`int`) v3 @kind l2i;
  #L1c955e.  v2:= v2[v4] @kind char;
  #L1c9562.  v3:= 0I;
  #L1c9564.  v1[v3]:= v2 @kind char;
  #L1c9568.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c956e.  v2:= temp @kind object;
  #L1c9570.  v4:= 56I;
  #L1c9574.  v7:= v12 ^> v4 @kind long;
  #L1c9578.  v7:= v7 ^& v5 @kind long;
  #L1c957a.  v4:= (`int`) v7 @kind l2i;
  #L1c957c.  v2:= v2[v4] @kind char;
  #L1c9580.  v4:= 1I;
  #L1c9582.  v1[v4]:= v2 @kind char;
  #L1c9586.  v2:= 2I;
  #L1c9588.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c958e.  v4:= temp @kind object;
  #L1c9590.  v7:= 52I;
  #L1c9594.  v7:= v12 ^> v7 @kind long;
  #L1c9598.  v7:= v7 ^& v5 @kind long;
  #L1c959a.  v8:= (`int`) v7 @kind l2i;
  #L1c959c.  v4:= v4[v8] @kind char;
  #L1c95a0.  v1[v2]:= v4 @kind char;
  #L1c95a4.  v2:= 3I;
  #L1c95a6.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c95ac.  v4:= temp @kind object;
  #L1c95ae.  v7:= 48I;
  #L1c95b2.  v8:= v12 ^> v7 @kind long;
  #L1c95b6.  v8:= v8 ^& v5 @kind long;
  #L1c95b8.  v9:= (`int`) v8 @kind l2i;
  #L1c95ba.  v4:= v4[v9] @kind char;
  #L1c95be.  v1[v2]:= v4 @kind char;
  #L1c95c2.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c95c8.  v2:= temp @kind object;
  #L1c95ca.  v4:= 44I;
  #L1c95ce.  v8:= v12 ^> v4 @kind long;
  #L1c95d2.  v8:= v8 ^& v5 @kind long;
  #L1c95d4.  v4:= (`int`) v8 @kind l2i;
  #L1c95d6.  v2:= v2[v4] @kind char;
  #L1c95da.  v4:= 4I;
  #L1c95dc.  v1[v4]:= v2 @kind char;
  #L1c95e0.  v2:= 5I;
  #L1c95e2.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c95e8.  v8:= temp @kind object;
  #L1c95ea.  v9:= 40I;
  #L1c95ee.  v9:= v12 ^> v9 @kind long;
  #L1c95f2.  v9:= v9 ^& v5 @kind long;
  #L1c95f4.  v10:= (`int`) v9 @kind l2i;
  #L1c95f6.  v8:= v8[v10] @kind char;
  #L1c95fa.  v1[v2]:= v8 @kind char;
  #L1c95fe.  v2:= 6I;
  #L1c9600.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c9606.  v8:= temp @kind object;
  #L1c9608.  v9:= 36I;
  #L1c960c.  v9:= v12 ^> v9 @kind long;
  #L1c9610.  v9:= v9 ^& v5 @kind long;
  #L1c9612.  v10:= (`int`) v9 @kind l2i;
  #L1c9614.  v8:= v8[v10] @kind char;
  #L1c9618.  v1[v2]:= v8 @kind char;
  #L1c961c.  v2:= 7I;
  #L1c961e.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c9624.  v8:= temp @kind object;
  #L1c9626.  v9:= 32I;
  #L1c962a.  v9:= v12 ^> v9 @kind long;
  #L1c962e.  v9:= v9 ^& v5 @kind long;
  #L1c9630.  v10:= (`int`) v9 @kind l2i;
  #L1c9632.  v8:= v8[v10] @kind char;
  #L1c9636.  v1[v2]:= v8 @kind char;
  #L1c963a.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c9640.  v2:= temp @kind object;
  #L1c9642.  v8:= 28I;
  #L1c9646.  v8:= v12 ^> v8 @kind long;
  #L1c964a.  v8:= v8 ^& v5 @kind long;
  #L1c964c.  v9:= (`int`) v8 @kind l2i;
  #L1c964e.  v2:= v2[v9] @kind char;
  #L1c9652.  v8:= 8I;
  #L1c9656.  v1[v8]:= v2 @kind char;
  #L1c965a.  v2:= 9I;
  #L1c965e.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c9664.  v9:= temp @kind object;
  #L1c9666.  v10:= 24I;
  #L1c966a.  v10:= v12 ^> v10 @kind long;
  #L1c966e.  v10:= v10 ^& v5 @kind long;
  #L1c9670.  v11:= (`int`) v10 @kind l2i;
  #L1c9672.  v9:= v9[v11] @kind char;
  #L1c9676.  v1[v2]:= v9 @kind char;
  #L1c967a.  v2:= 10I;
  #L1c967e.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c9684.  v9:= temp @kind object;
  #L1c9686.  v10:= 20I;
  #L1c968a.  v10:= v12 ^> v10 @kind long;
  #L1c968e.  v10:= v10 ^& v5 @kind long;
  #L1c9690.  v11:= (`int`) v10 @kind l2i;
  #L1c9692.  v9:= v9[v11] @kind char;
  #L1c9696.  v1[v2]:= v9 @kind char;
  #L1c969a.  v2:= 11I;
  #L1c969e.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c96a4.  v9:= temp @kind object;
  #L1c96a6.  v10:= v12 ^> v0 @kind long;
  #L1c96aa.  v10:= v10 ^& v5 @kind long;
  #L1c96ac.  v11:= (`int`) v10 @kind l2i;
  #L1c96ae.  v9:= v9[v11] @kind char;
  #L1c96b2.  v1[v2]:= v9 @kind char;
  #L1c96b6.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c96bc.  v2:= temp @kind object;
  #L1c96be.  v9:= 12I;
  #L1c96c2.  v10:= v12 ^> v9 @kind long;
  #L1c96c6.  v10:= v10 ^& v5 @kind long;
  #L1c96c8.  v11:= (`int`) v10 @kind l2i;
  #L1c96ca.  v2:= v2[v11] @kind char;
  #L1c96ce.  v1[v9]:= v2 @kind char;
  #L1c96d2.  v2:= 13I;
  #L1c96d6.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c96dc.  v9:= temp @kind object;
  #L1c96de.  v10:= v12 ^> v8 @kind long;
  #L1c96e2.  v10:= v10 ^& v5 @kind long;
  #L1c96e4.  v8:= (`int`) v10 @kind l2i;
  #L1c96e6.  v8:= v9[v8] @kind char;
  #L1c96ea.  v1[v2]:= v8 @kind char;
  #L1c96ee.  v2:= 14I;
  #L1c96f2.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c96f8.  v8:= temp @kind object;
  #L1c96fa.  v9:= v12 ^> v4 @kind long;
  #L1c96fe.  v9:= v9 ^& v5 @kind long;
  #L1c9700.  v4:= (`int`) v9 @kind l2i;
  #L1c9702.  v4:= v8[v4] @kind char;
  #L1c9706.  v1[v2]:= v4 @kind char;
  #L1c970a.  v2:= 15I;
  #L1c970e.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1c9714.  v4:= temp @kind object;
  #L1c9716.  v12:= v12 ^& v5 @kind long;
  #L1c9718.  v13:= (`int`) v12 @kind l2i;
  #L1c971a.  v12:= v4[v13] @kind char;
  #L1c971e.  v1[v2]:= v12 @kind char;
  #L1c9722.  if v3 >= v0 then goto L1c9736;
  #L1c9726.  v12:= v1[v3] @kind char;
  #L1c972a.  if v12 == v7 then goto L1c9730;
  #L1c972e.  goto L1c9736;
  #L1c9730.  v3:= v3 + 1;
  #L1c9734.  goto L1c9722;
  #L1c9736.  v12:= v3 - 16;
  #L1c973a.  v13:= new `java.lang.String`;
  #L1c973e.  call `<init>`(v13, v1, v3, v12) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L1c9744.  return v13 @kind object;
}
procedure `byte` `xor`(`byte` v0 , `byte` v1 ) @signature `Lokio/-Util;.xor:(BB)B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L1c930c.  v0:= v0 ^~ v1 @kind int;
  #L1c930e.  v0:= (`byte`) v0 @kind i2b;
  #L1c9310.  return v0;
}
