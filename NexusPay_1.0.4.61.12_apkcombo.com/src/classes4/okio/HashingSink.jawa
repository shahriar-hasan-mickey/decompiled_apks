record `okio.HashingSink` @kind class @AccessFlag PUBLIC_FINAL extends `okio.ForwardingSink` @kind class, `okio.Sink` @kind interface {
  `java.security.MessageDigest` `okio.HashingSink.a` @AccessFlag PRIVATE_FINAL;
  `javax.crypto.Mac` `okio.HashingSink.b` @AccessFlag PRIVATE_FINAL;
}
global `okio.HashingSink$Companion` `@@okio.HashingSink.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/HashingSink;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1d1694.  v0:= new `okio.HashingSink$Companion`;
  #L1d1698.  v1:= 0I;
  #L1d169a.  call `<init>`(v0, v1) @signature `Lokio/HashingSink$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1d16a0.  `@@okio.HashingSink.Companion` @type ^`okio.HashingSink$Companion` := v0 @kind object;
  #L1d16a4.  return @kind void;
}
procedure `void` `<init>`(`okio.HashingSink` v1 @kind this, `okio.Sink` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokio/HashingSink;.<init>:(Lokio/Sink;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d16b8.  v0:= "sink" @kind object;
  #L1d16bc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d16c2.  v0:= "algorithm" @kind object;
  #L1d16c6.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d16cc.  call temp:= `getInstance`(v3) @signature `Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;` @kind static;
  #L1d16d2.  v3:= temp @kind object;
  #L1d16d4.  v0:= "MessageDigest.getInstance(algorithm)" @kind object;
  #L1d16d8.  call `checkNotNullExpressionValue`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d16de.  call `<init>`(v1, v2, v3) @signature `Lokio/HashingSink;.<init>:(Lokio/Sink;Ljava/security/MessageDigest;)V` @kind direct;
  #L1d16e4.  return @kind void;
}
procedure `void` `<init>`(`okio.HashingSink` v1 @kind this, `okio.Sink` v2 @kind object, `java.security.MessageDigest` v3 @kind object) @signature `Lokio/HashingSink;.<init>:(Lokio/Sink;Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d16f8.  v0:= "sink" @kind object;
  #L1d16fc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d1702.  v0:= "digest" @kind object;
  #L1d1706.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d170c.  call `<init>`(v1, v2) @signature `Lokio/ForwardingSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L1d1712.  v1.`okio.HashingSink.a` @type ^`java.security.MessageDigest` := v3 @kind object;
  #L1d1716.  v2:= 0I;
  #L1d1718.  v1.`okio.HashingSink.b` @type ^`javax.crypto.Mac` := v2 @kind object;
  #L1d171c.  return @kind void;
}
procedure `void` `<init>`(`okio.HashingSink` v1 @kind this, `okio.Sink` v2 @kind object, `javax.crypto.Mac` v3 @kind object) @signature `Lokio/HashingSink;.<init>:(Lokio/Sink;Ljavax/crypto/Mac;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d1730.  v0:= "sink" @kind object;
  #L1d1734.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d173a.  v0:= "mac" @kind object;
  #L1d173e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d1744.  call `<init>`(v1, v2) @signature `Lokio/ForwardingSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L1d174a.  v1.`okio.HashingSink.b` @type ^`javax.crypto.Mac` := v3 @kind object;
  #L1d174e.  v2:= 0I;
  #L1d1750.  v1.`okio.HashingSink.a` @type ^`java.security.MessageDigest` := v2 @kind object;
  #L1d1754.  return @kind void;
}
procedure `void` `<init>`(`okio.HashingSink` v2 @kind this, `okio.Sink` v3 @kind object, `okio.ByteString` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lokio/HashingSink;.<init>:(Lokio/Sink;Lokio/ByteString;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1d1768.  v0:= "sink" @kind object;
  #L1d176c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d1772.  v0:= "key" @kind object;
  #L1d1776.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d177c.  v0:= "algorithm" @kind object;
  #L1d1780.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d1786.  call temp:= `getInstance`(v5) @signature `Ljavax/crypto/Mac;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Mac;` @kind static;
  #L1d178c.  v0:= temp @kind object;
  #L1d178e.  v1:= new `javax.crypto.spec.SecretKeySpec`;
  #L1d1792.  call temp:= `toByteArray`(v4) @signature `Lokio/ByteString;.toByteArray:()[B` @kind virtual;
  #L1d1798.  v4:= temp @kind object;
  #L1d179a.  call `<init>`(v1, v4, v5) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L1d17a0.  call `init`(v0, v1) @signature `Ljavax/crypto/Mac;.init:(Ljava/security/Key;)V` @kind virtual;
  #L1d17a6.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d17aa.  v4:= "try {\n      Mac.getInstaâ€¦rgumentException(e)\n    }" @kind object;
  #L1d17ae.  call `checkNotNullExpressionValue`(v0, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d17b4.  call `<init>`(v2, v3, v0) @signature `Lokio/HashingSink;.<init>:(Lokio/Sink;Ljavax/crypto/Mac;)V` @kind direct;
  #L1d17ba.  return @kind void;
  #L1d17bc.  v3:= Exception @type ^`java.security.InvalidKeyException` @kind object;
  #L1d17be.  v4:= new `java.lang.IllegalArgumentException`;
  #L1d17c2.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1d17c8.  throw v4;
  catch `java.security.InvalidKeyException` @[L1d1786..L1d17aa] goto L1d17bc;
}
procedure `okio.HashingSink` `hmacSha1`(`okio.Sink` v1 @kind object, `okio.ByteString` v2 @kind object) @signature `Lokio/HashingSink;.hmacSha1:(Lokio/Sink;Lokio/ByteString;)Lokio/HashingSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1d15b4.  v0:= `@@okio.HashingSink.Companion` @type ^`okio.HashingSink$Companion` @kind object;
  #L1d15b8.  call temp:= `hmacSha1`(v0, v1, v2) @signature `Lokio/HashingSink$Companion;.hmacSha1:(Lokio/Sink;Lokio/ByteString;)Lokio/HashingSink;` @kind virtual;
  #L1d15be.  v1:= temp @kind object;
  #L1d15c0.  return v1 @kind object;
}
procedure `okio.HashingSink` `hmacSha256`(`okio.Sink` v1 @kind object, `okio.ByteString` v2 @kind object) @signature `Lokio/HashingSink;.hmacSha256:(Lokio/Sink;Lokio/ByteString;)Lokio/HashingSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1d15d4.  v0:= `@@okio.HashingSink.Companion` @type ^`okio.HashingSink$Companion` @kind object;
  #L1d15d8.  call temp:= `hmacSha256`(v0, v1, v2) @signature `Lokio/HashingSink$Companion;.hmacSha256:(Lokio/Sink;Lokio/ByteString;)Lokio/HashingSink;` @kind virtual;
  #L1d15de.  v1:= temp @kind object;
  #L1d15e0.  return v1 @kind object;
}
procedure `okio.HashingSink` `hmacSha512`(`okio.Sink` v1 @kind object, `okio.ByteString` v2 @kind object) @signature `Lokio/HashingSink;.hmacSha512:(Lokio/Sink;Lokio/ByteString;)Lokio/HashingSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1d15f4.  v0:= `@@okio.HashingSink.Companion` @type ^`okio.HashingSink$Companion` @kind object;
  #L1d15f8.  call temp:= `hmacSha512`(v0, v1, v2) @signature `Lokio/HashingSink$Companion;.hmacSha512:(Lokio/Sink;Lokio/ByteString;)Lokio/HashingSink;` @kind virtual;
  #L1d15fe.  v1:= temp @kind object;
  #L1d1600.  return v1 @kind object;
}
procedure `okio.HashingSink` `md5`(`okio.Sink` v1 @kind object) @signature `Lokio/HashingSink;.md5:(Lokio/Sink;)Lokio/HashingSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1d1614.  v0:= `@@okio.HashingSink.Companion` @type ^`okio.HashingSink$Companion` @kind object;
  #L1d1618.  call temp:= `md5`(v0, v1) @signature `Lokio/HashingSink$Companion;.md5:(Lokio/Sink;)Lokio/HashingSink;` @kind virtual;
  #L1d161e.  v1:= temp @kind object;
  #L1d1620.  return v1 @kind object;
}
procedure `okio.HashingSink` `sha1`(`okio.Sink` v1 @kind object) @signature `Lokio/HashingSink;.sha1:(Lokio/Sink;)Lokio/HashingSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1d1634.  v0:= `@@okio.HashingSink.Companion` @type ^`okio.HashingSink$Companion` @kind object;
  #L1d1638.  call temp:= `sha1`(v0, v1) @signature `Lokio/HashingSink$Companion;.sha1:(Lokio/Sink;)Lokio/HashingSink;` @kind virtual;
  #L1d163e.  v1:= temp @kind object;
  #L1d1640.  return v1 @kind object;
}
procedure `okio.HashingSink` `sha256`(`okio.Sink` v1 @kind object) @signature `Lokio/HashingSink;.sha256:(Lokio/Sink;)Lokio/HashingSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1d1654.  v0:= `@@okio.HashingSink.Companion` @type ^`okio.HashingSink$Companion` @kind object;
  #L1d1658.  call temp:= `sha256`(v0, v1) @signature `Lokio/HashingSink$Companion;.sha256:(Lokio/Sink;)Lokio/HashingSink;` @kind virtual;
  #L1d165e.  v1:= temp @kind object;
  #L1d1660.  return v1 @kind object;
}
procedure `okio.HashingSink` `sha512`(`okio.Sink` v1 @kind object) @signature `Lokio/HashingSink;.sha512:(Lokio/Sink;)Lokio/HashingSink;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1d1674.  v0:= `@@okio.HashingSink.Companion` @type ^`okio.HashingSink$Companion` @kind object;
  #L1d1678.  call temp:= `sha512`(v0, v1) @signature `Lokio/HashingSink$Companion;.sha512:(Lokio/Sink;)Lokio/HashingSink;` @kind virtual;
  #L1d167e.  v1:= temp @kind object;
  #L1d1680.  return v1 @kind object;
}
procedure `okio.ByteString` `-deprecated_hash`(`okio.HashingSink` v1 @kind this) @signature `Lokio/HashingSink;.-deprecated_hash:()Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1d154c.  call temp:= `hash`(v1) @signature `Lokio/HashingSink;.hash:()Lokio/ByteString;` @kind virtual;
  #L1d1552.  v0:= temp @kind object;
  #L1d1554.  return v0 @kind object;
}
procedure `okio.ByteString` `hash`(`okio.HashingSink` v3 @kind this) @signature `Lokio/HashingSink;.hash:()Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1d1568.  v0:= v3.`okio.HashingSink.a` @type ^`java.security.MessageDigest` @kind object;
  #L1d156c.  if v0 == 0 then goto L1d157a;
  #L1d1570.  call temp:= `digest`(v0) @signature `Ljava/security/MessageDigest;.digest:()[B` @kind virtual;
  #L1d1576.  v0:= temp @kind object;
  #L1d1578.  goto L1d158c;
  #L1d157a.  v0:= v3.`okio.HashingSink.b` @type ^`javax.crypto.Mac` @kind object;
  #L1d157e.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1d1584.  call temp:= `doFinal`(v0) @signature `Ljavax/crypto/Mac;.doFinal:()[B` @kind virtual;
  #L1d158a.  v0:= temp @kind object;
  #L1d158c.  v1:= new `okio.ByteString`;
  #L1d1590.  v2:= "result" @kind object;
  #L1d1594.  call `checkNotNullExpressionValue`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d159a.  call `<init>`(v1, v0) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L1d15a0.  return v1 @kind object;
}
procedure `void` `write`(`okio.HashingSink` v7 @kind this, `okio.Buffer` v8 @kind object, `long` v9 ) @signature `Lokio/HashingSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1d17ec.  v0:= "source" @kind object;
  #L1d17f0.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d17f6.  call temp:= `size`(v8) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d17fc.  v1:= temp @kind wide;
  #L1d17fe.  v3:= 0L;
  #L1d1802.  v5:= v9 @kind wide;
  #L1d1804.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Lokio/-Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L1d180a.  v0:= v8.`okio.Buffer.head` @type ^`okio.Segment` @kind object;
  #L1d180e.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1d1814.  v1:= 0L;
  #L1d1818.  v3:= lcmp(v1, v9);
  #L1d181c.  if v3 >= 0 then goto L1d187a;
  #L1d1820.  v3:= v9 - v1 @kind long;
  #L1d1824.  v5:= v0.`okio.Segment.limit` @type ^`int`;
  #L1d1828.  v6:= v0.`okio.Segment.pos` @type ^`int`;
  #L1d182c.  v5:= v5 - v6 @kind int;
  #L1d182e.  v5:= (`long`) v5 @kind i2l;
  #L1d1830.  call temp:= `min`(v3, v5) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1d1836.  v3:= temp @kind wide;
  #L1d1838.  v4:= (`int`) v3 @kind l2i;
  #L1d183a.  v3:= v7.`okio.HashingSink.a` @type ^`java.security.MessageDigest` @kind object;
  #L1d183e.  if v3 == 0 then goto L1d1852;
  #L1d1842.  v5:= v0.`okio.Segment.data` @type ^`byte`[] @kind object;
  #L1d1846.  v6:= v0.`okio.Segment.pos` @type ^`int`;
  #L1d184a.  call `update`(v3, v5, v6, v4) @signature `Ljava/security/MessageDigest;.update:([BII)V` @kind virtual;
  #L1d1850.  goto L1d186a;
  #L1d1852.  v3:= v7.`okio.HashingSink.b` @type ^`javax.crypto.Mac` @kind object;
  #L1d1856.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1d185c.  v5:= v0.`okio.Segment.data` @type ^`byte`[] @kind object;
  #L1d1860.  v6:= v0.`okio.Segment.pos` @type ^`int`;
  #L1d1864.  call `update`(v3, v5, v6, v4) @signature `Ljavax/crypto/Mac;.update:([BII)V` @kind virtual;
  #L1d186a.  v3:= (`long`) v4 @kind i2l;
  #L1d186c.  v1:= v1 + v3 @kind long;
  #L1d186e.  v0:= v0.`okio.Segment.next` @type ^`okio.Segment` @kind object;
  #L1d1872.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1d1878.  goto L1d1818;
  #L1d187a.  call `write`(v7, v8, v9) @signature `Lokio/ForwardingSink;.write:(Lokio/Buffer;J)V` @kind super;
  #L1d1880.  return @kind void;
}
