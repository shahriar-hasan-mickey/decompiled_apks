record `okio.ForwardingSink` @kind class @AccessFlag PUBLIC_ABSTRACT extends `okio.Sink` @kind interface {
  `okio.Sink` `okio.ForwardingSink.delegate` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.ForwardingSink` v1 @kind this, `okio.Sink` v2 @kind object) @signature `Lokio/ForwardingSink;.<init>:(Lokio/Sink;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d0910.  v0:= "delegate" @kind object;
  #L1d0914.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d091a.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d0920.  v1.`okio.ForwardingSink.delegate` @type ^`okio.Sink` := v2 @kind object;
  #L1d0924.  return @kind void;
}
procedure `okio.Sink` `-deprecated_delegate`(`okio.ForwardingSink` v1 @kind this) @signature `Lokio/ForwardingSink;.-deprecated_delegate:()Lokio/Sink;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1d08c0.  v0:= v1.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L1d08c4.  return v0 @kind object;
}
procedure `void` `close`(`okio.ForwardingSink` v1 @kind this) @signature `Lokio/ForwardingSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d0938.  v0:= v1.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L1d093c.  call `close`(v0) @signature `Lokio/Sink;.close:()V` @kind interface;
  #L1d0942.  return @kind void;
}
procedure `okio.Sink` `delegate`(`okio.ForwardingSink` v1 @kind this) @signature `Lokio/ForwardingSink;.delegate:()Lokio/Sink;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1d08d8.  v0:= v1.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L1d08dc.  return v0 @kind object;
}
procedure `void` `flush`(`okio.ForwardingSink` v1 @kind this) @signature `Lokio/ForwardingSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d0954.  v0:= v1.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L1d0958.  call `flush`(v0) @signature `Lokio/Sink;.flush:()V` @kind interface;
  #L1d095e.  return @kind void;
}
procedure `okio.Timeout` `timeout`(`okio.ForwardingSink` v1 @kind this) @signature `Lokio/ForwardingSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d08f0.  v0:= v1.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L1d08f4.  call temp:= `timeout`(v0) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L1d08fa.  v0:= temp @kind object;
  #L1d08fc.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.ForwardingSink` v2 @kind this) @signature `Lokio/ForwardingSink;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d0868.  v0:= new `java.lang.StringBuilder`;
  #L1d086c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d0872.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1d0878.  v1:= temp @kind object;
  #L1d087a.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1d0880.  v1:= temp @kind object;
  #L1d0882.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d0888.  v1:= 40I;
  #L1d088c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d0892.  v1:= v2.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L1d0896.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d089c.  v1:= 41I;
  #L1d08a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d08a6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d08ac.  v0:= temp @kind object;
  #L1d08ae.  return v0 @kind object;
}
procedure `void` `write`(`okio.ForwardingSink` v1 @kind this, `okio.Buffer` v2 @kind object, `long` v3 ) @signature `Lokio/ForwardingSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d0970.  v0:= "source" @kind object;
  #L1d0974.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d097a.  v0:= v1.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L1d097e.  call `write`(v0, v2, v3) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L1d0984.  return @kind void;
}
