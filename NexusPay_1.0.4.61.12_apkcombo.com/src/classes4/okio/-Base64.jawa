record `okio.-Base64` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@okio.-Base64.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okio.-Base64.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/-Base64;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1c8d4c.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1c8d50.  v1:= "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" @kind object;
  #L1c8d54.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1c8d5a.  v0:= temp @kind object;
  #L1c8d5c.  call temp:= `getData$okio`(v0) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1c8d62.  v0:= temp @kind object;
  #L1c8d64.  `@@okio.-Base64.a` @type ^`byte`[] := v0 @kind object;
  #L1c8d68.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1c8d6c.  v1:= "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_" @kind object;
  #L1c8d70.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1c8d76.  v0:= temp @kind object;
  #L1c8d78.  call temp:= `getData$okio`(v0) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1c8d7e.  v0:= temp @kind object;
  #L1c8d80.  `@@okio.-Base64.b` @type ^`byte`[] := v0 @kind object;
  #L1c8d84.  return @kind void;
}
procedure `byte`[] `decodeBase64ToArray`(`java.lang.String` v15 @kind object) @signature `Lokio/-Base64;.decodeBase64ToArray:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L1c89c0.  v0:= "$this$decodeBase64ToArray" @kind object;
  #L1c89c4.  call `checkNotNullParameter`(v15, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c89ca.  call temp:= `length`(v15) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1c89d0.  v0:= temp;
  #L1c89d2.  v1:= 9I;
  #L1c89d6.  v2:= 32I;
  #L1c89da.  v3:= 13I;
  #L1c89de.  v4:= 10I;
  #L1c89e2.  if v0 <= 0 then goto L1c8a12;
  #L1c89e6.  v5:= v0 + -1;
  #L1c89ea.  call temp:= `charAt`(v15, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1c89f0.  v5:= temp;
  #L1c89f2.  v6:= 61I;
  #L1c89f6.  if v5 == v6 then goto L1c8a0c;
  #L1c89fa.  if v5 == v4 then goto L1c8a0c;
  #L1c89fe.  if v5 == v3 then goto L1c8a0c;
  #L1c8a02.  if v5 == v2 then goto L1c8a0c;
  #L1c8a06.  if v5 == v1 then goto L1c8a0c;
  #L1c8a0a.  goto L1c8a12;
  #L1c8a0c.  v0:= v0 + -1;
  #L1c8a10.  goto L1c89d2;
  #L1c8a12.  v5:= (`long`) v0 @kind i2l;
  #L1c8a14.  v7:= 6L;
  #L1c8a18.  v5:= v5 * v7 @kind long;
  #L1c8a1c.  v7:= 8L;
  #L1c8a20.  v5:= v5 / v7 @kind long;
  #L1c8a22.  v6:= (`int`) v5 @kind l2i;
  #L1c8a24.  v5:= new `byte`[v6];
  #L1c8a28.  v7:= 0I;
  #L1c8a2a.  v8:= 0I;
  #L1c8a2c.  v9:= 0I;
  #L1c8a2e.  v10:= 0I;
  #L1c8a30.  v11:= 0I;
  #L1c8a32.  if v7 >= v0 then goto L1c8b08;
  #L1c8a36.  call temp:= `charAt`(v15, v7) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1c8a3c.  v12:= temp;
  #L1c8a3e.  v13:= 90I;
  #L1c8a42.  v14:= 65I;
  #L1c8a46.  if v14 <= v12 then goto L1c8a4c;
  #L1c8a4a.  goto L1c8a56;
  #L1c8a4c.  if v13 < v12 then goto L1c8a56;
  #L1c8a50.  v12:= v12 + -65;
  #L1c8a54.  goto L1c8ac8;
  #L1c8a56.  v13:= 122I;
  #L1c8a5a.  v14:= 97I;
  #L1c8a5e.  if v14 <= v12 then goto L1c8a64;
  #L1c8a62.  goto L1c8a6e;
  #L1c8a64.  if v13 < v12 then goto L1c8a6e;
  #L1c8a68.  v12:= v12 + -71;
  #L1c8a6c.  goto L1c8ac8;
  #L1c8a6e.  v13:= 57I;
  #L1c8a72.  v14:= 48I;
  #L1c8a76.  if v14 <= v12 then goto L1c8a7c;
  #L1c8a7a.  goto L1c8a86;
  #L1c8a7c.  if v13 < v12 then goto L1c8a86;
  #L1c8a80.  v12:= v12 + 4;
  #L1c8a84.  goto L1c8ac8;
  #L1c8a86.  v13:= 43I;
  #L1c8a8a.  if v12 == v13 then goto L1c8ac4;
  #L1c8a8e.  v13:= 45I;
  #L1c8a92.  if v12 != v13 then goto L1c8a98;
  #L1c8a96.  goto L1c8ac4;
  #L1c8a98.  v13:= 47I;
  #L1c8a9c.  if v12 == v13 then goto L1c8abe;
  #L1c8aa0.  v13:= 95I;
  #L1c8aa4.  if v12 != v13 then goto L1c8aaa;
  #L1c8aa8.  goto L1c8abe;
  #L1c8aaa.  if v12 == v4 then goto L1c8b02;
  #L1c8aae.  if v12 == v3 then goto L1c8b02;
  #L1c8ab2.  if v12 == v2 then goto L1c8b02;
  #L1c8ab6.  if v12 != v1 then goto L1c8abc;
  #L1c8aba.  goto L1c8b02;
  #L1c8abc.  return v11 @kind object;
  #L1c8abe.  v12:= 63I;
  #L1c8ac2.  goto L1c8ac8;
  #L1c8ac4.  v12:= 62I;
  #L1c8ac8.  v9:= v9 ^< 6;
  #L1c8acc.  v9:= v9 ^| v12 @kind int;
  #L1c8ace.  v8:= v8 + 1;
  #L1c8ad2.  v11:= v8 %% 4;
  #L1c8ad6.  if v11 != 0 then goto L1c8b02;
  #L1c8ada.  v11:= v10 + 1;
  #L1c8ade.  v12:= v9 ^> 16;
  #L1c8ae2.  v12:= (`byte`) v12 @kind i2b;
  #L1c8ae4.  v5[v10]:= v12 @kind byte;
  #L1c8ae8.  v10:= v11 + 1;
  #L1c8aec.  v12:= v9 ^> 8;
  #L1c8af0.  v12:= (`byte`) v12 @kind i2b;
  #L1c8af2.  v5[v11]:= v12 @kind byte;
  #L1c8af6.  v11:= v10 + 1;
  #L1c8afa.  v12:= (`byte`) v9 @kind i2b;
  #L1c8afc.  v5[v10]:= v12 @kind byte;
  #L1c8b00.  v10:= v11;
  #L1c8b02.  v7:= v7 + 1;
  #L1c8b06.  goto L1c8a30;
  #L1c8b08.  v8:= v8 %% 4;
  #L1c8b0c.  v15:= 1I;
  #L1c8b0e.  if v8 == v15 then goto L1c8b70;
  #L1c8b12.  v15:= 2I;
  #L1c8b14.  if v8 == v15 then goto L1c8b42;
  #L1c8b18.  v15:= 3I;
  #L1c8b1a.  if v8 == v15 then goto L1c8b20;
  #L1c8b1e.  goto L1c8b56;
  #L1c8b20.  v15:= v9 ^< 6;
  #L1c8b24.  v0:= v10 + 1;
  #L1c8b28.  v1:= v15 ^> 16;
  #L1c8b2c.  v1:= (`byte`) v1 @kind i2b;
  #L1c8b2e.  v5[v10]:= v1 @kind byte;
  #L1c8b32.  v10:= v0 + 1;
  #L1c8b36.  v15:= v15 ^> 8;
  #L1c8b3a.  v15:= (`byte`) v15 @kind i2b;
  #L1c8b3c.  v5[v0]:= v15 @kind byte;
  #L1c8b40.  goto L1c8b56;
  #L1c8b42.  v15:= v9 ^< 12;
  #L1c8b46.  v0:= v10 + 1;
  #L1c8b4a.  v15:= v15 ^> 16;
  #L1c8b4e.  v15:= (`byte`) v15 @kind i2b;
  #L1c8b50.  v5[v10]:= v15 @kind byte;
  #L1c8b54.  v10:= v0;
  #L1c8b56.  if v10 != v6 then goto L1c8b5c;
  #L1c8b5a.  return v5 @kind object;
  #L1c8b5c.  call temp:= `copyOf`(v5, v10) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L1c8b62.  v15:= temp @kind object;
  #L1c8b64.  v0:= "java.util.Arrays.copyOf(this, newSize)" @kind object;
  #L1c8b68.  call `checkNotNullExpressionValue`(v15, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c8b6e.  return v15 @kind object;
  #L1c8b70.  return v11 @kind object;
}
procedure `java.lang.String` `encodeBase64`(`byte`[] v10 @kind object, `byte`[] v11 @kind object) @signature `Lokio/-Base64;.encodeBase64:([B[B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1c8bdc.  v0:= "$this$encodeBase64" @kind object;
  #L1c8be0.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c8be6.  v0:= "map" @kind object;
  #L1c8bea.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c8bf0.  v0:= length @variable v10;
  #L1c8bf2.  v1:= 2I;
  #L1c8bf4.  v0:= v0 + v1 @kind int;
  #L1c8bf6.  v0:= v0 / 3;
  #L1c8bfa.  v0:= v0 * 4;
  #L1c8bfe.  v0:= new `byte`[v0];
  #L1c8c02.  v2:= length @variable v10;
  #L1c8c04.  v3:= length @variable v10;
  #L1c8c06.  v3:= v3 %% 3;
  #L1c8c0a.  v2:= v2 - v3 @kind int;
  #L1c8c0c.  v3:= 0I;
  #L1c8c0e.  v4:= 0I;
  #L1c8c10.  if v3 >= v2 then goto L1c8c8c;
  #L1c8c14.  v5:= v3 + 1;
  #L1c8c18.  v3:= v10[v3] @kind byte;
  #L1c8c1c.  v6:= v5 + 1;
  #L1c8c20.  v5:= v10[v5] @kind byte;
  #L1c8c24.  v7:= v6 + 1;
  #L1c8c28.  v6:= v10[v6] @kind byte;
  #L1c8c2c.  v8:= v4 + 1;
  #L1c8c30.  v9:= v3 ^& 255;
  #L1c8c34.  v9:= v9 ^> v1 @kind int;
  #L1c8c36.  v9:= v11[v9] @kind byte;
  #L1c8c3a.  v0[v4]:= v9 @kind byte;
  #L1c8c3e.  v4:= v8 + 1;
  #L1c8c42.  v3:= v3 ^& 3;
  #L1c8c46.  v3:= v3 ^< 4;
  #L1c8c4a.  v9:= v5 ^& 255;
  #L1c8c4e.  v9:= v9 ^> 4;
  #L1c8c52.  v3:= v3 ^| v9 @kind int;
  #L1c8c54.  v3:= v11[v3] @kind byte;
  #L1c8c58.  v0[v8]:= v3 @kind byte;
  #L1c8c5c.  v3:= v4 + 1;
  #L1c8c60.  v5:= v5 ^& 15;
  #L1c8c64.  v5:= v5 ^< v1 @kind int;
  #L1c8c66.  v8:= v6 ^& 255;
  #L1c8c6a.  v8:= v8 ^> 6;
  #L1c8c6e.  v5:= v5 ^| v8 @kind int;
  #L1c8c70.  v5:= v11[v5] @kind byte;
  #L1c8c74.  v0[v4]:= v5 @kind byte;
  #L1c8c78.  v4:= v3 + 1;
  #L1c8c7c.  v5:= v6 ^& 63;
  #L1c8c80.  v5:= v11[v5] @kind byte;
  #L1c8c84.  v0[v3]:= v5 @kind byte;
  #L1c8c88.  v3:= v7;
  #L1c8c8a.  goto L1c8c10;
  #L1c8c8c.  v5:= length @variable v10;
  #L1c8c8e.  v5:= v5 - v2 @kind int;
  #L1c8c90.  v2:= 61I;
  #L1c8c94.  v6:= 1I;
  #L1c8c96.  if v5 == v6 then goto L1c8cf6;
  #L1c8c9a.  if v5 == v1 then goto L1c8ca0;
  #L1c8c9e.  goto L1c8d30;
  #L1c8ca0.  v5:= v3 + 1;
  #L1c8ca4.  v3:= v10[v3] @kind byte;
  #L1c8ca8.  v10:= v10[v5] @kind byte;
  #L1c8cac.  v5:= v4 + 1;
  #L1c8cb0.  v6:= v3 ^& 255;
  #L1c8cb4.  v6:= v6 ^> v1 @kind int;
  #L1c8cb6.  v6:= v11[v6] @kind byte;
  #L1c8cba.  v0[v4]:= v6 @kind byte;
  #L1c8cbe.  v4:= v5 + 1;
  #L1c8cc2.  v3:= v3 ^& 3;
  #L1c8cc6.  v3:= v3 ^< 4;
  #L1c8cca.  v6:= v10 ^& 255;
  #L1c8cce.  v6:= v6 ^> 4;
  #L1c8cd2.  v3:= v3 ^| v6 @kind int;
  #L1c8cd4.  v3:= v11[v3] @kind byte;
  #L1c8cd8.  v0[v5]:= v3 @kind byte;
  #L1c8cdc.  v3:= v4 + 1;
  #L1c8ce0.  v10:= v10 ^& 15;
  #L1c8ce4.  v10:= v10 ^< v1 @kind int;
  #L1c8ce6.  v10:= v11[v10] @kind byte;
  #L1c8cea.  v0[v4]:= v10 @kind byte;
  #L1c8cee.  v10:= (`byte`) v2 @kind i2b;
  #L1c8cf0.  v0[v3]:= v10 @kind byte;
  #L1c8cf4.  goto L1c8d30;
  #L1c8cf6.  v10:= v10[v3] @kind byte;
  #L1c8cfa.  v3:= v4 + 1;
  #L1c8cfe.  v5:= v10 ^& 255;
  #L1c8d02.  v1:= v5 ^> 2;
  #L1c8d06.  v1:= v11[v1] @kind byte;
  #L1c8d0a.  v0[v4]:= v1 @kind byte;
  #L1c8d0e.  v1:= v3 + 1;
  #L1c8d12.  v10:= v10 ^& 3;
  #L1c8d16.  v10:= v10 ^< 4;
  #L1c8d1a.  v10:= v11[v10] @kind byte;
  #L1c8d1e.  v0[v3]:= v10 @kind byte;
  #L1c8d22.  v10:= v1 + 1;
  #L1c8d26.  v11:= (`byte`) v2 @kind i2b;
  #L1c8d28.  v0[v1]:= v11 @kind byte;
  #L1c8d2c.  v0[v10]:= v11 @kind byte;
  #L1c8d30.  call temp:= `toUtf8String`(v0) @signature `Lokio/-Platform;.toUtf8String:([B)Ljava/lang/String;` @kind static;
  #L1c8d36.  v10:= temp @kind object;
  #L1c8d38.  return v10 @kind object;
}
procedure `java.lang.String` `encodeBase64$default`(`byte`[] v0 @kind object, `byte`[] v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lokio/-Base64;.encodeBase64$default:([B[BILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1c8bb4.  v2:= v2 ^& 1;
  #L1c8bb8.  if v2 == 0 then goto L1c8bc0;
  #L1c8bbc.  v1:= `@@okio.-Base64.a` @type ^`byte`[] @kind object;
  #L1c8bc0.  call temp:= `encodeBase64`(v0, v1) @signature `Lokio/-Base64;.encodeBase64:([B[B)Ljava/lang/String;` @kind static;
  #L1c8bc6.  v0:= temp @kind object;
  #L1c8bc8.  return v0 @kind object;
}
procedure `byte`[] `getBASE64`() @signature `Lokio/-Base64;.getBASE64:()[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1c8b84.  v0:= `@@okio.-Base64.a` @type ^`byte`[] @kind object;
  #L1c8b88.  return v0 @kind object;
}
procedure `byte`[] `getBASE64_URL_SAFE`() @signature `Lokio/-Base64;.getBASE64_URL_SAFE:()[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1c8b9c.  v0:= `@@okio.-Base64.b` @type ^`byte`[] @kind object;
  #L1c8ba0.  return v0 @kind object;
}
