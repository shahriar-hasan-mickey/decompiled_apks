record `okio.Pipe$sink$1` @kind class @AccessFlag PUBLIC_FINAL extends `okio.Sink` @kind interface {
  `okio.Timeout` `okio.Pipe$sink$1.a` @AccessFlag PRIVATE_FINAL;
  `okio.Pipe` `okio.Pipe$sink$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.Pipe$sink$1` v0 @kind this, `okio.Pipe` v1 @kind object) @signature `Lokio/Pipe$sink$1;.<init>:(Lokio/Pipe;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1d362c.  v0.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` := v1 @kind object;
  #L1d3630.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d3636.  v1:= new `okio.Timeout`;
  #L1d363a.  call `<init>`(v1) @signature `Lokio/Timeout;.<init>:()V` @kind direct;
  #L1d3640.  v0.`okio.Pipe$sink$1.a` @type ^`okio.Timeout` := v1 @kind object;
  #L1d3644.  return @kind void;
}
procedure `void` `close`(`okio.Pipe$sink$1` v11 @kind this) @signature `Lokio/Pipe$sink$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1d3658.  v0:= v11.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d365c.  call temp:= `getBuffer$okio`(v0) @signature `Lokio/Pipe;.getBuffer$okio:()Lokio/Buffer;` @kind virtual;
  #L1d3662.  v0:= temp @kind object;
  #L1d3664.  @monitorenter v0
  #L1d3666.  v1:= v11.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d366a.  call temp:= `getSinkClosed$okio`(v1) @signature `Lokio/Pipe;.getSinkClosed$okio:()Z` @kind virtual;
  #L1d3670.  v1:= temp;
  #L1d3672.  if v1 == 0 then goto L1d367a;
  #L1d3676.  @monitorexit v0
  #L1d3678.  return @kind void;
  #L1d367a.  v1:= v11.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d367e.  call temp:= `getFoldedSink$okio`(v1) @signature `Lokio/Pipe;.getFoldedSink$okio:()Lokio/Sink;` @kind virtual;
  #L1d3684.  v1:= temp @kind object;
  #L1d3686.  if v1 == 0 then goto L1d368c;
  #L1d368a.  goto L1d36f2;
  #L1d368c.  v1:= v11.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d3690.  call temp:= `getSourceClosed$okio`(v1) @signature `Lokio/Pipe;.getSourceClosed$okio:()Z` @kind virtual;
  #L1d3696.  v1:= temp;
  #L1d3698.  if v1 == 0 then goto L1d36ce;
  #L1d369c.  v1:= v11.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d36a0.  call temp:= `getBuffer$okio`(v1) @signature `Lokio/Pipe;.getBuffer$okio:()Lokio/Buffer;` @kind virtual;
  #L1d36a6.  v1:= temp @kind object;
  #L1d36a8.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d36ae.  v1:= temp @kind wide;
  #L1d36b0.  v3:= 0L;
  #L1d36b4.  v5:= lcmp(v1, v3);
  #L1d36b8.  if v5 > 0 then goto L1d36be;
  #L1d36bc.  goto L1d36ce;
  #L1d36be.  v1:= new `java.io.IOException`;
  #L1d36c2.  v2:= "source is closed" @kind object;
  #L1d36c6.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d36cc.  throw v1;
  #L1d36ce.  v1:= v11.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d36d2.  v2:= 1I;
  #L1d36d4.  call `setSinkClosed$okio`(v1, v2) @signature `Lokio/Pipe;.setSinkClosed$okio:(Z)V` @kind virtual;
  #L1d36da.  v1:= v11.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d36de.  call temp:= `getBuffer$okio`(v1) @signature `Lokio/Pipe;.getBuffer$okio:()Lokio/Buffer;` @kind virtual;
  #L1d36e4.  v1:= temp @kind object;
  #L1d36e6.  if v1 == 0 then goto L1d3828;
  #L1d36ea.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L1d36f0.  v1:= 0I;
  #L1d36f2.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d36f6.  @monitorexit v0
  #L1d36f8.  if v1 == 0 then goto L1d3826;
  #L1d36fc.  v0:= v11.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d3700.  call temp:= `timeout`(v1) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L1d3706.  v2:= temp @kind object;
  #L1d3708.  call temp:= `sink`(v0) @signature `Lokio/Pipe;.sink:()Lokio/Sink;` @kind virtual;
  #L1d370e.  v0:= temp @kind object;
  #L1d3710.  call temp:= `timeout`(v0) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L1d3716.  v0:= temp @kind object;
  #L1d3718.  call temp:= `timeoutNanos`(v2) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L1d371e.  v3:= temp @kind wide;
  #L1d3720.  v5:= `@@okio.Timeout.Companion` @type ^`okio.Timeout$Companion` @kind object;
  #L1d3724.  call temp:= `timeoutNanos`(v0) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L1d372a.  v6:= temp @kind wide;
  #L1d372c.  call temp:= `timeoutNanos`(v2) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L1d3732.  v8:= temp @kind wide;
  #L1d3734.  call temp:= `minTimeout`(v5, v6, v8) @signature `Lokio/Timeout$Companion;.minTimeout:(JJ)J` @kind virtual;
  #L1d373a.  v5:= temp @kind wide;
  #L1d373c.  v7:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d3740.  call temp:= `timeout`(v2, v5, v7) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1d3746.  call temp:= `hasDeadline`(v2) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d374c.  v5:= temp;
  #L1d374e.  if v5 == 0 then goto L1d37c8;
  #L1d3752.  call temp:= `deadlineNanoTime`(v2) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1d3758.  v5:= temp @kind wide;
  #L1d375a.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d3760.  v7:= temp;
  #L1d3762.  if v7 == 0 then goto L1d3784;
  #L1d3766.  call temp:= `deadlineNanoTime`(v2) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1d376c.  v7:= temp @kind wide;
  #L1d376e.  call temp:= `deadlineNanoTime`(v0) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1d3774.  v9:= temp @kind wide;
  #L1d3776.  call temp:= `min`(v7, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1d377c.  v7:= temp @kind wide;
  #L1d377e.  call temp:= `deadlineNanoTime`(v2, v7) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1d3784.  call `close`(v1) @signature `Lokio/Sink;.close:()V` @kind interface;
  #L1d378a.  v1:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d378e.  call temp:= `timeout`(v2, v3, v1) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1d3794.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d379a.  v0:= temp;
  #L1d379c.  if v0 == 0 then goto L1d3826;
  #L1d37a0.  call temp:= `deadlineNanoTime`(v2, v5) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1d37a6.  goto L1d3826;
  #L1d37a8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1d37aa.  v7:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d37ae.  call temp:= `timeout`(v2, v3, v7) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1d37b4.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d37ba.  v0:= temp;
  #L1d37bc.  if v0 == 0 then goto L1d37c6;
  #L1d37c0.  call temp:= `deadlineNanoTime`(v2, v5) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1d37c6.  throw v1;
  #L1d37c8.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d37ce.  v5:= temp;
  #L1d37d0.  if v5 == 0 then goto L1d37e2;
  #L1d37d4.  call temp:= `deadlineNanoTime`(v0) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1d37da.  v5:= temp @kind wide;
  #L1d37dc.  call temp:= `deadlineNanoTime`(v2, v5) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1d37e2.  call `close`(v1) @signature `Lokio/Sink;.close:()V` @kind interface;
  #L1d37e8.  v1:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d37ec.  call temp:= `timeout`(v2, v3, v1) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1d37f2.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d37f8.  v0:= temp;
  #L1d37fa.  if v0 == 0 then goto L1d3826;
  #L1d37fe.  call temp:= `clearDeadline`(v2) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L1d3804.  goto L1d3826;
  #L1d3806.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1d3808.  v5:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d380c.  call temp:= `timeout`(v2, v3, v5) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1d3812.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d3818.  v0:= temp;
  #L1d381a.  if v0 == 0 then goto L1d3824;
  #L1d381e.  call temp:= `clearDeadline`(v2) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L1d3824.  throw v1;
  #L1d3826.  return @kind void;
  #L1d3828.  v1:= new `java.lang.NullPointerException`;
  #L1d382c.  v2:= "null cannot be cast to non-null type java.lang.Object" @kind object;
  #L1d3830.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d3836.  throw v1;
  #L1d3838.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1d383a.  @monitorexit v0
  #L1d383c.  throw v1;
  catch `java.lang.Throwable` @[L1d3666..L1d3672] goto L1d3838;
  catch `java.lang.Throwable` @[L1d367a..L1d36f6] goto L1d3838;
  catch `java.lang.Throwable` @[L1d3784..L1d378a] goto L1d37a8;
  catch `java.lang.Throwable` @[L1d37e2..L1d37e8] goto L1d3806;
  catch `java.lang.Throwable` @[L1d3828..L1d3838] goto L1d3838;
}
procedure `void` `flush`(`okio.Pipe$sink$1` v11 @kind this) @signature `Lokio/Pipe$sink$1;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1d3884.  v0:= v11.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d3888.  call temp:= `getBuffer$okio`(v0) @signature `Lokio/Pipe;.getBuffer$okio:()Lokio/Buffer;` @kind virtual;
  #L1d388e.  v0:= temp @kind object;
  #L1d3890.  @monitorenter v0
  #L1d3892.  v1:= v11.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d3896.  call temp:= `getSinkClosed$okio`(v1) @signature `Lokio/Pipe;.getSinkClosed$okio:()Z` @kind virtual;
  #L1d389c.  v1:= temp;
  #L1d389e.  v1:= v1 ^~ 1;
  #L1d38a2.  if v1 == 0 then goto L1d3a52;
  #L1d38a6.  v1:= v11.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d38aa.  call temp:= `getCanceled$okio`(v1) @signature `Lokio/Pipe;.getCanceled$okio:()Z` @kind virtual;
  #L1d38b0.  v1:= temp;
  #L1d38b2.  if v1 != 0 then goto L1d3a42;
  #L1d38b6.  v1:= v11.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d38ba.  call temp:= `getFoldedSink$okio`(v1) @signature `Lokio/Pipe;.getFoldedSink$okio:()Lokio/Sink;` @kind virtual;
  #L1d38c0.  v1:= temp @kind object;
  #L1d38c2.  if v1 == 0 then goto L1d38c8;
  #L1d38c6.  goto L1d390c;
  #L1d38c8.  v1:= v11.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d38cc.  call temp:= `getSourceClosed$okio`(v1) @signature `Lokio/Pipe;.getSourceClosed$okio:()Z` @kind virtual;
  #L1d38d2.  v1:= temp;
  #L1d38d4.  if v1 == 0 then goto L1d390a;
  #L1d38d8.  v1:= v11.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d38dc.  call temp:= `getBuffer$okio`(v1) @signature `Lokio/Pipe;.getBuffer$okio:()Lokio/Buffer;` @kind virtual;
  #L1d38e2.  v1:= temp @kind object;
  #L1d38e4.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d38ea.  v1:= temp @kind wide;
  #L1d38ec.  v3:= 0L;
  #L1d38f0.  v5:= lcmp(v1, v3);
  #L1d38f4.  if v5 > 0 then goto L1d38fa;
  #L1d38f8.  goto L1d390a;
  #L1d38fa.  v1:= new `java.io.IOException`;
  #L1d38fe.  v2:= "source is closed" @kind object;
  #L1d3902.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d3908.  throw v1;
  #L1d390a.  v1:= 0I;
  #L1d390c.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d3910.  @monitorexit v0
  #L1d3912.  if v1 == 0 then goto L1d3a40;
  #L1d3916.  v0:= v11.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d391a.  call temp:= `timeout`(v1) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L1d3920.  v2:= temp @kind object;
  #L1d3922.  call temp:= `sink`(v0) @signature `Lokio/Pipe;.sink:()Lokio/Sink;` @kind virtual;
  #L1d3928.  v0:= temp @kind object;
  #L1d392a.  call temp:= `timeout`(v0) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L1d3930.  v0:= temp @kind object;
  #L1d3932.  call temp:= `timeoutNanos`(v2) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L1d3938.  v3:= temp @kind wide;
  #L1d393a.  v5:= `@@okio.Timeout.Companion` @type ^`okio.Timeout$Companion` @kind object;
  #L1d393e.  call temp:= `timeoutNanos`(v0) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L1d3944.  v6:= temp @kind wide;
  #L1d3946.  call temp:= `timeoutNanos`(v2) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L1d394c.  v8:= temp @kind wide;
  #L1d394e.  call temp:= `minTimeout`(v5, v6, v8) @signature `Lokio/Timeout$Companion;.minTimeout:(JJ)J` @kind virtual;
  #L1d3954.  v5:= temp @kind wide;
  #L1d3956.  v7:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d395a.  call temp:= `timeout`(v2, v5, v7) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1d3960.  call temp:= `hasDeadline`(v2) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d3966.  v5:= temp;
  #L1d3968.  if v5 == 0 then goto L1d39e2;
  #L1d396c.  call temp:= `deadlineNanoTime`(v2) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1d3972.  v5:= temp @kind wide;
  #L1d3974.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d397a.  v7:= temp;
  #L1d397c.  if v7 == 0 then goto L1d399e;
  #L1d3980.  call temp:= `deadlineNanoTime`(v2) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1d3986.  v7:= temp @kind wide;
  #L1d3988.  call temp:= `deadlineNanoTime`(v0) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1d398e.  v9:= temp @kind wide;
  #L1d3990.  call temp:= `min`(v7, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1d3996.  v7:= temp @kind wide;
  #L1d3998.  call temp:= `deadlineNanoTime`(v2, v7) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1d399e.  call `flush`(v1) @signature `Lokio/Sink;.flush:()V` @kind interface;
  #L1d39a4.  v1:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d39a8.  call temp:= `timeout`(v2, v3, v1) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1d39ae.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d39b4.  v0:= temp;
  #L1d39b6.  if v0 == 0 then goto L1d3a40;
  #L1d39ba.  call temp:= `deadlineNanoTime`(v2, v5) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1d39c0.  goto L1d3a40;
  #L1d39c2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1d39c4.  v7:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d39c8.  call temp:= `timeout`(v2, v3, v7) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1d39ce.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d39d4.  v0:= temp;
  #L1d39d6.  if v0 == 0 then goto L1d39e0;
  #L1d39da.  call temp:= `deadlineNanoTime`(v2, v5) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1d39e0.  throw v1;
  #L1d39e2.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d39e8.  v5:= temp;
  #L1d39ea.  if v5 == 0 then goto L1d39fc;
  #L1d39ee.  call temp:= `deadlineNanoTime`(v0) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1d39f4.  v5:= temp @kind wide;
  #L1d39f6.  call temp:= `deadlineNanoTime`(v2, v5) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1d39fc.  call `flush`(v1) @signature `Lokio/Sink;.flush:()V` @kind interface;
  #L1d3a02.  v1:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d3a06.  call temp:= `timeout`(v2, v3, v1) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1d3a0c.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d3a12.  v0:= temp;
  #L1d3a14.  if v0 == 0 then goto L1d3a40;
  #L1d3a18.  call temp:= `clearDeadline`(v2) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L1d3a1e.  goto L1d3a40;
  #L1d3a20.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1d3a22.  v5:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d3a26.  call temp:= `timeout`(v2, v3, v5) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1d3a2c.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d3a32.  v0:= temp;
  #L1d3a34.  if v0 == 0 then goto L1d3a3e;
  #L1d3a38.  call temp:= `clearDeadline`(v2) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L1d3a3e.  throw v1;
  #L1d3a40.  return @kind void;
  #L1d3a42.  v1:= new `java.io.IOException`;
  #L1d3a46.  v2:= "canceled" @kind object;
  #L1d3a4a.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d3a50.  throw v1;
  #L1d3a52.  v1:= "closed" @kind object;
  #L1d3a56.  v2:= new `java.lang.IllegalStateException`;
  #L1d3a5a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d3a60.  v1:= temp @kind object;
  #L1d3a62.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d3a68.  throw v2;
  #L1d3a6a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1d3a6c.  @monitorexit v0
  #L1d3a6e.  throw v1;
  catch `java.lang.Throwable` @[L1d3892..L1d3910] goto L1d3a6a;
  catch `java.lang.Throwable` @[L1d399e..L1d39a4] goto L1d39c2;
  catch `java.lang.Throwable` @[L1d39fc..L1d3a02] goto L1d3a20;
  catch `java.lang.Throwable` @[L1d3a42..L1d3a6a] goto L1d3a6a;
}
procedure `okio.Timeout` `timeout`(`okio.Pipe$sink$1` v1 @kind this) @signature `Lokio/Pipe$sink$1;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d3614.  v0:= v1.`okio.Pipe$sink$1.a` @type ^`okio.Timeout` @kind object;
  #L1d3618.  return v0 @kind object;
}
procedure `void` `write`(`okio.Pipe$sink$1` v12 @kind this, `okio.Buffer` v13 @kind object, `long` v14 ) @signature `Lokio/Pipe$sink$1;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1d3aac.  v0:= "source" @kind object;
  #L1d3ab0.  call `checkNotNullParameter`(v13, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d3ab6.  v0:= v12.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d3aba.  call temp:= `getBuffer$okio`(v0) @signature `Lokio/Pipe;.getBuffer$okio:()Lokio/Buffer;` @kind virtual;
  #L1d3ac0.  v0:= temp @kind object;
  #L1d3ac2.  @monitorenter v0
  #L1d3ac4.  v1:= v12.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d3ac8.  call temp:= `getSinkClosed$okio`(v1) @signature `Lokio/Pipe;.getSinkClosed$okio:()Z` @kind virtual;
  #L1d3ace.  v1:= temp;
  #L1d3ad0.  v1:= v1 ^~ 1;
  #L1d3ad4.  if v1 == 0 then goto L1d3d14;
  #L1d3ad8.  v1:= v12.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d3adc.  call temp:= `getCanceled$okio`(v1) @signature `Lokio/Pipe;.getCanceled$okio:()Z` @kind virtual;
  #L1d3ae2.  v1:= temp;
  #L1d3ae4.  if v1 != 0 then goto L1d3d04;
  #L1d3ae8.  v1:= 0L;
  #L1d3aec.  v3:= lcmp(v14, v1);
  #L1d3af0.  if v3 <= 0 then goto L1d3bcc;
  #L1d3af4.  v3:= v12.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d3af8.  call temp:= `getFoldedSink$okio`(v3) @signature `Lokio/Pipe;.getFoldedSink$okio:()Lokio/Sink;` @kind virtual;
  #L1d3afe.  v3:= temp @kind object;
  #L1d3b00.  if v3 == 0 then goto L1d3b06;
  #L1d3b04.  goto L1d3bce;
  #L1d3b06.  v3:= v12.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d3b0a.  call temp:= `getSourceClosed$okio`(v3) @signature `Lokio/Pipe;.getSourceClosed$okio:()Z` @kind virtual;
  #L1d3b10.  v3:= temp;
  #L1d3b12.  if v3 != 0 then goto L1d3bbc;
  #L1d3b16.  v3:= v12.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d3b1a.  call temp:= `getMaxBufferSize$okio`(v3) @signature `Lokio/Pipe;.getMaxBufferSize$okio:()J` @kind virtual;
  #L1d3b20.  v3:= temp @kind wide;
  #L1d3b22.  v5:= v12.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d3b26.  call temp:= `getBuffer$okio`(v5) @signature `Lokio/Pipe;.getBuffer$okio:()Lokio/Buffer;` @kind virtual;
  #L1d3b2c.  v5:= temp @kind object;
  #L1d3b2e.  call temp:= `size`(v5) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d3b34.  v5:= temp @kind wide;
  #L1d3b36.  v3:= v3 - v5 @kind long;
  #L1d3b38.  v5:= lcmp(v3, v1);
  #L1d3b3c.  if v5 != 0 then goto L1d3b78;
  #L1d3b40.  v1:= v12.`okio.Pipe$sink$1.a` @type ^`okio.Timeout` @kind object;
  #L1d3b44.  v2:= v12.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d3b48.  call temp:= `getBuffer$okio`(v2) @signature `Lokio/Pipe;.getBuffer$okio:()Lokio/Buffer;` @kind virtual;
  #L1d3b4e.  v2:= temp @kind object;
  #L1d3b50.  call `waitUntilNotified`(v1, v2) @signature `Lokio/Timeout;.waitUntilNotified:(Ljava/lang/Object;)V` @kind virtual;
  #L1d3b56.  v1:= v12.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d3b5a.  call temp:= `getCanceled$okio`(v1) @signature `Lokio/Pipe;.getCanceled$okio:()Z` @kind virtual;
  #L1d3b60.  v1:= temp;
  #L1d3b62.  if v1 != 0 then goto L1d3b68;
  #L1d3b66.  goto L1d3ae8;
  #L1d3b68.  v13:= new `java.io.IOException`;
  #L1d3b6c.  v14:= "canceled" @kind object;
  #L1d3b70.  call `<init>`(v13, v14) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d3b76.  throw v13;
  #L1d3b78.  call temp:= `min`(v3, v14) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1d3b7e.  v1:= temp @kind wide;
  #L1d3b80.  v3:= v12.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d3b84.  call temp:= `getBuffer$okio`(v3) @signature `Lokio/Pipe;.getBuffer$okio:()Lokio/Buffer;` @kind virtual;
  #L1d3b8a.  v3:= temp @kind object;
  #L1d3b8c.  call `write`(v3, v13, v1) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L1d3b92.  v14:= v14 - v1 @kind long;
  #L1d3b94.  v1:= v12.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d3b98.  call temp:= `getBuffer$okio`(v1) @signature `Lokio/Pipe;.getBuffer$okio:()Lokio/Buffer;` @kind virtual;
  #L1d3b9e.  v1:= temp @kind object;
  #L1d3ba0.  if v1 == 0 then goto L1d3bac;
  #L1d3ba4.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L1d3baa.  goto L1d3ae8;
  #L1d3bac.  v13:= new `java.lang.NullPointerException`;
  #L1d3bb0.  v14:= "null cannot be cast to non-null type java.lang.Object" @kind object;
  #L1d3bb4.  call `<init>`(v13, v14) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d3bba.  throw v13;
  #L1d3bbc.  v13:= new `java.io.IOException`;
  #L1d3bc0.  v14:= "source is closed" @kind object;
  #L1d3bc4.  call `<init>`(v13, v14) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d3bca.  throw v13;
  #L1d3bcc.  v3:= 0I;
  #L1d3bce.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d3bd2.  @monitorexit v0
  #L1d3bd4.  if v3 == 0 then goto L1d3d02;
  #L1d3bd8.  v0:= v12.`okio.Pipe$sink$1.b` @type ^`okio.Pipe` @kind object;
  #L1d3bdc.  call temp:= `timeout`(v3) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L1d3be2.  v1:= temp @kind object;
  #L1d3be4.  call temp:= `sink`(v0) @signature `Lokio/Pipe;.sink:()Lokio/Sink;` @kind virtual;
  #L1d3bea.  v0:= temp @kind object;
  #L1d3bec.  call temp:= `timeout`(v0) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L1d3bf2.  v0:= temp @kind object;
  #L1d3bf4.  call temp:= `timeoutNanos`(v1) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L1d3bfa.  v4:= temp @kind wide;
  #L1d3bfc.  v2:= `@@okio.Timeout.Companion` @type ^`okio.Timeout$Companion` @kind object;
  #L1d3c00.  call temp:= `timeoutNanos`(v0) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L1d3c06.  v6:= temp @kind wide;
  #L1d3c08.  call temp:= `timeoutNanos`(v1) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L1d3c0e.  v8:= temp @kind wide;
  #L1d3c10.  call temp:= `minTimeout`(v2, v6, v8) @signature `Lokio/Timeout$Companion;.minTimeout:(JJ)J` @kind virtual;
  #L1d3c16.  v6:= temp @kind wide;
  #L1d3c18.  v2:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d3c1c.  call temp:= `timeout`(v1, v6, v2) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1d3c22.  call temp:= `hasDeadline`(v1) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d3c28.  v2:= temp;
  #L1d3c2a.  if v2 == 0 then goto L1d3ca4;
  #L1d3c2e.  call temp:= `deadlineNanoTime`(v1) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1d3c34.  v6:= temp @kind wide;
  #L1d3c36.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d3c3c.  v2:= temp;
  #L1d3c3e.  if v2 == 0 then goto L1d3c60;
  #L1d3c42.  call temp:= `deadlineNanoTime`(v1) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1d3c48.  v8:= temp @kind wide;
  #L1d3c4a.  call temp:= `deadlineNanoTime`(v0) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1d3c50.  v10:= temp @kind wide;
  #L1d3c52.  call temp:= `min`(v8, v10) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1d3c58.  v8:= temp @kind wide;
  #L1d3c5a.  call temp:= `deadlineNanoTime`(v1, v8) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1d3c60.  call `write`(v3, v13, v14) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L1d3c66.  v13:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d3c6a.  call temp:= `timeout`(v1, v4, v13) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1d3c70.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d3c76.  v13:= temp;
  #L1d3c78.  if v13 == 0 then goto L1d3d02;
  #L1d3c7c.  call temp:= `deadlineNanoTime`(v1, v6) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1d3c82.  goto L1d3d02;
  #L1d3c84.  v13:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1d3c86.  v14:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d3c8a.  call temp:= `timeout`(v1, v4, v14) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1d3c90.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d3c96.  v14:= temp;
  #L1d3c98.  if v14 == 0 then goto L1d3ca2;
  #L1d3c9c.  call temp:= `deadlineNanoTime`(v1, v6) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1d3ca2.  throw v13;
  #L1d3ca4.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d3caa.  v2:= temp;
  #L1d3cac.  if v2 == 0 then goto L1d3cbe;
  #L1d3cb0.  call temp:= `deadlineNanoTime`(v0) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1d3cb6.  v6:= temp @kind wide;
  #L1d3cb8.  call temp:= `deadlineNanoTime`(v1, v6) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1d3cbe.  call `write`(v3, v13, v14) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L1d3cc4.  v13:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d3cc8.  call temp:= `timeout`(v1, v4, v13) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1d3cce.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d3cd4.  v13:= temp;
  #L1d3cd6.  if v13 == 0 then goto L1d3d02;
  #L1d3cda.  call temp:= `clearDeadline`(v1) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L1d3ce0.  goto L1d3d02;
  #L1d3ce2.  v13:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1d3ce4.  v14:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d3ce8.  call temp:= `timeout`(v1, v4, v14) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1d3cee.  call temp:= `hasDeadline`(v0) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1d3cf4.  v14:= temp;
  #L1d3cf6.  if v14 == 0 then goto L1d3d00;
  #L1d3cfa.  call temp:= `clearDeadline`(v1) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L1d3d00.  throw v13;
  #L1d3d02.  return @kind void;
  #L1d3d04.  v13:= new `java.io.IOException`;
  #L1d3d08.  v14:= "canceled" @kind object;
  #L1d3d0c.  call `<init>`(v13, v14) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d3d12.  throw v13;
  #L1d3d14.  v13:= "closed" @kind object;
  #L1d3d18.  v14:= new `java.lang.IllegalStateException`;
  #L1d3d1c.  call temp:= `toString`(v13) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d3d22.  v13:= temp @kind object;
  #L1d3d24.  call `<init>`(v14, v13) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d3d2a.  throw v14;
  #L1d3d2c.  v13:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1d3d2e.  @monitorexit v0
  #L1d3d30.  throw v13;
  catch `java.lang.Throwable` @[L1d3ac4..L1d3bd2] goto L1d3d2c;
  catch `java.lang.Throwable` @[L1d3c60..L1d3c66] goto L1d3c84;
  catch `java.lang.Throwable` @[L1d3cbe..L1d3cc4] goto L1d3ce2;
  catch `java.lang.Throwable` @[L1d3d04..L1d3d2c] goto L1d3d2c;
}
