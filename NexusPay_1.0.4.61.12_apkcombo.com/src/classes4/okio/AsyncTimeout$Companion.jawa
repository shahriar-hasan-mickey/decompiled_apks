record `okio.AsyncTimeout$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okio.AsyncTimeout$Companion` v0 @kind this) @signature `Lokio/AsyncTimeout$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1c9ab0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c9ab6.  return @kind void;
}
procedure `void` `<init>`(`okio.AsyncTimeout$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokio/AsyncTimeout$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1c9ac8.  call `<init>`(v0) @signature `Lokio/AsyncTimeout$Companion;.<init>:()V` @kind direct;
  #L1c9ace.  return @kind void;
}
procedure `boolean` `a`(`okio.AsyncTimeout$Companion` v4 @kind this, `okio.AsyncTimeout` v5 @kind object) @signature `Lokio/AsyncTimeout$Companion;.a:(Lokio/AsyncTimeout;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c993c.  v0:= constclass @type ^`okio.AsyncTimeout` @kind object;
  #L1c9940.  @monitorenter v0
  #L1c9942.  call temp:= `access$getInQueue$p`(v5) @signature `Lokio/AsyncTimeout;.access$getInQueue$p:(Lokio/AsyncTimeout;)Z` @kind static;
  #L1c9948.  v1:= temp;
  #L1c994a.  v2:= 0I;
  #L1c994c.  if v1 != 0 then goto L1c9954;
  #L1c9950.  @monitorexit v0
  #L1c9952.  return v2;
  #L1c9954.  call `access$setInQueue$p`(v5, v2) @signature `Lokio/AsyncTimeout;.access$setInQueue$p:(Lokio/AsyncTimeout;Z)V` @kind static;
  #L1c995a.  call temp:= `access$getHead$cp`() @signature `Lokio/AsyncTimeout;.access$getHead$cp:()Lokio/AsyncTimeout;` @kind static;
  #L1c9960.  v1:= temp @kind object;
  #L1c9962.  if v1 == 0 then goto L1c9996;
  #L1c9966.  call temp:= `access$getNext$p`(v1) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L1c996c.  v3:= temp @kind object;
  #L1c996e.  if v3 != v5 then goto L1c998c;
  #L1c9972.  call temp:= `access$getNext$p`(v5) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L1c9978.  v3:= temp @kind object;
  #L1c997a.  call `access$setNext$p`(v1, v3) @signature `Lokio/AsyncTimeout;.access$setNext$p:(Lokio/AsyncTimeout;Lokio/AsyncTimeout;)V` @kind static;
  #L1c9980.  v1:= 0I;
  #L1c9982.  call `access$setNext$p`(v5, v1) @signature `Lokio/AsyncTimeout;.access$setNext$p:(Lokio/AsyncTimeout;Lokio/AsyncTimeout;)V` @kind static;
  #L1c9988.  @monitorexit v0
  #L1c998a.  return v2;
  #L1c998c.  call temp:= `access$getNext$p`(v1) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L1c9992.  v1:= temp @kind object;
  #L1c9994.  goto L1c9962;
  #L1c9996.  v5:= 1I;
  #L1c9998.  @monitorexit v0
  #L1c999a.  return v5;
  #L1c999c.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c999e.  @monitorexit v0
  #L1c99a0.  throw v5;
  catch `java.lang.Throwable` @[L1c9942..L1c994a] goto L1c999c;
  catch `java.lang.Throwable` @[L1c9954..L1c9988] goto L1c999c;
  catch `java.lang.Throwable` @[L1c998c..L1c9994] goto L1c999c;
}
procedure `boolean` `access$cancelScheduledTimeout`(`okio.AsyncTimeout$Companion` v0 @kind object, `okio.AsyncTimeout` v1 @kind object) @signature `Lokio/AsyncTimeout$Companion;.access$cancelScheduledTimeout:(Lokio/AsyncTimeout$Companion;Lokio/AsyncTimeout;)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1c9920.  call temp:= `a`(v0, v1) @signature `Lokio/AsyncTimeout$Companion;.a:(Lokio/AsyncTimeout;)Z` @kind direct;
  #L1c9926.  v0:= temp;
  #L1c9928.  return v0;
}
procedure `void` `access$scheduleTimeout`(`okio.AsyncTimeout$Companion` v0 @kind object, `okio.AsyncTimeout` v1 @kind object, `long` v2 , `boolean` v4 ) @signature `Lokio/AsyncTimeout$Companion;.access$scheduleTimeout:(Lokio/AsyncTimeout$Companion;Lokio/AsyncTimeout;JZ)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1c9ae0.  call `b`(v0, v1, v2, v4) @signature `Lokio/AsyncTimeout$Companion;.b:(Lokio/AsyncTimeout;JZ)V` @kind direct;
  #L1c9ae6.  return @kind void;
}
procedure `void` `b`(`okio.AsyncTimeout$Companion` v6 @kind this, `okio.AsyncTimeout` v7 @kind object, `long` v8 , `boolean` v10 ) @signature `Lokio/AsyncTimeout$Companion;.b:(Lokio/AsyncTimeout;JZ)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1c9af8.  v0:= constclass @type ^`okio.AsyncTimeout` @kind object;
  #L1c9afc.  @monitorenter v0
  #L1c9afe.  call temp:= `access$getInQueue$p`(v7) @signature `Lokio/AsyncTimeout;.access$getInQueue$p:(Lokio/AsyncTimeout;)Z` @kind static;
  #L1c9b04.  v1:= temp;
  #L1c9b06.  v2:= 1I;
  #L1c9b08.  v1:= v1 ^~ v2 @kind int;
  #L1c9b0a.  if v1 == 0 then goto L1c9c20;
  #L1c9b0e.  call `access$setInQueue$p`(v7, v2) @signature `Lokio/AsyncTimeout;.access$setInQueue$p:(Lokio/AsyncTimeout;Z)V` @kind static;
  #L1c9b14.  call temp:= `access$getHead$cp`() @signature `Lokio/AsyncTimeout;.access$getHead$cp:()Lokio/AsyncTimeout;` @kind static;
  #L1c9b1a.  v1:= temp @kind object;
  #L1c9b1c.  if v1 != 0 then goto L1c9b40;
  #L1c9b20.  v1:= new `okio.AsyncTimeout`;
  #L1c9b24.  call `<init>`(v1) @signature `Lokio/AsyncTimeout;.<init>:()V` @kind direct;
  #L1c9b2a.  call `access$setHead$cp`(v1) @signature `Lokio/AsyncTimeout;.access$setHead$cp:(Lokio/AsyncTimeout;)V` @kind static;
  #L1c9b30.  v1:= new `okio.AsyncTimeout$a`;
  #L1c9b34.  call `<init>`(v1) @signature `Lokio/AsyncTimeout$a;.<init>:()V` @kind direct;
  #L1c9b3a.  call `start`(v1) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L1c9b40.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L1c9b46.  v1:= temp @kind wide;
  #L1c9b48.  v3:= 0L;
  #L1c9b4c.  v5:= lcmp(v8, v3);
  #L1c9b50.  if v5 == 0 then goto L1c9b74;
  #L1c9b54.  if v10 == 0 then goto L1c9b74;
  #L1c9b58.  call temp:= `deadlineNanoTime`(v7) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1c9b5e.  v3:= temp @kind wide;
  #L1c9b60.  v3:= v3 - v1 @kind long;
  #L1c9b62.  call temp:= `min`(v8, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1c9b68.  v8:= temp @kind wide;
  #L1c9b6a.  v8:= v8 + v1 @kind long;
  #L1c9b6c.  call `access$setTimeoutAt$p`(v7, v8) @signature `Lokio/AsyncTimeout;.access$setTimeoutAt$p:(Lokio/AsyncTimeout;J)V` @kind static;
  #L1c9b72.  goto L1c9b94;
  #L1c9b74.  if v5 == 0 then goto L1c9b82;
  #L1c9b78.  v8:= v8 + v1 @kind long;
  #L1c9b7a.  call `access$setTimeoutAt$p`(v7, v8) @signature `Lokio/AsyncTimeout;.access$setTimeoutAt$p:(Lokio/AsyncTimeout;J)V` @kind static;
  #L1c9b80.  goto L1c9b94;
  #L1c9b82.  if v10 == 0 then goto L1c9c14;
  #L1c9b86.  call temp:= `deadlineNanoTime`(v7) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1c9b8c.  v8:= temp @kind wide;
  #L1c9b8e.  call `access$setTimeoutAt$p`(v7, v8) @signature `Lokio/AsyncTimeout;.access$setTimeoutAt$p:(Lokio/AsyncTimeout;J)V` @kind static;
  #L1c9b94.  call temp:= `access$remainingNanos`(v7, v1) @signature `Lokio/AsyncTimeout;.access$remainingNanos:(Lokio/AsyncTimeout;J)J` @kind static;
  #L1c9b9a.  v8:= temp @kind wide;
  #L1c9b9c.  call temp:= `access$getHead$cp`() @signature `Lokio/AsyncTimeout;.access$getHead$cp:()Lokio/AsyncTimeout;` @kind static;
  #L1c9ba2.  v10:= temp @kind object;
  #L1c9ba4.  call `checkNotNull`(v10) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c9baa.  call temp:= `access$getNext$p`(v10) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L1c9bb0.  v3:= temp @kind object;
  #L1c9bb2.  if v3 == 0 then goto L1c9be6;
  #L1c9bb6.  call temp:= `access$getNext$p`(v10) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L1c9bbc.  v3:= temp @kind object;
  #L1c9bbe.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c9bc4.  call temp:= `access$remainingNanos`(v3, v1) @signature `Lokio/AsyncTimeout;.access$remainingNanos:(Lokio/AsyncTimeout;J)J` @kind static;
  #L1c9bca.  v3:= temp @kind wide;
  #L1c9bcc.  v5:= lcmp(v8, v3);
  #L1c9bd0.  if v5 >= 0 then goto L1c9bd6;
  #L1c9bd4.  goto L1c9be6;
  #L1c9bd6.  call temp:= `access$getNext$p`(v10) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L1c9bdc.  v10:= temp @kind object;
  #L1c9bde.  call `checkNotNull`(v10) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c9be4.  goto L1c9baa;
  #L1c9be6.  call temp:= `access$getNext$p`(v10) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L1c9bec.  v8:= temp @kind object;
  #L1c9bee.  call `access$setNext$p`(v7, v8) @signature `Lokio/AsyncTimeout;.access$setNext$p:(Lokio/AsyncTimeout;Lokio/AsyncTimeout;)V` @kind static;
  #L1c9bf4.  call `access$setNext$p`(v10, v7) @signature `Lokio/AsyncTimeout;.access$setNext$p:(Lokio/AsyncTimeout;Lokio/AsyncTimeout;)V` @kind static;
  #L1c9bfa.  call temp:= `access$getHead$cp`() @signature `Lokio/AsyncTimeout;.access$getHead$cp:()Lokio/AsyncTimeout;` @kind static;
  #L1c9c00.  v7:= temp @kind object;
  #L1c9c02.  if v10 != v7 then goto L1c9c0c;
  #L1c9c06.  call `notify`(v0) @signature `Ljava/lang/Object;.notify:()V` @kind virtual;
  #L1c9c0c.  v7:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1c9c10.  @monitorexit v0
  #L1c9c12.  return @kind void;
  #L1c9c14.  v7:= new `java.lang.AssertionError`;
  #L1c9c18.  call `<init>`(v7) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1c9c1e.  throw v7;
  #L1c9c20.  v7:= "Unbalanced enter/exit" @kind object;
  #L1c9c24.  v8:= new `java.lang.IllegalStateException`;
  #L1c9c28.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c9c2e.  v7:= temp @kind object;
  #L1c9c30.  call `<init>`(v8, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c9c36.  throw v8;
  #L1c9c38.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c9c3a.  @monitorexit v0
  #L1c9c3c.  throw v7;
  catch `java.lang.Throwable` @[L1c9afe..L1c9c10] goto L1c9c38;
  catch `java.lang.Throwable` @[L1c9c14..L1c9c38] goto L1c9c38;
}
procedure `okio.AsyncTimeout` `awaitTimeout$okio`(`okio.AsyncTimeout$Companion` v9 @kind this) @signature `Lokio/AsyncTimeout$Companion;.awaitTimeout$okio:()Lokio/AsyncTimeout;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1c99d0.  v0:= constclass @type ^`okio.AsyncTimeout` @kind object;
  #L1c99d4.  call temp:= `access$getHead$cp`() @signature `Lokio/AsyncTimeout;.access$getHead$cp:()Lokio/AsyncTimeout;` @kind static;
  #L1c99da.  v1:= temp @kind object;
  #L1c99dc.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c99e2.  call temp:= `access$getNext$p`(v1) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L1c99e8.  v1:= temp @kind object;
  #L1c99ea.  v2:= 0I;
  #L1c99ec.  if v1 != 0 then goto L1c9a44;
  #L1c99f0.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L1c99f6.  v3:= temp @kind wide;
  #L1c99f8.  call temp:= `access$getIDLE_TIMEOUT_MILLIS$cp`() @signature `Lokio/AsyncTimeout;.access$getIDLE_TIMEOUT_MILLIS$cp:()J` @kind static;
  #L1c99fe.  v5:= temp @kind wide;
  #L1c9a00.  call `wait`(v0, v5) @signature `Ljava/lang/Object;.wait:(J)V` @kind virtual;
  #L1c9a06.  call temp:= `access$getHead$cp`() @signature `Lokio/AsyncTimeout;.access$getHead$cp:()Lokio/AsyncTimeout;` @kind static;
  #L1c9a0c.  v0:= temp @kind object;
  #L1c9a0e.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c9a14.  call temp:= `access$getNext$p`(v0) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L1c9a1a.  v0:= temp @kind object;
  #L1c9a1c.  if v0 != 0 then goto L1c9a42;
  #L1c9a20.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L1c9a26.  v0:= temp @kind wide;
  #L1c9a28.  v0:= v0 - v3 @kind long;
  #L1c9a2a.  call temp:= `access$getIDLE_TIMEOUT_NANOS$cp`() @signature `Lokio/AsyncTimeout;.access$getIDLE_TIMEOUT_NANOS$cp:()J` @kind static;
  #L1c9a30.  v3:= temp @kind wide;
  #L1c9a32.  v5:= lcmp(v0, v3);
  #L1c9a36.  if v5 < 0 then goto L1c9a42;
  #L1c9a3a.  call temp:= `access$getHead$cp`() @signature `Lokio/AsyncTimeout;.access$getHead$cp:()Lokio/AsyncTimeout;` @kind static;
  #L1c9a40.  v2:= temp @kind object;
  #L1c9a42.  return v2 @kind object;
  #L1c9a44.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L1c9a4a.  v3:= temp @kind wide;
  #L1c9a4c.  call temp:= `access$remainingNanos`(v1, v3) @signature `Lokio/AsyncTimeout;.access$remainingNanos:(Lokio/AsyncTimeout;J)J` @kind static;
  #L1c9a52.  v3:= temp @kind wide;
  #L1c9a54.  v5:= 0L;
  #L1c9a58.  v7:= lcmp(v3, v5);
  #L1c9a5c.  if v7 <= 0 then goto L1c9a7a;
  #L1c9a60.  v5:= 1000000L;
  #L1c9a66.  v7:= v3 / v5 @kind long;
  #L1c9a6a.  v5:= v5 * v7 @kind long;
  #L1c9a6e.  v3:= v3 - v5 @kind long;
  #L1c9a70.  v1:= (`int`) v3 @kind l2i;
  #L1c9a72.  call `wait`(v0, v7, v1) @signature `Ljava/lang/Object;.wait:(JI)V` @kind virtual;
  #L1c9a78.  return v2 @kind object;
  #L1c9a7a.  call temp:= `access$getHead$cp`() @signature `Lokio/AsyncTimeout;.access$getHead$cp:()Lokio/AsyncTimeout;` @kind static;
  #L1c9a80.  v0:= temp @kind object;
  #L1c9a82.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c9a88.  call temp:= `access$getNext$p`(v1) @signature `Lokio/AsyncTimeout;.access$getNext$p:(Lokio/AsyncTimeout;)Lokio/AsyncTimeout;` @kind static;
  #L1c9a8e.  v3:= temp @kind object;
  #L1c9a90.  call `access$setNext$p`(v0, v3) @signature `Lokio/AsyncTimeout;.access$setNext$p:(Lokio/AsyncTimeout;Lokio/AsyncTimeout;)V` @kind static;
  #L1c9a96.  call `access$setNext$p`(v1, v2) @signature `Lokio/AsyncTimeout;.access$setNext$p:(Lokio/AsyncTimeout;Lokio/AsyncTimeout;)V` @kind static;
  #L1c9a9c.  return v1 @kind object;
}
