record `okio.internal._Utf8Kt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `byte`[] `commonAsUtf8ToByteArray`(`java.lang.String` v12 @kind object) @signature `Lokio/internal/_Utf8Kt;.commonAsUtf8ToByteArray:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1df850.  v0:= "$this$commonAsUtf8ToByteArray" @kind object;
  #L1df854.  call `checkNotNullParameter`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1df85a.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1df860.  v0:= temp;
  #L1df862.  v0:= v0 * 4;
  #L1df866.  v0:= new `byte`[v0];
  #L1df86a.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1df870.  v1:= temp;
  #L1df872.  v2:= 0I;
  #L1df874.  v3:= "java.util.Arrays.copyOf(this, newSize)" @kind object;
  #L1df878.  if v2 >= v1 then goto L1dfa42;
  #L1df87c.  call temp:= `charAt`(v12, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1df882.  v4:= temp;
  #L1df884.  v5:= 128I;
  #L1df888.  call temp:= `compare`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L1df88e.  v6:= temp;
  #L1df890.  if v6 < 0 then goto L1dfa34;
  #L1df894.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1df89a.  v1:= temp;
  #L1df89c.  v4:= v2;
  #L1df89e.  if v2 >= v1 then goto L1dfa24;
  #L1df8a2.  call temp:= `charAt`(v12, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1df8a8.  v6:= temp;
  #L1df8aa.  call temp:= `compare`(v6, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L1df8b0.  v7:= temp;
  #L1df8b2.  if v7 >= 0 then goto L1df8fc;
  #L1df8b6.  v6:= (`byte`) v6 @kind i2b;
  #L1df8b8.  v7:= v4 + 1;
  #L1df8bc.  v0[v4]:= v6 @kind byte;
  #L1df8c0.  v2:= v2 + 1;
  #L1df8c4.  if v2 >= v1 then goto L1df8f8;
  #L1df8c8.  call temp:= `charAt`(v12, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1df8ce.  v4:= temp;
  #L1df8d0.  call temp:= `compare`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L1df8d6.  v4:= temp;
  #L1df8d8.  if v4 >= 0 then goto L1df8f8;
  #L1df8dc.  v4:= v2 + 1;
  #L1df8e0.  call temp:= `charAt`(v12, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1df8e6.  v2:= temp;
  #L1df8e8.  v2:= (`byte`) v2 @kind i2b;
  #L1df8ea.  v6:= v7 + 1;
  #L1df8ee.  v0[v7]:= v2 @kind byte;
  #L1df8f2.  v2:= v4;
  #L1df8f4.  v7:= v6;
  #L1df8f6.  goto L1df8c4;
  #L1df8f8.  v4:= v7;
  #L1df8fa.  goto L1df89e;
  #L1df8fc.  v7:= 2048I;
  #L1df900.  call temp:= `compare`(v6, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L1df906.  v7:= temp;
  #L1df908.  if v7 >= 0 then goto L1df936;
  #L1df90c.  v7:= v6 ^> 6;
  #L1df910.  v7:= v7 ^| 192;
  #L1df914.  v7:= (`byte`) v7 @kind i2b;
  #L1df916.  v8:= v4 + 1;
  #L1df91a.  v0[v4]:= v7 @kind byte;
  #L1df91e.  v4:= v6 ^& 63;
  #L1df922.  v4:= v4 ^| v5 @kind int;
  #L1df924.  v4:= (`byte`) v4 @kind i2b;
  #L1df926.  v6:= v8 + 1;
  #L1df92a.  v0[v8]:= v4 @kind byte;
  #L1df92e.  v2:= v2 + 1;
  #L1df932.  v4:= v6;
  #L1df934.  goto L1df89e;
  #L1df936.  v7:= 55296I;
  #L1df93c.  v8:= 63I;
  #L1df940.  if v7 > v6 then goto L1df9ee;
  #L1df944.  v7:= 57343I;
  #L1df94a.  if v7 >= v6 then goto L1df950;
  #L1df94e.  goto L1df9ee;
  #L1df950.  v9:= 56319I;
  #L1df956.  call temp:= `compare`(v6, v9) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L1df95c.  v9:= temp;
  #L1df95e.  if v9 > 0 then goto L1df9e4;
  #L1df962.  v9:= v2 + 1;
  #L1df966.  if v1 <= v9 then goto L1df9e4;
  #L1df96a.  v10:= 56320I;
  #L1df970.  call temp:= `charAt`(v12, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1df976.  v11:= temp;
  #L1df978.  if v10 > v11 then goto L1df9e4;
  #L1df97c.  if v7 >= v11 then goto L1df982;
  #L1df980.  goto L1df9e4;
  #L1df982.  v6:= v6 ^< 10;
  #L1df986.  call temp:= `charAt`(v12, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1df98c.  v7:= temp;
  #L1df98e.  v6:= v6 + v7 @kind int;
  #L1df990.  v7:= -56613888I;
  #L1df996.  v6:= v6 + v7 @kind int;
  #L1df998.  v7:= v6 ^> 18;
  #L1df99c.  v7:= v7 ^| 240;
  #L1df9a0.  v7:= (`byte`) v7 @kind i2b;
  #L1df9a2.  v9:= v4 + 1;
  #L1df9a6.  v0[v4]:= v7 @kind byte;
  #L1df9aa.  v4:= v6 ^> 12;
  #L1df9ae.  v4:= v4 ^& v8 @kind int;
  #L1df9b0.  v4:= v4 ^| v5 @kind int;
  #L1df9b2.  v4:= (`byte`) v4 @kind i2b;
  #L1df9b4.  v7:= v9 + 1;
  #L1df9b8.  v0[v9]:= v4 @kind byte;
  #L1df9bc.  v4:= v6 ^> 6;
  #L1df9c0.  v4:= v4 ^& v8 @kind int;
  #L1df9c2.  v4:= v4 ^| v5 @kind int;
  #L1df9c4.  v4:= (`byte`) v4 @kind i2b;
  #L1df9c6.  v9:= v7 + 1;
  #L1df9ca.  v0[v7]:= v4 @kind byte;
  #L1df9ce.  v4:= v6 ^& 63;
  #L1df9d2.  v4:= v4 ^| v5 @kind int;
  #L1df9d4.  v4:= (`byte`) v4 @kind i2b;
  #L1df9d6.  v6:= v9 + 1;
  #L1df9da.  v0[v9]:= v4 @kind byte;
  #L1df9de.  v2:= v2 + 2;
  #L1df9e2.  goto L1df932;
  #L1df9e4.  v6:= v4 + 1;
  #L1df9e8.  v0[v4]:= v8 @kind byte;
  #L1df9ec.  goto L1df92e;
  #L1df9ee.  v7:= v6 ^> 12;
  #L1df9f2.  v7:= v7 ^| 224;
  #L1df9f6.  v7:= (`byte`) v7 @kind i2b;
  #L1df9f8.  v9:= v4 + 1;
  #L1df9fc.  v0[v4]:= v7 @kind byte;
  #L1dfa00.  v4:= v6 ^> 6;
  #L1dfa04.  v4:= v4 ^& v8 @kind int;
  #L1dfa06.  v4:= v4 ^| v5 @kind int;
  #L1dfa08.  v4:= (`byte`) v4 @kind i2b;
  #L1dfa0a.  v7:= v9 + 1;
  #L1dfa0e.  v0[v9]:= v4 @kind byte;
  #L1dfa12.  v4:= v6 ^& 63;
  #L1dfa16.  v4:= v4 ^| v5 @kind int;
  #L1dfa18.  v4:= (`byte`) v4 @kind i2b;
  #L1dfa1a.  v6:= v7 + 1;
  #L1dfa1e.  v0[v7]:= v4 @kind byte;
  #L1dfa22.  goto L1df92e;
  #L1dfa24.  call temp:= `copyOf`(v0, v4) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L1dfa2a.  v12:= temp @kind object;
  #L1dfa2c.  call `checkNotNullExpressionValue`(v12, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dfa32.  return v12 @kind object;
  #L1dfa34.  v3:= (`byte`) v4 @kind i2b;
  #L1dfa36.  v0[v2]:= v3 @kind byte;
  #L1dfa3a.  v2:= v2 + 1;
  #L1dfa3e.  goto L1df874;
  #L1dfa42.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1dfa48.  v12:= temp;
  #L1dfa4a.  call temp:= `copyOf`(v0, v12) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L1dfa50.  v12:= temp @kind object;
  #L1dfa52.  call `checkNotNullExpressionValue`(v12, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dfa58.  return v12 @kind object;
}
procedure `java.lang.String` `commonToUtf8String`(`byte`[] v16 @kind object, `int` v17 , `int` v18 ) @signature `Lokio/internal/_Utf8Kt;.commonToUtf8String:([BII)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L1dfa9c.  v0:= v16 @kind object;
  #L1dfaa0.  v1:= v17;
  #L1dfaa4.  v2:= v18;
  #L1dfaa8.  v3:= "$this$commonToUtf8String" @kind object;
  #L1dfaac.  call `checkNotNullParameter`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dfab2.  if v1 < 0 then goto L1dfe20;
  #L1dfab6.  v3:= length @variable v0;
  #L1dfab8.  if v2 > v3 then goto L1dfe20;
  #L1dfabc.  if v1 > v2 then goto L1dfe20;
  #L1dfac0.  v3:= v2 - v1 @kind int;
  #L1dfac4.  v3:= new `char`[v3];
  #L1dfac8.  v4:= 0I;
  #L1dfaca.  v5:= 0I;
  #L1dfacc.  if v1 >= v2 then goto L1dfe14;
  #L1dfad0.  v6:= v0[v1] @kind byte;
  #L1dfad4.  if v6 < 0 then goto L1dfb0e;
  #L1dfad8.  v6:= (`char`) v6 @kind i2c;
  #L1dfada.  v7:= v5 + 1;
  #L1dfade.  v3[v5]:= v6 @kind char;
  #L1dfae2.  v1:= v1 + 1;
  #L1dfae6.  if v1 >= v2 then goto L1dfb0a;
  #L1dfaea.  v5:= v0[v1] @kind byte;
  #L1dfaee.  if v5 < 0 then goto L1dfb0a;
  #L1dfaf2.  v5:= v1 + 1;
  #L1dfaf6.  v1:= v0[v1] @kind byte;
  #L1dfafa.  v1:= (`char`) v1 @kind i2c;
  #L1dfafc.  v6:= v7 + 1;
  #L1dfb00.  v3[v7]:= v1 @kind char;
  #L1dfb04.  v1:= v5;
  #L1dfb06.  v7:= v6;
  #L1dfb08.  goto L1dfae6;
  #L1dfb0a.  v5:= v7;
  #L1dfb0c.  goto L1dfacc;
  #L1dfb0e.  v7:= v6 ^> 5;
  #L1dfb12.  v8:= -2I;
  #L1dfb14.  v10:= 128I;
  #L1dfb18.  v11:= 65533I;
  #L1dfb1e.  if v7 != v8 then goto L1dfb90;
  #L1dfb22.  v6:= v1 + 1;
  #L1dfb26.  if v2 > v6 then goto L1dfb3c;
  #L1dfb2a.  v6:= (`char`) v11 @kind i2c;
  #L1dfb2c.  v7:= v5 + 1;
  #L1dfb30.  v3[v5]:= v6 @kind char;
  #L1dfb34.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1dfb38.  v9:= 1I;
  #L1dfb3a.  goto L1dfb8c;
  #L1dfb3c.  v7:= v0[v1] @kind byte;
  #L1dfb40.  v6:= v0[v6] @kind byte;
  #L1dfb44.  v8:= v6 ^& 192;
  #L1dfb48.  if v8 != v10 then goto L1dfb50;
  #L1dfb4c.  v8:= 1I;
  #L1dfb4e.  goto L1dfb52;
  #L1dfb50.  v8:= 0I;
  #L1dfb52.  if v8 != 0 then goto L1dfb62;
  #L1dfb56.  v6:= (`char`) v11 @kind i2c;
  #L1dfb58.  v7:= v5 + 1;
  #L1dfb5c.  v3[v5]:= v6 @kind char;
  #L1dfb60.  goto L1dfb34;
  #L1dfb62.  v6:= v6 ^~ 3968;
  #L1dfb66.  v7:= v7 ^< 6;
  #L1dfb6a.  v6:= v6 ^~ v7 @kind int;
  #L1dfb6c.  if v6 >= v10 then goto L1dfb7c;
  #L1dfb70.  v6:= (`char`) v11 @kind i2c;
  #L1dfb72.  v7:= v5 + 1;
  #L1dfb76.  v3[v5]:= v6 @kind char;
  #L1dfb7a.  goto L1dfb86;
  #L1dfb7c.  v6:= (`char`) v6 @kind i2c;
  #L1dfb7e.  v7:= v5 + 1;
  #L1dfb82.  v3[v5]:= v6 @kind char;
  #L1dfb86.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1dfb8a.  v9:= 2I;
  #L1dfb8c.  v1:= v1 + v9 @kind int;
  #L1dfb8e.  goto L1dfb0a;
  #L1dfb90.  v7:= v6 ^> 4;
  #L1dfb94.  v13:= 55296I;
  #L1dfb9a.  v14:= 57343I;
  #L1dfba0.  v15:= 3I;
  #L1dfba2.  if v7 != v8 then goto L1dfc82;
  #L1dfba6.  v6:= v1 + 2;
  #L1dfbaa.  if v2 > v6 then goto L1dfbdc;
  #L1dfbae.  v6:= (`char`) v11 @kind i2c;
  #L1dfbb0.  v7:= v5 + 1;
  #L1dfbb4.  v3[v5]:= v6 @kind char;
  #L1dfbb8.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1dfbbc.  v5:= v1 + 1;
  #L1dfbc0.  if v2 <= v5 then goto L1dfb38;
  #L1dfbc4.  v5:= v0[v5] @kind byte;
  #L1dfbc8.  v5:= v5 ^& 192;
  #L1dfbcc.  if v5 != v10 then goto L1dfbd4;
  #L1dfbd0.  v5:= 1I;
  #L1dfbd2.  goto L1dfbd6;
  #L1dfbd4.  v5:= 0I;
  #L1dfbd6.  if v5 != 0 then goto L1dfb8a;
  #L1dfbda.  goto L1dfb38;
  #L1dfbdc.  v7:= v0[v1] @kind byte;
  #L1dfbe0.  v8:= v1 + 1;
  #L1dfbe4.  v8:= v0[v8] @kind byte;
  #L1dfbe8.  v9:= v8 ^& 192;
  #L1dfbec.  if v9 != v10 then goto L1dfbf4;
  #L1dfbf0.  v9:= 1I;
  #L1dfbf2.  goto L1dfbf6;
  #L1dfbf4.  v9:= 0I;
  #L1dfbf6.  if v9 != 0 then goto L1dfc0a;
  #L1dfbfa.  v6:= (`char`) v11 @kind i2c;
  #L1dfbfc.  v7:= v5 + 1;
  #L1dfc00.  v3[v5]:= v6 @kind char;
  #L1dfc04.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1dfc08.  goto L1dfb38;
  #L1dfc0a.  v6:= v0[v6] @kind byte;
  #L1dfc0e.  v9:= v6 ^& 192;
  #L1dfc12.  if v9 != v10 then goto L1dfc1a;
  #L1dfc16.  v12:= 1I;
  #L1dfc18.  goto L1dfc1c;
  #L1dfc1a.  v12:= 0I;
  #L1dfc1c.  if v12 != 0 then goto L1dfc30;
  #L1dfc20.  v6:= (`char`) v11 @kind i2c;
  #L1dfc22.  v7:= v5 + 1;
  #L1dfc26.  v3[v5]:= v6 @kind char;
  #L1dfc2a.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1dfc2e.  goto L1dfb8a;
  #L1dfc30.  v9:= -123008I;
  #L1dfc36.  v6:= v6 ^~ v9 @kind int;
  #L1dfc38.  v8:= v8 ^< 6;
  #L1dfc3c.  v6:= v6 ^~ v8 @kind int;
  #L1dfc3e.  v7:= v7 ^< 12;
  #L1dfc42.  v6:= v6 ^~ v7 @kind int;
  #L1dfc44.  v7:= 2048I;
  #L1dfc48.  if v6 >= v7 then goto L1dfc5c;
  #L1dfc4c.  v6:= (`char`) v11 @kind i2c;
  #L1dfc4e.  v7:= v5 + 1;
  #L1dfc52.  v3[v5]:= v6 @kind char;
  #L1dfc56.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1dfc5a.  goto L1dfc7e;
  #L1dfc5c.  if v13 <= v6 then goto L1dfc62;
  #L1dfc60.  goto L1dfc72;
  #L1dfc62.  if v14 < v6 then goto L1dfc72;
  #L1dfc66.  v6:= (`char`) v11 @kind i2c;
  #L1dfc68.  v7:= v5 + 1;
  #L1dfc6c.  v3[v5]:= v6 @kind char;
  #L1dfc70.  goto L1dfc56;
  #L1dfc72.  v6:= (`char`) v6 @kind i2c;
  #L1dfc74.  v7:= v5 + 1;
  #L1dfc78.  v3[v5]:= v6 @kind char;
  #L1dfc7c.  goto L1dfc56;
  #L1dfc7e.  v9:= 3I;
  #L1dfc80.  goto L1dfb8c;
  #L1dfc82.  v6:= v6 ^> 3;
  #L1dfc86.  if v6 != v8 then goto L1dfe02;
  #L1dfc8a.  v6:= v1 + 3;
  #L1dfc8e.  if v2 > v6 then goto L1dfcf0;
  #L1dfc92.  v6:= v5 + 1;
  #L1dfc96.  v3[v5]:= v11 @kind char;
  #L1dfc9a.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1dfc9e.  v5:= v1 + 1;
  #L1dfca2.  if v2 <= v5 then goto L1dfcea;
  #L1dfca6.  v5:= v0[v5] @kind byte;
  #L1dfcaa.  v5:= v5 ^& 192;
  #L1dfcae.  if v5 != v10 then goto L1dfcb6;
  #L1dfcb2.  v5:= 1I;
  #L1dfcb4.  goto L1dfcb8;
  #L1dfcb6.  v5:= 0I;
  #L1dfcb8.  if v5 != 0 then goto L1dfcbe;
  #L1dfcbc.  goto L1dfcea;
  #L1dfcbe.  v5:= v1 + 2;
  #L1dfcc2.  if v2 <= v5 then goto L1dfce4;
  #L1dfcc6.  v5:= v0[v5] @kind byte;
  #L1dfcca.  v5:= v5 ^& 192;
  #L1dfcce.  if v5 != v10 then goto L1dfcd6;
  #L1dfcd2.  v12:= 1I;
  #L1dfcd4.  goto L1dfcd8;
  #L1dfcd6.  v12:= 0I;
  #L1dfcd8.  if v12 != 0 then goto L1dfcde;
  #L1dfcdc.  goto L1dfce4;
  #L1dfcde.  v9:= 3I;
  #L1dfce0.  goto L1dfdfe;
  #L1dfce4.  v9:= 2I;
  #L1dfce6.  goto L1dfdfe;
  #L1dfcea.  v9:= 1I;
  #L1dfcec.  goto L1dfdfe;
  #L1dfcf0.  v7:= v0[v1] @kind byte;
  #L1dfcf4.  v8:= v1 + 1;
  #L1dfcf8.  v8:= v0[v8] @kind byte;
  #L1dfcfc.  v9:= v8 ^& 192;
  #L1dfd00.  if v9 != v10 then goto L1dfd08;
  #L1dfd04.  v9:= 1I;
  #L1dfd06.  goto L1dfd0a;
  #L1dfd08.  v9:= 0I;
  #L1dfd0a.  if v9 != 0 then goto L1dfd1c;
  #L1dfd0e.  v6:= v5 + 1;
  #L1dfd12.  v3[v5]:= v11 @kind char;
  #L1dfd16.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1dfd1a.  goto L1dfcea;
  #L1dfd1c.  v9:= v1 + 2;
  #L1dfd20.  v9:= v0[v9] @kind byte;
  #L1dfd24.  v12:= v9 ^& 192;
  #L1dfd28.  if v12 != v10 then goto L1dfd30;
  #L1dfd2c.  v12:= 1I;
  #L1dfd2e.  goto L1dfd32;
  #L1dfd30.  v12:= 0I;
  #L1dfd32.  if v12 != 0 then goto L1dfd44;
  #L1dfd36.  v6:= v5 + 1;
  #L1dfd3a.  v3[v5]:= v11 @kind char;
  #L1dfd3e.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1dfd42.  goto L1dfce4;
  #L1dfd44.  v6:= v0[v6] @kind byte;
  #L1dfd48.  v12:= v6 ^& 192;
  #L1dfd4c.  if v12 != v10 then goto L1dfd54;
  #L1dfd50.  v12:= 1I;
  #L1dfd52.  goto L1dfd56;
  #L1dfd54.  v12:= 0I;
  #L1dfd56.  if v12 != 0 then goto L1dfd68;
  #L1dfd5a.  v6:= v5 + 1;
  #L1dfd5e.  v3[v5]:= v11 @kind char;
  #L1dfd62.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1dfd66.  goto L1dfcde;
  #L1dfd68.  v10:= 3678080I;
  #L1dfd6e.  v6:= v6 ^~ v10 @kind int;
  #L1dfd70.  v9:= v9 ^< 6;
  #L1dfd74.  v6:= v6 ^~ v9 @kind int;
  #L1dfd76.  v8:= v8 ^< 12;
  #L1dfd7a.  v6:= v6 ^~ v8 @kind int;
  #L1dfd7c.  v7:= v7 ^< 18;
  #L1dfd80.  v6:= v6 ^~ v7 @kind int;
  #L1dfd82.  v7:= 1114111I;
  #L1dfd88.  if v6 <= v7 then goto L1dfd9a;
  #L1dfd8c.  v6:= v5 + 1;
  #L1dfd90.  v3[v5]:= v11 @kind char;
  #L1dfd94.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1dfd98.  goto L1dfdfc;
  #L1dfd9a.  if v13 <= v6 then goto L1dfda0;
  #L1dfd9e.  goto L1dfdae;
  #L1dfda0.  if v14 < v6 then goto L1dfdae;
  #L1dfda4.  v6:= v5 + 1;
  #L1dfda8.  v3[v5]:= v11 @kind char;
  #L1dfdac.  goto L1dfd94;
  #L1dfdae.  v7:= 65536I;
  #L1dfdb2.  if v6 >= v7 then goto L1dfdc0;
  #L1dfdb6.  v6:= v5 + 1;
  #L1dfdba.  v3[v5]:= v11 @kind char;
  #L1dfdbe.  goto L1dfd94;
  #L1dfdc0.  if v6 == v11 then goto L1dfdf2;
  #L1dfdc4.  v7:= v6 ^>> 10;
  #L1dfdc8.  v8:= 55232I;
  #L1dfdce.  v7:= v7 + v8 @kind int;
  #L1dfdd0.  v7:= (`char`) v7 @kind i2c;
  #L1dfdd2.  v8:= v5 + 1;
  #L1dfdd6.  v3[v5]:= v7 @kind char;
  #L1dfdda.  v5:= v6 ^& 1023;
  #L1dfdde.  v6:= 56320I;
  #L1dfde4.  v5:= v5 + v6 @kind int;
  #L1dfde6.  v5:= (`char`) v5 @kind i2c;
  #L1dfde8.  v6:= v8 + 1;
  #L1dfdec.  v3[v8]:= v5 @kind char;
  #L1dfdf0.  goto L1dfd94;
  #L1dfdf2.  v6:= v5 + 1;
  #L1dfdf6.  v3[v5]:= v11 @kind char;
  #L1dfdfa.  goto L1dfd94;
  #L1dfdfc.  v9:= 4I;
  #L1dfdfe.  v1:= v1 + v9 @kind int;
  #L1dfe00.  goto L1dfe0e;
  #L1dfe02.  v6:= v5 + 1;
  #L1dfe06.  v3[v5]:= v11 @kind char;
  #L1dfe0a.  v1:= v1 + 1;
  #L1dfe0e.  v5:= v6;
  #L1dfe10.  goto L1dfacc;
  #L1dfe14.  v0:= new `java.lang.String`;
  #L1dfe18.  call `<init>`(v0, v3, v4, v5) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L1dfe1e.  return v0 @kind object;
  #L1dfe20.  v3:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1dfe24.  v4:= new `java.lang.StringBuilder`;
  #L1dfe28.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dfe2e.  v5:= "size=" @kind object;
  #L1dfe32.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dfe38.  v0:= length @variable v0;
  #L1dfe3a.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dfe40.  v0:= " beginIndex=" @kind object;
  #L1dfe44.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dfe4a.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dfe50.  v0:= " endIndex=" @kind object;
  #L1dfe54.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dfe5a.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dfe60.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dfe66.  v0:= temp @kind object;
  #L1dfe68.  call `<init>`(v3, v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dfe6e.  throw v3;
}
procedure `java.lang.String` `commonToUtf8String$default`(`byte`[] v0 @kind object, `int` v1 , `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokio/internal/_Utf8Kt;.commonToUtf8String$default:([BIIILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1dfa6c.  v4:= v3 ^& 1;
  #L1dfa70.  if v4 == 0 then goto L1dfa76;
  #L1dfa74.  v1:= 0I;
  #L1dfa76.  v3:= v3 ^& 2;
  #L1dfa7a.  if v3 == 0 then goto L1dfa80;
  #L1dfa7e.  v2:= length @variable v0;
  #L1dfa80.  call temp:= `commonToUtf8String`(v0, v1, v2) @signature `Lokio/internal/_Utf8Kt;.commonToUtf8String:([BII)Ljava/lang/String;` @kind static;
  #L1dfa86.  v0:= temp @kind object;
  #L1dfa88.  return v0 @kind object;
}
