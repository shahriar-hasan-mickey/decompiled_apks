record `okio.internal.ByteStringKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `char`[] `@@okio.internal.ByteStringKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/internal/ByteStringKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1dd598.  v0:= 16I;
  #L1dd59c.  v0:= new `char`[v0];
  #L1dd5a0.  goto L1dd5ac;
  #L1dd5a6.  `@@okio.internal.ByteStringKt.a` @type ^`char`[] := v0 @kind object;
  #L1dd5aa.  return @kind void;
  #L1dd5ac.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 97I, 98I, 99I, 100I, 101I, 102I) @kind object;
  #L1dd5d3.  goto L1dd5a6;
}
procedure `int` `a`(`byte`[] v19 @kind object, `int` v20 ) @signature `Lokio/internal/ByteStringKt;.a:([BI)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L1dc7bc.  v0:= v19 @kind object;
  #L1dc7c0.  v1:= v20;
  #L1dc7c4.  v2:= length @variable v0;
  #L1dc7c6.  v4:= 0I;
  #L1dc7c8.  v5:= 0I;
  #L1dc7ca.  v6:= 0I;
  #L1dc7cc.  if v4 >= v2 then goto L1dcb76;
  #L1dc7d0.  v7:= v0[v4] @kind byte;
  #L1dc7d4.  v8:= 127I;
  #L1dc7d8.  v9:= 159I;
  #L1dc7dc.  v10:= 31I;
  #L1dc7e0.  v11:= 13I;
  #L1dc7e4.  v12:= 65533I;
  #L1dc7ea.  v13:= 10I;
  #L1dc7ee.  v14:= 65536I;
  #L1dc7f2.  v16:= -1I;
  #L1dc7f6.  v17:= 1I;
  #L1dc7fa.  if v7 < 0 then goto L1dc89e;
  #L1dc7fe.  v18:= v6 + 1;
  #L1dc802.  if v6 != v1 then goto L1dc808;
  #L1dc806.  return v5;
  #L1dc808.  if v7 == v13 then goto L1dc82c;
  #L1dc80c.  if v7 == v11 then goto L1dc82c;
  #L1dc810.  if v7 < 0 then goto L1dc818;
  #L1dc814.  if v10 >= v7 then goto L1dc822;
  #L1dc818.  if v8 <= v7 then goto L1dc81e;
  #L1dc81c.  goto L1dc826;
  #L1dc81e.  if v9 < v7 then goto L1dc826;
  #L1dc822.  v6:= 1I;
  #L1dc824.  goto L1dc828;
  #L1dc826.  v6:= 0I;
  #L1dc828.  if v6 != 0 then goto L1dc830;
  #L1dc82c.  if v7 != v12 then goto L1dc832;
  #L1dc830.  return v16;
  #L1dc832.  if v7 >= v14 then goto L1dc83a;
  #L1dc836.  v6:= 1I;
  #L1dc838.  goto L1dc83c;
  #L1dc83a.  v6:= 2I;
  #L1dc83c.  v5:= v5 + v6 @kind int;
  #L1dc83e.  v4:= v4 + 1;
  #L1dc842.  v6:= v18;
  #L1dc846.  if v4 >= v2 then goto L1dc7cc;
  #L1dc84a.  v7:= v0[v4] @kind byte;
  #L1dc84e.  if v7 < 0 then goto L1dc7cc;
  #L1dc852.  v7:= v4 + 1;
  #L1dc856.  v4:= v0[v4] @kind byte;
  #L1dc85a.  v18:= v6 + 1;
  #L1dc85e.  if v6 != v1 then goto L1dc864;
  #L1dc862.  return v5;
  #L1dc864.  if v4 == v13 then goto L1dc888;
  #L1dc868.  if v4 == v11 then goto L1dc888;
  #L1dc86c.  if v4 < 0 then goto L1dc874;
  #L1dc870.  if v10 >= v4 then goto L1dc87e;
  #L1dc874.  if v8 <= v4 then goto L1dc87a;
  #L1dc878.  goto L1dc882;
  #L1dc87a.  if v9 < v4 then goto L1dc882;
  #L1dc87e.  v6:= 1I;
  #L1dc880.  goto L1dc884;
  #L1dc882.  v6:= 0I;
  #L1dc884.  if v6 != 0 then goto L1dc88c;
  #L1dc888.  if v4 != v12 then goto L1dc88e;
  #L1dc88c.  return v16;
  #L1dc88e.  if v4 >= v14 then goto L1dc896;
  #L1dc892.  v4:= 1I;
  #L1dc894.  goto L1dc898;
  #L1dc896.  v4:= 2I;
  #L1dc898.  v5:= v5 + v4 @kind int;
  #L1dc89a.  v4:= v7;
  #L1dc89c.  goto L1dc842;
  #L1dc89e.  v3:= v7 ^> 5;
  #L1dc8a2.  v15:= -2I;
  #L1dc8a4.  v14:= 128I;
  #L1dc8a8.  if v3 != v15 then goto L1dc946;
  #L1dc8ac.  v3:= v4 + 1;
  #L1dc8b0.  if v2 > v3 then goto L1dc8bc;
  #L1dc8b4.  if v6 != v1 then goto L1dc8ba;
  #L1dc8b8.  return v5;
  #L1dc8ba.  return v16;
  #L1dc8bc.  v7:= v0[v4] @kind byte;
  #L1dc8c0.  v3:= v0[v3] @kind byte;
  #L1dc8c4.  v15:= v3 ^& 192;
  #L1dc8c8.  if v15 != v14 then goto L1dc8d0;
  #L1dc8cc.  v15:= 1I;
  #L1dc8ce.  goto L1dc8d2;
  #L1dc8d0.  v15:= 0I;
  #L1dc8d2.  if v15 != 0 then goto L1dc8de;
  #L1dc8d6.  if v6 != v1 then goto L1dc8dc;
  #L1dc8da.  return v5;
  #L1dc8dc.  return v16;
  #L1dc8de.  v3:= v3 ^~ 3968;
  #L1dc8e2.  v7:= v7 ^< 6;
  #L1dc8e6.  v3:= v3 ^~ v7 @kind int;
  #L1dc8e8.  if v3 >= v14 then goto L1dc8f4;
  #L1dc8ec.  if v6 != v1 then goto L1dc8f2;
  #L1dc8f0.  return v5;
  #L1dc8f2.  return v16;
  #L1dc8f4.  v7:= v6 + 1;
  #L1dc8f8.  if v6 != v1 then goto L1dc8fe;
  #L1dc8fc.  return v5;
  #L1dc8fe.  if v3 == v13 then goto L1dc922;
  #L1dc902.  if v3 == v11 then goto L1dc922;
  #L1dc906.  if v3 < 0 then goto L1dc90e;
  #L1dc90a.  if v10 >= v3 then goto L1dc918;
  #L1dc90e.  if v8 <= v3 then goto L1dc914;
  #L1dc912.  goto L1dc91c;
  #L1dc914.  if v9 < v3 then goto L1dc91c;
  #L1dc918.  v6:= 1I;
  #L1dc91a.  goto L1dc91e;
  #L1dc91c.  v6:= 0I;
  #L1dc91e.  if v6 != 0 then goto L1dc926;
  #L1dc922.  if v3 != v12 then goto L1dc928;
  #L1dc926.  return v16;
  #L1dc928.  v6:= 65536I;
  #L1dc92c.  if v3 >= v6 then goto L1dc934;
  #L1dc930.  v15:= 1I;
  #L1dc932.  goto L1dc936;
  #L1dc934.  v15:= 2I;
  #L1dc936.  v5:= v5 + v15 @kind int;
  #L1dc938.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1dc93c.  v4:= v4 + 2;
  #L1dc940.  v6:= v7;
  #L1dc942.  goto L1dc7cc;
  #L1dc946.  v3:= v7 ^> 4;
  #L1dc94a.  v12:= 55296I;
  #L1dc950.  v9:= 57343I;
  #L1dc956.  if v3 != v15 then goto L1dca40;
  #L1dc95a.  v3:= v4 + 2;
  #L1dc95e.  if v2 > v3 then goto L1dc96a;
  #L1dc962.  if v6 != v1 then goto L1dc968;
  #L1dc966.  return v5;
  #L1dc968.  return v16;
  #L1dc96a.  v7:= v0[v4] @kind byte;
  #L1dc96e.  v15:= v4 + 1;
  #L1dc972.  v15:= v0[v15] @kind byte;
  #L1dc976.  v8:= v15 ^& 192;
  #L1dc97a.  if v8 != v14 then goto L1dc982;
  #L1dc97e.  v8:= 1I;
  #L1dc980.  goto L1dc984;
  #L1dc982.  v8:= 0I;
  #L1dc984.  if v8 != 0 then goto L1dc990;
  #L1dc988.  if v6 != v1 then goto L1dc98e;
  #L1dc98c.  return v5;
  #L1dc98e.  return v16;
  #L1dc990.  v3:= v0[v3] @kind byte;
  #L1dc994.  v8:= v3 ^& 192;
  #L1dc998.  if v8 != v14 then goto L1dc9a0;
  #L1dc99c.  v8:= 1I;
  #L1dc99e.  goto L1dc9a2;
  #L1dc9a0.  v8:= 0I;
  #L1dc9a2.  if v8 != 0 then goto L1dc9ae;
  #L1dc9a6.  if v6 != v1 then goto L1dc9ac;
  #L1dc9aa.  return v5;
  #L1dc9ac.  return v16;
  #L1dc9ae.  v8:= -123008I;
  #L1dc9b4.  v3:= v3 ^~ v8 @kind int;
  #L1dc9b6.  v8:= v15 ^< 6;
  #L1dc9ba.  v3:= v3 ^~ v8 @kind int;
  #L1dc9bc.  v7:= v7 ^< 12;
  #L1dc9c0.  v3:= v3 ^~ v7 @kind int;
  #L1dc9c2.  v7:= 2048I;
  #L1dc9c6.  if v3 >= v7 then goto L1dc9d2;
  #L1dc9ca.  if v6 != v1 then goto L1dc9d0;
  #L1dc9ce.  return v5;
  #L1dc9d0.  return v16;
  #L1dc9d2.  if v12 <= v3 then goto L1dc9d8;
  #L1dc9d6.  goto L1dc9e4;
  #L1dc9d8.  if v9 < v3 then goto L1dc9e4;
  #L1dc9dc.  if v6 != v1 then goto L1dc9e2;
  #L1dc9e0.  return v5;
  #L1dc9e2.  return v16;
  #L1dc9e4.  v7:= v6 + 1;
  #L1dc9e8.  if v6 != v1 then goto L1dc9ee;
  #L1dc9ec.  return v5;
  #L1dc9ee.  if v3 == v13 then goto L1dca1a;
  #L1dc9f2.  if v3 == v11 then goto L1dca1a;
  #L1dc9f6.  if v3 < 0 then goto L1dc9fe;
  #L1dc9fa.  if v10 >= v3 then goto L1dca10;
  #L1dc9fe.  v6:= 127I;
  #L1dca02.  if v6 <= v3 then goto L1dca08;
  #L1dca06.  goto L1dca14;
  #L1dca08.  v6:= 159I;
  #L1dca0c.  if v6 < v3 then goto L1dca14;
  #L1dca10.  v6:= 1I;
  #L1dca12.  goto L1dca16;
  #L1dca14.  v6:= 0I;
  #L1dca16.  if v6 != 0 then goto L1dca24;
  #L1dca1a.  v6:= 65533I;
  #L1dca20.  if v3 != v6 then goto L1dca26;
  #L1dca24.  return v16;
  #L1dca26.  v6:= 65536I;
  #L1dca2a.  if v3 >= v6 then goto L1dca32;
  #L1dca2e.  v15:= 1I;
  #L1dca30.  goto L1dca34;
  #L1dca32.  v15:= 2I;
  #L1dca34.  v5:= v5 + v15 @kind int;
  #L1dca36.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1dca3a.  v4:= v4 + 3;
  #L1dca3e.  goto L1dc940;
  #L1dca40.  v3:= v7 ^> 3;
  #L1dca44.  if v3 != v15 then goto L1dcb6e;
  #L1dca48.  v3:= v4 + 3;
  #L1dca4c.  if v2 > v3 then goto L1dca58;
  #L1dca50.  if v6 != v1 then goto L1dca56;
  #L1dca54.  return v5;
  #L1dca56.  return v16;
  #L1dca58.  v7:= v0[v4] @kind byte;
  #L1dca5c.  v8:= v4 + 1;
  #L1dca60.  v8:= v0[v8] @kind byte;
  #L1dca64.  v15:= v8 ^& 192;
  #L1dca68.  if v15 != v14 then goto L1dca70;
  #L1dca6c.  v15:= 1I;
  #L1dca6e.  goto L1dca72;
  #L1dca70.  v15:= 0I;
  #L1dca72.  if v15 != 0 then goto L1dca7e;
  #L1dca76.  if v6 != v1 then goto L1dca7c;
  #L1dca7a.  return v5;
  #L1dca7c.  return v16;
  #L1dca7e.  v15:= v4 + 2;
  #L1dca82.  v15:= v0[v15] @kind byte;
  #L1dca86.  v10:= v15 ^& 192;
  #L1dca8a.  if v10 != v14 then goto L1dca92;
  #L1dca8e.  v10:= 1I;
  #L1dca90.  goto L1dca94;
  #L1dca92.  v10:= 0I;
  #L1dca94.  if v10 != 0 then goto L1dcaa0;
  #L1dca98.  if v6 != v1 then goto L1dca9e;
  #L1dca9c.  return v5;
  #L1dca9e.  return v16;
  #L1dcaa0.  v3:= v0[v3] @kind byte;
  #L1dcaa4.  v10:= v3 ^& 192;
  #L1dcaa8.  if v10 != v14 then goto L1dcab0;
  #L1dcaac.  v10:= 1I;
  #L1dcaae.  goto L1dcab2;
  #L1dcab0.  v10:= 0I;
  #L1dcab2.  if v10 != 0 then goto L1dcabe;
  #L1dcab6.  if v6 != v1 then goto L1dcabc;
  #L1dcaba.  return v5;
  #L1dcabc.  return v16;
  #L1dcabe.  v10:= 3678080I;
  #L1dcac4.  v3:= v3 ^~ v10 @kind int;
  #L1dcac6.  v10:= v15 ^< 6;
  #L1dcaca.  v3:= v3 ^~ v10 @kind int;
  #L1dcacc.  v8:= v8 ^< 12;
  #L1dcad0.  v3:= v3 ^~ v8 @kind int;
  #L1dcad2.  v7:= v7 ^< 18;
  #L1dcad6.  v3:= v3 ^~ v7 @kind int;
  #L1dcad8.  v7:= 1114111I;
  #L1dcade.  if v3 <= v7 then goto L1dcaea;
  #L1dcae2.  if v6 != v1 then goto L1dcae8;
  #L1dcae6.  return v5;
  #L1dcae8.  return v16;
  #L1dcaea.  if v12 <= v3 then goto L1dcaf0;
  #L1dcaee.  goto L1dcafc;
  #L1dcaf0.  if v9 < v3 then goto L1dcafc;
  #L1dcaf4.  if v6 != v1 then goto L1dcafa;
  #L1dcaf8.  return v5;
  #L1dcafa.  return v16;
  #L1dcafc.  v7:= 65536I;
  #L1dcb00.  if v3 >= v7 then goto L1dcb0c;
  #L1dcb04.  if v6 != v1 then goto L1dcb0a;
  #L1dcb08.  return v5;
  #L1dcb0a.  return v16;
  #L1dcb0c.  v7:= v6 + 1;
  #L1dcb10.  if v6 != v1 then goto L1dcb16;
  #L1dcb14.  return v5;
  #L1dcb16.  if v3 == v13 then goto L1dcb46;
  #L1dcb1a.  if v3 == v11 then goto L1dcb46;
  #L1dcb1e.  if v3 < 0 then goto L1dcb2a;
  #L1dcb22.  v6:= 31I;
  #L1dcb26.  if v6 >= v3 then goto L1dcb3c;
  #L1dcb2a.  v6:= 127I;
  #L1dcb2e.  if v6 <= v3 then goto L1dcb34;
  #L1dcb32.  goto L1dcb40;
  #L1dcb34.  v6:= 159I;
  #L1dcb38.  if v6 < v3 then goto L1dcb40;
  #L1dcb3c.  v6:= 1I;
  #L1dcb3e.  goto L1dcb42;
  #L1dcb40.  v6:= 0I;
  #L1dcb42.  if v6 != 0 then goto L1dcb50;
  #L1dcb46.  v6:= 65533I;
  #L1dcb4c.  if v3 != v6 then goto L1dcb52;
  #L1dcb50.  return v16;
  #L1dcb52.  v6:= 65536I;
  #L1dcb56.  if v3 >= v6 then goto L1dcb5e;
  #L1dcb5a.  v15:= 1I;
  #L1dcb5c.  goto L1dcb60;
  #L1dcb5e.  v15:= 2I;
  #L1dcb60.  v5:= v5 + v15 @kind int;
  #L1dcb62.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1dcb66.  v4:= v4 + 4;
  #L1dcb6a.  goto L1dc940;
  #L1dcb6e.  if v6 != v1 then goto L1dcb74;
  #L1dcb72.  return v5;
  #L1dcb74.  return v16;
  #L1dcb76.  return v5;
}
procedure `int` `access$codePointIndexToCharIndex`(`byte`[] v0 @kind object, `int` v1 ) @signature `Lokio/internal/ByteStringKt;.access$codePointIndexToCharIndex:([BI)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1dc784.  call temp:= `a`(v0, v1) @signature `Lokio/internal/ByteStringKt;.a:([BI)I` @kind static;
  #L1dc78a.  v0:= temp;
  #L1dc78c.  return v0;
}
procedure `int` `access$decodeHexDigit`(`char` v0 ) @signature `Lokio/internal/ByteStringKt;.access$decodeHexDigit:(C)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1dc7a0.  call temp:= `b`(v0) @signature `Lokio/internal/ByteStringKt;.b:(C)I` @kind static;
  #L1dc7a6.  v0:= temp;
  #L1dc7a8.  return v0;
}
procedure `int` `b`(`char` v3 ) @signature `Lokio/internal/ByteStringKt;.b:(C)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1dcd78.  v0:= 48I;
  #L1dcd7c.  if v0 <= v3 then goto L1dcd82;
  #L1dcd80.  goto L1dcd8e;
  #L1dcd82.  v1:= 57I;
  #L1dcd86.  if v1 < v3 then goto L1dcd8e;
  #L1dcd8a.  v3:= v3 - v0 @kind int;
  #L1dcd8c.  goto L1dcdba;
  #L1dcd8e.  v0:= 102I;
  #L1dcd92.  v1:= 97I;
  #L1dcd96.  if v1 <= v3 then goto L1dcd9c;
  #L1dcd9a.  goto L1dcda8;
  #L1dcd9c.  if v0 < v3 then goto L1dcda8;
  #L1dcda0.  v3:= v3 - v1 @kind int;
  #L1dcda2.  v3:= v3 + 10;
  #L1dcda6.  goto L1dcdba;
  #L1dcda8.  v0:= 70I;
  #L1dcdac.  v1:= 65I;
  #L1dcdb0.  if v1 > v3 then goto L1dcdbc;
  #L1dcdb4.  if v0 < v3 then goto L1dcdbc;
  #L1dcdb8.  goto L1dcda0;
  #L1dcdba.  return v3;
  #L1dcdbc.  v0:= new `java.lang.IllegalArgumentException`;
  #L1dcdc0.  v1:= new `java.lang.StringBuilder`;
  #L1dcdc4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dcdca.  v2:= "Unexpected hex digit: " @kind object;
  #L1dcdce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dcdd4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dcdda.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dcde0.  v3:= temp @kind object;
  #L1dcde2.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dcde8.  throw v0;
}
procedure `java.lang.String` `commonBase64`(`okio.ByteString` v2 @kind object) @signature `Lokio/internal/ByteStringKt;.commonBase64:(Lokio/ByteString;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1dcdfc.  v0:= "$this$commonBase64" @kind object;
  #L1dce00.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dce06.  call temp:= `getData$okio`(v2) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dce0c.  v2:= temp @kind object;
  #L1dce0e.  v0:= 0I;
  #L1dce10.  v1:= 1I;
  #L1dce12.  call temp:= `encodeBase64$default`(v2, v0, v1, v0) @signature `Lokio/-Base64;.encodeBase64$default:([B[BILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1dce18.  v2:= temp @kind object;
  #L1dce1a.  return v2 @kind object;
}
procedure `java.lang.String` `commonBase64Url`(`okio.ByteString` v1 @kind object) @signature `Lokio/internal/ByteStringKt;.commonBase64Url:(Lokio/ByteString;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1dce2c.  v0:= "$this$commonBase64Url" @kind object;
  #L1dce30.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dce36.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dce3c.  v1:= temp @kind object;
  #L1dce3e.  call temp:= `getBASE64_URL_SAFE`() @signature `Lokio/-Base64;.getBASE64_URL_SAFE:()[B` @kind static;
  #L1dce44.  v0:= temp @kind object;
  #L1dce46.  call temp:= `encodeBase64`(v1, v0) @signature `Lokio/-Base64;.encodeBase64:([B[B)Ljava/lang/String;` @kind static;
  #L1dce4c.  v1:= temp @kind object;
  #L1dce4e.  return v1 @kind object;
}
procedure `int` `commonCompareTo`(`okio.ByteString` v9 @kind object, `okio.ByteString` v10 @kind object) @signature `Lokio/internal/ByteStringKt;.commonCompareTo:(Lokio/ByteString;Lokio/ByteString;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1dcb88.  v0:= "$this$commonCompareTo" @kind object;
  #L1dcb8c.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dcb92.  v0:= "other" @kind object;
  #L1dcb96.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dcb9c.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1dcba2.  v0:= temp;
  #L1dcba4.  call temp:= `size`(v10) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1dcbaa.  v1:= temp;
  #L1dcbac.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1dcbb2.  v2:= temp;
  #L1dcbb4.  v3:= 0I;
  #L1dcbb6.  v4:= 0I;
  #L1dcbb8.  v5:= -1I;
  #L1dcbba.  v6:= 1I;
  #L1dcbbc.  if v4 >= v2 then goto L1dcbec;
  #L1dcbc0.  call temp:= `getByte`(v9, v4) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1dcbc6.  v7:= temp;
  #L1dcbc8.  v7:= v7 ^& 255;
  #L1dcbcc.  call temp:= `getByte`(v10, v4) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1dcbd2.  v8:= temp;
  #L1dcbd4.  v8:= v8 ^& 255;
  #L1dcbd8.  if v7 != v8 then goto L1dcbe2;
  #L1dcbdc.  v4:= v4 + 1;
  #L1dcbe0.  goto L1dcbb8;
  #L1dcbe2.  if v7 >= v8 then goto L1dcbe8;
  #L1dcbe6.  goto L1dcbea;
  #L1dcbe8.  v5:= 1I;
  #L1dcbea.  return v5;
  #L1dcbec.  if v0 != v1 then goto L1dcbf2;
  #L1dcbf0.  return v3;
  #L1dcbf2.  if v0 >= v1 then goto L1dcbf8;
  #L1dcbf6.  goto L1dcbfa;
  #L1dcbf8.  v5:= 1I;
  #L1dcbfa.  return v5;
}
procedure `okio.ByteString` `commonDecodeBase64`(`java.lang.String` v1 @kind object) @signature `Lokio/internal/ByteStringKt;.commonDecodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1dd188.  v0:= "$this$commonDecodeBase64" @kind object;
  #L1dd18c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dd192.  call temp:= `decodeBase64ToArray`(v1) @signature `Lokio/-Base64;.decodeBase64ToArray:(Ljava/lang/String;)[B` @kind static;
  #L1dd198.  v1:= temp @kind object;
  #L1dd19a.  if v1 == 0 then goto L1dd1aa;
  #L1dd19e.  v0:= new `okio.ByteString`;
  #L1dd1a2.  call `<init>`(v0, v1) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L1dd1a8.  goto L1dd1ac;
  #L1dd1aa.  v0:= 0I;
  #L1dd1ac.  return v0 @kind object;
}
procedure `okio.ByteString` `commonDecodeHex`(`java.lang.String` v6 @kind object) @signature `Lokio/internal/ByteStringKt;.commonDecodeHex:(Ljava/lang/String;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1dd1c0.  v0:= "$this$commonDecodeHex" @kind object;
  #L1dd1c4.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dd1ca.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1dd1d0.  v0:= temp;
  #L1dd1d2.  v0:= v0 %% 2;
  #L1dd1d6.  v1:= 0I;
  #L1dd1d8.  v2:= 1I;
  #L1dd1da.  if v0 != 0 then goto L1dd1e2;
  #L1dd1de.  v0:= 1I;
  #L1dd1e0.  goto L1dd1e4;
  #L1dd1e2.  v0:= 0I;
  #L1dd1e4.  if v0 == 0 then goto L1dd240;
  #L1dd1e8.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1dd1ee.  v0:= temp;
  #L1dd1f0.  v0:= v0 / 2;
  #L1dd1f4.  v3:= new `byte`[v0];
  #L1dd1f8.  if v1 >= v0 then goto L1dd234;
  #L1dd1fc.  v4:= v1 * 2;
  #L1dd200.  call temp:= `charAt`(v6, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1dd206.  v5:= temp;
  #L1dd208.  call temp:= `access$decodeHexDigit`(v5) @signature `Lokio/internal/ByteStringKt;.access$decodeHexDigit:(C)I` @kind static;
  #L1dd20e.  v5:= temp;
  #L1dd210.  v5:= v5 ^< 4;
  #L1dd214.  v4:= v4 + v2 @kind int;
  #L1dd216.  call temp:= `charAt`(v6, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1dd21c.  v4:= temp;
  #L1dd21e.  call temp:= `access$decodeHexDigit`(v4) @signature `Lokio/internal/ByteStringKt;.access$decodeHexDigit:(C)I` @kind static;
  #L1dd224.  v4:= temp;
  #L1dd226.  v5:= v5 + v4 @kind int;
  #L1dd228.  v4:= (`byte`) v5 @kind i2b;
  #L1dd22a.  v3[v1]:= v4 @kind byte;
  #L1dd22e.  v1:= v1 + 1;
  #L1dd232.  goto L1dd1f8;
  #L1dd234.  v6:= new `okio.ByteString`;
  #L1dd238.  call `<init>`(v6, v3) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L1dd23e.  return v6 @kind object;
  #L1dd240.  v0:= new `java.lang.StringBuilder`;
  #L1dd244.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dd24a.  v1:= "Unexpected hex string: " @kind object;
  #L1dd24e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dd254.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dd25a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dd260.  v6:= temp @kind object;
  #L1dd262.  v0:= new `java.lang.IllegalArgumentException`;
  #L1dd266.  call temp:= `toString`(v6) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dd26c.  v6:= temp @kind object;
  #L1dd26e.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dd274.  throw v0;
}
procedure `okio.ByteString` `commonEncodeUtf8`(`java.lang.String` v2 @kind object) @signature `Lokio/internal/ByteStringKt;.commonEncodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1dd288.  v0:= "$this$commonEncodeUtf8" @kind object;
  #L1dd28c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dd292.  v0:= new `okio.ByteString`;
  #L1dd296.  call temp:= `asUtf8ToByteArray`(v2) @signature `Lokio/-Platform;.asUtf8ToByteArray:(Ljava/lang/String;)[B` @kind static;
  #L1dd29c.  v1:= temp @kind object;
  #L1dd29e.  call `<init>`(v0, v1) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L1dd2a4.  call `setUtf8$okio`(v0, v2) @signature `Lokio/ByteString;.setUtf8$okio:(Ljava/lang/String;)V` @kind virtual;
  #L1dd2aa.  return v0 @kind object;
}
procedure `boolean` `commonEndsWith`(`okio.ByteString` v3 @kind object, `okio.ByteString` v4 @kind object) @signature `Lokio/internal/ByteStringKt;.commonEndsWith:(Lokio/ByteString;Lokio/ByteString;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1dc52c.  v0:= "$this$commonEndsWith" @kind object;
  #L1dc530.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc536.  v0:= "suffix" @kind object;
  #L1dc53a.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc540.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1dc546.  v0:= temp;
  #L1dc548.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1dc54e.  v1:= temp;
  #L1dc550.  v0:= v0 - v1 @kind int;
  #L1dc552.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1dc558.  v1:= temp;
  #L1dc55a.  v2:= 0I;
  #L1dc55c.  call temp:= `rangeEquals`(v3, v0, v4, v2, v1) @signature `Lokio/ByteString;.rangeEquals:(ILokio/ByteString;II)Z` @kind virtual;
  #L1dc562.  v3:= temp;
  #L1dc564.  return v3;
}
procedure `boolean` `commonEndsWith`(`okio.ByteString` v3 @kind object, `byte`[] v4 @kind object) @signature `Lokio/internal/ByteStringKt;.commonEndsWith:(Lokio/ByteString;[B)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1dc4ec.  v0:= "$this$commonEndsWith" @kind object;
  #L1dc4f0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc4f6.  v0:= "suffix" @kind object;
  #L1dc4fa.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc500.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1dc506.  v0:= temp;
  #L1dc508.  v1:= length @variable v4;
  #L1dc50a.  v0:= v0 - v1 @kind int;
  #L1dc50c.  v1:= length @variable v4;
  #L1dc50e.  v2:= 0I;
  #L1dc510.  call temp:= `rangeEquals`(v3, v0, v4, v2, v1) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @kind virtual;
  #L1dc516.  v3:= temp;
  #L1dc518.  return v3;
}
procedure `boolean` `commonEquals`(`okio.ByteString` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lokio/internal/ByteStringKt;.commonEquals:(Lokio/ByteString;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1dc578.  v0:= "$this$commonEquals" @kind object;
  #L1dc57c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc582.  v0:= 1I;
  #L1dc584.  v1:= 0I;
  #L1dc586.  if v5 != v4 then goto L1dc58c;
  #L1dc58a.  goto L1dc5d0;
  #L1dc58c.  v2:= instanceof @variable v5 @type ^`okio.ByteString` @kind boolean;
  #L1dc590.  if v2 == 0 then goto L1dc5ce;
  #L1dc594.  v5:= (`okio.ByteString`) v5 @kind object;
  #L1dc598.  call temp:= `size`(v5) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1dc59e.  v2:= temp;
  #L1dc5a0.  call temp:= `getData$okio`(v4) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dc5a6.  v3:= temp @kind object;
  #L1dc5a8.  v3:= length @variable v3;
  #L1dc5aa.  if v2 != v3 then goto L1dc5ce;
  #L1dc5ae.  call temp:= `getData$okio`(v4) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dc5b4.  v2:= temp @kind object;
  #L1dc5b6.  call temp:= `getData$okio`(v4) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dc5bc.  v4:= temp @kind object;
  #L1dc5be.  v4:= length @variable v4;
  #L1dc5c0.  call temp:= `rangeEquals`(v5, v1, v2, v1, v4) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @kind virtual;
  #L1dc5c6.  v4:= temp;
  #L1dc5c8.  if v4 == 0 then goto L1dc5ce;
  #L1dc5cc.  goto L1dc5d0;
  #L1dc5ce.  v0:= 0I;
  #L1dc5d0.  return v0;
}
procedure `byte` `commonGetByte`(`okio.ByteString` v1 @kind object, `int` v2 ) @signature `Lokio/internal/ByteStringKt;.commonGetByte:(Lokio/ByteString;I)B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1dc6e8.  v0:= "$this$commonGetByte" @kind object;
  #L1dc6ec.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc6f2.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dc6f8.  v1:= temp @kind object;
  #L1dc6fa.  v1:= v1[v2] @kind byte;
  #L1dc6fe.  return v1;
}
procedure `int` `commonGetSize`(`okio.ByteString` v1 @kind object) @signature `Lokio/internal/ByteStringKt;.commonGetSize:(Lokio/ByteString;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1dcc0c.  v0:= "$this$commonGetSize" @kind object;
  #L1dcc10.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dcc16.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dcc1c.  v1:= temp @kind object;
  #L1dcc1e.  v1:= length @variable v1;
  #L1dcc20.  return v1;
}
procedure `int` `commonHashCode`(`okio.ByteString` v1 @kind object) @signature `Lokio/internal/ByteStringKt;.commonHashCode:(Lokio/ByteString;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1dcc34.  v0:= "$this$commonHashCode" @kind object;
  #L1dcc38.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dcc3e.  call temp:= `getHashCode$okio`(v1) @signature `Lokio/ByteString;.getHashCode$okio:()I` @kind virtual;
  #L1dcc44.  v0:= temp;
  #L1dcc46.  if v0 == 0 then goto L1dcc4c;
  #L1dcc4a.  return v0;
  #L1dcc4c.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dcc52.  v0:= temp @kind object;
  #L1dcc54.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([B)I` @kind static;
  #L1dcc5a.  v0:= temp;
  #L1dcc5c.  call `setHashCode$okio`(v1, v0) @signature `Lokio/ByteString;.setHashCode$okio:(I)V` @kind virtual;
  #L1dcc62.  return v0;
}
procedure `java.lang.String` `commonHex`(`okio.ByteString` v8 @kind object) @signature `Lokio/internal/ByteStringKt;.commonHex:(Lokio/ByteString;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1dce60.  v0:= "$this$commonHex" @kind object;
  #L1dce64.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dce6a.  call temp:= `getData$okio`(v8) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dce70.  v0:= temp @kind object;
  #L1dce72.  v0:= length @variable v0;
  #L1dce74.  v0:= v0 * 2;
  #L1dce78.  v0:= new `char`[v0];
  #L1dce7c.  call temp:= `getData$okio`(v8) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dce82.  v8:= temp @kind object;
  #L1dce84.  v1:= length @variable v8;
  #L1dce86.  v2:= 0I;
  #L1dce88.  v3:= 0I;
  #L1dce8a.  if v2 >= v1 then goto L1dcecc;
  #L1dce8e.  v4:= v8[v2] @kind byte;
  #L1dce92.  v5:= v3 + 1;
  #L1dce96.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1dce9c.  v6:= temp @kind object;
  #L1dce9e.  v7:= v4 ^> 4;
  #L1dcea2.  v7:= v7 ^& 15;
  #L1dcea6.  v6:= v6[v7] @kind char;
  #L1dceaa.  v0[v3]:= v6 @kind char;
  #L1dceae.  v3:= v5 + 1;
  #L1dceb2.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1dceb8.  v6:= temp @kind object;
  #L1dceba.  v4:= v4 ^& 15;
  #L1dcebe.  v4:= v6[v4] @kind char;
  #L1dcec2.  v0[v5]:= v4 @kind char;
  #L1dcec6.  v2:= v2 + 1;
  #L1dceca.  goto L1dce8a;
  #L1dcecc.  v8:= new `java.lang.String`;
  #L1dced0.  call `<init>`(v8, v0) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L1dced6.  return v8 @kind object;
}
procedure `int` `commonIndexOf`(`okio.ByteString` v4 @kind object, `byte`[] v5 @kind object, `int` v6 ) @signature `Lokio/internal/ByteStringKt;.commonIndexOf:(Lokio/ByteString;[BI)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1dcc74.  v0:= "$this$commonIndexOf" @kind object;
  #L1dcc78.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dcc7e.  v0:= "other" @kind object;
  #L1dcc82.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dcc88.  call temp:= `getData$okio`(v4) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dcc8e.  v0:= temp @kind object;
  #L1dcc90.  v0:= length @variable v0;
  #L1dcc92.  v1:= length @variable v5;
  #L1dcc94.  v0:= v0 - v1 @kind int;
  #L1dcc96.  v1:= 0I;
  #L1dcc98.  call temp:= `max`(v6, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L1dcc9e.  v6:= temp;
  #L1dcca0.  if v6 > v0 then goto L1dccc6;
  #L1dcca4.  call temp:= `getData$okio`(v4) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dccaa.  v2:= temp @kind object;
  #L1dccac.  v3:= length @variable v5;
  #L1dccae.  call temp:= `arrayRangeEquals`(v2, v6, v5, v1, v3) @signature `Lokio/-Util;.arrayRangeEquals:([BI[BII)Z` @kind static;
  #L1dccb4.  v2:= temp;
  #L1dccb6.  if v2 == 0 then goto L1dccbc;
  #L1dccba.  return v6;
  #L1dccbc.  if v6 == v0 then goto L1dccc6;
  #L1dccc0.  v6:= v6 + 1;
  #L1dccc4.  goto L1dcca4;
  #L1dccc6.  v4:= -1I;
  #L1dccc8.  return v4;
}
procedure `byte`[] `commonInternalArray`(`okio.ByteString` v1 @kind object) @signature `Lokio/internal/ByteStringKt;.commonInternalArray:(Lokio/ByteString;)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1dc710.  v0:= "$this$commonInternalArray" @kind object;
  #L1dc714.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc71a.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dc720.  v1:= temp @kind object;
  #L1dc722.  return v1 @kind object;
}
procedure `int` `commonLastIndexOf`(`okio.ByteString` v1 @kind object, `okio.ByteString` v2 @kind object, `int` v3 ) @signature `Lokio/internal/ByteStringKt;.commonLastIndexOf:(Lokio/ByteString;Lokio/ByteString;I)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1dcd40.  v0:= "$this$commonLastIndexOf" @kind object;
  #L1dcd44.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dcd4a.  v0:= "other" @kind object;
  #L1dcd4e.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dcd54.  call temp:= `internalArray$okio`(v2) @signature `Lokio/ByteString;.internalArray$okio:()[B` @kind virtual;
  #L1dcd5a.  v2:= temp @kind object;
  #L1dcd5c.  call temp:= `lastIndexOf`(v1, v2, v3) @signature `Lokio/ByteString;.lastIndexOf:([BI)I` @kind virtual;
  #L1dcd62.  v1:= temp;
  #L1dcd64.  return v1;
}
procedure `int` `commonLastIndexOf`(`okio.ByteString` v3 @kind object, `byte`[] v4 @kind object, `int` v5 ) @signature `Lokio/internal/ByteStringKt;.commonLastIndexOf:(Lokio/ByteString;[BI)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1dccdc.  v0:= "$this$commonLastIndexOf" @kind object;
  #L1dcce0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dcce6.  v0:= "other" @kind object;
  #L1dccea.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dccf0.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dccf6.  v0:= temp @kind object;
  #L1dccf8.  v0:= length @variable v0;
  #L1dccfa.  v1:= length @variable v4;
  #L1dccfc.  v0:= v0 - v1 @kind int;
  #L1dccfe.  call temp:= `min`(v5, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1dcd04.  v5:= temp;
  #L1dcd06.  if v5 < 0 then goto L1dcd2a;
  #L1dcd0a.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dcd10.  v0:= temp @kind object;
  #L1dcd12.  v1:= 0I;
  #L1dcd14.  v2:= length @variable v4;
  #L1dcd16.  call temp:= `arrayRangeEquals`(v0, v5, v4, v1, v2) @signature `Lokio/-Util;.arrayRangeEquals:([BI[BII)Z` @kind static;
  #L1dcd1c.  v0:= temp;
  #L1dcd1e.  if v0 == 0 then goto L1dcd24;
  #L1dcd22.  return v5;
  #L1dcd24.  v5:= v5 + -1;
  #L1dcd28.  goto L1dcd06;
  #L1dcd2a.  v3:= -1I;
  #L1dcd2c.  return v3;
}
procedure `okio.ByteString` `commonOf`(`byte`[] v2 @kind object) @signature `Lokio/internal/ByteStringKt;.commonOf:([B)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1dd2bc.  v0:= "data" @kind object;
  #L1dd2c0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dd2c6.  v0:= new `okio.ByteString`;
  #L1dd2ca.  v1:= length @variable v2;
  #L1dd2cc.  call temp:= `copyOf`(v2, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L1dd2d2.  v2:= temp @kind object;
  #L1dd2d4.  v1:= "java.util.Arrays.copyOf(this, size)" @kind object;
  #L1dd2d8.  call `checkNotNullExpressionValue`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dd2de.  call `<init>`(v0, v2) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L1dd2e4.  return v0 @kind object;
}
procedure `boolean` `commonRangeEquals`(`okio.ByteString` v1 @kind object, `int` v2 , `okio.ByteString` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokio/internal/ByteStringKt;.commonRangeEquals:(Lokio/ByteString;ILokio/ByteString;II)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1dc644.  v0:= "$this$commonRangeEquals" @kind object;
  #L1dc648.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc64e.  v0:= "other" @kind object;
  #L1dc652.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc658.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dc65e.  v1:= temp @kind object;
  #L1dc660.  call temp:= `rangeEquals`(v3, v4, v1, v2, v5) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @kind virtual;
  #L1dc666.  v1:= temp;
  #L1dc668.  return v1;
}
procedure `boolean` `commonRangeEquals`(`okio.ByteString` v1 @kind object, `int` v2 , `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokio/internal/ByteStringKt;.commonRangeEquals:(Lokio/ByteString;I[BII)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1dc5e4.  v0:= "$this$commonRangeEquals" @kind object;
  #L1dc5e8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc5ee.  v0:= "other" @kind object;
  #L1dc5f2.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc5f8.  if v2 < 0 then goto L1dc630;
  #L1dc5fc.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dc602.  v0:= temp @kind object;
  #L1dc604.  v0:= length @variable v0;
  #L1dc606.  v0:= v0 - v5 @kind int;
  #L1dc608.  if v2 > v0 then goto L1dc630;
  #L1dc60c.  if v4 < 0 then goto L1dc630;
  #L1dc610.  v0:= length @variable v3;
  #L1dc612.  v0:= v0 - v5 @kind int;
  #L1dc614.  if v4 > v0 then goto L1dc630;
  #L1dc618.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dc61e.  v1:= temp @kind object;
  #L1dc620.  call temp:= `arrayRangeEquals`(v1, v2, v3, v4, v5) @signature `Lokio/-Util;.arrayRangeEquals:([BI[BII)Z` @kind static;
  #L1dc626.  v1:= temp;
  #L1dc628.  if v1 == 0 then goto L1dc630;
  #L1dc62c.  v1:= 1I;
  #L1dc62e.  goto L1dc632;
  #L1dc630.  v1:= 0I;
  #L1dc632.  return v1;
}
procedure `boolean` `commonStartsWith`(`okio.ByteString` v2 @kind object, `okio.ByteString` v3 @kind object) @signature `Lokio/internal/ByteStringKt;.commonStartsWith:(Lokio/ByteString;Lokio/ByteString;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1dc6b0.  v0:= "$this$commonStartsWith" @kind object;
  #L1dc6b4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc6ba.  v0:= "prefix" @kind object;
  #L1dc6be.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc6c4.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1dc6ca.  v0:= temp;
  #L1dc6cc.  v1:= 0I;
  #L1dc6ce.  call temp:= `rangeEquals`(v2, v1, v3, v1, v0) @signature `Lokio/ByteString;.rangeEquals:(ILokio/ByteString;II)Z` @kind virtual;
  #L1dc6d4.  v2:= temp;
  #L1dc6d6.  return v2;
}
procedure `boolean` `commonStartsWith`(`okio.ByteString` v2 @kind object, `byte`[] v3 @kind object) @signature `Lokio/internal/ByteStringKt;.commonStartsWith:(Lokio/ByteString;[B)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1dc67c.  v0:= "$this$commonStartsWith" @kind object;
  #L1dc680.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc686.  v0:= "prefix" @kind object;
  #L1dc68a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc690.  v0:= length @variable v3;
  #L1dc692.  v1:= 0I;
  #L1dc694.  call temp:= `rangeEquals`(v2, v1, v3, v1, v0) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @kind virtual;
  #L1dc69a.  v2:= temp;
  #L1dc69c.  return v2;
}
procedure `okio.ByteString` `commonSubstring`(`okio.ByteString` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokio/internal/ByteStringKt;.commonSubstring:(Lokio/ByteString;II)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1dd2f8.  v0:= "$this$commonSubstring" @kind object;
  #L1dd2fc.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dd302.  v0:= 1I;
  #L1dd304.  v1:= 0I;
  #L1dd306.  if v4 < 0 then goto L1dd30e;
  #L1dd30a.  v2:= 1I;
  #L1dd30c.  goto L1dd310;
  #L1dd30e.  v2:= 0I;
  #L1dd310.  if v2 == 0 then goto L1dd3ce;
  #L1dd314.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dd31a.  v2:= temp @kind object;
  #L1dd31c.  v2:= length @variable v2;
  #L1dd31e.  if v5 > v2 then goto L1dd326;
  #L1dd322.  v2:= 1I;
  #L1dd324.  goto L1dd328;
  #L1dd326.  v2:= 0I;
  #L1dd328.  if v2 == 0 then goto L1dd384;
  #L1dd32c.  v2:= v5 - v4 @kind int;
  #L1dd330.  if v2 < 0 then goto L1dd336;
  #L1dd334.  goto L1dd338;
  #L1dd336.  v0:= 0I;
  #L1dd338.  if v0 == 0 then goto L1dd36c;
  #L1dd33c.  if v4 != 0 then goto L1dd350;
  #L1dd340.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dd346.  v0:= temp @kind object;
  #L1dd348.  v0:= length @variable v0;
  #L1dd34a.  if v5 != v0 then goto L1dd350;
  #L1dd34e.  return v3 @kind object;
  #L1dd350.  v0:= new `okio.ByteString`;
  #L1dd354.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dd35a.  v3:= temp @kind object;
  #L1dd35c.  call temp:= `copyOfRange`(v3, v4, v5) @signature `Lkotlin/collections/ArraysKt;.copyOfRange:([BII)[B` @kind static;
  #L1dd362.  v3:= temp @kind object;
  #L1dd364.  call `<init>`(v0, v3) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L1dd36a.  return v0 @kind object;
  #L1dd36c.  v3:= new `java.lang.IllegalArgumentException`;
  #L1dd370.  v4:= "endIndex < beginIndex" @kind object;
  #L1dd374.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dd37a.  v4:= temp @kind object;
  #L1dd37c.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dd382.  throw v3;
  #L1dd384.  v4:= new `java.lang.StringBuilder`;
  #L1dd388.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dd38e.  v5:= "endIndex > length(" @kind object;
  #L1dd392.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dd398.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dd39e.  v3:= temp @kind object;
  #L1dd3a0.  v3:= length @variable v3;
  #L1dd3a2.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dd3a8.  v3:= 41I;
  #L1dd3ac.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dd3b2.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dd3b8.  v3:= temp @kind object;
  #L1dd3ba.  v4:= new `java.lang.IllegalArgumentException`;
  #L1dd3be.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dd3c4.  v3:= temp @kind object;
  #L1dd3c6.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dd3cc.  throw v4;
  #L1dd3ce.  v3:= new `java.lang.IllegalArgumentException`;
  #L1dd3d2.  v4:= "beginIndex < 0" @kind object;
  #L1dd3d6.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dd3dc.  v4:= temp @kind object;
  #L1dd3de.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dd3e4.  throw v3;
}
procedure `okio.ByteString` `commonToAsciiLowercase`(`okio.ByteString` v5 @kind object) @signature `Lokio/internal/ByteStringKt;.commonToAsciiLowercase:(Lokio/ByteString;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1dd3f8.  v0:= "$this$commonToAsciiLowercase" @kind object;
  #L1dd3fc.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dd402.  v0:= 0I;
  #L1dd404.  call temp:= `getData$okio`(v5) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dd40a.  v1:= temp @kind object;
  #L1dd40c.  v1:= length @variable v1;
  #L1dd40e.  if v0 >= v1 then goto L1dd494;
  #L1dd412.  call temp:= `getData$okio`(v5) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dd418.  v1:= temp @kind object;
  #L1dd41a.  v1:= v1[v0] @kind byte;
  #L1dd41e.  v2:= 65I;
  #L1dd422.  v2:= (`byte`) v2 @kind i2b;
  #L1dd424.  if v1 < v2 then goto L1dd48e;
  #L1dd428.  v3:= 90I;
  #L1dd42c.  v3:= (`byte`) v3 @kind i2b;
  #L1dd42e.  if v1 <= v3 then goto L1dd434;
  #L1dd432.  goto L1dd48e;
  #L1dd434.  call temp:= `getData$okio`(v5) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dd43a.  v5:= temp @kind object;
  #L1dd43c.  v4:= length @variable v5;
  #L1dd43e.  call temp:= `copyOf`(v5, v4) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L1dd444.  v5:= temp @kind object;
  #L1dd446.  v4:= "java.util.Arrays.copyOf(this, size)" @kind object;
  #L1dd44a.  call `checkNotNullExpressionValue`(v5, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dd450.  v4:= v0 + 1;
  #L1dd454.  v1:= v1 + 32;
  #L1dd458.  v1:= (`byte`) v1 @kind i2b;
  #L1dd45a.  v5[v0]:= v1 @kind byte;
  #L1dd45e.  v0:= length @variable v5;
  #L1dd460.  if v4 >= v0 then goto L1dd482;
  #L1dd464.  v0:= v5[v4] @kind byte;
  #L1dd468.  if v0 < v2 then goto L1dd47c;
  #L1dd46c.  if v0 <= v3 then goto L1dd472;
  #L1dd470.  goto L1dd47c;
  #L1dd472.  v0:= v0 + 32;
  #L1dd476.  v0:= (`byte`) v0 @kind i2b;
  #L1dd478.  v5[v4]:= v0 @kind byte;
  #L1dd47c.  v4:= v4 + 1;
  #L1dd480.  goto L1dd45e;
  #L1dd482.  v0:= new `okio.ByteString`;
  #L1dd486.  call `<init>`(v0, v5) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L1dd48c.  return v0 @kind object;
  #L1dd48e.  v0:= v0 + 1;
  #L1dd492.  goto L1dd404;
  #L1dd494.  return v5 @kind object;
}
procedure `okio.ByteString` `commonToAsciiUppercase`(`okio.ByteString` v5 @kind object) @signature `Lokio/internal/ByteStringKt;.commonToAsciiUppercase:(Lokio/ByteString;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1dd4a8.  v0:= "$this$commonToAsciiUppercase" @kind object;
  #L1dd4ac.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dd4b2.  v0:= 0I;
  #L1dd4b4.  call temp:= `getData$okio`(v5) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dd4ba.  v1:= temp @kind object;
  #L1dd4bc.  v1:= length @variable v1;
  #L1dd4be.  if v0 >= v1 then goto L1dd544;
  #L1dd4c2.  call temp:= `getData$okio`(v5) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dd4c8.  v1:= temp @kind object;
  #L1dd4ca.  v1:= v1[v0] @kind byte;
  #L1dd4ce.  v2:= 97I;
  #L1dd4d2.  v2:= (`byte`) v2 @kind i2b;
  #L1dd4d4.  if v1 < v2 then goto L1dd53e;
  #L1dd4d8.  v3:= 122I;
  #L1dd4dc.  v3:= (`byte`) v3 @kind i2b;
  #L1dd4de.  if v1 <= v3 then goto L1dd4e4;
  #L1dd4e2.  goto L1dd53e;
  #L1dd4e4.  call temp:= `getData$okio`(v5) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dd4ea.  v5:= temp @kind object;
  #L1dd4ec.  v4:= length @variable v5;
  #L1dd4ee.  call temp:= `copyOf`(v5, v4) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L1dd4f4.  v5:= temp @kind object;
  #L1dd4f6.  v4:= "java.util.Arrays.copyOf(this, size)" @kind object;
  #L1dd4fa.  call `checkNotNullExpressionValue`(v5, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dd500.  v4:= v0 + 1;
  #L1dd504.  v1:= v1 + -32;
  #L1dd508.  v1:= (`byte`) v1 @kind i2b;
  #L1dd50a.  v5[v0]:= v1 @kind byte;
  #L1dd50e.  v0:= length @variable v5;
  #L1dd510.  if v4 >= v0 then goto L1dd532;
  #L1dd514.  v0:= v5[v4] @kind byte;
  #L1dd518.  if v0 < v2 then goto L1dd52c;
  #L1dd51c.  if v0 <= v3 then goto L1dd522;
  #L1dd520.  goto L1dd52c;
  #L1dd522.  v0:= v0 + -32;
  #L1dd526.  v0:= (`byte`) v0 @kind i2b;
  #L1dd528.  v5[v4]:= v0 @kind byte;
  #L1dd52c.  v4:= v4 + 1;
  #L1dd530.  goto L1dd50e;
  #L1dd532.  v0:= new `okio.ByteString`;
  #L1dd536.  call `<init>`(v0, v5) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L1dd53c.  return v0 @kind object;
  #L1dd53e.  v0:= v0 + 1;
  #L1dd542.  goto L1dd4b4;
  #L1dd544.  return v5 @kind object;
}
procedure `byte`[] `commonToByteArray`(`okio.ByteString` v1 @kind object) @signature `Lokio/internal/ByteStringKt;.commonToByteArray:(Lokio/ByteString;)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1dc734.  v0:= "$this$commonToByteArray" @kind object;
  #L1dc738.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc73e.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dc744.  v1:= temp @kind object;
  #L1dc746.  v0:= length @variable v1;
  #L1dc748.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L1dc74e.  v1:= temp @kind object;
  #L1dc750.  v0:= "java.util.Arrays.copyOf(this, size)" @kind object;
  #L1dc754.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc75a.  return v1 @kind object;
}
procedure `okio.ByteString` `commonToByteString`(`byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lokio/internal/ByteStringKt;.commonToByteString:([BII)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1dd558.  v0:= "$this$commonToByteString" @kind object;
  #L1dd55c.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dd562.  v0:= length @variable v7;
  #L1dd564.  v1:= (`long`) v0 @kind i2l;
  #L1dd566.  v3:= (`long`) v8 @kind i2l;
  #L1dd568.  v5:= (`long`) v9 @kind i2l;
  #L1dd56a.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Lokio/-Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L1dd570.  v0:= new `okio.ByteString`;
  #L1dd574.  v9:= v9 + v8 @kind int;
  #L1dd576.  call temp:= `copyOfRange`(v7, v8, v9) @signature `Lkotlin/collections/ArraysKt;.copyOfRange:([BII)[B` @kind static;
  #L1dd57c.  v7:= temp @kind object;
  #L1dd57e.  call `<init>`(v0, v7) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L1dd584.  return v0 @kind object;
}
procedure `java.lang.String` `commonToString`(`okio.ByteString` v21 @kind object) @signature `Lokio/internal/ByteStringKt;.commonToString:(Lokio/ByteString;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L1dcee8.  v0:= "$this$commonToString" @kind object;
  #L1dceec.  v1:= v21 @kind object;
  #L1dcef0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dcef6.  call temp:= `getData$okio`(v21) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dcefc.  v0:= temp @kind object;
  #L1dcefe.  v0:= length @variable v0;
  #L1dcf00.  v2:= 1I;
  #L1dcf02.  v3:= 0I;
  #L1dcf04.  if v0 != 0 then goto L1dcf0c;
  #L1dcf08.  v0:= 1I;
  #L1dcf0a.  goto L1dcf0e;
  #L1dcf0c.  v0:= 0I;
  #L1dcf0e.  if v0 == 0 then goto L1dcf18;
  #L1dcf12.  v0:= "[size=0]" @kind object;
  #L1dcf16.  return v0 @kind object;
  #L1dcf18.  call temp:= `getData$okio`(v21) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dcf1e.  v0:= temp @kind object;
  #L1dcf20.  v4:= 64I;
  #L1dcf24.  call temp:= `access$codePointIndexToCharIndex`(v0, v4) @signature `Lokio/internal/ByteStringKt;.access$codePointIndexToCharIndex:([BI)I` @kind static;
  #L1dcf2a.  v0:= temp;
  #L1dcf2c.  v5:= -1I;
  #L1dcf2e.  v6:= "…]" @kind object;
  #L1dcf32.  v7:= 93I;
  #L1dcf36.  v8:= "[size=" @kind object;
  #L1dcf3a.  if v0 != v5 then goto L1dd052;
  #L1dcf3e.  call temp:= `getData$okio`(v21) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dcf44.  v0:= temp @kind object;
  #L1dcf46.  v0:= length @variable v0;
  #L1dcf48.  if v0 > v4 then goto L1dcf7e;
  #L1dcf4c.  v0:= new `java.lang.StringBuilder`;
  #L1dcf50.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dcf56.  v2:= "[hex=" @kind object;
  #L1dcf5a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dcf60.  call temp:= `hex`(v21) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L1dcf66.  v1:= temp @kind object;
  #L1dcf68.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dcf6e.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dcf74.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dcf7a.  v0:= temp @kind object;
  #L1dcf7c.  goto L1dd006;
  #L1dcf7e.  v0:= new `java.lang.StringBuilder`;
  #L1dcf82.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dcf88.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dcf8e.  call temp:= `getData$okio`(v21) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dcf94.  v5:= temp @kind object;
  #L1dcf96.  v5:= length @variable v5;
  #L1dcf98.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dcf9e.  v5:= " hex=" @kind object;
  #L1dcfa2.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dcfa8.  call temp:= `getData$okio`(v21) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dcfae.  v5:= temp @kind object;
  #L1dcfb0.  v5:= length @variable v5;
  #L1dcfb2.  if v4 > v5 then goto L1dcfb8;
  #L1dcfb6.  goto L1dcfba;
  #L1dcfb8.  v2:= 0I;
  #L1dcfba.  if v2 == 0 then goto L1dd008;
  #L1dcfbe.  call temp:= `getData$okio`(v21) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dcfc4.  v2:= temp @kind object;
  #L1dcfc6.  v2:= length @variable v2;
  #L1dcfc8.  if v4 != v2 then goto L1dcfce;
  #L1dcfcc.  goto L1dcfea;
  #L1dcfce.  v2:= new `okio.ByteString`;
  #L1dcfd2.  call temp:= `getData$okio`(v21) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dcfd8.  v1:= temp @kind object;
  #L1dcfda.  call temp:= `copyOfRange`(v1, v3, v4) @signature `Lkotlin/collections/ArraysKt;.copyOfRange:([BII)[B` @kind static;
  #L1dcfe0.  v1:= temp @kind object;
  #L1dcfe2.  call `<init>`(v2, v1) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L1dcfe8.  v1:= v2 @kind object;
  #L1dcfea.  call temp:= `hex`(v1) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L1dcff0.  v1:= temp @kind object;
  #L1dcff2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dcff8.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dcffe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dd004.  v0:= temp @kind object;
  #L1dd006.  return v0 @kind object;
  #L1dd008.  v0:= new `java.lang.StringBuilder`;
  #L1dd00c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dd012.  v2:= "endIndex > length(" @kind object;
  #L1dd016.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dd01c.  call temp:= `getData$okio`(v21) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dd022.  v1:= temp @kind object;
  #L1dd024.  v1:= length @variable v1;
  #L1dd026.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dd02c.  v1:= 41I;
  #L1dd030.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dd036.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dd03c.  v0:= temp @kind object;
  #L1dd03e.  v1:= new `java.lang.IllegalArgumentException`;
  #L1dd042.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dd048.  v0:= temp @kind object;
  #L1dd04a.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dd050.  throw v1;
  #L1dd052.  call temp:= `utf8`(v21) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L1dd058.  v2:= temp @kind object;
  #L1dd05a.  if v2 == 0 then goto L1dd128;
  #L1dd05e.  call temp:= `substring`(v2, v3, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1dd064.  v9:= temp @kind object;
  #L1dd066.  v3:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L1dd06a.  call `checkNotNullExpressionValue`(v9, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dd070.  v12:= 0I;
  #L1dd072.  v13:= 4I;
  #L1dd074.  v14:= 0I;
  #L1dd076.  v10:= "\\" @kind object;
  #L1dd07a.  v11:= "\\\\" @kind object;
  #L1dd07e.  call temp:= `replace$default`(v9, v10, v11, v12, v13, v14) @signature `Lkotlin/text/StringsKt;.replace$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1dd084.  v15:= temp @kind object;
  #L1dd086.  v18:= 0I;
  #L1dd08a.  v19:= 4I;
  #L1dd08e.  v20:= 0I;
  #L1dd092.  v16:= "\n" @kind object;
  #L1dd096.  v17:= "\\n" @kind object;
  #L1dd09a.  call temp:= `replace$default`(v15, v16, v17, v18, v19, v20) @signature `Lkotlin/text/StringsKt;.replace$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1dd0a0.  v9:= temp @kind object;
  #L1dd0a2.  v10:= "\r" @kind object;
  #L1dd0a6.  v11:= "\\r" @kind object;
  #L1dd0aa.  call temp:= `replace$default`(v9, v10, v11, v12, v13, v14) @signature `Lkotlin/text/StringsKt;.replace$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1dd0b0.  v3:= temp @kind object;
  #L1dd0b2.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1dd0b8.  v2:= temp;
  #L1dd0ba.  if v0 >= v2 then goto L1dd0fe;
  #L1dd0be.  v0:= new `java.lang.StringBuilder`;
  #L1dd0c2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dd0c8.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dd0ce.  call temp:= `getData$okio`(v21) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dd0d4.  v1:= temp @kind object;
  #L1dd0d6.  v1:= length @variable v1;
  #L1dd0d8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dd0de.  v1:= " text=" @kind object;
  #L1dd0e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dd0e8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dd0ee.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dd0f4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dd0fa.  v0:= temp @kind object;
  #L1dd0fc.  goto L1dd126;
  #L1dd0fe.  v0:= new `java.lang.StringBuilder`;
  #L1dd102.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dd108.  v1:= "[text=" @kind object;
  #L1dd10c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dd112.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dd118.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dd11e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dd124.  v0:= temp @kind object;
  #L1dd126.  return v0 @kind object;
  #L1dd128.  v0:= new `java.lang.NullPointerException`;
  #L1dd12c.  v1:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L1dd130.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dd136.  throw v0;
}
procedure `java.lang.String` `commonUtf8`(`okio.ByteString` v1 @kind object) @signature `Lokio/internal/ByteStringKt;.commonUtf8:(Lokio/ByteString;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1dd148.  v0:= "$this$commonUtf8" @kind object;
  #L1dd14c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dd152.  call temp:= `getUtf8$okio`(v1) @signature `Lokio/ByteString;.getUtf8$okio:()Ljava/lang/String;` @kind virtual;
  #L1dd158.  v0:= temp @kind object;
  #L1dd15a.  if v0 != 0 then goto L1dd174;
  #L1dd15e.  call temp:= `internalArray$okio`(v1) @signature `Lokio/ByteString;.internalArray$okio:()[B` @kind virtual;
  #L1dd164.  v0:= temp @kind object;
  #L1dd166.  call temp:= `toUtf8String`(v0) @signature `Lokio/-Platform;.toUtf8String:([B)Ljava/lang/String;` @kind static;
  #L1dd16c.  v0:= temp @kind object;
  #L1dd16e.  call `setUtf8$okio`(v1, v0) @signature `Lokio/ByteString;.setUtf8$okio:(Ljava/lang/String;)V` @kind virtual;
  #L1dd174.  return v0 @kind object;
}
procedure `void` `commonWrite`(`okio.ByteString` v1 @kind object, `okio.Buffer` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokio/internal/ByteStringKt;.commonWrite:(Lokio/ByteString;Lokio/Buffer;II)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1dd5e4.  v0:= "$this$commonWrite" @kind object;
  #L1dd5e8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dd5ee.  v0:= "buffer" @kind object;
  #L1dd5f2.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dd5f8.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1dd5fe.  v1:= temp @kind object;
  #L1dd600.  call temp:= `write`(v2, v1, v3, v4) @signature `Lokio/Buffer;.write:([BII)Lokio/Buffer;` @kind virtual;
  #L1dd606.  return @kind void;
}
procedure `char`[] `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1dc76c.  v0:= `@@okio.internal.ByteStringKt.a` @type ^`char`[] @kind object;
  #L1dc770.  return v0 @kind object;
}
