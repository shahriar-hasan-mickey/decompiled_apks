record `okio.f` @kind class @AccessFlag FINAL extends `okio.AsyncTimeout` @kind class {
  `java.net.Socket` `okio.f.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.f` v1 @kind this, `java.net.Socket` v2 @kind object) @signature `Lokio/f;.<init>:(Ljava/net/Socket;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d744c.  v0:= "socket" @kind object;
  #L1d7450.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d7456.  call `<init>`(v1) @signature `Lokio/AsyncTimeout;.<init>:()V` @kind direct;
  #L1d745c.  v1.`okio.f.a` @type ^`java.net.Socket` := v2 @kind object;
  #L1d7460.  return @kind void;
}
procedure `java.io.IOException` `newTimeoutException`(`okio.f` v2 @kind this, `java.io.IOException` v3 @kind object) @signature `Lokio/f;.newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1d7420.  v0:= new `java.net.SocketTimeoutException`;
  #L1d7424.  v1:= "timeout" @kind object;
  #L1d7428.  call `<init>`(v0, v1) @signature `Ljava/net/SocketTimeoutException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d742e.  if v3 == 0 then goto L1d7438;
  #L1d7432.  call temp:= `initCause`(v0, v3) @signature `Ljava/net/SocketTimeoutException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L1d7438.  return v0 @kind object;
}
procedure `void` `timedOut`(`okio.f` v5 @kind this) @signature `Lokio/f;.timedOut:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1d7474.  v0:= "Failed to close timed out socket " @kind object;
  #L1d7478.  v1:= v5.`okio.f.a` @type ^`java.net.Socket` @kind object;
  #L1d747c.  call `close`(v1) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #L1d7482.  goto L1d7500;
  #L1d7484.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L1d7486.  call temp:= `isAndroidGetsocknameError`(v1) @signature `Lokio/Okio;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L1d748c.  v2:= temp;
  #L1d748e.  if v2 == 0 then goto L1d74c8;
  #L1d7492.  call temp:= `a`() @signature `Lokio/c;.a:()Ljava/util/logging/Logger;` @kind static;
  #L1d7498.  v2:= temp @kind object;
  #L1d749a.  v3:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L1d749e.  v4:= new `java.lang.StringBuilder`;
  #L1d74a2.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d74a8.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d74ae.  v0:= v5.`okio.f.a` @type ^`java.net.Socket` @kind object;
  #L1d74b2.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d74b8.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d74be.  v0:= temp @kind object;
  #L1d74c0.  call `log`(v2, v3, v0, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L1d74c6.  goto L1d7500;
  #L1d74c8.  throw v1;
  #L1d74ca.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L1d74cc.  call temp:= `a`() @signature `Lokio/c;.a:()Ljava/util/logging/Logger;` @kind static;
  #L1d74d2.  v2:= temp @kind object;
  #L1d74d4.  v3:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L1d74d8.  v4:= new `java.lang.StringBuilder`;
  #L1d74dc.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d74e2.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d74e8.  v0:= v5.`okio.f.a` @type ^`java.net.Socket` @kind object;
  #L1d74ec.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d74f2.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d74f8.  v0:= temp @kind object;
  #L1d74fa.  call `log`(v2, v3, v0, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L1d7500.  return @kind void;
  catch `java.lang.Exception` @[L1d7478..L1d7482] goto L1d74ca;
  catch `java.lang.AssertionError` @[L1d7478..L1d7482] goto L1d7484;
}
