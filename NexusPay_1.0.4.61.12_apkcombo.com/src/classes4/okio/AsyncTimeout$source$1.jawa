record `okio.AsyncTimeout$source$1` @kind class @AccessFlag PUBLIC_FINAL extends `okio.Source` @kind interface {
  `okio.AsyncTimeout` `okio.AsyncTimeout$source$1.a` @AccessFlag FINAL_SYNTHETIC;
  `okio.Source` `okio.AsyncTimeout$source$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.AsyncTimeout$source$1` v0 @kind this, `okio.AsyncTimeout` v1 @kind object, `okio.Source` v2 @kind object) @signature `Lokio/AsyncTimeout$source$1;.<init>:(Lokio/AsyncTimeout;Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1ca0a0.  v0.`okio.AsyncTimeout$source$1.a` @type ^`okio.AsyncTimeout` := v1 @kind object;
  #L1ca0a4.  v0.`okio.AsyncTimeout$source$1.b` @type ^`okio.Source` := v2 @kind object;
  #L1ca0a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ca0ae.  return @kind void;
}
procedure `void` `close`(`okio.AsyncTimeout$source$1` v3 @kind this) @signature `Lokio/AsyncTimeout$source$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ca0c0.  v0:= v3.`okio.AsyncTimeout$source$1.a` @type ^`okio.AsyncTimeout` @kind object;
  #L1ca0c4.  call `enter`(v0) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L1ca0ca.  v1:= v3.`okio.AsyncTimeout$source$1.b` @type ^`okio.Source` @kind object;
  #L1ca0ce.  call `close`(v1) @signature `Lokio/Source;.close:()V` @kind interface;
  #L1ca0d4.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1ca0d8.  call temp:= `exit`(v0) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1ca0de.  v1:= temp;
  #L1ca0e0.  if v1 != 0 then goto L1ca0e6;
  #L1ca0e4.  return @kind void;
  #L1ca0e6.  v1:= 0I;
  #L1ca0e8.  call temp:= `access$newTimeoutException`(v0, v1) @signature `Lokio/AsyncTimeout;.access$newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1ca0ee.  v0:= temp @kind object;
  #L1ca0f0.  throw v0;
  #L1ca0f2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ca0f4.  goto L1ca110;
  #L1ca0f6.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L1ca0f8.  call temp:= `exit`(v0) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1ca0fe.  v2:= temp;
  #L1ca100.  if v2 != 0 then goto L1ca106;
  #L1ca104.  goto L1ca10e;
  #L1ca106.  call temp:= `access$newTimeoutException`(v0, v1) @signature `Lokio/AsyncTimeout;.access$newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1ca10c.  v1:= temp @kind object;
  #L1ca10e.  throw v1;
  #L1ca110.  call temp:= `exit`(v0) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1ca116.  v0:= temp;
  #L1ca118.  throw v1;
  catch `java.io.IOException` @[L1ca0ca..L1ca0d8] goto L1ca0f6;
  catch `java.lang.Throwable` @[L1ca0ca..L1ca0d8] goto L1ca0f2;
  catch `java.lang.Throwable` @[L1ca0f8..L1ca110] goto L1ca0f2;
}
procedure `long` `read`(`okio.AsyncTimeout$source$1` v2 @kind this, `okio.Buffer` v3 @kind object, `long` v4 ) @signature `Lokio/AsyncTimeout$source$1;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c9fe0.  v0:= "sink" @kind object;
  #L1c9fe4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c9fea.  v0:= v2.`okio.AsyncTimeout$source$1.a` @type ^`okio.AsyncTimeout` @kind object;
  #L1c9fee.  call `enter`(v0) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L1c9ff4.  v1:= v2.`okio.AsyncTimeout$source$1.b` @type ^`okio.Source` @kind object;
  #L1c9ff8.  call temp:= `read`(v1, v3, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1c9ffe.  v3:= temp @kind wide;
  #L1ca000.  call temp:= `exit`(v0) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1ca006.  v5:= temp;
  #L1ca008.  if v5 != 0 then goto L1ca00e;
  #L1ca00c.  return v3 @kind wide;
  #L1ca00e.  v3:= 0I;
  #L1ca010.  call temp:= `access$newTimeoutException`(v0, v3) @signature `Lokio/AsyncTimeout;.access$newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1ca016.  v3:= temp @kind object;
  #L1ca018.  throw v3;
  #L1ca01a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ca01c.  goto L1ca038;
  #L1ca01e.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L1ca020.  call temp:= `exit`(v0) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1ca026.  v4:= temp;
  #L1ca028.  if v4 != 0 then goto L1ca02e;
  #L1ca02c.  goto L1ca036;
  #L1ca02e.  call temp:= `access$newTimeoutException`(v0, v3) @signature `Lokio/AsyncTimeout;.access$newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1ca034.  v3:= temp @kind object;
  #L1ca036.  throw v3;
  #L1ca038.  call temp:= `exit`(v0) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1ca03e.  v4:= temp;
  #L1ca040.  throw v3;
  catch `java.io.IOException` @[L1c9ff4..L1ca000] goto L1ca01e;
  catch `java.lang.Throwable` @[L1c9ff4..L1ca000] goto L1ca01a;
  catch `java.lang.Throwable` @[L1ca020..L1ca038] goto L1ca01a;
}
procedure `okio.AsyncTimeout` `timeout`(`okio.AsyncTimeout$source$1` v1 @kind this) @signature `Lokio/AsyncTimeout$source$1;.timeout:()Lokio/AsyncTimeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ca06c.  v0:= v1.`okio.AsyncTimeout$source$1.a` @type ^`okio.AsyncTimeout` @kind object;
  #L1ca070.  return v0 @kind object;
}
procedure `okio.Timeout` `timeout`(`okio.AsyncTimeout$source$1` v1 @kind this) @signature `Lokio/AsyncTimeout$source$1;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1ca084.  call temp:= `timeout`(v1) @signature `Lokio/AsyncTimeout$source$1;.timeout:()Lokio/AsyncTimeout;` @kind virtual;
  #L1ca08a.  v0:= temp @kind object;
  #L1ca08c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.AsyncTimeout$source$1` v2 @kind this) @signature `Lokio/AsyncTimeout$source$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c9f9c.  v0:= new `java.lang.StringBuilder`;
  #L1c9fa0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c9fa6.  v1:= "AsyncTimeout.source(" @kind object;
  #L1c9faa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c9fb0.  v1:= v2.`okio.AsyncTimeout$source$1.b` @type ^`okio.Source` @kind object;
  #L1c9fb4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c9fba.  v1:= 41I;
  #L1c9fbe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c9fc4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c9fca.  v0:= temp @kind object;
  #L1c9fcc.  return v0 @kind object;
}
