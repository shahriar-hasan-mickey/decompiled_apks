record `okio.GzipSource` @kind class @AccessFlag PUBLIC_FINAL extends `okio.Source` @kind interface {
  `byte` `okio.GzipSource.a` @AccessFlag PRIVATE;
  `okio.RealBufferedSource` `okio.GzipSource.b` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.Inflater` `okio.GzipSource.c` @AccessFlag PRIVATE_FINAL;
  `okio.InflaterSource` `okio.GzipSource.d` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.CRC32` `okio.GzipSource.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.GzipSource` v2 @kind this, `okio.Source` v3 @kind object) @signature `Lokio/GzipSource;.<init>:(Lokio/Source;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1d0ff4.  v0:= "source" @kind object;
  #L1d0ff8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d0ffe.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d1004.  v0:= new `okio.RealBufferedSource`;
  #L1d1008.  call `<init>`(v0, v3) @signature `Lokio/RealBufferedSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L1d100e.  v2.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` := v0 @kind object;
  #L1d1012.  v3:= new `java.util.zip.Inflater`;
  #L1d1016.  v0:= 1I;
  #L1d1018.  call `<init>`(v3, v0) @signature `Ljava/util/zip/Inflater;.<init>:(Z)V` @kind direct;
  #L1d101e.  v2.`okio.GzipSource.c` @type ^`java.util.zip.Inflater` := v3 @kind object;
  #L1d1022.  v0:= new `okio.InflaterSource`;
  #L1d1026.  v1:= v2.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d102a.  call `<init>`(v0, v1, v3) @signature `Lokio/InflaterSource;.<init>:(Lokio/BufferedSource;Ljava/util/zip/Inflater;)V` @kind direct;
  #L1d1030.  v2.`okio.GzipSource.d` @type ^`okio.InflaterSource` := v0 @kind object;
  #L1d1034.  v3:= new `java.util.zip.CRC32`;
  #L1d1038.  call `<init>`(v3) @signature `Ljava/util/zip/CRC32;.<init>:()V` @kind direct;
  #L1d103e.  v2.`okio.GzipSource.e` @type ^`java.util.zip.CRC32` := v3 @kind object;
  #L1d1042.  return @kind void;
}
procedure `void` `a`(`okio.GzipSource` v4 @kind this, `java.lang.String` v5 @kind object, `int` v6 , `int` v7 ) @signature `Lokio/GzipSource;.a:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d1054.  if v7 != v6 then goto L1d105a;
  #L1d1058.  return @kind void;
  #L1d105a.  v0:= new `java.io.IOException`;
  #L1d105e.  v1:= 3I;
  #L1d1060.  v2:= new `java.lang.Object`[v1];
  #L1d1064.  v3:= 0I;
  #L1d1066.  v2[v3]:= v5 @kind object;
  #L1d106a.  v5:= 1I;
  #L1d106c.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d1072.  v7:= temp @kind object;
  #L1d1074.  v2[v5]:= v7 @kind object;
  #L1d1078.  v5:= 2I;
  #L1d107a.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d1080.  v6:= temp @kind object;
  #L1d1082.  v2[v5]:= v6 @kind object;
  #L1d1086.  call temp:= `copyOf`(v2, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L1d108c.  v5:= temp @kind object;
  #L1d108e.  v6:= "%s: actual 0x%08x != expected 0x%08x" @kind object;
  #L1d1092.  call temp:= `format`(v6, v5) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1d1098.  v5:= temp @kind object;
  #L1d109a.  v6:= "java.lang.String.format(this, *args)" @kind object;
  #L1d109e.  call `checkNotNullExpressionValue`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d10a4.  call `<init>`(v0, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d10aa.  throw v0;
}
procedure `void` `b`(`okio.GzipSource` v17 @kind this) @signature `Lokio/GzipSource;.b:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L1d10d8.  v6:= v17 @kind object;
  #L1d10dc.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d10e0.  v1:= 10L;
  #L1d10e4.  call `require`(v0, v1) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d10ea.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d10ee.  v0:= v0.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d10f2.  v1:= 3L;
  #L1d10f6.  call temp:= `getByte`(v0, v1) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L1d10fc.  v7:= temp;
  #L1d10fe.  v0:= v7 ^> 1;
  #L1d1102.  v8:= 1I;
  #L1d1104.  v0:= v0 ^& v8 @kind int;
  #L1d1106.  v9:= 0I;
  #L1d1108.  if v0 != v8 then goto L1d1110;
  #L1d110c.  v10:= 1I;
  #L1d110e.  goto L1d1112;
  #L1d1110.  v10:= 0I;
  #L1d1112.  if v10 == 0 then goto L1d1130;
  #L1d1116.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d111a.  v1:= v0.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d111e.  v2:= 0L;
  #L1d1122.  v4:= 10L;
  #L1d1126.  v0:= v17 @kind object;
  #L1d112a.  call `d`(v0, v1, v2, v4) @signature `Lokio/GzipSource;.d:(Lokio/Buffer;JJ)V` @kind direct;
  #L1d1130.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d1134.  call temp:= `readShort`(v0) @signature `Lokio/RealBufferedSource;.readShort:()S` @kind virtual;
  #L1d113a.  v0:= temp;
  #L1d113c.  v1:= 8075I;
  #L1d1140.  v2:= "ID1ID2" @kind object;
  #L1d1144.  call `a`(v6, v2, v1, v0) @signature `Lokio/GzipSource;.a:(Ljava/lang/String;II)V` @kind direct;
  #L1d114a.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d114e.  v1:= 8L;
  #L1d1152.  call `skip`(v0, v1) @signature `Lokio/RealBufferedSource;.skip:(J)V` @kind virtual;
  #L1d1158.  v0:= v7 ^> 2;
  #L1d115c.  v0:= v0 ^& v8 @kind int;
  #L1d115e.  if v0 != v8 then goto L1d1166;
  #L1d1162.  v0:= 1I;
  #L1d1164.  goto L1d1168;
  #L1d1166.  v0:= 0I;
  #L1d1168.  if v0 == 0 then goto L1d11da;
  #L1d116c.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d1170.  v1:= 2L;
  #L1d1174.  call `require`(v0, v1) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d117a.  if v10 == 0 then goto L1d1198;
  #L1d117e.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d1182.  v1:= v0.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d1186.  v2:= 0L;
  #L1d118a.  v4:= 2L;
  #L1d118e.  v0:= v17 @kind object;
  #L1d1192.  call `d`(v0, v1, v2, v4) @signature `Lokio/GzipSource;.d:(Lokio/Buffer;JJ)V` @kind direct;
  #L1d1198.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d119c.  v0:= v0.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d11a0.  call temp:= `readShortLe`(v0) @signature `Lokio/Buffer;.readShortLe:()S` @kind virtual;
  #L1d11a6.  v0:= temp;
  #L1d11a8.  v11:= (`long`) v0 @kind i2l;
  #L1d11aa.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d11ae.  call `require`(v0, v11) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d11b4.  if v10 == 0 then goto L1d11d0;
  #L1d11b8.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d11bc.  v1:= v0.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d11c0.  v2:= 0L;
  #L1d11c4.  v0:= v17 @kind object;
  #L1d11c8.  v4:= v11 @kind wide;
  #L1d11ca.  call `d`(v0, v1, v2, v4) @signature `Lokio/GzipSource;.d:(Lokio/Buffer;JJ)V` @kind direct;
  #L1d11d0.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d11d4.  call `skip`(v0, v11) @signature `Lokio/RealBufferedSource;.skip:(J)V` @kind virtual;
  #L1d11da.  v0:= v7 ^> 3;
  #L1d11de.  v0:= v0 ^& v8 @kind int;
  #L1d11e0.  if v0 != v8 then goto L1d11e8;
  #L1d11e4.  v0:= 1I;
  #L1d11e6.  goto L1d11ea;
  #L1d11e8.  v0:= 0I;
  #L1d11ea.  v11:= -1L;
  #L1d11ee.  v13:= 1L;
  #L1d11f2.  if v0 == 0 then goto L1d1244;
  #L1d11f6.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d11fa.  call temp:= `indexOf`(v0, v9) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @kind virtual;
  #L1d1200.  v15:= temp @kind wide;
  #L1d1202.  v0:= lcmp(v15, v11);
  #L1d1206.  if v0 == 0 then goto L1d1238;
  #L1d120a.  if v10 == 0 then goto L1d1228;
  #L1d120e.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d1212.  v1:= v0.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d1216.  v2:= 0L;
  #L1d121a.  v4:= v15 + v13 @kind long;
  #L1d121e.  v0:= v17 @kind object;
  #L1d1222.  call `d`(v0, v1, v2, v4) @signature `Lokio/GzipSource;.d:(Lokio/Buffer;JJ)V` @kind direct;
  #L1d1228.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d122c.  v1:= v15 + v13 @kind long;
  #L1d1230.  call `skip`(v0, v1) @signature `Lokio/RealBufferedSource;.skip:(J)V` @kind virtual;
  #L1d1236.  goto L1d1244;
  #L1d1238.  v0:= new `java.io.EOFException`;
  #L1d123c.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L1d1242.  throw v0;
  #L1d1244.  v0:= v7 ^> 4;
  #L1d1248.  v0:= v0 ^& v8 @kind int;
  #L1d124a.  if v0 != v8 then goto L1d1250;
  #L1d124e.  goto L1d1252;
  #L1d1250.  v8:= 0I;
  #L1d1252.  if v8 == 0 then goto L1d12a2;
  #L1d1256.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d125a.  call temp:= `indexOf`(v0, v9) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @kind virtual;
  #L1d1260.  v7:= temp @kind wide;
  #L1d1262.  v0:= lcmp(v7, v11);
  #L1d1266.  if v0 == 0 then goto L1d1296;
  #L1d126a.  if v10 == 0 then goto L1d1288;
  #L1d126e.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d1272.  v1:= v0.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d1276.  v2:= 0L;
  #L1d127a.  v4:= v7 + v13 @kind long;
  #L1d127e.  v0:= v17 @kind object;
  #L1d1282.  call `d`(v0, v1, v2, v4) @signature `Lokio/GzipSource;.d:(Lokio/Buffer;JJ)V` @kind direct;
  #L1d1288.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d128c.  v7:= v7 + v13 @kind long;
  #L1d128e.  call `skip`(v0, v7) @signature `Lokio/RealBufferedSource;.skip:(J)V` @kind virtual;
  #L1d1294.  goto L1d12a2;
  #L1d1296.  v0:= new `java.io.EOFException`;
  #L1d129a.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L1d12a0.  throw v0;
  #L1d12a2.  if v10 == 0 then goto L1d12d6;
  #L1d12a6.  v0:= v6.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d12aa.  call temp:= `readShortLe`(v0) @signature `Lokio/RealBufferedSource;.readShortLe:()S` @kind virtual;
  #L1d12b0.  v0:= temp;
  #L1d12b2.  v1:= v6.`okio.GzipSource.e` @type ^`java.util.zip.CRC32` @kind object;
  #L1d12b6.  call temp:= `getValue`(v1) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L1d12bc.  v1:= temp @kind wide;
  #L1d12be.  v2:= (`int`) v1 @kind l2i;
  #L1d12c0.  v1:= (`short`) v2 @kind i2s;
  #L1d12c2.  v2:= "FHCRC" @kind object;
  #L1d12c6.  call `a`(v6, v2, v0, v1) @signature `Lokio/GzipSource;.a:(Ljava/lang/String;II)V` @kind direct;
  #L1d12cc.  v0:= v6.`okio.GzipSource.e` @type ^`java.util.zip.CRC32` @kind object;
  #L1d12d0.  call `reset`(v0) @signature `Ljava/util/zip/CRC32;.reset:()V` @kind virtual;
  #L1d12d6.  return @kind void;
}
procedure `void` `c`(`okio.GzipSource` v3 @kind this) @signature `Lokio/GzipSource;.c:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1d12e8.  v0:= v3.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d12ec.  call temp:= `readIntLe`(v0) @signature `Lokio/RealBufferedSource;.readIntLe:()I` @kind virtual;
  #L1d12f2.  v0:= temp;
  #L1d12f4.  v1:= v3.`okio.GzipSource.e` @type ^`java.util.zip.CRC32` @kind object;
  #L1d12f8.  call temp:= `getValue`(v1) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L1d12fe.  v1:= temp @kind wide;
  #L1d1300.  v2:= (`int`) v1 @kind l2i;
  #L1d1302.  v1:= "CRC" @kind object;
  #L1d1306.  call `a`(v3, v1, v0, v2) @signature `Lokio/GzipSource;.a:(Ljava/lang/String;II)V` @kind direct;
  #L1d130c.  v0:= v3.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d1310.  call temp:= `readIntLe`(v0) @signature `Lokio/RealBufferedSource;.readIntLe:()I` @kind virtual;
  #L1d1316.  v0:= temp;
  #L1d1318.  v1:= v3.`okio.GzipSource.c` @type ^`java.util.zip.Inflater` @kind object;
  #L1d131c.  call temp:= `getBytesWritten`(v1) @signature `Ljava/util/zip/Inflater;.getBytesWritten:()J` @kind virtual;
  #L1d1322.  v1:= temp @kind wide;
  #L1d1324.  v2:= (`int`) v1 @kind l2i;
  #L1d1326.  v1:= "ISIZE" @kind object;
  #L1d132a.  call `a`(v3, v1, v0, v2) @signature `Lokio/GzipSource;.a:(Ljava/lang/String;II)V` @kind direct;
  #L1d1330.  return @kind void;
}
procedure `void` `d`(`okio.GzipSource` v5 @kind this, `okio.Buffer` v6 @kind object, `long` v7 , `long` v9 ) @signature `Lokio/GzipSource;.d:(Lokio/Buffer;JJ)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1d1344.  v6:= v6.`okio.Buffer.head` @type ^`okio.Segment` @kind object;
  #L1d1348.  call `checkNotNull`(v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1d134e.  v0:= v6.`okio.Segment.limit` @type ^`int`;
  #L1d1352.  v1:= v6.`okio.Segment.pos` @type ^`int`;
  #L1d1356.  v2:= v0 - v1 @kind int;
  #L1d135a.  v2:= (`long`) v2 @kind i2l;
  #L1d135c.  v4:= lcmp(v7, v2);
  #L1d1360.  if v4 < 0 then goto L1d1376;
  #L1d1364.  v0:= v0 - v1 @kind int;
  #L1d1366.  v0:= (`long`) v0 @kind i2l;
  #L1d1368.  v7:= v7 - v0 @kind long;
  #L1d136a.  v6:= v6.`okio.Segment.next` @type ^`okio.Segment` @kind object;
  #L1d136e.  call `checkNotNull`(v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1d1374.  goto L1d134e;
  #L1d1376.  v0:= 0L;
  #L1d137a.  v2:= lcmp(v9, v0);
  #L1d137e.  if v2 <= 0 then goto L1d13be;
  #L1d1382.  v2:= v6.`okio.Segment.pos` @type ^`int`;
  #L1d1386.  v2:= (`long`) v2 @kind i2l;
  #L1d1388.  v2:= v2 + v7 @kind long;
  #L1d138a.  v7:= (`int`) v2 @kind l2i;
  #L1d138c.  v8:= v6.`okio.Segment.limit` @type ^`int`;
  #L1d1390.  v8:= v8 - v7 @kind int;
  #L1d1392.  v2:= (`long`) v8 @kind i2l;
  #L1d1394.  call temp:= `min`(v2, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1d139a.  v2:= temp @kind wide;
  #L1d139c.  v8:= (`int`) v2 @kind l2i;
  #L1d139e.  v2:= v5.`okio.GzipSource.e` @type ^`java.util.zip.CRC32` @kind object;
  #L1d13a2.  v3:= v6.`okio.Segment.data` @type ^`byte`[] @kind object;
  #L1d13a6.  call `update`(v2, v3, v7, v8) @signature `Ljava/util/zip/CRC32;.update:([BII)V` @kind virtual;
  #L1d13ac.  v7:= (`long`) v8 @kind i2l;
  #L1d13ae.  v9:= v9 - v7 @kind long;
  #L1d13b0.  v6:= v6.`okio.Segment.next` @type ^`okio.Segment` @kind object;
  #L1d13b4.  call `checkNotNull`(v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1d13ba.  v7:= v0 @kind wide;
  #L1d13bc.  goto L1d137a;
  #L1d13be.  return @kind void;
}
procedure `void` `close`(`okio.GzipSource` v1 @kind this) @signature `Lokio/GzipSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d10bc.  v0:= v1.`okio.GzipSource.d` @type ^`okio.InflaterSource` @kind object;
  #L1d10c0.  call `close`(v0) @signature `Lokio/InflaterSource;.close:()V` @kind virtual;
  #L1d10c6.  return @kind void;
}
procedure `long` `read`(`okio.GzipSource` v11 @kind this, `okio.Buffer` v12 @kind object, `long` v13 ) @signature `Lokio/GzipSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1d0ee0.  v0:= "sink" @kind object;
  #L1d0ee4.  call `checkNotNullParameter`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d0eea.  v0:= 0L;
  #L1d0eee.  v2:= 1I;
  #L1d0ef0.  v3:= lcmp(v13, v0);
  #L1d0ef4.  if v3 < 0 then goto L1d0efc;
  #L1d0ef8.  v4:= 1I;
  #L1d0efa.  goto L1d0efe;
  #L1d0efc.  v4:= 0I;
  #L1d0efe.  if v4 == 0 then goto L1d0f8e;
  #L1d0f02.  if v3 != 0 then goto L1d0f08;
  #L1d0f06.  return v0 @kind wide;
  #L1d0f08.  v0:= v11.`okio.GzipSource.a` @type ^`byte` @kind byte;
  #L1d0f0c.  if v0 != 0 then goto L1d0f1a;
  #L1d0f10.  call `b`(v11) @signature `Lokio/GzipSource;.b:()V` @kind direct;
  #L1d0f16.  v11.`okio.GzipSource.a` @type ^`byte` := v2 @kind byte;
  #L1d0f1a.  v0:= v11.`okio.GzipSource.a` @type ^`byte` @kind byte;
  #L1d0f1e.  v3:= -1L;
  #L1d0f22.  v1:= 2I;
  #L1d0f24.  if v0 != v2 then goto L1d0f56;
  #L1d0f28.  call temp:= `size`(v12) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d0f2e.  v7:= temp @kind wide;
  #L1d0f30.  v0:= v11.`okio.GzipSource.d` @type ^`okio.InflaterSource` @kind object;
  #L1d0f34.  call temp:= `read`(v0, v12, v13) @signature `Lokio/InflaterSource;.read:(Lokio/Buffer;J)J` @kind virtual;
  #L1d0f3a.  v13:= temp @kind wide;
  #L1d0f3c.  v0:= lcmp(v13, v3);
  #L1d0f40.  if v0 == 0 then goto L1d0f52;
  #L1d0f44.  v5:= v11 @kind object;
  #L1d0f46.  v6:= v12 @kind object;
  #L1d0f48.  v9:= v13 @kind wide;
  #L1d0f4a.  call `d`(v5, v6, v7, v9) @signature `Lokio/GzipSource;.d:(Lokio/Buffer;JJ)V` @kind direct;
  #L1d0f50.  return v13 @kind wide;
  #L1d0f52.  v11.`okio.GzipSource.a` @type ^`byte` := v1 @kind byte;
  #L1d0f56.  v12:= v11.`okio.GzipSource.a` @type ^`byte` @kind byte;
  #L1d0f5a.  if v12 != v1 then goto L1d0f8c;
  #L1d0f5e.  call `c`(v11) @signature `Lokio/GzipSource;.c:()V` @kind direct;
  #L1d0f64.  v12:= 3I;
  #L1d0f66.  v11.`okio.GzipSource.a` @type ^`byte` := v12 @kind byte;
  #L1d0f6a.  v12:= v11.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d0f6e.  call temp:= `exhausted`(v12) @signature `Lokio/RealBufferedSource;.exhausted:()Z` @kind virtual;
  #L1d0f74.  v12:= temp;
  #L1d0f76.  if v12 == 0 then goto L1d0f7c;
  #L1d0f7a.  goto L1d0f8c;
  #L1d0f7c.  v12:= new `java.io.IOException`;
  #L1d0f80.  v13:= "gzip finished without exhausting source" @kind object;
  #L1d0f84.  call `<init>`(v12, v13) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d0f8a.  throw v12;
  #L1d0f8c.  return v3 @kind wide;
  #L1d0f8e.  v12:= new `java.lang.StringBuilder`;
  #L1d0f92.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d0f98.  v0:= "byteCount < 0: " @kind object;
  #L1d0f9c.  call temp:= `append`(v12, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d0fa2.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d0fa8.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d0fae.  v12:= temp @kind object;
  #L1d0fb0.  v13:= new `java.lang.IllegalArgumentException`;
  #L1d0fb4.  call temp:= `toString`(v12) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d0fba.  v12:= temp @kind object;
  #L1d0fbc.  call `<init>`(v13, v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d0fc2.  throw v13;
}
procedure `okio.Timeout` `timeout`(`okio.GzipSource` v1 @kind this) @signature `Lokio/GzipSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d0fd4.  v0:= v1.`okio.GzipSource.b` @type ^`okio.RealBufferedSource` @kind object;
  #L1d0fd8.  call temp:= `timeout`(v0) @signature `Lokio/RealBufferedSource;.timeout:()Lokio/Timeout;` @kind virtual;
  #L1d0fde.  v0:= temp @kind object;
  #L1d0fe0.  return v0 @kind object;
}
