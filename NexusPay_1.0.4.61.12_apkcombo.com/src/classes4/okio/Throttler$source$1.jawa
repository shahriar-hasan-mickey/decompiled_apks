record `okio.Throttler$source$1` @kind class @AccessFlag PUBLIC_FINAL extends `okio.ForwardingSource` @kind class {
  `okio.Throttler` `okio.Throttler$source$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.Throttler$source$1` v0 @kind this, `okio.Throttler` v1 @kind object, `okio.Source` v2 @kind object, `okio.Source` v3 @kind object) @signature `Lokio/Throttler$source$1;.<init>:(Lokio/Throttler;Lokio/Source;Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1d760c.  v0.`okio.Throttler$source$1.a` @type ^`okio.Throttler` := v1 @kind object;
  #L1d7610.  call `<init>`(v0, v3) @signature `Lokio/ForwardingSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L1d7616.  return @kind void;
}
procedure `long` `read`(`okio.Throttler$source$1` v1 @kind this, `okio.Buffer` v2 @kind object, `long` v3 ) @signature `Lokio/Throttler$source$1;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d75ac.  v0:= "sink" @kind object;
  #L1d75b0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d75b6.  v0:= v1.`okio.Throttler$source$1.a` @type ^`okio.Throttler` @kind object;
  #L1d75ba.  call temp:= `take$okio`(v0, v3) @signature `Lokio/Throttler;.take$okio:(J)J` @kind virtual;
  #L1d75c0.  v3:= temp @kind wide;
  #L1d75c2.  call temp:= `read`(v1, v2, v3) @signature `Lokio/ForwardingSource;.read:(Lokio/Buffer;J)J` @kind super;
  #L1d75c8.  v2:= temp @kind wide;
  #L1d75ca.  return v2 @kind wide;
  #L1d75cc.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1d75d2.  v2:= temp @kind object;
  #L1d75d4.  call `interrupt`(v2) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L1d75da.  v2:= new `java.io.InterruptedIOException`;
  #L1d75de.  v3:= "interrupted" @kind object;
  #L1d75e2.  call `<init>`(v2, v3) @signature `Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d75e8.  throw v2;
  catch `java.lang.InterruptedException` @[L1d75b6..L1d75ca] goto L1d75cc;
}
