record `okio.ByteString` @kind class @AccessFlag PUBLIC extends `java.io.Serializable` @kind interface, `java.lang.Comparable` @kind interface {
  `int` `okio.ByteString.a` @AccessFlag PRIVATE_TRANSIENT;
  `java.lang.String` `okio.ByteString.b` @AccessFlag PRIVATE_TRANSIENT;
  `byte`[] `okio.ByteString.c` @AccessFlag PRIVATE_FINAL;
}
global `okio.ByteString$Companion` `@@okio.ByteString.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okio.ByteString.EMPTY` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@okio.ByteString.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/ByteString;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1cfcc4.  v0:= new `okio.ByteString$Companion`;
  #L1cfcc8.  v1:= 0I;
  #L1cfcca.  call `<init>`(v0, v1) @signature `Lokio/ByteString$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1cfcd0.  `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` := v0 @kind object;
  #L1cfcd4.  v0:= new `okio.ByteString`;
  #L1cfcd8.  v1:= 0I;
  #L1cfcda.  v1:= new `byte`[v1];
  #L1cfcde.  call `<init>`(v0, v1) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L1cfce4.  `@@okio.ByteString.EMPTY` @type ^`okio.ByteString` := v0 @kind object;
  #L1cfce8.  return @kind void;
}
procedure `void` `<init>`(`okio.ByteString` v1 @kind this, `byte`[] v2 @kind object) @signature `Lokio/ByteString;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1cfcfc.  v0:= "data" @kind object;
  #L1cfd00.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cfd06.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1cfd0c.  v1.`okio.ByteString.c` @type ^`byte`[] := v2 @kind object;
  #L1cfd10.  return @kind void;
}
procedure `okio.ByteString` `decodeBase64`(`java.lang.String` v1 @kind object) @signature `Lokio/ByteString;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1cf724.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1cf728.  call temp:= `decodeBase64`(v0, v1) @signature `Lokio/ByteString$Companion;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1cf72e.  v1:= temp @kind object;
  #L1cf730.  return v1 @kind object;
}
procedure `okio.ByteString` `decodeHex`(`java.lang.String` v1 @kind object) @signature `Lokio/ByteString;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1cf744.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1cf748.  call temp:= `decodeHex`(v0, v1) @signature `Lokio/ByteString$Companion;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1cf74e.  v1:= temp @kind object;
  #L1cf750.  return v1 @kind object;
}
procedure `okio.ByteString` `encodeString`(`java.lang.String` v1 @kind object, `java.nio.charset.Charset` v2 @kind object) @signature `Lokio/ByteString;.encodeString:(Ljava/lang/String;Ljava/nio/charset/Charset;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1cf7b8.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1cf7bc.  call temp:= `encodeString`(v0, v1, v2) @signature `Lokio/ByteString$Companion;.encodeString:(Ljava/lang/String;Ljava/nio/charset/Charset;)Lokio/ByteString;` @kind virtual;
  #L1cf7c2.  v1:= temp @kind object;
  #L1cf7c4.  return v1 @kind object;
}
procedure `okio.ByteString` `encodeUtf8`(`java.lang.String` v1 @kind object) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1cf7d8.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1cf7dc.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1cf7e2.  v1:= temp @kind object;
  #L1cf7e4.  return v1 @kind object;
}
procedure `int` `indexOf$default`(`okio.ByteString` v0 @kind object, `okio.ByteString` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokio/ByteString;.indexOf$default:(Lokio/ByteString;Lokio/ByteString;IILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1cf0ec.  if v4 != 0 then goto L1cf104;
  #L1cf0f0.  v3:= v3 ^& 2;
  #L1cf0f4.  if v3 == 0 then goto L1cf0fa;
  #L1cf0f8.  v2:= 0I;
  #L1cf0fa.  call temp:= `indexOf`(v0, v1, v2) @signature `Lokio/ByteString;.indexOf:(Lokio/ByteString;I)I` @kind virtual;
  #L1cf100.  v0:= temp;
  #L1cf102.  return v0;
  #L1cf104.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1cf108.  v1:= "Super calls with default arguments not supported in this target, function: indexOf" @kind object;
  #L1cf10c.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1cf112.  throw v0;
}
procedure `int` `indexOf$default`(`okio.ByteString` v0 @kind object, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokio/ByteString;.indexOf$default:(Lokio/ByteString;[BIILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1cf0b4.  if v4 != 0 then goto L1cf0cc;
  #L1cf0b8.  v3:= v3 ^& 2;
  #L1cf0bc.  if v3 == 0 then goto L1cf0c2;
  #L1cf0c0.  v2:= 0I;
  #L1cf0c2.  call temp:= `indexOf`(v0, v1, v2) @signature `Lokio/ByteString;.indexOf:([BI)I` @kind virtual;
  #L1cf0c8.  v0:= temp;
  #L1cf0ca.  return v0;
  #L1cf0cc.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1cf0d0.  v1:= "Super calls with default arguments not supported in this target, function: indexOf" @kind object;
  #L1cf0d4.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1cf0da.  throw v0;
}
procedure `int` `lastIndexOf$default`(`okio.ByteString` v0 @kind object, `okio.ByteString` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokio/ByteString;.lastIndexOf$default:(Lokio/ByteString;Lokio/ByteString;IILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1cf22c.  if v4 != 0 then goto L1cf24a;
  #L1cf230.  v3:= v3 ^& 2;
  #L1cf234.  if v3 == 0 then goto L1cf240;
  #L1cf238.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1cf23e.  v2:= temp;
  #L1cf240.  call temp:= `lastIndexOf`(v0, v1, v2) @signature `Lokio/ByteString;.lastIndexOf:(Lokio/ByteString;I)I` @kind virtual;
  #L1cf246.  v0:= temp;
  #L1cf248.  return v0;
  #L1cf24a.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1cf24e.  v1:= "Super calls with default arguments not supported in this target, function: lastIndexOf" @kind object;
  #L1cf252.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1cf258.  throw v0;
}
procedure `int` `lastIndexOf$default`(`okio.ByteString` v0 @kind object, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokio/ByteString;.lastIndexOf$default:(Lokio/ByteString;[BIILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1cf1ec.  if v4 != 0 then goto L1cf20a;
  #L1cf1f0.  v3:= v3 ^& 2;
  #L1cf1f4.  if v3 == 0 then goto L1cf200;
  #L1cf1f8.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1cf1fe.  v2:= temp;
  #L1cf200.  call temp:= `lastIndexOf`(v0, v1, v2) @signature `Lokio/ByteString;.lastIndexOf:([BI)I` @kind virtual;
  #L1cf206.  v0:= temp;
  #L1cf208.  return v0;
  #L1cf20a.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1cf20e.  v1:= "Super calls with default arguments not supported in this target, function: lastIndexOf" @kind object;
  #L1cf212.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1cf218.  throw v0;
}
procedure `okio.ByteString` `of`(`java.nio.ByteBuffer` v1 @kind object) @signature `Lokio/ByteString;.of:(Ljava/nio/ByteBuffer;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1cf954.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1cf958.  call temp:= `of`(v0, v1) @signature `Lokio/ByteString$Companion;.of:(Ljava/nio/ByteBuffer;)Lokio/ByteString;` @kind virtual;
  #L1cf95e.  v1:= temp @kind object;
  #L1cf960.  return v1 @kind object;
}
procedure `okio.ByteString` `of`(`byte`[] v1 @kind object) @signature `Lokio/ByteString;.of:([B)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1cf914.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1cf918.  call temp:= `of`(v0, v1) @signature `Lokio/ByteString$Companion;.of:([B)Lokio/ByteString;` @kind virtual;
  #L1cf91e.  v1:= temp @kind object;
  #L1cf920.  return v1 @kind object;
}
procedure `okio.ByteString` `of`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokio/ByteString;.of:([BII)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1cf934.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1cf938.  call temp:= `of`(v0, v1, v2, v3) @signature `Lokio/ByteString$Companion;.of:([BII)Lokio/ByteString;` @kind virtual;
  #L1cf93e.  v1:= temp @kind object;
  #L1cf940.  return v1 @kind object;
}
procedure `okio.ByteString` `read`(`java.io.InputStream` v1 @kind object, `int` v2 ) @signature `Lokio/ByteString;.read:(Ljava/io/InputStream;I)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1cf974.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1cf978.  call temp:= `read`(v0, v1, v2) @signature `Lokio/ByteString$Companion;.read:(Ljava/io/InputStream;I)Lokio/ByteString;` @kind virtual;
  #L1cf97e.  v1:= temp @kind object;
  #L1cf980.  return v1 @kind object;
}
procedure `void` `readObject`(`okio.ByteString` v2 @kind this, `java.io.ObjectInputStream` v3 @kind object) @signature `Lokio/ByteString;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1cfd24.  call temp:= `readInt`(v3) @signature `Ljava/io/ObjectInputStream;.readInt:()I` @kind virtual;
  #L1cfd2a.  v0:= temp;
  #L1cfd2c.  v1:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1cfd30.  call temp:= `read`(v1, v3, v0) @signature `Lokio/ByteString$Companion;.read:(Ljava/io/InputStream;I)Lokio/ByteString;` @kind virtual;
  #L1cfd36.  v3:= temp @kind object;
  #L1cfd38.  v0:= constclass @type ^`okio.ByteString` @kind object;
  #L1cfd3c.  v1:= "c" @kind object;
  #L1cfd40.  call temp:= `getDeclaredField`(v0, v1) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L1cfd46.  v0:= temp @kind object;
  #L1cfd48.  v1:= "field" @kind object;
  #L1cfd4c.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cfd52.  v1:= 1I;
  #L1cfd54.  call `setAccessible`(v0, v1) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L1cfd5a.  v3:= v3.`okio.ByteString.c` @type ^`byte`[] @kind object;
  #L1cfd5e.  call `set`(v0, v2, v3) @signature `Ljava/lang/reflect/Field;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L1cfd64.  return @kind void;
}
procedure `okio.ByteString` `substring$default`(`okio.ByteString` v0 @kind object, `int` v1 , `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokio/ByteString;.substring$default:(Lokio/ByteString;IIILjava/lang/Object;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1cf9f4.  if v4 != 0 then goto L1cfa1c;
  #L1cf9f8.  v4:= v3 ^& 1;
  #L1cf9fc.  if v4 == 0 then goto L1cfa02;
  #L1cfa00.  v1:= 0I;
  #L1cfa02.  v3:= v3 ^& 2;
  #L1cfa06.  if v3 == 0 then goto L1cfa12;
  #L1cfa0a.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1cfa10.  v2:= temp;
  #L1cfa12.  call temp:= `substring`(v0, v1, v2) @signature `Lokio/ByteString;.substring:(II)Lokio/ByteString;` @kind virtual;
  #L1cfa18.  v0:= temp @kind object;
  #L1cfa1a.  return v0 @kind object;
  #L1cfa1c.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1cfa20.  v1:= "Super calls with default arguments not supported in this target, function: substring" @kind object;
  #L1cfa24.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1cfa2a.  throw v0;
}
procedure `void` `writeObject`(`okio.ByteString` v1 @kind this, `java.io.ObjectOutputStream` v2 @kind object) @signature `Lokio/ByteString;.writeObject:(Ljava/io/ObjectOutputStream;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1cfdf4.  v0:= v1.`okio.ByteString.c` @type ^`byte`[] @kind object;
  #L1cfdf8.  v0:= length @variable v0;
  #L1cfdfa.  call `writeInt`(v2, v0) @signature `Ljava/io/ObjectOutputStream;.writeInt:(I)V` @kind virtual;
  #L1cfe00.  v0:= v1.`okio.ByteString.c` @type ^`byte`[] @kind object;
  #L1cfe04.  call `write`(v2, v0) @signature `Ljava/io/ObjectOutputStream;.write:([B)V` @kind virtual;
  #L1cfe0a.  return @kind void;
}
procedure `byte` `-deprecated_getByte`(`okio.ByteString` v0 @kind this, `int` v1 ) @signature `Lokio/ByteString;.-deprecated_getByte:(I)B` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1ceed8.  call temp:= `getByte`(v0, v1) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1ceede.  v1:= temp;
  #L1ceee0.  return v1;
}
procedure `int` `-deprecated_size`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.-deprecated_size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1cef94.  call temp:= `size`(v1) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1cef9a.  v0:= temp;
  #L1cef9c.  return v0;
}
procedure `java.nio.ByteBuffer` `asByteBuffer`(`okio.ByteString` v2 @kind this) @signature `Lokio/ByteString;.asByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1cf6f4.  v0:= v2.`okio.ByteString.c` @type ^`byte`[] @kind object;
  #L1cf6f8.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L1cf6fe.  v0:= temp @kind object;
  #L1cf700.  call temp:= `asReadOnlyBuffer`(v0) @signature `Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L1cf706.  v0:= temp @kind object;
  #L1cf708.  v1:= "ByteBuffer.wrap(data).asReadOnlyBuffer()" @kind object;
  #L1cf70c.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cf712.  return v0 @kind object;
}
procedure `java.lang.String` `base64`(`okio.ByteString` v3 @kind this) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1cf34c.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf352.  v0:= temp @kind object;
  #L1cf354.  v1:= 0I;
  #L1cf356.  v2:= 1I;
  #L1cf358.  call temp:= `encodeBase64$default`(v0, v1, v2, v1) @signature `Lokio/-Base64;.encodeBase64$default:([B[BILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1cf35e.  v0:= temp @kind object;
  #L1cf360.  return v0 @kind object;
}
procedure `java.lang.String` `base64Url`(`okio.ByteString` v2 @kind this) @signature `Lokio/ByteString;.base64Url:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1cf374.  call temp:= `getData$okio`(v2) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf37a.  v0:= temp @kind object;
  #L1cf37c.  call temp:= `getBASE64_URL_SAFE`() @signature `Lokio/-Base64;.getBASE64_URL_SAFE:()[B` @kind static;
  #L1cf382.  v1:= temp @kind object;
  #L1cf384.  call temp:= `encodeBase64`(v0, v1) @signature `Lokio/-Base64;.encodeBase64:([B[B)Ljava/lang/String;` @kind static;
  #L1cf38a.  v0:= temp @kind object;
  #L1cf38c.  return v0 @kind object;
}
procedure `int` `compareTo`(`okio.ByteString` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lokio/ByteString;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1cefb0.  v1:= (`okio.ByteString`) v1 @kind object;
  #L1cefb4.  call temp:= `compareTo`(v0, v1) @signature `Lokio/ByteString;.compareTo:(Lokio/ByteString;)I` @kind virtual;
  #L1cefba.  v1:= temp;
  #L1cefbc.  return v1;
}
procedure `int` `compareTo`(`okio.ByteString` v9 @kind this, `okio.ByteString` v10 @kind object) @signature `Lokio/ByteString;.compareTo:(Lokio/ByteString;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1cefd0.  v0:= "other" @kind object;
  #L1cefd4.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cefda.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1cefe0.  v0:= temp;
  #L1cefe2.  call temp:= `size`(v10) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1cefe8.  v1:= temp;
  #L1cefea.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1ceff0.  v2:= temp;
  #L1ceff2.  v3:= 0I;
  #L1ceff4.  v4:= 0I;
  #L1ceff6.  v5:= -1I;
  #L1ceff8.  v6:= 1I;
  #L1ceffa.  if v4 >= v2 then goto L1cf026;
  #L1ceffe.  call temp:= `getByte`(v9, v4) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1cf004.  v7:= temp;
  #L1cf006.  v7:= v7 ^& 255;
  #L1cf00a.  call temp:= `getByte`(v10, v4) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1cf010.  v8:= temp;
  #L1cf012.  v8:= v8 ^& 255;
  #L1cf016.  if v7 != v8 then goto L1cf020;
  #L1cf01a.  v4:= v4 + 1;
  #L1cf01e.  goto L1ceff6;
  #L1cf020.  if v7 >= v8 then goto L1cf034;
  #L1cf024.  goto L1cf030;
  #L1cf026.  if v0 != v1 then goto L1cf02c;
  #L1cf02a.  goto L1cf036;
  #L1cf02c.  if v0 >= v1 then goto L1cf034;
  #L1cf030.  v3:= -1I;
  #L1cf032.  goto L1cf036;
  #L1cf034.  v3:= 1I;
  #L1cf036.  return v3;
}
procedure `okio.ByteString` `digest$okio`(`okio.ByteString` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokio/ByteString;.digest$okio:(Ljava/lang/String;)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1cf764.  v0:= "algorithm" @kind object;
  #L1cf768.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cf76e.  call temp:= `getInstance`(v4) @signature `Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;` @kind static;
  #L1cf774.  v4:= temp @kind object;
  #L1cf776.  v0:= v3.`okio.ByteString.c` @type ^`byte`[] @kind object;
  #L1cf77a.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1cf780.  v1:= temp;
  #L1cf782.  v2:= 0I;
  #L1cf784.  call `update`(v4, v0, v2, v1) @signature `Ljava/security/MessageDigest;.update:([BII)V` @kind virtual;
  #L1cf78a.  call temp:= `digest`(v4) @signature `Ljava/security/MessageDigest;.digest:()[B` @kind virtual;
  #L1cf790.  v4:= temp @kind object;
  #L1cf792.  v0:= new `okio.ByteString`;
  #L1cf796.  v1:= "digestBytes" @kind object;
  #L1cf79a.  call `checkNotNullExpressionValue`(v4, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cf7a0.  call `<init>`(v0, v4) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L1cf7a6.  return v0 @kind object;
}
procedure `boolean` `endsWith`(`okio.ByteString` v3 @kind this, `okio.ByteString` v4 @kind object) @signature `Lokio/ByteString;.endsWith:(Lokio/ByteString;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1ced5c.  v0:= "suffix" @kind object;
  #L1ced60.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1ced66.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1ced6c.  v0:= temp;
  #L1ced6e.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1ced74.  v1:= temp;
  #L1ced76.  v0:= v0 - v1 @kind int;
  #L1ced78.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1ced7e.  v1:= temp;
  #L1ced80.  v2:= 0I;
  #L1ced82.  call temp:= `rangeEquals`(v3, v0, v4, v2, v1) @signature `Lokio/ByteString;.rangeEquals:(ILokio/ByteString;II)Z` @kind virtual;
  #L1ced88.  v4:= temp;
  #L1ced8a.  return v4;
}
procedure `boolean` `endsWith`(`okio.ByteString` v3 @kind this, `byte`[] v4 @kind object) @signature `Lokio/ByteString;.endsWith:([B)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1ced28.  v0:= "suffix" @kind object;
  #L1ced2c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1ced32.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1ced38.  v0:= temp;
  #L1ced3a.  v1:= length @variable v4;
  #L1ced3c.  v0:= v0 - v1 @kind int;
  #L1ced3e.  v1:= length @variable v4;
  #L1ced40.  v2:= 0I;
  #L1ced42.  call temp:= `rangeEquals`(v3, v0, v4, v2, v1) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @kind virtual;
  #L1ced48.  v4:= temp;
  #L1ced4a.  return v4;
}
procedure `boolean` `equals`(`okio.ByteString` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ced9c.  v0:= 1I;
  #L1ced9e.  v1:= 0I;
  #L1ceda0.  if v5 != v4 then goto L1ceda6;
  #L1ceda4.  goto L1cedea;
  #L1ceda6.  v2:= instanceof @variable v5 @type ^`okio.ByteString` @kind boolean;
  #L1cedaa.  if v2 == 0 then goto L1cede8;
  #L1cedae.  v5:= (`okio.ByteString`) v5 @kind object;
  #L1cedb2.  call temp:= `size`(v5) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1cedb8.  v2:= temp;
  #L1cedba.  call temp:= `getData$okio`(v4) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cedc0.  v3:= temp @kind object;
  #L1cedc2.  v3:= length @variable v3;
  #L1cedc4.  if v2 != v3 then goto L1cede8;
  #L1cedc8.  call temp:= `getData$okio`(v4) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cedce.  v2:= temp @kind object;
  #L1cedd0.  call temp:= `getData$okio`(v4) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cedd6.  v3:= temp @kind object;
  #L1cedd8.  v3:= length @variable v3;
  #L1cedda.  call temp:= `rangeEquals`(v5, v1, v2, v1, v3) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @kind virtual;
  #L1cede0.  v5:= temp;
  #L1cede2.  if v5 == 0 then goto L1cede8;
  #L1cede6.  goto L1cedea;
  #L1cede8.  v0:= 0I;
  #L1cedea.  return v0;
}
procedure `byte` `getByte`(`okio.ByteString` v0 @kind this, `int` v1 ) @signature `Lokio/ByteString;.getByte:(I)B` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1ceef4.  call temp:= `internalGet$okio`(v0, v1) @signature `Lokio/ByteString;.internalGet$okio:(I)B` @kind virtual;
  #L1ceefa.  v1:= temp;
  #L1ceefc.  return v1;
}
procedure `byte`[] `getData$okio`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.getData$okio:()[B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1cef30.  v0:= v1.`okio.ByteString.c` @type ^`byte`[] @kind object;
  #L1cef34.  return v0 @kind object;
}
procedure `int` `getHashCode$okio`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.getHashCode$okio:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1cf048.  v0:= v1.`okio.ByteString.a` @type ^`int`;
  #L1cf04c.  return v0;
}
procedure `int` `getSize$okio`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.getSize$okio:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cf060.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf066.  v0:= temp @kind object;
  #L1cf068.  v0:= length @variable v0;
  #L1cf06a.  return v0;
}
procedure `java.lang.String` `getUtf8$okio`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.getUtf8$okio:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1cf3a0.  v0:= v1.`okio.ByteString.b` @type ^`java.lang.String` @kind object;
  #L1cf3a4.  return v0 @kind object;
}
procedure `int` `hashCode`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cf07c.  call temp:= `getHashCode$okio`(v1) @signature `Lokio/ByteString;.getHashCode$okio:()I` @kind virtual;
  #L1cf082.  v0:= temp;
  #L1cf084.  if v0 == 0 then goto L1cf08a;
  #L1cf088.  goto L1cf0a0;
  #L1cf08a.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf090.  v0:= temp @kind object;
  #L1cf092.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([B)I` @kind static;
  #L1cf098.  v0:= temp;
  #L1cf09a.  call `setHashCode$okio`(v1, v0) @signature `Lokio/ByteString;.setHashCode$okio:(I)V` @kind virtual;
  #L1cf0a0.  return v0;
}
procedure `java.lang.String` `hex`(`okio.ByteString` v9 @kind this) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1cf3b8.  call temp:= `getData$okio`(v9) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf3be.  v0:= temp @kind object;
  #L1cf3c0.  v0:= length @variable v0;
  #L1cf3c2.  v0:= v0 * 2;
  #L1cf3c6.  v0:= new `char`[v0];
  #L1cf3ca.  call temp:= `getData$okio`(v9) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf3d0.  v1:= temp @kind object;
  #L1cf3d2.  v2:= length @variable v1;
  #L1cf3d4.  v3:= 0I;
  #L1cf3d6.  v4:= 0I;
  #L1cf3d8.  if v3 >= v2 then goto L1cf41a;
  #L1cf3dc.  v5:= v1[v3] @kind byte;
  #L1cf3e0.  v6:= v4 + 1;
  #L1cf3e4.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1cf3ea.  v7:= temp @kind object;
  #L1cf3ec.  v8:= v5 ^> 4;
  #L1cf3f0.  v8:= v8 ^& 15;
  #L1cf3f4.  v7:= v7[v8] @kind char;
  #L1cf3f8.  v0[v4]:= v7 @kind char;
  #L1cf3fc.  v4:= v6 + 1;
  #L1cf400.  call temp:= `getHEX_DIGIT_CHARS`() @signature `Lokio/internal/ByteStringKt;.getHEX_DIGIT_CHARS:()[C` @kind static;
  #L1cf406.  v7:= temp @kind object;
  #L1cf408.  v5:= v5 ^& 15;
  #L1cf40c.  v5:= v7[v5] @kind char;
  #L1cf410.  v0[v6]:= v5 @kind char;
  #L1cf414.  v3:= v3 + 1;
  #L1cf418.  goto L1cf3d8;
  #L1cf41a.  v1:= new `java.lang.String`;
  #L1cf41e.  call `<init>`(v1, v0) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L1cf424.  return v1 @kind object;
}
procedure `okio.ByteString` `hmac$okio`(`okio.ByteString` v2 @kind this, `java.lang.String` v3 @kind object, `okio.ByteString` v4 @kind object) @signature `Lokio/ByteString;.hmac$okio:(Ljava/lang/String;Lokio/ByteString;)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1cf7f8.  v0:= "algorithm" @kind object;
  #L1cf7fc.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cf802.  v0:= "key" @kind object;
  #L1cf806.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cf80c.  call temp:= `getInstance`(v3) @signature `Ljavax/crypto/Mac;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Mac;` @kind static;
  #L1cf812.  v0:= temp @kind object;
  #L1cf814.  v1:= new `javax.crypto.spec.SecretKeySpec`;
  #L1cf818.  call temp:= `toByteArray`(v4) @signature `Lokio/ByteString;.toByteArray:()[B` @kind virtual;
  #L1cf81e.  v4:= temp @kind object;
  #L1cf820.  call `<init>`(v1, v4, v3) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L1cf826.  call `init`(v0, v1) @signature `Ljavax/crypto/Mac;.init:(Ljava/security/Key;)V` @kind virtual;
  #L1cf82c.  v3:= new `okio.ByteString`;
  #L1cf830.  v4:= v2.`okio.ByteString.c` @type ^`byte`[] @kind object;
  #L1cf834.  call temp:= `doFinal`(v0, v4) @signature `Ljavax/crypto/Mac;.doFinal:([B)[B` @kind virtual;
  #L1cf83a.  v4:= temp @kind object;
  #L1cf83c.  v0:= "mac.doFinal(data)" @kind object;
  #L1cf840.  call `checkNotNullExpressionValue`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cf846.  call `<init>`(v3, v4) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L1cf84c.  return v3 @kind object;
  #L1cf84e.  v3:= Exception @type ^`java.security.InvalidKeyException` @kind object;
  #L1cf850.  v4:= new `java.lang.IllegalArgumentException`;
  #L1cf854.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1cf85a.  throw v4;
  catch `java.security.InvalidKeyException` @[L1cf80c..L1cf84c] goto L1cf84e;
}
procedure `okio.ByteString` `hmacSha1`(`okio.ByteString` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokio/ByteString;.hmacSha1:(Lokio/ByteString;)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cf87c.  v0:= "key" @kind object;
  #L1cf880.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cf886.  v0:= "HmacSHA1" @kind object;
  #L1cf88a.  call temp:= `hmac$okio`(v1, v0, v2) @signature `Lokio/ByteString;.hmac$okio:(Ljava/lang/String;Lokio/ByteString;)Lokio/ByteString;` @kind virtual;
  #L1cf890.  v2:= temp @kind object;
  #L1cf892.  return v2 @kind object;
}
procedure `okio.ByteString` `hmacSha256`(`okio.ByteString` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokio/ByteString;.hmacSha256:(Lokio/ByteString;)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cf8a4.  v0:= "key" @kind object;
  #L1cf8a8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cf8ae.  v0:= "HmacSHA256" @kind object;
  #L1cf8b2.  call temp:= `hmac$okio`(v1, v0, v2) @signature `Lokio/ByteString;.hmac$okio:(Ljava/lang/String;Lokio/ByteString;)Lokio/ByteString;` @kind virtual;
  #L1cf8b8.  v2:= temp @kind object;
  #L1cf8ba.  return v2 @kind object;
}
procedure `okio.ByteString` `hmacSha512`(`okio.ByteString` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokio/ByteString;.hmacSha512:(Lokio/ByteString;)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cf8cc.  v0:= "key" @kind object;
  #L1cf8d0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cf8d6.  v0:= "HmacSHA512" @kind object;
  #L1cf8da.  call temp:= `hmac$okio`(v1, v0, v2) @signature `Lokio/ByteString;.hmac$okio:(Ljava/lang/String;Lokio/ByteString;)Lokio/ByteString;` @kind virtual;
  #L1cf8e0.  v2:= temp @kind object;
  #L1cf8e2.  return v2 @kind object;
}
procedure `int` `indexOf`(`okio.ByteString` v3 @kind this, `okio.ByteString` v4 @kind object) @signature `Lokio/ByteString;.indexOf:(Lokio/ByteString;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1cf1a0.  v0:= 0I;
  #L1cf1a2.  v1:= 2I;
  #L1cf1a4.  v2:= 0I;
  #L1cf1a6.  call temp:= `indexOf$default`(v3, v4, v0, v1, v2) @signature `Lokio/ByteString;.indexOf$default:(Lokio/ByteString;Lokio/ByteString;IILjava/lang/Object;)I` @kind static;
  #L1cf1ac.  v4:= temp;
  #L1cf1ae.  return v4;
}
procedure `int` `indexOf`(`okio.ByteString` v1 @kind this, `okio.ByteString` v2 @kind object, `int` v3 ) @signature `Lokio/ByteString;.indexOf:(Lokio/ByteString;I)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1cf1c0.  v0:= "other" @kind object;
  #L1cf1c4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cf1ca.  call temp:= `internalArray$okio`(v2) @signature `Lokio/ByteString;.internalArray$okio:()[B` @kind virtual;
  #L1cf1d0.  v2:= temp @kind object;
  #L1cf1d2.  call temp:= `indexOf`(v1, v2, v3) @signature `Lokio/ByteString;.indexOf:([BI)I` @kind virtual;
  #L1cf1d8.  v2:= temp;
  #L1cf1da.  return v2;
}
procedure `int` `indexOf`(`okio.ByteString` v3 @kind this, `byte`[] v4 @kind object) @signature `Lokio/ByteString;.indexOf:([B)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1cf124.  v0:= 0I;
  #L1cf126.  v1:= 2I;
  #L1cf128.  v2:= 0I;
  #L1cf12a.  call temp:= `indexOf$default`(v3, v4, v0, v1, v2) @signature `Lokio/ByteString;.indexOf$default:(Lokio/ByteString;[BIILjava/lang/Object;)I` @kind static;
  #L1cf130.  v4:= temp;
  #L1cf132.  return v4;
}
procedure `int` `indexOf`(`okio.ByteString` v4 @kind this, `byte`[] v5 @kind object, `int` v6 ) @signature `Lokio/ByteString;.indexOf:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1cf144.  v0:= "other" @kind object;
  #L1cf148.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cf14e.  call temp:= `getData$okio`(v4) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf154.  v0:= temp @kind object;
  #L1cf156.  v0:= length @variable v0;
  #L1cf158.  v1:= length @variable v5;
  #L1cf15a.  v0:= v0 - v1 @kind int;
  #L1cf15c.  v1:= 0I;
  #L1cf15e.  call temp:= `max`(v6, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L1cf164.  v6:= temp;
  #L1cf166.  if v6 > v0 then goto L1cf18c;
  #L1cf16a.  call temp:= `getData$okio`(v4) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf170.  v2:= temp @kind object;
  #L1cf172.  v3:= length @variable v5;
  #L1cf174.  call temp:= `arrayRangeEquals`(v2, v6, v5, v1, v3) @signature `Lokio/-Util;.arrayRangeEquals:([BI[BII)Z` @kind static;
  #L1cf17a.  v2:= temp;
  #L1cf17c.  if v2 == 0 then goto L1cf182;
  #L1cf180.  goto L1cf18e;
  #L1cf182.  if v6 == v0 then goto L1cf18c;
  #L1cf186.  v6:= v6 + 1;
  #L1cf18a.  goto L1cf16a;
  #L1cf18c.  v6:= -1I;
  #L1cf18e.  return v6;
}
procedure `byte`[] `internalArray$okio`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.internalArray$okio:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cef48.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cef4e.  v0:= temp @kind object;
  #L1cef50.  return v0 @kind object;
}
procedure `byte` `internalGet$okio`(`okio.ByteString` v1 @kind this, `int` v2 ) @signature `Lokio/ByteString;.internalGet$okio:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cef10.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cef16.  v0:= temp @kind object;
  #L1cef18.  v2:= v0[v2] @kind byte;
  #L1cef1c.  return v2;
}
procedure `int` `lastIndexOf`(`okio.ByteString` v3 @kind this, `okio.ByteString` v4 @kind object) @signature `Lokio/ByteString;.lastIndexOf:(Lokio/ByteString;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1cf2e4.  v0:= 0I;
  #L1cf2e6.  v1:= 2I;
  #L1cf2e8.  v2:= 0I;
  #L1cf2ea.  call temp:= `lastIndexOf$default`(v3, v4, v0, v1, v2) @signature `Lokio/ByteString;.lastIndexOf$default:(Lokio/ByteString;Lokio/ByteString;IILjava/lang/Object;)I` @kind static;
  #L1cf2f0.  v4:= temp;
  #L1cf2f2.  return v4;
}
procedure `int` `lastIndexOf`(`okio.ByteString` v1 @kind this, `okio.ByteString` v2 @kind object, `int` v3 ) @signature `Lokio/ByteString;.lastIndexOf:(Lokio/ByteString;I)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1cf304.  v0:= "other" @kind object;
  #L1cf308.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cf30e.  call temp:= `internalArray$okio`(v2) @signature `Lokio/ByteString;.internalArray$okio:()[B` @kind virtual;
  #L1cf314.  v2:= temp @kind object;
  #L1cf316.  call temp:= `lastIndexOf`(v1, v2, v3) @signature `Lokio/ByteString;.lastIndexOf:([BI)I` @kind virtual;
  #L1cf31c.  v2:= temp;
  #L1cf31e.  return v2;
}
procedure `int` `lastIndexOf`(`okio.ByteString` v3 @kind this, `byte`[] v4 @kind object) @signature `Lokio/ByteString;.lastIndexOf:([B)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1cf26c.  v0:= 0I;
  #L1cf26e.  v1:= 2I;
  #L1cf270.  v2:= 0I;
  #L1cf272.  call temp:= `lastIndexOf$default`(v3, v4, v0, v1, v2) @signature `Lokio/ByteString;.lastIndexOf$default:(Lokio/ByteString;[BIILjava/lang/Object;)I` @kind static;
  #L1cf278.  v4:= temp;
  #L1cf27a.  return v4;
}
procedure `int` `lastIndexOf`(`okio.ByteString` v3 @kind this, `byte`[] v4 @kind object, `int` v5 ) @signature `Lokio/ByteString;.lastIndexOf:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1cf28c.  v0:= "other" @kind object;
  #L1cf290.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cf296.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf29c.  v0:= temp @kind object;
  #L1cf29e.  v0:= length @variable v0;
  #L1cf2a0.  v1:= length @variable v4;
  #L1cf2a2.  v0:= v0 - v1 @kind int;
  #L1cf2a4.  call temp:= `min`(v5, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1cf2aa.  v5:= temp;
  #L1cf2ac.  if v5 < 0 then goto L1cf2d0;
  #L1cf2b0.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf2b6.  v0:= temp @kind object;
  #L1cf2b8.  v1:= 0I;
  #L1cf2ba.  v2:= length @variable v4;
  #L1cf2bc.  call temp:= `arrayRangeEquals`(v0, v5, v4, v1, v2) @signature `Lokio/-Util;.arrayRangeEquals:([BI[BII)Z` @kind static;
  #L1cf2c2.  v0:= temp;
  #L1cf2c4.  if v0 == 0 then goto L1cf2ca;
  #L1cf2c8.  goto L1cf2d2;
  #L1cf2ca.  v5:= v5 + -1;
  #L1cf2ce.  goto L1cf2ac;
  #L1cf2d0.  v5:= -1I;
  #L1cf2d2.  return v5;
}
procedure `okio.ByteString` `md5`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.md5:()Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1cf8f4.  v0:= "MD5" @kind object;
  #L1cf8f8.  call temp:= `digest$okio`(v1, v0) @signature `Lokio/ByteString;.digest$okio:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1cf8fe.  v0:= temp @kind object;
  #L1cf900.  return v0 @kind object;
}
procedure `boolean` `rangeEquals`(`okio.ByteString` v1 @kind this, `int` v2 , `okio.ByteString` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokio/ByteString;.rangeEquals:(ILokio/ByteString;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cee54.  v0:= "other" @kind object;
  #L1cee58.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cee5e.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cee64.  v0:= temp @kind object;
  #L1cee66.  call temp:= `rangeEquals`(v3, v4, v0, v2, v5) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @kind virtual;
  #L1cee6c.  v2:= temp;
  #L1cee6e.  return v2;
}
procedure `boolean` `rangeEquals`(`okio.ByteString` v1 @kind this, `int` v2 , `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cedfc.  v0:= "other" @kind object;
  #L1cee00.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cee06.  if v2 < 0 then goto L1cee3e;
  #L1cee0a.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cee10.  v0:= temp @kind object;
  #L1cee12.  v0:= length @variable v0;
  #L1cee14.  v0:= v0 - v5 @kind int;
  #L1cee16.  if v2 > v0 then goto L1cee3e;
  #L1cee1a.  if v4 < 0 then goto L1cee3e;
  #L1cee1e.  v0:= length @variable v3;
  #L1cee20.  v0:= v0 - v5 @kind int;
  #L1cee22.  if v4 > v0 then goto L1cee3e;
  #L1cee26.  call temp:= `getData$okio`(v1) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cee2c.  v0:= temp @kind object;
  #L1cee2e.  call temp:= `arrayRangeEquals`(v0, v2, v3, v4, v5) @signature `Lokio/-Util;.arrayRangeEquals:([BI[BII)Z` @kind static;
  #L1cee34.  v2:= temp;
  #L1cee36.  if v2 == 0 then goto L1cee3e;
  #L1cee3a.  v2:= 1I;
  #L1cee3c.  goto L1cee40;
  #L1cee3e.  v2:= 0I;
  #L1cee40.  return v2;
}
procedure `void` `setHashCode$okio`(`okio.ByteString` v0 @kind this, `int` v1 ) @signature `Lokio/ByteString;.setHashCode$okio:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1cfd78.  v0.`okio.ByteString.a` @type ^`int` := v1;
  #L1cfd7c.  return @kind void;
}
procedure `void` `setUtf8$okio`(`okio.ByteString` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lokio/ByteString;.setUtf8$okio:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1cfd90.  v0.`okio.ByteString.b` @type ^`java.lang.String` := v1 @kind object;
  #L1cfd94.  return @kind void;
}
procedure `okio.ByteString` `sha1`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.sha1:()Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1cf994.  v0:= "SHA-1" @kind object;
  #L1cf998.  call temp:= `digest$okio`(v1, v0) @signature `Lokio/ByteString;.digest$okio:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1cf99e.  v0:= temp @kind object;
  #L1cf9a0.  return v0 @kind object;
}
procedure `okio.ByteString` `sha256`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.sha256:()Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1cf9b4.  v0:= "SHA-256" @kind object;
  #L1cf9b8.  call temp:= `digest$okio`(v1, v0) @signature `Lokio/ByteString;.digest$okio:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1cf9be.  v0:= temp @kind object;
  #L1cf9c0.  return v0 @kind object;
}
procedure `okio.ByteString` `sha512`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.sha512:()Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1cf9d4.  v0:= "SHA-512" @kind object;
  #L1cf9d8.  call temp:= `digest$okio`(v1, v0) @signature `Lokio/ByteString;.digest$okio:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1cf9de.  v0:= temp @kind object;
  #L1cf9e0.  return v0 @kind object;
}
procedure `int` `size`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1cf330.  call temp:= `getSize$okio`(v1) @signature `Lokio/ByteString;.getSize$okio:()I` @kind virtual;
  #L1cf336.  v0:= temp;
  #L1cf338.  return v0;
}
procedure `boolean` `startsWith`(`okio.ByteString` v2 @kind this, `okio.ByteString` v3 @kind object) @signature `Lokio/ByteString;.startsWith:(Lokio/ByteString;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1ceea8.  v0:= "prefix" @kind object;
  #L1ceeac.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1ceeb2.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1ceeb8.  v0:= temp;
  #L1ceeba.  v1:= 0I;
  #L1ceebc.  call temp:= `rangeEquals`(v2, v1, v3, v1, v0) @signature `Lokio/ByteString;.rangeEquals:(ILokio/ByteString;II)Z` @kind virtual;
  #L1ceec2.  v3:= temp;
  #L1ceec4.  return v3;
}
procedure `boolean` `startsWith`(`okio.ByteString` v2 @kind this, `byte`[] v3 @kind object) @signature `Lokio/ByteString;.startsWith:([B)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1cee80.  v0:= "prefix" @kind object;
  #L1cee84.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cee8a.  v0:= length @variable v3;
  #L1cee8c.  v1:= 0I;
  #L1cee8e.  call temp:= `rangeEquals`(v2, v1, v3, v1, v0) @signature `Lokio/ByteString;.rangeEquals:(I[BII)Z` @kind virtual;
  #L1cee94.  v3:= temp;
  #L1cee96.  return v3;
}
procedure `java.lang.String` `string`(`okio.ByteString` v2 @kind this, `java.nio.charset.Charset` v3 @kind object) @signature `Lokio/ByteString;.string:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1cf438.  v0:= "charset" @kind object;
  #L1cf43c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cf442.  v0:= v2.`okio.ByteString.c` @type ^`byte`[] @kind object;
  #L1cf446.  v1:= new `java.lang.String`;
  #L1cf44a.  call `<init>`(v1, v0, v3) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L1cf450.  return v1 @kind object;
}
procedure `okio.ByteString` `substring`(`okio.ByteString` v3 @kind this) @signature `Lokio/ByteString;.substring:()Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1cfa3c.  v0:= 0I;
  #L1cfa3e.  v1:= 3I;
  #L1cfa40.  v2:= 0I;
  #L1cfa42.  call temp:= `substring$default`(v3, v0, v0, v1, v2) @signature `Lokio/ByteString;.substring$default:(Lokio/ByteString;IIILjava/lang/Object;)Lokio/ByteString;` @kind static;
  #L1cfa48.  v0:= temp @kind object;
  #L1cfa4a.  return v0 @kind object;
}
procedure `okio.ByteString` `substring`(`okio.ByteString` v3 @kind this, `int` v4 ) @signature `Lokio/ByteString;.substring:(I)Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1cfa5c.  v0:= 0I;
  #L1cfa5e.  v1:= 2I;
  #L1cfa60.  v2:= 0I;
  #L1cfa62.  call temp:= `substring$default`(v3, v4, v0, v1, v2) @signature `Lokio/ByteString;.substring$default:(Lokio/ByteString;IIILjava/lang/Object;)Lokio/ByteString;` @kind static;
  #L1cfa68.  v4:= temp @kind object;
  #L1cfa6a.  return v4 @kind object;
}
procedure `okio.ByteString` `substring`(`okio.ByteString` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lokio/ByteString;.substring:(II)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1cfa7c.  v0:= 1I;
  #L1cfa7e.  v1:= 0I;
  #L1cfa80.  if v4 < 0 then goto L1cfa88;
  #L1cfa84.  v2:= 1I;
  #L1cfa86.  goto L1cfa8a;
  #L1cfa88.  v2:= 0I;
  #L1cfa8a.  if v2 == 0 then goto L1cfb4a;
  #L1cfa8e.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cfa94.  v2:= temp @kind object;
  #L1cfa96.  v2:= length @variable v2;
  #L1cfa98.  if v5 > v2 then goto L1cfaa0;
  #L1cfa9c.  v2:= 1I;
  #L1cfa9e.  goto L1cfaa2;
  #L1cfaa0.  v2:= 0I;
  #L1cfaa2.  if v2 == 0 then goto L1cfb00;
  #L1cfaa6.  v2:= v5 - v4 @kind int;
  #L1cfaaa.  if v2 < 0 then goto L1cfab0;
  #L1cfaae.  goto L1cfab2;
  #L1cfab0.  v0:= 0I;
  #L1cfab2.  if v0 == 0 then goto L1cfae8;
  #L1cfab6.  if v4 != 0 then goto L1cfacc;
  #L1cfaba.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cfac0.  v0:= temp @kind object;
  #L1cfac2.  v0:= length @variable v0;
  #L1cfac4.  if v5 != v0 then goto L1cfacc;
  #L1cfac8.  v0:= v3 @kind object;
  #L1cfaca.  goto L1cfae6;
  #L1cfacc.  v0:= new `okio.ByteString`;
  #L1cfad0.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cfad6.  v1:= temp @kind object;
  #L1cfad8.  call temp:= `copyOfRange`(v1, v4, v5) @signature `Lkotlin/collections/ArraysKt;.copyOfRange:([BII)[B` @kind static;
  #L1cfade.  v4:= temp @kind object;
  #L1cfae0.  call `<init>`(v0, v4) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L1cfae6.  return v0 @kind object;
  #L1cfae8.  v4:= new `java.lang.IllegalArgumentException`;
  #L1cfaec.  v5:= "endIndex < beginIndex" @kind object;
  #L1cfaf0.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1cfaf6.  v5:= temp @kind object;
  #L1cfaf8.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1cfafe.  throw v4;
  #L1cfb00.  v4:= new `java.lang.StringBuilder`;
  #L1cfb04.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1cfb0a.  v5:= "endIndex > length(" @kind object;
  #L1cfb0e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cfb14.  call temp:= `getData$okio`(v3) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cfb1a.  v5:= temp @kind object;
  #L1cfb1c.  v5:= length @variable v5;
  #L1cfb1e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cfb24.  v5:= 41I;
  #L1cfb28.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cfb2e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1cfb34.  v4:= temp @kind object;
  #L1cfb36.  v5:= new `java.lang.IllegalArgumentException`;
  #L1cfb3a.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1cfb40.  v4:= temp @kind object;
  #L1cfb42.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1cfb48.  throw v5;
  #L1cfb4a.  v4:= new `java.lang.IllegalArgumentException`;
  #L1cfb4e.  v5:= "beginIndex < 0" @kind object;
  #L1cfb52.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1cfb58.  v5:= temp @kind object;
  #L1cfb5a.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1cfb60.  throw v4;
}
procedure `okio.ByteString` `toAsciiLowercase`(`okio.ByteString` v6 @kind this) @signature `Lokio/ByteString;.toAsciiLowercase:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1cfb74.  v0:= 0I;
  #L1cfb76.  call temp:= `getData$okio`(v6) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cfb7c.  v1:= temp @kind object;
  #L1cfb7e.  v1:= length @variable v1;
  #L1cfb80.  if v0 >= v1 then goto L1cfc06;
  #L1cfb84.  call temp:= `getData$okio`(v6) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cfb8a.  v1:= temp @kind object;
  #L1cfb8c.  v1:= v1[v0] @kind byte;
  #L1cfb90.  v2:= 65I;
  #L1cfb94.  v2:= (`byte`) v2 @kind i2b;
  #L1cfb96.  if v1 < v2 then goto L1cfc00;
  #L1cfb9a.  v3:= 90I;
  #L1cfb9e.  v3:= (`byte`) v3 @kind i2b;
  #L1cfba0.  if v1 <= v3 then goto L1cfba6;
  #L1cfba4.  goto L1cfc00;
  #L1cfba6.  call temp:= `getData$okio`(v6) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cfbac.  v4:= temp @kind object;
  #L1cfbae.  v5:= length @variable v4;
  #L1cfbb0.  call temp:= `copyOf`(v4, v5) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L1cfbb6.  v4:= temp @kind object;
  #L1cfbb8.  v5:= "java.util.Arrays.copyOf(this, size)" @kind object;
  #L1cfbbc.  call `checkNotNullExpressionValue`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cfbc2.  v5:= v0 + 1;
  #L1cfbc6.  v1:= v1 + 32;
  #L1cfbca.  v1:= (`byte`) v1 @kind i2b;
  #L1cfbcc.  v4[v0]:= v1 @kind byte;
  #L1cfbd0.  v0:= length @variable v4;
  #L1cfbd2.  if v5 >= v0 then goto L1cfbf4;
  #L1cfbd6.  v0:= v4[v5] @kind byte;
  #L1cfbda.  if v0 < v2 then goto L1cfbee;
  #L1cfbde.  if v0 <= v3 then goto L1cfbe4;
  #L1cfbe2.  goto L1cfbee;
  #L1cfbe4.  v0:= v0 + 32;
  #L1cfbe8.  v0:= (`byte`) v0 @kind i2b;
  #L1cfbea.  v4[v5]:= v0 @kind byte;
  #L1cfbee.  v5:= v5 + 1;
  #L1cfbf2.  goto L1cfbd0;
  #L1cfbf4.  v0:= new `okio.ByteString`;
  #L1cfbf8.  call `<init>`(v0, v4) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L1cfbfe.  goto L1cfc08;
  #L1cfc00.  v0:= v0 + 1;
  #L1cfc04.  goto L1cfb76;
  #L1cfc06.  v0:= v6 @kind object;
  #L1cfc08.  return v0 @kind object;
}
procedure `okio.ByteString` `toAsciiUppercase`(`okio.ByteString` v6 @kind this) @signature `Lokio/ByteString;.toAsciiUppercase:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1cfc1c.  v0:= 0I;
  #L1cfc1e.  call temp:= `getData$okio`(v6) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cfc24.  v1:= temp @kind object;
  #L1cfc26.  v1:= length @variable v1;
  #L1cfc28.  if v0 >= v1 then goto L1cfcae;
  #L1cfc2c.  call temp:= `getData$okio`(v6) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cfc32.  v1:= temp @kind object;
  #L1cfc34.  v1:= v1[v0] @kind byte;
  #L1cfc38.  v2:= 97I;
  #L1cfc3c.  v2:= (`byte`) v2 @kind i2b;
  #L1cfc3e.  if v1 < v2 then goto L1cfca8;
  #L1cfc42.  v3:= 122I;
  #L1cfc46.  v3:= (`byte`) v3 @kind i2b;
  #L1cfc48.  if v1 <= v3 then goto L1cfc4e;
  #L1cfc4c.  goto L1cfca8;
  #L1cfc4e.  call temp:= `getData$okio`(v6) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cfc54.  v4:= temp @kind object;
  #L1cfc56.  v5:= length @variable v4;
  #L1cfc58.  call temp:= `copyOf`(v4, v5) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L1cfc5e.  v4:= temp @kind object;
  #L1cfc60.  v5:= "java.util.Arrays.copyOf(this, size)" @kind object;
  #L1cfc64.  call `checkNotNullExpressionValue`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cfc6a.  v5:= v0 + 1;
  #L1cfc6e.  v1:= v1 + -32;
  #L1cfc72.  v1:= (`byte`) v1 @kind i2b;
  #L1cfc74.  v4[v0]:= v1 @kind byte;
  #L1cfc78.  v0:= length @variable v4;
  #L1cfc7a.  if v5 >= v0 then goto L1cfc9c;
  #L1cfc7e.  v0:= v4[v5] @kind byte;
  #L1cfc82.  if v0 < v2 then goto L1cfc96;
  #L1cfc86.  if v0 <= v3 then goto L1cfc8c;
  #L1cfc8a.  goto L1cfc96;
  #L1cfc8c.  v0:= v0 + -32;
  #L1cfc90.  v0:= (`byte`) v0 @kind i2b;
  #L1cfc92.  v4[v5]:= v0 @kind byte;
  #L1cfc96.  v5:= v5 + 1;
  #L1cfc9a.  goto L1cfc78;
  #L1cfc9c.  v0:= new `okio.ByteString`;
  #L1cfca0.  call `<init>`(v0, v4) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L1cfca6.  goto L1cfcb0;
  #L1cfca8.  v0:= v0 + 1;
  #L1cfcac.  goto L1cfc1e;
  #L1cfcae.  v0:= v6 @kind object;
  #L1cfcb0.  return v0 @kind object;
}
procedure `byte`[] `toByteArray`(`okio.ByteString` v2 @kind this) @signature `Lokio/ByteString;.toByteArray:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1cef64.  call temp:= `getData$okio`(v2) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cef6a.  v0:= temp @kind object;
  #L1cef6c.  v1:= length @variable v0;
  #L1cef6e.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([BI)[B` @kind static;
  #L1cef74.  v0:= temp @kind object;
  #L1cef76.  v1:= "java.util.Arrays.copyOf(this, size)" @kind object;
  #L1cef7a.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cef80.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.ByteString` v20 @kind this) @signature `Lokio/ByteString;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;

  #L1cf464.  call temp:= `getData$okio`(v20) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf46a.  v0:= temp @kind object;
  #L1cf46c.  v0:= length @variable v0;
  #L1cf46e.  v1:= 1I;
  #L1cf470.  v2:= 0I;
  #L1cf472.  if v0 != 0 then goto L1cf47a;
  #L1cf476.  v0:= 1I;
  #L1cf478.  goto L1cf47c;
  #L1cf47a.  v0:= 0I;
  #L1cf47c.  if v0 == 0 then goto L1cf488;
  #L1cf480.  v0:= "[size=0]" @kind object;
  #L1cf484.  goto L1cf69c;
  #L1cf488.  call temp:= `getData$okio`(v20) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf48e.  v0:= temp @kind object;
  #L1cf490.  v3:= 64I;
  #L1cf494.  call temp:= `access$codePointIndexToCharIndex`(v0, v3) @signature `Lokio/internal/ByteStringKt;.access$codePointIndexToCharIndex:([BI)I` @kind static;
  #L1cf49a.  v0:= temp;
  #L1cf49c.  v4:= -1I;
  #L1cf49e.  v5:= "…]" @kind object;
  #L1cf4a2.  v6:= 93I;
  #L1cf4a6.  v7:= "[size=" @kind object;
  #L1cf4aa.  if v0 != v4 then goto L1cf5c8;
  #L1cf4ae.  call temp:= `getData$okio`(v20) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf4b4.  v0:= temp @kind object;
  #L1cf4b6.  v0:= length @variable v0;
  #L1cf4b8.  if v0 > v3 then goto L1cf4f0;
  #L1cf4bc.  v0:= new `java.lang.StringBuilder`;
  #L1cf4c0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1cf4c6.  v1:= "[hex=" @kind object;
  #L1cf4ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf4d0.  call temp:= `hex`(v20) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L1cf4d6.  v1:= temp @kind object;
  #L1cf4d8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf4de.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf4e4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1cf4ea.  v0:= temp @kind object;
  #L1cf4ec.  goto L1cf69c;
  #L1cf4f0.  v0:= new `java.lang.StringBuilder`;
  #L1cf4f4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1cf4fa.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf500.  call temp:= `getData$okio`(v20) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf506.  v4:= temp @kind object;
  #L1cf508.  v4:= length @variable v4;
  #L1cf50a.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf510.  v4:= " hex=" @kind object;
  #L1cf514.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf51a.  call temp:= `getData$okio`(v20) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf520.  v4:= temp @kind object;
  #L1cf522.  v4:= length @variable v4;
  #L1cf524.  if v3 > v4 then goto L1cf52a;
  #L1cf528.  goto L1cf52c;
  #L1cf52a.  v1:= 0I;
  #L1cf52c.  if v1 == 0 then goto L1cf57e;
  #L1cf530.  call temp:= `getData$okio`(v20) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf536.  v1:= temp @kind object;
  #L1cf538.  v1:= length @variable v1;
  #L1cf53a.  if v3 != v1 then goto L1cf544;
  #L1cf53e.  v1:= v20 @kind object;
  #L1cf542.  goto L1cf55e;
  #L1cf544.  v1:= new `okio.ByteString`;
  #L1cf548.  call temp:= `getData$okio`(v20) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf54e.  v4:= temp @kind object;
  #L1cf550.  call temp:= `copyOfRange`(v4, v2, v3) @signature `Lkotlin/collections/ArraysKt;.copyOfRange:([BII)[B` @kind static;
  #L1cf556.  v2:= temp @kind object;
  #L1cf558.  call `<init>`(v1, v2) @signature `Lokio/ByteString;.<init>:([B)V` @kind direct;
  #L1cf55e.  call temp:= `hex`(v1) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L1cf564.  v1:= temp @kind object;
  #L1cf566.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf56c.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf572.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1cf578.  v0:= temp @kind object;
  #L1cf57a.  goto L1cf69c;
  #L1cf57e.  v0:= new `java.lang.StringBuilder`;
  #L1cf582.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1cf588.  v1:= "endIndex > length(" @kind object;
  #L1cf58c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf592.  call temp:= `getData$okio`(v20) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf598.  v1:= temp @kind object;
  #L1cf59a.  v1:= length @variable v1;
  #L1cf59c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf5a2.  v1:= 41I;
  #L1cf5a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf5ac.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1cf5b2.  v0:= temp @kind object;
  #L1cf5b4.  v1:= new `java.lang.IllegalArgumentException`;
  #L1cf5b8.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1cf5be.  v0:= temp @kind object;
  #L1cf5c0.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1cf5c6.  throw v1;
  #L1cf5c8.  call temp:= `utf8`(v20) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L1cf5ce.  v1:= temp @kind object;
  #L1cf5d0.  if v1 == 0 then goto L1cf69e;
  #L1cf5d4.  call temp:= `substring`(v1, v2, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1cf5da.  v8:= temp @kind object;
  #L1cf5dc.  v2:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L1cf5e0.  call `checkNotNullExpressionValue`(v8, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cf5e6.  v11:= 0I;
  #L1cf5e8.  v12:= 4I;
  #L1cf5ea.  v13:= 0I;
  #L1cf5ec.  v9:= "\\" @kind object;
  #L1cf5f0.  v10:= "\\\\" @kind object;
  #L1cf5f4.  call temp:= `replace$default`(v8, v9, v10, v11, v12, v13) @signature `Lkotlin/text/StringsKt;.replace$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1cf5fa.  v14:= temp @kind object;
  #L1cf5fc.  v17:= 0I;
  #L1cf600.  v18:= 4I;
  #L1cf604.  v19:= 0I;
  #L1cf608.  v15:= "\n" @kind object;
  #L1cf60c.  v16:= "\\n" @kind object;
  #L1cf610.  call temp:= `replace$default`(v14, v15, v16, v17, v18, v19) @signature `Lkotlin/text/StringsKt;.replace$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1cf616.  v8:= temp @kind object;
  #L1cf618.  v9:= "\r" @kind object;
  #L1cf61c.  v10:= "\\r" @kind object;
  #L1cf620.  call temp:= `replace$default`(v8, v9, v10, v11, v12, v13) @signature `Lkotlin/text/StringsKt;.replace$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1cf626.  v2:= temp @kind object;
  #L1cf628.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1cf62e.  v1:= temp;
  #L1cf630.  if v0 >= v1 then goto L1cf674;
  #L1cf634.  v0:= new `java.lang.StringBuilder`;
  #L1cf638.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1cf63e.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf644.  call temp:= `getData$okio`(v20) @signature `Lokio/ByteString;.getData$okio:()[B` @kind virtual;
  #L1cf64a.  v1:= temp @kind object;
  #L1cf64c.  v1:= length @variable v1;
  #L1cf64e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf654.  v1:= " text=" @kind object;
  #L1cf658.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf65e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf664.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf66a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1cf670.  v0:= temp @kind object;
  #L1cf672.  goto L1cf69c;
  #L1cf674.  v0:= new `java.lang.StringBuilder`;
  #L1cf678.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1cf67e.  v1:= "[text=" @kind object;
  #L1cf682.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf688.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf68e.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cf694.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1cf69a.  v0:= temp @kind object;
  #L1cf69c.  return v0 @kind object;
  #L1cf69e.  v0:= new `java.lang.NullPointerException`;
  #L1cf6a2.  v1:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L1cf6a6.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1cf6ac.  throw v0;
}
procedure `java.lang.String` `utf8`(`okio.ByteString` v1 @kind this) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cf6c0.  call temp:= `getUtf8$okio`(v1) @signature `Lokio/ByteString;.getUtf8$okio:()Ljava/lang/String;` @kind virtual;
  #L1cf6c6.  v0:= temp @kind object;
  #L1cf6c8.  if v0 != 0 then goto L1cf6e2;
  #L1cf6cc.  call temp:= `internalArray$okio`(v1) @signature `Lokio/ByteString;.internalArray$okio:()[B` @kind virtual;
  #L1cf6d2.  v0:= temp @kind object;
  #L1cf6d4.  call temp:= `toUtf8String`(v0) @signature `Lokio/-Platform;.toUtf8String:([B)Ljava/lang/String;` @kind static;
  #L1cf6da.  v0:= temp @kind object;
  #L1cf6dc.  call `setUtf8$okio`(v1, v0) @signature `Lokio/ByteString;.setUtf8$okio:(Ljava/lang/String;)V` @kind virtual;
  #L1cf6e2.  return v0 @kind object;
}
procedure `void` `write`(`okio.ByteString` v1 @kind this, `java.io.OutputStream` v2 @kind object) @signature `Lokio/ByteString;.write:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cfdcc.  v0:= "out" @kind object;
  #L1cfdd0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cfdd6.  v0:= v1.`okio.ByteString.c` @type ^`byte`[] @kind object;
  #L1cfdda.  call `write`(v2, v0) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L1cfde0.  return @kind void;
}
procedure `void` `write$okio`(`okio.ByteString` v1 @kind this, `okio.Buffer` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokio/ByteString;.write$okio:(Lokio/Buffer;II)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cfda8.  v0:= "buffer" @kind object;
  #L1cfdac.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1cfdb2.  call `commonWrite`(v1, v2, v3, v4) @signature `Lokio/internal/ByteStringKt;.commonWrite:(Lokio/ByteString;Lokio/Buffer;II)V` @kind static;
  #L1cfdb8.  return @kind void;
}
