record `okio.AsyncTimeout$sink$1` @kind class @AccessFlag PUBLIC_FINAL extends `okio.Sink` @kind interface {
  `okio.AsyncTimeout` `okio.AsyncTimeout$sink$1.a` @AccessFlag FINAL_SYNTHETIC;
  `okio.Sink` `okio.AsyncTimeout$sink$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.AsyncTimeout$sink$1` v0 @kind this, `okio.AsyncTimeout` v1 @kind object, `okio.Sink` v2 @kind object) @signature `Lokio/AsyncTimeout$sink$1;.<init>:(Lokio/AsyncTimeout;Lokio/Sink;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c9d84.  v0.`okio.AsyncTimeout$sink$1.a` @type ^`okio.AsyncTimeout` := v1 @kind object;
  #L1c9d88.  v0.`okio.AsyncTimeout$sink$1.b` @type ^`okio.Sink` := v2 @kind object;
  #L1c9d8c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c9d92.  return @kind void;
}
procedure `void` `close`(`okio.AsyncTimeout$sink$1` v3 @kind this) @signature `Lokio/AsyncTimeout$sink$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c9da4.  v0:= v3.`okio.AsyncTimeout$sink$1.a` @type ^`okio.AsyncTimeout` @kind object;
  #L1c9da8.  call `enter`(v0) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L1c9dae.  v1:= v3.`okio.AsyncTimeout$sink$1.b` @type ^`okio.Sink` @kind object;
  #L1c9db2.  call `close`(v1) @signature `Lokio/Sink;.close:()V` @kind interface;
  #L1c9db8.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1c9dbc.  call temp:= `exit`(v0) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1c9dc2.  v1:= temp;
  #L1c9dc4.  if v1 != 0 then goto L1c9dca;
  #L1c9dc8.  return @kind void;
  #L1c9dca.  v1:= 0I;
  #L1c9dcc.  call temp:= `access$newTimeoutException`(v0, v1) @signature `Lokio/AsyncTimeout;.access$newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1c9dd2.  v0:= temp @kind object;
  #L1c9dd4.  throw v0;
  #L1c9dd6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c9dd8.  goto L1c9df4;
  #L1c9dda.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L1c9ddc.  call temp:= `exit`(v0) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1c9de2.  v2:= temp;
  #L1c9de4.  if v2 != 0 then goto L1c9dea;
  #L1c9de8.  goto L1c9df2;
  #L1c9dea.  call temp:= `access$newTimeoutException`(v0, v1) @signature `Lokio/AsyncTimeout;.access$newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1c9df0.  v1:= temp @kind object;
  #L1c9df2.  throw v1;
  #L1c9df4.  call temp:= `exit`(v0) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1c9dfa.  v0:= temp;
  #L1c9dfc.  throw v1;
  catch `java.io.IOException` @[L1c9dae..L1c9dbc] goto L1c9dda;
  catch `java.lang.Throwable` @[L1c9dae..L1c9dbc] goto L1c9dd6;
  catch `java.lang.Throwable` @[L1c9ddc..L1c9df4] goto L1c9dd6;
}
procedure `void` `flush`(`okio.AsyncTimeout$sink$1` v3 @kind this) @signature `Lokio/AsyncTimeout$sink$1;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c9e28.  v0:= v3.`okio.AsyncTimeout$sink$1.a` @type ^`okio.AsyncTimeout` @kind object;
  #L1c9e2c.  call `enter`(v0) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L1c9e32.  v1:= v3.`okio.AsyncTimeout$sink$1.b` @type ^`okio.Sink` @kind object;
  #L1c9e36.  call `flush`(v1) @signature `Lokio/Sink;.flush:()V` @kind interface;
  #L1c9e3c.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1c9e40.  call temp:= `exit`(v0) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1c9e46.  v1:= temp;
  #L1c9e48.  if v1 != 0 then goto L1c9e4e;
  #L1c9e4c.  return @kind void;
  #L1c9e4e.  v1:= 0I;
  #L1c9e50.  call temp:= `access$newTimeoutException`(v0, v1) @signature `Lokio/AsyncTimeout;.access$newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1c9e56.  v0:= temp @kind object;
  #L1c9e58.  throw v0;
  #L1c9e5a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c9e5c.  goto L1c9e78;
  #L1c9e5e.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L1c9e60.  call temp:= `exit`(v0) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1c9e66.  v2:= temp;
  #L1c9e68.  if v2 != 0 then goto L1c9e6e;
  #L1c9e6c.  goto L1c9e76;
  #L1c9e6e.  call temp:= `access$newTimeoutException`(v0, v1) @signature `Lokio/AsyncTimeout;.access$newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1c9e74.  v1:= temp @kind object;
  #L1c9e76.  throw v1;
  #L1c9e78.  call temp:= `exit`(v0) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1c9e7e.  v0:= temp;
  #L1c9e80.  throw v1;
  catch `java.io.IOException` @[L1c9e32..L1c9e40] goto L1c9e5e;
  catch `java.lang.Throwable` @[L1c9e32..L1c9e40] goto L1c9e5a;
  catch `java.lang.Throwable` @[L1c9e60..L1c9e78] goto L1c9e5a;
}
procedure `okio.AsyncTimeout` `timeout`(`okio.AsyncTimeout$sink$1` v1 @kind this) @signature `Lokio/AsyncTimeout$sink$1;.timeout:()Lokio/AsyncTimeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c9d50.  v0:= v1.`okio.AsyncTimeout$sink$1.a` @type ^`okio.AsyncTimeout` @kind object;
  #L1c9d54.  return v0 @kind object;
}
procedure `okio.Timeout` `timeout`(`okio.AsyncTimeout$sink$1` v1 @kind this) @signature `Lokio/AsyncTimeout$sink$1;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1c9d68.  call temp:= `timeout`(v1) @signature `Lokio/AsyncTimeout$sink$1;.timeout:()Lokio/AsyncTimeout;` @kind virtual;
  #L1c9d6e.  v0:= temp @kind object;
  #L1c9d70.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.AsyncTimeout$sink$1` v2 @kind this) @signature `Lokio/AsyncTimeout$sink$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c9d0c.  v0:= new `java.lang.StringBuilder`;
  #L1c9d10.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c9d16.  v1:= "AsyncTimeout.sink(" @kind object;
  #L1c9d1a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c9d20.  v1:= v2.`okio.AsyncTimeout$sink$1.b` @type ^`okio.Sink` @kind object;
  #L1c9d24.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c9d2a.  v1:= 41I;
  #L1c9d2e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c9d34.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c9d3a.  v0:= temp @kind object;
  #L1c9d3c.  return v0 @kind object;
}
procedure `void` `write`(`okio.AsyncTimeout$sink$1` v7 @kind this, `okio.Buffer` v8 @kind object, `long` v9 ) @signature `Lokio/AsyncTimeout$sink$1;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1c9eac.  v0:= "source" @kind object;
  #L1c9eb0.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c9eb6.  call temp:= `size`(v8) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1c9ebc.  v1:= temp @kind wide;
  #L1c9ebe.  v3:= 0L;
  #L1c9ec2.  v5:= v9 @kind wide;
  #L1c9ec4.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Lokio/-Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L1c9eca.  v0:= 0L;
  #L1c9ece.  v2:= lcmp(v9, v0);
  #L1c9ed2.  if v2 <= 0 then goto L1c9f70;
  #L1c9ed6.  v2:= v8.`okio.Buffer.head` @type ^`okio.Segment` @kind object;
  #L1c9eda.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c9ee0.  v3:= 65536I;
  #L1c9ee4.  v3:= (`long`) v3 @kind i2l;
  #L1c9ee6.  v5:= lcmp(v0, v3);
  #L1c9eea.  if v5 >= 0 then goto L1c9f14;
  #L1c9eee.  v3:= v2.`okio.Segment.limit` @type ^`int`;
  #L1c9ef2.  v4:= v2.`okio.Segment.pos` @type ^`int`;
  #L1c9ef6.  v3:= v3 - v4 @kind int;
  #L1c9ef8.  v3:= (`long`) v3 @kind i2l;
  #L1c9efa.  v0:= v0 + v3 @kind long;
  #L1c9efc.  v3:= lcmp(v0, v9);
  #L1c9f00.  if v3 < 0 then goto L1c9f08;
  #L1c9f04.  v0:= v9 @kind wide;
  #L1c9f06.  goto L1c9f14;
  #L1c9f08.  v2:= v2.`okio.Segment.next` @type ^`okio.Segment` @kind object;
  #L1c9f0c.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c9f12.  goto L1c9ee0;
  #L1c9f14.  v2:= v7.`okio.AsyncTimeout$sink$1.a` @type ^`okio.AsyncTimeout` @kind object;
  #L1c9f18.  call `enter`(v2) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L1c9f1e.  v3:= v7.`okio.AsyncTimeout$sink$1.b` @type ^`okio.Sink` @kind object;
  #L1c9f22.  call `write`(v3, v8, v0) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L1c9f28.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1c9f2c.  call temp:= `exit`(v2) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1c9f32.  v3:= temp;
  #L1c9f34.  if v3 != 0 then goto L1c9f3c;
  #L1c9f38.  v9:= v9 - v0 @kind long;
  #L1c9f3a.  goto L1c9eca;
  #L1c9f3c.  v8:= 0I;
  #L1c9f3e.  call temp:= `access$newTimeoutException`(v2, v8) @signature `Lokio/AsyncTimeout;.access$newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1c9f44.  v8:= temp @kind object;
  #L1c9f46.  throw v8;
  #L1c9f48.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c9f4a.  goto L1c9f66;
  #L1c9f4c.  v8:= Exception @type ^`java.io.IOException` @kind object;
  #L1c9f4e.  call temp:= `exit`(v2) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1c9f54.  v9:= temp;
  #L1c9f56.  if v9 != 0 then goto L1c9f5c;
  #L1c9f5a.  goto L1c9f64;
  #L1c9f5c.  call temp:= `access$newTimeoutException`(v2, v8) @signature `Lokio/AsyncTimeout;.access$newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1c9f62.  v8:= temp @kind object;
  #L1c9f64.  throw v8;
  #L1c9f66.  call temp:= `exit`(v2) @signature `Lokio/AsyncTimeout;.exit:()Z` @kind virtual;
  #L1c9f6c.  v9:= temp;
  #L1c9f6e.  throw v8;
  #L1c9f70.  return @kind void;
  catch `java.io.IOException` @[L1c9f1e..L1c9f2c] goto L1c9f4c;
  catch `java.lang.Throwable` @[L1c9f1e..L1c9f2c] goto L1c9f48;
  catch `java.lang.Throwable` @[L1c9f4e..L1c9f66] goto L1c9f48;
}
