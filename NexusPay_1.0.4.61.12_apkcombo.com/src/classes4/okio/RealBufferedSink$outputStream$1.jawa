record `okio.RealBufferedSink$outputStream$1` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.OutputStream` @kind class {
  `okio.RealBufferedSink` `okio.RealBufferedSink$outputStream$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.RealBufferedSink$outputStream$1` v0 @kind this, `okio.RealBufferedSink` v1 @kind object) @signature `Lokio/RealBufferedSink$outputStream$1;.<init>:(Lokio/RealBufferedSink;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1d44ec.  v0.`okio.RealBufferedSink$outputStream$1.a` @type ^`okio.RealBufferedSink` := v1 @kind object;
  #L1d44f0.  call `<init>`(v0) @signature `Ljava/io/OutputStream;.<init>:()V` @kind direct;
  #L1d44f6.  return @kind void;
}
procedure `void` `close`(`okio.RealBufferedSink$outputStream$1` v1 @kind this) @signature `Lokio/RealBufferedSink$outputStream$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d4508.  v0:= v1.`okio.RealBufferedSink$outputStream$1.a` @type ^`okio.RealBufferedSink` @kind object;
  #L1d450c.  call `close`(v0) @signature `Lokio/RealBufferedSink;.close:()V` @kind virtual;
  #L1d4512.  return @kind void;
}
procedure `void` `flush`(`okio.RealBufferedSink$outputStream$1` v2 @kind this) @signature `Lokio/RealBufferedSink$outputStream$1;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d4524.  v0:= v2.`okio.RealBufferedSink$outputStream$1.a` @type ^`okio.RealBufferedSink` @kind object;
  #L1d4528.  v1:= v0.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L1d452c.  if v1 != 0 then goto L1d4536;
  #L1d4530.  call `flush`(v0) @signature `Lokio/RealBufferedSink;.flush:()V` @kind virtual;
  #L1d4536.  return @kind void;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSink$outputStream$1` v2 @kind this) @signature `Lokio/RealBufferedSink$outputStream$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d44b4.  v0:= new `java.lang.StringBuilder`;
  #L1d44b8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d44be.  v1:= v2.`okio.RealBufferedSink$outputStream$1.a` @type ^`okio.RealBufferedSink` @kind object;
  #L1d44c2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d44c8.  v1:= ".outputStream()" @kind object;
  #L1d44cc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d44d2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d44d8.  v0:= temp @kind object;
  #L1d44da.  return v0 @kind object;
}
procedure `void` `write`(`okio.RealBufferedSink$outputStream$1` v2 @kind this, `int` v3 ) @signature `Lokio/RealBufferedSink$outputStream$1;.write:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d4594.  v0:= v2.`okio.RealBufferedSink$outputStream$1.a` @type ^`okio.RealBufferedSink` @kind object;
  #L1d4598.  v1:= v0.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L1d459c.  if v1 != 0 then goto L1d45b8;
  #L1d45a0.  v0:= v0.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d45a4.  v3:= (`byte`) v3 @kind i2b;
  #L1d45a6.  call temp:= `writeByte`(v0, v3) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1d45ac.  v3:= v2.`okio.RealBufferedSink$outputStream$1.a` @type ^`okio.RealBufferedSink` @kind object;
  #L1d45b0.  call temp:= `emitCompleteSegments`(v3) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L1d45b6.  return @kind void;
  #L1d45b8.  v3:= new `java.io.IOException`;
  #L1d45bc.  v0:= "closed" @kind object;
  #L1d45c0.  call `<init>`(v3, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d45c6.  throw v3;
}
procedure `void` `write`(`okio.RealBufferedSink$outputStream$1` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokio/RealBufferedSink$outputStream$1;.write:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d4548.  v0:= "data" @kind object;
  #L1d454c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d4552.  v0:= v2.`okio.RealBufferedSink$outputStream$1.a` @type ^`okio.RealBufferedSink` @kind object;
  #L1d4556.  v1:= v0.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L1d455a.  if v1 != 0 then goto L1d4574;
  #L1d455e.  v0:= v0.`okio.RealBufferedSink.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d4562.  call temp:= `write`(v0, v3, v4, v5) @signature `Lokio/Buffer;.write:([BII)Lokio/Buffer;` @kind virtual;
  #L1d4568.  v3:= v2.`okio.RealBufferedSink$outputStream$1.a` @type ^`okio.RealBufferedSink` @kind object;
  #L1d456c.  call temp:= `emitCompleteSegments`(v3) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L1d4572.  return @kind void;
  #L1d4574.  v3:= new `java.io.IOException`;
  #L1d4578.  v4:= "closed" @kind object;
  #L1d457c.  call `<init>`(v3, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d4582.  throw v3;
}
