record `okio.Options$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okio.Options$Companion` v0 @kind this) @signature `Lokio/Options$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1d2c88.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d2c8e.  return @kind void;
}
procedure `void` `<init>`(`okio.Options$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokio/Options$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1d2ca0.  call `<init>`(v0) @signature `Lokio/Options$Companion;.<init>:()V` @kind direct;
  #L1d2ca6.  return @kind void;
}
procedure `void` `a`(`okio.Options$Companion` v19 @kind this, `long` v20 , `okio.Buffer` v22 @kind object, `int` v23 , `java.util.List` v24 @kind object, `int` v25 , `int` v26 , `java.util.List` v27 @kind object) @signature `Lokio/Options$Companion;.a:(JLokio/Buffer;ILjava/util/List;IILjava/util/List;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L1d2d28.  v9:= v19 @kind object;
  #L1d2d2c.  v10:= v22 @kind object;
  #L1d2d30.  v11:= v23;
  #L1d2d34.  v12:= v24 @kind object;
  #L1d2d38.  v0:= v25;
  #L1d2d3c.  v13:= v26;
  #L1d2d40.  v14:= v27 @kind object;
  #L1d2d44.  if v0 >= v13 then goto L1d2d4c;
  #L1d2d48.  v3:= 1I;
  #L1d2d4a.  goto L1d2d4e;
  #L1d2d4c.  v3:= 0I;
  #L1d2d4e.  v4:= "Failed requirement." @kind object;
  #L1d2d52.  if v3 == 0 then goto L1d30c4;
  #L1d2d56.  v3:= v0;
  #L1d2d58.  if v3 >= v13 then goto L1d2d98;
  #L1d2d5c.  call temp:= `get`(v12, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d2d62.  v5:= temp @kind object;
  #L1d2d64.  v5:= (`okio.ByteString`) v5 @kind object;
  #L1d2d68.  call temp:= `size`(v5) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1d2d6e.  v5:= temp;
  #L1d2d70.  if v5 < v11 then goto L1d2d78;
  #L1d2d74.  v5:= 1I;
  #L1d2d76.  goto L1d2d7a;
  #L1d2d78.  v5:= 0I;
  #L1d2d7a.  if v5 == 0 then goto L1d2d84;
  #L1d2d7e.  v3:= v3 + 1;
  #L1d2d82.  goto L1d2d58;
  #L1d2d84.  v0:= new `java.lang.IllegalArgumentException`;
  #L1d2d88.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d2d8e.  v1:= temp @kind object;
  #L1d2d90.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d2d96.  throw v0;
  #L1d2d98.  call temp:= `get`(v24, v25) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d2d9e.  v3:= temp @kind object;
  #L1d2da0.  v3:= (`okio.ByteString`) v3 @kind object;
  #L1d2da4.  v4:= v13 + -1;
  #L1d2da8.  call temp:= `get`(v12, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d2dae.  v4:= temp @kind object;
  #L1d2db0.  v4:= (`okio.ByteString`) v4 @kind object;
  #L1d2db4.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1d2dba.  v5:= temp;
  #L1d2dbc.  v15:= -1I;
  #L1d2dbe.  if v11 != v5 then goto L1d2dee;
  #L1d2dc2.  call temp:= `get`(v14, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d2dc8.  v3:= temp @kind object;
  #L1d2dca.  v3:= (`java.lang.Number`) v3 @kind object;
  #L1d2dce.  call temp:= `intValue`(v3) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L1d2dd4.  v3:= temp;
  #L1d2dd6.  v0:= v0 + 1;
  #L1d2dda.  call temp:= `get`(v12, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d2de0.  v5:= temp @kind object;
  #L1d2de2.  v5:= (`okio.ByteString`) v5 @kind object;
  #L1d2de6.  v6:= v0;
  #L1d2de8.  v0:= v3;
  #L1d2dea.  v3:= v5 @kind object;
  #L1d2dec.  goto L1d2df2;
  #L1d2dee.  v6:= v0;
  #L1d2df0.  v0:= -1I;
  #L1d2df2.  call temp:= `getByte`(v3, v11) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1d2df8.  v5:= temp;
  #L1d2dfa.  call temp:= `getByte`(v4, v11) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1d2e00.  v7:= temp;
  #L1d2e02.  v8:= 2I;
  #L1d2e04.  if v5 == v7 then goto L1d2f9e;
  #L1d2e08.  v1:= v6 + 1;
  #L1d2e0c.  v2:= 1I;
  #L1d2e0e.  if v1 >= v13 then goto L1d2e4c;
  #L1d2e12.  v3:= v1 + -1;
  #L1d2e16.  call temp:= `get`(v12, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d2e1c.  v3:= temp @kind object;
  #L1d2e1e.  v3:= (`okio.ByteString`) v3 @kind object;
  #L1d2e22.  call temp:= `getByte`(v3, v11) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1d2e28.  v3:= temp;
  #L1d2e2a.  call temp:= `get`(v12, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d2e30.  v4:= temp @kind object;
  #L1d2e32.  v4:= (`okio.ByteString`) v4 @kind object;
  #L1d2e36.  call temp:= `getByte`(v4, v11) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1d2e3c.  v4:= temp;
  #L1d2e3e.  if v3 == v4 then goto L1d2e46;
  #L1d2e42.  v2:= v2 + 1;
  #L1d2e46.  v1:= v1 + 1;
  #L1d2e4a.  goto L1d2e0e;
  #L1d2e4c.  call temp:= `c`(v9, v10) @signature `Lokio/Options$Companion;.c:(Lokio/Buffer;)J` @kind direct;
  #L1d2e52.  v3:= temp @kind wide;
  #L1d2e54.  v3:= v20 + v3 @kind long;
  #L1d2e58.  v7:= (`long`) v8 @kind i2l;
  #L1d2e5a.  v3:= v3 + v7 @kind long;
  #L1d2e5c.  v1:= v2 * 2;
  #L1d2e60.  v7:= (`long`) v1 @kind i2l;
  #L1d2e62.  v16:= v3 + v7 @kind long;
  #L1d2e66.  call temp:= `writeInt`(v10, v2) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L1d2e6c.  call temp:= `writeInt`(v10, v0) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L1d2e72.  v0:= v6;
  #L1d2e74.  if v0 >= v13 then goto L1d2ebc;
  #L1d2e78.  call temp:= `get`(v12, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d2e7e.  v1:= temp @kind object;
  #L1d2e80.  v1:= (`okio.ByteString`) v1 @kind object;
  #L1d2e84.  call temp:= `getByte`(v1, v11) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1d2e8a.  v1:= temp;
  #L1d2e8c.  if v0 == v6 then goto L1d2eac;
  #L1d2e90.  v2:= v0 + -1;
  #L1d2e94.  call temp:= `get`(v12, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d2e9a.  v2:= temp @kind object;
  #L1d2e9c.  v2:= (`okio.ByteString`) v2 @kind object;
  #L1d2ea0.  call temp:= `getByte`(v2, v11) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1d2ea6.  v2:= temp;
  #L1d2ea8.  if v1 == v2 then goto L1d2eb6;
  #L1d2eac.  v1:= v1 ^& 255;
  #L1d2eb0.  call temp:= `writeInt`(v10, v1) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L1d2eb6.  v0:= v0 + 1;
  #L1d2eba.  goto L1d2e74;
  #L1d2ebc.  v8:= new `okio.Buffer`;
  #L1d2ec0.  call `<init>`(v8) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1d2ec6.  if v6 >= v13 then goto L1d2f92;
  #L1d2eca.  call temp:= `get`(v12, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d2ed0.  v0:= temp @kind object;
  #L1d2ed2.  v0:= (`okio.ByteString`) v0 @kind object;
  #L1d2ed6.  call temp:= `getByte`(v0, v11) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1d2edc.  v0:= temp;
  #L1d2ede.  v1:= v6 + 1;
  #L1d2ee2.  v2:= v1;
  #L1d2ee4.  if v2 >= v13 then goto L1d2f0a;
  #L1d2ee8.  call temp:= `get`(v12, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d2eee.  v3:= temp @kind object;
  #L1d2ef0.  v3:= (`okio.ByteString`) v3 @kind object;
  #L1d2ef4.  call temp:= `getByte`(v3, v11) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1d2efa.  v3:= temp;
  #L1d2efc.  if v0 == v3 then goto L1d2f04;
  #L1d2f00.  v7:= v2;
  #L1d2f02.  goto L1d2f0c;
  #L1d2f04.  v2:= v2 + 1;
  #L1d2f08.  goto L1d2ee4;
  #L1d2f0a.  v7:= v13;
  #L1d2f0c.  if v1 != v7 then goto L1d2f4e;
  #L1d2f10.  v0:= v11 + 1;
  #L1d2f14.  call temp:= `get`(v12, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d2f1a.  v1:= temp @kind object;
  #L1d2f1c.  v1:= (`okio.ByteString`) v1 @kind object;
  #L1d2f20.  call temp:= `size`(v1) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1d2f26.  v1:= temp;
  #L1d2f28.  if v0 != v1 then goto L1d2f4e;
  #L1d2f2c.  call temp:= `get`(v14, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d2f32.  v0:= temp @kind object;
  #L1d2f34.  v0:= (`java.lang.Number`) v0 @kind object;
  #L1d2f38.  call temp:= `intValue`(v0) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L1d2f3e.  v0:= temp;
  #L1d2f40.  call temp:= `writeInt`(v10, v0) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L1d2f46.  v18:= v7;
  #L1d2f4a.  v15:= v8 @kind object;
  #L1d2f4c.  goto L1d2f88;
  #L1d2f4e.  call temp:= `c`(v9, v8) @signature `Lokio/Options$Companion;.c:(Lokio/Buffer;)J` @kind direct;
  #L1d2f54.  v0:= temp @kind wide;
  #L1d2f56.  v0:= v16 + v0 @kind long;
  #L1d2f5a.  v1:= (`int`) v0 @kind l2i;
  #L1d2f5c.  v1:= v1 * -1;
  #L1d2f60.  call temp:= `writeInt`(v10, v1) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L1d2f66.  v4:= v11 + 1;
  #L1d2f6a.  v0:= v19 @kind object;
  #L1d2f6e.  v1:= v16 @kind wide;
  #L1d2f72.  v3:= v8 @kind object;
  #L1d2f74.  v5:= v24 @kind object;
  #L1d2f78.  v18:= v7;
  #L1d2f7c.  v15:= v8 @kind object;
  #L1d2f7e.  v8:= v27 @kind object;
  #L1d2f82.  call `a`(v0, v1, v3, v4, v5, v6, v7, v8) @signature `Lokio/Options$Companion;.a:(JLokio/Buffer;ILjava/util/List;IILjava/util/List;)V` @kind direct;
  #L1d2f88.  v8:= v15 @kind object;
  #L1d2f8a.  v6:= v18;
  #L1d2f8e.  v15:= -1I;
  #L1d2f90.  goto L1d2ec6;
  #L1d2f92.  v15:= v8 @kind object;
  #L1d2f94.  call temp:= `writeAll`(v10, v15) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L1d2f9a.  goto L1d30c2;
  #L1d2f9e.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1d2fa4.  v5:= temp;
  #L1d2fa6.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1d2fac.  v7:= temp;
  #L1d2fae.  call temp:= `min`(v5, v7) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1d2fb4.  v5:= temp;
  #L1d2fb6.  v7:= v11;
  #L1d2fb8.  v15:= 0I;
  #L1d2fba.  if v7 >= v5 then goto L1d2fdc;
  #L1d2fbe.  call temp:= `getByte`(v3, v7) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1d2fc4.  v1:= temp;
  #L1d2fc6.  call temp:= `getByte`(v4, v7) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1d2fcc.  v2:= temp;
  #L1d2fce.  if v1 != v2 then goto L1d2fdc;
  #L1d2fd2.  v15:= v15 + 1;
  #L1d2fd6.  v7:= v7 + 1;
  #L1d2fda.  goto L1d2fba;
  #L1d2fdc.  call temp:= `c`(v9, v10) @signature `Lokio/Options$Companion;.c:(Lokio/Buffer;)J` @kind direct;
  #L1d2fe2.  v1:= temp @kind wide;
  #L1d2fe4.  v1:= v20 + v1 @kind long;
  #L1d2fe8.  v4:= (`long`) v8 @kind i2l;
  #L1d2fea.  v1:= v1 + v4 @kind long;
  #L1d2fec.  v4:= (`long`) v15 @kind i2l;
  #L1d2fee.  v1:= v1 + v4 @kind long;
  #L1d2ff0.  v4:= 1L;
  #L1d2ff4.  v1:= v1 + v4 @kind long;
  #L1d2ff6.  v4:= -v15 @kind int;
  #L1d2ff8.  call temp:= `writeInt`(v10, v4) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L1d2ffe.  call temp:= `writeInt`(v10, v0) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L1d3004.  v4:= v11 + v15 @kind int;
  #L1d3008.  if v11 >= v4 then goto L1d3024;
  #L1d300c.  call temp:= `getByte`(v3, v11) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1d3012.  v0:= temp;
  #L1d3014.  v0:= v0 ^& 255;
  #L1d3018.  call temp:= `writeInt`(v10, v0) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L1d301e.  v11:= v11 + 1;
  #L1d3022.  goto L1d3008;
  #L1d3024.  v0:= v6 + 1;
  #L1d3028.  if v0 != v13 then goto L1d3082;
  #L1d302c.  call temp:= `get`(v12, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d3032.  v0:= temp @kind object;
  #L1d3034.  v0:= (`okio.ByteString`) v0 @kind object;
  #L1d3038.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1d303e.  v0:= temp;
  #L1d3040.  if v4 != v0 then goto L1d3048;
  #L1d3044.  v1:= 1I;
  #L1d3046.  goto L1d304a;
  #L1d3048.  v1:= 0I;
  #L1d304a.  if v1 == 0 then goto L1d306a;
  #L1d304e.  call temp:= `get`(v14, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d3054.  v0:= temp @kind object;
  #L1d3056.  v0:= (`java.lang.Number`) v0 @kind object;
  #L1d305a.  call temp:= `intValue`(v0) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L1d3060.  v0:= temp;
  #L1d3062.  call temp:= `writeInt`(v10, v0) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L1d3068.  goto L1d30c2;
  #L1d306a.  v0:= new `java.lang.IllegalStateException`;
  #L1d306e.  v1:= "Check failed." @kind object;
  #L1d3072.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d3078.  v1:= temp @kind object;
  #L1d307a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d3080.  throw v0;
  #L1d3082.  v11:= new `okio.Buffer`;
  #L1d3086.  call `<init>`(v11) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1d308c.  call temp:= `c`(v9, v11) @signature `Lokio/Options$Companion;.c:(Lokio/Buffer;)J` @kind direct;
  #L1d3092.  v7:= temp @kind wide;
  #L1d3094.  v7:= v7 + v1 @kind long;
  #L1d3096.  v0:= (`int`) v7 @kind l2i;
  #L1d3098.  v3:= -1I;
  #L1d309a.  v0:= v0 * -1;
  #L1d309e.  call temp:= `writeInt`(v10, v0) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L1d30a4.  v0:= v19 @kind object;
  #L1d30a8.  v3:= v11 @kind object;
  #L1d30aa.  v5:= v24 @kind object;
  #L1d30ae.  v7:= v26;
  #L1d30b2.  v8:= v27 @kind object;
  #L1d30b6.  call `a`(v0, v1, v3, v4, v5, v6, v7, v8) @signature `Lokio/Options$Companion;.a:(JLokio/Buffer;ILjava/util/List;IILjava/util/List;)V` @kind direct;
  #L1d30bc.  call temp:= `writeAll`(v10, v11) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L1d30c2.  return @kind void;
  #L1d30c4.  v0:= new `java.lang.IllegalArgumentException`;
  #L1d30c8.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d30ce.  v1:= temp @kind object;
  #L1d30d0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d30d6.  throw v0;
}
procedure `void` `b`(`okio.Options$Companion` v11 @kind object, `long` v12 , `okio.Buffer` v14 @kind object, `int` v15 , `java.util.List` v16 @kind object, `int` v17 , `int` v18 , `java.util.List` v19 @kind object, `int` v20 , `java.lang.Object` v21 @kind object) @signature `Lokio/Options$Companion;.b:(Lokio/Options$Companion;JLokio/Buffer;ILjava/util/List;IILjava/util/List;ILjava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1d2cb8.  v0:= v20 ^& 1;
  #L1d2cbc.  if v0 == 0 then goto L1d2cc8;
  #L1d2cc0.  v0:= 0L;
  #L1d2cc4.  v3:= v0 @kind wide;
  #L1d2cc6.  goto L1d2cca;
  #L1d2cc8.  v3:= v12 @kind wide;
  #L1d2cca.  v0:= v20 ^& 4;
  #L1d2cce.  v1:= 0I;
  #L1d2cd0.  if v0 == 0 then goto L1d2cd8;
  #L1d2cd4.  v6:= 0I;
  #L1d2cd6.  goto L1d2cda;
  #L1d2cd8.  v6:= v15;
  #L1d2cda.  v0:= v20 ^& 16;
  #L1d2cde.  if v0 == 0 then goto L1d2ce6;
  #L1d2ce2.  v8:= 0I;
  #L1d2ce4.  goto L1d2cea;
  #L1d2ce6.  v8:= v17;
  #L1d2cea.  v0:= v20 ^& 32;
  #L1d2cee.  if v0 == 0 then goto L1d2cfe;
  #L1d2cf2.  call temp:= `size`(v16) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d2cf8.  v0:= temp;
  #L1d2cfa.  v9:= v0;
  #L1d2cfc.  goto L1d2d02;
  #L1d2cfe.  v9:= v18;
  #L1d2d02.  v2:= v11 @kind object;
  #L1d2d04.  v5:= v14 @kind object;
  #L1d2d06.  v7:= v16 @kind object;
  #L1d2d0a.  v10:= v19 @kind object;
  #L1d2d0e.  call `a`(v2, v3, v5, v6, v7, v8, v9, v10) @signature `Lokio/Options$Companion;.a:(JLokio/Buffer;ILjava/util/List;IILjava/util/List;)V` @kind direct;
  #L1d2d14.  return @kind void;
}
procedure `long` `c`(`okio.Options$Companion` v4 @kind this, `okio.Buffer` v5 @kind object) @signature `Lokio/Options$Companion;.c:(Lokio/Buffer;)J` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d29b8.  call temp:= `size`(v5) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d29be.  v0:= temp @kind wide;
  #L1d29c0.  v5:= 4I;
  #L1d29c2.  v2:= (`long`) v5 @kind i2l;
  #L1d29c4.  v0:= v0 / v2 @kind long;
  #L1d29c6.  return v0 @kind wide;
}
procedure `okio.Options` `of`(`okio.Options$Companion` v16 @kind this, `okio.ByteString`[] v17 @kind object) @signature `Lokio/Options$Companion;.of:([Lokio/ByteString;)Lokio/Options;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L1d29d8.  v0:= v17 @kind object;
  #L1d29dc.  v1:= "byteStrings" @kind object;
  #L1d29e0.  call `checkNotNullParameter`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d29e6.  v1:= length @variable v0;
  #L1d29e8.  v2:= 1I;
  #L1d29ea.  v3:= 0I;
  #L1d29ec.  if v1 != 0 then goto L1d29f4;
  #L1d29f0.  v1:= 1I;
  #L1d29f2.  goto L1d29f6;
  #L1d29f4.  v1:= 0I;
  #L1d29f6.  v4:= 0I;
  #L1d29f8.  if v1 == 0 then goto L1d2a18;
  #L1d29fc.  v0:= new `okio.Options`;
  #L1d2a00.  v1:= new `okio.ByteString`[v3];
  #L1d2a04.  v2:= 2I;
  #L1d2a06.  v2:= new `int`[v2];
  #L1d2a0a.  goto L1d2c68;
  #L1d2a10.  call `<init>`(v0, v1, v2, v4) @signature `Lokio/Options;.<init>:([Lokio/ByteString;[ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1d2a16.  return v0 @kind object;
  #L1d2a18.  call temp:= `toMutableList`(v17) @signature `Lkotlin/collections/ArraysKt;.toMutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1d2a1e.  v1:= temp @kind object;
  #L1d2a20.  call `sort`(v1) @signature `Lkotlin/collections/CollectionsKt;.sort:(Ljava/util/List;)V` @kind static;
  #L1d2a26.  v5:= new `java.util.ArrayList`;
  #L1d2a2a.  v6:= length @variable v0;
  #L1d2a2c.  call `<init>`(v5, v6) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1d2a32.  v6:= length @variable v0;
  #L1d2a34.  v7:= 0I;
  #L1d2a36.  if v7 >= v6 then goto L1d2a54;
  #L1d2a3a.  v8:= v0[v7] @kind object;
  #L1d2a3e.  v8:= -1I;
  #L1d2a40.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d2a46.  v8:= temp @kind object;
  #L1d2a48.  call temp:= `add`(v5, v8) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1d2a4e.  v7:= v7 + 1;
  #L1d2a52.  goto L1d2a36;
  #L1d2a54.  v6:= new `java.lang.Integer`[v3];
  #L1d2a58.  call temp:= `toArray`(v5, v6) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1d2a5e.  v5:= temp @kind object;
  #L1d2a60.  if v5 == 0 then goto L1d2c52;
  #L1d2a64.  v5:= (`java.lang.Integer`[]) v5 @kind object;
  #L1d2a68.  v6:= length @variable v5;
  #L1d2a6a.  call temp:= `copyOf`(v5, v6) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L1d2a70.  v5:= temp @kind object;
  #L1d2a72.  v5:= (`java.lang.Integer`[]) v5 @kind object;
  #L1d2a76.  call temp:= `mutableListOf`(v5) @signature `Lkotlin/collections/CollectionsKt;.mutableListOf:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1d2a7c.  v13:= temp @kind object;
  #L1d2a7e.  v11:= length @variable v0;
  #L1d2a80.  v12:= 0I;
  #L1d2a82.  v14:= 0I;
  #L1d2a84.  if v12 >= v11 then goto L1d2ab8;
  #L1d2a88.  v6:= v0[v12] @kind object;
  #L1d2a8c.  v15:= v14 + 1;
  #L1d2a90.  v7:= 0I;
  #L1d2a92.  v8:= 0I;
  #L1d2a94.  v9:= 6I;
  #L1d2a96.  v10:= 0I;
  #L1d2a98.  v5:= v1 @kind object;
  #L1d2a9a.  call temp:= `binarySearch$default`(v5, v6, v7, v8, v9, v10) @signature `Lkotlin/collections/CollectionsKt;.binarySearch$default:(Ljava/util/List;Ljava/lang/Comparable;IIILjava/lang/Object;)I` @kind static;
  #L1d2aa0.  v5:= temp;
  #L1d2aa2.  call temp:= `valueOf`(v14) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d2aa8.  v6:= temp @kind object;
  #L1d2aaa.  call temp:= `set`(v13, v5, v6) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d2ab0.  v12:= v12 + 1;
  #L1d2ab4.  v14:= v15;
  #L1d2ab6.  goto L1d2a84;
  #L1d2ab8.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d2abe.  v5:= temp @kind object;
  #L1d2ac0.  v5:= (`okio.ByteString`) v5 @kind object;
  #L1d2ac4.  call temp:= `size`(v5) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1d2aca.  v5:= temp;
  #L1d2acc.  if v5 <= 0 then goto L1d2ad4;
  #L1d2ad0.  v5:= 1I;
  #L1d2ad2.  goto L1d2ad6;
  #L1d2ad4.  v5:= 0I;
  #L1d2ad6.  if v5 == 0 then goto L1d2c36;
  #L1d2ada.  v5:= 0I;
  #L1d2adc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d2ae2.  v6:= temp;
  #L1d2ae4.  if v5 >= v6 then goto L1d2bb8;
  #L1d2ae8.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d2aee.  v6:= temp @kind object;
  #L1d2af0.  v6:= (`okio.ByteString`) v6 @kind object;
  #L1d2af4.  v7:= v5 + 1;
  #L1d2af8.  v8:= v7;
  #L1d2afa.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d2b00.  v9:= temp;
  #L1d2b02.  if v8 >= v9 then goto L1d2bb4;
  #L1d2b06.  call temp:= `get`(v1, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d2b0c.  v9:= temp @kind object;
  #L1d2b0e.  v9:= (`okio.ByteString`) v9 @kind object;
  #L1d2b12.  call temp:= `startsWith`(v9, v6) @signature `Lokio/ByteString;.startsWith:(Lokio/ByteString;)Z` @kind virtual;
  #L1d2b18.  v10:= temp;
  #L1d2b1a.  if v10 != 0 then goto L1d2b20;
  #L1d2b1e.  goto L1d2bb4;
  #L1d2b20.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1d2b26.  v10:= temp;
  #L1d2b28.  call temp:= `size`(v6) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1d2b2e.  v11:= temp;
  #L1d2b30.  if v10 == v11 then goto L1d2b38;
  #L1d2b34.  v10:= 1I;
  #L1d2b36.  goto L1d2b3a;
  #L1d2b38.  v10:= 0I;
  #L1d2b3a.  if v10 == 0 then goto L1d2b7e;
  #L1d2b3e.  call temp:= `get`(v13, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d2b44.  v9:= temp @kind object;
  #L1d2b46.  v9:= (`java.lang.Number`) v9 @kind object;
  #L1d2b4a.  call temp:= `intValue`(v9) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L1d2b50.  v9:= temp;
  #L1d2b52.  call temp:= `get`(v13, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d2b58.  v10:= temp @kind object;
  #L1d2b5a.  v10:= (`java.lang.Number`) v10 @kind object;
  #L1d2b5e.  call temp:= `intValue`(v10) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L1d2b64.  v10:= temp;
  #L1d2b66.  if v9 <= v10 then goto L1d2b78;
  #L1d2b6a.  call temp:= `remove`(v1, v8) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L1d2b70.  call temp:= `remove`(v13, v8) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L1d2b76.  goto L1d2afa;
  #L1d2b78.  v8:= v8 + 1;
  #L1d2b7c.  goto L1d2afa;
  #L1d2b7e.  v0:= new `java.lang.StringBuilder`;
  #L1d2b82.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d2b88.  v1:= "duplicate option: " @kind object;
  #L1d2b8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d2b92.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d2b98.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d2b9e.  v0:= temp @kind object;
  #L1d2ba0.  v1:= new `java.lang.IllegalArgumentException`;
  #L1d2ba4.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d2baa.  v0:= temp @kind object;
  #L1d2bac.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d2bb2.  throw v1;
  #L1d2bb4.  v5:= v7;
  #L1d2bb6.  goto L1d2adc;
  #L1d2bb8.  v2:= new `okio.Buffer`;
  #L1d2bbc.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1d2bc2.  v6:= 0L;
  #L1d2bc6.  v9:= 0I;
  #L1d2bc8.  v11:= 0I;
  #L1d2bca.  v12:= 0I;
  #L1d2bcc.  v14:= 53I;
  #L1d2bd0.  v15:= 0I;
  #L1d2bd2.  v5:= v16 @kind object;
  #L1d2bd6.  v8:= v2 @kind object;
  #L1d2bd8.  v10:= v1 @kind object;
  #L1d2bda.  call `b`(v5, v6, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lokio/Options$Companion;.b:(Lokio/Options$Companion;JLokio/Buffer;ILjava/util/List;IILjava/util/List;ILjava/lang/Object;)V` @kind static;
  #L1d2be0.  v1:= v16 @kind object;
  #L1d2be4.  call temp:= `c`(v1, v2) @signature `Lokio/Options$Companion;.c:(Lokio/Buffer;)J` @kind direct;
  #L1d2bea.  v5:= temp @kind wide;
  #L1d2bec.  v6:= (`int`) v5 @kind l2i;
  #L1d2bee.  v5:= new `int`[v6];
  #L1d2bf2.  call temp:= `exhausted`(v2) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L1d2bf8.  v6:= temp;
  #L1d2bfa.  if v6 != 0 then goto L1d2c12;
  #L1d2bfe.  v6:= v3 + 1;
  #L1d2c02.  call temp:= `readInt`(v2) @signature `Lokio/Buffer;.readInt:()I` @kind virtual;
  #L1d2c08.  v7:= temp;
  #L1d2c0a.  v5[v3]:= v7;
  #L1d2c0e.  v3:= v6;
  #L1d2c10.  goto L1d2bf2;
  #L1d2c12.  v2:= new `okio.Options`;
  #L1d2c16.  v3:= length @variable v0;
  #L1d2c18.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L1d2c1e.  v0:= temp @kind object;
  #L1d2c20.  v3:= "java.util.Arrays.copyOf(this, size)" @kind object;
  #L1d2c24.  call `checkNotNullExpressionValue`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d2c2a.  v0:= (`okio.ByteString`[]) v0 @kind object;
  #L1d2c2e.  call `<init>`(v2, v0, v5, v4) @signature `Lokio/Options;.<init>:([Lokio/ByteString;[ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1d2c34.  return v2 @kind object;
  #L1d2c36.  v1:= v16 @kind object;
  #L1d2c3a.  v0:= new `java.lang.IllegalArgumentException`;
  #L1d2c3e.  v2:= "the empty byte string is not a supported option" @kind object;
  #L1d2c42.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d2c48.  v2:= temp @kind object;
  #L1d2c4a.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d2c50.  throw v0;
  #L1d2c52.  v1:= v16 @kind object;
  #L1d2c56.  v0:= new `java.lang.NullPointerException`;
  #L1d2c5a.  v2:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L1d2c5e.  call `<init>`(v0, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d2c64.  throw v0;
  #L1d2c66.  
  #L1d2c68.  v2:= (0I, -1I) @kind object;
  #L1d2c77.  goto L1d2a10;
}
