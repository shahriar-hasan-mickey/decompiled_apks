record `okio.Utf8` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@okio.Utf8.HIGH_SURROGATE_HEADER` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okio.Utf8.LOG_SURROGATE_HEADER` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okio.Utf8.MASK_2BYTES` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okio.Utf8.MASK_3BYTES` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okio.Utf8.MASK_4BYTES` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@okio.Utf8.REPLACEMENT_BYTE` @AccessFlag PUBLIC_STATIC_FINAL;
global `char` `@@okio.Utf8.REPLACEMENT_CHARACTER` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okio.Utf8.REPLACEMENT_CODE_POINT` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `boolean` `isIsoControl`(`int` v2 ) @signature `Lokio/Utf8;.isIsoControl:(I)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1d7f6c.  if v2 < 0 then goto L1d7f78;
  #L1d7f70.  v0:= 31I;
  #L1d7f74.  if v0 >= v2 then goto L1d7f8a;
  #L1d7f78.  v0:= 159I;
  #L1d7f7c.  v1:= 127I;
  #L1d7f80.  if v1 <= v2 then goto L1d7f86;
  #L1d7f84.  goto L1d7f8e;
  #L1d7f86.  if v0 < v2 then goto L1d7f8e;
  #L1d7f8a.  v2:= 1I;
  #L1d7f8c.  goto L1d7f90;
  #L1d7f8e.  v2:= 0I;
  #L1d7f90.  return v2;
}
procedure `boolean` `isUtf8Continuation`(`byte` v1 ) @signature `Lokio/Utf8;.isUtf8Continuation:(B)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1d7fa4.  v1:= v1 ^& 192;
  #L1d7fa8.  v0:= 128I;
  #L1d7fac.  if v1 != v0 then goto L1d7fb4;
  #L1d7fb0.  v1:= 1I;
  #L1d7fb2.  goto L1d7fb6;
  #L1d7fb4.  v1:= 0I;
  #L1d7fb6.  return v1;
}
procedure `int` `process2Utf8Bytes`(`byte`[] v3 @kind object, `int` v4 , `int` v5 , `kotlin.jvm.functions.Function1` v6 @kind object) @signature `Lokio/Utf8;.process2Utf8Bytes:([BIILkotlin/jvm/functions/Function1;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1d7fc8.  v0:= "$this$process2Utf8Bytes" @kind object;
  #L1d7fcc.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d7fd2.  v0:= "yield" @kind object;
  #L1d7fd6.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d7fdc.  v0:= v4 + 1;
  #L1d7fe0.  v1:= 65533I;
  #L1d7fe6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d7fec.  v1:= temp @kind object;
  #L1d7fee.  v2:= 1I;
  #L1d7ff0.  if v5 > v0 then goto L1d7ffc;
  #L1d7ff4.  call temp:= `invoke`(v6, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d7ffa.  return v2;
  #L1d7ffc.  v4:= v3[v4] @kind byte;
  #L1d8000.  v3:= v3[v0] @kind byte;
  #L1d8004.  v5:= v3 ^& 192;
  #L1d8008.  v0:= 128I;
  #L1d800c.  if v5 != v0 then goto L1d8014;
  #L1d8010.  v5:= 1I;
  #L1d8012.  goto L1d8016;
  #L1d8014.  v5:= 0I;
  #L1d8016.  if v5 != 0 then goto L1d8022;
  #L1d801a.  call temp:= `invoke`(v6, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8020.  return v2;
  #L1d8022.  v3:= v3 ^~ 3968;
  #L1d8026.  v4:= v4 ^< 6;
  #L1d802a.  v3:= v3 ^~ v4 @kind int;
  #L1d802c.  if v3 >= v0 then goto L1d8038;
  #L1d8030.  call temp:= `invoke`(v6, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8036.  goto L1d8046;
  #L1d8038.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d803e.  v3:= temp @kind object;
  #L1d8040.  call temp:= `invoke`(v6, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8046.  v3:= 2I;
  #L1d8048.  return v3;
}
procedure `int` `process3Utf8Bytes`(`byte`[] v7 @kind object, `int` v8 , `int` v9 , `kotlin.jvm.functions.Function1` v10 @kind object) @signature `Lokio/Utf8;.process3Utf8Bytes:([BIILkotlin/jvm/functions/Function1;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1d805c.  v0:= "$this$process3Utf8Bytes" @kind object;
  #L1d8060.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d8066.  v0:= "yield" @kind object;
  #L1d806a.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d8070.  v0:= v8 + 2;
  #L1d8074.  v1:= 0I;
  #L1d8076.  v2:= 128I;
  #L1d807a.  v3:= 2I;
  #L1d807c.  v4:= 65533I;
  #L1d8082.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8088.  v4:= temp @kind object;
  #L1d808a.  v5:= 1I;
  #L1d808c.  if v9 > v0 then goto L1d80b4;
  #L1d8090.  call temp:= `invoke`(v10, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8096.  v8:= v8 + v5 @kind int;
  #L1d8098.  if v9 <= v8 then goto L1d80b2;
  #L1d809c.  v7:= v7[v8] @kind byte;
  #L1d80a0.  v7:= v7 ^& 192;
  #L1d80a4.  if v7 != v2 then goto L1d80aa;
  #L1d80a8.  v1:= 1I;
  #L1d80aa.  if v1 != 0 then goto L1d80b0;
  #L1d80ae.  goto L1d80b2;
  #L1d80b0.  return v3;
  #L1d80b2.  return v5;
  #L1d80b4.  v9:= v7[v8] @kind byte;
  #L1d80b8.  v8:= v8 + v5 @kind int;
  #L1d80ba.  v8:= v7[v8] @kind byte;
  #L1d80be.  v6:= v8 ^& 192;
  #L1d80c2.  if v6 != v2 then goto L1d80ca;
  #L1d80c6.  v6:= 1I;
  #L1d80c8.  goto L1d80cc;
  #L1d80ca.  v6:= 0I;
  #L1d80cc.  if v6 != 0 then goto L1d80d8;
  #L1d80d0.  call temp:= `invoke`(v10, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d80d6.  return v5;
  #L1d80d8.  v7:= v7[v0] @kind byte;
  #L1d80dc.  v0:= v7 ^& 192;
  #L1d80e0.  if v0 != v2 then goto L1d80e6;
  #L1d80e4.  v1:= 1I;
  #L1d80e6.  if v1 != 0 then goto L1d80f2;
  #L1d80ea.  call temp:= `invoke`(v10, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d80f0.  return v3;
  #L1d80f2.  v0:= -123008I;
  #L1d80f8.  v7:= v7 ^~ v0 @kind int;
  #L1d80fa.  v8:= v8 ^< 6;
  #L1d80fe.  v7:= v7 ^~ v8 @kind int;
  #L1d8100.  v8:= v9 ^< 12;
  #L1d8104.  v7:= v7 ^~ v8 @kind int;
  #L1d8106.  v8:= 2048I;
  #L1d810a.  if v7 >= v8 then goto L1d8116;
  #L1d810e.  call temp:= `invoke`(v10, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8114.  goto L1d8142;
  #L1d8116.  v8:= 57343I;
  #L1d811c.  v9:= 55296I;
  #L1d8122.  if v9 <= v7 then goto L1d8128;
  #L1d8126.  goto L1d8134;
  #L1d8128.  if v8 < v7 then goto L1d8134;
  #L1d812c.  call temp:= `invoke`(v10, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8132.  goto L1d8142;
  #L1d8134.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d813a.  v7:= temp @kind object;
  #L1d813c.  call temp:= `invoke`(v10, v7) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8142.  v7:= 3I;
  #L1d8144.  return v7;
}
procedure `int` `process4Utf8Bytes`(`byte`[] v9 @kind object, `int` v10 , `int` v11 , `kotlin.jvm.functions.Function1` v12 @kind object) @signature `Lokio/Utf8;.process4Utf8Bytes:([BIILkotlin/jvm/functions/Function1;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1d8158.  v0:= "$this$process4Utf8Bytes" @kind object;
  #L1d815c.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d8162.  v0:= "yield" @kind object;
  #L1d8166.  call `checkNotNullParameter`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d816c.  v0:= v10 + 3;
  #L1d8170.  v1:= 3I;
  #L1d8172.  v2:= 2I;
  #L1d8174.  v3:= 0I;
  #L1d8176.  v4:= 128I;
  #L1d817a.  v5:= 65533I;
  #L1d8180.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8186.  v5:= temp @kind object;
  #L1d8188.  v6:= 1I;
  #L1d818a.  if v11 > v0 then goto L1d81d4;
  #L1d818e.  call temp:= `invoke`(v12, v5) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8194.  v12:= v10 + 1;
  #L1d8198.  if v11 <= v12 then goto L1d81d2;
  #L1d819c.  v12:= v9[v12] @kind byte;
  #L1d81a0.  v12:= v12 ^& 192;
  #L1d81a4.  if v12 != v4 then goto L1d81ac;
  #L1d81a8.  v12:= 1I;
  #L1d81aa.  goto L1d81ae;
  #L1d81ac.  v12:= 0I;
  #L1d81ae.  if v12 != 0 then goto L1d81b4;
  #L1d81b2.  goto L1d81d2;
  #L1d81b4.  v10:= v10 + v2 @kind int;
  #L1d81b6.  if v11 <= v10 then goto L1d81d0;
  #L1d81ba.  v9:= v9[v10] @kind byte;
  #L1d81be.  v9:= v9 ^& 192;
  #L1d81c2.  if v9 != v4 then goto L1d81c8;
  #L1d81c6.  v3:= 1I;
  #L1d81c8.  if v3 != 0 then goto L1d81ce;
  #L1d81cc.  goto L1d81d0;
  #L1d81ce.  return v1;
  #L1d81d0.  return v2;
  #L1d81d2.  return v6;
  #L1d81d4.  v11:= v9[v10] @kind byte;
  #L1d81d8.  v7:= v10 + 1;
  #L1d81dc.  v7:= v9[v7] @kind byte;
  #L1d81e0.  v8:= v7 ^& 192;
  #L1d81e4.  if v8 != v4 then goto L1d81ec;
  #L1d81e8.  v8:= 1I;
  #L1d81ea.  goto L1d81ee;
  #L1d81ec.  v8:= 0I;
  #L1d81ee.  if v8 != 0 then goto L1d81fa;
  #L1d81f2.  call temp:= `invoke`(v12, v5) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d81f8.  return v6;
  #L1d81fa.  v10:= v10 + v2 @kind int;
  #L1d81fc.  v10:= v9[v10] @kind byte;
  #L1d8200.  v8:= v10 ^& 192;
  #L1d8204.  if v8 != v4 then goto L1d820c;
  #L1d8208.  v8:= 1I;
  #L1d820a.  goto L1d820e;
  #L1d820c.  v8:= 0I;
  #L1d820e.  if v8 != 0 then goto L1d821a;
  #L1d8212.  call temp:= `invoke`(v12, v5) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8218.  return v2;
  #L1d821a.  v9:= v9[v0] @kind byte;
  #L1d821e.  v0:= v9 ^& 192;
  #L1d8222.  if v0 != v4 then goto L1d8228;
  #L1d8226.  v3:= 1I;
  #L1d8228.  if v3 != 0 then goto L1d8234;
  #L1d822c.  call temp:= `invoke`(v12, v5) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8232.  return v1;
  #L1d8234.  v0:= 3678080I;
  #L1d823a.  v9:= v9 ^~ v0 @kind int;
  #L1d823c.  v10:= v10 ^< 6;
  #L1d8240.  v9:= v9 ^~ v10 @kind int;
  #L1d8242.  v10:= v7 ^< 12;
  #L1d8246.  v9:= v9 ^~ v10 @kind int;
  #L1d8248.  v10:= v11 ^< 18;
  #L1d824c.  v9:= v9 ^~ v10 @kind int;
  #L1d824e.  v10:= 1114111I;
  #L1d8254.  if v9 <= v10 then goto L1d8260;
  #L1d8258.  call temp:= `invoke`(v12, v5) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d825e.  goto L1d829c;
  #L1d8260.  v10:= 57343I;
  #L1d8266.  v11:= 55296I;
  #L1d826c.  if v11 <= v9 then goto L1d8272;
  #L1d8270.  goto L1d827e;
  #L1d8272.  if v10 < v9 then goto L1d827e;
  #L1d8276.  call temp:= `invoke`(v12, v5) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d827c.  goto L1d829c;
  #L1d827e.  v10:= 65536I;
  #L1d8282.  if v9 >= v10 then goto L1d828e;
  #L1d8286.  call temp:= `invoke`(v12, v5) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d828c.  goto L1d829c;
  #L1d828e.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8294.  v9:= temp @kind object;
  #L1d8296.  call temp:= `invoke`(v12, v9) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d829c.  v9:= 4I;
  #L1d829e.  return v9;
}
procedure `void` `processUtf16Chars`(`byte`[] v16 @kind object, `int` v17 , `int` v18 , `kotlin.jvm.functions.Function1` v19 @kind object) @signature `Lokio/Utf8;.processUtf16Chars:([BIILkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L1d84cc.  v0:= v16 @kind object;
  #L1d84d0.  v1:= v18;
  #L1d84d4.  v2:= v19 @kind object;
  #L1d84d8.  v3:= "$this$processUtf16Chars" @kind object;
  #L1d84dc.  call `checkNotNullParameter`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d84e2.  v3:= "yield" @kind object;
  #L1d84e6.  call `checkNotNullParameter`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d84ec.  v3:= v17;
  #L1d84f0.  if v3 >= v1 then goto L1d8838;
  #L1d84f4.  v4:= v0[v3] @kind byte;
  #L1d84f8.  if v4 < 0 then goto L1d8538;
  #L1d84fc.  v4:= (`char`) v4 @kind i2c;
  #L1d84fe.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L1d8504.  v4:= temp @kind object;
  #L1d8506.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d850c.  v3:= v3 + 1;
  #L1d8510.  if v3 >= v1 then goto L1d84f0;
  #L1d8514.  v4:= v0[v3] @kind byte;
  #L1d8518.  if v4 < 0 then goto L1d84f0;
  #L1d851c.  v4:= v3 + 1;
  #L1d8520.  v3:= v0[v3] @kind byte;
  #L1d8524.  v3:= (`char`) v3 @kind i2c;
  #L1d8526.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L1d852c.  v3:= temp @kind object;
  #L1d852e.  call temp:= `invoke`(v2, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8534.  v3:= v4;
  #L1d8536.  goto L1d8510;
  #L1d8538.  v5:= v4 ^> 5;
  #L1d853c.  v6:= -2I;
  #L1d853e.  v8:= 0I;
  #L1d8540.  v9:= 128I;
  #L1d8544.  v10:= 65533I;
  #L1d854a.  v11:= 1I;
  #L1d854c.  if v5 != v6 then goto L1d85b4;
  #L1d8550.  v4:= v3 + 1;
  #L1d8554.  if v1 > v4 then goto L1d8570;
  #L1d8558.  v4:= (`char`) v10 @kind i2c;
  #L1d855a.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L1d8560.  v4:= temp @kind object;
  #L1d8562.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8568.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d856c.  v7:= 1I;
  #L1d856e.  goto L1d85b0;
  #L1d8570.  v5:= v0[v3] @kind byte;
  #L1d8574.  v4:= v0[v4] @kind byte;
  #L1d8578.  v6:= v4 ^& 192;
  #L1d857c.  if v6 != v9 then goto L1d8582;
  #L1d8580.  v8:= 1I;
  #L1d8582.  if v8 != 0 then goto L1d8588;
  #L1d8586.  goto L1d8558;
  #L1d8588.  v4:= v4 ^~ 3968;
  #L1d858c.  v5:= v5 ^< 6;
  #L1d8590.  v4:= v4 ^~ v5 @kind int;
  #L1d8592.  if v4 >= v9 then goto L1d859a;
  #L1d8596.  v4:= (`char`) v10 @kind i2c;
  #L1d8598.  goto L1d859c;
  #L1d859a.  v4:= (`char`) v4 @kind i2c;
  #L1d859c.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L1d85a2.  v4:= temp @kind object;
  #L1d85a4.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d85aa.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d85ae.  v7:= 2I;
  #L1d85b0.  v3:= v3 + v7 @kind int;
  #L1d85b2.  goto L1d84f0;
  #L1d85b4.  v5:= v4 ^> 4;
  #L1d85b8.  v12:= 55296I;
  #L1d85be.  v13:= 57343I;
  #L1d85c4.  v14:= 3I;
  #L1d85c6.  if v5 != v6 then goto L1d86a4;
  #L1d85ca.  v4:= v3 + 2;
  #L1d85ce.  if v1 > v4 then goto L1d8602;
  #L1d85d2.  v4:= (`char`) v10 @kind i2c;
  #L1d85d4.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L1d85da.  v4:= temp @kind object;
  #L1d85dc.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d85e2.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d85e6.  v4:= v3 + 1;
  #L1d85ea.  if v1 <= v4 then goto L1d856c;
  #L1d85ee.  v4:= v0[v4] @kind byte;
  #L1d85f2.  v4:= v4 ^& 192;
  #L1d85f6.  if v4 != v9 then goto L1d85fc;
  #L1d85fa.  v8:= 1I;
  #L1d85fc.  if v8 != 0 then goto L1d85ae;
  #L1d8600.  goto L1d856c;
  #L1d8602.  v5:= v0[v3] @kind byte;
  #L1d8606.  v6:= v3 + 1;
  #L1d860a.  v6:= v0[v6] @kind byte;
  #L1d860e.  v15:= v6 ^& 192;
  #L1d8612.  if v15 != v9 then goto L1d861a;
  #L1d8616.  v15:= 1I;
  #L1d8618.  goto L1d861c;
  #L1d861a.  v15:= 0I;
  #L1d861c.  if v15 != 0 then goto L1d8636;
  #L1d8620.  v4:= (`char`) v10 @kind i2c;
  #L1d8622.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L1d8628.  v4:= temp @kind object;
  #L1d862a.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8630.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d8634.  goto L1d856c;
  #L1d8636.  v4:= v0[v4] @kind byte;
  #L1d863a.  v15:= v4 ^& 192;
  #L1d863e.  if v15 != v9 then goto L1d8644;
  #L1d8642.  v8:= 1I;
  #L1d8644.  if v8 != 0 then goto L1d865e;
  #L1d8648.  v4:= (`char`) v10 @kind i2c;
  #L1d864a.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L1d8650.  v4:= temp @kind object;
  #L1d8652.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8658.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d865c.  goto L1d85ae;
  #L1d865e.  v7:= -123008I;
  #L1d8664.  v4:= v4 ^~ v7 @kind int;
  #L1d8666.  v6:= v6 ^< 6;
  #L1d866a.  v4:= v4 ^~ v6 @kind int;
  #L1d866c.  v5:= v5 ^< 12;
  #L1d8670.  v4:= v4 ^~ v5 @kind int;
  #L1d8672.  v5:= 2048I;
  #L1d8676.  if v4 >= v5 then goto L1d8690;
  #L1d867a.  v4:= (`char`) v10 @kind i2c;
  #L1d867c.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L1d8682.  v4:= temp @kind object;
  #L1d8684.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d868a.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d868e.  goto L1d86a0;
  #L1d8690.  if v12 <= v4 then goto L1d8696;
  #L1d8694.  goto L1d869c;
  #L1d8696.  if v13 < v4 then goto L1d869c;
  #L1d869a.  goto L1d867a;
  #L1d869c.  v4:= (`char`) v4 @kind i2c;
  #L1d869e.  goto L1d867c;
  #L1d86a0.  v7:= 3I;
  #L1d86a2.  goto L1d85b0;
  #L1d86a4.  v4:= v4 ^> 3;
  #L1d86a8.  if v4 != v6 then goto L1d8822;
  #L1d86ac.  v4:= v3 + 3;
  #L1d86b0.  if v1 > v4 then goto L1d8706;
  #L1d86b4.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L1d86ba.  v4:= temp @kind object;
  #L1d86bc.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d86c2.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d86c6.  v4:= v3 + 1;
  #L1d86ca.  if v1 <= v4 then goto L1d856c;
  #L1d86ce.  v4:= v0[v4] @kind byte;
  #L1d86d2.  v4:= v4 ^& 192;
  #L1d86d6.  if v4 != v9 then goto L1d86de;
  #L1d86da.  v4:= 1I;
  #L1d86dc.  goto L1d86e0;
  #L1d86de.  v4:= 0I;
  #L1d86e0.  if v4 != 0 then goto L1d86e8;
  #L1d86e4.  goto L1d856c;
  #L1d86e8.  v4:= v3 + 2;
  #L1d86ec.  if v1 <= v4 then goto L1d85ae;
  #L1d86f0.  v4:= v0[v4] @kind byte;
  #L1d86f4.  v4:= v4 ^& 192;
  #L1d86f8.  if v4 != v9 then goto L1d86fe;
  #L1d86fc.  v8:= 1I;
  #L1d86fe.  if v8 != 0 then goto L1d86a0;
  #L1d8702.  goto L1d85ae;
  #L1d8706.  v5:= v0[v3] @kind byte;
  #L1d870a.  v6:= v3 + 1;
  #L1d870e.  v6:= v0[v6] @kind byte;
  #L1d8712.  v15:= v6 ^& 192;
  #L1d8716.  if v15 != v9 then goto L1d871e;
  #L1d871a.  v15:= 1I;
  #L1d871c.  goto L1d8720;
  #L1d871e.  v15:= 0I;
  #L1d8720.  if v15 != 0 then goto L1d873a;
  #L1d8724.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L1d872a.  v4:= temp @kind object;
  #L1d872c.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8732.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d8736.  goto L1d856c;
  #L1d873a.  v15:= v3 + 2;
  #L1d873e.  v15:= v0[v15] @kind byte;
  #L1d8742.  v7:= v15 ^& 192;
  #L1d8746.  if v7 != v9 then goto L1d874e;
  #L1d874a.  v7:= 1I;
  #L1d874c.  goto L1d8750;
  #L1d874e.  v7:= 0I;
  #L1d8750.  if v7 != 0 then goto L1d876a;
  #L1d8754.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L1d875a.  v4:= temp @kind object;
  #L1d875c.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8762.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d8766.  goto L1d85ae;
  #L1d876a.  v4:= v0[v4] @kind byte;
  #L1d876e.  v7:= v4 ^& 192;
  #L1d8772.  if v7 != v9 then goto L1d8778;
  #L1d8776.  v8:= 1I;
  #L1d8778.  if v8 != 0 then goto L1d8790;
  #L1d877c.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L1d8782.  v4:= temp @kind object;
  #L1d8784.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d878a.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d878e.  goto L1d86a0;
  #L1d8790.  v7:= 3678080I;
  #L1d8796.  v4:= v4 ^~ v7 @kind int;
  #L1d8798.  v7:= v15 ^< 6;
  #L1d879c.  v4:= v4 ^~ v7 @kind int;
  #L1d879e.  v6:= v6 ^< 12;
  #L1d87a2.  v4:= v4 ^~ v6 @kind int;
  #L1d87a4.  v5:= v5 ^< 18;
  #L1d87a8.  v4:= v4 ^~ v5 @kind int;
  #L1d87aa.  v5:= 1114111I;
  #L1d87b0.  if v4 <= v5 then goto L1d87c8;
  #L1d87b4.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L1d87ba.  v4:= temp @kind object;
  #L1d87bc.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d87c2.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d87c6.  goto L1d881c;
  #L1d87c8.  if v12 <= v4 then goto L1d87ce;
  #L1d87cc.  goto L1d87d4;
  #L1d87ce.  if v13 < v4 then goto L1d87d4;
  #L1d87d2.  goto L1d87b4;
  #L1d87d4.  v5:= 65536I;
  #L1d87d8.  if v4 >= v5 then goto L1d87de;
  #L1d87dc.  goto L1d87b4;
  #L1d87de.  if v4 == v10 then goto L1d87b4;
  #L1d87e2.  v5:= v4 ^>> 10;
  #L1d87e6.  v6:= 55232I;
  #L1d87ec.  v5:= v5 + v6 @kind int;
  #L1d87ee.  v5:= (`char`) v5 @kind i2c;
  #L1d87f0.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L1d87f6.  v5:= temp @kind object;
  #L1d87f8.  call temp:= `invoke`(v2, v5) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d87fe.  v4:= v4 ^& 1023;
  #L1d8802.  v5:= 56320I;
  #L1d8808.  v4:= v4 + v5 @kind int;
  #L1d880a.  v4:= (`char`) v4 @kind i2c;
  #L1d880c.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L1d8812.  v4:= temp @kind object;
  #L1d8814.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d881a.  goto L1d87c2;
  #L1d881c.  v7:= 4I;
  #L1d881e.  goto L1d85b0;
  #L1d8822.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L1d8828.  v4:= temp @kind object;
  #L1d882a.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8830.  v3:= v3 + 1;
  #L1d8834.  goto L1d84f0;
  #L1d8838.  return @kind void;
}
procedure `void` `processUtf8Bytes`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `kotlin.jvm.functions.Function1` v10 @kind object) @signature `Lokio/Utf8;.processUtf8Bytes:(Ljava/lang/String;IILkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1d884c.  v0:= "$this$processUtf8Bytes" @kind object;
  #L1d8850.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d8856.  v0:= "yield" @kind object;
  #L1d885a.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d8860.  if v8 >= v9 then goto L1d8a2c;
  #L1d8864.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1d886a.  v0:= temp;
  #L1d886c.  v1:= 128I;
  #L1d8870.  call temp:= `compare`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L1d8876.  v2:= temp;
  #L1d8878.  if v2 >= 0 then goto L1d88c8;
  #L1d887c.  v0:= (`byte`) v0 @kind i2b;
  #L1d887e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L1d8884.  v0:= temp @kind object;
  #L1d8886.  call temp:= `invoke`(v10, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d888c.  v8:= v8 + 1;
  #L1d8890.  if v8 >= v9 then goto L1d8860;
  #L1d8894.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1d889a.  v0:= temp;
  #L1d889c.  call temp:= `compare`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L1d88a2.  v0:= temp;
  #L1d88a4.  if v0 >= 0 then goto L1d8860;
  #L1d88a8.  v0:= v8 + 1;
  #L1d88ac.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1d88b2.  v8:= temp;
  #L1d88b4.  v8:= (`byte`) v8 @kind i2b;
  #L1d88b6.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L1d88bc.  v8:= temp @kind object;
  #L1d88be.  call temp:= `invoke`(v10, v8) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d88c4.  v8:= v0;
  #L1d88c6.  goto L1d8890;
  #L1d88c8.  v2:= 2048I;
  #L1d88cc.  call temp:= `compare`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L1d88d2.  v2:= temp;
  #L1d88d4.  if v2 >= 0 then goto L1d890c;
  #L1d88d8.  v2:= v0 ^> 6;
  #L1d88dc.  v2:= v2 ^| 192;
  #L1d88e0.  v2:= (`byte`) v2 @kind i2b;
  #L1d88e2.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L1d88e8.  v2:= temp @kind object;
  #L1d88ea.  call temp:= `invoke`(v10, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d88f0.  v0:= v0 ^& 63;
  #L1d88f4.  v0:= v0 ^| v1 @kind int;
  #L1d88f6.  v0:= (`byte`) v0 @kind i2b;
  #L1d88f8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L1d88fe.  v0:= temp @kind object;
  #L1d8900.  call temp:= `invoke`(v10, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8906.  v8:= v8 + 1;
  #L1d890a.  goto L1d8860;
  #L1d890c.  v2:= 55296I;
  #L1d8912.  v3:= 63I;
  #L1d8916.  if v2 > v0 then goto L1d89e2;
  #L1d891a.  v2:= 57343I;
  #L1d8920.  if v2 >= v0 then goto L1d8926;
  #L1d8924.  goto L1d89e2;
  #L1d8926.  v4:= 56319I;
  #L1d892c.  call temp:= `compare`(v0, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L1d8932.  v4:= temp;
  #L1d8934.  if v4 > 0 then goto L1d89d2;
  #L1d8938.  v4:= v8 + 1;
  #L1d893c.  if v9 <= v4 then goto L1d89d2;
  #L1d8940.  v5:= 56320I;
  #L1d8946.  call temp:= `charAt`(v7, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1d894c.  v6:= temp;
  #L1d894e.  if v5 > v6 then goto L1d89d2;
  #L1d8952.  if v2 >= v6 then goto L1d8958;
  #L1d8956.  goto L1d89d2;
  #L1d8958.  v0:= v0 ^< 10;
  #L1d895c.  call temp:= `charAt`(v7, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1d8962.  v2:= temp;
  #L1d8964.  v0:= v0 + v2 @kind int;
  #L1d8966.  v2:= -56613888I;
  #L1d896c.  v0:= v0 + v2 @kind int;
  #L1d896e.  v2:= v0 ^> 18;
  #L1d8972.  v2:= v2 ^| 240;
  #L1d8976.  v2:= (`byte`) v2 @kind i2b;
  #L1d8978.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L1d897e.  v2:= temp @kind object;
  #L1d8980.  call temp:= `invoke`(v10, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8986.  v2:= v0 ^> 12;
  #L1d898a.  v2:= v2 ^& v3 @kind int;
  #L1d898c.  v2:= v2 ^| v1 @kind int;
  #L1d898e.  v2:= (`byte`) v2 @kind i2b;
  #L1d8990.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L1d8996.  v2:= temp @kind object;
  #L1d8998.  call temp:= `invoke`(v10, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d899e.  v2:= v0 ^> 6;
  #L1d89a2.  v2:= v2 ^& v3 @kind int;
  #L1d89a4.  v2:= v2 ^| v1 @kind int;
  #L1d89a6.  v2:= (`byte`) v2 @kind i2b;
  #L1d89a8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L1d89ae.  v2:= temp @kind object;
  #L1d89b0.  call temp:= `invoke`(v10, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d89b6.  v0:= v0 ^& v3 @kind int;
  #L1d89b8.  v0:= v0 ^| v1 @kind int;
  #L1d89ba.  v0:= (`byte`) v0 @kind i2b;
  #L1d89bc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L1d89c2.  v0:= temp @kind object;
  #L1d89c4.  call temp:= `invoke`(v10, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d89ca.  v8:= v8 + 2;
  #L1d89ce.  goto L1d8860;
  #L1d89d2.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L1d89d8.  v0:= temp @kind object;
  #L1d89da.  call temp:= `invoke`(v10, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d89e0.  goto L1d8906;
  #L1d89e2.  v2:= v0 ^> 12;
  #L1d89e6.  v2:= v2 ^| 224;
  #L1d89ea.  v2:= (`byte`) v2 @kind i2b;
  #L1d89ec.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L1d89f2.  v2:= temp @kind object;
  #L1d89f4.  call temp:= `invoke`(v10, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d89fa.  v2:= v0 ^> 6;
  #L1d89fe.  v2:= v2 ^& v3 @kind int;
  #L1d8a00.  v2:= v2 ^| v1 @kind int;
  #L1d8a02.  v2:= (`byte`) v2 @kind i2b;
  #L1d8a04.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L1d8a0a.  v2:= temp @kind object;
  #L1d8a0c.  call temp:= `invoke`(v10, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8a12.  v0:= v0 ^& 63;
  #L1d8a16.  v0:= v0 ^| v1 @kind int;
  #L1d8a18.  v0:= (`byte`) v0 @kind i2b;
  #L1d8a1a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L1d8a20.  v0:= temp @kind object;
  #L1d8a22.  call temp:= `invoke`(v10, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8a28.  goto L1d8906;
  #L1d8a2c.  return @kind void;
}
procedure `void` `processUtf8CodePoints`(`byte`[] v16 @kind object, `int` v17 , `int` v18 , `kotlin.jvm.functions.Function1` v19 @kind object) @signature `Lokio/Utf8;.processUtf8CodePoints:([BIILkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L1d8a40.  v0:= v16 @kind object;
  #L1d8a44.  v1:= v18;
  #L1d8a48.  v2:= v19 @kind object;
  #L1d8a4c.  v3:= "$this$processUtf8CodePoints" @kind object;
  #L1d8a50.  call `checkNotNullParameter`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d8a56.  v3:= "yield" @kind object;
  #L1d8a5a.  call `checkNotNullParameter`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d8a60.  v3:= v17;
  #L1d8a64.  if v3 >= v1 then goto L1d8d74;
  #L1d8a68.  v4:= v0[v3] @kind byte;
  #L1d8a6c.  if v4 < 0 then goto L1d8aa8;
  #L1d8a70.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8a76.  v4:= temp @kind object;
  #L1d8a78.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8a7e.  v3:= v3 + 1;
  #L1d8a82.  if v3 >= v1 then goto L1d8a64;
  #L1d8a86.  v4:= v0[v3] @kind byte;
  #L1d8a8a.  if v4 < 0 then goto L1d8a64;
  #L1d8a8e.  v4:= v3 + 1;
  #L1d8a92.  v3:= v0[v3] @kind byte;
  #L1d8a96.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8a9c.  v3:= temp @kind object;
  #L1d8a9e.  call temp:= `invoke`(v2, v3) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8aa4.  v3:= v4;
  #L1d8aa6.  goto L1d8a82;
  #L1d8aa8.  v5:= v4 ^> 5;
  #L1d8aac.  v6:= -2I;
  #L1d8aae.  v8:= 0I;
  #L1d8ab0.  v9:= 128I;
  #L1d8ab4.  v10:= 65533I;
  #L1d8aba.  v11:= 1I;
  #L1d8abc.  if v5 != v6 then goto L1d8b26;
  #L1d8ac0.  v4:= v3 + 1;
  #L1d8ac4.  if v1 > v4 then goto L1d8ade;
  #L1d8ac8.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8ace.  v4:= temp @kind object;
  #L1d8ad0.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8ad6.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d8ada.  v7:= 1I;
  #L1d8adc.  goto L1d8b22;
  #L1d8ade.  v5:= v0[v3] @kind byte;
  #L1d8ae2.  v4:= v0[v4] @kind byte;
  #L1d8ae6.  v6:= v4 ^& 192;
  #L1d8aea.  if v6 != v9 then goto L1d8af0;
  #L1d8aee.  v8:= 1I;
  #L1d8af0.  if v8 != 0 then goto L1d8af6;
  #L1d8af4.  goto L1d8ac8;
  #L1d8af6.  v4:= v4 ^~ 3968;
  #L1d8afa.  v5:= v5 ^< 6;
  #L1d8afe.  v4:= v4 ^~ v5 @kind int;
  #L1d8b00.  if v4 >= v9 then goto L1d8b0e;
  #L1d8b04.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8b0a.  v4:= temp @kind object;
  #L1d8b0c.  goto L1d8b16;
  #L1d8b0e.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8b14.  v4:= temp @kind object;
  #L1d8b16.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8b1c.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d8b20.  v7:= 2I;
  #L1d8b22.  v3:= v3 + v7 @kind int;
  #L1d8b24.  goto L1d8a64;
  #L1d8b26.  v5:= v4 ^> 4;
  #L1d8b2a.  v12:= 55296I;
  #L1d8b30.  v13:= 57343I;
  #L1d8b36.  v14:= 3I;
  #L1d8b38.  if v5 != v6 then goto L1d8c14;
  #L1d8b3c.  v4:= v3 + 2;
  #L1d8b40.  if v1 > v4 then goto L1d8b72;
  #L1d8b44.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8b4a.  v4:= temp @kind object;
  #L1d8b4c.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8b52.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d8b56.  v4:= v3 + 1;
  #L1d8b5a.  if v1 <= v4 then goto L1d8ada;
  #L1d8b5e.  v4:= v0[v4] @kind byte;
  #L1d8b62.  v4:= v4 ^& 192;
  #L1d8b66.  if v4 != v9 then goto L1d8b6c;
  #L1d8b6a.  v8:= 1I;
  #L1d8b6c.  if v8 != 0 then goto L1d8b20;
  #L1d8b70.  goto L1d8ada;
  #L1d8b72.  v5:= v0[v3] @kind byte;
  #L1d8b76.  v6:= v3 + 1;
  #L1d8b7a.  v6:= v0[v6] @kind byte;
  #L1d8b7e.  v15:= v6 ^& 192;
  #L1d8b82.  if v15 != v9 then goto L1d8b8a;
  #L1d8b86.  v15:= 1I;
  #L1d8b88.  goto L1d8b8c;
  #L1d8b8a.  v15:= 0I;
  #L1d8b8c.  if v15 != 0 then goto L1d8ba4;
  #L1d8b90.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8b96.  v4:= temp @kind object;
  #L1d8b98.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8b9e.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d8ba2.  goto L1d8ada;
  #L1d8ba4.  v4:= v0[v4] @kind byte;
  #L1d8ba8.  v15:= v4 ^& 192;
  #L1d8bac.  if v15 != v9 then goto L1d8bb2;
  #L1d8bb0.  v8:= 1I;
  #L1d8bb2.  if v8 != 0 then goto L1d8bca;
  #L1d8bb6.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8bbc.  v4:= temp @kind object;
  #L1d8bbe.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8bc4.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d8bc8.  goto L1d8b20;
  #L1d8bca.  v7:= -123008I;
  #L1d8bd0.  v4:= v4 ^~ v7 @kind int;
  #L1d8bd2.  v6:= v6 ^< 6;
  #L1d8bd6.  v4:= v4 ^~ v6 @kind int;
  #L1d8bd8.  v5:= v5 ^< 12;
  #L1d8bdc.  v4:= v4 ^~ v5 @kind int;
  #L1d8bde.  v5:= 2048I;
  #L1d8be2.  if v4 >= v5 then goto L1d8bfa;
  #L1d8be6.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8bec.  v4:= temp @kind object;
  #L1d8bee.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8bf4.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d8bf8.  goto L1d8c10;
  #L1d8bfa.  if v12 <= v4 then goto L1d8c00;
  #L1d8bfe.  goto L1d8c06;
  #L1d8c00.  if v13 < v4 then goto L1d8c06;
  #L1d8c04.  goto L1d8be6;
  #L1d8c06.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8c0c.  v4:= temp @kind object;
  #L1d8c0e.  goto L1d8bee;
  #L1d8c10.  v7:= 3I;
  #L1d8c12.  goto L1d8b22;
  #L1d8c14.  v4:= v4 ^> 3;
  #L1d8c18.  if v4 != v6 then goto L1d8d5e;
  #L1d8c1c.  v4:= v3 + 3;
  #L1d8c20.  if v1 > v4 then goto L1d8c76;
  #L1d8c24.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8c2a.  v4:= temp @kind object;
  #L1d8c2c.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8c32.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d8c36.  v4:= v3 + 1;
  #L1d8c3a.  if v1 <= v4 then goto L1d8ada;
  #L1d8c3e.  v4:= v0[v4] @kind byte;
  #L1d8c42.  v4:= v4 ^& 192;
  #L1d8c46.  if v4 != v9 then goto L1d8c4e;
  #L1d8c4a.  v4:= 1I;
  #L1d8c4c.  goto L1d8c50;
  #L1d8c4e.  v4:= 0I;
  #L1d8c50.  if v4 != 0 then goto L1d8c58;
  #L1d8c54.  goto L1d8ada;
  #L1d8c58.  v4:= v3 + 2;
  #L1d8c5c.  if v1 <= v4 then goto L1d8b20;
  #L1d8c60.  v4:= v0[v4] @kind byte;
  #L1d8c64.  v4:= v4 ^& 192;
  #L1d8c68.  if v4 != v9 then goto L1d8c6e;
  #L1d8c6c.  v8:= 1I;
  #L1d8c6e.  if v8 != 0 then goto L1d8c10;
  #L1d8c72.  goto L1d8b20;
  #L1d8c76.  v5:= v0[v3] @kind byte;
  #L1d8c7a.  v6:= v3 + 1;
  #L1d8c7e.  v6:= v0[v6] @kind byte;
  #L1d8c82.  v15:= v6 ^& 192;
  #L1d8c86.  if v15 != v9 then goto L1d8c8e;
  #L1d8c8a.  v15:= 1I;
  #L1d8c8c.  goto L1d8c90;
  #L1d8c8e.  v15:= 0I;
  #L1d8c90.  if v15 != 0 then goto L1d8caa;
  #L1d8c94.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8c9a.  v4:= temp @kind object;
  #L1d8c9c.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8ca2.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d8ca6.  goto L1d8ada;
  #L1d8caa.  v15:= v3 + 2;
  #L1d8cae.  v15:= v0[v15] @kind byte;
  #L1d8cb2.  v7:= v15 ^& 192;
  #L1d8cb6.  if v7 != v9 then goto L1d8cbe;
  #L1d8cba.  v7:= 1I;
  #L1d8cbc.  goto L1d8cc0;
  #L1d8cbe.  v7:= 0I;
  #L1d8cc0.  if v7 != 0 then goto L1d8cda;
  #L1d8cc4.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8cca.  v4:= temp @kind object;
  #L1d8ccc.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8cd2.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d8cd6.  goto L1d8b20;
  #L1d8cda.  v4:= v0[v4] @kind byte;
  #L1d8cde.  v7:= v4 ^& 192;
  #L1d8ce2.  if v7 != v9 then goto L1d8ce8;
  #L1d8ce6.  v8:= 1I;
  #L1d8ce8.  if v8 != 0 then goto L1d8d00;
  #L1d8cec.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8cf2.  v4:= temp @kind object;
  #L1d8cf4.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8cfa.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d8cfe.  goto L1d8c10;
  #L1d8d00.  v7:= 3678080I;
  #L1d8d06.  v4:= v4 ^~ v7 @kind int;
  #L1d8d08.  v7:= v15 ^< 6;
  #L1d8d0c.  v4:= v4 ^~ v7 @kind int;
  #L1d8d0e.  v6:= v6 ^< 12;
  #L1d8d12.  v4:= v4 ^~ v6 @kind int;
  #L1d8d14.  v5:= v5 ^< 18;
  #L1d8d18.  v4:= v4 ^~ v5 @kind int;
  #L1d8d1a.  v5:= 1114111I;
  #L1d8d20.  if v4 <= v5 then goto L1d8d38;
  #L1d8d24.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8d2a.  v4:= temp @kind object;
  #L1d8d2c.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8d32.  v4:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1d8d36.  goto L1d8d58;
  #L1d8d38.  if v12 <= v4 then goto L1d8d3e;
  #L1d8d3c.  goto L1d8d44;
  #L1d8d3e.  if v13 < v4 then goto L1d8d44;
  #L1d8d42.  goto L1d8d24;
  #L1d8d44.  v5:= 65536I;
  #L1d8d48.  if v4 >= v5 then goto L1d8d4e;
  #L1d8d4c.  goto L1d8d24;
  #L1d8d4e.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8d54.  v4:= temp @kind object;
  #L1d8d56.  goto L1d8d2c;
  #L1d8d58.  v7:= 4I;
  #L1d8d5a.  goto L1d8b22;
  #L1d8d5e.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1d8d64.  v4:= temp @kind object;
  #L1d8d66.  call temp:= `invoke`(v2, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8d6c.  v3:= v3 + 1;
  #L1d8d70.  goto L1d8a64;
  #L1d8d74.  return @kind void;
}
procedure `long` `size`(`java.lang.String` v3 @kind object) @signature `Lokio/Utf8;.size:(Ljava/lang/String;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1d82e4.  v0:= 0I;
  #L1d82e6.  v1:= 3I;
  #L1d82e8.  v2:= 0I;
  #L1d82ea.  call temp:= `size$default`(v3, v0, v0, v1, v2) @signature `Lokio/Utf8;.size$default:(Ljava/lang/String;IIILjava/lang/Object;)J` @kind static;
  #L1d82f0.  v0:= temp @kind wide;
  #L1d82f2.  return v0 @kind wide;
}
procedure `long` `size`(`java.lang.String` v3 @kind object, `int` v4 ) @signature `Lokio/Utf8;.size:(Ljava/lang/String;I)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1d8304.  v0:= 0I;
  #L1d8306.  v1:= 2I;
  #L1d8308.  v2:= 0I;
  #L1d830a.  call temp:= `size$default`(v3, v4, v0, v1, v2) @signature `Lokio/Utf8;.size$default:(Ljava/lang/String;IIILjava/lang/Object;)J` @kind static;
  #L1d8310.  v3:= temp @kind wide;
  #L1d8312.  return v3 @kind wide;
}
procedure `long` `size`(`java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokio/Utf8;.size:(Ljava/lang/String;II)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1d8324.  v0:= "$this$utf8Size" @kind object;
  #L1d8328.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d832e.  v0:= 0I;
  #L1d8330.  v1:= 1I;
  #L1d8332.  if v11 < 0 then goto L1d833a;
  #L1d8336.  v2:= 1I;
  #L1d8338.  goto L1d833c;
  #L1d833a.  v2:= 0I;
  #L1d833c.  if v2 == 0 then goto L1d8486;
  #L1d8340.  if v12 < v11 then goto L1d8348;
  #L1d8344.  v2:= 1I;
  #L1d8346.  goto L1d834a;
  #L1d8348.  v2:= 0I;
  #L1d834a.  if v2 == 0 then goto L1d8440;
  #L1d834e.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1d8354.  v2:= temp;
  #L1d8356.  if v12 > v2 then goto L1d835c;
  #L1d835a.  goto L1d835e;
  #L1d835c.  v1:= 0I;
  #L1d835e.  if v1 == 0 then goto L1d83f2;
  #L1d8362.  v1:= 0L;
  #L1d8366.  if v11 >= v12 then goto L1d83f0;
  #L1d836a.  call temp:= `charAt`(v10, v11) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1d8370.  v3:= temp;
  #L1d8372.  v4:= 128I;
  #L1d8376.  v5:= 1L;
  #L1d837a.  if v3 >= v4 then goto L1d8386;
  #L1d837e.  v1:= v1 + v5 @kind long;
  #L1d8380.  v11:= v11 + 1;
  #L1d8384.  goto L1d8366;
  #L1d8386.  v4:= 2048I;
  #L1d838a.  if v3 >= v4 then goto L1d8396;
  #L1d838e.  v3:= 2I;
  #L1d8390.  v3:= (`long`) v3 @kind i2l;
  #L1d8392.  v1:= v1 + v3 @kind long;
  #L1d8394.  goto L1d8380;
  #L1d8396.  v4:= 55296I;
  #L1d839c.  if v3 < v4 then goto L1d83ec;
  #L1d83a0.  v4:= 57343I;
  #L1d83a6.  if v3 <= v4 then goto L1d83ac;
  #L1d83aa.  goto L1d83ec;
  #L1d83ac.  v7:= v11 + 1;
  #L1d83b0.  if v7 >= v12 then goto L1d83be;
  #L1d83b4.  call temp:= `charAt`(v10, v7) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1d83ba.  v8:= temp;
  #L1d83bc.  goto L1d83c0;
  #L1d83be.  v8:= 0I;
  #L1d83c0.  v9:= 56319I;
  #L1d83c6.  if v3 > v9 then goto L1d83e6;
  #L1d83ca.  v3:= 56320I;
  #L1d83d0.  if v8 < v3 then goto L1d83e6;
  #L1d83d4.  if v8 <= v4 then goto L1d83da;
  #L1d83d8.  goto L1d83e6;
  #L1d83da.  v3:= 4I;
  #L1d83dc.  v3:= (`long`) v3 @kind i2l;
  #L1d83de.  v1:= v1 + v3 @kind long;
  #L1d83e0.  v11:= v11 + 2;
  #L1d83e4.  goto L1d8366;
  #L1d83e6.  v1:= v1 + v5 @kind long;
  #L1d83e8.  v11:= v7;
  #L1d83ea.  goto L1d8366;
  #L1d83ec.  v3:= 3I;
  #L1d83ee.  goto L1d8390;
  #L1d83f0.  return v1 @kind wide;
  #L1d83f2.  v11:= new `java.lang.StringBuilder`;
  #L1d83f6.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d83fc.  v0:= "endIndex > string.length: " @kind object;
  #L1d8400.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d8406.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d840c.  v12:= " > " @kind object;
  #L1d8410.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d8416.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1d841c.  v10:= temp;
  #L1d841e.  call temp:= `append`(v11, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d8424.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d842a.  v10:= temp @kind object;
  #L1d842c.  v11:= new `java.lang.IllegalArgumentException`;
  #L1d8430.  call temp:= `toString`(v10) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d8436.  v10:= temp @kind object;
  #L1d8438.  call `<init>`(v11, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d843e.  throw v11;
  #L1d8440.  v10:= new `java.lang.StringBuilder`;
  #L1d8444.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d844a.  v0:= "endIndex < beginIndex: " @kind object;
  #L1d844e.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d8454.  call temp:= `append`(v10, v12) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d845a.  v12:= " < " @kind object;
  #L1d845e.  call temp:= `append`(v10, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d8464.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d846a.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d8470.  v10:= temp @kind object;
  #L1d8472.  v11:= new `java.lang.IllegalArgumentException`;
  #L1d8476.  call temp:= `toString`(v10) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d847c.  v10:= temp @kind object;
  #L1d847e.  call `<init>`(v11, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d8484.  throw v11;
  #L1d8486.  v10:= new `java.lang.StringBuilder`;
  #L1d848a.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d8490.  v12:= "beginIndex < 0: " @kind object;
  #L1d8494.  call temp:= `append`(v10, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d849a.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d84a0.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d84a6.  v10:= temp @kind object;
  #L1d84a8.  v11:= new `java.lang.IllegalArgumentException`;
  #L1d84ac.  call temp:= `toString`(v10) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d84b2.  v10:= temp @kind object;
  #L1d84b4.  call `<init>`(v11, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d84ba.  throw v11;
}
procedure `long` `size$default`(`java.lang.String` v0 @kind object, `int` v1 , `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokio/Utf8;.size$default:(Ljava/lang/String;IIILjava/lang/Object;)J` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d82b0.  v4:= v3 ^& 1;
  #L1d82b4.  if v4 == 0 then goto L1d82ba;
  #L1d82b8.  v1:= 0I;
  #L1d82ba.  v3:= v3 ^& 2;
  #L1d82be.  if v3 == 0 then goto L1d82ca;
  #L1d82c2.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1d82c8.  v2:= temp;
  #L1d82ca.  call temp:= `size`(v0, v1, v2) @signature `Lokio/Utf8;.size:(Ljava/lang/String;II)J` @kind static;
  #L1d82d0.  v0:= temp @kind wide;
  #L1d82d2.  return v0 @kind wide;
}
