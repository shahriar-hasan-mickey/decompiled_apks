record `okio.RealBufferedSource` @kind class @AccessFlag PUBLIC_FINAL extends `okio.BufferedSource` @kind interface {
  `okio.Buffer` `okio.RealBufferedSource.bufferField` @AccessFlag PUBLIC_FINAL;
  `boolean` `okio.RealBufferedSource.closed` @AccessFlag PUBLIC;
  `okio.Source` `okio.RealBufferedSource.source` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`okio.RealBufferedSource` v1 @kind this, `okio.Source` v2 @kind object) @signature `Lokio/RealBufferedSource;.<init>:(Lokio/Source;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d6138.  v0:= "source" @kind object;
  #L1d613c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6142.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d6148.  v1.`okio.RealBufferedSource.source` @type ^`okio.Source` := v2 @kind object;
  #L1d614c.  v2:= new `okio.Buffer`;
  #L1d6150.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1d6156.  v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` := v2 @kind object;
  #L1d615a.  return @kind void;
}
procedure `void` `getBuffer$annotations`() @signature `Lokio/RealBufferedSource;.getBuffer$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d61a4.  return @kind void;
}
procedure `okio.Buffer` `buffer`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.buffer:()Lokio/Buffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d6024.  v0:= v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d6028.  return v0 @kind object;
}
procedure `void` `close`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d616c.  v0:= v1.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1d6170.  if v0 == 0 then goto L1d6176;
  #L1d6174.  goto L1d6190;
  #L1d6176.  v0:= 1I;
  #L1d6178.  v1.`okio.RealBufferedSource.closed` @type ^`boolean` := v0 @kind boolean;
  #L1d617c.  v0:= v1.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1d6180.  call `close`(v0) @signature `Lokio/Source;.close:()V` @kind interface;
  #L1d6186.  v0:= v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d618a.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L1d6190.  return @kind void;
}
procedure `boolean` `exhausted`(`okio.RealBufferedSource` v6 @kind this) @signature `Lokio/RealBufferedSource;.exhausted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1d5140.  v0:= v6.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1d5144.  v1:= 1I;
  #L1d5146.  v0:= v0 ^~ v1 @kind int;
  #L1d5148.  if v0 == 0 then goto L1d5184;
  #L1d514c.  v0:= v6.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5150.  call temp:= `exhausted`(v0) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L1d5156.  v0:= temp;
  #L1d5158.  if v0 == 0 then goto L1d5180;
  #L1d515c.  v0:= v6.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1d5160.  v2:= v6.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5164.  v3:= 8192I;
  #L1d5168.  v3:= (`long`) v3 @kind i2l;
  #L1d516a.  call temp:= `read`(v0, v2, v3) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1d5170.  v2:= temp @kind wide;
  #L1d5172.  v4:= -1L;
  #L1d5176.  v0:= lcmp(v2, v4);
  #L1d517a.  if v0 != 0 then goto L1d5180;
  #L1d517e.  goto L1d5182;
  #L1d5180.  v1:= 0I;
  #L1d5182.  return v1;
  #L1d5184.  v0:= new `java.lang.IllegalStateException`;
  #L1d5188.  v1:= "closed" @kind object;
  #L1d518c.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d5192.  v1:= temp @kind object;
  #L1d5194.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d519a.  throw v0;
}
procedure `okio.Buffer` `getBuffer`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.getBuffer:()Lokio/Buffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d603c.  v0:= v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d6040.  return v0 @kind object;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v6 @kind this, `byte` v7 ) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1d59bc.  v2:= 0L;
  #L1d59c0.  v4:= 9223372036854775807L;
  #L1d59ca.  v0:= v6 @kind object;
  #L1d59cc.  v1:= v7;
  #L1d59ce.  call temp:= `indexOf`(v0, v1, v2, v4) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @kind virtual;
  #L1d59d4.  v0:= temp @kind wide;
  #L1d59d6.  return v0 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v6 @kind this, `byte` v7 , `long` v8 ) @signature `Lokio/RealBufferedSource;.indexOf:(BJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1d59e8.  v4:= 9223372036854775807L;
  #L1d59f2.  v0:= v6 @kind object;
  #L1d59f4.  v1:= v7;
  #L1d59f6.  v2:= v8 @kind wide;
  #L1d59f8.  call temp:= `indexOf`(v0, v1, v2, v4) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @kind virtual;
  #L1d59fe.  v7:= temp @kind wide;
  #L1d5a00.  return v7 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v8 @kind this, `byte` v9 , `long` v10 , `long` v12 ) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1d5a14.  v0:= v8.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1d5a18.  v1:= 1I;
  #L1d5a1a.  v0:= v0 ^~ v1 @kind int;
  #L1d5a1c.  if v0 == 0 then goto L1d5aee;
  #L1d5a20.  v2:= 0L;
  #L1d5a24.  v0:= lcmp(v2, v10);
  #L1d5a28.  if v0 <= 0 then goto L1d5a2e;
  #L1d5a2c.  goto L1d5a38;
  #L1d5a2e.  v0:= lcmp(v12, v10);
  #L1d5a32.  if v0 < 0 then goto L1d5a38;
  #L1d5a36.  goto L1d5a3a;
  #L1d5a38.  v1:= 0I;
  #L1d5a3a.  if v1 == 0 then goto L1d5aa8;
  #L1d5a3e.  v0:= -1L;
  #L1d5a42.  v2:= lcmp(v10, v12);
  #L1d5a46.  if v2 >= 0 then goto L1d5aa6;
  #L1d5a4a.  v2:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5a4e.  v3:= v9;
  #L1d5a50.  v4:= v10 @kind wide;
  #L1d5a52.  v6:= v12 @kind wide;
  #L1d5a54.  call temp:= `indexOf`(v2, v3, v4, v6) @signature `Lokio/Buffer;.indexOf:(BJJ)J` @kind virtual;
  #L1d5a5a.  v2:= temp @kind wide;
  #L1d5a5c.  v4:= lcmp(v2, v0);
  #L1d5a60.  if v4 == 0 then goto L1d5a68;
  #L1d5a64.  v0:= v2 @kind wide;
  #L1d5a66.  goto L1d5aa6;
  #L1d5a68.  v2:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5a6c.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d5a72.  v2:= temp @kind wide;
  #L1d5a74.  v4:= lcmp(v2, v12);
  #L1d5a78.  if v4 >= 0 then goto L1d5aa6;
  #L1d5a7c.  v4:= v8.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1d5a80.  v5:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5a84.  v6:= 8192I;
  #L1d5a88.  v6:= (`long`) v6 @kind i2l;
  #L1d5a8a.  call temp:= `read`(v4, v5, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1d5a90.  v4:= temp @kind wide;
  #L1d5a92.  v6:= lcmp(v4, v0);
  #L1d5a96.  if v6 != 0 then goto L1d5a9c;
  #L1d5a9a.  goto L1d5aa6;
  #L1d5a9c.  call temp:= `max`(v10, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L1d5aa2.  v10:= temp @kind wide;
  #L1d5aa4.  goto L1d5a3e;
  #L1d5aa6.  return v0 @kind wide;
  #L1d5aa8.  v9:= new `java.lang.StringBuilder`;
  #L1d5aac.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d5ab2.  v0:= "fromIndex=" @kind object;
  #L1d5ab6.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d5abc.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d5ac2.  v10:= " toIndex=" @kind object;
  #L1d5ac6.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d5acc.  call temp:= `append`(v9, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d5ad2.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d5ad8.  v9:= temp @kind object;
  #L1d5ada.  v10:= new `java.lang.IllegalArgumentException`;
  #L1d5ade.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d5ae4.  v9:= temp @kind object;
  #L1d5ae6.  call `<init>`(v10, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d5aec.  throw v10;
  #L1d5aee.  v9:= new `java.lang.IllegalStateException`;
  #L1d5af2.  v10:= "closed" @kind object;
  #L1d5af6.  call temp:= `toString`(v10) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d5afc.  v10:= temp @kind object;
  #L1d5afe.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d5b04.  throw v9;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v2 @kind this, `okio.ByteString` v3 @kind object) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d5b18.  v0:= "bytes" @kind object;
  #L1d5b1c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5b22.  v0:= 0L;
  #L1d5b26.  call temp:= `indexOf`(v2, v3, v0) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;J)J` @kind virtual;
  #L1d5b2c.  v0:= temp @kind wide;
  #L1d5b2e.  return v0 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v8 @kind this, `okio.ByteString` v9 @kind object, `long` v10 ) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1d5b40.  v0:= "bytes" @kind object;
  #L1d5b44.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5b4a.  v0:= v8.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1d5b4e.  v0:= v0 ^~ 1;
  #L1d5b52.  if v0 == 0 then goto L1d5bba;
  #L1d5b56.  v0:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5b5a.  call temp:= `indexOf`(v0, v9, v10) @signature `Lokio/Buffer;.indexOf:(Lokio/ByteString;J)J` @kind virtual;
  #L1d5b60.  v0:= temp @kind wide;
  #L1d5b62.  v2:= -1L;
  #L1d5b66.  v4:= lcmp(v0, v2);
  #L1d5b6a.  if v4 == 0 then goto L1d5b70;
  #L1d5b6e.  goto L1d5b9c;
  #L1d5b70.  v0:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5b74.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d5b7a.  v0:= temp @kind wide;
  #L1d5b7c.  v4:= v8.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1d5b80.  v5:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5b84.  v6:= 8192I;
  #L1d5b88.  v6:= (`long`) v6 @kind i2l;
  #L1d5b8a.  call temp:= `read`(v4, v5, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1d5b90.  v4:= temp @kind wide;
  #L1d5b92.  v6:= lcmp(v4, v2);
  #L1d5b96.  if v6 != 0 then goto L1d5b9e;
  #L1d5b9a.  v0:= v2 @kind wide;
  #L1d5b9c.  return v0 @kind wide;
  #L1d5b9e.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1d5ba4.  v2:= temp;
  #L1d5ba6.  v2:= (`long`) v2 @kind i2l;
  #L1d5ba8.  v0:= v0 - v2 @kind long;
  #L1d5baa.  v2:= 1L;
  #L1d5bae.  v0:= v0 + v2 @kind long;
  #L1d5bb0.  call temp:= `max`(v10, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L1d5bb6.  v10:= temp @kind wide;
  #L1d5bb8.  goto L1d5b56;
  #L1d5bba.  v9:= new `java.lang.IllegalStateException`;
  #L1d5bbe.  v10:= "closed" @kind object;
  #L1d5bc2.  call temp:= `toString`(v10) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d5bc8.  v10:= temp @kind object;
  #L1d5bca.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d5bd0.  throw v9;
}
procedure `long` `indexOfElement`(`okio.RealBufferedSource` v2 @kind this, `okio.ByteString` v3 @kind object) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d5be4.  v0:= "targetBytes" @kind object;
  #L1d5be8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5bee.  v0:= 0L;
  #L1d5bf2.  call temp:= `indexOfElement`(v2, v3, v0) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;J)J` @kind virtual;
  #L1d5bf8.  v0:= temp @kind wide;
  #L1d5bfa.  return v0 @kind wide;
}
procedure `long` `indexOfElement`(`okio.RealBufferedSource` v8 @kind this, `okio.ByteString` v9 @kind object, `long` v10 ) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1d5c0c.  v0:= "targetBytes" @kind object;
  #L1d5c10.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5c16.  v0:= v8.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1d5c1a.  v0:= v0 ^~ 1;
  #L1d5c1e.  if v0 == 0 then goto L1d5c74;
  #L1d5c22.  v0:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5c26.  call temp:= `indexOfElement`(v0, v9, v10) @signature `Lokio/Buffer;.indexOfElement:(Lokio/ByteString;J)J` @kind virtual;
  #L1d5c2c.  v0:= temp @kind wide;
  #L1d5c2e.  v2:= -1L;
  #L1d5c32.  v4:= lcmp(v0, v2);
  #L1d5c36.  if v4 == 0 then goto L1d5c3c;
  #L1d5c3a.  goto L1d5c68;
  #L1d5c3c.  v0:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5c40.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d5c46.  v0:= temp @kind wide;
  #L1d5c48.  v4:= v8.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1d5c4c.  v5:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5c50.  v6:= 8192I;
  #L1d5c54.  v6:= (`long`) v6 @kind i2l;
  #L1d5c56.  call temp:= `read`(v4, v5, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1d5c5c.  v4:= temp @kind wide;
  #L1d5c5e.  v6:= lcmp(v4, v2);
  #L1d5c62.  if v6 != 0 then goto L1d5c6a;
  #L1d5c66.  v0:= v2 @kind wide;
  #L1d5c68.  return v0 @kind wide;
  #L1d5c6a.  call temp:= `max`(v10, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L1d5c70.  v10:= temp @kind wide;
  #L1d5c72.  goto L1d5c22;
  #L1d5c74.  v9:= new `java.lang.IllegalStateException`;
  #L1d5c78.  v10:= "closed" @kind object;
  #L1d5c7c.  call temp:= `toString`(v10) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d5c82.  v10:= temp @kind object;
  #L1d5c84.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d5c8a.  throw v9;
}
procedure `java.io.InputStream` `inputStream`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.inputStream:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d5670.  v0:= new `okio.RealBufferedSource$inputStream$1`;
  #L1d5674.  call `<init>`(v0, v1) @signature `Lokio/RealBufferedSource$inputStream$1;.<init>:(Lokio/RealBufferedSource;)V` @kind direct;
  #L1d567a.  return v0 @kind object;
}
procedure `boolean` `isOpen`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d51ac.  v0:= v1.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1d51b0.  v0:= v0 ^~ 1;
  #L1d51b4.  return v0;
}
procedure `okio.BufferedSource` `peek`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.peek:()Lokio/BufferedSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d6054.  v0:= new `okio.PeekSource`;
  #L1d6058.  call `<init>`(v0, v1) @signature `Lokio/PeekSource;.<init>:(Lokio/BufferedSource;)V` @kind direct;
  #L1d605e.  call temp:= `buffer`(v0) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L1d6064.  v0:= temp @kind object;
  #L1d6066.  return v0 @kind object;
}
procedure `boolean` `rangeEquals`(`okio.RealBufferedSource` v7 @kind this, `long` v8 , `okio.ByteString` v10 @kind object) @signature `Lokio/RealBufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1d51c8.  v0:= "bytes" @kind object;
  #L1d51cc.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d51d2.  call temp:= `size`(v10) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1d51d8.  v6:= temp;
  #L1d51da.  v5:= 0I;
  #L1d51dc.  v1:= v7 @kind object;
  #L1d51de.  v2:= v8 @kind wide;
  #L1d51e0.  v4:= v10 @kind object;
  #L1d51e2.  call temp:= `rangeEquals`(v1, v2, v4, v5, v6) @signature `Lokio/RealBufferedSource;.rangeEquals:(JLokio/ByteString;II)Z` @kind virtual;
  #L1d51e8.  v8:= temp;
  #L1d51ea.  return v8;
}
procedure `boolean` `rangeEquals`(`okio.RealBufferedSource` v7 @kind this, `long` v8 , `okio.ByteString` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokio/RealBufferedSource;.rangeEquals:(JLokio/ByteString;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1d51fc.  v0:= "bytes" @kind object;
  #L1d5200.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5206.  v0:= v7.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1d520a.  v1:= 1I;
  #L1d520c.  v0:= v0 ^~ v1 @kind int;
  #L1d520e.  if v0 == 0 then goto L1d527e;
  #L1d5212.  v2:= 0L;
  #L1d5216.  v0:= 0I;
  #L1d5218.  v4:= lcmp(v8, v2);
  #L1d521c.  if v4 < 0 then goto L1d527a;
  #L1d5220.  if v11 < 0 then goto L1d527a;
  #L1d5224.  if v12 < 0 then goto L1d527a;
  #L1d5228.  call temp:= `size`(v10) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1d522e.  v2:= temp;
  #L1d5230.  v2:= v2 - v11 @kind int;
  #L1d5232.  if v2 >= v12 then goto L1d5238;
  #L1d5236.  goto L1d527a;
  #L1d5238.  v2:= 0I;
  #L1d523a.  if v2 >= v12 then goto L1d527c;
  #L1d523e.  v3:= (`long`) v2 @kind i2l;
  #L1d5240.  v3:= v3 + v8 @kind long;
  #L1d5242.  v5:= 1L;
  #L1d5246.  v5:= v5 + v3 @kind long;
  #L1d5248.  call temp:= `request`(v7, v5) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L1d524e.  v5:= temp;
  #L1d5250.  if v5 != 0 then goto L1d5256;
  #L1d5254.  goto L1d527a;
  #L1d5256.  v5:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d525a.  call temp:= `getByte`(v5, v3) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L1d5260.  v3:= temp;
  #L1d5262.  v4:= v11 + v2 @kind int;
  #L1d5266.  call temp:= `getByte`(v10, v4) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1d526c.  v4:= temp;
  #L1d526e.  if v3 == v4 then goto L1d5274;
  #L1d5272.  goto L1d527a;
  #L1d5274.  v2:= v2 + 1;
  #L1d5278.  goto L1d523a;
  #L1d527a.  v1:= 0I;
  #L1d527c.  return v1;
  #L1d527e.  v8:= new `java.lang.IllegalStateException`;
  #L1d5282.  v9:= "closed" @kind object;
  #L1d5286.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d528c.  v9:= temp @kind object;
  #L1d528e.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d5294.  throw v8;
}
procedure `int` `read`(`okio.RealBufferedSource` v5 @kind this, `java.nio.ByteBuffer` v6 @kind object) @signature `Lokio/RealBufferedSource;.read:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1d5494.  v0:= "sink" @kind object;
  #L1d5498.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d549e.  v0:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d54a2.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d54a8.  v0:= temp @kind wide;
  #L1d54aa.  v2:= 0L;
  #L1d54ae.  v4:= lcmp(v0, v2);
  #L1d54b2.  if v4 != 0 then goto L1d54dc;
  #L1d54b6.  v0:= v5.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1d54ba.  v1:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d54be.  v2:= 8192I;
  #L1d54c2.  v2:= (`long`) v2 @kind i2l;
  #L1d54c4.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1d54ca.  v0:= temp @kind wide;
  #L1d54cc.  v2:= -1L;
  #L1d54d0.  v4:= lcmp(v0, v2);
  #L1d54d4.  if v4 != 0 then goto L1d54dc;
  #L1d54d8.  v6:= -1I;
  #L1d54da.  return v6;
  #L1d54dc.  v0:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d54e0.  call temp:= `read`(v0, v6) @signature `Lokio/Buffer;.read:(Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L1d54e6.  v6:= temp;
  #L1d54e8.  return v6;
}
procedure `int` `read`(`okio.RealBufferedSource` v2 @kind this, `byte`[] v3 @kind object) @signature `Lokio/RealBufferedSource;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d53e0.  v0:= "sink" @kind object;
  #L1d53e4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d53ea.  v0:= length @variable v3;
  #L1d53ec.  v1:= 0I;
  #L1d53ee.  call temp:= `read`(v2, v3, v1, v0) @signature `Lokio/RealBufferedSource;.read:([BII)I` @kind virtual;
  #L1d53f4.  v3:= temp;
  #L1d53f6.  return v3;
}
procedure `int` `read`(`okio.RealBufferedSource` v9 @kind this, `byte`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokio/RealBufferedSource;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1d5408.  v0:= "sink" @kind object;
  #L1d540c.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5412.  v0:= length @variable v10;
  #L1d5414.  v1:= (`long`) v0 @kind i2l;
  #L1d5416.  v3:= (`long`) v11 @kind i2l;
  #L1d5418.  v7:= (`long`) v12 @kind i2l;
  #L1d541a.  v5:= v7 @kind wide;
  #L1d541c.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Lokio/-Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L1d5422.  v12:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5426.  call temp:= `size`(v12) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d542c.  v0:= temp @kind wide;
  #L1d542e.  v2:= 0L;
  #L1d5432.  v12:= lcmp(v0, v2);
  #L1d5436.  if v12 != 0 then goto L1d5460;
  #L1d543a.  v12:= v9.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1d543e.  v0:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5442.  v1:= 8192I;
  #L1d5446.  v1:= (`long`) v1 @kind i2l;
  #L1d5448.  call temp:= `read`(v12, v0, v1) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1d544e.  v0:= temp @kind wide;
  #L1d5450.  v2:= -1L;
  #L1d5454.  v12:= lcmp(v0, v2);
  #L1d5458.  if v12 != 0 then goto L1d5460;
  #L1d545c.  v10:= -1I;
  #L1d545e.  goto L1d5482;
  #L1d5460.  v12:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5464.  call temp:= `size`(v12) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d546a.  v0:= temp @kind wide;
  #L1d546c.  call temp:= `min`(v7, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1d5472.  v0:= temp @kind wide;
  #L1d5474.  v12:= (`int`) v0 @kind l2i;
  #L1d5476.  v0:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d547a.  call temp:= `read`(v0, v10, v11, v12) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L1d5480.  v10:= temp;
  #L1d5482.  return v10;
}
procedure `long` `read`(`okio.RealBufferedSource` v7 @kind this, `okio.Buffer` v8 @kind object, `long` v9 ) @signature `Lokio/RealBufferedSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1d5c9c.  v0:= "sink" @kind object;
  #L1d5ca0.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5ca6.  v0:= 1I;
  #L1d5ca8.  v1:= 0L;
  #L1d5cac.  v3:= lcmp(v9, v1);
  #L1d5cb0.  if v3 < 0 then goto L1d5cb8;
  #L1d5cb4.  v3:= 1I;
  #L1d5cb6.  goto L1d5cba;
  #L1d5cb8.  v3:= 0I;
  #L1d5cba.  if v3 == 0 then goto L1d5d3a;
  #L1d5cbe.  v3:= v7.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1d5cc2.  v0:= v0 ^~ v3 @kind int;
  #L1d5cc4.  if v0 == 0 then goto L1d5d22;
  #L1d5cc8.  v0:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5ccc.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d5cd2.  v3:= temp @kind wide;
  #L1d5cd4.  v5:= -1L;
  #L1d5cd8.  v0:= lcmp(v3, v1);
  #L1d5cdc.  if v0 != 0 then goto L1d5d00;
  #L1d5ce0.  v0:= v7.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1d5ce4.  v1:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5ce8.  v2:= 8192I;
  #L1d5cec.  v2:= (`long`) v2 @kind i2l;
  #L1d5cee.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1d5cf4.  v0:= temp @kind wide;
  #L1d5cf6.  v2:= lcmp(v0, v5);
  #L1d5cfa.  if v2 != 0 then goto L1d5d00;
  #L1d5cfe.  goto L1d5d20;
  #L1d5d00.  v0:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5d04.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d5d0a.  v0:= temp @kind wide;
  #L1d5d0c.  call temp:= `min`(v9, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1d5d12.  v9:= temp @kind wide;
  #L1d5d14.  v0:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5d18.  call temp:= `read`(v0, v8, v9) @signature `Lokio/Buffer;.read:(Lokio/Buffer;J)J` @kind virtual;
  #L1d5d1e.  v5:= temp @kind wide;
  #L1d5d20.  return v5 @kind wide;
  #L1d5d22.  v8:= new `java.lang.IllegalStateException`;
  #L1d5d26.  v9:= "closed" @kind object;
  #L1d5d2a.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d5d30.  v9:= temp @kind object;
  #L1d5d32.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d5d38.  throw v8;
  #L1d5d3a.  v8:= new `java.lang.StringBuilder`;
  #L1d5d3e.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d5d44.  v0:= "byteCount < 0: " @kind object;
  #L1d5d48.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d5d4e.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d5d54.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d5d5a.  v8:= temp @kind object;
  #L1d5d5c.  v9:= new `java.lang.IllegalArgumentException`;
  #L1d5d60.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d5d66.  v8:= temp @kind object;
  #L1d5d68.  call `<init>`(v9, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d5d6e.  throw v9;
}
procedure `long` `readAll`(`okio.RealBufferedSource` v9 @kind this, `okio.Sink` v10 @kind object) @signature `Lokio/RealBufferedSource;.readAll:(Lokio/Sink;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1d5d80.  v0:= "sink" @kind object;
  #L1d5d84.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5d8a.  v0:= 0L;
  #L1d5d8e.  v2:= v0 @kind wide;
  #L1d5d90.  v4:= v9.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1d5d94.  v5:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5d98.  v6:= 8192I;
  #L1d5d9c.  v6:= (`long`) v6 @kind i2l;
  #L1d5d9e.  call temp:= `read`(v4, v5, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1d5da4.  v4:= temp @kind wide;
  #L1d5da6.  v6:= -1L;
  #L1d5daa.  v8:= lcmp(v4, v6);
  #L1d5dae.  if v8 == 0 then goto L1d5dd4;
  #L1d5db2.  v4:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5db6.  call temp:= `completeSegmentByteCount`(v4) @signature `Lokio/Buffer;.completeSegmentByteCount:()J` @kind virtual;
  #L1d5dbc.  v4:= temp @kind wide;
  #L1d5dbe.  v6:= lcmp(v4, v0);
  #L1d5dc2.  if v6 <= 0 then goto L1d5d90;
  #L1d5dc6.  v2:= v2 + v4 @kind long;
  #L1d5dc8.  v6:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5dcc.  call `write`(v10, v6, v4) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L1d5dd2.  goto L1d5d90;
  #L1d5dd4.  v4:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5dd8.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d5dde.  v4:= temp @kind wide;
  #L1d5de0.  v6:= lcmp(v4, v0);
  #L1d5de4.  if v6 <= 0 then goto L1d5e08;
  #L1d5de8.  v0:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5dec.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d5df2.  v0:= temp @kind wide;
  #L1d5df4.  v2:= v2 + v0 @kind long;
  #L1d5df6.  v0:= v9.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5dfa.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d5e00.  v4:= temp @kind wide;
  #L1d5e02.  call `write`(v10, v0, v4) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L1d5e08.  return v2 @kind wide;
}
procedure `byte` `readByte`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByte:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d5368.  v0:= 1L;
  #L1d536c.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d5372.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5376.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L1d537c.  v0:= temp;
  #L1d537e.  return v0;
}
procedure `byte`[] `readByteArray`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByteArray:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d5390.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5394.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1d5398.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L1d539e.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d53a2.  call temp:= `readByteArray`(v0) @signature `Lokio/Buffer;.readByteArray:()[B` @kind virtual;
  #L1d53a8.  v0:= temp @kind object;
  #L1d53aa.  return v0 @kind object;
}
procedure `byte`[] `readByteArray`(`okio.RealBufferedSource` v1 @kind this, `long` v2 ) @signature `Lokio/RealBufferedSource;.readByteArray:(J)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d53bc.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d53c2.  v0:= v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d53c6.  call temp:= `readByteArray`(v0, v2) @signature `Lokio/Buffer;.readByteArray:(J)[B` @kind virtual;
  #L1d53cc.  v2:= temp @kind object;
  #L1d53ce.  return v2 @kind object;
}
procedure `okio.ByteString` `readByteString`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByteString:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d6078.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d607c.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1d6080.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L1d6086.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d608a.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1d6090.  v0:= temp @kind object;
  #L1d6092.  return v0 @kind object;
}
procedure `okio.ByteString` `readByteString`(`okio.RealBufferedSource` v1 @kind this, `long` v2 ) @signature `Lokio/RealBufferedSource;.readByteString:(J)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d60a4.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d60aa.  v0:= v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d60ae.  call temp:= `readByteString`(v0, v2) @signature `Lokio/Buffer;.readByteString:(J)Lokio/ByteString;` @kind virtual;
  #L1d60b4.  v2:= temp @kind object;
  #L1d60b6.  return v2 @kind object;
}
procedure `long` `readDecimalLong`(`okio.RealBufferedSource` v10 @kind this) @signature `Lokio/RealBufferedSource;.readDecimalLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1d5e1c.  v0:= 1L;
  #L1d5e20.  call `require`(v10, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d5e26.  v2:= 0L;
  #L1d5e2a.  v4:= v2 @kind wide;
  #L1d5e2c.  v6:= v4 + v0 @kind long;
  #L1d5e30.  call temp:= `request`(v10, v6) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L1d5e36.  v8:= temp;
  #L1d5e38.  if v8 == 0 then goto L1d5ece;
  #L1d5e3c.  v8:= v10.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5e40.  call temp:= `getByte`(v8, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L1d5e46.  v8:= temp;
  #L1d5e48.  v9:= 48I;
  #L1d5e4c.  v9:= (`byte`) v9 @kind i2b;
  #L1d5e4e.  if v8 < v9 then goto L1d5e5c;
  #L1d5e52.  v9:= 57I;
  #L1d5e56.  v9:= (`byte`) v9 @kind i2b;
  #L1d5e58.  if v8 <= v9 then goto L1d5e70;
  #L1d5e5c.  v9:= lcmp(v4, v2);
  #L1d5e60.  if v9 != 0 then goto L1d5e74;
  #L1d5e64.  v4:= 45I;
  #L1d5e68.  v4:= (`byte`) v4 @kind i2b;
  #L1d5e6a.  if v8 == v4 then goto L1d5e70;
  #L1d5e6e.  goto L1d5e74;
  #L1d5e70.  v4:= v6 @kind wide;
  #L1d5e72.  goto L1d5e2c;
  #L1d5e74.  if v9 == 0 then goto L1d5e7a;
  #L1d5e78.  goto L1d5ece;
  #L1d5e7a.  v0:= new `java.lang.NumberFormatException`;
  #L1d5e7e.  v1:= new `java.lang.StringBuilder`;
  #L1d5e82.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d5e88.  v2:= "Expected leading [0-9] or '-' character but was 0x" @kind object;
  #L1d5e8c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d5e92.  v2:= 16I;
  #L1d5e96.  call temp:= `checkRadix`(v2) @signature `Lkotlin/text/CharsKt;.checkRadix:(I)I` @kind static;
  #L1d5e9c.  v2:= temp;
  #L1d5e9e.  call temp:= `checkRadix`(v2) @signature `Lkotlin/text/CharsKt;.checkRadix:(I)I` @kind static;
  #L1d5ea4.  v2:= temp;
  #L1d5ea6.  call temp:= `toString`(v8, v2) @signature `Ljava/lang/Integer;.toString:(II)Ljava/lang/String;` @kind static;
  #L1d5eac.  v2:= temp @kind object;
  #L1d5eae.  v3:= "java.lang.Integer.toStri…(this, checkRadix(radix))" @kind object;
  #L1d5eb2.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5eb8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d5ebe.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d5ec4.  v1:= temp @kind object;
  #L1d5ec6.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d5ecc.  throw v0;
  #L1d5ece.  v0:= v10.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5ed2.  call temp:= `readDecimalLong`(v0) @signature `Lokio/Buffer;.readDecimalLong:()J` @kind virtual;
  #L1d5ed8.  v0:= temp @kind wide;
  #L1d5eda.  return v0 @kind wide;
}
procedure `void` `readFully`(`okio.RealBufferedSource` v1 @kind this, `okio.Buffer` v2 @kind object, `long` v3 ) @signature `Lokio/RealBufferedSource;.readFully:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d6244.  v0:= "sink" @kind object;
  #L1d6248.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d624e.  call `require`(v1, v3) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d6254.  v0:= v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d6258.  call `readFully`(v0, v2, v3) @signature `Lokio/Buffer;.readFully:(Lokio/Buffer;J)V` @kind virtual;
  #L1d625e.  return @kind void;
  #L1d6260.  v3:= Exception @type ^`java.io.EOFException` @kind object;
  #L1d6262.  v4:= v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d6266.  call temp:= `writeAll`(v2, v4) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L1d626c.  throw v3;
  catch `java.io.EOFException` @[L1d624e..L1d6254] goto L1d6260;
}
procedure `void` `readFully`(`okio.RealBufferedSource` v7 @kind this, `byte`[] v8 @kind object) @signature `Lokio/RealBufferedSource;.readFully:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1d61b8.  v0:= "sink" @kind object;
  #L1d61bc.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d61c2.  v0:= length @variable v8;
  #L1d61c4.  v0:= (`long`) v0 @kind i2l;
  #L1d61c6.  call `require`(v7, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d61cc.  v0:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d61d0.  call `readFully`(v0, v8) @signature `Lokio/Buffer;.readFully:([B)V` @kind virtual;
  #L1d61d6.  return @kind void;
  #L1d61d8.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L1d61da.  v1:= 0I;
  #L1d61dc.  v2:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d61e0.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d61e6.  v2:= temp @kind wide;
  #L1d61e8.  v4:= 0L;
  #L1d61ec.  v6:= lcmp(v2, v4);
  #L1d61f0.  if v6 <= 0 then goto L1d6220;
  #L1d61f4.  v2:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d61f8.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d61fe.  v3:= temp @kind wide;
  #L1d6200.  v4:= (`int`) v3 @kind l2i;
  #L1d6202.  call temp:= `read`(v2, v8, v1, v4) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L1d6208.  v2:= temp;
  #L1d620a.  v3:= -1I;
  #L1d620c.  if v2 == v3 then goto L1d6214;
  #L1d6210.  v1:= v1 + v2 @kind int;
  #L1d6212.  goto L1d61dc;
  #L1d6214.  v8:= new `java.lang.AssertionError`;
  #L1d6218.  call `<init>`(v8) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1d621e.  throw v8;
  #L1d6220.  throw v0;
  catch `java.io.EOFException` @[L1d61c2..L1d61cc] goto L1d61d8;
}
procedure `long` `readHexadecimalUnsignedLong`(`okio.RealBufferedSource` v5 @kind this) @signature `Lokio/RealBufferedSource;.readHexadecimalUnsignedLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1d5eec.  v0:= 1L;
  #L1d5ef0.  call `require`(v5, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d5ef6.  v0:= 0I;
  #L1d5ef8.  v1:= v0 + 1;
  #L1d5efc.  v2:= (`long`) v1 @kind i2l;
  #L1d5efe.  call temp:= `request`(v5, v2) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L1d5f04.  v2:= temp;
  #L1d5f06.  if v2 == 0 then goto L1d5fb4;
  #L1d5f0a.  v2:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5f0e.  v3:= (`long`) v0 @kind i2l;
  #L1d5f10.  call temp:= `getByte`(v2, v3) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L1d5f16.  v2:= temp;
  #L1d5f18.  v3:= 48I;
  #L1d5f1c.  v3:= (`byte`) v3 @kind i2b;
  #L1d5f1e.  if v2 < v3 then goto L1d5f2c;
  #L1d5f22.  v3:= 57I;
  #L1d5f26.  v3:= (`byte`) v3 @kind i2b;
  #L1d5f28.  if v2 <= v3 then goto L1d5f56;
  #L1d5f2c.  v3:= 97I;
  #L1d5f30.  v3:= (`byte`) v3 @kind i2b;
  #L1d5f32.  if v2 < v3 then goto L1d5f40;
  #L1d5f36.  v3:= 102I;
  #L1d5f3a.  v3:= (`byte`) v3 @kind i2b;
  #L1d5f3c.  if v2 <= v3 then goto L1d5f56;
  #L1d5f40.  v3:= 65I;
  #L1d5f44.  v3:= (`byte`) v3 @kind i2b;
  #L1d5f46.  if v2 < v3 then goto L1d5f5a;
  #L1d5f4a.  v3:= 70I;
  #L1d5f4e.  v3:= (`byte`) v3 @kind i2b;
  #L1d5f50.  if v2 <= v3 then goto L1d5f56;
  #L1d5f54.  goto L1d5f5a;
  #L1d5f56.  v0:= v1;
  #L1d5f58.  goto L1d5ef8;
  #L1d5f5a.  if v0 == 0 then goto L1d5f60;
  #L1d5f5e.  goto L1d5fb4;
  #L1d5f60.  v0:= new `java.lang.NumberFormatException`;
  #L1d5f64.  v1:= new `java.lang.StringBuilder`;
  #L1d5f68.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d5f6e.  v3:= "Expected leading [0-9a-fA-F] character but was 0x" @kind object;
  #L1d5f72.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d5f78.  v3:= 16I;
  #L1d5f7c.  call temp:= `checkRadix`(v3) @signature `Lkotlin/text/CharsKt;.checkRadix:(I)I` @kind static;
  #L1d5f82.  v3:= temp;
  #L1d5f84.  call temp:= `checkRadix`(v3) @signature `Lkotlin/text/CharsKt;.checkRadix:(I)I` @kind static;
  #L1d5f8a.  v3:= temp;
  #L1d5f8c.  call temp:= `toString`(v2, v3) @signature `Ljava/lang/Integer;.toString:(II)Ljava/lang/String;` @kind static;
  #L1d5f92.  v2:= temp @kind object;
  #L1d5f94.  v3:= "java.lang.Integer.toStri…(this, checkRadix(radix))" @kind object;
  #L1d5f98.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5f9e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d5fa4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d5faa.  v1:= temp @kind object;
  #L1d5fac.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d5fb2.  throw v0;
  #L1d5fb4.  v0:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5fb8.  call temp:= `readHexadecimalUnsignedLong`(v0) @signature `Lokio/Buffer;.readHexadecimalUnsignedLong:()J` @kind virtual;
  #L1d5fbe.  v0:= temp @kind wide;
  #L1d5fc0.  return v0 @kind wide;
}
procedure `int` `readInt`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readInt:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d54fc.  v0:= 4L;
  #L1d5500.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d5506.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d550a.  call temp:= `readInt`(v0) @signature `Lokio/Buffer;.readInt:()I` @kind virtual;
  #L1d5510.  v0:= temp;
  #L1d5512.  return v0;
}
procedure `int` `readIntLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readIntLe:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d5524.  v0:= 4L;
  #L1d5528.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d552e.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5532.  call temp:= `readIntLe`(v0) @signature `Lokio/Buffer;.readIntLe:()I` @kind virtual;
  #L1d5538.  v0:= temp;
  #L1d553a.  return v0;
}
procedure `long` `readLong`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d5fd4.  v0:= 8L;
  #L1d5fd8.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d5fde.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5fe2.  call temp:= `readLong`(v0) @signature `Lokio/Buffer;.readLong:()J` @kind virtual;
  #L1d5fe8.  v0:= temp @kind wide;
  #L1d5fea.  return v0 @kind wide;
}
procedure `long` `readLongLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readLongLe:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d5ffc.  v0:= 8L;
  #L1d6000.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d6006.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d600a.  call temp:= `readLongLe`(v0) @signature `Lokio/Buffer;.readLongLe:()J` @kind virtual;
  #L1d6010.  v0:= temp @kind wide;
  #L1d6012.  return v0 @kind wide;
}
procedure `short` `readShort`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readShort:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d60e8.  v0:= 2L;
  #L1d60ec.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d60f2.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d60f6.  call temp:= `readShort`(v0) @signature `Lokio/Buffer;.readShort:()S` @kind virtual;
  #L1d60fc.  v0:= temp;
  #L1d60fe.  return v0;
}
procedure `short` `readShortLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readShortLe:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d6110.  v0:= 2L;
  #L1d6114.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d611a.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d611e.  call temp:= `readShortLe`(v0) @signature `Lokio/Buffer;.readShortLe:()S` @kind virtual;
  #L1d6124.  v0:= temp;
  #L1d6126.  return v0;
}
procedure `java.lang.String` `readString`(`okio.RealBufferedSource` v1 @kind this, `long` v2 , `java.nio.charset.Charset` v4 @kind object) @signature `Lokio/RealBufferedSource;.readString:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d56c4.  v0:= "charset" @kind object;
  #L1d56c8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d56ce.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d56d4.  v0:= v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d56d8.  call temp:= `readString`(v0, v2, v4) @signature `Lokio/Buffer;.readString:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L1d56de.  v2:= temp @kind object;
  #L1d56e0.  return v2 @kind object;
}
procedure `java.lang.String` `readString`(`okio.RealBufferedSource` v2 @kind this, `java.nio.charset.Charset` v3 @kind object) @signature `Lokio/RealBufferedSource;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d568c.  v0:= "charset" @kind object;
  #L1d5690.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5696.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d569a.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1d569e.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L1d56a4.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d56a8.  call temp:= `readString`(v0, v3) @signature `Lokio/Buffer;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L1d56ae.  v3:= temp @kind object;
  #L1d56b0.  return v3 @kind object;
}
procedure `java.lang.String` `readUtf8`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d56f4.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d56f8.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1d56fc.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L1d5702.  v0:= v2.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5706.  call temp:= `readUtf8`(v0) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L1d570c.  v0:= temp @kind object;
  #L1d570e.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8`(`okio.RealBufferedSource` v1 @kind this, `long` v2 ) @signature `Lokio/RealBufferedSource;.readUtf8:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d5720.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d5726.  v0:= v1.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d572a.  call temp:= `readUtf8`(v0, v2) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L1d5730.  v2:= temp @kind object;
  #L1d5732.  return v2 @kind object;
}
procedure `int` `readUtf8CodePoint`(`okio.RealBufferedSource` v3 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8CodePoint:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d554c.  v0:= 1L;
  #L1d5550.  call `require`(v3, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d5556.  v0:= v3.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d555a.  v1:= 0L;
  #L1d555e.  call temp:= `getByte`(v0, v1) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L1d5564.  v0:= temp;
  #L1d5566.  v1:= v0 ^& 224;
  #L1d556a.  v2:= 192I;
  #L1d556e.  if v1 != v2 then goto L1d557e;
  #L1d5572.  v0:= 2L;
  #L1d5576.  call `require`(v3, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d557c.  goto L1d55ac;
  #L1d557e.  v1:= v0 ^& 240;
  #L1d5582.  v2:= 224I;
  #L1d5586.  if v1 != v2 then goto L1d5596;
  #L1d558a.  v0:= 3L;
  #L1d558e.  call `require`(v3, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d5594.  goto L1d55ac;
  #L1d5596.  v0:= v0 ^& 248;
  #L1d559a.  v1:= 240I;
  #L1d559e.  if v0 != v1 then goto L1d55ac;
  #L1d55a2.  v0:= 4L;
  #L1d55a6.  call `require`(v3, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L1d55ac.  v0:= v3.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d55b0.  call temp:= `readUtf8CodePoint`(v0) @signature `Lokio/Buffer;.readUtf8CodePoint:()I` @kind virtual;
  #L1d55b6.  v0:= temp;
  #L1d55b8.  return v0;
}
procedure `java.lang.String` `readUtf8Line`(`okio.RealBufferedSource` v5 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8Line:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1d5744.  v0:= 10I;
  #L1d5748.  v0:= (`byte`) v0 @kind i2b;
  #L1d574a.  call temp:= `indexOf`(v5, v0) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @kind virtual;
  #L1d5750.  v0:= temp @kind wide;
  #L1d5752.  v2:= -1L;
  #L1d5756.  v4:= lcmp(v0, v2);
  #L1d575a.  if v4 != 0 then goto L1d5790;
  #L1d575e.  v0:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5762.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d5768.  v0:= temp @kind wide;
  #L1d576a.  v2:= 0L;
  #L1d576e.  v4:= lcmp(v0, v2);
  #L1d5772.  if v4 == 0 then goto L1d578c;
  #L1d5776.  v0:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d577a.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d5780.  v0:= temp @kind wide;
  #L1d5782.  call temp:= `readUtf8`(v5, v0) @signature `Lokio/RealBufferedSource;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L1d5788.  v0:= temp @kind object;
  #L1d578a.  goto L1d579c;
  #L1d578c.  v0:= 0I;
  #L1d578e.  goto L1d579c;
  #L1d5790.  v2:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5794.  call temp:= `readUtf8Line`(v2, v0) @signature `Lokio/internal/BufferKt;.readUtf8Line:(Lokio/Buffer;J)Ljava/lang/String;` @kind static;
  #L1d579a.  v0:= temp @kind object;
  #L1d579c.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8LineStrict`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d57b0.  v0:= 9223372036854775807L;
  #L1d57ba.  call temp:= `readUtf8LineStrict`(v2, v0) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:(J)Ljava/lang/String;` @kind virtual;
  #L1d57c0.  v0:= temp @kind object;
  #L1d57c2.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8LineStrict`(`okio.RealBufferedSource` v13 @kind this, `long` v14 ) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1d57d4.  v0:= 0L;
  #L1d57d8.  v2:= lcmp(v14, v0);
  #L1d57dc.  if v2 < 0 then goto L1d57e4;
  #L1d57e0.  v0:= 1I;
  #L1d57e2.  goto L1d57e6;
  #L1d57e4.  v0:= 0I;
  #L1d57e6.  if v0 == 0 then goto L1d5930;
  #L1d57ea.  v0:= 1L;
  #L1d57ee.  v2:= 9223372036854775807L;
  #L1d57f8.  v4:= lcmp(v14, v2);
  #L1d57fc.  if v4 != 0 then goto L1d5804;
  #L1d5800.  v4:= v2 @kind wide;
  #L1d5802.  goto L1d5808;
  #L1d5804.  v4:= v14 + v0 @kind long;
  #L1d5808.  v6:= 10I;
  #L1d580c.  v12:= (`byte`) v6 @kind i2b;
  #L1d580e.  v8:= 0L;
  #L1d5812.  v6:= v13 @kind object;
  #L1d5814.  v7:= v12;
  #L1d5816.  v10:= v4 @kind wide;
  #L1d5818.  call temp:= `indexOf`(v6, v7, v8, v10) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @kind virtual;
  #L1d581e.  v6:= temp @kind wide;
  #L1d5820.  v8:= -1L;
  #L1d5824.  v10:= lcmp(v6, v8);
  #L1d5828.  if v10 == 0 then goto L1d583a;
  #L1d582c.  v14:= v13.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5830.  call temp:= `readUtf8Line`(v14, v6) @signature `Lokio/internal/BufferKt;.readUtf8Line:(Lokio/Buffer;J)Ljava/lang/String;` @kind static;
  #L1d5836.  v14:= temp @kind object;
  #L1d5838.  goto L1d5892;
  #L1d583a.  v6:= lcmp(v4, v2);
  #L1d583e.  if v6 >= 0 then goto L1d5894;
  #L1d5842.  call temp:= `request`(v13, v4) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L1d5848.  v2:= temp;
  #L1d584a.  if v2 == 0 then goto L1d5894;
  #L1d584e.  v2:= v13.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5852.  v6:= v4 - v0 @kind long;
  #L1d5856.  call temp:= `getByte`(v2, v6) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L1d585c.  v2:= temp;
  #L1d585e.  v3:= 13I;
  #L1d5862.  v3:= (`byte`) v3 @kind i2b;
  #L1d5864.  if v2 != v3 then goto L1d5894;
  #L1d5868.  v0:= v0 + v4 @kind long;
  #L1d586a.  call temp:= `request`(v13, v0) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L1d5870.  v0:= temp;
  #L1d5872.  if v0 == 0 then goto L1d5894;
  #L1d5876.  v0:= v13.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d587a.  call temp:= `getByte`(v0, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L1d5880.  v0:= temp;
  #L1d5882.  if v0 != v12 then goto L1d5894;
  #L1d5886.  v14:= v13.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d588a.  call temp:= `readUtf8Line`(v14, v4) @signature `Lokio/internal/BufferKt;.readUtf8Line:(Lokio/Buffer;J)Ljava/lang/String;` @kind static;
  #L1d5890.  v14:= temp @kind object;
  #L1d5892.  return v14 @kind object;
  #L1d5894.  v6:= new `okio.Buffer`;
  #L1d5898.  call `<init>`(v6) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1d589e.  v0:= v13.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d58a2.  v2:= 0L;
  #L1d58a6.  v1:= 32I;
  #L1d58aa.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d58b0.  v4:= temp @kind wide;
  #L1d58b2.  v7:= (`long`) v1 @kind i2l;
  #L1d58b4.  call temp:= `min`(v7, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1d58ba.  v4:= temp @kind wide;
  #L1d58bc.  v1:= v6 @kind object;
  #L1d58be.  call temp:= `copyTo`(v0, v1, v2, v4) @signature `Lokio/Buffer;.copyTo:(Lokio/Buffer;JJ)Lokio/Buffer;` @kind virtual;
  #L1d58c4.  v0:= new `java.io.EOFException`;
  #L1d58c8.  v1:= new `java.lang.StringBuilder`;
  #L1d58cc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d58d2.  v2:= "\\n not found: limit=" @kind object;
  #L1d58d6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d58dc.  v2:= v13.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d58e0.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d58e6.  v2:= temp @kind wide;
  #L1d58e8.  call temp:= `min`(v2, v14) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1d58ee.  v14:= temp @kind wide;
  #L1d58f0.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d58f6.  v14:= " content=" @kind object;
  #L1d58fa.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d5900.  call temp:= `readByteString`(v6) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1d5906.  v14:= temp @kind object;
  #L1d5908.  call temp:= `hex`(v14) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L1d590e.  v14:= temp @kind object;
  #L1d5910.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d5916.  v14:= "…" @kind object;
  #L1d591a.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d5920.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d5926.  v14:= temp @kind object;
  #L1d5928.  call `<init>`(v0, v14) @signature `Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d592e.  throw v0;
  #L1d5930.  v0:= new `java.lang.StringBuilder`;
  #L1d5934.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d593a.  v1:= "limit < 0: " @kind object;
  #L1d593e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d5944.  call temp:= `append`(v0, v14) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d594a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d5950.  v14:= temp @kind object;
  #L1d5952.  v15:= new `java.lang.IllegalArgumentException`;
  #L1d5956.  call temp:= `toString`(v14) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d595c.  v14:= temp @kind object;
  #L1d595e.  call `<init>`(v15, v14) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d5964.  throw v15;
}
procedure `boolean` `request`(`okio.RealBufferedSource` v7 @kind this, `long` v8 ) @signature `Lokio/RealBufferedSource;.request:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1d52a8.  v0:= 0I;
  #L1d52aa.  v1:= 1I;
  #L1d52ac.  v2:= 0L;
  #L1d52b0.  v4:= lcmp(v8, v2);
  #L1d52b4.  if v4 < 0 then goto L1d52bc;
  #L1d52b8.  v2:= 1I;
  #L1d52ba.  goto L1d52be;
  #L1d52bc.  v2:= 0I;
  #L1d52be.  if v2 == 0 then goto L1d5320;
  #L1d52c2.  v2:= v7.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1d52c6.  v2:= v2 ^~ v1 @kind int;
  #L1d52c8.  if v2 == 0 then goto L1d5308;
  #L1d52cc.  v2:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d52d0.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d52d6.  v2:= temp @kind wide;
  #L1d52d8.  v4:= lcmp(v2, v8);
  #L1d52dc.  if v4 >= 0 then goto L1d5304;
  #L1d52e0.  v2:= v7.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1d52e4.  v3:= v7.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d52e8.  v4:= 8192I;
  #L1d52ec.  v4:= (`long`) v4 @kind i2l;
  #L1d52ee.  call temp:= `read`(v2, v3, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1d52f4.  v2:= temp @kind wide;
  #L1d52f6.  v4:= -1L;
  #L1d52fa.  v6:= lcmp(v2, v4);
  #L1d52fe.  if v6 != 0 then goto L1d52cc;
  #L1d5302.  goto L1d5306;
  #L1d5304.  v0:= 1I;
  #L1d5306.  return v0;
  #L1d5308.  v8:= new `java.lang.IllegalStateException`;
  #L1d530c.  v9:= "closed" @kind object;
  #L1d5310.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d5316.  v9:= temp @kind object;
  #L1d5318.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d531e.  throw v8;
  #L1d5320.  v0:= new `java.lang.StringBuilder`;
  #L1d5324.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d532a.  v1:= "byteCount < 0: " @kind object;
  #L1d532e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d5334.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d533a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d5340.  v8:= temp @kind object;
  #L1d5342.  v9:= new `java.lang.IllegalArgumentException`;
  #L1d5346.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d534c.  v8:= temp @kind object;
  #L1d534e.  call `<init>`(v9, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d5354.  throw v9;
}
procedure `void` `require`(`okio.RealBufferedSource` v0 @kind this, `long` v1 ) @signature `Lokio/RealBufferedSource;.require:(J)V` @AccessFlag PUBLIC {
    temp;

  #L1d6290.  call temp:= `request`(v0, v1) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L1d6296.  v1:= temp;
  #L1d6298.  if v1 == 0 then goto L1d629e;
  #L1d629c.  return @kind void;
  #L1d629e.  v1:= new `java.io.EOFException`;
  #L1d62a2.  call `<init>`(v1) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L1d62a8.  throw v1;
}
procedure `int` `select`(`okio.RealBufferedSource` v8 @kind this, `okio.Options` v9 @kind object) @signature `Lokio/RealBufferedSource;.select:(Lokio/Options;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1d55cc.  v0:= "options" @kind object;
  #L1d55d0.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d55d6.  v0:= v8.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1d55da.  v1:= 1I;
  #L1d55dc.  v0:= v0 ^~ v1 @kind int;
  #L1d55de.  if v0 == 0 then goto L1d5646;
  #L1d55e2.  v0:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d55e6.  call temp:= `selectPrefix`(v0, v9, v1) @signature `Lokio/internal/BufferKt;.selectPrefix:(Lokio/Buffer;Lokio/Options;Z)I` @kind static;
  #L1d55ec.  v0:= temp;
  #L1d55ee.  v2:= -2I;
  #L1d55f0.  v3:= -1I;
  #L1d55f2.  if v0 == v2 then goto L1d5620;
  #L1d55f6.  if v0 == v3 then goto L1d561c;
  #L1d55fa.  call temp:= `getByteStrings$okio`(v9) @signature `Lokio/Options;.getByteStrings$okio:()[Lokio/ByteString;` @kind virtual;
  #L1d5600.  v9:= temp @kind object;
  #L1d5602.  v9:= v9[v0] @kind object;
  #L1d5606.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1d560c.  v9:= temp;
  #L1d560e.  v1:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5612.  v2:= (`long`) v9 @kind i2l;
  #L1d5614.  call `skip`(v1, v2) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L1d561a.  goto L1d5644;
  #L1d561c.  v0:= -1I;
  #L1d561e.  goto L1d5644;
  #L1d5620.  v0:= v8.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1d5624.  v2:= v8.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d5628.  v4:= 8192I;
  #L1d562c.  v4:= (`long`) v4 @kind i2l;
  #L1d562e.  call temp:= `read`(v0, v2, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1d5634.  v4:= temp @kind wide;
  #L1d5636.  v6:= -1L;
  #L1d563a.  v0:= lcmp(v4, v6);
  #L1d563e.  if v0 != 0 then goto L1d55e2;
  #L1d5642.  goto L1d561c;
  #L1d5644.  return v0;
  #L1d5646.  v9:= new `java.lang.IllegalStateException`;
  #L1d564a.  v0:= "closed" @kind object;
  #L1d564e.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d5654.  v0:= temp @kind object;
  #L1d5656.  call `<init>`(v9, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d565c.  throw v9;
}
procedure `void` `skip`(`okio.RealBufferedSource` v5 @kind this, `long` v6 ) @signature `Lokio/RealBufferedSource;.skip:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1d62bc.  v0:= v5.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L1d62c0.  v0:= v0 ^~ 1;
  #L1d62c4.  if v0 == 0 then goto L1d633c;
  #L1d62c8.  v0:= 0L;
  #L1d62cc.  v2:= lcmp(v6, v0);
  #L1d62d0.  if v2 <= 0 then goto L1d633a;
  #L1d62d4.  v2:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d62d8.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d62de.  v2:= temp @kind wide;
  #L1d62e0.  v4:= lcmp(v2, v0);
  #L1d62e4.  if v4 != 0 then goto L1d6318;
  #L1d62e8.  v0:= v5.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1d62ec.  v1:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d62f0.  v2:= 8192I;
  #L1d62f4.  v2:= (`long`) v2 @kind i2l;
  #L1d62f6.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1d62fc.  v0:= temp @kind wide;
  #L1d62fe.  v2:= -1L;
  #L1d6302.  v4:= lcmp(v0, v2);
  #L1d6306.  if v4 == 0 then goto L1d630c;
  #L1d630a.  goto L1d6318;
  #L1d630c.  v6:= new `java.io.EOFException`;
  #L1d6310.  call `<init>`(v6) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L1d6316.  throw v6;
  #L1d6318.  v0:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d631c.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1d6322.  v0:= temp @kind wide;
  #L1d6324.  call temp:= `min`(v6, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1d632a.  v0:= temp @kind wide;
  #L1d632c.  v2:= v5.`okio.RealBufferedSource.bufferField` @type ^`okio.Buffer` @kind object;
  #L1d6330.  call `skip`(v2, v0) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L1d6336.  v6:= v6 - v0 @kind long;
  #L1d6338.  goto L1d62c8;
  #L1d633a.  return @kind void;
  #L1d633c.  v6:= new `java.lang.IllegalStateException`;
  #L1d6340.  v7:= "closed" @kind object;
  #L1d6344.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d634a.  v7:= temp @kind object;
  #L1d634c.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d6352.  throw v6;
}
procedure `okio.Timeout` `timeout`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d60c8.  v0:= v1.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1d60cc.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L1d60d2.  v0:= temp @kind object;
  #L1d60d4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d5978.  v0:= new `java.lang.StringBuilder`;
  #L1d597c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d5982.  v1:= "buffer(" @kind object;
  #L1d5986.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d598c.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L1d5990.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d5996.  v1:= 41I;
  #L1d599a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d59a0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d59a6.  v0:= temp @kind object;
  #L1d59a8.  return v0 @kind object;
}
