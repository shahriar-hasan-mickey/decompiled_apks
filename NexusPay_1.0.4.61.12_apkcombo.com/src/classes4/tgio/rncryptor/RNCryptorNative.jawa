record `tgio.rncryptor.RNCryptorNative` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<clinit>`() @signature `Ltgio/rncryptor/RNCryptorNative;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L49ad34.  v0:= "gnustl_shared" @kind object;
  #L49ad38.  call `loadLibrary`(v0) @signature `Ljava/lang/System;.loadLibrary:(Ljava/lang/String;)V` @kind static;
  #L49ad3e.  v0:= "cryptopp_shared" @kind object;
  #L49ad42.  call `loadLibrary`(v0) @signature `Ljava/lang/System;.loadLibrary:(Ljava/lang/String;)V` @kind static;
  #L49ad48.  v0:= "rncrypto" @kind object;
  #L49ad4c.  call `loadLibrary`(v0) @signature `Ljava/lang/System;.loadLibrary:(Ljava/lang/String;)V` @kind static;
  #L49ad52.  return @kind void;
}
procedure `void` `<init>`(`tgio.rncryptor.RNCryptorNative` v0 @kind this) @signature `Ltgio/rncryptor/RNCryptorNative;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49ad64.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L49ad6a.  return @kind void;
}
procedure `byte`[] `a`(`java.io.File` v4 @kind object) @signature `Ltgio/rncryptor/RNCryptorNative;.a:(Ljava/io/File;)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L49accc.  call temp:= `length`(v4) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L49acd2.  v0:= temp @kind wide;
  #L49acd4.  v1:= (`int`) v0 @kind l2i;
  #L49acd6.  v0:= new `byte`[v1];
  #L49acda.  v2:= new `java.io.BufferedInputStream`;
  #L49acde.  v3:= new `java.io.FileInputStream`;
  #L49ace2.  call `<init>`(v3, v4) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L49ace8.  call `<init>`(v2, v3) @signature `Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L49acee.  v4:= 0I;
  #L49acf0.  call temp:= `read`(v2, v0, v4, v1) @signature `Ljava/io/BufferedInputStream;.read:([BII)I` @kind virtual;
  #L49acf6.  call `close`(v2) @signature `Ljava/io/BufferedInputStream;.close:()V` @kind virtual;
  #L49acfc.  goto L49ad10;
  #L49acfe.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L49ad00.  call `printStackTrace`(v4) @signature `Ljava/io/IOException;.printStackTrace:()V` @kind virtual;
  #L49ad06.  goto L49ad10;
  #L49ad08.  v4:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L49ad0a.  call `printStackTrace`(v4) @signature `Ljava/io/FileNotFoundException;.printStackTrace:()V` @kind virtual;
  #L49ad10.  return v0 @kind object;
  catch `java.io.FileNotFoundException` @[L49acda..L49acfc] goto L49ad08;
  catch `java.io.IOException` @[L49acda..L49acfc] goto L49acfe;
}
procedure `void` `b`(`java.io.File` v2 @kind object, `byte`[] v3 @kind object) @signature `Ltgio/rncryptor/RNCryptorNative;.b:(Ljava/io/File;[B)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L49ae9c.  v0:= new `java.io.BufferedOutputStream`;
  #L49aea0.  v1:= new `java.io.FileOutputStream`;
  #L49aea4.  call `<init>`(v1, v2) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L49aeaa.  call `<init>`(v0, v1) @signature `Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L49aeb0.  call `write`(v0, v3) @signature `Ljava/io/BufferedOutputStream;.write:([B)V` @kind virtual;
  #L49aeb6.  call `flush`(v0) @signature `Ljava/io/BufferedOutputStream;.flush:()V` @kind virtual;
  #L49aebc.  call `close`(v0) @signature `Ljava/io/BufferedOutputStream;.close:()V` @kind virtual;
  #L49aec2.  return @kind void;
}
procedure `void` `decryptAsync`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `tgio.rncryptor.RNCryptorNative$RNCryptorNativeCallback` v4 @kind object) @signature `Ltgio/rncryptor/RNCryptorNative;.decryptAsync:(Ljava/lang/String;Ljava/lang/String;Ltgio/rncryptor/RNCryptorNative$RNCryptorNativeCallback;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L49ad7c.  v0:= 0I;
  #L49ad7e.  v1:= new `tgio.rncryptor.RNCryptorNative`;
  #L49ad82.  call `<init>`(v1) @signature `Ltgio/rncryptor/RNCryptorNative;.<init>:()V` @kind direct;
  #L49ad88.  call temp:= `decrypt`(v1, v2, v3) @signature `Ltgio/rncryptor/RNCryptorNative;.decrypt:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L49ad8e.  v2:= temp @kind object;
  #L49ad90.  call `done`(v4, v2, v0) @signature `Ltgio/rncryptor/RNCryptorNative$RNCryptorNativeCallback;.done:(Ljava/lang/String;Ljava/lang/Exception;)V` @kind interface;
  #L49ad96.  goto L49ada0;
  #L49ad98.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L49ad9a.  call `done`(v4, v0, v2) @signature `Ltgio/rncryptor/RNCryptorNative$RNCryptorNativeCallback;.done:(Ljava/lang/String;Ljava/lang/Exception;)V` @kind interface;
  #L49ada0.  return @kind void;
  catch `java.lang.Exception` @[L49ad7e..L49ad96] goto L49ad98;
}
procedure `void` `decryptFile`(`java.io.File` v2 @kind object, `java.io.File` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Ltgio/rncryptor/RNCryptorNative;.decryptFile:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L49adc4.  call temp:= `a`(v2) @signature `Ltgio/rncryptor/RNCryptorNative;.a:(Ljava/io/File;)[B` @kind static;
  #L49adca.  v2:= temp @kind object;
  #L49adcc.  v0:= new `tgio.rncryptor.RNCryptorNative`;
  #L49add0.  call `<init>`(v0) @signature `Ltgio/rncryptor/RNCryptorNative;.<init>:()V` @kind direct;
  #L49add6.  v1:= new `java.lang.String`;
  #L49adda.  call `<init>`(v1, v2) @signature `Ljava/lang/String;.<init>:([B)V` @kind direct;
  #L49ade0.  call temp:= `decrypt`(v0, v1, v4) @signature `Ltgio/rncryptor/RNCryptorNative;.decrypt:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L49ade6.  v2:= temp @kind object;
  #L49ade8.  v4:= 0I;
  #L49adea.  call temp:= `decode`(v2, v4) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L49adf0.  v2:= temp @kind object;
  #L49adf2.  call `b`(v3, v2) @signature `Ltgio/rncryptor/RNCryptorNative;.b:(Ljava/io/File;[B)V` @kind static;
  #L49adf8.  return @kind void;
}
procedure `void` `encryptAsync`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `tgio.rncryptor.RNCryptorNative$RNCryptorNativeCallback` v4 @kind object) @signature `Ltgio/rncryptor/RNCryptorNative;.encryptAsync:(Ljava/lang/String;Ljava/lang/String;Ltgio/rncryptor/RNCryptorNative$RNCryptorNativeCallback;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L49ae0c.  v0:= 0I;
  #L49ae0e.  v1:= new `tgio.rncryptor.RNCryptorNative`;
  #L49ae12.  call `<init>`(v1) @signature `Ltgio/rncryptor/RNCryptorNative;.<init>:()V` @kind direct;
  #L49ae18.  call temp:= `encrypt`(v1, v2, v3) @signature `Ltgio/rncryptor/RNCryptorNative;.encrypt:(Ljava/lang/String;Ljava/lang/String;)[B` @kind virtual;
  #L49ae1e.  v2:= temp @kind object;
  #L49ae20.  v3:= new `java.lang.String`;
  #L49ae24.  v1:= "UTF-8" @kind object;
  #L49ae28.  call `<init>`(v3, v2, v1) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L49ae2e.  call `done`(v4, v3, v0) @signature `Ltgio/rncryptor/RNCryptorNative$RNCryptorNativeCallback;.done:(Ljava/lang/String;Ljava/lang/Exception;)V` @kind interface;
  #L49ae34.  goto L49ae3e;
  #L49ae36.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L49ae38.  call `done`(v4, v0, v2) @signature `Ltgio/rncryptor/RNCryptorNative$RNCryptorNativeCallback;.done:(Ljava/lang/String;Ljava/lang/Exception;)V` @kind interface;
  #L49ae3e.  return @kind void;
  catch `java.lang.Exception` @[L49ae0e..L49ae34] goto L49ae36;
}
procedure `void` `encryptFile`(`java.io.File` v1 @kind object, `java.io.File` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Ltgio/rncryptor/RNCryptorNative;.encryptFile:(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L49ae60.  call temp:= `a`(v1) @signature `Ltgio/rncryptor/RNCryptorNative;.a:(Ljava/io/File;)[B` @kind static;
  #L49ae66.  v1:= temp @kind object;
  #L49ae68.  v0:= 0I;
  #L49ae6a.  call temp:= `encodeToString`(v1, v0) @signature `Landroid/util/Base64;.encodeToString:([BI)Ljava/lang/String;` @kind static;
  #L49ae70.  v1:= temp @kind object;
  #L49ae72.  v0:= new `tgio.rncryptor.RNCryptorNative`;
  #L49ae76.  call `<init>`(v0) @signature `Ltgio/rncryptor/RNCryptorNative;.<init>:()V` @kind direct;
  #L49ae7c.  call temp:= `encrypt`(v0, v1, v3) @signature `Ltgio/rncryptor/RNCryptorNative;.encrypt:(Ljava/lang/String;Ljava/lang/String;)[B` @kind virtual;
  #L49ae82.  v1:= temp @kind object;
  #L49ae84.  call `b`(v2, v1) @signature `Ltgio/rncryptor/RNCryptorNative;.b:(Ljava/io/File;[B)V` @kind static;
  #L49ae8a.  return @kind void;
}
procedure `java.lang.String` `decrypt`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Ltgio/rncryptor/RNCryptorNative;.decrypt:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_NATIVE {

  # return;
}
procedure `byte`[] `encrypt`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Ltgio/rncryptor/RNCryptorNative;.encrypt:(Ljava/lang/String;Ljava/lang/String;)[B` @AccessFlag PUBLIC_NATIVE {

  # return;
}
procedure `java.lang.String` `getABI`() @signature `Ltgio/rncryptor/RNCryptorNative;.getABI:()Ljava/lang/String;` @AccessFlag PUBLIC_NATIVE {

  # return;
}
