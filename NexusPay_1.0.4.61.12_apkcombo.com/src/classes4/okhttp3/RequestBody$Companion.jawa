record `okhttp3.RequestBody$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.RequestBody$Companion` v0 @kind this) @signature `Lokhttp3/RequestBody$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1a3e7c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a3e82.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.RequestBody$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/RequestBody$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1a3e94.  call `<init>`(v0) @signature `Lokhttp3/RequestBody$Companion;.<init>:()V` @kind direct;
  #L1a3e9a.  return @kind void;
}
procedure `okhttp3.RequestBody` `create$default`(`okhttp3.RequestBody$Companion` v0 @kind object, `java.io.File` v1 @kind object, `okhttp3.MediaType` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;Ljava/io/File;Lokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a3b78.  v3:= v3 ^& 1;
  #L1a3b7c.  if v3 == 0 then goto L1a3b82;
  #L1a3b80.  v2:= 0I;
  #L1a3b82.  call temp:= `create`(v0, v1, v2) @signature `Lokhttp3/RequestBody$Companion;.create:(Ljava/io/File;Lokhttp3/MediaType;)Lokhttp3/RequestBody;` @kind virtual;
  #L1a3b88.  v0:= temp @kind object;
  #L1a3b8a.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `create$default`(`okhttp3.RequestBody$Companion` v0 @kind object, `java.lang.String` v1 @kind object, `okhttp3.MediaType` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;Ljava/lang/String;Lokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a3b9c.  v3:= v3 ^& 1;
  #L1a3ba0.  if v3 == 0 then goto L1a3ba6;
  #L1a3ba4.  v2:= 0I;
  #L1a3ba6.  call temp:= `create`(v0, v1, v2) @signature `Lokhttp3/RequestBody$Companion;.create:(Ljava/lang/String;Lokhttp3/MediaType;)Lokhttp3/RequestBody;` @kind virtual;
  #L1a3bac.  v0:= temp @kind object;
  #L1a3bae.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `create$default`(`okhttp3.RequestBody$Companion` v0 @kind object, `okhttp3.MediaType` v1 @kind object, `byte`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;Lokhttp3/MediaType;[BIIILjava/lang/Object;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a3bc0.  v6:= v5 ^& 4;
  #L1a3bc4.  if v6 == 0 then goto L1a3bca;
  #L1a3bc8.  v3:= 0I;
  #L1a3bca.  v5:= v5 ^& 8;
  #L1a3bce.  if v5 == 0 then goto L1a3bd4;
  #L1a3bd2.  v4:= length @variable v2;
  #L1a3bd4.  call temp:= `create`(v0, v1, v2, v3, v4) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokhttp3/MediaType;[BII)Lokhttp3/RequestBody;` @kind virtual;
  #L1a3bda.  v0:= temp @kind object;
  #L1a3bdc.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `create$default`(`okhttp3.RequestBody$Companion` v0 @kind object, `okio.ByteString` v1 @kind object, `okhttp3.MediaType` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;Lokio/ByteString;Lokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a3bf0.  v3:= v3 ^& 1;
  #L1a3bf4.  if v3 == 0 then goto L1a3bfa;
  #L1a3bf8.  v2:= 0I;
  #L1a3bfa.  call temp:= `create`(v0, v1, v2) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokio/ByteString;Lokhttp3/MediaType;)Lokhttp3/RequestBody;` @kind virtual;
  #L1a3c00.  v0:= temp @kind object;
  #L1a3c02.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `create$default`(`okhttp3.RequestBody$Companion` v0 @kind object, `byte`[] v1 @kind object, `okhttp3.MediaType` v2 @kind object, `int` v3 , `int` v4 , `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;[BLokhttp3/MediaType;IIILjava/lang/Object;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a3b40.  v6:= v5 ^& 1;
  #L1a3b44.  if v6 == 0 then goto L1a3b4a;
  #L1a3b48.  v2:= 0I;
  #L1a3b4a.  v6:= v5 ^& 2;
  #L1a3b4e.  if v6 == 0 then goto L1a3b54;
  #L1a3b52.  v3:= 0I;
  #L1a3b54.  v5:= v5 ^& 4;
  #L1a3b58.  if v5 == 0 then goto L1a3b5e;
  #L1a3b5c.  v4:= length @variable v1;
  #L1a3b5e.  call temp:= `create`(v0, v1, v2, v3, v4) @signature `Lokhttp3/RequestBody$Companion;.create:([BLokhttp3/MediaType;II)Lokhttp3/RequestBody;` @kind virtual;
  #L1a3b64.  v0:= temp @kind object;
  #L1a3b66.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v1 @kind this, `java.io.File` v2 @kind object, `okhttp3.MediaType` v3 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create:(Ljava/io/File;Lokhttp3/MediaType;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a3cc0.  v0:= "$this$asRequestBody" @kind object;
  #L1a3cc4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3cca.  v0:= new `okhttp3.RequestBody$Companion$asRequestBody$1`;
  #L1a3cce.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/RequestBody$Companion$asRequestBody$1;.<init>:(Ljava/io/File;Lokhttp3/MediaType;)V` @kind direct;
  #L1a3cd4.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v3 @kind this, `java.lang.String` v4 @kind object, `okhttp3.MediaType` v5 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create:(Ljava/lang/String;Lokhttp3/MediaType;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1a3ce8.  v0:= "$this$toRequestBody" @kind object;
  #L1a3cec.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3cf2.  v0:= `@@kotlin.text.Charsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L1a3cf6.  if v5 == 0 then goto L1a3d3c;
  #L1a3cfa.  v0:= 1I;
  #L1a3cfc.  v1:= 0I;
  #L1a3cfe.  call temp:= `charset$default`(v5, v1, v0, v1) @signature `Lokhttp3/MediaType;.charset$default:(Lokhttp3/MediaType;Ljava/nio/charset/Charset;ILjava/lang/Object;)Ljava/nio/charset/Charset;` @kind static;
  #L1a3d04.  v0:= temp @kind object;
  #L1a3d06.  if v0 != 0 then goto L1a3d3c;
  #L1a3d0a.  v0:= `@@kotlin.text.Charsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L1a3d0e.  v1:= `@@okhttp3.MediaType.Companion` @type ^`okhttp3.MediaType$Companion` @kind object;
  #L1a3d12.  v2:= new `java.lang.StringBuilder`;
  #L1a3d16.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a3d1c.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a3d22.  v5:= "; charset=utf-8" @kind object;
  #L1a3d26.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a3d2c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a3d32.  v5:= temp @kind object;
  #L1a3d34.  call temp:= `parse`(v1, v5) @signature `Lokhttp3/MediaType$Companion;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L1a3d3a.  v5:= temp @kind object;
  #L1a3d3c.  call temp:= `getBytes`(v4, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L1a3d42.  v4:= temp @kind object;
  #L1a3d44.  v0:= "(this as java.lang.String).getBytes(charset)" @kind object;
  #L1a3d48.  call `checkNotNullExpressionValue`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3d4e.  v0:= 0I;
  #L1a3d50.  v1:= length @variable v4;
  #L1a3d52.  call temp:= `create`(v3, v4, v5, v0, v1) @signature `Lokhttp3/RequestBody$Companion;.create:([BLokhttp3/MediaType;II)Lokhttp3/RequestBody;` @kind virtual;
  #L1a3d58.  v4:= temp @kind object;
  #L1a3d5a.  return v4 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v1 @kind this, `okhttp3.MediaType` v2 @kind object, `java.io.File` v3 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokhttp3/MediaType;Ljava/io/File;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a3de8.  v0:= "file" @kind object;
  #L1a3dec.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3df2.  call temp:= `create`(v1, v3, v2) @signature `Lokhttp3/RequestBody$Companion;.create:(Ljava/io/File;Lokhttp3/MediaType;)Lokhttp3/RequestBody;` @kind virtual;
  #L1a3df8.  v2:= temp @kind object;
  #L1a3dfa.  return v2 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v1 @kind this, `okhttp3.MediaType` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a3e0c.  v0:= "content" @kind object;
  #L1a3e10.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3e16.  call temp:= `create`(v1, v3, v2) @signature `Lokhttp3/RequestBody$Companion;.create:(Ljava/lang/String;Lokhttp3/MediaType;)Lokhttp3/RequestBody;` @kind virtual;
  #L1a3e1c.  v2:= temp @kind object;
  #L1a3e1e.  return v2 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v1 @kind this, `okhttp3.MediaType` v2 @kind object, `okio.ByteString` v3 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokhttp3/MediaType;Lokio/ByteString;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a3e30.  v0:= "content" @kind object;
  #L1a3e34.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3e3a.  call temp:= `create`(v1, v3, v2) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokio/ByteString;Lokhttp3/MediaType;)Lokhttp3/RequestBody;` @kind virtual;
  #L1a3e40.  v2:= temp @kind object;
  #L1a3e42.  return v2 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v7 @kind this, `okhttp3.MediaType` v8 @kind object, `byte`[] v9 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokhttp3/MediaType;[B)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a3d6c.  v3:= 0I;
  #L1a3d6e.  v4:= 0I;
  #L1a3d70.  v5:= 12I;
  #L1a3d74.  v6:= 0I;
  #L1a3d76.  v0:= v7 @kind object;
  #L1a3d78.  v1:= v8 @kind object;
  #L1a3d7a.  v2:= v9 @kind object;
  #L1a3d7c.  call temp:= `create$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;Lokhttp3/MediaType;[BIIILjava/lang/Object;)Lokhttp3/RequestBody;` @kind static;
  #L1a3d82.  v8:= temp @kind object;
  #L1a3d84.  return v8 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v7 @kind this, `okhttp3.MediaType` v8 @kind object, `byte`[] v9 @kind object, `int` v10 ) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokhttp3/MediaType;[BI)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a3d98.  v4:= 0I;
  #L1a3d9a.  v5:= 8I;
  #L1a3d9e.  v6:= 0I;
  #L1a3da0.  v0:= v7 @kind object;
  #L1a3da2.  v1:= v8 @kind object;
  #L1a3da4.  v2:= v9 @kind object;
  #L1a3da6.  v3:= v10;
  #L1a3da8.  call temp:= `create$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;Lokhttp3/MediaType;[BIIILjava/lang/Object;)Lokhttp3/RequestBody;` @kind static;
  #L1a3dae.  v8:= temp @kind object;
  #L1a3db0.  return v8 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v1 @kind this, `okhttp3.MediaType` v2 @kind object, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokhttp3/MediaType;[BII)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a3dc4.  v0:= "content" @kind object;
  #L1a3dc8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3dce.  call temp:= `create`(v1, v3, v2, v4, v5) @signature `Lokhttp3/RequestBody$Companion;.create:([BLokhttp3/MediaType;II)Lokhttp3/RequestBody;` @kind virtual;
  #L1a3dd4.  v2:= temp @kind object;
  #L1a3dd6.  return v2 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v1 @kind this, `okio.ByteString` v2 @kind object, `okhttp3.MediaType` v3 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create:(Lokio/ByteString;Lokhttp3/MediaType;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a3e54.  v0:= "$this$toRequestBody" @kind object;
  #L1a3e58.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3e5e.  v0:= new `okhttp3.RequestBody$Companion$toRequestBody$1`;
  #L1a3e62.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/RequestBody$Companion$toRequestBody$1;.<init>:(Lokio/ByteString;Lokhttp3/MediaType;)V` @kind direct;
  #L1a3e68.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v7 @kind this, `byte`[] v8 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create:([B)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a3c14.  v2:= 0I;
  #L1a3c16.  v3:= 0I;
  #L1a3c18.  v4:= 0I;
  #L1a3c1a.  v5:= 7I;
  #L1a3c1c.  v6:= 0I;
  #L1a3c1e.  v0:= v7 @kind object;
  #L1a3c20.  v1:= v8 @kind object;
  #L1a3c22.  call temp:= `create$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;[BLokhttp3/MediaType;IIILjava/lang/Object;)Lokhttp3/RequestBody;` @kind static;
  #L1a3c28.  v8:= temp @kind object;
  #L1a3c2a.  return v8 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v7 @kind this, `byte`[] v8 @kind object, `okhttp3.MediaType` v9 @kind object) @signature `Lokhttp3/RequestBody$Companion;.create:([BLokhttp3/MediaType;)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a3c3c.  v3:= 0I;
  #L1a3c3e.  v4:= 0I;
  #L1a3c40.  v5:= 6I;
  #L1a3c42.  v6:= 0I;
  #L1a3c44.  v0:= v7 @kind object;
  #L1a3c46.  v1:= v8 @kind object;
  #L1a3c48.  v2:= v9 @kind object;
  #L1a3c4a.  call temp:= `create$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;[BLokhttp3/MediaType;IIILjava/lang/Object;)Lokhttp3/RequestBody;` @kind static;
  #L1a3c50.  v8:= temp @kind object;
  #L1a3c52.  return v8 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v7 @kind this, `byte`[] v8 @kind object, `okhttp3.MediaType` v9 @kind object, `int` v10 ) @signature `Lokhttp3/RequestBody$Companion;.create:([BLokhttp3/MediaType;I)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a3c64.  v4:= 0I;
  #L1a3c66.  v5:= 4I;
  #L1a3c68.  v6:= 0I;
  #L1a3c6a.  v0:= v7 @kind object;
  #L1a3c6c.  v1:= v8 @kind object;
  #L1a3c6e.  v2:= v9 @kind object;
  #L1a3c70.  v3:= v10;
  #L1a3c72.  call temp:= `create$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;[BLokhttp3/MediaType;IIILjava/lang/Object;)Lokhttp3/RequestBody;` @kind static;
  #L1a3c78.  v8:= temp @kind object;
  #L1a3c7a.  return v8 @kind object;
}
procedure `okhttp3.RequestBody` `create`(`okhttp3.RequestBody$Companion` v7 @kind this, `byte`[] v8 @kind object, `okhttp3.MediaType` v9 @kind object, `int` v10 , `int` v11 ) @signature `Lokhttp3/RequestBody$Companion;.create:([BLokhttp3/MediaType;II)Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a3c8c.  v0:= "$this$toRequestBody" @kind object;
  #L1a3c90.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3c96.  v0:= length @variable v8;
  #L1a3c98.  v1:= (`long`) v0 @kind i2l;
  #L1a3c9a.  v3:= (`long`) v10 @kind i2l;
  #L1a3c9c.  v5:= (`long`) v11 @kind i2l;
  #L1a3c9e.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Lokhttp3/internal/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L1a3ca4.  v0:= new `okhttp3.RequestBody$Companion$toRequestBody$2`;
  #L1a3ca8.  call `<init>`(v0, v8, v9, v11, v10) @signature `Lokhttp3/RequestBody$Companion$toRequestBody$2;.<init>:([BLokhttp3/MediaType;II)V` @kind direct;
  #L1a3cae.  return v0 @kind object;
}
