record `okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1` v0 @kind this) @signature `Lokhttp3/CipherSuite$Companion$ORDER_BY_NAME$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L196d34.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L196d3a.  return @kind void;
}
procedure `int` `compare`(`okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/CipherSuite$Companion$ORDER_BY_NAME$1;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L196c7c.  v1:= (`java.lang.String`) v1 @kind object;
  #L196c80.  v2:= (`java.lang.String`) v2 @kind object;
  #L196c84.  call temp:= `compare`(v0, v1, v2) @signature `Lokhttp3/CipherSuite$Companion$ORDER_BY_NAME$1;.compare:(Ljava/lang/String;Ljava/lang/String;)I` @kind virtual;
  #L196c8a.  v1:= temp;
  #L196c8c.  return v1;
}
procedure `int` `compare`(`okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lokhttp3/CipherSuite$Companion$ORDER_BY_NAME$1;.compare:(Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L196ca0.  v0:= "a" @kind object;
  #L196ca4.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L196caa.  v0:= "b" @kind object;
  #L196cae.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L196cb4.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L196cba.  v0:= temp;
  #L196cbc.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L196cc2.  v1:= temp;
  #L196cc4.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L196cca.  v0:= temp;
  #L196ccc.  v1:= 4I;
  #L196cce.  v2:= -1I;
  #L196cd0.  v3:= 1I;
  #L196cd2.  if v1 >= v0 then goto L196d02;
  #L196cd6.  call temp:= `charAt`(v7, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L196cdc.  v4:= temp;
  #L196cde.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L196ce4.  v5:= temp;
  #L196ce6.  if v4 == v5 then goto L196cfc;
  #L196cea.  call temp:= `compare`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L196cf0.  v7:= temp;
  #L196cf2.  if v7 >= 0 then goto L196cf8;
  #L196cf6.  goto L196cfa;
  #L196cf8.  v2:= 1I;
  #L196cfa.  return v2;
  #L196cfc.  v1:= v1 + 1;
  #L196d00.  goto L196cce;
  #L196d02.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L196d08.  v7:= temp;
  #L196d0a.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L196d10.  v8:= temp;
  #L196d12.  if v7 == v8 then goto L196d20;
  #L196d16.  if v7 >= v8 then goto L196d1c;
  #L196d1a.  goto L196d1e;
  #L196d1c.  v2:= 1I;
  #L196d1e.  return v2;
  #L196d20.  v7:= 0I;
  #L196d22.  return v7;
}
