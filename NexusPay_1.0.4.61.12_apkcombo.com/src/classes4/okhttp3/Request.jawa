record `okhttp3.Request` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.CacheControl` `okhttp3.Request.a` @AccessFlag PRIVATE;
  `okhttp3.HttpUrl` `okhttp3.Request.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Request.c` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Request.d` @AccessFlag PRIVATE_FINAL;
  `okhttp3.RequestBody` `okhttp3.Request.e` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `okhttp3.Request.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Request` v1 @kind this, `okhttp3.HttpUrl` v2 @kind object, `java.lang.String` v3 @kind object, `okhttp3.Headers` v4 @kind object, `okhttp3.RequestBody` v5 @kind object, `java.util.Map` v6 @kind object) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/HttpUrl;Ljava/lang/String;Lokhttp3/Headers;Lokhttp3/RequestBody;Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a4424.  v0:= "url" @kind object;
  #L1a4428.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a442e.  v0:= "method" @kind object;
  #L1a4432.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a4438.  v0:= "headers" @kind object;
  #L1a443c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a4442.  v0:= "tags" @kind object;
  #L1a4446.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a444c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a4452.  v1.`okhttp3.Request.b` @type ^`okhttp3.HttpUrl` := v2 @kind object;
  #L1a4456.  v1.`okhttp3.Request.c` @type ^`java.lang.String` := v3 @kind object;
  #L1a445a.  v1.`okhttp3.Request.d` @type ^`okhttp3.Headers` := v4 @kind object;
  #L1a445e.  v1.`okhttp3.Request.e` @type ^`okhttp3.RequestBody` := v5 @kind object;
  #L1a4462.  v1.`okhttp3.Request.f` @type ^`java.util.Map` := v6 @kind object;
  #L1a4466.  return @kind void;
}
procedure `okhttp3.RequestBody` `-deprecated_body`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.-deprecated_body:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a43f4.  v0:= v1.`okhttp3.Request.e` @type ^`okhttp3.RequestBody` @kind object;
  #L1a43f8.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `-deprecated_cacheControl`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.-deprecated_cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a432c.  call temp:= `cacheControl`(v1) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1a4332.  v0:= temp @kind object;
  #L1a4334.  return v0 @kind object;
}
procedure `okhttp3.Headers` `-deprecated_headers`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.-deprecated_headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a4378.  v0:= v1.`okhttp3.Request.d` @type ^`okhttp3.Headers` @kind object;
  #L1a437c.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_method`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.-deprecated_method:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a4174.  v0:= v1.`okhttp3.Request.c` @type ^`java.lang.String` @kind object;
  #L1a4178.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `-deprecated_url`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.-deprecated_url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a43a8.  v0:= v1.`okhttp3.Request.b` @type ^`okhttp3.HttpUrl` @kind object;
  #L1a43ac.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `body`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a440c.  v0:= v1.`okhttp3.Request.e` @type ^`okhttp3.RequestBody` @kind object;
  #L1a4410.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `cacheControl`(`okhttp3.Request` v2 @kind this) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1a4348.  v0:= v2.`okhttp3.Request.a` @type ^`okhttp3.CacheControl` @kind object;
  #L1a434c.  if v0 != 0 then goto L1a4364;
  #L1a4350.  v0:= `@@okhttp3.CacheControl.Companion` @type ^`okhttp3.CacheControl$Companion` @kind object;
  #L1a4354.  v1:= v2.`okhttp3.Request.d` @type ^`okhttp3.Headers` @kind object;
  #L1a4358.  call temp:= `parse`(v0, v1) @signature `Lokhttp3/CacheControl$Companion;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @kind virtual;
  #L1a435e.  v0:= temp @kind object;
  #L1a4360.  v2.`okhttp3.Request.a` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L1a4364.  return v0 @kind object;
}
procedure `java.util.Map` `getTags$okhttp`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.getTags$okhttp:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a4314.  v0:= v1.`okhttp3.Request.f` @type ^`java.util.Map` @kind object;
  #L1a4318.  return v0 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Request` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a418c.  v0:= "name" @kind object;
  #L1a4190.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a4196.  v0:= v1.`okhttp3.Request.d` @type ^`okhttp3.Headers` @kind object;
  #L1a419a.  call temp:= `get`(v0, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1a41a0.  v2:= temp @kind object;
  #L1a41a2.  return v2 @kind object;
}
procedure `java.util.List` `headers`(`okhttp3.Request` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Request;.headers:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a42ec.  v0:= "name" @kind object;
  #L1a42f0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a42f6.  v0:= v1.`okhttp3.Request.d` @type ^`okhttp3.Headers` @kind object;
  #L1a42fa.  call temp:= `values`(v0, v2) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L1a4300.  v2:= temp @kind object;
  #L1a4302.  return v2 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a4390.  v0:= v1.`okhttp3.Request.d` @type ^`okhttp3.Headers` @kind object;
  #L1a4394.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.isHttps:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a4104.  v0:= v1.`okhttp3.Request.b` @type ^`okhttp3.HttpUrl` @kind object;
  #L1a4108.  call temp:= `isHttps`(v0) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @kind virtual;
  #L1a410e.  v0:= temp;
  #L1a4110.  return v0;
}
procedure `java.lang.String` `method`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a41b4.  v0:= v1.`okhttp3.Request.c` @type ^`java.lang.String` @kind object;
  #L1a41b8.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `newBuilder`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a43d8.  v0:= new `okhttp3.Request$Builder`;
  #L1a43dc.  call `<init>`(v0, v1) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;)V` @kind direct;
  #L1a43e2.  return v0 @kind object;
}
procedure `java.lang.Object` `tag`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.tag:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a4124.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L1a4128.  call temp:= `tag`(v1, v0) @signature `Lokhttp3/Request;.tag:(Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L1a412e.  v0:= temp @kind object;
  #L1a4130.  return v0 @kind object;
}
procedure `java.lang.Object` `tag`(`okhttp3.Request` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lokhttp3/Request;.tag:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a4144.  v0:= "type" @kind object;
  #L1a4148.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a414e.  v0:= v1.`okhttp3.Request.f` @type ^`java.util.Map` @kind object;
  #L1a4152.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a4158.  v0:= temp @kind object;
  #L1a415a.  call temp:= `cast`(v2, v0) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a4160.  v2:= temp @kind object;
  #L1a4162.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Request` v6 @kind this) @signature `Lokhttp3/Request;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1a41cc.  v0:= new `java.lang.StringBuilder`;
  #L1a41d0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a41d6.  v1:= "Request{method=" @kind object;
  #L1a41da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a41e0.  v1:= v6.`okhttp3.Request.c` @type ^`java.lang.String` @kind object;
  #L1a41e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a41ea.  v1:= ", url=" @kind object;
  #L1a41ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a41f4.  v1:= v6.`okhttp3.Request.b` @type ^`okhttp3.HttpUrl` @kind object;
  #L1a41f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a41fe.  v1:= v6.`okhttp3.Request.d` @type ^`okhttp3.Headers` @kind object;
  #L1a4202.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1a4208.  v1:= temp;
  #L1a420a.  if v1 == 0 then goto L1a4296;
  #L1a420e.  v1:= ", headers=[" @kind object;
  #L1a4212.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4218.  v1:= v6.`okhttp3.Request.d` @type ^`okhttp3.Headers` @kind object;
  #L1a421c.  v2:= 0I;
  #L1a421e.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1a4224.  v1:= temp @kind object;
  #L1a4226.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a422c.  v3:= temp;
  #L1a422e.  if v3 == 0 then goto L1a428c;
  #L1a4232.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a4238.  v3:= temp @kind object;
  #L1a423a.  v4:= v2 + 1;
  #L1a423e.  if v2 >= 0 then goto L1a4248;
  #L1a4242.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L1a4248.  v3:= (`kotlin.Pair`) v3 @kind object;
  #L1a424c.  call temp:= `component1`(v3) @signature `Lkotlin/Pair;.component1:()Ljava/lang/Object;` @kind virtual;
  #L1a4252.  v5:= temp @kind object;
  #L1a4254.  v5:= (`java.lang.String`) v5 @kind object;
  #L1a4258.  call temp:= `component2`(v3) @signature `Lkotlin/Pair;.component2:()Ljava/lang/Object;` @kind virtual;
  #L1a425e.  v3:= temp @kind object;
  #L1a4260.  v3:= (`java.lang.String`) v3 @kind object;
  #L1a4264.  if v2 <= 0 then goto L1a4272;
  #L1a4268.  v2:= ", " @kind object;
  #L1a426c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4272.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4278.  v2:= 58I;
  #L1a427c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4282.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4288.  v2:= v4;
  #L1a428a.  goto L1a4226;
  #L1a428c.  v1:= 93I;
  #L1a4290.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4296.  v1:= v6.`okhttp3.Request.f` @type ^`java.util.Map` @kind object;
  #L1a429a.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L1a42a0.  v1:= temp;
  #L1a42a2.  v1:= v1 ^~ 1;
  #L1a42a6.  if v1 == 0 then goto L1a42be;
  #L1a42aa.  v1:= ", tags=" @kind object;
  #L1a42ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a42b4.  v1:= v6.`okhttp3.Request.f` @type ^`java.util.Map` @kind object;
  #L1a42b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a42be.  v1:= 125I;
  #L1a42c2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a42c8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a42ce.  v0:= temp @kind object;
  #L1a42d0.  v1:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L1a42d4.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a42da.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `url`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a43c0.  v0:= v1.`okhttp3.Request.b` @type ^`okhttp3.HttpUrl` @kind object;
  #L1a43c4.  return v0 @kind object;
}
