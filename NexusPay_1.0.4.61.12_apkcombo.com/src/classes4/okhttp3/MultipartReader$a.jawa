record `okhttp3.MultipartReader$a` @kind class @AccessFlag FINAL extends `okio.Source` @kind interface {
  `okio.Timeout` `okhttp3.MultipartReader$a.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MultipartReader` `okhttp3.MultipartReader$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.MultipartReader$a` v0 @kind this, `okhttp3.MultipartReader` v1 @kind object) @signature `Lokhttp3/MultipartReader$a;.<init>:(Lokhttp3/MultipartReader;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1a0c1c.  v0.`okhttp3.MultipartReader$a.b` @type ^`okhttp3.MultipartReader` := v1 @kind object;
  #L1a0c20.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a0c26.  v1:= new `okio.Timeout`;
  #L1a0c2a.  call `<init>`(v1) @signature `Lokio/Timeout;.<init>:()V` @kind direct;
  #L1a0c30.  v0.`okhttp3.MultipartReader$a.a` @type ^`okio.Timeout` := v1 @kind object;
  #L1a0c34.  return @kind void;
}
procedure `void` `close`(`okhttp3.MultipartReader$a` v2 @kind this) @signature `Lokhttp3/MultipartReader$a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a0c48.  v0:= v2.`okhttp3.MultipartReader$a.b` @type ^`okhttp3.MultipartReader` @kind object;
  #L1a0c4c.  call temp:= `access$getCurrentPart$p`(v0) @signature `Lokhttp3/MultipartReader;.access$getCurrentPart$p:(Lokhttp3/MultipartReader;)Lokhttp3/MultipartReader$a;` @kind static;
  #L1a0c52.  v0:= temp @kind object;
  #L1a0c54.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a0c5a.  v0:= temp;
  #L1a0c5c.  if v0 == 0 then goto L1a0c6c;
  #L1a0c60.  v0:= v2.`okhttp3.MultipartReader$a.b` @type ^`okhttp3.MultipartReader` @kind object;
  #L1a0c64.  v1:= 0I;
  #L1a0c66.  call `access$setCurrentPart$p`(v0, v1) @signature `Lokhttp3/MultipartReader;.access$setCurrentPart$p:(Lokhttp3/MultipartReader;Lokhttp3/MultipartReader$a;)V` @kind static;
  #L1a0c6c.  return @kind void;
}
procedure `long` `read`(`okhttp3.MultipartReader$a` v15 @kind this, `okio.Buffer` v16 @kind object, `long` v17 ) @signature `Lokhttp3/MultipartReader$a;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L1a09cc.  v1:= v15 @kind object;
  #L1a09ce.  v0:= v16 @kind object;
  #L1a09d2.  v2:= v17 @kind wide;
  #L1a09d6.  v4:= "sink" @kind object;
  #L1a09da.  call `checkNotNullParameter`(v0, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a09e0.  v4:= 0L;
  #L1a09e4.  v6:= lcmp(v2, v4);
  #L1a09e8.  if v6 < 0 then goto L1a09f0;
  #L1a09ec.  v6:= 1I;
  #L1a09ee.  goto L1a09f2;
  #L1a09f0.  v6:= 0I;
  #L1a09f2.  if v6 == 0 then goto L1a0ba4;
  #L1a09f6.  v6:= v1.`okhttp3.MultipartReader$a.b` @type ^`okhttp3.MultipartReader` @kind object;
  #L1a09fa.  call temp:= `access$getCurrentPart$p`(v6) @signature `Lokhttp3/MultipartReader;.access$getCurrentPart$p:(Lokhttp3/MultipartReader;)Lokhttp3/MultipartReader$a;` @kind static;
  #L1a0a00.  v6:= temp @kind object;
  #L1a0a02.  call temp:= `areEqual`(v6, v15) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a0a08.  v6:= temp;
  #L1a0a0a.  if v6 == 0 then goto L1a0b8c;
  #L1a0a0e.  v6:= v1.`okhttp3.MultipartReader$a.b` @type ^`okhttp3.MultipartReader` @kind object;
  #L1a0a12.  call temp:= `access$getSource$p`(v6) @signature `Lokhttp3/MultipartReader;.access$getSource$p:(Lokhttp3/MultipartReader;)Lokio/BufferedSource;` @kind static;
  #L1a0a18.  v6:= temp @kind object;
  #L1a0a1a.  call temp:= `timeout`(v6) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L1a0a20.  v6:= temp @kind object;
  #L1a0a22.  v7:= v1.`okhttp3.MultipartReader$a.a` @type ^`okio.Timeout` @kind object;
  #L1a0a26.  call temp:= `timeoutNanos`(v6) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L1a0a2c.  v8:= temp @kind wide;
  #L1a0a2e.  v10:= `@@okio.Timeout.Companion` @type ^`okio.Timeout$Companion` @kind object;
  #L1a0a32.  call temp:= `timeoutNanos`(v7) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L1a0a38.  v11:= temp @kind wide;
  #L1a0a3a.  call temp:= `timeoutNanos`(v6) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L1a0a40.  v13:= temp @kind wide;
  #L1a0a42.  call temp:= `minTimeout`(v10, v11, v13) @signature `Lokio/Timeout$Companion;.minTimeout:(JJ)J` @kind virtual;
  #L1a0a48.  v10:= temp @kind wide;
  #L1a0a4a.  v12:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a0a4e.  call temp:= `timeout`(v6, v10, v12) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1a0a54.  call temp:= `hasDeadline`(v6) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1a0a5a.  v10:= temp;
  #L1a0a5c.  if v10 == 0 then goto L1a0b02;
  #L1a0a60.  call temp:= `deadlineNanoTime`(v6) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1a0a66.  v13:= temp @kind wide;
  #L1a0a68.  call temp:= `hasDeadline`(v7) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1a0a6e.  v10:= temp;
  #L1a0a70.  if v10 == 0 then goto L1a0a92;
  #L1a0a74.  call temp:= `deadlineNanoTime`(v6) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1a0a7a.  v11:= temp @kind wide;
  #L1a0a7c.  call temp:= `deadlineNanoTime`(v7) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1a0a82.  v4:= temp @kind wide;
  #L1a0a84.  call temp:= `min`(v11, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1a0a8a.  v4:= temp @kind wide;
  #L1a0a8c.  call temp:= `deadlineNanoTime`(v6, v4) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1a0a92.  v4:= v1.`okhttp3.MultipartReader$a.b` @type ^`okhttp3.MultipartReader` @kind object;
  #L1a0a96.  call temp:= `access$currentPartBytesRemaining`(v4, v2) @signature `Lokhttp3/MultipartReader;.access$currentPartBytesRemaining:(Lokhttp3/MultipartReader;J)J` @kind static;
  #L1a0a9c.  v2:= temp @kind wide;
  #L1a0a9e.  v4:= 0L;
  #L1a0aa2.  v10:= lcmp(v2, v4);
  #L1a0aa6.  if v10 != 0 then goto L1a0ab0;
  #L1a0aaa.  v11:= -1L;
  #L1a0aae.  goto L1a0ac4;
  #L1a0ab0.  v4:= v1.`okhttp3.MultipartReader$a.b` @type ^`okhttp3.MultipartReader` @kind object;
  #L1a0ab4.  call temp:= `access$getSource$p`(v4) @signature `Lokhttp3/MultipartReader;.access$getSource$p:(Lokhttp3/MultipartReader;)Lokio/BufferedSource;` @kind static;
  #L1a0aba.  v4:= temp @kind object;
  #L1a0abc.  call temp:= `read`(v4, v0, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1a0ac2.  v11:= temp @kind wide;
  #L1a0ac4.  v0:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a0ac8.  call temp:= `timeout`(v6, v8, v0) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1a0ace.  call temp:= `hasDeadline`(v7) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1a0ad4.  v0:= temp;
  #L1a0ad6.  if v0 == 0 then goto L1a0ae0;
  #L1a0ada.  call temp:= `deadlineNanoTime`(v6, v13) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1a0ae0.  return v11 @kind wide;
  #L1a0ae2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a0ae4.  v2:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a0ae8.  call temp:= `timeout`(v6, v8, v2) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1a0aee.  call temp:= `hasDeadline`(v7) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1a0af4.  v2:= temp;
  #L1a0af6.  if v2 == 0 then goto L1a0b00;
  #L1a0afa.  call temp:= `deadlineNanoTime`(v6, v13) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1a0b00.  throw v0;
  #L1a0b02.  call temp:= `hasDeadline`(v7) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1a0b08.  v4:= temp;
  #L1a0b0a.  if v4 == 0 then goto L1a0b1c;
  #L1a0b0e.  call temp:= `deadlineNanoTime`(v7) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1a0b14.  v4:= temp @kind wide;
  #L1a0b16.  call temp:= `deadlineNanoTime`(v6, v4) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1a0b1c.  v4:= v1.`okhttp3.MultipartReader$a.b` @type ^`okhttp3.MultipartReader` @kind object;
  #L1a0b20.  call temp:= `access$currentPartBytesRemaining`(v4, v2) @signature `Lokhttp3/MultipartReader;.access$currentPartBytesRemaining:(Lokhttp3/MultipartReader;J)J` @kind static;
  #L1a0b26.  v2:= temp @kind wide;
  #L1a0b28.  v4:= 0L;
  #L1a0b2c.  v10:= lcmp(v2, v4);
  #L1a0b30.  if v10 != 0 then goto L1a0b3a;
  #L1a0b34.  v11:= -1L;
  #L1a0b38.  goto L1a0b4e;
  #L1a0b3a.  v4:= v1.`okhttp3.MultipartReader$a.b` @type ^`okhttp3.MultipartReader` @kind object;
  #L1a0b3e.  call temp:= `access$getSource$p`(v4) @signature `Lokhttp3/MultipartReader;.access$getSource$p:(Lokhttp3/MultipartReader;)Lokio/BufferedSource;` @kind static;
  #L1a0b44.  v4:= temp @kind object;
  #L1a0b46.  call temp:= `read`(v4, v0, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1a0b4c.  v11:= temp @kind wide;
  #L1a0b4e.  v0:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a0b52.  call temp:= `timeout`(v6, v8, v0) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1a0b58.  call temp:= `hasDeadline`(v7) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1a0b5e.  v0:= temp;
  #L1a0b60.  if v0 == 0 then goto L1a0b6a;
  #L1a0b64.  call temp:= `clearDeadline`(v6) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L1a0b6a.  return v11 @kind wide;
  #L1a0b6c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a0b6e.  v2:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a0b72.  call temp:= `timeout`(v6, v8, v2) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1a0b78.  call temp:= `hasDeadline`(v7) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1a0b7e.  v2:= temp;
  #L1a0b80.  if v2 == 0 then goto L1a0b8a;
  #L1a0b84.  call temp:= `clearDeadline`(v6) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L1a0b8a.  throw v0;
  #L1a0b8c.  v0:= new `java.lang.IllegalStateException`;
  #L1a0b90.  v2:= "closed" @kind object;
  #L1a0b94.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a0b9a.  v2:= temp @kind object;
  #L1a0b9c.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a0ba2.  throw v0;
  #L1a0ba4.  v0:= new `java.lang.StringBuilder`;
  #L1a0ba8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a0bae.  v4:= "byteCount < 0: " @kind object;
  #L1a0bb2.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a0bb8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a0bbe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a0bc4.  v0:= temp @kind object;
  #L1a0bc6.  v2:= new `java.lang.IllegalArgumentException`;
  #L1a0bca.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a0bd0.  v0:= temp @kind object;
  #L1a0bd2.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a0bd8.  throw v2;
  catch `java.lang.Throwable` @[L1a0a92..L1a0ac4] goto L1a0ae2;
  catch `java.lang.Throwable` @[L1a0b1c..L1a0b4e] goto L1a0b6c;
}
procedure `okio.Timeout` `timeout`(`okhttp3.MultipartReader$a` v1 @kind this) @signature `Lokhttp3/MultipartReader$a;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a0c04.  v0:= v1.`okhttp3.MultipartReader$a.a` @type ^`okio.Timeout` @kind object;
  #L1a0c08.  return v0 @kind object;
}
