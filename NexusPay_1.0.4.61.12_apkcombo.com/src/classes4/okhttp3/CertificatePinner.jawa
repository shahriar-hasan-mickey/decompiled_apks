record `okhttp3.CertificatePinner` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `okhttp3.CertificatePinner.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.tls.CertificateChainCleaner` `okhttp3.CertificatePinner.b` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.CertificatePinner$Companion` `@@okhttp3.CertificatePinner.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.CertificatePinner` `@@okhttp3.CertificatePinner.DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/CertificatePinner;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L196604.  v0:= new `okhttp3.CertificatePinner$Companion`;
  #L196608.  v1:= 0I;
  #L19660a.  call `<init>`(v0, v1) @signature `Lokhttp3/CertificatePinner$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L196610.  `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` := v0 @kind object;
  #L196614.  v0:= new `okhttp3.CertificatePinner$Builder`;
  #L196618.  call `<init>`(v0) @signature `Lokhttp3/CertificatePinner$Builder;.<init>:()V` @kind direct;
  #L19661e.  call temp:= `build`(v0) @signature `Lokhttp3/CertificatePinner$Builder;.build:()Lokhttp3/CertificatePinner;` @kind virtual;
  #L196624.  v0:= temp @kind object;
  #L196626.  `@@okhttp3.CertificatePinner.DEFAULT` @type ^`okhttp3.CertificatePinner` := v0 @kind object;
  #L19662a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.CertificatePinner` v1 @kind this, `java.util.Set` v2 @kind object, `okhttp3.internal.tls.CertificateChainCleaner` v3 @kind object) @signature `Lokhttp3/CertificatePinner;.<init>:(Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19663c.  v0:= "pins" @kind object;
  #L196640.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L196646.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19664c.  v1.`okhttp3.CertificatePinner.a` @type ^`java.util.Set` := v2 @kind object;
  #L196650.  v1.`okhttp3.CertificatePinner.b` @type ^`okhttp3.internal.tls.CertificateChainCleaner` := v3 @kind object;
  #L196654.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.CertificatePinner` v0 @kind this, `java.util.Set` v1 @kind object, `okhttp3.internal.tls.CertificateChainCleaner` v2 @kind object, `int` v3 , `kotlin.jvm.internal.DefaultConstructorMarker` v4 @kind object) @signature `Lokhttp3/CertificatePinner;.<init>:(Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L196668.  v3:= v3 ^& 2;
  #L19666c.  if v3 == 0 then goto L196672;
  #L196670.  v2:= 0I;
  #L196672.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/CertificatePinner;.<init>:(Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;)V` @kind direct;
  #L196678.  return @kind void;
}
procedure `java.lang.String` `pin`(`java.security.cert.Certificate` v1 @kind object) @signature `Lokhttp3/CertificatePinner;.pin:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1964a4.  v0:= `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` @kind object;
  #L1964a8.  call temp:= `pin`(v0, v1) @signature `Lokhttp3/CertificatePinner$Companion;.pin:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind virtual;
  #L1964ae.  v1:= temp @kind object;
  #L1964b0.  return v1 @kind object;
}
procedure `okio.ByteString` `sha1Hash`(`java.security.cert.X509Certificate` v1 @kind object) @signature `Lokhttp3/CertificatePinner;.sha1Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1965c4.  v0:= `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` @kind object;
  #L1965c8.  call temp:= `sha1Hash`(v0, v1) @signature `Lokhttp3/CertificatePinner$Companion;.sha1Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind virtual;
  #L1965ce.  v1:= temp @kind object;
  #L1965d0.  return v1 @kind object;
}
procedure `okio.ByteString` `sha256Hash`(`java.security.cert.X509Certificate` v1 @kind object) @signature `Lokhttp3/CertificatePinner;.sha256Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1965e4.  v0:= `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` @kind object;
  #L1965e8.  call temp:= `sha256Hash`(v0, v1) @signature `Lokhttp3/CertificatePinner$Companion;.sha256Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind virtual;
  #L1965ee.  v1:= temp @kind object;
  #L1965f0.  return v1 @kind object;
}
procedure `void` `check`(`okhttp3.CertificatePinner` v1 @kind this, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lokhttp3/CertificatePinner;.check:(Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1968fc.  v0:= "hostname" @kind object;
  #L196900.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L196906.  v0:= "peerCertificates" @kind object;
  #L19690a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L196910.  v0:= new `okhttp3.CertificatePinner$a`;
  #L196914.  call `<init>`(v0, v1, v3, v2) @signature `Lokhttp3/CertificatePinner$a;.<init>:(Lokhttp3/CertificatePinner;Ljava/util/List;Ljava/lang/String;)V` @kind direct;
  #L19691a.  call `check$okhttp`(v1, v2, v0) @signature `Lokhttp3/CertificatePinner;.check$okhttp:(Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V` @kind virtual;
  #L196920.  return @kind void;
}
procedure `void` `check`(`okhttp3.CertificatePinner` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.Certificate`[] v3 @kind object) @signature `Lokhttp3/CertificatePinner;.check:(Ljava/lang/String;[Ljava/security/cert/Certificate;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1968c8.  v0:= "hostname" @kind object;
  #L1968cc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1968d2.  v0:= "peerCertificates" @kind object;
  #L1968d6.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1968dc.  call temp:= `toList`(v3) @signature `Lkotlin/collections/ArraysKt;.toList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1968e2.  v3:= temp @kind object;
  #L1968e4.  call `check`(v1, v2, v3) @signature `Lokhttp3/CertificatePinner;.check:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L1968ea.  return @kind void;
}
procedure `void` `check$okhttp`(`okhttp3.CertificatePinner` v10 @kind this, `java.lang.String` v11 @kind object, `kotlin.jvm.functions.Function0` v12 @kind object) @signature `Lokhttp3/CertificatePinner;.check$okhttp:(Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L19668c.  v0:= "hostname" @kind object;
  #L196690.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L196696.  v0:= "cleanedPeerCertificatesFn" @kind object;
  #L19669a.  call `checkNotNullParameter`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1966a0.  call temp:= `findMatchingPins`(v10, v11) @signature `Lokhttp3/CertificatePinner;.findMatchingPins:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L1966a6.  v0:= temp @kind object;
  #L1966a8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1966ae.  v1:= temp;
  #L1966b0.  if v1 == 0 then goto L1966b6;
  #L1966b4.  return @kind void;
  #L1966b6.  call temp:= `invoke`(v12) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L1966bc.  v12:= temp @kind object;
  #L1966be.  v12:= (`java.util.List`) v12 @kind object;
  #L1966c2.  call temp:= `iterator`(v12) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1966c8.  v1:= temp @kind object;
  #L1966ca.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1966d0.  v2:= temp;
  #L1966d2.  if v2 == 0 then goto L1967cc;
  #L1966d6.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1966dc.  v2:= temp @kind object;
  #L1966de.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L1966e2.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1966e8.  v3:= temp @kind object;
  #L1966ea.  v4:= 0I;
  #L1966ec.  v5:= v4 @kind object;
  #L1966ee.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1966f4.  v6:= temp;
  #L1966f6.  if v6 == 0 then goto L1966ca;
  #L1966fa.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L196700.  v6:= temp @kind object;
  #L196702.  v6:= (`okhttp3.CertificatePinner$Pin`) v6 @kind object;
  #L196706.  call temp:= `getHashAlgorithm`(v6) @signature `Lokhttp3/CertificatePinner$Pin;.getHashAlgorithm:()Ljava/lang/String;` @kind virtual;
  #L19670c.  v7:= temp @kind object;
  #L19670e.  call temp:= `hashCode`(v7) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L196714.  v8:= temp;
  #L196716.  v9:= -903629273I;
  #L19671c.  if v8 == v9 then goto L196760;
  #L196720.  v9:= 3528965I;
  #L196726.  if v8 != v9 then goto L196796;
  #L19672a.  v8:= "sha1" @kind object;
  #L19672e.  call temp:= `equals`(v7, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L196734.  v7:= temp;
  #L196736.  if v7 == 0 then goto L196796;
  #L19673a.  if v5 != 0 then goto L19674a;
  #L19673e.  v5:= `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` @kind object;
  #L196742.  call temp:= `sha1Hash`(v5, v2) @signature `Lokhttp3/CertificatePinner$Companion;.sha1Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind virtual;
  #L196748.  v5:= temp @kind object;
  #L19674a.  call temp:= `getHash`(v6) @signature `Lokhttp3/CertificatePinner$Pin;.getHash:()Lokio/ByteString;` @kind virtual;
  #L196750.  v6:= temp @kind object;
  #L196752.  call temp:= `areEqual`(v6, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L196758.  v6:= temp;
  #L19675a.  if v6 == 0 then goto L1966ee;
  #L19675e.  return @kind void;
  #L196760.  v8:= "sha256" @kind object;
  #L196764.  call temp:= `equals`(v7, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19676a.  v7:= temp;
  #L19676c.  if v7 == 0 then goto L196796;
  #L196770.  if v4 != 0 then goto L196780;
  #L196774.  v4:= `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` @kind object;
  #L196778.  call temp:= `sha256Hash`(v4, v2) @signature `Lokhttp3/CertificatePinner$Companion;.sha256Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind virtual;
  #L19677e.  v4:= temp @kind object;
  #L196780.  call temp:= `getHash`(v6) @signature `Lokhttp3/CertificatePinner$Pin;.getHash:()Lokio/ByteString;` @kind virtual;
  #L196786.  v6:= temp @kind object;
  #L196788.  call temp:= `areEqual`(v6, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L19678e.  v6:= temp;
  #L196790.  if v6 == 0 then goto L1966ee;
  #L196794.  return @kind void;
  #L196796.  v11:= new `java.lang.AssertionError`;
  #L19679a.  v12:= new `java.lang.StringBuilder`;
  #L19679e.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1967a4.  v0:= "unsupported hashAlgorithm: " @kind object;
  #L1967a8.  call temp:= `append`(v12, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1967ae.  call temp:= `getHashAlgorithm`(v6) @signature `Lokhttp3/CertificatePinner$Pin;.getHashAlgorithm:()Ljava/lang/String;` @kind virtual;
  #L1967b4.  v0:= temp @kind object;
  #L1967b6.  call temp:= `append`(v12, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1967bc.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1967c2.  v12:= temp @kind object;
  #L1967c4.  call `<init>`(v11, v12) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1967ca.  throw v11;
  #L1967cc.  v1:= new `java.lang.StringBuilder`;
  #L1967d0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1967d6.  v2:= "Certificate pinning failure!" @kind object;
  #L1967da.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1967e0.  v2:= "\n  Peer certificate chain:" @kind object;
  #L1967e4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1967ea.  call temp:= `iterator`(v12) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1967f0.  v12:= temp @kind object;
  #L1967f2.  call temp:= `hasNext`(v12) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1967f8.  v2:= temp;
  #L1967fa.  v3:= "\n    " @kind object;
  #L1967fe.  if v2 == 0 then goto L196852;
  #L196802.  call temp:= `next`(v12) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L196808.  v2:= temp @kind object;
  #L19680a.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L19680e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L196814.  v3:= `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` @kind object;
  #L196818.  call temp:= `pin`(v3, v2) @signature `Lokhttp3/CertificatePinner$Companion;.pin:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind virtual;
  #L19681e.  v3:= temp @kind object;
  #L196820.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L196826.  v3:= ": " @kind object;
  #L19682a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L196830.  call temp:= `getSubjectDN`(v2) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L196836.  v2:= temp @kind object;
  #L196838.  v3:= "element.subjectDN" @kind object;
  #L19683c.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L196842.  call temp:= `getName`(v2) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L196848.  v2:= temp @kind object;
  #L19684a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L196850.  goto L1967f2;
  #L196852.  v12:= "\n  Pinned certificates for " @kind object;
  #L196856.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19685c.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L196862.  v11:= ":" @kind object;
  #L196866.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19686c.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L196872.  v11:= temp @kind object;
  #L196874.  call temp:= `hasNext`(v11) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L19687a.  v12:= temp;
  #L19687c.  if v12 == 0 then goto L19689a;
  #L196880.  call temp:= `next`(v11) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L196886.  v12:= temp @kind object;
  #L196888.  v12:= (`okhttp3.CertificatePinner$Pin`) v12 @kind object;
  #L19688c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L196892.  call temp:= `append`(v1, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L196898.  goto L196874;
  #L19689a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1968a0.  v11:= temp @kind object;
  #L1968a2.  v12:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L1968a6.  call `checkNotNullExpressionValue`(v11, v12) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1968ac.  v12:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L1968b0.  call `<init>`(v12, v11) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1968b6.  throw v12;
}
procedure `boolean` `equals`(`okhttp3.CertificatePinner` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/CertificatePinner;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L196418.  v0:= instanceof @variable v3 @type ^`okhttp3.CertificatePinner` @kind boolean;
  #L19641c.  if v0 == 0 then goto L196450;
  #L196420.  v3:= (`okhttp3.CertificatePinner`) v3 @kind object;
  #L196424.  v0:= v3.`okhttp3.CertificatePinner.a` @type ^`java.util.Set` @kind object;
  #L196428.  v1:= v2.`okhttp3.CertificatePinner.a` @type ^`java.util.Set` @kind object;
  #L19642c.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L196432.  v0:= temp;
  #L196434.  if v0 == 0 then goto L196450;
  #L196438.  v3:= v3.`okhttp3.CertificatePinner.b` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L19643c.  v0:= v2.`okhttp3.CertificatePinner.b` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L196440.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L196446.  v3:= temp;
  #L196448.  if v3 == 0 then goto L196450;
  #L19644c.  v3:= 1I;
  #L19644e.  goto L196452;
  #L196450.  v3:= 0I;
  #L196452.  return v3;
}
procedure `java.util.List` `findMatchingPins`(`okhttp3.CertificatePinner` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/CertificatePinner;.findMatchingPins:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1964c4.  v0:= "hostname" @kind object;
  #L1964c8.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1964ce.  v0:= v4.`okhttp3.CertificatePinner.a` @type ^`java.util.Set` @kind object;
  #L1964d2.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L1964d8.  v1:= temp @kind object;
  #L1964da.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1964e0.  v0:= temp @kind object;
  #L1964e2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1964e8.  v2:= temp;
  #L1964ea.  if v2 == 0 then goto L196542;
  #L1964ee.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1964f4.  v2:= temp @kind object;
  #L1964f6.  v3:= v2 @kind object;
  #L1964f8.  v3:= (`okhttp3.CertificatePinner$Pin`) v3 @kind object;
  #L1964fc.  call temp:= `matchesHostname`(v3, v5) @signature `Lokhttp3/CertificatePinner$Pin;.matchesHostname:(Ljava/lang/String;)Z` @kind virtual;
  #L196502.  v3:= temp;
  #L196504.  if v3 == 0 then goto L1964e2;
  #L196508.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L19650e.  v3:= temp;
  #L196510.  if v3 == 0 then goto L19651e;
  #L196514.  v1:= new `java.util.ArrayList`;
  #L196518.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19651e.  if v1 == 0 then goto L196532;
  #L196522.  call temp:= `asMutableList`(v1) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L196528.  v3:= temp @kind object;
  #L19652a.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L196530.  goto L1964e2;
  #L196532.  v5:= new `java.lang.NullPointerException`;
  #L196536.  v0:= "null cannot be cast to non-null type kotlin.collections.MutableList<T>" @kind object;
  #L19653a.  call `<init>`(v5, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L196540.  throw v5;
  #L196542.  return v1 @kind object;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `getCertificateChainCleaner$okhttp`(`okhttp3.CertificatePinner` v1 @kind this) @signature `Lokhttp3/CertificatePinner;.getCertificateChainCleaner$okhttp:()Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1965ac.  v0:= v1.`okhttp3.CertificatePinner.b` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L1965b0.  return v0 @kind object;
}
procedure `java.util.Set` `getPins`(`okhttp3.CertificatePinner` v1 @kind this) @signature `Lokhttp3/CertificatePinner;.getPins:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L196554.  v0:= v1.`okhttp3.CertificatePinner.a` @type ^`java.util.Set` @kind object;
  #L196558.  return v0 @kind object;
}
procedure `int` `hashCode`(`okhttp3.CertificatePinner` v2 @kind this) @signature `Lokhttp3/CertificatePinner;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L196464.  v0:= v2.`okhttp3.CertificatePinner.a` @type ^`java.util.Set` @kind object;
  #L196468.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L19646e.  v0:= temp;
  #L196470.  v1:= 1517I;
  #L196474.  v1:= v1 + v0 @kind int;
  #L196476.  v1:= v1 * 41;
  #L19647a.  v0:= v2.`okhttp3.CertificatePinner.b` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L19647e.  if v0 == 0 then goto L19648c;
  #L196482.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L196488.  v0:= temp;
  #L19648a.  goto L19648e;
  #L19648c.  v0:= 0I;
  #L19648e.  v1:= v1 + v0 @kind int;
  #L196490.  return v1;
}
procedure `okhttp3.CertificatePinner` `withCertificateChainCleaner$okhttp`(`okhttp3.CertificatePinner` v2 @kind this, `okhttp3.internal.tls.CertificateChainCleaner` v3 @kind object) @signature `Lokhttp3/CertificatePinner;.withCertificateChainCleaner$okhttp:(Lokhttp3/internal/tls/CertificateChainCleaner;)Lokhttp3/CertificatePinner;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L19656c.  v0:= "certificateChainCleaner" @kind object;
  #L196570.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L196576.  v0:= v2.`okhttp3.CertificatePinner.b` @type ^`okhttp3.internal.tls.CertificateChainCleaner` @kind object;
  #L19657a.  call temp:= `areEqual`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L196580.  v0:= temp;
  #L196582.  if v0 == 0 then goto L19658a;
  #L196586.  v0:= v2 @kind object;
  #L196588.  goto L196598;
  #L19658a.  v0:= new `okhttp3.CertificatePinner`;
  #L19658e.  v1:= v2.`okhttp3.CertificatePinner.a` @type ^`java.util.Set` @kind object;
  #L196592.  call `<init>`(v0, v1, v3) @signature `Lokhttp3/CertificatePinner;.<init>:(Ljava/util/Set;Lokhttp3/internal/tls/CertificateChainCleaner;)V` @kind direct;
  #L196598.  return v0 @kind object;
}
