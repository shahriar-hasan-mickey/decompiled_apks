record `okhttp3.Headers` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Iterable` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
  `java.lang.String`[] `okhttp3.Headers.a` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.Headers$Companion` `@@okhttp3.Headers.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Headers;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19c684.  v0:= new `okhttp3.Headers$Companion`;
  #L19c688.  v1:= 0I;
  #L19c68a.  call `<init>`(v0, v1) @signature `Lokhttp3/Headers$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L19c690.  `@@okhttp3.Headers.Companion` @type ^`okhttp3.Headers$Companion` := v0 @kind object;
  #L19c694.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Headers` v0 @kind this, `java.lang.String`[] v1 @kind object) @signature `Lokhttp3/Headers;.<init>:([Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L19c6a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19c6ae.  v0.`okhttp3.Headers.a` @type ^`java.lang.String`[] := v1 @kind object;
  #L19c6b2.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Headers` v0 @kind this, `java.lang.String`[] v1 @kind object, `kotlin.jvm.internal.DefaultConstructorMarker` v2 @kind object) @signature `Lokhttp3/Headers;.<init>:([Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L19c6c4.  call `<init>`(v0, v1) @signature `Lokhttp3/Headers;.<init>:([Ljava/lang/String;)V` @kind direct;
  #L19c6ca.  return @kind void;
}
procedure `okhttp3.Headers` `of`(`java.util.Map` v1 @kind object) @signature `Lokhttp3/Headers;.of:(Ljava/util/Map;)Lokhttp3/Headers;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L19c634.  v0:= `@@okhttp3.Headers.Companion` @type ^`okhttp3.Headers$Companion` @kind object;
  #L19c638.  call temp:= `of`(v0, v1) @signature `Lokhttp3/Headers$Companion;.of:(Ljava/util/Map;)Lokhttp3/Headers;` @kind virtual;
  #L19c63e.  v1:= temp @kind object;
  #L19c640.  return v1 @kind object;
}
procedure `okhttp3.Headers` `of`(`java.lang.String`[] v1 @kind object) @signature `Lokhttp3/Headers;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L19c614.  v0:= `@@okhttp3.Headers.Companion` @type ^`okhttp3.Headers$Companion` @kind object;
  #L19c618.  call temp:= `of`(v0, v1) @signature `Lokhttp3/Headers$Companion;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind virtual;
  #L19c61e.  v1:= temp @kind object;
  #L19c620.  return v1 @kind object;
}
procedure `int` `-deprecated_size`(`okhttp3.Headers` v1 @kind this) @signature `Lokhttp3/Headers;.-deprecated_size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19c244.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L19c24a.  v0:= temp;
  #L19c24c.  return v0;
}
procedure `long` `byteCount`(`okhttp3.Headers` v6 @kind this) @signature `Lokhttp3/Headers;.byteCount:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19c5d4.  v0:= v6.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L19c5d8.  v1:= length @variable v0;
  #L19c5da.  v1:= v1 * 2;
  #L19c5de.  v1:= (`long`) v1 @kind i2l;
  #L19c5e0.  v0:= length @variable v0;
  #L19c5e2.  v3:= 0I;
  #L19c5e4.  if v3 >= v0 then goto L19c602;
  #L19c5e8.  v4:= v6.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L19c5ec.  v4:= v4[v3] @kind object;
  #L19c5f0.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19c5f6.  v4:= temp;
  #L19c5f8.  v4:= (`long`) v4 @kind i2l;
  #L19c5fa.  v1:= v1 + v4 @kind long;
  #L19c5fc.  v3:= v3 + 1;
  #L19c600.  goto L19c5e4;
  #L19c602.  return v1 @kind wide;
}
procedure `boolean` `equals`(`okhttp3.Headers` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/Headers;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c20c.  v0:= instanceof @variable v2 @type ^`okhttp3.Headers` @kind boolean;
  #L19c210.  if v0 == 0 then goto L19c230;
  #L19c214.  v0:= v1.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L19c218.  v2:= (`okhttp3.Headers`) v2 @kind object;
  #L19c21c.  v2:= v2.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L19c220.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L19c226.  v2:= temp;
  #L19c228.  if v2 == 0 then goto L19c230;
  #L19c22c.  v2:= 1I;
  #L19c22e.  goto L19c232;
  #L19c230.  v2:= 0I;
  #L19c232.  return v2;
}
procedure `java.lang.String` `get`(`okhttp3.Headers` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L19c29c.  v0:= "name" @kind object;
  #L19c2a0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19c2a6.  v0:= `@@okhttp3.Headers.Companion` @type ^`okhttp3.Headers$Companion` @kind object;
  #L19c2aa.  v1:= v2.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L19c2ae.  call temp:= `access$get`(v0, v1, v3) @signature `Lokhttp3/Headers$Companion;.access$get:(Lokhttp3/Headers$Companion;[Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L19c2b4.  v3:= temp @kind object;
  #L19c2b6.  return v3 @kind object;
}
procedure `java.util.Date` `getDate`(`okhttp3.Headers` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Headers;.getDate:(Ljava/lang/String;)Ljava/util/Date;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19c3c4.  v0:= "name" @kind object;
  #L19c3c8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19c3ce.  call temp:= `get`(v1, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19c3d4.  v2:= temp @kind object;
  #L19c3d6.  if v2 == 0 then goto L19c3e4;
  #L19c3da.  call temp:= `toHttpDateOrNull`(v2) @signature `Lokhttp3/internal/http/DatesKt;.toHttpDateOrNull:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L19c3e0.  v2:= temp @kind object;
  #L19c3e2.  goto L19c3e6;
  #L19c3e4.  v2:= 0I;
  #L19c3e6.  return v2 @kind object;
}
procedure `java.time.Instant` `getInstant`(`okhttp3.Headers` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Headers;.getInstant:(Ljava/lang/String;)Ljava/time/Instant;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19c390.  v0:= "name" @kind object;
  #L19c394.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19c39a.  call temp:= `getDate`(v1, v2) @signature `Lokhttp3/Headers;.getDate:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #L19c3a0.  v2:= temp @kind object;
  #L19c3a2.  if v2 == 0 then goto L19c3b0;
  #L19c3a6.  call temp:= `toInstant`(v2) @signature `Ljava/util/Date;.toInstant:()Ljava/time/Instant;` @kind virtual;
  #L19c3ac.  v2:= temp @kind object;
  #L19c3ae.  goto L19c3b2;
  #L19c3b0.  v2:= 0I;
  #L19c3b2.  return v2 @kind object;
}
procedure `int` `hashCode`(`okhttp3.Headers` v1 @kind this) @signature `Lokhttp3/Headers;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19c260.  v0:= v1.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L19c264.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L19c26a.  v0:= temp;
  #L19c26c.  return v0;
}
procedure `java.util.Iterator` `iterator`(`okhttp3.Headers` v5 @kind this) @signature `Lokhttp3/Headers;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19c3f8.  call temp:= `size`(v5) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L19c3fe.  v0:= temp;
  #L19c400.  v1:= new `kotlin.Pair`[v0];
  #L19c404.  v2:= 0I;
  #L19c406.  if v2 >= v0 then goto L19c42c;
  #L19c40a.  call temp:= `name`(v5, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L19c410.  v3:= temp @kind object;
  #L19c412.  call temp:= `value`(v5, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L19c418.  v4:= temp @kind object;
  #L19c41a.  call temp:= `to`(v3, v4) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L19c420.  v3:= temp @kind object;
  #L19c422.  v1[v2]:= v3 @kind object;
  #L19c426.  v2:= v2 + 1;
  #L19c42a.  goto L19c406;
  #L19c42c.  call temp:= `iterator`(v1) @signature `Lkotlin/jvm/internal/ArrayIteratorKt;.iterator:([Ljava/lang/Object;)Ljava/util/Iterator;` @kind static;
  #L19c432.  v0:= temp @kind object;
  #L19c434.  return v0 @kind object;
}
procedure `java.lang.String` `name`(`okhttp3.Headers` v1 @kind this, `int` v2 ) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19c2c8.  v0:= v1.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L19c2cc.  v2:= v2 * 2;
  #L19c2d0.  v2:= v0[v2] @kind object;
  #L19c2d4.  return v2 @kind object;
}
procedure `java.util.Set` `names`(`okhttp3.Headers` v4 @kind this) @signature `Lokhttp3/Headers;.names:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19c578.  v0:= new `java.util.TreeSet`;
  #L19c57c.  v1:= `@@kotlin.jvm.internal.StringCompanionObject.INSTANCE` @type ^`kotlin.jvm.internal.StringCompanionObject` @kind object;
  #L19c580.  call temp:= `getCASE_INSENSITIVE_ORDER`(v1) @signature `Lkotlin/text/StringsKt;.getCASE_INSENSITIVE_ORDER:(Lkotlin/jvm/internal/StringCompanionObject;)Ljava/util/Comparator;` @kind static;
  #L19c586.  v1:= temp @kind object;
  #L19c588.  call `<init>`(v0, v1) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L19c58e.  call temp:= `size`(v4) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L19c594.  v1:= temp;
  #L19c596.  v2:= 0I;
  #L19c598.  if v2 >= v1 then goto L19c5b0;
  #L19c59c.  call temp:= `name`(v4, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L19c5a2.  v3:= temp @kind object;
  #L19c5a4.  call temp:= `add`(v0, v3) @signature `Ljava/util/TreeSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L19c5aa.  v2:= v2 + 1;
  #L19c5ae.  goto L19c598;
  #L19c5b0.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L19c5b6.  v0:= temp @kind object;
  #L19c5b8.  v1:= "Collections.unmodifiableSet(result)" @kind object;
  #L19c5bc.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19c5c2.  return v0 @kind object;
}
procedure `okhttp3.Headers$Builder` `newBuilder`(`okhttp3.Headers` v3 @kind this) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L19c654.  v0:= new `okhttp3.Headers$Builder`;
  #L19c658.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L19c65e.  call temp:= `getNamesAndValues$okhttp`(v0) @signature `Lokhttp3/Headers$Builder;.getNamesAndValues$okhttp:()Ljava/util/List;` @kind virtual;
  #L19c664.  v1:= temp @kind object;
  #L19c666.  v2:= v3.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L19c66a.  call temp:= `addAll`(v1, v2) @signature `Lkotlin/collections/CollectionsKt;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L19c670.  return v0 @kind object;
}
procedure `int` `size`(`okhttp3.Headers` v1 @kind this) @signature `Lokhttp3/Headers;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19c280.  v0:= v1.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L19c284.  v0:= length @variable v0;
  #L19c286.  v0:= v0 / 2;
  #L19c28a.  return v0;
}
procedure `java.util.Map` `toMultimap`(`okhttp3.Headers` v6 @kind this) @signature `Lokhttp3/Headers;.toMultimap:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19c4d0.  v0:= new `java.util.TreeMap`;
  #L19c4d4.  v1:= `@@kotlin.jvm.internal.StringCompanionObject.INSTANCE` @type ^`kotlin.jvm.internal.StringCompanionObject` @kind object;
  #L19c4d8.  call temp:= `getCASE_INSENSITIVE_ORDER`(v1) @signature `Lkotlin/text/StringsKt;.getCASE_INSENSITIVE_ORDER:(Lkotlin/jvm/internal/StringCompanionObject;)Ljava/util/Comparator;` @kind static;
  #L19c4de.  v1:= temp @kind object;
  #L19c4e0.  call `<init>`(v0, v1) @signature `Ljava/util/TreeMap;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L19c4e6.  call temp:= `size`(v6) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L19c4ec.  v1:= temp;
  #L19c4ee.  v2:= 0I;
  #L19c4f0.  if v2 >= v1 then goto L19c566;
  #L19c4f4.  call temp:= `name`(v6, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L19c4fa.  v3:= temp @kind object;
  #L19c4fc.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L19c500.  v5:= "Locale.US" @kind object;
  #L19c504.  call `checkNotNullExpressionValue`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19c50a.  if v3 == 0 then goto L19c556;
  #L19c50e.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L19c514.  v3:= temp @kind object;
  #L19c516.  v4:= "(this as java.lang.String).toLowerCase(locale)" @kind object;
  #L19c51a.  call `checkNotNullExpressionValue`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19c520.  call temp:= `get`(v0, v3) @signature `Ljava/util/TreeMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L19c526.  v4:= temp @kind object;
  #L19c528.  v4:= (`java.util.List`) v4 @kind object;
  #L19c52c.  if v4 != 0 then goto L19c542;
  #L19c530.  v4:= new `java.util.ArrayList`;
  #L19c534.  v5:= 2I;
  #L19c536.  call `<init>`(v4, v5) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L19c53c.  call temp:= `put`(v0, v3, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L19c542.  call temp:= `value`(v6, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L19c548.  v3:= temp @kind object;
  #L19c54a.  call temp:= `add`(v4, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19c550.  v2:= v2 + 1;
  #L19c554.  goto L19c4f0;
  #L19c556.  v0:= new `java.lang.NullPointerException`;
  #L19c55a.  v1:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L19c55e.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c564.  throw v0;
  #L19c566.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Headers` v6 @kind this) @signature `Lokhttp3/Headers;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19c2e8.  v0:= new `java.lang.StringBuilder`;
  #L19c2ec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c2f2.  call temp:= `size`(v6) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L19c2f8.  v1:= temp;
  #L19c2fa.  v2:= 0I;
  #L19c2fc.  if v2 >= v1 then goto L19c346;
  #L19c300.  call temp:= `name`(v6, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L19c306.  v3:= temp @kind object;
  #L19c308.  call temp:= `value`(v6, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L19c30e.  v4:= temp @kind object;
  #L19c310.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c316.  v5:= ": " @kind object;
  #L19c31a.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c320.  call temp:= `isSensitiveHeader`(v3) @signature `Lokhttp3/internal/Util;.isSensitiveHeader:(Ljava/lang/String;)Z` @kind static;
  #L19c326.  v3:= temp;
  #L19c328.  if v3 == 0 then goto L19c330;
  #L19c32c.  v4:= "██" @kind object;
  #L19c330.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c336.  v3:= "\n" @kind object;
  #L19c33a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c340.  v2:= v2 + 1;
  #L19c344.  goto L19c2fc;
  #L19c346.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c34c.  v0:= temp @kind object;
  #L19c34e.  v1:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L19c352.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19c358.  return v0 @kind object;
}
procedure `java.lang.String` `value`(`okhttp3.Headers` v1 @kind this, `int` v2 ) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19c36c.  v0:= v1.`okhttp3.Headers.a` @type ^`java.lang.String`[] @kind object;
  #L19c370.  v2:= v2 * 2;
  #L19c374.  v2:= v2 + 1;
  #L19c378.  v2:= v0[v2] @kind object;
  #L19c37c.  return v2 @kind object;
}
procedure `java.util.List` `values`(`okhttp3.Headers` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19c448.  v0:= "name" @kind object;
  #L19c44c.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19c452.  call temp:= `size`(v5) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L19c458.  v0:= temp;
  #L19c45a.  v1:= 0I;
  #L19c45c.  v2:= 0I;
  #L19c45e.  if v2 >= v0 then goto L19c49c;
  #L19c462.  call temp:= `name`(v5, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L19c468.  v3:= temp @kind object;
  #L19c46a.  v4:= 1I;
  #L19c46c.  call temp:= `equals`(v6, v3, v4) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L19c472.  v3:= temp;
  #L19c474.  if v3 == 0 then goto L19c496;
  #L19c478.  if v1 != 0 then goto L19c488;
  #L19c47c.  v1:= new `java.util.ArrayList`;
  #L19c480.  v3:= 2I;
  #L19c482.  call `<init>`(v1, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L19c488.  call temp:= `value`(v5, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L19c48e.  v3:= temp @kind object;
  #L19c490.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19c496.  v2:= v2 + 1;
  #L19c49a.  goto L19c45e;
  #L19c49c.  if v1 == 0 then goto L19c4b4;
  #L19c4a0.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19c4a6.  v6:= temp @kind object;
  #L19c4a8.  v0:= "Collections.unmodifiableList(result)" @kind object;
  #L19c4ac.  call `checkNotNullExpressionValue`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19c4b2.  goto L19c4bc;
  #L19c4b4.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L19c4ba.  v6:= temp @kind object;
  #L19c4bc.  return v6 @kind object;
}
