record `okhttp3.Response$Builder` @kind class @AccessFlag PUBLIC {
  `okhttp3.Request` `okhttp3.Response$Builder.a` @AccessFlag PRIVATE;
  `okhttp3.Protocol` `okhttp3.Response$Builder.b` @AccessFlag PRIVATE;
  `int` `okhttp3.Response$Builder.c` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.Response$Builder.d` @AccessFlag PRIVATE;
  `okhttp3.Handshake` `okhttp3.Response$Builder.e` @AccessFlag PRIVATE;
  `okhttp3.Headers$Builder` `okhttp3.Response$Builder.f` @AccessFlag PRIVATE;
  `okhttp3.ResponseBody` `okhttp3.Response$Builder.g` @AccessFlag PRIVATE;
  `okhttp3.Response` `okhttp3.Response$Builder.h` @AccessFlag PRIVATE;
  `okhttp3.Response` `okhttp3.Response$Builder.i` @AccessFlag PRIVATE;
  `okhttp3.Response` `okhttp3.Response$Builder.j` @AccessFlag PRIVATE;
  `long` `okhttp3.Response$Builder.k` @AccessFlag PRIVATE;
  `long` `okhttp3.Response$Builder.l` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.Exchange` `okhttp3.Response$Builder.m` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.Response$Builder` v1 @kind this) @signature `Lokhttp3/Response$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a48a4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a48aa.  v0:= -1I;
  #L1a48ac.  v1.`okhttp3.Response$Builder.c` @type ^`int` := v0;
  #L1a48b0.  v0:= new `okhttp3.Headers$Builder`;
  #L1a48b4.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L1a48ba.  v1.`okhttp3.Response$Builder.f` @type ^`okhttp3.Headers$Builder` := v0 @kind object;
  #L1a48be.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Response$Builder` v2 @kind this, `okhttp3.Response` v3 @kind object) @signature `Lokhttp3/Response$Builder;.<init>:(Lokhttp3/Response;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1a48d0.  v0:= "response" @kind object;
  #L1a48d4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a48da.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a48e0.  v0:= -1I;
  #L1a48e2.  v2.`okhttp3.Response$Builder.c` @type ^`int` := v0;
  #L1a48e6.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L1a48ec.  v0:= temp @kind object;
  #L1a48ee.  v2.`okhttp3.Response$Builder.a` @type ^`okhttp3.Request` := v0 @kind object;
  #L1a48f2.  call temp:= `protocol`(v3) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @kind virtual;
  #L1a48f8.  v0:= temp @kind object;
  #L1a48fa.  v2.`okhttp3.Response$Builder.b` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L1a48fe.  call temp:= `code`(v3) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L1a4904.  v0:= temp;
  #L1a4906.  v2.`okhttp3.Response$Builder.c` @type ^`int` := v0;
  #L1a490a.  call temp:= `message`(v3) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L1a4910.  v0:= temp @kind object;
  #L1a4912.  v2.`okhttp3.Response$Builder.d` @type ^`java.lang.String` := v0 @kind object;
  #L1a4916.  call temp:= `handshake`(v3) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L1a491c.  v0:= temp @kind object;
  #L1a491e.  v2.`okhttp3.Response$Builder.e` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L1a4922.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1a4928.  v0:= temp @kind object;
  #L1a492a.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L1a4930.  v0:= temp @kind object;
  #L1a4932.  v2.`okhttp3.Response$Builder.f` @type ^`okhttp3.Headers$Builder` := v0 @kind object;
  #L1a4936.  call temp:= `body`(v3) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L1a493c.  v0:= temp @kind object;
  #L1a493e.  v2.`okhttp3.Response$Builder.g` @type ^`okhttp3.ResponseBody` := v0 @kind object;
  #L1a4942.  call temp:= `networkResponse`(v3) @signature `Lokhttp3/Response;.networkResponse:()Lokhttp3/Response;` @kind virtual;
  #L1a4948.  v0:= temp @kind object;
  #L1a494a.  v2.`okhttp3.Response$Builder.h` @type ^`okhttp3.Response` := v0 @kind object;
  #L1a494e.  call temp:= `cacheResponse`(v3) @signature `Lokhttp3/Response;.cacheResponse:()Lokhttp3/Response;` @kind virtual;
  #L1a4954.  v0:= temp @kind object;
  #L1a4956.  v2.`okhttp3.Response$Builder.i` @type ^`okhttp3.Response` := v0 @kind object;
  #L1a495a.  call temp:= `priorResponse`(v3) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @kind virtual;
  #L1a4960.  v0:= temp @kind object;
  #L1a4962.  v2.`okhttp3.Response$Builder.j` @type ^`okhttp3.Response` := v0 @kind object;
  #L1a4966.  call temp:= `sentRequestAtMillis`(v3) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L1a496c.  v0:= temp @kind wide;
  #L1a496e.  v2.`okhttp3.Response$Builder.k` @type ^`long` := v0 @kind wide;
  #L1a4972.  call temp:= `receivedResponseAtMillis`(v3) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L1a4978.  v0:= temp @kind wide;
  #L1a497a.  v2.`okhttp3.Response$Builder.l` @type ^`long` := v0 @kind wide;
  #L1a497e.  call temp:= `exchange`(v3) @signature `Lokhttp3/Response;.exchange:()Lokhttp3/internal/connection/Exchange;` @kind virtual;
  #L1a4984.  v3:= temp @kind object;
  #L1a4986.  v2.`okhttp3.Response$Builder.m` @type ^`okhttp3.internal.connection.Exchange` := v3 @kind object;
  #L1a498a.  return @kind void;
}
procedure `void` `a`(`okhttp3.Response$Builder` v1 @kind this, `okhttp3.Response` v2 @kind object) @signature `Lokhttp3/Response$Builder;.a:(Lokhttp3/Response;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1a499c.  if v2 == 0 then goto L1a49d0;
  #L1a49a0.  call temp:= `body`(v2) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L1a49a6.  v2:= temp @kind object;
  #L1a49a8.  if v2 != 0 then goto L1a49b0;
  #L1a49ac.  v2:= 1I;
  #L1a49ae.  goto L1a49b2;
  #L1a49b0.  v2:= 0I;
  #L1a49b2.  if v2 == 0 then goto L1a49b8;
  #L1a49b6.  goto L1a49d0;
  #L1a49b8.  v2:= new `java.lang.IllegalArgumentException`;
  #L1a49bc.  v0:= "priorResponse.body != null" @kind object;
  #L1a49c0.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a49c6.  v0:= temp @kind object;
  #L1a49c8.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a49ce.  throw v2;
  #L1a49d0.  return @kind void;
}
procedure `void` `b`(`okhttp3.Response$Builder` v3 @kind this, `java.lang.String` v4 @kind object, `okhttp3.Response` v5 @kind object) @signature `Lokhttp3/Response$Builder;.b:(Ljava/lang/String;Lokhttp3/Response;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1a49e4.  if v5 == 0 then goto L1a4b1c;
  #L1a49e8.  call temp:= `body`(v5) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L1a49ee.  v0:= temp @kind object;
  #L1a49f0.  v1:= 1I;
  #L1a49f2.  v2:= 0I;
  #L1a49f4.  if v0 != 0 then goto L1a49fc;
  #L1a49f8.  v0:= 1I;
  #L1a49fa.  goto L1a49fe;
  #L1a49fc.  v0:= 0I;
  #L1a49fe.  if v0 == 0 then goto L1a4ae6;
  #L1a4a02.  call temp:= `networkResponse`(v5) @signature `Lokhttp3/Response;.networkResponse:()Lokhttp3/Response;` @kind virtual;
  #L1a4a08.  v0:= temp @kind object;
  #L1a4a0a.  if v0 != 0 then goto L1a4a12;
  #L1a4a0e.  v0:= 1I;
  #L1a4a10.  goto L1a4a14;
  #L1a4a12.  v0:= 0I;
  #L1a4a14.  if v0 == 0 then goto L1a4ab0;
  #L1a4a18.  call temp:= `cacheResponse`(v5) @signature `Lokhttp3/Response;.cacheResponse:()Lokhttp3/Response;` @kind virtual;
  #L1a4a1e.  v0:= temp @kind object;
  #L1a4a20.  if v0 != 0 then goto L1a4a28;
  #L1a4a24.  v0:= 1I;
  #L1a4a26.  goto L1a4a2a;
  #L1a4a28.  v0:= 0I;
  #L1a4a2a.  if v0 == 0 then goto L1a4a7a;
  #L1a4a2e.  call temp:= `priorResponse`(v5) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @kind virtual;
  #L1a4a34.  v5:= temp @kind object;
  #L1a4a36.  if v5 != 0 then goto L1a4a3c;
  #L1a4a3a.  goto L1a4a3e;
  #L1a4a3c.  v1:= 0I;
  #L1a4a3e.  if v1 == 0 then goto L1a4a44;
  #L1a4a42.  goto L1a4b1c;
  #L1a4a44.  v5:= new `java.lang.StringBuilder`;
  #L1a4a48.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a4a4e.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4a54.  v4:= ".priorResponse != null" @kind object;
  #L1a4a58.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4a5e.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a4a64.  v4:= temp @kind object;
  #L1a4a66.  v5:= new `java.lang.IllegalArgumentException`;
  #L1a4a6a.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a4a70.  v4:= temp @kind object;
  #L1a4a72.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a4a78.  throw v5;
  #L1a4a7a.  v5:= new `java.lang.StringBuilder`;
  #L1a4a7e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a4a84.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4a8a.  v4:= ".cacheResponse != null" @kind object;
  #L1a4a8e.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4a94.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a4a9a.  v4:= temp @kind object;
  #L1a4a9c.  v5:= new `java.lang.IllegalArgumentException`;
  #L1a4aa0.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a4aa6.  v4:= temp @kind object;
  #L1a4aa8.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a4aae.  throw v5;
  #L1a4ab0.  v5:= new `java.lang.StringBuilder`;
  #L1a4ab4.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a4aba.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4ac0.  v4:= ".networkResponse != null" @kind object;
  #L1a4ac4.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4aca.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a4ad0.  v4:= temp @kind object;
  #L1a4ad2.  v5:= new `java.lang.IllegalArgumentException`;
  #L1a4ad6.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a4adc.  v4:= temp @kind object;
  #L1a4ade.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a4ae4.  throw v5;
  #L1a4ae6.  v5:= new `java.lang.StringBuilder`;
  #L1a4aea.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a4af0.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4af6.  v4:= ".body != null" @kind object;
  #L1a4afa.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4b00.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a4b06.  v4:= temp @kind object;
  #L1a4b08.  v5:= new `java.lang.IllegalArgumentException`;
  #L1a4b0c.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a4b12.  v4:= temp @kind object;
  #L1a4b14.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a4b1a.  throw v5;
  #L1a4b1c.  return @kind void;
}
procedure `okhttp3.Response$Builder` `addHeader`(`okhttp3.Response$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a4690.  v0:= "name" @kind object;
  #L1a4694.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a469a.  v0:= "value" @kind object;
  #L1a469e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a46a4.  v0:= v1.`okhttp3.Response$Builder.f` @type ^`okhttp3.Headers$Builder` @kind object;
  #L1a46a8.  call temp:= `add`(v0, v2, v3) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1a46ae.  return v1 @kind object;
}
procedure `okhttp3.Response$Builder` `body`(`okhttp3.Response$Builder` v0 @kind this, `okhttp3.ResponseBody` v1 @kind object) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;

  #L1a46c0.  v0.`okhttp3.Response$Builder.g` @type ^`okhttp3.ResponseBody` := v1 @kind object;
  #L1a46c4.  return v0 @kind object;
}
procedure `okhttp3.Response` `build`(`okhttp3.Response$Builder` v19 @kind this) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L1a4538.  v0:= v19 @kind object;
  #L1a453c.  v1:= v0.`okhttp3.Response$Builder.c` @type ^`int`;
  #L1a4540.  if v1 < 0 then goto L1a4548;
  #L1a4544.  v1:= 1I;
  #L1a4546.  goto L1a454a;
  #L1a4548.  v1:= 0I;
  #L1a454a.  if v1 == 0 then goto L1a45fc;
  #L1a454e.  v3:= v0.`okhttp3.Response$Builder.a` @type ^`okhttp3.Request` @kind object;
  #L1a4552.  if v3 == 0 then goto L1a45e4;
  #L1a4556.  v4:= v0.`okhttp3.Response$Builder.b` @type ^`okhttp3.Protocol` @kind object;
  #L1a455a.  if v4 == 0 then goto L1a45cc;
  #L1a455e.  v5:= v0.`okhttp3.Response$Builder.d` @type ^`java.lang.String` @kind object;
  #L1a4562.  if v5 == 0 then goto L1a45b4;
  #L1a4566.  v6:= v0.`okhttp3.Response$Builder.c` @type ^`int`;
  #L1a456a.  v7:= v0.`okhttp3.Response$Builder.e` @type ^`okhttp3.Handshake` @kind object;
  #L1a456e.  v1:= v0.`okhttp3.Response$Builder.f` @type ^`okhttp3.Headers$Builder` @kind object;
  #L1a4572.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L1a4578.  v8:= temp @kind object;
  #L1a457a.  v9:= v0.`okhttp3.Response$Builder.g` @type ^`okhttp3.ResponseBody` @kind object;
  #L1a457e.  v10:= v0.`okhttp3.Response$Builder.h` @type ^`okhttp3.Response` @kind object;
  #L1a4582.  v11:= v0.`okhttp3.Response$Builder.i` @type ^`okhttp3.Response` @kind object;
  #L1a4586.  v12:= v0.`okhttp3.Response$Builder.j` @type ^`okhttp3.Response` @kind object;
  #L1a458a.  v13:= v0.`okhttp3.Response$Builder.k` @type ^`long` @kind wide;
  #L1a458e.  v1:= v0.`okhttp3.Response$Builder.l` @type ^`long` @kind wide;
  #L1a4592.  v15:= v0.`okhttp3.Response$Builder.m` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L1a4596.  v18:= new `okhttp3.Response`;
  #L1a459a.  v16:= v1 @kind wide;
  #L1a459e.  v2:= v18 @kind object;
  #L1a45a2.  v1:= v15 @kind object;
  #L1a45a4.  v15:= v16 @kind wide;
  #L1a45a8.  v17:= v1 @kind object;
  #L1a45ac.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v15, v17) @signature `Lokhttp3/Response;.<init>:(Lokhttp3/Request;Lokhttp3/Protocol;Ljava/lang/String;ILokhttp3/Handshake;Lokhttp3/Headers;Lokhttp3/ResponseBody;Lokhttp3/Response;Lokhttp3/Response;Lokhttp3/Response;JJLokhttp3/internal/connection/Exchange;)V` @kind direct;
  #L1a45b2.  return v18 @kind object;
  #L1a45b4.  v1:= new `java.lang.IllegalStateException`;
  #L1a45b8.  v2:= "message == null" @kind object;
  #L1a45bc.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a45c2.  v2:= temp @kind object;
  #L1a45c4.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a45ca.  throw v1;
  #L1a45cc.  v1:= new `java.lang.IllegalStateException`;
  #L1a45d0.  v2:= "protocol == null" @kind object;
  #L1a45d4.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a45da.  v2:= temp @kind object;
  #L1a45dc.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a45e2.  throw v1;
  #L1a45e4.  v1:= new `java.lang.IllegalStateException`;
  #L1a45e8.  v2:= "request == null" @kind object;
  #L1a45ec.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a45f2.  v2:= temp @kind object;
  #L1a45f4.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a45fa.  throw v1;
  #L1a45fc.  v1:= new `java.lang.StringBuilder`;
  #L1a4600.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a4606.  v2:= "code < 0: " @kind object;
  #L1a460a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a4610.  v2:= v0.`okhttp3.Response$Builder.c` @type ^`int`;
  #L1a4614.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a461a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a4620.  v1:= temp @kind object;
  #L1a4622.  v2:= new `java.lang.IllegalStateException`;
  #L1a4626.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a462c.  v1:= temp @kind object;
  #L1a462e.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a4634.  throw v2;
}
procedure `okhttp3.Response$Builder` `cacheResponse`(`okhttp3.Response$Builder` v1 @kind this, `okhttp3.Response` v2 @kind object) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a46d8.  v0:= "cacheResponse" @kind object;
  #L1a46dc.  call `b`(v1, v0, v2) @signature `Lokhttp3/Response$Builder;.b:(Ljava/lang/String;Lokhttp3/Response;)V` @kind direct;
  #L1a46e2.  v1.`okhttp3.Response$Builder.i` @type ^`okhttp3.Response` := v2 @kind object;
  #L1a46e6.  return v1 @kind object;
}
procedure `okhttp3.Response$Builder` `code`(`okhttp3.Response$Builder` v0 @kind this, `int` v1 ) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;

  #L1a46f8.  v0.`okhttp3.Response$Builder.c` @type ^`int` := v1;
  #L1a46fc.  return v0 @kind object;
}
procedure `okhttp3.ResponseBody` `getBody$okhttp`(`okhttp3.Response$Builder` v1 @kind this) @signature `Lokhttp3/Response$Builder;.getBody$okhttp:()Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a4874.  v0:= v1.`okhttp3.Response$Builder.g` @type ^`okhttp3.ResponseBody` @kind object;
  #L1a4878.  return v0 @kind object;
}
procedure `okhttp3.Response` `getCacheResponse$okhttp`(`okhttp3.Response$Builder` v1 @kind this) @signature `Lokhttp3/Response$Builder;.getCacheResponse$okhttp:()Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a4648.  v0:= v1.`okhttp3.Response$Builder.i` @type ^`okhttp3.Response` @kind object;
  #L1a464c.  return v0 @kind object;
}
procedure `int` `getCode$okhttp`(`okhttp3.Response$Builder` v1 @kind this) @signature `Lokhttp3/Response$Builder;.getCode$okhttp:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a4478.  v0:= v1.`okhttp3.Response$Builder.c` @type ^`int`;
  #L1a447c.  return v0;
}
procedure `okhttp3.internal.connection.Exchange` `getExchange$okhttp`(`okhttp3.Response$Builder` v1 @kind this) @signature `Lokhttp3/Response$Builder;.getExchange$okhttp:()Lokhttp3/internal/connection/Exchange;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a488c.  v0:= v1.`okhttp3.Response$Builder.m` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L1a4890.  return v0 @kind object;
}
procedure `okhttp3.Handshake` `getHandshake$okhttp`(`okhttp3.Response$Builder` v1 @kind this) @signature `Lokhttp3/Response$Builder;.getHandshake$okhttp:()Lokhttp3/Handshake;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a44d8.  v0:= v1.`okhttp3.Response$Builder.e` @type ^`okhttp3.Handshake` @kind object;
  #L1a44dc.  return v0 @kind object;
}
procedure `okhttp3.Headers$Builder` `getHeaders$okhttp`(`okhttp3.Response$Builder` v1 @kind this) @signature `Lokhttp3/Response$Builder;.getHeaders$okhttp:()Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a44f0.  v0:= v1.`okhttp3.Response$Builder.f` @type ^`okhttp3.Headers$Builder` @kind object;
  #L1a44f4.  return v0 @kind object;
}
procedure `java.lang.String` `getMessage$okhttp`(`okhttp3.Response$Builder` v1 @kind this) @signature `Lokhttp3/Response$Builder;.getMessage$okhttp:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a4490.  v0:= v1.`okhttp3.Response$Builder.d` @type ^`java.lang.String` @kind object;
  #L1a4494.  return v0 @kind object;
}
procedure `okhttp3.Response` `getNetworkResponse$okhttp`(`okhttp3.Response$Builder` v1 @kind this) @signature `Lokhttp3/Response$Builder;.getNetworkResponse$okhttp:()Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a4660.  v0:= v1.`okhttp3.Response$Builder.h` @type ^`okhttp3.Response` @kind object;
  #L1a4664.  return v0 @kind object;
}
procedure `okhttp3.Response` `getPriorResponse$okhttp`(`okhttp3.Response$Builder` v1 @kind this) @signature `Lokhttp3/Response$Builder;.getPriorResponse$okhttp:()Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a4678.  v0:= v1.`okhttp3.Response$Builder.j` @type ^`okhttp3.Response` @kind object;
  #L1a467c.  return v0 @kind object;
}
procedure `okhttp3.Protocol` `getProtocol$okhttp`(`okhttp3.Response$Builder` v1 @kind this) @signature `Lokhttp3/Response$Builder;.getProtocol$okhttp:()Lokhttp3/Protocol;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a4508.  v0:= v1.`okhttp3.Response$Builder.b` @type ^`okhttp3.Protocol` @kind object;
  #L1a450c.  return v0 @kind object;
}
procedure `long` `getReceivedResponseAtMillis$okhttp`(`okhttp3.Response$Builder` v2 @kind this) @signature `Lokhttp3/Response$Builder;.getReceivedResponseAtMillis$okhttp:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1a44a8.  v0:= v2.`okhttp3.Response$Builder.l` @type ^`long` @kind wide;
  #L1a44ac.  return v0 @kind wide;
}
procedure `okhttp3.Request` `getRequest$okhttp`(`okhttp3.Response$Builder` v1 @kind this) @signature `Lokhttp3/Response$Builder;.getRequest$okhttp:()Lokhttp3/Request;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a4520.  v0:= v1.`okhttp3.Response$Builder.a` @type ^`okhttp3.Request` @kind object;
  #L1a4524.  return v0 @kind object;
}
procedure `long` `getSentRequestAtMillis$okhttp`(`okhttp3.Response$Builder` v2 @kind this) @signature `Lokhttp3/Response$Builder;.getSentRequestAtMillis$okhttp:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1a44c0.  v0:= v2.`okhttp3.Response$Builder.k` @type ^`long` @kind wide;
  #L1a44c4.  return v0 @kind wide;
}
procedure `okhttp3.Response$Builder` `handshake`(`okhttp3.Response$Builder` v0 @kind this, `okhttp3.Handshake` v1 @kind object) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;

  #L1a4710.  v0.`okhttp3.Response$Builder.e` @type ^`okhttp3.Handshake` := v1 @kind object;
  #L1a4714.  return v0 @kind object;
}
procedure `okhttp3.Response$Builder` `header`(`okhttp3.Response$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Response$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a4728.  v0:= "name" @kind object;
  #L1a472c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a4732.  v0:= "value" @kind object;
  #L1a4736.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a473c.  v0:= v1.`okhttp3.Response$Builder.f` @type ^`okhttp3.Headers$Builder` @kind object;
  #L1a4740.  call temp:= `set`(v0, v2, v3) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1a4746.  return v1 @kind object;
}
procedure `okhttp3.Response$Builder` `headers`(`okhttp3.Response$Builder` v1 @kind this, `okhttp3.Headers` v2 @kind object) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a4758.  v0:= "headers" @kind object;
  #L1a475c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a4762.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L1a4768.  v2:= temp @kind object;
  #L1a476a.  v1.`okhttp3.Response$Builder.f` @type ^`okhttp3.Headers$Builder` := v2 @kind object;
  #L1a476e.  return v1 @kind object;
}
procedure `void` `initExchange$okhttp`(`okhttp3.Response$Builder` v1 @kind this, `okhttp3.internal.connection.Exchange` v2 @kind object) @signature `Lokhttp3/Response$Builder;.initExchange$okhttp:(Lokhttp3/internal/connection/Exchange;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a4b30.  v0:= "deferredTrailers" @kind object;
  #L1a4b34.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a4b3a.  v1.`okhttp3.Response$Builder.m` @type ^`okhttp3.internal.connection.Exchange` := v2 @kind object;
  #L1a4b3e.  return @kind void;
}
procedure `okhttp3.Response$Builder` `message`(`okhttp3.Response$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a4780.  v0:= "message" @kind object;
  #L1a4784.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a478a.  v1.`okhttp3.Response$Builder.d` @type ^`java.lang.String` := v2 @kind object;
  #L1a478e.  return v1 @kind object;
}
procedure `okhttp3.Response$Builder` `networkResponse`(`okhttp3.Response$Builder` v1 @kind this, `okhttp3.Response` v2 @kind object) @signature `Lokhttp3/Response$Builder;.networkResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a47a0.  v0:= "networkResponse" @kind object;
  #L1a47a4.  call `b`(v1, v0, v2) @signature `Lokhttp3/Response$Builder;.b:(Ljava/lang/String;Lokhttp3/Response;)V` @kind direct;
  #L1a47aa.  v1.`okhttp3.Response$Builder.h` @type ^`okhttp3.Response` := v2 @kind object;
  #L1a47ae.  return v1 @kind object;
}
procedure `okhttp3.Response$Builder` `priorResponse`(`okhttp3.Response$Builder` v0 @kind this, `okhttp3.Response` v1 @kind object) @signature `Lokhttp3/Response$Builder;.priorResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;

  #L1a47c0.  call `a`(v0, v1) @signature `Lokhttp3/Response$Builder;.a:(Lokhttp3/Response;)V` @kind direct;
  #L1a47c6.  v0.`okhttp3.Response$Builder.j` @type ^`okhttp3.Response` := v1 @kind object;
  #L1a47ca.  return v0 @kind object;
}
procedure `okhttp3.Response$Builder` `protocol`(`okhttp3.Response$Builder` v1 @kind this, `okhttp3.Protocol` v2 @kind object) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a47dc.  v0:= "protocol" @kind object;
  #L1a47e0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a47e6.  v1.`okhttp3.Response$Builder.b` @type ^`okhttp3.Protocol` := v2 @kind object;
  #L1a47ea.  return v1 @kind object;
}
procedure `okhttp3.Response$Builder` `receivedResponseAtMillis`(`okhttp3.Response$Builder` v0 @kind this, `long` v1 ) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;

  #L1a47fc.  v0.`okhttp3.Response$Builder.l` @type ^`long` := v1 @kind wide;
  #L1a4800.  return v0 @kind object;
}
procedure `okhttp3.Response$Builder` `removeHeader`(`okhttp3.Response$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Response$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a4814.  v0:= "name" @kind object;
  #L1a4818.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a481e.  v0:= v1.`okhttp3.Response$Builder.f` @type ^`okhttp3.Headers$Builder` @kind object;
  #L1a4822.  call temp:= `removeAll`(v0, v2) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1a4828.  return v1 @kind object;
}
procedure `okhttp3.Response$Builder` `request`(`okhttp3.Response$Builder` v1 @kind this, `okhttp3.Request` v2 @kind object) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a483c.  v0:= "request" @kind object;
  #L1a4840.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a4846.  v1.`okhttp3.Response$Builder.a` @type ^`okhttp3.Request` := v2 @kind object;
  #L1a484a.  return v1 @kind object;
}
procedure `okhttp3.Response$Builder` `sentRequestAtMillis`(`okhttp3.Response$Builder` v0 @kind this, `long` v1 ) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;

  #L1a485c.  v0.`okhttp3.Response$Builder.k` @type ^`long` := v1 @kind wide;
  #L1a4860.  return v0 @kind object;
}
procedure `void` `setBody$okhttp`(`okhttp3.Response$Builder` v0 @kind this, `okhttp3.ResponseBody` v1 @kind object) @signature `Lokhttp3/Response$Builder;.setBody$okhttp:(Lokhttp3/ResponseBody;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1a4b50.  v0.`okhttp3.Response$Builder.g` @type ^`okhttp3.ResponseBody` := v1 @kind object;
  #L1a4b54.  return @kind void;
}
procedure `void` `setCacheResponse$okhttp`(`okhttp3.Response$Builder` v0 @kind this, `okhttp3.Response` v1 @kind object) @signature `Lokhttp3/Response$Builder;.setCacheResponse$okhttp:(Lokhttp3/Response;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1a4b68.  v0.`okhttp3.Response$Builder.i` @type ^`okhttp3.Response` := v1 @kind object;
  #L1a4b6c.  return @kind void;
}
procedure `void` `setCode$okhttp`(`okhttp3.Response$Builder` v0 @kind this, `int` v1 ) @signature `Lokhttp3/Response$Builder;.setCode$okhttp:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1a4b80.  v0.`okhttp3.Response$Builder.c` @type ^`int` := v1;
  #L1a4b84.  return @kind void;
}
procedure `void` `setExchange$okhttp`(`okhttp3.Response$Builder` v0 @kind this, `okhttp3.internal.connection.Exchange` v1 @kind object) @signature `Lokhttp3/Response$Builder;.setExchange$okhttp:(Lokhttp3/internal/connection/Exchange;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1a4b98.  v0.`okhttp3.Response$Builder.m` @type ^`okhttp3.internal.connection.Exchange` := v1 @kind object;
  #L1a4b9c.  return @kind void;
}
procedure `void` `setHandshake$okhttp`(`okhttp3.Response$Builder` v0 @kind this, `okhttp3.Handshake` v1 @kind object) @signature `Lokhttp3/Response$Builder;.setHandshake$okhttp:(Lokhttp3/Handshake;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1a4bb0.  v0.`okhttp3.Response$Builder.e` @type ^`okhttp3.Handshake` := v1 @kind object;
  #L1a4bb4.  return @kind void;
}
procedure `void` `setHeaders$okhttp`(`okhttp3.Response$Builder` v1 @kind this, `okhttp3.Headers$Builder` v2 @kind object) @signature `Lokhttp3/Response$Builder;.setHeaders$okhttp:(Lokhttp3/Headers$Builder;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a4bc8.  v0:= "<set-?>" @kind object;
  #L1a4bcc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a4bd2.  v1.`okhttp3.Response$Builder.f` @type ^`okhttp3.Headers$Builder` := v2 @kind object;
  #L1a4bd6.  return @kind void;
}
procedure `void` `setMessage$okhttp`(`okhttp3.Response$Builder` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lokhttp3/Response$Builder;.setMessage$okhttp:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1a4be8.  v0.`okhttp3.Response$Builder.d` @type ^`java.lang.String` := v1 @kind object;
  #L1a4bec.  return @kind void;
}
procedure `void` `setNetworkResponse$okhttp`(`okhttp3.Response$Builder` v0 @kind this, `okhttp3.Response` v1 @kind object) @signature `Lokhttp3/Response$Builder;.setNetworkResponse$okhttp:(Lokhttp3/Response;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1a4c00.  v0.`okhttp3.Response$Builder.h` @type ^`okhttp3.Response` := v1 @kind object;
  #L1a4c04.  return @kind void;
}
procedure `void` `setPriorResponse$okhttp`(`okhttp3.Response$Builder` v0 @kind this, `okhttp3.Response` v1 @kind object) @signature `Lokhttp3/Response$Builder;.setPriorResponse$okhttp:(Lokhttp3/Response;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1a4c18.  v0.`okhttp3.Response$Builder.j` @type ^`okhttp3.Response` := v1 @kind object;
  #L1a4c1c.  return @kind void;
}
procedure `void` `setProtocol$okhttp`(`okhttp3.Response$Builder` v0 @kind this, `okhttp3.Protocol` v1 @kind object) @signature `Lokhttp3/Response$Builder;.setProtocol$okhttp:(Lokhttp3/Protocol;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1a4c30.  v0.`okhttp3.Response$Builder.b` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L1a4c34.  return @kind void;
}
procedure `void` `setReceivedResponseAtMillis$okhttp`(`okhttp3.Response$Builder` v0 @kind this, `long` v1 ) @signature `Lokhttp3/Response$Builder;.setReceivedResponseAtMillis$okhttp:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1a4c48.  v0.`okhttp3.Response$Builder.l` @type ^`long` := v1 @kind wide;
  #L1a4c4c.  return @kind void;
}
procedure `void` `setRequest$okhttp`(`okhttp3.Response$Builder` v0 @kind this, `okhttp3.Request` v1 @kind object) @signature `Lokhttp3/Response$Builder;.setRequest$okhttp:(Lokhttp3/Request;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1a4c60.  v0.`okhttp3.Response$Builder.a` @type ^`okhttp3.Request` := v1 @kind object;
  #L1a4c64.  return @kind void;
}
procedure `void` `setSentRequestAtMillis$okhttp`(`okhttp3.Response$Builder` v0 @kind this, `long` v1 ) @signature `Lokhttp3/Response$Builder;.setSentRequestAtMillis$okhttp:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1a4c78.  v0.`okhttp3.Response$Builder.k` @type ^`long` := v1 @kind wide;
  #L1a4c7c.  return @kind void;
}
