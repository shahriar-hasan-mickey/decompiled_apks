record `okhttp3.Protocol$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.Protocol$Companion` v0 @kind this) @signature `Lokhttp3/Protocol$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1a30c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a30ca.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Protocol$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/Protocol$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1a30dc.  call `<init>`(v0) @signature `Lokhttp3/Protocol$Companion;.<init>:()V` @kind direct;
  #L1a30e2.  return @kind void;
}
procedure `okhttp3.Protocol` `get`(`okhttp3.Protocol$Companion` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/Protocol$Companion;.get:(Ljava/lang/String;)Lokhttp3/Protocol;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1a2fc8.  v0:= "protocol" @kind object;
  #L1a2fcc.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a2fd2.  v0:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L1a2fd6.  call temp:= `access$getProtocol$p`(v0) @signature `Lokhttp3/Protocol;.access$getProtocol$p:(Lokhttp3/Protocol;)Ljava/lang/String;` @kind static;
  #L1a2fdc.  v0:= temp @kind object;
  #L1a2fde.  call temp:= `areEqual`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a2fe4.  v0:= temp;
  #L1a2fe6.  if v0 == 0 then goto L1a2ff0;
  #L1a2fea.  v4:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L1a2fee.  goto L1a3084;
  #L1a2ff0.  v0:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L1a2ff4.  call temp:= `access$getProtocol$p`(v0) @signature `Lokhttp3/Protocol;.access$getProtocol$p:(Lokhttp3/Protocol;)Ljava/lang/String;` @kind static;
  #L1a2ffa.  v0:= temp @kind object;
  #L1a2ffc.  call temp:= `areEqual`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a3002.  v0:= temp;
  #L1a3004.  if v0 == 0 then goto L1a300e;
  #L1a3008.  v4:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L1a300c.  goto L1a3084;
  #L1a300e.  v0:= `@@okhttp3.Protocol.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.Protocol` @kind object;
  #L1a3012.  call temp:= `access$getProtocol$p`(v0) @signature `Lokhttp3/Protocol;.access$getProtocol$p:(Lokhttp3/Protocol;)Ljava/lang/String;` @kind static;
  #L1a3018.  v0:= temp @kind object;
  #L1a301a.  call temp:= `areEqual`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a3020.  v0:= temp;
  #L1a3022.  if v0 == 0 then goto L1a302c;
  #L1a3026.  v4:= `@@okhttp3.Protocol.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.Protocol` @kind object;
  #L1a302a.  goto L1a3084;
  #L1a302c.  v0:= `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` @kind object;
  #L1a3030.  call temp:= `access$getProtocol$p`(v0) @signature `Lokhttp3/Protocol;.access$getProtocol$p:(Lokhttp3/Protocol;)Ljava/lang/String;` @kind static;
  #L1a3036.  v0:= temp @kind object;
  #L1a3038.  call temp:= `areEqual`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a303e.  v0:= temp;
  #L1a3040.  if v0 == 0 then goto L1a304a;
  #L1a3044.  v4:= `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` @kind object;
  #L1a3048.  goto L1a3084;
  #L1a304a.  v0:= `@@okhttp3.Protocol.SPDY_3` @type ^`okhttp3.Protocol` @kind object;
  #L1a304e.  call temp:= `access$getProtocol$p`(v0) @signature `Lokhttp3/Protocol;.access$getProtocol$p:(Lokhttp3/Protocol;)Ljava/lang/String;` @kind static;
  #L1a3054.  v0:= temp @kind object;
  #L1a3056.  call temp:= `areEqual`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a305c.  v0:= temp;
  #L1a305e.  if v0 == 0 then goto L1a3068;
  #L1a3062.  v4:= `@@okhttp3.Protocol.SPDY_3` @type ^`okhttp3.Protocol` @kind object;
  #L1a3066.  goto L1a3084;
  #L1a3068.  v0:= `@@okhttp3.Protocol.QUIC` @type ^`okhttp3.Protocol` @kind object;
  #L1a306c.  call temp:= `access$getProtocol$p`(v0) @signature `Lokhttp3/Protocol;.access$getProtocol$p:(Lokhttp3/Protocol;)Ljava/lang/String;` @kind static;
  #L1a3072.  v0:= temp @kind object;
  #L1a3074.  call temp:= `areEqual`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a307a.  v0:= temp;
  #L1a307c.  if v0 == 0 then goto L1a3086;
  #L1a3080.  v4:= `@@okhttp3.Protocol.QUIC` @type ^`okhttp3.Protocol` @kind object;
  #L1a3084.  return v4 @kind object;
  #L1a3086.  v0:= new `java.io.IOException`;
  #L1a308a.  v1:= new `java.lang.StringBuilder`;
  #L1a308e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a3094.  v2:= "Unexpected protocol: " @kind object;
  #L1a3098.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a309e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a30a4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a30aa.  v4:= temp @kind object;
  #L1a30ac.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a30b2.  throw v0;
}
