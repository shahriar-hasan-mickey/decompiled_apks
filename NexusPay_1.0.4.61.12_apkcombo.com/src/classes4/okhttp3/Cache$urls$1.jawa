record `okhttp3.Cache$urls$1` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Iterator` @kind interface, `kotlin.jvm.internal.markers.KMutableIterator` @kind interface {
  `java.util.Iterator` `okhttp3.Cache$urls$1.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$urls$1.b` @AccessFlag PRIVATE;
  `boolean` `okhttp3.Cache$urls$1.c` @AccessFlag PRIVATE;
  `okhttp3.Cache` `okhttp3.Cache$urls$1.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.Cache$urls$1` v0 @kind this, `okhttp3.Cache` v1 @kind object) @signature `Lokhttp3/Cache$urls$1;.<init>:(Lokhttp3/Cache;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1949f4.  v0.`okhttp3.Cache$urls$1.d` @type ^`okhttp3.Cache` := v1 @kind object;
  #L1949f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1949fe.  call temp:= `getCache$okhttp`(v1) @signature `Lokhttp3/Cache;.getCache$okhttp:()Lokhttp3/internal/cache/DiskLruCache;` @kind virtual;
  #L194a04.  v1:= temp @kind object;
  #L194a06.  call temp:= `snapshots`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache;.snapshots:()Ljava/util/Iterator;` @kind virtual;
  #L194a0c.  v1:= temp @kind object;
  #L194a0e.  v0.`okhttp3.Cache$urls$1.a` @type ^`java.util.Iterator` := v1 @kind object;
  #L194a12.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.Cache$urls$1` v5 @kind this) @signature `Lokhttp3/Cache$urls$1;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1948e0.  v0:= v5.`okhttp3.Cache$urls$1.b` @type ^`java.lang.String` @kind object;
  #L1948e4.  v1:= 1I;
  #L1948e6.  if v0 == 0 then goto L1948ec;
  #L1948ea.  return v1;
  #L1948ec.  v0:= 0I;
  #L1948ee.  v5.`okhttp3.Cache$urls$1.c` @type ^`boolean` := v0 @kind boolean;
  #L1948f2.  v2:= v5.`okhttp3.Cache$urls$1.a` @type ^`java.util.Iterator` @kind object;
  #L1948f6.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1948fc.  v2:= temp;
  #L1948fe.  if v2 == 0 then goto L194950;
  #L194902.  v2:= v5.`okhttp3.Cache$urls$1.a` @type ^`java.util.Iterator` @kind object;
  #L194906.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L19490c.  v2:= temp @kind object;
  #L19490e.  v2:= (`java.io.Closeable`) v2 @kind object;
  #L194912.  v3:= 0I;
  #L194914.  v4:= v2 @kind object;
  #L194916.  v4:= (`okhttp3.internal.cache.DiskLruCache$Snapshot`) v4 @kind object;
  #L19491a.  call temp:= `getSource`(v4, v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.getSource:(I)Lokio/Source;` @kind virtual;
  #L194920.  v4:= temp @kind object;
  #L194922.  call temp:= `buffer`(v4) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L194928.  v4:= temp @kind object;
  #L19492a.  call temp:= `readUtf8LineStrict`(v4) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L194930.  v4:= temp @kind object;
  #L194932.  v5.`okhttp3.Cache$urls$1.b` @type ^`java.lang.String` := v4 @kind object;
  #L194936.  call `closeFinally`(v2, v3) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L19493c.  return v1;
  #L19493e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L194940.  throw v3;
  #L194942.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L194944.  call `closeFinally`(v2, v3) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L19494a.  throw v4;
  #L19494c.  
  #L19494e.  goto L1948f2;
  #L194950.  return v0;
  catch `java.io.IOException` @[L194902..L194912] goto L19494c;
  catch `java.lang.Throwable` @[L194914..L194936] goto L19493e;
  catch `java.io.IOException` @[L194936..L19493c] goto L19494c;
  catch `java.lang.Throwable` @[L194940..L194942] goto L194942;
  catch `java.io.IOException` @[L194944..L19494c] goto L19494c;
}
procedure `java.lang.Object` `next`(`okhttp3.Cache$urls$1` v1 @kind this) @signature `Lokhttp3/Cache$urls$1;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L194998.  call temp:= `next`(v1) @signature `Lokhttp3/Cache$urls$1;.next:()Ljava/lang/String;` @kind virtual;
  #L19499e.  v0:= temp @kind object;
  #L1949a0.  return v0 @kind object;
}
procedure `java.lang.String` `next`(`okhttp3.Cache$urls$1` v2 @kind this) @signature `Lokhttp3/Cache$urls$1;.next:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1949b4.  call temp:= `hasNext`(v2) @signature `Lokhttp3/Cache$urls$1;.hasNext:()Z` @kind virtual;
  #L1949ba.  v0:= temp;
  #L1949bc.  if v0 == 0 then goto L1949d8;
  #L1949c0.  v0:= v2.`okhttp3.Cache$urls$1.b` @type ^`java.lang.String` @kind object;
  #L1949c4.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1949ca.  v1:= 0I;
  #L1949cc.  v2.`okhttp3.Cache$urls$1.b` @type ^`java.lang.String` := v1 @kind object;
  #L1949d0.  v1:= 1I;
  #L1949d2.  v2.`okhttp3.Cache$urls$1.c` @type ^`boolean` := v1 @kind boolean;
  #L1949d6.  return v0 @kind object;
  #L1949d8.  v0:= new `java.util.NoSuchElementException`;
  #L1949dc.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L1949e2.  throw v0;
}
procedure `void` `remove`(`okhttp3.Cache$urls$1` v2 @kind this) @signature `Lokhttp3/Cache$urls$1;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L194a24.  v0:= v2.`okhttp3.Cache$urls$1.c` @type ^`boolean` @kind boolean;
  #L194a28.  if v0 == 0 then goto L194a38;
  #L194a2c.  v0:= v2.`okhttp3.Cache$urls$1.a` @type ^`java.util.Iterator` @kind object;
  #L194a30.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L194a36.  return @kind void;
  #L194a38.  v0:= new `java.lang.IllegalStateException`;
  #L194a3c.  v1:= "remove() before next()" @kind object;
  #L194a40.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L194a46.  v1:= temp @kind object;
  #L194a48.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L194a4e.  throw v0;
}
