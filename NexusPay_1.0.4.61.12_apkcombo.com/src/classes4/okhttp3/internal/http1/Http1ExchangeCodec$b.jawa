record `okhttp3.internal.http1.Http1ExchangeCodec$b` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `okio.ForwardingTimeout` `okhttp3.internal.http1.Http1ExchangeCodec$b.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.http1.Http1ExchangeCodec$b.b` @AccessFlag PRIVATE;
  `okhttp3.internal.http1.Http1ExchangeCodec` `okhttp3.internal.http1.Http1ExchangeCodec$b.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1ExchangeCodec$b` v1 @kind this, `okhttp3.internal.http1.Http1ExchangeCodec` v2 @kind object) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$b;.<init>:(Lokhttp3/internal/http1/Http1ExchangeCodec;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b5490.  v1.`okhttp3.internal.http1.Http1ExchangeCodec$b.c` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` := v2 @kind object;
  #L1b5494.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b549a.  v0:= new `okio.ForwardingTimeout`;
  #L1b549e.  call temp:= `access$getSink$p`(v2) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$getSink$p:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSink;` @kind static;
  #L1b54a4.  v2:= temp @kind object;
  #L1b54a6.  call temp:= `timeout`(v2) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L1b54ac.  v2:= temp @kind object;
  #L1b54ae.  call `<init>`(v0, v2) @signature `Lokio/ForwardingTimeout;.<init>:(Lokio/Timeout;)V` @kind direct;
  #L1b54b4.  v1.`okhttp3.internal.http1.Http1ExchangeCodec$b.a` @type ^`okio.ForwardingTimeout` := v0 @kind object;
  #L1b54b8.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http1.Http1ExchangeCodec$b` v2 @kind this) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$b;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b54cc.  @monitorenter v2
  #L1b54ce.  v0:= v2.`okhttp3.internal.http1.Http1ExchangeCodec$b.b` @type ^`boolean` @kind boolean;
  #L1b54d2.  if v0 == 0 then goto L1b54da;
  #L1b54d6.  @monitorexit v2
  #L1b54d8.  return @kind void;
  #L1b54da.  v0:= 1I;
  #L1b54dc.  v2.`okhttp3.internal.http1.Http1ExchangeCodec$b.b` @type ^`boolean` := v0 @kind boolean;
  #L1b54e0.  v0:= v2.`okhttp3.internal.http1.Http1ExchangeCodec$b.c` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L1b54e4.  call temp:= `access$getSink$p`(v0) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$getSink$p:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSink;` @kind static;
  #L1b54ea.  v0:= temp @kind object;
  #L1b54ec.  v1:= "0\r\n\r\n" @kind object;
  #L1b54f0.  call temp:= `writeUtf8`(v0, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1b54f6.  v0:= v2.`okhttp3.internal.http1.Http1ExchangeCodec$b.c` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L1b54fa.  v1:= v2.`okhttp3.internal.http1.Http1ExchangeCodec$b.a` @type ^`okio.ForwardingTimeout` @kind object;
  #L1b54fe.  call `access$detachTimeout`(v0, v1) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$detachTimeout:(Lokhttp3/internal/http1/Http1ExchangeCodec;Lokio/ForwardingTimeout;)V` @kind static;
  #L1b5504.  v0:= v2.`okhttp3.internal.http1.Http1ExchangeCodec$b.c` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L1b5508.  v1:= 3I;
  #L1b550a.  call `access$setState$p`(v0, v1) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$setState$p:(Lokhttp3/internal/http1/Http1ExchangeCodec;I)V` @kind static;
  #L1b5510.  @monitorexit v2
  #L1b5512.  return @kind void;
  #L1b5514.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b5516.  @monitorexit v2
  #L1b5518.  throw v0;
  catch `java.lang.Throwable` @[L1b54ce..L1b54d2] goto L1b5514;
  catch `java.lang.Throwable` @[L1b54dc..L1b5510] goto L1b5514;
}
procedure `void` `flush`(`okhttp3.internal.http1.Http1ExchangeCodec$b` v1 @kind this) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$b;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b5540.  @monitorenter v1
  #L1b5542.  v0:= v1.`okhttp3.internal.http1.Http1ExchangeCodec$b.b` @type ^`boolean` @kind boolean;
  #L1b5546.  if v0 == 0 then goto L1b554e;
  #L1b554a.  @monitorexit v1
  #L1b554c.  return @kind void;
  #L1b554e.  v0:= v1.`okhttp3.internal.http1.Http1ExchangeCodec$b.c` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L1b5552.  call temp:= `access$getSink$p`(v0) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$getSink$p:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSink;` @kind static;
  #L1b5558.  v0:= temp @kind object;
  #L1b555a.  call `flush`(v0) @signature `Lokio/BufferedSink;.flush:()V` @kind interface;
  #L1b5560.  @monitorexit v1
  #L1b5562.  return @kind void;
  #L1b5564.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b5566.  @monitorexit v1
  #L1b5568.  throw v0;
  catch `java.lang.Throwable` @[L1b5542..L1b5546] goto L1b5564;
  catch `java.lang.Throwable` @[L1b554e..L1b5560] goto L1b5564;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http1.Http1ExchangeCodec$b` v1 @kind this) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$b;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b5478.  v0:= v1.`okhttp3.internal.http1.Http1ExchangeCodec$b.a` @type ^`okio.ForwardingTimeout` @kind object;
  #L1b547c.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.http1.Http1ExchangeCodec$b` v3 @kind this, `okio.Buffer` v4 @kind object, `long` v5 ) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec$b;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b5590.  v0:= "source" @kind object;
  #L1b5594.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b559a.  v0:= v3.`okhttp3.internal.http1.Http1ExchangeCodec$b.b` @type ^`boolean` @kind boolean;
  #L1b559e.  v0:= v0 ^~ 1;
  #L1b55a2.  if v0 == 0 then goto L1b5602;
  #L1b55a6.  v0:= 0L;
  #L1b55aa.  v2:= lcmp(v5, v0);
  #L1b55ae.  if v2 != 0 then goto L1b55b4;
  #L1b55b2.  return @kind void;
  #L1b55b4.  v0:= v3.`okhttp3.internal.http1.Http1ExchangeCodec$b.c` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L1b55b8.  call temp:= `access$getSink$p`(v0) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$getSink$p:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSink;` @kind static;
  #L1b55be.  v0:= temp @kind object;
  #L1b55c0.  call temp:= `writeHexadecimalUnsignedLong`(v0, v5) @signature `Lokio/BufferedSink;.writeHexadecimalUnsignedLong:(J)Lokio/BufferedSink;` @kind interface;
  #L1b55c6.  v0:= v3.`okhttp3.internal.http1.Http1ExchangeCodec$b.c` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L1b55ca.  call temp:= `access$getSink$p`(v0) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$getSink$p:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSink;` @kind static;
  #L1b55d0.  v0:= temp @kind object;
  #L1b55d2.  v1:= "\r\n" @kind object;
  #L1b55d6.  call temp:= `writeUtf8`(v0, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1b55dc.  v0:= v3.`okhttp3.internal.http1.Http1ExchangeCodec$b.c` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L1b55e0.  call temp:= `access$getSink$p`(v0) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$getSink$p:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSink;` @kind static;
  #L1b55e6.  v0:= temp @kind object;
  #L1b55e8.  call `write`(v0, v4, v5) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L1b55ee.  v4:= v3.`okhttp3.internal.http1.Http1ExchangeCodec$b.c` @type ^`okhttp3.internal.http1.Http1ExchangeCodec` @kind object;
  #L1b55f2.  call temp:= `access$getSink$p`(v4) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.access$getSink$p:(Lokhttp3/internal/http1/Http1ExchangeCodec;)Lokio/BufferedSink;` @kind static;
  #L1b55f8.  v4:= temp @kind object;
  #L1b55fa.  call temp:= `writeUtf8`(v4, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1b5600.  return @kind void;
  #L1b5602.  v4:= new `java.lang.IllegalStateException`;
  #L1b5606.  v5:= "closed" @kind object;
  #L1b560a.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b5610.  v5:= temp @kind object;
  #L1b5612.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b5618.  throw v4;
}
