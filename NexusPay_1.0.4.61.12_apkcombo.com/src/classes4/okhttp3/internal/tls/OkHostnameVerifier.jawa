record `okhttp3.internal.tls.OkHostnameVerifier` @kind class @AccessFlag PUBLIC_FINAL extends `javax.net.ssl.HostnameVerifier` @kind interface {
}
global `okhttp3.internal.tls.OkHostnameVerifier` `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c4604.  v0:= new `okhttp3.internal.tls.OkHostnameVerifier`;
  #L1c4608.  call `<init>`(v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<init>:()V` @kind direct;
  #L1c460e.  `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` := v0 @kind object;
  #L1c4612.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.tls.OkHostnameVerifier` v0 @kind this) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1c4624.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c462a.  return @kind void;
}
procedure `java.lang.String` `a`(`okhttp3.internal.tls.OkHostnameVerifier` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1c44a8.  call temp:= `c`(v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.c:(Ljava/lang/String;)Z` @kind direct;
  #L1c44ae.  v0:= temp;
  #L1c44b0.  if v0 == 0 then goto L1c44ea;
  #L1c44b4.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L1c44b8.  v1:= "Locale.US" @kind object;
  #L1c44bc.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c44c2.  if v3 == 0 then goto L1c44da;
  #L1c44c6.  call temp:= `toLowerCase`(v3, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L1c44cc.  v3:= temp @kind object;
  #L1c44ce.  v0:= "(this as java.lang.String).toLowerCase(locale)" @kind object;
  #L1c44d2.  call `checkNotNullExpressionValue`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c44d8.  goto L1c44ea;
  #L1c44da.  v3:= new `java.lang.NullPointerException`;
  #L1c44de.  v0:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L1c44e2.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c44e8.  throw v3;
  #L1c44ea.  return v3 @kind object;
}
procedure `java.util.List` `b`(`okhttp3.internal.tls.OkHostnameVerifier` v4 @kind this, `java.security.cert.X509Certificate` v5 @kind object, `int` v6 ) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.b:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c4534.  call temp:= `getSubjectAlternativeNames`(v5) @signature `Ljava/security/cert/X509Certificate;.getSubjectAlternativeNames:()Ljava/util/Collection;` @kind virtual;
  #L1c453a.  v5:= temp @kind object;
  #L1c453c.  if v5 == 0 then goto L1c45d0;
  #L1c4540.  v0:= new `java.util.ArrayList`;
  #L1c4544.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1c454a.  call temp:= `iterator`(v5) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1c4550.  v5:= temp @kind object;
  #L1c4552.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1c4558.  v1:= temp;
  #L1c455a.  if v1 == 0 then goto L1c45ce;
  #L1c455e.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1c4564.  v1:= temp @kind object;
  #L1c4566.  v1:= (`java.util.List`) v1 @kind object;
  #L1c456a.  if v1 == 0 then goto L1c4552;
  #L1c456e.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1c4574.  v2:= temp;
  #L1c4576.  v3:= 2I;
  #L1c4578.  if v2 >= v3 then goto L1c457e;
  #L1c457c.  goto L1c4552;
  #L1c457e.  v2:= 0I;
  #L1c4580.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1c4586.  v2:= temp @kind object;
  #L1c4588.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1c458e.  v3:= temp @kind object;
  #L1c4590.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1c4596.  v2:= temp;
  #L1c4598.  v3:= 1I;
  #L1c459a.  v2:= v2 ^~ v3 @kind int;
  #L1c459c.  if v2 == 0 then goto L1c45a2;
  #L1c45a0.  goto L1c4552;
  #L1c45a2.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1c45a8.  v1:= temp @kind object;
  #L1c45aa.  if v1 == 0 then goto L1c4552;
  #L1c45ae.  if v1 == 0 then goto L1c45be;
  #L1c45b2.  v1:= (`java.lang.String`) v1 @kind object;
  #L1c45b6.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1c45bc.  goto L1c4552;
  #L1c45be.  v5:= new `java.lang.NullPointerException`;
  #L1c45c2.  v6:= "null cannot be cast to non-null type kotlin.String" @kind object;
  #L1c45c6.  call `<init>`(v5, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c45cc.  throw v5;
  #L1c45ce.  return v0 @kind object;
  #L1c45d0.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L1c45d6.  v5:= temp @kind object;
  #L1c45d8.  return v5 @kind object;
  #L1c45da.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L1c45e0.  v5:= temp @kind object;
  #L1c45e2.  return v5 @kind object;
  catch `java.security.cert.CertificateParsingException` @[L1c4534..L1c45d8] goto L1c45da;
}
procedure `boolean` `c`(`okhttp3.internal.tls.OkHostnameVerifier` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.c:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c4114.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1c411a.  v0:= temp;
  #L1c411c.  v1:= 0I;
  #L1c411e.  v2:= 3I;
  #L1c4120.  v3:= 0I;
  #L1c4122.  call temp:= `size$default`(v5, v1, v1, v2, v3) @signature `Lokio/Utf8;.size$default:(Ljava/lang/String;IIILjava/lang/Object;)J` @kind static;
  #L1c4128.  v2:= temp @kind wide;
  #L1c412a.  v5:= (`int`) v2 @kind l2i;
  #L1c412c.  if v0 != v5 then goto L1c4132;
  #L1c4130.  v1:= 1I;
  #L1c4132.  return v1;
}
procedure `boolean` `d`(`okhttp3.internal.tls.OkHostnameVerifier` v12 @kind this, `java.lang.String` v13 @kind object, `java.lang.String` v14 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.d:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1c4200.  v0:= 1I;
  #L1c4202.  v1:= 0I;
  #L1c4204.  if v13 == 0 then goto L1c421a;
  #L1c4208.  call temp:= `length`(v13) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1c420e.  v2:= temp;
  #L1c4210.  if v2 != 0 then goto L1c4216;
  #L1c4214.  goto L1c421a;
  #L1c4216.  v2:= 0I;
  #L1c4218.  goto L1c421c;
  #L1c421a.  v2:= 1I;
  #L1c421c.  if v2 != 0 then goto L1c43b2;
  #L1c4220.  v2:= "." @kind object;
  #L1c4224.  v3:= 2I;
  #L1c4226.  v4:= 0I;
  #L1c4228.  call temp:= `startsWith$default`(v13, v2, v1, v3, v4) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1c422e.  v5:= temp;
  #L1c4230.  if v5 != 0 then goto L1c43b2;
  #L1c4234.  v5:= ".." @kind object;
  #L1c4238.  call temp:= `endsWith$default`(v13, v5, v1, v3, v4) @signature `Lkotlin/text/StringsKt;.endsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1c423e.  v6:= temp;
  #L1c4240.  if v6 == 0 then goto L1c4248;
  #L1c4244.  goto L1c43b2;
  #L1c4248.  if v14 == 0 then goto L1c425e;
  #L1c424c.  call temp:= `length`(v14) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1c4252.  v6:= temp;
  #L1c4254.  if v6 != 0 then goto L1c425a;
  #L1c4258.  goto L1c425e;
  #L1c425a.  v6:= 0I;
  #L1c425c.  goto L1c4260;
  #L1c425e.  v6:= 1I;
  #L1c4260.  if v6 != 0 then goto L1c43b2;
  #L1c4264.  call temp:= `startsWith$default`(v14, v2, v1, v3, v4) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1c426a.  v6:= temp;
  #L1c426c.  if v6 != 0 then goto L1c43b2;
  #L1c4270.  call temp:= `endsWith$default`(v14, v5, v1, v3, v4) @signature `Lkotlin/text/StringsKt;.endsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1c4276.  v5:= temp;
  #L1c4278.  if v5 == 0 then goto L1c4280;
  #L1c427c.  goto L1c43b2;
  #L1c4280.  call temp:= `endsWith$default`(v13, v2, v1, v3, v4) @signature `Lkotlin/text/StringsKt;.endsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1c4286.  v5:= temp;
  #L1c4288.  if v5 != 0 then goto L1c42aa;
  #L1c428c.  v5:= new `java.lang.StringBuilder`;
  #L1c4290.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c4296.  call temp:= `append`(v5, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c429c.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c42a2.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c42a8.  v13:= temp @kind object;
  #L1c42aa.  v5:= v13 @kind object;
  #L1c42ac.  call temp:= `endsWith$default`(v14, v2, v1, v3, v4) @signature `Lkotlin/text/StringsKt;.endsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1c42b2.  v13:= temp;
  #L1c42b4.  if v13 != 0 then goto L1c42d6;
  #L1c42b8.  v13:= new `java.lang.StringBuilder`;
  #L1c42bc.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c42c2.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c42c8.  call temp:= `append`(v13, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c42ce.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c42d4.  v14:= temp @kind object;
  #L1c42d6.  call temp:= `a`(v12, v14) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L1c42dc.  v13:= temp @kind object;
  #L1c42de.  v14:= "*" @kind object;
  #L1c42e2.  call temp:= `contains$default`(v13, v14, v1, v3, v4) @signature `Lkotlin/text/StringsKt;.contains$default:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;ZILjava/lang/Object;)Z` @kind static;
  #L1c42e8.  v14:= temp;
  #L1c42ea.  if v14 != 0 then goto L1c42f8;
  #L1c42ee.  call temp:= `areEqual`(v5, v13) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1c42f4.  v13:= temp;
  #L1c42f6.  return v13;
  #L1c42f8.  v14:= "*." @kind object;
  #L1c42fc.  call temp:= `startsWith$default`(v13, v14, v1, v3, v4) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1c4302.  v2:= temp;
  #L1c4304.  if v2 == 0 then goto L1c43b2;
  #L1c4308.  v7:= 42I;
  #L1c430c.  v8:= 1I;
  #L1c430e.  v9:= 0I;
  #L1c4310.  v10:= 4I;
  #L1c4312.  v11:= 0I;
  #L1c4314.  v6:= v13 @kind object;
  #L1c4316.  call temp:= `indexOf$default`(v6, v7, v8, v9, v10, v11) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L1c431c.  v2:= temp;
  #L1c431e.  v11:= -1I;
  #L1c4320.  if v2 == v11 then goto L1c4326;
  #L1c4324.  goto L1c43b2;
  #L1c4326.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1c432c.  v2:= temp;
  #L1c432e.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1c4334.  v6:= temp;
  #L1c4336.  if v2 >= v6 then goto L1c433c;
  #L1c433a.  return v1;
  #L1c433c.  call temp:= `areEqual`(v14, v13) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1c4342.  v14:= temp;
  #L1c4344.  if v14 == 0 then goto L1c434a;
  #L1c4348.  return v1;
  #L1c434a.  if v13 == 0 then goto L1c43a2;
  #L1c434e.  call temp:= `substring`(v13, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1c4354.  v13:= temp @kind object;
  #L1c4356.  v14:= "(this as java.lang.String).substring(startIndex)" @kind object;
  #L1c435a.  call `checkNotNullExpressionValue`(v13, v14) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c4360.  call temp:= `endsWith$default`(v5, v13, v1, v3, v4) @signature `Lkotlin/text/StringsKt;.endsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1c4366.  v14:= temp;
  #L1c4368.  if v14 != 0 then goto L1c436e;
  #L1c436c.  return v1;
  #L1c436e.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1c4374.  v14:= temp;
  #L1c4376.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1c437c.  v13:= temp;
  #L1c437e.  v14:= v14 - v13 @kind int;
  #L1c4380.  if v14 <= 0 then goto L1c43a0;
  #L1c4384.  v6:= 46I;
  #L1c4388.  v7:= v14 + -1;
  #L1c438c.  v8:= 0I;
  #L1c438e.  v9:= 4I;
  #L1c4390.  v10:= 0I;
  #L1c4392.  call temp:= `lastIndexOf$default`(v5, v6, v7, v8, v9, v10) @signature `Lkotlin/text/StringsKt;.lastIndexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L1c4398.  v13:= temp;
  #L1c439a.  if v13 == v11 then goto L1c43a0;
  #L1c439e.  return v1;
  #L1c43a0.  return v0;
  #L1c43a2.  v13:= new `java.lang.NullPointerException`;
  #L1c43a6.  v14:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L1c43aa.  call `<init>`(v13, v14) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c43b0.  throw v13;
  #L1c43b2.  return v1;
}
procedure `boolean` `e`(`okhttp3.internal.tls.OkHostnameVerifier` v3 @kind this, `java.lang.String` v4 @kind object, `java.security.cert.X509Certificate` v5 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.e:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1c43c4.  call temp:= `a`(v3, v4) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L1c43ca.  v4:= temp @kind object;
  #L1c43cc.  v0:= 2I;
  #L1c43ce.  call temp:= `b`(v3, v5, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.b:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind direct;
  #L1c43d4.  v5:= temp @kind object;
  #L1c43d6.  v0:= instanceof @variable v5 @type ^`java.util.Collection` @kind boolean;
  #L1c43da.  v1:= 0I;
  #L1c43dc.  if v0 == 0 then goto L1c43ee;
  #L1c43e0.  call temp:= `isEmpty`(v5) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L1c43e6.  v0:= temp;
  #L1c43e8.  if v0 == 0 then goto L1c43ee;
  #L1c43ec.  goto L1c4420;
  #L1c43ee.  call temp:= `iterator`(v5) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1c43f4.  v5:= temp @kind object;
  #L1c43f6.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1c43fc.  v0:= temp;
  #L1c43fe.  if v0 == 0 then goto L1c4420;
  #L1c4402.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1c4408.  v0:= temp @kind object;
  #L1c440a.  v0:= (`java.lang.String`) v0 @kind object;
  #L1c440e.  v2:= `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` @kind object;
  #L1c4412.  call temp:= `d`(v2, v4, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.d:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L1c4418.  v0:= temp;
  #L1c441a.  if v0 == 0 then goto L1c43f6;
  #L1c441e.  v1:= 1I;
  #L1c4420.  return v1;
}
procedure `boolean` `f`(`okhttp3.internal.tls.OkHostnameVerifier` v2 @kind this, `java.lang.String` v3 @kind object, `java.security.cert.X509Certificate` v4 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.f:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1c4434.  call temp:= `toCanonicalHost`(v3) @signature `Lokhttp3/internal/HostnamesKt;.toCanonicalHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1c443a.  v3:= temp @kind object;
  #L1c443c.  v0:= 7I;
  #L1c443e.  call temp:= `b`(v2, v4, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.b:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind direct;
  #L1c4444.  v4:= temp @kind object;
  #L1c4446.  v0:= instanceof @variable v4 @type ^`java.util.Collection` @kind boolean;
  #L1c444a.  v1:= 0I;
  #L1c444c.  if v0 == 0 then goto L1c445e;
  #L1c4450.  call temp:= `isEmpty`(v4) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L1c4456.  v0:= temp;
  #L1c4458.  if v0 == 0 then goto L1c445e;
  #L1c445c.  goto L1c4494;
  #L1c445e.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1c4464.  v4:= temp @kind object;
  #L1c4466.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1c446c.  v0:= temp;
  #L1c446e.  if v0 == 0 then goto L1c4494;
  #L1c4472.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1c4478.  v0:= temp @kind object;
  #L1c447a.  v0:= (`java.lang.String`) v0 @kind object;
  #L1c447e.  call temp:= `toCanonicalHost`(v0) @signature `Lokhttp3/internal/HostnamesKt;.toCanonicalHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1c4484.  v0:= temp @kind object;
  #L1c4486.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1c448c.  v0:= temp;
  #L1c448e.  if v0 == 0 then goto L1c4466;
  #L1c4492.  v1:= 1I;
  #L1c4494.  return v1;
}
procedure `java.util.List` `allSubjectAltNames`(`okhttp3.internal.tls.OkHostnameVerifier` v2 @kind this, `java.security.cert.X509Certificate` v3 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.allSubjectAltNames:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c44fc.  v0:= "certificate" @kind object;
  #L1c4500.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c4506.  v0:= 7I;
  #L1c4508.  call temp:= `b`(v2, v3, v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.b:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind direct;
  #L1c450e.  v0:= temp @kind object;
  #L1c4510.  v1:= 2I;
  #L1c4512.  call temp:= `b`(v2, v3, v1) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.b:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind direct;
  #L1c4518.  v3:= temp @kind object;
  #L1c451a.  call temp:= `plus`(v0, v3) @signature `Lkotlin/collections/CollectionsKt;.plus:(Ljava/util/Collection;Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L1c4520.  v3:= temp @kind object;
  #L1c4522.  return v3 @kind object;
}
procedure `boolean` `verify`(`okhttp3.internal.tls.OkHostnameVerifier` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.X509Certificate` v3 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c4144.  v0:= "host" @kind object;
  #L1c4148.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c414e.  v0:= "certificate" @kind object;
  #L1c4152.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c4158.  call temp:= `canParseAsIpAddress`(v2) @signature `Lokhttp3/internal/Util;.canParseAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L1c415e.  v0:= temp;
  #L1c4160.  if v0 == 0 then goto L1c416e;
  #L1c4164.  call temp:= `f`(v1, v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.f:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L1c416a.  v2:= temp;
  #L1c416c.  goto L1c4176;
  #L1c416e.  call temp:= `e`(v1, v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.e:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L1c4174.  v2:= temp;
  #L1c4176.  return v2;
}
procedure `boolean` `verify`(`okhttp3.internal.tls.OkHostnameVerifier` v2 @kind this, `java.lang.String` v3 @kind object, `javax.net.ssl.SSLSession` v4 @kind object) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c4188.  v0:= "host" @kind object;
  #L1c418c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c4192.  v0:= "session" @kind object;
  #L1c4196.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c419c.  call temp:= `c`(v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.c:(Ljava/lang/String;)Z` @kind direct;
  #L1c41a2.  v0:= temp;
  #L1c41a4.  v1:= 0I;
  #L1c41a6.  if v0 != 0 then goto L1c41ac;
  #L1c41aa.  goto L1c41dc;
  #L1c41ac.  call temp:= `getPeerCertificates`(v4) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L1c41b2.  v4:= temp @kind object;
  #L1c41b4.  v4:= v4[v1] @kind object;
  #L1c41b8.  if v4 == 0 then goto L1c41cc;
  #L1c41bc.  v4:= (`java.security.cert.X509Certificate`) v4 @kind object;
  #L1c41c0.  call temp:= `verify`(v2, v3, v4) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L1c41c6.  v3:= temp;
  #L1c41c8.  v1:= v3;
  #L1c41ca.  goto L1c41dc;
  #L1c41cc.  v3:= new `java.lang.NullPointerException`;
  #L1c41d0.  v4:= "null cannot be cast to non-null type java.security.cert.X509Certificate" @kind object;
  #L1c41d4.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c41da.  throw v3;
  #L1c41dc.  return v1;
  catch `javax.net.ssl.SSLException` @[L1c41ac..L1c41dc] goto L1c41dc;
}
