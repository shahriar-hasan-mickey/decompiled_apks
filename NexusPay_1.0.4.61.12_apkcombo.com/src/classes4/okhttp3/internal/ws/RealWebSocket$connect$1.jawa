record `okhttp3.internal.ws.RealWebSocket$connect$1` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Callback` @kind interface {
  `okhttp3.internal.ws.RealWebSocket` `okhttp3.internal.ws.RealWebSocket$connect$1.a` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.Request` `okhttp3.internal.ws.RealWebSocket$connect$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.ws.RealWebSocket$connect$1` v0 @kind this, `okhttp3.internal.ws.RealWebSocket` v1 @kind object, `okhttp3.Request` v2 @kind object) @signature `Lokhttp3/internal/ws/RealWebSocket$connect$1;.<init>:(Lokhttp3/internal/ws/RealWebSocket;Lokhttp3/Request;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c4b64.  v0.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` := v1 @kind object;
  #L1c4b68.  v0.`okhttp3.internal.ws.RealWebSocket$connect$1.b` @type ^`okhttp3.Request` := v2 @kind object;
  #L1c4b6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c4b72.  return @kind void;
}
procedure `void` `onFailure`(`okhttp3.internal.ws.RealWebSocket$connect$1` v1 @kind this, `okhttp3.Call` v2 @kind object, `java.io.IOException` v3 @kind object) @signature `Lokhttp3/internal/ws/RealWebSocket$connect$1;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c4b84.  v0:= "call" @kind object;
  #L1c4b88.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c4b8e.  v2:= "e" @kind object;
  #L1c4b92.  call `checkNotNullParameter`(v3, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c4b98.  v2:= v1.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L1c4b9c.  v0:= 0I;
  #L1c4b9e.  call `failWebSocket`(v2, v3, v0) @signature `Lokhttp3/internal/ws/RealWebSocket;.failWebSocket:(Ljava/lang/Exception;Lokhttp3/Response;)V` @kind virtual;
  #L1c4ba4.  return @kind void;
}
procedure `void` `onResponse`(`okhttp3.internal.ws.RealWebSocket$connect$1` v4 @kind this, `okhttp3.Call` v5 @kind object, `okhttp3.Response` v6 @kind object) @signature `Lokhttp3/internal/ws/RealWebSocket$connect$1;.onResponse:(Lokhttp3/Call;Lokhttp3/Response;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c4bb8.  v0:= "call" @kind object;
  #L1c4bbc.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c4bc2.  v5:= "response" @kind object;
  #L1c4bc6.  call `checkNotNullParameter`(v6, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c4bcc.  call temp:= `exchange`(v6) @signature `Lokhttp3/Response;.exchange:()Lokhttp3/internal/connection/Exchange;` @kind virtual;
  #L1c4bd2.  v5:= temp @kind object;
  #L1c4bd4.  v0:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L1c4bd8.  call `checkUpgradeSuccess$okhttp`(v0, v6, v5) @signature `Lokhttp3/internal/ws/RealWebSocket;.checkUpgradeSuccess$okhttp:(Lokhttp3/Response;Lokhttp3/internal/connection/Exchange;)V` @kind virtual;
  #L1c4bde.  call `checkNotNull`(v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c4be4.  call temp:= `newWebSocketStreams`(v5) @signature `Lokhttp3/internal/connection/Exchange;.newWebSocketStreams:()Lokhttp3/internal/ws/RealWebSocket$Streams;` @kind virtual;
  #L1c4bea.  v5:= temp @kind object;
  #L1c4bec.  v0:= `@@okhttp3.internal.ws.WebSocketExtensions.Companion` @type ^`okhttp3.internal.ws.WebSocketExtensions$Companion` @kind object;
  #L1c4bf0.  call temp:= `headers`(v6) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1c4bf6.  v1:= temp @kind object;
  #L1c4bf8.  call temp:= `parse`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketExtensions$Companion;.parse:(Lokhttp3/Headers;)Lokhttp3/internal/ws/WebSocketExtensions;` @kind virtual;
  #L1c4bfe.  v0:= temp @kind object;
  #L1c4c00.  v1:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L1c4c04.  call `access$setExtensions$p`(v1, v0) @signature `Lokhttp3/internal/ws/RealWebSocket;.access$setExtensions$p:(Lokhttp3/internal/ws/RealWebSocket;Lokhttp3/internal/ws/WebSocketExtensions;)V` @kind static;
  #L1c4c0a.  v1:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L1c4c0e.  call temp:= `access$isValid`(v1, v0) @signature `Lokhttp3/internal/ws/RealWebSocket;.access$isValid:(Lokhttp3/internal/ws/RealWebSocket;Lokhttp3/internal/ws/WebSocketExtensions;)Z` @kind static;
  #L1c4c14.  v0:= temp;
  #L1c4c16.  if v0 != 0 then goto L1c4c4e;
  #L1c4c1a.  v0:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L1c4c1e.  @monitorenter v0
  #L1c4c20.  v1:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L1c4c24.  call temp:= `access$getMessageAndCloseQueue$p`(v1) @signature `Lokhttp3/internal/ws/RealWebSocket;.access$getMessageAndCloseQueue$p:(Lokhttp3/internal/ws/RealWebSocket;)Ljava/util/ArrayDeque;` @kind static;
  #L1c4c2a.  v1:= temp @kind object;
  #L1c4c2c.  call `clear`(v1) @signature `Ljava/util/ArrayDeque;.clear:()V` @kind virtual;
  #L1c4c32.  v1:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L1c4c36.  v2:= 1010I;
  #L1c4c3a.  v3:= "unexpected Sec-WebSocket-Extensions in response header" @kind object;
  #L1c4c3e.  call temp:= `close`(v1, v2, v3) @signature `Lokhttp3/internal/ws/RealWebSocket;.close:(ILjava/lang/String;)Z` @kind virtual;
  #L1c4c44.  @monitorexit v0
  #L1c4c46.  goto L1c4c4e;
  #L1c4c48.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c4c4a.  @monitorexit v0
  #L1c4c4c.  throw v5;
  #L1c4c4e.  v0:= new `java.lang.StringBuilder`;
  #L1c4c52.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c4c58.  v1:= `@@okhttp3.internal.Util.okHttpName` @type ^`java.lang.String` @kind object;
  #L1c4c5c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c4c62.  v1:= " WebSocket " @kind object;
  #L1c4c66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c4c6c.  v1:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.b` @type ^`okhttp3.Request` @kind object;
  #L1c4c70.  call temp:= `url`(v1) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1c4c76.  v1:= temp @kind object;
  #L1c4c78.  call temp:= `redact`(v1) @signature `Lokhttp3/HttpUrl;.redact:()Ljava/lang/String;` @kind virtual;
  #L1c4c7e.  v1:= temp @kind object;
  #L1c4c80.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c4c86.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c4c8c.  v0:= temp @kind object;
  #L1c4c8e.  v1:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L1c4c92.  call `initReaderAndWriter`(v1, v0, v5) @signature `Lokhttp3/internal/ws/RealWebSocket;.initReaderAndWriter:(Ljava/lang/String;Lokhttp3/internal/ws/RealWebSocket$Streams;)V` @kind virtual;
  #L1c4c98.  v5:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L1c4c9c.  call temp:= `getListener$okhttp`(v5) @signature `Lokhttp3/internal/ws/RealWebSocket;.getListener$okhttp:()Lokhttp3/WebSocketListener;` @kind virtual;
  #L1c4ca2.  v5:= temp @kind object;
  #L1c4ca4.  v0:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L1c4ca8.  call `onOpen`(v5, v0, v6) @signature `Lokhttp3/WebSocketListener;.onOpen:(Lokhttp3/WebSocket;Lokhttp3/Response;)V` @kind virtual;
  #L1c4cae.  v5:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L1c4cb2.  call `loopReader`(v5) @signature `Lokhttp3/internal/ws/RealWebSocket;.loopReader:()V` @kind virtual;
  #L1c4cb8.  goto L1c4cc8;
  #L1c4cba.  v5:= Exception @type ^`java.lang.Exception` @kind object;
  #L1c4cbc.  v6:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L1c4cc0.  v0:= 0I;
  #L1c4cc2.  call `failWebSocket`(v6, v5, v0) @signature `Lokhttp3/internal/ws/RealWebSocket;.failWebSocket:(Ljava/lang/Exception;Lokhttp3/Response;)V` @kind virtual;
  #L1c4cc8.  return @kind void;
  #L1c4cca.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1c4ccc.  if v5 == 0 then goto L1c4cd6;
  #L1c4cd0.  call `webSocketUpgradeFailed`(v5) @signature `Lokhttp3/internal/connection/Exchange;.webSocketUpgradeFailed:()V` @kind virtual;
  #L1c4cd6.  v5:= v4.`okhttp3.internal.ws.RealWebSocket$connect$1.a` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L1c4cda.  call `failWebSocket`(v5, v0, v6) @signature `Lokhttp3/internal/ws/RealWebSocket;.failWebSocket:(Ljava/lang/Exception;Lokhttp3/Response;)V` @kind virtual;
  #L1c4ce0.  call `closeQuietly`(v6) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1c4ce6.  return @kind void;
  catch `java.io.IOException` @[L1c4bd4..L1c4bec] goto L1c4cca;
  catch `java.lang.Throwable` @[L1c4c20..L1c4c44] goto L1c4c48;
  catch `java.lang.Exception` @[L1c4c4e..L1c4cb8] goto L1c4cba;
}
