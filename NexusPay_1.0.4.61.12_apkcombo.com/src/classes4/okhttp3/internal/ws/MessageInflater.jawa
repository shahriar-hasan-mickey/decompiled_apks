record `okhttp3.internal.ws.MessageInflater` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `okio.Buffer` `okhttp3.internal.ws.MessageInflater.a` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.Inflater` `okhttp3.internal.ws.MessageInflater.b` @AccessFlag PRIVATE_FINAL;
  `okio.InflaterSource` `okhttp3.internal.ws.MessageInflater.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.ws.MessageInflater.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.ws.MessageInflater` v2 @kind this, `boolean` v3 ) @signature `Lokhttp3/internal/ws/MessageInflater;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1c4828.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c482e.  v2.`okhttp3.internal.ws.MessageInflater.d` @type ^`boolean` := v3 @kind boolean;
  #L1c4832.  v3:= new `okio.Buffer`;
  #L1c4836.  call `<init>`(v3) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1c483c.  v2.`okhttp3.internal.ws.MessageInflater.a` @type ^`okio.Buffer` := v3 @kind object;
  #L1c4840.  v3:= new `java.util.zip.Inflater`;
  #L1c4844.  v0:= 1I;
  #L1c4846.  call `<init>`(v3, v0) @signature `Ljava/util/zip/Inflater;.<init>:(Z)V` @kind direct;
  #L1c484c.  v2.`okhttp3.internal.ws.MessageInflater.b` @type ^`java.util.zip.Inflater` := v3 @kind object;
  #L1c4850.  v0:= new `okio.InflaterSource`;
  #L1c4854.  v1:= v2.`okhttp3.internal.ws.MessageInflater.a` @type ^`okio.Buffer` @kind object;
  #L1c4858.  call `<init>`(v0, v1, v3) @signature `Lokio/InflaterSource;.<init>:(Lokio/Source;Ljava/util/zip/Inflater;)V` @kind direct;
  #L1c485e.  v2.`okhttp3.internal.ws.MessageInflater.c` @type ^`okio.InflaterSource` := v0 @kind object;
  #L1c4862.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.ws.MessageInflater` v1 @kind this) @signature `Lokhttp3/internal/ws/MessageInflater;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c4874.  v0:= v1.`okhttp3.internal.ws.MessageInflater.c` @type ^`okio.InflaterSource` @kind object;
  #L1c4878.  call `close`(v0) @signature `Lokio/InflaterSource;.close:()V` @kind virtual;
  #L1c487e.  return @kind void;
}
procedure `void` `inflate`(`okhttp3.internal.ws.MessageInflater` v5 @kind this, `okio.Buffer` v6 @kind object) @signature `Lokhttp3/internal/ws/MessageInflater;.inflate:(Lokio/Buffer;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c4890.  v0:= "buffer" @kind object;
  #L1c4894.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c489a.  v0:= v5.`okhttp3.internal.ws.MessageInflater.a` @type ^`okio.Buffer` @kind object;
  #L1c489e.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1c48a4.  v0:= temp @kind wide;
  #L1c48a6.  v2:= 0L;
  #L1c48aa.  v4:= lcmp(v0, v2);
  #L1c48ae.  if v4 != 0 then goto L1c48b6;
  #L1c48b2.  v0:= 1I;
  #L1c48b4.  goto L1c48b8;
  #L1c48b6.  v0:= 0I;
  #L1c48b8.  if v0 == 0 then goto L1c492c;
  #L1c48bc.  v0:= v5.`okhttp3.internal.ws.MessageInflater.d` @type ^`boolean` @kind boolean;
  #L1c48c0.  if v0 == 0 then goto L1c48ce;
  #L1c48c4.  v0:= v5.`okhttp3.internal.ws.MessageInflater.b` @type ^`java.util.zip.Inflater` @kind object;
  #L1c48c8.  call `reset`(v0) @signature `Ljava/util/zip/Inflater;.reset:()V` @kind virtual;
  #L1c48ce.  v0:= v5.`okhttp3.internal.ws.MessageInflater.a` @type ^`okio.Buffer` @kind object;
  #L1c48d2.  call temp:= `writeAll`(v0, v6) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L1c48d8.  v0:= v5.`okhttp3.internal.ws.MessageInflater.a` @type ^`okio.Buffer` @kind object;
  #L1c48dc.  v1:= 65535I;
  #L1c48e2.  call temp:= `writeInt`(v0, v1) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L1c48e8.  v0:= v5.`okhttp3.internal.ws.MessageInflater.b` @type ^`java.util.zip.Inflater` @kind object;
  #L1c48ec.  call temp:= `getBytesRead`(v0) @signature `Ljava/util/zip/Inflater;.getBytesRead:()J` @kind virtual;
  #L1c48f2.  v0:= temp @kind wide;
  #L1c48f4.  v2:= v5.`okhttp3.internal.ws.MessageInflater.a` @type ^`okio.Buffer` @kind object;
  #L1c48f8.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1c48fe.  v2:= temp @kind wide;
  #L1c4900.  v0:= v0 + v2 @kind long;
  #L1c4902.  v2:= v5.`okhttp3.internal.ws.MessageInflater.c` @type ^`okio.InflaterSource` @kind object;
  #L1c4906.  v3:= 9223372036854775807L;
  #L1c4910.  call temp:= `readOrInflate`(v2, v6, v3) @signature `Lokio/InflaterSource;.readOrInflate:(Lokio/Buffer;J)J` @kind virtual;
  #L1c4916.  v2:= v5.`okhttp3.internal.ws.MessageInflater.b` @type ^`java.util.zip.Inflater` @kind object;
  #L1c491a.  call temp:= `getBytesRead`(v2) @signature `Ljava/util/zip/Inflater;.getBytesRead:()J` @kind virtual;
  #L1c4920.  v2:= temp @kind wide;
  #L1c4922.  v4:= lcmp(v2, v0);
  #L1c4926.  if v4 < 0 then goto L1c4902;
  #L1c492a.  return @kind void;
  #L1c492c.  v6:= new `java.lang.IllegalArgumentException`;
  #L1c4930.  v0:= "Failed requirement." @kind object;
  #L1c4934.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c493a.  v0:= temp @kind object;
  #L1c493c.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c4942.  throw v6;
}
