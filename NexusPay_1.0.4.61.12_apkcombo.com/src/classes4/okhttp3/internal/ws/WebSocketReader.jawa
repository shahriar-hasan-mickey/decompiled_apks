record `okhttp3.internal.ws.WebSocketReader` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `boolean` `okhttp3.internal.ws.WebSocketReader.a` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.ws.WebSocketReader.b` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.ws.WebSocketReader.c` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.ws.WebSocketReader.d` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.ws.WebSocketReader.e` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.ws.WebSocketReader.f` @AccessFlag PRIVATE;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketReader.g` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketReader.h` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.ws.MessageInflater` `okhttp3.internal.ws.WebSocketReader.i` @AccessFlag PRIVATE;
  `byte`[] `okhttp3.internal.ws.WebSocketReader.j` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer$UnsafeCursor` `okhttp3.internal.ws.WebSocketReader.k` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketReader.l` @AccessFlag PRIVATE_FINAL;
  `okio.BufferedSource` `okhttp3.internal.ws.WebSocketReader.m` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.ws.WebSocketReader$FrameCallback` `okhttp3.internal.ws.WebSocketReader.n` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketReader.o` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketReader.p` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this, `boolean` v2 , `okio.BufferedSource` v3 @kind object, `okhttp3.internal.ws.WebSocketReader$FrameCallback` v4 @kind object, `boolean` v5 , `boolean` v6 ) @signature `Lokhttp3/internal/ws/WebSocketReader;.<init>:(ZLokio/BufferedSource;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;ZZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c6908.  v0:= "source" @kind object;
  #L1c690c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c6912.  v0:= "frameCallback" @kind object;
  #L1c6916.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c691c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c6922.  v1.`okhttp3.internal.ws.WebSocketReader.l` @type ^`boolean` := v2 @kind boolean;
  #L1c6926.  v1.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` := v3 @kind object;
  #L1c692a.  v1.`okhttp3.internal.ws.WebSocketReader.n` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` := v4 @kind object;
  #L1c692e.  v1.`okhttp3.internal.ws.WebSocketReader.o` @type ^`boolean` := v5 @kind boolean;
  #L1c6932.  v1.`okhttp3.internal.ws.WebSocketReader.p` @type ^`boolean` := v6 @kind boolean;
  #L1c6936.  v2:= new `okio.Buffer`;
  #L1c693a.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1c6940.  v1.`okhttp3.internal.ws.WebSocketReader.g` @type ^`okio.Buffer` := v2 @kind object;
  #L1c6944.  v2:= new `okio.Buffer`;
  #L1c6948.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1c694e.  v1.`okhttp3.internal.ws.WebSocketReader.h` @type ^`okio.Buffer` := v2 @kind object;
  #L1c6952.  v2:= v1.`okhttp3.internal.ws.WebSocketReader.l` @type ^`boolean` @kind boolean;
  #L1c6956.  v3:= 0I;
  #L1c6958.  if v2 == 0 then goto L1c6960;
  #L1c695c.  v2:= v3 @kind object;
  #L1c695e.  goto L1c6966;
  #L1c6960.  v2:= 4I;
  #L1c6962.  v2:= new `byte`[v2];
  #L1c6966.  v1.`okhttp3.internal.ws.WebSocketReader.j` @type ^`byte`[] := v2 @kind object;
  #L1c696a.  v2:= v1.`okhttp3.internal.ws.WebSocketReader.l` @type ^`boolean` @kind boolean;
  #L1c696e.  if v2 == 0 then goto L1c6974;
  #L1c6972.  goto L1c697e;
  #L1c6974.  v3:= new `okio.Buffer$UnsafeCursor`;
  #L1c6978.  call `<init>`(v3) @signature `Lokio/Buffer$UnsafeCursor;.<init>:()V` @kind direct;
  #L1c697e.  v1.`okhttp3.internal.ws.WebSocketReader.k` @type ^`okio.Buffer$UnsafeCursor` := v3 @kind object;
  #L1c6982.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.ws.WebSocketReader` v8 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.a:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1c69e4.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.c` @type ^`long` @kind wide;
  #L1c69e8.  v2:= 0L;
  #L1c69ec.  v4:= lcmp(v0, v2);
  #L1c69f0.  if v4 <= 0 then goto L1c6a4a;
  #L1c69f4.  v4:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L1c69f8.  v5:= v8.`okhttp3.internal.ws.WebSocketReader.g` @type ^`okio.Buffer` @kind object;
  #L1c69fc.  call `readFully`(v4, v5, v0) @signature `Lokio/BufferedSource;.readFully:(Lokio/Buffer;J)V` @kind interface;
  #L1c6a02.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.l` @type ^`boolean` @kind boolean;
  #L1c6a06.  if v0 != 0 then goto L1c6a4a;
  #L1c6a0a.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.g` @type ^`okio.Buffer` @kind object;
  #L1c6a0e.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.k` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1c6a12.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c6a18.  call temp:= `readAndWriteUnsafe`(v0, v1) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L1c6a1e.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.k` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1c6a22.  call temp:= `seek`(v0, v2) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L1c6a28.  v0:= `@@okhttp3.internal.ws.WebSocketProtocol.INSTANCE` @type ^`okhttp3.internal.ws.WebSocketProtocol` @kind object;
  #L1c6a2c.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.k` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1c6a30.  v4:= v8.`okhttp3.internal.ws.WebSocketReader.j` @type ^`byte`[] @kind object;
  #L1c6a34.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c6a3a.  call `toggleMask`(v0, v1, v4) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind virtual;
  #L1c6a40.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.k` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1c6a44.  call `close`(v0) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L1c6a4a.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.b` @type ^`int`;
  #L1c6a4e.  goto L1c6b40;
  #L1c6a54.  v0:= new `java.net.ProtocolException`;
  #L1c6a58.  v1:= new `java.lang.StringBuilder`;
  #L1c6a5c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c6a62.  v2:= "Unknown control opcode: " @kind object;
  #L1c6a66.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c6a6c.  v2:= v8.`okhttp3.internal.ws.WebSocketReader.b` @type ^`int`;
  #L1c6a70.  call temp:= `toHexString`(v2) @signature `Lokhttp3/internal/Util;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1c6a76.  v2:= temp @kind object;
  #L1c6a78.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c6a7e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c6a84.  v1:= temp @kind object;
  #L1c6a86.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c6a8c.  throw v0;
  #L1c6a8e.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.n` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1c6a92.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.g` @type ^`okio.Buffer` @kind object;
  #L1c6a96.  call temp:= `readByteString`(v1) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1c6a9c.  v1:= temp @kind object;
  #L1c6a9e.  call `onReadPong`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPong:(Lokio/ByteString;)V` @kind interface;
  #L1c6aa4.  goto L1c6b2c;
  #L1c6aa6.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.n` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1c6aaa.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.g` @type ^`okio.Buffer` @kind object;
  #L1c6aae.  call temp:= `readByteString`(v1) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1c6ab4.  v1:= temp @kind object;
  #L1c6ab6.  call `onReadPing`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPing:(Lokio/ByteString;)V` @kind interface;
  #L1c6abc.  goto L1c6b2c;
  #L1c6abe.  v0:= 1005I;
  #L1c6ac2.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.g` @type ^`okio.Buffer` @kind object;
  #L1c6ac6.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1c6acc.  v4:= temp @kind wide;
  #L1c6ace.  v6:= 1L;
  #L1c6ad2.  v1:= lcmp(v4, v6);
  #L1c6ad6.  if v1 == 0 then goto L1c6b2e;
  #L1c6ada.  v1:= lcmp(v4, v2);
  #L1c6ade.  if v1 == 0 then goto L1c6b18;
  #L1c6ae2.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.g` @type ^`okio.Buffer` @kind object;
  #L1c6ae6.  call temp:= `readShort`(v0) @signature `Lokio/Buffer;.readShort:()S` @kind virtual;
  #L1c6aec.  v0:= temp;
  #L1c6aee.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.g` @type ^`okio.Buffer` @kind object;
  #L1c6af2.  call temp:= `readUtf8`(v1) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L1c6af8.  v1:= temp @kind object;
  #L1c6afa.  v2:= `@@okhttp3.internal.ws.WebSocketProtocol.INSTANCE` @type ^`okhttp3.internal.ws.WebSocketProtocol` @kind object;
  #L1c6afe.  call temp:= `closeCodeExceptionMessage`(v2, v0) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.closeCodeExceptionMessage:(I)Ljava/lang/String;` @kind virtual;
  #L1c6b04.  v2:= temp @kind object;
  #L1c6b06.  if v2 != 0 then goto L1c6b0c;
  #L1c6b0a.  goto L1c6b1c;
  #L1c6b0c.  v0:= new `java.net.ProtocolException`;
  #L1c6b10.  call `<init>`(v0, v2) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c6b16.  throw v0;
  #L1c6b18.  v1:= "" @kind object;
  #L1c6b1c.  v2:= v8.`okhttp3.internal.ws.WebSocketReader.n` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1c6b20.  call `onReadClose`(v2, v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadClose:(ILjava/lang/String;)V` @kind interface;
  #L1c6b26.  v0:= 1I;
  #L1c6b28.  v8.`okhttp3.internal.ws.WebSocketReader.a` @type ^`boolean` := v0 @kind boolean;
  #L1c6b2c.  return @kind void;
  #L1c6b2e.  v0:= new `java.net.ProtocolException`;
  #L1c6b32.  v1:= "Malformed close payload length of 1." @kind object;
  #L1c6b36.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c6b3c.  throw v0;
  #L1c6b3e.  
  #L1c6b40.  switch v0
                  | 8 => goto L1c6abe
                  | 9 => goto L1c6aa6
                  | 10 => goto L1c6a8e
                  | else => goto L1c6a54;
}
procedure `void` `b`(`okhttp3.internal.ws.WebSocketReader` v8 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.b:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1c6b64.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.a` @type ^`boolean` @kind boolean;
  #L1c6b68.  if v0 != 0 then goto L1c6df0;
  #L1c6b6c.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L1c6b70.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L1c6b76.  v0:= temp @kind object;
  #L1c6b78.  call temp:= `timeoutNanos`(v0) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L1c6b7e.  v0:= temp @kind wide;
  #L1c6b80.  v2:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L1c6b84.  call temp:= `timeout`(v2) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L1c6b8a.  v2:= temp @kind object;
  #L1c6b8c.  call temp:= `clearTimeout`(v2) @signature `Lokio/Timeout;.clearTimeout:()Lokio/Timeout;` @kind virtual;
  #L1c6b92.  v2:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L1c6b96.  call temp:= `readByte`(v2) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1c6b9c.  v2:= temp;
  #L1c6b9e.  v3:= 255I;
  #L1c6ba2.  call temp:= `and`(v2, v3) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1c6ba8.  v2:= temp;
  #L1c6baa.  v4:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L1c6bae.  call temp:= `timeout`(v4) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L1c6bb4.  v4:= temp @kind object;
  #L1c6bb6.  v5:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1c6bba.  call temp:= `timeout`(v4, v0, v5) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1c6bc0.  v0:= v2 ^& 15;
  #L1c6bc4.  v8.`okhttp3.internal.ws.WebSocketReader.b` @type ^`int` := v0;
  #L1c6bc8.  v0:= v2 ^& 128;
  #L1c6bcc.  v1:= 0I;
  #L1c6bce.  v4:= 1I;
  #L1c6bd0.  if v0 == 0 then goto L1c6bd8;
  #L1c6bd4.  v0:= 1I;
  #L1c6bd6.  goto L1c6bda;
  #L1c6bd8.  v0:= 0I;
  #L1c6bda.  v8.`okhttp3.internal.ws.WebSocketReader.d` @type ^`boolean` := v0 @kind boolean;
  #L1c6bde.  v0:= v2 ^& 8;
  #L1c6be2.  if v0 == 0 then goto L1c6bea;
  #L1c6be6.  v0:= 1I;
  #L1c6be8.  goto L1c6bec;
  #L1c6bea.  v0:= 0I;
  #L1c6bec.  v8.`okhttp3.internal.ws.WebSocketReader.e` @type ^`boolean` := v0 @kind boolean;
  #L1c6bf0.  if v0 == 0 then goto L1c6c0e;
  #L1c6bf4.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.d` @type ^`boolean` @kind boolean;
  #L1c6bf8.  if v0 == 0 then goto L1c6bfe;
  #L1c6bfc.  goto L1c6c0e;
  #L1c6bfe.  v0:= new `java.net.ProtocolException`;
  #L1c6c02.  v1:= "Control frames must be final." @kind object;
  #L1c6c06.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c6c0c.  throw v0;
  #L1c6c0e.  v0:= v2 ^& 64;
  #L1c6c12.  if v0 == 0 then goto L1c6c1a;
  #L1c6c16.  v0:= 1I;
  #L1c6c18.  goto L1c6c1c;
  #L1c6c1a.  v0:= 0I;
  #L1c6c1c.  v5:= v8.`okhttp3.internal.ws.WebSocketReader.b` @type ^`int`;
  #L1c6c20.  v6:= "Unexpected rsv1 flag" @kind object;
  #L1c6c24.  if v5 == v4 then goto L1c6c40;
  #L1c6c28.  v7:= 2I;
  #L1c6c2a.  if v5 == v7 then goto L1c6c40;
  #L1c6c2e.  if v0 != 0 then goto L1c6c34;
  #L1c6c32.  goto L1c6c62;
  #L1c6c34.  v0:= new `java.net.ProtocolException`;
  #L1c6c38.  call `<init>`(v0, v6) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c6c3e.  throw v0;
  #L1c6c40.  if v0 == 0 then goto L1c6c5c;
  #L1c6c44.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.o` @type ^`boolean` @kind boolean;
  #L1c6c48.  if v0 == 0 then goto L1c6c50;
  #L1c6c4c.  v0:= 1I;
  #L1c6c4e.  goto L1c6c5e;
  #L1c6c50.  v0:= new `java.net.ProtocolException`;
  #L1c6c54.  call `<init>`(v0, v6) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c6c5a.  throw v0;
  #L1c6c5c.  v0:= 0I;
  #L1c6c5e.  v8.`okhttp3.internal.ws.WebSocketReader.f` @type ^`boolean` := v0 @kind boolean;
  #L1c6c62.  v0:= v2 ^& 32;
  #L1c6c66.  if v0 == 0 then goto L1c6c6e;
  #L1c6c6a.  v0:= 1I;
  #L1c6c6c.  goto L1c6c70;
  #L1c6c6e.  v0:= 0I;
  #L1c6c70.  if v0 != 0 then goto L1c6dc6;
  #L1c6c74.  v0:= v2 ^& 16;
  #L1c6c78.  if v0 == 0 then goto L1c6c80;
  #L1c6c7c.  v0:= 1I;
  #L1c6c7e.  goto L1c6c82;
  #L1c6c80.  v0:= 0I;
  #L1c6c82.  if v0 != 0 then goto L1c6db6;
  #L1c6c86.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L1c6c8a.  call temp:= `readByte`(v0) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1c6c90.  v0:= temp;
  #L1c6c92.  call temp:= `and`(v0, v3) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1c6c98.  v0:= temp;
  #L1c6c9a.  v2:= v0 ^& 128;
  #L1c6c9e.  if v2 == 0 then goto L1c6ca4;
  #L1c6ca2.  v1:= 1I;
  #L1c6ca4.  v2:= v8.`okhttp3.internal.ws.WebSocketReader.l` @type ^`boolean` @kind boolean;
  #L1c6ca8.  if v1 != v2 then goto L1c6cca;
  #L1c6cac.  v0:= new `java.net.ProtocolException`;
  #L1c6cb0.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.l` @type ^`boolean` @kind boolean;
  #L1c6cb4.  if v1 == 0 then goto L1c6cbe;
  #L1c6cb8.  v1:= "Server-sent frames must not be masked." @kind object;
  #L1c6cbc.  goto L1c6cc2;
  #L1c6cbe.  v1:= "Client-sent frames must be masked." @kind object;
  #L1c6cc2.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c6cc8.  throw v0;
  #L1c6cca.  v2:= 127I;
  #L1c6cce.  v0:= v0 ^& v2 @kind int;
  #L1c6cd0.  v3:= (`long`) v0 @kind i2l;
  #L1c6cd2.  v8.`okhttp3.internal.ws.WebSocketReader.c` @type ^`long` := v3 @kind wide;
  #L1c6cd6.  v0:= 126I;
  #L1c6cda.  v5:= (`long`) v0 @kind i2l;
  #L1c6cdc.  v0:= lcmp(v3, v5);
  #L1c6ce0.  if v0 != 0 then goto L1c6d06;
  #L1c6ce4.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L1c6ce8.  call temp:= `readShort`(v0) @signature `Lokio/BufferedSource;.readShort:()S` @kind interface;
  #L1c6cee.  v0:= temp;
  #L1c6cf0.  v2:= 65535I;
  #L1c6cf6.  call temp:= `and`(v0, v2) @signature `Lokhttp3/internal/Util;.and:(SI)I` @kind static;
  #L1c6cfc.  v0:= temp;
  #L1c6cfe.  v2:= (`long`) v0 @kind i2l;
  #L1c6d00.  v8.`okhttp3.internal.ws.WebSocketReader.c` @type ^`long` := v2 @kind wide;
  #L1c6d04.  goto L1c6d72;
  #L1c6d06.  v5:= (`long`) v2 @kind i2l;
  #L1c6d08.  v0:= lcmp(v3, v5);
  #L1c6d0c.  if v0 != 0 then goto L1c6d72;
  #L1c6d10.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L1c6d14.  call temp:= `readLong`(v0) @signature `Lokio/BufferedSource;.readLong:()J` @kind interface;
  #L1c6d1a.  v2:= temp @kind wide;
  #L1c6d1c.  v8.`okhttp3.internal.ws.WebSocketReader.c` @type ^`long` := v2 @kind wide;
  #L1c6d20.  v4:= 0L;
  #L1c6d24.  v0:= lcmp(v2, v4);
  #L1c6d28.  if v0 < 0 then goto L1c6d2e;
  #L1c6d2c.  goto L1c6d72;
  #L1c6d2e.  v0:= new `java.net.ProtocolException`;
  #L1c6d32.  v1:= new `java.lang.StringBuilder`;
  #L1c6d36.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c6d3c.  v2:= "Frame length 0x" @kind object;
  #L1c6d40.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c6d46.  v2:= v8.`okhttp3.internal.ws.WebSocketReader.c` @type ^`long` @kind wide;
  #L1c6d4a.  call temp:= `toHexString`(v2) @signature `Lokhttp3/internal/Util;.toHexString:(J)Ljava/lang/String;` @kind static;
  #L1c6d50.  v2:= temp @kind object;
  #L1c6d52.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c6d58.  v2:= " > 0x7FFFFFFFFFFFFFFF" @kind object;
  #L1c6d5c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c6d62.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c6d68.  v1:= temp @kind object;
  #L1c6d6a.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c6d70.  throw v0;
  #L1c6d72.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.e` @type ^`boolean` @kind boolean;
  #L1c6d76.  if v0 == 0 then goto L1c6d9c;
  #L1c6d7a.  v2:= v8.`okhttp3.internal.ws.WebSocketReader.c` @type ^`long` @kind wide;
  #L1c6d7e.  v4:= 125L;
  #L1c6d82.  v0:= lcmp(v2, v4);
  #L1c6d86.  if v0 > 0 then goto L1c6d8c;
  #L1c6d8a.  goto L1c6d9c;
  #L1c6d8c.  v0:= new `java.net.ProtocolException`;
  #L1c6d90.  v1:= "Control frame must be less than 125B." @kind object;
  #L1c6d94.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c6d9a.  throw v0;
  #L1c6d9c.  if v1 == 0 then goto L1c6db4;
  #L1c6da0.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L1c6da4.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.j` @type ^`byte`[] @kind object;
  #L1c6da8.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c6dae.  call `readFully`(v0, v1) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #L1c6db4.  return @kind void;
  #L1c6db6.  v0:= new `java.net.ProtocolException`;
  #L1c6dba.  v1:= "Unexpected rsv3 flag" @kind object;
  #L1c6dbe.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c6dc4.  throw v0;
  #L1c6dc6.  v0:= new `java.net.ProtocolException`;
  #L1c6dca.  v1:= "Unexpected rsv2 flag" @kind object;
  #L1c6dce.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c6dd4.  throw v0;
  #L1c6dd6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c6dd8.  v3:= v8.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L1c6ddc.  call temp:= `timeout`(v3) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L1c6de2.  v3:= temp @kind object;
  #L1c6de4.  v4:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1c6de8.  call temp:= `timeout`(v3, v0, v4) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1c6dee.  throw v2;
  #L1c6df0.  v0:= new `java.io.IOException`;
  #L1c6df4.  v1:= "closed" @kind object;
  #L1c6df8.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c6dfe.  throw v0;
  catch `java.lang.Throwable` @[L1c6b92..L1c6baa] goto L1c6dd6;
}
procedure `void` `c`(`okhttp3.internal.ws.WebSocketReader` v5 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.c:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c6e1c.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.a` @type ^`boolean` @kind boolean;
  #L1c6e20.  if v0 != 0 then goto L1c6ef0;
  #L1c6e24.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.c` @type ^`long` @kind wide;
  #L1c6e28.  v2:= 0L;
  #L1c6e2c.  v4:= lcmp(v0, v2);
  #L1c6e30.  if v4 <= 0 then goto L1c6e9c;
  #L1c6e34.  v2:= v5.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L1c6e38.  v3:= v5.`okhttp3.internal.ws.WebSocketReader.h` @type ^`okio.Buffer` @kind object;
  #L1c6e3c.  call `readFully`(v2, v3, v0) @signature `Lokio/BufferedSource;.readFully:(Lokio/Buffer;J)V` @kind interface;
  #L1c6e42.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.l` @type ^`boolean` @kind boolean;
  #L1c6e46.  if v0 != 0 then goto L1c6e9c;
  #L1c6e4a.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.h` @type ^`okio.Buffer` @kind object;
  #L1c6e4e.  v1:= v5.`okhttp3.internal.ws.WebSocketReader.k` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1c6e52.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c6e58.  call temp:= `readAndWriteUnsafe`(v0, v1) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L1c6e5e.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.k` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1c6e62.  v1:= v5.`okhttp3.internal.ws.WebSocketReader.h` @type ^`okio.Buffer` @kind object;
  #L1c6e66.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1c6e6c.  v1:= temp @kind wide;
  #L1c6e6e.  v3:= v5.`okhttp3.internal.ws.WebSocketReader.c` @type ^`long` @kind wide;
  #L1c6e72.  v1:= v1 - v3 @kind long;
  #L1c6e74.  call temp:= `seek`(v0, v1) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L1c6e7a.  v0:= `@@okhttp3.internal.ws.WebSocketProtocol.INSTANCE` @type ^`okhttp3.internal.ws.WebSocketProtocol` @kind object;
  #L1c6e7e.  v1:= v5.`okhttp3.internal.ws.WebSocketReader.k` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1c6e82.  v2:= v5.`okhttp3.internal.ws.WebSocketReader.j` @type ^`byte`[] @kind object;
  #L1c6e86.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c6e8c.  call `toggleMask`(v0, v1, v2) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind virtual;
  #L1c6e92.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.k` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1c6e96.  call `close`(v0) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L1c6e9c.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.d` @type ^`boolean` @kind boolean;
  #L1c6ea0.  if v0 == 0 then goto L1c6ea6;
  #L1c6ea4.  return @kind void;
  #L1c6ea6.  call `e`(v5) @signature `Lokhttp3/internal/ws/WebSocketReader;.e:()V` @kind direct;
  #L1c6eac.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.b` @type ^`int`;
  #L1c6eb0.  if v0 != 0 then goto L1c6eb6;
  #L1c6eb4.  goto L1c6e1c;
  #L1c6eb6.  v0:= new `java.net.ProtocolException`;
  #L1c6eba.  v1:= new `java.lang.StringBuilder`;
  #L1c6ebe.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c6ec4.  v2:= "Expected continuation opcode. Got: " @kind object;
  #L1c6ec8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c6ece.  v2:= v5.`okhttp3.internal.ws.WebSocketReader.b` @type ^`int`;
  #L1c6ed2.  call temp:= `toHexString`(v2) @signature `Lokhttp3/internal/Util;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1c6ed8.  v2:= temp @kind object;
  #L1c6eda.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c6ee0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c6ee6.  v1:= temp @kind object;
  #L1c6ee8.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c6eee.  throw v0;
  #L1c6ef0.  v0:= new `java.io.IOException`;
  #L1c6ef4.  v1:= "closed" @kind object;
  #L1c6ef8.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c6efe.  throw v0;
}
procedure `void` `d`(`okhttp3.internal.ws.WebSocketReader` v4 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.d:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c6f10.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.b` @type ^`int`;
  #L1c6f14.  v1:= 1I;
  #L1c6f16.  if v0 == v1 then goto L1c6f58;
  #L1c6f1a.  v2:= 2I;
  #L1c6f1c.  if v0 != v2 then goto L1c6f22;
  #L1c6f20.  goto L1c6f58;
  #L1c6f22.  v1:= new `java.net.ProtocolException`;
  #L1c6f26.  v2:= new `java.lang.StringBuilder`;
  #L1c6f2a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c6f30.  v3:= "Unknown opcode: " @kind object;
  #L1c6f34.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c6f3a.  call temp:= `toHexString`(v0) @signature `Lokhttp3/internal/Util;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1c6f40.  v0:= temp @kind object;
  #L1c6f42.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c6f48.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c6f4e.  v0:= temp @kind object;
  #L1c6f50.  call `<init>`(v1, v0) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c6f56.  throw v1;
  #L1c6f58.  call `c`(v4) @signature `Lokhttp3/internal/ws/WebSocketReader;.c:()V` @kind direct;
  #L1c6f5e.  v2:= v4.`okhttp3.internal.ws.WebSocketReader.f` @type ^`boolean` @kind boolean;
  #L1c6f62.  if v2 == 0 then goto L1c6f8c;
  #L1c6f66.  v2:= v4.`okhttp3.internal.ws.WebSocketReader.i` @type ^`okhttp3.internal.ws.MessageInflater` @kind object;
  #L1c6f6a.  if v2 == 0 then goto L1c6f70;
  #L1c6f6e.  goto L1c6f82;
  #L1c6f70.  v2:= new `okhttp3.internal.ws.MessageInflater`;
  #L1c6f74.  v3:= v4.`okhttp3.internal.ws.WebSocketReader.p` @type ^`boolean` @kind boolean;
  #L1c6f78.  call `<init>`(v2, v3) @signature `Lokhttp3/internal/ws/MessageInflater;.<init>:(Z)V` @kind direct;
  #L1c6f7e.  v4.`okhttp3.internal.ws.WebSocketReader.i` @type ^`okhttp3.internal.ws.MessageInflater` := v2 @kind object;
  #L1c6f82.  v3:= v4.`okhttp3.internal.ws.WebSocketReader.h` @type ^`okio.Buffer` @kind object;
  #L1c6f86.  call `inflate`(v2, v3) @signature `Lokhttp3/internal/ws/MessageInflater;.inflate:(Lokio/Buffer;)V` @kind virtual;
  #L1c6f8c.  if v0 != v1 then goto L1c6fa8;
  #L1c6f90.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.n` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1c6f94.  v1:= v4.`okhttp3.internal.ws.WebSocketReader.h` @type ^`okio.Buffer` @kind object;
  #L1c6f98.  call temp:= `readUtf8`(v1) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L1c6f9e.  v1:= temp @kind object;
  #L1c6fa0.  call `onReadMessage`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Ljava/lang/String;)V` @kind interface;
  #L1c6fa6.  goto L1c6fbe;
  #L1c6fa8.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.n` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L1c6fac.  v1:= v4.`okhttp3.internal.ws.WebSocketReader.h` @type ^`okio.Buffer` @kind object;
  #L1c6fb0.  call temp:= `readByteString`(v1) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1c6fb6.  v1:= temp @kind object;
  #L1c6fb8.  call `onReadMessage`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Lokio/ByteString;)V` @kind interface;
  #L1c6fbe.  return @kind void;
}
procedure `void` `e`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.e:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1c6fd0.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.a` @type ^`boolean` @kind boolean;
  #L1c6fd4.  if v0 != 0 then goto L1c6ff0;
  #L1c6fd8.  call `b`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.b:()V` @kind direct;
  #L1c6fde.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.e` @type ^`boolean` @kind boolean;
  #L1c6fe2.  if v0 != 0 then goto L1c6fe8;
  #L1c6fe6.  goto L1c6ff0;
  #L1c6fe8.  call `a`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.a:()V` @kind direct;
  #L1c6fee.  goto L1c6fd0;
  #L1c6ff0.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c6994.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.i` @type ^`okhttp3.internal.ws.MessageInflater` @kind object;
  #L1c6998.  if v0 == 0 then goto L1c69a2;
  #L1c699c.  call `close`(v0) @signature `Lokhttp3/internal/ws/MessageInflater;.close:()V` @kind virtual;
  #L1c69a2.  return @kind void;
}
procedure `okio.BufferedSource` `getSource`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.getSource:()Lokio/BufferedSource;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c68f0.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.m` @type ^`okio.BufferedSource` @kind object;
  #L1c68f4.  return v0 @kind object;
}
procedure `void` `processNextFrame`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.processNextFrame:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c69b4.  call `b`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.b:()V` @kind direct;
  #L1c69ba.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.e` @type ^`boolean` @kind boolean;
  #L1c69be.  if v0 == 0 then goto L1c69ca;
  #L1c69c2.  call `a`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.a:()V` @kind direct;
  #L1c69c8.  goto L1c69d0;
  #L1c69ca.  call `d`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.d:()V` @kind direct;
  #L1c69d0.  return @kind void;
}
