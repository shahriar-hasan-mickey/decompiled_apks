record `okhttp3.internal.ws.WebSocketProtocol` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@okhttp3.internal.ws.WebSocketProtocol.ACCEPT_MAGIC` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_FLAG_FIN` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_FLAG_RSV1` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_FLAG_RSV2` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_FLAG_RSV3` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B0_MASK_OPCODE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B1_FLAG_MASK` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.B1_MASK_LENGTH` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.CLOSE_CLIENT_GOING_AWAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@okhttp3.internal.ws.WebSocketProtocol.CLOSE_MESSAGE_MAX` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.CLOSE_NO_STATUS_CODE` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.internal.ws.WebSocketProtocol` `@@okhttp3.internal.ws.WebSocketProtocol.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_BINARY` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_CONTINUATION` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_CONTROL_CLOSE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_CONTROL_PING` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_CONTROL_PONG` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_FLAG_CONTROL` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.OPCODE_TEXT` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@okhttp3.internal.ws.WebSocketProtocol.PAYLOAD_BYTE_MAX` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.PAYLOAD_LONG` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.ws.WebSocketProtocol.PAYLOAD_SHORT` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@okhttp3.internal.ws.WebSocketProtocol.PAYLOAD_SHORT_MAX` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/ws/WebSocketProtocol;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c680c.  v0:= new `okhttp3.internal.ws.WebSocketProtocol`;
  #L1c6810.  call `<init>`(v0) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.<init>:()V` @kind direct;
  #L1c6816.  `@@okhttp3.internal.ws.WebSocketProtocol.INSTANCE` @type ^`okhttp3.internal.ws.WebSocketProtocol` := v0 @kind object;
  #L1c681a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketProtocol` v0 @kind this) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1c682c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c6832.  return @kind void;
}
procedure `java.lang.String` `acceptHeader`(`okhttp3.internal.ws.WebSocketProtocol` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.acceptHeader:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c6714.  v0:= "key" @kind object;
  #L1c6718.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c671e.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1c6722.  v1:= new `java.lang.StringBuilder`;
  #L1c6726.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c672c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c6732.  v3:= "258EAFA5-E914-47DA-95CA-C5AB0DC85B11" @kind object;
  #L1c6736.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c673c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c6742.  v3:= temp @kind object;
  #L1c6744.  call temp:= `encodeUtf8`(v0, v3) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1c674a.  v3:= temp @kind object;
  #L1c674c.  call temp:= `sha1`(v3) @signature `Lokio/ByteString;.sha1:()Lokio/ByteString;` @kind virtual;
  #L1c6752.  v3:= temp @kind object;
  #L1c6754.  call temp:= `base64`(v3) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L1c675a.  v3:= temp @kind object;
  #L1c675c.  return v3 @kind object;
}
procedure `java.lang.String` `closeCodeExceptionMessage`(`okhttp3.internal.ws.WebSocketProtocol` v2 @kind this, `int` v3 ) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.closeCodeExceptionMessage:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c6770.  v0:= 1000I;
  #L1c6774.  if v3 < v0 then goto L1c67d6;
  #L1c6778.  v0:= 5000I;
  #L1c677c.  if v3 < v0 then goto L1c6782;
  #L1c6780.  goto L1c67d6;
  #L1c6782.  v0:= 1006I;
  #L1c6786.  v1:= 1004I;
  #L1c678a.  if v1 > v3 then goto L1c6792;
  #L1c678e.  if v0 >= v3 then goto L1c67a4;
  #L1c6792.  v0:= 2999I;
  #L1c6796.  v1:= 1015I;
  #L1c679a.  if v1 <= v3 then goto L1c67a0;
  #L1c679e.  goto L1c67d2;
  #L1c67a0.  if v0 < v3 then goto L1c67d2;
  #L1c67a4.  v0:= new `java.lang.StringBuilder`;
  #L1c67a8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c67ae.  v1:= "Code " @kind object;
  #L1c67b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c67b8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c67be.  v3:= " is reserved and may not be used." @kind object;
  #L1c67c2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c67c8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c67ce.  v3:= temp @kind object;
  #L1c67d0.  goto L1c67f8;
  #L1c67d2.  v3:= 0I;
  #L1c67d4.  goto L1c67f8;
  #L1c67d6.  v0:= new `java.lang.StringBuilder`;
  #L1c67da.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c67e0.  v1:= "Code must be in range [1000,5000): " @kind object;
  #L1c67e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c67ea.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c67f0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c67f6.  v3:= temp @kind object;
  #L1c67f8.  return v3 @kind object;
}
procedure `void` `toggleMask`(`okhttp3.internal.ws.WebSocketProtocol` v7 @kind this, `okio.Buffer$UnsafeCursor` v8 @kind object, `byte`[] v9 @kind object) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1c6844.  v0:= "cursor" @kind object;
  #L1c6848.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c684e.  v0:= "key" @kind object;
  #L1c6852.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c6858.  v0:= length @variable v9;
  #L1c685a.  v1:= 0I;
  #L1c685c.  v2:= v8.`okio.Buffer$UnsafeCursor.data` @type ^`byte`[] @kind object;
  #L1c6860.  v3:= v8.`okio.Buffer$UnsafeCursor.start` @type ^`int`;
  #L1c6864.  v4:= v8.`okio.Buffer$UnsafeCursor.end` @type ^`int`;
  #L1c6868.  if v2 == 0 then goto L1c688c;
  #L1c686c.  if v3 >= v4 then goto L1c688c;
  #L1c6870.  v1:= v1 %% v0 @kind int;
  #L1c6872.  v5:= v2[v3] @kind byte;
  #L1c6876.  v6:= v9[v1] @kind byte;
  #L1c687a.  v5:= v5 ^~ v6 @kind int;
  #L1c687c.  v5:= (`byte`) v5 @kind i2b;
  #L1c687e.  v2[v3]:= v5 @kind byte;
  #L1c6882.  v3:= v3 + 1;
  #L1c6886.  v1:= v1 + 1;
  #L1c688a.  goto L1c686c;
  #L1c688c.  call temp:= `next`(v8) @signature `Lokio/Buffer$UnsafeCursor;.next:()I` @kind virtual;
  #L1c6892.  v2:= temp;
  #L1c6894.  v3:= -1I;
  #L1c6896.  if v2 != v3 then goto L1c685c;
  #L1c689a.  return @kind void;
}
procedure `void` `validateCloseCode`(`okhttp3.internal.ws.WebSocketProtocol` v1 @kind this, `int` v2 ) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.validateCloseCode:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c68ac.  call temp:= `closeCodeExceptionMessage`(v1, v2) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.closeCodeExceptionMessage:(I)Ljava/lang/String;` @kind virtual;
  #L1c68b2.  v2:= temp @kind object;
  #L1c68b4.  if v2 != 0 then goto L1c68bc;
  #L1c68b8.  v0:= 1I;
  #L1c68ba.  goto L1c68be;
  #L1c68bc.  v0:= 0I;
  #L1c68be.  if v0 == 0 then goto L1c68c4;
  #L1c68c2.  return @kind void;
  #L1c68c4.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c68ca.  v0:= new `java.lang.IllegalArgumentException`;
  #L1c68ce.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c68d4.  v2:= temp @kind object;
  #L1c68d6.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c68dc.  throw v0;
}
