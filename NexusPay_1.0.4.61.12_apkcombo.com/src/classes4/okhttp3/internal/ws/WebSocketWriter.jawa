record `okhttp3.internal.ws.WebSocketWriter` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `okio.Buffer` `okhttp3.internal.ws.WebSocketWriter.a` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketWriter.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.c` @AccessFlag PRIVATE;
  `okhttp3.internal.ws.MessageDeflater` `okhttp3.internal.ws.WebSocketWriter.d` @AccessFlag PRIVATE;
  `byte`[] `okhttp3.internal.ws.WebSocketWriter.e` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer$UnsafeCursor` `okhttp3.internal.ws.WebSocketWriter.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.g` @AccessFlag PRIVATE_FINAL;
  `okio.BufferedSink` `okhttp3.internal.ws.WebSocketWriter.h` @AccessFlag PRIVATE_FINAL;
  `java.util.Random` `okhttp3.internal.ws.WebSocketWriter.i` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.j` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.k` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.internal.ws.WebSocketWriter.l` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `boolean` v2 , `okio.BufferedSink` v3 @kind object, `java.util.Random` v4 @kind object, `boolean` v5 , `boolean` v6 , `long` v7 ) @signature `Lokhttp3/internal/ws/WebSocketWriter;.<init>:(ZLokio/BufferedSink;Ljava/util/Random;ZZJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c7034.  v0:= "sink" @kind object;
  #L1c7038.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c703e.  v0:= "random" @kind object;
  #L1c7042.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c7048.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c704e.  v1.`okhttp3.internal.ws.WebSocketWriter.g` @type ^`boolean` := v2 @kind boolean;
  #L1c7052.  v1.`okhttp3.internal.ws.WebSocketWriter.h` @type ^`okio.BufferedSink` := v3 @kind object;
  #L1c7056.  v1.`okhttp3.internal.ws.WebSocketWriter.i` @type ^`java.util.Random` := v4 @kind object;
  #L1c705a.  v1.`okhttp3.internal.ws.WebSocketWriter.j` @type ^`boolean` := v5 @kind boolean;
  #L1c705e.  v1.`okhttp3.internal.ws.WebSocketWriter.k` @type ^`boolean` := v6 @kind boolean;
  #L1c7062.  v1.`okhttp3.internal.ws.WebSocketWriter.l` @type ^`long` := v7 @kind wide;
  #L1c7066.  v2:= new `okio.Buffer`;
  #L1c706a.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1c7070.  v1.`okhttp3.internal.ws.WebSocketWriter.a` @type ^`okio.Buffer` := v2 @kind object;
  #L1c7074.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.h` @type ^`okio.BufferedSink` @kind object;
  #L1c7078.  call temp:= `getBuffer`(v2) @signature `Lokio/BufferedSink;.getBuffer:()Lokio/Buffer;` @kind interface;
  #L1c707e.  v2:= temp @kind object;
  #L1c7080.  v1.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` := v2 @kind object;
  #L1c7084.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.g` @type ^`boolean` @kind boolean;
  #L1c7088.  v3:= 0I;
  #L1c708a.  if v2 == 0 then goto L1c7096;
  #L1c708e.  v2:= 4I;
  #L1c7090.  v2:= new `byte`[v2];
  #L1c7094.  goto L1c7098;
  #L1c7096.  v2:= v3 @kind object;
  #L1c7098.  v1.`okhttp3.internal.ws.WebSocketWriter.e` @type ^`byte`[] := v2 @kind object;
  #L1c709c.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.g` @type ^`boolean` @kind boolean;
  #L1c70a0.  if v2 == 0 then goto L1c70ae;
  #L1c70a4.  v3:= new `okio.Buffer$UnsafeCursor`;
  #L1c70a8.  call `<init>`(v3) @signature `Lokio/Buffer$UnsafeCursor;.<init>:()V` @kind direct;
  #L1c70ae.  v1.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer$UnsafeCursor` := v3 @kind object;
  #L1c70b2.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.ws.WebSocketWriter` v6 @kind this, `int` v7 , `okio.ByteString` v8 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.a:(ILokio/ByteString;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1c7158.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter.c` @type ^`boolean` @kind boolean;
  #L1c715c.  if v0 != 0 then goto L1c7254;
  #L1c7160.  call temp:= `size`(v8) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1c7166.  v0:= temp;
  #L1c7168.  v1:= (`long`) v0 @kind i2l;
  #L1c716a.  v3:= 125L;
  #L1c716e.  v5:= lcmp(v1, v3);
  #L1c7172.  if v5 > 0 then goto L1c717a;
  #L1c7176.  v1:= 1I;
  #L1c7178.  goto L1c717c;
  #L1c717a.  v1:= 0I;
  #L1c717c.  if v1 == 0 then goto L1c723c;
  #L1c7180.  v7:= v7 ^| 128;
  #L1c7184.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L1c7188.  call temp:= `writeByte`(v1, v7) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1c718e.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.g` @type ^`boolean` @kind boolean;
  #L1c7192.  if v7 == 0 then goto L1c721c;
  #L1c7196.  v7:= v0 ^| 128;
  #L1c719a.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L1c719e.  call temp:= `writeByte`(v1, v7) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1c71a4.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.i` @type ^`java.util.Random` @kind object;
  #L1c71a8.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.e` @type ^`byte`[] @kind object;
  #L1c71ac.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c71b2.  call `nextBytes`(v7, v1) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L1c71b8.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L1c71bc.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.e` @type ^`byte`[] @kind object;
  #L1c71c0.  call temp:= `write`(v7, v1) @signature `Lokio/Buffer;.write:([B)Lokio/Buffer;` @kind virtual;
  #L1c71c6.  if v0 <= 0 then goto L1c7230;
  #L1c71ca.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L1c71ce.  call temp:= `size`(v7) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1c71d4.  v0:= temp @kind wide;
  #L1c71d6.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L1c71da.  call temp:= `write`(v7, v8) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L1c71e0.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L1c71e4.  v8:= v6.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1c71e8.  call `checkNotNull`(v8) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c71ee.  call temp:= `readAndWriteUnsafe`(v7, v8) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L1c71f4.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1c71f8.  call temp:= `seek`(v7, v0) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L1c71fe.  v7:= `@@okhttp3.internal.ws.WebSocketProtocol.INSTANCE` @type ^`okhttp3.internal.ws.WebSocketProtocol` @kind object;
  #L1c7202.  v8:= v6.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1c7206.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter.e` @type ^`byte`[] @kind object;
  #L1c720a.  call `toggleMask`(v7, v8, v0) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind virtual;
  #L1c7210.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1c7214.  call `close`(v7) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L1c721a.  goto L1c7230;
  #L1c721c.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L1c7220.  call temp:= `writeByte`(v7, v0) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1c7226.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L1c722a.  call temp:= `write`(v7, v8) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L1c7230.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.h` @type ^`okio.BufferedSink` @kind object;
  #L1c7234.  call `flush`(v7) @signature `Lokio/BufferedSink;.flush:()V` @kind interface;
  #L1c723a.  return @kind void;
  #L1c723c.  v7:= new `java.lang.IllegalArgumentException`;
  #L1c7240.  v8:= "Payload size must be less than or equal to 125" @kind object;
  #L1c7244.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c724a.  v8:= temp @kind object;
  #L1c724c.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c7252.  throw v7;
  #L1c7254.  v7:= new `java.io.IOException`;
  #L1c7258.  v8:= "closed" @kind object;
  #L1c725c.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c7262.  throw v7;
}
procedure `void` `close`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c70c4.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okhttp3.internal.ws.MessageDeflater` @kind object;
  #L1c70c8.  if v0 == 0 then goto L1c70d2;
  #L1c70cc.  call `close`(v0) @signature `Lokhttp3/internal/ws/MessageDeflater;.close:()V` @kind virtual;
  #L1c70d2.  return @kind void;
}
procedure `java.util.Random` `getRandom`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter;.getRandom:()Ljava/util/Random;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c7004.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter.i` @type ^`java.util.Random` @kind object;
  #L1c7008.  return v0 @kind object;
}
procedure `okio.BufferedSink` `getSink`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter;.getSink:()Lokio/BufferedSink;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c701c.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter.h` @type ^`okio.BufferedSink` @kind object;
  #L1c7020.  return v0 @kind object;
}
procedure `void` `writeClose`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `int` v2 , `okio.ByteString` v3 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeClose:(ILokio/ByteString;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c70e4.  v0:= `@@okio.ByteString.EMPTY` @type ^`okio.ByteString` @kind object;
  #L1c70e8.  if v2 != 0 then goto L1c70f0;
  #L1c70ec.  if v3 == 0 then goto L1c7120;
  #L1c70f0.  if v2 == 0 then goto L1c70fe;
  #L1c70f4.  v0:= `@@okhttp3.internal.ws.WebSocketProtocol.INSTANCE` @type ^`okhttp3.internal.ws.WebSocketProtocol` @kind object;
  #L1c70f8.  call `validateCloseCode`(v0, v2) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.validateCloseCode:(I)V` @kind virtual;
  #L1c70fe.  v0:= new `okio.Buffer`;
  #L1c7102.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1c7108.  call temp:= `writeShort`(v0, v2) @signature `Lokio/Buffer;.writeShort:(I)Lokio/Buffer;` @kind virtual;
  #L1c710e.  if v3 == 0 then goto L1c7118;
  #L1c7112.  call temp:= `write`(v0, v3) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L1c7118.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L1c711e.  v0:= temp @kind object;
  #L1c7120.  v2:= 8I;
  #L1c7124.  v3:= 1I;
  #L1c7126.  call `a`(v1, v2, v0) @signature `Lokhttp3/internal/ws/WebSocketWriter;.a:(ILokio/ByteString;)V` @kind direct;
  #L1c712c.  v1.`okhttp3.internal.ws.WebSocketWriter.c` @type ^`boolean` := v3 @kind boolean;
  #L1c7130.  return @kind void;
  #L1c7132.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c7134.  v1.`okhttp3.internal.ws.WebSocketWriter.c` @type ^`boolean` := v3 @kind boolean;
  #L1c7138.  throw v2;
  catch `java.lang.Throwable` @[L1c7126..L1c712c] goto L1c7132;
}
procedure `void` `writeMessageFrame`(`okhttp3.internal.ws.WebSocketWriter` v5 @kind this, `int` v6 , `okio.ByteString` v7 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeMessageFrame:(ILokio/ByteString;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c7274.  v0:= "data" @kind object;
  #L1c7278.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c727e.  v0:= v5.`okhttp3.internal.ws.WebSocketWriter.c` @type ^`boolean` @kind boolean;
  #L1c7282.  if v0 != 0 then goto L1c73ea;
  #L1c7286.  v0:= v5.`okhttp3.internal.ws.WebSocketWriter.a` @type ^`okio.Buffer` @kind object;
  #L1c728a.  call temp:= `write`(v0, v7) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L1c7290.  v0:= 128I;
  #L1c7294.  v6:= v6 ^| v0 @kind int;
  #L1c7296.  v1:= v5.`okhttp3.internal.ws.WebSocketWriter.j` @type ^`boolean` @kind boolean;
  #L1c729a.  if v1 == 0 then goto L1c72de;
  #L1c729e.  call temp:= `size`(v7) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1c72a4.  v7:= temp;
  #L1c72a6.  v1:= (`long`) v7 @kind i2l;
  #L1c72a8.  v3:= v5.`okhttp3.internal.ws.WebSocketWriter.l` @type ^`long` @kind wide;
  #L1c72ac.  v7:= lcmp(v1, v3);
  #L1c72b0.  if v7 < 0 then goto L1c72de;
  #L1c72b4.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okhttp3.internal.ws.MessageDeflater` @kind object;
  #L1c72b8.  if v7 == 0 then goto L1c72be;
  #L1c72bc.  goto L1c72d0;
  #L1c72be.  v7:= new `okhttp3.internal.ws.MessageDeflater`;
  #L1c72c2.  v1:= v5.`okhttp3.internal.ws.WebSocketWriter.k` @type ^`boolean` @kind boolean;
  #L1c72c6.  call `<init>`(v7, v1) @signature `Lokhttp3/internal/ws/MessageDeflater;.<init>:(Z)V` @kind direct;
  #L1c72cc.  v5.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okhttp3.internal.ws.MessageDeflater` := v7 @kind object;
  #L1c72d0.  v1:= v5.`okhttp3.internal.ws.WebSocketWriter.a` @type ^`okio.Buffer` @kind object;
  #L1c72d4.  call `deflate`(v7, v1) @signature `Lokhttp3/internal/ws/MessageDeflater;.deflate:(Lokio/Buffer;)V` @kind virtual;
  #L1c72da.  v6:= v6 ^| 64;
  #L1c72de.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.a` @type ^`okio.Buffer` @kind object;
  #L1c72e2.  call temp:= `size`(v7) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1c72e8.  v1:= temp @kind wide;
  #L1c72ea.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L1c72ee.  call temp:= `writeByte`(v7, v6) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1c72f4.  v6:= 0I;
  #L1c72f6.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.g` @type ^`boolean` @kind boolean;
  #L1c72fa.  if v7 == 0 then goto L1c7300;
  #L1c72fe.  goto L1c7302;
  #L1c7300.  v0:= 0I;
  #L1c7302.  v6:= 125L;
  #L1c7306.  v3:= lcmp(v1, v6);
  #L1c730a.  if v3 > 0 then goto L1c731e;
  #L1c730e.  v6:= (`int`) v1 @kind l2i;
  #L1c7310.  v6:= v6 ^| v0 @kind int;
  #L1c7312.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L1c7316.  call temp:= `writeByte`(v7, v6) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1c731c.  goto L1c7360;
  #L1c731e.  v6:= 65535L;
  #L1c7324.  v3:= lcmp(v1, v6);
  #L1c7328.  if v3 > 0 then goto L1c7348;
  #L1c732c.  v6:= v0 ^| 126;
  #L1c7330.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L1c7334.  call temp:= `writeByte`(v7, v6) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1c733a.  v6:= v5.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L1c733e.  v7:= (`int`) v1 @kind l2i;
  #L1c7340.  call temp:= `writeShort`(v6, v7) @signature `Lokio/Buffer;.writeShort:(I)Lokio/Buffer;` @kind virtual;
  #L1c7346.  goto L1c7360;
  #L1c7348.  v6:= v0 ^| 127;
  #L1c734c.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L1c7350.  call temp:= `writeByte`(v7, v6) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1c7356.  v6:= v5.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L1c735a.  call temp:= `writeLong`(v6, v1) @signature `Lokio/Buffer;.writeLong:(J)Lokio/Buffer;` @kind virtual;
  #L1c7360.  v6:= v5.`okhttp3.internal.ws.WebSocketWriter.g` @type ^`boolean` @kind boolean;
  #L1c7364.  if v6 == 0 then goto L1c73d0;
  #L1c7368.  v6:= v5.`okhttp3.internal.ws.WebSocketWriter.i` @type ^`java.util.Random` @kind object;
  #L1c736c.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.e` @type ^`byte`[] @kind object;
  #L1c7370.  call `checkNotNull`(v7) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c7376.  call `nextBytes`(v6, v7) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L1c737c.  v6:= v5.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L1c7380.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.e` @type ^`byte`[] @kind object;
  #L1c7384.  call temp:= `write`(v6, v7) @signature `Lokio/Buffer;.write:([B)Lokio/Buffer;` @kind virtual;
  #L1c738a.  v6:= 0L;
  #L1c738e.  v0:= lcmp(v1, v6);
  #L1c7392.  if v0 <= 0 then goto L1c73d0;
  #L1c7396.  v0:= v5.`okhttp3.internal.ws.WebSocketWriter.a` @type ^`okio.Buffer` @kind object;
  #L1c739a.  v3:= v5.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1c739e.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c73a4.  call temp:= `readAndWriteUnsafe`(v0, v3) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L1c73aa.  v0:= v5.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1c73ae.  call temp:= `seek`(v0, v6) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L1c73b4.  v6:= `@@okhttp3.internal.ws.WebSocketProtocol.INSTANCE` @type ^`okhttp3.internal.ws.WebSocketProtocol` @kind object;
  #L1c73b8.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1c73bc.  v0:= v5.`okhttp3.internal.ws.WebSocketWriter.e` @type ^`byte`[] @kind object;
  #L1c73c0.  call `toggleMask`(v6, v7, v0) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.toggleMask:(Lokio/Buffer$UnsafeCursor;[B)V` @kind virtual;
  #L1c73c6.  v6:= v5.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L1c73ca.  call `close`(v6) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L1c73d0.  v6:= v5.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`okio.Buffer` @kind object;
  #L1c73d4.  v7:= v5.`okhttp3.internal.ws.WebSocketWriter.a` @type ^`okio.Buffer` @kind object;
  #L1c73d8.  call `write`(v6, v7, v1) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L1c73de.  v6:= v5.`okhttp3.internal.ws.WebSocketWriter.h` @type ^`okio.BufferedSink` @kind object;
  #L1c73e2.  call temp:= `emit`(v6) @signature `Lokio/BufferedSink;.emit:()Lokio/BufferedSink;` @kind interface;
  #L1c73e8.  return @kind void;
  #L1c73ea.  v6:= new `java.io.IOException`;
  #L1c73ee.  v7:= "closed" @kind object;
  #L1c73f2.  call `<init>`(v6, v7) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c73f8.  throw v6;
}
procedure `void` `writePing`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writePing:(Lokio/ByteString;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c740c.  v0:= "payload" @kind object;
  #L1c7410.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c7416.  v0:= 9I;
  #L1c741a.  call `a`(v1, v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter;.a:(ILokio/ByteString;)V` @kind direct;
  #L1c7420.  return @kind void;
}
procedure `void` `writePong`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writePong:(Lokio/ByteString;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c7434.  v0:= "payload" @kind object;
  #L1c7438.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c743e.  v0:= 10I;
  #L1c7442.  call `a`(v1, v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter;.a:(ILokio/ByteString;)V` @kind direct;
  #L1c7448.  return @kind void;
}
