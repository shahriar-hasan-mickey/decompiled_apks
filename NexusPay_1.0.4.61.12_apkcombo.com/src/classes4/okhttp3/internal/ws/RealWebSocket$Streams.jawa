record `okhttp3.internal.ws.RealWebSocket$Streams` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Closeable` @kind interface {
  `boolean` `okhttp3.internal.ws.RealWebSocket$Streams.a` @AccessFlag PRIVATE_FINAL;
  `okio.BufferedSource` `okhttp3.internal.ws.RealWebSocket$Streams.b` @AccessFlag PRIVATE_FINAL;
  `okio.BufferedSink` `okhttp3.internal.ws.RealWebSocket$Streams.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.ws.RealWebSocket$Streams` v1 @kind this, `boolean` v2 , `okio.BufferedSource` v3 @kind object, `okio.BufferedSink` v4 @kind object) @signature `Lokhttp3/internal/ws/RealWebSocket$Streams;.<init>:(ZLokio/BufferedSource;Lokio/BufferedSink;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c4a94.  v0:= "source" @kind object;
  #L1c4a98.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c4a9e.  v0:= "sink" @kind object;
  #L1c4aa2.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c4aa8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c4aae.  v1.`okhttp3.internal.ws.RealWebSocket$Streams.a` @type ^`boolean` := v2 @kind boolean;
  #L1c4ab2.  v1.`okhttp3.internal.ws.RealWebSocket$Streams.b` @type ^`okio.BufferedSource` := v3 @kind object;
  #L1c4ab6.  v1.`okhttp3.internal.ws.RealWebSocket$Streams.c` @type ^`okio.BufferedSink` := v4 @kind object;
  #L1c4aba.  return @kind void;
}
procedure `boolean` `getClient`(`okhttp3.internal.ws.RealWebSocket$Streams` v1 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket$Streams;.getClient:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c4a4c.  v0:= v1.`okhttp3.internal.ws.RealWebSocket$Streams.a` @type ^`boolean` @kind boolean;
  #L1c4a50.  return v0;
}
procedure `okio.BufferedSink` `getSink`(`okhttp3.internal.ws.RealWebSocket$Streams` v1 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket$Streams;.getSink:()Lokio/BufferedSink;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c4a64.  v0:= v1.`okhttp3.internal.ws.RealWebSocket$Streams.c` @type ^`okio.BufferedSink` @kind object;
  #L1c4a68.  return v0 @kind object;
}
procedure `okio.BufferedSource` `getSource`(`okhttp3.internal.ws.RealWebSocket$Streams` v1 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket$Streams;.getSource:()Lokio/BufferedSource;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c4a7c.  v0:= v1.`okhttp3.internal.ws.RealWebSocket$Streams.b` @type ^`okio.BufferedSource` @kind object;
  #L1c4a80.  return v0 @kind object;
}
