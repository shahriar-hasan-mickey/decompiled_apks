record `okhttp3.internal.ws.RealWebSocket$a` @kind class @AccessFlag FINAL extends `okhttp3.internal.concurrent.Task` @kind class {
  `okhttp3.internal.ws.RealWebSocket` `okhttp3.internal.ws.RealWebSocket$a.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.ws.RealWebSocket$a` v3 @kind this, `okhttp3.internal.ws.RealWebSocket` v4 @kind object) @signature `Lokhttp3/internal/ws/RealWebSocket$a;.<init>:(Lokhttp3/internal/ws/RealWebSocket;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1c4b18.  v3.`okhttp3.internal.ws.RealWebSocket$a.e` @type ^`okhttp3.internal.ws.RealWebSocket` := v4 @kind object;
  #L1c4b1c.  v0:= new `java.lang.StringBuilder`;
  #L1c4b20.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c4b26.  call temp:= `access$getName$p`(v4) @signature `Lokhttp3/internal/ws/RealWebSocket;.access$getName$p:(Lokhttp3/internal/ws/RealWebSocket;)Ljava/lang/String;` @kind static;
  #L1c4b2c.  v4:= temp @kind object;
  #L1c4b2e.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c4b34.  v4:= " writer" @kind object;
  #L1c4b38.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c4b3e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c4b44.  v4:= temp @kind object;
  #L1c4b46.  v0:= 0I;
  #L1c4b48.  v1:= 2I;
  #L1c4b4a.  v2:= 0I;
  #L1c4b4c.  call `<init>`(v3, v4, v0, v1, v2) @signature `Lokhttp3/internal/concurrent/Task;.<init>:(Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1c4b52.  return @kind void;
}
procedure `long` `runOnce`(`okhttp3.internal.ws.RealWebSocket$a` v3 @kind this) @signature `Lokhttp3/internal/ws/RealWebSocket$a;.runOnce:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c4acc.  v0:= v3.`okhttp3.internal.ws.RealWebSocket$a.e` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L1c4ad0.  call temp:= `writeOneFrame$okhttp`(v0) @signature `Lokhttp3/internal/ws/RealWebSocket;.writeOneFrame$okhttp:()Z` @kind virtual;
  #L1c4ad6.  v0:= temp;
  #L1c4ad8.  if v0 == 0 then goto L1c4af0;
  #L1c4adc.  v0:= 0L;
  #L1c4ae0.  return v0 @kind wide;
  #L1c4ae2.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1c4ae4.  v1:= v3.`okhttp3.internal.ws.RealWebSocket$a.e` @type ^`okhttp3.internal.ws.RealWebSocket` @kind object;
  #L1c4ae8.  v2:= 0I;
  #L1c4aea.  call `failWebSocket`(v1, v0, v2) @signature `Lokhttp3/internal/ws/RealWebSocket;.failWebSocket:(Ljava/lang/Exception;Lokhttp3/Response;)V` @kind virtual;
  #L1c4af0.  v0:= -1L;
  #L1c4af4.  return v0 @kind wide;
  catch `java.io.IOException` @[L1c4acc..L1c4ad8] goto L1c4ae2;
}
