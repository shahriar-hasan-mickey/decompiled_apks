record `okhttp3.internal.platform.OpenJSSEPlatform` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.platform.Platform` @kind class {
  `java.security.Provider` `okhttp3.internal.platform.OpenJSSEPlatform.c` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.platform.OpenJSSEPlatform$Companion` `@@okhttp3.internal.platform.OpenJSSEPlatform.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `boolean` `@@okhttp3.internal.platform.OpenJSSEPlatform.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/platform/OpenJSSEPlatform;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1c124c.  v0:= new `okhttp3.internal.platform.OpenJSSEPlatform$Companion`;
  #L1c1250.  v1:= 0I;
  #L1c1252.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/platform/OpenJSSEPlatform$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1c1258.  `@@okhttp3.internal.platform.OpenJSSEPlatform.Companion` @type ^`okhttp3.internal.platform.OpenJSSEPlatform$Companion` := v0 @kind object;
  #L1c125c.  v1:= 0I;
  #L1c125e.  v2:= "org.openjsse.net.ssl.OpenJSSE" @kind object;
  #L1c1262.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1c1268.  v0:= temp @kind object;
  #L1c126a.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1c1270.  v0:= temp @kind object;
  #L1c1272.  call temp:= `forName`(v2, v1, v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L1c1278.  v1:= 1I;
  #L1c127a.  `@@okhttp3.internal.platform.OpenJSSEPlatform.d` @type ^`boolean` := v1 @kind boolean;
  #L1c127e.  return @kind void;
  catch `java.lang.ClassNotFoundException` @[L1c125e..L1c1278] goto L1c127a;
}
procedure `void` `<init>`(`okhttp3.internal.platform.OpenJSSEPlatform` v1 @kind this) @signature `Lokhttp3/internal/platform/OpenJSSEPlatform;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L1c12a0.  call `<init>`(v1) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L1c12a6.  v0:= new `org.openjsse.net.ssl.OpenJSSE`;
  #L1c12aa.  call `<init>`(v0) @signature `Lorg/openjsse/net/ssl/OpenJSSE;.<init>:()V` @kind direct;
  #L1c12b0.  v0:= (`java.security.Provider`) v0 @kind object;
  #L1c12b4.  v1.`okhttp3.internal.platform.OpenJSSEPlatform.c` @type ^`java.security.Provider` := v0 @kind object;
  #L1c12b8.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.OpenJSSEPlatform` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/internal/platform/OpenJSSEPlatform;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1c12cc.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/OpenJSSEPlatform;.<init>:()V` @kind direct;
  #L1c12d2.  return @kind void;
}
procedure `boolean` `access$isSupported$cp`() @signature `Lokhttp3/internal/platform/OpenJSSEPlatform;.access$isSupported$cp:()Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L1c10b4.  v0:= `@@okhttp3.internal.platform.OpenJSSEPlatform.d` @type ^`boolean` @kind boolean;
  #L1c10b8.  return v0;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.OpenJSSEPlatform` v2 @kind this, `javax.net.ssl.SSLSocket` v3 @kind object, `java.lang.String` v4 @kind object, `java.util.List` v5 @kind object) @signature `Lokhttp3/internal/platform/OpenJSSEPlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c12e4.  v0:= "sslSocket" @kind object;
  #L1c12e8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c12ee.  v0:= "protocols" @kind object;
  #L1c12f2.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c12f8.  v0:= instanceof @variable v3 @type ^`org.openjsse.javax.net.ssl.SSLSocket` @kind boolean;
  #L1c12fc.  if v0 == 0 then goto L1c135a;
  #L1c1300.  v3:= (`org.openjsse.javax.net.ssl.SSLSocket`) v3 @kind object;
  #L1c1304.  call temp:= `getSSLParameters`(v3) @signature `Lorg/openjsse/javax/net/ssl/SSLSocket;.getSSLParameters:()Ljavax/net/ssl/SSLParameters;` @kind virtual;
  #L1c130a.  v4:= temp @kind object;
  #L1c130c.  v0:= instanceof @variable v4 @type ^`org.openjsse.javax.net.ssl.SSLParameters` @kind boolean;
  #L1c1310.  if v0 == 0 then goto L1c1360;
  #L1c1314.  v0:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L1c1318.  call temp:= `alpnProtocolNames`(v0, v5) @signature `Lokhttp3/internal/platform/Platform$Companion;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind virtual;
  #L1c131e.  v5:= temp @kind object;
  #L1c1320.  v0:= v4 @kind object;
  #L1c1322.  v0:= (`org.openjsse.javax.net.ssl.SSLParameters`) v0 @kind object;
  #L1c1326.  v1:= 0I;
  #L1c1328.  v1:= new `java.lang.String`[v1];
  #L1c132c.  call temp:= `toArray`(v5, v1) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1c1332.  v5:= temp @kind object;
  #L1c1334.  if v5 == 0 then goto L1c134a;
  #L1c1338.  v5:= (`java.lang.String`[]) v5 @kind object;
  #L1c133c.  call `setApplicationProtocols`(v0, v5) @signature `Lorg/openjsse/javax/net/ssl/SSLParameters;.setApplicationProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L1c1342.  call `setSSLParameters`(v3, v4) @signature `Lorg/openjsse/javax/net/ssl/SSLSocket;.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V` @kind virtual;
  #L1c1348.  goto L1c1360;
  #L1c134a.  v3:= new `java.lang.NullPointerException`;
  #L1c134e.  v4:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L1c1352.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c1358.  throw v3;
  #L1c135a.  call `configureTlsExtensions`(v2, v3, v4, v5) @signature `Lokhttp3/internal/platform/Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @kind super;
  #L1c1360.  return @kind void;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.OpenJSSEPlatform` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object) @signature `Lokhttp3/internal/platform/OpenJSSEPlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c10cc.  v0:= "sslSocket" @kind object;
  #L1c10d0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c10d6.  v0:= instanceof @variable v2 @type ^`org.openjsse.javax.net.ssl.SSLSocket` @kind boolean;
  #L1c10da.  if v0 == 0 then goto L1c1112;
  #L1c10de.  v2:= (`org.openjsse.javax.net.ssl.SSLSocket`) v2 @kind object;
  #L1c10e2.  call temp:= `getApplicationProtocol`(v2) @signature `Lorg/openjsse/javax/net/ssl/SSLSocket;.getApplicationProtocol:()Ljava/lang/String;` @kind virtual;
  #L1c10e8.  v2:= temp @kind object;
  #L1c10ea.  if v2 != 0 then goto L1c10f0;
  #L1c10ee.  goto L1c110e;
  #L1c10f0.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1c10f6.  v0:= temp;
  #L1c10f8.  if v0 == 0 then goto L1c10fe;
  #L1c10fc.  goto L1c111a;
  #L1c10fe.  v0:= "" @kind object;
  #L1c1102.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c1108.  v0:= temp;
  #L1c110a.  if v0 == 0 then goto L1c111a;
  #L1c110e.  v2:= 0I;
  #L1c1110.  goto L1c111a;
  #L1c1112.  call temp:= `getSelectedProtocol`(v1, v2) @signature `Lokhttp3/internal/platform/Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind super;
  #L1c1118.  v2:= temp @kind object;
  #L1c111a.  return v2 @kind object;
}
procedure `javax.net.ssl.SSLContext` `newSSLContext`(`okhttp3.internal.platform.OpenJSSEPlatform` v2 @kind this) @signature `Lokhttp3/internal/platform/OpenJSSEPlatform;.newSSLContext:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c112c.  v0:= v2.`okhttp3.internal.platform.OpenJSSEPlatform.c` @type ^`java.security.Provider` @kind object;
  #L1c1130.  v1:= "TLSv1.3" @kind object;
  #L1c1134.  call temp:= `getInstance`(v1, v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L1c113a.  v0:= temp @kind object;
  #L1c113c.  v1:= "SSLContext.getInstance(\"TLSv1.3\", provider)" @kind object;
  #L1c1140.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c1146.  return v0 @kind object;
}
procedure `javax.net.ssl.X509TrustManager` `platformTrustManager`(`okhttp3.internal.platform.OpenJSSEPlatform` v4 @kind this) @signature `Lokhttp3/internal/platform/OpenJSSEPlatform;.platformTrustManager:()Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c1158.  call temp:= `getDefaultAlgorithm`() @signature `Ljavax/net/ssl/TrustManagerFactory;.getDefaultAlgorithm:()Ljava/lang/String;` @kind static;
  #L1c115e.  v0:= temp @kind object;
  #L1c1160.  v1:= v4.`okhttp3.internal.platform.OpenJSSEPlatform.c` @type ^`java.security.Provider` @kind object;
  #L1c1164.  call temp:= `getInstance`(v0, v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L1c116a.  v0:= temp @kind object;
  #L1c116c.  v1:= 0I;
  #L1c116e.  call `init`(v0, v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L1c1174.  v1:= "factory" @kind object;
  #L1c1178.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c117e.  call temp:= `getTrustManagers`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L1c1184.  v0:= temp @kind object;
  #L1c1186.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c118c.  v1:= length @variable v0;
  #L1c118e.  v2:= 1I;
  #L1c1190.  v3:= 0I;
  #L1c1192.  if v1 != v2 then goto L1c11a4;
  #L1c1196.  v1:= v0[v3] @kind object;
  #L1c119a.  v1:= instanceof @variable v1 @type ^`javax.net.ssl.X509TrustManager` @kind boolean;
  #L1c119e.  if v1 == 0 then goto L1c11a4;
  #L1c11a2.  goto L1c11a6;
  #L1c11a4.  v2:= 0I;
  #L1c11a6.  if v2 == 0 then goto L1c11c8;
  #L1c11aa.  v0:= v0[v3] @kind object;
  #L1c11ae.  if v0 == 0 then goto L1c11b8;
  #L1c11b2.  v0:= (`javax.net.ssl.X509TrustManager`) v0 @kind object;
  #L1c11b6.  return v0 @kind object;
  #L1c11b8.  v0:= new `java.lang.NullPointerException`;
  #L1c11bc.  v1:= "null cannot be cast to non-null type javax.net.ssl.X509TrustManager" @kind object;
  #L1c11c0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c11c6.  throw v0;
  #L1c11c8.  v1:= new `java.lang.StringBuilder`;
  #L1c11cc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c11d2.  v2:= "Unexpected default trust managers: " @kind object;
  #L1c11d6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c11dc.  call temp:= `toString`(v0) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1c11e2.  v0:= temp @kind object;
  #L1c11e4.  v2:= "java.util.Arrays.toString(this)" @kind object;
  #L1c11e8.  call `checkNotNullExpressionValue`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c11ee.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c11f4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c11fa.  v0:= temp @kind object;
  #L1c11fc.  v1:= new `java.lang.IllegalStateException`;
  #L1c1200.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c1206.  v0:= temp @kind object;
  #L1c1208.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c120e.  throw v1;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.OpenJSSEPlatform` v1 @kind this, `javax.net.ssl.SSLSocketFactory` v2 @kind object) @signature `Lokhttp3/internal/platform/OpenJSSEPlatform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1220.  v0:= "sslSocketFactory" @kind object;
  #L1c1224.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c122a.  v2:= new `java.lang.UnsupportedOperationException`;
  #L1c122e.  v0:= "clientBuilder.sslSocketFactory(SSLSocketFactory) not supported with OpenJSSE" @kind object;
  #L1c1232.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c1238.  throw v2;
}
