record `okhttp3.internal.platform.ConscryptPlatform` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.platform.Platform` @kind class {
  `java.security.Provider` `okhttp3.internal.platform.ConscryptPlatform.c` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.platform.ConscryptPlatform$Companion` `@@okhttp3.internal.platform.ConscryptPlatform.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `boolean` `@@okhttp3.internal.platform.ConscryptPlatform.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/platform/ConscryptPlatform;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c068c.  v0:= new `okhttp3.internal.platform.ConscryptPlatform$Companion`;
  #L1c0690.  v1:= 0I;
  #L1c0692.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1c0698.  `@@okhttp3.internal.platform.ConscryptPlatform.Companion` @type ^`okhttp3.internal.platform.ConscryptPlatform$Companion` := v0 @kind object;
  #L1c069c.  v1:= 0I;
  #L1c069e.  v2:= "org.conscrypt.Conscrypt$Version" @kind object;
  #L1c06a2.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1c06a8.  v0:= temp @kind object;
  #L1c06aa.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1c06b0.  v0:= temp @kind object;
  #L1c06b2.  call temp:= `forName`(v2, v1, v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L1c06b8.  call temp:= `isAvailable`() @signature `Lorg/conscrypt/Conscrypt;.isAvailable:()Z` @kind static;
  #L1c06be.  v0:= temp;
  #L1c06c0.  v2:= 1I;
  #L1c06c2.  if v0 == 0 then goto L1c06da;
  #L1c06c6.  v0:= `@@okhttp3.internal.platform.ConscryptPlatform.Companion` @type ^`okhttp3.internal.platform.ConscryptPlatform$Companion` @kind object;
  #L1c06ca.  v3:= 2I;
  #L1c06cc.  call temp:= `atLeastVersion`(v0, v3, v2, v1) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.atLeastVersion:(III)Z` @kind virtual;
  #L1c06d2.  v0:= temp;
  #L1c06d4.  if v0 == 0 then goto L1c06da;
  #L1c06d8.  v1:= 1I;
  #L1c06da.  `@@okhttp3.internal.platform.ConscryptPlatform.d` @type ^`boolean` := v1 @kind boolean;
  #L1c06de.  return @kind void;
  catch `java.lang.NoClassDefFoundError` @[L1c069e..L1c06d4] goto L1c06da;
  catch `java.lang.ClassNotFoundException` @[L1c069e..L1c06d4] goto L1c06da;
}
procedure `void` `<init>`(`okhttp3.internal.platform.ConscryptPlatform` v2 @kind this) @signature `Lokhttp3/internal/platform/ConscryptPlatform;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1c0700.  call `<init>`(v2) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L1c0706.  call temp:= `newProvider`() @signature `Lorg/conscrypt/Conscrypt;.newProvider:()Ljava/security/Provider;` @kind static;
  #L1c070c.  v0:= temp @kind object;
  #L1c070e.  v1:= "Conscrypt.newProvider()" @kind object;
  #L1c0712.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c0718.  v2.`okhttp3.internal.platform.ConscryptPlatform.c` @type ^`java.security.Provider` := v0 @kind object;
  #L1c071c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.ConscryptPlatform` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/internal/platform/ConscryptPlatform;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1c0730.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/ConscryptPlatform;.<init>:()V` @kind direct;
  #L1c0736.  return @kind void;
}
procedure `boolean` `access$isSupported$cp`() @signature `Lokhttp3/internal/platform/ConscryptPlatform;.access$isSupported$cp:()Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L1c04cc.  v0:= `@@okhttp3.internal.platform.ConscryptPlatform.d` @type ^`boolean` @kind boolean;
  #L1c04d0.  return v0;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.ConscryptPlatform` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object, `java.lang.String` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lokhttp3/internal/platform/ConscryptPlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c0748.  v0:= "sslSocket" @kind object;
  #L1c074c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c0752.  v0:= "protocols" @kind object;
  #L1c0756.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c075c.  call temp:= `isConscrypt`(v2) @signature `Lorg/conscrypt/Conscrypt;.isConscrypt:(Ljavax/net/ssl/SSLSocket;)Z` @kind static;
  #L1c0762.  v0:= temp;
  #L1c0764.  if v0 == 0 then goto L1c07aa;
  #L1c0768.  v3:= 1I;
  #L1c076a.  call `setUseSessionTickets`(v2, v3) @signature `Lorg/conscrypt/Conscrypt;.setUseSessionTickets:(Ljavax/net/ssl/SSLSocket;Z)V` @kind static;
  #L1c0770.  v3:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L1c0774.  call temp:= `alpnProtocolNames`(v3, v4) @signature `Lokhttp3/internal/platform/Platform$Companion;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind virtual;
  #L1c077a.  v3:= temp @kind object;
  #L1c077c.  v4:= 0I;
  #L1c077e.  v4:= new `java.lang.String`[v4];
  #L1c0782.  call temp:= `toArray`(v3, v4) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1c0788.  v3:= temp @kind object;
  #L1c078a.  if v3 == 0 then goto L1c079a;
  #L1c078e.  v3:= (`java.lang.String`[]) v3 @kind object;
  #L1c0792.  call `setApplicationProtocols`(v2, v3) @signature `Lorg/conscrypt/Conscrypt;.setApplicationProtocols:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)V` @kind static;
  #L1c0798.  goto L1c07b0;
  #L1c079a.  v2:= new `java.lang.NullPointerException`;
  #L1c079e.  v3:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L1c07a2.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c07a8.  throw v2;
  #L1c07aa.  call `configureTlsExtensions`(v1, v2, v3, v4) @signature `Lokhttp3/internal/platform/Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @kind super;
  #L1c07b0.  return @kind void;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.ConscryptPlatform` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object) @signature `Lokhttp3/internal/platform/ConscryptPlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c04e4.  v0:= "sslSocket" @kind object;
  #L1c04e8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c04ee.  call temp:= `isConscrypt`(v2) @signature `Lorg/conscrypt/Conscrypt;.isConscrypt:(Ljavax/net/ssl/SSLSocket;)Z` @kind static;
  #L1c04f4.  v0:= temp;
  #L1c04f6.  if v0 == 0 then goto L1c0504;
  #L1c04fa.  call temp:= `getApplicationProtocol`(v2) @signature `Lorg/conscrypt/Conscrypt;.getApplicationProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind static;
  #L1c0500.  v2:= temp @kind object;
  #L1c0502.  goto L1c050c;
  #L1c0504.  call temp:= `getSelectedProtocol`(v1, v2) @signature `Lokhttp3/internal/platform/Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind super;
  #L1c050a.  v2:= temp @kind object;
  #L1c050c.  return v2 @kind object;
}
procedure `javax.net.ssl.SSLContext` `newSSLContext`(`okhttp3.internal.platform.ConscryptPlatform` v2 @kind this) @signature `Lokhttp3/internal/platform/ConscryptPlatform;.newSSLContext:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c0520.  v0:= v2.`okhttp3.internal.platform.ConscryptPlatform.c` @type ^`java.security.Provider` @kind object;
  #L1c0524.  v1:= "TLS" @kind object;
  #L1c0528.  call temp:= `getInstance`(v1, v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L1c052e.  v0:= temp @kind object;
  #L1c0530.  v1:= "SSLContext.getInstance(\"TLS\", provider)" @kind object;
  #L1c0534.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c053a.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `newSslSocketFactory`(`okhttp3.internal.platform.ConscryptPlatform` v3 @kind this, `javax.net.ssl.X509TrustManager` v4 @kind object) @signature `Lokhttp3/internal/platform/ConscryptPlatform;.newSslSocketFactory:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c054c.  v0:= "trustManager" @kind object;
  #L1c0550.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c0556.  call temp:= `newSSLContext`(v3) @signature `Lokhttp3/internal/platform/ConscryptPlatform;.newSSLContext:()Ljavax/net/ssl/SSLContext;` @kind virtual;
  #L1c055c.  v0:= temp @kind object;
  #L1c055e.  v1:= 1I;
  #L1c0560.  v1:= new `javax.net.ssl.TrustManager`[v1];
  #L1c0564.  v2:= 0I;
  #L1c0566.  v1[v2]:= v4 @kind object;
  #L1c056a.  v4:= 0I;
  #L1c056c.  call `init`(v0, v4, v1, v4) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L1c0572.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L1c0578.  v4:= temp @kind object;
  #L1c057a.  v0:= "newSSLContext().apply {\n…null)\n    }.socketFactory" @kind object;
  #L1c057e.  call `checkNotNullExpressionValue`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c0584.  return v4 @kind object;
}
procedure `javax.net.ssl.X509TrustManager` `platformTrustManager`(`okhttp3.internal.platform.ConscryptPlatform` v4 @kind this) @signature `Lokhttp3/internal/platform/ConscryptPlatform;.platformTrustManager:()Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c0598.  call temp:= `getDefaultAlgorithm`() @signature `Ljavax/net/ssl/TrustManagerFactory;.getDefaultAlgorithm:()Ljava/lang/String;` @kind static;
  #L1c059e.  v0:= temp @kind object;
  #L1c05a0.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L1c05a6.  v0:= temp @kind object;
  #L1c05a8.  v1:= 0I;
  #L1c05aa.  call `init`(v0, v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L1c05b0.  v1:= "TrustManagerFactory.getI…(null as KeyStore?)\n    }" @kind object;
  #L1c05b4.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c05ba.  call temp:= `getTrustManagers`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L1c05c0.  v0:= temp @kind object;
  #L1c05c2.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c05c8.  v1:= length @variable v0;
  #L1c05ca.  v2:= 1I;
  #L1c05cc.  v3:= 0I;
  #L1c05ce.  if v1 != v2 then goto L1c05e0;
  #L1c05d2.  v1:= v0[v3] @kind object;
  #L1c05d6.  v1:= instanceof @variable v1 @type ^`javax.net.ssl.X509TrustManager` @kind boolean;
  #L1c05da.  if v1 == 0 then goto L1c05e0;
  #L1c05de.  goto L1c05e2;
  #L1c05e0.  v2:= 0I;
  #L1c05e2.  if v2 == 0 then goto L1c0612;
  #L1c05e6.  v0:= v0[v3] @kind object;
  #L1c05ea.  if v0 == 0 then goto L1c0602;
  #L1c05ee.  v0:= (`javax.net.ssl.X509TrustManager`) v0 @kind object;
  #L1c05f2.  v1:= `@@okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier` @kind object;
  #L1c05f6.  v1:= (`org.conscrypt.ConscryptHostnameVerifier`) v1 @kind object;
  #L1c05fa.  call `setHostnameVerifier`(v0, v1) @signature `Lorg/conscrypt/Conscrypt;.setHostnameVerifier:(Ljavax/net/ssl/TrustManager;Lorg/conscrypt/ConscryptHostnameVerifier;)V` @kind static;
  #L1c0600.  return v0 @kind object;
  #L1c0602.  v0:= new `java.lang.NullPointerException`;
  #L1c0606.  v1:= "null cannot be cast to non-null type javax.net.ssl.X509TrustManager" @kind object;
  #L1c060a.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c0610.  throw v0;
  #L1c0612.  v1:= new `java.lang.StringBuilder`;
  #L1c0616.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c061c.  v2:= "Unexpected default trust managers: " @kind object;
  #L1c0620.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c0626.  call temp:= `toString`(v0) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1c062c.  v0:= temp @kind object;
  #L1c062e.  v2:= "java.util.Arrays.toString(this)" @kind object;
  #L1c0632.  call `checkNotNullExpressionValue`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c0638.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c063e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c0644.  v0:= temp @kind object;
  #L1c0646.  v1:= new `java.lang.IllegalStateException`;
  #L1c064a.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c0650.  v0:= temp @kind object;
  #L1c0652.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c0658.  throw v1;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.ConscryptPlatform` v1 @kind this, `javax.net.ssl.SSLSocketFactory` v2 @kind object) @signature `Lokhttp3/internal/platform/ConscryptPlatform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c066c.  v0:= "sslSocketFactory" @kind object;
  #L1c0670.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c0676.  v2:= 0I;
  #L1c0678.  return v2 @kind object;
}
