record `okhttp3.internal.platform.Platform` @kind class @AccessFlag PUBLIC {
}
global `okhttp3.internal.platform.Platform$Companion` `@@okhttp3.internal.platform.Platform.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.platform.Platform.INFO` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.platform.Platform.WARN` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.internal.platform.Platform` `@@okhttp3.internal.platform.Platform.a` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `java.util.logging.Logger` `@@okhttp3.internal.platform.Platform.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/platform/Platform;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1c1ab8.  v0:= new `okhttp3.internal.platform.Platform$Companion`;
  #L1c1abc.  v1:= 0I;
  #L1c1abe.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/platform/Platform$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1c1ac4.  `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` := v0 @kind object;
  #L1c1ac8.  call temp:= `access$findPlatform`(v0) @signature `Lokhttp3/internal/platform/Platform$Companion;.access$findPlatform:(Lokhttp3/internal/platform/Platform$Companion;)Lokhttp3/internal/platform/Platform;` @kind static;
  #L1c1ace.  v0:= temp @kind object;
  #L1c1ad0.  `@@okhttp3.internal.platform.Platform.a` @type ^`okhttp3.internal.platform.Platform` := v0 @kind object;
  #L1c1ad4.  v0:= constclass @type ^`okhttp3.OkHttpClient` @kind object;
  #L1c1ad8.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1c1ade.  v0:= temp @kind object;
  #L1c1ae0.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L1c1ae6.  v0:= temp @kind object;
  #L1c1ae8.  `@@okhttp3.internal.platform.Platform.b` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L1c1aec.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.Platform` v0 @kind this) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1c1b00.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c1b06.  return @kind void;
}
procedure `okhttp3.internal.platform.Platform` `access$getPlatform$cp`() @signature `Lokhttp3/internal/platform/Platform;.access$getPlatform$cp:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L1c1a08.  v0:= `@@okhttp3.internal.platform.Platform.a` @type ^`okhttp3.internal.platform.Platform` @kind object;
  #L1c1a0c.  return v0 @kind object;
}
procedure `void` `access$setPlatform$cp`(`okhttp3.internal.platform.Platform` v0 @kind object) @signature `Lokhttp3/internal/platform/Platform;.access$setPlatform$cp:(Lokhttp3/internal/platform/Platform;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1c1b18.  `@@okhttp3.internal.platform.Platform.a` @type ^`okhttp3.internal.platform.Platform` := v0 @kind object;
  #L1c1b1c.  return @kind void;
}
procedure `okhttp3.internal.platform.Platform` `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1c1a20.  v0:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L1c1a24.  call temp:= `get`(v0) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L1c1a2a.  v0:= temp @kind object;
  #L1c1a2c.  return v0 @kind object;
}
procedure `void` `log$default`(`okhttp3.internal.platform.Platform` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Throwable` v4 @kind object, `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lokhttp3/internal/platform/Platform;.log$default:(Lokhttp3/internal/platform/Platform;Ljava/lang/String;ILjava/lang/Throwable;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L1c1ba0.  if v6 != 0 then goto L1c1bc0;
  #L1c1ba4.  v6:= v5 ^& 2;
  #L1c1ba8.  v0:= 4I;
  #L1c1baa.  if v6 == 0 then goto L1c1bb0;
  #L1c1bae.  v3:= 4I;
  #L1c1bb0.  v5:= v5 ^& v0 @kind int;
  #L1c1bb2.  if v5 == 0 then goto L1c1bb8;
  #L1c1bb6.  v4:= 0I;
  #L1c1bb8.  call `log`(v1, v2, v3, v4) @signature `Lokhttp3/internal/platform/Platform;.log:(Ljava/lang/String;ILjava/lang/Throwable;)V` @kind virtual;
  #L1c1bbe.  return @kind void;
  #L1c1bc0.  v1:= new `java.lang.UnsupportedOperationException`;
  #L1c1bc4.  v2:= "Super calls with default arguments not supported in this target, function: log" @kind object;
  #L1c1bc8.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c1bce.  throw v1;
}
procedure `void` `afterHandshake`(`okhttp3.internal.platform.Platform` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object) @signature `Lokhttp3/internal/platform/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1b30.  v0:= "sslSocket" @kind object;
  #L1c1b34.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c1b3a.  return @kind void;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.Platform` v1 @kind this, `javax.net.ssl.X509TrustManager` v2 @kind object) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1a40.  v0:= "trustManager" @kind object;
  #L1c1a44.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c1a4a.  v0:= new `okhttp3.internal.tls.BasicCertificateChainCleaner`;
  #L1c1a4e.  call temp:= `buildTrustRootIndex`(v1, v2) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @kind virtual;
  #L1c1a54.  v2:= temp @kind object;
  #L1c1a56.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.<init>:(Lokhttp3/internal/tls/TrustRootIndex;)V` @kind direct;
  #L1c1a5c.  return v0 @kind object;
}
procedure `okhttp3.internal.tls.TrustRootIndex` `buildTrustRootIndex`(`okhttp3.internal.platform.Platform` v2 @kind this, `javax.net.ssl.X509TrustManager` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c1a70.  v0:= "trustManager" @kind object;
  #L1c1a74.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c1a7a.  v0:= new `okhttp3.internal.tls.BasicTrustRootIndex`;
  #L1c1a7e.  call temp:= `getAcceptedIssuers`(v3) @signature `Ljavax/net/ssl/X509TrustManager;.getAcceptedIssuers:()[Ljava/security/cert/X509Certificate;` @kind interface;
  #L1c1a84.  v3:= temp @kind object;
  #L1c1a86.  v1:= "trustManager.acceptedIssuers" @kind object;
  #L1c1a8a.  call `checkNotNullExpressionValue`(v3, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c1a90.  v1:= length @variable v3;
  #L1c1a92.  call temp:= `copyOf`(v3, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L1c1a98.  v3:= temp @kind object;
  #L1c1a9a.  v3:= (`java.security.cert.X509Certificate`[]) v3 @kind object;
  #L1c1a9e.  call `<init>`(v0, v3) @signature `Lokhttp3/internal/tls/BasicTrustRootIndex;.<init>:([Ljava/security/cert/X509Certificate;)V` @kind direct;
  #L1c1aa4.  return v0 @kind object;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L1c1b4c.  v2:= "sslSocket" @kind object;
  #L1c1b50.  call `checkNotNullParameter`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c1b56.  v1:= "protocols" @kind object;
  #L1c1b5a.  call `checkNotNullParameter`(v3, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c1b60.  return @kind void;
}
procedure `void` `connectSocket`(`okhttp3.internal.platform.Platform` v1 @kind this, `java.net.Socket` v2 @kind object, `java.net.InetSocketAddress` v3 @kind object, `int` v4 ) @signature `Lokhttp3/internal/platform/Platform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1b74.  v0:= "socket" @kind object;
  #L1c1b78.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c1b7e.  v0:= "address" @kind object;
  #L1c1b82.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c1b88.  call `connect`(v2, v3, v4) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L1c1b8e.  return @kind void;
}
procedure `java.lang.String` `getPrefix`(`okhttp3.internal.platform.Platform` v1 @kind this) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c1794.  v0:= "OkHttp" @kind object;
  #L1c1798.  return v0 @kind object;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.Platform` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object) @signature `Lokhttp3/internal/platform/Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c17ac.  v0:= "sslSocket" @kind object;
  #L1c17b0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c17b6.  v2:= 0I;
  #L1c17b8.  return v2 @kind object;
}
procedure `java.lang.Object` `getStackTraceForCloseable`(`okhttp3.internal.platform.Platform` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c1754.  v0:= "closer" @kind object;
  #L1c1758.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c175e.  v0:= `@@okhttp3.internal.platform.Platform.b` @type ^`java.util.logging.Logger` @kind object;
  #L1c1762.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L1c1766.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L1c176c.  v0:= temp;
  #L1c176e.  if v0 == 0 then goto L1c177e;
  #L1c1772.  v0:= new `java.lang.Throwable`;
  #L1c1776.  call `<init>`(v0, v3) @signature `Ljava/lang/Throwable;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c177c.  goto L1c1780;
  #L1c177e.  v0:= 0I;
  #L1c1780.  return v0 @kind object;
}
procedure `boolean` `isCleartextTrafficPermitted`(`okhttp3.internal.platform.Platform` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1734.  v0:= "hostname" @kind object;
  #L1c1738.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c173e.  v2:= 1I;
  #L1c1740.  return v2;
}
procedure `void` `log`(`okhttp3.internal.platform.Platform` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Throwable` v4 @kind object) @signature `Lokhttp3/internal/platform/Platform;.log:(Ljava/lang/String;ILjava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1be0.  v0:= "message" @kind object;
  #L1c1be4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c1bea.  v0:= 5I;
  #L1c1bec.  if v3 != v0 then goto L1c1bf6;
  #L1c1bf0.  v3:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L1c1bf4.  goto L1c1bfa;
  #L1c1bf6.  v3:= `@@java.util.logging.Level.INFO` @type ^`java.util.logging.Level` @kind object;
  #L1c1bfa.  v0:= `@@okhttp3.internal.platform.Platform.b` @type ^`java.util.logging.Logger` @kind object;
  #L1c1bfe.  call `log`(v0, v3, v2, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L1c1c04.  return @kind void;
}
procedure `void` `logCloseableLeak`(`okhttp3.internal.platform.Platform` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.logCloseableLeak:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1c18.  v0:= "message" @kind object;
  #L1c1c1c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c1c22.  if v3 != 0 then goto L1c1c48;
  #L1c1c26.  v0:= new `java.lang.StringBuilder`;
  #L1c1c2a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c1c30.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c1c36.  v2:= " To see where this was allocated, set the OkHttpClient logger level to FINE: Logger.getLogger(OkHttpClient.class.getName()).setLevel(Level.FINE);" @kind object;
  #L1c1c3a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c1c40.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c1c46.  v2:= temp @kind object;
  #L1c1c48.  v0:= 5I;
  #L1c1c4a.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L1c1c4e.  call `log`(v1, v2, v0, v3) @signature `Lokhttp3/internal/platform/Platform;.log:(Ljava/lang/String;ILjava/lang/Throwable;)V` @kind virtual;
  #L1c1c54.  return @kind void;
}
procedure `javax.net.ssl.SSLContext` `newSSLContext`(`okhttp3.internal.platform.Platform` v2 @kind this) @signature `Lokhttp3/internal/platform/Platform;.newSSLContext:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c17f8.  v0:= "TLS" @kind object;
  #L1c17fc.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L1c1802.  v0:= temp @kind object;
  #L1c1804.  v1:= "SSLContext.getInstance(\"TLS\")" @kind object;
  #L1c1808.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c180e.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `newSslSocketFactory`(`okhttp3.internal.platform.Platform` v3 @kind this, `javax.net.ssl.X509TrustManager` v4 @kind object) @signature `Lokhttp3/internal/platform/Platform;.newSslSocketFactory:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c1820.  v0:= "trustManager" @kind object;
  #L1c1824.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c182a.  call temp:= `newSSLContext`(v3) @signature `Lokhttp3/internal/platform/Platform;.newSSLContext:()Ljavax/net/ssl/SSLContext;` @kind virtual;
  #L1c1830.  v0:= temp @kind object;
  #L1c1832.  v1:= 1I;
  #L1c1834.  v1:= new `javax.net.ssl.TrustManager`[v1];
  #L1c1838.  v2:= 0I;
  #L1c183a.  v1[v2]:= v4 @kind object;
  #L1c183e.  v4:= 0I;
  #L1c1840.  call `init`(v0, v4, v1, v4) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L1c1846.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L1c184c.  v4:= temp @kind object;
  #L1c184e.  v0:= "newSSLContext().apply {\n…ll)\n      }.socketFactory" @kind object;
  #L1c1852.  call `checkNotNullExpressionValue`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c1858.  return v4 @kind object;
  #L1c185a.  v4:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L1c185c.  v0:= new `java.lang.AssertionError`;
  #L1c1860.  v1:= new `java.lang.StringBuilder`;
  #L1c1864.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c186a.  v2:= "No System TLS: " @kind object;
  #L1c186e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c1874.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c187a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c1880.  v1:= temp @kind object;
  #L1c1882.  call `<init>`(v0, v1, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1c1888.  throw v0;
  catch `java.security.GeneralSecurityException` @[L1c182a..L1c1858] goto L1c185a;
}
procedure `javax.net.ssl.X509TrustManager` `platformTrustManager`(`okhttp3.internal.platform.Platform` v4 @kind this) @signature `Lokhttp3/internal/platform/Platform;.platformTrustManager:()Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c18ac.  call temp:= `getDefaultAlgorithm`() @signature `Ljavax/net/ssl/TrustManagerFactory;.getDefaultAlgorithm:()Ljava/lang/String;` @kind static;
  #L1c18b2.  v0:= temp @kind object;
  #L1c18b4.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L1c18ba.  v0:= temp @kind object;
  #L1c18bc.  v1:= 0I;
  #L1c18be.  call `init`(v0, v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L1c18c4.  v1:= "factory" @kind object;
  #L1c18c8.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c18ce.  call temp:= `getTrustManagers`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L1c18d4.  v0:= temp @kind object;
  #L1c18d6.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c18dc.  v1:= length @variable v0;
  #L1c18de.  v2:= 1I;
  #L1c18e0.  v3:= 0I;
  #L1c18e2.  if v1 != v2 then goto L1c18f4;
  #L1c18e6.  v1:= v0[v3] @kind object;
  #L1c18ea.  v1:= instanceof @variable v1 @type ^`javax.net.ssl.X509TrustManager` @kind boolean;
  #L1c18ee.  if v1 == 0 then goto L1c18f4;
  #L1c18f2.  goto L1c18f6;
  #L1c18f4.  v2:= 0I;
  #L1c18f6.  if v2 == 0 then goto L1c1918;
  #L1c18fa.  v0:= v0[v3] @kind object;
  #L1c18fe.  if v0 == 0 then goto L1c1908;
  #L1c1902.  v0:= (`javax.net.ssl.X509TrustManager`) v0 @kind object;
  #L1c1906.  return v0 @kind object;
  #L1c1908.  v0:= new `java.lang.NullPointerException`;
  #L1c190c.  v1:= "null cannot be cast to non-null type javax.net.ssl.X509TrustManager" @kind object;
  #L1c1910.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c1916.  throw v0;
  #L1c1918.  v1:= new `java.lang.StringBuilder`;
  #L1c191c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c1922.  v2:= "Unexpected default trust managers: " @kind object;
  #L1c1926.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c192c.  call temp:= `toString`(v0) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1c1932.  v0:= temp @kind object;
  #L1c1934.  v2:= "java.util.Arrays.toString(this)" @kind object;
  #L1c1938.  call `checkNotNullExpressionValue`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c193e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c1944.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c194a.  v0:= temp @kind object;
  #L1c194c.  v1:= new `java.lang.IllegalStateException`;
  #L1c1950.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c1956.  v0:= temp @kind object;
  #L1c1958.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c195e.  throw v1;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.platform.Platform` v2 @kind this) @signature `Lokhttp3/internal/platform/Platform;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c17cc.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1c17d2.  v0:= temp @kind object;
  #L1c17d4.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1c17da.  v0:= temp @kind object;
  #L1c17dc.  v1:= "javaClass.simpleName" @kind object;
  #L1c17e0.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c17e6.  return v0 @kind object;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.Platform` v3 @kind this, `javax.net.ssl.SSLSocketFactory` v4 @kind object) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c1970.  v0:= "sslSocketFactory" @kind object;
  #L1c1974.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c197a.  v0:= 0I;
  #L1c197c.  v1:= "sun.security.ssl.SSLContextImpl" @kind object;
  #L1c1980.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1c1986.  v1:= temp @kind object;
  #L1c1988.  v2:= "sslContextClass" @kind object;
  #L1c198c.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c1992.  v2:= "context" @kind object;
  #L1c1996.  call temp:= `readFieldOrNull`(v4, v1, v2) @signature `Lokhttp3/internal/Util;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1c199c.  v4:= temp @kind object;
  #L1c199e.  if v4 == 0 then goto L1c19ba;
  #L1c19a2.  v1:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L1c19a6.  v2:= "trustManager" @kind object;
  #L1c19aa.  call temp:= `readFieldOrNull`(v4, v1, v2) @signature `Lokhttp3/internal/Util;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1c19b0.  v4:= temp @kind object;
  #L1c19b2.  v4:= (`javax.net.ssl.X509TrustManager`) v4 @kind object;
  #L1c19b6.  v0:= v4 @kind object;
  #L1c19b8.  goto L1c19e6;
  #L1c19ba.  return v0 @kind object;
  #L1c19bc.  v4:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1c19be.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1c19c4.  v1:= temp @kind object;
  #L1c19c6.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1c19cc.  v1:= temp @kind object;
  #L1c19ce.  v2:= "java.lang.reflect.InaccessibleObjectException" @kind object;
  #L1c19d2.  call temp:= `areEqual`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1c19d8.  v1:= temp;
  #L1c19da.  v1:= v1 ^~ 1;
  #L1c19de.  if v1 != 0 then goto L1c19e4;
  #L1c19e2.  goto L1c19e6;
  #L1c19e4.  throw v4;
  #L1c19e6.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L1c197c..L1c19b6] goto L1c19e6;
  catch `java.lang.RuntimeException` @[L1c197c..L1c19b6] goto L1c19bc;
}
