record `okhttp3.internal.platform.android.AndroidLogHandler` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.logging.Handler` @kind class {
}
global `okhttp3.internal.platform.android.AndroidLogHandler` `@@okhttp3.internal.platform.android.AndroidLogHandler.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/platform/android/AndroidLogHandler;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c2064.  v0:= new `okhttp3.internal.platform.android.AndroidLogHandler`;
  #L1c2068.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/android/AndroidLogHandler;.<init>:()V` @kind direct;
  #L1c206e.  `@@okhttp3.internal.platform.android.AndroidLogHandler.INSTANCE` @type ^`okhttp3.internal.platform.android.AndroidLogHandler` := v0 @kind object;
  #L1c2072.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.android.AndroidLogHandler` v0 @kind this) @signature `Lokhttp3/internal/platform/android/AndroidLogHandler;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1c2084.  call `<init>`(v0) @signature `Ljava/util/logging/Handler;.<init>:()V` @kind direct;
  #L1c208a.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.platform.android.AndroidLogHandler` v0 @kind this) @signature `Lokhttp3/internal/platform/android/AndroidLogHandler;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L1c209c.  return @kind void;
}
procedure `void` `flush`(`okhttp3.internal.platform.android.AndroidLogHandler` v0 @kind this) @signature `Lokhttp3/internal/platform/android/AndroidLogHandler;.flush:()V` @AccessFlag PUBLIC {
    temp;

  #L1c20b0.  return @kind void;
}
procedure `void` `publish`(`okhttp3.internal.platform.android.AndroidLogHandler` v5 @kind this, `java.util.logging.LogRecord` v6 @kind object) @signature `Lokhttp3/internal/platform/android/AndroidLogHandler;.publish:(Ljava/util/logging/LogRecord;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c20c4.  v0:= "record" @kind object;
  #L1c20c8.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c20ce.  v0:= `@@okhttp3.internal.platform.android.AndroidLog.INSTANCE` @type ^`okhttp3.internal.platform.android.AndroidLog` @kind object;
  #L1c20d2.  call temp:= `getLoggerName`(v6) @signature `Ljava/util/logging/LogRecord;.getLoggerName:()Ljava/lang/String;` @kind virtual;
  #L1c20d8.  v1:= temp @kind object;
  #L1c20da.  v2:= "record.loggerName" @kind object;
  #L1c20de.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c20e4.  call temp:= `access$getAndroidLevel$p`(v6) @signature `Lokhttp3/internal/platform/android/AndroidLogKt;.access$getAndroidLevel$p:(Ljava/util/logging/LogRecord;)I` @kind static;
  #L1c20ea.  v2:= temp;
  #L1c20ec.  call temp:= `getMessage`(v6) @signature `Ljava/util/logging/LogRecord;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1c20f2.  v3:= temp @kind object;
  #L1c20f4.  v4:= "record.message" @kind object;
  #L1c20f8.  call `checkNotNullExpressionValue`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c20fe.  call temp:= `getThrown`(v6) @signature `Ljava/util/logging/LogRecord;.getThrown:()Ljava/lang/Throwable;` @kind virtual;
  #L1c2104.  v6:= temp @kind object;
  #L1c2106.  call `androidLog$okhttp`(v0, v1, v2, v3, v6) @signature `Lokhttp3/internal/platform/android/AndroidLog;.androidLog$okhttp:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L1c210c.  return @kind void;
}
