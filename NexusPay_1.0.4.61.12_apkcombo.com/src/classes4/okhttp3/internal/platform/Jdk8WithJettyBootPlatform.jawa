record `okhttp3.internal.platform.Jdk8WithJettyBootPlatform` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.platform.Platform` @kind class {
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.f` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.g` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion` `@@okhttp3.internal.platform.Jdk8WithJettyBootPlatform.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1c0c74.  v0:= new `okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion`;
  #L1c0c78.  v1:= 0I;
  #L1c0c7a.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1c0c80.  `@@okhttp3.internal.platform.Jdk8WithJettyBootPlatform.Companion` @type ^`okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion` := v0 @kind object;
  #L1c0c84.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.Jdk8WithJettyBootPlatform` v1 @kind this, `java.lang.reflect.Method` v2 @kind object, `java.lang.reflect.Method` v3 @kind object, `java.lang.reflect.Method` v4 @kind object, `java.lang.Class` v5 @kind object, `java.lang.Class` v6 @kind object) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c0c98.  v0:= "putMethod" @kind object;
  #L1c0c9c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c0ca2.  v0:= "getMethod" @kind object;
  #L1c0ca6.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c0cac.  v0:= "removeMethod" @kind object;
  #L1c0cb0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c0cb6.  v0:= "clientProviderClass" @kind object;
  #L1c0cba.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c0cc0.  v0:= "serverProviderClass" @kind object;
  #L1c0cc4.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c0cca.  call `<init>`(v1) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L1c0cd0.  v1.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.c` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L1c0cd4.  v1.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.d` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L1c0cd8.  v1.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.e` @type ^`java.lang.reflect.Method` := v4 @kind object;
  #L1c0cdc.  v1.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.f` @type ^`java.lang.Class` := v5 @kind object;
  #L1c0ce0.  v1.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.g` @type ^`java.lang.Class` := v6 @kind object;
  #L1c0ce4.  return @kind void;
}
procedure `void` `afterHandshake`(`okhttp3.internal.platform.Jdk8WithJettyBootPlatform` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c0cf8.  v0:= "failed to remove ALPN" @kind object;
  #L1c0cfc.  v1:= "sslSocket" @kind object;
  #L1c0d00.  call `checkNotNullParameter`(v6, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c0d06.  v1:= v5.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.e` @type ^`java.lang.reflect.Method` @kind object;
  #L1c0d0a.  v2:= 0I;
  #L1c0d0c.  v3:= 1I;
  #L1c0d0e.  v3:= new `java.lang.Object`[v3];
  #L1c0d12.  v4:= 0I;
  #L1c0d14.  v3[v4]:= v6 @kind object;
  #L1c0d18.  call temp:= `invoke`(v1, v2, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1c0d1e.  return @kind void;
  #L1c0d20.  v6:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L1c0d22.  v1:= new `java.lang.AssertionError`;
  #L1c0d26.  call `<init>`(v1, v0, v6) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1c0d2c.  throw v1;
  #L1c0d2e.  v6:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L1c0d30.  v1:= new `java.lang.AssertionError`;
  #L1c0d34.  call `<init>`(v1, v0, v6) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1c0d3a.  throw v1;
  catch `java.lang.IllegalAccessException` @[L1c0d06..L1c0d1e] goto L1c0d2e;
  catch `java.lang.reflect.InvocationTargetException` @[L1c0d06..L1c0d1e] goto L1c0d20;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.Jdk8WithJettyBootPlatform` v6 @kind this, `javax.net.ssl.SSLSocket` v7 @kind object, `java.lang.String` v8 @kind object, `java.util.List` v9 @kind object) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1c0d5c.  v8:= "failed to set ALPN" @kind object;
  #L1c0d60.  v0:= "sslSocket" @kind object;
  #L1c0d64.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c0d6a.  v0:= "protocols" @kind object;
  #L1c0d6e.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c0d74.  v0:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L1c0d78.  call temp:= `alpnProtocolNames`(v0, v9) @signature `Lokhttp3/internal/platform/Platform$Companion;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind virtual;
  #L1c0d7e.  v9:= temp @kind object;
  #L1c0d80.  v0:= constclass @type ^`okhttp3.internal.platform.Platform` @kind object;
  #L1c0d84.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1c0d8a.  v0:= temp @kind object;
  #L1c0d8c.  v1:= 2I;
  #L1c0d8e.  v2:= new `java.lang.Class`[v1];
  #L1c0d92.  v3:= v6.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.f` @type ^`java.lang.Class` @kind object;
  #L1c0d96.  v4:= 0I;
  #L1c0d98.  v2[v4]:= v3 @kind object;
  #L1c0d9c.  v3:= v6.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.g` @type ^`java.lang.Class` @kind object;
  #L1c0da0.  v5:= 1I;
  #L1c0da2.  v2[v5]:= v3 @kind object;
  #L1c0da6.  v3:= new `okhttp3.internal.platform.Jdk8WithJettyBootPlatform$a`;
  #L1c0daa.  call `<init>`(v3, v9) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform$a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L1c0db0.  call temp:= `newProxyInstance`(v0, v2, v3) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L1c0db6.  v9:= temp @kind object;
  #L1c0db8.  v0:= v6.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.c` @type ^`java.lang.reflect.Method` @kind object;
  #L1c0dbc.  v2:= 0I;
  #L1c0dbe.  v1:= new `java.lang.Object`[v1];
  #L1c0dc2.  v1[v4]:= v7 @kind object;
  #L1c0dc6.  v1[v5]:= v9 @kind object;
  #L1c0dca.  call temp:= `invoke`(v0, v2, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1c0dd0.  return @kind void;
  #L1c0dd2.  v7:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L1c0dd4.  v9:= new `java.lang.AssertionError`;
  #L1c0dd8.  call `<init>`(v9, v8, v7) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1c0dde.  throw v9;
  #L1c0de0.  v7:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L1c0de2.  v9:= new `java.lang.AssertionError`;
  #L1c0de6.  call `<init>`(v9, v8, v7) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1c0dec.  throw v9;
  catch `java.lang.reflect.InvocationTargetException` @[L1c0d80..L1c0dd0] goto L1c0de0;
  catch `java.lang.IllegalAccessException` @[L1c0d80..L1c0dd0] goto L1c0dd2;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.Jdk8WithJettyBootPlatform` v9 @kind this, `javax.net.ssl.SSLSocket` v10 @kind object) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1c0ba8.  v0:= "failed to get ALPN selected protocol" @kind object;
  #L1c0bac.  v1:= "sslSocket" @kind object;
  #L1c0bb0.  call `checkNotNullParameter`(v10, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c0bb6.  v1:= v9.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.d` @type ^`java.lang.reflect.Method` @kind object;
  #L1c0bba.  v2:= 1I;
  #L1c0bbc.  v2:= new `java.lang.Object`[v2];
  #L1c0bc0.  v3:= 0I;
  #L1c0bc2.  v2[v3]:= v10 @kind object;
  #L1c0bc6.  v10:= 0I;
  #L1c0bc8.  call temp:= `invoke`(v1, v10, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1c0bce.  v1:= temp @kind object;
  #L1c0bd0.  call temp:= `getInvocationHandler`(v1) @signature `Ljava/lang/reflect/Proxy;.getInvocationHandler:(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;` @kind static;
  #L1c0bd6.  v1:= temp @kind object;
  #L1c0bd8.  if v1 == 0 then goto L1c0c26;
  #L1c0bdc.  v1:= (`okhttp3.internal.platform.Jdk8WithJettyBootPlatform$a`) v1 @kind object;
  #L1c0be0.  call temp:= `b`(v1) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform$a;.b:()Z` @kind virtual;
  #L1c0be6.  v2:= temp;
  #L1c0be8.  if v2 != 0 then goto L1c0c0e;
  #L1c0bec.  call temp:= `a`(v1) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform$a;.a:()Ljava/lang/String;` @kind virtual;
  #L1c0bf2.  v2:= temp @kind object;
  #L1c0bf4.  if v2 != 0 then goto L1c0c0e;
  #L1c0bf8.  v4:= "ALPN callback dropped: HTTP/2 is disabled. Is alpn-boot on the boot class path?" @kind object;
  #L1c0bfc.  v5:= 0I;
  #L1c0bfe.  v6:= 0I;
  #L1c0c00.  v7:= 6I;
  #L1c0c02.  v8:= 0I;
  #L1c0c04.  v3:= v9 @kind object;
  #L1c0c06.  call `log$default`(v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/internal/platform/Platform;.log$default:(Lokhttp3/internal/platform/Platform;Ljava/lang/String;ILjava/lang/Throwable;ILjava/lang/Object;)V` @kind static;
  #L1c0c0c.  return v10 @kind object;
  #L1c0c0e.  call temp:= `b`(v1) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform$a;.b:()Z` @kind virtual;
  #L1c0c14.  v2:= temp;
  #L1c0c16.  if v2 == 0 then goto L1c0c1c;
  #L1c0c1a.  goto L1c0c24;
  #L1c0c1c.  call temp:= `a`(v1) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform$a;.a:()Ljava/lang/String;` @kind virtual;
  #L1c0c22.  v10:= temp @kind object;
  #L1c0c24.  return v10 @kind object;
  #L1c0c26.  v10:= new `java.lang.NullPointerException`;
  #L1c0c2a.  v1:= "null cannot be cast to non-null type okhttp3.internal.platform.Jdk8WithJettyBootPlatform.AlpnProvider" @kind object;
  #L1c0c2e.  call `<init>`(v10, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c0c34.  throw v10;
  #L1c0c36.  v10:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L1c0c38.  v1:= new `java.lang.AssertionError`;
  #L1c0c3c.  call `<init>`(v1, v0, v10) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1c0c42.  throw v1;
  #L1c0c44.  v10:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L1c0c46.  v1:= new `java.lang.AssertionError`;
  #L1c0c4a.  call `<init>`(v1, v0, v10) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1c0c50.  throw v1;
  catch `java.lang.reflect.InvocationTargetException` @[L1c0bb6..L1c0c36] goto L1c0c44;
  catch `java.lang.IllegalAccessException` @[L1c0bb6..L1c0c36] goto L1c0c36;
}
