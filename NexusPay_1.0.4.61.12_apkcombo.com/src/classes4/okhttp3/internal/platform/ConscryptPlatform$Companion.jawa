record `okhttp3.internal.platform.ConscryptPlatform$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.internal.platform.ConscryptPlatform$Companion` v0 @kind this) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1c043c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c0442.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.ConscryptPlatform$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1c0454.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.<init>:()V` @kind direct;
  #L1c045a.  return @kind void;
}
procedure `boolean` `atLeastVersion$default`(`okhttp3.internal.platform.ConscryptPlatform$Companion` v1 @kind object, `int` v2 , `int` v3 , `int` v4 , `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.atLeastVersion$default:(Lokhttp3/internal/platform/ConscryptPlatform$Companion;IIIILjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L1c0358.  v6:= v5 ^& 2;
  #L1c035c.  v0:= 0I;
  #L1c035e.  if v6 == 0 then goto L1c0364;
  #L1c0362.  v3:= 0I;
  #L1c0364.  v5:= v5 ^& 4;
  #L1c0368.  if v5 == 0 then goto L1c036e;
  #L1c036c.  v4:= 0I;
  #L1c036e.  call temp:= `atLeastVersion`(v1, v2, v3, v4) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.atLeastVersion:(III)Z` @kind virtual;
  #L1c0374.  v1:= temp;
  #L1c0376.  return v1;
}
procedure `boolean` `atLeastVersion`(`okhttp3.internal.platform.ConscryptPlatform$Companion` v4 @kind this, `int` v5 , `int` v6 , `int` v7 ) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.atLeastVersion:(III)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c0388.  call temp:= `version`() @signature `Lorg/conscrypt/Conscrypt;.version:()Lorg/conscrypt/Conscrypt$Version;` @kind static;
  #L1c038e.  v0:= temp @kind object;
  #L1c0390.  call temp:= `major`(v0) @signature `Lorg/conscrypt/Conscrypt$Version;.major:()I` @kind virtual;
  #L1c0396.  v1:= temp;
  #L1c0398.  v2:= 1I;
  #L1c039a.  v3:= 0I;
  #L1c039c.  if v1 == v5 then goto L1c03b2;
  #L1c03a0.  call temp:= `major`(v0) @signature `Lorg/conscrypt/Conscrypt$Version;.major:()I` @kind virtual;
  #L1c03a6.  v6:= temp;
  #L1c03a8.  if v6 <= v5 then goto L1c03ae;
  #L1c03ac.  goto L1c03b0;
  #L1c03ae.  v2:= 0I;
  #L1c03b0.  return v2;
  #L1c03b2.  call temp:= `minor`(v0) @signature `Lorg/conscrypt/Conscrypt$Version;.minor:()I` @kind virtual;
  #L1c03b8.  v5:= temp;
  #L1c03ba.  if v5 == v6 then goto L1c03d0;
  #L1c03be.  call temp:= `minor`(v0) @signature `Lorg/conscrypt/Conscrypt$Version;.minor:()I` @kind virtual;
  #L1c03c4.  v5:= temp;
  #L1c03c6.  if v5 <= v6 then goto L1c03cc;
  #L1c03ca.  goto L1c03ce;
  #L1c03cc.  v2:= 0I;
  #L1c03ce.  return v2;
  #L1c03d0.  call temp:= `patch`(v0) @signature `Lorg/conscrypt/Conscrypt$Version;.patch:()I` @kind virtual;
  #L1c03d6.  v5:= temp;
  #L1c03d8.  if v5 < v7 then goto L1c03de;
  #L1c03dc.  goto L1c03e0;
  #L1c03de.  v2:= 0I;
  #L1c03e0.  return v2;
}
procedure `okhttp3.internal.platform.ConscryptPlatform` `buildIfSupported`(`okhttp3.internal.platform.ConscryptPlatform$Companion` v2 @kind this) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.buildIfSupported:()Lokhttp3/internal/platform/ConscryptPlatform;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c0410.  call temp:= `isSupported`(v2) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.isSupported:()Z` @kind virtual;
  #L1c0416.  v0:= temp;
  #L1c0418.  v1:= 0I;
  #L1c041a.  if v0 == 0 then goto L1c042a;
  #L1c041e.  v0:= new `okhttp3.internal.platform.ConscryptPlatform`;
  #L1c0422.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/platform/ConscryptPlatform;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1c0428.  v1:= v0 @kind object;
  #L1c042a.  return v1 @kind object;
}
procedure `boolean` `isSupported`(`okhttp3.internal.platform.ConscryptPlatform$Companion` v1 @kind this) @signature `Lokhttp3/internal/platform/ConscryptPlatform$Companion;.isSupported:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c03f4.  call temp:= `access$isSupported$cp`() @signature `Lokhttp3/internal/platform/ConscryptPlatform;.access$isSupported$cp:()Z` @kind static;
  #L1c03fa.  v0:= temp;
  #L1c03fc.  return v0;
}
