record `okhttp3.internal.platform.BouncyCastlePlatform` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.platform.Platform` @kind class {
  `java.security.Provider` `okhttp3.internal.platform.BouncyCastlePlatform.c` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.platform.BouncyCastlePlatform$Companion` `@@okhttp3.internal.platform.BouncyCastlePlatform.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `boolean` `@@okhttp3.internal.platform.BouncyCastlePlatform.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1c0234.  v0:= new `okhttp3.internal.platform.BouncyCastlePlatform$Companion`;
  #L1c0238.  v1:= 0I;
  #L1c023a.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/platform/BouncyCastlePlatform$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1c0240.  `@@okhttp3.internal.platform.BouncyCastlePlatform.Companion` @type ^`okhttp3.internal.platform.BouncyCastlePlatform$Companion` := v0 @kind object;
  #L1c0244.  v1:= 0I;
  #L1c0246.  v2:= "org.bouncycastle.jsse.provider.BouncyCastleJsseProvider" @kind object;
  #L1c024a.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1c0250.  v0:= temp @kind object;
  #L1c0252.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1c0258.  v0:= temp @kind object;
  #L1c025a.  call temp:= `forName`(v2, v1, v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L1c0260.  v1:= 1I;
  #L1c0262.  `@@okhttp3.internal.platform.BouncyCastlePlatform.d` @type ^`boolean` := v1 @kind boolean;
  #L1c0266.  return @kind void;
  catch `java.lang.ClassNotFoundException` @[L1c0246..L1c0260] goto L1c0262;
}
procedure `void` `<init>`(`okhttp3.internal.platform.BouncyCastlePlatform` v1 @kind this) @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L1c0288.  call `<init>`(v1) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L1c028e.  v0:= new `org.bouncycastle.jsse.provider.BouncyCastleJsseProvider`;
  #L1c0292.  call `<init>`(v0) @signature `Lorg/bouncycastle/jsse/provider/BouncyCastleJsseProvider;.<init>:()V` @kind direct;
  #L1c0298.  v0:= (`java.security.Provider`) v0 @kind object;
  #L1c029c.  v1.`okhttp3.internal.platform.BouncyCastlePlatform.c` @type ^`java.security.Provider` := v0 @kind object;
  #L1c02a0.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.BouncyCastlePlatform` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1c02b4.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.<init>:()V` @kind direct;
  #L1c02ba.  return @kind void;
}
procedure `boolean` `access$isSupported$cp`() @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.access$isSupported$cp:()Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L1c00a0.  v0:= `@@okhttp3.internal.platform.BouncyCastlePlatform.d` @type ^`boolean` @kind boolean;
  #L1c00a4.  return v0;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.BouncyCastlePlatform` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object, `java.lang.String` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c02cc.  v0:= "sslSocket" @kind object;
  #L1c02d0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c02d6.  v0:= "protocols" @kind object;
  #L1c02da.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c02e0.  v0:= instanceof @variable v2 @type ^`org.bouncycastle.jsse.BCSSLSocket` @kind boolean;
  #L1c02e4.  if v0 == 0 then goto L1c033e;
  #L1c02e8.  v2:= (`org.bouncycastle.jsse.BCSSLSocket`) v2 @kind object;
  #L1c02ec.  call temp:= `getParameters`(v2) @signature `Lorg/bouncycastle/jsse/BCSSLSocket;.getParameters:()Lorg/bouncycastle/jsse/BCSSLParameters;` @kind interface;
  #L1c02f2.  v3:= temp @kind object;
  #L1c02f4.  v0:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L1c02f8.  call temp:= `alpnProtocolNames`(v0, v4) @signature `Lokhttp3/internal/platform/Platform$Companion;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind virtual;
  #L1c02fe.  v4:= temp @kind object;
  #L1c0300.  v0:= "sslParameters" @kind object;
  #L1c0304.  call `checkNotNullExpressionValue`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c030a.  v0:= 0I;
  #L1c030c.  v0:= new `java.lang.String`[v0];
  #L1c0310.  call temp:= `toArray`(v4, v0) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1c0316.  v4:= temp @kind object;
  #L1c0318.  if v4 == 0 then goto L1c032e;
  #L1c031c.  v4:= (`java.lang.String`[]) v4 @kind object;
  #L1c0320.  call `setApplicationProtocols`(v3, v4) @signature `Lorg/bouncycastle/jsse/BCSSLParameters;.setApplicationProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L1c0326.  call `setParameters`(v2, v3) @signature `Lorg/bouncycastle/jsse/BCSSLSocket;.setParameters:(Lorg/bouncycastle/jsse/BCSSLParameters;)V` @kind interface;
  #L1c032c.  goto L1c0344;
  #L1c032e.  v2:= new `java.lang.NullPointerException`;
  #L1c0332.  v3:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L1c0336.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c033c.  throw v2;
  #L1c033e.  call `configureTlsExtensions`(v1, v2, v3, v4) @signature `Lokhttp3/internal/platform/Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @kind super;
  #L1c0344.  return @kind void;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.BouncyCastlePlatform` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object) @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c00b8.  v0:= "sslSocket" @kind object;
  #L1c00bc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c00c2.  v0:= instanceof @variable v2 @type ^`org.bouncycastle.jsse.BCSSLSocket` @kind boolean;
  #L1c00c6.  if v0 == 0 then goto L1c00fe;
  #L1c00ca.  v2:= (`org.bouncycastle.jsse.BCSSLSocket`) v2 @kind object;
  #L1c00ce.  call temp:= `getApplicationProtocol`(v2) @signature `Lorg/bouncycastle/jsse/BCSSLSocket;.getApplicationProtocol:()Ljava/lang/String;` @kind interface;
  #L1c00d4.  v2:= temp @kind object;
  #L1c00d6.  if v2 != 0 then goto L1c00dc;
  #L1c00da.  goto L1c00fa;
  #L1c00dc.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1c00e2.  v0:= temp;
  #L1c00e4.  if v0 == 0 then goto L1c00ea;
  #L1c00e8.  goto L1c0106;
  #L1c00ea.  v0:= "" @kind object;
  #L1c00ee.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c00f4.  v0:= temp;
  #L1c00f6.  if v0 == 0 then goto L1c0106;
  #L1c00fa.  v2:= 0I;
  #L1c00fc.  goto L1c0106;
  #L1c00fe.  call temp:= `getSelectedProtocol`(v1, v2) @signature `Lokhttp3/internal/platform/Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind super;
  #L1c0104.  v2:= temp @kind object;
  #L1c0106.  return v2 @kind object;
}
procedure `javax.net.ssl.SSLContext` `newSSLContext`(`okhttp3.internal.platform.BouncyCastlePlatform` v2 @kind this) @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.newSSLContext:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c0118.  v0:= v2.`okhttp3.internal.platform.BouncyCastlePlatform.c` @type ^`java.security.Provider` @kind object;
  #L1c011c.  v1:= "TLS" @kind object;
  #L1c0120.  call temp:= `getInstance`(v1, v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L1c0126.  v0:= temp @kind object;
  #L1c0128.  v1:= "SSLContext.getInstance(\"TLS\", provider)" @kind object;
  #L1c012c.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c0132.  return v0 @kind object;
}
procedure `javax.net.ssl.X509TrustManager` `platformTrustManager`(`okhttp3.internal.platform.BouncyCastlePlatform` v4 @kind this) @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.platformTrustManager:()Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c0144.  v0:= "PKIX" @kind object;
  #L1c0148.  v1:= "BCJSSE" @kind object;
  #L1c014c.  call temp:= `getInstance`(v0, v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L1c0152.  v0:= temp @kind object;
  #L1c0154.  v1:= 0I;
  #L1c0156.  call `init`(v0, v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L1c015c.  v1:= "factory" @kind object;
  #L1c0160.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c0166.  call temp:= `getTrustManagers`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L1c016c.  v0:= temp @kind object;
  #L1c016e.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1c0174.  v1:= length @variable v0;
  #L1c0176.  v2:= 1I;
  #L1c0178.  v3:= 0I;
  #L1c017a.  if v1 != v2 then goto L1c018c;
  #L1c017e.  v1:= v0[v3] @kind object;
  #L1c0182.  v1:= instanceof @variable v1 @type ^`javax.net.ssl.X509TrustManager` @kind boolean;
  #L1c0186.  if v1 == 0 then goto L1c018c;
  #L1c018a.  goto L1c018e;
  #L1c018c.  v2:= 0I;
  #L1c018e.  if v2 == 0 then goto L1c01b0;
  #L1c0192.  v0:= v0[v3] @kind object;
  #L1c0196.  if v0 == 0 then goto L1c01a0;
  #L1c019a.  v0:= (`javax.net.ssl.X509TrustManager`) v0 @kind object;
  #L1c019e.  return v0 @kind object;
  #L1c01a0.  v0:= new `java.lang.NullPointerException`;
  #L1c01a4.  v1:= "null cannot be cast to non-null type javax.net.ssl.X509TrustManager" @kind object;
  #L1c01a8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c01ae.  throw v0;
  #L1c01b0.  v1:= new `java.lang.StringBuilder`;
  #L1c01b4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c01ba.  v2:= "Unexpected default trust managers: " @kind object;
  #L1c01be.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c01c4.  call temp:= `toString`(v0) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1c01ca.  v0:= temp @kind object;
  #L1c01cc.  v2:= "java.util.Arrays.toString(this)" @kind object;
  #L1c01d0.  call `checkNotNullExpressionValue`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c01d6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c01dc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c01e2.  v0:= temp @kind object;
  #L1c01e4.  v1:= new `java.lang.IllegalStateException`;
  #L1c01e8.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c01ee.  v0:= temp @kind object;
  #L1c01f0.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c01f6.  throw v1;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.BouncyCastlePlatform` v1 @kind this, `javax.net.ssl.SSLSocketFactory` v2 @kind object) @signature `Lokhttp3/internal/platform/BouncyCastlePlatform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c0208.  v0:= "sslSocketFactory" @kind object;
  #L1c020c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c0212.  v2:= new `java.lang.UnsupportedOperationException`;
  #L1c0216.  v0:= "clientBuilder.sslSocketFactory(SSLSocketFactory) not supported with BouncyCastle" @kind object;
  #L1c021a.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c0220.  throw v2;
}
