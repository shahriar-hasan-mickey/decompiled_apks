record `okhttp3.internal.http2.Http2Connection$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.internal.http2.Http2Connection$Listener` `okhttp3.internal.http2.Http2Connection$Builder.a` @AccessFlag PRIVATE;
  `okhttp3.internal.http2.PushObserver` `okhttp3.internal.http2.Http2Connection$Builder.b` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.http2.Http2Connection$Builder.c` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.http2.Http2Connection$Builder.connectionName` @AccessFlag PUBLIC;
  `boolean` `okhttp3.internal.http2.Http2Connection$Builder.d` @AccessFlag PRIVATE;
  `okhttp3.internal.concurrent.TaskRunner` `okhttp3.internal.http2.Http2Connection$Builder.e` @AccessFlag PRIVATE_FINAL;
  `okio.BufferedSink` `okhttp3.internal.http2.Http2Connection$Builder.sink` @AccessFlag PUBLIC;
  `java.net.Socket` `okhttp3.internal.http2.Http2Connection$Builder.socket` @AccessFlag PUBLIC;
  `okio.BufferedSource` `okhttp3.internal.http2.Http2Connection$Builder.source` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this, `boolean` v2 , `okhttp3.internal.concurrent.TaskRunner` v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.<init>:(ZLokhttp3/internal/concurrent/TaskRunner;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b8444.  v0:= "taskRunner" @kind object;
  #L1b8448.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b844e.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b8454.  v1.`okhttp3.internal.http2.Http2Connection$Builder.d` @type ^`boolean` := v2 @kind boolean;
  #L1b8458.  v1.`okhttp3.internal.http2.Http2Connection$Builder.e` @type ^`okhttp3.internal.concurrent.TaskRunner` := v3 @kind object;
  #L1b845c.  v2:= `@@okhttp3.internal.http2.Http2Connection$Listener.REFUSE_INCOMING_STREAMS` @type ^`okhttp3.internal.http2.Http2Connection$Listener` @kind object;
  #L1b8460.  v1.`okhttp3.internal.http2.Http2Connection$Builder.a` @type ^`okhttp3.internal.http2.Http2Connection$Listener` := v2 @kind object;
  #L1b8464.  v2:= `@@okhttp3.internal.http2.PushObserver.CANCEL` @type ^`okhttp3.internal.http2.PushObserver` @kind object;
  #L1b8468.  v1.`okhttp3.internal.http2.Http2Connection$Builder.b` @type ^`okhttp3.internal.http2.PushObserver` := v2 @kind object;
  #L1b846c.  return @kind void;
}
procedure `okhttp3.internal.http2.Http2Connection$Builder` `socket$default`(`okhttp3.internal.http2.Http2Connection$Builder` v0 @kind object, `java.net.Socket` v1 @kind object, `java.lang.String` v2 @kind object, `okio.BufferedSource` v3 @kind object, `okio.BufferedSink` v4 @kind object, `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket$default:(Lokhttp3/internal/http2/Http2Connection$Builder;Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;Lokio/BufferedSink;ILjava/lang/Object;)Lokhttp3/internal/http2/Http2Connection$Builder;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1b8248.  v6:= v5 ^& 2;
  #L1b824c.  if v6 == 0 then goto L1b8258;
  #L1b8250.  call temp:= `peerName`(v1) @signature `Lokhttp3/internal/Util;.peerName:(Ljava/net/Socket;)Ljava/lang/String;` @kind static;
  #L1b8256.  v2:= temp @kind object;
  #L1b8258.  v6:= v5 ^& 4;
  #L1b825c.  if v6 == 0 then goto L1b8270;
  #L1b8260.  call temp:= `source`(v1) @signature `Lokio/Okio;.source:(Ljava/net/Socket;)Lokio/Source;` @kind static;
  #L1b8266.  v3:= temp @kind object;
  #L1b8268.  call temp:= `buffer`(v3) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L1b826e.  v3:= temp @kind object;
  #L1b8270.  v5:= v5 ^& 8;
  #L1b8274.  if v5 == 0 then goto L1b8288;
  #L1b8278.  call temp:= `sink`(v1) @signature `Lokio/Okio;.sink:(Ljava/net/Socket;)Lokio/Sink;` @kind static;
  #L1b827e.  v4:= temp @kind object;
  #L1b8280.  call temp:= `buffer`(v4) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L1b8286.  v4:= temp @kind object;
  #L1b8288.  call temp:= `socket`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket:(Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;Lokio/BufferedSink;)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind virtual;
  #L1b828e.  v0:= temp @kind object;
  #L1b8290.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.Http2Connection` `build`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.build:()Lokhttp3/internal/http2/Http2Connection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b81d4.  v0:= new `okhttp3.internal.http2.Http2Connection`;
  #L1b81d8.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.<init>:(Lokhttp3/internal/http2/Http2Connection$Builder;)V` @kind direct;
  #L1b81de.  return v0 @kind object;
}
procedure `boolean` `getClient$okhttp`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getClient$okhttp:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b8144.  v0:= v1.`okhttp3.internal.http2.Http2Connection$Builder.d` @type ^`boolean` @kind boolean;
  #L1b8148.  return v0;
}
procedure `java.lang.String` `getConnectionName$okhttp`(`okhttp3.internal.http2.Http2Connection$Builder` v2 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getConnectionName$okhttp:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1b8174.  v0:= v2.`okhttp3.internal.http2.Http2Connection$Builder.connectionName` @type ^`java.lang.String` @kind object;
  #L1b8178.  if v0 != 0 then goto L1b8186;
  #L1b817c.  v1:= "connectionName" @kind object;
  #L1b8180.  call `throwUninitializedPropertyAccessException`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V` @kind static;
  #L1b8186.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.Http2Connection$Listener` `getListener$okhttp`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getListener$okhttp:()Lokhttp3/internal/http2/Http2Connection$Listener;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b83cc.  v0:= v1.`okhttp3.internal.http2.Http2Connection$Builder.a` @type ^`okhttp3.internal.http2.Http2Connection$Listener` @kind object;
  #L1b83d0.  return v0 @kind object;
}
procedure `int` `getPingIntervalMillis$okhttp`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getPingIntervalMillis$okhttp:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b815c.  v0:= v1.`okhttp3.internal.http2.Http2Connection$Builder.c` @type ^`int`;
  #L1b8160.  return v0;
}
procedure `okhttp3.internal.http2.PushObserver` `getPushObserver$okhttp`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getPushObserver$okhttp:()Lokhttp3/internal/http2/PushObserver;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b83e4.  v0:= v1.`okhttp3.internal.http2.Http2Connection$Builder.b` @type ^`okhttp3.internal.http2.PushObserver` @kind object;
  #L1b83e8.  return v0 @kind object;
}
procedure `okio.BufferedSink` `getSink$okhttp`(`okhttp3.internal.http2.Http2Connection$Builder` v2 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getSink$okhttp:()Lokio/BufferedSink;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1b83fc.  v0:= v2.`okhttp3.internal.http2.Http2Connection$Builder.sink` @type ^`okio.BufferedSink` @kind object;
  #L1b8400.  if v0 != 0 then goto L1b840e;
  #L1b8404.  v1:= "sink" @kind object;
  #L1b8408.  call `throwUninitializedPropertyAccessException`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V` @kind static;
  #L1b840e.  return v0 @kind object;
}
procedure `java.net.Socket` `getSocket$okhttp`(`okhttp3.internal.http2.Http2Connection$Builder` v2 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getSocket$okhttp:()Ljava/net/Socket;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1b8198.  v0:= v2.`okhttp3.internal.http2.Http2Connection$Builder.socket` @type ^`java.net.Socket` @kind object;
  #L1b819c.  if v0 != 0 then goto L1b81aa;
  #L1b81a0.  v1:= "socket" @kind object;
  #L1b81a4.  call `throwUninitializedPropertyAccessException`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V` @kind static;
  #L1b81aa.  return v0 @kind object;
}
procedure `okio.BufferedSource` `getSource$okhttp`(`okhttp3.internal.http2.Http2Connection$Builder` v2 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getSource$okhttp:()Lokio/BufferedSource;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1b8420.  v0:= v2.`okhttp3.internal.http2.Http2Connection$Builder.source` @type ^`okio.BufferedSource` @kind object;
  #L1b8424.  if v0 != 0 then goto L1b8432;
  #L1b8428.  v1:= "source" @kind object;
  #L1b842c.  call `throwUninitializedPropertyAccessException`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V` @kind static;
  #L1b8432.  return v0 @kind object;
}
procedure `okhttp3.internal.concurrent.TaskRunner` `getTaskRunner$okhttp`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.getTaskRunner$okhttp:()Lokhttp3/internal/concurrent/TaskRunner;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b81bc.  v0:= v1.`okhttp3.internal.http2.Http2Connection$Builder.e` @type ^`okhttp3.internal.concurrent.TaskRunner` @kind object;
  #L1b81c0.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.Http2Connection$Builder` `listener`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this, `okhttp3.internal.http2.Http2Connection$Listener` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.listener:(Lokhttp3/internal/http2/Http2Connection$Listener;)Lokhttp3/internal/http2/Http2Connection$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b81f0.  v0:= "listener" @kind object;
  #L1b81f4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b81fa.  v1.`okhttp3.internal.http2.Http2Connection$Builder.a` @type ^`okhttp3.internal.http2.Http2Connection$Listener` := v2 @kind object;
  #L1b81fe.  return v1 @kind object;
}
procedure `okhttp3.internal.http2.Http2Connection$Builder` `pingIntervalMillis`(`okhttp3.internal.http2.Http2Connection$Builder` v0 @kind this, `int` v1 ) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.pingIntervalMillis:(I)Lokhttp3/internal/http2/Http2Connection$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1b8210.  v0.`okhttp3.internal.http2.Http2Connection$Builder.c` @type ^`int` := v1;
  #L1b8214.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.Http2Connection$Builder` `pushObserver`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this, `okhttp3.internal.http2.PushObserver` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.pushObserver:(Lokhttp3/internal/http2/PushObserver;)Lokhttp3/internal/http2/Http2Connection$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b8228.  v0:= "pushObserver" @kind object;
  #L1b822c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b8232.  v1.`okhttp3.internal.http2.Http2Connection$Builder.b` @type ^`okhttp3.internal.http2.PushObserver` := v2 @kind object;
  #L1b8236.  return v1 @kind object;
}
procedure `void` `setClient$okhttp`(`okhttp3.internal.http2.Http2Connection$Builder` v0 @kind this, `boolean` v1 ) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.setClient$okhttp:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1b8480.  v0.`okhttp3.internal.http2.Http2Connection$Builder.d` @type ^`boolean` := v1 @kind boolean;
  #L1b8484.  return @kind void;
}
procedure `void` `setConnectionName$okhttp`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.setConnectionName$okhttp:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b8498.  v0:= "<set-?>" @kind object;
  #L1b849c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b84a2.  v1.`okhttp3.internal.http2.Http2Connection$Builder.connectionName` @type ^`java.lang.String` := v2 @kind object;
  #L1b84a6.  return @kind void;
}
procedure `void` `setListener$okhttp`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this, `okhttp3.internal.http2.Http2Connection$Listener` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.setListener$okhttp:(Lokhttp3/internal/http2/Http2Connection$Listener;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b84b8.  v0:= "<set-?>" @kind object;
  #L1b84bc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b84c2.  v1.`okhttp3.internal.http2.Http2Connection$Builder.a` @type ^`okhttp3.internal.http2.Http2Connection$Listener` := v2 @kind object;
  #L1b84c6.  return @kind void;
}
procedure `void` `setPingIntervalMillis$okhttp`(`okhttp3.internal.http2.Http2Connection$Builder` v0 @kind this, `int` v1 ) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.setPingIntervalMillis$okhttp:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1b84d8.  v0.`okhttp3.internal.http2.Http2Connection$Builder.c` @type ^`int` := v1;
  #L1b84dc.  return @kind void;
}
procedure `void` `setPushObserver$okhttp`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this, `okhttp3.internal.http2.PushObserver` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.setPushObserver$okhttp:(Lokhttp3/internal/http2/PushObserver;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b84f0.  v0:= "<set-?>" @kind object;
  #L1b84f4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b84fa.  v1.`okhttp3.internal.http2.Http2Connection$Builder.b` @type ^`okhttp3.internal.http2.PushObserver` := v2 @kind object;
  #L1b84fe.  return @kind void;
}
procedure `void` `setSink$okhttp`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this, `okio.BufferedSink` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.setSink$okhttp:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b8510.  v0:= "<set-?>" @kind object;
  #L1b8514.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b851a.  v1.`okhttp3.internal.http2.Http2Connection$Builder.sink` @type ^`okio.BufferedSink` := v2 @kind object;
  #L1b851e.  return @kind void;
}
procedure `void` `setSocket$okhttp`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this, `java.net.Socket` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.setSocket$okhttp:(Ljava/net/Socket;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b8530.  v0:= "<set-?>" @kind object;
  #L1b8534.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b853a.  v1.`okhttp3.internal.http2.Http2Connection$Builder.socket` @type ^`java.net.Socket` := v2 @kind object;
  #L1b853e.  return @kind void;
}
procedure `void` `setSource$okhttp`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this, `okio.BufferedSource` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.setSource$okhttp:(Lokio/BufferedSource;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b8550.  v0:= "<set-?>" @kind object;
  #L1b8554.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b855a.  v1.`okhttp3.internal.http2.Http2Connection$Builder.source` @type ^`okio.BufferedSource` := v2 @kind object;
  #L1b855e.  return @kind void;
}
procedure `okhttp3.internal.http2.Http2Connection$Builder` `socket`(`okhttp3.internal.http2.Http2Connection$Builder` v7 @kind this, `java.net.Socket` v8 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket:(Ljava/net/Socket;)Lokhttp3/internal/http2/Http2Connection$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b82a4.  v2:= 0I;
  #L1b82a6.  v3:= 0I;
  #L1b82a8.  v4:= 0I;
  #L1b82aa.  v5:= 14I;
  #L1b82ae.  v6:= 0I;
  #L1b82b0.  v0:= v7 @kind object;
  #L1b82b2.  v1:= v8 @kind object;
  #L1b82b4.  call temp:= `socket$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket$default:(Lokhttp3/internal/http2/Http2Connection$Builder;Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;Lokio/BufferedSink;ILjava/lang/Object;)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind static;
  #L1b82ba.  v8:= temp @kind object;
  #L1b82bc.  return v8 @kind object;
}
procedure `okhttp3.internal.http2.Http2Connection$Builder` `socket`(`okhttp3.internal.http2.Http2Connection$Builder` v7 @kind this, `java.net.Socket` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket:(Ljava/net/Socket;Ljava/lang/String;)Lokhttp3/internal/http2/Http2Connection$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b82d0.  v3:= 0I;
  #L1b82d2.  v4:= 0I;
  #L1b82d4.  v5:= 12I;
  #L1b82d8.  v6:= 0I;
  #L1b82da.  v0:= v7 @kind object;
  #L1b82dc.  v1:= v8 @kind object;
  #L1b82de.  v2:= v9 @kind object;
  #L1b82e0.  call temp:= `socket$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket$default:(Lokhttp3/internal/http2/Http2Connection$Builder;Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;Lokio/BufferedSink;ILjava/lang/Object;)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind static;
  #L1b82e6.  v8:= temp @kind object;
  #L1b82e8.  return v8 @kind object;
}
procedure `okhttp3.internal.http2.Http2Connection$Builder` `socket`(`okhttp3.internal.http2.Http2Connection$Builder` v7 @kind this, `java.net.Socket` v8 @kind object, `java.lang.String` v9 @kind object, `okio.BufferedSource` v10 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket:(Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;)Lokhttp3/internal/http2/Http2Connection$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b82fc.  v4:= 0I;
  #L1b82fe.  v5:= 8I;
  #L1b8302.  v6:= 0I;
  #L1b8304.  v0:= v7 @kind object;
  #L1b8306.  v1:= v8 @kind object;
  #L1b8308.  v2:= v9 @kind object;
  #L1b830a.  v3:= v10 @kind object;
  #L1b830c.  call temp:= `socket$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket$default:(Lokhttp3/internal/http2/Http2Connection$Builder;Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;Lokio/BufferedSink;ILjava/lang/Object;)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind static;
  #L1b8312.  v8:= temp @kind object;
  #L1b8314.  return v8 @kind object;
}
procedure `okhttp3.internal.http2.Http2Connection$Builder` `socket`(`okhttp3.internal.http2.Http2Connection$Builder` v1 @kind this, `java.net.Socket` v2 @kind object, `java.lang.String` v3 @kind object, `okio.BufferedSource` v4 @kind object, `okio.BufferedSink` v5 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket:(Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;Lokio/BufferedSink;)Lokhttp3/internal/http2/Http2Connection$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b8328.  v0:= "socket" @kind object;
  #L1b832c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b8332.  v0:= "peerName" @kind object;
  #L1b8336.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b833c.  v0:= "source" @kind object;
  #L1b8340.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b8346.  v0:= "sink" @kind object;
  #L1b834a.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b8350.  v1.`okhttp3.internal.http2.Http2Connection$Builder.socket` @type ^`java.net.Socket` := v2 @kind object;
  #L1b8354.  v2:= v1.`okhttp3.internal.http2.Http2Connection$Builder.d` @type ^`boolean` @kind boolean;
  #L1b8358.  if v2 == 0 then goto L1b838a;
  #L1b835c.  v2:= new `java.lang.StringBuilder`;
  #L1b8360.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b8366.  v0:= `@@okhttp3.internal.Util.okHttpName` @type ^`java.lang.String` @kind object;
  #L1b836a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b8370.  v0:= 32I;
  #L1b8374.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b837a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b8380.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b8386.  v2:= temp @kind object;
  #L1b8388.  goto L1b83ac;
  #L1b838a.  v2:= new `java.lang.StringBuilder`;
  #L1b838e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b8394.  v0:= "MockWebServer " @kind object;
  #L1b8398.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b839e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b83a4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b83aa.  v2:= temp @kind object;
  #L1b83ac.  v1.`okhttp3.internal.http2.Http2Connection$Builder.connectionName` @type ^`java.lang.String` := v2 @kind object;
  #L1b83b0.  v1.`okhttp3.internal.http2.Http2Connection$Builder.source` @type ^`okio.BufferedSource` := v4 @kind object;
  #L1b83b4.  v1.`okhttp3.internal.http2.Http2Connection$Builder.sink` @type ^`okio.BufferedSink` := v5 @kind object;
  #L1b83b8.  return v1 @kind object;
}
