record `okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.concurrent.Task` @kind class {
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1.e` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1.f` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1.g` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 , `java.lang.String` v3 @kind object, `boolean` v4 , `okhttp3.internal.http2.Http2Connection` v5 @kind object, `int` v6 , `java.util.List` v7 @kind object, `boolean` v8 ) @signature `Lokhttp3/internal/http2/Http2Connection$pushHeadersLater$$inlined$execute$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILjava/util/List;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1b9384.  v0.`okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1.e` @type ^`okhttp3.internal.http2.Http2Connection` := v5 @kind object;
  #L1b9388.  v0.`okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1.f` @type ^`int` := v6;
  #L1b938c.  v0.`okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1.g` @type ^`java.util.List` := v7 @kind object;
  #L1b9390.  v0.`okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1.h` @type ^`boolean` := v8 @kind boolean;
  #L1b9394.  call `<init>`(v0, v3, v4) @signature `Lokhttp3/internal/concurrent/Task;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L1b939a.  return @kind void;
}
procedure `long` `runOnce`(`okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1` v4 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$pushHeadersLater$$inlined$execute$1;.runOnce:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b92d4.  v0:= v4.`okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b92d8.  call temp:= `access$getPushObserver$p`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getPushObserver$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/http2/PushObserver;` @kind static;
  #L1b92de.  v0:= temp @kind object;
  #L1b92e0.  v1:= v4.`okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1.f` @type ^`int`;
  #L1b92e4.  v2:= v4.`okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1.g` @type ^`java.util.List` @kind object;
  #L1b92e8.  v3:= v4.`okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1.h` @type ^`boolean` @kind boolean;
  #L1b92ec.  call temp:= `onHeaders`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/PushObserver;.onHeaders:(ILjava/util/List;Z)Z` @kind interface;
  #L1b92f2.  v0:= temp;
  #L1b92f4.  if v0 == 0 then goto L1b9312;
  #L1b92f8.  v1:= v4.`okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b92fc.  call temp:= `getWriter`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.getWriter:()Lokhttp3/internal/http2/Http2Writer;` @kind virtual;
  #L1b9302.  v1:= temp @kind object;
  #L1b9304.  v2:= v4.`okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1.f` @type ^`int`;
  #L1b9308.  v3:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1b930c.  call `rstStream`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L1b9312.  if v0 != 0 then goto L1b931e;
  #L1b9316.  v0:= v4.`okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1.h` @type ^`boolean` @kind boolean;
  #L1b931a.  if v0 == 0 then goto L1b934c;
  #L1b931e.  v0:= v4.`okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b9322.  @monitorenter v0
  #L1b9324.  v1:= v4.`okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b9328.  call temp:= `access$getCurrentPushRequests$p`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getCurrentPushRequests$p:(Lokhttp3/internal/http2/Http2Connection;)Ljava/util/Set;` @kind static;
  #L1b932e.  v1:= temp @kind object;
  #L1b9330.  v2:= v4.`okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1.f` @type ^`int`;
  #L1b9334.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1b933a.  v2:= temp @kind object;
  #L1b933c.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L1b9342.  @monitorexit v0
  #L1b9344.  goto L1b934c;
  #L1b9346.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b9348.  @monitorexit v0
  #L1b934a.  throw v1;
  #L1b934c.  v0:= -1L;
  #L1b9350.  return v0 @kind wide;
  catch `java.io.IOException` @[L1b92f8..L1b9324] goto L1b934c;
  catch `java.lang.Throwable` @[L1b9324..L1b9342] goto L1b9346;
  catch `java.io.IOException` @[L1b9342..L1b934c] goto L1b934c;
}
