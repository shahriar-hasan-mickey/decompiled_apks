record `okhttp3.internal.http2.Http2ExchangeCodec$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2ExchangeCodec$Companion` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2ExchangeCodec$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1babbc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1babc2.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2ExchangeCodec$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/internal/http2/Http2ExchangeCodec$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1babd4.  call `<init>`(v0) @signature `Lokhttp3/internal/http2/Http2ExchangeCodec$Companion;.<init>:()V` @kind direct;
  #L1babda.  return @kind void;
}
procedure `java.util.List` `http2HeadersList`(`okhttp3.internal.http2.Http2ExchangeCodec$Companion` v6 @kind this, `okhttp3.Request` v7 @kind object) @signature `Lokhttp3/internal/http2/Http2ExchangeCodec$Companion;.http2HeadersList:(Lokhttp3/Request;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1ba950.  v0:= "request" @kind object;
  #L1ba954.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1ba95a.  call temp:= `headers`(v7) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1ba960.  v0:= temp @kind object;
  #L1ba962.  v1:= new `java.util.ArrayList`;
  #L1ba966.  call temp:= `size`(v0) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1ba96c.  v2:= temp;
  #L1ba96e.  v2:= v2 + 4;
  #L1ba972.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1ba978.  v2:= new `okhttp3.internal.http2.Header`;
  #L1ba97c.  v3:= `@@okhttp3.internal.http2.Header.TARGET_METHOD` @type ^`okio.ByteString` @kind object;
  #L1ba980.  call temp:= `method`(v7) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L1ba986.  v4:= temp @kind object;
  #L1ba988.  call `<init>`(v2, v3, v4) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L1ba98e.  call temp:= `add`(v1, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1ba994.  v2:= new `okhttp3.internal.http2.Header`;
  #L1ba998.  v3:= `@@okhttp3.internal.http2.Header.TARGET_PATH` @type ^`okio.ByteString` @kind object;
  #L1ba99c.  v4:= `@@okhttp3.internal.http.RequestLine.INSTANCE` @type ^`okhttp3.internal.http.RequestLine` @kind object;
  #L1ba9a0.  call temp:= `url`(v7) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1ba9a6.  v5:= temp @kind object;
  #L1ba9a8.  call temp:= `requestPath`(v4, v5) @signature `Lokhttp3/internal/http/RequestLine;.requestPath:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind virtual;
  #L1ba9ae.  v4:= temp @kind object;
  #L1ba9b0.  call `<init>`(v2, v3, v4) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L1ba9b6.  call temp:= `add`(v1, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1ba9bc.  v2:= "Host" @kind object;
  #L1ba9c0.  call temp:= `header`(v7, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1ba9c6.  v2:= temp @kind object;
  #L1ba9c8.  if v2 == 0 then goto L1ba9e0;
  #L1ba9cc.  v3:= new `okhttp3.internal.http2.Header`;
  #L1ba9d0.  v4:= `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @type ^`okio.ByteString` @kind object;
  #L1ba9d4.  call `<init>`(v3, v4, v2) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L1ba9da.  call temp:= `add`(v1, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1ba9e0.  v2:= new `okhttp3.internal.http2.Header`;
  #L1ba9e4.  v3:= `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @type ^`okio.ByteString` @kind object;
  #L1ba9e8.  call temp:= `url`(v7) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1ba9ee.  v7:= temp @kind object;
  #L1ba9f0.  call temp:= `scheme`(v7) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L1ba9f6.  v7:= temp @kind object;
  #L1ba9f8.  call `<init>`(v2, v3, v7) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L1ba9fe.  call temp:= `add`(v1, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1baa04.  v7:= 0I;
  #L1baa06.  call temp:= `size`(v0) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1baa0c.  v2:= temp;
  #L1baa0e.  if v7 >= v2 then goto L1baaa8;
  #L1baa12.  call temp:= `name`(v0, v7) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1baa18.  v3:= temp @kind object;
  #L1baa1a.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L1baa1e.  v5:= "Locale.US" @kind object;
  #L1baa22.  call `checkNotNullExpressionValue`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1baa28.  if v3 == 0 then goto L1baa98;
  #L1baa2c.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L1baa32.  v3:= temp @kind object;
  #L1baa34.  v4:= "(this as java.lang.String).toLowerCase(locale)" @kind object;
  #L1baa38.  call `checkNotNullExpressionValue`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1baa3e.  call temp:= `access$getHTTP_2_SKIPPED_REQUEST_HEADERS$cp`() @signature `Lokhttp3/internal/http2/Http2ExchangeCodec;.access$getHTTP_2_SKIPPED_REQUEST_HEADERS$cp:()Ljava/util/List;` @kind static;
  #L1baa44.  v4:= temp @kind object;
  #L1baa46.  call temp:= `contains`(v4, v3) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1baa4c.  v4:= temp;
  #L1baa4e.  if v4 == 0 then goto L1baa7a;
  #L1baa52.  v4:= "te" @kind object;
  #L1baa56.  call temp:= `areEqual`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1baa5c.  v4:= temp;
  #L1baa5e.  if v4 == 0 then goto L1baa92;
  #L1baa62.  call temp:= `value`(v0, v7) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1baa68.  v4:= temp @kind object;
  #L1baa6a.  v5:= "trailers" @kind object;
  #L1baa6e.  call temp:= `areEqual`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1baa74.  v4:= temp;
  #L1baa76.  if v4 == 0 then goto L1baa92;
  #L1baa7a.  v4:= new `okhttp3.internal.http2.Header`;
  #L1baa7e.  call temp:= `value`(v0, v7) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1baa84.  v5:= temp @kind object;
  #L1baa86.  call `<init>`(v4, v3, v5) @signature `Lokhttp3/internal/http2/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L1baa8c.  call temp:= `add`(v1, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1baa92.  v7:= v7 + 1;
  #L1baa96.  goto L1baa0e;
  #L1baa98.  v7:= new `java.lang.NullPointerException`;
  #L1baa9c.  v0:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L1baaa0.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1baaa6.  throw v7;
  #L1baaa8.  return v1 @kind object;
}
procedure `okhttp3.Response$Builder` `readHttp2HeadersList`(`okhttp3.internal.http2.Http2ExchangeCodec$Companion` v7 @kind this, `okhttp3.Headers` v8 @kind object, `okhttp3.Protocol` v9 @kind object) @signature `Lokhttp3/internal/http2/Http2ExchangeCodec$Companion;.readHttp2HeadersList:(Lokhttp3/Headers;Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1baabc.  v0:= "headerBlock" @kind object;
  #L1baac0.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1baac6.  v0:= "protocol" @kind object;
  #L1baaca.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1baad0.  v0:= new `okhttp3.Headers$Builder`;
  #L1baad4.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L1baada.  call temp:= `size`(v8) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1baae0.  v1:= temp;
  #L1baae2.  v2:= 0I;
  #L1baae4.  v3:= 0I;
  #L1baae6.  if v3 >= v1 then goto L1bab5a;
  #L1baaea.  call temp:= `name`(v8, v3) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1baaf0.  v4:= temp @kind object;
  #L1baaf2.  call temp:= `value`(v8, v3) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1baaf8.  v5:= temp @kind object;
  #L1baafa.  v6:= ":status" @kind object;
  #L1baafe.  call temp:= `areEqual`(v4, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1bab04.  v6:= temp;
  #L1bab06.  if v6 == 0 then goto L1bab3a;
  #L1bab0a.  v2:= `@@okhttp3.internal.http.StatusLine.Companion` @type ^`okhttp3.internal.http.StatusLine$Companion` @kind object;
  #L1bab0e.  v4:= new `java.lang.StringBuilder`;
  #L1bab12.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bab18.  v6:= "HTTP/1.1 " @kind object;
  #L1bab1c.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bab22.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bab28.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bab2e.  v4:= temp @kind object;
  #L1bab30.  call temp:= `parse`(v2, v4) @signature `Lokhttp3/internal/http/StatusLine$Companion;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @kind virtual;
  #L1bab36.  v2:= temp @kind object;
  #L1bab38.  goto L1bab54;
  #L1bab3a.  call temp:= `access$getHTTP_2_SKIPPED_RESPONSE_HEADERS$cp`() @signature `Lokhttp3/internal/http2/Http2ExchangeCodec;.access$getHTTP_2_SKIPPED_RESPONSE_HEADERS$cp:()Ljava/util/List;` @kind static;
  #L1bab40.  v6:= temp @kind object;
  #L1bab42.  call temp:= `contains`(v6, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1bab48.  v6:= temp;
  #L1bab4a.  if v6 != 0 then goto L1bab54;
  #L1bab4e.  call temp:= `addLenient$okhttp`(v0, v4, v5) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1bab54.  v3:= v3 + 1;
  #L1bab58.  goto L1baae6;
  #L1bab5a.  if v2 == 0 then goto L1bab9a;
  #L1bab5e.  v8:= new `okhttp3.Response$Builder`;
  #L1bab62.  call `<init>`(v8) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L1bab68.  call temp:= `protocol`(v8, v9) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1bab6e.  v8:= temp @kind object;
  #L1bab70.  v9:= v2.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L1bab74.  call temp:= `code`(v8, v9) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L1bab7a.  v8:= temp @kind object;
  #L1bab7c.  v9:= v2.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L1bab80.  call temp:= `message`(v8, v9) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1bab86.  v8:= temp @kind object;
  #L1bab88.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L1bab8e.  v9:= temp @kind object;
  #L1bab90.  call temp:= `headers`(v8, v9) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1bab96.  v8:= temp @kind object;
  #L1bab98.  return v8 @kind object;
  #L1bab9a.  v8:= new `java.net.ProtocolException`;
  #L1bab9e.  v9:= "Expected ':status' header not present" @kind object;
  #L1baba2.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1baba8.  throw v8;
}
