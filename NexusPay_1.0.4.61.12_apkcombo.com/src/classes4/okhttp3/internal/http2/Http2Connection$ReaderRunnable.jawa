record `okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.http2.Http2Reader$Handler` @kind interface, `kotlin.jvm.functions.Function0` @kind interface {
  `okhttp3.internal.http2.Http2Reader` `okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v1 @kind this, `okhttp3.internal.http2.Http2Connection` v2 @kind object, `okhttp3.internal.http2.Http2Reader` v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.<init>:(Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Http2Reader;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b8894.  v0:= "reader" @kind object;
  #L1b8898.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b889e.  v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` := v2 @kind object;
  #L1b88a2.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b88a8.  v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @type ^`okhttp3.internal.http2.Http2Reader` := v3 @kind object;
  #L1b88ac.  return @kind void;
}
procedure `void` `ackSettings`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.ackSettings:()V` @AccessFlag PUBLIC {
    temp;

  #L1b88c0.  return @kind void;
}
procedure `void` `alternateService`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `okio.ByteString` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `long` v6 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.alternateService:(ILjava/lang/String;Lokio/ByteString;Ljava/lang/String;IJ)V` @AccessFlag PUBLIC {
    temp;

  #L1b88d4.  v1:= "origin" @kind object;
  #L1b88d8.  call `checkNotNullParameter`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b88de.  v1:= "protocol" @kind object;
  #L1b88e2.  call `checkNotNullParameter`(v3, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b88e8.  v1:= "host" @kind object;
  #L1b88ec.  call `checkNotNullParameter`(v4, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b88f2.  return @kind void;
}
procedure `void` `applyAndAckSettings`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v21 @kind this, `boolean` v22 , `okhttp3.internal.http2.Settings` v23 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.applyAndAckSettings:(ZLokhttp3/internal/http2/Settings;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L1b8904.  v12:= v21 @kind object;
  #L1b8908.  v0:= v23 @kind object;
  #L1b890c.  v1:= "settings" @kind object;
  #L1b8910.  call `checkNotNullParameter`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b8916.  v13:= new `kotlin.jvm.internal.Ref$LongRef`;
  #L1b891a.  call `<init>`(v13) @signature `Lkotlin/jvm/internal/Ref$LongRef;.<init>:()V` @kind direct;
  #L1b8920.  v14:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L1b8924.  call `<init>`(v14) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L1b892a.  v15:= new `kotlin.jvm.internal.Ref$ObjectRef`;
  #L1b892e.  call `<init>`(v15) @signature `Lkotlin/jvm/internal/Ref$ObjectRef;.<init>:()V` @kind direct;
  #L1b8934.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8938.  call temp:= `getWriter`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.getWriter:()Lokhttp3/internal/http2/Http2Writer;` @kind virtual;
  #L1b893e.  v16:= temp @kind object;
  #L1b8940.  @monitorenter v16
  #L1b8942.  v11:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8946.  @monitorenter v11
  #L1b8948.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b894c.  call temp:= `getPeerSettings`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.getPeerSettings:()Lokhttp3/internal/http2/Settings;` @kind virtual;
  #L1b8952.  v1:= temp @kind object;
  #L1b8954.  if v22 == 0 then goto L1b895c;
  #L1b8958.  v2:= v0 @kind object;
  #L1b895a.  goto L1b8976;
  #L1b895c.  v2:= new `okhttp3.internal.http2.Settings`;
  #L1b8960.  call `<init>`(v2) @signature `Lokhttp3/internal/http2/Settings;.<init>:()V` @kind direct;
  #L1b8966.  call `merge`(v2, v1) @signature `Lokhttp3/internal/http2/Settings;.merge:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L1b896c.  call `merge`(v2, v0) @signature `Lokhttp3/internal/http2/Settings;.merge:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L1b8972.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1b8976.  v15.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v2 @kind object;
  #L1b897a.  v2:= (`okhttp3.internal.http2.Settings`) v2 @kind object;
  #L1b897e.  call temp:= `getInitialWindowSize`(v2) @signature `Lokhttp3/internal/http2/Settings;.getInitialWindowSize:()I` @kind virtual;
  #L1b8984.  v2:= temp;
  #L1b8986.  v2:= (`long`) v2 @kind i2l;
  #L1b8988.  call temp:= `getInitialWindowSize`(v1) @signature `Lokhttp3/internal/http2/Settings;.getInitialWindowSize:()I` @kind virtual;
  #L1b898e.  v1:= temp;
  #L1b8990.  v4:= (`long`) v1 @kind i2l;
  #L1b8992.  v2:= v2 - v4 @kind long;
  #L1b8994.  v13.`kotlin.jvm.internal.Ref$LongRef.element` @type ^`long` := v2 @kind wide;
  #L1b8998.  v10:= 0I;
  #L1b899a.  v8:= 0L;
  #L1b899e.  v1:= lcmp(v2, v8);
  #L1b89a2.  if v1 == 0 then goto L1b89fa;
  #L1b89a6.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b89aa.  call temp:= `getStreams$okhttp`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.getStreams$okhttp:()Ljava/util/Map;` @kind virtual;
  #L1b89b0.  v1:= temp @kind object;
  #L1b89b2.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L1b89b8.  v1:= temp;
  #L1b89ba.  if v1 == 0 then goto L1b89c0;
  #L1b89be.  goto L1b89fa;
  #L1b89c0.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b89c4.  call temp:= `getStreams$okhttp`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.getStreams$okhttp:()Ljava/util/Map;` @kind virtual;
  #L1b89ca.  v1:= temp @kind object;
  #L1b89cc.  call temp:= `values`(v1) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L1b89d2.  v1:= temp @kind object;
  #L1b89d4.  v2:= new `okhttp3.internal.http2.Http2Stream`[v10];
  #L1b89d8.  call temp:= `toArray`(v1, v2) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1b89de.  v1:= temp @kind object;
  #L1b89e0.  if v1 == 0 then goto L1b89ea;
  #L1b89e4.  v1:= (`okhttp3.internal.http2.Http2Stream`[]) v1 @kind object;
  #L1b89e8.  goto L1b89fc;
  #L1b89ea.  v0:= new `java.lang.NullPointerException`;
  #L1b89ee.  v1:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L1b89f2.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b89f8.  throw v0;
  #L1b89fa.  v1:= 0I;
  #L1b89fc.  v14.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` := v1 @kind object;
  #L1b8a00.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8a04.  v2:= v15.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L1b8a08.  v2:= (`okhttp3.internal.http2.Settings`) v2 @kind object;
  #L1b8a0c.  call `setPeerSettings`(v1, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.setPeerSettings:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L1b8a12.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8a16.  call temp:= `access$getSettingsListenerQueue$p`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getSettingsListenerQueue$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/concurrent/TaskQueue;` @kind static;
  #L1b8a1c.  v7:= temp @kind object;
  #L1b8a1e.  v1:= new `java.lang.StringBuilder`;
  #L1b8a22.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b8a28.  v2:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8a2c.  call temp:= `getConnectionName$okhttp`(v2) @signature `Lokhttp3/internal/http2/Http2Connection;.getConnectionName$okhttp:()Ljava/lang/String;` @kind virtual;
  #L1b8a32.  v2:= temp @kind object;
  #L1b8a34.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b8a3a.  v2:= " onSettings" @kind object;
  #L1b8a3e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b8a44.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b8a4a.  v4:= temp @kind object;
  #L1b8a4c.  v5:= 1I;
  #L1b8a4e.  v6:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1`;
  #L1b8a52.  v1:= v6 @kind object;
  #L1b8a54.  v2:= v4 @kind object;
  #L1b8a56.  v3:= v5;
  #L1b8a58.  v17:= v6 @kind object;
  #L1b8a5c.  v6:= v21 @kind object;
  #L1b8a60.  v18:= v7 @kind object;
  #L1b8a64.  v7:= v15 @kind object;
  #L1b8a66.  v8:= v22;
  #L1b8a6a.  v9:= v23 @kind object;
  #L1b8a6e.  v19:= 0I;
  #L1b8a72.  v10:= v13 @kind object;
  #L1b8a74.  v20:= v11 @kind object;
  #L1b8a78.  v11:= v14 @kind object;
  #L1b8a7a.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection$ReaderRunnable;Lkotlin/jvm/internal/Ref$ObjectRef;ZLokhttp3/internal/http2/Settings;Lkotlin/jvm/internal/Ref$LongRef;Lkotlin/jvm/internal/Ref$ObjectRef;)V` @kind direct;
  #L1b8a80.  v1:= v17 @kind object;
  #L1b8a84.  v0:= v18 @kind object;
  #L1b8a88.  v2:= 0L;
  #L1b8a8c.  call `schedule`(v0, v1, v2) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule:(Lokhttp3/internal/concurrent/Task;J)V` @kind virtual;
  #L1b8a92.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1b8a96.  @monitorexit v20
  #L1b8a98.  v0:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8a9c.  call temp:= `getWriter`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.getWriter:()Lokhttp3/internal/http2/Http2Writer;` @kind virtual;
  #L1b8aa2.  v0:= temp @kind object;
  #L1b8aa4.  v1:= v15.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L1b8aa8.  v1:= (`okhttp3.internal.http2.Settings`) v1 @kind object;
  #L1b8aac.  call `applyAndAckSettings`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Writer;.applyAndAckSettings:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L1b8ab2.  goto L1b8ac0;
  #L1b8ab4.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1b8ab6.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8aba.  call `access$failConnection`(v1, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.access$failConnection:(Lokhttp3/internal/http2/Http2Connection;Ljava/io/IOException;)V` @kind static;
  #L1b8ac0.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1b8ac4.  @monitorexit v16
  #L1b8ac6.  v0:= v14.`kotlin.jvm.internal.Ref$ObjectRef.element` @type ^`java.lang.Object` @kind object;
  #L1b8aca.  v1:= v0 @kind object;
  #L1b8acc.  v1:= (`okhttp3.internal.http2.Http2Stream`[]) v1 @kind object;
  #L1b8ad0.  if v1 == 0 then goto L1b8b08;
  #L1b8ad4.  v0:= (`okhttp3.internal.http2.Http2Stream`[]) v0 @kind object;
  #L1b8ad8.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b8ade.  v1:= length @variable v0;
  #L1b8ae0.  v10:= 0I;
  #L1b8ae2.  if v10 >= v1 then goto L1b8b08;
  #L1b8ae6.  v2:= v0[v10] @kind object;
  #L1b8aea.  @monitorenter v2
  #L1b8aec.  v3:= v13.`kotlin.jvm.internal.Ref$LongRef.element` @type ^`long` @kind wide;
  #L1b8af0.  call `addBytesToWriteWindow`(v2, v3) @signature `Lokhttp3/internal/http2/Http2Stream;.addBytesToWriteWindow:(J)V` @kind virtual;
  #L1b8af6.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1b8afa.  @monitorexit v2
  #L1b8afc.  v10:= v10 + 1;
  #L1b8b00.  goto L1b8ae2;
  #L1b8b02.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b8b04.  @monitorexit v2
  #L1b8b06.  throw v0;
  #L1b8b08.  return @kind void;
  #L1b8b0a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b8b0c.  goto L1b8b14;
  #L1b8b0e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b8b10.  v20:= v11 @kind object;
  #L1b8b14.  @monitorexit v20
  #L1b8b16.  throw v0;
  #L1b8b18.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b8b1a.  @monitorexit v16
  #L1b8b1c.  throw v0;
  catch `java.lang.Throwable` @[L1b8942..L1b8948] goto L1b8b18;
  catch `java.lang.Throwable` @[L1b8948..L1b8a52] goto L1b8b0e;
  catch `java.lang.Throwable` @[L1b8a7a..L1b8a96] goto L1b8b0a;
  catch `java.lang.Throwable` @[L1b8a96..L1b8a98] goto L1b8b18;
  catch `java.io.IOException` @[L1b8a98..L1b8ab2] goto L1b8ab4;
  catch `java.lang.Throwable` @[L1b8a98..L1b8ab2] goto L1b8b18;
  catch `java.lang.Throwable` @[L1b8ab6..L1b8ac4] goto L1b8b18;
  catch `java.lang.Throwable` @[L1b8aec..L1b8afa] goto L1b8b02;
  catch `java.lang.Throwable` @[L1b8b14..L1b8b18] goto L1b8b18;
}
procedure `void` `data`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v2 @kind this, `boolean` v3 , `int` v4 , `okio.BufferedSource` v5 @kind object, `int` v6 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.data:(ZILokio/BufferedSource;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b8b84.  v0:= "source" @kind object;
  #L1b8b88.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b8b8e.  v0:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8b92.  call temp:= `pushedStream$okhttp`(v0, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.pushedStream$okhttp:(I)Z` @kind virtual;
  #L1b8b98.  v0:= temp;
  #L1b8b9a.  if v0 == 0 then goto L1b8baa;
  #L1b8b9e.  v0:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8ba2.  call `pushDataLater$okhttp`(v0, v4, v5, v6, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.pushDataLater$okhttp:(ILokio/BufferedSource;IZ)V` @kind virtual;
  #L1b8ba8.  return @kind void;
  #L1b8baa.  v0:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8bae.  call temp:= `getStream`(v0, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.getStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L1b8bb4.  v0:= temp @kind object;
  #L1b8bb6.  if v0 != 0 then goto L1b8bdc;
  #L1b8bba.  v3:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8bbe.  v0:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1b8bc2.  call `writeSynResetLater$okhttp`(v3, v4, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.writeSynResetLater$okhttp:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L1b8bc8.  v3:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8bcc.  v0:= (`long`) v6 @kind i2l;
  #L1b8bce.  call `updateConnectionFlowControl$okhttp`(v3, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.updateConnectionFlowControl$okhttp:(J)V` @kind virtual;
  #L1b8bd4.  call `skip`(v5, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L1b8bda.  return @kind void;
  #L1b8bdc.  call `receiveData`(v0, v5, v6) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveData:(Lokio/BufferedSource;I)V` @kind virtual;
  #L1b8be2.  if v3 == 0 then goto L1b8bf2;
  #L1b8be6.  v3:= `@@okhttp3.internal.Util.EMPTY_HEADERS` @type ^`okhttp3.Headers` @kind object;
  #L1b8bea.  v4:= 1I;
  #L1b8bec.  call `receiveHeaders`(v0, v3, v4) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveHeaders:(Lokhttp3/Headers;Z)V` @kind virtual;
  #L1b8bf2.  return @kind void;
}
procedure `okhttp3.internal.http2.Http2Reader` `getReader$okhttp`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.getReader$okhttp:()Lokhttp3/internal/http2/Http2Reader;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b887c.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L1b8880.  return v0 @kind object;
}
procedure `void` `goAway`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v3 @kind this, `int` v4 , `okhttp3.internal.http2.ErrorCode` v5 @kind object, `okio.ByteString` v6 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.goAway:(ILokhttp3/internal/http2/ErrorCode;Lokio/ByteString;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b8c04.  v0:= "errorCode" @kind object;
  #L1b8c08.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b8c0e.  v5:= "debugData" @kind object;
  #L1b8c12.  call `checkNotNullParameter`(v6, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b8c18.  call temp:= `size`(v6) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1b8c1e.  v5:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8c22.  @monitorenter v5
  #L1b8c24.  v6:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8c28.  call temp:= `getStreams$okhttp`(v6) @signature `Lokhttp3/internal/http2/Http2Connection;.getStreams$okhttp:()Ljava/util/Map;` @kind virtual;
  #L1b8c2e.  v6:= temp @kind object;
  #L1b8c30.  call temp:= `values`(v6) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L1b8c36.  v6:= temp @kind object;
  #L1b8c38.  v0:= 0I;
  #L1b8c3a.  v1:= new `okhttp3.internal.http2.Http2Stream`[v0];
  #L1b8c3e.  call temp:= `toArray`(v6, v1) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1b8c44.  v6:= temp @kind object;
  #L1b8c46.  if v6 == 0 then goto L1b8ca6;
  #L1b8c4a.  v6:= (`okhttp3.internal.http2.Http2Stream`[]) v6 @kind object;
  #L1b8c4e.  v1:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8c52.  v2:= 1I;
  #L1b8c54.  call `access$setShutdown$p`(v1, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.access$setShutdown$p:(Lokhttp3/internal/http2/Http2Connection;Z)V` @kind static;
  #L1b8c5a.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1b8c5e.  @monitorexit v5
  #L1b8c60.  v5:= length @variable v6;
  #L1b8c62.  if v0 >= v5 then goto L1b8ca4;
  #L1b8c66.  v1:= v6[v0] @kind object;
  #L1b8c6a.  call temp:= `getId`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.getId:()I` @kind virtual;
  #L1b8c70.  v2:= temp;
  #L1b8c72.  if v2 <= v4 then goto L1b8c9e;
  #L1b8c76.  call temp:= `isLocallyInitiated`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.isLocallyInitiated:()Z` @kind virtual;
  #L1b8c7c.  v2:= temp;
  #L1b8c7e.  if v2 == 0 then goto L1b8c9e;
  #L1b8c82.  v2:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1b8c86.  call `receiveRstStream`(v1, v2) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveRstStream:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L1b8c8c.  v2:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8c90.  call temp:= `getId`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.getId:()I` @kind virtual;
  #L1b8c96.  v1:= temp;
  #L1b8c98.  call temp:= `removeStream$okhttp`(v2, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.removeStream$okhttp:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L1b8c9e.  v0:= v0 + 1;
  #L1b8ca2.  goto L1b8c62;
  #L1b8ca4.  return @kind void;
  #L1b8ca6.  v4:= new `java.lang.NullPointerException`;
  #L1b8caa.  v6:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L1b8cae.  call `<init>`(v4, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b8cb4.  throw v4;
  #L1b8cb6.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b8cb8.  @monitorexit v5
  #L1b8cba.  throw v4;
  catch `java.lang.Throwable` @[L1b8c24..L1b8c5e] goto L1b8cb6;
  catch `java.lang.Throwable` @[L1b8ca6..L1b8cb6] goto L1b8cb6;
}
procedure `void` `headers`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v16 @kind this, `boolean` v17 , `int` v18 , `int` v19 , `java.util.List` v20 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.headers:(ZIILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L1b8ce0.  v12:= v16 @kind object;
  #L1b8ce4.  v0:= v17;
  #L1b8ce8.  v9:= v18;
  #L1b8cec.  v10:= v20 @kind object;
  #L1b8cf0.  v1:= "headerBlock" @kind object;
  #L1b8cf4.  call `checkNotNullParameter`(v10, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b8cfa.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8cfe.  call temp:= `pushedStream$okhttp`(v1, v9) @signature `Lokhttp3/internal/http2/Http2Connection;.pushedStream$okhttp:(I)Z` @kind virtual;
  #L1b8d04.  v1:= temp;
  #L1b8d06.  if v1 == 0 then goto L1b8d16;
  #L1b8d0a.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8d0e.  call `pushHeadersLater$okhttp`(v1, v9, v10, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.pushHeadersLater$okhttp:(ILjava/util/List;Z)V` @kind virtual;
  #L1b8d14.  return @kind void;
  #L1b8d16.  v13:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8d1a.  @monitorenter v13
  #L1b8d1c.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8d20.  call temp:= `getStream`(v1, v9) @signature `Lokhttp3/internal/http2/Http2Connection;.getStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L1b8d26.  v8:= temp @kind object;
  #L1b8d28.  if v8 != 0 then goto L1b8e40;
  #L1b8d2c.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8d30.  call temp:= `access$isShutdown$p`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.access$isShutdown$p:(Lokhttp3/internal/http2/Http2Connection;)Z` @kind static;
  #L1b8d36.  v1:= temp;
  #L1b8d38.  if v1 == 0 then goto L1b8d40;
  #L1b8d3c.  @monitorexit v13
  #L1b8d3e.  return @kind void;
  #L1b8d40.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8d44.  call temp:= `getLastGoodStreamId$okhttp`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.getLastGoodStreamId$okhttp:()I` @kind virtual;
  #L1b8d4a.  v1:= temp;
  #L1b8d4c.  if v9 > v1 then goto L1b8d54;
  #L1b8d50.  @monitorexit v13
  #L1b8d52.  return @kind void;
  #L1b8d54.  v1:= v9 %% 2;
  #L1b8d58.  v2:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8d5c.  call temp:= `getNextStreamId$okhttp`(v2) @signature `Lokhttp3/internal/http2/Http2Connection;.getNextStreamId$okhttp:()I` @kind virtual;
  #L1b8d62.  v2:= temp;
  #L1b8d64.  v2:= v2 %% 2;
  #L1b8d68.  if v1 != v2 then goto L1b8d70;
  #L1b8d6c.  @monitorexit v13
  #L1b8d6e.  return @kind void;
  #L1b8d70.  call temp:= `toHeaders`(v20) @signature `Lokhttp3/internal/Util;.toHeaders:(Ljava/util/List;)Lokhttp3/Headers;` @kind static;
  #L1b8d76.  v6:= temp @kind object;
  #L1b8d78.  v7:= new `okhttp3.internal.http2.Http2Stream`;
  #L1b8d7c.  v3:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8d80.  v4:= 0I;
  #L1b8d82.  v1:= v7 @kind object;
  #L1b8d84.  v2:= v18;
  #L1b8d88.  v5:= v17;
  #L1b8d8c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/http2/Http2Stream;.<init>:(ILokhttp3/internal/http2/Http2Connection;ZZLokhttp3/Headers;)V` @kind direct;
  #L1b8d92.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8d96.  call `setLastGoodStreamId$okhttp`(v1, v9) @signature `Lokhttp3/internal/http2/Http2Connection;.setLastGoodStreamId$okhttp:(I)V` @kind virtual;
  #L1b8d9c.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8da0.  call temp:= `getStreams$okhttp`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.getStreams$okhttp:()Ljava/util/Map;` @kind virtual;
  #L1b8da6.  v1:= temp @kind object;
  #L1b8da8.  call temp:= `valueOf`(v18) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1b8dae.  v2:= temp @kind object;
  #L1b8db0.  call temp:= `put`(v1, v2, v7) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1b8db6.  v1:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8dba.  call temp:= `access$getTaskRunner$p`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getTaskRunner$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/concurrent/TaskRunner;` @kind static;
  #L1b8dc0.  v1:= temp @kind object;
  #L1b8dc2.  call temp:= `newQueue`(v1) @signature `Lokhttp3/internal/concurrent/TaskRunner;.newQueue:()Lokhttp3/internal/concurrent/TaskQueue;` @kind virtual;
  #L1b8dc8.  v14:= temp @kind object;
  #L1b8dca.  v1:= new `java.lang.StringBuilder`;
  #L1b8dce.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b8dd4.  v2:= v12.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8dd8.  call temp:= `getConnectionName$okhttp`(v2) @signature `Lokhttp3/internal/http2/Http2Connection;.getConnectionName$okhttp:()Ljava/lang/String;` @kind virtual;
  #L1b8dde.  v2:= temp @kind object;
  #L1b8de0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b8de6.  v2:= 91I;
  #L1b8dea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b8df0.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b8df6.  v2:= "] onStream" @kind object;
  #L1b8dfa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b8e00.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b8e06.  v4:= temp @kind object;
  #L1b8e08.  v5:= 0L;
  #L1b8e0c.  v11:= 1I;
  #L1b8e0e.  v15:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1`;
  #L1b8e12.  v1:= v15 @kind object;
  #L1b8e14.  v2:= v4 @kind object;
  #L1b8e16.  v3:= v11;
  #L1b8e18.  v5:= v11;
  #L1b8e1a.  v6:= v7 @kind object;
  #L1b8e1c.  v7:= v16 @kind object;
  #L1b8e20.  v9:= v18;
  #L1b8e24.  v10:= v20 @kind object;
  #L1b8e28.  v11:= v17;
  #L1b8e2c.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Stream;Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Lokhttp3/internal/http2/Http2Stream;ILjava/util/List;Z)V` @kind direct;
  #L1b8e32.  v0:= 0L;
  #L1b8e36.  call `schedule`(v14, v15, v0) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule:(Lokhttp3/internal/concurrent/Task;J)V` @kind virtual;
  #L1b8e3c.  @monitorexit v13
  #L1b8e3e.  return @kind void;
  #L1b8e40.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1b8e44.  @monitorexit v13
  #L1b8e46.  call temp:= `toHeaders`(v20) @signature `Lokhttp3/internal/Util;.toHeaders:(Ljava/util/List;)Lokhttp3/Headers;` @kind static;
  #L1b8e4c.  v1:= temp @kind object;
  #L1b8e4e.  call `receiveHeaders`(v8, v1, v0) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveHeaders:(Lokhttp3/Headers;Z)V` @kind virtual;
  #L1b8e54.  return @kind void;
  #L1b8e56.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b8e58.  @monitorexit v13
  #L1b8e5a.  throw v0;
  catch `java.lang.Throwable` @[L1b8d1c..L1b8d38] goto L1b8e56;
  catch `java.lang.Throwable` @[L1b8d40..L1b8d4c] goto L1b8e56;
  catch `java.lang.Throwable` @[L1b8d54..L1b8d68] goto L1b8e56;
  catch `java.lang.Throwable` @[L1b8d70..L1b8e3c] goto L1b8e56;
  catch `java.lang.Throwable` @[L1b8e40..L1b8e44] goto L1b8e56;
}
procedure `java.lang.Object` `invoke`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.invoke:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1b8860.  call `invoke`(v1) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.invoke:()V` @kind virtual;
  #L1b8866.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1b886a.  return v0 @kind object;
}
procedure `void` `invoke`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v5 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.invoke:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b8e98.  v0:= `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1b8e9c.  v1:= 0I;
  #L1b8e9e.  v2:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L1b8ea2.  call `readConnectionPreface`(v2, v5) @signature `Lokhttp3/internal/http2/Http2Reader;.readConnectionPreface:(Lokhttp3/internal/http2/Http2Reader$Handler;)V` @kind virtual;
  #L1b8ea8.  v2:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L1b8eac.  v3:= 0I;
  #L1b8eae.  call temp:= `nextFrame`(v2, v3, v5) @signature `Lokhttp3/internal/http2/Http2Reader;.nextFrame:(ZLokhttp3/internal/http2/Http2Reader$Handler;)Z` @kind virtual;
  #L1b8eb4.  v2:= temp;
  #L1b8eb6.  if v2 == 0 then goto L1b8ebc;
  #L1b8eba.  goto L1b8ea8;
  #L1b8ebc.  v2:= `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1b8ec0.  v0:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1b8ec4.  goto L1b8edc;
  #L1b8ec6.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L1b8ec8.  goto L1b8ed4;
  #L1b8eca.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b8ecc.  v2:= v0 @kind object;
  #L1b8ece.  goto L1b8ef4;
  #L1b8ed0.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L1b8ed2.  v2:= v0 @kind object;
  #L1b8ed4.  v2:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1b8ed8.  v0:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1b8edc.  v3:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8ee0.  call `close$okhttp`(v3, v2, v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.close$okhttp:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V` @kind virtual;
  #L1b8ee6.  v0:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L1b8eea.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1b8ef0.  return @kind void;
  #L1b8ef2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b8ef4.  v4:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8ef8.  call `close$okhttp`(v4, v2, v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.close$okhttp:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V` @kind virtual;
  #L1b8efe.  v0:= v5.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L1b8f02.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1b8f08.  throw v3;
  catch `java.io.IOException` @[L1b8e9e..L1b8ec0] goto L1b8ed0;
  catch `java.lang.Throwable` @[L1b8e9e..L1b8ec0] goto L1b8eca;
  catch `java.io.IOException` @[L1b8ec0..L1b8ec4] goto L1b8ec6;
  catch `java.lang.Throwable` @[L1b8ec0..L1b8ec4] goto L1b8ef2;
  catch `java.lang.Throwable` @[L1b8ed4..L1b8edc] goto L1b8ef2;
}
procedure `void` `ping`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v11 @kind this, `boolean` v12 , `int` v13 , `int` v14 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.ping:(ZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1b8f44.  if v12 == 0 then goto L1b8fd2;
  #L1b8f48.  v12:= v11.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8f4c.  @monitorenter v12
  #L1b8f4e.  v14:= 1I;
  #L1b8f50.  v0:= 1L;
  #L1b8f54.  if v13 == v14 then goto L1b8fb4;
  #L1b8f58.  v14:= 2I;
  #L1b8f5a.  if v13 == v14 then goto L1b8f9e;
  #L1b8f5e.  v14:= 3I;
  #L1b8f60.  if v13 == v14 then goto L1b8f6a;
  #L1b8f64.  v13:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1b8f68.  goto L1b8fc8;
  #L1b8f6a.  v13:= v11.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8f6e.  call temp:= `access$getAwaitPongsReceived$p`(v13) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getAwaitPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;)J` @kind static;
  #L1b8f74.  v2:= temp @kind wide;
  #L1b8f76.  v2:= v2 + v0 @kind long;
  #L1b8f78.  call `access$setAwaitPongsReceived$p`(v13, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.access$setAwaitPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;J)V` @kind static;
  #L1b8f7e.  v13:= v11.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8f82.  if v13 == 0 then goto L1b8f8e;
  #L1b8f86.  call `notifyAll`(v13) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L1b8f8c.  goto L1b8f64;
  #L1b8f8e.  v13:= new `java.lang.NullPointerException`;
  #L1b8f92.  v14:= "null cannot be cast to non-null type java.lang.Object" @kind object;
  #L1b8f96.  call `<init>`(v13, v14) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b8f9c.  throw v13;
  #L1b8f9e.  v13:= v11.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8fa2.  call temp:= `access$getDegradedPongsReceived$p`(v13) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getDegradedPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;)J` @kind static;
  #L1b8fa8.  v2:= temp @kind wide;
  #L1b8faa.  v2:= v2 + v0 @kind long;
  #L1b8fac.  call `access$setDegradedPongsReceived$p`(v13, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.access$setDegradedPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;J)V` @kind static;
  #L1b8fb2.  goto L1b8fc8;
  #L1b8fb4.  v13:= v11.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8fb8.  call temp:= `access$getIntervalPongsReceived$p`(v13) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getIntervalPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;)J` @kind static;
  #L1b8fbe.  v2:= temp @kind wide;
  #L1b8fc0.  v2:= v2 + v0 @kind long;
  #L1b8fc2.  call `access$setIntervalPongsReceived$p`(v13, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.access$setIntervalPongsReceived$p:(Lokhttp3/internal/http2/Http2Connection;J)V` @kind static;
  #L1b8fc8.  @monitorexit v12
  #L1b8fca.  goto L1b902e;
  #L1b8fcc.  v13:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b8fce.  @monitorexit v12
  #L1b8fd0.  throw v13;
  #L1b8fd2.  v12:= v11.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8fd6.  call temp:= `access$getWriterQueue$p`(v12) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getWriterQueue$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/concurrent/TaskQueue;` @kind static;
  #L1b8fdc.  v12:= temp @kind object;
  #L1b8fde.  v0:= new `java.lang.StringBuilder`;
  #L1b8fe2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b8fe8.  v1:= v11.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b8fec.  call temp:= `getConnectionName$okhttp`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.getConnectionName$okhttp:()Ljava/lang/String;` @kind virtual;
  #L1b8ff2.  v1:= temp @kind object;
  #L1b8ff4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b8ffa.  v1:= " ping" @kind object;
  #L1b8ffe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b9004.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b900a.  v5:= temp @kind object;
  #L1b900c.  v0:= 0L;
  #L1b9010.  v6:= 1I;
  #L1b9012.  v10:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1`;
  #L1b9016.  v2:= v10 @kind object;
  #L1b9018.  v3:= v5 @kind object;
  #L1b901a.  v4:= v6;
  #L1b901c.  v7:= v11 @kind object;
  #L1b901e.  v8:= v13;
  #L1b9020.  v9:= v14;
  #L1b9022.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$ping$$inlined$execute$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection$ReaderRunnable;II)V` @kind direct;
  #L1b9028.  call `schedule`(v12, v10, v0) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule:(Lokhttp3/internal/concurrent/Task;J)V` @kind virtual;
  #L1b902e.  return @kind void;
  catch `java.lang.Throwable` @[L1b8f64..L1b8fc8] goto L1b8fcc;
}
procedure `void` `priority`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `boolean` v4 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.priority:(IIIZ)V` @AccessFlag PUBLIC {
    temp;

  #L1b904c.  return @kind void;
}
procedure `void` `pushPromise`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this, `int` v1 , `int` v2 , `java.util.List` v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.pushPromise:(IILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L1b9060.  v1:= "requestHeaders" @kind object;
  #L1b9064.  call `checkNotNullParameter`(v3, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b906a.  v1:= v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b906e.  call `pushRequestLater$okhttp`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.pushRequestLater$okhttp:(ILjava/util/List;)V` @kind virtual;
  #L1b9074.  return @kind void;
}
procedure `void` `rstStream`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v1 @kind this, `int` v2 , `okhttp3.internal.http2.ErrorCode` v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b9088.  v0:= "errorCode" @kind object;
  #L1b908c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b9092.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b9096.  call temp:= `pushedStream$okhttp`(v0, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.pushedStream$okhttp:(I)Z` @kind virtual;
  #L1b909c.  v0:= temp;
  #L1b909e.  if v0 == 0 then goto L1b90ae;
  #L1b90a2.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b90a6.  call `pushResetLater$okhttp`(v0, v2, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.pushResetLater$okhttp:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L1b90ac.  return @kind void;
  #L1b90ae.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b90b2.  call temp:= `removeStream$okhttp`(v0, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.removeStream$okhttp:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L1b90b8.  v2:= temp @kind object;
  #L1b90ba.  if v2 == 0 then goto L1b90c4;
  #L1b90be.  call `receiveRstStream`(v2, v3) @signature `Lokhttp3/internal/http2/Http2Stream;.receiveRstStream:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L1b90c4.  return @kind void;
}
procedure `void` `settings`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v11 @kind this, `boolean` v12 , `okhttp3.internal.http2.Settings` v13 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.settings:(ZLokhttp3/internal/http2/Settings;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1b90d8.  v0:= "settings" @kind object;
  #L1b90dc.  call `checkNotNullParameter`(v13, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b90e2.  v0:= v11.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b90e6.  call temp:= `access$getWriterQueue$p`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getWriterQueue$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/concurrent/TaskQueue;` @kind static;
  #L1b90ec.  v0:= temp @kind object;
  #L1b90ee.  v1:= new `java.lang.StringBuilder`;
  #L1b90f2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b90f8.  v2:= v11.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b90fc.  call temp:= `getConnectionName$okhttp`(v2) @signature `Lokhttp3/internal/http2/Http2Connection;.getConnectionName$okhttp:()Ljava/lang/String;` @kind virtual;
  #L1b9102.  v2:= temp @kind object;
  #L1b9104.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b910a.  v2:= " applyAndAckSettings" @kind object;
  #L1b910e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b9114.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b911a.  v6:= temp @kind object;
  #L1b911c.  v1:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1`;
  #L1b9120.  v7:= 1I;
  #L1b9122.  v3:= v1 @kind object;
  #L1b9124.  v4:= v6 @kind object;
  #L1b9126.  v5:= v7;
  #L1b9128.  v8:= v11 @kind object;
  #L1b912a.  v9:= v12;
  #L1b912c.  v10:= v13 @kind object;
  #L1b912e.  call `<init>`(v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$settings$$inlined$execute$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection$ReaderRunnable;ZLokhttp3/internal/http2/Settings;)V` @kind direct;
  #L1b9134.  v12:= 0L;
  #L1b9138.  call `schedule`(v0, v1, v12) @signature `Lokhttp3/internal/concurrent/TaskQueue;.schedule:(Lokhttp3/internal/concurrent/Task;J)V` @kind virtual;
  #L1b913e.  return @kind void;
}
procedure `void` `windowUpdate`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v3 @kind this, `int` v4 , `long` v5 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.windowUpdate:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b9150.  if v4 != 0 then goto L1b919a;
  #L1b9154.  v4:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b9158.  @monitorenter v4
  #L1b915a.  v0:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b915e.  call temp:= `getWriteBytesMaximum`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.getWriteBytesMaximum:()J` @kind virtual;
  #L1b9164.  v1:= temp @kind wide;
  #L1b9166.  v1:= v1 + v5 @kind long;
  #L1b9168.  call `access$setWriteBytesMaximum$p`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.access$setWriteBytesMaximum$p:(Lokhttp3/internal/http2/Http2Connection;J)V` @kind static;
  #L1b916e.  v5:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b9172.  if v5 == 0 then goto L1b9184;
  #L1b9176.  call `notifyAll`(v5) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L1b917c.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1b9180.  @monitorexit v4
  #L1b9182.  goto L1b91c0;
  #L1b9184.  v5:= new `java.lang.NullPointerException`;
  #L1b9188.  v6:= "null cannot be cast to non-null type java.lang.Object" @kind object;
  #L1b918c.  call `<init>`(v5, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b9192.  throw v5;
  #L1b9194.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b9196.  @monitorexit v4
  #L1b9198.  throw v5;
  #L1b919a.  v0:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b919e.  call temp:= `getStream`(v0, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.getStream:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L1b91a4.  v4:= temp @kind object;
  #L1b91a6.  if v4 == 0 then goto L1b91c0;
  #L1b91aa.  @monitorenter v4
  #L1b91ac.  call `addBytesToWriteWindow`(v4, v5) @signature `Lokhttp3/internal/http2/Http2Stream;.addBytesToWriteWindow:(J)V` @kind virtual;
  #L1b91b2.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1b91b6.  @monitorexit v4
  #L1b91b8.  goto L1b91c0;
  #L1b91ba.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b91bc.  @monitorexit v4
  #L1b91be.  throw v5;
  #L1b91c0.  return @kind void;
  catch `java.lang.Throwable` @[L1b915a..L1b9180] goto L1b9194;
  catch `java.lang.Throwable` @[L1b9184..L1b9194] goto L1b9194;
  catch `java.lang.Throwable` @[L1b91ac..L1b91b6] goto L1b91ba;
}
