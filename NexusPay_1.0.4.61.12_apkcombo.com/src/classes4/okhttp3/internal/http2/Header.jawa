record `okhttp3.internal.http2.Header` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.http2.Header.hpackSize` @AccessFlag PUBLIC_FINAL;
  `okio.ByteString` `okhttp3.internal.http2.Header.name` @AccessFlag PUBLIC_FINAL;
  `okio.ByteString` `okhttp3.internal.http2.Header.value` @AccessFlag PUBLIC_FINAL;
}
global `okhttp3.internal.http2.Header$Companion` `@@okhttp3.internal.http2.Header.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.PSEUDO_PREFIX` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.RESPONSE_STATUS` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.RESPONSE_STATUS_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_METHOD` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.TARGET_METHOD_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_PATH` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.TARGET_PATH_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.TARGET_SCHEME_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Header;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1b6ae4.  v0:= new `okhttp3.internal.http2.Header$Companion`;
  #L1b6ae8.  v1:= 0I;
  #L1b6aea.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http2/Header$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1b6af0.  `@@okhttp3.internal.http2.Header.Companion` @type ^`okhttp3.internal.http2.Header$Companion` := v0 @kind object;
  #L1b6af4.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1b6af8.  v1:= ":" @kind object;
  #L1b6afc.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1b6b02.  v0:= temp @kind object;
  #L1b6b04.  `@@okhttp3.internal.http2.Header.PSEUDO_PREFIX` @type ^`okio.ByteString` := v0 @kind object;
  #L1b6b08.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1b6b0c.  v1:= ":status" @kind object;
  #L1b6b10.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1b6b16.  v0:= temp @kind object;
  #L1b6b18.  `@@okhttp3.internal.http2.Header.RESPONSE_STATUS` @type ^`okio.ByteString` := v0 @kind object;
  #L1b6b1c.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1b6b20.  v1:= ":method" @kind object;
  #L1b6b24.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1b6b2a.  v0:= temp @kind object;
  #L1b6b2c.  `@@okhttp3.internal.http2.Header.TARGET_METHOD` @type ^`okio.ByteString` := v0 @kind object;
  #L1b6b30.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1b6b34.  v1:= ":path" @kind object;
  #L1b6b38.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1b6b3e.  v0:= temp @kind object;
  #L1b6b40.  `@@okhttp3.internal.http2.Header.TARGET_PATH` @type ^`okio.ByteString` := v0 @kind object;
  #L1b6b44.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1b6b48.  v1:= ":scheme" @kind object;
  #L1b6b4c.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1b6b52.  v0:= temp @kind object;
  #L1b6b54.  `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @type ^`okio.ByteString` := v0 @kind object;
  #L1b6b58.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1b6b5c.  v1:= ":authority" @kind object;
  #L1b6b60.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1b6b66.  v0:= temp @kind object;
  #L1b6b68.  `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @type ^`okio.ByteString` := v0 @kind object;
  #L1b6b6c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/http2/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b6b80.  v0:= "name" @kind object;
  #L1b6b84.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b6b8a.  v0:= "value" @kind object;
  #L1b6b8e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b6b94.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1b6b98.  call temp:= `encodeUtf8`(v0, v2) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1b6b9e.  v2:= temp @kind object;
  #L1b6ba0.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1b6ba4.  call temp:= `encodeUtf8`(v0, v3) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1b6baa.  v3:= temp @kind object;
  #L1b6bac.  call `<init>`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L1b6bb2.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v1 @kind this, `okio.ByteString` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b6bc4.  v0:= "name" @kind object;
  #L1b6bc8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b6bce.  v0:= "value" @kind object;
  #L1b6bd2.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b6bd8.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1b6bdc.  call temp:= `encodeUtf8`(v0, v3) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1b6be2.  v3:= temp @kind object;
  #L1b6be4.  call `<init>`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L1b6bea.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v1 @kind this, `okio.ByteString` v2 @kind object, `okio.ByteString` v3 @kind object) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b6bfc.  v0:= "name" @kind object;
  #L1b6c00.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b6c06.  v0:= "value" @kind object;
  #L1b6c0a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b6c10.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b6c16.  v1.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` := v2 @kind object;
  #L1b6c1a.  v1.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` := v3 @kind object;
  #L1b6c1e.  call temp:= `size`(v2) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1b6c24.  v2:= temp;
  #L1b6c26.  v2:= v2 + 32;
  #L1b6c2a.  v3:= v1.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L1b6c2e.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1b6c34.  v3:= temp;
  #L1b6c36.  v2:= v2 + v3 @kind int;
  #L1b6c38.  v1.`okhttp3.internal.http2.Header.hpackSize` @type ^`int` := v2;
  #L1b6c3c.  return @kind void;
}
procedure `okhttp3.internal.http2.Header` `copy$default`(`okhttp3.internal.http2.Header` v0 @kind object, `okio.ByteString` v1 @kind object, `okio.ByteString` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokhttp3/internal/http2/Header;.copy$default:(Lokhttp3/internal/http2/Header;Lokio/ByteString;Lokio/ByteString;ILjava/lang/Object;)Lokhttp3/internal/http2/Header;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1b6a50.  v4:= v3 ^& 1;
  #L1b6a54.  if v4 == 0 then goto L1b6a5c;
  #L1b6a58.  v1:= v0.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L1b6a5c.  v3:= v3 ^& 2;
  #L1b6a60.  if v3 == 0 then goto L1b6a68;
  #L1b6a64.  v2:= v0.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L1b6a68.  call temp:= `copy`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Header;.copy:(Lokio/ByteString;Lokio/ByteString;)Lokhttp3/internal/http2/Header;` @kind virtual;
  #L1b6a6e.  v0:= temp @kind object;
  #L1b6a70.  return v0 @kind object;
}
procedure `okio.ByteString` `component1`(`okhttp3.internal.http2.Header` v1 @kind this) @signature `Lokhttp3/internal/http2/Header;.component1:()Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b6ab4.  v0:= v1.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L1b6ab8.  return v0 @kind object;
}
procedure `okio.ByteString` `component2`(`okhttp3.internal.http2.Header` v1 @kind this) @signature `Lokhttp3/internal/http2/Header;.component2:()Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b6acc.  v0:= v1.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L1b6ad0.  return v0 @kind object;
}
procedure `okhttp3.internal.http2.Header` `copy`(`okhttp3.internal.http2.Header` v1 @kind this, `okio.ByteString` v2 @kind object, `okio.ByteString` v3 @kind object) @signature `Lokhttp3/internal/http2/Header;.copy:(Lokio/ByteString;Lokio/ByteString;)Lokhttp3/internal/http2/Header;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b6a84.  v0:= "name" @kind object;
  #L1b6a88.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b6a8e.  v0:= "value" @kind object;
  #L1b6a92.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b6a98.  v0:= new `okhttp3.internal.http2.Header`;
  #L1b6a9c.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L1b6aa2.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.internal.http2.Header` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/internal/http2/Header;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b6968.  if v2 == v3 then goto L1b69a6;
  #L1b696c.  v0:= instanceof @variable v3 @type ^`okhttp3.internal.http2.Header` @kind boolean;
  #L1b6970.  if v0 == 0 then goto L1b69a2;
  #L1b6974.  v3:= (`okhttp3.internal.http2.Header`) v3 @kind object;
  #L1b6978.  v0:= v2.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L1b697c.  v1:= v3.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L1b6980.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b6986.  v0:= temp;
  #L1b6988.  if v0 == 0 then goto L1b69a2;
  #L1b698c.  v0:= v2.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L1b6990.  v3:= v3.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L1b6994.  call temp:= `areEqual`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b699a.  v3:= temp;
  #L1b699c.  if v3 == 0 then goto L1b69a2;
  #L1b69a0.  goto L1b69a6;
  #L1b69a2.  v3:= 0I;
  #L1b69a4.  return v3;
  #L1b69a6.  v3:= 1I;
  #L1b69a8.  return v3;
}
procedure `int` `hashCode`(`okhttp3.internal.http2.Header` v3 @kind this) @signature `Lokhttp3/internal/http2/Header;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b69bc.  v0:= v3.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L1b69c0.  v1:= 0I;
  #L1b69c2.  if v0 == 0 then goto L1b69d0;
  #L1b69c6.  call temp:= `hashCode`(v0) @signature `Lokio/ByteString;.hashCode:()I` @kind virtual;
  #L1b69cc.  v0:= temp;
  #L1b69ce.  goto L1b69d2;
  #L1b69d0.  v0:= 0I;
  #L1b69d2.  v0:= v0 * 31;
  #L1b69d6.  v2:= v3.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L1b69da.  if v2 == 0 then goto L1b69e6;
  #L1b69de.  call temp:= `hashCode`(v2) @signature `Lokio/ByteString;.hashCode:()I` @kind virtual;
  #L1b69e4.  v1:= temp;
  #L1b69e6.  v0:= v0 + v1 @kind int;
  #L1b69e8.  return v0;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.http2.Header` v2 @kind this) @signature `Lokhttp3/internal/http2/Header;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b69fc.  v0:= new `java.lang.StringBuilder`;
  #L1b6a00.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b6a06.  v1:= v2.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L1b6a0a.  call temp:= `utf8`(v1) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L1b6a10.  v1:= temp @kind object;
  #L1b6a12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b6a18.  v1:= ": " @kind object;
  #L1b6a1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b6a22.  v1:= v2.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L1b6a26.  call temp:= `utf8`(v1) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L1b6a2c.  v1:= temp @kind object;
  #L1b6a2e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b6a34.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b6a3a.  v0:= temp @kind object;
  #L1b6a3c.  return v0 @kind object;
}
