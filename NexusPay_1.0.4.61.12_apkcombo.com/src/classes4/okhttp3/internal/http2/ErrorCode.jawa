record `okhttp3.internal.http2.ErrorCode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `okhttp3.internal.http2.ErrorCode.httpCode` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.http2.ErrorCode`[] `@@okhttp3.internal.http2.ErrorCode.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.CANCEL` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode$Companion` `@@okhttp3.internal.http2.ErrorCode.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.FRAME_SIZE_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.SETTINGS_TIMEOUT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.STREAM_CLOSED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/ErrorCode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b6790.  v0:= 14I;
  #L1b6794.  v0:= new `okhttp3.internal.http2.ErrorCode`[v0];
  #L1b6798.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L1b679c.  v2:= "NO_ERROR" @kind object;
  #L1b67a0.  v3:= 0I;
  #L1b67a2.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1b67a8.  `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L1b67ac.  v0[v3]:= v1 @kind object;
  #L1b67b0.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L1b67b4.  v2:= "PROTOCOL_ERROR" @kind object;
  #L1b67b8.  v3:= 1I;
  #L1b67ba.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1b67c0.  `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L1b67c4.  v0[v3]:= v1 @kind object;
  #L1b67c8.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L1b67cc.  v2:= "INTERNAL_ERROR" @kind object;
  #L1b67d0.  v3:= 2I;
  #L1b67d2.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1b67d8.  `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L1b67dc.  v0[v3]:= v1 @kind object;
  #L1b67e0.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L1b67e4.  v2:= "FLOW_CONTROL_ERROR" @kind object;
  #L1b67e8.  v3:= 3I;
  #L1b67ea.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1b67f0.  `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L1b67f4.  v0[v3]:= v1 @kind object;
  #L1b67f8.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L1b67fc.  v2:= "SETTINGS_TIMEOUT" @kind object;
  #L1b6800.  v3:= 4I;
  #L1b6802.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1b6808.  `@@okhttp3.internal.http2.ErrorCode.SETTINGS_TIMEOUT` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L1b680c.  v0[v3]:= v1 @kind object;
  #L1b6810.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L1b6814.  v2:= "STREAM_CLOSED" @kind object;
  #L1b6818.  v3:= 5I;
  #L1b681a.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1b6820.  `@@okhttp3.internal.http2.ErrorCode.STREAM_CLOSED` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L1b6824.  v0[v3]:= v1 @kind object;
  #L1b6828.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L1b682c.  v2:= "FRAME_SIZE_ERROR" @kind object;
  #L1b6830.  v3:= 6I;
  #L1b6832.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1b6838.  `@@okhttp3.internal.http2.ErrorCode.FRAME_SIZE_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L1b683c.  v0[v3]:= v1 @kind object;
  #L1b6840.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L1b6844.  v2:= "REFUSED_STREAM" @kind object;
  #L1b6848.  v3:= 7I;
  #L1b684a.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1b6850.  `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L1b6854.  v0[v3]:= v1 @kind object;
  #L1b6858.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L1b685c.  v2:= "CANCEL" @kind object;
  #L1b6860.  v3:= 8I;
  #L1b6864.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1b686a.  `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L1b686e.  v0[v3]:= v1 @kind object;
  #L1b6872.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L1b6876.  v2:= "COMPRESSION_ERROR" @kind object;
  #L1b687a.  v3:= 9I;
  #L1b687e.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1b6884.  `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L1b6888.  v0[v3]:= v1 @kind object;
  #L1b688c.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L1b6890.  v2:= "CONNECT_ERROR" @kind object;
  #L1b6894.  v3:= 10I;
  #L1b6898.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1b689e.  `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L1b68a2.  v0[v3]:= v1 @kind object;
  #L1b68a6.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L1b68aa.  v2:= "ENHANCE_YOUR_CALM" @kind object;
  #L1b68ae.  v3:= 11I;
  #L1b68b2.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1b68b8.  `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L1b68bc.  v0[v3]:= v1 @kind object;
  #L1b68c0.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L1b68c4.  v2:= "INADEQUATE_SECURITY" @kind object;
  #L1b68c8.  v3:= 12I;
  #L1b68cc.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1b68d2.  `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L1b68d6.  v0[v3]:= v1 @kind object;
  #L1b68da.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L1b68de.  v2:= "HTTP_1_1_REQUIRED" @kind object;
  #L1b68e2.  v3:= 13I;
  #L1b68e6.  call `<init>`(v1, v2, v3, v3) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L1b68ec.  `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L1b68f0.  v0[v3]:= v1 @kind object;
  #L1b68f4.  `@@okhttp3.internal.http2.ErrorCode.$VALUES` @type ^`okhttp3.internal.http2.ErrorCode`[] := v0 @kind object;
  #L1b68f8.  v0:= new `okhttp3.internal.http2.ErrorCode$Companion`;
  #L1b68fc.  v1:= 0I;
  #L1b68fe.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http2/ErrorCode$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1b6904.  `@@okhttp3.internal.http2.ErrorCode.Companion` @type ^`okhttp3.internal.http2.ErrorCode$Companion` := v0 @kind object;
  #L1b6908.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.ErrorCode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1b691c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1b6922.  v0.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int` := v3;
  #L1b6926.  return @kind void;
}
procedure `okhttp3.internal.http2.ErrorCode` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http2/ErrorCode;.valueOf:(Ljava/lang/String;)Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1b6748.  v0:= constclass @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1b674c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L1b6752.  v1:= temp @kind object;
  #L1b6754.  v1:= (`okhttp3.internal.http2.ErrorCode`) v1 @kind object;
  #L1b6758.  return v1 @kind object;
}
procedure `okhttp3.internal.http2.ErrorCode`[] `values`() @signature `Lokhttp3/internal/http2/ErrorCode;.values:()[Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1b676c.  v0:= `@@okhttp3.internal.http2.ErrorCode.$VALUES` @type ^`okhttp3.internal.http2.ErrorCode`[] @kind object;
  #L1b6770.  call temp:= `clone`(v0) @signature `[Lokhttp3/internal/http2/ErrorCode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1b6776.  v0:= temp @kind object;
  #L1b6778.  v0:= (`okhttp3.internal.http2.ErrorCode`[]) v0 @kind object;
  #L1b677c.  return v0 @kind object;
}
procedure `int` `getHttpCode`(`okhttp3.internal.http2.ErrorCode` v1 @kind this) @signature `Lokhttp3/internal/http2/ErrorCode;.getHttpCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b6730.  v0:= v1.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int`;
  #L1b6734.  return v0;
}
