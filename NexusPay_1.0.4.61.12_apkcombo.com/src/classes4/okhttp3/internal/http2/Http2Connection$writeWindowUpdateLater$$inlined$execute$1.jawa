record `okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.concurrent.Task` @kind class {
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.e` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.f` @AccessFlag FINAL_SYNTHETIC;
  `long` `okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 , `java.lang.String` v3 @kind object, `boolean` v4 , `okhttp3.internal.http2.Http2Connection` v5 @kind object, `int` v6 , `long` v7 ) @signature `Lokhttp3/internal/http2/Http2Connection$writeWindowUpdateLater$$inlined$execute$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;IJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1b95fc.  v0.`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.e` @type ^`okhttp3.internal.http2.Http2Connection` := v5 @kind object;
  #L1b9600.  v0.`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.f` @type ^`int` := v6;
  #L1b9604.  v0.`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.g` @type ^`long` := v7 @kind wide;
  #L1b9608.  call `<init>`(v0, v3, v4) @signature `Lokhttp3/internal/concurrent/Task;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L1b960e.  return @kind void;
}
procedure `long` `runOnce`(`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1` v4 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$writeWindowUpdateLater$$inlined$execute$1;.runOnce:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b95ac.  v0:= v4.`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b95b0.  call temp:= `getWriter`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.getWriter:()Lokhttp3/internal/http2/Http2Writer;` @kind virtual;
  #L1b95b6.  v0:= temp @kind object;
  #L1b95b8.  v1:= v4.`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.f` @type ^`int`;
  #L1b95bc.  v2:= v4.`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.g` @type ^`long` @kind wide;
  #L1b95c0.  call `windowUpdate`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Http2Writer;.windowUpdate:(IJ)V` @kind virtual;
  #L1b95c6.  goto L1b95d4;
  #L1b95c8.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1b95ca.  v1:= v4.`okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b95ce.  call `access$failConnection`(v1, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.access$failConnection:(Lokhttp3/internal/http2/Http2Connection;Ljava/io/IOException;)V` @kind static;
  #L1b95d4.  v0:= -1L;
  #L1b95d8.  return v0 @kind wide;
  catch `java.io.IOException` @[L1b95ac..L1b95c6] goto L1b95c8;
}
