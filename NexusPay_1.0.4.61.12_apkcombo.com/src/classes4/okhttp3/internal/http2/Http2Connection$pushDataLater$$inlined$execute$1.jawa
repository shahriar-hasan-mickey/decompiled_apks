record `okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.concurrent.Task` @kind class {
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.e` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.f` @AccessFlag FINAL_SYNTHETIC;
  `okio.Buffer` `okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.g` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.h` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.i` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 , `java.lang.String` v3 @kind object, `boolean` v4 , `okhttp3.internal.http2.Http2Connection` v5 @kind object, `int` v6 , `okio.Buffer` v7 @kind object, `int` v8 , `boolean` v9 ) @signature `Lokhttp3/internal/http2/Http2Connection$pushDataLater$$inlined$execute$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILokio/Buffer;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1b92a8.  v0.`okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.e` @type ^`okhttp3.internal.http2.Http2Connection` := v5 @kind object;
  #L1b92ac.  v0.`okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.f` @type ^`int` := v6;
  #L1b92b0.  v0.`okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.g` @type ^`okio.Buffer` := v7 @kind object;
  #L1b92b4.  v0.`okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.h` @type ^`int` := v8;
  #L1b92b8.  v0.`okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.i` @type ^`boolean` := v9 @kind boolean;
  #L1b92bc.  call `<init>`(v0, v3, v4) @signature `Lokhttp3/internal/concurrent/Task;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L1b92c2.  return @kind void;
}
procedure `long` `runOnce`(`okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1` v5 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$pushDataLater$$inlined$execute$1;.runOnce:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b91f4.  v0:= v5.`okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b91f8.  call temp:= `access$getPushObserver$p`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getPushObserver$p:(Lokhttp3/internal/http2/Http2Connection;)Lokhttp3/internal/http2/PushObserver;` @kind static;
  #L1b91fe.  v0:= temp @kind object;
  #L1b9200.  v1:= v5.`okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.f` @type ^`int`;
  #L1b9204.  v2:= v5.`okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.g` @type ^`okio.Buffer` @kind object;
  #L1b9208.  v3:= v5.`okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.h` @type ^`int`;
  #L1b920c.  v4:= v5.`okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.i` @type ^`boolean` @kind boolean;
  #L1b9210.  call temp:= `onData`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/http2/PushObserver;.onData:(ILokio/BufferedSource;IZ)Z` @kind interface;
  #L1b9216.  v0:= temp;
  #L1b9218.  if v0 == 0 then goto L1b9236;
  #L1b921c.  v1:= v5.`okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b9220.  call temp:= `getWriter`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.getWriter:()Lokhttp3/internal/http2/Http2Writer;` @kind virtual;
  #L1b9226.  v1:= temp @kind object;
  #L1b9228.  v2:= v5.`okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.f` @type ^`int`;
  #L1b922c.  v3:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1b9230.  call `rstStream`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L1b9236.  if v0 != 0 then goto L1b9242;
  #L1b923a.  v0:= v5.`okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.i` @type ^`boolean` @kind boolean;
  #L1b923e.  if v0 == 0 then goto L1b9270;
  #L1b9242.  v0:= v5.`okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b9246.  @monitorenter v0
  #L1b9248.  v1:= v5.`okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b924c.  call temp:= `access$getCurrentPushRequests$p`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.access$getCurrentPushRequests$p:(Lokhttp3/internal/http2/Http2Connection;)Ljava/util/Set;` @kind static;
  #L1b9252.  v1:= temp @kind object;
  #L1b9254.  v2:= v5.`okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1.f` @type ^`int`;
  #L1b9258.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1b925e.  v2:= temp @kind object;
  #L1b9260.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L1b9266.  @monitorexit v0
  #L1b9268.  goto L1b9270;
  #L1b926a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b926c.  @monitorexit v0
  #L1b926e.  throw v1;
  #L1b9270.  v0:= -1L;
  #L1b9274.  return v0 @kind wide;
  catch `java.io.IOException` @[L1b91f4..L1b9248] goto L1b9270;
  catch `java.lang.Throwable` @[L1b9248..L1b9266] goto L1b926a;
  catch `java.io.IOException` @[L1b9266..L1b9270] goto L1b9270;
}
