record `okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.concurrent.Task` @kind class {
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1.e` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1.f` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.http2.ErrorCode` `okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 , `java.lang.String` v3 @kind object, `boolean` v4 , `okhttp3.internal.http2.Http2Connection` v5 @kind object, `int` v6 , `okhttp3.internal.http2.ErrorCode` v7 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$writeSynResetLater$$inlined$execute$1;.<init>:(Ljava/lang/String;ZLjava/lang/String;ZLokhttp3/internal/http2/Http2Connection;ILokhttp3/internal/http2/ErrorCode;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1b9588.  v0.`okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1.e` @type ^`okhttp3.internal.http2.Http2Connection` := v5 @kind object;
  #L1b958c.  v0.`okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1.f` @type ^`int` := v6;
  #L1b9590.  v0.`okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1.g` @type ^`okhttp3.internal.http2.ErrorCode` := v7 @kind object;
  #L1b9594.  call `<init>`(v0, v3, v4) @signature `Lokhttp3/internal/concurrent/Task;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L1b959a.  return @kind void;
}
procedure `long` `runOnce`(`okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1` v3 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$writeSynResetLater$$inlined$execute$1;.runOnce:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1b9540.  v0:= v3.`okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b9544.  v1:= v3.`okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1.f` @type ^`int`;
  #L1b9548.  v2:= v3.`okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1.g` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1b954c.  call `writeSynReset$okhttp`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.writeSynReset$okhttp:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L1b9552.  goto L1b9560;
  #L1b9554.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1b9556.  v1:= v3.`okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b955a.  call `access$failConnection`(v1, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.access$failConnection:(Lokhttp3/internal/http2/Http2Connection;Ljava/io/IOException;)V` @kind static;
  #L1b9560.  v0:= -1L;
  #L1b9564.  return v0 @kind wide;
  catch `java.io.IOException` @[L1b9540..L1b9552] goto L1b9554;
}
