record `okhttp3.internal.http2.Http2Reader$ContinuationSource` @kind class @AccessFlag PUBLIC_FINAL extends `okio.Source` @kind interface {
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.a` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.b` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.c` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.e` @AccessFlag PRIVATE;
  `okio.BufferedSource` `okhttp3.internal.http2.Http2Reader$ContinuationSource.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v1 @kind this, `okio.BufferedSource` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.<init>:(Lokio/BufferedSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1bb15c.  v0:= "source" @kind object;
  #L1bb160.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1bb166.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1bb16c.  v1.`okhttp3.internal.http2.Http2Reader$ContinuationSource.f` @type ^`okio.BufferedSource` := v2 @kind object;
  #L1bb170.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v9 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.a:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1bb198.  v0:= v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.c` @type ^`int`;
  #L1bb19c.  v1:= v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.f` @type ^`okio.BufferedSource` @kind object;
  #L1bb1a0.  call temp:= `readMedium`(v1) @signature `Lokhttp3/internal/Util;.readMedium:(Lokio/BufferedSource;)I` @kind static;
  #L1bb1a6.  v1:= temp;
  #L1bb1a8.  v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @type ^`int` := v1;
  #L1bb1ac.  v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.a` @type ^`int` := v1;
  #L1bb1b0.  v1:= v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.f` @type ^`okio.BufferedSource` @kind object;
  #L1bb1b4.  call temp:= `readByte`(v1) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1bb1ba.  v1:= temp;
  #L1bb1bc.  v2:= 255I;
  #L1bb1c0.  call temp:= `and`(v1, v2) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1bb1c6.  v1:= temp;
  #L1bb1c8.  v3:= v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.f` @type ^`okio.BufferedSource` @kind object;
  #L1bb1cc.  call temp:= `readByte`(v3) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1bb1d2.  v3:= temp;
  #L1bb1d4.  call temp:= `and`(v3, v2) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1bb1da.  v2:= temp;
  #L1bb1dc.  v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.b` @type ^`int` := v2;
  #L1bb1e0.  v2:= `@@okhttp3.internal.http2.Http2Reader.Companion` @type ^`okhttp3.internal.http2.Http2Reader$Companion` @kind object;
  #L1bb1e4.  call temp:= `getLogger`(v2) @signature `Lokhttp3/internal/http2/Http2Reader$Companion;.getLogger:()Ljava/util/logging/Logger;` @kind virtual;
  #L1bb1ea.  v2:= temp @kind object;
  #L1bb1ec.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L1bb1f0.  call temp:= `isLoggable`(v2, v3) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L1bb1f6.  v2:= temp;
  #L1bb1f8.  if v2 == 0 then goto L1bb22a;
  #L1bb1fc.  v2:= `@@okhttp3.internal.http2.Http2Reader.Companion` @type ^`okhttp3.internal.http2.Http2Reader$Companion` @kind object;
  #L1bb200.  call temp:= `getLogger`(v2) @signature `Lokhttp3/internal/http2/Http2Reader$Companion;.getLogger:()Ljava/util/logging/Logger;` @kind virtual;
  #L1bb206.  v2:= temp @kind object;
  #L1bb208.  v3:= `@@okhttp3.internal.http2.Http2.INSTANCE` @type ^`okhttp3.internal.http2.Http2` @kind object;
  #L1bb20c.  v4:= 1I;
  #L1bb20e.  v5:= v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.c` @type ^`int`;
  #L1bb212.  v6:= v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.a` @type ^`int`;
  #L1bb216.  v8:= v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.b` @type ^`int`;
  #L1bb21a.  v7:= v1;
  #L1bb21c.  call temp:= `frameLog`(v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/internal/http2/Http2;.frameLog:(ZIIII)Ljava/lang/String;` @kind virtual;
  #L1bb222.  v3:= temp @kind object;
  #L1bb224.  call `fine`(v2, v3) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L1bb22a.  v2:= v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.f` @type ^`okio.BufferedSource` @kind object;
  #L1bb22e.  call temp:= `readInt`(v2) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L1bb234.  v2:= temp;
  #L1bb236.  v3:= 2147483647I;
  #L1bb23c.  v2:= v2 ^& v3 @kind int;
  #L1bb23e.  v9.`okhttp3.internal.http2.Http2Reader$ContinuationSource.c` @type ^`int` := v2;
  #L1bb242.  v3:= 9I;
  #L1bb246.  if v1 != v3 then goto L1bb260;
  #L1bb24a.  if v2 != v0 then goto L1bb250;
  #L1bb24e.  return @kind void;
  #L1bb250.  v0:= new `java.io.IOException`;
  #L1bb254.  v1:= "TYPE_CONTINUATION streamId changed" @kind object;
  #L1bb258.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bb25e.  throw v0;
  #L1bb260.  v0:= new `java.io.IOException`;
  #L1bb264.  v2:= new `java.lang.StringBuilder`;
  #L1bb268.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bb26e.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb274.  v1:= " != TYPE_CONTINUATION" @kind object;
  #L1bb278.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb27e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bb284.  v1:= temp @kind object;
  #L1bb286.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bb28c.  throw v0;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L1bb184.  return @kind void;
}
procedure `int` `getFlags`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.getFlags:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1bb044.  v0:= v1.`okhttp3.internal.http2.Http2Reader$ContinuationSource.b` @type ^`int`;
  #L1bb048.  return v0;
}
procedure `int` `getLeft`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.getLeft:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1bb05c.  v0:= v1.`okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @type ^`int`;
  #L1bb060.  return v0;
}
procedure `int` `getLength`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.getLength:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1bb074.  v0:= v1.`okhttp3.internal.http2.Http2Reader$ContinuationSource.a` @type ^`int`;
  #L1bb078.  return v0;
}
procedure `int` `getPadding`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.getPadding:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1bb08c.  v0:= v1.`okhttp3.internal.http2.Http2Reader$ContinuationSource.e` @type ^`int`;
  #L1bb090.  return v0;
}
procedure `int` `getStreamId`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.getStreamId:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1bb0a4.  v0:= v1.`okhttp3.internal.http2.Http2Reader$ContinuationSource.c` @type ^`int`;
  #L1bb0a8.  return v0;
}
procedure `long` `read`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v6 @kind this, `okio.Buffer` v7 @kind object, `long` v8 ) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1bb0bc.  v0:= "sink" @kind object;
  #L1bb0c0.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1bb0c6.  v0:= v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @type ^`int`;
  #L1bb0ca.  v1:= -1L;
  #L1bb0ce.  if v0 != 0 then goto L1bb0fe;
  #L1bb0d2.  v0:= v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.f` @type ^`okio.BufferedSource` @kind object;
  #L1bb0d6.  v3:= v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.e` @type ^`int`;
  #L1bb0da.  v3:= (`long`) v3 @kind i2l;
  #L1bb0dc.  call `skip`(v0, v3) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L1bb0e2.  v0:= 0I;
  #L1bb0e4.  v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.e` @type ^`int` := v0;
  #L1bb0e8.  v0:= v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.b` @type ^`int`;
  #L1bb0ec.  v0:= v0 ^& 4;
  #L1bb0f0.  if v0 == 0 then goto L1bb0f6;
  #L1bb0f4.  return v1 @kind wide;
  #L1bb0f6.  call `a`(v6) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.a:()V` @kind direct;
  #L1bb0fc.  goto L1bb0c6;
  #L1bb0fe.  v3:= v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.f` @type ^`okio.BufferedSource` @kind object;
  #L1bb102.  v4:= (`long`) v0 @kind i2l;
  #L1bb104.  call temp:= `min`(v8, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1bb10a.  v8:= temp @kind wide;
  #L1bb10c.  call temp:= `read`(v3, v7, v8) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1bb112.  v7:= temp @kind wide;
  #L1bb114.  v9:= lcmp(v7, v1);
  #L1bb118.  if v9 != 0 then goto L1bb11e;
  #L1bb11c.  return v1 @kind wide;
  #L1bb11e.  v9:= v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @type ^`int`;
  #L1bb122.  v0:= (`int`) v7 @kind l2i;
  #L1bb124.  v9:= v9 - v0 @kind int;
  #L1bb126.  v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @type ^`int` := v9;
  #L1bb12a.  return v7 @kind wide;
}
procedure `void` `setFlags`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v0 @kind this, `int` v1 ) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setFlags:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1bb2a0.  v0.`okhttp3.internal.http2.Http2Reader$ContinuationSource.b` @type ^`int` := v1;
  #L1bb2a4.  return @kind void;
}
procedure `void` `setLeft`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v0 @kind this, `int` v1 ) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setLeft:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1bb2b8.  v0.`okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @type ^`int` := v1;
  #L1bb2bc.  return @kind void;
}
procedure `void` `setLength`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v0 @kind this, `int` v1 ) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setLength:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1bb2d0.  v0.`okhttp3.internal.http2.Http2Reader$ContinuationSource.a` @type ^`int` := v1;
  #L1bb2d4.  return @kind void;
}
procedure `void` `setPadding`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v0 @kind this, `int` v1 ) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setPadding:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1bb2e8.  v0.`okhttp3.internal.http2.Http2Reader$ContinuationSource.e` @type ^`int` := v1;
  #L1bb2ec.  return @kind void;
}
procedure `void` `setStreamId`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v0 @kind this, `int` v1 ) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setStreamId:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1bb300.  v0.`okhttp3.internal.http2.Http2Reader$ContinuationSource.c` @type ^`int` := v1;
  #L1bb304.  return @kind void;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bb13c.  v0:= v1.`okhttp3.internal.http2.Http2Reader$ContinuationSource.f` @type ^`okio.BufferedSource` @kind object;
  #L1bb140.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L1bb146.  v0:= temp @kind object;
  #L1bb148.  return v0 @kind object;
}
