record `okhttp3.internal.http2.Huffman` @kind class @AccessFlag PUBLIC_FINAL {
}
global `okhttp3.internal.http2.Huffman` `@@okhttp3.internal.http2.Huffman.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int`[] `@@okhttp3.internal.http2.Huffman.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okhttp3.internal.http2.Huffman.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.http2.Huffman$a` `@@okhttp3.internal.http2.Huffman.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Huffman;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1be6e8.  v0:= new `okhttp3.internal.http2.Huffman`;
  #L1be6ec.  call `<init>`(v0) @signature `Lokhttp3/internal/http2/Huffman;.<init>:()V` @kind direct;
  #L1be6f2.  `@@okhttp3.internal.http2.Huffman.INSTANCE` @type ^`okhttp3.internal.http2.Huffman` := v0 @kind object;
  #L1be6f6.  v1:= 256I;
  #L1be6fa.  v2:= new `int`[v1];
  #L1be6fe.  goto L1be750;
  #L1be704.  `@@okhttp3.internal.http2.Huffman.a` @type ^`int`[] := v2 @kind object;
  #L1be708.  v1:= new `byte`[v1];
  #L1be70c.  goto L1beb58;
  #L1be712.  `@@okhttp3.internal.http2.Huffman.b` @type ^`byte`[] := v1 @kind object;
  #L1be716.  v1:= new `okhttp3.internal.http2.Huffman$a`;
  #L1be71a.  call `<init>`(v1) @signature `Lokhttp3/internal/http2/Huffman$a;.<init>:()V` @kind direct;
  #L1be720.  `@@okhttp3.internal.http2.Huffman.c` @type ^`okhttp3.internal.http2.Huffman$a` := v1 @kind object;
  #L1be724.  v1:= `@@okhttp3.internal.http2.Huffman.b` @type ^`byte`[] @kind object;
  #L1be728.  v1:= length @variable v1;
  #L1be72a.  v2:= 0I;
  #L1be72c.  if v2 >= v1 then goto L1be74c;
  #L1be730.  v3:= `@@okhttp3.internal.http2.Huffman.a` @type ^`int`[] @kind object;
  #L1be734.  v3:= v3[v2];
  #L1be738.  v4:= `@@okhttp3.internal.http2.Huffman.b` @type ^`byte`[] @kind object;
  #L1be73c.  v4:= v4[v2] @kind byte;
  #L1be740.  call `a`(v0, v2, v3, v4) @signature `Lokhttp3/internal/http2/Huffman;.a:(III)V` @kind direct;
  #L1be746.  v2:= v2 + 1;
  #L1be74a.  goto L1be72c;
  #L1be74c.  return @kind void;
  #L1be74e.  
  #L1be750.  v2:= (8184I, 8388568I, 268435426I, 268435427I, 268435428I, 268435429I, 268435430I, 268435431I, 268435432I, 16777194I, 1073741820I, 268435433I, 268435434I, 1073741821I, 268435435I, 268435436I, 268435437I, 268435438I, 268435439I, 268435440I, 268435441I, 268435442I, 1073741822I, 268435443I, 268435444I, 268435445I, 268435446I, 268435447I, 268435448I, 268435449I, 268435450I, 268435451I, 20I, 1016I, 1017I, 4090I, 8185I, 21I, 248I, 2042I, 1018I, 1019I, 249I, 2043I, 250I, 22I, 23I, 24I, 0I, 1I, 2I, 25I, 26I, 27I, 28I, 29I, 30I, 31I, 92I, 251I, 32764I, 32I, 4091I, 1020I, 8186I, 33I, 93I, 94I, 95I, 96I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 252I, 115I, 253I, 8187I, 524272I, 8188I, 16380I, 34I, 32765I, 3I, 35I, 4I, 36I, 5I, 37I, 38I, 39I, 6I, 116I, 117I, 40I, 41I, 42I, 7I, 43I, 118I, 44I, 8I, 9I, 45I, 119I, 120I, 121I, 122I, 123I, 32766I, 2044I, 16381I, 8189I, 268435452I, 1048550I, 4194258I, 1048551I, 1048552I, 4194259I, 4194260I, 4194261I, 8388569I, 4194262I, 8388570I, 8388571I, 8388572I, 8388573I, 8388574I, 16777195I, 8388575I, 16777196I, 16777197I, 4194263I, 8388576I, 16777198I, 8388577I, 8388578I, 8388579I, 8388580I, 2097116I, 4194264I, 8388581I, 4194265I, 8388582I, 8388583I, 16777199I, 4194266I, 2097117I, 1048553I, 4194267I, 4194268I, 8388584I, 8388585I, 2097118I, 8388586I, 4194269I, 4194270I, 16777200I, 2097119I, 4194271I, 8388587I, 8388588I, 2097120I, 2097121I, 4194272I, 2097122I, 8388589I, 4194273I, 8388590I, 8388591I, 1048554I, 4194274I, 4194275I, 4194276I, 8388592I, 4194277I, 4194278I, 8388593I, 67108832I, 67108833I, 1048555I, 524273I, 4194279I, 8388594I, 4194280I, 33554412I, 67108834I, 67108835I, 67108836I, 134217694I, 134217695I, 67108837I, 16777201I, 33554413I, 524274I, 2097123I, 67108838I, 134217696I, 134217697I, 67108839I, 134217698I, 16777202I, 2097124I, 2097125I, 67108840I, 67108841I, 268435453I, 134217699I, 134217700I, 134217701I, 1048556I, 16777203I, 1048557I, 2097126I, 4194281I, 2097127I, 2097128I, 8388595I, 4194282I, 4194283I, 33554414I, 33554415I, 16777204I, 16777205I, 67108842I, 8388596I, 67108843I, 134217702I, 67108844I, 67108845I, 134217703I, 134217704I, 134217705I, 134217706I, 134217707I, 268435454I, 134217708I, 134217709I, 134217710I, 134217711I, 134217712I, 67108846I) @kind object;
  #L1beb57.  goto L1be704;
  #L1beb58.  v1:= (13I, 23I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 24I, 30I, 28I, 28I, 30I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 30I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 6I, 10I, 10I, 12I, 13I, 6I, 8I, 11I, 10I, 10I, 8I, 11I, 8I, 6I, 6I, 6I, 5I, 5I, 5I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 7I, 8I, 15I, 6I, 12I, 10I, 13I, 6I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 8I, 7I, 8I, 13I, 19I, 13I, 14I, 6I, 15I, 5I, 6I, 5I, 6I, 5I, 6I, 6I, 6I, 5I, 7I, 7I, 6I, 6I, 6I, 5I, 6I, 7I, 6I, 5I, 5I, 6I, 7I, 7I, 7I, 7I, 7I, 15I, 11I, 14I, 13I, 28I, 20I, 22I, 20I, 20I, 22I, 22I, 22I, 23I, 22I, 23I, 23I, 23I, 23I, 23I, 24I, 23I, 24I, 24I, 22I, 23I, 24I, 23I, 23I, 23I, 23I, 21I, 22I, 23I, 22I, 23I, 23I, 24I, 22I, 21I, 20I, 22I, 22I, 23I, 23I, 21I, 23I, 22I, 22I, 24I, 21I, 22I, 23I, 23I, 21I, 21I, 22I, 21I, 23I, 22I, 23I, 23I, 20I, 22I, 22I, 22I, 23I, 22I, 22I, 23I, 26I, 26I, 20I, 19I, 22I, 23I, 22I, 25I, 26I, 26I, 26I, 27I, 27I, 26I, 24I, 25I, 19I, 21I, 26I, 27I, 27I, 26I, 27I, 24I, 21I, 21I, 26I, 26I, 28I, 27I, 27I, 27I, 20I, 24I, 20I, 21I, 22I, 21I, 21I, 23I, 22I, 22I, 25I, 25I, 24I, 24I, 26I, 23I, 26I, 27I, 26I, 26I, 27I, 27I, 27I, 27I, 27I, 28I, 27I, 27I, 27I, 27I, 27I, 26I) @kind object;
  #L1bec5f.  goto L1be712;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Huffman` v0 @kind this) @signature `Lokhttp3/internal/http2/Huffman;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1bec70.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1bec76.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.Huffman` v3 @kind this, `int` v4 , `int` v5 , `int` v6 ) @signature `Lokhttp3/internal/http2/Huffman;.a:(III)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1bec88.  v0:= new `okhttp3.internal.http2.Huffman$a`;
  #L1bec8c.  call `<init>`(v0, v4, v6) @signature `Lokhttp3/internal/http2/Huffman$a;.<init>:(II)V` @kind direct;
  #L1bec92.  v4:= `@@okhttp3.internal.http2.Huffman.c` @type ^`okhttp3.internal.http2.Huffman$a` @kind object;
  #L1bec96.  v1:= 8I;
  #L1bec9a.  if v6 <= v1 then goto L1becd2;
  #L1bec9e.  v6:= v6 + -8;
  #L1beca2.  v1:= v5 ^>> v6 @kind int;
  #L1beca6.  v1:= v1 ^& 255;
  #L1becaa.  call temp:= `a`(v4) @signature `Lokhttp3/internal/http2/Huffman$a;.a:()[Lokhttp3/internal/http2/Huffman$a;` @kind virtual;
  #L1becb0.  v4:= temp @kind object;
  #L1becb2.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1becb8.  v2:= v4[v1] @kind object;
  #L1becbc.  if v2 != 0 then goto L1becce;
  #L1becc0.  v2:= new `okhttp3.internal.http2.Huffman$a`;
  #L1becc4.  call `<init>`(v2) @signature `Lokhttp3/internal/http2/Huffman$a;.<init>:()V` @kind direct;
  #L1becca.  v4[v1]:= v2 @kind object;
  #L1becce.  v4:= v2 @kind object;
  #L1becd0.  goto L1bec96;
  #L1becd2.  v1:= v1 - v6 @kind int;
  #L1becd4.  v5:= v5 ^< v1 @kind int;
  #L1becd6.  v5:= v5 ^& 255;
  #L1becda.  v6:= 1I;
  #L1becdc.  v6:= v6 ^< v1 @kind int;
  #L1becde.  call temp:= `a`(v4) @signature `Lokhttp3/internal/http2/Huffman$a;.a:()[Lokhttp3/internal/http2/Huffman$a;` @kind virtual;
  #L1bece4.  v4:= temp @kind object;
  #L1bece6.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1becec.  v6:= v6 + v5 @kind int;
  #L1becee.  call `fill`(v4, v0, v5, v6) @signature `Lkotlin/collections/ArraysKt;.fill:([Ljava/lang/Object;Ljava/lang/Object;II)V` @kind static;
  #L1becf4.  return @kind void;
}
procedure `void` `decode`(`okhttp3.internal.http2.Huffman` v8 @kind this, `okio.BufferedSource` v9 @kind object, `long` v10 , `okio.BufferedSink` v12 @kind object) @signature `Lokhttp3/internal/http2/Huffman;.decode:(Lokio/BufferedSource;JLokio/BufferedSink;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1bed08.  v0:= "source" @kind object;
  #L1bed0c.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1bed12.  v0:= "sink" @kind object;
  #L1bed16.  call `checkNotNullParameter`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1bed1c.  v0:= `@@okhttp3.internal.http2.Huffman.c` @type ^`okhttp3.internal.http2.Huffman$a` @kind object;
  #L1bed20.  v1:= 0I;
  #L1bed22.  v2:= 0L;
  #L1bed26.  v3:= v2 @kind wide;
  #L1bed28.  v2:= 0I;
  #L1bed2a.  v5:= 255I;
  #L1bed2e.  v6:= lcmp(v3, v10);
  #L1bed32.  if v6 >= 0 then goto L1bedb0;
  #L1bed36.  call temp:= `readByte`(v9) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1bed3c.  v6:= temp;
  #L1bed3e.  call temp:= `and`(v6, v5) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1bed44.  v6:= temp;
  #L1bed46.  v1:= v1 ^< 8;
  #L1bed4a.  v1:= v1 ^| v6 @kind int;
  #L1bed4c.  v2:= v2 + 8;
  #L1bed50.  v6:= 8I;
  #L1bed54.  if v2 < v6 then goto L1beda8;
  #L1bed58.  v6:= v2 + -8;
  #L1bed5c.  v7:= v1 ^>> v6 @kind int;
  #L1bed60.  v7:= v7 ^& v5 @kind int;
  #L1bed62.  call temp:= `a`(v0) @signature `Lokhttp3/internal/http2/Huffman$a;.a:()[Lokhttp3/internal/http2/Huffman$a;` @kind virtual;
  #L1bed68.  v0:= temp @kind object;
  #L1bed6a.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1bed70.  v0:= v0[v7] @kind object;
  #L1bed74.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1bed7a.  call temp:= `a`(v0) @signature `Lokhttp3/internal/http2/Huffman$a;.a:()[Lokhttp3/internal/http2/Huffman$a;` @kind virtual;
  #L1bed80.  v7:= temp @kind object;
  #L1bed82.  if v7 != 0 then goto L1beda4;
  #L1bed86.  call temp:= `b`(v0) @signature `Lokhttp3/internal/http2/Huffman$a;.b:()I` @kind virtual;
  #L1bed8c.  v6:= temp;
  #L1bed8e.  call temp:= `writeByte`(v12, v6) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1bed94.  call temp:= `c`(v0) @signature `Lokhttp3/internal/http2/Huffman$a;.c:()I` @kind virtual;
  #L1bed9a.  v0:= temp;
  #L1bed9c.  v2:= v2 - v0 @kind int;
  #L1bed9e.  v0:= `@@okhttp3.internal.http2.Huffman.c` @type ^`okhttp3.internal.http2.Huffman$a` @kind object;
  #L1beda2.  goto L1bed50;
  #L1beda4.  v2:= v6;
  #L1beda6.  goto L1bed50;
  #L1beda8.  v5:= 1L;
  #L1bedac.  v3:= v3 + v5 @kind long;
  #L1bedae.  goto L1bed2a;
  #L1bedb0.  if v2 <= 0 then goto L1bee0e;
  #L1bedb4.  v9:= v2 - 8;
  #L1bedb8.  v9:= v1 ^< v9 @kind int;
  #L1bedbc.  v9:= v9 ^& v5 @kind int;
  #L1bedbe.  call temp:= `a`(v0) @signature `Lokhttp3/internal/http2/Huffman$a;.a:()[Lokhttp3/internal/http2/Huffman$a;` @kind virtual;
  #L1bedc4.  v10:= temp @kind object;
  #L1bedc6.  call `checkNotNull`(v10) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1bedcc.  v9:= v10[v9] @kind object;
  #L1bedd0.  call `checkNotNull`(v9) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1bedd6.  call temp:= `a`(v9) @signature `Lokhttp3/internal/http2/Huffman$a;.a:()[Lokhttp3/internal/http2/Huffman$a;` @kind virtual;
  #L1beddc.  v10:= temp @kind object;
  #L1bedde.  if v10 != 0 then goto L1bee0e;
  #L1bede2.  call temp:= `c`(v9) @signature `Lokhttp3/internal/http2/Huffman$a;.c:()I` @kind virtual;
  #L1bede8.  v10:= temp;
  #L1bedea.  if v10 <= v2 then goto L1bedf0;
  #L1bedee.  goto L1bee0e;
  #L1bedf0.  call temp:= `b`(v9) @signature `Lokhttp3/internal/http2/Huffman$a;.b:()I` @kind virtual;
  #L1bedf6.  v10:= temp;
  #L1bedf8.  call temp:= `writeByte`(v12, v10) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1bedfe.  call temp:= `c`(v9) @signature `Lokhttp3/internal/http2/Huffman$a;.c:()I` @kind virtual;
  #L1bee04.  v9:= temp;
  #L1bee06.  v2:= v2 - v9 @kind int;
  #L1bee08.  v0:= `@@okhttp3.internal.http2.Huffman.c` @type ^`okhttp3.internal.http2.Huffman$a` @kind object;
  #L1bee0c.  goto L1bedb0;
  #L1bee0e.  return @kind void;
}
procedure `void` `encode`(`okhttp3.internal.http2.Huffman` v8 @kind this, `okio.ByteString` v9 @kind object, `okio.BufferedSink` v10 @kind object) @signature `Lokhttp3/internal/http2/Huffman;.encode:(Lokio/ByteString;Lokio/BufferedSink;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1bee20.  v0:= "source" @kind object;
  #L1bee24.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1bee2a.  v0:= "sink" @kind object;
  #L1bee2e.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1bee34.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1bee3a.  v0:= temp;
  #L1bee3c.  v1:= 0I;
  #L1bee3e.  v2:= 0L;
  #L1bee42.  v3:= v2 @kind wide;
  #L1bee44.  v2:= 0I;
  #L1bee46.  if v1 >= v0 then goto L1bee96;
  #L1bee4a.  call temp:= `getByte`(v9, v1) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1bee50.  v5:= temp;
  #L1bee52.  v6:= 255I;
  #L1bee56.  call temp:= `and`(v5, v6) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1bee5c.  v5:= temp;
  #L1bee5e.  v6:= `@@okhttp3.internal.http2.Huffman.a` @type ^`int`[] @kind object;
  #L1bee62.  v6:= v6[v5];
  #L1bee66.  v7:= `@@okhttp3.internal.http2.Huffman.b` @type ^`byte`[] @kind object;
  #L1bee6a.  v5:= v7[v5] @kind byte;
  #L1bee6e.  v3:= v3 ^< v5 @kind long;
  #L1bee70.  v6:= (`long`) v6 @kind i2l;
  #L1bee72.  v3:= v3 ^| v6 @kind long;
  #L1bee74.  v2:= v2 + v5 @kind int;
  #L1bee76.  v5:= 8I;
  #L1bee7a.  if v2 < v5 then goto L1bee90;
  #L1bee7e.  v2:= v2 + -8;
  #L1bee82.  v5:= v3 ^> v2 @kind long;
  #L1bee86.  v6:= (`int`) v5 @kind l2i;
  #L1bee88.  call temp:= `writeByte`(v10, v6) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1bee8e.  goto L1bee76;
  #L1bee90.  v1:= v1 + 1;
  #L1bee94.  goto L1bee46;
  #L1bee96.  if v2 <= 0 then goto L1beeb4;
  #L1bee9a.  v9:= v2 - 8;
  #L1bee9e.  v0:= v3 ^< v9 @kind long;
  #L1beea2.  v3:= 255L;
  #L1beea6.  v2:= v3 ^>> v2 @kind long;
  #L1beeaa.  v0:= v0 ^| v2 @kind long;
  #L1beeac.  v9:= (`int`) v0 @kind l2i;
  #L1beeae.  call temp:= `writeByte`(v10, v9) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1beeb4.  return @kind void;
}
procedure `int` `encodedLength`(`okhttp3.internal.http2.Huffman` v6 @kind this, `okio.ByteString` v7 @kind object) @signature `Lokhttp3/internal/http2/Huffman;.encodedLength:(Lokio/ByteString;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1be684.  v0:= "bytes" @kind object;
  #L1be688.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1be68e.  call temp:= `size`(v7) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1be694.  v0:= temp;
  #L1be696.  v1:= 0L;
  #L1be69a.  v3:= 0I;
  #L1be69c.  if v3 >= v0 then goto L1be6c6;
  #L1be6a0.  call temp:= `getByte`(v7, v3) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L1be6a6.  v4:= temp;
  #L1be6a8.  v5:= 255I;
  #L1be6ac.  call temp:= `and`(v4, v5) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1be6b2.  v4:= temp;
  #L1be6b4.  v5:= `@@okhttp3.internal.http2.Huffman.b` @type ^`byte`[] @kind object;
  #L1be6b8.  v4:= v5[v4] @kind byte;
  #L1be6bc.  v4:= (`long`) v4 @kind i2l;
  #L1be6be.  v1:= v1 + v4 @kind long;
  #L1be6c0.  v3:= v3 + 1;
  #L1be6c4.  goto L1be69c;
  #L1be6c6.  v7:= 7I;
  #L1be6c8.  v3:= (`long`) v7 @kind i2l;
  #L1be6ca.  v1:= v1 + v3 @kind long;
  #L1be6cc.  v7:= 3I;
  #L1be6ce.  v0:= v1 ^> v7 @kind long;
  #L1be6d2.  v7:= (`int`) v0 @kind l2i;
  #L1be6d4.  return v7;
}
