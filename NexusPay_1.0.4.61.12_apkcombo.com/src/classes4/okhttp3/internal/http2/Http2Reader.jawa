record `okhttp3.internal.http2.Http2Reader` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `okhttp3.internal.http2.Http2Reader$ContinuationSource` `okhttp3.internal.http2.Http2Reader.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.Hpack$Reader` `okhttp3.internal.http2.Http2Reader.b` @AccessFlag PRIVATE_FINAL;
  `okio.BufferedSource` `okhttp3.internal.http2.Http2Reader.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.http2.Http2Reader.d` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.http2.Http2Reader$Companion` `@@okhttp3.internal.http2.Http2Reader.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.logging.Logger` `@@okhttp3.internal.http2.Http2Reader.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2Reader;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1bb558.  v0:= new `okhttp3.internal.http2.Http2Reader$Companion`;
  #L1bb55c.  v1:= 0I;
  #L1bb55e.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Reader$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1bb564.  `@@okhttp3.internal.http2.Http2Reader.Companion` @type ^`okhttp3.internal.http2.Http2Reader$Companion` := v0 @kind object;
  #L1bb568.  v0:= constclass @type ^`okhttp3.internal.http2.Http2` @kind object;
  #L1bb56c.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1bb572.  v0:= temp @kind object;
  #L1bb574.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L1bb57a.  v0:= temp @kind object;
  #L1bb57c.  v1:= "Logger.getLogger(Http2::class.java.name)" @kind object;
  #L1bb580.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1bb586.  `@@okhttp3.internal.http2.Http2Reader.e` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L1bb58a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Reader` v7 @kind this, `okio.BufferedSource` v8 @kind object, `boolean` v9 ) @signature `Lokhttp3/internal/http2/Http2Reader;.<init>:(Lokio/BufferedSource;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1bb59c.  v0:= "source" @kind object;
  #L1bb5a0.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1bb5a6.  call `<init>`(v7) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1bb5ac.  v7.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` := v8 @kind object;
  #L1bb5b0.  v7.`okhttp3.internal.http2.Http2Reader.d` @type ^`boolean` := v9 @kind boolean;
  #L1bb5b4.  v2:= new `okhttp3.internal.http2.Http2Reader$ContinuationSource`;
  #L1bb5b8.  call `<init>`(v2, v8) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.<init>:(Lokio/BufferedSource;)V` @kind direct;
  #L1bb5be.  v7.`okhttp3.internal.http2.Http2Reader.a` @type ^`okhttp3.internal.http2.Http2Reader$ContinuationSource` := v2 @kind object;
  #L1bb5c2.  v8:= new `okhttp3.internal.http2.Hpack$Reader`;
  #L1bb5c6.  v3:= 4096I;
  #L1bb5ca.  v4:= 0I;
  #L1bb5cc.  v5:= 4I;
  #L1bb5ce.  v6:= 0I;
  #L1bb5d0.  v1:= v8 @kind object;
  #L1bb5d2.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/http2/Hpack$Reader;.<init>:(Lokio/Source;IIILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1bb5d8.  v7.`okhttp3.internal.http2.Http2Reader.b` @type ^`okhttp3.internal.http2.Hpack$Reader` := v8 @kind object;
  #L1bb5dc.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.Http2Reader` v4 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v5 @kind object, `int` v6 , `int` v7 , `int` v8 ) @signature `Lokhttp3/internal/http2/Http2Reader;.a:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1bb708.  if v8 == 0 then goto L1bb782;
  #L1bb70c.  v0:= v7 ^& 1;
  #L1bb710.  v1:= 0I;
  #L1bb712.  v2:= 1I;
  #L1bb714.  if v0 == 0 then goto L1bb71c;
  #L1bb718.  v0:= 1I;
  #L1bb71a.  goto L1bb71e;
  #L1bb71c.  v0:= 0I;
  #L1bb71e.  v3:= v7 ^& 32;
  #L1bb722.  if v3 == 0 then goto L1bb728;
  #L1bb726.  goto L1bb72a;
  #L1bb728.  v2:= 0I;
  #L1bb72a.  if v2 != 0 then goto L1bb772;
  #L1bb72e.  v2:= v7 ^& 8;
  #L1bb732.  if v2 == 0 then goto L1bb74e;
  #L1bb736.  v1:= v4.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb73a.  call temp:= `readByte`(v1) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1bb740.  v1:= temp;
  #L1bb742.  v2:= 255I;
  #L1bb746.  call temp:= `and`(v1, v2) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1bb74c.  v1:= temp;
  #L1bb74e.  v2:= `@@okhttp3.internal.http2.Http2Reader.Companion` @type ^`okhttp3.internal.http2.Http2Reader$Companion` @kind object;
  #L1bb752.  call temp:= `lengthWithoutPadding`(v2, v6, v7, v1) @signature `Lokhttp3/internal/http2/Http2Reader$Companion;.lengthWithoutPadding:(III)I` @kind virtual;
  #L1bb758.  v6:= temp;
  #L1bb75a.  v7:= v4.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb75e.  call `data`(v5, v0, v8, v7, v6) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.data:(ZILokio/BufferedSource;I)V` @kind interface;
  #L1bb764.  v5:= v4.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb768.  v6:= (`long`) v1 @kind i2l;
  #L1bb76a.  call `skip`(v5, v6) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L1bb770.  return @kind void;
  #L1bb772.  v5:= new `java.io.IOException`;
  #L1bb776.  v6:= "PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA" @kind object;
  #L1bb77a.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bb780.  throw v5;
  #L1bb782.  v5:= new `java.io.IOException`;
  #L1bb786.  v6:= "PROTOCOL_ERROR: TYPE_DATA streamId == 0" @kind object;
  #L1bb78a.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bb790.  throw v5;
}
procedure `java.util.logging.Logger` `access$getLogger$cp`() @signature `Lokhttp3/internal/http2/Http2Reader;.access$getLogger$cp:()Ljava/util/logging/Logger;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L1bb540.  v0:= `@@okhttp3.internal.http2.Http2Reader.e` @type ^`java.util.logging.Logger` @kind object;
  #L1bb544.  return v0 @kind object;
}
procedure `void` `b`(`okhttp3.internal.http2.Http2Reader` v3 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v4 @kind object, `int` v5 , `int` v6 , `int` v7 ) @signature `Lokhttp3/internal/http2/Http2Reader;.b:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1bb7a4.  v6:= 8I;
  #L1bb7a8.  if v5 < v6 then goto L1bb836;
  #L1bb7ac.  if v7 != 0 then goto L1bb826;
  #L1bb7b0.  v7:= v3.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb7b4.  call temp:= `readInt`(v7) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L1bb7ba.  v7:= temp;
  #L1bb7bc.  v0:= v3.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb7c0.  call temp:= `readInt`(v0) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L1bb7c6.  v0:= temp;
  #L1bb7c8.  v5:= v5 - v6 @kind int;
  #L1bb7ca.  v6:= `@@okhttp3.internal.http2.ErrorCode.Companion` @type ^`okhttp3.internal.http2.ErrorCode$Companion` @kind object;
  #L1bb7ce.  call temp:= `fromHttp2`(v6, v0) @signature `Lokhttp3/internal/http2/ErrorCode$Companion;.fromHttp2:(I)Lokhttp3/internal/http2/ErrorCode;` @kind virtual;
  #L1bb7d4.  v6:= temp @kind object;
  #L1bb7d6.  if v6 == 0 then goto L1bb7f8;
  #L1bb7da.  v0:= `@@okio.ByteString.EMPTY` @type ^`okio.ByteString` @kind object;
  #L1bb7de.  if v5 <= 0 then goto L1bb7f0;
  #L1bb7e2.  v0:= v3.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb7e6.  v1:= (`long`) v5 @kind i2l;
  #L1bb7e8.  call temp:= `readByteString`(v0, v1) @signature `Lokio/BufferedSource;.readByteString:(J)Lokio/ByteString;` @kind interface;
  #L1bb7ee.  v0:= temp @kind object;
  #L1bb7f0.  call `goAway`(v4, v7, v6, v0) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.goAway:(ILokhttp3/internal/http2/ErrorCode;Lokio/ByteString;)V` @kind interface;
  #L1bb7f6.  return @kind void;
  #L1bb7f8.  v4:= new `java.io.IOException`;
  #L1bb7fc.  v5:= new `java.lang.StringBuilder`;
  #L1bb800.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bb806.  v6:= "TYPE_GOAWAY unexpected error code: " @kind object;
  #L1bb80a.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb810.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb816.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bb81c.  v5:= temp @kind object;
  #L1bb81e.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bb824.  throw v4;
  #L1bb826.  v4:= new `java.io.IOException`;
  #L1bb82a.  v5:= "TYPE_GOAWAY streamId != 0" @kind object;
  #L1bb82e.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bb834.  throw v4;
  #L1bb836.  v4:= new `java.io.IOException`;
  #L1bb83a.  v6:= new `java.lang.StringBuilder`;
  #L1bb83e.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bb844.  v7:= "TYPE_GOAWAY length < 8: " @kind object;
  #L1bb848.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb84e.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb854.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bb85a.  v5:= temp @kind object;
  #L1bb85c.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bb862.  throw v4;
}
procedure `java.util.List` `c`(`okhttp3.internal.http2.Http2Reader` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lokhttp3/internal/http2/Http2Reader;.c:(IIII)Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1bb4dc.  v0:= v1.`okhttp3.internal.http2.Http2Reader.a` @type ^`okhttp3.internal.http2.Http2Reader$ContinuationSource` @kind object;
  #L1bb4e0.  call `setLeft`(v0, v2) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setLeft:(I)V` @kind virtual;
  #L1bb4e6.  v2:= v1.`okhttp3.internal.http2.Http2Reader.a` @type ^`okhttp3.internal.http2.Http2Reader$ContinuationSource` @kind object;
  #L1bb4ea.  call temp:= `getLeft`(v2) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.getLeft:()I` @kind virtual;
  #L1bb4f0.  v0:= temp;
  #L1bb4f2.  call `setLength`(v2, v0) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setLength:(I)V` @kind virtual;
  #L1bb4f8.  v2:= v1.`okhttp3.internal.http2.Http2Reader.a` @type ^`okhttp3.internal.http2.Http2Reader$ContinuationSource` @kind object;
  #L1bb4fc.  call `setPadding`(v2, v3) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setPadding:(I)V` @kind virtual;
  #L1bb502.  v2:= v1.`okhttp3.internal.http2.Http2Reader.a` @type ^`okhttp3.internal.http2.Http2Reader$ContinuationSource` @kind object;
  #L1bb506.  call `setFlags`(v2, v4) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setFlags:(I)V` @kind virtual;
  #L1bb50c.  v2:= v1.`okhttp3.internal.http2.Http2Reader.a` @type ^`okhttp3.internal.http2.Http2Reader$ContinuationSource` @kind object;
  #L1bb510.  call `setStreamId`(v2, v5) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.setStreamId:(I)V` @kind virtual;
  #L1bb516.  v2:= v1.`okhttp3.internal.http2.Http2Reader.b` @type ^`okhttp3.internal.http2.Hpack$Reader` @kind object;
  #L1bb51a.  call `readHeaders`(v2) @signature `Lokhttp3/internal/http2/Hpack$Reader;.readHeaders:()V` @kind virtual;
  #L1bb520.  v2:= v1.`okhttp3.internal.http2.Http2Reader.b` @type ^`okhttp3.internal.http2.Hpack$Reader` @kind object;
  #L1bb524.  call temp:= `getAndResetHeaderList`(v2) @signature `Lokhttp3/internal/http2/Hpack$Reader;.getAndResetHeaderList:()Ljava/util/List;` @kind virtual;
  #L1bb52a.  v2:= temp @kind object;
  #L1bb52c.  return v2 @kind object;
}
procedure `void` `d`(`okhttp3.internal.http2.Http2Reader` v3 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v4 @kind object, `int` v5 , `int` v6 , `int` v7 ) @signature `Lokhttp3/internal/http2/Http2Reader;.d:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1bb874.  if v7 == 0 then goto L1bb8d8;
  #L1bb878.  v0:= v6 ^& 1;
  #L1bb87c.  v1:= 0I;
  #L1bb87e.  if v0 == 0 then goto L1bb886;
  #L1bb882.  v0:= 1I;
  #L1bb884.  goto L1bb888;
  #L1bb886.  v0:= 0I;
  #L1bb888.  v2:= v6 ^& 8;
  #L1bb88c.  if v2 == 0 then goto L1bb8a8;
  #L1bb890.  v1:= v3.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb894.  call temp:= `readByte`(v1) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1bb89a.  v1:= temp;
  #L1bb89c.  v2:= 255I;
  #L1bb8a0.  call temp:= `and`(v1, v2) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1bb8a6.  v1:= temp;
  #L1bb8a8.  v2:= v6 ^& 32;
  #L1bb8ac.  if v2 == 0 then goto L1bb8ba;
  #L1bb8b0.  call `f`(v3, v4, v7) @signature `Lokhttp3/internal/http2/Http2Reader;.f:(Lokhttp3/internal/http2/Http2Reader$Handler;I)V` @kind direct;
  #L1bb8b6.  v5:= v5 + -5;
  #L1bb8ba.  v2:= `@@okhttp3.internal.http2.Http2Reader.Companion` @type ^`okhttp3.internal.http2.Http2Reader$Companion` @kind object;
  #L1bb8be.  call temp:= `lengthWithoutPadding`(v2, v5, v6, v1) @signature `Lokhttp3/internal/http2/Http2Reader$Companion;.lengthWithoutPadding:(III)I` @kind virtual;
  #L1bb8c4.  v5:= temp;
  #L1bb8c6.  call temp:= `c`(v3, v5, v1, v6, v7) @signature `Lokhttp3/internal/http2/Http2Reader;.c:(IIII)Ljava/util/List;` @kind direct;
  #L1bb8cc.  v5:= temp @kind object;
  #L1bb8ce.  v6:= -1I;
  #L1bb8d0.  call `headers`(v4, v0, v7, v6, v5) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.headers:(ZIILjava/util/List;)V` @kind interface;
  #L1bb8d6.  return @kind void;
  #L1bb8d8.  v4:= new `java.io.IOException`;
  #L1bb8dc.  v5:= "PROTOCOL_ERROR: TYPE_HEADERS streamId == 0" @kind object;
  #L1bb8e0.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bb8e6.  throw v4;
}
procedure `void` `e`(`okhttp3.internal.http2.Http2Reader` v1 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Lokhttp3/internal/http2/Http2Reader;.e:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1bb8f8.  v0:= 8I;
  #L1bb8fc.  if v3 != v0 then goto L1bb940;
  #L1bb900.  if v5 != 0 then goto L1bb930;
  #L1bb904.  v3:= v1.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb908.  call temp:= `readInt`(v3) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L1bb90e.  v3:= temp;
  #L1bb910.  v5:= v1.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb914.  call temp:= `readInt`(v5) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L1bb91a.  v5:= temp;
  #L1bb91c.  v0:= 1I;
  #L1bb91e.  v4:= v4 ^& v0 @kind int;
  #L1bb920.  if v4 == 0 then goto L1bb926;
  #L1bb924.  goto L1bb928;
  #L1bb926.  v0:= 0I;
  #L1bb928.  call `ping`(v2, v0, v3, v5) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.ping:(ZII)V` @kind interface;
  #L1bb92e.  return @kind void;
  #L1bb930.  v2:= new `java.io.IOException`;
  #L1bb934.  v3:= "TYPE_PING streamId != 0" @kind object;
  #L1bb938.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bb93e.  throw v2;
  #L1bb940.  v2:= new `java.io.IOException`;
  #L1bb944.  v4:= new `java.lang.StringBuilder`;
  #L1bb948.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bb94e.  v5:= "TYPE_PING length != 8: " @kind object;
  #L1bb952.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb958.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb95e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bb964.  v3:= temp @kind object;
  #L1bb966.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bb96c.  throw v2;
}
procedure `void` `f`(`okhttp3.internal.http2.Http2Reader` v5 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v6 @kind object, `int` v7 ) @signature `Lokhttp3/internal/http2/Http2Reader;.f:(Lokhttp3/internal/http2/Http2Reader$Handler;I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1bb980.  v0:= v5.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb984.  call temp:= `readInt`(v0) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L1bb98a.  v0:= temp;
  #L1bb98c.  v1:= 2147483648L;
  #L1bb996.  v2:= (`int`) v1 @kind l2i;
  #L1bb998.  v1:= v0 ^& v2 @kind int;
  #L1bb99c.  v2:= 1I;
  #L1bb99e.  if v1 == 0 then goto L1bb9a6;
  #L1bb9a2.  v1:= 1I;
  #L1bb9a4.  goto L1bb9a8;
  #L1bb9a6.  v1:= 0I;
  #L1bb9a8.  v3:= 2147483647I;
  #L1bb9ae.  v0:= v0 ^& v3 @kind int;
  #L1bb9b0.  v3:= v5.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb9b4.  call temp:= `readByte`(v3) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1bb9ba.  v3:= temp;
  #L1bb9bc.  v4:= 255I;
  #L1bb9c0.  call temp:= `and`(v3, v4) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1bb9c6.  v3:= temp;
  #L1bb9c8.  v3:= v3 + v2 @kind int;
  #L1bb9ca.  call `priority`(v6, v7, v0, v3, v1) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.priority:(IIIZ)V` @kind interface;
  #L1bb9d0.  return @kind void;
}
procedure `void` `g`(`okhttp3.internal.http2.Http2Reader` v0 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v1 @kind object, `int` v2 , `int` v3 , `int` v4 ) @signature `Lokhttp3/internal/http2/Http2Reader;.g:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L1bb9e4.  v3:= 5I;
  #L1bb9e6.  if v2 != v3 then goto L1bba06;
  #L1bb9ea.  if v4 == 0 then goto L1bb9f6;
  #L1bb9ee.  call `f`(v0, v1, v4) @signature `Lokhttp3/internal/http2/Http2Reader;.f:(Lokhttp3/internal/http2/Http2Reader$Handler;I)V` @kind direct;
  #L1bb9f4.  return @kind void;
  #L1bb9f6.  v1:= new `java.io.IOException`;
  #L1bb9fa.  v2:= "TYPE_PRIORITY streamId == 0" @kind object;
  #L1bb9fe.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bba04.  throw v1;
  #L1bba06.  v1:= new `java.io.IOException`;
  #L1bba0a.  v3:= new `java.lang.StringBuilder`;
  #L1bba0e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bba14.  v4:= "TYPE_PRIORITY length: " @kind object;
  #L1bba18.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bba1e.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bba24.  v2:= " != 5" @kind object;
  #L1bba28.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bba2e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bba34.  v2:= temp @kind object;
  #L1bba36.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bba3c.  throw v1;
}
procedure `void` `h`(`okhttp3.internal.http2.Http2Reader` v3 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v4 @kind object, `int` v5 , `int` v6 , `int` v7 ) @signature `Lokhttp3/internal/http2/Http2Reader;.h:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1bba50.  if v7 == 0 then goto L1bbaac;
  #L1bba54.  v0:= v6 ^& 8;
  #L1bba58.  if v0 == 0 then goto L1bba76;
  #L1bba5c.  v0:= v3.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bba60.  call temp:= `readByte`(v0) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1bba66.  v0:= temp;
  #L1bba68.  v1:= 255I;
  #L1bba6c.  call temp:= `and`(v0, v1) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1bba72.  v0:= temp;
  #L1bba74.  goto L1bba78;
  #L1bba76.  v0:= 0I;
  #L1bba78.  v1:= v3.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bba7c.  call temp:= `readInt`(v1) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L1bba82.  v1:= temp;
  #L1bba84.  v2:= 2147483647I;
  #L1bba8a.  v1:= v1 ^& v2 @kind int;
  #L1bba8c.  v2:= `@@okhttp3.internal.http2.Http2Reader.Companion` @type ^`okhttp3.internal.http2.Http2Reader$Companion` @kind object;
  #L1bba90.  v5:= v5 + -4;
  #L1bba94.  call temp:= `lengthWithoutPadding`(v2, v5, v6, v0) @signature `Lokhttp3/internal/http2/Http2Reader$Companion;.lengthWithoutPadding:(III)I` @kind virtual;
  #L1bba9a.  v5:= temp;
  #L1bba9c.  call temp:= `c`(v3, v5, v0, v6, v7) @signature `Lokhttp3/internal/http2/Http2Reader;.c:(IIII)Ljava/util/List;` @kind direct;
  #L1bbaa2.  v5:= temp @kind object;
  #L1bbaa4.  call `pushPromise`(v4, v7, v1, v5) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.pushPromise:(IILjava/util/List;)V` @kind interface;
  #L1bbaaa.  return @kind void;
  #L1bbaac.  v4:= new `java.io.IOException`;
  #L1bbab0.  v5:= "PROTOCOL_ERROR: TYPE_PUSH_PROMISE streamId == 0" @kind object;
  #L1bbab4.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bbaba.  throw v4;
}
procedure `void` `i`(`okhttp3.internal.http2.Http2Reader` v0 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v1 @kind object, `int` v2 , `int` v3 , `int` v4 ) @signature `Lokhttp3/internal/http2/Http2Reader;.i:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L1bbacc.  v3:= 4I;
  #L1bbace.  if v2 != v3 then goto L1bbb38;
  #L1bbad2.  if v4 == 0 then goto L1bbb28;
  #L1bbad6.  v2:= v0.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bbada.  call temp:= `readInt`(v2) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L1bbae0.  v2:= temp;
  #L1bbae2.  v3:= `@@okhttp3.internal.http2.ErrorCode.Companion` @type ^`okhttp3.internal.http2.ErrorCode$Companion` @kind object;
  #L1bbae6.  call temp:= `fromHttp2`(v3, v2) @signature `Lokhttp3/internal/http2/ErrorCode$Companion;.fromHttp2:(I)Lokhttp3/internal/http2/ErrorCode;` @kind virtual;
  #L1bbaec.  v3:= temp @kind object;
  #L1bbaee.  if v3 == 0 then goto L1bbafa;
  #L1bbaf2.  call `rstStream`(v1, v4, v3) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @kind interface;
  #L1bbaf8.  return @kind void;
  #L1bbafa.  v1:= new `java.io.IOException`;
  #L1bbafe.  v3:= new `java.lang.StringBuilder`;
  #L1bbb02.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bbb08.  v4:= "TYPE_RST_STREAM unexpected error code: " @kind object;
  #L1bbb0c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bbb12.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bbb18.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bbb1e.  v2:= temp @kind object;
  #L1bbb20.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bbb26.  throw v1;
  #L1bbb28.  v1:= new `java.io.IOException`;
  #L1bbb2c.  v2:= "TYPE_RST_STREAM streamId == 0" @kind object;
  #L1bbb30.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bbb36.  throw v1;
  #L1bbb38.  v1:= new `java.io.IOException`;
  #L1bbb3c.  v3:= new `java.lang.StringBuilder`;
  #L1bbb40.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bbb46.  v4:= "TYPE_RST_STREAM length: " @kind object;
  #L1bbb4a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bbb50.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bbb56.  v2:= " != 4" @kind object;
  #L1bbb5a.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bbb60.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bbb66.  v2:= temp @kind object;
  #L1bbb68.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bbb6e.  throw v1;
}
procedure `void` `j`(`okhttp3.internal.http2.Http2Reader` v7 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v8 @kind object, `int` v9 , `int` v10 , `int` v11 ) @signature `Lokhttp3/internal/http2/Http2Reader;.j:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1bbb80.  if v11 != 0 then goto L1bbcf0;
  #L1bbb84.  v11:= 1I;
  #L1bbb86.  v10:= v10 ^& v11 @kind int;
  #L1bbb88.  if v10 == 0 then goto L1bbba8;
  #L1bbb8c.  if v9 != 0 then goto L1bbb98;
  #L1bbb90.  call `ackSettings`(v8) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.ackSettings:()V` @kind interface;
  #L1bbb96.  return @kind void;
  #L1bbb98.  v8:= new `java.io.IOException`;
  #L1bbb9c.  v9:= "FRAME_SIZE_ERROR ack frame should be empty!" @kind object;
  #L1bbba0.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bbba6.  throw v8;
  #L1bbba8.  v10:= v9 %% 6;
  #L1bbbac.  if v10 != 0 then goto L1bbcc2;
  #L1bbbb0.  v10:= new `okhttp3.internal.http2.Settings`;
  #L1bbbb4.  call `<init>`(v10) @signature `Lokhttp3/internal/http2/Settings;.<init>:()V` @kind direct;
  #L1bbbba.  v0:= 0I;
  #L1bbbbc.  call temp:= `until`(v0, v9) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L1bbbc2.  v9:= temp @kind object;
  #L1bbbc4.  v1:= 6I;
  #L1bbbc6.  call temp:= `step`(v9, v1) @signature `Lkotlin/ranges/RangesKt;.step:(Lkotlin/ranges/IntProgression;I)Lkotlin/ranges/IntProgression;` @kind static;
  #L1bbbcc.  v9:= temp @kind object;
  #L1bbbce.  call temp:= `getFirst`(v9) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L1bbbd4.  v1:= temp;
  #L1bbbd6.  call temp:= `getLast`(v9) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L1bbbdc.  v2:= temp;
  #L1bbbde.  call temp:= `getStep`(v9) @signature `Lkotlin/ranges/IntProgression;.getStep:()I` @kind virtual;
  #L1bbbe4.  v9:= temp;
  #L1bbbe6.  if v9 < 0 then goto L1bbbf0;
  #L1bbbea.  if v1 > v2 then goto L1bbcba;
  #L1bbbee.  goto L1bbbf4;
  #L1bbbf0.  if v1 < v2 then goto L1bbcba;
  #L1bbbf4.  v3:= v7.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bbbf8.  call temp:= `readShort`(v3) @signature `Lokio/BufferedSource;.readShort:()S` @kind interface;
  #L1bbbfe.  v3:= temp;
  #L1bbc00.  v4:= 65535I;
  #L1bbc06.  call temp:= `and`(v3, v4) @signature `Lokhttp3/internal/Util;.and:(SI)I` @kind static;
  #L1bbc0c.  v3:= temp;
  #L1bbc0e.  v4:= v7.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bbc12.  call temp:= `readInt`(v4) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L1bbc18.  v4:= temp;
  #L1bbc1a.  v5:= 2I;
  #L1bbc1c.  v6:= 4I;
  #L1bbc1e.  if v3 == v5 then goto L1bbc92;
  #L1bbc22.  v5:= 3I;
  #L1bbc24.  if v3 == v5 then goto L1bbc8e;
  #L1bbc28.  if v3 == v6 then goto L1bbc76;
  #L1bbc2c.  v5:= 5I;
  #L1bbc2e.  if v3 == v5 then goto L1bbc34;
  #L1bbc32.  goto L1bbcac;
  #L1bbc34.  v5:= 16384I;
  #L1bbc38.  if v4 < v5 then goto L1bbc48;
  #L1bbc3c.  v5:= 16777215I;
  #L1bbc42.  if v4 > v5 then goto L1bbc48;
  #L1bbc46.  goto L1bbcac;
  #L1bbc48.  v8:= new `java.io.IOException`;
  #L1bbc4c.  v9:= new `java.lang.StringBuilder`;
  #L1bbc50.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bbc56.  v10:= "PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: " @kind object;
  #L1bbc5a.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bbc60.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bbc66.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bbc6c.  v9:= temp @kind object;
  #L1bbc6e.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bbc74.  throw v8;
  #L1bbc76.  v3:= 7I;
  #L1bbc78.  if v4 < 0 then goto L1bbc7e;
  #L1bbc7c.  goto L1bbcac;
  #L1bbc7e.  v8:= new `java.io.IOException`;
  #L1bbc82.  v9:= "PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1" @kind object;
  #L1bbc86.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bbc8c.  throw v8;
  #L1bbc8e.  v3:= 4I;
  #L1bbc90.  goto L1bbcac;
  #L1bbc92.  if v4 == 0 then goto L1bbcac;
  #L1bbc96.  if v4 != v11 then goto L1bbc9c;
  #L1bbc9a.  goto L1bbcac;
  #L1bbc9c.  v8:= new `java.io.IOException`;
  #L1bbca0.  v9:= "PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1" @kind object;
  #L1bbca4.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bbcaa.  throw v8;
  #L1bbcac.  call temp:= `set`(v10, v3, v4) @signature `Lokhttp3/internal/http2/Settings;.set:(II)Lokhttp3/internal/http2/Settings;` @kind virtual;
  #L1bbcb2.  if v1 == v2 then goto L1bbcba;
  #L1bbcb6.  v1:= v1 + v9 @kind int;
  #L1bbcb8.  goto L1bbbf4;
  #L1bbcba.  call `settings`(v8, v0, v10) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.settings:(ZLokhttp3/internal/http2/Settings;)V` @kind interface;
  #L1bbcc0.  return @kind void;
  #L1bbcc2.  v8:= new `java.io.IOException`;
  #L1bbcc6.  v10:= new `java.lang.StringBuilder`;
  #L1bbcca.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bbcd0.  v11:= "TYPE_SETTINGS length % 6 != 0: " @kind object;
  #L1bbcd4.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bbcda.  call temp:= `append`(v10, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bbce0.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bbce6.  v9:= temp @kind object;
  #L1bbce8.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bbcee.  throw v8;
  #L1bbcf0.  v8:= new `java.io.IOException`;
  #L1bbcf4.  v9:= "TYPE_SETTINGS streamId != 0" @kind object;
  #L1bbcf8.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bbcfe.  throw v8;
}
procedure `void` `k`(`okhttp3.internal.http2.Http2Reader` v3 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v4 @kind object, `int` v5 , `int` v6 , `int` v7 ) @signature `Lokhttp3/internal/http2/Http2Reader;.k:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1bbd10.  v6:= 4I;
  #L1bbd12.  if v5 != v6 then goto L1bbd54;
  #L1bbd16.  v5:= v3.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bbd1a.  call temp:= `readInt`(v5) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L1bbd20.  v5:= temp;
  #L1bbd22.  v0:= 2147483647L;
  #L1bbd28.  call temp:= `and`(v5, v0) @signature `Lokhttp3/internal/Util;.and:(IJ)J` @kind static;
  #L1bbd2e.  v5:= temp @kind wide;
  #L1bbd30.  v0:= 0L;
  #L1bbd34.  v2:= lcmp(v5, v0);
  #L1bbd38.  if v2 == 0 then goto L1bbd44;
  #L1bbd3c.  call `windowUpdate`(v4, v7, v5) @signature `Lokhttp3/internal/http2/Http2Reader$Handler;.windowUpdate:(IJ)V` @kind interface;
  #L1bbd42.  return @kind void;
  #L1bbd44.  v4:= new `java.io.IOException`;
  #L1bbd48.  v5:= "windowSizeIncrement was 0" @kind object;
  #L1bbd4c.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bbd52.  throw v4;
  #L1bbd54.  v4:= new `java.io.IOException`;
  #L1bbd58.  v6:= new `java.lang.StringBuilder`;
  #L1bbd5c.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bbd62.  v7:= "TYPE_WINDOW_UPDATE length !=4: " @kind object;
  #L1bbd66.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bbd6c.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bbd72.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bbd78.  v5:= temp @kind object;
  #L1bbd7a.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bbd80.  throw v4;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Reader` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1bb5f0.  v0:= v1.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb5f4.  call `close`(v0) @signature `Lokio/Source;.close:()V` @kind interface;
  #L1bb5fa.  return @kind void;
}
procedure `boolean` `nextFrame`(`okhttp3.internal.http2.Http2Reader` v11 @kind this, `boolean` v12 , `okhttp3.internal.http2.Http2Reader$Handler` v13 @kind object) @signature `Lokhttp3/internal/http2/Http2Reader;.nextFrame:(ZLokhttp3/internal/http2/Http2Reader$Handler;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1bb318.  v0:= "handler" @kind object;
  #L1bb31c.  call `checkNotNullParameter`(v13, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1bb322.  v0:= v11.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb326.  v1:= 9L;
  #L1bb32a.  call `require`(v0, v1) @signature `Lokio/BufferedSource;.require:(J)V` @kind interface;
  #L1bb330.  v0:= v11.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb334.  call temp:= `readMedium`(v0) @signature `Lokhttp3/internal/Util;.readMedium:(Lokio/BufferedSource;)I` @kind static;
  #L1bb33a.  v0:= temp;
  #L1bb33c.  v1:= 16384I;
  #L1bb340.  if v0 > v1 then goto L1bb45e;
  #L1bb344.  v1:= v11.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb348.  call temp:= `readByte`(v1) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1bb34e.  v1:= temp;
  #L1bb350.  v2:= 255I;
  #L1bb354.  call temp:= `and`(v1, v2) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1bb35a.  v7:= temp;
  #L1bb35c.  v1:= v11.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb360.  call temp:= `readByte`(v1) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1bb366.  v1:= temp;
  #L1bb368.  call temp:= `and`(v1, v2) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1bb36e.  v8:= temp;
  #L1bb370.  v1:= v11.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb374.  call temp:= `readInt`(v1) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L1bb37a.  v1:= temp;
  #L1bb37c.  v2:= 2147483647I;
  #L1bb382.  v9:= v1 ^& v2 @kind int;
  #L1bb386.  v1:= `@@okhttp3.internal.http2.Http2Reader.e` @type ^`java.util.logging.Logger` @kind object;
  #L1bb38a.  v2:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L1bb38e.  call temp:= `isLoggable`(v1, v2) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L1bb394.  v1:= temp;
  #L1bb396.  if v1 == 0 then goto L1bb3ba;
  #L1bb39a.  v10:= `@@okhttp3.internal.http2.Http2Reader.e` @type ^`java.util.logging.Logger` @kind object;
  #L1bb39e.  v1:= `@@okhttp3.internal.http2.Http2.INSTANCE` @type ^`okhttp3.internal.http2.Http2` @kind object;
  #L1bb3a2.  v2:= 1I;
  #L1bb3a4.  v3:= v9;
  #L1bb3a6.  v4:= v0;
  #L1bb3a8.  v5:= v7;
  #L1bb3aa.  v6:= v8;
  #L1bb3ac.  call temp:= `frameLog`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/http2/Http2;.frameLog:(ZIIII)Ljava/lang/String;` @kind virtual;
  #L1bb3b2.  v1:= temp @kind object;
  #L1bb3b4.  call `fine`(v10, v1) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L1bb3ba.  if v12 == 0 then goto L1bb400;
  #L1bb3be.  v12:= 4I;
  #L1bb3c0.  if v7 != v12 then goto L1bb3c6;
  #L1bb3c4.  goto L1bb400;
  #L1bb3c6.  v12:= new `java.io.IOException`;
  #L1bb3ca.  v13:= new `java.lang.StringBuilder`;
  #L1bb3ce.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bb3d4.  v0:= "Expected a SETTINGS frame but was " @kind object;
  #L1bb3d8.  call temp:= `append`(v13, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb3de.  v0:= `@@okhttp3.internal.http2.Http2.INSTANCE` @type ^`okhttp3.internal.http2.Http2` @kind object;
  #L1bb3e2.  call temp:= `formattedType$okhttp`(v0, v7) @signature `Lokhttp3/internal/http2/Http2;.formattedType$okhttp:(I)Ljava/lang/String;` @kind virtual;
  #L1bb3e8.  v0:= temp @kind object;
  #L1bb3ea.  call temp:= `append`(v13, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb3f0.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bb3f6.  v13:= temp @kind object;
  #L1bb3f8.  call `<init>`(v12, v13) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bb3fe.  throw v12;
  #L1bb400.  goto L1bb490;
  #L1bb406.  v12:= v11.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb40a.  v0:= (`long`) v0 @kind i2l;
  #L1bb40c.  call `skip`(v12, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L1bb412.  goto L1bb45a;
  #L1bb414.  call `k`(v11, v13, v0, v8, v9) @signature `Lokhttp3/internal/http2/Http2Reader;.k:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @kind direct;
  #L1bb41a.  goto L1bb45a;
  #L1bb41c.  call `b`(v11, v13, v0, v8, v9) @signature `Lokhttp3/internal/http2/Http2Reader;.b:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @kind direct;
  #L1bb422.  goto L1bb45a;
  #L1bb424.  call `e`(v11, v13, v0, v8, v9) @signature `Lokhttp3/internal/http2/Http2Reader;.e:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @kind direct;
  #L1bb42a.  goto L1bb45a;
  #L1bb42c.  call `h`(v11, v13, v0, v8, v9) @signature `Lokhttp3/internal/http2/Http2Reader;.h:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @kind direct;
  #L1bb432.  goto L1bb45a;
  #L1bb434.  call `j`(v11, v13, v0, v8, v9) @signature `Lokhttp3/internal/http2/Http2Reader;.j:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @kind direct;
  #L1bb43a.  goto L1bb45a;
  #L1bb43c.  call `i`(v11, v13, v0, v8, v9) @signature `Lokhttp3/internal/http2/Http2Reader;.i:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @kind direct;
  #L1bb442.  goto L1bb45a;
  #L1bb444.  call `g`(v11, v13, v0, v8, v9) @signature `Lokhttp3/internal/http2/Http2Reader;.g:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @kind direct;
  #L1bb44a.  goto L1bb45a;
  #L1bb44c.  call `d`(v11, v13, v0, v8, v9) @signature `Lokhttp3/internal/http2/Http2Reader;.d:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @kind direct;
  #L1bb452.  goto L1bb45a;
  #L1bb454.  call `a`(v11, v13, v0, v8, v9) @signature `Lokhttp3/internal/http2/Http2Reader;.a:(Lokhttp3/internal/http2/Http2Reader$Handler;III)V` @kind direct;
  #L1bb45a.  v12:= 1I;
  #L1bb45c.  return v12;
  #L1bb45e.  v12:= new `java.io.IOException`;
  #L1bb462.  v13:= new `java.lang.StringBuilder`;
  #L1bb466.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bb46c.  v1:= "FRAME_SIZE_ERROR: " @kind object;
  #L1bb470.  call temp:= `append`(v13, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb476.  call temp:= `append`(v13, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb47c.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bb482.  v13:= temp @kind object;
  #L1bb484.  call `<init>`(v12, v13) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bb48a.  throw v12;
  #L1bb48c.  v12:= 0I;
  #L1bb48e.  return v12;
  #L1bb490.  switch v7
                  | 0 => goto L1bb454
                  | 1 => goto L1bb44c
                  | 2 => goto L1bb444
                  | 3 => goto L1bb43c
                  | 4 => goto L1bb434
                  | 5 => goto L1bb42c
                  | 6 => goto L1bb424
                  | 7 => goto L1bb41c
                  | 8 => goto L1bb414
                  | else => goto L1bb406;
  catch `java.io.EOFException` @[L1bb322..L1bb330] goto L1bb48c;
}
procedure `void` `readConnectionPreface`(`okhttp3.internal.http2.Http2Reader` v4 @kind this, `okhttp3.internal.http2.Http2Reader$Handler` v5 @kind object) @signature `Lokhttp3/internal/http2/Http2Reader;.readConnectionPreface:(Lokhttp3/internal/http2/Http2Reader$Handler;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1bb60c.  v0:= "handler" @kind object;
  #L1bb610.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1bb616.  v0:= v4.`okhttp3.internal.http2.Http2Reader.d` @type ^`boolean` @kind boolean;
  #L1bb61a.  v1:= 1I;
  #L1bb61c.  if v0 == 0 then goto L1bb63e;
  #L1bb620.  call temp:= `nextFrame`(v4, v1, v5) @signature `Lokhttp3/internal/http2/Http2Reader;.nextFrame:(ZLokhttp3/internal/http2/Http2Reader$Handler;)Z` @kind virtual;
  #L1bb626.  v5:= temp;
  #L1bb628.  if v5 == 0 then goto L1bb62e;
  #L1bb62c.  goto L1bb6c0;
  #L1bb62e.  v5:= new `java.io.IOException`;
  #L1bb632.  v0:= "Required SETTINGS preface not received" @kind object;
  #L1bb636.  call `<init>`(v5, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bb63c.  throw v5;
  #L1bb63e.  v5:= v4.`okhttp3.internal.http2.Http2Reader.c` @type ^`okio.BufferedSource` @kind object;
  #L1bb642.  v0:= `@@okhttp3.internal.http2.Http2.CONNECTION_PREFACE` @type ^`okio.ByteString` @kind object;
  #L1bb646.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L1bb64c.  v0:= temp;
  #L1bb64e.  v2:= (`long`) v0 @kind i2l;
  #L1bb650.  call temp:= `readByteString`(v5, v2) @signature `Lokio/BufferedSource;.readByteString:(J)Lokio/ByteString;` @kind interface;
  #L1bb656.  v5:= temp @kind object;
  #L1bb658.  v0:= `@@okhttp3.internal.http2.Http2Reader.e` @type ^`java.util.logging.Logger` @kind object;
  #L1bb65c.  v2:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L1bb660.  call temp:= `isLoggable`(v0, v2) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L1bb666.  v0:= temp;
  #L1bb668.  if v0 == 0 then goto L1bb6ae;
  #L1bb66c.  v0:= `@@okhttp3.internal.http2.Http2Reader.e` @type ^`java.util.logging.Logger` @kind object;
  #L1bb670.  v2:= new `java.lang.StringBuilder`;
  #L1bb674.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bb67a.  v3:= "<< CONNECTION " @kind object;
  #L1bb67e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb684.  call temp:= `hex`(v5) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L1bb68a.  v3:= temp @kind object;
  #L1bb68c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb692.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bb698.  v2:= temp @kind object;
  #L1bb69a.  v3:= 0I;
  #L1bb69c.  v3:= new `java.lang.Object`[v3];
  #L1bb6a0.  call temp:= `format`(v2, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1bb6a6.  v2:= temp @kind object;
  #L1bb6a8.  call `fine`(v0, v2) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L1bb6ae.  v0:= `@@okhttp3.internal.http2.Http2.CONNECTION_PREFACE` @type ^`okio.ByteString` @kind object;
  #L1bb6b2.  call temp:= `areEqual`(v0, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1bb6b8.  v0:= temp;
  #L1bb6ba.  v0:= v0 ^~ v1 @kind int;
  #L1bb6bc.  if v0 != 0 then goto L1bb6c2;
  #L1bb6c0.  return @kind void;
  #L1bb6c2.  v0:= new `java.io.IOException`;
  #L1bb6c6.  v1:= new `java.lang.StringBuilder`;
  #L1bb6ca.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1bb6d0.  v2:= "Expected a connection header but was " @kind object;
  #L1bb6d4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb6da.  call temp:= `utf8`(v5) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L1bb6e0.  v5:= temp @kind object;
  #L1bb6e2.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1bb6e8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1bb6ee.  v5:= temp @kind object;
  #L1bb6f0.  call `<init>`(v0, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1bb6f6.  throw v0;
}
