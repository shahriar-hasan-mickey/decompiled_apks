record `okhttp3.internal.concurrent.TaskRunner$runnable$1` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Runnable` @kind interface {
  `okhttp3.internal.concurrent.TaskRunner` `okhttp3.internal.concurrent.TaskRunner$runnable$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.concurrent.TaskRunner$runnable$1` v0 @kind this, `okhttp3.internal.concurrent.TaskRunner` v1 @kind object) @signature `Lokhttp3/internal/concurrent/TaskRunner$runnable$1;.<init>:(Lokhttp3/internal/concurrent/TaskRunner;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1ad4a4.  v0.`okhttp3.internal.concurrent.TaskRunner$runnable$1.a` @type ^`okhttp3.internal.concurrent.TaskRunner` := v1 @kind object;
  #L1ad4a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ad4ae.  return @kind void;
}
procedure `void` `run`(`okhttp3.internal.concurrent.TaskRunner$runnable$1` v8 @kind this) @signature `Lokhttp3/internal/concurrent/TaskRunner$runnable$1;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1ad4c0.  v0:= v8.`okhttp3.internal.concurrent.TaskRunner$runnable$1.a` @type ^`okhttp3.internal.concurrent.TaskRunner` @kind object;
  #L1ad4c4.  @monitorenter v0
  #L1ad4c6.  v1:= v8.`okhttp3.internal.concurrent.TaskRunner$runnable$1.a` @type ^`okhttp3.internal.concurrent.TaskRunner` @kind object;
  #L1ad4ca.  call temp:= `awaitTaskToRun`(v1) @signature `Lokhttp3/internal/concurrent/TaskRunner;.awaitTaskToRun:()Lokhttp3/internal/concurrent/Task;` @kind virtual;
  #L1ad4d0.  v1:= temp @kind object;
  #L1ad4d2.  @monitorexit v0
  #L1ad4d4.  if v1 == 0 then goto L1ad5ee;
  #L1ad4d8.  call temp:= `getQueue$okhttp`(v1) @signature `Lokhttp3/internal/concurrent/Task;.getQueue$okhttp:()Lokhttp3/internal/concurrent/TaskQueue;` @kind virtual;
  #L1ad4de.  v0:= temp @kind object;
  #L1ad4e0.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1ad4e6.  v2:= -1L;
  #L1ad4ea.  v4:= `@@okhttp3.internal.concurrent.TaskRunner.Companion` @type ^`okhttp3.internal.concurrent.TaskRunner$Companion` @kind object;
  #L1ad4ee.  call temp:= `getLogger`(v4) @signature `Lokhttp3/internal/concurrent/TaskRunner$Companion;.getLogger:()Ljava/util/logging/Logger;` @kind virtual;
  #L1ad4f4.  v4:= temp @kind object;
  #L1ad4f6.  v5:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L1ad4fa.  call temp:= `isLoggable`(v4, v5) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L1ad500.  v4:= temp;
  #L1ad502.  if v4 == 0 then goto L1ad528;
  #L1ad506.  call temp:= `getTaskRunner$okhttp`(v0) @signature `Lokhttp3/internal/concurrent/TaskQueue;.getTaskRunner$okhttp:()Lokhttp3/internal/concurrent/TaskRunner;` @kind virtual;
  #L1ad50c.  v2:= temp @kind object;
  #L1ad50e.  call temp:= `getBackend`(v2) @signature `Lokhttp3/internal/concurrent/TaskRunner;.getBackend:()Lokhttp3/internal/concurrent/TaskRunner$Backend;` @kind virtual;
  #L1ad514.  v2:= temp @kind object;
  #L1ad516.  call temp:= `nanoTime`(v2) @signature `Lokhttp3/internal/concurrent/TaskRunner$Backend;.nanoTime:()J` @kind interface;
  #L1ad51c.  v2:= temp @kind wide;
  #L1ad51e.  v5:= "starting" @kind object;
  #L1ad522.  call `access$log`(v1, v0, v5) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.access$log:(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;)V` @kind static;
  #L1ad528.  v5:= v8.`okhttp3.internal.concurrent.TaskRunner$runnable$1.a` @type ^`okhttp3.internal.concurrent.TaskRunner` @kind object;
  #L1ad52c.  call `access$runTask`(v5, v1) @signature `Lokhttp3/internal/concurrent/TaskRunner;.access$runTask:(Lokhttp3/internal/concurrent/TaskRunner;Lokhttp3/internal/concurrent/Task;)V` @kind static;
  #L1ad532.  v5:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1ad536.  if v4 == 0 then goto L1ad4c0;
  #L1ad53a.  call temp:= `getTaskRunner$okhttp`(v0) @signature `Lokhttp3/internal/concurrent/TaskQueue;.getTaskRunner$okhttp:()Lokhttp3/internal/concurrent/TaskRunner;` @kind virtual;
  #L1ad540.  v4:= temp @kind object;
  #L1ad542.  call temp:= `getBackend`(v4) @signature `Lokhttp3/internal/concurrent/TaskRunner;.getBackend:()Lokhttp3/internal/concurrent/TaskRunner$Backend;` @kind virtual;
  #L1ad548.  v4:= temp @kind object;
  #L1ad54a.  call temp:= `nanoTime`(v4) @signature `Lokhttp3/internal/concurrent/TaskRunner$Backend;.nanoTime:()J` @kind interface;
  #L1ad550.  v4:= temp @kind wide;
  #L1ad552.  v4:= v4 - v2 @kind long;
  #L1ad554.  v2:= new `java.lang.StringBuilder`;
  #L1ad558.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ad55e.  v3:= "finished run in " @kind object;
  #L1ad562.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ad568.  call temp:= `formatDuration`(v4) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.formatDuration:(J)Ljava/lang/String;` @kind static;
  #L1ad56e.  v3:= temp @kind object;
  #L1ad570.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ad576.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ad57c.  v2:= temp @kind object;
  #L1ad57e.  call `access$log`(v1, v0, v2) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.access$log:(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;)V` @kind static;
  #L1ad584.  goto L1ad4c0;
  #L1ad586.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ad588.  v6:= v8.`okhttp3.internal.concurrent.TaskRunner$runnable$1.a` @type ^`okhttp3.internal.concurrent.TaskRunner` @kind object;
  #L1ad58c.  call temp:= `getBackend`(v6) @signature `Lokhttp3/internal/concurrent/TaskRunner;.getBackend:()Lokhttp3/internal/concurrent/TaskRunner$Backend;` @kind virtual;
  #L1ad592.  v6:= temp @kind object;
  #L1ad594.  call `execute`(v6, v8) @signature `Lokhttp3/internal/concurrent/TaskRunner$Backend;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L1ad59a.  throw v5;
  #L1ad59c.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ad59e.  if v4 == 0 then goto L1ad5ec;
  #L1ad5a2.  call temp:= `getTaskRunner$okhttp`(v0) @signature `Lokhttp3/internal/concurrent/TaskQueue;.getTaskRunner$okhttp:()Lokhttp3/internal/concurrent/TaskRunner;` @kind virtual;
  #L1ad5a8.  v4:= temp @kind object;
  #L1ad5aa.  call temp:= `getBackend`(v4) @signature `Lokhttp3/internal/concurrent/TaskRunner;.getBackend:()Lokhttp3/internal/concurrent/TaskRunner$Backend;` @kind virtual;
  #L1ad5b0.  v4:= temp @kind object;
  #L1ad5b2.  call temp:= `nanoTime`(v4) @signature `Lokhttp3/internal/concurrent/TaskRunner$Backend;.nanoTime:()J` @kind interface;
  #L1ad5b8.  v6:= temp @kind wide;
  #L1ad5ba.  v6:= v6 - v2 @kind long;
  #L1ad5bc.  v2:= new `java.lang.StringBuilder`;
  #L1ad5c0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ad5c6.  v3:= "failed a run in " @kind object;
  #L1ad5ca.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ad5d0.  call temp:= `formatDuration`(v6) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.formatDuration:(J)Ljava/lang/String;` @kind static;
  #L1ad5d6.  v3:= temp @kind object;
  #L1ad5d8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ad5de.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ad5e4.  v2:= temp @kind object;
  #L1ad5e6.  call `access$log`(v1, v0, v2) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.access$log:(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;)V` @kind static;
  #L1ad5ec.  throw v5;
  #L1ad5ee.  return @kind void;
  #L1ad5f0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ad5f2.  @monitorexit v0
  #L1ad5f4.  throw v1;
  catch `java.lang.Throwable` @[L1ad4c6..L1ad4d2] goto L1ad5f0;
  catch `java.lang.Throwable` @[L1ad528..L1ad532] goto L1ad586;
  catch `java.lang.Throwable` @[L1ad532..L1ad536] goto L1ad59c;
  catch `java.lang.Throwable` @[L1ad588..L1ad59c] goto L1ad59c;
}
