record `okhttp3.internal.concurrent.TaskLoggerKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `a`(`okhttp3.internal.concurrent.Task` v4 @kind object, `okhttp3.internal.concurrent.TaskQueue` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.a:(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ac904.  v0:= `@@okhttp3.internal.concurrent.TaskRunner.Companion` @type ^`okhttp3.internal.concurrent.TaskRunner$Companion` @kind object;
  #L1ac908.  call temp:= `getLogger`(v0) @signature `Lokhttp3/internal/concurrent/TaskRunner$Companion;.getLogger:()Ljava/util/logging/Logger;` @kind virtual;
  #L1ac90e.  v0:= temp @kind object;
  #L1ac910.  v1:= new `java.lang.StringBuilder`;
  #L1ac914.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ac91a.  call temp:= `getName$okhttp`(v5) @signature `Lokhttp3/internal/concurrent/TaskQueue;.getName$okhttp:()Ljava/lang/String;` @kind virtual;
  #L1ac920.  v5:= temp @kind object;
  #L1ac922.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac928.  v5:= 32I;
  #L1ac92c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac932.  v5:= `@@kotlin.jvm.internal.StringCompanionObject.INSTANCE` @type ^`kotlin.jvm.internal.StringCompanionObject` @kind object;
  #L1ac936.  v5:= 1I;
  #L1ac938.  v2:= new `java.lang.Object`[v5];
  #L1ac93c.  v3:= 0I;
  #L1ac93e.  v2[v3]:= v6 @kind object;
  #L1ac942.  call temp:= `copyOf`(v2, v5) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L1ac948.  v5:= temp @kind object;
  #L1ac94a.  v6:= "%-22s" @kind object;
  #L1ac94e.  call temp:= `format`(v6, v5) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1ac954.  v5:= temp @kind object;
  #L1ac956.  v6:= "java.lang.String.format(format, *args)" @kind object;
  #L1ac95a.  call `checkNotNullExpressionValue`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1ac960.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac966.  v5:= ": " @kind object;
  #L1ac96a.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac970.  call temp:= `getName`(v4) @signature `Lokhttp3/internal/concurrent/Task;.getName:()Ljava/lang/String;` @kind virtual;
  #L1ac976.  v4:= temp @kind object;
  #L1ac978.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac97e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac984.  v4:= temp @kind object;
  #L1ac986.  call `fine`(v0, v4) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L1ac98c.  return @kind void;
}
procedure `void` `access$log`(`okhttp3.internal.concurrent.Task` v0 @kind object, `okhttp3.internal.concurrent.TaskQueue` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.access$log:(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1ac8ec.  call `a`(v0, v1, v2) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.a:(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;)V` @kind static;
  #L1ac8f2.  return @kind void;
}
procedure `java.lang.String` `formatDuration`(`long` v12 ) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.formatDuration:(J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1ac744.  v0:= -999500000I;
  #L1ac74a.  v0:= (`long`) v0 @kind i2l;
  #L1ac74c.  v2:= " s " @kind object;
  #L1ac750.  v3:= 1000000000I;
  #L1ac756.  v4:= 500000000I;
  #L1ac75c.  v5:= lcmp(v12, v0);
  #L1ac760.  if v5 > 0 then goto L1ac78e;
  #L1ac764.  v0:= new `java.lang.StringBuilder`;
  #L1ac768.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ac76e.  v4:= (`long`) v4 @kind i2l;
  #L1ac770.  v12:= v12 - v4 @kind long;
  #L1ac772.  v3:= (`long`) v3 @kind i2l;
  #L1ac774.  v12:= v12 / v3 @kind long;
  #L1ac776.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac77c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac782.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac788.  v12:= temp @kind object;
  #L1ac78a.  goto L1ac8ac;
  #L1ac78e.  v0:= -999500I;
  #L1ac794.  v0:= (`long`) v0 @kind i2l;
  #L1ac796.  v5:= " ms" @kind object;
  #L1ac79a.  v6:= 1000000I;
  #L1ac7a0.  v7:= 500000I;
  #L1ac7a6.  v8:= lcmp(v12, v0);
  #L1ac7aa.  if v8 > 0 then goto L1ac7d6;
  #L1ac7ae.  v0:= new `java.lang.StringBuilder`;
  #L1ac7b2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ac7b8.  v1:= (`long`) v7 @kind i2l;
  #L1ac7ba.  v12:= v12 - v1 @kind long;
  #L1ac7bc.  v1:= (`long`) v6 @kind i2l;
  #L1ac7be.  v12:= v12 / v1 @kind long;
  #L1ac7c0.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac7c6.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac7cc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac7d2.  v12:= temp @kind object;
  #L1ac7d4.  goto L1ac8ac;
  #L1ac7d6.  v0:= 0L;
  #L1ac7da.  v8:= " Âµs" @kind object;
  #L1ac7de.  v9:= 1000I;
  #L1ac7e2.  v10:= 500I;
  #L1ac7e6.  v11:= lcmp(v12, v0);
  #L1ac7ea.  if v11 > 0 then goto L1ac816;
  #L1ac7ee.  v0:= new `java.lang.StringBuilder`;
  #L1ac7f2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ac7f8.  v1:= (`long`) v10 @kind i2l;
  #L1ac7fa.  v12:= v12 - v1 @kind long;
  #L1ac7fc.  v1:= (`long`) v9 @kind i2l;
  #L1ac7fe.  v12:= v12 / v1 @kind long;
  #L1ac800.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac806.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac80c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac812.  v12:= temp @kind object;
  #L1ac814.  goto L1ac8ac;
  #L1ac816.  v0:= 999500I;
  #L1ac81c.  v0:= (`long`) v0 @kind i2l;
  #L1ac81e.  v11:= lcmp(v12, v0);
  #L1ac822.  if v11 >= 0 then goto L1ac84e;
  #L1ac826.  v0:= new `java.lang.StringBuilder`;
  #L1ac82a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ac830.  v1:= (`long`) v10 @kind i2l;
  #L1ac832.  v12:= v12 + v1 @kind long;
  #L1ac834.  v1:= (`long`) v9 @kind i2l;
  #L1ac836.  v12:= v12 / v1 @kind long;
  #L1ac838.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac83e.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac844.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac84a.  v12:= temp @kind object;
  #L1ac84c.  goto L1ac8ac;
  #L1ac84e.  v0:= 999500000I;
  #L1ac854.  v0:= (`long`) v0 @kind i2l;
  #L1ac856.  v8:= lcmp(v12, v0);
  #L1ac85a.  if v8 >= 0 then goto L1ac886;
  #L1ac85e.  v0:= new `java.lang.StringBuilder`;
  #L1ac862.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ac868.  v1:= (`long`) v7 @kind i2l;
  #L1ac86a.  v12:= v12 + v1 @kind long;
  #L1ac86c.  v1:= (`long`) v6 @kind i2l;
  #L1ac86e.  v12:= v12 / v1 @kind long;
  #L1ac870.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac876.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac87c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac882.  v12:= temp @kind object;
  #L1ac884.  goto L1ac8ac;
  #L1ac886.  v0:= new `java.lang.StringBuilder`;
  #L1ac88a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ac890.  v4:= (`long`) v4 @kind i2l;
  #L1ac892.  v12:= v12 + v4 @kind long;
  #L1ac894.  v3:= (`long`) v3 @kind i2l;
  #L1ac896.  v12:= v12 / v3 @kind long;
  #L1ac898.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac89e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac8a4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac8aa.  v12:= temp @kind object;
  #L1ac8ac.  v13:= `@@kotlin.jvm.internal.StringCompanionObject.INSTANCE` @type ^`kotlin.jvm.internal.StringCompanionObject` @kind object;
  #L1ac8b0.  v13:= 1I;
  #L1ac8b2.  v0:= new `java.lang.Object`[v13];
  #L1ac8b6.  v1:= 0I;
  #L1ac8b8.  v0[v1]:= v12 @kind object;
  #L1ac8bc.  call temp:= `copyOf`(v0, v13) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L1ac8c2.  v12:= temp @kind object;
  #L1ac8c4.  v13:= "%6s" @kind object;
  #L1ac8c8.  call temp:= `format`(v13, v12) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1ac8ce.  v12:= temp @kind object;
  #L1ac8d0.  v13:= "java.lang.String.format(format, *args)" @kind object;
  #L1ac8d4.  call `checkNotNullExpressionValue`(v12, v13) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1ac8da.  return v12 @kind object;
}
procedure `java.lang.Object` `logElapsed`(`okhttp3.internal.concurrent.Task` v6 @kind object, `okhttp3.internal.concurrent.TaskQueue` v7 @kind object, `kotlin.jvm.functions.Function0` v8 @kind object) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.logElapsed:(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1ac600.  v0:= "task" @kind object;
  #L1ac604.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1ac60a.  v0:= "queue" @kind object;
  #L1ac60e.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1ac614.  v0:= "block" @kind object;
  #L1ac618.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1ac61e.  v0:= `@@okhttp3.internal.concurrent.TaskRunner.Companion` @type ^`okhttp3.internal.concurrent.TaskRunner$Companion` @kind object;
  #L1ac622.  call temp:= `getLogger`(v0) @signature `Lokhttp3/internal/concurrent/TaskRunner$Companion;.getLogger:()Ljava/util/logging/Logger;` @kind virtual;
  #L1ac628.  v0:= temp @kind object;
  #L1ac62a.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L1ac62e.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L1ac634.  v0:= temp;
  #L1ac636.  if v0 == 0 then goto L1ac65e;
  #L1ac63a.  call temp:= `getTaskRunner$okhttp`(v7) @signature `Lokhttp3/internal/concurrent/TaskQueue;.getTaskRunner$okhttp:()Lokhttp3/internal/concurrent/TaskRunner;` @kind virtual;
  #L1ac640.  v1:= temp @kind object;
  #L1ac642.  call temp:= `getBackend`(v1) @signature `Lokhttp3/internal/concurrent/TaskRunner;.getBackend:()Lokhttp3/internal/concurrent/TaskRunner$Backend;` @kind virtual;
  #L1ac648.  v1:= temp @kind object;
  #L1ac64a.  call temp:= `nanoTime`(v1) @signature `Lokhttp3/internal/concurrent/TaskRunner$Backend;.nanoTime:()J` @kind interface;
  #L1ac650.  v1:= temp @kind wide;
  #L1ac652.  v3:= "starting" @kind object;
  #L1ac656.  call `access$log`(v6, v7, v3) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.access$log:(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;)V` @kind static;
  #L1ac65c.  goto L1ac662;
  #L1ac65e.  v1:= -1L;
  #L1ac662.  v3:= 1I;
  #L1ac664.  call temp:= `invoke`(v8) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L1ac66a.  v8:= temp @kind object;
  #L1ac66c.  call `finallyStart`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L1ac672.  if v0 == 0 then goto L1ac6c0;
  #L1ac676.  call temp:= `getTaskRunner$okhttp`(v7) @signature `Lokhttp3/internal/concurrent/TaskQueue;.getTaskRunner$okhttp:()Lokhttp3/internal/concurrent/TaskRunner;` @kind virtual;
  #L1ac67c.  v0:= temp @kind object;
  #L1ac67e.  call temp:= `getBackend`(v0) @signature `Lokhttp3/internal/concurrent/TaskRunner;.getBackend:()Lokhttp3/internal/concurrent/TaskRunner$Backend;` @kind virtual;
  #L1ac684.  v0:= temp @kind object;
  #L1ac686.  call temp:= `nanoTime`(v0) @signature `Lokhttp3/internal/concurrent/TaskRunner$Backend;.nanoTime:()J` @kind interface;
  #L1ac68c.  v4:= temp @kind wide;
  #L1ac68e.  v4:= v4 - v1 @kind long;
  #L1ac690.  v0:= new `java.lang.StringBuilder`;
  #L1ac694.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ac69a.  v1:= "finished run in " @kind object;
  #L1ac69e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac6a4.  call temp:= `formatDuration`(v4) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.formatDuration:(J)Ljava/lang/String;` @kind static;
  #L1ac6aa.  v1:= temp @kind object;
  #L1ac6ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac6b2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac6b8.  v0:= temp @kind object;
  #L1ac6ba.  call `access$log`(v6, v7, v0) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.access$log:(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;)V` @kind static;
  #L1ac6c0.  call `finallyEnd`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L1ac6c6.  return v8 @kind object;
  #L1ac6c8.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ac6ca.  call `finallyStart`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L1ac6d0.  if v0 == 0 then goto L1ac71e;
  #L1ac6d4.  call temp:= `getTaskRunner$okhttp`(v7) @signature `Lokhttp3/internal/concurrent/TaskQueue;.getTaskRunner$okhttp:()Lokhttp3/internal/concurrent/TaskRunner;` @kind virtual;
  #L1ac6da.  v0:= temp @kind object;
  #L1ac6dc.  call temp:= `getBackend`(v0) @signature `Lokhttp3/internal/concurrent/TaskRunner;.getBackend:()Lokhttp3/internal/concurrent/TaskRunner$Backend;` @kind virtual;
  #L1ac6e2.  v0:= temp @kind object;
  #L1ac6e4.  call temp:= `nanoTime`(v0) @signature `Lokhttp3/internal/concurrent/TaskRunner$Backend;.nanoTime:()J` @kind interface;
  #L1ac6ea.  v4:= temp @kind wide;
  #L1ac6ec.  v4:= v4 - v1 @kind long;
  #L1ac6ee.  v0:= new `java.lang.StringBuilder`;
  #L1ac6f2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ac6f8.  v1:= "failed a run in " @kind object;
  #L1ac6fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac702.  call temp:= `formatDuration`(v4) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.formatDuration:(J)Ljava/lang/String;` @kind static;
  #L1ac708.  v1:= temp @kind object;
  #L1ac70a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ac710.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac716.  v0:= temp @kind object;
  #L1ac718.  call `access$log`(v6, v7, v0) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.access$log:(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;)V` @kind static;
  #L1ac71e.  call `finallyEnd`(v3) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L1ac724.  throw v8;
  catch `java.lang.Throwable` @[L1ac664..L1ac66c] goto L1ac6c8;
}
procedure `void` `taskLog`(`okhttp3.internal.concurrent.Task` v2 @kind object, `okhttp3.internal.concurrent.TaskQueue` v3 @kind object, `kotlin.jvm.functions.Function0` v4 @kind object) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.taskLog:(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Lkotlin/jvm/functions/Function0;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1ac9a0.  v0:= "task" @kind object;
  #L1ac9a4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1ac9aa.  v0:= "queue" @kind object;
  #L1ac9ae.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1ac9b4.  v0:= "messageBlock" @kind object;
  #L1ac9b8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1ac9be.  v0:= `@@okhttp3.internal.concurrent.TaskRunner.Companion` @type ^`okhttp3.internal.concurrent.TaskRunner$Companion` @kind object;
  #L1ac9c2.  call temp:= `getLogger`(v0) @signature `Lokhttp3/internal/concurrent/TaskRunner$Companion;.getLogger:()Ljava/util/logging/Logger;` @kind virtual;
  #L1ac9c8.  v0:= temp @kind object;
  #L1ac9ca.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L1ac9ce.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L1ac9d4.  v0:= temp;
  #L1ac9d6.  if v0 == 0 then goto L1ac9ec;
  #L1ac9da.  call temp:= `invoke`(v4) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L1ac9e0.  v4:= temp @kind object;
  #L1ac9e2.  v4:= (`java.lang.String`) v4 @kind object;
  #L1ac9e6.  call `access$log`(v2, v3, v4) @signature `Lokhttp3/internal/concurrent/TaskLoggerKt;.access$log:(Lokhttp3/internal/concurrent/Task;Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;)V` @kind static;
  #L1ac9ec.  return @kind void;
}
