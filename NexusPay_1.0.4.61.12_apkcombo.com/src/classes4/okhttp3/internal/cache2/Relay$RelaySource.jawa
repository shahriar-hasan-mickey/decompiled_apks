record `okhttp3.internal.cache2.Relay$RelaySource` @kind class @AccessFlag PUBLIC_FINAL extends `okio.Source` @kind interface {
  `okio.Timeout` `okhttp3.internal.cache2.Relay$RelaySource.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.cache2.FileOperator` `okhttp3.internal.cache2.Relay$RelaySource.b` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.cache2.Relay$RelaySource.c` @AccessFlag PRIVATE;
  `okhttp3.internal.cache2.Relay` `okhttp3.internal.cache2.Relay$RelaySource.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache2.Relay$RelaySource` v2 @kind this, `okhttp3.internal.cache2.Relay` v3 @kind object) @signature `Lokhttp3/internal/cache2/Relay$RelaySource;.<init>:(Lokhttp3/internal/cache2/Relay;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1ac0b8.  v2.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` := v3 @kind object;
  #L1ac0bc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ac0c2.  v0:= new `okio.Timeout`;
  #L1ac0c6.  call `<init>`(v0) @signature `Lokio/Timeout;.<init>:()V` @kind direct;
  #L1ac0cc.  v2.`okhttp3.internal.cache2.Relay$RelaySource.a` @type ^`okio.Timeout` := v0 @kind object;
  #L1ac0d0.  v0:= new `okhttp3.internal.cache2.FileOperator`;
  #L1ac0d4.  call temp:= `getFile`(v3) @signature `Lokhttp3/internal/cache2/Relay;.getFile:()Ljava/io/RandomAccessFile;` @kind virtual;
  #L1ac0da.  v3:= temp @kind object;
  #L1ac0dc.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1ac0e2.  call temp:= `getChannel`(v3) @signature `Ljava/io/RandomAccessFile;.getChannel:()Ljava/nio/channels/FileChannel;` @kind virtual;
  #L1ac0e8.  v3:= temp @kind object;
  #L1ac0ea.  v1:= "file!!.channel" @kind object;
  #L1ac0ee.  call `checkNotNullExpressionValue`(v3, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1ac0f4.  call `<init>`(v0, v3) @signature `Lokhttp3/internal/cache2/FileOperator;.<init>:(Ljava/nio/channels/FileChannel;)V` @kind direct;
  #L1ac0fa.  v2.`okhttp3.internal.cache2.Relay$RelaySource.b` @type ^`okhttp3.internal.cache2.FileOperator` := v0 @kind object;
  #L1ac0fe.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.cache2.Relay$RelaySource` v4 @kind this) @signature `Lokhttp3/internal/cache2/Relay$RelaySource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ac110.  v0:= v4.`okhttp3.internal.cache2.Relay$RelaySource.b` @type ^`okhttp3.internal.cache2.FileOperator` @kind object;
  #L1ac114.  if v0 != 0 then goto L1ac11a;
  #L1ac118.  return @kind void;
  #L1ac11a.  v0:= 0I;
  #L1ac11c.  v4.`okhttp3.internal.cache2.Relay$RelaySource.b` @type ^`okhttp3.internal.cache2.FileOperator` := v0 @kind object;
  #L1ac120.  v1:= v4.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1ac124.  @monitorenter v1
  #L1ac126.  v2:= v4.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1ac12a.  call temp:= `getSourceCount`(v2) @signature `Lokhttp3/internal/cache2/Relay;.getSourceCount:()I` @kind virtual;
  #L1ac130.  v3:= temp;
  #L1ac132.  v3:= v3 + -1;
  #L1ac136.  call `setSourceCount`(v2, v3) @signature `Lokhttp3/internal/cache2/Relay;.setSourceCount:(I)V` @kind virtual;
  #L1ac13c.  v2:= v4.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1ac140.  call temp:= `getSourceCount`(v2) @signature `Lokhttp3/internal/cache2/Relay;.getSourceCount:()I` @kind virtual;
  #L1ac146.  v2:= temp;
  #L1ac148.  if v2 != 0 then goto L1ac164;
  #L1ac14c.  v2:= v4.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1ac150.  call temp:= `getFile`(v2) @signature `Lokhttp3/internal/cache2/Relay;.getFile:()Ljava/io/RandomAccessFile;` @kind virtual;
  #L1ac156.  v2:= temp @kind object;
  #L1ac158.  v3:= v4.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1ac15c.  call `setFile`(v3, v0) @signature `Lokhttp3/internal/cache2/Relay;.setFile:(Ljava/io/RandomAccessFile;)V` @kind virtual;
  #L1ac162.  v0:= v2 @kind object;
  #L1ac164.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1ac168.  @monitorexit v1
  #L1ac16a.  if v0 == 0 then goto L1ac174;
  #L1ac16e.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1ac174.  return @kind void;
  #L1ac176.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ac178.  @monitorexit v1
  #L1ac17a.  throw v0;
  catch `java.lang.Throwable` @[L1ac126..L1ac168] goto L1ac176;
}
procedure `long` `read`(`okhttp3.internal.cache2.Relay$RelaySource` v19 @kind this, `okio.Buffer` v20 @kind object, `long` v21 ) @signature `Lokhttp3/internal/cache2/Relay$RelaySource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L1abc88.  v1:= v19 @kind object;
  #L1abc8c.  v2:= v21 @kind wide;
  #L1abc90.  v0:= "sink" @kind object;
  #L1abc94.  v5:= v20 @kind object;
  #L1abc98.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1abc9e.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.b` @type ^`okhttp3.internal.cache2.FileOperator` @kind object;
  #L1abca2.  v4:= 1I;
  #L1abca4.  if v0 == 0 then goto L1abcac;
  #L1abca8.  v0:= 1I;
  #L1abcaa.  goto L1abcae;
  #L1abcac.  v0:= 0I;
  #L1abcae.  if v0 == 0 then goto L1abffc;
  #L1abcb2.  v8:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abcb6.  @monitorenter v8
  #L1abcb8.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abcbc.  call temp:= `getUpstreamPos`(v0) @signature `Lokhttp3/internal/cache2/Relay;.getUpstreamPos:()J` @kind virtual;
  #L1abcc2.  v6:= temp @kind wide;
  #L1abcc4.  v9:= v1.`okhttp3.internal.cache2.Relay$RelaySource.c` @type ^`long` @kind wide;
  #L1abcc8.  v0:= 2I;
  #L1abcca.  v11:= -1L;
  #L1abcce.  v13:= lcmp(v9, v6);
  #L1abcd2.  if v13 == 0 then goto L1abd52;
  #L1abcd6.  v4:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abcda.  call temp:= `getUpstreamPos`(v4) @signature `Lokhttp3/internal/cache2/Relay;.getUpstreamPos:()J` @kind virtual;
  #L1abce0.  v6:= temp @kind wide;
  #L1abce2.  v4:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abce6.  call temp:= `getBuffer`(v4) @signature `Lokhttp3/internal/cache2/Relay;.getBuffer:()Lokio/Buffer;` @kind virtual;
  #L1abcec.  v4:= temp @kind object;
  #L1abcee.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1abcf4.  v9:= temp @kind wide;
  #L1abcf6.  v6:= v6 - v9 @kind long;
  #L1abcf8.  v9:= v1.`okhttp3.internal.cache2.Relay$RelaySource.c` @type ^`long` @kind wide;
  #L1abcfc.  v4:= lcmp(v9, v6);
  #L1abd00.  if v4 >= 0 then goto L1abd08;
  #L1abd04.  v4:= 2I;
  #L1abd06.  goto L1abd98;
  #L1abd08.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abd0c.  call temp:= `getUpstreamPos`(v0) @signature `Lokhttp3/internal/cache2/Relay;.getUpstreamPos:()J` @kind virtual;
  #L1abd12.  v9:= temp @kind wide;
  #L1abd14.  v11:= v1.`okhttp3.internal.cache2.Relay$RelaySource.c` @type ^`long` @kind wide;
  #L1abd18.  v9:= v9 - v11 @kind long;
  #L1abd1a.  call temp:= `min`(v2, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1abd20.  v9:= temp @kind wide;
  #L1abd22.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abd26.  call temp:= `getBuffer`(v0) @signature `Lokhttp3/internal/cache2/Relay;.getBuffer:()Lokio/Buffer;` @kind virtual;
  #L1abd2c.  v2:= temp @kind object;
  #L1abd2e.  v3:= v1.`okhttp3.internal.cache2.Relay$RelaySource.c` @type ^`long` @kind wide;
  #L1abd32.  v6:= v3 - v6 @kind long;
  #L1abd36.  v3:= v20 @kind object;
  #L1abd3a.  v4:= v6 @kind wide;
  #L1abd3c.  v6:= v9 @kind wide;
  #L1abd3e.  call temp:= `copyTo`(v2, v3, v4, v6) @signature `Lokio/Buffer;.copyTo:(Lokio/Buffer;JJ)Lokio/Buffer;` @kind virtual;
  #L1abd44.  v2:= v1.`okhttp3.internal.cache2.Relay$RelaySource.c` @type ^`long` @kind wide;
  #L1abd48.  v2:= v2 + v9 @kind long;
  #L1abd4a.  v1.`okhttp3.internal.cache2.Relay$RelaySource.c` @type ^`long` := v2 @kind wide;
  #L1abd4e.  @monitorexit v8
  #L1abd50.  return v9 @kind wide;
  #L1abd52.  v6:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abd56.  call temp:= `getComplete`(v6) @signature `Lokhttp3/internal/cache2/Relay;.getComplete:()Z` @kind virtual;
  #L1abd5c.  v6:= temp;
  #L1abd5e.  if v6 == 0 then goto L1abd66;
  #L1abd62.  @monitorexit v8
  #L1abd64.  return v11 @kind wide;
  #L1abd66.  v6:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abd6a.  call temp:= `getUpstreamReader`(v6) @signature `Lokhttp3/internal/cache2/Relay;.getUpstreamReader:()Ljava/lang/Thread;` @kind virtual;
  #L1abd70.  v6:= temp @kind object;
  #L1abd72.  if v6 == 0 then goto L1abd86;
  #L1abd76.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.a` @type ^`okio.Timeout` @kind object;
  #L1abd7a.  v6:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abd7e.  call `waitUntilNotified`(v0, v6) @signature `Lokio/Timeout;.waitUntilNotified:(Ljava/lang/Object;)V` @kind virtual;
  #L1abd84.  goto L1abcb8;
  #L1abd86.  v6:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abd8a.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1abd90.  v7:= temp @kind object;
  #L1abd92.  call `setUpstreamReader`(v6, v7) @signature `Lokhttp3/internal/cache2/Relay;.setUpstreamReader:(Ljava/lang/Thread;)V` @kind virtual;
  #L1abd98.  @monitorexit v8
  #L1abd9a.  v8:= 32L;
  #L1abd9e.  if v4 != v0 then goto L1abde4;
  #L1abda2.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abda6.  call temp:= `getUpstreamPos`(v0) @signature `Lokhttp3/internal/cache2/Relay;.getUpstreamPos:()J` @kind virtual;
  #L1abdac.  v6:= temp @kind wide;
  #L1abdae.  v10:= v1.`okhttp3.internal.cache2.Relay$RelaySource.c` @type ^`long` @kind wide;
  #L1abdb2.  v6:= v6 - v10 @kind long;
  #L1abdb4.  call temp:= `min`(v2, v6) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1abdba.  v10:= temp @kind wide;
  #L1abdbc.  v2:= v1.`okhttp3.internal.cache2.Relay$RelaySource.b` @type ^`okhttp3.internal.cache2.FileOperator` @kind object;
  #L1abdc0.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1abdc6.  v3:= v1.`okhttp3.internal.cache2.Relay$RelaySource.c` @type ^`long` @kind wide;
  #L1abdca.  v3:= v3 + v8 @kind long;
  #L1abdcc.  v5:= v20 @kind object;
  #L1abdd0.  v6:= v10 @kind wide;
  #L1abdd2.  call `read`(v2, v3, v5, v6) @signature `Lokhttp3/internal/cache2/FileOperator;.read:(JLokio/Buffer;J)V` @kind virtual;
  #L1abdd8.  v2:= v1.`okhttp3.internal.cache2.Relay$RelaySource.c` @type ^`long` @kind wide;
  #L1abddc.  v2:= v2 + v10 @kind long;
  #L1abdde.  v1.`okhttp3.internal.cache2.Relay$RelaySource.c` @type ^`long` := v2 @kind wide;
  #L1abde2.  return v10 @kind wide;
  #L1abde4.  v10:= 0I;
  #L1abde6.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abdea.  call temp:= `getUpstream`(v0) @signature `Lokhttp3/internal/cache2/Relay;.getUpstream:()Lokio/Source;` @kind virtual;
  #L1abdf0.  v0:= temp @kind object;
  #L1abdf2.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1abdf8.  v4:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abdfc.  call temp:= `getUpstreamBuffer`(v4) @signature `Lokhttp3/internal/cache2/Relay;.getUpstreamBuffer:()Lokio/Buffer;` @kind virtual;
  #L1abe02.  v4:= temp @kind object;
  #L1abe04.  v6:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abe08.  call temp:= `getBufferMaxSize`(v6) @signature `Lokhttp3/internal/cache2/Relay;.getBufferMaxSize:()J` @kind virtual;
  #L1abe0e.  v6:= temp @kind wide;
  #L1abe10.  call temp:= `read`(v0, v4, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1abe16.  v14:= temp @kind wide;
  #L1abe18.  v0:= lcmp(v14, v11);
  #L1abe1c.  if v0 != 0 then goto L1abe72;
  #L1abe20.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abe24.  v2:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abe28.  call temp:= `getUpstreamPos`(v2) @signature `Lokhttp3/internal/cache2/Relay;.getUpstreamPos:()J` @kind virtual;
  #L1abe2e.  v2:= temp @kind wide;
  #L1abe30.  call `commit`(v0, v2) @signature `Lokhttp3/internal/cache2/Relay;.commit:(J)V` @kind virtual;
  #L1abe36.  v2:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abe3a.  @monitorenter v2
  #L1abe3c.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abe40.  call `setUpstreamReader`(v0, v10) @signature `Lokhttp3/internal/cache2/Relay;.setUpstreamReader:(Ljava/lang/Thread;)V` @kind virtual;
  #L1abe46.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abe4a.  if v0 == 0 then goto L1abe5c;
  #L1abe4e.  call `notifyAll`(v0) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L1abe54.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1abe58.  @monitorexit v2
  #L1abe5a.  return v11 @kind wide;
  #L1abe5c.  v0:= new `java.lang.NullPointerException`;
  #L1abe60.  v3:= "null cannot be cast to non-null type java.lang.Object" @kind object;
  #L1abe64.  call `<init>`(v0, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1abe6a.  throw v0;
  #L1abe6c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1abe6e.  @monitorexit v2
  #L1abe70.  throw v0;
  #L1abe72.  call temp:= `min`(v14, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1abe78.  v11:= temp @kind wide;
  #L1abe7a.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abe7e.  call temp:= `getUpstreamBuffer`(v0) @signature `Lokhttp3/internal/cache2/Relay;.getUpstreamBuffer:()Lokio/Buffer;` @kind virtual;
  #L1abe84.  v2:= temp @kind object;
  #L1abe86.  v6:= 0L;
  #L1abe8a.  v3:= v20 @kind object;
  #L1abe8e.  v4:= v6 @kind wide;
  #L1abe90.  v6:= v11 @kind wide;
  #L1abe92.  call temp:= `copyTo`(v2, v3, v4, v6) @signature `Lokio/Buffer;.copyTo:(Lokio/Buffer;JJ)Lokio/Buffer;` @kind virtual;
  #L1abe98.  v2:= v1.`okhttp3.internal.cache2.Relay$RelaySource.c` @type ^`long` @kind wide;
  #L1abe9c.  v2:= v2 + v11 @kind long;
  #L1abe9e.  v1.`okhttp3.internal.cache2.Relay$RelaySource.c` @type ^`long` := v2 @kind wide;
  #L1abea2.  v13:= v1.`okhttp3.internal.cache2.Relay$RelaySource.b` @type ^`okhttp3.internal.cache2.FileOperator` @kind object;
  #L1abea6.  call `checkNotNull`(v13) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1abeac.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abeb0.  call temp:= `getUpstreamPos`(v0) @signature `Lokhttp3/internal/cache2/Relay;.getUpstreamPos:()J` @kind virtual;
  #L1abeb6.  v2:= temp @kind wide;
  #L1abeb8.  v2:= v2 + v8 @kind long;
  #L1abeba.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abebe.  call temp:= `getUpstreamBuffer`(v0) @signature `Lokhttp3/internal/cache2/Relay;.getUpstreamBuffer:()Lokio/Buffer;` @kind virtual;
  #L1abec4.  v0:= temp @kind object;
  #L1abec6.  call temp:= `clone`(v0) @signature `Lokio/Buffer;.clone:()Lokio/Buffer;` @kind virtual;
  #L1abecc.  v16:= temp @kind object;
  #L1abece.  v4:= v14 @kind wide;
  #L1abed0.  v14:= v2 @kind wide;
  #L1abed2.  v17:= v4 @kind wide;
  #L1abed6.  call `write`(v13, v14, v16, v17) @signature `Lokhttp3/internal/cache2/FileOperator;.write:(JLokio/Buffer;J)V` @kind virtual;
  #L1abedc.  v2:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abee0.  @monitorenter v2
  #L1abee2.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abee6.  call temp:= `getBuffer`(v0) @signature `Lokhttp3/internal/cache2/Relay;.getBuffer:()Lokio/Buffer;` @kind virtual;
  #L1abeec.  v0:= temp @kind object;
  #L1abeee.  v3:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abef2.  call temp:= `getUpstreamBuffer`(v3) @signature `Lokhttp3/internal/cache2/Relay;.getUpstreamBuffer:()Lokio/Buffer;` @kind virtual;
  #L1abef8.  v3:= temp @kind object;
  #L1abefa.  call `write`(v0, v3, v4) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L1abf00.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abf04.  call temp:= `getBuffer`(v0) @signature `Lokhttp3/internal/cache2/Relay;.getBuffer:()Lokio/Buffer;` @kind virtual;
  #L1abf0a.  v0:= temp @kind object;
  #L1abf0c.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1abf12.  v6:= temp @kind wide;
  #L1abf14.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abf18.  call temp:= `getBufferMaxSize`(v0) @signature `Lokhttp3/internal/cache2/Relay;.getBufferMaxSize:()J` @kind virtual;
  #L1abf1e.  v8:= temp @kind wide;
  #L1abf20.  v0:= lcmp(v6, v8);
  #L1abf24.  if v0 <= 0 then goto L1abf5c;
  #L1abf28.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abf2c.  call temp:= `getBuffer`(v0) @signature `Lokhttp3/internal/cache2/Relay;.getBuffer:()Lokio/Buffer;` @kind virtual;
  #L1abf32.  v0:= temp @kind object;
  #L1abf34.  v3:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abf38.  call temp:= `getBuffer`(v3) @signature `Lokhttp3/internal/cache2/Relay;.getBuffer:()Lokio/Buffer;` @kind virtual;
  #L1abf3e.  v3:= temp @kind object;
  #L1abf40.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1abf46.  v6:= temp @kind wide;
  #L1abf48.  v3:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abf4c.  call temp:= `getBufferMaxSize`(v3) @signature `Lokhttp3/internal/cache2/Relay;.getBufferMaxSize:()J` @kind virtual;
  #L1abf52.  v8:= temp @kind wide;
  #L1abf54.  v6:= v6 - v8 @kind long;
  #L1abf56.  call `skip`(v0, v6) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L1abf5c.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abf60.  call temp:= `getUpstreamPos`(v0) @signature `Lokhttp3/internal/cache2/Relay;.getUpstreamPos:()J` @kind virtual;
  #L1abf66.  v6:= temp @kind wide;
  #L1abf68.  v6:= v6 + v4 @kind long;
  #L1abf6a.  call `setUpstreamPos`(v0, v6) @signature `Lokhttp3/internal/cache2/Relay;.setUpstreamPos:(J)V` @kind virtual;
  #L1abf70.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1abf74.  @monitorexit v2
  #L1abf76.  v2:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abf7a.  @monitorenter v2
  #L1abf7c.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abf80.  call `setUpstreamReader`(v0, v10) @signature `Lokhttp3/internal/cache2/Relay;.setUpstreamReader:(Ljava/lang/Thread;)V` @kind virtual;
  #L1abf86.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abf8a.  if v0 == 0 then goto L1abf9c;
  #L1abf8e.  call `notifyAll`(v0) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L1abf94.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1abf98.  @monitorexit v2
  #L1abf9a.  return v11 @kind wide;
  #L1abf9c.  v0:= new `java.lang.NullPointerException`;
  #L1abfa0.  v3:= "null cannot be cast to non-null type java.lang.Object" @kind object;
  #L1abfa4.  call `<init>`(v0, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1abfaa.  throw v0;
  #L1abfac.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1abfae.  @monitorexit v2
  #L1abfb0.  throw v0;
  #L1abfb2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1abfb4.  @monitorexit v2
  #L1abfb6.  throw v0;
  #L1abfb8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1abfba.  v2:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abfbe.  @monitorenter v2
  #L1abfc0.  v3:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abfc4.  call `setUpstreamReader`(v3, v10) @signature `Lokhttp3/internal/cache2/Relay;.setUpstreamReader:(Ljava/lang/Thread;)V` @kind virtual;
  #L1abfca.  v3:= v1.`okhttp3.internal.cache2.Relay$RelaySource.d` @type ^`okhttp3.internal.cache2.Relay` @kind object;
  #L1abfce.  if v3 != 0 then goto L1abfe2;
  #L1abfd2.  v0:= new `java.lang.NullPointerException`;
  #L1abfd6.  v3:= "null cannot be cast to non-null type java.lang.Object" @kind object;
  #L1abfda.  call `<init>`(v0, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1abfe0.  throw v0;
  #L1abfe2.  call `notifyAll`(v3) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L1abfe8.  v3:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1abfec.  @monitorexit v2
  #L1abfee.  throw v0;
  #L1abff0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1abff2.  @monitorexit v2
  #L1abff4.  throw v0;
  #L1abff6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1abff8.  @monitorexit v8
  #L1abffa.  throw v0;
  #L1abffc.  v0:= "Check failed." @kind object;
  #L1ac000.  v2:= new `java.lang.IllegalStateException`;
  #L1ac004.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ac00a.  v0:= temp @kind object;
  #L1ac00c.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ac012.  throw v2;
  catch `java.lang.Throwable` @[L1abcb8..L1abd4e] goto L1abff6;
  catch `java.lang.Throwable` @[L1abd52..L1abd5e] goto L1abff6;
  catch `java.lang.Throwable` @[L1abd66..L1abd98] goto L1abff6;
  catch `java.lang.Throwable` @[L1abde6..L1abe36] goto L1abfb8;
  catch `java.lang.Throwable` @[L1abe3c..L1abe58] goto L1abe6c;
  catch `java.lang.Throwable` @[L1abe5c..L1abe6c] goto L1abe6c;
  catch `java.lang.Throwable` @[L1abe72..L1abee2] goto L1abfb8;
  catch `java.lang.Throwable` @[L1abee2..L1abf74] goto L1abfb2;
  catch `java.lang.Throwable` @[L1abf74..L1abf76] goto L1abfb8;
  catch `java.lang.Throwable` @[L1abf7c..L1abf98] goto L1abfac;
  catch `java.lang.Throwable` @[L1abf9c..L1abfac] goto L1abfac;
  catch `java.lang.Throwable` @[L1abfb4..L1abfb8] goto L1abfb8;
  catch `java.lang.Throwable` @[L1abfc0..L1abfec] goto L1abff0;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.cache2.Relay$RelaySource` v1 @kind this) @signature `Lokhttp3/internal/cache2/Relay$RelaySource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ac0a0.  v0:= v1.`okhttp3.internal.cache2.Relay$RelaySource.a` @type ^`okio.Timeout` @kind object;
  #L1ac0a4.  return v0 @kind object;
}
