record `okhttp3.internal.proxy.NullProxySelector` @kind class @AccessFlag PUBLIC_FINAL extends `java.net.ProxySelector` @kind class {
}
global `okhttp3.internal.proxy.NullProxySelector` `@@okhttp3.internal.proxy.NullProxySelector.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/proxy/NullProxySelector;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c33dc.  v0:= new `okhttp3.internal.proxy.NullProxySelector`;
  #L1c33e0.  call `<init>`(v0) @signature `Lokhttp3/internal/proxy/NullProxySelector;.<init>:()V` @kind direct;
  #L1c33e6.  `@@okhttp3.internal.proxy.NullProxySelector.INSTANCE` @type ^`okhttp3.internal.proxy.NullProxySelector` := v0 @kind object;
  #L1c33ea.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.proxy.NullProxySelector` v0 @kind this) @signature `Lokhttp3/internal/proxy/NullProxySelector;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1c33fc.  call `<init>`(v0) @signature `Ljava/net/ProxySelector;.<init>:()V` @kind direct;
  #L1c3402.  return @kind void;
}
procedure `void` `connectFailed`(`okhttp3.internal.proxy.NullProxySelector` v0 @kind this, `java.net.URI` v1 @kind object, `java.net.SocketAddress` v2 @kind object, `java.io.IOException` v3 @kind object) @signature `Lokhttp3/internal/proxy/NullProxySelector;.connectFailed:(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;

  #L1c3414.  return @kind void;
}
procedure `java.util.List` `select`(`okhttp3.internal.proxy.NullProxySelector` v1 @kind this, `java.net.URI` v2 @kind object) @signature `Lokhttp3/internal/proxy/NullProxySelector;.select:(Ljava/net/URI;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c33a0.  if v2 == 0 then goto L1c33b2;
  #L1c33a4.  v2:= `@@java.net.Proxy.NO_PROXY` @type ^`java.net.Proxy` @kind object;
  #L1c33a8.  call temp:= `listOf`(v2) @signature `Lkotlin/collections/CollectionsKt;.listOf:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1c33ae.  v2:= temp @kind object;
  #L1c33b0.  return v2 @kind object;
  #L1c33b2.  v2:= new `java.lang.IllegalArgumentException`;
  #L1c33b6.  v0:= "uri must not be null" @kind object;
  #L1c33ba.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c33c0.  v0:= temp @kind object;
  #L1c33c2.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c33c8.  throw v2;
}
