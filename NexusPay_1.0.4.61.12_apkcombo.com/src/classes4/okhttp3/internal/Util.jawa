record `okhttp3.internal.Util` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.Headers` `@@okhttp3.internal.Util.EMPTY_HEADERS` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.RequestBody` `@@okhttp3.internal.Util.EMPTY_REQUEST` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.ResponseBody` `@@okhttp3.internal.Util.EMPTY_RESPONSE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.TimeZone` `@@okhttp3.internal.Util.UTC` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.Options` `@@okhttp3.internal.Util.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@okhttp3.internal.Util.assertionsEnabled` @AccessFlag PUBLIC_STATIC_FINAL;
global `kotlin.text.Regex` `@@okhttp3.internal.Util.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.Util.okHttpName` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.Util.userAgent` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/Util;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1a7a60.  v0:= 0I;
  #L1a7a62.  v1:= new `byte`[v0];
  #L1a7a66.  `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] := v1 @kind object;
  #L1a7a6a.  v1:= `@@okhttp3.Headers.Companion` @type ^`okhttp3.Headers$Companion` @kind object;
  #L1a7a6e.  v2:= new `java.lang.String`[v0];
  #L1a7a72.  call temp:= `of`(v1, v2) @signature `Lokhttp3/Headers$Companion;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind virtual;
  #L1a7a78.  v1:= temp @kind object;
  #L1a7a7a.  `@@okhttp3.internal.Util.EMPTY_HEADERS` @type ^`okhttp3.Headers` := v1 @kind object;
  #L1a7a7e.  v1:= `@@okhttp3.ResponseBody.Companion` @type ^`okhttp3.ResponseBody$Companion` @kind object;
  #L1a7a82.  v2:= `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L1a7a86.  v3:= 0I;
  #L1a7a88.  v4:= 1I;
  #L1a7a8a.  call temp:= `create$default`(v1, v2, v3, v4, v3) @signature `Lokhttp3/ResponseBody$Companion;.create$default:(Lokhttp3/ResponseBody$Companion;[BLokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/ResponseBody;` @kind static;
  #L1a7a90.  v1:= temp @kind object;
  #L1a7a92.  `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` := v1 @kind object;
  #L1a7a96.  v5:= `@@okhttp3.RequestBody.Companion` @type ^`okhttp3.RequestBody$Companion` @kind object;
  #L1a7a9a.  v6:= `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L1a7a9e.  v7:= 0I;
  #L1a7aa0.  v8:= 0I;
  #L1a7aa2.  v9:= 0I;
  #L1a7aa4.  v10:= 7I;
  #L1a7aa6.  v11:= 0I;
  #L1a7aa8.  call temp:= `create$default`(v5, v6, v7, v8, v9, v10, v11) @signature `Lokhttp3/RequestBody$Companion;.create$default:(Lokhttp3/RequestBody$Companion;[BLokhttp3/MediaType;IIILjava/lang/Object;)Lokhttp3/RequestBody;` @kind static;
  #L1a7aae.  v1:= temp @kind object;
  #L1a7ab0.  `@@okhttp3.internal.Util.EMPTY_REQUEST` @type ^`okhttp3.RequestBody` := v1 @kind object;
  #L1a7ab4.  v1:= `@@okio.Options.Companion` @type ^`okio.Options$Companion` @kind object;
  #L1a7ab8.  v2:= 5I;
  #L1a7aba.  v2:= new `okio.ByteString`[v2];
  #L1a7abe.  v3:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1a7ac2.  v5:= "efbbbf" @kind object;
  #L1a7ac6.  call temp:= `decodeHex`(v3, v5) @signature `Lokio/ByteString$Companion;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1a7acc.  v3:= temp @kind object;
  #L1a7ace.  v2[v0]:= v3 @kind object;
  #L1a7ad2.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1a7ad6.  v3:= "feff" @kind object;
  #L1a7ada.  call temp:= `decodeHex`(v0, v3) @signature `Lokio/ByteString$Companion;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1a7ae0.  v0:= temp @kind object;
  #L1a7ae2.  v2[v4]:= v0 @kind object;
  #L1a7ae6.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1a7aea.  v3:= "fffe" @kind object;
  #L1a7aee.  call temp:= `decodeHex`(v0, v3) @signature `Lokio/ByteString$Companion;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1a7af4.  v0:= temp @kind object;
  #L1a7af6.  v3:= 2I;
  #L1a7af8.  v2[v3]:= v0 @kind object;
  #L1a7afc.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1a7b00.  v3:= "0000ffff" @kind object;
  #L1a7b04.  call temp:= `decodeHex`(v0, v3) @signature `Lokio/ByteString$Companion;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1a7b0a.  v0:= temp @kind object;
  #L1a7b0c.  v3:= 3I;
  #L1a7b0e.  v2[v3]:= v0 @kind object;
  #L1a7b12.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1a7b16.  v3:= "ffff0000" @kind object;
  #L1a7b1a.  call temp:= `decodeHex`(v0, v3) @signature `Lokio/ByteString$Companion;.decodeHex:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1a7b20.  v0:= temp @kind object;
  #L1a7b22.  v3:= 4I;
  #L1a7b24.  v2[v3]:= v0 @kind object;
  #L1a7b28.  call temp:= `of`(v1, v2) @signature `Lokio/Options$Companion;.of:([Lokio/ByteString;)Lokio/Options;` @kind virtual;
  #L1a7b2e.  v0:= temp @kind object;
  #L1a7b30.  `@@okhttp3.internal.Util.a` @type ^`okio.Options` := v0 @kind object;
  #L1a7b34.  v0:= "GMT" @kind object;
  #L1a7b38.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L1a7b3e.  v0:= temp @kind object;
  #L1a7b40.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1a7b46.  `@@okhttp3.internal.Util.UTC` @type ^`java.util.TimeZone` := v0 @kind object;
  #L1a7b4a.  v0:= new `kotlin.text.Regex`;
  #L1a7b4e.  v1:= "([0-9a-fA-F]*:[0-9a-fA-F:.]*)|([\\d.]+)" @kind object;
  #L1a7b52.  call `<init>`(v0, v1) @signature `Lkotlin/text/Regex;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a7b58.  `@@okhttp3.internal.Util.b` @type ^`kotlin.text.Regex` := v0 @kind object;
  #L1a7b5c.  v0:= constclass @type ^`okhttp3.OkHttpClient` @kind object;
  #L1a7b60.  call temp:= `desiredAssertionStatus`(v0) @signature `Ljava/lang/Class;.desiredAssertionStatus:()Z` @kind virtual;
  #L1a7b66.  v0:= temp;
  #L1a7b68.  `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` := v0 @kind boolean;
  #L1a7b6c.  v0:= constclass @type ^`okhttp3.OkHttpClient` @kind object;
  #L1a7b70.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1a7b76.  v0:= temp @kind object;
  #L1a7b78.  v1:= "OkHttpClient::class.java.name" @kind object;
  #L1a7b7c.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7b82.  v1:= "okhttp3." @kind object;
  #L1a7b86.  call temp:= `removePrefix`(v0, v1) @signature `Lkotlin/text/StringsKt;.removePrefix:(Ljava/lang/String;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind static;
  #L1a7b8c.  v0:= temp @kind object;
  #L1a7b8e.  v1:= "Client" @kind object;
  #L1a7b92.  call temp:= `removeSuffix`(v0, v1) @signature `Lkotlin/text/StringsKt;.removeSuffix:(Ljava/lang/String;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind static;
  #L1a7b98.  v0:= temp @kind object;
  #L1a7b9a.  `@@okhttp3.internal.Util.okHttpName` @type ^`java.lang.String` := v0 @kind object;
  #L1a7b9e.  return @kind void;
}
procedure `void` `addIfAbsent`(`java.util.List` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/internal/Util;.addIfAbsent:(Ljava/util/List;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a7bb0.  v0:= "$this$addIfAbsent" @kind object;
  #L1a7bb4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7bba.  call temp:= `contains`(v1, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1a7bc0.  v0:= temp;
  #L1a7bc2.  if v0 != 0 then goto L1a7bcc;
  #L1a7bc6.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a7bcc.  return @kind void;
}
procedure `int` `and`(`byte` v0 , `int` v1 ) @signature `Lokhttp3/internal/Util;.and:(BI)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L1a6bf4.  v0:= v0 ^& v1 @kind int;
  #L1a6bf6.  return v0;
}
procedure `int` `and`(`short` v0 , `int` v1 ) @signature `Lokhttp3/internal/Util;.and:(SI)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L1a6c08.  v0:= v0 ^& v1 @kind int;
  #L1a6c0a.  return v0;
}
procedure `long` `and`(`int` v2 , `long` v3 ) @signature `Lokhttp3/internal/Util;.and:(IJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1a7934.  v0:= (`long`) v2 @kind i2l;
  #L1a7936.  v2:= v0 ^& v3 @kind long;
  #L1a793a.  return v2 @kind wide;
}
procedure `okhttp3.EventListener$Factory` `asFactory`(`okhttp3.EventListener` v1 @kind object) @signature `Lokhttp3/internal/Util;.asFactory:(Lokhttp3/EventListener;)Lokhttp3/EventListener$Factory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a79c0.  v0:= "$this$asFactory" @kind object;
  #L1a79c4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a79ca.  v0:= new `okhttp3.internal.Util$a`;
  #L1a79ce.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/Util$a;.<init>:(Lokhttp3/EventListener;)V` @kind direct;
  #L1a79d4.  return v0 @kind object;
}
procedure `void` `assertThreadDoesntHoldLock`(`java.lang.Object` v4 @kind object) @signature `Lokhttp3/internal/Util;.assertThreadDoesntHoldLock:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a7be0.  v0:= "$this$assertThreadDoesntHoldLock" @kind object;
  #L1a7be4.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7bea.  v0:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L1a7bee.  if v0 == 0 then goto L1a7c58;
  #L1a7bf2.  call temp:= `holdsLock`(v4) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L1a7bf8.  v0:= temp;
  #L1a7bfa.  if v0 != 0 then goto L1a7c00;
  #L1a7bfe.  goto L1a7c58;
  #L1a7c00.  v0:= new `java.lang.AssertionError`;
  #L1a7c04.  v1:= new `java.lang.StringBuilder`;
  #L1a7c08.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a7c0e.  v2:= "Thread " @kind object;
  #L1a7c12.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a7c18.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1a7c1e.  v2:= temp @kind object;
  #L1a7c20.  v3:= "Thread.currentThread()" @kind object;
  #L1a7c24.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7c2a.  call temp:= `getName`(v2) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L1a7c30.  v2:= temp @kind object;
  #L1a7c32.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a7c38.  v2:= " MUST NOT hold lock on " @kind object;
  #L1a7c3c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a7c42.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a7c48.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a7c4e.  v4:= temp @kind object;
  #L1a7c50.  call `<init>`(v0, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1a7c56.  throw v0;
  #L1a7c58.  return @kind void;
}
procedure `void` `assertThreadHoldsLock`(`java.lang.Object` v4 @kind object) @signature `Lokhttp3/internal/Util;.assertThreadHoldsLock:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a7c6c.  v0:= "$this$assertThreadHoldsLock" @kind object;
  #L1a7c70.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7c76.  v0:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L1a7c7a.  if v0 == 0 then goto L1a7ce4;
  #L1a7c7e.  call temp:= `holdsLock`(v4) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L1a7c84.  v0:= temp;
  #L1a7c86.  if v0 == 0 then goto L1a7c8c;
  #L1a7c8a.  goto L1a7ce4;
  #L1a7c8c.  v0:= new `java.lang.AssertionError`;
  #L1a7c90.  v1:= new `java.lang.StringBuilder`;
  #L1a7c94.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a7c9a.  v2:= "Thread " @kind object;
  #L1a7c9e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a7ca4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1a7caa.  v2:= temp @kind object;
  #L1a7cac.  v3:= "Thread.currentThread()" @kind object;
  #L1a7cb0.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7cb6.  call temp:= `getName`(v2) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L1a7cbc.  v2:= temp @kind object;
  #L1a7cbe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a7cc4.  v2:= " MUST hold lock on " @kind object;
  #L1a7cc8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a7cce.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a7cd4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a7cda.  v4:= temp @kind object;
  #L1a7cdc.  call `<init>`(v0, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1a7ce2.  throw v0;
  #L1a7ce4.  return @kind void;
}
procedure `boolean` `canParseAsIpAddress`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/Util;.canParseAsIpAddress:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a6800.  v0:= "$this$canParseAsIpAddress" @kind object;
  #L1a6804.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a680a.  v0:= `@@okhttp3.internal.Util.b` @type ^`kotlin.text.Regex` @kind object;
  #L1a680e.  call temp:= `matches`(v0, v1) @signature `Lkotlin/text/Regex;.matches:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L1a6814.  v1:= temp;
  #L1a6816.  return v1;
}
procedure `boolean` `canReuseConnectionFor`(`okhttp3.HttpUrl` v2 @kind object, `okhttp3.HttpUrl` v3 @kind object) @signature `Lokhttp3/internal/Util;.canReuseConnectionFor:(Lokhttp3/HttpUrl;Lokhttp3/HttpUrl;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1a6828.  v0:= "$this$canReuseConnectionFor" @kind object;
  #L1a682c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a6832.  v0:= "other" @kind object;
  #L1a6836.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a683c.  call temp:= `host`(v2) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1a6842.  v0:= temp @kind object;
  #L1a6844.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1a684a.  v1:= temp @kind object;
  #L1a684c.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a6852.  v0:= temp;
  #L1a6854.  if v0 == 0 then goto L1a688c;
  #L1a6858.  call temp:= `port`(v2) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L1a685e.  v0:= temp;
  #L1a6860.  call temp:= `port`(v3) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L1a6866.  v1:= temp;
  #L1a6868.  if v0 != v1 then goto L1a688c;
  #L1a686c.  call temp:= `scheme`(v2) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L1a6872.  v2:= temp @kind object;
  #L1a6874.  call temp:= `scheme`(v3) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L1a687a.  v3:= temp @kind object;
  #L1a687c.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a6882.  v2:= temp;
  #L1a6884.  if v2 == 0 then goto L1a688c;
  #L1a6888.  v2:= 1I;
  #L1a688a.  goto L1a688e;
  #L1a688c.  v2:= 0I;
  #L1a688e.  return v2;
}
procedure `int` `checkDuration`(`java.lang.String` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lokhttp3/internal/Util;.checkDuration:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a6c1c.  v0:= "name" @kind object;
  #L1a6c20.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a6c26.  v0:= 0L;
  #L1a6c2a.  v2:= 1I;
  #L1a6c2c.  v3:= 0I;
  #L1a6c2e.  v4:= lcmp(v8, v0);
  #L1a6c32.  if v4 < 0 then goto L1a6c3a;
  #L1a6c36.  v5:= 1I;
  #L1a6c38.  goto L1a6c3c;
  #L1a6c3a.  v5:= 0I;
  #L1a6c3c.  if v5 == 0 then goto L1a6d0c;
  #L1a6c40.  if v10 == 0 then goto L1a6c48;
  #L1a6c44.  v5:= 1I;
  #L1a6c46.  goto L1a6c4a;
  #L1a6c48.  v5:= 0I;
  #L1a6c4a.  if v5 == 0 then goto L1a6cf4;
  #L1a6c4e.  call temp:= `toMillis`(v10, v8) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1a6c54.  v8:= temp @kind wide;
  #L1a6c56.  v10:= 2147483647I;
  #L1a6c5c.  v5:= (`long`) v10 @kind i2l;
  #L1a6c5e.  v10:= lcmp(v8, v5);
  #L1a6c62.  if v10 > 0 then goto L1a6c6a;
  #L1a6c66.  v10:= 1I;
  #L1a6c68.  goto L1a6c6c;
  #L1a6c6a.  v10:= 0I;
  #L1a6c6c.  if v10 == 0 then goto L1a6cbe;
  #L1a6c70.  v10:= lcmp(v8, v0);
  #L1a6c74.  if v10 != 0 then goto L1a6c80;
  #L1a6c78.  if v4 > 0 then goto L1a6c7e;
  #L1a6c7c.  goto L1a6c80;
  #L1a6c7e.  v2:= 0I;
  #L1a6c80.  if v2 == 0 then goto L1a6c88;
  #L1a6c84.  v7:= (`int`) v8 @kind l2i;
  #L1a6c86.  return v7;
  #L1a6c88.  v8:= new `java.lang.StringBuilder`;
  #L1a6c8c.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a6c92.  call temp:= `append`(v8, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a6c98.  v7:= " too small." @kind object;
  #L1a6c9c.  call temp:= `append`(v8, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a6ca2.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a6ca8.  v7:= temp @kind object;
  #L1a6caa.  v8:= new `java.lang.IllegalArgumentException`;
  #L1a6cae.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a6cb4.  v7:= temp @kind object;
  #L1a6cb6.  call `<init>`(v8, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a6cbc.  throw v8;
  #L1a6cbe.  v8:= new `java.lang.StringBuilder`;
  #L1a6cc2.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a6cc8.  call temp:= `append`(v8, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a6cce.  v7:= " too large." @kind object;
  #L1a6cd2.  call temp:= `append`(v8, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a6cd8.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a6cde.  v7:= temp @kind object;
  #L1a6ce0.  v8:= new `java.lang.IllegalArgumentException`;
  #L1a6ce4.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a6cea.  v7:= temp @kind object;
  #L1a6cec.  call `<init>`(v8, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a6cf2.  throw v8;
  #L1a6cf4.  v7:= new `java.lang.IllegalStateException`;
  #L1a6cf8.  v8:= "unit == null" @kind object;
  #L1a6cfc.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a6d02.  v8:= temp @kind object;
  #L1a6d04.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a6d0a.  throw v7;
  #L1a6d0c.  v8:= new `java.lang.StringBuilder`;
  #L1a6d10.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a6d16.  call temp:= `append`(v8, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a6d1c.  v7:= " < 0" @kind object;
  #L1a6d20.  call temp:= `append`(v8, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a6d26.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a6d2c.  v7:= temp @kind object;
  #L1a6d2e.  v8:= new `java.lang.IllegalStateException`;
  #L1a6d32.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a6d38.  v7:= temp @kind object;
  #L1a6d3a.  call `<init>`(v8, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a6d40.  throw v8;
}
procedure `void` `checkOffsetAndCount`(`long` v5 , `long` v7 , `long` v9 ) @signature `Lokhttp3/internal/Util;.checkOffsetAndCount:(JJJ)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a7cf8.  v0:= v7 ^| v9 @kind long;
  #L1a7cfc.  v2:= 0L;
  #L1a7d00.  v4:= lcmp(v0, v2);
  #L1a7d04.  if v4 < 0 then goto L1a7d1c;
  #L1a7d08.  v0:= lcmp(v7, v5);
  #L1a7d0c.  if v0 > 0 then goto L1a7d1c;
  #L1a7d10.  v5:= v5 - v7 @kind long;
  #L1a7d12.  v7:= lcmp(v5, v9);
  #L1a7d16.  if v7 < 0 then goto L1a7d1c;
  #L1a7d1a.  return @kind void;
  #L1a7d1c.  v5:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L1a7d20.  call `<init>`(v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L1a7d26.  throw v5;
}
procedure `void` `closeQuietly`(`java.io.Closeable` v1 @kind object) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a7d38.  v0:= "$this$closeQuietly" @kind object;
  #L1a7d3c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7d42.  call `close`(v1) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L1a7d48.  return @kind void;
  #L1a7d4a.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1a7d4c.  throw v1;
  catch `java.lang.RuntimeException` @[L1a7d42..L1a7d48] goto L1a7d4a;
  catch `java.lang.Exception` @[L1a7d42..L1a7d48] goto L1a7d48;
}
procedure `void` `closeQuietly`(`java.net.ServerSocket` v1 @kind object) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/ServerSocket;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a7d70.  v0:= "$this$closeQuietly" @kind object;
  #L1a7d74.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7d7a.  call `close`(v1) @signature `Ljava/net/ServerSocket;.close:()V` @kind virtual;
  #L1a7d80.  return @kind void;
  #L1a7d82.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1a7d84.  throw v1;
  catch `java.lang.RuntimeException` @[L1a7d7a..L1a7d80] goto L1a7d82;
  catch `java.lang.Exception` @[L1a7d7a..L1a7d80] goto L1a7d80;
}
procedure `void` `closeQuietly`(`java.net.Socket` v2 @kind object) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1a7da8.  v0:= "$this$closeQuietly" @kind object;
  #L1a7dac.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7db2.  call `close`(v2) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #L1a7db8.  return @kind void;
  #L1a7dba.  v2:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L1a7dbc.  call temp:= `getMessage`(v2) @signature `Ljava/lang/RuntimeException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1a7dc2.  v0:= temp @kind object;
  #L1a7dc4.  v1:= "bio == null" @kind object;
  #L1a7dc8.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a7dce.  v0:= temp;
  #L1a7dd0.  if v0 == 0 then goto L1a7dd6;
  #L1a7dd4.  return @kind void;
  #L1a7dd6.  throw v2;
  #L1a7dd8.  v2:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L1a7dda.  throw v2;
  catch `java.lang.AssertionError` @[L1a7db2..L1a7db8] goto L1a7dd8;
  catch `java.lang.RuntimeException` @[L1a7db2..L1a7db8] goto L1a7dba;
  catch `java.lang.Exception` @[L1a7db2..L1a7db8] goto L1a7db8;
}
procedure `java.lang.String`[] `concat`(`java.lang.String`[] v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/Util;.concat:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a7504.  v0:= "$this$concat" @kind object;
  #L1a7508.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a750e.  v0:= "value" @kind object;
  #L1a7512.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7518.  v0:= length @variable v1;
  #L1a751a.  v0:= v0 + 1;
  #L1a751e.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L1a7524.  v1:= temp @kind object;
  #L1a7526.  v0:= "java.util.Arrays.copyOf(this, newSize)" @kind object;
  #L1a752a.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7530.  v1:= (`java.lang.String`[]) v1 @kind object;
  #L1a7534.  call temp:= `getLastIndex`(v1) @signature `Lkotlin/collections/ArraysKt;.getLastIndex:([Ljava/lang/Object;)I` @kind static;
  #L1a753a.  v0:= temp;
  #L1a753c.  v1[v0]:= v2 @kind object;
  #L1a7540.  if v1 == 0 then goto L1a7546;
  #L1a7544.  return v1 @kind object;
  #L1a7546.  v1:= new `java.lang.NullPointerException`;
  #L1a754a.  v2:= "null cannot be cast to non-null type kotlin.Array<kotlin.String>" @kind object;
  #L1a754e.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a7554.  throw v1;
}
procedure `int` `delimiterOffset`(`java.lang.String` v1 @kind object, `char` v2 , `int` v3 , `int` v4 ) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;CII)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a6dbc.  v0:= "$this$delimiterOffset" @kind object;
  #L1a6dc0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a6dc6.  if v3 >= v4 then goto L1a6dde;
  #L1a6dca.  call temp:= `charAt`(v1, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1a6dd0.  v0:= temp;
  #L1a6dd2.  if v0 != v2 then goto L1a6dd8;
  #L1a6dd6.  return v3;
  #L1a6dd8.  v3:= v3 + 1;
  #L1a6ddc.  goto L1a6dc6;
  #L1a6dde.  return v4;
}
procedure `int` `delimiterOffset`(`java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `int` v6 , `int` v7 ) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a6df0.  v0:= "$this$delimiterOffset" @kind object;
  #L1a6df4.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a6dfa.  v0:= "delimiters" @kind object;
  #L1a6dfe.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a6e04.  if v6 >= v7 then goto L1a6e2a;
  #L1a6e08.  call temp:= `charAt`(v4, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1a6e0e.  v0:= temp;
  #L1a6e10.  v1:= 0I;
  #L1a6e12.  v2:= 2I;
  #L1a6e14.  v3:= 0I;
  #L1a6e16.  call temp:= `contains$default`(v5, v0, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.contains$default:(Ljava/lang/CharSequence;CZILjava/lang/Object;)Z` @kind static;
  #L1a6e1c.  v0:= temp;
  #L1a6e1e.  if v0 == 0 then goto L1a6e24;
  #L1a6e22.  return v6;
  #L1a6e24.  v6:= v6 + 1;
  #L1a6e28.  goto L1a6e04;
  #L1a6e2a.  return v7;
}
procedure `int` `delimiterOffset$default`(`java.lang.String` v0 @kind object, `char` v1 , `int` v2 , `int` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lokhttp3/internal/Util;.delimiterOffset$default:(Ljava/lang/String;CIIILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a6d54.  v5:= v4 ^& 2;
  #L1a6d58.  if v5 == 0 then goto L1a6d5e;
  #L1a6d5c.  v2:= 0I;
  #L1a6d5e.  v4:= v4 ^& 4;
  #L1a6d62.  if v4 == 0 then goto L1a6d6e;
  #L1a6d66.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1a6d6c.  v3:= temp;
  #L1a6d6e.  call temp:= `delimiterOffset`(v0, v1, v2, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;CII)I` @kind static;
  #L1a6d74.  v0:= temp;
  #L1a6d76.  return v0;
}
procedure `int` `delimiterOffset$default`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lokhttp3/internal/Util;.delimiterOffset$default:(Ljava/lang/String;Ljava/lang/String;IIILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a6d88.  v5:= v4 ^& 2;
  #L1a6d8c.  if v5 == 0 then goto L1a6d92;
  #L1a6d90.  v2:= 0I;
  #L1a6d92.  v4:= v4 ^& 4;
  #L1a6d96.  if v4 == 0 then goto L1a6da2;
  #L1a6d9a.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1a6da0.  v3:= temp;
  #L1a6da2.  call temp:= `delimiterOffset`(v0, v1, v2, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;Ljava/lang/String;II)I` @kind static;
  #L1a6da8.  v0:= temp;
  #L1a6daa.  return v0;
}
procedure `boolean` `discard`(`okio.Source` v1 @kind object, `int` v2 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lokhttp3/internal/Util;.discard:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a68a0.  v0:= "$this$discard" @kind object;
  #L1a68a4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a68aa.  v0:= "timeUnit" @kind object;
  #L1a68ae.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a68b4.  call temp:= `skipAll`(v1, v2, v3) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L1a68ba.  v1:= temp;
  #L1a68bc.  goto L1a68c0;
  #L1a68be.  v1:= 0I;
  #L1a68c0.  return v1;
  catch `java.io.IOException` @[L1a68b4..L1a68bc] goto L1a68be;
}
procedure `java.util.List` `filterList`(`java.lang.Iterable` v3 @kind object, `kotlin.jvm.functions.Function1` v4 @kind object) @signature `Lokhttp3/internal/Util;.filterList:(Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1a7714.  v0:= "$this$filterList" @kind object;
  #L1a7718.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a771e.  v0:= "predicate" @kind object;
  #L1a7722.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7728.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L1a772e.  v0:= temp @kind object;
  #L1a7730.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1a7736.  v3:= temp @kind object;
  #L1a7738.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a773e.  v1:= temp;
  #L1a7740.  if v1 == 0 then goto L1a779e;
  #L1a7744.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a774a.  v1:= temp @kind object;
  #L1a774c.  call temp:= `invoke`(v4, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a7752.  v2:= temp @kind object;
  #L1a7754.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L1a7758.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L1a775e.  v2:= temp;
  #L1a7760.  if v2 == 0 then goto L1a7738;
  #L1a7764.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1a776a.  v2:= temp;
  #L1a776c.  if v2 == 0 then goto L1a777a;
  #L1a7770.  v0:= new `java.util.ArrayList`;
  #L1a7774.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1a777a.  if v0 == 0 then goto L1a778e;
  #L1a777e.  call temp:= `asMutableList`(v0) @signature `Lkotlin/jvm/internal/TypeIntrinsics;.asMutableList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1a7784.  v2:= temp @kind object;
  #L1a7786.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a778c.  goto L1a7738;
  #L1a778e.  v3:= new `java.lang.NullPointerException`;
  #L1a7792.  v4:= "null cannot be cast to non-null type kotlin.collections.MutableList<T>" @kind object;
  #L1a7796.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a779c.  throw v3;
  #L1a779e.  return v0 @kind object;
}
procedure `java.lang.String` `format`(`java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1a72b8.  v0:= "format" @kind object;
  #L1a72bc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a72c2.  v0:= "args" @kind object;
  #L1a72c6.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a72cc.  v0:= `@@kotlin.jvm.internal.StringCompanionObject.INSTANCE` @type ^`kotlin.jvm.internal.StringCompanionObject` @kind object;
  #L1a72d0.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L1a72d4.  v1:= length @variable v3;
  #L1a72d6.  call temp:= `copyOf`(v3, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L1a72dc.  v3:= temp @kind object;
  #L1a72de.  v1:= length @variable v3;
  #L1a72e0.  call temp:= `copyOf`(v3, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L1a72e6.  v3:= temp @kind object;
  #L1a72e8.  call temp:= `format`(v0, v2, v3) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a72ee.  v2:= temp @kind object;
  #L1a72f0.  v3:= "java.lang.String.format(locale, format, *args)" @kind object;
  #L1a72f4.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a72fa.  return v2 @kind object;
}
procedure `boolean` `hasIntersection`(`java.lang.String`[] v8 @kind object, `java.lang.String`[] v9 @kind object, `java.util.Comparator` v10 @kind object) @signature `Lokhttp3/internal/Util;.hasIntersection:([Ljava/lang/String;[Ljava/lang/String;Ljava/util/Comparator;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1a68e4.  v0:= "$this$hasIntersection" @kind object;
  #L1a68e8.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a68ee.  v0:= "comparator" @kind object;
  #L1a68f2.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a68f8.  v0:= length @variable v8;
  #L1a68fa.  v1:= 1I;
  #L1a68fc.  v2:= 0I;
  #L1a68fe.  if v0 != 0 then goto L1a6906;
  #L1a6902.  v0:= 1I;
  #L1a6904.  goto L1a6908;
  #L1a6906.  v0:= 0I;
  #L1a6908.  if v0 != 0 then goto L1a6954;
  #L1a690c.  if v9 == 0 then goto L1a6954;
  #L1a6910.  v0:= length @variable v9;
  #L1a6912.  if v0 != 0 then goto L1a691a;
  #L1a6916.  v0:= 1I;
  #L1a6918.  goto L1a691c;
  #L1a691a.  v0:= 0I;
  #L1a691c.  if v0 == 0 then goto L1a6922;
  #L1a6920.  goto L1a6954;
  #L1a6922.  v0:= length @variable v8;
  #L1a6924.  v3:= 0I;
  #L1a6926.  if v3 >= v0 then goto L1a6954;
  #L1a692a.  v4:= v8[v3] @kind object;
  #L1a692e.  v5:= length @variable v9;
  #L1a6930.  v6:= 0I;
  #L1a6932.  if v6 >= v5 then goto L1a694e;
  #L1a6936.  v7:= v9[v6] @kind object;
  #L1a693a.  call temp:= `compare`(v10, v4, v7) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L1a6940.  v7:= temp;
  #L1a6942.  if v7 != 0 then goto L1a6948;
  #L1a6946.  return v1;
  #L1a6948.  v6:= v6 + 1;
  #L1a694c.  goto L1a6932;
  #L1a694e.  v3:= v3 + 1;
  #L1a6952.  goto L1a6926;
  #L1a6954.  return v2;
}
procedure `long` `headersContentLength`(`okhttp3.Response` v2 @kind object) @signature `Lokhttp3/internal/Util;.headersContentLength:(Lokhttp3/Response;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1a794c.  v0:= "$this$headersContentLength" @kind object;
  #L1a7950.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7956.  call temp:= `headers`(v2) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1a795c.  v2:= temp @kind object;
  #L1a795e.  v0:= "Content-Length" @kind object;
  #L1a7962.  call temp:= `get`(v2, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1a7968.  v2:= temp @kind object;
  #L1a796a.  v0:= -1L;
  #L1a796e.  if v2 == 0 then goto L1a797a;
  #L1a7972.  call temp:= `toLongOrDefault`(v2, v0) @signature `Lokhttp3/internal/Util;.toLongOrDefault:(Ljava/lang/String;J)J` @kind static;
  #L1a7978.  v0:= temp @kind wide;
  #L1a797a.  return v0 @kind wide;
}
procedure `void` `ignoreIoExceptions`(`kotlin.jvm.functions.Function0` v1 @kind object) @signature `Lokhttp3/internal/Util;.ignoreIoExceptions:(Lkotlin/jvm/functions/Function0;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a7e00.  v0:= "block" @kind object;
  #L1a7e04.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7e0a.  call temp:= `invoke`(v1) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L1a7e10.  return @kind void;
  catch `java.io.IOException` @[L1a7e0a..L1a7e10] goto L1a7e10;
}
procedure `java.util.List` `immutableListOf`(`java.lang.Object`[] v1 @kind object) @signature `Lokhttp3/internal/Util;.immutableListOf:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a77b0.  v0:= "elements" @kind object;
  #L1a77b4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a77ba.  call temp:= `clone`(v1) @signature `Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1a77c0.  v1:= temp @kind object;
  #L1a77c2.  v1:= (`java.lang.Object`[]) v1 @kind object;
  #L1a77c6.  v0:= length @variable v1;
  #L1a77c8.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L1a77ce.  v1:= temp @kind object;
  #L1a77d0.  call temp:= `listOf`(v1) @signature `Lkotlin/collections/CollectionsKt;.listOf:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1a77d6.  v1:= temp @kind object;
  #L1a77d8.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1a77de.  v1:= temp @kind object;
  #L1a77e0.  v0:= "Collections.unmodifiable…istOf(*elements.clone()))" @kind object;
  #L1a77e4.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a77ea.  return v1 @kind object;
}
procedure `int` `indexOf`(`java.lang.String`[] v4 @kind object, `java.lang.String` v5 @kind object, `java.util.Comparator` v6 @kind object) @signature `Lokhttp3/internal/Util;.indexOf:([Ljava/lang/String;Ljava/lang/String;Ljava/util/Comparator;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a6e3c.  v0:= "$this$indexOf" @kind object;
  #L1a6e40.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a6e46.  v0:= "value" @kind object;
  #L1a6e4a.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a6e50.  v0:= "comparator" @kind object;
  #L1a6e54.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a6e5a.  v0:= length @variable v4;
  #L1a6e5c.  v1:= 0I;
  #L1a6e5e.  v2:= 0I;
  #L1a6e60.  if v2 >= v0 then goto L1a6e86;
  #L1a6e64.  v3:= v4[v2] @kind object;
  #L1a6e68.  call temp:= `compare`(v6, v3, v5) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L1a6e6e.  v3:= temp;
  #L1a6e70.  if v3 != 0 then goto L1a6e78;
  #L1a6e74.  v3:= 1I;
  #L1a6e76.  goto L1a6e7a;
  #L1a6e78.  v3:= 0I;
  #L1a6e7a.  if v3 == 0 then goto L1a6e80;
  #L1a6e7e.  goto L1a6e88;
  #L1a6e80.  v2:= v2 + 1;
  #L1a6e84.  goto L1a6e60;
  #L1a6e86.  v2:= -1I;
  #L1a6e88.  return v2;
}
procedure `int` `indexOfControlOrNonAscii`(`java.lang.String` v4 @kind object) @signature `Lokhttp3/internal/Util;.indexOfControlOrNonAscii:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a6e9c.  v0:= "$this$indexOfControlOrNonAscii" @kind object;
  #L1a6ea0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a6ea6.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1a6eac.  v0:= temp;
  #L1a6eae.  v1:= 0I;
  #L1a6eb0.  if v1 >= v0 then goto L1a6ee6;
  #L1a6eb4.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1a6eba.  v2:= temp;
  #L1a6ebc.  v3:= 31I;
  #L1a6ec0.  call temp:= `compare`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L1a6ec6.  v3:= temp;
  #L1a6ec8.  if v3 <= 0 then goto L1a6ee4;
  #L1a6ecc.  v3:= 127I;
  #L1a6ed0.  call temp:= `compare`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L1a6ed6.  v2:= temp;
  #L1a6ed8.  if v2 < 0 then goto L1a6ede;
  #L1a6edc.  goto L1a6ee4;
  #L1a6ede.  v1:= v1 + 1;
  #L1a6ee2.  goto L1a6eb0;
  #L1a6ee4.  return v1;
  #L1a6ee6.  v4:= -1I;
  #L1a6ee8.  return v4;
}
procedure `int` `indexOfFirstNonAsciiWhitespace`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokhttp3/internal/Util;.indexOfFirstNonAsciiWhitespace:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1a6f30.  v0:= "$this$indexOfFirstNonAsciiWhitespace" @kind object;
  #L1a6f34.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a6f3a.  if v3 >= v4 then goto L1a6f76;
  #L1a6f3e.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1a6f44.  v0:= temp;
  #L1a6f46.  v1:= 9I;
  #L1a6f4a.  if v0 == v1 then goto L1a6f70;
  #L1a6f4e.  v1:= 10I;
  #L1a6f52.  if v0 == v1 then goto L1a6f70;
  #L1a6f56.  v1:= 12I;
  #L1a6f5a.  if v0 == v1 then goto L1a6f70;
  #L1a6f5e.  v1:= 13I;
  #L1a6f62.  if v0 == v1 then goto L1a6f70;
  #L1a6f66.  v1:= 32I;
  #L1a6f6a.  if v0 == v1 then goto L1a6f70;
  #L1a6f6e.  return v3;
  #L1a6f70.  v3:= v3 + 1;
  #L1a6f74.  goto L1a6f3a;
  #L1a6f76.  return v4;
}
procedure `int` `indexOfFirstNonAsciiWhitespace$default`(`java.lang.String` v0 @kind object, `int` v1 , `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokhttp3/internal/Util;.indexOfFirstNonAsciiWhitespace$default:(Ljava/lang/String;IIILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a6efc.  v4:= v3 ^& 1;
  #L1a6f00.  if v4 == 0 then goto L1a6f06;
  #L1a6f04.  v1:= 0I;
  #L1a6f06.  v3:= v3 ^& 2;
  #L1a6f0a.  if v3 == 0 then goto L1a6f16;
  #L1a6f0e.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1a6f14.  v2:= temp;
  #L1a6f16.  call temp:= `indexOfFirstNonAsciiWhitespace`(v0, v1, v2) @signature `Lokhttp3/internal/Util;.indexOfFirstNonAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L1a6f1c.  v0:= temp;
  #L1a6f1e.  return v0;
}
procedure `int` `indexOfLastNonAsciiWhitespace`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokhttp3/internal/Util;.indexOfLastNonAsciiWhitespace:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1a6fbc.  v0:= "$this$indexOfLastNonAsciiWhitespace" @kind object;
  #L1a6fc0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a6fc6.  v4:= v4 + -1;
  #L1a6fca.  if v4 < v3 then goto L1a700e;
  #L1a6fce.  call temp:= `charAt`(v2, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1a6fd4.  v0:= temp;
  #L1a6fd6.  v1:= 9I;
  #L1a6fda.  if v0 == v1 then goto L1a7004;
  #L1a6fde.  v1:= 10I;
  #L1a6fe2.  if v0 == v1 then goto L1a7004;
  #L1a6fe6.  v1:= 12I;
  #L1a6fea.  if v0 == v1 then goto L1a7004;
  #L1a6fee.  v1:= 13I;
  #L1a6ff2.  if v0 == v1 then goto L1a7004;
  #L1a6ff6.  v1:= 32I;
  #L1a6ffa.  if v0 == v1 then goto L1a7004;
  #L1a6ffe.  v4:= v4 + 1;
  #L1a7002.  return v4;
  #L1a7004.  if v4 == v3 then goto L1a700e;
  #L1a7008.  v4:= v4 + -1;
  #L1a700c.  goto L1a6fce;
  #L1a700e.  return v3;
}
procedure `int` `indexOfLastNonAsciiWhitespace$default`(`java.lang.String` v0 @kind object, `int` v1 , `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokhttp3/internal/Util;.indexOfLastNonAsciiWhitespace$default:(Ljava/lang/String;IIILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a6f88.  v4:= v3 ^& 1;
  #L1a6f8c.  if v4 == 0 then goto L1a6f92;
  #L1a6f90.  v1:= 0I;
  #L1a6f92.  v3:= v3 ^& 2;
  #L1a6f96.  if v3 == 0 then goto L1a6fa2;
  #L1a6f9a.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1a6fa0.  v2:= temp;
  #L1a6fa2.  call temp:= `indexOfLastNonAsciiWhitespace`(v0, v1, v2) @signature `Lokhttp3/internal/Util;.indexOfLastNonAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L1a6fa8.  v0:= temp;
  #L1a6faa.  return v0;
}
procedure `int` `indexOfNonWhitespace`(`java.lang.String` v3 @kind object, `int` v4 ) @signature `Lokhttp3/internal/Util;.indexOfNonWhitespace:(Ljava/lang/String;I)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1a7044.  v0:= "$this$indexOfNonWhitespace" @kind object;
  #L1a7048.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a704e.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1a7054.  v0:= temp;
  #L1a7056.  if v4 >= v0 then goto L1a707a;
  #L1a705a.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1a7060.  v1:= temp;
  #L1a7062.  v2:= 32I;
  #L1a7066.  if v1 == v2 then goto L1a7074;
  #L1a706a.  v2:= 9I;
  #L1a706e.  if v1 == v2 then goto L1a7074;
  #L1a7072.  return v4;
  #L1a7074.  v4:= v4 + 1;
  #L1a7078.  goto L1a7056;
  #L1a707a.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1a7080.  v3:= temp;
  #L1a7082.  return v3;
}
procedure `int` `indexOfNonWhitespace$default`(`java.lang.String` v0 @kind object, `int` v1 , `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lokhttp3/internal/Util;.indexOfNonWhitespace$default:(Ljava/lang/String;IILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a7020.  v2:= v2 ^& 1;
  #L1a7024.  if v2 == 0 then goto L1a702a;
  #L1a7028.  v1:= 0I;
  #L1a702a.  call temp:= `indexOfNonWhitespace`(v0, v1) @signature `Lokhttp3/internal/Util;.indexOfNonWhitespace:(Ljava/lang/String;I)I` @kind static;
  #L1a7030.  v0:= temp;
  #L1a7032.  return v0;
}
procedure `java.lang.String`[] `intersect`(`java.lang.String`[] v8 @kind object, `java.lang.String`[] v9 @kind object, `java.util.Comparator` v10 @kind object) @signature `Lokhttp3/internal/Util;.intersect:([Ljava/lang/String;[Ljava/lang/String;Ljava/util/Comparator;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1a7568.  v0:= "$this$intersect" @kind object;
  #L1a756c.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7572.  v0:= "other" @kind object;
  #L1a7576.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a757c.  v0:= "comparator" @kind object;
  #L1a7580.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7586.  v0:= new `java.util.ArrayList`;
  #L1a758a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1a7590.  v1:= length @variable v8;
  #L1a7592.  v2:= 0I;
  #L1a7594.  v3:= 0I;
  #L1a7596.  if v3 >= v1 then goto L1a75ca;
  #L1a759a.  v4:= v8[v3] @kind object;
  #L1a759e.  v5:= length @variable v9;
  #L1a75a0.  v6:= 0I;
  #L1a75a2.  if v6 >= v5 then goto L1a75c4;
  #L1a75a6.  v7:= v9[v6] @kind object;
  #L1a75aa.  call temp:= `compare`(v10, v4, v7) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L1a75b0.  v7:= temp;
  #L1a75b2.  if v7 != 0 then goto L1a75be;
  #L1a75b6.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a75bc.  goto L1a75c4;
  #L1a75be.  v6:= v6 + 1;
  #L1a75c2.  goto L1a75a2;
  #L1a75c4.  v3:= v3 + 1;
  #L1a75c8.  goto L1a7596;
  #L1a75ca.  v8:= new `java.lang.String`[v2];
  #L1a75ce.  call temp:= `toArray`(v0, v8) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1a75d4.  v8:= temp @kind object;
  #L1a75d6.  if v8 == 0 then goto L1a75e0;
  #L1a75da.  v8:= (`java.lang.String`[]) v8 @kind object;
  #L1a75de.  return v8 @kind object;
  #L1a75e0.  v8:= new `java.lang.NullPointerException`;
  #L1a75e4.  v9:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L1a75e8.  call `<init>`(v8, v9) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a75ee.  throw v8;
}
procedure `boolean` `isCivilized`(`okhttp3.internal.io.FileSystem` v3 @kind object, `java.io.File` v4 @kind object) @signature `Lokhttp3/internal/Util;.isCivilized:(Lokhttp3/internal/io/FileSystem;Ljava/io/File;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1a6968.  v0:= "$this$isCivilized" @kind object;
  #L1a696c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a6972.  v0:= "file" @kind object;
  #L1a6976.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a697c.  call temp:= `sink`(v3, v4) @signature `Lokhttp3/internal/io/FileSystem;.sink:(Ljava/io/File;)Lokio/Sink;` @kind interface;
  #L1a6982.  v0:= temp @kind object;
  #L1a6984.  v1:= 0I;
  #L1a6986.  call `delete`(v3, v4) @signature `Lokhttp3/internal/io/FileSystem;.delete:(Ljava/io/File;)V` @kind interface;
  #L1a698c.  v3:= 1I;
  #L1a698e.  call `closeFinally`(v0, v1) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L1a6994.  return v3;
  #L1a6996.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a6998.  goto L1a69ae;
  #L1a699a.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1a699e.  call `closeFinally`(v0, v1) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L1a69a4.  call `delete`(v3, v4) @signature `Lokhttp3/internal/io/FileSystem;.delete:(Ljava/io/File;)V` @kind interface;
  #L1a69aa.  v3:= 0I;
  #L1a69ac.  return v3;
  #L1a69ae.  throw v3;
  #L1a69b0.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a69b2.  call `closeFinally`(v0, v3) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L1a69b8.  throw v4;
  catch `java.io.IOException` @[L1a6986..L1a698c] goto L1a699a;
  catch `java.lang.Throwable` @[L1a6986..L1a698c] goto L1a6996;
  catch `java.lang.Throwable` @[L1a699a..L1a699e] goto L1a6996;
  catch `java.lang.Throwable` @[L1a69ae..L1a69b0] goto L1a69b0;
}
procedure `boolean` `isHealthy`(`java.net.Socket` v2 @kind object, `okio.BufferedSource` v3 @kind object) @signature `Lokhttp3/internal/Util;.isHealthy:(Ljava/net/Socket;Lokio/BufferedSource;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1a69f0.  v0:= "$this$isHealthy" @kind object;
  #L1a69f4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a69fa.  v0:= "source" @kind object;
  #L1a69fe.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a6a04.  v0:= 1I;
  #L1a6a06.  call temp:= `getSoTimeout`(v2) @signature `Ljava/net/Socket;.getSoTimeout:()I` @kind virtual;
  #L1a6a0c.  v1:= temp;
  #L1a6a0e.  call `setSoTimeout`(v2, v0) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L1a6a14.  call temp:= `exhausted`(v3) @signature `Lokio/BufferedSource;.exhausted:()Z` @kind interface;
  #L1a6a1a.  v3:= temp;
  #L1a6a1c.  v3:= v3 ^~ v0 @kind int;
  #L1a6a1e.  call `setSoTimeout`(v2, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L1a6a24.  v0:= v3;
  #L1a6a26.  goto L1a6a34;
  #L1a6a28.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a6a2a.  call `setSoTimeout`(v2, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L1a6a30.  throw v3;
  #L1a6a32.  v0:= 0I;
  #L1a6a34.  return v0;
  catch `java.net.SocketTimeoutException` @[L1a6a06..L1a6a0e] goto L1a6a34;
  catch `java.io.IOException` @[L1a6a06..L1a6a0e] goto L1a6a32;
  catch `java.lang.Throwable` @[L1a6a0e..L1a6a1c] goto L1a6a28;
  catch `java.net.SocketTimeoutException` @[L1a6a1e..L1a6a32] goto L1a6a34;
  catch `java.io.IOException` @[L1a6a1e..L1a6a32] goto L1a6a32;
}
procedure `boolean` `isSensitiveHeader`(`java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/Util;.isSensitiveHeader:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1a6a6c.  v0:= "name" @kind object;
  #L1a6a70.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a6a76.  v0:= "Authorization" @kind object;
  #L1a6a7a.  v1:= 1I;
  #L1a6a7c.  call temp:= `equals`(v2, v0, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a6a82.  v0:= temp;
  #L1a6a84.  if v0 != 0 then goto L1a6abc;
  #L1a6a88.  v0:= "Cookie" @kind object;
  #L1a6a8c.  call temp:= `equals`(v2, v0, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a6a92.  v0:= temp;
  #L1a6a94.  if v0 != 0 then goto L1a6abc;
  #L1a6a98.  v0:= "Proxy-Authorization" @kind object;
  #L1a6a9c.  call temp:= `equals`(v2, v0, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a6aa2.  v0:= temp;
  #L1a6aa4.  if v0 != 0 then goto L1a6abc;
  #L1a6aa8.  v0:= "Set-Cookie" @kind object;
  #L1a6aac.  call temp:= `equals`(v2, v0, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a6ab2.  v2:= temp;
  #L1a6ab4.  if v2 == 0 then goto L1a6aba;
  #L1a6ab8.  goto L1a6abc;
  #L1a6aba.  v1:= 0I;
  #L1a6abc.  return v1;
}
procedure `void` `notify`(`java.lang.Object` v1 @kind object) @signature `Lokhttp3/internal/Util;.notify:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a7e34.  v0:= "$this$notify" @kind object;
  #L1a7e38.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7e3e.  call `notify`(v1) @signature `Ljava/lang/Object;.notify:()V` @kind virtual;
  #L1a7e44.  return @kind void;
}
procedure `void` `notifyAll`(`java.lang.Object` v1 @kind object) @signature `Lokhttp3/internal/Util;.notifyAll:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a7e58.  v0:= "$this$notifyAll" @kind object;
  #L1a7e5c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7e62.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L1a7e68.  return @kind void;
}
procedure `int` `parseHexDigit`(`char` v2 ) @signature `Lokhttp3/internal/Util;.parseHexDigit:(C)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1a7094.  v0:= 48I;
  #L1a7098.  if v0 <= v2 then goto L1a709e;
  #L1a709c.  goto L1a70aa;
  #L1a709e.  v1:= 57I;
  #L1a70a2.  if v1 < v2 then goto L1a70aa;
  #L1a70a6.  v2:= v2 - v0 @kind int;
  #L1a70a8.  goto L1a70da;
  #L1a70aa.  v0:= 102I;
  #L1a70ae.  v1:= 97I;
  #L1a70b2.  if v1 <= v2 then goto L1a70b8;
  #L1a70b6.  goto L1a70c4;
  #L1a70b8.  if v0 < v2 then goto L1a70c4;
  #L1a70bc.  v2:= v2 - v1 @kind int;
  #L1a70be.  v2:= v2 + 10;
  #L1a70c2.  goto L1a70da;
  #L1a70c4.  v0:= 70I;
  #L1a70c8.  v1:= 65I;
  #L1a70cc.  if v1 <= v2 then goto L1a70d2;
  #L1a70d0.  goto L1a70d8;
  #L1a70d2.  if v0 < v2 then goto L1a70d8;
  #L1a70d6.  goto L1a70bc;
  #L1a70d8.  v2:= -1I;
  #L1a70da.  return v2;
}
procedure `java.lang.String` `peerName`(`java.net.Socket` v1 @kind object) @signature `Lokhttp3/internal/Util;.peerName:(Ljava/net/Socket;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a730c.  v0:= "$this$peerName" @kind object;
  #L1a7310.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7316.  call temp:= `getRemoteSocketAddress`(v1) @signature `Ljava/net/Socket;.getRemoteSocketAddress:()Ljava/net/SocketAddress;` @kind virtual;
  #L1a731c.  v1:= temp @kind object;
  #L1a731e.  v0:= instanceof @variable v1 @type ^`java.net.InetSocketAddress` @kind boolean;
  #L1a7322.  if v0 == 0 then goto L1a733e;
  #L1a7326.  v1:= (`java.net.InetSocketAddress`) v1 @kind object;
  #L1a732a.  call temp:= `getHostName`(v1) @signature `Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L1a7330.  v1:= temp @kind object;
  #L1a7332.  v0:= "address.hostName" @kind object;
  #L1a7336.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a733c.  goto L1a7346;
  #L1a733e.  call temp:= `toString`(v1) @signature `Ljava/net/SocketAddress;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a7344.  v1:= temp @kind object;
  #L1a7346.  return v1 @kind object;
}
procedure `java.nio.charset.Charset` `readBomAsCharset`(`okio.BufferedSource` v1 @kind object, `java.nio.charset.Charset` v2 @kind object) @signature `Lokhttp3/internal/Util;.readBomAsCharset:(Lokio/BufferedSource;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a7668.  v0:= "$this$readBomAsCharset" @kind object;
  #L1a766c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7672.  v0:= "default" @kind object;
  #L1a7676.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a767c.  v0:= `@@okhttp3.internal.Util.a` @type ^`okio.Options` @kind object;
  #L1a7680.  call temp:= `select`(v1, v0) @signature `Lokio/BufferedSource;.select:(Lokio/Options;)I` @kind interface;
  #L1a7686.  v1:= temp;
  #L1a7688.  v0:= -1I;
  #L1a768a.  if v1 == v0 then goto L1a7700;
  #L1a768e.  if v1 == 0 then goto L1a76f2;
  #L1a7692.  v2:= 1I;
  #L1a7694.  if v1 == v2 then goto L1a76e2;
  #L1a7698.  v2:= 2I;
  #L1a769a.  if v1 == v2 then goto L1a76d2;
  #L1a769e.  v2:= 3I;
  #L1a76a0.  if v1 == v2 then goto L1a76c4;
  #L1a76a4.  v2:= 4I;
  #L1a76a6.  if v1 != v2 then goto L1a76b8;
  #L1a76aa.  v1:= `@@kotlin.text.Charsets.INSTANCE` @type ^`kotlin.text.Charsets` @kind object;
  #L1a76ae.  call temp:= `UTF32_LE`(v1) @signature `Lkotlin/text/Charsets;.UTF32_LE:()Ljava/nio/charset/Charset;` @kind virtual;
  #L1a76b4.  v2:= temp @kind object;
  #L1a76b6.  goto L1a7700;
  #L1a76b8.  v1:= new `java.lang.AssertionError`;
  #L1a76bc.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1a76c2.  throw v1;
  #L1a76c4.  v1:= `@@kotlin.text.Charsets.INSTANCE` @type ^`kotlin.text.Charsets` @kind object;
  #L1a76c8.  call temp:= `UTF32_BE`(v1) @signature `Lkotlin/text/Charsets;.UTF32_BE:()Ljava/nio/charset/Charset;` @kind virtual;
  #L1a76ce.  v2:= temp @kind object;
  #L1a76d0.  goto L1a7700;
  #L1a76d2.  v2:= `@@java.nio.charset.StandardCharsets.UTF_16LE` @type ^`java.nio.charset.Charset` @kind object;
  #L1a76d6.  v1:= "UTF_16LE" @kind object;
  #L1a76da.  call `checkNotNullExpressionValue`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a76e0.  goto L1a7700;
  #L1a76e2.  v2:= `@@java.nio.charset.StandardCharsets.UTF_16BE` @type ^`java.nio.charset.Charset` @kind object;
  #L1a76e6.  v1:= "UTF_16BE" @kind object;
  #L1a76ea.  call `checkNotNullExpressionValue`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a76f0.  goto L1a7700;
  #L1a76f2.  v2:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L1a76f6.  v1:= "UTF_8" @kind object;
  #L1a76fa.  call `checkNotNullExpressionValue`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7700.  return v2 @kind object;
}
procedure `java.lang.Object` `readFieldOrNull`(`java.lang.Object` v6 @kind object, `java.lang.Class` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lokhttp3/internal/Util;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1a71e4.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L1a71e8.  v1:= "instance" @kind object;
  #L1a71ec.  call `checkNotNullParameter`(v6, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a71f2.  v1:= "fieldType" @kind object;
  #L1a71f6.  call `checkNotNullParameter`(v7, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a71fc.  v1:= "fieldName" @kind object;
  #L1a7200.  call `checkNotNullParameter`(v8, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7206.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1a720c.  v1:= temp @kind object;
  #L1a720e.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a7214.  v2:= temp;
  #L1a7216.  v3:= 1I;
  #L1a7218.  v2:= v2 ^~ v3 @kind int;
  #L1a721a.  v4:= 0I;
  #L1a721c.  if v2 == 0 then goto L1a726c;
  #L1a7220.  call temp:= `getDeclaredField`(v1, v8) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L1a7226.  v2:= temp @kind object;
  #L1a7228.  v5:= "field" @kind object;
  #L1a722c.  call `checkNotNullExpressionValue`(v2, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7232.  call `setAccessible`(v2, v3) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L1a7238.  call temp:= `get`(v2, v6) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a723e.  v2:= temp @kind object;
  #L1a7240.  call temp:= `isInstance`(v7, v2) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a7246.  v3:= temp;
  #L1a7248.  if v3 != 0 then goto L1a724e;
  #L1a724c.  goto L1a7256;
  #L1a724e.  call temp:= `cast`(v7, v2) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a7254.  v4:= temp @kind object;
  #L1a7256.  return v4 @kind object;
  #L1a7258.  call temp:= `getSuperclass`(v1) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L1a725e.  v1:= temp @kind object;
  #L1a7260.  v2:= "c.superclass" @kind object;
  #L1a7264.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a726a.  goto L1a720e;
  #L1a726c.  v1:= "delegate" @kind object;
  #L1a7270.  call temp:= `areEqual`(v8, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a7276.  v2:= temp;
  #L1a7278.  v2:= v2 ^~ v3 @kind int;
  #L1a727a.  if v2 == 0 then goto L1a7294;
  #L1a727e.  call temp:= `readFieldOrNull`(v6, v0, v1) @signature `Lokhttp3/internal/Util;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1a7284.  v6:= temp @kind object;
  #L1a7286.  if v6 == 0 then goto L1a7294;
  #L1a728a.  call temp:= `readFieldOrNull`(v6, v7, v8) @signature `Lokhttp3/internal/Util;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1a7290.  v6:= temp @kind object;
  #L1a7292.  return v6 @kind object;
  #L1a7294.  return v4 @kind object;
  catch `java.lang.NoSuchFieldException` @[L1a7220..L1a7256] goto L1a7258;
}
procedure `int` `readMedium`(`okio.BufferedSource` v3 @kind object) @signature `Lokhttp3/internal/Util;.readMedium:(Lokio/BufferedSource;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1a70ec.  v0:= "$this$readMedium" @kind object;
  #L1a70f0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a70f6.  call temp:= `readByte`(v3) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1a70fc.  v0:= temp;
  #L1a70fe.  v1:= 255I;
  #L1a7102.  call temp:= `and`(v0, v1) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1a7108.  v0:= temp;
  #L1a710a.  v0:= v0 ^< 16;
  #L1a710e.  call temp:= `readByte`(v3) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1a7114.  v2:= temp;
  #L1a7116.  call temp:= `and`(v2, v1) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1a711c.  v2:= temp;
  #L1a711e.  v2:= v2 ^< 8;
  #L1a7122.  v0:= v0 ^| v2 @kind int;
  #L1a7124.  call temp:= `readByte`(v3) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L1a712a.  v3:= temp;
  #L1a712c.  call temp:= `and`(v3, v1) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1a7132.  v3:= temp;
  #L1a7134.  v3:= v3 ^| v0 @kind int;
  #L1a7136.  return v3;
}
procedure `int` `skipAll`(`okio.Buffer` v3 @kind object, `byte` v4 ) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Buffer;B)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1a7148.  v0:= "$this$skipAll" @kind object;
  #L1a714c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7152.  v0:= 0I;
  #L1a7154.  call temp:= `exhausted`(v3) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L1a715a.  v1:= temp;
  #L1a715c.  if v1 != 0 then goto L1a717c;
  #L1a7160.  v1:= 0L;
  #L1a7164.  call temp:= `getByte`(v3, v1) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L1a716a.  v1:= temp;
  #L1a716c.  if v1 != v4 then goto L1a717c;
  #L1a7170.  v0:= v0 + 1;
  #L1a7174.  call temp:= `readByte`(v3) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L1a717a.  goto L1a7154;
  #L1a717c.  return v0;
}
procedure `boolean` `skipAll`(`okio.Source` v11 @kind object, `int` v12 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1a6ad0.  v0:= "$this$skipAll" @kind object;
  #L1a6ad4.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a6ada.  v0:= "timeUnit" @kind object;
  #L1a6ade.  call `checkNotNullParameter`(v13, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a6ae4.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L1a6aea.  v0:= temp @kind wide;
  #L1a6aec.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L1a6af2.  v2:= temp @kind object;
  #L1a6af4.  call temp:= `hasDeadline`(v2) @signature `Lokio/Timeout;.hasDeadline:()Z` @kind virtual;
  #L1a6afa.  v2:= temp;
  #L1a6afc.  v3:= 9223372036854775807L;
  #L1a6b06.  if v2 == 0 then goto L1a6b1e;
  #L1a6b0a.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L1a6b10.  v2:= temp @kind object;
  #L1a6b12.  call temp:= `deadlineNanoTime`(v2) @signature `Lokio/Timeout;.deadlineNanoTime:()J` @kind virtual;
  #L1a6b18.  v5:= temp @kind wide;
  #L1a6b1a.  v5:= v5 - v0 @kind long;
  #L1a6b1c.  goto L1a6b20;
  #L1a6b1e.  v5:= v3 @kind wide;
  #L1a6b20.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L1a6b26.  v2:= temp @kind object;
  #L1a6b28.  v7:= (`long`) v12 @kind i2l;
  #L1a6b2a.  call temp:= `toNanos`(v13, v7) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L1a6b30.  v12:= temp @kind wide;
  #L1a6b32.  call temp:= `min`(v5, v12) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1a6b38.  v12:= temp @kind wide;
  #L1a6b3a.  v12:= v12 + v0 @kind long;
  #L1a6b3c.  call temp:= `deadlineNanoTime`(v2, v12) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1a6b42.  v12:= new `okio.Buffer`;
  #L1a6b46.  call `<init>`(v12) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1a6b4c.  v7:= 8192L;
  #L1a6b50.  call temp:= `read`(v11, v12, v7) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L1a6b56.  v7:= temp @kind wide;
  #L1a6b58.  v9:= -1L;
  #L1a6b5c.  v13:= lcmp(v7, v9);
  #L1a6b60.  if v13 == 0 then goto L1a6b6c;
  #L1a6b64.  call `clear`(v12) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L1a6b6a.  goto L1a6b4c;
  #L1a6b6c.  v12:= 1I;
  #L1a6b6e.  v13:= lcmp(v5, v3);
  #L1a6b72.  if v13 != 0 then goto L1a6b86;
  #L1a6b76.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L1a6b7c.  v11:= temp @kind object;
  #L1a6b7e.  call temp:= `clearDeadline`(v11) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L1a6b84.  goto L1a6bd2;
  #L1a6b86.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L1a6b8c.  v11:= temp @kind object;
  #L1a6b8e.  v0:= v0 + v5 @kind long;
  #L1a6b90.  call temp:= `deadlineNanoTime`(v11, v0) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1a6b96.  goto L1a6bd2;
  #L1a6b98.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a6b9a.  v13:= lcmp(v5, v3);
  #L1a6b9e.  if v13 != 0 then goto L1a6bb2;
  #L1a6ba2.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L1a6ba8.  v11:= temp @kind object;
  #L1a6baa.  call temp:= `clearDeadline`(v11) @signature `Lokio/Timeout;.clearDeadline:()Lokio/Timeout;` @kind virtual;
  #L1a6bb0.  goto L1a6bc2;
  #L1a6bb2.  call temp:= `timeout`(v11) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L1a6bb8.  v11:= temp @kind object;
  #L1a6bba.  v0:= v0 + v5 @kind long;
  #L1a6bbc.  call temp:= `deadlineNanoTime`(v11, v0) @signature `Lokio/Timeout;.deadlineNanoTime:(J)Lokio/Timeout;` @kind virtual;
  #L1a6bc2.  throw v12;
  #L1a6bc4.  
  #L1a6bc6.  v12:= 0I;
  #L1a6bc8.  v13:= lcmp(v5, v3);
  #L1a6bcc.  if v13 != 0 then goto L1a6b86;
  #L1a6bd0.  goto L1a6b76;
  #L1a6bd2.  return v12;
  catch `java.io.InterruptedIOException` @[L1a6b42..L1a6b6a] goto L1a6bc4;
  catch `java.lang.Throwable` @[L1a6b42..L1a6b6a] goto L1a6b98;
}
procedure `java.util.concurrent.ThreadFactory` `threadFactory`(`java.lang.String` v1 @kind object, `boolean` v2 ) @signature `Lokhttp3/internal/Util;.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a790c.  v0:= "name" @kind object;
  #L1a7910.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7916.  v0:= new `okhttp3.internal.Util$b`;
  #L1a791a.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/Util$b;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L1a7920.  return v0 @kind object;
}
procedure `void` `threadName`(`java.lang.String` v2 @kind object, `kotlin.jvm.functions.Function0` v3 @kind object) @signature `Lokhttp3/internal/Util;.threadName:(Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1a7e7c.  v0:= "name" @kind object;
  #L1a7e80.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7e86.  v0:= "block" @kind object;
  #L1a7e8a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7e90.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1a7e96.  v0:= temp @kind object;
  #L1a7e98.  v1:= "currentThread" @kind object;
  #L1a7e9c.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7ea2.  call temp:= `getName`(v0) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L1a7ea8.  v1:= temp @kind object;
  #L1a7eaa.  call `setName`(v0, v2) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L1a7eb0.  v2:= 1I;
  #L1a7eb2.  call temp:= `invoke`(v3) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L1a7eb8.  call `finallyStart`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L1a7ebe.  call `setName`(v0, v1) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L1a7ec4.  call `finallyEnd`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L1a7eca.  return @kind void;
  #L1a7ecc.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a7ece.  call `finallyStart`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyStart:(I)V` @kind static;
  #L1a7ed4.  call `setName`(v0, v1) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L1a7eda.  call `finallyEnd`(v2) @signature `Lkotlin/jvm/internal/InlineMarker;.finallyEnd:(I)V` @kind static;
  #L1a7ee0.  throw v3;
  catch `java.lang.Throwable` @[L1a7eb2..L1a7eb8] goto L1a7ecc;
}
procedure `java.util.List` `toHeaderList`(`okhttp3.Headers` v5 @kind object) @signature `Lokhttp3/internal/Util;.toHeaderList:(Lokhttp3/Headers;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a77fc.  v0:= "$this$toHeaderList" @kind object;
  #L1a7800.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7806.  call temp:= `size`(v5) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1a780c.  v0:= temp;
  #L1a780e.  v1:= 0I;
  #L1a7810.  call temp:= `until`(v1, v0) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L1a7816.  v0:= temp @kind object;
  #L1a7818.  v1:= new `java.util.ArrayList`;
  #L1a781c.  v2:= 10I;
  #L1a7820.  call temp:= `collectionSizeOrDefault`(v0, v2) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L1a7826.  v2:= temp;
  #L1a7828.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1a782e.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1a7834.  v0:= temp @kind object;
  #L1a7836.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a783c.  v2:= temp;
  #L1a783e.  if v2 == 0 then goto L1a7872;
  #L1a7842.  v2:= v0 @kind object;
  #L1a7844.  v2:= (`kotlin.collections.IntIterator`) v2 @kind object;
  #L1a7848.  call temp:= `nextInt`(v2) @signature `Lkotlin/collections/IntIterator;.nextInt:()I` @kind virtual;
  #L1a784e.  v2:= temp;
  #L1a7850.  v3:= new `okhttp3.internal.http2.Header`;
  #L1a7854.  call temp:= `name`(v5, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1a785a.  v4:= temp @kind object;
  #L1a785c.  call temp:= `value`(v5, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1a7862.  v2:= temp @kind object;
  #L1a7864.  call `<init>`(v3, v4, v2) @signature `Lokhttp3/internal/http2/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L1a786a.  call temp:= `add`(v1, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1a7870.  goto L1a7836;
  #L1a7872.  return v1 @kind object;
}
procedure `okhttp3.Headers` `toHeaders`(`java.util.List` v3 @kind object) @signature `Lokhttp3/internal/Util;.toHeaders:(Ljava/util/List;)Lokhttp3/Headers;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1a79e8.  v0:= "$this$toHeaders" @kind object;
  #L1a79ec.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a79f2.  v0:= new `okhttp3.Headers$Builder`;
  #L1a79f6.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L1a79fc.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1a7a02.  v3:= temp @kind object;
  #L1a7a04.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a7a0a.  v1:= temp;
  #L1a7a0c.  if v1 == 0 then goto L1a7a44;
  #L1a7a10.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a7a16.  v1:= temp @kind object;
  #L1a7a18.  v1:= (`okhttp3.internal.http2.Header`) v1 @kind object;
  #L1a7a1c.  call temp:= `component1`(v1) @signature `Lokhttp3/internal/http2/Header;.component1:()Lokio/ByteString;` @kind virtual;
  #L1a7a22.  v2:= temp @kind object;
  #L1a7a24.  call temp:= `component2`(v1) @signature `Lokhttp3/internal/http2/Header;.component2:()Lokio/ByteString;` @kind virtual;
  #L1a7a2a.  v1:= temp @kind object;
  #L1a7a2c.  call temp:= `utf8`(v2) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L1a7a32.  v2:= temp @kind object;
  #L1a7a34.  call temp:= `utf8`(v1) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L1a7a3a.  v1:= temp @kind object;
  #L1a7a3c.  call temp:= `addLenient$okhttp`(v0, v2, v1) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1a7a42.  goto L1a7a04;
  #L1a7a44.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L1a7a4a.  v3:= temp @kind object;
  #L1a7a4c.  return v3 @kind object;
}
procedure `java.lang.String` `toHexString`(`int` v1 ) @signature `Lokhttp3/internal/Util;.toHexString:(I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a7358.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L1a735e.  v1:= temp @kind object;
  #L1a7360.  v0:= "Integer.toHexString(this)" @kind object;
  #L1a7364.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a736a.  return v1 @kind object;
}
procedure `java.lang.String` `toHexString`(`long` v0 ) @signature `Lokhttp3/internal/Util;.toHexString:(J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L1a737c.  call temp:= `toHexString`(v0) @signature `Ljava/lang/Long;.toHexString:(J)Ljava/lang/String;` @kind static;
  #L1a7382.  v0:= temp @kind object;
  #L1a7384.  v1:= "java.lang.Long.toHexString(this)" @kind object;
  #L1a7388.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a738e.  return v0 @kind object;
}
procedure `java.lang.String` `toHostHeader`(`okhttp3.HttpUrl` v5 @kind object, `boolean` v6 ) @signature `Lokhttp3/internal/Util;.toHostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a73c4.  v0:= "$this$toHostHeader" @kind object;
  #L1a73c8.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a73ce.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1a73d4.  v0:= temp @kind object;
  #L1a73d6.  v1:= ":" @kind object;
  #L1a73da.  v2:= 0I;
  #L1a73dc.  v3:= 2I;
  #L1a73de.  v4:= 0I;
  #L1a73e0.  call temp:= `contains$default`(v0, v1, v2, v3, v4) @signature `Lkotlin/text/StringsKt;.contains$default:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;ZILjava/lang/Object;)Z` @kind static;
  #L1a73e6.  v0:= temp;
  #L1a73e8.  if v0 == 0 then goto L1a7422;
  #L1a73ec.  v0:= new `java.lang.StringBuilder`;
  #L1a73f0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a73f6.  v1:= 91I;
  #L1a73fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a7400.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1a7406.  v1:= temp @kind object;
  #L1a7408.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a740e.  v1:= 93I;
  #L1a7412.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a7418.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a741e.  v0:= temp @kind object;
  #L1a7420.  goto L1a742a;
  #L1a7422.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1a7428.  v0:= temp @kind object;
  #L1a742a.  if v6 != 0 then goto L1a744e;
  #L1a742e.  call temp:= `port`(v5) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L1a7434.  v6:= temp;
  #L1a7436.  v1:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L1a743a.  call temp:= `scheme`(v5) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L1a7440.  v2:= temp @kind object;
  #L1a7442.  call temp:= `defaultPort`(v1, v2) @signature `Lokhttp3/HttpUrl$Companion;.defaultPort:(Ljava/lang/String;)I` @kind virtual;
  #L1a7448.  v1:= temp;
  #L1a744a.  if v6 == v1 then goto L1a747e;
  #L1a744e.  v6:= new `java.lang.StringBuilder`;
  #L1a7452.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a7458.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a745e.  v0:= 58I;
  #L1a7462.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a7468.  call temp:= `port`(v5) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L1a746e.  v5:= temp;
  #L1a7470.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a7476.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a747c.  v0:= temp @kind object;
  #L1a747e.  return v0 @kind object;
}
procedure `java.lang.String` `toHostHeader$default`(`okhttp3.HttpUrl` v0 @kind object, `boolean` v1 , `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lokhttp3/internal/Util;.toHostHeader$default:(Lokhttp3/HttpUrl;ZILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a73a0.  v2:= v2 ^& 1;
  #L1a73a4.  if v2 == 0 then goto L1a73aa;
  #L1a73a8.  v1:= 0I;
  #L1a73aa.  call temp:= `toHostHeader`(v0, v1) @signature `Lokhttp3/internal/Util;.toHostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @kind static;
  #L1a73b0.  v0:= temp @kind object;
  #L1a73b2.  return v0 @kind object;
}
procedure `java.util.List` `toImmutableList`(`java.util.List` v1 @kind object) @signature `Lokhttp3/internal/Util;.toImmutableList:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a7884.  v0:= "$this$toImmutableList" @kind object;
  #L1a7888.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a788e.  call temp:= `toMutableList`(v1) @signature `Lkotlin/collections/CollectionsKt;.toMutableList:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L1a7894.  v1:= temp @kind object;
  #L1a7896.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1a789c.  v1:= temp @kind object;
  #L1a789e.  v0:= "Collections.unmodifiableList(toMutableList())" @kind object;
  #L1a78a2.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a78a8.  return v1 @kind object;
}
procedure `java.util.Map` `toImmutableMap`(`java.util.Map` v1 @kind object) @signature `Lokhttp3/internal/Util;.toImmutableMap:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a78bc.  v0:= "$this$toImmutableMap" @kind object;
  #L1a78c0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a78c6.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L1a78cc.  v0:= temp;
  #L1a78ce.  if v0 == 0 then goto L1a78dc;
  #L1a78d2.  call temp:= `emptyMap`() @signature `Lkotlin/collections/MapsKt;.emptyMap:()Ljava/util/Map;` @kind static;
  #L1a78d8.  v1:= temp @kind object;
  #L1a78da.  goto L1a78f8;
  #L1a78dc.  v0:= new `java.util.LinkedHashMap`;
  #L1a78e0.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L1a78e6.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L1a78ec.  v1:= temp @kind object;
  #L1a78ee.  v0:= "Collections.unmodifiableMap(LinkedHashMap(this))" @kind object;
  #L1a78f2.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a78f8.  return v1 @kind object;
}
procedure `long` `toLongOrDefault`(`java.lang.String` v1 @kind object, `long` v2 ) @signature `Lokhttp3/internal/Util;.toLongOrDefault:(Ljava/lang/String;J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a798c.  v0:= "$this$toLongOrDefault" @kind object;
  #L1a7990.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7996.  call temp:= `parseLong`(v1) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L1a799c.  v2:= temp @kind wide;
  #L1a799e.  return v2 @kind wide;
  catch `java.lang.NumberFormatException` @[L1a7996..L1a799e] goto L1a799e;
}
procedure `int` `toNonNegativeInt`(`java.lang.String` v4 @kind object, `int` v5 ) @signature `Lokhttp3/internal/Util;.toNonNegativeInt:(Ljava/lang/String;I)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a7190.  if v4 == 0 then goto L1a71c2;
  #L1a7194.  call temp:= `parseLong`(v4) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L1a719a.  v4:= temp @kind wide;
  #L1a719c.  v0:= 2147483647I;
  #L1a71a2.  v1:= (`long`) v0 @kind i2l;
  #L1a71a4.  v3:= lcmp(v4, v1);
  #L1a71a8.  if v3 <= 0 then goto L1a71ae;
  #L1a71ac.  goto L1a71c0;
  #L1a71ae.  v0:= 0L;
  #L1a71b2.  v2:= lcmp(v4, v0);
  #L1a71b6.  if v2 >= 0 then goto L1a71be;
  #L1a71ba.  v0:= 0I;
  #L1a71bc.  goto L1a71c0;
  #L1a71be.  v0:= (`int`) v4 @kind l2i;
  #L1a71c0.  return v0;
  #L1a71c2.  return v5;
  catch `java.lang.NumberFormatException` @[L1a7194..L1a719c] goto L1a71c2;
}
procedure `java.lang.String` `trimSubstring`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a74c4.  v0:= "$this$trimSubstring" @kind object;
  #L1a74c8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a74ce.  call temp:= `indexOfFirstNonAsciiWhitespace`(v1, v2, v3) @signature `Lokhttp3/internal/Util;.indexOfFirstNonAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L1a74d4.  v2:= temp;
  #L1a74d6.  call temp:= `indexOfLastNonAsciiWhitespace`(v1, v2, v3) @signature `Lokhttp3/internal/Util;.indexOfLastNonAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L1a74dc.  v3:= temp;
  #L1a74de.  call temp:= `substring`(v1, v2, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1a74e4.  v1:= temp @kind object;
  #L1a74e6.  v2:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L1a74ea.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a74f0.  return v1 @kind object;
}
procedure `java.lang.String` `trimSubstring$default`(`java.lang.String` v0 @kind object, `int` v1 , `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokhttp3/internal/Util;.trimSubstring$default:(Ljava/lang/String;IIILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a7490.  v4:= v3 ^& 1;
  #L1a7494.  if v4 == 0 then goto L1a749a;
  #L1a7498.  v1:= 0I;
  #L1a749a.  v3:= v3 ^& 2;
  #L1a749e.  if v3 == 0 then goto L1a74aa;
  #L1a74a2.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1a74a8.  v2:= temp;
  #L1a74aa.  call temp:= `trimSubstring`(v0, v1, v2) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L1a74b0.  v0:= temp @kind object;
  #L1a74b2.  return v0 @kind object;
}
procedure `void` `wait`(`java.lang.Object` v1 @kind object) @signature `Lokhttp3/internal/Util;.wait:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a7f00.  v0:= "$this$wait" @kind object;
  #L1a7f04.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7f0a.  call `wait`(v1) @signature `Ljava/lang/Object;.wait:()V` @kind virtual;
  #L1a7f10.  return @kind void;
}
procedure `java.lang.Throwable` `withSuppressed`(`java.lang.Exception` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lokhttp3/internal/Util;.withSuppressed:(Ljava/lang/Exception;Ljava/util/List;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1a7600.  v0:= "$this$withSuppressed" @kind object;
  #L1a7604.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a760a.  v0:= "suppressed" @kind object;
  #L1a760e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7614.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1a761a.  v0:= temp;
  #L1a761c.  v1:= 1I;
  #L1a761e.  if v0 <= v1 then goto L1a762c;
  #L1a7622.  v0:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L1a7626.  call `println`(v0, v3) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/Object;)V` @kind virtual;
  #L1a762c.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1a7632.  v3:= temp @kind object;
  #L1a7634.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a763a.  v0:= temp;
  #L1a763c.  if v0 == 0 then goto L1a7654;
  #L1a7640.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a7646.  v0:= temp @kind object;
  #L1a7648.  v0:= (`java.lang.Exception`) v0 @kind object;
  #L1a764c.  call `addSuppressed`(v2, v0) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L1a7652.  goto L1a7634;
  #L1a7654.  return v2 @kind object;
}
procedure `void` `writeMedium`(`okio.BufferedSink` v1 @kind object, `int` v2 ) @signature `Lokhttp3/internal/Util;.writeMedium:(Lokio/BufferedSink;I)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a7f24.  v0:= "$this$writeMedium" @kind object;
  #L1a7f28.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a7f2e.  v0:= v2 ^>> 16;
  #L1a7f32.  v0:= v0 ^& 255;
  #L1a7f36.  call temp:= `writeByte`(v1, v0) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1a7f3c.  v0:= v2 ^>> 8;
  #L1a7f40.  v0:= v0 ^& 255;
  #L1a7f44.  call temp:= `writeByte`(v1, v0) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1a7f4a.  v2:= v2 ^& 255;
  #L1a7f4e.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1a7f54.  return @kind void;
}
