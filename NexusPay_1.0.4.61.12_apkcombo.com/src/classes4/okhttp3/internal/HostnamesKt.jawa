record `okhttp3.internal.HostnamesKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `boolean` `a`(`java.lang.String` v10 @kind object) @signature `Lokhttp3/internal/HostnamesKt;.a:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1a6188.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1a618e.  v0:= temp;
  #L1a6190.  v1:= 0I;
  #L1a6192.  v2:= 0I;
  #L1a6194.  if v2 >= v0 then goto L1a61e8;
  #L1a6198.  call temp:= `charAt`(v10, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1a619e.  v4:= temp;
  #L1a61a0.  v3:= 31I;
  #L1a61a4.  call temp:= `compare`(v4, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L1a61aa.  v3:= temp;
  #L1a61ac.  v9:= 1I;
  #L1a61ae.  if v3 <= 0 then goto L1a61e6;
  #L1a61b2.  v3:= 127I;
  #L1a61b6.  call temp:= `compare`(v4, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L1a61bc.  v3:= temp;
  #L1a61be.  if v3 < 0 then goto L1a61c4;
  #L1a61c2.  goto L1a61e6;
  #L1a61c4.  v5:= 0I;
  #L1a61c6.  v6:= 0I;
  #L1a61c8.  v7:= 6I;
  #L1a61ca.  v8:= 0I;
  #L1a61cc.  v3:= " #%/:?@[\\]" @kind object;
  #L1a61d0.  call temp:= `indexOf$default`(v3, v4, v5, v6, v7, v8) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L1a61d6.  v3:= temp;
  #L1a61d8.  v4:= -1I;
  #L1a61da.  if v3 == v4 then goto L1a61e0;
  #L1a61de.  return v9;
  #L1a61e0.  v2:= v2 + 1;
  #L1a61e4.  goto L1a6194;
  #L1a61e6.  return v9;
  #L1a61e8.  return v1;
}
procedure `boolean` `b`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `byte`[] v10 @kind object, `int` v11 ) @signature `Lokhttp3/internal/HostnamesKt;.b:(Ljava/lang/String;II[BI)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a61fc.  v0:= v11;
  #L1a61fe.  v1:= 0I;
  #L1a6200.  if v8 >= v9 then goto L1a6294;
  #L1a6204.  v2:= length @variable v10;
  #L1a6206.  if v0 != v2 then goto L1a620c;
  #L1a620a.  return v1;
  #L1a620c.  if v0 == v11 then goto L1a6226;
  #L1a6210.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1a6216.  v2:= temp;
  #L1a6218.  v3:= 46I;
  #L1a621c.  if v2 == v3 then goto L1a6222;
  #L1a6220.  return v1;
  #L1a6222.  v8:= v8 + 1;
  #L1a6226.  v2:= v8;
  #L1a6228.  v3:= 0I;
  #L1a622a.  if v2 >= v9 then goto L1a627a;
  #L1a622e.  call temp:= `charAt`(v7, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1a6234.  v4:= temp;
  #L1a6236.  v5:= 48I;
  #L1a623a.  call temp:= `compare`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L1a6240.  v6:= temp;
  #L1a6242.  if v6 < 0 then goto L1a627a;
  #L1a6246.  v6:= 57I;
  #L1a624a.  call temp:= `compare`(v4, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L1a6250.  v6:= temp;
  #L1a6252.  if v6 <= 0 then goto L1a6258;
  #L1a6256.  goto L1a627a;
  #L1a6258.  if v3 != 0 then goto L1a6262;
  #L1a625c.  if v8 == v2 then goto L1a6262;
  #L1a6260.  return v1;
  #L1a6262.  v3:= v3 * 10;
  #L1a6266.  v3:= v3 + v4 @kind int;
  #L1a6268.  v3:= v3 - v5 @kind int;
  #L1a626a.  v4:= 255I;
  #L1a626e.  if v3 <= v4 then goto L1a6274;
  #L1a6272.  return v1;
  #L1a6274.  v2:= v2 + 1;
  #L1a6278.  goto L1a622a;
  #L1a627a.  v8:= v2 - v8 @kind int;
  #L1a627e.  if v8 != 0 then goto L1a6284;
  #L1a6282.  return v1;
  #L1a6284.  v8:= v0 + 1;
  #L1a6288.  v1:= (`byte`) v3 @kind i2b;
  #L1a628a.  v10[v0]:= v1 @kind byte;
  #L1a628e.  v0:= v8;
  #L1a6290.  v8:= v2;
  #L1a6292.  goto L1a61fe;
  #L1a6294.  v11:= v11 + 4;
  #L1a6298.  if v0 != v11 then goto L1a629e;
  #L1a629c.  v1:= 1I;
  #L1a629e.  return v1;
}
procedure `java.net.InetAddress` `c`(`java.lang.String` v18 @kind object, `int` v19 , `int` v20 ) @signature `Lokhttp3/internal/HostnamesKt;.c:(Ljava/lang/String;II)Ljava/net/InetAddress;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L1a64ec.  v6:= v18 @kind object;
  #L1a64f0.  v7:= v20;
  #L1a64f4.  v8:= 16I;
  #L1a64f8.  v9:= new `byte`[v8];
  #L1a64fc.  v11:= -1I;
  #L1a64fe.  v12:= v19;
  #L1a6502.  v13:= 0I;
  #L1a6504.  v14:= -1I;
  #L1a6506.  v15:= -1I;
  #L1a6508.  v16:= 0I;
  #L1a650c.  if v12 >= v7 then goto L1a661a;
  #L1a6510.  if v13 != v8 then goto L1a6516;
  #L1a6514.  return v16 @kind object;
  #L1a6516.  v5:= v12 + 2;
  #L1a651a.  if v5 > v7 then goto L1a655c;
  #L1a651e.  v3:= 0I;
  #L1a6520.  v4:= 4I;
  #L1a6522.  v17:= 0I;
  #L1a6526.  v1:= "::" @kind object;
  #L1a652a.  v0:= v18 @kind object;
  #L1a652e.  v2:= v12;
  #L1a6530.  v10:= v5;
  #L1a6532.  v5:= v17 @kind object;
  #L1a6536.  call temp:= `startsWith$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;IZILjava/lang/Object;)Z` @kind static;
  #L1a653c.  v0:= temp;
  #L1a653e.  if v0 == 0 then goto L1a655c;
  #L1a6542.  if v14 == v11 then goto L1a6548;
  #L1a6546.  return v16 @kind object;
  #L1a6548.  v13:= v13 + 2;
  #L1a654c.  if v10 != v7 then goto L1a6556;
  #L1a6550.  v14:= v13;
  #L1a6552.  goto L1a661a;
  #L1a6556.  v15:= v10;
  #L1a6558.  v14:= v13;
  #L1a655a.  goto L1a65ba;
  #L1a655c.  if v13 == 0 then goto L1a65b8;
  #L1a6560.  v3:= 0I;
  #L1a6562.  v4:= 4I;
  #L1a6564.  v5:= 0I;
  #L1a6566.  v1:= ":" @kind object;
  #L1a656a.  v0:= v18 @kind object;
  #L1a656e.  v2:= v12;
  #L1a6570.  call temp:= `startsWith$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;IZILjava/lang/Object;)Z` @kind static;
  #L1a6576.  v0:= temp;
  #L1a6578.  if v0 == 0 then goto L1a6582;
  #L1a657c.  v12:= v12 + 1;
  #L1a6580.  goto L1a65b8;
  #L1a6582.  v3:= 0I;
  #L1a6584.  v4:= 4I;
  #L1a6586.  v5:= 0I;
  #L1a6588.  v1:= "." @kind object;
  #L1a658c.  v0:= v18 @kind object;
  #L1a6590.  v2:= v12;
  #L1a6592.  call temp:= `startsWith$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;IZILjava/lang/Object;)Z` @kind static;
  #L1a6598.  v0:= temp;
  #L1a659a.  if v0 == 0 then goto L1a65b6;
  #L1a659e.  v0:= v13 + -2;
  #L1a65a2.  call temp:= `b`(v6, v15, v7, v9, v0) @signature `Lokhttp3/internal/HostnamesKt;.b:(Ljava/lang/String;II[BI)Z` @kind static;
  #L1a65a8.  v0:= temp;
  #L1a65aa.  if v0 != 0 then goto L1a65b0;
  #L1a65ae.  return v16 @kind object;
  #L1a65b0.  v13:= v13 + 2;
  #L1a65b4.  goto L1a661a;
  #L1a65b6.  return v16 @kind object;
  #L1a65b8.  v15:= v12;
  #L1a65ba.  v12:= v15;
  #L1a65bc.  v0:= 0I;
  #L1a65be.  if v12 >= v7 then goto L1a65e4;
  #L1a65c2.  call temp:= `charAt`(v6, v12) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1a65c8.  v1:= temp;
  #L1a65ca.  call temp:= `parseHexDigit`(v1) @signature `Lokhttp3/internal/Util;.parseHexDigit:(C)I` @kind static;
  #L1a65d0.  v1:= temp;
  #L1a65d2.  if v1 != v11 then goto L1a65d8;
  #L1a65d6.  goto L1a65e4;
  #L1a65d8.  v0:= v0 ^< 4;
  #L1a65dc.  v0:= v0 + v1 @kind int;
  #L1a65de.  v12:= v12 + 1;
  #L1a65e2.  goto L1a65be;
  #L1a65e4.  v1:= v12 - v15 @kind int;
  #L1a65e8.  if v1 == 0 then goto L1a6618;
  #L1a65ec.  v2:= 4I;
  #L1a65ee.  if v1 <= v2 then goto L1a65f4;
  #L1a65f2.  goto L1a6618;
  #L1a65f4.  v1:= v13 + 1;
  #L1a65f8.  v2:= v0 ^>> 8;
  #L1a65fc.  v2:= v2 ^& 255;
  #L1a6600.  v2:= (`byte`) v2 @kind i2b;
  #L1a6602.  v9[v13]:= v2 @kind byte;
  #L1a6606.  v13:= v1 + 1;
  #L1a660a.  v0:= v0 ^& 255;
  #L1a660e.  v0:= (`byte`) v0 @kind i2b;
  #L1a6610.  v9[v1]:= v0 @kind byte;
  #L1a6614.  goto L1a6508;
  #L1a6618.  return v16 @kind object;
  #L1a661a.  if v13 == v8 then goto L1a6640;
  #L1a661e.  if v14 != v11 then goto L1a6624;
  #L1a6622.  return v16 @kind object;
  #L1a6624.  v0:= v13 - v14 @kind int;
  #L1a6628.  v1:= v0 - 16;
  #L1a662c.  call `arraycopy`(v9, v14, v9, v1, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1a6632.  v8:= v8 - v13 @kind int;
  #L1a6634.  v8:= v8 + v14 @kind int;
  #L1a6636.  v0:= 0I;
  #L1a6638.  v0:= (`byte`) v0 @kind i2b;
  #L1a663a.  call `fill`(v9, v14, v8, v0) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #L1a6640.  call temp:= `getByAddress`(v9) @signature `Ljava/net/InetAddress;.getByAddress:([B)Ljava/net/InetAddress;` @kind static;
  #L1a6646.  v0:= temp @kind object;
  #L1a6648.  return v0 @kind object;
}
procedure `java.lang.String` `d`(`byte`[] v8 @kind object) @signature `Lokhttp3/internal/HostnamesKt;.d:([B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1a62b0.  v0:= 0I;
  #L1a62b2.  v1:= -1I;
  #L1a62b4.  v2:= 0I;
  #L1a62b6.  v3:= 0I;
  #L1a62b8.  v4:= length @variable v8;
  #L1a62ba.  v5:= 16I;
  #L1a62be.  if v2 >= v4 then goto L1a62fa;
  #L1a62c2.  v4:= v2;
  #L1a62c4.  if v4 >= v5 then goto L1a62e2;
  #L1a62c8.  v6:= v8[v4] @kind byte;
  #L1a62cc.  if v6 != 0 then goto L1a62e2;
  #L1a62d0.  v6:= v4 + 1;
  #L1a62d4.  v6:= v8[v6] @kind byte;
  #L1a62d8.  if v6 != 0 then goto L1a62e2;
  #L1a62dc.  v4:= v4 + 2;
  #L1a62e0.  goto L1a62c4;
  #L1a62e2.  v5:= v4 - v2 @kind int;
  #L1a62e6.  if v5 <= v3 then goto L1a62f4;
  #L1a62ea.  v6:= 4I;
  #L1a62ec.  if v5 < v6 then goto L1a62f4;
  #L1a62f0.  v1:= v2;
  #L1a62f2.  v3:= v5;
  #L1a62f4.  v2:= v4 + 2;
  #L1a62f8.  goto L1a62b8;
  #L1a62fa.  v2:= new `okio.Buffer`;
  #L1a62fe.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1a6304.  v4:= length @variable v8;
  #L1a6306.  if v0 >= v4 then goto L1a6364;
  #L1a630a.  v4:= 58I;
  #L1a630e.  if v0 != v1 then goto L1a6326;
  #L1a6312.  call temp:= `writeByte`(v2, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1a6318.  v0:= v0 + v3 @kind int;
  #L1a631a.  if v0 != v5 then goto L1a6304;
  #L1a631e.  call temp:= `writeByte`(v2, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1a6324.  goto L1a6304;
  #L1a6326.  if v0 <= 0 then goto L1a6330;
  #L1a632a.  call temp:= `writeByte`(v2, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L1a6330.  v4:= v8[v0] @kind byte;
  #L1a6334.  v6:= 255I;
  #L1a6338.  call temp:= `and`(v4, v6) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1a633e.  v4:= temp;
  #L1a6340.  v4:= v4 ^< 8;
  #L1a6344.  v7:= v0 + 1;
  #L1a6348.  v7:= v8[v7] @kind byte;
  #L1a634c.  call temp:= `and`(v7, v6) @signature `Lokhttp3/internal/Util;.and:(BI)I` @kind static;
  #L1a6352.  v6:= temp;
  #L1a6354.  v4:= v4 ^| v6 @kind int;
  #L1a6356.  v6:= (`long`) v4 @kind i2l;
  #L1a6358.  call temp:= `writeHexadecimalUnsignedLong`(v2, v6) @signature `Lokio/Buffer;.writeHexadecimalUnsignedLong:(J)Lokio/Buffer;` @kind virtual;
  #L1a635e.  v0:= v0 + 2;
  #L1a6362.  goto L1a6304;
  #L1a6364.  call temp:= `readUtf8`(v2) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L1a636a.  v8:= temp @kind object;
  #L1a636c.  return v8 @kind object;
}
procedure `java.lang.String` `toCanonicalHost`(`java.lang.String` v5 @kind object) @signature `Lokhttp3/internal/HostnamesKt;.toCanonicalHost:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a6380.  v0:= "$this$toCanonicalHost" @kind object;
  #L1a6384.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a638a.  v0:= ":" @kind object;
  #L1a638e.  v1:= 0I;
  #L1a6390.  v2:= 2I;
  #L1a6392.  v3:= 0I;
  #L1a6394.  call temp:= `contains$default`(v5, v0, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.contains$default:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;ZILjava/lang/Object;)Z` @kind static;
  #L1a639a.  v0:= temp;
  #L1a639c.  v4:= 1I;
  #L1a639e.  if v0 == 0 then goto L1a645c;
  #L1a63a2.  v0:= "[" @kind object;
  #L1a63a6.  call temp:= `startsWith$default`(v5, v0, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1a63ac.  v0:= temp;
  #L1a63ae.  if v0 == 0 then goto L1a63d6;
  #L1a63b2.  v0:= "]" @kind object;
  #L1a63b6.  call temp:= `endsWith$default`(v5, v0, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.endsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1a63bc.  v0:= temp;
  #L1a63be.  if v0 == 0 then goto L1a63d6;
  #L1a63c2.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1a63c8.  v0:= temp;
  #L1a63ca.  v0:= v0 - v4 @kind int;
  #L1a63cc.  call temp:= `c`(v5, v4, v0) @signature `Lokhttp3/internal/HostnamesKt;.c:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L1a63d2.  v0:= temp @kind object;
  #L1a63d4.  goto L1a63e6;
  #L1a63d6.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1a63dc.  v0:= temp;
  #L1a63de.  call temp:= `c`(v5, v1, v0) @signature `Lokhttp3/internal/HostnamesKt;.c:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L1a63e4.  v0:= temp @kind object;
  #L1a63e6.  if v0 == 0 then goto L1a645a;
  #L1a63ea.  call temp:= `getAddress`(v0) @signature `Ljava/net/InetAddress;.getAddress:()[B` @kind virtual;
  #L1a63f0.  v1:= temp @kind object;
  #L1a63f2.  v2:= length @variable v1;
  #L1a63f4.  v3:= 16I;
  #L1a63f8.  if v2 != v3 then goto L1a6410;
  #L1a63fc.  v5:= "address" @kind object;
  #L1a6400.  call `checkNotNullExpressionValue`(v1, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a6406.  call temp:= `d`(v1) @signature `Lokhttp3/internal/HostnamesKt;.d:([B)Ljava/lang/String;` @kind static;
  #L1a640c.  v5:= temp @kind object;
  #L1a640e.  return v5 @kind object;
  #L1a6410.  v1:= length @variable v1;
  #L1a6412.  v2:= 4I;
  #L1a6414.  if v1 != v2 then goto L1a6422;
  #L1a6418.  call temp:= `getHostAddress`(v0) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L1a641e.  v5:= temp @kind object;
  #L1a6420.  return v5 @kind object;
  #L1a6422.  v0:= new `java.lang.AssertionError`;
  #L1a6426.  v1:= new `java.lang.StringBuilder`;
  #L1a642a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a6430.  v2:= "Invalid IPv6 address: '" @kind object;
  #L1a6434.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a643a.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a6440.  v5:= 39I;
  #L1a6444.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a644a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a6450.  v5:= temp @kind object;
  #L1a6452.  call `<init>`(v0, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1a6458.  throw v0;
  #L1a645a.  return v3 @kind object;
  #L1a645c.  call temp:= `toASCII`(v5) @signature `Ljava/net/IDN;.toASCII:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1a6462.  v5:= temp @kind object;
  #L1a6464.  v0:= "IDN.toASCII(host)" @kind object;
  #L1a6468.  call `checkNotNullExpressionValue`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a646e.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L1a6472.  v2:= "Locale.US" @kind object;
  #L1a6476.  call `checkNotNullExpressionValue`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a647c.  if v5 == 0 then goto L1a64b8;
  #L1a6480.  call temp:= `toLowerCase`(v5, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L1a6486.  v5:= temp @kind object;
  #L1a6488.  v0:= "(this as java.lang.String).toLowerCase(locale)" @kind object;
  #L1a648c.  call `checkNotNullExpressionValue`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a6492.  call temp:= `length`(v5) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1a6498.  v0:= temp;
  #L1a649a.  if v0 != 0 then goto L1a64a0;
  #L1a649e.  v1:= 1I;
  #L1a64a0.  if v1 == 0 then goto L1a64a6;
  #L1a64a4.  return v3 @kind object;
  #L1a64a6.  call temp:= `a`(v5) @signature `Lokhttp3/internal/HostnamesKt;.a:(Ljava/lang/String;)Z` @kind static;
  #L1a64ac.  v0:= temp;
  #L1a64ae.  if v0 == 0 then goto L1a64b4;
  #L1a64b2.  goto L1a64b6;
  #L1a64b4.  v3:= v5 @kind object;
  #L1a64b6.  return v3 @kind object;
  #L1a64b8.  v5:= new `java.lang.NullPointerException`;
  #L1a64bc.  v0:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L1a64c0.  call `<init>`(v5, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a64c6.  throw v5;
  #L1a64c8.  return v3 @kind object;
  catch `java.lang.IllegalArgumentException` @[L1a645c..L1a64c8] goto L1a64c8;
}
