record `okhttp3.internal.cache.DiskLruCache$Editor` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean`[] `okhttp3.internal.cache.DiskLruCache$Editor.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.cache.DiskLruCache$Editor.b` @AccessFlag PRIVATE;
  `okhttp3.internal.cache.DiskLruCache$Entry` `okhttp3.internal.cache.DiskLruCache$Editor.c` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$Editor.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$Editor` v1 @kind this, `okhttp3.internal.cache.DiskLruCache` v2 @kind object, `okhttp3.internal.cache.DiskLruCache$Entry` v3 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.<init>:(Lokhttp3/internal/cache/DiskLruCache;Lokhttp3/internal/cache/DiskLruCache$Entry;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a94b0.  v0:= "entry" @kind object;
  #L1a94b4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a94ba.  v1.`okhttp3.internal.cache.DiskLruCache$Editor.d` @type ^`okhttp3.internal.cache.DiskLruCache` := v2 @kind object;
  #L1a94be.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a94c4.  v1.`okhttp3.internal.cache.DiskLruCache$Editor.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` := v3 @kind object;
  #L1a94c8.  call temp:= `getReadable$okhttp`(v3) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.getReadable$okhttp:()Z` @kind virtual;
  #L1a94ce.  v3:= temp;
  #L1a94d0.  if v3 == 0 then goto L1a94d8;
  #L1a94d4.  v2:= 0I;
  #L1a94d6.  goto L1a94e4;
  #L1a94d8.  call temp:= `getValueCount$okhttp`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache;.getValueCount$okhttp:()I` @kind virtual;
  #L1a94de.  v2:= temp;
  #L1a94e0.  v2:= new `boolean`[v2];
  #L1a94e4.  v1.`okhttp3.internal.cache.DiskLruCache$Editor.a` @type ^`boolean`[] := v2 @kind object;
  #L1a94e8.  return @kind void;
}
procedure `void` `abort`(`okhttp3.internal.cache.DiskLruCache$Editor` v4 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.abort:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a94fc.  v0:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.d` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a9500.  @monitorenter v0
  #L1a9502.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.b` @type ^`boolean` @kind boolean;
  #L1a9506.  v2:= 1I;
  #L1a9508.  v1:= v1 ^~ v2 @kind int;
  #L1a950a.  if v1 == 0 then goto L1a953e;
  #L1a950e.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a9512.  call temp:= `getCurrentEditor$okhttp`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.getCurrentEditor$okhttp:()Lokhttp3/internal/cache/DiskLruCache$Editor;` @kind virtual;
  #L1a9518.  v1:= temp @kind object;
  #L1a951a.  call temp:= `areEqual`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a9520.  v1:= temp;
  #L1a9522.  if v1 == 0 then goto L1a9532;
  #L1a9526.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.d` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a952a.  v3:= 0I;
  #L1a952c.  call `completeEdit$okhttp`(v1, v4, v3) @signature `Lokhttp3/internal/cache/DiskLruCache;.completeEdit$okhttp:(Lokhttp3/internal/cache/DiskLruCache$Editor;Z)V` @kind virtual;
  #L1a9532.  v4.`okhttp3.internal.cache.DiskLruCache$Editor.b` @type ^`boolean` := v2 @kind boolean;
  #L1a9536.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1a953a.  @monitorexit v0
  #L1a953c.  return @kind void;
  #L1a953e.  v1:= "Check failed." @kind object;
  #L1a9542.  v2:= new `java.lang.IllegalStateException`;
  #L1a9546.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a954c.  v1:= temp @kind object;
  #L1a954e.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a9554.  throw v2;
  #L1a9556.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a9558.  @monitorexit v0
  #L1a955a.  throw v1;
  catch `java.lang.Throwable` @[L1a9502..L1a953a] goto L1a9556;
  catch `java.lang.Throwable` @[L1a953e..L1a9556] goto L1a9556;
}
procedure `void` `commit`(`okhttp3.internal.cache.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.commit:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1a9580.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.d` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a9584.  @monitorenter v0
  #L1a9586.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.b` @type ^`boolean` @kind boolean;
  #L1a958a.  v2:= 1I;
  #L1a958c.  v1:= v1 ^~ v2 @kind int;
  #L1a958e.  if v1 == 0 then goto L1a95c0;
  #L1a9592.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a9596.  call temp:= `getCurrentEditor$okhttp`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.getCurrentEditor$okhttp:()Lokhttp3/internal/cache/DiskLruCache$Editor;` @kind virtual;
  #L1a959c.  v1:= temp @kind object;
  #L1a959e.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a95a4.  v1:= temp;
  #L1a95a6.  if v1 == 0 then goto L1a95b4;
  #L1a95aa.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Editor.d` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a95ae.  call `completeEdit$okhttp`(v1, v3, v2) @signature `Lokhttp3/internal/cache/DiskLruCache;.completeEdit$okhttp:(Lokhttp3/internal/cache/DiskLruCache$Editor;Z)V` @kind virtual;
  #L1a95b4.  v3.`okhttp3.internal.cache.DiskLruCache$Editor.b` @type ^`boolean` := v2 @kind boolean;
  #L1a95b8.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1a95bc.  @monitorexit v0
  #L1a95be.  return @kind void;
  #L1a95c0.  v1:= "Check failed." @kind object;
  #L1a95c4.  v2:= new `java.lang.IllegalStateException`;
  #L1a95c8.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a95ce.  v1:= temp @kind object;
  #L1a95d0.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a95d6.  throw v2;
  #L1a95d8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a95da.  @monitorexit v0
  #L1a95dc.  throw v1;
  catch `java.lang.Throwable` @[L1a9586..L1a95bc] goto L1a95d8;
  catch `java.lang.Throwable` @[L1a95c0..L1a95d8] goto L1a95d8;
}
procedure `void` `detach$okhttp`(`okhttp3.internal.cache.DiskLruCache$Editor` v2 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.detach$okhttp:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1a9604.  v0:= v2.`okhttp3.internal.cache.DiskLruCache$Editor.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a9608.  call temp:= `getCurrentEditor$okhttp`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.getCurrentEditor$okhttp:()Lokhttp3/internal/cache/DiskLruCache$Editor;` @kind virtual;
  #L1a960e.  v0:= temp @kind object;
  #L1a9610.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a9616.  v0:= temp;
  #L1a9618.  if v0 == 0 then goto L1a9646;
  #L1a961c.  v0:= v2.`okhttp3.internal.cache.DiskLruCache$Editor.d` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a9620.  call temp:= `access$getCivilizedFileSystem$p`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.access$getCivilizedFileSystem$p:(Lokhttp3/internal/cache/DiskLruCache;)Z` @kind static;
  #L1a9626.  v0:= temp;
  #L1a9628.  if v0 == 0 then goto L1a963a;
  #L1a962c.  v0:= v2.`okhttp3.internal.cache.DiskLruCache$Editor.d` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a9630.  v1:= 0I;
  #L1a9632.  call `completeEdit$okhttp`(v0, v2, v1) @signature `Lokhttp3/internal/cache/DiskLruCache;.completeEdit$okhttp:(Lokhttp3/internal/cache/DiskLruCache$Editor;Z)V` @kind virtual;
  #L1a9638.  goto L1a9646;
  #L1a963a.  v0:= v2.`okhttp3.internal.cache.DiskLruCache$Editor.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a963e.  v1:= 1I;
  #L1a9640.  call `setZombie$okhttp`(v0, v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.setZombie$okhttp:(Z)V` @kind virtual;
  #L1a9646.  return @kind void;
}
procedure `okhttp3.internal.cache.DiskLruCache$Entry` `getEntry$okhttp`(`okhttp3.internal.cache.DiskLruCache$Editor` v1 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.getEntry$okhttp:()Lokhttp3/internal/cache/DiskLruCache$Entry;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a92b8.  v0:= v1.`okhttp3.internal.cache.DiskLruCache$Editor.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a92bc.  return v0 @kind object;
}
procedure `boolean`[] `getWritten$okhttp`(`okhttp3.internal.cache.DiskLruCache$Editor` v1 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.getWritten$okhttp:()[Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a92a0.  v0:= v1.`okhttp3.internal.cache.DiskLruCache$Editor.a` @type ^`boolean`[] @kind object;
  #L1a92a4.  return v0 @kind object;
}
procedure `okio.Sink` `newSink`(`okhttp3.internal.cache.DiskLruCache$Editor` v4 @kind this, `int` v5 ) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSink:(I)Lokio/Sink;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a92d0.  v0:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.d` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a92d4.  @monitorenter v0
  #L1a92d6.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.b` @type ^`boolean` @kind boolean;
  #L1a92da.  v2:= 1I;
  #L1a92dc.  v1:= v1 ^~ v2 @kind int;
  #L1a92de.  if v1 == 0 then goto L1a9376;
  #L1a92e2.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a92e6.  call temp:= `getCurrentEditor$okhttp`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.getCurrentEditor$okhttp:()Lokhttp3/internal/cache/DiskLruCache$Editor;` @kind virtual;
  #L1a92ec.  v1:= temp @kind object;
  #L1a92ee.  call temp:= `areEqual`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a92f4.  v1:= temp;
  #L1a92f6.  v1:= v1 ^~ v2 @kind int;
  #L1a92f8.  if v1 == 0 then goto L1a9308;
  #L1a92fc.  call temp:= `blackhole`() @signature `Lokio/Okio;.blackhole:()Lokio/Sink;` @kind static;
  #L1a9302.  v5:= temp @kind object;
  #L1a9304.  @monitorexit v0
  #L1a9306.  return v5 @kind object;
  #L1a9308.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a930c.  call temp:= `getReadable$okhttp`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.getReadable$okhttp:()Z` @kind virtual;
  #L1a9312.  v1:= temp;
  #L1a9314.  if v1 != 0 then goto L1a9326;
  #L1a9318.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.a` @type ^`boolean`[] @kind object;
  #L1a931c.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1a9322.  v1[v5]:= v2 @kind boolean;
  #L1a9326.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a932a.  call temp:= `getDirtyFiles$okhttp`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.getDirtyFiles$okhttp:()Ljava/util/List;` @kind virtual;
  #L1a9330.  v1:= temp @kind object;
  #L1a9332.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1a9338.  v1:= temp @kind object;
  #L1a933a.  v1:= (`java.io.File`) v1 @kind object;
  #L1a933e.  v2:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.d` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a9342.  call temp:= `getFileSystem$okhttp`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache;.getFileSystem$okhttp:()Lokhttp3/internal/io/FileSystem;` @kind virtual;
  #L1a9348.  v2:= temp @kind object;
  #L1a934a.  call temp:= `sink`(v2, v1) @signature `Lokhttp3/internal/io/FileSystem;.sink:(Ljava/io/File;)Lokio/Sink;` @kind interface;
  #L1a9350.  v1:= temp @kind object;
  #L1a9352.  v2:= new `okhttp3.internal.cache.FaultHidingSink`;
  #L1a9356.  v3:= new `okhttp3.internal.cache.DiskLruCache$Editor$a`;
  #L1a935a.  call `<init>`(v3, v4, v5) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor$a;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Editor;I)V` @kind direct;
  #L1a9360.  call `<init>`(v2, v1, v3) @signature `Lokhttp3/internal/cache/FaultHidingSink;.<init>:(Lokio/Sink;Lkotlin/jvm/functions/Function1;)V` @kind direct;
  #L1a9366.  @monitorexit v0
  #L1a9368.  return v2 @kind object;
  #L1a936a.  call temp:= `blackhole`() @signature `Lokio/Okio;.blackhole:()Lokio/Sink;` @kind static;
  #L1a9370.  v5:= temp @kind object;
  #L1a9372.  @monitorexit v0
  #L1a9374.  return v5 @kind object;
  #L1a9376.  v5:= "Check failed." @kind object;
  #L1a937a.  v1:= new `java.lang.IllegalStateException`;
  #L1a937e.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a9384.  v5:= temp @kind object;
  #L1a9386.  call `<init>`(v1, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a938c.  throw v1;
  #L1a938e.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a9390.  @monitorexit v0
  #L1a9392.  throw v5;
  catch `java.lang.Throwable` @[L1a92d6..L1a9304] goto L1a938e;
  catch `java.lang.Throwable` @[L1a9308..L1a933e] goto L1a938e;
  catch `java.io.FileNotFoundException` @[L1a933e..L1a9352] goto L1a936a;
  catch `java.lang.Throwable` @[L1a933e..L1a9352] goto L1a938e;
  catch `java.lang.Throwable` @[L1a9352..L1a9366] goto L1a938e;
  catch `java.lang.Throwable` @[L1a936a..L1a9372] goto L1a938e;
  catch `java.lang.Throwable` @[L1a9376..L1a938e] goto L1a938e;
}
procedure `okio.Source` `newSource`(`okhttp3.internal.cache.DiskLruCache$Editor` v4 @kind this, `int` v5 ) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSource:(I)Lokio/Source;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a93dc.  v0:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.d` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a93e0.  @monitorenter v0
  #L1a93e2.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.b` @type ^`boolean` @kind boolean;
  #L1a93e6.  v1:= v1 ^~ 1;
  #L1a93ea.  if v1 == 0 then goto L1a9462;
  #L1a93ee.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a93f2.  call temp:= `getReadable$okhttp`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.getReadable$okhttp:()Z` @kind virtual;
  #L1a93f8.  v1:= temp;
  #L1a93fa.  v2:= 0I;
  #L1a93fc.  if v1 == 0 then goto L1a945e;
  #L1a9400.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a9404.  call temp:= `getCurrentEditor$okhttp`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.getCurrentEditor$okhttp:()Lokhttp3/internal/cache/DiskLruCache$Editor;` @kind virtual;
  #L1a940a.  v1:= temp @kind object;
  #L1a940c.  call temp:= `areEqual`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a9412.  v1:= temp;
  #L1a9414.  v1:= v1 ^~ 1;
  #L1a9418.  if v1 != 0 then goto L1a945e;
  #L1a941c.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a9420.  call temp:= `getZombie$okhttp`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.getZombie$okhttp:()Z` @kind virtual;
  #L1a9426.  v1:= temp;
  #L1a9428.  if v1 == 0 then goto L1a942e;
  #L1a942c.  goto L1a945e;
  #L1a942e.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.d` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a9432.  call temp:= `getFileSystem$okhttp`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache;.getFileSystem$okhttp:()Lokhttp3/internal/io/FileSystem;` @kind virtual;
  #L1a9438.  v1:= temp @kind object;
  #L1a943a.  v3:= v4.`okhttp3.internal.cache.DiskLruCache$Editor.c` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a943e.  call temp:= `getCleanFiles$okhttp`(v3) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.getCleanFiles$okhttp:()Ljava/util/List;` @kind virtual;
  #L1a9444.  v3:= temp @kind object;
  #L1a9446.  call temp:= `get`(v3, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1a944c.  v5:= temp @kind object;
  #L1a944e.  v5:= (`java.io.File`) v5 @kind object;
  #L1a9452.  call temp:= `source`(v1, v5) @signature `Lokhttp3/internal/io/FileSystem;.source:(Ljava/io/File;)Lokio/Source;` @kind interface;
  #L1a9458.  v2:= temp @kind object;
  #L1a945a.  @monitorexit v0
  #L1a945c.  return v2 @kind object;
  #L1a945e.  @monitorexit v0
  #L1a9460.  return v2 @kind object;
  #L1a9462.  v5:= "Check failed." @kind object;
  #L1a9466.  v1:= new `java.lang.IllegalStateException`;
  #L1a946a.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a9470.  v5:= temp @kind object;
  #L1a9472.  call `<init>`(v1, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a9478.  throw v1;
  #L1a947a.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a947c.  @monitorexit v0
  #L1a947e.  throw v5;
  catch `java.lang.Throwable` @[L1a93e2..L1a9428] goto L1a947a;
  catch `java.io.FileNotFoundException` @[L1a942e..L1a945a] goto L1a945a;
  catch `java.lang.Throwable` @[L1a942e..L1a945a] goto L1a947a;
  catch `java.lang.Throwable` @[L1a9462..L1a947a] goto L1a947a;
}
