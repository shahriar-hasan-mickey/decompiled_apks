record `okhttp3.internal.cache.CacheInterceptor$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheInterceptor$Companion` v0 @kind this) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1a84c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a84ca.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheInterceptor$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1a84dc.  call `<init>`(v0) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.<init>:()V` @kind direct;
  #L1a84e2.  return @kind void;
}
procedure `okhttp3.Headers` `a`(`okhttp3.internal.cache.CacheInterceptor$Companion` v9 @kind this, `okhttp3.Headers` v10 @kind object, `okhttp3.Headers` v11 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.a:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1a838c.  v0:= new `okhttp3.Headers$Builder`;
  #L1a8390.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L1a8396.  call temp:= `size`(v10) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1a839c.  v1:= temp;
  #L1a839e.  v2:= 0I;
  #L1a83a0.  v3:= 0I;
  #L1a83a2.  if v3 >= v1 then goto L1a840e;
  #L1a83a6.  call temp:= `name`(v10, v3) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1a83ac.  v4:= temp @kind object;
  #L1a83ae.  call temp:= `value`(v10, v3) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1a83b4.  v5:= temp @kind object;
  #L1a83b6.  v6:= "Warning" @kind object;
  #L1a83ba.  v7:= 1I;
  #L1a83bc.  call temp:= `equals`(v6, v4, v7) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a83c2.  v6:= temp;
  #L1a83c4.  if v6 == 0 then goto L1a83de;
  #L1a83c8.  v6:= 2I;
  #L1a83ca.  v7:= 0I;
  #L1a83cc.  v8:= "1" @kind object;
  #L1a83d0.  call temp:= `startsWith$default`(v5, v8, v2, v6, v7) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1a83d6.  v6:= temp;
  #L1a83d8.  if v6 == 0 then goto L1a83de;
  #L1a83dc.  goto L1a8408;
  #L1a83de.  call temp:= `b`(v9, v4) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.b:(Ljava/lang/String;)Z` @kind direct;
  #L1a83e4.  v6:= temp;
  #L1a83e6.  if v6 != 0 then goto L1a8402;
  #L1a83ea.  call temp:= `c`(v9, v4) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.c:(Ljava/lang/String;)Z` @kind direct;
  #L1a83f0.  v6:= temp;
  #L1a83f2.  if v6 == 0 then goto L1a8402;
  #L1a83f6.  call temp:= `get`(v11, v4) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1a83fc.  v6:= temp @kind object;
  #L1a83fe.  if v6 != 0 then goto L1a8408;
  #L1a8402.  call temp:= `addLenient$okhttp`(v0, v4, v5) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1a8408.  v3:= v3 + 1;
  #L1a840c.  goto L1a83a2;
  #L1a840e.  call temp:= `size`(v11) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1a8414.  v10:= temp;
  #L1a8416.  if v2 >= v10 then goto L1a844e;
  #L1a841a.  call temp:= `name`(v11, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1a8420.  v1:= temp @kind object;
  #L1a8422.  call temp:= `b`(v9, v1) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.b:(Ljava/lang/String;)Z` @kind direct;
  #L1a8428.  v3:= temp;
  #L1a842a.  if v3 != 0 then goto L1a8448;
  #L1a842e.  call temp:= `c`(v9, v1) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.c:(Ljava/lang/String;)Z` @kind direct;
  #L1a8434.  v3:= temp;
  #L1a8436.  if v3 == 0 then goto L1a8448;
  #L1a843a.  call temp:= `value`(v11, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1a8440.  v3:= temp @kind object;
  #L1a8442.  call temp:= `addLenient$okhttp`(v0, v1, v3) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1a8448.  v2:= v2 + 1;
  #L1a844c.  goto L1a8416;
  #L1a844e.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L1a8454.  v10:= temp @kind object;
  #L1a8456.  return v10 @kind object;
}
procedure `okhttp3.Headers` `access$combine`(`okhttp3.internal.cache.CacheInterceptor$Companion` v0 @kind object, `okhttp3.Headers` v1 @kind object, `okhttp3.Headers` v2 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.access$combine:(Lokhttp3/internal/cache/CacheInterceptor$Companion;Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1a8370.  call temp:= `a`(v0, v1, v2) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.a:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @kind direct;
  #L1a8376.  v0:= temp @kind object;
  #L1a8378.  return v0 @kind object;
}
procedure `okhttp3.Response` `access$stripBody`(`okhttp3.internal.cache.CacheInterceptor$Companion` v0 @kind object, `okhttp3.Response` v1 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.access$stripBody:(Lokhttp3/internal/cache/CacheInterceptor$Companion;Lokhttp3/Response;)Lokhttp3/Response;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1a8468.  call temp:= `d`(v0, v1) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.d:(Lokhttp3/Response;)Lokhttp3/Response;` @kind direct;
  #L1a846e.  v0:= temp @kind object;
  #L1a8470.  return v0 @kind object;
}
procedure `boolean` `b`(`okhttp3.internal.cache.CacheInterceptor$Companion` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.b:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1a8290.  v0:= "Content-Length" @kind object;
  #L1a8294.  v1:= 1I;
  #L1a8296.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a829c.  v0:= temp;
  #L1a829e.  if v0 != 0 then goto L1a82c6;
  #L1a82a2.  v0:= "Content-Encoding" @kind object;
  #L1a82a6.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a82ac.  v0:= temp;
  #L1a82ae.  if v0 != 0 then goto L1a82c6;
  #L1a82b2.  v0:= "Content-Type" @kind object;
  #L1a82b6.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a82bc.  v3:= temp;
  #L1a82be.  if v3 == 0 then goto L1a82c4;
  #L1a82c2.  goto L1a82c6;
  #L1a82c4.  v1:= 0I;
  #L1a82c6.  return v1;
}
procedure `boolean` `c`(`okhttp3.internal.cache.CacheInterceptor$Companion` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.c:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1a82d8.  v0:= "Connection" @kind object;
  #L1a82dc.  v1:= 1I;
  #L1a82de.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a82e4.  v0:= temp;
  #L1a82e6.  if v0 != 0 then goto L1a835c;
  #L1a82ea.  v0:= "Keep-Alive" @kind object;
  #L1a82ee.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a82f4.  v0:= temp;
  #L1a82f6.  if v0 != 0 then goto L1a835c;
  #L1a82fa.  v0:= "Proxy-Authenticate" @kind object;
  #L1a82fe.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a8304.  v0:= temp;
  #L1a8306.  if v0 != 0 then goto L1a835c;
  #L1a830a.  v0:= "Proxy-Authorization" @kind object;
  #L1a830e.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a8314.  v0:= temp;
  #L1a8316.  if v0 != 0 then goto L1a835c;
  #L1a831a.  v0:= "TE" @kind object;
  #L1a831e.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a8324.  v0:= temp;
  #L1a8326.  if v0 != 0 then goto L1a835c;
  #L1a832a.  v0:= "Trailers" @kind object;
  #L1a832e.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a8334.  v0:= temp;
  #L1a8336.  if v0 != 0 then goto L1a835c;
  #L1a833a.  v0:= "Transfer-Encoding" @kind object;
  #L1a833e.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a8344.  v0:= temp;
  #L1a8346.  if v0 != 0 then goto L1a835c;
  #L1a834a.  v0:= "Upgrade" @kind object;
  #L1a834e.  call temp:= `equals`(v0, v3, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a8354.  v3:= temp;
  #L1a8356.  if v3 != 0 then goto L1a835c;
  #L1a835a.  goto L1a835e;
  #L1a835c.  v1:= 0I;
  #L1a835e.  return v1;
}
procedure `okhttp3.Response` `d`(`okhttp3.internal.cache.CacheInterceptor$Companion` v2 @kind this, `okhttp3.Response` v3 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor$Companion;.d:(Lokhttp3/Response;)Lokhttp3/Response;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1a8484.  v0:= 0I;
  #L1a8486.  if v3 == 0 then goto L1a8494;
  #L1a848a.  call temp:= `body`(v3) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L1a8490.  v1:= temp @kind object;
  #L1a8492.  goto L1a8496;
  #L1a8494.  v1:= v0 @kind object;
  #L1a8496.  if v1 == 0 then goto L1a84b2;
  #L1a849a.  call temp:= `newBuilder`(v3) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L1a84a0.  v3:= temp @kind object;
  #L1a84a2.  call temp:= `body`(v3, v0) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1a84a8.  v3:= temp @kind object;
  #L1a84aa.  call temp:= `build`(v3) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L1a84b0.  v3:= temp @kind object;
  #L1a84b2.  return v3 @kind object;
}
