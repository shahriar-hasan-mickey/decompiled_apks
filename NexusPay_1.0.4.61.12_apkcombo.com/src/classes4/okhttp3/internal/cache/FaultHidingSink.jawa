record `okhttp3.internal.cache.FaultHidingSink` @kind class @AccessFlag PUBLIC extends `okio.ForwardingSink` @kind class {
  `boolean` `okhttp3.internal.cache.FaultHidingSink.a` @AccessFlag PRIVATE;
  `kotlin.jvm.functions.Function1` `okhttp3.internal.cache.FaultHidingSink.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.cache.FaultHidingSink` v1 @kind this, `okio.Sink` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lokhttp3/internal/cache/FaultHidingSink;.<init>:(Lokio/Sink;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1ab8ec.  v0:= "delegate" @kind object;
  #L1ab8f0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1ab8f6.  v0:= "onException" @kind object;
  #L1ab8fa.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1ab900.  call `<init>`(v1, v2) @signature `Lokio/ForwardingSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L1ab906.  v1.`okhttp3.internal.cache.FaultHidingSink.b` @type ^`kotlin.jvm.functions.Function1` := v3 @kind object;
  #L1ab90a.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.cache.FaultHidingSink` v2 @kind this) @signature `Lokhttp3/internal/cache/FaultHidingSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ab91c.  v0:= v2.`okhttp3.internal.cache.FaultHidingSink.a` @type ^`boolean` @kind boolean;
  #L1ab920.  if v0 == 0 then goto L1ab926;
  #L1ab924.  return @kind void;
  #L1ab926.  call `close`(v2) @signature `Lokio/ForwardingSink;.close:()V` @kind super;
  #L1ab92c.  goto L1ab940;
  #L1ab92e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1ab930.  v1:= 1I;
  #L1ab932.  v2.`okhttp3.internal.cache.FaultHidingSink.a` @type ^`boolean` := v1 @kind boolean;
  #L1ab936.  v1:= v2.`okhttp3.internal.cache.FaultHidingSink.b` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L1ab93a.  call temp:= `invoke`(v1, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ab940.  return @kind void;
  catch `java.io.IOException` @[L1ab926..L1ab92c] goto L1ab92e;
}
procedure `void` `flush`(`okhttp3.internal.cache.FaultHidingSink` v2 @kind this) @signature `Lokhttp3/internal/cache/FaultHidingSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ab964.  v0:= v2.`okhttp3.internal.cache.FaultHidingSink.a` @type ^`boolean` @kind boolean;
  #L1ab968.  if v0 == 0 then goto L1ab96e;
  #L1ab96c.  return @kind void;
  #L1ab96e.  call `flush`(v2) @signature `Lokio/ForwardingSink;.flush:()V` @kind super;
  #L1ab974.  goto L1ab988;
  #L1ab976.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1ab978.  v1:= 1I;
  #L1ab97a.  v2.`okhttp3.internal.cache.FaultHidingSink.a` @type ^`boolean` := v1 @kind boolean;
  #L1ab97e.  v1:= v2.`okhttp3.internal.cache.FaultHidingSink.b` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L1ab982.  call temp:= `invoke`(v1, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ab988.  return @kind void;
  catch `java.io.IOException` @[L1ab96e..L1ab974] goto L1ab976;
}
procedure `kotlin.jvm.functions.Function1` `getOnException`(`okhttp3.internal.cache.FaultHidingSink` v1 @kind this) @signature `Lokhttp3/internal/cache/FaultHidingSink;.getOnException:()Lkotlin/jvm/functions/Function1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1ab8d4.  v0:= v1.`okhttp3.internal.cache.FaultHidingSink.b` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L1ab8d8.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.cache.FaultHidingSink` v1 @kind this, `okio.Buffer` v2 @kind object, `long` v3 ) @signature `Lokhttp3/internal/cache/FaultHidingSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ab9ac.  v0:= "source" @kind object;
  #L1ab9b0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1ab9b6.  v0:= v1.`okhttp3.internal.cache.FaultHidingSink.a` @type ^`boolean` @kind boolean;
  #L1ab9ba.  if v0 == 0 then goto L1ab9c6;
  #L1ab9be.  call `skip`(v2, v3) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L1ab9c4.  return @kind void;
  #L1ab9c6.  call `write`(v1, v2, v3) @signature `Lokio/ForwardingSink;.write:(Lokio/Buffer;J)V` @kind super;
  #L1ab9cc.  goto L1ab9e0;
  #L1ab9ce.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L1ab9d0.  v3:= 1I;
  #L1ab9d2.  v1.`okhttp3.internal.cache.FaultHidingSink.a` @type ^`boolean` := v3 @kind boolean;
  #L1ab9d6.  v3:= v1.`okhttp3.internal.cache.FaultHidingSink.b` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L1ab9da.  call temp:= `invoke`(v3, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ab9e0.  return @kind void;
  catch `java.io.IOException` @[L1ab9c6..L1ab9cc] goto L1ab9ce;
}
