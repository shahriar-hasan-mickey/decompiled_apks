record `okhttp3.internal.cache.CacheStrategy$Factory` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.a` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.b` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.c` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.d` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.cache.CacheStrategy$Factory.e` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.f` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.g` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.cache.CacheStrategy$Factory.h` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.cache.CacheStrategy$Factory.i` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.cache.CacheStrategy$Factory.j` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Request` `okhttp3.internal.cache.CacheStrategy$Factory.k` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Response` `okhttp3.internal.cache.CacheStrategy$Factory.l` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheStrategy$Factory` v4 @kind this, `long` v5 , `okhttp3.Request` v7 @kind object, `okhttp3.Response` v8 @kind object) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.<init>:(JLokhttp3/Request;Lokhttp3/Response;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a9058.  v0:= "request" @kind object;
  #L1a905c.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a9062.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a9068.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.j` @type ^`long` := v5 @kind wide;
  #L1a906c.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` := v7 @kind object;
  #L1a9070.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` := v8 @kind object;
  #L1a9074.  v5:= -1I;
  #L1a9076.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.i` @type ^`int` := v5;
  #L1a907a.  if v8 == 0 then goto L1a9160;
  #L1a907e.  call temp:= `sentRequestAtMillis`(v8) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L1a9084.  v6:= temp @kind wide;
  #L1a9086.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.f` @type ^`long` := v6 @kind wide;
  #L1a908a.  v6:= v4.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L1a908e.  call temp:= `receivedResponseAtMillis`(v6) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L1a9094.  v6:= temp @kind wide;
  #L1a9096.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.g` @type ^`long` := v6 @kind wide;
  #L1a909a.  v6:= v4.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L1a909e.  call temp:= `headers`(v6) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1a90a4.  v6:= temp @kind object;
  #L1a90a6.  v7:= 0I;
  #L1a90a8.  call temp:= `size`(v6) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1a90ae.  v8:= temp;
  #L1a90b0.  if v7 >= v8 then goto L1a9160;
  #L1a90b4.  call temp:= `name`(v6, v7) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1a90ba.  v0:= temp @kind object;
  #L1a90bc.  call temp:= `value`(v6, v7) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1a90c2.  v1:= temp @kind object;
  #L1a90c4.  v2:= "Date" @kind object;
  #L1a90c8.  v3:= 1I;
  #L1a90ca.  call temp:= `equals`(v0, v2, v3) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a90d0.  v2:= temp;
  #L1a90d2.  if v2 == 0 then goto L1a90e8;
  #L1a90d6.  call temp:= `toHttpDateOrNull`(v1) @signature `Lokhttp3/internal/http/DatesKt;.toHttpDateOrNull:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L1a90dc.  v0:= temp @kind object;
  #L1a90de.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.a` @type ^`java.util.Date` := v0 @kind object;
  #L1a90e2.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.b` @type ^`java.lang.String` := v1 @kind object;
  #L1a90e6.  goto L1a915a;
  #L1a90e8.  v2:= "Expires" @kind object;
  #L1a90ec.  call temp:= `equals`(v0, v2, v3) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a90f2.  v2:= temp;
  #L1a90f4.  if v2 == 0 then goto L1a9106;
  #L1a90f8.  call temp:= `toHttpDateOrNull`(v1) @signature `Lokhttp3/internal/http/DatesKt;.toHttpDateOrNull:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L1a90fe.  v0:= temp @kind object;
  #L1a9100.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.e` @type ^`java.util.Date` := v0 @kind object;
  #L1a9104.  goto L1a915a;
  #L1a9106.  v2:= "Last-Modified" @kind object;
  #L1a910a.  call temp:= `equals`(v0, v2, v3) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a9110.  v2:= temp;
  #L1a9112.  if v2 == 0 then goto L1a9128;
  #L1a9116.  call temp:= `toHttpDateOrNull`(v1) @signature `Lokhttp3/internal/http/DatesKt;.toHttpDateOrNull:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L1a911c.  v0:= temp @kind object;
  #L1a911e.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.c` @type ^`java.util.Date` := v0 @kind object;
  #L1a9122.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.d` @type ^`java.lang.String` := v1 @kind object;
  #L1a9126.  goto L1a915a;
  #L1a9128.  v2:= "ETag" @kind object;
  #L1a912c.  call temp:= `equals`(v0, v2, v3) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a9132.  v2:= temp;
  #L1a9134.  if v2 == 0 then goto L1a913e;
  #L1a9138.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.h` @type ^`java.lang.String` := v1 @kind object;
  #L1a913c.  goto L1a915a;
  #L1a913e.  v2:= "Age" @kind object;
  #L1a9142.  call temp:= `equals`(v0, v2, v3) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a9148.  v0:= temp;
  #L1a914a.  if v0 == 0 then goto L1a915a;
  #L1a914e.  call temp:= `toNonNegativeInt`(v1, v5) @signature `Lokhttp3/internal/Util;.toNonNegativeInt:(Ljava/lang/String;I)I` @kind static;
  #L1a9154.  v0:= temp;
  #L1a9156.  v4.`okhttp3.internal.cache.CacheStrategy$Factory.i` @type ^`int` := v0;
  #L1a915a.  v7:= v7 + 1;
  #L1a915e.  goto L1a90b0;
  #L1a9160.  return @kind void;
}
procedure `long` `a`(`okhttp3.internal.cache.CacheStrategy$Factory` v9 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.a:()J` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1a8c40.  v0:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.a` @type ^`java.util.Date` @kind object;
  #L1a8c44.  v1:= 0L;
  #L1a8c48.  if v0 == 0 then goto L1a8c62;
  #L1a8c4c.  v3:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.g` @type ^`long` @kind wide;
  #L1a8c50.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1a8c56.  v5:= temp @kind wide;
  #L1a8c58.  v3:= v3 - v5 @kind long;
  #L1a8c5a.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L1a8c60.  v1:= temp @kind wide;
  #L1a8c62.  v0:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.i` @type ^`int`;
  #L1a8c66.  v3:= -1I;
  #L1a8c68.  if v0 == v3 then goto L1a8c82;
  #L1a8c6c.  v3:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a8c70.  v4:= (`long`) v0 @kind i2l;
  #L1a8c72.  call temp:= `toMillis`(v3, v4) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1a8c78.  v3:= temp @kind wide;
  #L1a8c7a.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L1a8c80.  v1:= temp @kind wide;
  #L1a8c82.  v3:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.g` @type ^`long` @kind wide;
  #L1a8c86.  v5:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.f` @type ^`long` @kind wide;
  #L1a8c8a.  v5:= v3 - v5 @kind long;
  #L1a8c8e.  v7:= v9.`okhttp3.internal.cache.CacheStrategy$Factory.j` @type ^`long` @kind wide;
  #L1a8c92.  v7:= v7 - v3 @kind long;
  #L1a8c94.  v1:= v1 + v5 @kind long;
  #L1a8c96.  v1:= v1 + v7 @kind long;
  #L1a8c98.  return v1 @kind wide;
}
procedure `okhttp3.internal.cache.CacheStrategy` `b`(`okhttp3.internal.cache.CacheStrategy$Factory` v13 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.b:()Lokhttp3/internal/cache/CacheStrategy;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1a8df8.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L1a8dfc.  v1:= 0I;
  #L1a8dfe.  if v0 != 0 then goto L1a8e12;
  #L1a8e02.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a8e06.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L1a8e0a.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a8e10.  return v0 @kind object;
  #L1a8e12.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L1a8e16.  call temp:= `isHttps`(v0) @signature `Lokhttp3/Request;.isHttps:()Z` @kind virtual;
  #L1a8e1c.  v0:= temp;
  #L1a8e1e.  if v0 == 0 then goto L1a8e42;
  #L1a8e22.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L1a8e26.  call temp:= `handshake`(v0) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L1a8e2c.  v0:= temp @kind object;
  #L1a8e2e.  if v0 != 0 then goto L1a8e42;
  #L1a8e32.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a8e36.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L1a8e3a.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a8e40.  return v0 @kind object;
  #L1a8e42.  v0:= `@@okhttp3.internal.cache.CacheStrategy.Companion` @type ^`okhttp3.internal.cache.CacheStrategy$Companion` @kind object;
  #L1a8e46.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L1a8e4a.  v3:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L1a8e4e.  call temp:= `isCacheable`(v0, v2, v3) @signature `Lokhttp3/internal/cache/CacheStrategy$Companion;.isCacheable:(Lokhttp3/Response;Lokhttp3/Request;)Z` @kind virtual;
  #L1a8e54.  v0:= temp;
  #L1a8e56.  if v0 != 0 then goto L1a8e6a;
  #L1a8e5a.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a8e5e.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L1a8e62.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a8e68.  return v0 @kind object;
  #L1a8e6a.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L1a8e6e.  call temp:= `cacheControl`(v0) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1a8e74.  v0:= temp @kind object;
  #L1a8e76.  call temp:= `noCache`(v0) @signature `Lokhttp3/CacheControl;.noCache:()Z` @kind virtual;
  #L1a8e7c.  v2:= temp;
  #L1a8e7e.  if v2 != 0 then goto L1a9038;
  #L1a8e82.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L1a8e86.  call temp:= `d`(v13, v2) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.d:(Lokhttp3/Request;)Z` @kind direct;
  #L1a8e8c.  v2:= temp;
  #L1a8e8e.  if v2 == 0 then goto L1a8e96;
  #L1a8e92.  goto L1a9038;
  #L1a8e96.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L1a8e9a.  call temp:= `cacheControl`(v2) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1a8ea0.  v2:= temp @kind object;
  #L1a8ea2.  call temp:= `a`(v13) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.a:()J` @kind direct;
  #L1a8ea8.  v3:= temp @kind wide;
  #L1a8eaa.  call temp:= `c`(v13) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.c:()J` @kind direct;
  #L1a8eb0.  v5:= temp @kind wide;
  #L1a8eb2.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1a8eb8.  v7:= temp;
  #L1a8eba.  v8:= -1I;
  #L1a8ebc.  if v7 == v8 then goto L1a8ede;
  #L1a8ec0.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a8ec4.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1a8eca.  v9:= temp;
  #L1a8ecc.  v9:= (`long`) v9 @kind i2l;
  #L1a8ece.  call temp:= `toMillis`(v7, v9) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1a8ed4.  v9:= temp @kind wide;
  #L1a8ed6.  call temp:= `min`(v5, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1a8edc.  v5:= temp @kind wide;
  #L1a8ede.  call temp:= `minFreshSeconds`(v0) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @kind virtual;
  #L1a8ee4.  v7:= temp;
  #L1a8ee6.  v9:= 0L;
  #L1a8eea.  if v7 == v8 then goto L1a8f06;
  #L1a8eee.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a8ef2.  call temp:= `minFreshSeconds`(v0) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @kind virtual;
  #L1a8ef8.  v11:= temp;
  #L1a8efa.  v11:= (`long`) v11 @kind i2l;
  #L1a8efc.  call temp:= `toMillis`(v7, v11) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1a8f02.  v11:= temp @kind wide;
  #L1a8f04.  goto L1a8f08;
  #L1a8f06.  v11:= v9 @kind wide;
  #L1a8f08.  call temp:= `mustRevalidate`(v2) @signature `Lokhttp3/CacheControl;.mustRevalidate:()Z` @kind virtual;
  #L1a8f0e.  v7:= temp;
  #L1a8f10.  if v7 != 0 then goto L1a8f36;
  #L1a8f14.  call temp:= `maxStaleSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @kind virtual;
  #L1a8f1a.  v7:= temp;
  #L1a8f1c.  if v7 == v8 then goto L1a8f36;
  #L1a8f20.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a8f24.  call temp:= `maxStaleSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @kind virtual;
  #L1a8f2a.  v0:= temp;
  #L1a8f2c.  v8:= (`long`) v0 @kind i2l;
  #L1a8f2e.  call temp:= `toMillis`(v7, v8) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1a8f34.  v9:= temp @kind wide;
  #L1a8f36.  call temp:= `noCache`(v2) @signature `Lokhttp3/CacheControl;.noCache:()Z` @kind virtual;
  #L1a8f3c.  v0:= temp;
  #L1a8f3e.  if v0 != 0 then goto L1a8fa8;
  #L1a8f42.  v11:= v11 + v3 @kind long;
  #L1a8f44.  v9:= v9 + v5 @kind long;
  #L1a8f46.  v0:= lcmp(v11, v9);
  #L1a8f4a.  if v0 >= 0 then goto L1a8fa8;
  #L1a8f4e.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L1a8f52.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L1a8f58.  v0:= temp @kind object;
  #L1a8f5a.  v2:= "Warning" @kind object;
  #L1a8f5e.  v7:= lcmp(v11, v5);
  #L1a8f62.  if v7 < 0 then goto L1a8f70;
  #L1a8f66.  v5:= "110 HttpURLConnection \"Response is stale\"" @kind object;
  #L1a8f6a.  call temp:= `addHeader`(v0, v2, v5) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1a8f70.  v5:= 86400000L;
  #L1a8f76.  v7:= lcmp(v3, v5);
  #L1a8f7a.  if v7 <= 0 then goto L1a8f94;
  #L1a8f7e.  call temp:= `e`(v13) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.e:()Z` @kind direct;
  #L1a8f84.  v3:= temp;
  #L1a8f86.  if v3 == 0 then goto L1a8f94;
  #L1a8f8a.  v3:= "113 HttpURLConnection \"Heuristic expiration\"" @kind object;
  #L1a8f8e.  call temp:= `addHeader`(v0, v2, v3) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1a8f94.  v2:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a8f98.  call temp:= `build`(v0) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L1a8f9e.  v0:= temp @kind object;
  #L1a8fa0.  call `<init>`(v2, v1, v0) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a8fa6.  return v2 @kind object;
  #L1a8fa8.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.h` @type ^`java.lang.String` @kind object;
  #L1a8fac.  v2:= "If-Modified-Since" @kind object;
  #L1a8fb0.  if v0 == 0 then goto L1a8fba;
  #L1a8fb4.  v2:= "If-None-Match" @kind object;
  #L1a8fb8.  goto L1a8fd4;
  #L1a8fba.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.c` @type ^`java.util.Date` @kind object;
  #L1a8fbe.  if v0 == 0 then goto L1a8fc8;
  #L1a8fc2.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.d` @type ^`java.lang.String` @kind object;
  #L1a8fc6.  goto L1a8fd4;
  #L1a8fc8.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.a` @type ^`java.util.Date` @kind object;
  #L1a8fcc.  if v0 == 0 then goto L1a9028;
  #L1a8fd0.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.b` @type ^`java.lang.String` @kind object;
  #L1a8fd4.  v1:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L1a8fd8.  call temp:= `headers`(v1) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1a8fde.  v1:= temp @kind object;
  #L1a8fe0.  call temp:= `newBuilder`(v1) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L1a8fe6.  v1:= temp @kind object;
  #L1a8fe8.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1a8fee.  call temp:= `addLenient$okhttp`(v1, v2, v0) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1a8ff4.  v0:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L1a8ff8.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L1a8ffe.  v0:= temp @kind object;
  #L1a9000.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L1a9006.  v1:= temp @kind object;
  #L1a9008.  call temp:= `headers`(v0, v1) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1a900e.  v0:= temp @kind object;
  #L1a9010.  call temp:= `build`(v0) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L1a9016.  v0:= temp @kind object;
  #L1a9018.  v1:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a901c.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L1a9020.  call `<init>`(v1, v0, v2) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a9026.  return v1 @kind object;
  #L1a9028.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a902c.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L1a9030.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a9036.  return v0 @kind object;
  #L1a9038.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a903c.  v2:= v13.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L1a9040.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a9046.  return v0 @kind object;
}
procedure `long` `c`(`okhttp3.internal.cache.CacheStrategy$Factory` v7 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.c:()J` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a8cac.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L1a8cb0.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1a8cb6.  call temp:= `cacheControl`(v0) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1a8cbc.  v0:= temp @kind object;
  #L1a8cbe.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1a8cc4.  v1:= temp;
  #L1a8cc6.  v2:= -1I;
  #L1a8cc8.  if v1 == v2 then goto L1a8ce4;
  #L1a8ccc.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1a8cd0.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1a8cd6.  v0:= temp;
  #L1a8cd8.  v2:= (`long`) v0 @kind i2l;
  #L1a8cda.  call temp:= `toMillis`(v1, v2) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1a8ce0.  v0:= temp @kind wide;
  #L1a8ce2.  return v0 @kind wide;
  #L1a8ce4.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.e` @type ^`java.util.Date` @kind object;
  #L1a8ce8.  v1:= 0L;
  #L1a8cec.  if v0 == 0 then goto L1a8d1c;
  #L1a8cf0.  v3:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.a` @type ^`java.util.Date` @kind object;
  #L1a8cf4.  if v3 == 0 then goto L1a8d02;
  #L1a8cf8.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1a8cfe.  v3:= temp @kind wide;
  #L1a8d00.  goto L1a8d06;
  #L1a8d02.  v3:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.g` @type ^`long` @kind wide;
  #L1a8d06.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1a8d0c.  v5:= temp @kind wide;
  #L1a8d0e.  v5:= v5 - v3 @kind long;
  #L1a8d10.  v0:= lcmp(v5, v1);
  #L1a8d14.  if v0 <= 0 then goto L1a8d1a;
  #L1a8d18.  v1:= v5 @kind wide;
  #L1a8d1a.  return v1 @kind wide;
  #L1a8d1c.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.c` @type ^`java.util.Date` @kind object;
  #L1a8d20.  if v0 == 0 then goto L1a8d80;
  #L1a8d24.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L1a8d28.  call temp:= `request`(v0) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L1a8d2e.  v0:= temp @kind object;
  #L1a8d30.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a8d36.  v0:= temp @kind object;
  #L1a8d38.  call temp:= `query`(v0) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @kind virtual;
  #L1a8d3e.  v0:= temp @kind object;
  #L1a8d40.  if v0 != 0 then goto L1a8d80;
  #L1a8d44.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.a` @type ^`java.util.Date` @kind object;
  #L1a8d48.  if v0 == 0 then goto L1a8d56;
  #L1a8d4c.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1a8d52.  v3:= temp @kind wide;
  #L1a8d54.  goto L1a8d5a;
  #L1a8d56.  v3:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.f` @type ^`long` @kind wide;
  #L1a8d5a.  v0:= v7.`okhttp3.internal.cache.CacheStrategy$Factory.c` @type ^`java.util.Date` @kind object;
  #L1a8d5e.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1a8d64.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1a8d6a.  v5:= temp @kind wide;
  #L1a8d6c.  v3:= v3 - v5 @kind long;
  #L1a8d6e.  v0:= lcmp(v3, v1);
  #L1a8d72.  if v0 <= 0 then goto L1a8d80;
  #L1a8d76.  v0:= 10I;
  #L1a8d7a.  v0:= (`long`) v0 @kind i2l;
  #L1a8d7c.  v1:= v3 / v0 @kind long;
  #L1a8d80.  return v1 @kind wide;
}
procedure `boolean` `d`(`okhttp3.internal.cache.CacheStrategy$Factory` v1 @kind this, `okhttp3.Request` v2 @kind object) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.d:(Lokhttp3/Request;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1a8bc4.  v0:= "If-Modified-Since" @kind object;
  #L1a8bc8.  call temp:= `header`(v2, v0) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1a8bce.  v0:= temp @kind object;
  #L1a8bd0.  if v0 != 0 then goto L1a8bea;
  #L1a8bd4.  v0:= "If-None-Match" @kind object;
  #L1a8bd8.  call temp:= `header`(v2, v0) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1a8bde.  v2:= temp @kind object;
  #L1a8be0.  if v2 == 0 then goto L1a8be6;
  #L1a8be4.  goto L1a8bea;
  #L1a8be6.  v2:= 0I;
  #L1a8be8.  goto L1a8bec;
  #L1a8bea.  v2:= 1I;
  #L1a8bec.  return v2;
}
procedure `boolean` `e`(`okhttp3.internal.cache.CacheStrategy$Factory` v2 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.e:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1a8c00.  v0:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.l` @type ^`okhttp3.Response` @kind object;
  #L1a8c04.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1a8c0a.  call temp:= `cacheControl`(v0) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1a8c10.  v0:= temp @kind object;
  #L1a8c12.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L1a8c18.  v0:= temp;
  #L1a8c1a.  v1:= -1I;
  #L1a8c1c.  if v0 != v1 then goto L1a8c2c;
  #L1a8c20.  v0:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.e` @type ^`java.util.Date` @kind object;
  #L1a8c24.  if v0 != 0 then goto L1a8c2c;
  #L1a8c28.  v0:= 1I;
  #L1a8c2a.  goto L1a8c2e;
  #L1a8c2c.  v0:= 0I;
  #L1a8c2e.  return v0;
}
procedure `okhttp3.internal.cache.CacheStrategy` `compute`(`okhttp3.internal.cache.CacheStrategy$Factory` v2 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.compute:()Lokhttp3/internal/cache/CacheStrategy;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1a8dac.  call temp:= `b`(v2) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.b:()Lokhttp3/internal/cache/CacheStrategy;` @kind direct;
  #L1a8db2.  v0:= temp @kind object;
  #L1a8db4.  call temp:= `getNetworkRequest`(v0) @signature `Lokhttp3/internal/cache/CacheStrategy;.getNetworkRequest:()Lokhttp3/Request;` @kind virtual;
  #L1a8dba.  v1:= temp @kind object;
  #L1a8dbc.  if v1 == 0 then goto L1a8de4;
  #L1a8dc0.  v1:= v2.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L1a8dc4.  call temp:= `cacheControl`(v1) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1a8dca.  v1:= temp @kind object;
  #L1a8dcc.  call temp:= `onlyIfCached`(v1) @signature `Lokhttp3/CacheControl;.onlyIfCached:()Z` @kind virtual;
  #L1a8dd2.  v1:= temp;
  #L1a8dd4.  if v1 == 0 then goto L1a8de4;
  #L1a8dd8.  v0:= new `okhttp3.internal.cache.CacheStrategy`;
  #L1a8ddc.  v1:= 0I;
  #L1a8dde.  call `<init>`(v0, v1, v1) @signature `Lokhttp3/internal/cache/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L1a8de4.  return v0 @kind object;
}
procedure `okhttp3.Request` `getRequest$okhttp`(`okhttp3.internal.cache.CacheStrategy$Factory` v1 @kind this) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.getRequest$okhttp:()Lokhttp3/Request;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a8d94.  v0:= v1.`okhttp3.internal.cache.CacheStrategy$Factory.k` @type ^`okhttp3.Request` @kind object;
  #L1a8d98.  return v0 @kind object;
}
