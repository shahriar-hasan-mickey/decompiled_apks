record `okhttp3.internal.cache.DiskLruCache$Entry$newSource$1` @kind class @AccessFlag PUBLIC_FINAL extends `okio.ForwardingSource` @kind class {
  `boolean` `okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.a` @AccessFlag PRIVATE;
  `okhttp3.internal.cache.DiskLruCache$Entry` `okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1` v0 @kind this, `okhttp3.internal.cache.DiskLruCache$Entry` v1 @kind object, `okio.Source` v2 @kind object, `okio.Source` v3 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry$newSource$1;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Entry;Lokio/Source;Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1a9658.  v0.`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.b` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` := v1 @kind object;
  #L1a965c.  call `<init>`(v0, v3) @signature `Lokio/ForwardingSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L1a9662.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry$newSource$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a9674.  call `close`(v3) @signature `Lokio/ForwardingSource;.close:()V` @kind super;
  #L1a967a.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.a` @type ^`boolean` @kind boolean;
  #L1a967e.  if v0 != 0 then goto L1a96e8;
  #L1a9682.  v0:= 1I;
  #L1a9684.  v3.`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.a` @type ^`boolean` := v0 @kind boolean;
  #L1a9688.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.b` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a968c.  v0:= v0.`okhttp3.internal.cache.DiskLruCache$Entry.j` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a9690.  @monitorenter v0
  #L1a9692.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.b` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a9696.  call temp:= `getLockingSourceCount$okhttp`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.getLockingSourceCount$okhttp:()I` @kind virtual;
  #L1a969c.  v2:= temp;
  #L1a969e.  v2:= v2 + -1;
  #L1a96a2.  call `setLockingSourceCount$okhttp`(v1, v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.setLockingSourceCount$okhttp:(I)V` @kind virtual;
  #L1a96a8.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.b` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a96ac.  call temp:= `getLockingSourceCount$okhttp`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.getLockingSourceCount$okhttp:()I` @kind virtual;
  #L1a96b2.  v1:= temp;
  #L1a96b4.  if v1 != 0 then goto L1a96da;
  #L1a96b8.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.b` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a96bc.  call temp:= `getZombie$okhttp`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.getZombie$okhttp:()Z` @kind virtual;
  #L1a96c2.  v1:= temp;
  #L1a96c4.  if v1 == 0 then goto L1a96da;
  #L1a96c8.  v1:= v3.`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.b` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a96cc.  v1:= v1.`okhttp3.internal.cache.DiskLruCache$Entry.j` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a96d0.  v2:= v3.`okhttp3.internal.cache.DiskLruCache$Entry$newSource$1.b` @type ^`okhttp3.internal.cache.DiskLruCache$Entry` @kind object;
  #L1a96d4.  call temp:= `removeEntry$okhttp`(v1, v2) @signature `Lokhttp3/internal/cache/DiskLruCache;.removeEntry$okhttp:(Lokhttp3/internal/cache/DiskLruCache$Entry;)Z` @kind virtual;
  #L1a96da.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1a96de.  @monitorexit v0
  #L1a96e0.  goto L1a96e8;
  #L1a96e2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a96e4.  @monitorexit v0
  #L1a96e6.  throw v1;
  #L1a96e8.  return @kind void;
  catch `java.lang.Throwable` @[L1a9692..L1a96de] goto L1a96e2;
}
