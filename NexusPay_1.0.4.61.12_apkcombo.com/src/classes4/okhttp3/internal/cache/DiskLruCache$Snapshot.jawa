record `okhttp3.internal.cache.DiskLruCache$Snapshot` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `java.lang.String` `okhttp3.internal.cache.DiskLruCache$Snapshot.a` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.internal.cache.DiskLruCache$Snapshot.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.internal.cache.DiskLruCache$Snapshot.c` @AccessFlag PRIVATE_FINAL;
  `long`[] `okhttp3.internal.cache.DiskLruCache$Snapshot.d` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$Snapshot.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$Snapshot` v1 @kind this, `okhttp3.internal.cache.DiskLruCache` v2 @kind object, `java.lang.String` v3 @kind object, `long` v4 , `java.util.List` v6 @kind object, `long`[] v7 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.<init>:(Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;JLjava/util/List;[J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a9c8c.  v0:= "key" @kind object;
  #L1a9c90.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a9c96.  v0:= "sources" @kind object;
  #L1a9c9a.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a9ca0.  v0:= "lengths" @kind object;
  #L1a9ca4.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a9caa.  v1.`okhttp3.internal.cache.DiskLruCache$Snapshot.e` @type ^`okhttp3.internal.cache.DiskLruCache` := v2 @kind object;
  #L1a9cae.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a9cb4.  v1.`okhttp3.internal.cache.DiskLruCache$Snapshot.a` @type ^`java.lang.String` := v3 @kind object;
  #L1a9cb8.  v1.`okhttp3.internal.cache.DiskLruCache$Snapshot.b` @type ^`long` := v4 @kind wide;
  #L1a9cbc.  v1.`okhttp3.internal.cache.DiskLruCache$Snapshot.c` @type ^`java.util.List` := v6 @kind object;
  #L1a9cc0.  v1.`okhttp3.internal.cache.DiskLruCache$Snapshot.d` @type ^`long`[] := v7 @kind object;
  #L1a9cc4.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.cache.DiskLruCache$Snapshot` v2 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a9cd8.  v0:= v2.`okhttp3.internal.cache.DiskLruCache$Snapshot.c` @type ^`java.util.List` @kind object;
  #L1a9cdc.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1a9ce2.  v0:= temp @kind object;
  #L1a9ce4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1a9cea.  v1:= temp;
  #L1a9cec.  if v1 == 0 then goto L1a9d04;
  #L1a9cf0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1a9cf6.  v1:= temp @kind object;
  #L1a9cf8.  v1:= (`okio.Source`) v1 @kind object;
  #L1a9cfc.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1a9d02.  goto L1a9ce4;
  #L1a9d04.  return @kind void;
}
procedure `okhttp3.internal.cache.DiskLruCache$Editor` `edit`(`okhttp3.internal.cache.DiskLruCache$Snapshot` v4 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.edit:()Lokhttp3/internal/cache/DiskLruCache$Editor;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a9c40.  v0:= v4.`okhttp3.internal.cache.DiskLruCache$Snapshot.e` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a9c44.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Snapshot.a` @type ^`java.lang.String` @kind object;
  #L1a9c48.  v2:= v4.`okhttp3.internal.cache.DiskLruCache$Snapshot.b` @type ^`long` @kind wide;
  #L1a9c4c.  call temp:= `edit`(v0, v1, v2) @signature `Lokhttp3/internal/cache/DiskLruCache;.edit:(Ljava/lang/String;J)Lokhttp3/internal/cache/DiskLruCache$Editor;` @kind virtual;
  #L1a9c52.  v0:= temp @kind object;
  #L1a9c54.  return v0 @kind object;
}
procedure `long` `getLength`(`okhttp3.internal.cache.DiskLruCache$Snapshot` v3 @kind this, `int` v4 ) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.getLength:(I)J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1a9c24.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$Snapshot.d` @type ^`long`[] @kind object;
  #L1a9c28.  v1:= v0[v4] @kind wide;
  #L1a9c2c.  return v1 @kind wide;
}
procedure `okio.Source` `getSource`(`okhttp3.internal.cache.DiskLruCache$Snapshot` v1 @kind this, `int` v2 ) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.getSource:(I)Lokio/Source;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a9c68.  v0:= v1.`okhttp3.internal.cache.DiskLruCache$Snapshot.c` @type ^`java.util.List` @kind object;
  #L1a9c6c.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1a9c72.  v2:= temp @kind object;
  #L1a9c74.  v2:= (`okio.Source`) v2 @kind object;
  #L1a9c78.  return v2 @kind object;
}
procedure `java.lang.String` `key`(`okhttp3.internal.cache.DiskLruCache$Snapshot` v1 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.key:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a9c0c.  v0:= v1.`okhttp3.internal.cache.DiskLruCache$Snapshot.a` @type ^`java.lang.String` @kind object;
  #L1a9c10.  return v0 @kind object;
}
