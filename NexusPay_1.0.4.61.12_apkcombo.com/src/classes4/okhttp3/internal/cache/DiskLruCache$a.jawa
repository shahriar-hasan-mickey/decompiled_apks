record `okhttp3.internal.cache.DiskLruCache$a` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$a` v0 @kind this, `okhttp3.internal.cache.DiskLruCache` v1 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$a;.<init>:(Lokhttp3/internal/cache/DiskLruCache;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1a9e44.  v0.`okhttp3.internal.cache.DiskLruCache$a.a` @type ^`okhttp3.internal.cache.DiskLruCache` := v1 @kind object;
  #L1a9e48.  v1:= 1I;
  #L1a9e4a.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L1a9e50.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.cache.DiskLruCache$a` v4 @kind this, `java.io.IOException` v5 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$a;.a:(Ljava/io/IOException;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a9e64.  v0:= "it" @kind object;
  #L1a9e68.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a9e6e.  v5:= v4.`okhttp3.internal.cache.DiskLruCache$a.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a9e72.  v0:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L1a9e76.  if v0 == 0 then goto L1a9ee0;
  #L1a9e7a.  call temp:= `holdsLock`(v5) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L1a9e80.  v0:= temp;
  #L1a9e82.  if v0 == 0 then goto L1a9e88;
  #L1a9e86.  goto L1a9ee0;
  #L1a9e88.  v0:= new `java.lang.AssertionError`;
  #L1a9e8c.  v1:= new `java.lang.StringBuilder`;
  #L1a9e90.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a9e96.  v2:= "Thread " @kind object;
  #L1a9e9a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a9ea0.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1a9ea6.  v2:= temp @kind object;
  #L1a9ea8.  v3:= "Thread.currentThread()" @kind object;
  #L1a9eac.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a9eb2.  call temp:= `getName`(v2) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L1a9eb8.  v2:= temp @kind object;
  #L1a9eba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a9ec0.  v2:= " MUST hold lock on " @kind object;
  #L1a9ec4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a9eca.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a9ed0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a9ed6.  v5:= temp @kind object;
  #L1a9ed8.  call `<init>`(v0, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1a9ede.  throw v0;
  #L1a9ee0.  v5:= v4.`okhttp3.internal.cache.DiskLruCache$a.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1a9ee4.  v0:= 1I;
  #L1a9ee6.  call `access$setHasJournalErrors$p`(v5, v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.access$setHasJournalErrors$p:(Lokhttp3/internal/cache/DiskLruCache;Z)V` @kind static;
  #L1a9eec.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`okhttp3.internal.cache.DiskLruCache$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$a;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1a9e24.  v1:= (`java.io.IOException`) v1 @kind object;
  #L1a9e28.  call `a`(v0, v1) @signature `Lokhttp3/internal/cache/DiskLruCache$a;.a:(Ljava/io/IOException;)V` @kind virtual;
  #L1a9e2e.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1a9e32.  return v1 @kind object;
}
