record `okhttp3.internal.connection.RealCall$AsyncCall` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Runnable` @kind interface {
  `java.util.concurrent.atomic.AtomicInteger` `okhttp3.internal.connection.RealCall$AsyncCall.a` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.Callback` `okhttp3.internal.connection.RealCall$AsyncCall.b` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.RealCall` `okhttp3.internal.connection.RealCall$AsyncCall.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RealCall$AsyncCall` v1 @kind this, `okhttp3.internal.connection.RealCall` v2 @kind object, `okhttp3.Callback` v3 @kind object) @signature `Lokhttp3/internal/connection/RealCall$AsyncCall;.<init>:(Lokhttp3/internal/connection/RealCall;Lokhttp3/Callback;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1af284.  v0:= "responseCallback" @kind object;
  #L1af288.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1af28e.  v1.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` := v2 @kind object;
  #L1af292.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1af298.  v1.`okhttp3.internal.connection.RealCall$AsyncCall.b` @type ^`okhttp3.Callback` := v3 @kind object;
  #L1af29c.  v2:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L1af2a0.  v3:= 0I;
  #L1af2a2.  call `<init>`(v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L1af2a8.  v1.`okhttp3.internal.connection.RealCall$AsyncCall.a` @type ^`java.util.concurrent.atomic.AtomicInteger` := v2 @kind object;
  #L1af2ac.  return @kind void;
}
procedure `void` `executeOn`(`okhttp3.internal.connection.RealCall$AsyncCall` v4 @kind this, `java.util.concurrent.ExecutorService` v5 @kind object) @signature `Lokhttp3/internal/connection/RealCall$AsyncCall;.executeOn:(Ljava/util/concurrent/ExecutorService;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1af2c0.  v0:= "executorService" @kind object;
  #L1af2c4.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1af2ca.  v0:= v4.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af2ce.  call temp:= `getClient`(v0) @signature `Lokhttp3/internal/connection/RealCall;.getClient:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L1af2d4.  v0:= temp @kind object;
  #L1af2d6.  call temp:= `dispatcher`(v0) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L1af2dc.  v0:= temp @kind object;
  #L1af2de.  v1:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L1af2e2.  if v1 == 0 then goto L1af34c;
  #L1af2e6.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L1af2ec.  v1:= temp;
  #L1af2ee.  if v1 != 0 then goto L1af2f4;
  #L1af2f2.  goto L1af34c;
  #L1af2f4.  v5:= new `java.lang.AssertionError`;
  #L1af2f8.  v1:= new `java.lang.StringBuilder`;
  #L1af2fc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1af302.  v2:= "Thread " @kind object;
  #L1af306.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af30c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1af312.  v2:= temp @kind object;
  #L1af314.  v3:= "Thread.currentThread()" @kind object;
  #L1af318.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1af31e.  call temp:= `getName`(v2) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L1af324.  v2:= temp @kind object;
  #L1af326.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af32c.  v2:= " MUST NOT hold lock on " @kind object;
  #L1af330.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af336.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af33c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1af342.  v0:= temp @kind object;
  #L1af344.  call `<init>`(v5, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1af34a.  throw v5;
  #L1af34c.  call `execute`(v5, v4) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L1af352.  goto L1af3a0;
  #L1af354.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1af356.  goto L1af3a2;
  #L1af358.  v5:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L1af35a.  v0:= new `java.io.InterruptedIOException`;
  #L1af35e.  v1:= "executor rejected" @kind object;
  #L1af362.  call `<init>`(v0, v1) @signature `Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af368.  call temp:= `initCause`(v0, v5) @signature `Ljava/io/InterruptedIOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L1af36e.  v5:= v4.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af372.  call temp:= `noMoreExchanges$okhttp`(v5, v0) @signature `Lokhttp3/internal/connection/RealCall;.noMoreExchanges$okhttp:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1af378.  v5:= v4.`okhttp3.internal.connection.RealCall$AsyncCall.b` @type ^`okhttp3.Callback` @kind object;
  #L1af37c.  v1:= v4.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af380.  call `onFailure`(v5, v1, v0) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #L1af386.  v5:= v4.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af38a.  call temp:= `getClient`(v5) @signature `Lokhttp3/internal/connection/RealCall;.getClient:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L1af390.  v5:= temp @kind object;
  #L1af392.  call temp:= `dispatcher`(v5) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L1af398.  v5:= temp @kind object;
  #L1af39a.  call `finished$okhttp`(v5, v4) @signature `Lokhttp3/Dispatcher;.finished$okhttp:(Lokhttp3/internal/connection/RealCall$AsyncCall;)V` @kind virtual;
  #L1af3a0.  return @kind void;
  #L1af3a2.  v0:= v4.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af3a6.  call temp:= `getClient`(v0) @signature `Lokhttp3/internal/connection/RealCall;.getClient:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L1af3ac.  v0:= temp @kind object;
  #L1af3ae.  call temp:= `dispatcher`(v0) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L1af3b4.  v0:= temp @kind object;
  #L1af3b6.  call `finished$okhttp`(v0, v4) @signature `Lokhttp3/Dispatcher;.finished$okhttp:(Lokhttp3/internal/connection/RealCall$AsyncCall;)V` @kind virtual;
  #L1af3bc.  throw v5;
  catch `java.util.concurrent.RejectedExecutionException` @[L1af34c..L1af352] goto L1af358;
  catch `java.lang.Throwable` @[L1af34c..L1af352] goto L1af354;
  catch `java.lang.Throwable` @[L1af35a..L1af386] goto L1af354;
}
procedure `okhttp3.internal.connection.RealCall` `getCall`(`okhttp3.internal.connection.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/internal/connection/RealCall$AsyncCall;.getCall:()Lokhttp3/internal/connection/RealCall;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1af26c.  v0:= v1.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af270.  return v0 @kind object;
}
procedure `java.util.concurrent.atomic.AtomicInteger` `getCallsPerHost`(`okhttp3.internal.connection.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/internal/connection/RealCall$AsyncCall;.getCallsPerHost:()Ljava/util/concurrent/atomic/AtomicInteger;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1af234.  v0:= v1.`okhttp3.internal.connection.RealCall$AsyncCall.a` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L1af238.  return v0 @kind object;
}
procedure `java.lang.String` `getHost`(`okhttp3.internal.connection.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/internal/connection/RealCall$AsyncCall;.getHost:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1af204.  v0:= v1.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af208.  call temp:= `getOriginalRequest`(v0) @signature `Lokhttp3/internal/connection/RealCall;.getOriginalRequest:()Lokhttp3/Request;` @kind virtual;
  #L1af20e.  v0:= temp @kind object;
  #L1af210.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1af216.  v0:= temp @kind object;
  #L1af218.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1af21e.  v0:= temp @kind object;
  #L1af220.  return v0 @kind object;
}
procedure `okhttp3.Request` `getRequest`(`okhttp3.internal.connection.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/internal/connection/RealCall$AsyncCall;.getRequest:()Lokhttp3/Request;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1af24c.  v0:= v1.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af250.  call temp:= `getOriginalRequest`(v0) @signature `Lokhttp3/internal/connection/RealCall;.getOriginalRequest:()Lokhttp3/Request;` @kind virtual;
  #L1af256.  v0:= temp @kind object;
  #L1af258.  return v0 @kind object;
}
procedure `void` `reuseCallsPerHostFrom`(`okhttp3.internal.connection.RealCall$AsyncCall` v1 @kind this, `okhttp3.internal.connection.RealCall$AsyncCall` v2 @kind object) @signature `Lokhttp3/internal/connection/RealCall$AsyncCall;.reuseCallsPerHostFrom:(Lokhttp3/internal/connection/RealCall$AsyncCall;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1af3e8.  v0:= "other" @kind object;
  #L1af3ec.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1af3f2.  v2:= v2.`okhttp3.internal.connection.RealCall$AsyncCall.a` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L1af3f6.  v1.`okhttp3.internal.connection.RealCall$AsyncCall.a` @type ^`java.util.concurrent.atomic.AtomicInteger` := v2 @kind object;
  #L1af3fa.  return @kind void;
}
procedure `void` `run`(`okhttp3.internal.connection.RealCall$AsyncCall` v6 @kind this) @signature `Lokhttp3/internal/connection/RealCall$AsyncCall;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1af40c.  v0:= new `java.lang.StringBuilder`;
  #L1af410.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1af416.  v1:= "OkHttp " @kind object;
  #L1af41a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af420.  v1:= v6.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af424.  call temp:= `redactedUrl$okhttp`(v1) @signature `Lokhttp3/internal/connection/RealCall;.redactedUrl$okhttp:()Ljava/lang/String;` @kind virtual;
  #L1af42a.  v1:= temp @kind object;
  #L1af42c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af432.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1af438.  v0:= temp @kind object;
  #L1af43a.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1af440.  v1:= temp @kind object;
  #L1af442.  v2:= "currentThread" @kind object;
  #L1af446.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1af44c.  call temp:= `getName`(v1) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L1af452.  v2:= temp @kind object;
  #L1af454.  call `setName`(v1, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L1af45a.  v0:= 0I;
  #L1af45c.  v3:= v6.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af460.  call temp:= `access$getTimeout$p`(v3) @signature `Lokhttp3/internal/connection/RealCall;.access$getTimeout$p:(Lokhttp3/internal/connection/RealCall;)Lokhttp3/internal/connection/RealCall$timeout$1;` @kind static;
  #L1af466.  v3:= temp @kind object;
  #L1af468.  call `enter`(v3) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L1af46e.  v3:= v6.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af472.  call temp:= `getResponseWithInterceptorChain$okhttp`(v3) @signature `Lokhttp3/internal/connection/RealCall;.getResponseWithInterceptorChain$okhttp:()Lokhttp3/Response;` @kind virtual;
  #L1af478.  v0:= temp @kind object;
  #L1af47a.  v3:= 1I;
  #L1af47c.  v4:= v6.`okhttp3.internal.connection.RealCall$AsyncCall.b` @type ^`okhttp3.Callback` @kind object;
  #L1af480.  v5:= v6.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af484.  call `onResponse`(v4, v5, v0) @signature `Lokhttp3/Callback;.onResponse:(Lokhttp3/Call;Lokhttp3/Response;)V` @kind interface;
  #L1af48a.  v0:= v6.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af48e.  call temp:= `getClient`(v0) @signature `Lokhttp3/internal/connection/RealCall;.getClient:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L1af494.  v0:= temp @kind object;
  #L1af496.  call temp:= `dispatcher`(v0) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L1af49c.  v0:= temp @kind object;
  #L1af49e.  call `finished$okhttp`(v0, v6) @signature `Lokhttp3/Dispatcher;.finished$okhttp:(Lokhttp3/internal/connection/RealCall$AsyncCall;)V` @kind virtual;
  #L1af4a4.  goto L1af57a;
  #L1af4a6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1af4a8.  goto L1af4b4;
  #L1af4aa.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1af4ac.  goto L1af50e;
  #L1af4ae.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1af4b0.  v0:= v3 @kind object;
  #L1af4b2.  v3:= 0I;
  #L1af4b4.  v4:= v6.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af4b8.  call `cancel`(v4) @signature `Lokhttp3/internal/connection/RealCall;.cancel:()V` @kind virtual;
  #L1af4be.  if v3 != 0 then goto L1af502;
  #L1af4c2.  v3:= new `java.io.IOException`;
  #L1af4c6.  v4:= new `java.lang.StringBuilder`;
  #L1af4ca.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1af4d0.  v5:= "canceled due to " @kind object;
  #L1af4d4.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af4da.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af4e0.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1af4e6.  v4:= temp @kind object;
  #L1af4e8.  call `<init>`(v3, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1af4ee.  call `addSuppressed`(v3, v0) @signature `Lkotlin/ExceptionsKt;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L1af4f4.  v4:= v6.`okhttp3.internal.connection.RealCall$AsyncCall.b` @type ^`okhttp3.Callback` @kind object;
  #L1af4f8.  v5:= v6.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af4fc.  call `onFailure`(v4, v5, v3) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #L1af502.  throw v0;
  #L1af504.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1af506.  goto L1af582;
  #L1af508.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L1af50a.  v0:= v3 @kind object;
  #L1af50c.  v3:= 0I;
  #L1af50e.  if v3 == 0 then goto L1af556;
  #L1af512.  v3:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L1af516.  call temp:= `get`(v3) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L1af51c.  v3:= temp @kind object;
  #L1af51e.  v4:= new `java.lang.StringBuilder`;
  #L1af522.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1af528.  v5:= "Callback failure for " @kind object;
  #L1af52c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af532.  v5:= v6.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af536.  call temp:= `access$toLoggableString`(v5) @signature `Lokhttp3/internal/connection/RealCall;.access$toLoggableString:(Lokhttp3/internal/connection/RealCall;)Ljava/lang/String;` @kind static;
  #L1af53c.  v5:= temp @kind object;
  #L1af53e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1af544.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1af54a.  v4:= temp @kind object;
  #L1af54c.  v5:= 4I;
  #L1af54e.  call `log`(v3, v4, v5, v0) @signature `Lokhttp3/internal/platform/Platform;.log:(Ljava/lang/String;ILjava/lang/Throwable;)V` @kind virtual;
  #L1af554.  goto L1af564;
  #L1af556.  v3:= v6.`okhttp3.internal.connection.RealCall$AsyncCall.b` @type ^`okhttp3.Callback` @kind object;
  #L1af55a.  v4:= v6.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af55e.  call `onFailure`(v3, v4, v0) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #L1af564.  v0:= v6.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af568.  call temp:= `getClient`(v0) @signature `Lokhttp3/internal/connection/RealCall;.getClient:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L1af56e.  v0:= temp @kind object;
  #L1af570.  call temp:= `dispatcher`(v0) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L1af576.  v0:= temp @kind object;
  #L1af578.  goto L1af49e;
  #L1af57a.  call `setName`(v1, v2) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L1af580.  return @kind void;
  #L1af582.  v3:= v6.`okhttp3.internal.connection.RealCall$AsyncCall.c` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1af586.  call temp:= `getClient`(v3) @signature `Lokhttp3/internal/connection/RealCall;.getClient:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L1af58c.  v3:= temp @kind object;
  #L1af58e.  call temp:= `dispatcher`(v3) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L1af594.  v3:= temp @kind object;
  #L1af596.  call `finished$okhttp`(v3, v6) @signature `Lokhttp3/Dispatcher;.finished$okhttp:(Lokhttp3/internal/connection/RealCall$AsyncCall;)V` @kind virtual;
  #L1af59c.  throw v0;
  #L1af59e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1af5a0.  call `setName`(v1, v2) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L1af5a6.  throw v0;
  catch `java.lang.Throwable` @[L1af45c..L1af46e] goto L1af59e;
  catch `java.io.IOException` @[L1af46e..L1af47a] goto L1af508;
  catch `java.lang.Throwable` @[L1af46e..L1af47a] goto L1af4ae;
  catch `java.io.IOException` @[L1af47c..L1af48a] goto L1af4aa;
  catch `java.lang.Throwable` @[L1af47c..L1af48a] goto L1af4a6;
  catch `java.lang.Throwable` @[L1af48a..L1af4a4] goto L1af59e;
  catch `java.lang.Throwable` @[L1af4b4..L1af564] goto L1af504;
  catch `java.lang.Throwable` @[L1af564..L1af578] goto L1af59e;
  catch `java.lang.Throwable` @[L1af582..L1af59e] goto L1af59e;
}
