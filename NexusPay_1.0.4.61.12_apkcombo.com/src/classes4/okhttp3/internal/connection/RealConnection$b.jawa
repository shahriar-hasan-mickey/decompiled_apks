record `okhttp3.internal.connection.RealConnection$b` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function0` @kind interface {
  `okhttp3.internal.connection.RealConnection` `okhttp3.internal.connection.RealConnection$b.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RealConnection$b` v0 @kind this, `okhttp3.internal.connection.RealConnection` v1 @kind object) @signature `Lokhttp3/internal/connection/RealConnection$b;.<init>:(Lokhttp3/internal/connection/RealConnection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1b0718.  v0.`okhttp3.internal.connection.RealConnection$b.a` @type ^`okhttp3.internal.connection.RealConnection` := v1 @kind object;
  #L1b071c.  v1:= 0I;
  #L1b071e.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L1b0724.  return @kind void;
}
procedure `java.util.List` `a`(`okhttp3.internal.connection.RealConnection$b` v3 @kind this) @signature `Lokhttp3/internal/connection/RealConnection$b;.a:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1b0694.  v0:= v3.`okhttp3.internal.connection.RealConnection$b.a` @type ^`okhttp3.internal.connection.RealConnection` @kind object;
  #L1b0698.  call temp:= `access$getHandshake$p`(v0) @signature `Lokhttp3/internal/connection/RealConnection;.access$getHandshake$p:(Lokhttp3/internal/connection/RealConnection;)Lokhttp3/Handshake;` @kind static;
  #L1b069e.  v0:= temp @kind object;
  #L1b06a0.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b06a6.  call temp:= `peerCertificates`(v0) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L1b06ac.  v0:= temp @kind object;
  #L1b06ae.  v1:= new `java.util.ArrayList`;
  #L1b06b2.  v2:= 10I;
  #L1b06b6.  call temp:= `collectionSizeOrDefault`(v0, v2) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L1b06bc.  v2:= temp;
  #L1b06be.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1b06c4.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1b06ca.  v0:= temp @kind object;
  #L1b06cc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b06d2.  v2:= temp;
  #L1b06d4.  if v2 == 0 then goto L1b0704;
  #L1b06d8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b06de.  v2:= temp @kind object;
  #L1b06e0.  v2:= (`java.security.cert.Certificate`) v2 @kind object;
  #L1b06e4.  if v2 == 0 then goto L1b06f4;
  #L1b06e8.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L1b06ec.  call temp:= `add`(v1, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1b06f2.  goto L1b06cc;
  #L1b06f4.  v0:= new `java.lang.NullPointerException`;
  #L1b06f8.  v1:= "null cannot be cast to non-null type java.security.cert.X509Certificate" @kind object;
  #L1b06fc.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b0702.  throw v0;
  #L1b0704.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`okhttp3.internal.connection.RealConnection$b` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection$b;.invoke:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1b0678.  call temp:= `a`(v1) @signature `Lokhttp3/internal/connection/RealConnection$b;.a:()Ljava/util/List;` @kind virtual;
  #L1b067e.  v0:= temp @kind object;
  #L1b0680.  return v0 @kind object;
}
