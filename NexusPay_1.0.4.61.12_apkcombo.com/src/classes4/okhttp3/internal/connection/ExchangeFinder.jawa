record `okhttp3.internal.connection.ExchangeFinder` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.internal.connection.RouteSelector$Selection` `okhttp3.internal.connection.ExchangeFinder.a` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.RouteSelector` `okhttp3.internal.connection.ExchangeFinder.b` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.ExchangeFinder.c` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.ExchangeFinder.d` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.ExchangeFinder.e` @AccessFlag PRIVATE;
  `okhttp3.Route` `okhttp3.internal.connection.ExchangeFinder.f` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.RealConnectionPool` `okhttp3.internal.connection.ExchangeFinder.g` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Address` `okhttp3.internal.connection.ExchangeFinder.h` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.RealCall` `okhttp3.internal.connection.ExchangeFinder.i` @AccessFlag PRIVATE_FINAL;
  `okhttp3.EventListener` `okhttp3.internal.connection.ExchangeFinder.j` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.ExchangeFinder` v1 @kind this, `okhttp3.internal.connection.RealConnectionPool` v2 @kind object, `okhttp3.Address` v3 @kind object, `okhttp3.internal.connection.RealCall` v4 @kind object, `okhttp3.EventListener` v5 @kind object) @signature `Lokhttp3/internal/connection/ExchangeFinder;.<init>:(Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Address;Lokhttp3/internal/connection/RealCall;Lokhttp3/EventListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1aebf4.  v0:= "connectionPool" @kind object;
  #L1aebf8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1aebfe.  v0:= "address" @kind object;
  #L1aec02.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1aec08.  v0:= "call" @kind object;
  #L1aec0c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1aec12.  v0:= "eventListener" @kind object;
  #L1aec16.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1aec1c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1aec22.  v1.`okhttp3.internal.connection.ExchangeFinder.g` @type ^`okhttp3.internal.connection.RealConnectionPool` := v2 @kind object;
  #L1aec26.  v1.`okhttp3.internal.connection.ExchangeFinder.h` @type ^`okhttp3.Address` := v3 @kind object;
  #L1aec2a.  v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` := v4 @kind object;
  #L1aec2e.  v1.`okhttp3.internal.connection.ExchangeFinder.j` @type ^`okhttp3.EventListener` := v5 @kind object;
  #L1aec32.  return @kind void;
}
procedure `okhttp3.internal.connection.RealConnection` `a`(`okhttp3.internal.connection.ExchangeFinder` v14 @kind this, `int` v15 , `int` v16 , `int` v17 , `int` v18 , `boolean` v19 ) @signature `Lokhttp3/internal/connection/ExchangeFinder;.a:(IIIIZ)Lokhttp3/internal/connection/RealConnection;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L1ae790.  v1:= v14 @kind object;
  #L1ae792.  v0:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae796.  call temp:= `isCanceled`(v0) @signature `Lokhttp3/internal/connection/RealCall;.isCanceled:()Z` @kind virtual;
  #L1ae79c.  v0:= temp;
  #L1ae79e.  if v0 != 0 then goto L1aea80;
  #L1ae7a2.  v0:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae7a6.  call temp:= `getConnection`(v0) @signature `Lokhttp3/internal/connection/RealCall;.getConnection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L1ae7ac.  v2:= temp @kind object;
  #L1ae7ae.  v0:= 1I;
  #L1ae7b0.  v3:= 0I;
  #L1ae7b2.  v4:= 0I;
  #L1ae7b4.  if v2 == 0 then goto L1ae858;
  #L1ae7b8.  @monitorenter v2
  #L1ae7ba.  call temp:= `getNoNewExchanges`(v2) @signature `Lokhttp3/internal/connection/RealConnection;.getNoNewExchanges:()Z` @kind virtual;
  #L1ae7c0.  v5:= temp;
  #L1ae7c2.  if v5 != 0 then goto L1ae7f0;
  #L1ae7c6.  call temp:= `route`(v2) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @kind virtual;
  #L1ae7cc.  v5:= temp @kind object;
  #L1ae7ce.  call temp:= `address`(v5) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1ae7d4.  v5:= temp @kind object;
  #L1ae7d6.  call temp:= `url`(v5) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1ae7dc.  v5:= temp @kind object;
  #L1ae7de.  call temp:= `sameHostAndPort`(v14, v5) @signature `Lokhttp3/internal/connection/ExchangeFinder;.sameHostAndPort:(Lokhttp3/HttpUrl;)Z` @kind virtual;
  #L1ae7e4.  v5:= temp;
  #L1ae7e6.  if v5 != 0 then goto L1ae7ec;
  #L1ae7ea.  goto L1ae7f0;
  #L1ae7ec.  v5:= v4 @kind object;
  #L1ae7ee.  goto L1ae7fc;
  #L1ae7f0.  v5:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae7f4.  call temp:= `releaseConnectionNoEvents$okhttp`(v5) @signature `Lokhttp3/internal/connection/RealCall;.releaseConnectionNoEvents$okhttp:()Ljava/net/Socket;` @kind virtual;
  #L1ae7fa.  v5:= temp @kind object;
  #L1ae7fc.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1ae800.  @monitorexit v2
  #L1ae802.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae806.  call temp:= `getConnection`(v6) @signature `Lokhttp3/internal/connection/RealCall;.getConnection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L1ae80c.  v6:= temp @kind object;
  #L1ae80e.  if v6 == 0 then goto L1ae838;
  #L1ae812.  if v5 != 0 then goto L1ae818;
  #L1ae816.  goto L1ae81a;
  #L1ae818.  v0:= 0I;
  #L1ae81a.  if v0 == 0 then goto L1ae820;
  #L1ae81e.  return v2 @kind object;
  #L1ae820.  v0:= "Check failed." @kind object;
  #L1ae824.  v2:= new `java.lang.IllegalStateException`;
  #L1ae828.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ae82e.  v0:= temp @kind object;
  #L1ae830.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ae836.  throw v2;
  #L1ae838.  if v5 == 0 then goto L1ae842;
  #L1ae83c.  call `closeQuietly`(v5) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L1ae842.  v5:= v1.`okhttp3.internal.connection.ExchangeFinder.j` @type ^`okhttp3.EventListener` @kind object;
  #L1ae846.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae84a.  call `connectionReleased`(v5, v6, v2) @signature `Lokhttp3/EventListener;.connectionReleased:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L1ae850.  goto L1ae858;
  #L1ae852.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ae854.  @monitorexit v2
  #L1ae856.  throw v0;
  #L1ae858.  v1.`okhttp3.internal.connection.ExchangeFinder.c` @type ^`int` := v3;
  #L1ae85c.  v1.`okhttp3.internal.connection.ExchangeFinder.d` @type ^`int` := v3;
  #L1ae860.  v1.`okhttp3.internal.connection.ExchangeFinder.e` @type ^`int` := v3;
  #L1ae864.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.g` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L1ae868.  v5:= v1.`okhttp3.internal.connection.ExchangeFinder.h` @type ^`okhttp3.Address` @kind object;
  #L1ae86c.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae870.  call temp:= `callAcquirePooledConnection`(v2, v5, v6, v4, v3) @signature `Lokhttp3/internal/connection/RealConnectionPool;.callAcquirePooledConnection:(Lokhttp3/Address;Lokhttp3/internal/connection/RealCall;Ljava/util/List;Z)Z` @kind virtual;
  #L1ae876.  v2:= temp;
  #L1ae878.  if v2 == 0 then goto L1ae89e;
  #L1ae87c.  v0:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae880.  call temp:= `getConnection`(v0) @signature `Lokhttp3/internal/connection/RealCall;.getConnection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L1ae886.  v0:= temp @kind object;
  #L1ae888.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1ae88e.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.j` @type ^`okhttp3.EventListener` @kind object;
  #L1ae892.  v3:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae896.  call `connectionAcquired`(v2, v3, v0) @signature `Lokhttp3/EventListener;.connectionAcquired:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L1ae89c.  return v0 @kind object;
  #L1ae89e.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.f` @type ^`okhttp3.Route` @kind object;
  #L1ae8a2.  if v2 == 0 then goto L1ae8b4;
  #L1ae8a6.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1ae8ac.  v1.`okhttp3.internal.connection.ExchangeFinder.f` @type ^`okhttp3.Route` := v4 @kind object;
  #L1ae8b0.  v5:= v4 @kind object;
  #L1ae8b2.  goto L1ae97e;
  #L1ae8b4.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.a` @type ^`okhttp3.internal.connection.RouteSelector$Selection` @kind object;
  #L1ae8b8.  if v2 == 0 then goto L1ae8e2;
  #L1ae8bc.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1ae8c2.  call temp:= `hasNext`(v2) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.hasNext:()Z` @kind virtual;
  #L1ae8c8.  v2:= temp;
  #L1ae8ca.  if v2 == 0 then goto L1ae8e2;
  #L1ae8ce.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.a` @type ^`okhttp3.internal.connection.RouteSelector$Selection` @kind object;
  #L1ae8d2.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1ae8d8.  call temp:= `next`(v2) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.next:()Lokhttp3/Route;` @kind virtual;
  #L1ae8de.  v2:= temp @kind object;
  #L1ae8e0.  goto L1ae8b0;
  #L1ae8e2.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.b` @type ^`okhttp3.internal.connection.RouteSelector` @kind object;
  #L1ae8e6.  if v2 != 0 then goto L1ae918;
  #L1ae8ea.  v2:= new `okhttp3.internal.connection.RouteSelector`;
  #L1ae8ee.  v5:= v1.`okhttp3.internal.connection.ExchangeFinder.h` @type ^`okhttp3.Address` @kind object;
  #L1ae8f2.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae8f6.  call temp:= `getClient`(v6) @signature `Lokhttp3/internal/connection/RealCall;.getClient:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L1ae8fc.  v6:= temp @kind object;
  #L1ae8fe.  call temp:= `getRouteDatabase`(v6) @signature `Lokhttp3/OkHttpClient;.getRouteDatabase:()Lokhttp3/internal/connection/RouteDatabase;` @kind virtual;
  #L1ae904.  v6:= temp @kind object;
  #L1ae906.  v7:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae90a.  v8:= v1.`okhttp3.internal.connection.ExchangeFinder.j` @type ^`okhttp3.EventListener` @kind object;
  #L1ae90e.  call `<init>`(v2, v5, v6, v7, v8) @signature `Lokhttp3/internal/connection/RouteSelector;.<init>:(Lokhttp3/Address;Lokhttp3/internal/connection/RouteDatabase;Lokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L1ae914.  v1.`okhttp3.internal.connection.ExchangeFinder.b` @type ^`okhttp3.internal.connection.RouteSelector` := v2 @kind object;
  #L1ae918.  call temp:= `next`(v2) @signature `Lokhttp3/internal/connection/RouteSelector;.next:()Lokhttp3/internal/connection/RouteSelector$Selection;` @kind virtual;
  #L1ae91e.  v2:= temp @kind object;
  #L1ae920.  v1.`okhttp3.internal.connection.ExchangeFinder.a` @type ^`okhttp3.internal.connection.RouteSelector$Selection` := v2 @kind object;
  #L1ae924.  call temp:= `getRoutes`(v2) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.getRoutes:()Ljava/util/List;` @kind virtual;
  #L1ae92a.  v5:= temp @kind object;
  #L1ae92c.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae930.  call temp:= `isCanceled`(v6) @signature `Lokhttp3/internal/connection/RealCall;.isCanceled:()Z` @kind virtual;
  #L1ae936.  v6:= temp;
  #L1ae938.  if v6 != 0 then goto L1aea70;
  #L1ae93c.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.g` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L1ae940.  v7:= v1.`okhttp3.internal.connection.ExchangeFinder.h` @type ^`okhttp3.Address` @kind object;
  #L1ae944.  v8:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae948.  call temp:= `callAcquirePooledConnection`(v6, v7, v8, v5, v3) @signature `Lokhttp3/internal/connection/RealConnectionPool;.callAcquirePooledConnection:(Lokhttp3/Address;Lokhttp3/internal/connection/RealCall;Ljava/util/List;Z)Z` @kind virtual;
  #L1ae94e.  v3:= temp;
  #L1ae950.  if v3 == 0 then goto L1ae976;
  #L1ae954.  v0:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae958.  call temp:= `getConnection`(v0) @signature `Lokhttp3/internal/connection/RealCall;.getConnection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L1ae95e.  v0:= temp @kind object;
  #L1ae960.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1ae966.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.j` @type ^`okhttp3.EventListener` @kind object;
  #L1ae96a.  v3:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae96e.  call `connectionAcquired`(v2, v3, v0) @signature `Lokhttp3/EventListener;.connectionAcquired:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L1ae974.  return v0 @kind object;
  #L1ae976.  call temp:= `next`(v2) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.next:()Lokhttp3/Route;` @kind virtual;
  #L1ae97c.  v2:= temp @kind object;
  #L1ae97e.  v3:= new `okhttp3.internal.connection.RealConnection`;
  #L1ae982.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.g` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L1ae986.  call `<init>`(v3, v6, v2) @signature `Lokhttp3/internal/connection/RealConnection;.<init>:(Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Route;)V` @kind direct;
  #L1ae98c.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae990.  call `setConnectionToCancel`(v6, v3) @signature `Lokhttp3/internal/connection/RealCall;.setConnectionToCancel:(Lokhttp3/internal/connection/RealConnection;)V` @kind virtual;
  #L1ae996.  v12:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae99a.  v13:= v1.`okhttp3.internal.connection.ExchangeFinder.j` @type ^`okhttp3.EventListener` @kind object;
  #L1ae99e.  v6:= v3 @kind object;
  #L1ae9a0.  v7:= v15;
  #L1ae9a2.  v8:= v16;
  #L1ae9a6.  v9:= v17;
  #L1ae9aa.  v10:= v18;
  #L1ae9ae.  v11:= v19;
  #L1ae9b2.  call `connect`(v6, v7, v8, v9, v10, v11, v12, v13) @signature `Lokhttp3/internal/connection/RealConnection;.connect:(IIIIZLokhttp3/Call;Lokhttp3/EventListener;)V` @kind virtual;
  #L1ae9b8.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae9bc.  call `setConnectionToCancel`(v6, v4) @signature `Lokhttp3/internal/connection/RealCall;.setConnectionToCancel:(Lokhttp3/internal/connection/RealConnection;)V` @kind virtual;
  #L1ae9c2.  v4:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae9c6.  call temp:= `getClient`(v4) @signature `Lokhttp3/internal/connection/RealCall;.getClient:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L1ae9cc.  v4:= temp @kind object;
  #L1ae9ce.  call temp:= `getRouteDatabase`(v4) @signature `Lokhttp3/OkHttpClient;.getRouteDatabase:()Lokhttp3/internal/connection/RouteDatabase;` @kind virtual;
  #L1ae9d4.  v4:= temp @kind object;
  #L1ae9d6.  call temp:= `route`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @kind virtual;
  #L1ae9dc.  v6:= temp @kind object;
  #L1ae9de.  call `connected`(v4, v6) @signature `Lokhttp3/internal/connection/RouteDatabase;.connected:(Lokhttp3/Route;)V` @kind virtual;
  #L1ae9e4.  v4:= v1.`okhttp3.internal.connection.ExchangeFinder.g` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L1ae9e8.  v6:= v1.`okhttp3.internal.connection.ExchangeFinder.h` @type ^`okhttp3.Address` @kind object;
  #L1ae9ec.  v7:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae9f0.  call temp:= `callAcquirePooledConnection`(v4, v6, v7, v5, v0) @signature `Lokhttp3/internal/connection/RealConnectionPool;.callAcquirePooledConnection:(Lokhttp3/Address;Lokhttp3/internal/connection/RealCall;Ljava/util/List;Z)Z` @kind virtual;
  #L1ae9f6.  v0:= temp;
  #L1ae9f8.  if v0 == 0 then goto L1aea30;
  #L1ae9fc.  v0:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1aea00.  call temp:= `getConnection`(v0) @signature `Lokhttp3/internal/connection/RealCall;.getConnection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L1aea06.  v0:= temp @kind object;
  #L1aea08.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1aea0e.  v1.`okhttp3.internal.connection.ExchangeFinder.f` @type ^`okhttp3.Route` := v2 @kind object;
  #L1aea12.  call temp:= `socket`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.socket:()Ljava/net/Socket;` @kind virtual;
  #L1aea18.  v2:= temp @kind object;
  #L1aea1a.  call `closeQuietly`(v2) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L1aea20.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.j` @type ^`okhttp3.EventListener` @kind object;
  #L1aea24.  v3:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1aea28.  call `connectionAcquired`(v2, v3, v0) @signature `Lokhttp3/EventListener;.connectionAcquired:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L1aea2e.  return v0 @kind object;
  #L1aea30.  @monitorenter v3
  #L1aea32.  v0:= v1.`okhttp3.internal.connection.ExchangeFinder.g` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L1aea36.  call `put`(v0, v3) @signature `Lokhttp3/internal/connection/RealConnectionPool;.put:(Lokhttp3/internal/connection/RealConnection;)V` @kind virtual;
  #L1aea3c.  v0:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1aea40.  call `acquireConnectionNoEvents`(v0, v3) @signature `Lokhttp3/internal/connection/RealCall;.acquireConnectionNoEvents:(Lokhttp3/internal/connection/RealConnection;)V` @kind virtual;
  #L1aea46.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1aea4a.  @monitorexit v3
  #L1aea4c.  v0:= v1.`okhttp3.internal.connection.ExchangeFinder.j` @type ^`okhttp3.EventListener` @kind object;
  #L1aea50.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1aea54.  call `connectionAcquired`(v0, v2, v3) @signature `Lokhttp3/EventListener;.connectionAcquired:(Lokhttp3/Call;Lokhttp3/Connection;)V` @kind virtual;
  #L1aea5a.  return v3 @kind object;
  #L1aea5c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1aea5e.  @monitorexit v3
  #L1aea60.  throw v0;
  #L1aea62.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1aea64.  v2:= v1.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1aea68.  call `setConnectionToCancel`(v2, v4) @signature `Lokhttp3/internal/connection/RealCall;.setConnectionToCancel:(Lokhttp3/internal/connection/RealConnection;)V` @kind virtual;
  #L1aea6e.  throw v0;
  #L1aea70.  v0:= new `java.io.IOException`;
  #L1aea74.  v2:= "Canceled" @kind object;
  #L1aea78.  call `<init>`(v0, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aea7e.  throw v0;
  #L1aea80.  v0:= new `java.io.IOException`;
  #L1aea84.  v2:= "Canceled" @kind object;
  #L1aea88.  call `<init>`(v0, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aea8e.  throw v0;
  catch `java.lang.Throwable` @[L1ae7ba..L1ae800] goto L1ae852;
  catch `java.lang.Throwable` @[L1ae996..L1ae9b8] goto L1aea62;
  catch `java.lang.Throwable` @[L1aea32..L1aea4a] goto L1aea5c;
}
procedure `okhttp3.internal.connection.RealConnection` `b`(`okhttp3.internal.connection.ExchangeFinder` v2 @kind this, `int` v3 , `int` v4 , `int` v5 , `int` v6 , `boolean` v7 , `boolean` v8 ) @signature `Lokhttp3/internal/connection/ExchangeFinder;.b:(IIIIZZ)Lokhttp3/internal/connection/RealConnection;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1aeac4.  call temp:= `a`(v2, v3, v4, v5, v6, v7) @signature `Lokhttp3/internal/connection/ExchangeFinder;.a:(IIIIZ)Lokhttp3/internal/connection/RealConnection;` @kind direct;
  #L1aeaca.  v0:= temp @kind object;
  #L1aeacc.  call temp:= `isHealthy`(v0, v8) @signature `Lokhttp3/internal/connection/RealConnection;.isHealthy:(Z)Z` @kind virtual;
  #L1aead2.  v1:= temp;
  #L1aead4.  if v1 == 0 then goto L1aeada;
  #L1aead8.  return v0 @kind object;
  #L1aeada.  call `noNewExchanges$okhttp`(v0) @signature `Lokhttp3/internal/connection/RealConnection;.noNewExchanges$okhttp:()V` @kind virtual;
  #L1aeae0.  v0:= v2.`okhttp3.internal.connection.ExchangeFinder.f` @type ^`okhttp3.Route` @kind object;
  #L1aeae4.  if v0 == 0 then goto L1aeaea;
  #L1aeae8.  goto L1aeac4;
  #L1aeaea.  v0:= v2.`okhttp3.internal.connection.ExchangeFinder.a` @type ^`okhttp3.internal.connection.RouteSelector$Selection` @kind object;
  #L1aeaee.  v1:= 1I;
  #L1aeaf0.  if v0 == 0 then goto L1aeafe;
  #L1aeaf4.  call temp:= `hasNext`(v0) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.hasNext:()Z` @kind virtual;
  #L1aeafa.  v0:= temp;
  #L1aeafc.  goto L1aeb00;
  #L1aeafe.  v0:= 1I;
  #L1aeb00.  if v0 == 0 then goto L1aeb06;
  #L1aeb04.  goto L1aeac4;
  #L1aeb06.  v0:= v2.`okhttp3.internal.connection.ExchangeFinder.b` @type ^`okhttp3.internal.connection.RouteSelector` @kind object;
  #L1aeb0a.  if v0 == 0 then goto L1aeb16;
  #L1aeb0e.  call temp:= `hasNext`(v0) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @kind virtual;
  #L1aeb14.  v1:= temp;
  #L1aeb16.  if v1 == 0 then goto L1aeb1c;
  #L1aeb1a.  goto L1aeac4;
  #L1aeb1c.  v3:= new `java.io.IOException`;
  #L1aeb20.  v4:= "exhausted all routes" @kind object;
  #L1aeb24.  call `<init>`(v3, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1aeb2a.  throw v3;
}
procedure `okhttp3.Route` `c`(`okhttp3.internal.connection.ExchangeFinder` v4 @kind this) @signature `Lokhttp3/internal/connection/ExchangeFinder;.c:()Lokhttp3/Route;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ae6dc.  v0:= v4.`okhttp3.internal.connection.ExchangeFinder.c` @type ^`int`;
  #L1ae6e0.  v1:= 1I;
  #L1ae6e2.  v2:= 0I;
  #L1ae6e4.  if v0 > v1 then goto L1ae762;
  #L1ae6e8.  v0:= v4.`okhttp3.internal.connection.ExchangeFinder.d` @type ^`int`;
  #L1ae6ec.  if v0 > v1 then goto L1ae762;
  #L1ae6f0.  v0:= v4.`okhttp3.internal.connection.ExchangeFinder.e` @type ^`int`;
  #L1ae6f4.  if v0 <= 0 then goto L1ae6fa;
  #L1ae6f8.  goto L1ae762;
  #L1ae6fa.  v0:= v4.`okhttp3.internal.connection.ExchangeFinder.i` @type ^`okhttp3.internal.connection.RealCall` @kind object;
  #L1ae6fe.  call temp:= `getConnection`(v0) @signature `Lokhttp3/internal/connection/RealCall;.getConnection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L1ae704.  v0:= temp @kind object;
  #L1ae706.  if v0 == 0 then goto L1ae762;
  #L1ae70a.  @monitorenter v0
  #L1ae70c.  call temp:= `getRouteFailureCount$okhttp`(v0) @signature `Lokhttp3/internal/connection/RealConnection;.getRouteFailureCount$okhttp:()I` @kind virtual;
  #L1ae712.  v1:= temp;
  #L1ae714.  if v1 == 0 then goto L1ae71c;
  #L1ae718.  @monitorexit v0
  #L1ae71a.  return v2 @kind object;
  #L1ae71c.  call temp:= `route`(v0) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @kind virtual;
  #L1ae722.  v1:= temp @kind object;
  #L1ae724.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1ae72a.  v1:= temp @kind object;
  #L1ae72c.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1ae732.  v1:= temp @kind object;
  #L1ae734.  v3:= v4.`okhttp3.internal.connection.ExchangeFinder.h` @type ^`okhttp3.Address` @kind object;
  #L1ae738.  call temp:= `url`(v3) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1ae73e.  v3:= temp @kind object;
  #L1ae740.  call temp:= `canReuseConnectionFor`(v1, v3) @signature `Lokhttp3/internal/Util;.canReuseConnectionFor:(Lokhttp3/HttpUrl;Lokhttp3/HttpUrl;)Z` @kind static;
  #L1ae746.  v1:= temp;
  #L1ae748.  if v1 != 0 then goto L1ae750;
  #L1ae74c.  @monitorexit v0
  #L1ae74e.  return v2 @kind object;
  #L1ae750.  call temp:= `route`(v0) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @kind virtual;
  #L1ae756.  v1:= temp @kind object;
  #L1ae758.  @monitorexit v0
  #L1ae75a.  return v1 @kind object;
  #L1ae75c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ae75e.  @monitorexit v0
  #L1ae760.  throw v1;
  #L1ae762.  return v2 @kind object;
  catch `java.lang.Throwable` @[L1ae70c..L1ae714] goto L1ae75c;
  catch `java.lang.Throwable` @[L1ae71c..L1ae748] goto L1ae75c;
  catch `java.lang.Throwable` @[L1ae750..L1ae758] goto L1ae75c;
}
procedure `okhttp3.internal.http.ExchangeCodec` `find`(`okhttp3.internal.connection.ExchangeFinder` v8 @kind this, `okhttp3.OkHttpClient` v9 @kind object, `okhttp3.internal.http.RealInterceptorChain` v10 @kind object) @signature `Lokhttp3/internal/connection/ExchangeFinder;.find:(Lokhttp3/OkHttpClient;Lokhttp3/internal/http/RealInterceptorChain;)Lokhttp3/internal/http/ExchangeCodec;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1aeb3c.  v0:= "client" @kind object;
  #L1aeb40.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1aeb46.  v0:= "chain" @kind object;
  #L1aeb4a.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1aeb50.  call temp:= `getConnectTimeoutMillis$okhttp`(v10) @signature `Lokhttp3/internal/http/RealInterceptorChain;.getConnectTimeoutMillis$okhttp:()I` @kind virtual;
  #L1aeb56.  v2:= temp;
  #L1aeb58.  call temp:= `getReadTimeoutMillis$okhttp`(v10) @signature `Lokhttp3/internal/http/RealInterceptorChain;.getReadTimeoutMillis$okhttp:()I` @kind virtual;
  #L1aeb5e.  v3:= temp;
  #L1aeb60.  call temp:= `getWriteTimeoutMillis$okhttp`(v10) @signature `Lokhttp3/internal/http/RealInterceptorChain;.getWriteTimeoutMillis$okhttp:()I` @kind virtual;
  #L1aeb66.  v4:= temp;
  #L1aeb68.  call temp:= `pingIntervalMillis`(v9) @signature `Lokhttp3/OkHttpClient;.pingIntervalMillis:()I` @kind virtual;
  #L1aeb6e.  v5:= temp;
  #L1aeb70.  call temp:= `retryOnConnectionFailure`(v9) @signature `Lokhttp3/OkHttpClient;.retryOnConnectionFailure:()Z` @kind virtual;
  #L1aeb76.  v6:= temp;
  #L1aeb78.  call temp:= `getRequest$okhttp`(v10) @signature `Lokhttp3/internal/http/RealInterceptorChain;.getRequest$okhttp:()Lokhttp3/Request;` @kind virtual;
  #L1aeb7e.  v0:= temp @kind object;
  #L1aeb80.  call temp:= `method`(v0) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L1aeb86.  v0:= temp @kind object;
  #L1aeb88.  v1:= "GET" @kind object;
  #L1aeb8c.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1aeb92.  v0:= temp;
  #L1aeb94.  v7:= v0 ^~ 1;
  #L1aeb98.  v1:= v8 @kind object;
  #L1aeb9a.  call temp:= `b`(v1, v2, v3, v4, v5, v6, v7) @signature `Lokhttp3/internal/connection/ExchangeFinder;.b:(IIIIZZ)Lokhttp3/internal/connection/RealConnection;` @kind direct;
  #L1aeba0.  v0:= temp @kind object;
  #L1aeba2.  call temp:= `newCodec$okhttp`(v0, v9, v10) @signature `Lokhttp3/internal/connection/RealConnection;.newCodec$okhttp:(Lokhttp3/OkHttpClient;Lokhttp3/internal/http/RealInterceptorChain;)Lokhttp3/internal/http/ExchangeCodec;` @kind virtual;
  #L1aeba8.  v9:= temp @kind object;
  #L1aebaa.  return v9 @kind object;
  #L1aebac.  v9:= Exception @type ^`java.io.IOException` @kind object;
  #L1aebae.  call `trackFailure`(v8, v9) @signature `Lokhttp3/internal/connection/ExchangeFinder;.trackFailure:(Ljava/io/IOException;)V` @kind virtual;
  #L1aebb4.  v10:= new `okhttp3.internal.connection.RouteException`;
  #L1aebb8.  call `<init>`(v10, v9) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1aebbe.  throw v10;
  #L1aebc0.  v9:= Exception @type ^`okhttp3.internal.connection.RouteException` @kind object;
  #L1aebc2.  call temp:= `getLastConnectException`(v9) @signature `Lokhttp3/internal/connection/RouteException;.getLastConnectException:()Ljava/io/IOException;` @kind virtual;
  #L1aebc8.  v10:= temp @kind object;
  #L1aebca.  call `trackFailure`(v8, v10) @signature `Lokhttp3/internal/connection/ExchangeFinder;.trackFailure:(Ljava/io/IOException;)V` @kind virtual;
  #L1aebd0.  throw v9;
  catch `okhttp3.internal.connection.RouteException` @[L1aeb50..L1aebaa] goto L1aebc0;
  catch `java.io.IOException` @[L1aeb50..L1aebaa] goto L1aebac;
}
procedure `okhttp3.Address` `getAddress$okhttp`(`okhttp3.internal.connection.ExchangeFinder` v1 @kind this) @signature `Lokhttp3/internal/connection/ExchangeFinder;.getAddress$okhttp:()Lokhttp3/Address;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1ae6c4.  v0:= v1.`okhttp3.internal.connection.ExchangeFinder.h` @type ^`okhttp3.Address` @kind object;
  #L1ae6c8.  return v0 @kind object;
}
procedure `boolean` `retryAfterFailure`(`okhttp3.internal.connection.ExchangeFinder` v2 @kind this) @signature `Lokhttp3/internal/connection/ExchangeFinder;.retryAfterFailure:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1ae5f0.  v0:= v2.`okhttp3.internal.connection.ExchangeFinder.c` @type ^`int`;
  #L1ae5f4.  if v0 != 0 then goto L1ae60c;
  #L1ae5f8.  v0:= v2.`okhttp3.internal.connection.ExchangeFinder.d` @type ^`int`;
  #L1ae5fc.  if v0 != 0 then goto L1ae60c;
  #L1ae600.  v0:= v2.`okhttp3.internal.connection.ExchangeFinder.e` @type ^`int`;
  #L1ae604.  if v0 != 0 then goto L1ae60c;
  #L1ae608.  v0:= 0I;
  #L1ae60a.  return v0;
  #L1ae60c.  v0:= v2.`okhttp3.internal.connection.ExchangeFinder.f` @type ^`okhttp3.Route` @kind object;
  #L1ae610.  v1:= 1I;
  #L1ae612.  if v0 == 0 then goto L1ae618;
  #L1ae616.  return v1;
  #L1ae618.  call temp:= `c`(v2) @signature `Lokhttp3/internal/connection/ExchangeFinder;.c:()Lokhttp3/Route;` @kind direct;
  #L1ae61e.  v0:= temp @kind object;
  #L1ae620.  if v0 == 0 then goto L1ae62a;
  #L1ae624.  v2.`okhttp3.internal.connection.ExchangeFinder.f` @type ^`okhttp3.Route` := v0 @kind object;
  #L1ae628.  return v1;
  #L1ae62a.  v0:= v2.`okhttp3.internal.connection.ExchangeFinder.a` @type ^`okhttp3.internal.connection.RouteSelector$Selection` @kind object;
  #L1ae62e.  if v0 == 0 then goto L1ae640;
  #L1ae632.  call temp:= `hasNext`(v0) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.hasNext:()Z` @kind virtual;
  #L1ae638.  v0:= temp;
  #L1ae63a.  if v0 != v1 then goto L1ae640;
  #L1ae63e.  return v1;
  #L1ae640.  v0:= v2.`okhttp3.internal.connection.ExchangeFinder.b` @type ^`okhttp3.internal.connection.RouteSelector` @kind object;
  #L1ae644.  if v0 == 0 then goto L1ae652;
  #L1ae648.  call temp:= `hasNext`(v0) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @kind virtual;
  #L1ae64e.  v0:= temp;
  #L1ae650.  return v0;
  #L1ae652.  return v1;
}
procedure `boolean` `sameHostAndPort`(`okhttp3.internal.connection.ExchangeFinder` v3 @kind this, `okhttp3.HttpUrl` v4 @kind object) @signature `Lokhttp3/internal/connection/ExchangeFinder;.sameHostAndPort:(Lokhttp3/HttpUrl;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1ae664.  v0:= "url" @kind object;
  #L1ae668.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1ae66e.  v0:= v3.`okhttp3.internal.connection.ExchangeFinder.h` @type ^`okhttp3.Address` @kind object;
  #L1ae672.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1ae678.  v0:= temp @kind object;
  #L1ae67a.  call temp:= `port`(v4) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L1ae680.  v1:= temp;
  #L1ae682.  call temp:= `port`(v0) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L1ae688.  v2:= temp;
  #L1ae68a.  if v1 != v2 then goto L1ae6ae;
  #L1ae68e.  call temp:= `host`(v4) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1ae694.  v4:= temp @kind object;
  #L1ae696.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1ae69c.  v0:= temp @kind object;
  #L1ae69e.  call temp:= `areEqual`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1ae6a4.  v4:= temp;
  #L1ae6a6.  if v4 == 0 then goto L1ae6ae;
  #L1ae6aa.  v4:= 1I;
  #L1ae6ac.  goto L1ae6b0;
  #L1ae6ae.  v4:= 0I;
  #L1ae6b0.  return v4;
}
procedure `void` `trackFailure`(`okhttp3.internal.connection.ExchangeFinder` v2 @kind this, `java.io.IOException` v3 @kind object) @signature `Lokhttp3/internal/connection/ExchangeFinder;.trackFailure:(Ljava/io/IOException;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1aec44.  v0:= "e" @kind object;
  #L1aec48.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1aec4e.  v0:= 0I;
  #L1aec50.  v2.`okhttp3.internal.connection.ExchangeFinder.f` @type ^`okhttp3.Route` := v0 @kind object;
  #L1aec54.  v0:= instanceof @variable v3 @type ^`okhttp3.internal.http2.StreamResetException` @kind boolean;
  #L1aec58.  if v0 == 0 then goto L1aec7c;
  #L1aec5c.  v0:= v3 @kind object;
  #L1aec5e.  v0:= (`okhttp3.internal.http2.StreamResetException`) v0 @kind object;
  #L1aec62.  v0:= v0.`okhttp3.internal.http2.StreamResetException.errorCode` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1aec66.  v1:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1aec6a.  if v0 != v1 then goto L1aec7c;
  #L1aec6e.  v3:= v2.`okhttp3.internal.connection.ExchangeFinder.c` @type ^`int`;
  #L1aec72.  v3:= v3 + 1;
  #L1aec76.  v2.`okhttp3.internal.connection.ExchangeFinder.c` @type ^`int` := v3;
  #L1aec7a.  goto L1aec9e;
  #L1aec7c.  v3:= instanceof @variable v3 @type ^`okhttp3.internal.http2.ConnectionShutdownException` @kind boolean;
  #L1aec80.  if v3 == 0 then goto L1aec92;
  #L1aec84.  v3:= v2.`okhttp3.internal.connection.ExchangeFinder.d` @type ^`int`;
  #L1aec88.  v3:= v3 + 1;
  #L1aec8c.  v2.`okhttp3.internal.connection.ExchangeFinder.d` @type ^`int` := v3;
  #L1aec90.  goto L1aec9e;
  #L1aec92.  v3:= v2.`okhttp3.internal.connection.ExchangeFinder.e` @type ^`int`;
  #L1aec96.  v3:= v3 + 1;
  #L1aec9a.  v2.`okhttp3.internal.connection.ExchangeFinder.e` @type ^`int` := v3;
  #L1aec9e.  return @kind void;
}
