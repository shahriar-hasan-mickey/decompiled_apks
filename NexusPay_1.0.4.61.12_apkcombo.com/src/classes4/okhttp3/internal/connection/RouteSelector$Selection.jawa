record `okhttp3.internal.connection.RouteSelector$Selection` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.connection.RouteSelector$Selection.a` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.RouteSelector$Selection.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteSelector$Selection` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b29d4.  v0:= "routes" @kind object;
  #L1b29d8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b29de.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b29e4.  v1.`okhttp3.internal.connection.RouteSelector$Selection.b` @type ^`java.util.List` := v2 @kind object;
  #L1b29e8.  return @kind void;
}
procedure `java.util.List` `getRoutes`(`okhttp3.internal.connection.RouteSelector$Selection` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.getRoutes:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b2974.  v0:= v1.`okhttp3.internal.connection.RouteSelector$Selection.b` @type ^`java.util.List` @kind object;
  #L1b2978.  return v0 @kind object;
}
procedure `boolean` `hasNext`(`okhttp3.internal.connection.RouteSelector$Selection` v2 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1b2948.  v0:= v2.`okhttp3.internal.connection.RouteSelector$Selection.a` @type ^`int`;
  #L1b294c.  v1:= v2.`okhttp3.internal.connection.RouteSelector$Selection.b` @type ^`java.util.List` @kind object;
  #L1b2950.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b2956.  v1:= temp;
  #L1b2958.  if v0 >= v1 then goto L1b2960;
  #L1b295c.  v0:= 1I;
  #L1b295e.  goto L1b2962;
  #L1b2960.  v0:= 0I;
  #L1b2962.  return v0;
}
procedure `okhttp3.Route` `next`(`okhttp3.internal.connection.RouteSelector$Selection` v3 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.next:()Lokhttp3/Route;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1b298c.  call temp:= `hasNext`(v3) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.hasNext:()Z` @kind virtual;
  #L1b2992.  v0:= temp;
  #L1b2994.  if v0 == 0 then goto L1b29b6;
  #L1b2998.  v0:= v3.`okhttp3.internal.connection.RouteSelector$Selection.b` @type ^`java.util.List` @kind object;
  #L1b299c.  v1:= v3.`okhttp3.internal.connection.RouteSelector$Selection.a` @type ^`int`;
  #L1b29a0.  v2:= v1 + 1;
  #L1b29a4.  v3.`okhttp3.internal.connection.RouteSelector$Selection.a` @type ^`int` := v2;
  #L1b29a8.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b29ae.  v0:= temp @kind object;
  #L1b29b0.  v0:= (`okhttp3.Route`) v0 @kind object;
  #L1b29b4.  return v0 @kind object;
  #L1b29b6.  v0:= new `java.util.NoSuchElementException`;
  #L1b29ba.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L1b29c0.  throw v0;
}
