record `okhttp3.internal.connection.RealConnection$a` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function0` @kind interface {
  `okhttp3.CertificatePinner` `okhttp3.internal.connection.RealConnection$a.a` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.Handshake` `okhttp3.internal.connection.RealConnection$a.b` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.Address` `okhttp3.internal.connection.RealConnection$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RealConnection$a` v0 @kind this, `okhttp3.CertificatePinner` v1 @kind object, `okhttp3.Handshake` v2 @kind object, `okhttp3.Address` v3 @kind object) @signature `Lokhttp3/internal/connection/RealConnection$a;.<init>:(Lokhttp3/CertificatePinner;Lokhttp3/Handshake;Lokhttp3/Address;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1b0650.  v0.`okhttp3.internal.connection.RealConnection$a.a` @type ^`okhttp3.CertificatePinner` := v1 @kind object;
  #L1b0654.  v0.`okhttp3.internal.connection.RealConnection$a.b` @type ^`okhttp3.Handshake` := v2 @kind object;
  #L1b0658.  v0.`okhttp3.internal.connection.RealConnection$a.c` @type ^`okhttp3.Address` := v3 @kind object;
  #L1b065c.  v1:= 0I;
  #L1b065e.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L1b0664.  return @kind void;
}
procedure `java.util.List` `a`(`okhttp3.internal.connection.RealConnection$a` v3 @kind this) @signature `Lokhttp3/internal/connection/RealConnection$a;.a:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1b0604.  v0:= v3.`okhttp3.internal.connection.RealConnection$a.a` @type ^`okhttp3.CertificatePinner` @kind object;
  #L1b0608.  call temp:= `getCertificateChainCleaner$okhttp`(v0) @signature `Lokhttp3/CertificatePinner;.getCertificateChainCleaner$okhttp:()Lokhttp3/internal/tls/CertificateChainCleaner;` @kind virtual;
  #L1b060e.  v0:= temp @kind object;
  #L1b0610.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b0616.  v1:= v3.`okhttp3.internal.connection.RealConnection$a.b` @type ^`okhttp3.Handshake` @kind object;
  #L1b061a.  call temp:= `peerCertificates`(v1) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L1b0620.  v1:= temp @kind object;
  #L1b0622.  v2:= v3.`okhttp3.internal.connection.RealConnection$a.c` @type ^`okhttp3.Address` @kind object;
  #L1b0626.  call temp:= `url`(v2) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b062c.  v2:= temp @kind object;
  #L1b062e.  call temp:= `host`(v2) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1b0634.  v2:= temp @kind object;
  #L1b0636.  call temp:= `clean`(v0, v1, v2) @signature `Lokhttp3/internal/tls/CertificateChainCleaner;.clean:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L1b063c.  v0:= temp @kind object;
  #L1b063e.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`okhttp3.internal.connection.RealConnection$a` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection$a;.invoke:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1b05e8.  call temp:= `a`(v1) @signature `Lokhttp3/internal/connection/RealConnection$a;.a:()Ljava/util/List;` @kind virtual;
  #L1b05ee.  v0:= temp @kind object;
  #L1b05f0.  return v0 @kind object;
}
