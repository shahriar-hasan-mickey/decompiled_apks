record `okhttp3.internal.connection.RealConnection` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.http2.Http2Connection$Listener` @kind class, `okhttp3.Connection` @kind interface {
  `java.net.Socket` `okhttp3.internal.connection.RealConnection.a` @AccessFlag PRIVATE;
  `java.net.Socket` `okhttp3.internal.connection.RealConnection.b` @AccessFlag PRIVATE;
  `okhttp3.Handshake` `okhttp3.internal.connection.RealConnection.c` @AccessFlag PRIVATE;
  `okhttp3.Protocol` `okhttp3.internal.connection.RealConnection.d` @AccessFlag PRIVATE;
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.connection.RealConnection.e` @AccessFlag PRIVATE;
  `okio.BufferedSource` `okhttp3.internal.connection.RealConnection.f` @AccessFlag PRIVATE;
  `okio.BufferedSink` `okhttp3.internal.connection.RealConnection.g` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.RealConnection.h` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.RealConnection.i` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RealConnection.j` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RealConnection.k` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RealConnection.l` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RealConnection.m` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.RealConnection.n` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.internal.connection.RealConnection.o` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.RealConnectionPool` `okhttp3.internal.connection.RealConnection.p` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Route` `okhttp3.internal.connection.RealConnection.q` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.connection.RealConnection$Companion` `@@okhttp3.internal.connection.RealConnection.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@okhttp3.internal.connection.RealConnection.IDLE_CONNECTION_HEALTHY_NS` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/connection/RealConnection;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1b1a58.  v0:= new `okhttp3.internal.connection.RealConnection$Companion`;
  #L1b1a5c.  v1:= 0I;
  #L1b1a5e.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RealConnection$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1b1a64.  `@@okhttp3.internal.connection.RealConnection.Companion` @type ^`okhttp3.internal.connection.RealConnection$Companion` := v0 @kind object;
  #L1b1a68.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RealConnection` v1 @kind this, `okhttp3.internal.connection.RealConnectionPool` v2 @kind object, `okhttp3.Route` v3 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.<init>:(Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Route;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b1a7c.  v0:= "connectionPool" @kind object;
  #L1b1a80.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b1a86.  v0:= "route" @kind object;
  #L1b1a8a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b1a90.  call `<init>`(v1) @signature `Lokhttp3/internal/http2/Http2Connection$Listener;.<init>:()V` @kind direct;
  #L1b1a96.  v1.`okhttp3.internal.connection.RealConnection.p` @type ^`okhttp3.internal.connection.RealConnectionPool` := v2 @kind object;
  #L1b1a9a.  v1.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` := v3 @kind object;
  #L1b1a9e.  v2:= 1I;
  #L1b1aa0.  v1.`okhttp3.internal.connection.RealConnection.m` @type ^`int` := v2;
  #L1b1aa4.  v2:= new `java.util.ArrayList`;
  #L1b1aa8.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1b1aae.  v1.`okhttp3.internal.connection.RealConnection.n` @type ^`java.util.List` := v2 @kind object;
  #L1b1ab2.  v2:= 9223372036854775807L;
  #L1b1abc.  v1.`okhttp3.internal.connection.RealConnection.o` @type ^`long` := v2 @kind wide;
  #L1b1ac0.  return @kind void;
}
procedure `boolean` `a`(`okhttp3.internal.connection.RealConnection` v3 @kind this, `okhttp3.HttpUrl` v4 @kind object, `okhttp3.Handshake` v5 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.a:(Lokhttp3/HttpUrl;Lokhttp3/Handshake;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1b0f84.  call temp:= `peerCertificates`(v5) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L1b0f8a.  v5:= temp @kind object;
  #L1b0f8c.  call temp:= `isEmpty`(v5) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L1b0f92.  v0:= temp;
  #L1b0f94.  v1:= 1I;
  #L1b0f96.  v0:= v0 ^~ v1 @kind int;
  #L1b0f98.  v2:= 0I;
  #L1b0f9a.  if v0 == 0 then goto L1b0fd8;
  #L1b0f9e.  v0:= `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` @kind object;
  #L1b0fa2.  call temp:= `host`(v4) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1b0fa8.  v4:= temp @kind object;
  #L1b0faa.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b0fb0.  v5:= temp @kind object;
  #L1b0fb2.  if v5 == 0 then goto L1b0fc8;
  #L1b0fb6.  v5:= (`java.security.cert.X509Certificate`) v5 @kind object;
  #L1b0fba.  call temp:= `verify`(v0, v4, v5) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L1b0fc0.  v4:= temp;
  #L1b0fc2.  if v4 == 0 then goto L1b0fd8;
  #L1b0fc6.  goto L1b0fda;
  #L1b0fc8.  v4:= new `java.lang.NullPointerException`;
  #L1b0fcc.  v5:= "null cannot be cast to non-null type java.security.cert.X509Certificate" @kind object;
  #L1b0fd0.  call `<init>`(v4, v5) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b0fd6.  throw v4;
  #L1b0fd8.  v1:= 0I;
  #L1b0fda.  return v1;
}
procedure `okhttp3.Handshake` `access$getHandshake$p`(`okhttp3.internal.connection.RealConnection` v0 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.access$getHandshake$p:(Lokhttp3/internal/connection/RealConnection;)Lokhttp3/Handshake;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1b1604.  v0:= v0.`okhttp3.internal.connection.RealConnection.c` @type ^`okhttp3.Handshake` @kind object;
  #L1b1608.  return v0 @kind object;
}
procedure `java.net.Socket` `access$getSocket$p`(`okhttp3.internal.connection.RealConnection` v0 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.access$getSocket$p:(Lokhttp3/internal/connection/RealConnection;)Ljava/net/Socket;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1b15a0.  v0:= v0.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` @kind object;
  #L1b15a4.  return v0 @kind object;
}
procedure `void` `access$setHandshake$p`(`okhttp3.internal.connection.RealConnection` v0 @kind object, `okhttp3.Handshake` v1 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.access$setHandshake$p:(Lokhttp3/internal/connection/RealConnection;Lokhttp3/Handshake;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1b1ad4.  v0.`okhttp3.internal.connection.RealConnection.c` @type ^`okhttp3.Handshake` := v1 @kind object;
  #L1b1ad8.  return @kind void;
}
procedure `void` `access$setSocket$p`(`okhttp3.internal.connection.RealConnection` v0 @kind object, `java.net.Socket` v1 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.access$setSocket$p:(Lokhttp3/internal/connection/RealConnection;Ljava/net/Socket;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1b1aec.  v0.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` := v1 @kind object;
  #L1b1af0.  return @kind void;
}
procedure `void` `b`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `int` v5 , `int` v6 , `okhttp3.Call` v7 @kind object, `okhttp3.EventListener` v8 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.b:(IILokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b1eb4.  v0:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1eb8.  call temp:= `proxy`(v0) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1b1ebe.  v0:= temp @kind object;
  #L1b1ec0.  v1:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1ec4.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b1eca.  v1:= temp @kind object;
  #L1b1ecc.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1b1ed2.  v2:= temp @kind object;
  #L1b1ed4.  if v2 != 0 then goto L1b1eda;
  #L1b1ed8.  goto L1b1ef6;
  #L1b1eda.  v3:= `@@okhttp3.internal.connection.RealConnection$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L1b1ede.  call temp:= `ordinal`(v2) @signature `Ljava/net/Proxy$Type;.ordinal:()I` @kind virtual;
  #L1b1ee4.  v2:= temp;
  #L1b1ee6.  v2:= v3[v2];
  #L1b1eea.  v3:= 1I;
  #L1b1eec.  if v2 == v3 then goto L1b1f02;
  #L1b1ef0.  v3:= 2I;
  #L1b1ef2.  if v2 == v3 then goto L1b1f02;
  #L1b1ef6.  v1:= new `java.net.Socket`;
  #L1b1efa.  call `<init>`(v1, v0) @signature `Ljava/net/Socket;.<init>:(Ljava/net/Proxy;)V` @kind direct;
  #L1b1f00.  goto L1b1f18;
  #L1b1f02.  call temp:= `socketFactory`(v1) @signature `Lokhttp3/Address;.socketFactory:()Ljavax/net/SocketFactory;` @kind virtual;
  #L1b1f08.  v1:= temp @kind object;
  #L1b1f0a.  call temp:= `createSocket`(v1) @signature `Ljavax/net/SocketFactory;.createSocket:()Ljava/net/Socket;` @kind virtual;
  #L1b1f10.  v1:= temp @kind object;
  #L1b1f12.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b1f18.  v4.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` := v1 @kind object;
  #L1b1f1c.  v2:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1f20.  call temp:= `socketAddress`(v2) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L1b1f26.  v2:= temp @kind object;
  #L1b1f28.  call `connectStart`(v8, v7, v2, v0) @signature `Lokhttp3/EventListener;.connectStart:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;)V` @kind virtual;
  #L1b1f2e.  call `setSoTimeout`(v1, v6) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L1b1f34.  v6:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L1b1f38.  call temp:= `get`(v6) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L1b1f3e.  v6:= temp @kind object;
  #L1b1f40.  v7:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1f44.  call temp:= `socketAddress`(v7) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L1b1f4a.  v7:= temp @kind object;
  #L1b1f4c.  call `connectSocket`(v6, v1, v7, v5) @signature `Lokhttp3/internal/platform/Platform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @kind virtual;
  #L1b1f52.  call temp:= `source`(v1) @signature `Lokio/Okio;.source:(Ljava/net/Socket;)Lokio/Source;` @kind static;
  #L1b1f58.  v5:= temp @kind object;
  #L1b1f5a.  call temp:= `buffer`(v5) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L1b1f60.  v5:= temp @kind object;
  #L1b1f62.  v4.`okhttp3.internal.connection.RealConnection.f` @type ^`okio.BufferedSource` := v5 @kind object;
  #L1b1f66.  call temp:= `sink`(v1) @signature `Lokio/Okio;.sink:(Ljava/net/Socket;)Lokio/Sink;` @kind static;
  #L1b1f6c.  v5:= temp @kind object;
  #L1b1f6e.  call temp:= `buffer`(v5) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L1b1f74.  v5:= temp @kind object;
  #L1b1f76.  v4.`okhttp3.internal.connection.RealConnection.g` @type ^`okio.BufferedSink` := v5 @kind object;
  #L1b1f7a.  goto L1b1f96;
  #L1b1f7c.  v5:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L1b1f7e.  call temp:= `getMessage`(v5) @signature `Ljava/lang/NullPointerException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1b1f84.  v6:= temp @kind object;
  #L1b1f86.  v7:= "throw with null exception" @kind object;
  #L1b1f8a.  call temp:= `areEqual`(v6, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b1f90.  v6:= temp;
  #L1b1f92.  if v6 != 0 then goto L1b1f98;
  #L1b1f96.  return @kind void;
  #L1b1f98.  v6:= new `java.io.IOException`;
  #L1b1f9c.  call `<init>`(v6, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1b1fa2.  throw v6;
  #L1b1fa4.  v5:= Exception @type ^`java.net.ConnectException` @kind object;
  #L1b1fa6.  v6:= new `java.net.ConnectException`;
  #L1b1faa.  v7:= new `java.lang.StringBuilder`;
  #L1b1fae.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b1fb4.  v8:= "Failed to connect to " @kind object;
  #L1b1fb8.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1fbe.  v8:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1fc2.  call temp:= `socketAddress`(v8) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L1b1fc8.  v8:= temp @kind object;
  #L1b1fca.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1fd0.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1fd6.  v7:= temp @kind object;
  #L1b1fd8.  call `<init>`(v6, v7) @signature `Ljava/net/ConnectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b1fde.  call temp:= `initCause`(v6, v5) @signature `Ljava/net/ConnectException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L1b1fe4.  throw v6;
  catch `java.net.ConnectException` @[L1b1f34..L1b1f52] goto L1b1fa4;
  catch `java.lang.NullPointerException` @[L1b1f52..L1b1f7a] goto L1b1f7c;
}
procedure `void` `c`(`okhttp3.internal.connection.RealConnection` v10 @kind this, `okhttp3.internal.connection.ConnectionSpecSelector` v11 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.c:(Lokhttp3/internal/connection/ConnectionSpecSelector;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1b2014.  v0:= v10.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b2018.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b201e.  v0:= temp @kind object;
  #L1b2020.  call temp:= `sslSocketFactory`(v0) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L1b2026.  v1:= temp @kind object;
  #L1b2028.  v2:= 0I;
  #L1b202a.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b2030.  v3:= v10.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` @kind object;
  #L1b2034.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b203a.  v4:= temp @kind object;
  #L1b203c.  call temp:= `host`(v4) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1b2042.  v4:= temp @kind object;
  #L1b2044.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b204a.  v5:= temp @kind object;
  #L1b204c.  call temp:= `port`(v5) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L1b2052.  v5:= temp;
  #L1b2054.  v6:= 1I;
  #L1b2056.  call temp:= `createSocket`(v1, v3, v4, v5, v6) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @kind virtual;
  #L1b205c.  v1:= temp @kind object;
  #L1b205e.  if v1 == 0 then goto L1b2306;
  #L1b2062.  v1:= (`javax.net.ssl.SSLSocket`) v1 @kind object;
  #L1b2066.  call temp:= `configureSecureSocket`(v11, v1) @signature `Lokhttp3/internal/connection/ConnectionSpecSelector;.configureSecureSocket:(Ljavax/net/ssl/SSLSocket;)Lokhttp3/ConnectionSpec;` @kind virtual;
  #L1b206c.  v11:= temp @kind object;
  #L1b206e.  call temp:= `supportsTlsExtensions`(v11) @signature `Lokhttp3/ConnectionSpec;.supportsTlsExtensions:()Z` @kind virtual;
  #L1b2074.  v3:= temp;
  #L1b2076.  if v3 == 0 then goto L1b20a4;
  #L1b207a.  v3:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L1b207e.  call temp:= `get`(v3) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L1b2084.  v3:= temp @kind object;
  #L1b2086.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b208c.  v4:= temp @kind object;
  #L1b208e.  call temp:= `host`(v4) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1b2094.  v4:= temp @kind object;
  #L1b2096.  call temp:= `protocols`(v0) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @kind virtual;
  #L1b209c.  v5:= temp @kind object;
  #L1b209e.  call `configureTlsExtensions`(v3, v1, v4, v5) @signature `Lokhttp3/internal/platform/Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L1b20a4.  call `startHandshake`(v1) @signature `Ljavax/net/ssl/SSLSocket;.startHandshake:()V` @kind virtual;
  #L1b20aa.  call temp:= `getSession`(v1) @signature `Ljavax/net/ssl/SSLSocket;.getSession:()Ljavax/net/ssl/SSLSession;` @kind virtual;
  #L1b20b0.  v3:= temp @kind object;
  #L1b20b2.  v4:= `@@okhttp3.Handshake.Companion` @type ^`okhttp3.Handshake$Companion` @kind object;
  #L1b20b6.  v5:= "sslSocketSession" @kind object;
  #L1b20ba.  call `checkNotNullExpressionValue`(v3, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b20c0.  call temp:= `get`(v4, v3) @signature `Lokhttp3/Handshake$Companion;.get:(Ljavax/net/ssl/SSLSession;)Lokhttp3/Handshake;` @kind virtual;
  #L1b20c6.  v4:= temp @kind object;
  #L1b20c8.  call temp:= `hostnameVerifier`(v0) @signature `Lokhttp3/Address;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L1b20ce.  v5:= temp @kind object;
  #L1b20d0.  call `checkNotNull`(v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b20d6.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b20dc.  v7:= temp @kind object;
  #L1b20de.  call temp:= `host`(v7) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1b20e4.  v7:= temp @kind object;
  #L1b20e6.  call temp:= `verify`(v5, v7, v3) @signature `Ljavax/net/ssl/HostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @kind interface;
  #L1b20ec.  v3:= temp;
  #L1b20ee.  if v3 != 0 then goto L1b2224;
  #L1b20f2.  call temp:= `peerCertificates`(v4) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L1b20f8.  v11:= temp @kind object;
  #L1b20fa.  call temp:= `isEmpty`(v11) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L1b2100.  v3:= temp;
  #L1b2102.  v3:= v3 ^~ v6 @kind int;
  #L1b2104.  if v3 == 0 then goto L1b21dc;
  #L1b2108.  v3:= 0I;
  #L1b210a.  call temp:= `get`(v11, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b2110.  v11:= temp @kind object;
  #L1b2112.  if v11 != 0 then goto L1b2126;
  #L1b2116.  v11:= new `java.lang.NullPointerException`;
  #L1b211a.  v0:= "null cannot be cast to non-null type java.security.cert.X509Certificate" @kind object;
  #L1b211e.  call `<init>`(v11, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b2124.  throw v11;
  #L1b2126.  v11:= (`java.security.cert.X509Certificate`) v11 @kind object;
  #L1b212a.  v3:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L1b212e.  v4:= new `java.lang.StringBuilder`;
  #L1b2132.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b2138.  v5:= "\n              |Hostname " @kind object;
  #L1b213c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2142.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b2148.  v0:= temp @kind object;
  #L1b214a.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1b2150.  v0:= temp @kind object;
  #L1b2152.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2158.  v0:= " not verified:\n              |    certificate: " @kind object;
  #L1b215c.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2162.  v0:= `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` @kind object;
  #L1b2166.  call temp:= `pin`(v0, v11) @signature `Lokhttp3/CertificatePinner$Companion;.pin:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind virtual;
  #L1b216c.  v0:= temp @kind object;
  #L1b216e.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2174.  v0:= "\n              |    DN: " @kind object;
  #L1b2178.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b217e.  call temp:= `getSubjectDN`(v11) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L1b2184.  v0:= temp @kind object;
  #L1b2186.  v5:= "cert.subjectDN" @kind object;
  #L1b218a.  call `checkNotNullExpressionValue`(v0, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b2190.  call temp:= `getName`(v0) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L1b2196.  v0:= temp @kind object;
  #L1b2198.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b219e.  v0:= "\n              |    subjectAltNames: " @kind object;
  #L1b21a2.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b21a8.  v0:= `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` @kind object;
  #L1b21ac.  call temp:= `allSubjectAltNames`(v0, v11) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.allSubjectAltNames:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @kind virtual;
  #L1b21b2.  v11:= temp @kind object;
  #L1b21b4.  call temp:= `append`(v4, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b21ba.  v11:= "\n              " @kind object;
  #L1b21be.  call temp:= `append`(v4, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b21c4.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b21ca.  v11:= temp @kind object;
  #L1b21cc.  call temp:= `trimMargin$default`(v11, v2, v6, v2) @signature `Lkotlin/text/StringsKt;.trimMargin$default:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1b21d2.  v11:= temp @kind object;
  #L1b21d4.  call `<init>`(v3, v11) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b21da.  throw v3;
  #L1b21dc.  v11:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L1b21e0.  v2:= new `java.lang.StringBuilder`;
  #L1b21e4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b21ea.  v3:= "Hostname " @kind object;
  #L1b21ee.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b21f4.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b21fa.  v0:= temp @kind object;
  #L1b21fc.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1b2202.  v0:= temp @kind object;
  #L1b2204.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b220a.  v0:= " not verified (no certificates)" @kind object;
  #L1b220e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2214.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b221a.  v0:= temp @kind object;
  #L1b221c.  call `<init>`(v11, v0) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b2222.  throw v11;
  #L1b2224.  call temp:= `certificatePinner`(v0) @signature `Lokhttp3/Address;.certificatePinner:()Lokhttp3/CertificatePinner;` @kind virtual;
  #L1b222a.  v3:= temp @kind object;
  #L1b222c.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b2232.  v5:= new `okhttp3.Handshake`;
  #L1b2236.  call temp:= `tlsVersion`(v4) @signature `Lokhttp3/Handshake;.tlsVersion:()Lokhttp3/TlsVersion;` @kind virtual;
  #L1b223c.  v6:= temp @kind object;
  #L1b223e.  call temp:= `cipherSuite`(v4) @signature `Lokhttp3/Handshake;.cipherSuite:()Lokhttp3/CipherSuite;` @kind virtual;
  #L1b2244.  v7:= temp @kind object;
  #L1b2246.  call temp:= `localCertificates`(v4) @signature `Lokhttp3/Handshake;.localCertificates:()Ljava/util/List;` @kind virtual;
  #L1b224c.  v8:= temp @kind object;
  #L1b224e.  v9:= new `okhttp3.internal.connection.RealConnection$a`;
  #L1b2252.  call `<init>`(v9, v3, v4, v0) @signature `Lokhttp3/internal/connection/RealConnection$a;.<init>:(Lokhttp3/CertificatePinner;Lokhttp3/Handshake;Lokhttp3/Address;)V` @kind direct;
  #L1b2258.  call `<init>`(v5, v6, v7, v8, v9) @signature `Lokhttp3/Handshake;.<init>:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Lkotlin/jvm/functions/Function0;)V` @kind direct;
  #L1b225e.  v10.`okhttp3.internal.connection.RealConnection.c` @type ^`okhttp3.Handshake` := v5 @kind object;
  #L1b2262.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b2268.  v0:= temp @kind object;
  #L1b226a.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1b2270.  v0:= temp @kind object;
  #L1b2272.  v4:= new `okhttp3.internal.connection.RealConnection$b`;
  #L1b2276.  call `<init>`(v4, v10) @signature `Lokhttp3/internal/connection/RealConnection$b;.<init>:(Lokhttp3/internal/connection/RealConnection;)V` @kind direct;
  #L1b227c.  call `check$okhttp`(v3, v0, v4) @signature `Lokhttp3/CertificatePinner;.check$okhttp:(Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V` @kind virtual;
  #L1b2282.  call temp:= `supportsTlsExtensions`(v11) @signature `Lokhttp3/ConnectionSpec;.supportsTlsExtensions:()Z` @kind virtual;
  #L1b2288.  v11:= temp;
  #L1b228a.  if v11 == 0 then goto L1b22a2;
  #L1b228e.  v11:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L1b2292.  call temp:= `get`(v11) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L1b2298.  v11:= temp @kind object;
  #L1b229a.  call temp:= `getSelectedProtocol`(v11, v1) @signature `Lokhttp3/internal/platform/Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind virtual;
  #L1b22a0.  v2:= temp @kind object;
  #L1b22a2.  v10.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` := v1 @kind object;
  #L1b22a6.  call temp:= `source`(v1) @signature `Lokio/Okio;.source:(Ljava/net/Socket;)Lokio/Source;` @kind static;
  #L1b22ac.  v11:= temp @kind object;
  #L1b22ae.  call temp:= `buffer`(v11) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L1b22b4.  v11:= temp @kind object;
  #L1b22b6.  v10.`okhttp3.internal.connection.RealConnection.f` @type ^`okio.BufferedSource` := v11 @kind object;
  #L1b22ba.  call temp:= `sink`(v1) @signature `Lokio/Okio;.sink:(Ljava/net/Socket;)Lokio/Sink;` @kind static;
  #L1b22c0.  v11:= temp @kind object;
  #L1b22c2.  call temp:= `buffer`(v11) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L1b22c8.  v11:= temp @kind object;
  #L1b22ca.  v10.`okhttp3.internal.connection.RealConnection.g` @type ^`okio.BufferedSink` := v11 @kind object;
  #L1b22ce.  if v2 == 0 then goto L1b22e0;
  #L1b22d2.  v11:= `@@okhttp3.Protocol.Companion` @type ^`okhttp3.Protocol$Companion` @kind object;
  #L1b22d6.  call temp:= `get`(v11, v2) @signature `Lokhttp3/Protocol$Companion;.get:(Ljava/lang/String;)Lokhttp3/Protocol;` @kind virtual;
  #L1b22dc.  v11:= temp @kind object;
  #L1b22de.  goto L1b22e4;
  #L1b22e0.  v11:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L1b22e4.  v10.`okhttp3.internal.connection.RealConnection.d` @type ^`okhttp3.Protocol` := v11 @kind object;
  #L1b22e8.  if v1 == 0 then goto L1b22fe;
  #L1b22ec.  v11:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L1b22f0.  call temp:= `get`(v11) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L1b22f6.  v11:= temp @kind object;
  #L1b22f8.  call `afterHandshake`(v11, v1) @signature `Lokhttp3/internal/platform/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L1b22fe.  return @kind void;
  #L1b2300.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b2302.  v2:= v1 @kind object;
  #L1b2304.  goto L1b2318;
  #L1b2306.  v11:= new `java.lang.NullPointerException`;
  #L1b230a.  v0:= "null cannot be cast to non-null type javax.net.ssl.SSLSocket" @kind object;
  #L1b230e.  call `<init>`(v11, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b2314.  throw v11;
  #L1b2316.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b2318.  if v2 == 0 then goto L1b232e;
  #L1b231c.  v0:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L1b2320.  call temp:= `get`(v0) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L1b2326.  v0:= temp @kind object;
  #L1b2328.  call `afterHandshake`(v0, v2) @signature `Lokhttp3/internal/platform/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L1b232e.  if v2 == 0 then goto L1b2338;
  #L1b2332.  call `closeQuietly`(v2) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L1b2338.  throw v11;
  catch `java.lang.Throwable` @[L1b202a..L1b2066] goto L1b2316;
  catch `java.lang.Throwable` @[L1b2066..L1b22e8] goto L1b2300;
  catch `java.lang.Throwable` @[L1b2306..L1b2316] goto L1b2316;
}
procedure `void` `d`(`okhttp3.internal.connection.RealConnection` v6 @kind this, `int` v7 , `int` v8 , `int` v9 , `okhttp3.Call` v10 @kind object, `okhttp3.EventListener` v11 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.d:(IIILokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b236c.  call temp:= `f`(v6) @signature `Lokhttp3/internal/connection/RealConnection;.f:()Lokhttp3/Request;` @kind direct;
  #L1b2372.  v0:= temp @kind object;
  #L1b2374.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b237a.  v1:= temp @kind object;
  #L1b237c.  v2:= 0I;
  #L1b237e.  v3:= 21I;
  #L1b2382.  if v2 >= v3 then goto L1b23d8;
  #L1b2386.  call `b`(v6, v7, v8, v10, v11) @signature `Lokhttp3/internal/connection/RealConnection;.b:(IILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L1b238c.  call temp:= `e`(v6, v8, v9, v0, v1) @signature `Lokhttp3/internal/connection/RealConnection;.e:(IILokhttp3/Request;Lokhttp3/HttpUrl;)Lokhttp3/Request;` @kind direct;
  #L1b2392.  v0:= temp @kind object;
  #L1b2394.  if v0 == 0 then goto L1b23d8;
  #L1b2398.  v3:= v6.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` @kind object;
  #L1b239c.  if v3 == 0 then goto L1b23a6;
  #L1b23a0.  call `closeQuietly`(v3) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L1b23a6.  v3:= 0I;
  #L1b23a8.  v6.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` := v3 @kind object;
  #L1b23ac.  v6.`okhttp3.internal.connection.RealConnection.g` @type ^`okio.BufferedSink` := v3 @kind object;
  #L1b23b0.  v6.`okhttp3.internal.connection.RealConnection.f` @type ^`okio.BufferedSource` := v3 @kind object;
  #L1b23b4.  v4:= v6.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b23b8.  call temp:= `socketAddress`(v4) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L1b23be.  v4:= temp @kind object;
  #L1b23c0.  v5:= v6.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b23c4.  call temp:= `proxy`(v5) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1b23ca.  v5:= temp @kind object;
  #L1b23cc.  call `connectEnd`(v11, v10, v4, v5, v3) @signature `Lokhttp3/EventListener;.connectEnd:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;)V` @kind virtual;
  #L1b23d2.  v2:= v2 + 1;
  #L1b23d6.  goto L1b237e;
  #L1b23d8.  return @kind void;
}
procedure `okhttp3.Request` `e`(`okhttp3.internal.connection.RealConnection` v9 @kind this, `int` v10 , `int` v11 , `okhttp3.Request` v12 @kind object, `okhttp3.HttpUrl` v13 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.e:(IILokhttp3/Request;Lokhttp3/HttpUrl;)Lokhttp3/Request;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1b1650.  v0:= new `java.lang.StringBuilder`;
  #L1b1654.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b165a.  v1:= "CONNECT " @kind object;
  #L1b165e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1664.  v1:= 1I;
  #L1b1666.  call temp:= `toHostHeader`(v13, v1) @signature `Lokhttp3/internal/Util;.toHostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @kind static;
  #L1b166c.  v13:= temp @kind object;
  #L1b166e.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1674.  v13:= " HTTP/1.1" @kind object;
  #L1b1678.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b167e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1684.  v13:= temp @kind object;
  #L1b1686.  v0:= v9.`okhttp3.internal.connection.RealConnection.f` @type ^`okio.BufferedSource` @kind object;
  #L1b168a.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b1690.  v2:= v9.`okhttp3.internal.connection.RealConnection.g` @type ^`okio.BufferedSink` @kind object;
  #L1b1694.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b169a.  v3:= new `okhttp3.internal.http1.Http1ExchangeCodec`;
  #L1b169e.  v4:= 0I;
  #L1b16a0.  call `<init>`(v3, v4, v9, v0, v2) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/RealConnection;Lokio/BufferedSource;Lokio/BufferedSink;)V` @kind direct;
  #L1b16a6.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L1b16ac.  v5:= temp @kind object;
  #L1b16ae.  v6:= (`long`) v10 @kind i2l;
  #L1b16b0.  v8:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1b16b4.  call temp:= `timeout`(v5, v6, v8) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1b16ba.  call temp:= `timeout`(v2) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L1b16c0.  v5:= temp @kind object;
  #L1b16c2.  v6:= (`long`) v11 @kind i2l;
  #L1b16c4.  v8:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1b16c8.  call temp:= `timeout`(v5, v6, v8) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1b16ce.  call temp:= `headers`(v12) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1b16d4.  v5:= temp @kind object;
  #L1b16d6.  call `writeRequest`(v3, v5, v13) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.writeRequest:(Lokhttp3/Headers;Ljava/lang/String;)V` @kind virtual;
  #L1b16dc.  call `finishRequest`(v3) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.finishRequest:()V` @kind virtual;
  #L1b16e2.  v5:= 0I;
  #L1b16e4.  call temp:= `readResponseHeaders`(v3, v5) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.readResponseHeaders:(Z)Lokhttp3/Response$Builder;` @kind virtual;
  #L1b16ea.  v5:= temp @kind object;
  #L1b16ec.  call `checkNotNull`(v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b16f2.  call temp:= `request`(v5, v12) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1b16f8.  v12:= temp @kind object;
  #L1b16fa.  call temp:= `build`(v12) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L1b1700.  v12:= temp @kind object;
  #L1b1702.  call `skipConnectBody`(v3, v12) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.skipConnectBody:(Lokhttp3/Response;)V` @kind virtual;
  #L1b1708.  call temp:= `code`(v12) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L1b170e.  v3:= temp;
  #L1b1710.  v5:= 200I;
  #L1b1714.  if v3 == v5 then goto L1b17ae;
  #L1b1718.  v0:= 407I;
  #L1b171c.  if v3 != v0 then goto L1b1778;
  #L1b1720.  v0:= v9.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1724.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b172a.  v0:= temp @kind object;
  #L1b172c.  call temp:= `proxyAuthenticator`(v0) @signature `Lokhttp3/Address;.proxyAuthenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L1b1732.  v0:= temp @kind object;
  #L1b1734.  v2:= v9.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1738.  call temp:= `authenticate`(v0, v2, v12) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @kind interface;
  #L1b173e.  v0:= temp @kind object;
  #L1b1740.  if v0 == 0 then goto L1b1768;
  #L1b1744.  v2:= 2I;
  #L1b1746.  v3:= "Connection" @kind object;
  #L1b174a.  call temp:= `header$default`(v12, v3, v4, v2, v4) @signature `Lokhttp3/Response;.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1b1750.  v12:= temp @kind object;
  #L1b1752.  v2:= "close" @kind object;
  #L1b1756.  call temp:= `equals`(v2, v12, v1) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1b175c.  v12:= temp;
  #L1b175e.  if v12 == 0 then goto L1b1764;
  #L1b1762.  return v0 @kind object;
  #L1b1764.  v12:= v0 @kind object;
  #L1b1766.  goto L1b1686;
  #L1b1768.  v10:= new `java.io.IOException`;
  #L1b176c.  v11:= "Failed to authenticate with proxy" @kind object;
  #L1b1770.  call `<init>`(v10, v11) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b1776.  throw v10;
  #L1b1778.  v10:= new `java.io.IOException`;
  #L1b177c.  v11:= new `java.lang.StringBuilder`;
  #L1b1780.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b1786.  v13:= "Unexpected response code for CONNECT: " @kind object;
  #L1b178a.  call temp:= `append`(v11, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1790.  call temp:= `code`(v12) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L1b1796.  v12:= temp;
  #L1b1798.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b179e.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b17a4.  v11:= temp @kind object;
  #L1b17a6.  call `<init>`(v10, v11) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b17ac.  throw v10;
  #L1b17ae.  call temp:= `getBuffer`(v0) @signature `Lokio/BufferedSource;.getBuffer:()Lokio/Buffer;` @kind interface;
  #L1b17b4.  v10:= temp @kind object;
  #L1b17b6.  call temp:= `exhausted`(v10) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L1b17bc.  v10:= temp;
  #L1b17be.  if v10 == 0 then goto L1b17d8;
  #L1b17c2.  call temp:= `getBuffer`(v2) @signature `Lokio/BufferedSink;.getBuffer:()Lokio/Buffer;` @kind interface;
  #L1b17c8.  v10:= temp @kind object;
  #L1b17ca.  call temp:= `exhausted`(v10) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L1b17d0.  v10:= temp;
  #L1b17d2.  if v10 == 0 then goto L1b17d8;
  #L1b17d6.  return v4 @kind object;
  #L1b17d8.  v10:= new `java.io.IOException`;
  #L1b17dc.  v11:= "TLS tunnel buffered too many bytes!" @kind object;
  #L1b17e0.  call `<init>`(v10, v11) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b17e6.  throw v10;
}
procedure `okhttp3.Request` `f`(`okhttp3.internal.connection.RealConnection` v4 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.f:()Lokhttp3/Request;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b17f8.  v0:= new `okhttp3.Request$Builder`;
  #L1b17fc.  call `<init>`(v0) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L1b1802.  v1:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1806.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b180c.  v1:= temp @kind object;
  #L1b180e.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b1814.  v1:= temp @kind object;
  #L1b1816.  call temp:= `url`(v0, v1) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b181c.  v0:= temp @kind object;
  #L1b181e.  v1:= "CONNECT" @kind object;
  #L1b1822.  v2:= 0I;
  #L1b1824.  call temp:= `method`(v0, v1, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b182a.  v0:= temp @kind object;
  #L1b182c.  v1:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1830.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b1836.  v1:= temp @kind object;
  #L1b1838.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b183e.  v1:= temp @kind object;
  #L1b1840.  v2:= 1I;
  #L1b1842.  call temp:= `toHostHeader`(v1, v2) @signature `Lokhttp3/internal/Util;.toHostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @kind static;
  #L1b1848.  v1:= temp @kind object;
  #L1b184a.  v2:= "Host" @kind object;
  #L1b184e.  call temp:= `header`(v0, v2, v1) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b1854.  v0:= temp @kind object;
  #L1b1856.  v1:= "Proxy-Connection" @kind object;
  #L1b185a.  v2:= "Keep-Alive" @kind object;
  #L1b185e.  call temp:= `header`(v0, v1, v2) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b1864.  v0:= temp @kind object;
  #L1b1866.  v1:= "User-Agent" @kind object;
  #L1b186a.  v2:= "okhttp/4.9.3" @kind object;
  #L1b186e.  call temp:= `header`(v0, v1, v2) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b1874.  v0:= temp @kind object;
  #L1b1876.  call temp:= `build`(v0) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L1b187c.  v0:= temp @kind object;
  #L1b187e.  v1:= new `okhttp3.Response$Builder`;
  #L1b1882.  call `<init>`(v1) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L1b1888.  call temp:= `request`(v1, v0) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1b188e.  v1:= temp @kind object;
  #L1b1890.  v2:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L1b1894.  call temp:= `protocol`(v1, v2) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1b189a.  v1:= temp @kind object;
  #L1b189c.  v2:= 407I;
  #L1b18a0.  call temp:= `code`(v1, v2) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L1b18a6.  v1:= temp @kind object;
  #L1b18a8.  v2:= "Preemptive Authenticate" @kind object;
  #L1b18ac.  call temp:= `message`(v1, v2) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1b18b2.  v1:= temp @kind object;
  #L1b18b4.  v2:= `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` @kind object;
  #L1b18b8.  call temp:= `body`(v1, v2) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1b18be.  v1:= temp @kind object;
  #L1b18c0.  v2:= -1L;
  #L1b18c4.  call temp:= `sentRequestAtMillis`(v1, v2) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L1b18ca.  v1:= temp @kind object;
  #L1b18cc.  call temp:= `receivedResponseAtMillis`(v1, v2) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L1b18d2.  v1:= temp @kind object;
  #L1b18d4.  v2:= "Proxy-Authenticate" @kind object;
  #L1b18d8.  v3:= "OkHttp-Preemptive" @kind object;
  #L1b18dc.  call temp:= `header`(v1, v2, v3) @signature `Lokhttp3/Response$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1b18e2.  v1:= temp @kind object;
  #L1b18e4.  call temp:= `build`(v1) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L1b18ea.  v1:= temp @kind object;
  #L1b18ec.  v2:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b18f0.  call temp:= `address`(v2) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b18f6.  v2:= temp @kind object;
  #L1b18f8.  call temp:= `proxyAuthenticator`(v2) @signature `Lokhttp3/Address;.proxyAuthenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L1b18fe.  v2:= temp @kind object;
  #L1b1900.  v3:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1904.  call temp:= `authenticate`(v2, v3, v1) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @kind interface;
  #L1b190a.  v1:= temp @kind object;
  #L1b190c.  if v1 == 0 then goto L1b1912;
  #L1b1910.  v0:= v1 @kind object;
  #L1b1912.  return v0 @kind object;
}
procedure `void` `g`(`okhttp3.internal.connection.RealConnection` v1 @kind this, `okhttp3.internal.connection.ConnectionSpecSelector` v2 @kind object, `int` v3 , `okhttp3.Call` v4 @kind object, `okhttp3.EventListener` v5 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.g:(Lokhttp3/internal/connection/ConnectionSpecSelector;ILokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1b23ec.  v0:= v1.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b23f0.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b23f6.  v0:= temp @kind object;
  #L1b23f8.  call temp:= `sslSocketFactory`(v0) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L1b23fe.  v0:= temp @kind object;
  #L1b2400.  if v0 != 0 then goto L1b2452;
  #L1b2404.  v2:= v1.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b2408.  call temp:= `address`(v2) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b240e.  v2:= temp @kind object;
  #L1b2410.  call temp:= `protocols`(v2) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @kind virtual;
  #L1b2416.  v2:= temp @kind object;
  #L1b2418.  v4:= `@@okhttp3.Protocol.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.Protocol` @kind object;
  #L1b241c.  call temp:= `contains`(v2, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1b2422.  v2:= temp;
  #L1b2424.  if v2 == 0 then goto L1b2440;
  #L1b2428.  v2:= v1.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` @kind object;
  #L1b242c.  v1.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` := v2 @kind object;
  #L1b2430.  v2:= `@@okhttp3.Protocol.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.Protocol` @kind object;
  #L1b2434.  v1.`okhttp3.internal.connection.RealConnection.d` @type ^`okhttp3.Protocol` := v2 @kind object;
  #L1b2438.  call `i`(v1, v3) @signature `Lokhttp3/internal/connection/RealConnection;.i:(I)V` @kind direct;
  #L1b243e.  return @kind void;
  #L1b2440.  v2:= v1.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` @kind object;
  #L1b2444.  v1.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` := v2 @kind object;
  #L1b2448.  v2:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L1b244c.  v1.`okhttp3.internal.connection.RealConnection.d` @type ^`okhttp3.Protocol` := v2 @kind object;
  #L1b2450.  return @kind void;
  #L1b2452.  call `secureConnectStart`(v5, v4) @signature `Lokhttp3/EventListener;.secureConnectStart:(Lokhttp3/Call;)V` @kind virtual;
  #L1b2458.  call `c`(v1, v2) @signature `Lokhttp3/internal/connection/RealConnection;.c:(Lokhttp3/internal/connection/ConnectionSpecSelector;)V` @kind direct;
  #L1b245e.  v2:= v1.`okhttp3.internal.connection.RealConnection.c` @type ^`okhttp3.Handshake` @kind object;
  #L1b2462.  call `secureConnectEnd`(v5, v4, v2) @signature `Lokhttp3/EventListener;.secureConnectEnd:(Lokhttp3/Call;Lokhttp3/Handshake;)V` @kind virtual;
  #L1b2468.  v2:= v1.`okhttp3.internal.connection.RealConnection.d` @type ^`okhttp3.Protocol` @kind object;
  #L1b246c.  v4:= `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` @kind object;
  #L1b2470.  if v2 != v4 then goto L1b247a;
  #L1b2474.  call `i`(v1, v3) @signature `Lokhttp3/internal/connection/RealConnection;.i:(I)V` @kind direct;
  #L1b247a.  return @kind void;
}
procedure `boolean` `h`(`okhttp3.internal.connection.RealConnection` v5 @kind this, `java.util.List` v6 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.h:(Ljava/util/List;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b12e4.  v0:= instanceof @variable v6 @type ^`java.util.Collection` @kind boolean;
  #L1b12e8.  v1:= 1I;
  #L1b12ea.  v2:= 0I;
  #L1b12ec.  if v0 == 0 then goto L1b1300;
  #L1b12f0.  call temp:= `isEmpty`(v6) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L1b12f6.  v0:= temp;
  #L1b12f8.  if v0 == 0 then goto L1b1300;
  #L1b12fc.  v1:= 0I;
  #L1b12fe.  goto L1b137e;
  #L1b1300.  call temp:= `iterator`(v6) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1b1306.  v6:= temp @kind object;
  #L1b1308.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b130e.  v0:= temp;
  #L1b1310.  if v0 == 0 then goto L1b12fc;
  #L1b1314.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b131a.  v0:= temp @kind object;
  #L1b131c.  v0:= (`okhttp3.Route`) v0 @kind object;
  #L1b1320.  call temp:= `proxy`(v0) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1b1326.  v3:= temp @kind object;
  #L1b1328.  call temp:= `type`(v3) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1b132e.  v3:= temp @kind object;
  #L1b1330.  v4:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L1b1334.  if v3 != v4 then goto L1b1378;
  #L1b1338.  v3:= v5.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b133c.  call temp:= `proxy`(v3) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1b1342.  v3:= temp @kind object;
  #L1b1344.  call temp:= `type`(v3) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1b134a.  v3:= temp @kind object;
  #L1b134c.  v4:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L1b1350.  if v3 != v4 then goto L1b1378;
  #L1b1354.  v3:= v5.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1358.  call temp:= `socketAddress`(v3) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L1b135e.  v3:= temp @kind object;
  #L1b1360.  call temp:= `socketAddress`(v0) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L1b1366.  v0:= temp @kind object;
  #L1b1368.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b136e.  v0:= temp;
  #L1b1370.  if v0 == 0 then goto L1b1378;
  #L1b1374.  v0:= 1I;
  #L1b1376.  goto L1b137a;
  #L1b1378.  v0:= 0I;
  #L1b137a.  if v0 == 0 then goto L1b1308;
  #L1b137e.  return v1;
}
procedure `void` `i`(`okhttp3.internal.connection.RealConnection` v7 @kind this, `int` v8 ) @signature `Lokhttp3/internal/connection/RealConnection;.i:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b25d8.  v0:= v7.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` @kind object;
  #L1b25dc.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b25e2.  v1:= v7.`okhttp3.internal.connection.RealConnection.f` @type ^`okio.BufferedSource` @kind object;
  #L1b25e6.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b25ec.  v2:= v7.`okhttp3.internal.connection.RealConnection.g` @type ^`okio.BufferedSink` @kind object;
  #L1b25f0.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b25f6.  v3:= 0I;
  #L1b25f8.  call `setSoTimeout`(v0, v3) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L1b25fe.  v4:= new `okhttp3.internal.http2.Http2Connection$Builder`;
  #L1b2602.  v5:= `@@okhttp3.internal.concurrent.TaskRunner.INSTANCE` @type ^`okhttp3.internal.concurrent.TaskRunner` @kind object;
  #L1b2606.  v6:= 1I;
  #L1b2608.  call `<init>`(v4, v6, v5) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.<init>:(ZLokhttp3/internal/concurrent/TaskRunner;)V` @kind direct;
  #L1b260e.  v5:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b2612.  call temp:= `address`(v5) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b2618.  v5:= temp @kind object;
  #L1b261a.  call temp:= `url`(v5) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b2620.  v5:= temp @kind object;
  #L1b2622.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1b2628.  v5:= temp @kind object;
  #L1b262a.  call temp:= `socket`(v4, v0, v5, v1, v2) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket:(Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;Lokio/BufferedSink;)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind virtual;
  #L1b2630.  v0:= temp @kind object;
  #L1b2632.  call temp:= `listener`(v0, v7) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.listener:(Lokhttp3/internal/http2/Http2Connection$Listener;)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind virtual;
  #L1b2638.  v0:= temp @kind object;
  #L1b263a.  call temp:= `pingIntervalMillis`(v0, v8) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.pingIntervalMillis:(I)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind virtual;
  #L1b2640.  v8:= temp @kind object;
  #L1b2642.  call temp:= `build`(v8) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.build:()Lokhttp3/internal/http2/Http2Connection;` @kind virtual;
  #L1b2648.  v8:= temp @kind object;
  #L1b264a.  v7.`okhttp3.internal.connection.RealConnection.e` @type ^`okhttp3.internal.http2.Http2Connection` := v8 @kind object;
  #L1b264e.  v0:= `@@okhttp3.internal.http2.Http2Connection.Companion` @type ^`okhttp3.internal.http2.Http2Connection$Companion` @kind object;
  #L1b2652.  call temp:= `getDEFAULT_SETTINGS`(v0) @signature `Lokhttp3/internal/http2/Http2Connection$Companion;.getDEFAULT_SETTINGS:()Lokhttp3/internal/http2/Settings;` @kind virtual;
  #L1b2658.  v0:= temp @kind object;
  #L1b265a.  call temp:= `getMaxConcurrentStreams`(v0) @signature `Lokhttp3/internal/http2/Settings;.getMaxConcurrentStreams:()I` @kind virtual;
  #L1b2660.  v0:= temp;
  #L1b2662.  v7.`okhttp3.internal.connection.RealConnection.m` @type ^`int` := v0;
  #L1b2666.  v0:= 0I;
  #L1b2668.  v1:= 3I;
  #L1b266a.  call `start$default`(v8, v3, v0, v1, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.start$default:(Lokhttp3/internal/http2/Http2Connection;ZLokhttp3/internal/concurrent/TaskRunner;ILjava/lang/Object;)V` @kind static;
  #L1b2670.  return @kind void;
}
procedure `boolean` `j`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `okhttp3.HttpUrl` v5 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.j:(Lokhttp3/HttpUrl;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b1390.  v0:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L1b1394.  if v0 == 0 then goto L1b13fe;
  #L1b1398.  call temp:= `holdsLock`(v4) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L1b139e.  v0:= temp;
  #L1b13a0.  if v0 == 0 then goto L1b13a6;
  #L1b13a4.  goto L1b13fe;
  #L1b13a6.  v5:= new `java.lang.AssertionError`;
  #L1b13aa.  v0:= new `java.lang.StringBuilder`;
  #L1b13ae.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b13b4.  v1:= "Thread " @kind object;
  #L1b13b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b13be.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1b13c4.  v1:= temp @kind object;
  #L1b13c6.  v2:= "Thread.currentThread()" @kind object;
  #L1b13ca.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b13d0.  call temp:= `getName`(v1) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b13d6.  v1:= temp @kind object;
  #L1b13d8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b13de.  v1:= " MUST hold lock on " @kind object;
  #L1b13e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b13e8.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b13ee.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b13f4.  v0:= temp @kind object;
  #L1b13f6.  call `<init>`(v5, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1b13fc.  throw v5;
  #L1b13fe.  v0:= v4.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1402.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b1408.  v0:= temp @kind object;
  #L1b140a.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b1410.  v0:= temp @kind object;
  #L1b1412.  call temp:= `port`(v5) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L1b1418.  v1:= temp;
  #L1b141a.  call temp:= `port`(v0) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L1b1420.  v2:= temp;
  #L1b1422.  v3:= 0I;
  #L1b1424.  if v1 == v2 then goto L1b142a;
  #L1b1428.  return v3;
  #L1b142a.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1b1430.  v1:= temp @kind object;
  #L1b1432.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1b1438.  v0:= temp @kind object;
  #L1b143a.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b1440.  v0:= temp;
  #L1b1442.  v1:= 1I;
  #L1b1444.  if v0 == 0 then goto L1b144a;
  #L1b1448.  return v1;
  #L1b144a.  v0:= v4.`okhttp3.internal.connection.RealConnection.i` @type ^`boolean` @kind boolean;
  #L1b144e.  if v0 != 0 then goto L1b146e;
  #L1b1452.  v0:= v4.`okhttp3.internal.connection.RealConnection.c` @type ^`okhttp3.Handshake` @kind object;
  #L1b1456.  if v0 == 0 then goto L1b146e;
  #L1b145a.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b1460.  call temp:= `a`(v4, v5, v0) @signature `Lokhttp3/internal/connection/RealConnection;.a:(Lokhttp3/HttpUrl;Lokhttp3/Handshake;)Z` @kind direct;
  #L1b1466.  v5:= temp;
  #L1b1468.  if v5 == 0 then goto L1b146e;
  #L1b146c.  v3:= 1I;
  #L1b146e.  return v3;
}
procedure `void` `cancel`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.cancel:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b1b04.  v0:= v1.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` @kind object;
  #L1b1b08.  if v0 == 0 then goto L1b1b12;
  #L1b1b0c.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L1b1b12.  return @kind void;
}
procedure `void` `connect`(`okhttp3.internal.connection.RealConnection` v16 @kind this, `int` v17 , `int` v18 , `int` v19 , `int` v20 , `boolean` v21 , `okhttp3.Call` v22 @kind object, `okhttp3.EventListener` v23 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.connect:(IIIIZLokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L1b1b24.  v7:= v16 @kind object;
  #L1b1b28.  v8:= v22 @kind object;
  #L1b1b2c.  v9:= v23 @kind object;
  #L1b1b30.  v0:= "call" @kind object;
  #L1b1b34.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b1b3a.  v0:= "eventListener" @kind object;
  #L1b1b3e.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b1b44.  v0:= v7.`okhttp3.internal.connection.RealConnection.d` @type ^`okhttp3.Protocol` @kind object;
  #L1b1b48.  v10:= 1I;
  #L1b1b4a.  if v0 != 0 then goto L1b1b52;
  #L1b1b4e.  v0:= 1I;
  #L1b1b50.  goto L1b1b54;
  #L1b1b52.  v0:= 0I;
  #L1b1b54.  if v0 == 0 then goto L1b1dd8;
  #L1b1b58.  v0:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1b5c.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b1b62.  v0:= temp @kind object;
  #L1b1b64.  call temp:= `connectionSpecs`(v0) @signature `Lokhttp3/Address;.connectionSpecs:()Ljava/util/List;` @kind virtual;
  #L1b1b6a.  v0:= temp @kind object;
  #L1b1b6c.  v11:= new `okhttp3.internal.connection.ConnectionSpecSelector`;
  #L1b1b70.  call `<init>`(v11, v0) @signature `Lokhttp3/internal/connection/ConnectionSpecSelector;.<init>:(Ljava/util/List;)V` @kind direct;
  #L1b1b76.  v1:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1b7a.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b1b80.  v1:= temp @kind object;
  #L1b1b82.  call temp:= `sslSocketFactory`(v1) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L1b1b88.  v1:= temp @kind object;
  #L1b1b8a.  if v1 != 0 then goto L1b1c30;
  #L1b1b8e.  v1:= `@@okhttp3.ConnectionSpec.CLEARTEXT` @type ^`okhttp3.ConnectionSpec` @kind object;
  #L1b1b92.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1b1b98.  v0:= temp;
  #L1b1b9a.  if v0 == 0 then goto L1b1c16;
  #L1b1b9e.  v0:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1ba2.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b1ba8.  v0:= temp @kind object;
  #L1b1baa.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b1bb0.  v0:= temp @kind object;
  #L1b1bb2.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1b1bb8.  v0:= temp @kind object;
  #L1b1bba.  v1:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L1b1bbe.  call temp:= `get`(v1) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L1b1bc4.  v1:= temp @kind object;
  #L1b1bc6.  call temp:= `isCleartextTrafficPermitted`(v1, v0) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind virtual;
  #L1b1bcc.  v1:= temp;
  #L1b1bce.  if v1 == 0 then goto L1b1bd4;
  #L1b1bd2.  goto L1b1c54;
  #L1b1bd4.  v1:= new `okhttp3.internal.connection.RouteException`;
  #L1b1bd8.  v2:= new `java.net.UnknownServiceException`;
  #L1b1bdc.  v3:= new `java.lang.StringBuilder`;
  #L1b1be0.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b1be6.  v4:= "CLEARTEXT communication to " @kind object;
  #L1b1bea.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1bf0.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1bf6.  v0:= " not permitted by network security policy" @kind object;
  #L1b1bfa.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1c00.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1c06.  v0:= temp @kind object;
  #L1b1c08.  call `<init>`(v2, v0) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b1c0e.  call `<init>`(v1, v2) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1b1c14.  throw v1;
  #L1b1c16.  v0:= new `okhttp3.internal.connection.RouteException`;
  #L1b1c1a.  v1:= new `java.net.UnknownServiceException`;
  #L1b1c1e.  v2:= "CLEARTEXT communication not enabled for client" @kind object;
  #L1b1c22.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b1c28.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1b1c2e.  throw v0;
  #L1b1c30.  v0:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1c34.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b1c3a.  v0:= temp @kind object;
  #L1b1c3c.  call temp:= `protocols`(v0) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @kind virtual;
  #L1b1c42.  v0:= temp @kind object;
  #L1b1c44.  v1:= `@@okhttp3.Protocol.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.Protocol` @kind object;
  #L1b1c48.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1b1c4e.  v0:= temp;
  #L1b1c50.  if v0 != 0 then goto L1b1dbe;
  #L1b1c54.  v12:= 0I;
  #L1b1c56.  v13:= v12 @kind object;
  #L1b1c58.  v0:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1c5c.  call temp:= `requiresTunnel`(v0) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @kind virtual;
  #L1b1c62.  v0:= temp;
  #L1b1c64.  if v0 == 0 then goto L1b1c9a;
  #L1b1c68.  v1:= v16 @kind object;
  #L1b1c6c.  v2:= v17;
  #L1b1c70.  v3:= v18;
  #L1b1c74.  v4:= v19;
  #L1b1c78.  v5:= v22 @kind object;
  #L1b1c7c.  v6:= v23 @kind object;
  #L1b1c80.  call `d`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/connection/RealConnection;.d:(IIILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L1b1c86.  v0:= v7.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` @kind object;
  #L1b1c8a.  if v0 != 0 then goto L1b1c90;
  #L1b1c8e.  goto L1b1cd4;
  #L1b1c90.  v14:= v17;
  #L1b1c94.  v15:= v18;
  #L1b1c98.  goto L1b1ca8;
  #L1b1c9a.  v14:= v17;
  #L1b1c9e.  v15:= v18;
  #L1b1ca2.  call `b`(v7, v14, v15, v8, v9) @signature `Lokhttp3/internal/connection/RealConnection;.b:(IILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L1b1ca8.  v6:= v20;
  #L1b1cac.  call `g`(v7, v11, v6, v8, v9) @signature `Lokhttp3/internal/connection/RealConnection;.g:(Lokhttp3/internal/connection/ConnectionSpecSelector;ILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L1b1cb2.  v0:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1cb6.  call temp:= `socketAddress`(v0) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L1b1cbc.  v0:= temp @kind object;
  #L1b1cbe.  v1:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1cc2.  call temp:= `proxy`(v1) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1b1cc8.  v1:= temp @kind object;
  #L1b1cca.  v2:= v7.`okhttp3.internal.connection.RealConnection.d` @type ^`okhttp3.Protocol` @kind object;
  #L1b1cce.  call `connectEnd`(v9, v8, v0, v1, v2) @signature `Lokhttp3/EventListener;.connectEnd:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;)V` @kind virtual;
  #L1b1cd4.  v0:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1cd8.  call temp:= `requiresTunnel`(v0) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @kind virtual;
  #L1b1cde.  v0:= temp;
  #L1b1ce0.  if v0 == 0 then goto L1b1d08;
  #L1b1ce4.  v0:= v7.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` @kind object;
  #L1b1ce8.  if v0 == 0 then goto L1b1cee;
  #L1b1cec.  goto L1b1d08;
  #L1b1cee.  v0:= new `okhttp3.internal.connection.RouteException`;
  #L1b1cf2.  v1:= new `java.net.ProtocolException`;
  #L1b1cf6.  v2:= "Too many tunnel connections attempted: 21" @kind object;
  #L1b1cfa.  call `<init>`(v1, v2) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b1d00.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1b1d06.  throw v0;
  #L1b1d08.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L1b1d0e.  v0:= temp @kind wide;
  #L1b1d10.  v7.`okhttp3.internal.connection.RealConnection.o` @type ^`long` := v0 @kind wide;
  #L1b1d14.  return @kind void;
  #L1b1d16.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1b1d18.  goto L1b1d2c;
  #L1b1d1a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1b1d1c.  goto L1b1d28;
  #L1b1d1e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1b1d20.  v14:= v17;
  #L1b1d24.  v15:= v18;
  #L1b1d28.  v6:= v20;
  #L1b1d2c.  v1:= v7.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` @kind object;
  #L1b1d30.  if v1 == 0 then goto L1b1d3a;
  #L1b1d34.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L1b1d3a.  v1:= v7.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` @kind object;
  #L1b1d3e.  if v1 == 0 then goto L1b1d48;
  #L1b1d42.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L1b1d48.  v7.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` := v12 @kind object;
  #L1b1d4c.  v7.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` := v12 @kind object;
  #L1b1d50.  v7.`okhttp3.internal.connection.RealConnection.f` @type ^`okio.BufferedSource` := v12 @kind object;
  #L1b1d54.  v7.`okhttp3.internal.connection.RealConnection.g` @type ^`okio.BufferedSink` := v12 @kind object;
  #L1b1d58.  v7.`okhttp3.internal.connection.RealConnection.c` @type ^`okhttp3.Handshake` := v12 @kind object;
  #L1b1d5c.  v7.`okhttp3.internal.connection.RealConnection.d` @type ^`okhttp3.Protocol` := v12 @kind object;
  #L1b1d60.  v7.`okhttp3.internal.connection.RealConnection.e` @type ^`okhttp3.internal.http2.Http2Connection` := v12 @kind object;
  #L1b1d64.  v7.`okhttp3.internal.connection.RealConnection.m` @type ^`int` := v10;
  #L1b1d68.  v1:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1d6c.  call temp:= `socketAddress`(v1) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L1b1d72.  v3:= temp @kind object;
  #L1b1d74.  v1:= v7.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1d78.  call temp:= `proxy`(v1) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1b1d7e.  v4:= temp @kind object;
  #L1b1d80.  v5:= 0I;
  #L1b1d82.  v1:= v23 @kind object;
  #L1b1d86.  v2:= v22 @kind object;
  #L1b1d8a.  v6:= v0 @kind object;
  #L1b1d8c.  call `connectFailed`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/EventListener;.connectFailed:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;Ljava/io/IOException;)V` @kind virtual;
  #L1b1d92.  if v13 != 0 then goto L1b1da2;
  #L1b1d96.  v13:= new `okhttp3.internal.connection.RouteException`;
  #L1b1d9a.  call `<init>`(v13, v0) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1b1da0.  goto L1b1da8;
  #L1b1da2.  call `addConnectException`(v13, v0) @signature `Lokhttp3/internal/connection/RouteException;.addConnectException:(Ljava/io/IOException;)V` @kind virtual;
  #L1b1da8.  if v21 == 0 then goto L1b1dbc;
  #L1b1dac.  call temp:= `connectionFailed`(v11, v0) @signature `Lokhttp3/internal/connection/ConnectionSpecSelector;.connectionFailed:(Ljava/io/IOException;)Z` @kind virtual;
  #L1b1db2.  v0:= temp;
  #L1b1db4.  if v0 == 0 then goto L1b1dbc;
  #L1b1db8.  goto L1b1c58;
  #L1b1dbc.  throw v13;
  #L1b1dbe.  v0:= new `okhttp3.internal.connection.RouteException`;
  #L1b1dc2.  v1:= new `java.net.UnknownServiceException`;
  #L1b1dc6.  v2:= "H2_PRIOR_KNOWLEDGE cannot be used with HTTPS" @kind object;
  #L1b1dca.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b1dd0.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1b1dd6.  throw v0;
  #L1b1dd8.  v0:= new `java.lang.IllegalStateException`;
  #L1b1ddc.  v1:= "already connected" @kind object;
  #L1b1de0.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1de6.  v1:= temp @kind object;
  #L1b1de8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b1dee.  throw v0;
  catch `java.io.IOException` @[L1b1c58..L1b1c8a] goto L1b1d1e;
  catch `java.io.IOException` @[L1b1ca2..L1b1ca8] goto L1b1d1a;
  catch `java.io.IOException` @[L1b1cac..L1b1cd4] goto L1b1d16;
}
procedure `void` `connectFailed$okhttp`(`okhttp3.internal.connection.RealConnection` v3 @kind this, `okhttp3.OkHttpClient` v4 @kind object, `okhttp3.Route` v5 @kind object, `java.io.IOException` v6 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.connectFailed$okhttp:(Lokhttp3/OkHttpClient;Lokhttp3/Route;Ljava/io/IOException;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1b1e28.  v0:= "client" @kind object;
  #L1b1e2c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b1e32.  v0:= "failedRoute" @kind object;
  #L1b1e36.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b1e3c.  v0:= "failure" @kind object;
  #L1b1e40.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b1e46.  call temp:= `proxy`(v5) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1b1e4c.  v0:= temp @kind object;
  #L1b1e4e.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1b1e54.  v0:= temp @kind object;
  #L1b1e56.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L1b1e5a.  if v0 == v1 then goto L1b1e94;
  #L1b1e5e.  call temp:= `address`(v5) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b1e64.  v0:= temp @kind object;
  #L1b1e66.  call temp:= `proxySelector`(v0) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L1b1e6c.  v1:= temp @kind object;
  #L1b1e6e.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b1e74.  v0:= temp @kind object;
  #L1b1e76.  call temp:= `uri`(v0) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @kind virtual;
  #L1b1e7c.  v0:= temp @kind object;
  #L1b1e7e.  call temp:= `proxy`(v5) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1b1e84.  v2:= temp @kind object;
  #L1b1e86.  call temp:= `address`(v2) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L1b1e8c.  v2:= temp @kind object;
  #L1b1e8e.  call `connectFailed`(v1, v0, v2, v6) @signature `Ljava/net/ProxySelector;.connectFailed:(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V` @kind virtual;
  #L1b1e94.  call temp:= `getRouteDatabase`(v4) @signature `Lokhttp3/OkHttpClient;.getRouteDatabase:()Lokhttp3/internal/connection/RouteDatabase;` @kind virtual;
  #L1b1e9a.  v4:= temp @kind object;
  #L1b1e9c.  call `failed`(v4, v5) @signature `Lokhttp3/internal/connection/RouteDatabase;.failed:(Lokhttp3/Route;)V` @kind virtual;
  #L1b1ea2.  return @kind void;
}
procedure `java.util.List` `getCalls`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.getCalls:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b15d4.  v0:= v1.`okhttp3.internal.connection.RealConnection.n` @type ^`java.util.List` @kind object;
  #L1b15d8.  return v0 @kind object;
}
procedure `okhttp3.internal.connection.RealConnectionPool` `getConnectionPool`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.getConnectionPool:()Lokhttp3/internal/connection/RealConnectionPool;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b193c.  v0:= v1.`okhttp3.internal.connection.RealConnection.p` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L1b1940.  return v0 @kind object;
}
procedure `long` `getIdleAtNs$okhttp`(`okhttp3.internal.connection.RealConnection` v2 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.getIdleAtNs$okhttp:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1b15ec.  v0:= v2.`okhttp3.internal.connection.RealConnection.o` @type ^`long` @kind wide;
  #L1b15f0.  return v0 @kind wide;
}
procedure `boolean` `getNoNewExchanges`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.getNoNewExchanges:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b0fec.  v0:= v1.`okhttp3.internal.connection.RealConnection.h` @type ^`boolean` @kind boolean;
  #L1b0ff0.  return v0;
}
procedure `int` `getRouteFailureCount$okhttp`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.getRouteFailureCount$okhttp:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b1480.  v0:= v1.`okhttp3.internal.connection.RealConnection.j` @type ^`int`;
  #L1b1484.  return v0;
}
procedure `okhttp3.Handshake` `handshake`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.handshake:()Lokhttp3/Handshake;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b161c.  v0:= v1.`okhttp3.internal.connection.RealConnection.c` @type ^`okhttp3.Handshake` @kind object;
  #L1b1620.  return v0 @kind object;
}
procedure `void` `incrementSuccessCount$okhttp`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.incrementSuccessCount$okhttp:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b248c.  @monitorenter v1
  #L1b248e.  v0:= v1.`okhttp3.internal.connection.RealConnection.k` @type ^`int`;
  #L1b2492.  v0:= v0 + 1;
  #L1b2496.  v1.`okhttp3.internal.connection.RealConnection.k` @type ^`int` := v0;
  #L1b249a.  @monitorexit v1
  #L1b249c.  return @kind void;
  #L1b249e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b24a0.  @monitorexit v1
  #L1b24a2.  throw v0;
  catch `java.lang.Throwable` @[L1b248e..L1b249a] goto L1b249e;
}
procedure `boolean` `isEligible$okhttp`(`okhttp3.internal.connection.RealConnection` v3 @kind this, `okhttp3.Address` v4 @kind object, `java.util.List` v5 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.isEligible$okhttp:(Lokhttp3/Address;Ljava/util/List;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1b1004.  v0:= "address" @kind object;
  #L1b1008.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b100e.  v0:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L1b1012.  if v0 == 0 then goto L1b107c;
  #L1b1016.  call temp:= `holdsLock`(v3) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L1b101c.  v0:= temp;
  #L1b101e.  if v0 == 0 then goto L1b1024;
  #L1b1022.  goto L1b107c;
  #L1b1024.  v4:= new `java.lang.AssertionError`;
  #L1b1028.  v5:= new `java.lang.StringBuilder`;
  #L1b102c.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b1032.  v0:= "Thread " @kind object;
  #L1b1036.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b103c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1b1042.  v0:= temp @kind object;
  #L1b1044.  v1:= "Thread.currentThread()" @kind object;
  #L1b1048.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b104e.  call temp:= `getName`(v0) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b1054.  v0:= temp @kind object;
  #L1b1056.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b105c.  v0:= " MUST hold lock on " @kind object;
  #L1b1060.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1066.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b106c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b1072.  v5:= temp @kind object;
  #L1b1074.  call `<init>`(v4, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1b107a.  throw v4;
  #L1b107c.  v0:= v3.`okhttp3.internal.connection.RealConnection.n` @type ^`java.util.List` @kind object;
  #L1b1080.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b1086.  v0:= temp;
  #L1b1088.  v1:= v3.`okhttp3.internal.connection.RealConnection.m` @type ^`int`;
  #L1b108c.  v2:= 0I;
  #L1b108e.  if v0 >= v1 then goto L1b1176;
  #L1b1092.  v0:= v3.`okhttp3.internal.connection.RealConnection.h` @type ^`boolean` @kind boolean;
  #L1b1096.  if v0 == 0 then goto L1b109c;
  #L1b109a.  goto L1b1176;
  #L1b109c.  v0:= v3.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b10a0.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b10a6.  v0:= temp @kind object;
  #L1b10a8.  call temp:= `equalsNonHost$okhttp`(v0, v4) @signature `Lokhttp3/Address;.equalsNonHost$okhttp:(Lokhttp3/Address;)Z` @kind virtual;
  #L1b10ae.  v0:= temp;
  #L1b10b0.  if v0 != 0 then goto L1b10b6;
  #L1b10b4.  return v2;
  #L1b10b6.  call temp:= `url`(v4) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b10bc.  v0:= temp @kind object;
  #L1b10be.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1b10c4.  v0:= temp @kind object;
  #L1b10c6.  call temp:= `route`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @kind virtual;
  #L1b10cc.  v1:= temp @kind object;
  #L1b10ce.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b10d4.  v1:= temp @kind object;
  #L1b10d6.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b10dc.  v1:= temp @kind object;
  #L1b10de.  call temp:= `host`(v1) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1b10e4.  v1:= temp @kind object;
  #L1b10e6.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b10ec.  v0:= temp;
  #L1b10ee.  v1:= 1I;
  #L1b10f0.  if v0 == 0 then goto L1b10f6;
  #L1b10f4.  return v1;
  #L1b10f6.  v0:= v3.`okhttp3.internal.connection.RealConnection.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b10fa.  if v0 != 0 then goto L1b1100;
  #L1b10fe.  return v2;
  #L1b1100.  if v5 == 0 then goto L1b1176;
  #L1b1104.  call temp:= `h`(v3, v5) @signature `Lokhttp3/internal/connection/RealConnection;.h:(Ljava/util/List;)Z` @kind direct;
  #L1b110a.  v5:= temp;
  #L1b110c.  if v5 != 0 then goto L1b1112;
  #L1b1110.  goto L1b1176;
  #L1b1112.  call temp:= `hostnameVerifier`(v4) @signature `Lokhttp3/Address;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L1b1118.  v5:= temp @kind object;
  #L1b111a.  v0:= `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` @kind object;
  #L1b111e.  if v5 == v0 then goto L1b1124;
  #L1b1122.  return v2;
  #L1b1124.  call temp:= `url`(v4) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b112a.  v5:= temp @kind object;
  #L1b112c.  call temp:= `j`(v3, v5) @signature `Lokhttp3/internal/connection/RealConnection;.j:(Lokhttp3/HttpUrl;)Z` @kind direct;
  #L1b1132.  v5:= temp;
  #L1b1134.  if v5 != 0 then goto L1b113a;
  #L1b1138.  return v2;
  #L1b113a.  call temp:= `certificatePinner`(v4) @signature `Lokhttp3/Address;.certificatePinner:()Lokhttp3/CertificatePinner;` @kind virtual;
  #L1b1140.  v5:= temp @kind object;
  #L1b1142.  call `checkNotNull`(v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b1148.  call temp:= `url`(v4) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b114e.  v4:= temp @kind object;
  #L1b1150.  call temp:= `host`(v4) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1b1156.  v4:= temp @kind object;
  #L1b1158.  call temp:= `handshake`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L1b115e.  v0:= temp @kind object;
  #L1b1160.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b1166.  call temp:= `peerCertificates`(v0) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L1b116c.  v0:= temp @kind object;
  #L1b116e.  call `check`(v5, v4, v0) @signature `Lokhttp3/CertificatePinner;.check:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L1b1174.  return v1;
  #L1b1176.  return v2;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[L1b113a..L1b1174] goto L1b1176;
}
procedure `boolean` `isHealthy`(`okhttp3.internal.connection.RealConnection` v7 @kind this, `boolean` v8 ) @signature `Lokhttp3/internal/connection/RealConnection;.isHealthy:(Z)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b1198.  v0:= `@@okhttp3.internal.Util.assertionsEnabled` @type ^`boolean` @kind boolean;
  #L1b119c.  if v0 == 0 then goto L1b1206;
  #L1b11a0.  call temp:= `holdsLock`(v7) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L1b11a6.  v0:= temp;
  #L1b11a8.  if v0 != 0 then goto L1b11ae;
  #L1b11ac.  goto L1b1206;
  #L1b11ae.  v8:= new `java.lang.AssertionError`;
  #L1b11b2.  v0:= new `java.lang.StringBuilder`;
  #L1b11b6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b11bc.  v1:= "Thread " @kind object;
  #L1b11c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b11c6.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1b11cc.  v1:= temp @kind object;
  #L1b11ce.  v2:= "Thread.currentThread()" @kind object;
  #L1b11d2.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b11d8.  call temp:= `getName`(v1) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L1b11de.  v1:= temp @kind object;
  #L1b11e0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b11e6.  v1:= " MUST NOT hold lock on " @kind object;
  #L1b11ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b11f0.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b11f6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b11fc.  v0:= temp @kind object;
  #L1b11fe.  call `<init>`(v8, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1b1204.  throw v8;
  #L1b1206.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L1b120c.  v0:= temp @kind wide;
  #L1b120e.  v2:= v7.`okhttp3.internal.connection.RealConnection.a` @type ^`java.net.Socket` @kind object;
  #L1b1212.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b1218.  v3:= v7.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` @kind object;
  #L1b121c.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b1222.  v4:= v7.`okhttp3.internal.connection.RealConnection.f` @type ^`okio.BufferedSource` @kind object;
  #L1b1226.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b122c.  call temp:= `isClosed`(v2) @signature `Ljava/net/Socket;.isClosed:()Z` @kind virtual;
  #L1b1232.  v2:= temp;
  #L1b1234.  if v2 != 0 then goto L1b12a4;
  #L1b1238.  call temp:= `isClosed`(v3) @signature `Ljava/net/Socket;.isClosed:()Z` @kind virtual;
  #L1b123e.  v2:= temp;
  #L1b1240.  if v2 != 0 then goto L1b12a4;
  #L1b1244.  call temp:= `isInputShutdown`(v3) @signature `Ljava/net/Socket;.isInputShutdown:()Z` @kind virtual;
  #L1b124a.  v2:= temp;
  #L1b124c.  if v2 != 0 then goto L1b12a4;
  #L1b1250.  call temp:= `isOutputShutdown`(v3) @signature `Ljava/net/Socket;.isOutputShutdown:()Z` @kind virtual;
  #L1b1256.  v2:= temp;
  #L1b1258.  if v2 == 0 then goto L1b125e;
  #L1b125c.  goto L1b12a4;
  #L1b125e.  v2:= v7.`okhttp3.internal.connection.RealConnection.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b1262.  if v2 == 0 then goto L1b1270;
  #L1b1266.  call temp:= `isHealthy`(v2, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.isHealthy:(J)Z` @kind virtual;
  #L1b126c.  v8:= temp;
  #L1b126e.  return v8;
  #L1b1270.  @monitorenter v7
  #L1b1272.  v5:= v7.`okhttp3.internal.connection.RealConnection.o` @type ^`long` @kind wide;
  #L1b1276.  v0:= v0 - v5 @kind long;
  #L1b1278.  @monitorexit v7
  #L1b127a.  v5:= 10000000000L;
  #L1b1284.  v2:= lcmp(v0, v5);
  #L1b1288.  if v2 < 0 then goto L1b129a;
  #L1b128c.  if v8 == 0 then goto L1b129a;
  #L1b1290.  call temp:= `isHealthy`(v3, v4) @signature `Lokhttp3/internal/Util;.isHealthy:(Ljava/net/Socket;Lokio/BufferedSource;)Z` @kind static;
  #L1b1296.  v8:= temp;
  #L1b1298.  return v8;
  #L1b129a.  v8:= 1I;
  #L1b129c.  return v8;
  #L1b129e.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b12a0.  @monitorexit v7
  #L1b12a2.  throw v8;
  #L1b12a4.  v8:= 0I;
  #L1b12a6.  return v8;
  catch `java.lang.Throwable` @[L1b1272..L1b1276] goto L1b129e;
}
procedure `boolean` `isMultiplexed$okhttp`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.isMultiplexed$okhttp:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b12c4.  v0:= v1.`okhttp3.internal.connection.RealConnection.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b12c8.  if v0 == 0 then goto L1b12d0;
  #L1b12cc.  v0:= 1I;
  #L1b12ce.  goto L1b12d2;
  #L1b12d0.  v0:= 0I;
  #L1b12d2.  return v0;
}
procedure `okhttp3.internal.http.ExchangeCodec` `newCodec$okhttp`(`okhttp3.internal.connection.RealConnection` v6 @kind this, `okhttp3.OkHttpClient` v7 @kind object, `okhttp3.internal.http.RealInterceptorChain` v8 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.newCodec$okhttp:(Lokhttp3/OkHttpClient;Lokhttp3/internal/http/RealInterceptorChain;)Lokhttp3/internal/http/ExchangeCodec;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b1954.  v0:= "client" @kind object;
  #L1b1958.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b195e.  v0:= "chain" @kind object;
  #L1b1962.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b1968.  v0:= v6.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` @kind object;
  #L1b196c.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b1972.  v1:= v6.`okhttp3.internal.connection.RealConnection.f` @type ^`okio.BufferedSource` @kind object;
  #L1b1976.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b197c.  v2:= v6.`okhttp3.internal.connection.RealConnection.g` @type ^`okio.BufferedSink` @kind object;
  #L1b1980.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b1986.  v3:= v6.`okhttp3.internal.connection.RealConnection.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L1b198a.  if v3 == 0 then goto L1b199a;
  #L1b198e.  v0:= new `okhttp3.internal.http2.Http2ExchangeCodec`;
  #L1b1992.  call `<init>`(v0, v7, v6, v8, v3) @signature `Lokhttp3/internal/http2/Http2ExchangeCodec;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/RealConnection;Lokhttp3/internal/http/RealInterceptorChain;Lokhttp3/internal/http2/Http2Connection;)V` @kind direct;
  #L1b1998.  goto L1b19ea;
  #L1b199a.  call temp:= `readTimeoutMillis`(v8) @signature `Lokhttp3/internal/http/RealInterceptorChain;.readTimeoutMillis:()I` @kind virtual;
  #L1b19a0.  v3:= temp;
  #L1b19a2.  call `setSoTimeout`(v0, v3) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L1b19a8.  call temp:= `timeout`(v1) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L1b19ae.  v0:= temp @kind object;
  #L1b19b0.  call temp:= `getReadTimeoutMillis$okhttp`(v8) @signature `Lokhttp3/internal/http/RealInterceptorChain;.getReadTimeoutMillis$okhttp:()I` @kind virtual;
  #L1b19b6.  v3:= temp;
  #L1b19b8.  v3:= (`long`) v3 @kind i2l;
  #L1b19ba.  v5:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1b19be.  call temp:= `timeout`(v0, v3, v5) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1b19c4.  call temp:= `timeout`(v2) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L1b19ca.  v0:= temp @kind object;
  #L1b19cc.  call temp:= `getWriteTimeoutMillis$okhttp`(v8) @signature `Lokhttp3/internal/http/RealInterceptorChain;.getWriteTimeoutMillis$okhttp:()I` @kind virtual;
  #L1b19d2.  v8:= temp;
  #L1b19d4.  v3:= (`long`) v8 @kind i2l;
  #L1b19d6.  v8:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1b19da.  call temp:= `timeout`(v0, v3, v8) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L1b19e0.  v0:= new `okhttp3.internal.http1.Http1ExchangeCodec`;
  #L1b19e4.  call `<init>`(v0, v7, v6, v1, v2) @signature `Lokhttp3/internal/http1/Http1ExchangeCodec;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/RealConnection;Lokio/BufferedSource;Lokio/BufferedSink;)V` @kind direct;
  #L1b19ea.  return v0 @kind object;
}
procedure `okhttp3.internal.ws.RealWebSocket$Streams` `newWebSocketStreams$okhttp`(`okhttp3.internal.connection.RealConnection` v8 @kind this, `okhttp3.internal.connection.Exchange` v9 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.newWebSocketStreams$okhttp:(Lokhttp3/internal/connection/Exchange;)Lokhttp3/internal/ws/RealWebSocket$Streams;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b19fc.  v0:= "exchange" @kind object;
  #L1b1a00.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b1a06.  v0:= v8.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` @kind object;
  #L1b1a0a.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b1a10.  v6:= v8.`okhttp3.internal.connection.RealConnection.f` @type ^`okio.BufferedSource` @kind object;
  #L1b1a14.  call `checkNotNull`(v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b1a1a.  v7:= v8.`okhttp3.internal.connection.RealConnection.g` @type ^`okio.BufferedSink` @kind object;
  #L1b1a1e.  call `checkNotNull`(v7) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b1a24.  v1:= 0I;
  #L1b1a26.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L1b1a2c.  call `noNewExchanges$okhttp`(v8) @signature `Lokhttp3/internal/connection/RealConnection;.noNewExchanges$okhttp:()V` @kind virtual;
  #L1b1a32.  v0:= new `okhttp3.internal.connection.RealConnection$newWebSocketStreams$1`;
  #L1b1a36.  v5:= 1I;
  #L1b1a38.  v1:= v0 @kind object;
  #L1b1a3a.  v2:= v9 @kind object;
  #L1b1a3c.  v3:= v6 @kind object;
  #L1b1a3e.  v4:= v7 @kind object;
  #L1b1a40.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lokhttp3/internal/connection/RealConnection$newWebSocketStreams$1;.<init>:(Lokhttp3/internal/connection/Exchange;Lokio/BufferedSource;Lokio/BufferedSink;ZLokio/BufferedSource;Lokio/BufferedSink;)V` @kind direct;
  #L1b1a46.  return v0 @kind object;
}
procedure `void` `noCoalescedConnections$okhttp`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.noCoalescedConnections$okhttp:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b24c0.  @monitorenter v1
  #L1b24c2.  v0:= 1I;
  #L1b24c4.  v1.`okhttp3.internal.connection.RealConnection.i` @type ^`boolean` := v0 @kind boolean;
  #L1b24c8.  @monitorexit v1
  #L1b24ca.  return @kind void;
  #L1b24cc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b24ce.  @monitorexit v1
  #L1b24d0.  throw v0;
  catch `java.lang.Throwable` @[L1b24c4..L1b24c8] goto L1b24cc;
}
procedure `void` `noNewExchanges$okhttp`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.noNewExchanges$okhttp:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b24f0.  @monitorenter v1
  #L1b24f2.  v0:= 1I;
  #L1b24f4.  v1.`okhttp3.internal.connection.RealConnection.h` @type ^`boolean` := v0 @kind boolean;
  #L1b24f8.  @monitorexit v1
  #L1b24fa.  return @kind void;
  #L1b24fc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b24fe.  @monitorexit v1
  #L1b2500.  throw v0;
  catch `java.lang.Throwable` @[L1b24f4..L1b24f8] goto L1b24fc;
}
procedure `void` `onSettings`(`okhttp3.internal.connection.RealConnection` v1 @kind this, `okhttp3.internal.http2.Http2Connection` v2 @kind object, `okhttp3.internal.http2.Settings` v3 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.onSettings:(Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Settings;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b2520.  @monitorenter v1
  #L1b2522.  v0:= "connection" @kind object;
  #L1b2526.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b252c.  v2:= "settings" @kind object;
  #L1b2530.  call `checkNotNullParameter`(v3, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b2536.  call temp:= `getMaxConcurrentStreams`(v3) @signature `Lokhttp3/internal/http2/Settings;.getMaxConcurrentStreams:()I` @kind virtual;
  #L1b253c.  v2:= temp;
  #L1b253e.  v1.`okhttp3.internal.connection.RealConnection.m` @type ^`int` := v2;
  #L1b2542.  @monitorexit v1
  #L1b2544.  return @kind void;
  #L1b2546.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b2548.  @monitorexit v1
  #L1b254a.  throw v2;
  catch `java.lang.Throwable` @[L1b2522..L1b2542] goto L1b2546;
}
procedure `void` `onStream`(`okhttp3.internal.connection.RealConnection` v2 @kind this, `okhttp3.internal.http2.Http2Stream` v3 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.onStream:(Lokhttp3/internal/http2/Http2Stream;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b2568.  v0:= "stream" @kind object;
  #L1b256c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b2572.  v0:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1b2576.  v1:= 0I;
  #L1b2578.  call `close`(v3, v0, v1) @signature `Lokhttp3/internal/http2/Http2Stream;.close:(Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V` @kind virtual;
  #L1b257e.  return @kind void;
}
procedure `okhttp3.Protocol` `protocol`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.protocol:()Lokhttp3/Protocol;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b1634.  v0:= v1.`okhttp3.internal.connection.RealConnection.d` @type ^`okhttp3.Protocol` @kind object;
  #L1b1638.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b163e.  return v0 @kind object;
}
procedure `okhttp3.Route` `route`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b1924.  v0:= v1.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1928.  return v0 @kind object;
}
procedure `void` `setIdleAtNs$okhttp`(`okhttp3.internal.connection.RealConnection` v0 @kind this, `long` v1 ) @signature `Lokhttp3/internal/connection/RealConnection;.setIdleAtNs$okhttp:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1b2590.  v0.`okhttp3.internal.connection.RealConnection.o` @type ^`long` := v1 @kind wide;
  #L1b2594.  return @kind void;
}
procedure `void` `setNoNewExchanges`(`okhttp3.internal.connection.RealConnection` v0 @kind this, `boolean` v1 ) @signature `Lokhttp3/internal/connection/RealConnection;.setNoNewExchanges:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1b25a8.  v0.`okhttp3.internal.connection.RealConnection.h` @type ^`boolean` := v1 @kind boolean;
  #L1b25ac.  return @kind void;
}
procedure `void` `setRouteFailureCount$okhttp`(`okhttp3.internal.connection.RealConnection` v0 @kind this, `int` v1 ) @signature `Lokhttp3/internal/connection/RealConnection;.setRouteFailureCount$okhttp:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1b25c0.  v0.`okhttp3.internal.connection.RealConnection.j` @type ^`int` := v1;
  #L1b25c4.  return @kind void;
}
procedure `java.net.Socket` `socket`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.socket:()Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1b15b8.  v0:= v1.`okhttp3.internal.connection.RealConnection.b` @type ^`java.net.Socket` @kind object;
  #L1b15bc.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b15c2.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.connection.RealConnection` v2 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1b1498.  v0:= new `java.lang.StringBuilder`;
  #L1b149c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b14a2.  v1:= "Connection{" @kind object;
  #L1b14a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b14ac.  v1:= v2.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b14b0.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b14b6.  v1:= temp @kind object;
  #L1b14b8.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b14be.  v1:= temp @kind object;
  #L1b14c0.  call temp:= `host`(v1) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1b14c6.  v1:= temp @kind object;
  #L1b14c8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b14ce.  v1:= 58I;
  #L1b14d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b14d8.  v1:= v2.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b14dc.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L1b14e2.  v1:= temp @kind object;
  #L1b14e4.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b14ea.  v1:= temp @kind object;
  #L1b14ec.  call temp:= `port`(v1) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L1b14f2.  v1:= temp;
  #L1b14f4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b14fa.  v1:= 44I;
  #L1b14fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1504.  v1:= " proxy=" @kind object;
  #L1b1508.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b150e.  v1:= v2.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b1512.  call temp:= `proxy`(v1) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1b1518.  v1:= temp @kind object;
  #L1b151a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1520.  v1:= " hostAddress=" @kind object;
  #L1b1524.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b152a.  v1:= v2.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b152e.  call temp:= `socketAddress`(v1) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L1b1534.  v1:= temp @kind object;
  #L1b1536.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b153c.  v1:= " cipherSuite=" @kind object;
  #L1b1540.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1546.  v1:= v2.`okhttp3.internal.connection.RealConnection.c` @type ^`okhttp3.Handshake` @kind object;
  #L1b154a.  if v1 == 0 then goto L1b155c;
  #L1b154e.  call temp:= `cipherSuite`(v1) @signature `Lokhttp3/Handshake;.cipherSuite:()Lokhttp3/CipherSuite;` @kind virtual;
  #L1b1554.  v1:= temp @kind object;
  #L1b1556.  if v1 == 0 then goto L1b155c;
  #L1b155a.  goto L1b1560;
  #L1b155c.  v1:= "none" @kind object;
  #L1b1560.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1566.  v1:= " protocol=" @kind object;
  #L1b156a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1570.  v1:= v2.`okhttp3.internal.connection.RealConnection.d` @type ^`okhttp3.Protocol` @kind object;
  #L1b1574.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b157a.  v1:= 125I;
  #L1b157e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b1584.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b158a.  v0:= temp @kind object;
  #L1b158c.  return v0 @kind object;
}
procedure `void` `trackFailure$okhttp`(`okhttp3.internal.connection.RealConnection` v3 @kind this, `okhttp3.internal.connection.RealCall` v4 @kind object, `java.io.IOException` v5 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.trackFailure$okhttp:(Lokhttp3/internal/connection/RealCall;Ljava/io/IOException;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1b2684.  @monitorenter v3
  #L1b2686.  v0:= "call" @kind object;
  #L1b268a.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b2690.  v0:= instanceof @variable v5 @type ^`okhttp3.internal.http2.StreamResetException` @kind boolean;
  #L1b2694.  v1:= 1I;
  #L1b2696.  if v0 == 0 then goto L1b26f8;
  #L1b269a.  v0:= v5 @kind object;
  #L1b269c.  v0:= (`okhttp3.internal.http2.StreamResetException`) v0 @kind object;
  #L1b26a0.  v0:= v0.`okhttp3.internal.http2.StreamResetException.errorCode` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1b26a4.  v2:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1b26a8.  if v0 != v2 then goto L1b26ca;
  #L1b26ac.  v4:= v3.`okhttp3.internal.connection.RealConnection.l` @type ^`int`;
  #L1b26b0.  v4:= v4 + v1 @kind int;
  #L1b26b2.  v3.`okhttp3.internal.connection.RealConnection.l` @type ^`int` := v4;
  #L1b26b6.  if v4 <= v1 then goto L1b2738;
  #L1b26ba.  v3.`okhttp3.internal.connection.RealConnection.h` @type ^`boolean` := v1 @kind boolean;
  #L1b26be.  v4:= v3.`okhttp3.internal.connection.RealConnection.j` @type ^`int`;
  #L1b26c2.  v4:= v4 + v1 @kind int;
  #L1b26c4.  v3.`okhttp3.internal.connection.RealConnection.j` @type ^`int` := v4;
  #L1b26c8.  goto L1b2738;
  #L1b26ca.  v5:= (`okhttp3.internal.http2.StreamResetException`) v5 @kind object;
  #L1b26ce.  v5:= v5.`okhttp3.internal.http2.StreamResetException.errorCode` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1b26d2.  v0:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L1b26d6.  if v5 != v0 then goto L1b26e8;
  #L1b26da.  call temp:= `isCanceled`(v4) @signature `Lokhttp3/internal/connection/RealCall;.isCanceled:()Z` @kind virtual;
  #L1b26e0.  v4:= temp;
  #L1b26e2.  if v4 == 0 then goto L1b26e8;
  #L1b26e6.  goto L1b2738;
  #L1b26e8.  v3.`okhttp3.internal.connection.RealConnection.h` @type ^`boolean` := v1 @kind boolean;
  #L1b26ec.  v4:= v3.`okhttp3.internal.connection.RealConnection.j` @type ^`int`;
  #L1b26f0.  v4:= v4 + v1 @kind int;
  #L1b26f2.  v3.`okhttp3.internal.connection.RealConnection.j` @type ^`int` := v4;
  #L1b26f6.  goto L1b2738;
  #L1b26f8.  call temp:= `isMultiplexed$okhttp`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.isMultiplexed$okhttp:()Z` @kind virtual;
  #L1b26fe.  v0:= temp;
  #L1b2700.  if v0 == 0 then goto L1b270c;
  #L1b2704.  v0:= instanceof @variable v5 @type ^`okhttp3.internal.http2.ConnectionShutdownException` @kind boolean;
  #L1b2708.  if v0 == 0 then goto L1b2738;
  #L1b270c.  v3.`okhttp3.internal.connection.RealConnection.h` @type ^`boolean` := v1 @kind boolean;
  #L1b2710.  v0:= v3.`okhttp3.internal.connection.RealConnection.k` @type ^`int`;
  #L1b2714.  if v0 != 0 then goto L1b2738;
  #L1b2718.  if v5 == 0 then goto L1b272e;
  #L1b271c.  call temp:= `getClient`(v4) @signature `Lokhttp3/internal/connection/RealCall;.getClient:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L1b2722.  v4:= temp @kind object;
  #L1b2724.  v0:= v3.`okhttp3.internal.connection.RealConnection.q` @type ^`okhttp3.Route` @kind object;
  #L1b2728.  call `connectFailed$okhttp`(v3, v4, v0, v5) @signature `Lokhttp3/internal/connection/RealConnection;.connectFailed$okhttp:(Lokhttp3/OkHttpClient;Lokhttp3/Route;Ljava/io/IOException;)V` @kind virtual;
  #L1b272e.  v4:= v3.`okhttp3.internal.connection.RealConnection.j` @type ^`int`;
  #L1b2732.  v4:= v4 + v1 @kind int;
  #L1b2734.  v3.`okhttp3.internal.connection.RealConnection.j` @type ^`int` := v4;
  #L1b2738.  @monitorexit v3
  #L1b273a.  return @kind void;
  #L1b273c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b273e.  @monitorexit v3
  #L1b2740.  throw v4;
  catch `java.lang.Throwable` @[L1b2686..L1b2738] goto L1b273c;
}
