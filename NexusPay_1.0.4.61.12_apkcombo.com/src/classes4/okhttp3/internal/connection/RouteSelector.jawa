record `okhttp3.internal.connection.RouteSelector` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `okhttp3.internal.connection.RouteSelector.a` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RouteSelector.b` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.c` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.d` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Address` `okhttp3.internal.connection.RouteSelector.e` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.RouteDatabase` `okhttp3.internal.connection.RouteSelector.f` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Call` `okhttp3.internal.connection.RouteSelector.g` @AccessFlag PRIVATE_FINAL;
  `okhttp3.EventListener` `okhttp3.internal.connection.RouteSelector.h` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.connection.RouteSelector$Companion` `@@okhttp3.internal.connection.RouteSelector.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/connection/RouteSelector;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1b2cd8.  v0:= new `okhttp3.internal.connection.RouteSelector$Companion`;
  #L1b2cdc.  v1:= 0I;
  #L1b2cde.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RouteSelector$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1b2ce4.  `@@okhttp3.internal.connection.RouteSelector.Companion` @type ^`okhttp3.internal.connection.RouteSelector$Companion` := v0 @kind object;
  #L1b2ce8.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteSelector` v1 @kind this, `okhttp3.Address` v2 @kind object, `okhttp3.internal.connection.RouteDatabase` v3 @kind object, `okhttp3.Call` v4 @kind object, `okhttp3.EventListener` v5 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.<init>:(Lokhttp3/Address;Lokhttp3/internal/connection/RouteDatabase;Lokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b2cfc.  v0:= "address" @kind object;
  #L1b2d00.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b2d06.  v0:= "routeDatabase" @kind object;
  #L1b2d0a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b2d10.  v0:= "call" @kind object;
  #L1b2d14.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b2d1a.  v0:= "eventListener" @kind object;
  #L1b2d1e.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b2d24.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b2d2a.  v1.`okhttp3.internal.connection.RouteSelector.e` @type ^`okhttp3.Address` := v2 @kind object;
  #L1b2d2e.  v1.`okhttp3.internal.connection.RouteSelector.f` @type ^`okhttp3.internal.connection.RouteDatabase` := v3 @kind object;
  #L1b2d32.  v1.`okhttp3.internal.connection.RouteSelector.g` @type ^`okhttp3.Call` := v4 @kind object;
  #L1b2d36.  v1.`okhttp3.internal.connection.RouteSelector.h` @type ^`okhttp3.EventListener` := v5 @kind object;
  #L1b2d3a.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L1b2d40.  v2:= temp @kind object;
  #L1b2d42.  v1.`okhttp3.internal.connection.RouteSelector.a` @type ^`java.util.List` := v2 @kind object;
  #L1b2d46.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L1b2d4c.  v2:= temp @kind object;
  #L1b2d4e.  v1.`okhttp3.internal.connection.RouteSelector.c` @type ^`java.util.List` := v2 @kind object;
  #L1b2d52.  v2:= new `java.util.ArrayList`;
  #L1b2d56.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1b2d5c.  v1.`okhttp3.internal.connection.RouteSelector.d` @type ^`java.util.List` := v2 @kind object;
  #L1b2d60.  v2:= v1.`okhttp3.internal.connection.RouteSelector.e` @type ^`okhttp3.Address` @kind object;
  #L1b2d64.  call temp:= `url`(v2) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b2d6a.  v2:= temp @kind object;
  #L1b2d6c.  v3:= v1.`okhttp3.internal.connection.RouteSelector.e` @type ^`okhttp3.Address` @kind object;
  #L1b2d70.  call temp:= `proxy`(v3) @signature `Lokhttp3/Address;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1b2d76.  v3:= temp @kind object;
  #L1b2d78.  call `d`(v1, v2, v3) @signature `Lokhttp3/internal/connection/RouteSelector;.d:(Lokhttp3/HttpUrl;Ljava/net/Proxy;)V` @kind direct;
  #L1b2d7e.  return @kind void;
}
procedure `boolean` `a`(`okhttp3.internal.connection.RouteSelector` v2 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.a:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1b2b24.  v0:= v2.`okhttp3.internal.connection.RouteSelector.b` @type ^`int`;
  #L1b2b28.  v1:= v2.`okhttp3.internal.connection.RouteSelector.a` @type ^`java.util.List` @kind object;
  #L1b2b2c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1b2b32.  v1:= temp;
  #L1b2b34.  if v0 >= v1 then goto L1b2b3c;
  #L1b2b38.  v0:= 1I;
  #L1b2b3a.  goto L1b2b3e;
  #L1b2b3c.  v0:= 0I;
  #L1b2b3e.  return v0;
}
procedure `okhttp3.Address` `access$getAddress$p`(`okhttp3.internal.connection.RouteSelector` v0 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.access$getAddress$p:(Lokhttp3/internal/connection/RouteSelector;)Lokhttp3/Address;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1b2be8.  v0:= v0.`okhttp3.internal.connection.RouteSelector.e` @type ^`okhttp3.Address` @kind object;
  #L1b2bec.  return v0 @kind object;
}
procedure `java.net.Proxy` `b`(`okhttp3.internal.connection.RouteSelector` v3 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.b:()Ljava/net/Proxy;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1b2b50.  call temp:= `a`(v3) @signature `Lokhttp3/internal/connection/RouteSelector;.a:()Z` @kind direct;
  #L1b2b56.  v0:= temp;
  #L1b2b58.  if v0 == 0 then goto L1b2b80;
  #L1b2b5c.  v0:= v3.`okhttp3.internal.connection.RouteSelector.a` @type ^`java.util.List` @kind object;
  #L1b2b60.  v1:= v3.`okhttp3.internal.connection.RouteSelector.b` @type ^`int`;
  #L1b2b64.  v2:= v1 + 1;
  #L1b2b68.  v3.`okhttp3.internal.connection.RouteSelector.b` @type ^`int` := v2;
  #L1b2b6c.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1b2b72.  v0:= temp @kind object;
  #L1b2b74.  v0:= (`java.net.Proxy`) v0 @kind object;
  #L1b2b78.  call `c`(v3, v0) @signature `Lokhttp3/internal/connection/RouteSelector;.c:(Ljava/net/Proxy;)V` @kind direct;
  #L1b2b7e.  return v0 @kind object;
  #L1b2b80.  v0:= new `java.net.SocketException`;
  #L1b2b84.  v1:= new `java.lang.StringBuilder`;
  #L1b2b88.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b2b8e.  v2:= "No route to " @kind object;
  #L1b2b92.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2b98.  v2:= v3.`okhttp3.internal.connection.RouteSelector.e` @type ^`okhttp3.Address` @kind object;
  #L1b2b9c.  call temp:= `url`(v2) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b2ba2.  v2:= temp @kind object;
  #L1b2ba4.  call temp:= `host`(v2) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1b2baa.  v2:= temp @kind object;
  #L1b2bac.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2bb2.  v2:= "; exhausted proxy configurations: " @kind object;
  #L1b2bb6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2bbc.  v2:= v3.`okhttp3.internal.connection.RouteSelector.a` @type ^`java.util.List` @kind object;
  #L1b2bc0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2bc6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b2bcc.  v1:= temp @kind object;
  #L1b2bce.  call `<init>`(v0, v1) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b2bd4.  throw v0;
}
procedure `void` `c`(`okhttp3.internal.connection.RouteSelector` v5 @kind this, `java.net.Proxy` v6 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.c:(Ljava/net/Proxy;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b2d90.  v0:= new `java.util.ArrayList`;
  #L1b2d94.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1b2d9a.  v5.`okhttp3.internal.connection.RouteSelector.c` @type ^`java.util.List` := v0 @kind object;
  #L1b2d9e.  call temp:= `type`(v6) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1b2da4.  v1:= temp @kind object;
  #L1b2da6.  v2:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L1b2daa.  if v1 == v2 then goto L1b2e28;
  #L1b2dae.  call temp:= `type`(v6) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1b2db4.  v1:= temp @kind object;
  #L1b2db6.  v2:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L1b2dba.  if v1 != v2 then goto L1b2dc0;
  #L1b2dbe.  goto L1b2e28;
  #L1b2dc0.  call temp:= `address`(v6) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L1b2dc6.  v1:= temp @kind object;
  #L1b2dc8.  v2:= instanceof @variable v1 @type ^`java.net.InetSocketAddress` @kind boolean;
  #L1b2dcc.  if v2 == 0 then goto L1b2dea;
  #L1b2dd0.  v2:= `@@okhttp3.internal.connection.RouteSelector.Companion` @type ^`okhttp3.internal.connection.RouteSelector$Companion` @kind object;
  #L1b2dd4.  v1:= (`java.net.InetSocketAddress`) v1 @kind object;
  #L1b2dd8.  call temp:= `getSocketHost`(v2, v1) @signature `Lokhttp3/internal/connection/RouteSelector$Companion;.getSocketHost:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @kind virtual;
  #L1b2dde.  v2:= temp @kind object;
  #L1b2de0.  call temp:= `getPort`(v1) @signature `Ljava/net/InetSocketAddress;.getPort:()I` @kind virtual;
  #L1b2de6.  v1:= temp;
  #L1b2de8.  goto L1b2e50;
  #L1b2dea.  v6:= new `java.lang.StringBuilder`;
  #L1b2dee.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b2df4.  v0:= "Proxy.address() is not an InetSocketAddress: " @kind object;
  #L1b2df8.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2dfe.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1b2e04.  v0:= temp @kind object;
  #L1b2e06.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2e0c.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b2e12.  v6:= temp @kind object;
  #L1b2e14.  v0:= new `java.lang.IllegalArgumentException`;
  #L1b2e18.  call temp:= `toString`(v6) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b2e1e.  v6:= temp @kind object;
  #L1b2e20.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b2e26.  throw v0;
  #L1b2e28.  v1:= v5.`okhttp3.internal.connection.RouteSelector.e` @type ^`okhttp3.Address` @kind object;
  #L1b2e2c.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b2e32.  v1:= temp @kind object;
  #L1b2e34.  call temp:= `host`(v1) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L1b2e3a.  v2:= temp @kind object;
  #L1b2e3c.  v1:= v5.`okhttp3.internal.connection.RouteSelector.e` @type ^`okhttp3.Address` @kind object;
  #L1b2e40.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b2e46.  v1:= temp @kind object;
  #L1b2e48.  call temp:= `port`(v1) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L1b2e4e.  v1:= temp;
  #L1b2e50.  v3:= 65535I;
  #L1b2e56.  v4:= 1I;
  #L1b2e58.  if v4 > v1 then goto L1b2f30;
  #L1b2e5c.  if v3 < v1 then goto L1b2f30;
  #L1b2e60.  call temp:= `type`(v6) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1b2e66.  v6:= temp @kind object;
  #L1b2e68.  v3:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L1b2e6c.  if v6 != v3 then goto L1b2e80;
  #L1b2e70.  call temp:= `createUnresolved`(v2, v1) @signature `Ljava/net/InetSocketAddress;.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;` @kind static;
  #L1b2e76.  v6:= temp @kind object;
  #L1b2e78.  call temp:= `add`(v0, v6) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1b2e7e.  goto L1b2eee;
  #L1b2e80.  v6:= v5.`okhttp3.internal.connection.RouteSelector.h` @type ^`okhttp3.EventListener` @kind object;
  #L1b2e84.  v3:= v5.`okhttp3.internal.connection.RouteSelector.g` @type ^`okhttp3.Call` @kind object;
  #L1b2e88.  call `dnsStart`(v6, v3, v2) @signature `Lokhttp3/EventListener;.dnsStart:(Lokhttp3/Call;Ljava/lang/String;)V` @kind virtual;
  #L1b2e8e.  v6:= v5.`okhttp3.internal.connection.RouteSelector.e` @type ^`okhttp3.Address` @kind object;
  #L1b2e92.  call temp:= `dns`(v6) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @kind virtual;
  #L1b2e98.  v6:= temp @kind object;
  #L1b2e9a.  call temp:= `lookup`(v6, v2) @signature `Lokhttp3/Dns;.lookup:(Ljava/lang/String;)Ljava/util/List;` @kind interface;
  #L1b2ea0.  v6:= temp @kind object;
  #L1b2ea2.  call temp:= `isEmpty`(v6) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1b2ea8.  v3:= temp;
  #L1b2eaa.  if v3 != 0 then goto L1b2ef0;
  #L1b2eae.  v3:= v5.`okhttp3.internal.connection.RouteSelector.h` @type ^`okhttp3.EventListener` @kind object;
  #L1b2eb2.  v4:= v5.`okhttp3.internal.connection.RouteSelector.g` @type ^`okhttp3.Call` @kind object;
  #L1b2eb6.  call `dnsEnd`(v3, v4, v2, v6) @signature `Lokhttp3/EventListener;.dnsEnd:(Lokhttp3/Call;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L1b2ebc.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1b2ec2.  v6:= temp @kind object;
  #L1b2ec4.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b2eca.  v2:= temp;
  #L1b2ecc.  if v2 == 0 then goto L1b2eee;
  #L1b2ed0.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b2ed6.  v2:= temp @kind object;
  #L1b2ed8.  v2:= (`java.net.InetAddress`) v2 @kind object;
  #L1b2edc.  v3:= new `java.net.InetSocketAddress`;
  #L1b2ee0.  call `<init>`(v3, v2, v1) @signature `Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V` @kind direct;
  #L1b2ee6.  call temp:= `add`(v0, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1b2eec.  goto L1b2ec4;
  #L1b2eee.  return @kind void;
  #L1b2ef0.  v6:= new `java.net.UnknownHostException`;
  #L1b2ef4.  v0:= new `java.lang.StringBuilder`;
  #L1b2ef8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b2efe.  v1:= v5.`okhttp3.internal.connection.RouteSelector.e` @type ^`okhttp3.Address` @kind object;
  #L1b2f02.  call temp:= `dns`(v1) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @kind virtual;
  #L1b2f08.  v1:= temp @kind object;
  #L1b2f0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2f10.  v1:= " returned no addresses for " @kind object;
  #L1b2f14.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2f1a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2f20.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b2f26.  v0:= temp @kind object;
  #L1b2f28.  call `<init>`(v6, v0) @signature `Ljava/net/UnknownHostException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b2f2e.  throw v6;
  #L1b2f30.  v6:= new `java.net.SocketException`;
  #L1b2f34.  v0:= new `java.lang.StringBuilder`;
  #L1b2f38.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b2f3e.  v3:= "No route to " @kind object;
  #L1b2f42.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2f48.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2f4e.  v2:= 58I;
  #L1b2f52.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2f58.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2f5e.  v1:= "; port is out of range" @kind object;
  #L1b2f62.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b2f68.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b2f6e.  v0:= temp @kind object;
  #L1b2f70.  call `<init>`(v6, v0) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b2f76.  throw v6;
}
procedure `void` `d`(`okhttp3.internal.connection.RouteSelector` v2 @kind this, `okhttp3.HttpUrl` v3 @kind object, `java.net.Proxy` v4 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.d:(Lokhttp3/HttpUrl;Ljava/net/Proxy;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1b2f88.  v0:= new `okhttp3.internal.connection.RouteSelector$a`;
  #L1b2f8c.  call `<init>`(v0, v2, v4, v3) @signature `Lokhttp3/internal/connection/RouteSelector$a;.<init>:(Lokhttp3/internal/connection/RouteSelector;Ljava/net/Proxy;Lokhttp3/HttpUrl;)V` @kind direct;
  #L1b2f92.  v4:= v2.`okhttp3.internal.connection.RouteSelector.h` @type ^`okhttp3.EventListener` @kind object;
  #L1b2f96.  v1:= v2.`okhttp3.internal.connection.RouteSelector.g` @type ^`okhttp3.Call` @kind object;
  #L1b2f9a.  call `proxySelectStart`(v4, v1, v3) @signature `Lokhttp3/EventListener;.proxySelectStart:(Lokhttp3/Call;Lokhttp3/HttpUrl;)V` @kind virtual;
  #L1b2fa0.  call temp:= `a`(v0) @signature `Lokhttp3/internal/connection/RouteSelector$a;.a:()Ljava/util/List;` @kind virtual;
  #L1b2fa6.  v4:= temp @kind object;
  #L1b2fa8.  v2.`okhttp3.internal.connection.RouteSelector.a` @type ^`java.util.List` := v4 @kind object;
  #L1b2fac.  v0:= 0I;
  #L1b2fae.  v2.`okhttp3.internal.connection.RouteSelector.b` @type ^`int` := v0;
  #L1b2fb2.  v0:= v2.`okhttp3.internal.connection.RouteSelector.h` @type ^`okhttp3.EventListener` @kind object;
  #L1b2fb6.  v1:= v2.`okhttp3.internal.connection.RouteSelector.g` @type ^`okhttp3.Call` @kind object;
  #L1b2fba.  call `proxySelectEnd`(v0, v1, v3, v4) @signature `Lokhttp3/EventListener;.proxySelectEnd:(Lokhttp3/Call;Lokhttp3/HttpUrl;Ljava/util/List;)V` @kind virtual;
  #L1b2fc0.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.internal.connection.RouteSelector` v2 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1b2aec.  call temp:= `a`(v2) @signature `Lokhttp3/internal/connection/RouteSelector;.a:()Z` @kind direct;
  #L1b2af2.  v0:= temp;
  #L1b2af4.  v1:= 1I;
  #L1b2af6.  if v0 != 0 then goto L1b2b10;
  #L1b2afa.  v0:= v2.`okhttp3.internal.connection.RouteSelector.d` @type ^`java.util.List` @kind object;
  #L1b2afe.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L1b2b04.  v0:= temp;
  #L1b2b06.  v0:= v0 ^~ v1 @kind int;
  #L1b2b08.  if v0 == 0 then goto L1b2b0e;
  #L1b2b0c.  goto L1b2b10;
  #L1b2b0e.  v1:= 0I;
  #L1b2b10.  return v1;
}
procedure `okhttp3.internal.connection.RouteSelector$Selection` `next`(`okhttp3.internal.connection.RouteSelector` v6 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.next:()Lokhttp3/internal/connection/RouteSelector$Selection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1b2c00.  call temp:= `hasNext`(v6) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @kind virtual;
  #L1b2c06.  v0:= temp;
  #L1b2c08.  if v0 == 0 then goto L1b2cbc;
  #L1b2c0c.  v0:= new `java.util.ArrayList`;
  #L1b2c10.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1b2c16.  call temp:= `a`(v6) @signature `Lokhttp3/internal/connection/RouteSelector;.a:()Z` @kind direct;
  #L1b2c1c.  v1:= temp;
  #L1b2c1e.  if v1 == 0 then goto L1b2c90;
  #L1b2c22.  call temp:= `b`(v6) @signature `Lokhttp3/internal/connection/RouteSelector;.b:()Ljava/net/Proxy;` @kind direct;
  #L1b2c28.  v1:= temp @kind object;
  #L1b2c2a.  v2:= v6.`okhttp3.internal.connection.RouteSelector.c` @type ^`java.util.List` @kind object;
  #L1b2c2e.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1b2c34.  v2:= temp @kind object;
  #L1b2c36.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b2c3c.  v3:= temp;
  #L1b2c3e.  if v3 == 0 then goto L1b2c80;
  #L1b2c42.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b2c48.  v3:= temp @kind object;
  #L1b2c4a.  v3:= (`java.net.InetSocketAddress`) v3 @kind object;
  #L1b2c4e.  v4:= new `okhttp3.Route`;
  #L1b2c52.  v5:= v6.`okhttp3.internal.connection.RouteSelector.e` @type ^`okhttp3.Address` @kind object;
  #L1b2c56.  call `<init>`(v4, v5, v1, v3) @signature `Lokhttp3/Route;.<init>:(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @kind direct;
  #L1b2c5c.  v3:= v6.`okhttp3.internal.connection.RouteSelector.f` @type ^`okhttp3.internal.connection.RouteDatabase` @kind object;
  #L1b2c60.  call temp:= `shouldPostpone`(v3, v4) @signature `Lokhttp3/internal/connection/RouteDatabase;.shouldPostpone:(Lokhttp3/Route;)Z` @kind virtual;
  #L1b2c66.  v3:= temp;
  #L1b2c68.  if v3 == 0 then goto L1b2c78;
  #L1b2c6c.  v3:= v6.`okhttp3.internal.connection.RouteSelector.d` @type ^`java.util.List` @kind object;
  #L1b2c70.  call temp:= `add`(v3, v4) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1b2c76.  goto L1b2c36;
  #L1b2c78.  call temp:= `add`(v0, v4) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1b2c7e.  goto L1b2c36;
  #L1b2c80.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L1b2c86.  v1:= temp;
  #L1b2c88.  v1:= v1 ^~ 1;
  #L1b2c8c.  if v1 == 0 then goto L1b2c16;
  #L1b2c90.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1b2c96.  v1:= temp;
  #L1b2c98.  if v1 == 0 then goto L1b2cb0;
  #L1b2c9c.  v1:= v6.`okhttp3.internal.connection.RouteSelector.d` @type ^`java.util.List` @kind object;
  #L1b2ca0.  call temp:= `addAll`(v0, v1) @signature `Lkotlin/collections/CollectionsKt;.addAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z` @kind static;
  #L1b2ca6.  v1:= v6.`okhttp3.internal.connection.RouteSelector.d` @type ^`java.util.List` @kind object;
  #L1b2caa.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L1b2cb0.  v1:= new `okhttp3.internal.connection.RouteSelector$Selection`;
  #L1b2cb4.  call `<init>`(v1, v0) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.<init>:(Ljava/util/List;)V` @kind direct;
  #L1b2cba.  return v1 @kind object;
  #L1b2cbc.  v0:= new `java.util.NoSuchElementException`;
  #L1b2cc0.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L1b2cc6.  throw v0;
}
