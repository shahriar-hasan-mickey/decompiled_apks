record `okhttp3.internal.connection.RouteDatabase` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `okhttp3.internal.connection.RouteDatabase.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteDatabase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b27a0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b27a6.  v0:= new `java.util.LinkedHashSet`;
  #L1b27aa.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L1b27b0.  v1.`okhttp3.internal.connection.RouteDatabase.a` @type ^`java.util.Set` := v0 @kind object;
  #L1b27b4.  return @kind void;
}
procedure `void` `connected`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteDatabase;.connected:(Lokhttp3/Route;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b27c8.  @monitorenter v1
  #L1b27ca.  v0:= "route" @kind object;
  #L1b27ce.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b27d4.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.a` @type ^`java.util.Set` @kind object;
  #L1b27d8.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L1b27de.  @monitorexit v1
  #L1b27e0.  return @kind void;
  #L1b27e2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b27e4.  @monitorexit v1
  #L1b27e6.  throw v2;
  catch `java.lang.Throwable` @[L1b27ca..L1b27de] goto L1b27e2;
}
procedure `void` `failed`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteDatabase;.failed:(Lokhttp3/Route;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b2804.  @monitorenter v1
  #L1b2806.  v0:= "failedRoute" @kind object;
  #L1b280a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b2810.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.a` @type ^`java.util.Set` @kind object;
  #L1b2814.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1b281a.  @monitorexit v1
  #L1b281c.  return @kind void;
  #L1b281e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b2820.  @monitorexit v1
  #L1b2822.  throw v2;
  catch `java.lang.Throwable` @[L1b2806..L1b281a] goto L1b281e;
}
procedure `boolean` `shouldPostpone`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteDatabase;.shouldPostpone:(Lokhttp3/Route;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b2760.  @monitorenter v1
  #L1b2762.  v0:= "route" @kind object;
  #L1b2766.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b276c.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.a` @type ^`java.util.Set` @kind object;
  #L1b2770.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1b2776.  v2:= temp;
  #L1b2778.  @monitorexit v1
  #L1b277a.  return v2;
  #L1b277c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b277e.  @monitorexit v1
  #L1b2780.  throw v2;
  catch `java.lang.Throwable` @[L1b2762..L1b2778] goto L1b277c;
}
