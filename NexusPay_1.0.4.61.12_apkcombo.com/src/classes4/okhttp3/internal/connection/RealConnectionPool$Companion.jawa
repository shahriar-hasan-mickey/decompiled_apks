record `okhttp3.internal.connection.RealConnectionPool$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.internal.connection.RealConnectionPool$Companion` v0 @kind this) @signature `Lokhttp3/internal/connection/RealConnectionPool$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1b07a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b07a6.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RealConnectionPool$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/internal/connection/RealConnectionPool$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1b07b8.  call `<init>`(v0) @signature `Lokhttp3/internal/connection/RealConnectionPool$Companion;.<init>:()V` @kind direct;
  #L1b07be.  return @kind void;
}
procedure `okhttp3.internal.connection.RealConnectionPool` `get`(`okhttp3.internal.connection.RealConnectionPool$Companion` v1 @kind this, `okhttp3.ConnectionPool` v2 @kind object) @signature `Lokhttp3/internal/connection/RealConnectionPool$Companion;.get:(Lokhttp3/ConnectionPool;)Lokhttp3/internal/connection/RealConnectionPool;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b077c.  v0:= "connectionPool" @kind object;
  #L1b0780.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b0786.  call temp:= `getDelegate$okhttp`(v2) @signature `Lokhttp3/ConnectionPool;.getDelegate$okhttp:()Lokhttp3/internal/connection/RealConnectionPool;` @kind virtual;
  #L1b078c.  v2:= temp @kind object;
  #L1b078e.  return v2 @kind object;
}
