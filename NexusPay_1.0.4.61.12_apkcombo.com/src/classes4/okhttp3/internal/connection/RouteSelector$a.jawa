record `okhttp3.internal.connection.RouteSelector$a` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function0` @kind interface {
  `okhttp3.internal.connection.RouteSelector` `okhttp3.internal.connection.RouteSelector$a.a` @AccessFlag FINAL_SYNTHETIC;
  `java.net.Proxy` `okhttp3.internal.connection.RouteSelector$a.b` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.HttpUrl` `okhttp3.internal.connection.RouteSelector$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteSelector$a` v0 @kind this, `okhttp3.internal.connection.RouteSelector` v1 @kind object, `java.net.Proxy` v2 @kind object, `okhttp3.HttpUrl` v3 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector$a;.<init>:(Lokhttp3/internal/connection/RouteSelector;Ljava/net/Proxy;Lokhttp3/HttpUrl;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1b2ac4.  v0.`okhttp3.internal.connection.RouteSelector$a.a` @type ^`okhttp3.internal.connection.RouteSelector` := v1 @kind object;
  #L1b2ac8.  v0.`okhttp3.internal.connection.RouteSelector$a.b` @type ^`java.net.Proxy` := v2 @kind object;
  #L1b2acc.  v0.`okhttp3.internal.connection.RouteSelector$a.c` @type ^`okhttp3.HttpUrl` := v3 @kind object;
  #L1b2ad0.  v1:= 0I;
  #L1b2ad2.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L1b2ad8.  return @kind void;
}
procedure `java.util.List` `a`(`okhttp3.internal.connection.RouteSelector$a` v4 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector$a;.a:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b2a18.  v0:= v4.`okhttp3.internal.connection.RouteSelector$a.b` @type ^`java.net.Proxy` @kind object;
  #L1b2a1c.  if v0 == 0 then goto L1b2a2a;
  #L1b2a20.  call temp:= `listOf`(v0) @signature `Lkotlin/collections/CollectionsKt;.listOf:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1b2a26.  v0:= temp @kind object;
  #L1b2a28.  return v0 @kind object;
  #L1b2a2a.  v0:= v4.`okhttp3.internal.connection.RouteSelector$a.c` @type ^`okhttp3.HttpUrl` @kind object;
  #L1b2a2e.  call temp:= `uri`(v0) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @kind virtual;
  #L1b2a34.  v0:= temp @kind object;
  #L1b2a36.  call temp:= `getHost`(v0) @signature `Ljava/net/URI;.getHost:()Ljava/lang/String;` @kind virtual;
  #L1b2a3c.  v1:= temp @kind object;
  #L1b2a3e.  v2:= 0I;
  #L1b2a40.  v3:= 1I;
  #L1b2a42.  if v1 != 0 then goto L1b2a5c;
  #L1b2a46.  v0:= new `java.net.Proxy`[v3];
  #L1b2a4a.  v1:= `@@java.net.Proxy.NO_PROXY` @type ^`java.net.Proxy` @kind object;
  #L1b2a4e.  v0[v2]:= v1 @kind object;
  #L1b2a52.  call temp:= `immutableListOf`(v0) @signature `Lokhttp3/internal/Util;.immutableListOf:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1b2a58.  v0:= temp @kind object;
  #L1b2a5a.  return v0 @kind object;
  #L1b2a5c.  v1:= v4.`okhttp3.internal.connection.RouteSelector$a.a` @type ^`okhttp3.internal.connection.RouteSelector` @kind object;
  #L1b2a60.  call temp:= `access$getAddress$p`(v1) @signature `Lokhttp3/internal/connection/RouteSelector;.access$getAddress$p:(Lokhttp3/internal/connection/RouteSelector;)Lokhttp3/Address;` @kind static;
  #L1b2a66.  v1:= temp @kind object;
  #L1b2a68.  call temp:= `proxySelector`(v1) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L1b2a6e.  v1:= temp @kind object;
  #L1b2a70.  call temp:= `select`(v1, v0) @signature `Ljava/net/ProxySelector;.select:(Ljava/net/URI;)Ljava/util/List;` @kind virtual;
  #L1b2a76.  v0:= temp @kind object;
  #L1b2a78.  if v0 == 0 then goto L1b2a8e;
  #L1b2a7c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L1b2a82.  v1:= temp;
  #L1b2a84.  if v1 == 0 then goto L1b2a8a;
  #L1b2a88.  goto L1b2a8e;
  #L1b2a8a.  v1:= 0I;
  #L1b2a8c.  goto L1b2a90;
  #L1b2a8e.  v1:= 1I;
  #L1b2a90.  if v1 == 0 then goto L1b2aaa;
  #L1b2a94.  v0:= new `java.net.Proxy`[v3];
  #L1b2a98.  v1:= `@@java.net.Proxy.NO_PROXY` @type ^`java.net.Proxy` @kind object;
  #L1b2a9c.  v0[v2]:= v1 @kind object;
  #L1b2aa0.  call temp:= `immutableListOf`(v0) @signature `Lokhttp3/internal/Util;.immutableListOf:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1b2aa6.  v0:= temp @kind object;
  #L1b2aa8.  return v0 @kind object;
  #L1b2aaa.  call temp:= `toImmutableList`(v0) @signature `Lokhttp3/internal/Util;.toImmutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1b2ab0.  v0:= temp @kind object;
  #L1b2ab2.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`okhttp3.internal.connection.RouteSelector$a` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector$a;.invoke:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1b29fc.  call temp:= `a`(v1) @signature `Lokhttp3/internal/connection/RouteSelector$a;.a:()Ljava/util/List;` @kind virtual;
  #L1b2a02.  v0:= temp @kind object;
  #L1b2a04.  return v0 @kind object;
}
