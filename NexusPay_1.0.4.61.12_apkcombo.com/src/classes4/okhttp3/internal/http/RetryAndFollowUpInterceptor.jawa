record `okhttp3.internal.http.RetryAndFollowUpInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `okhttp3.OkHttpClient` `okhttp3.internal.http.RetryAndFollowUpInterceptor.a` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion` `@@okhttp3.internal.http.RetryAndFollowUpInterceptor.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1b4e58.  v0:= new `okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion`;
  #L1b4e5c.  v1:= 0I;
  #L1b4e5e.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1b4e64.  `@@okhttp3.internal.http.RetryAndFollowUpInterceptor.Companion` @type ^`okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion` := v0 @kind object;
  #L1b4e68.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v1 @kind this, `okhttp3.OkHttpClient` v2 @kind object) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.<init>:(Lokhttp3/OkHttpClient;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b4e7c.  v0:= "client" @kind object;
  #L1b4e80.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b4e86.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b4e8c.  v1.`okhttp3.internal.http.RetryAndFollowUpInterceptor.a` @type ^`okhttp3.OkHttpClient` := v2 @kind object;
  #L1b4e90.  return @kind void;
}
procedure `okhttp3.Request` `a`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v8 @kind this, `okhttp3.Response` v9 @kind object, `java.lang.String` v10 @kind object) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.a:(Lokhttp3/Response;Ljava/lang/String;)Lokhttp3/Request;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b48dc.  v0:= v8.`okhttp3.internal.http.RetryAndFollowUpInterceptor.a` @type ^`okhttp3.OkHttpClient` @kind object;
  #L1b48e0.  call temp:= `followRedirects`(v0) @signature `Lokhttp3/OkHttpClient;.followRedirects:()Z` @kind virtual;
  #L1b48e6.  v0:= temp;
  #L1b48e8.  v1:= 0I;
  #L1b48ea.  if v0 != 0 then goto L1b48f0;
  #L1b48ee.  return v1 @kind object;
  #L1b48f0.  v0:= 2I;
  #L1b48f2.  v2:= "Location" @kind object;
  #L1b48f6.  call temp:= `header$default`(v9, v2, v1, v0, v1) @signature `Lokhttp3/Response;.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1b48fc.  v0:= temp @kind object;
  #L1b48fe.  if v0 == 0 then goto L1b4a40;
  #L1b4902.  call temp:= `request`(v9) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L1b4908.  v2:= temp @kind object;
  #L1b490a.  call temp:= `url`(v2) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b4910.  v2:= temp @kind object;
  #L1b4912.  call temp:= `resolve`(v2, v0) @signature `Lokhttp3/HttpUrl;.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind virtual;
  #L1b4918.  v0:= temp @kind object;
  #L1b491a.  if v0 == 0 then goto L1b4a40;
  #L1b491e.  call temp:= `scheme`(v0) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L1b4924.  v2:= temp @kind object;
  #L1b4926.  call temp:= `request`(v9) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L1b492c.  v3:= temp @kind object;
  #L1b492e.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b4934.  v3:= temp @kind object;
  #L1b4936.  call temp:= `scheme`(v3) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L1b493c.  v3:= temp @kind object;
  #L1b493e.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b4944.  v2:= temp;
  #L1b4946.  if v2 != 0 then goto L1b495c;
  #L1b494a.  v2:= v8.`okhttp3.internal.http.RetryAndFollowUpInterceptor.a` @type ^`okhttp3.OkHttpClient` @kind object;
  #L1b494e.  call temp:= `followSslRedirects`(v2) @signature `Lokhttp3/OkHttpClient;.followSslRedirects:()Z` @kind virtual;
  #L1b4954.  v2:= temp;
  #L1b4956.  if v2 != 0 then goto L1b495c;
  #L1b495a.  return v1 @kind object;
  #L1b495c.  call temp:= `request`(v9) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L1b4962.  v2:= temp @kind object;
  #L1b4964.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L1b496a.  v2:= temp @kind object;
  #L1b496c.  call temp:= `permitsRequestBody`(v10) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L1b4972.  v3:= temp;
  #L1b4974.  if v3 == 0 then goto L1b4a08;
  #L1b4978.  call temp:= `code`(v9) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L1b497e.  v3:= temp;
  #L1b4980.  v4:= `@@okhttp3.internal.http.HttpMethod.INSTANCE` @type ^`okhttp3.internal.http.HttpMethod` @kind object;
  #L1b4984.  call temp:= `redirectsWithBody`(v4, v10) @signature `Lokhttp3/internal/http/HttpMethod;.redirectsWithBody:(Ljava/lang/String;)Z` @kind virtual;
  #L1b498a.  v4:= temp;
  #L1b498c.  v5:= 307I;
  #L1b4990.  v6:= 308I;
  #L1b4994.  if v4 != 0 then goto L1b49a6;
  #L1b4998.  if v3 == v6 then goto L1b49a6;
  #L1b499c.  if v3 != v5 then goto L1b49a2;
  #L1b49a0.  goto L1b49a6;
  #L1b49a2.  v4:= 0I;
  #L1b49a4.  goto L1b49a8;
  #L1b49a6.  v4:= 1I;
  #L1b49a8.  v7:= `@@okhttp3.internal.http.HttpMethod.INSTANCE` @type ^`okhttp3.internal.http.HttpMethod` @kind object;
  #L1b49ac.  call temp:= `redirectsToGet`(v7, v10) @signature `Lokhttp3/internal/http/HttpMethod;.redirectsToGet:(Ljava/lang/String;)Z` @kind virtual;
  #L1b49b2.  v7:= temp;
  #L1b49b4.  if v7 == 0 then goto L1b49cc;
  #L1b49b8.  if v3 == v6 then goto L1b49cc;
  #L1b49bc.  if v3 == v5 then goto L1b49cc;
  #L1b49c0.  v10:= "GET" @kind object;
  #L1b49c4.  call temp:= `method`(v2, v10, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b49ca.  goto L1b49e6;
  #L1b49cc.  if v4 == 0 then goto L1b49e0;
  #L1b49d0.  call temp:= `request`(v9) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L1b49d6.  v1:= temp @kind object;
  #L1b49d8.  call temp:= `body`(v1) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L1b49de.  v1:= temp @kind object;
  #L1b49e0.  call temp:= `method`(v2, v10, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b49e6.  if v4 != 0 then goto L1b4a08;
  #L1b49ea.  v10:= "Transfer-Encoding" @kind object;
  #L1b49ee.  call temp:= `removeHeader`(v2, v10) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b49f4.  v10:= "Content-Length" @kind object;
  #L1b49f8.  call temp:= `removeHeader`(v2, v10) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b49fe.  v10:= "Content-Type" @kind object;
  #L1b4a02.  call temp:= `removeHeader`(v2, v10) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b4a08.  call temp:= `request`(v9) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L1b4a0e.  v9:= temp @kind object;
  #L1b4a10.  call temp:= `url`(v9) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b4a16.  v9:= temp @kind object;
  #L1b4a18.  call temp:= `canReuseConnectionFor`(v9, v0) @signature `Lokhttp3/internal/Util;.canReuseConnectionFor:(Lokhttp3/HttpUrl;Lokhttp3/HttpUrl;)Z` @kind static;
  #L1b4a1e.  v9:= temp;
  #L1b4a20.  if v9 != 0 then goto L1b4a2e;
  #L1b4a24.  v9:= "Authorization" @kind object;
  #L1b4a28.  call temp:= `removeHeader`(v2, v9) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b4a2e.  call temp:= `url`(v2, v0) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b4a34.  v9:= temp @kind object;
  #L1b4a36.  call temp:= `build`(v9) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L1b4a3c.  v9:= temp @kind object;
  #L1b4a3e.  return v9 @kind object;
  #L1b4a40.  return v1 @kind object;
}
procedure `okhttp3.Request` `b`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v5 @kind this, `okhttp3.Response` v6 @kind object, `okhttp3.internal.connection.Exchange` v7 @kind object) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.b:(Lokhttp3/Response;Lokhttp3/internal/connection/Exchange;)Lokhttp3/Request;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b4a54.  v0:= 0I;
  #L1b4a56.  if v7 == 0 then goto L1b4a70;
  #L1b4a5a.  call temp:= `getConnection$okhttp`(v7) @signature `Lokhttp3/internal/connection/Exchange;.getConnection$okhttp:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L1b4a60.  v1:= temp @kind object;
  #L1b4a62.  if v1 == 0 then goto L1b4a70;
  #L1b4a66.  call temp:= `route`(v1) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @kind virtual;
  #L1b4a6c.  v1:= temp @kind object;
  #L1b4a6e.  goto L1b4a72;
  #L1b4a70.  v1:= v0 @kind object;
  #L1b4a72.  call temp:= `code`(v6) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L1b4a78.  v2:= temp;
  #L1b4a7a.  call temp:= `request`(v6) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L1b4a80.  v3:= temp @kind object;
  #L1b4a82.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L1b4a88.  v3:= temp @kind object;
  #L1b4a8a.  v4:= 307I;
  #L1b4a8e.  if v2 == v4 then goto L1b4c12;
  #L1b4a92.  v4:= 308I;
  #L1b4a96.  if v2 == v4 then goto L1b4c12;
  #L1b4a9a.  v4:= 401I;
  #L1b4a9e.  if v2 == v4 then goto L1b4bfc;
  #L1b4aa2.  v4:= 421I;
  #L1b4aa6.  if v2 == v4 then goto L1b4bae;
  #L1b4aaa.  v7:= 503I;
  #L1b4aae.  if v2 == v7 then goto L1b4b76;
  #L1b4ab2.  v7:= 407I;
  #L1b4ab6.  if v2 == v7 then goto L1b4b32;
  #L1b4aba.  v7:= 408I;
  #L1b4abe.  if v2 == v7 then goto L1b4aca;
  #L1b4ac2.  goto L1b4c1c;
  #L1b4ac8.  return v0 @kind object;
  #L1b4aca.  v1:= v5.`okhttp3.internal.http.RetryAndFollowUpInterceptor.a` @type ^`okhttp3.OkHttpClient` @kind object;
  #L1b4ace.  call temp:= `retryOnConnectionFailure`(v1) @signature `Lokhttp3/OkHttpClient;.retryOnConnectionFailure:()Z` @kind virtual;
  #L1b4ad4.  v1:= temp;
  #L1b4ad6.  if v1 != 0 then goto L1b4adc;
  #L1b4ada.  return v0 @kind object;
  #L1b4adc.  call temp:= `request`(v6) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L1b4ae2.  v1:= temp @kind object;
  #L1b4ae4.  call temp:= `body`(v1) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L1b4aea.  v1:= temp @kind object;
  #L1b4aec.  if v1 == 0 then goto L1b4afe;
  #L1b4af0.  call temp:= `isOneShot`(v1) @signature `Lokhttp3/RequestBody;.isOneShot:()Z` @kind virtual;
  #L1b4af6.  v1:= temp;
  #L1b4af8.  if v1 == 0 then goto L1b4afe;
  #L1b4afc.  return v0 @kind object;
  #L1b4afe.  call temp:= `priorResponse`(v6) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @kind virtual;
  #L1b4b04.  v1:= temp @kind object;
  #L1b4b06.  if v1 == 0 then goto L1b4b18;
  #L1b4b0a.  call temp:= `code`(v1) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L1b4b10.  v1:= temp;
  #L1b4b12.  if v1 != v7 then goto L1b4b18;
  #L1b4b16.  return v0 @kind object;
  #L1b4b18.  v7:= 0I;
  #L1b4b1a.  call temp:= `f`(v5, v6, v7) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.f:(Lokhttp3/Response;I)I` @kind direct;
  #L1b4b20.  v7:= temp;
  #L1b4b22.  if v7 <= 0 then goto L1b4b28;
  #L1b4b26.  return v0 @kind object;
  #L1b4b28.  call temp:= `request`(v6) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L1b4b2e.  v6:= temp @kind object;
  #L1b4b30.  return v6 @kind object;
  #L1b4b32.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1b4b38.  call temp:= `proxy`(v1) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L1b4b3e.  v7:= temp @kind object;
  #L1b4b40.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1b4b46.  v7:= temp @kind object;
  #L1b4b48.  v0:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L1b4b4c.  if v7 != v0 then goto L1b4b66;
  #L1b4b50.  v7:= v5.`okhttp3.internal.http.RetryAndFollowUpInterceptor.a` @type ^`okhttp3.OkHttpClient` @kind object;
  #L1b4b54.  call temp:= `proxyAuthenticator`(v7) @signature `Lokhttp3/OkHttpClient;.proxyAuthenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L1b4b5a.  v7:= temp @kind object;
  #L1b4b5c.  call temp:= `authenticate`(v7, v1, v6) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @kind interface;
  #L1b4b62.  v6:= temp @kind object;
  #L1b4b64.  return v6 @kind object;
  #L1b4b66.  v6:= new `java.net.ProtocolException`;
  #L1b4b6a.  v7:= "Received HTTP_PROXY_AUTH (407) code while not using proxy" @kind object;
  #L1b4b6e.  call `<init>`(v6, v7) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b4b74.  throw v6;
  #L1b4b76.  call temp:= `priorResponse`(v6) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @kind virtual;
  #L1b4b7c.  v1:= temp @kind object;
  #L1b4b7e.  if v1 == 0 then goto L1b4b90;
  #L1b4b82.  call temp:= `code`(v1) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L1b4b88.  v1:= temp;
  #L1b4b8a.  if v1 != v7 then goto L1b4b90;
  #L1b4b8e.  return v0 @kind object;
  #L1b4b90.  v7:= 2147483647I;
  #L1b4b96.  call temp:= `f`(v5, v6, v7) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.f:(Lokhttp3/Response;I)I` @kind direct;
  #L1b4b9c.  v7:= temp;
  #L1b4b9e.  if v7 != 0 then goto L1b4bac;
  #L1b4ba2.  call temp:= `request`(v6) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L1b4ba8.  v6:= temp @kind object;
  #L1b4baa.  return v6 @kind object;
  #L1b4bac.  return v0 @kind object;
  #L1b4bae.  call temp:= `request`(v6) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L1b4bb4.  v1:= temp @kind object;
  #L1b4bb6.  call temp:= `body`(v1) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L1b4bbc.  v1:= temp @kind object;
  #L1b4bbe.  if v1 == 0 then goto L1b4bd0;
  #L1b4bc2.  call temp:= `isOneShot`(v1) @signature `Lokhttp3/RequestBody;.isOneShot:()Z` @kind virtual;
  #L1b4bc8.  v1:= temp;
  #L1b4bca.  if v1 == 0 then goto L1b4bd0;
  #L1b4bce.  return v0 @kind object;
  #L1b4bd0.  if v7 == 0 then goto L1b4bfa;
  #L1b4bd4.  call temp:= `isCoalescedConnection$okhttp`(v7) @signature `Lokhttp3/internal/connection/Exchange;.isCoalescedConnection$okhttp:()Z` @kind virtual;
  #L1b4bda.  v1:= temp;
  #L1b4bdc.  if v1 != 0 then goto L1b4be2;
  #L1b4be0.  goto L1b4bfa;
  #L1b4be2.  call temp:= `getConnection$okhttp`(v7) @signature `Lokhttp3/internal/connection/Exchange;.getConnection$okhttp:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L1b4be8.  v7:= temp @kind object;
  #L1b4bea.  call `noCoalescedConnections$okhttp`(v7) @signature `Lokhttp3/internal/connection/RealConnection;.noCoalescedConnections$okhttp:()V` @kind virtual;
  #L1b4bf0.  call temp:= `request`(v6) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L1b4bf6.  v6:= temp @kind object;
  #L1b4bf8.  return v6 @kind object;
  #L1b4bfa.  return v0 @kind object;
  #L1b4bfc.  v7:= v5.`okhttp3.internal.http.RetryAndFollowUpInterceptor.a` @type ^`okhttp3.OkHttpClient` @kind object;
  #L1b4c00.  call temp:= `authenticator`(v7) @signature `Lokhttp3/OkHttpClient;.authenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L1b4c06.  v7:= temp @kind object;
  #L1b4c08.  call temp:= `authenticate`(v7, v1, v6) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @kind interface;
  #L1b4c0e.  v6:= temp @kind object;
  #L1b4c10.  return v6 @kind object;
  #L1b4c12.  call temp:= `a`(v5, v6, v3) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.a:(Lokhttp3/Response;Ljava/lang/String;)Lokhttp3/Request;` @kind direct;
  #L1b4c18.  v6:= temp @kind object;
  #L1b4c1a.  return v6 @kind object;
  #L1b4c1c.  switch v2
                  | 300 => goto L1b4c12
                  | 301 => goto L1b4c12
                  | 302 => goto L1b4c12
                  | 303 => goto L1b4c12
                  | else => goto L1b4ac8;
}
procedure `boolean` `c`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v3 @kind this, `java.io.IOException` v4 @kind object, `boolean` v5 ) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.c:(Ljava/io/IOException;Z)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1b478c.  v0:= instanceof @variable v4 @type ^`java.net.ProtocolException` @kind boolean;
  #L1b4790.  v1:= 0I;
  #L1b4792.  if v0 == 0 then goto L1b4798;
  #L1b4796.  return v1;
  #L1b4798.  v0:= instanceof @variable v4 @type ^`java.io.InterruptedIOException` @kind boolean;
  #L1b479c.  v2:= 1I;
  #L1b479e.  if v0 == 0 then goto L1b47b2;
  #L1b47a2.  v4:= instanceof @variable v4 @type ^`java.net.SocketTimeoutException` @kind boolean;
  #L1b47a6.  if v4 == 0 then goto L1b47b0;
  #L1b47aa.  if v5 != 0 then goto L1b47b0;
  #L1b47ae.  v1:= 1I;
  #L1b47b0.  return v1;
  #L1b47b2.  v5:= instanceof @variable v4 @type ^`javax.net.ssl.SSLHandshakeException` @kind boolean;
  #L1b47b6.  if v5 == 0 then goto L1b47cc;
  #L1b47ba.  call temp:= `getCause`(v4) @signature `Ljava/io/IOException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L1b47c0.  v5:= temp @kind object;
  #L1b47c2.  v5:= instanceof @variable v5 @type ^`java.security.cert.CertificateException` @kind boolean;
  #L1b47c6.  if v5 == 0 then goto L1b47cc;
  #L1b47ca.  return v1;
  #L1b47cc.  v4:= instanceof @variable v4 @type ^`javax.net.ssl.SSLPeerUnverifiedException` @kind boolean;
  #L1b47d0.  if v4 == 0 then goto L1b47d6;
  #L1b47d4.  return v1;
  #L1b47d6.  return v2;
}
procedure `boolean` `d`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v2 @kind this, `java.io.IOException` v3 @kind object, `okhttp3.internal.connection.RealCall` v4 @kind object, `okhttp3.Request` v5 @kind object, `boolean` v6 ) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.d:(Ljava/io/IOException;Lokhttp3/internal/connection/RealCall;Lokhttp3/Request;Z)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1b47e8.  v0:= v2.`okhttp3.internal.http.RetryAndFollowUpInterceptor.a` @type ^`okhttp3.OkHttpClient` @kind object;
  #L1b47ec.  call temp:= `retryOnConnectionFailure`(v0) @signature `Lokhttp3/OkHttpClient;.retryOnConnectionFailure:()Z` @kind virtual;
  #L1b47f2.  v0:= temp;
  #L1b47f4.  v1:= 0I;
  #L1b47f6.  if v0 != 0 then goto L1b47fc;
  #L1b47fa.  return v1;
  #L1b47fc.  if v6 == 0 then goto L1b480e;
  #L1b4800.  call temp:= `e`(v2, v3, v5) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.e:(Ljava/io/IOException;Lokhttp3/Request;)Z` @kind direct;
  #L1b4806.  v5:= temp;
  #L1b4808.  if v5 == 0 then goto L1b480e;
  #L1b480c.  return v1;
  #L1b480e.  call temp:= `c`(v2, v3, v6) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.c:(Ljava/io/IOException;Z)Z` @kind direct;
  #L1b4814.  v3:= temp;
  #L1b4816.  if v3 != 0 then goto L1b481c;
  #L1b481a.  return v1;
  #L1b481c.  call temp:= `retryAfterFailure`(v4) @signature `Lokhttp3/internal/connection/RealCall;.retryAfterFailure:()Z` @kind virtual;
  #L1b4822.  v3:= temp;
  #L1b4824.  if v3 != 0 then goto L1b482a;
  #L1b4828.  return v1;
  #L1b482a.  v3:= 1I;
  #L1b482c.  return v3;
}
procedure `boolean` `e`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v0 @kind this, `java.io.IOException` v1 @kind object, `okhttp3.Request` v2 @kind object) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.e:(Ljava/io/IOException;Lokhttp3/Request;)Z` @AccessFlag PRIVATE_FINAL {
    temp;

  #L1b4840.  call temp:= `body`(v2) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L1b4846.  v2:= temp @kind object;
  #L1b4848.  if v2 == 0 then goto L1b4858;
  #L1b484c.  call temp:= `isOneShot`(v2) @signature `Lokhttp3/RequestBody;.isOneShot:()Z` @kind virtual;
  #L1b4852.  v2:= temp;
  #L1b4854.  if v2 != 0 then goto L1b4860;
  #L1b4858.  v1:= instanceof @variable v1 @type ^`java.io.FileNotFoundException` @kind boolean;
  #L1b485c.  if v1 == 0 then goto L1b4864;
  #L1b4860.  v1:= 1I;
  #L1b4862.  goto L1b4866;
  #L1b4864.  v1:= 0I;
  #L1b4866.  return v1;
}
procedure `int` `f`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v3 @kind this, `okhttp3.Response` v4 @kind object, `int` v5 ) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.f:(Lokhttp3/Response;I)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1b4878.  v0:= "Retry-After" @kind object;
  #L1b487c.  v1:= 0I;
  #L1b487e.  v2:= 2I;
  #L1b4880.  call temp:= `header$default`(v4, v0, v1, v2, v1) @signature `Lokhttp3/Response;.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1b4886.  v4:= temp @kind object;
  #L1b4888.  if v4 == 0 then goto L1b48ca;
  #L1b488c.  v5:= new `kotlin.text.Regex`;
  #L1b4890.  v0:= "\\d+" @kind object;
  #L1b4894.  call `<init>`(v5, v0) @signature `Lkotlin/text/Regex;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b489a.  call temp:= `matches`(v5, v4) @signature `Lkotlin/text/Regex;.matches:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L1b48a0.  v5:= temp;
  #L1b48a2.  if v5 == 0 then goto L1b48c2;
  #L1b48a6.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;` @kind static;
  #L1b48ac.  v4:= temp @kind object;
  #L1b48ae.  v5:= "Integer.valueOf(header)" @kind object;
  #L1b48b2.  call `checkNotNullExpressionValue`(v4, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b48b8.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1b48be.  v4:= temp;
  #L1b48c0.  return v4;
  #L1b48c2.  v4:= 2147483647I;
  #L1b48c8.  return v4;
  #L1b48ca.  return v5;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.http.RetryAndFollowUpInterceptor` v10 @kind this, `okhttp3.Interceptor$Chain` v11 @kind object) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1b4c44.  v0:= "chain" @kind object;
  #L1b4c48.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b4c4e.  v11:= (`okhttp3.internal.http.RealInterceptorChain`) v11 @kind object;
  #L1b4c52.  call temp:= `getRequest$okhttp`(v11) @signature `Lokhttp3/internal/http/RealInterceptorChain;.getRequest$okhttp:()Lokhttp3/Request;` @kind virtual;
  #L1b4c58.  v0:= temp @kind object;
  #L1b4c5a.  call temp:= `getCall$okhttp`(v11) @signature `Lokhttp3/internal/http/RealInterceptorChain;.getCall$okhttp:()Lokhttp3/internal/connection/RealCall;` @kind virtual;
  #L1b4c60.  v1:= temp @kind object;
  #L1b4c62.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L1b4c68.  v2:= temp @kind object;
  #L1b4c6a.  v3:= 0I;
  #L1b4c6c.  v4:= 1I;
  #L1b4c6e.  v5:= 0I;
  #L1b4c70.  v7:= v3 @kind object;
  #L1b4c72.  v6:= 1I;
  #L1b4c74.  v8:= 0I;
  #L1b4c76.  call `enterNetworkInterceptorExchange`(v1, v0, v6) @signature `Lokhttp3/internal/connection/RealCall;.enterNetworkInterceptorExchange:(Lokhttp3/Request;Z)V` @kind virtual;
  #L1b4c7c.  call temp:= `isCanceled`(v1) @signature `Lokhttp3/internal/connection/RealCall;.isCanceled:()Z` @kind virtual;
  #L1b4c82.  v6:= temp;
  #L1b4c84.  if v6 != 0 then goto L1b4de4;
  #L1b4c88.  call temp:= `proceed`(v11, v0) @signature `Lokhttp3/internal/http/RealInterceptorChain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind virtual;
  #L1b4c8e.  v0:= temp @kind object;
  #L1b4c90.  if v7 == 0 then goto L1b4cc4;
  #L1b4c94.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L1b4c9a.  v0:= temp @kind object;
  #L1b4c9c.  call temp:= `newBuilder`(v7) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L1b4ca2.  v6:= temp @kind object;
  #L1b4ca4.  call temp:= `body`(v6, v3) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1b4caa.  v6:= temp @kind object;
  #L1b4cac.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L1b4cb2.  v6:= temp @kind object;
  #L1b4cb4.  call temp:= `priorResponse`(v0, v6) @signature `Lokhttp3/Response$Builder;.priorResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1b4cba.  v0:= temp @kind object;
  #L1b4cbc.  call temp:= `build`(v0) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L1b4cc2.  v0:= temp @kind object;
  #L1b4cc4.  v7:= v0 @kind object;
  #L1b4cc6.  call temp:= `getInterceptorScopedExchange$okhttp`(v1) @signature `Lokhttp3/internal/connection/RealCall;.getInterceptorScopedExchange$okhttp:()Lokhttp3/internal/connection/Exchange;` @kind virtual;
  #L1b4ccc.  v0:= temp @kind object;
  #L1b4cce.  call temp:= `b`(v10, v7, v0) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.b:(Lokhttp3/Response;Lokhttp3/internal/connection/Exchange;)Lokhttp3/Request;` @kind direct;
  #L1b4cd4.  v6:= temp @kind object;
  #L1b4cd6.  if v6 != 0 then goto L1b4cf8;
  #L1b4cda.  if v0 == 0 then goto L1b4cf0;
  #L1b4cde.  call temp:= `isDuplex$okhttp`(v0) @signature `Lokhttp3/internal/connection/Exchange;.isDuplex$okhttp:()Z` @kind virtual;
  #L1b4ce4.  v11:= temp;
  #L1b4ce6.  if v11 == 0 then goto L1b4cf0;
  #L1b4cea.  call `timeoutEarlyExit`(v1) @signature `Lokhttp3/internal/connection/RealCall;.timeoutEarlyExit:()V` @kind virtual;
  #L1b4cf0.  call `exitNetworkInterceptorExchange$okhttp`(v1, v5) @signature `Lokhttp3/internal/connection/RealCall;.exitNetworkInterceptorExchange$okhttp:(Z)V` @kind virtual;
  #L1b4cf6.  return v7 @kind object;
  #L1b4cf8.  call temp:= `body`(v6) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L1b4cfe.  v0:= temp @kind object;
  #L1b4d00.  if v0 == 0 then goto L1b4d18;
  #L1b4d04.  call temp:= `isOneShot`(v0) @signature `Lokhttp3/RequestBody;.isOneShot:()Z` @kind virtual;
  #L1b4d0a.  v0:= temp;
  #L1b4d0c.  if v0 == 0 then goto L1b4d18;
  #L1b4d10.  call `exitNetworkInterceptorExchange$okhttp`(v1, v5) @signature `Lokhttp3/internal/connection/RealCall;.exitNetworkInterceptorExchange$okhttp:(Z)V` @kind virtual;
  #L1b4d16.  return v7 @kind object;
  #L1b4d18.  call temp:= `body`(v7) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L1b4d1e.  v0:= temp @kind object;
  #L1b4d20.  if v0 == 0 then goto L1b4d2a;
  #L1b4d24.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1b4d2a.  v8:= v8 + 1;
  #L1b4d2e.  v0:= 20I;
  #L1b4d32.  if v8 > v0 then goto L1b4d42;
  #L1b4d36.  call `exitNetworkInterceptorExchange$okhttp`(v1, v4) @signature `Lokhttp3/internal/connection/RealCall;.exitNetworkInterceptorExchange$okhttp:(Z)V` @kind virtual;
  #L1b4d3c.  v0:= v6 @kind object;
  #L1b4d3e.  v6:= 1I;
  #L1b4d40.  goto L1b4c76;
  #L1b4d42.  v11:= new `java.net.ProtocolException`;
  #L1b4d46.  v0:= new `java.lang.StringBuilder`;
  #L1b4d4a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b4d50.  v2:= "Too many follow-up requests: " @kind object;
  #L1b4d54.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b4d5a.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b4d60.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b4d66.  v0:= temp @kind object;
  #L1b4d68.  call `<init>`(v11, v0) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b4d6e.  throw v11;
  #L1b4d70.  v6:= Exception @type ^`java.io.IOException` @kind object;
  #L1b4d72.  v9:= instanceof @variable v6 @type ^`okhttp3.internal.http2.ConnectionShutdownException` @kind boolean;
  #L1b4d76.  if v9 != 0 then goto L1b4d7e;
  #L1b4d7a.  v9:= 1I;
  #L1b4d7c.  goto L1b4d80;
  #L1b4d7e.  v9:= 0I;
  #L1b4d80.  call temp:= `d`(v10, v6, v1, v0, v9) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.d:(Ljava/io/IOException;Lokhttp3/internal/connection/RealCall;Lokhttp3/Request;Z)Z` @kind direct;
  #L1b4d86.  v9:= temp;
  #L1b4d88.  if v9 == 0 then goto L1b4d96;
  #L1b4d8c.  call temp:= `plus`(v2, v6) @signature `Lkotlin/collections/CollectionsKt;.plus:(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1b4d92.  v2:= temp @kind object;
  #L1b4d94.  goto L1b4dc6;
  #L1b4d96.  call temp:= `withSuppressed`(v6, v2) @signature `Lokhttp3/internal/Util;.withSuppressed:(Ljava/lang/Exception;Ljava/util/List;)Ljava/lang/Throwable;` @kind static;
  #L1b4d9c.  v11:= temp @kind object;
  #L1b4d9e.  throw v11;
  #L1b4da0.  v6:= Exception @type ^`okhttp3.internal.connection.RouteException` @kind object;
  #L1b4da2.  call temp:= `getLastConnectException`(v6) @signature `Lokhttp3/internal/connection/RouteException;.getLastConnectException:()Ljava/io/IOException;` @kind virtual;
  #L1b4da8.  v9:= temp @kind object;
  #L1b4daa.  call temp:= `d`(v10, v9, v1, v0, v5) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.d:(Ljava/io/IOException;Lokhttp3/internal/connection/RealCall;Lokhttp3/Request;Z)Z` @kind direct;
  #L1b4db0.  v9:= temp;
  #L1b4db2.  if v9 == 0 then goto L1b4dd2;
  #L1b4db6.  call temp:= `getFirstConnectException`(v6) @signature `Lokhttp3/internal/connection/RouteException;.getFirstConnectException:()Ljava/io/IOException;` @kind virtual;
  #L1b4dbc.  v6:= temp @kind object;
  #L1b4dbe.  call temp:= `plus`(v2, v6) @signature `Lkotlin/collections/CollectionsKt;.plus:(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1b4dc4.  v2:= temp @kind object;
  #L1b4dc6.  call `exitNetworkInterceptorExchange$okhttp`(v1, v4) @signature `Lokhttp3/internal/connection/RealCall;.exitNetworkInterceptorExchange$okhttp:(Z)V` @kind virtual;
  #L1b4dcc.  v6:= 0I;
  #L1b4dce.  goto L1b4c76;
  #L1b4dd2.  call temp:= `getFirstConnectException`(v6) @signature `Lokhttp3/internal/connection/RouteException;.getFirstConnectException:()Ljava/io/IOException;` @kind virtual;
  #L1b4dd8.  v11:= temp @kind object;
  #L1b4dda.  call temp:= `withSuppressed`(v11, v2) @signature `Lokhttp3/internal/Util;.withSuppressed:(Ljava/lang/Exception;Ljava/util/List;)Ljava/lang/Throwable;` @kind static;
  #L1b4de0.  v11:= temp @kind object;
  #L1b4de2.  throw v11;
  #L1b4de4.  v11:= new `java.io.IOException`;
  #L1b4de8.  v0:= "Canceled" @kind object;
  #L1b4dec.  call `<init>`(v11, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b4df2.  throw v11;
  #L1b4df4.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1b4df6.  call `exitNetworkInterceptorExchange$okhttp`(v1, v4) @signature `Lokhttp3/internal/connection/RealCall;.exitNetworkInterceptorExchange$okhttp:(Z)V` @kind virtual;
  #L1b4dfc.  throw v11;
  catch `java.lang.Throwable` @[L1b4c7c..L1b4c84] goto L1b4df4;
  catch `okhttp3.internal.connection.RouteException` @[L1b4c88..L1b4c90] goto L1b4da0;
  catch `java.io.IOException` @[L1b4c88..L1b4c90] goto L1b4d70;
  catch `java.lang.Throwable` @[L1b4c88..L1b4c90] goto L1b4df4;
  catch `java.lang.Throwable` @[L1b4c94..L1b4cf0] goto L1b4df4;
  catch `java.lang.Throwable` @[L1b4cf8..L1b4d0c] goto L1b4df4;
  catch `java.lang.Throwable` @[L1b4d18..L1b4d2a] goto L1b4df4;
  catch `java.lang.Throwable` @[L1b4d42..L1b4dc6] goto L1b4df4;
  catch `java.lang.Throwable` @[L1b4dd2..L1b4df4] goto L1b4df4;
}
