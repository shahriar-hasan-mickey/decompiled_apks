record `okhttp3.internal.http.RequestLine` @kind class @AccessFlag PUBLIC_FINAL {
}
global `okhttp3.internal.http.RequestLine` `@@okhttp3.internal.http.RequestLine.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http/RequestLine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b4724.  v0:= new `okhttp3.internal.http.RequestLine`;
  #L1b4728.  call `<init>`(v0) @signature `Lokhttp3/internal/http/RequestLine;.<init>:()V` @kind direct;
  #L1b472e.  `@@okhttp3.internal.http.RequestLine.INSTANCE` @type ^`okhttp3.internal.http.RequestLine` := v0 @kind object;
  #L1b4732.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http.RequestLine` v0 @kind this) @signature `Lokhttp3/internal/http/RequestLine;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1b4744.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b474a.  return @kind void;
}
procedure `boolean` `a`(`okhttp3.internal.http.RequestLine` v0 @kind this, `okhttp3.Request` v1 @kind object, `java.net.Proxy$Type` v2 @kind object) @signature `Lokhttp3/internal/http/RequestLine;.a:(Lokhttp3/Request;Ljava/net/Proxy$Type;)Z` @AccessFlag PRIVATE_FINAL {
    temp;

  #L1b4600.  call temp:= `isHttps`(v1) @signature `Lokhttp3/Request;.isHttps:()Z` @kind virtual;
  #L1b4606.  v1:= temp;
  #L1b4608.  if v1 != 0 then goto L1b4618;
  #L1b460c.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L1b4610.  if v2 != v1 then goto L1b4618;
  #L1b4614.  v1:= 1I;
  #L1b4616.  goto L1b461a;
  #L1b4618.  v1:= 0I;
  #L1b461a.  return v1;
}
procedure `java.lang.String` `get`(`okhttp3.internal.http.RequestLine` v2 @kind this, `okhttp3.Request` v3 @kind object, `java.net.Proxy$Type` v4 @kind object) @signature `Lokhttp3/internal/http/RequestLine;.get:(Lokhttp3/Request;Ljava/net/Proxy$Type;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1b462c.  v0:= "request" @kind object;
  #L1b4630.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b4636.  v0:= "proxyType" @kind object;
  #L1b463a.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b4640.  v0:= new `java.lang.StringBuilder`;
  #L1b4644.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b464a.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L1b4650.  v1:= temp @kind object;
  #L1b4652.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b4658.  v1:= 32I;
  #L1b465c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b4662.  v1:= `@@okhttp3.internal.http.RequestLine.INSTANCE` @type ^`okhttp3.internal.http.RequestLine` @kind object;
  #L1b4666.  call temp:= `a`(v1, v3, v4) @signature `Lokhttp3/internal/http/RequestLine;.a:(Lokhttp3/Request;Ljava/net/Proxy$Type;)Z` @kind direct;
  #L1b466c.  v4:= temp;
  #L1b466e.  if v4 == 0 then goto L1b4682;
  #L1b4672.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b4678.  v3:= temp @kind object;
  #L1b467a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b4680.  goto L1b469c;
  #L1b4682.  v4:= `@@okhttp3.internal.http.RequestLine.INSTANCE` @type ^`okhttp3.internal.http.RequestLine` @kind object;
  #L1b4686.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b468c.  v3:= temp @kind object;
  #L1b468e.  call temp:= `requestPath`(v4, v3) @signature `Lokhttp3/internal/http/RequestLine;.requestPath:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind virtual;
  #L1b4694.  v3:= temp @kind object;
  #L1b4696.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b469c.  v3:= " HTTP/1.1" @kind object;
  #L1b46a0.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b46a6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b46ac.  v3:= temp @kind object;
  #L1b46ae.  v4:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L1b46b2.  call `checkNotNullExpressionValue`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b46b8.  return v3 @kind object;
}
procedure `java.lang.String` `requestPath`(`okhttp3.internal.http.RequestLine` v2 @kind this, `okhttp3.HttpUrl` v3 @kind object) @signature `Lokhttp3/internal/http/RequestLine;.requestPath:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1b46cc.  v0:= "url" @kind object;
  #L1b46d0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b46d6.  call temp:= `encodedPath`(v3) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @kind virtual;
  #L1b46dc.  v0:= temp @kind object;
  #L1b46de.  call temp:= `encodedQuery`(v3) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L1b46e4.  v3:= temp @kind object;
  #L1b46e6.  if v3 == 0 then goto L1b4712;
  #L1b46ea.  v1:= new `java.lang.StringBuilder`;
  #L1b46ee.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b46f4.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b46fa.  v0:= 63I;
  #L1b46fe.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b4704.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b470a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b4710.  v0:= temp @kind object;
  #L1b4712.  return v0 @kind object;
}
