record `okhttp3.internal.http.HttpHeaders` @kind class @AccessFlag PUBLIC_FINAL {
}
global `okio.ByteString` `@@okhttp3.internal.http.HttpHeaders.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http.HttpHeaders.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http/HttpHeaders;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1b3b78.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1b3b7c.  v1:= "\"\\" @kind object;
  #L1b3b80.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1b3b86.  v0:= temp @kind object;
  #L1b3b88.  `@@okhttp3.internal.http.HttpHeaders.a` @type ^`okio.ByteString` := v0 @kind object;
  #L1b3b8c.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1b3b90.  v1:= "\t ,=" @kind object;
  #L1b3b94.  call temp:= `encodeUtf8`(v0, v1) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1b3b9a.  v0:= temp @kind object;
  #L1b3b9c.  `@@okhttp3.internal.http.HttpHeaders.b` @type ^`okio.ByteString` := v0 @kind object;
  #L1b3ba0.  return @kind void;
}
procedure `void` `a`(`okio.Buffer` v7 @kind object, `java.util.List` v8 @kind object) @signature `Lokhttp3/internal/http/HttpHeaders;.a:(Lokio/Buffer;Ljava/util/List;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b3bb4.  v0:= 0I;
  #L1b3bb6.  v1:= v0 @kind object;
  #L1b3bb8.  if v1 != 0 then goto L1b3bd0;
  #L1b3bbc.  call temp:= `d`(v7) @signature `Lokhttp3/internal/http/HttpHeaders;.d:(Lokio/Buffer;)Z` @kind static;
  #L1b3bc2.  call temp:= `c`(v7) @signature `Lokhttp3/internal/http/HttpHeaders;.c:(Lokio/Buffer;)Ljava/lang/String;` @kind static;
  #L1b3bc8.  v1:= temp @kind object;
  #L1b3bca.  if v1 != 0 then goto L1b3bd0;
  #L1b3bce.  return @kind void;
  #L1b3bd0.  call temp:= `d`(v7) @signature `Lokhttp3/internal/http/HttpHeaders;.d:(Lokio/Buffer;)Z` @kind static;
  #L1b3bd6.  v2:= temp;
  #L1b3bd8.  call temp:= `c`(v7) @signature `Lokhttp3/internal/http/HttpHeaders;.c:(Lokio/Buffer;)Ljava/lang/String;` @kind static;
  #L1b3bde.  v3:= temp @kind object;
  #L1b3be0.  if v3 != 0 then goto L1b3c0c;
  #L1b3be4.  call temp:= `exhausted`(v7) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L1b3bea.  v7:= temp;
  #L1b3bec.  if v7 != 0 then goto L1b3bf2;
  #L1b3bf0.  return @kind void;
  #L1b3bf2.  v7:= new `okhttp3.Challenge`;
  #L1b3bf6.  call temp:= `emptyMap`() @signature `Lkotlin/collections/MapsKt;.emptyMap:()Ljava/util/Map;` @kind static;
  #L1b3bfc.  v0:= temp @kind object;
  #L1b3bfe.  call `<init>`(v7, v1, v0) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/util/Map;)V` @kind direct;
  #L1b3c04.  call temp:= `add`(v8, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1b3c0a.  return @kind void;
  #L1b3c0c.  v4:= 61I;
  #L1b3c10.  v4:= (`byte`) v4 @kind i2b;
  #L1b3c12.  call temp:= `skipAll`(v7, v4) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Buffer;B)I` @kind static;
  #L1b3c18.  v5:= temp;
  #L1b3c1a.  call temp:= `d`(v7) @signature `Lokhttp3/internal/http/HttpHeaders;.d:(Lokio/Buffer;)Z` @kind static;
  #L1b3c20.  v6:= temp;
  #L1b3c22.  if v2 != 0 then goto L1b3c84;
  #L1b3c26.  if v6 != 0 then goto L1b3c36;
  #L1b3c2a.  call temp:= `exhausted`(v7) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L1b3c30.  v2:= temp;
  #L1b3c32.  if v2 == 0 then goto L1b3c84;
  #L1b3c36.  v2:= new `okhttp3.Challenge`;
  #L1b3c3a.  v4:= new `java.lang.StringBuilder`;
  #L1b3c3e.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b3c44.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b3c4a.  v3:= "=" @kind object;
  #L1b3c4e.  call temp:= `repeat`(v3, v5) @signature `Lkotlin/text/StringsKt;.repeat:(Ljava/lang/CharSequence;I)Ljava/lang/String;` @kind static;
  #L1b3c54.  v3:= temp @kind object;
  #L1b3c56.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b3c5c.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b3c62.  v3:= temp @kind object;
  #L1b3c64.  call temp:= `singletonMap`(v0, v3) @signature `Ljava/util/Collections;.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;` @kind static;
  #L1b3c6a.  v3:= temp @kind object;
  #L1b3c6c.  v4:= "Collections.singletonMapâ€¦ek + \"=\".repeat(eqCount))" @kind object;
  #L1b3c70.  call `checkNotNullExpressionValue`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b3c76.  call `<init>`(v2, v1, v3) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/util/Map;)V` @kind direct;
  #L1b3c7c.  call temp:= `add`(v8, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1b3c82.  goto L1b3bb6;
  #L1b3c84.  v2:= new `java.util.LinkedHashMap`;
  #L1b3c88.  call `<init>`(v2) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L1b3c8e.  call temp:= `skipAll`(v7, v4) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Buffer;B)I` @kind static;
  #L1b3c94.  v6:= temp;
  #L1b3c96.  v5:= v5 + v6 @kind int;
  #L1b3c98.  if v3 != 0 then goto L1b3cba;
  #L1b3c9c.  call temp:= `c`(v7) @signature `Lokhttp3/internal/http/HttpHeaders;.c:(Lokio/Buffer;)Ljava/lang/String;` @kind static;
  #L1b3ca2.  v3:= temp @kind object;
  #L1b3ca4.  call temp:= `d`(v7) @signature `Lokhttp3/internal/http/HttpHeaders;.d:(Lokio/Buffer;)Z` @kind static;
  #L1b3caa.  v5:= temp;
  #L1b3cac.  if v5 == 0 then goto L1b3cb2;
  #L1b3cb0.  goto L1b3cbe;
  #L1b3cb2.  call temp:= `skipAll`(v7, v4) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Buffer;B)I` @kind static;
  #L1b3cb8.  v5:= temp;
  #L1b3cba.  if v5 != 0 then goto L1b3cd4;
  #L1b3cbe.  v4:= new `okhttp3.Challenge`;
  #L1b3cc2.  call `<init>`(v4, v1, v2) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/util/Map;)V` @kind direct;
  #L1b3cc8.  call temp:= `add`(v8, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1b3cce.  v1:= v3 @kind object;
  #L1b3cd0.  goto L1b3bb8;
  #L1b3cd4.  v6:= 1I;
  #L1b3cd6.  if v5 <= v6 then goto L1b3cdc;
  #L1b3cda.  return @kind void;
  #L1b3cdc.  call temp:= `d`(v7) @signature `Lokhttp3/internal/http/HttpHeaders;.d:(Lokio/Buffer;)Z` @kind static;
  #L1b3ce2.  v6:= temp;
  #L1b3ce4.  if v6 == 0 then goto L1b3cea;
  #L1b3ce8.  return @kind void;
  #L1b3cea.  v6:= 34I;
  #L1b3cee.  v6:= (`byte`) v6 @kind i2b;
  #L1b3cf0.  call temp:= `e`(v7, v6) @signature `Lokhttp3/internal/http/HttpHeaders;.e:(Lokio/Buffer;B)Z` @kind static;
  #L1b3cf6.  v6:= temp;
  #L1b3cf8.  if v6 == 0 then goto L1b3d06;
  #L1b3cfc.  call temp:= `b`(v7) @signature `Lokhttp3/internal/http/HttpHeaders;.b:(Lokio/Buffer;)Ljava/lang/String;` @kind static;
  #L1b3d02.  v6:= temp @kind object;
  #L1b3d04.  goto L1b3d0e;
  #L1b3d06.  call temp:= `c`(v7) @signature `Lokhttp3/internal/http/HttpHeaders;.c:(Lokio/Buffer;)Ljava/lang/String;` @kind static;
  #L1b3d0c.  v6:= temp @kind object;
  #L1b3d0e.  if v6 == 0 then goto L1b3d42;
  #L1b3d12.  call temp:= `put`(v2, v3, v6) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1b3d18.  v3:= temp @kind object;
  #L1b3d1a.  v3:= (`java.lang.String`) v3 @kind object;
  #L1b3d1e.  if v3 == 0 then goto L1b3d24;
  #L1b3d22.  return @kind void;
  #L1b3d24.  call temp:= `d`(v7) @signature `Lokhttp3/internal/http/HttpHeaders;.d:(Lokio/Buffer;)Z` @kind static;
  #L1b3d2a.  v3:= temp;
  #L1b3d2c.  if v3 != 0 then goto L1b3d3e;
  #L1b3d30.  call temp:= `exhausted`(v7) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L1b3d36.  v3:= temp;
  #L1b3d38.  if v3 != 0 then goto L1b3d3e;
  #L1b3d3c.  return @kind void;
  #L1b3d3e.  v3:= v0 @kind object;
  #L1b3d40.  goto L1b3c98;
  #L1b3d42.  return @kind void;
}
procedure `java.lang.String` `b`(`okio.Buffer` v12 @kind object) @signature `Lokhttp3/internal/http/HttpHeaders;.b:(Lokio/Buffer;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1b39c8.  call temp:= `readByte`(v12) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L1b39ce.  v0:= temp;
  #L1b39d0.  v1:= 34I;
  #L1b39d4.  v1:= (`byte`) v1 @kind i2b;
  #L1b39d6.  if v0 != v1 then goto L1b39de;
  #L1b39da.  v0:= 1I;
  #L1b39dc.  goto L1b39e0;
  #L1b39de.  v0:= 0I;
  #L1b39e0.  if v0 == 0 then goto L1b3a5a;
  #L1b39e4.  v0:= new `okio.Buffer`;
  #L1b39e8.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1b39ee.  v2:= `@@okhttp3.internal.http.HttpHeaders.a` @type ^`okio.ByteString` @kind object;
  #L1b39f2.  call temp:= `indexOfElement`(v12, v2) @signature `Lokio/Buffer;.indexOfElement:(Lokio/ByteString;)J` @kind virtual;
  #L1b39f8.  v2:= temp @kind wide;
  #L1b39fa.  v4:= -1L;
  #L1b39fe.  v6:= 0I;
  #L1b3a00.  v7:= lcmp(v2, v4);
  #L1b3a04.  if v7 != 0 then goto L1b3a0a;
  #L1b3a08.  return v6 @kind object;
  #L1b3a0a.  call temp:= `getByte`(v12, v2) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L1b3a10.  v4:= temp;
  #L1b3a12.  if v4 != v1 then goto L1b3a2c;
  #L1b3a16.  call `write`(v0, v12, v2) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L1b3a1c.  call temp:= `readByte`(v12) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L1b3a22.  call temp:= `readUtf8`(v0) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L1b3a28.  v12:= temp @kind object;
  #L1b3a2a.  return v12 @kind object;
  #L1b3a2c.  call temp:= `size`(v12) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1b3a32.  v4:= temp @kind wide;
  #L1b3a34.  v7:= 1L;
  #L1b3a38.  v9:= v2 + v7 @kind long;
  #L1b3a3c.  v11:= lcmp(v4, v9);
  #L1b3a40.  if v11 != 0 then goto L1b3a46;
  #L1b3a44.  return v6 @kind object;
  #L1b3a46.  call `write`(v0, v12, v2) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L1b3a4c.  call temp:= `readByte`(v12) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L1b3a52.  call `write`(v0, v12, v7) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L1b3a58.  goto L1b39ee;
  #L1b3a5a.  v12:= new `java.lang.IllegalArgumentException`;
  #L1b3a5e.  v0:= "Failed requirement." @kind object;
  #L1b3a62.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b3a68.  v0:= temp @kind object;
  #L1b3a6a.  call `<init>`(v12, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b3a70.  throw v12;
}
procedure `java.lang.String` `c`(`okio.Buffer` v5 @kind object) @signature `Lokhttp3/internal/http/HttpHeaders;.c:(Lokio/Buffer;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1b3a84.  v0:= `@@okhttp3.internal.http.HttpHeaders.b` @type ^`okio.ByteString` @kind object;
  #L1b3a88.  call temp:= `indexOfElement`(v5, v0) @signature `Lokio/Buffer;.indexOfElement:(Lokio/ByteString;)J` @kind virtual;
  #L1b3a8e.  v0:= temp @kind wide;
  #L1b3a90.  v2:= -1L;
  #L1b3a94.  v4:= lcmp(v0, v2);
  #L1b3a98.  if v4 != 0 then goto L1b3aa4;
  #L1b3a9c.  call temp:= `size`(v5) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1b3aa2.  v0:= temp @kind wide;
  #L1b3aa4.  v2:= 0L;
  #L1b3aa8.  v4:= lcmp(v0, v2);
  #L1b3aac.  if v4 == 0 then goto L1b3aba;
  #L1b3ab0.  call temp:= `readUtf8`(v5, v0) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L1b3ab6.  v5:= temp @kind object;
  #L1b3ab8.  goto L1b3abc;
  #L1b3aba.  v5:= 0I;
  #L1b3abc.  return v5 @kind object;
}
procedure `boolean` `d`(`okio.Buffer` v3 @kind object) @signature `Lokhttp3/internal/http/HttpHeaders;.d:(Lokio/Buffer;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1b393c.  v0:= 0I;
  #L1b393e.  call temp:= `exhausted`(v3) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L1b3944.  v1:= temp;
  #L1b3946.  if v1 != 0 then goto L1b3982;
  #L1b394a.  v1:= 0L;
  #L1b394e.  call temp:= `getByte`(v3, v1) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L1b3954.  v1:= temp;
  #L1b3956.  v2:= 9I;
  #L1b395a.  if v1 == v2 then goto L1b397a;
  #L1b395e.  v2:= 32I;
  #L1b3962.  if v1 == v2 then goto L1b397a;
  #L1b3966.  v2:= 44I;
  #L1b396a.  if v1 == v2 then goto L1b3970;
  #L1b396e.  goto L1b3982;
  #L1b3970.  call temp:= `readByte`(v3) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L1b3976.  v0:= 1I;
  #L1b3978.  goto L1b393e;
  #L1b397a.  call temp:= `readByte`(v3) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L1b3980.  goto L1b393e;
  #L1b3982.  return v0;
}
procedure `boolean` `e`(`okio.Buffer` v2 @kind object, `byte` v3 ) @signature `Lokhttp3/internal/http/HttpHeaders;.e:(Lokio/Buffer;B)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1b3994.  call temp:= `exhausted`(v2) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L1b399a.  v0:= temp;
  #L1b399c.  if v0 != 0 then goto L1b39b4;
  #L1b39a0.  v0:= 0L;
  #L1b39a4.  call temp:= `getByte`(v2, v0) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L1b39aa.  v2:= temp;
  #L1b39ac.  if v2 != v3 then goto L1b39b4;
  #L1b39b0.  v2:= 1I;
  #L1b39b2.  goto L1b39b6;
  #L1b39b4.  v2:= 0I;
  #L1b39b6.  return v2;
}
procedure `boolean` `hasBody`(`okhttp3.Response` v1 @kind object) @signature `Lokhttp3/internal/http/HttpHeaders;.hasBody:(Lokhttp3/Response;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1b3874.  v0:= "response" @kind object;
  #L1b3878.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b387e.  call temp:= `promisesBody`(v1) @signature `Lokhttp3/internal/http/HttpHeaders;.promisesBody:(Lokhttp3/Response;)Z` @kind static;
  #L1b3884.  v1:= temp;
  #L1b3886.  return v1;
}
procedure `java.util.List` `parseChallenges`(`okhttp3.Headers` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lokhttp3/internal/http/HttpHeaders;.parseChallenges:(Lokhttp3/Headers;Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1b3ad0.  v0:= "$this$parseChallenges" @kind object;
  #L1b3ad4.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b3ada.  v0:= "headerName" @kind object;
  #L1b3ade.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b3ae4.  v0:= new `java.util.ArrayList`;
  #L1b3ae8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1b3aee.  call temp:= `size`(v7) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1b3af4.  v1:= temp;
  #L1b3af6.  v2:= 0I;
  #L1b3af8.  if v2 >= v1 then goto L1b3b54;
  #L1b3afc.  call temp:= `name`(v7, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1b3b02.  v3:= temp @kind object;
  #L1b3b04.  v4:= 1I;
  #L1b3b06.  call temp:= `equals`(v8, v3, v4) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1b3b0c.  v3:= temp;
  #L1b3b0e.  if v3 == 0 then goto L1b3b4e;
  #L1b3b12.  v3:= new `okio.Buffer`;
  #L1b3b16.  call `<init>`(v3) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1b3b1c.  call temp:= `value`(v7, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1b3b22.  v4:= temp @kind object;
  #L1b3b24.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L1b3b2a.  v3:= temp @kind object;
  #L1b3b2c.  call `a`(v3, v0) @signature `Lokhttp3/internal/http/HttpHeaders;.a:(Lokio/Buffer;Ljava/util/List;)V` @kind static;
  #L1b3b32.  goto L1b3b4e;
  #L1b3b34.  v3:= Exception @type ^`java.io.EOFException` @kind object;
  #L1b3b36.  v4:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L1b3b3a.  call temp:= `get`(v4) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L1b3b40.  v4:= temp @kind object;
  #L1b3b42.  v5:= 5I;
  #L1b3b44.  v6:= "Unable to parse challenge" @kind object;
  #L1b3b48.  call `log`(v4, v6, v5, v3) @signature `Lokhttp3/internal/platform/Platform;.log:(Ljava/lang/String;ILjava/lang/Throwable;)V` @kind virtual;
  #L1b3b4e.  v2:= v2 + 1;
  #L1b3b52.  goto L1b3af8;
  #L1b3b54.  return v0 @kind object;
  catch `java.io.EOFException` @[L1b3b2c..L1b3b32] goto L1b3b34;
}
procedure `boolean` `promisesBody`(`okhttp3.Response` v8 @kind object) @signature `Lokhttp3/internal/http/HttpHeaders;.promisesBody:(Lokhttp3/Response;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b3898.  v0:= "$this$promisesBody" @kind object;
  #L1b389c.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b38a2.  call temp:= `request`(v8) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L1b38a8.  v0:= temp @kind object;
  #L1b38aa.  call temp:= `method`(v0) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L1b38b0.  v0:= temp @kind object;
  #L1b38b2.  v1:= "HEAD" @kind object;
  #L1b38b6.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b38bc.  v0:= temp;
  #L1b38be.  v1:= 0I;
  #L1b38c0.  if v0 == 0 then goto L1b38c6;
  #L1b38c4.  return v1;
  #L1b38c6.  call temp:= `code`(v8) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L1b38cc.  v0:= temp;
  #L1b38ce.  v2:= 100I;
  #L1b38d2.  v3:= 1I;
  #L1b38d4.  if v0 < v2 then goto L1b38e0;
  #L1b38d8.  v2:= 200I;
  #L1b38dc.  if v0 < v2 then goto L1b38f2;
  #L1b38e0.  v2:= 204I;
  #L1b38e4.  if v0 == v2 then goto L1b38f2;
  #L1b38e8.  v2:= 304I;
  #L1b38ec.  if v0 == v2 then goto L1b38f2;
  #L1b38f0.  return v3;
  #L1b38f2.  call temp:= `headersContentLength`(v8) @signature `Lokhttp3/internal/Util;.headersContentLength:(Lokhttp3/Response;)J` @kind static;
  #L1b38f8.  v4:= temp @kind wide;
  #L1b38fa.  v6:= -1L;
  #L1b38fe.  v0:= lcmp(v4, v6);
  #L1b3902.  if v0 != 0 then goto L1b392a;
  #L1b3906.  v0:= 2I;
  #L1b3908.  v2:= "Transfer-Encoding" @kind object;
  #L1b390c.  v4:= 0I;
  #L1b390e.  call temp:= `header$default`(v8, v2, v4, v0, v4) @signature `Lokhttp3/Response;.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1b3914.  v8:= temp @kind object;
  #L1b3916.  v0:= "chunked" @kind object;
  #L1b391a.  call temp:= `equals`(v0, v8, v3) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1b3920.  v8:= temp;
  #L1b3922.  if v8 == 0 then goto L1b3928;
  #L1b3926.  goto L1b392a;
  #L1b3928.  return v1;
  #L1b392a.  return v3;
}
procedure `void` `receiveHeaders`(`okhttp3.CookieJar` v1 @kind object, `okhttp3.HttpUrl` v2 @kind object, `okhttp3.Headers` v3 @kind object) @signature `Lokhttp3/internal/http/HttpHeaders;.receiveHeaders:(Lokhttp3/CookieJar;Lokhttp3/HttpUrl;Lokhttp3/Headers;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1b3d54.  v0:= "$this$receiveHeaders" @kind object;
  #L1b3d58.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b3d5e.  v0:= "url" @kind object;
  #L1b3d62.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b3d68.  v0:= "headers" @kind object;
  #L1b3d6c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b3d72.  v0:= `@@okhttp3.CookieJar.NO_COOKIES` @type ^`okhttp3.CookieJar` @kind object;
  #L1b3d76.  if v1 != v0 then goto L1b3d7c;
  #L1b3d7a.  return @kind void;
  #L1b3d7c.  v0:= `@@okhttp3.Cookie.Companion` @type ^`okhttp3.Cookie$Companion` @kind object;
  #L1b3d80.  call temp:= `parseAll`(v0, v2, v3) @signature `Lokhttp3/Cookie$Companion;.parseAll:(Lokhttp3/HttpUrl;Lokhttp3/Headers;)Ljava/util/List;` @kind virtual;
  #L1b3d86.  v3:= temp @kind object;
  #L1b3d88.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1b3d8e.  v0:= temp;
  #L1b3d90.  if v0 == 0 then goto L1b3d96;
  #L1b3d94.  return @kind void;
  #L1b3d96.  call `saveFromResponse`(v1, v2, v3) @signature `Lokhttp3/CookieJar;.saveFromResponse:(Lokhttp3/HttpUrl;Ljava/util/List;)V` @kind interface;
  #L1b3d9c.  return @kind void;
}
