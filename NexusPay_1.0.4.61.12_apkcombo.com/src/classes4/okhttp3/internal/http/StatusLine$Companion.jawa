record `okhttp3.internal.http.StatusLine$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.internal.http.StatusLine$Companion` v0 @kind this) @signature `Lokhttp3/internal/http/StatusLine$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1b50ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b50f2.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http.StatusLine$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/internal/http/StatusLine$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1b5104.  call `<init>`(v0) @signature `Lokhttp3/internal/http/StatusLine$Companion;.<init>:()V` @kind direct;
  #L1b510a.  return @kind void;
}
procedure `okhttp3.internal.http.StatusLine` `get`(`okhttp3.internal.http.StatusLine$Companion` v3 @kind this, `okhttp3.Response` v4 @kind object) @signature `Lokhttp3/internal/http/StatusLine$Companion;.get:(Lokhttp3/Response;)Lokhttp3/internal/http/StatusLine;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1b4ea4.  v0:= "response" @kind object;
  #L1b4ea8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b4eae.  v0:= new `okhttp3.internal.http.StatusLine`;
  #L1b4eb2.  call temp:= `protocol`(v4) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @kind virtual;
  #L1b4eb8.  v1:= temp @kind object;
  #L1b4eba.  call temp:= `code`(v4) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L1b4ec0.  v2:= temp;
  #L1b4ec2.  call temp:= `message`(v4) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L1b4ec8.  v4:= temp @kind object;
  #L1b4eca.  call `<init>`(v0, v1, v2, v4) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L1b4ed0.  return v0 @kind object;
}
procedure `okhttp3.internal.http.StatusLine` `parse`(`okhttp3.internal.http.StatusLine$Companion` v8 @kind this, `java.lang.String` v9 @kind object) @signature `Lokhttp3/internal/http/StatusLine$Companion;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1b4ee4.  v0:= "statusLine" @kind object;
  #L1b4ee8.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b4eee.  v0:= "HTTP/1." @kind object;
  #L1b4ef2.  v1:= 0I;
  #L1b4ef4.  v2:= 2I;
  #L1b4ef6.  v3:= 0I;
  #L1b4ef8.  call temp:= `startsWith$default`(v9, v0, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1b4efe.  v0:= temp;
  #L1b4f00.  v4:= 32I;
  #L1b4f04.  v5:= 4I;
  #L1b4f06.  v6:= 9I;
  #L1b4f0a.  v7:= "Unexpected status line: " @kind object;
  #L1b4f0e.  if v0 == 0 then goto L1b4fa6;
  #L1b4f12.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1b4f18.  v0:= temp;
  #L1b4f1a.  if v0 < v6 then goto L1b4f7c;
  #L1b4f1e.  v0:= 8I;
  #L1b4f22.  call temp:= `charAt`(v9, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1b4f28.  v0:= temp;
  #L1b4f2a.  if v0 != v4 then goto L1b4f7c;
  #L1b4f2e.  v0:= 7I;
  #L1b4f30.  call temp:= `charAt`(v9, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1b4f36.  v0:= temp;
  #L1b4f38.  v0:= v0 + -48;
  #L1b4f3c.  if v0 != 0 then goto L1b4f46;
  #L1b4f40.  v0:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L1b4f44.  goto L1b4fbc;
  #L1b4f46.  v1:= 1I;
  #L1b4f48.  if v0 != v1 then goto L1b4f52;
  #L1b4f4c.  v0:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L1b4f50.  goto L1b4fbc;
  #L1b4f52.  v0:= new `java.net.ProtocolException`;
  #L1b4f56.  v1:= new `java.lang.StringBuilder`;
  #L1b4f5a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b4f60.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b4f66.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b4f6c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b4f72.  v9:= temp @kind object;
  #L1b4f74.  call `<init>`(v0, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b4f7a.  throw v0;
  #L1b4f7c.  v0:= new `java.net.ProtocolException`;
  #L1b4f80.  v1:= new `java.lang.StringBuilder`;
  #L1b4f84.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b4f8a.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b4f90.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b4f96.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b4f9c.  v9:= temp @kind object;
  #L1b4f9e.  call `<init>`(v0, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b4fa4.  throw v0;
  #L1b4fa6.  v0:= "ICY " @kind object;
  #L1b4faa.  call temp:= `startsWith$default`(v9, v0, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1b4fb0.  v0:= temp;
  #L1b4fb2.  if v0 == 0 then goto L1b50a2;
  #L1b4fb6.  v0:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L1b4fba.  v6:= 4I;
  #L1b4fbc.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1b4fc2.  v1:= temp;
  #L1b4fc4.  v2:= v6 + 3;
  #L1b4fc8.  if v1 < v2 then goto L1b5078;
  #L1b4fcc.  call temp:= `substring`(v9, v6, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1b4fd2.  v1:= temp @kind object;
  #L1b4fd4.  v3:= "(this as java.lang.Strinâ€¦ing(startIndex, endIndex)" @kind object;
  #L1b4fd8.  call `checkNotNullExpressionValue`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b4fde.  call temp:= `parseInt`(v1) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L1b4fe4.  v1:= temp;
  #L1b4fe6.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1b4fec.  v3:= temp;
  #L1b4fee.  if v3 <= v2 then goto L1b503e;
  #L1b4ff2.  call temp:= `charAt`(v9, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1b4ff8.  v2:= temp;
  #L1b4ffa.  if v2 != v4 then goto L1b5014;
  #L1b4ffe.  v6:= v6 + v5 @kind int;
  #L1b5000.  call temp:= `substring`(v9, v6) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1b5006.  v9:= temp @kind object;
  #L1b5008.  v2:= "(this as java.lang.String).substring(startIndex)" @kind object;
  #L1b500c.  call `checkNotNullExpressionValue`(v9, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b5012.  goto L1b5042;
  #L1b5014.  v0:= new `java.net.ProtocolException`;
  #L1b5018.  v1:= new `java.lang.StringBuilder`;
  #L1b501c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b5022.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b5028.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b502e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b5034.  v9:= temp @kind object;
  #L1b5036.  call `<init>`(v0, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b503c.  throw v0;
  #L1b503e.  v9:= "" @kind object;
  #L1b5042.  v2:= new `okhttp3.internal.http.StatusLine`;
  #L1b5046.  call `<init>`(v2, v0, v1, v9) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L1b504c.  return v2 @kind object;
  #L1b504e.  v0:= new `java.net.ProtocolException`;
  #L1b5052.  v1:= new `java.lang.StringBuilder`;
  #L1b5056.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b505c.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b5062.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b5068.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b506e.  v9:= temp @kind object;
  #L1b5070.  call `<init>`(v0, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b5076.  throw v0;
  #L1b5078.  v0:= new `java.net.ProtocolException`;
  #L1b507c.  v1:= new `java.lang.StringBuilder`;
  #L1b5080.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b5086.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b508c.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b5092.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b5098.  v9:= temp @kind object;
  #L1b509a.  call `<init>`(v0, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b50a0.  throw v0;
  #L1b50a2.  v0:= new `java.net.ProtocolException`;
  #L1b50a6.  v1:= new `java.lang.StringBuilder`;
  #L1b50aa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b50b0.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b50b6.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b50bc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b50c2.  v9:= temp @kind object;
  #L1b50c4.  call `<init>`(v0, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1b50ca.  throw v0;
  catch `java.lang.NumberFormatException` @[L1b4fcc..L1b4fe6] goto L1b504e;
}
