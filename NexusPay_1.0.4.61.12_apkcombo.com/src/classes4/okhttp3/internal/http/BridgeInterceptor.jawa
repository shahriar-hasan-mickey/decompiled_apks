record `okhttp3.internal.http.BridgeInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `okhttp3.CookieJar` `okhttp3.internal.http.BridgeInterceptor.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http.BridgeInterceptor` v1 @kind this, `okhttp3.CookieJar` v2 @kind object) @signature `Lokhttp3/internal/http/BridgeInterceptor;.<init>:(Lokhttp3/CookieJar;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b329c.  v0:= "cookieJar" @kind object;
  #L1b32a0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b32a6.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b32ac.  v1.`okhttp3.internal.http.BridgeInterceptor.a` @type ^`okhttp3.CookieJar` := v2 @kind object;
  #L1b32b0.  return @kind void;
}
procedure `java.lang.String` `a`(`okhttp3.internal.http.BridgeInterceptor` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lokhttp3/internal/http/BridgeInterceptor;.a:(Ljava/util/List;)Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1b2fd4.  v0:= new `java.lang.StringBuilder`;
  #L1b2fd8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1b2fde.  call temp:= `iterator`(v5) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1b2fe4.  v5:= temp @kind object;
  #L1b2fe6.  v1:= 0I;
  #L1b2fe8.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1b2fee.  v2:= temp;
  #L1b2ff0.  if v2 == 0 then goto L1b3046;
  #L1b2ff4.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1b2ffa.  v2:= temp @kind object;
  #L1b2ffc.  v3:= v1 + 1;
  #L1b3000.  if v1 >= 0 then goto L1b300a;
  #L1b3004.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L1b300a.  v2:= (`okhttp3.Cookie`) v2 @kind object;
  #L1b300e.  if v1 <= 0 then goto L1b301c;
  #L1b3012.  v1:= "; " @kind object;
  #L1b3016.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b301c.  call temp:= `name`(v2) @signature `Lokhttp3/Cookie;.name:()Ljava/lang/String;` @kind virtual;
  #L1b3022.  v1:= temp @kind object;
  #L1b3024.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b302a.  v1:= 61I;
  #L1b302e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b3034.  call temp:= `value`(v2) @signature `Lokhttp3/Cookie;.value:()Ljava/lang/String;` @kind virtual;
  #L1b303a.  v1:= temp @kind object;
  #L1b303c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1b3042.  v1:= v3;
  #L1b3044.  goto L1b2fe8;
  #L1b3046.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b304c.  v5:= temp @kind object;
  #L1b304e.  v0:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L1b3052.  call `checkNotNullExpressionValue`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b3058.  return v5 @kind object;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.http.BridgeInterceptor` v12 @kind this, `okhttp3.Interceptor$Chain` v13 @kind object) @signature `Lokhttp3/internal/http/BridgeInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1b306c.  v0:= "chain" @kind object;
  #L1b3070.  call `checkNotNullParameter`(v13, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b3076.  call temp:= `request`(v13) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L1b307c.  v0:= temp @kind object;
  #L1b307e.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L1b3084.  v1:= temp @kind object;
  #L1b3086.  call temp:= `body`(v0) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L1b308c.  v2:= temp @kind object;
  #L1b308e.  v3:= "Content-Type" @kind object;
  #L1b3092.  v4:= -1L;
  #L1b3096.  v6:= "Content-Length" @kind object;
  #L1b309a.  if v2 == 0 then goto L1b30f2;
  #L1b309e.  call temp:= `contentType`(v2) @signature `Lokhttp3/RequestBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L1b30a4.  v7:= temp @kind object;
  #L1b30a6.  if v7 == 0 then goto L1b30b8;
  #L1b30aa.  call temp:= `toString`(v7) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @kind virtual;
  #L1b30b0.  v7:= temp @kind object;
  #L1b30b2.  call temp:= `header`(v1, v3, v7) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b30b8.  call temp:= `contentLength`(v2) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L1b30be.  v7:= temp @kind wide;
  #L1b30c0.  v2:= "Transfer-Encoding" @kind object;
  #L1b30c4.  v9:= lcmp(v7, v4);
  #L1b30c8.  if v9 == 0 then goto L1b30e2;
  #L1b30cc.  call temp:= `valueOf`(v7) @signature `Ljava/lang/String;.valueOf:(J)Ljava/lang/String;` @kind static;
  #L1b30d2.  v7:= temp @kind object;
  #L1b30d4.  call temp:= `header`(v1, v6, v7) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b30da.  call temp:= `removeHeader`(v1, v2) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b30e0.  goto L1b30f2;
  #L1b30e2.  v7:= "chunked" @kind object;
  #L1b30e6.  call temp:= `header`(v1, v2, v7) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b30ec.  call temp:= `removeHeader`(v1, v6) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b30f2.  v2:= "Host" @kind object;
  #L1b30f6.  call temp:= `header`(v0, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1b30fc.  v7:= temp @kind object;
  #L1b30fe.  v8:= 0I;
  #L1b3100.  v9:= 1I;
  #L1b3102.  v10:= 0I;
  #L1b3104.  if v7 != 0 then goto L1b311e;
  #L1b3108.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b310e.  v7:= temp @kind object;
  #L1b3110.  call temp:= `toHostHeader$default`(v7, v8, v9, v10) @signature `Lokhttp3/internal/Util;.toHostHeader$default:(Lokhttp3/HttpUrl;ZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1b3116.  v7:= temp @kind object;
  #L1b3118.  call temp:= `header`(v1, v2, v7) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b311e.  v2:= "Connection" @kind object;
  #L1b3122.  call temp:= `header`(v0, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1b3128.  v7:= temp @kind object;
  #L1b312a.  if v7 != 0 then goto L1b3138;
  #L1b312e.  v7:= "Keep-Alive" @kind object;
  #L1b3132.  call temp:= `header`(v1, v2, v7) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b3138.  v2:= "Accept-Encoding" @kind object;
  #L1b313c.  call temp:= `header`(v0, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1b3142.  v7:= temp @kind object;
  #L1b3144.  v11:= "gzip" @kind object;
  #L1b3148.  if v7 != 0 then goto L1b3164;
  #L1b314c.  v7:= "Range" @kind object;
  #L1b3150.  call temp:= `header`(v0, v7) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1b3156.  v7:= temp @kind object;
  #L1b3158.  if v7 != 0 then goto L1b3164;
  #L1b315c.  call temp:= `header`(v1, v2, v11) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b3162.  v8:= 1I;
  #L1b3164.  v2:= v12.`okhttp3.internal.http.BridgeInterceptor.a` @type ^`okhttp3.CookieJar` @kind object;
  #L1b3168.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b316e.  v7:= temp @kind object;
  #L1b3170.  call temp:= `loadForRequest`(v2, v7) @signature `Lokhttp3/CookieJar;.loadForRequest:(Lokhttp3/HttpUrl;)Ljava/util/List;` @kind interface;
  #L1b3176.  v2:= temp @kind object;
  #L1b3178.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L1b317e.  v7:= temp;
  #L1b3180.  v7:= v7 ^~ v9 @kind int;
  #L1b3182.  if v7 == 0 then goto L1b3198;
  #L1b3186.  call temp:= `a`(v12, v2) @signature `Lokhttp3/internal/http/BridgeInterceptor;.a:(Ljava/util/List;)Ljava/lang/String;` @kind direct;
  #L1b318c.  v2:= temp @kind object;
  #L1b318e.  v7:= "Cookie" @kind object;
  #L1b3192.  call temp:= `header`(v1, v7, v2) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b3198.  v2:= "User-Agent" @kind object;
  #L1b319c.  call temp:= `header`(v0, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1b31a2.  v7:= temp @kind object;
  #L1b31a4.  if v7 != 0 then goto L1b31b2;
  #L1b31a8.  v7:= "okhttp/4.9.3" @kind object;
  #L1b31ac.  call temp:= `header`(v1, v2, v7) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1b31b2.  call temp:= `build`(v1) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L1b31b8.  v1:= temp @kind object;
  #L1b31ba.  call temp:= `proceed`(v13, v1) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L1b31c0.  v13:= temp @kind object;
  #L1b31c2.  v1:= v12.`okhttp3.internal.http.BridgeInterceptor.a` @type ^`okhttp3.CookieJar` @kind object;
  #L1b31c6.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1b31cc.  v2:= temp @kind object;
  #L1b31ce.  call temp:= `headers`(v13) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1b31d4.  v7:= temp @kind object;
  #L1b31d6.  call `receiveHeaders`(v1, v2, v7) @signature `Lokhttp3/internal/http/HttpHeaders;.receiveHeaders:(Lokhttp3/CookieJar;Lokhttp3/HttpUrl;Lokhttp3/Headers;)V` @kind static;
  #L1b31dc.  call temp:= `newBuilder`(v13) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L1b31e2.  v1:= temp @kind object;
  #L1b31e4.  call temp:= `request`(v1, v0) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1b31ea.  v0:= temp @kind object;
  #L1b31ec.  if v8 == 0 then goto L1b3282;
  #L1b31f0.  v1:= "Content-Encoding" @kind object;
  #L1b31f4.  v2:= 2I;
  #L1b31f6.  call temp:= `header$default`(v13, v1, v10, v2, v10) @signature `Lokhttp3/Response;.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1b31fc.  v7:= temp @kind object;
  #L1b31fe.  call temp:= `equals`(v11, v7, v9) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1b3204.  v7:= temp;
  #L1b3206.  if v7 == 0 then goto L1b3282;
  #L1b320a.  call temp:= `promisesBody`(v13) @signature `Lokhttp3/internal/http/HttpHeaders;.promisesBody:(Lokhttp3/Response;)Z` @kind static;
  #L1b3210.  v7:= temp;
  #L1b3212.  if v7 == 0 then goto L1b3282;
  #L1b3216.  call temp:= `body`(v13) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L1b321c.  v7:= temp @kind object;
  #L1b321e.  if v7 == 0 then goto L1b3282;
  #L1b3222.  v8:= new `okio.GzipSource`;
  #L1b3226.  call temp:= `source`(v7) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L1b322c.  v7:= temp @kind object;
  #L1b322e.  call `<init>`(v8, v7) @signature `Lokio/GzipSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L1b3234.  call temp:= `headers`(v13) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1b323a.  v7:= temp @kind object;
  #L1b323c.  call temp:= `newBuilder`(v7) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L1b3242.  v7:= temp @kind object;
  #L1b3244.  call temp:= `removeAll`(v7, v1) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1b324a.  v1:= temp @kind object;
  #L1b324c.  call temp:= `removeAll`(v1, v6) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1b3252.  v1:= temp @kind object;
  #L1b3254.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L1b325a.  v1:= temp @kind object;
  #L1b325c.  call temp:= `headers`(v0, v1) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1b3262.  call temp:= `header$default`(v13, v3, v10, v2, v10) @signature `Lokhttp3/Response;.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1b3268.  v13:= temp @kind object;
  #L1b326a.  v1:= new `okhttp3.internal.http.RealResponseBody`;
  #L1b326e.  call temp:= `buffer`(v8) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L1b3274.  v2:= temp @kind object;
  #L1b3276.  call `<init>`(v1, v13, v4, v2) @signature `Lokhttp3/internal/http/RealResponseBody;.<init>:(Ljava/lang/String;JLokio/BufferedSource;)V` @kind direct;
  #L1b327c.  call temp:= `body`(v0, v1) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L1b3282.  call temp:= `build`(v0) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L1b3288.  v13:= temp @kind object;
  #L1b328a.  return v13 @kind object;
}
