record `okhttp3.internal.http.HttpMethod` @kind class @AccessFlag PUBLIC_FINAL {
}
global `okhttp3.internal.http.HttpMethod` `@@okhttp3.internal.http.HttpMethod.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http/HttpMethod;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1b3f30.  v0:= new `okhttp3.internal.http.HttpMethod`;
  #L1b3f34.  call `<init>`(v0) @signature `Lokhttp3/internal/http/HttpMethod;.<init>:()V` @kind direct;
  #L1b3f3a.  `@@okhttp3.internal.http.HttpMethod.INSTANCE` @type ^`okhttp3.internal.http.HttpMethod` := v0 @kind object;
  #L1b3f3e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http.HttpMethod` v0 @kind this) @signature `Lokhttp3/internal/http/HttpMethod;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1b3f50.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1b3f56.  return @kind void;
}
procedure `boolean` `permitsRequestBody`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1b3e24.  v0:= "method" @kind object;
  #L1b3e28.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b3e2e.  v0:= "GET" @kind object;
  #L1b3e32.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b3e38.  v0:= temp;
  #L1b3e3a.  if v0 != 0 then goto L1b3e52;
  #L1b3e3e.  v0:= "HEAD" @kind object;
  #L1b3e42.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b3e48.  v1:= temp;
  #L1b3e4a.  if v1 != 0 then goto L1b3e52;
  #L1b3e4e.  v1:= 1I;
  #L1b3e50.  goto L1b3e54;
  #L1b3e52.  v1:= 0I;
  #L1b3e54.  return v1;
}
procedure `boolean` `requiresRequestBody`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.requiresRequestBody:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1b3ebc.  v0:= "method" @kind object;
  #L1b3ec0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b3ec6.  v0:= "POST" @kind object;
  #L1b3eca.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b3ed0.  v0:= temp;
  #L1b3ed2.  if v0 != 0 then goto L1b3f1c;
  #L1b3ed6.  v0:= "PUT" @kind object;
  #L1b3eda.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b3ee0.  v0:= temp;
  #L1b3ee2.  if v0 != 0 then goto L1b3f1c;
  #L1b3ee6.  v0:= "PATCH" @kind object;
  #L1b3eea.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b3ef0.  v0:= temp;
  #L1b3ef2.  if v0 != 0 then goto L1b3f1c;
  #L1b3ef6.  v0:= "PROPPATCH" @kind object;
  #L1b3efa.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b3f00.  v0:= temp;
  #L1b3f02.  if v0 != 0 then goto L1b3f1c;
  #L1b3f06.  v0:= "REPORT" @kind object;
  #L1b3f0a.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b3f10.  v1:= temp;
  #L1b3f12.  if v1 == 0 then goto L1b3f18;
  #L1b3f16.  goto L1b3f1c;
  #L1b3f18.  v1:= 0I;
  #L1b3f1a.  goto L1b3f1e;
  #L1b3f1c.  v1:= 1I;
  #L1b3f1e.  return v1;
}
procedure `boolean` `invalidatesCache`(`okhttp3.internal.http.HttpMethod` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.invalidatesCache:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b3db0.  v0:= "method" @kind object;
  #L1b3db4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b3dba.  v0:= "POST" @kind object;
  #L1b3dbe.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b3dc4.  v0:= temp;
  #L1b3dc6.  if v0 != 0 then goto L1b3e10;
  #L1b3dca.  v0:= "PATCH" @kind object;
  #L1b3dce.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b3dd4.  v0:= temp;
  #L1b3dd6.  if v0 != 0 then goto L1b3e10;
  #L1b3dda.  v0:= "PUT" @kind object;
  #L1b3dde.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b3de4.  v0:= temp;
  #L1b3de6.  if v0 != 0 then goto L1b3e10;
  #L1b3dea.  v0:= "DELETE" @kind object;
  #L1b3dee.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b3df4.  v0:= temp;
  #L1b3df6.  if v0 != 0 then goto L1b3e10;
  #L1b3dfa.  v0:= "MOVE" @kind object;
  #L1b3dfe.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b3e04.  v2:= temp;
  #L1b3e06.  if v2 == 0 then goto L1b3e0c;
  #L1b3e0a.  goto L1b3e10;
  #L1b3e0c.  v2:= 0I;
  #L1b3e0e.  goto L1b3e12;
  #L1b3e10.  v2:= 1I;
  #L1b3e12.  return v2;
}
procedure `boolean` `redirectsToGet`(`okhttp3.internal.http.HttpMethod` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.redirectsToGet:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b3e68.  v0:= "method" @kind object;
  #L1b3e6c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b3e72.  v0:= "PROPFIND" @kind object;
  #L1b3e76.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b3e7c.  v2:= temp;
  #L1b3e7e.  v2:= v2 ^~ 1;
  #L1b3e82.  return v2;
}
procedure `boolean` `redirectsWithBody`(`okhttp3.internal.http.HttpMethod` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.redirectsWithBody:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1b3e94.  v0:= "method" @kind object;
  #L1b3e98.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1b3e9e.  v0:= "PROPFIND" @kind object;
  #L1b3ea2.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1b3ea8.  v2:= temp;
  #L1b3eaa.  return v2;
}
