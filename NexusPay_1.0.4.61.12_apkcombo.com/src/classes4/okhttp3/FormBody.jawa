record `okhttp3.FormBody` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.RequestBody` @kind class {
  `java.util.List` `okhttp3.FormBody.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.FormBody.b` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.FormBody$Companion` `@@okhttp3.FormBody.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.FormBody.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/FormBody;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19af2c.  v0:= new `okhttp3.FormBody$Companion`;
  #L19af30.  v1:= 0I;
  #L19af32.  call `<init>`(v0, v1) @signature `Lokhttp3/FormBody$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L19af38.  `@@okhttp3.FormBody.Companion` @type ^`okhttp3.FormBody$Companion` := v0 @kind object;
  #L19af3c.  v0:= `@@okhttp3.MediaType.Companion` @type ^`okhttp3.MediaType$Companion` @kind object;
  #L19af40.  v1:= "application/x-www-form-urlencoded" @kind object;
  #L19af44.  call temp:= `get`(v0, v1) @signature `Lokhttp3/MediaType$Companion;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L19af4a.  v0:= temp @kind object;
  #L19af4c.  `@@okhttp3.FormBody.c` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L19af50.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.FormBody` v1 @kind this, `java.util.List` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lokhttp3/FormBody;.<init>:(Ljava/util/List;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19af64.  v0:= "encodedNames" @kind object;
  #L19af68.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19af6e.  v0:= "encodedValues" @kind object;
  #L19af72.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19af78.  call `<init>`(v1) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L19af7e.  call temp:= `toImmutableList`(v2) @signature `Lokhttp3/internal/Util;.toImmutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19af84.  v2:= temp @kind object;
  #L19af86.  v1.`okhttp3.FormBody.a` @type ^`java.util.List` := v2 @kind object;
  #L19af8a.  call temp:= `toImmutableList`(v3) @signature `Lokhttp3/internal/Util;.toImmutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19af90.  v2:= temp @kind object;
  #L19af92.  v1.`okhttp3.FormBody.b` @type ^`java.util.List` := v2 @kind object;
  #L19af96.  return @kind void;
}
procedure `long` `a`(`okhttp3.FormBody` v3 @kind this, `okio.BufferedSink` v4 @kind object, `boolean` v5 ) @signature `Lokhttp3/FormBody;.a:(Lokio/BufferedSink;Z)J` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L19ae70.  if v5 == 0 then goto L19ae80;
  #L19ae74.  v4:= new `okio.Buffer`;
  #L19ae78.  call `<init>`(v4) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L19ae7e.  goto L19ae8e;
  #L19ae80.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L19ae86.  call temp:= `getBuffer`(v4) @signature `Lokio/BufferedSink;.getBuffer:()Lokio/Buffer;` @kind interface;
  #L19ae8c.  v4:= temp @kind object;
  #L19ae8e.  v0:= 0I;
  #L19ae90.  v1:= v3.`okhttp3.FormBody.a` @type ^`java.util.List` @kind object;
  #L19ae94.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19ae9a.  v1:= temp;
  #L19ae9c.  if v0 >= v1 then goto L19aeea;
  #L19aea0.  if v0 <= 0 then goto L19aeae;
  #L19aea4.  v2:= 38I;
  #L19aea8.  call temp:= `writeByte`(v4, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19aeae.  v2:= v3.`okhttp3.FormBody.a` @type ^`java.util.List` @kind object;
  #L19aeb2.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19aeb8.  v2:= temp @kind object;
  #L19aeba.  v2:= (`java.lang.String`) v2 @kind object;
  #L19aebe.  call temp:= `writeUtf8`(v4, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L19aec4.  v2:= 61I;
  #L19aec8.  call temp:= `writeByte`(v4, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L19aece.  v2:= v3.`okhttp3.FormBody.b` @type ^`java.util.List` @kind object;
  #L19aed2.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19aed8.  v2:= temp @kind object;
  #L19aeda.  v2:= (`java.lang.String`) v2 @kind object;
  #L19aede.  call temp:= `writeUtf8`(v4, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L19aee4.  v0:= v0 + 1;
  #L19aee8.  goto L19ae9c;
  #L19aeea.  if v5 == 0 then goto L19aefe;
  #L19aeee.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L19aef4.  v0:= temp @kind wide;
  #L19aef6.  call `clear`(v4) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L19aefc.  goto L19af02;
  #L19aefe.  v0:= 0L;
  #L19af02.  return v0 @kind wide;
}
procedure `int` `-deprecated_size`(`okhttp3.FormBody` v1 @kind this) @signature `Lokhttp3/FormBody;.-deprecated_size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ad6c.  call temp:= `size`(v1) @signature `Lokhttp3/FormBody;.size:()I` @kind virtual;
  #L19ad72.  v0:= temp;
  #L19ad74.  return v0;
}
procedure `long` `contentLength`(`okhttp3.FormBody` v2 @kind this) @signature `Lokhttp3/FormBody;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L19ae50.  v0:= 0I;
  #L19ae52.  v1:= 1I;
  #L19ae54.  call temp:= `a`(v2, v0, v1) @signature `Lokhttp3/FormBody;.a:(Lokio/BufferedSink;Z)J` @kind direct;
  #L19ae5a.  v0:= temp @kind wide;
  #L19ae5c.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.FormBody` v1 @kind this) @signature `Lokhttp3/FormBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19af14.  v0:= `@@okhttp3.FormBody.c` @type ^`okhttp3.MediaType` @kind object;
  #L19af18.  return v0 @kind object;
}
procedure `java.lang.String` `encodedName`(`okhttp3.FormBody` v1 @kind this, `int` v2 ) @signature `Lokhttp3/FormBody;.encodedName:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ada8.  v0:= v1.`okhttp3.FormBody.a` @type ^`java.util.List` @kind object;
  #L19adac.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19adb2.  v2:= temp @kind object;
  #L19adb4.  v2:= (`java.lang.String`) v2 @kind object;
  #L19adb8.  return v2 @kind object;
}
procedure `java.lang.String` `encodedValue`(`okhttp3.FormBody` v1 @kind this, `int` v2 ) @signature `Lokhttp3/FormBody;.encodedValue:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19adcc.  v0:= v1.`okhttp3.FormBody.b` @type ^`java.util.List` @kind object;
  #L19add0.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19add6.  v2:= temp @kind object;
  #L19add8.  v2:= (`java.lang.String`) v2 @kind object;
  #L19addc.  return v2 @kind object;
}
procedure `java.lang.String` `name`(`okhttp3.FormBody` v7 @kind this, `int` v8 ) @signature `Lokhttp3/FormBody;.name:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19adf0.  v0:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L19adf4.  call temp:= `encodedName`(v7, v8) @signature `Lokhttp3/FormBody;.encodedName:(I)Ljava/lang/String;` @kind virtual;
  #L19adfa.  v1:= temp @kind object;
  #L19adfc.  v2:= 0I;
  #L19adfe.  v3:= 0I;
  #L19ae00.  v4:= 1I;
  #L19ae02.  v5:= 3I;
  #L19ae04.  v6:= 0I;
  #L19ae06.  call temp:= `percentDecode$okhttp$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl$Companion;.percentDecode$okhttp$default:(Lokhttp3/HttpUrl$Companion;Ljava/lang/String;IIZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L19ae0c.  v8:= temp @kind object;
  #L19ae0e.  return v8 @kind object;
}
procedure `int` `size`(`okhttp3.FormBody` v1 @kind this) @signature `Lokhttp3/FormBody;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ad88.  v0:= v1.`okhttp3.FormBody.a` @type ^`java.util.List` @kind object;
  #L19ad8c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19ad92.  v0:= temp;
  #L19ad94.  return v0;
}
procedure `java.lang.String` `value`(`okhttp3.FormBody` v7 @kind this, `int` v8 ) @signature `Lokhttp3/FormBody;.value:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19ae20.  v0:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L19ae24.  call temp:= `encodedValue`(v7, v8) @signature `Lokhttp3/FormBody;.encodedValue:(I)Ljava/lang/String;` @kind virtual;
  #L19ae2a.  v1:= temp @kind object;
  #L19ae2c.  v2:= 0I;
  #L19ae2e.  v3:= 0I;
  #L19ae30.  v4:= 1I;
  #L19ae32.  v5:= 3I;
  #L19ae34.  v6:= 0I;
  #L19ae36.  call temp:= `percentDecode$okhttp$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl$Companion;.percentDecode$okhttp$default:(Lokhttp3/HttpUrl$Companion;Ljava/lang/String;IIZILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L19ae3c.  v8:= temp @kind object;
  #L19ae3e.  return v8 @kind object;
}
procedure `void` `writeTo`(`okhttp3.FormBody` v1 @kind this, `okio.BufferedSink` v2 @kind object) @signature `Lokhttp3/FormBody;.writeTo:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19afa8.  v0:= "sink" @kind object;
  #L19afac.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19afb2.  v0:= 0I;
  #L19afb4.  call temp:= `a`(v1, v2, v0) @signature `Lokhttp3/FormBody;.a:(Lokio/BufferedSink;Z)J` @kind direct;
  #L19afba.  return @kind void;
}
