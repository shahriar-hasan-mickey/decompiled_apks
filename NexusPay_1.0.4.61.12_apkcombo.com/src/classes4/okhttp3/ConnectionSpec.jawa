record `okhttp3.ConnectionSpec` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `okhttp3.ConnectionSpec.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.ConnectionSpec.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String`[] `okhttp3.ConnectionSpec.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String`[] `okhttp3.ConnectionSpec.d` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.ConnectionSpec` `@@okhttp3.ConnectionSpec.CLEARTEXT` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.ConnectionSpec` `@@okhttp3.ConnectionSpec.COMPATIBLE_TLS` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.ConnectionSpec$Companion` `@@okhttp3.ConnectionSpec.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.ConnectionSpec` `@@okhttp3.ConnectionSpec.MODERN_TLS` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.ConnectionSpec` `@@okhttp3.ConnectionSpec.RESTRICTED_TLS` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.CipherSuite`[] `@@okhttp3.ConnectionSpec.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.CipherSuite`[] `@@okhttp3.ConnectionSpec.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/ConnectionSpec;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1985dc.  v0:= new `okhttp3.ConnectionSpec$Companion`;
  #L1985e0.  v1:= 0I;
  #L1985e2.  call `<init>`(v0, v1) @signature `Lokhttp3/ConnectionSpec$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1985e8.  `@@okhttp3.ConnectionSpec.Companion` @type ^`okhttp3.ConnectionSpec$Companion` := v0 @kind object;
  #L1985ec.  v0:= 9I;
  #L1985f0.  v1:= new `okhttp3.CipherSuite`[v0];
  #L1985f4.  v2:= `@@okhttp3.CipherSuite.TLS_AES_128_GCM_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L1985f8.  v3:= 0I;
  #L1985fa.  v1[v3]:= v2 @kind object;
  #L1985fe.  v2:= `@@okhttp3.CipherSuite.TLS_AES_256_GCM_SHA384` @type ^`okhttp3.CipherSuite` @kind object;
  #L198602.  v4:= 1I;
  #L198604.  v1[v4]:= v2 @kind object;
  #L198608.  v2:= `@@okhttp3.CipherSuite.TLS_CHACHA20_POLY1305_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L19860c.  v5:= 2I;
  #L19860e.  v1[v5]:= v2 @kind object;
  #L198612.  v2:= `@@okhttp3.CipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L198616.  v6:= 3I;
  #L198618.  v1[v6]:= v2 @kind object;
  #L19861c.  v2:= `@@okhttp3.CipherSuite.TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L198620.  v7:= 4I;
  #L198622.  v1[v7]:= v2 @kind object;
  #L198626.  v2:= `@@okhttp3.CipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384` @type ^`okhttp3.CipherSuite` @kind object;
  #L19862a.  v8:= 5I;
  #L19862c.  v1[v8]:= v2 @kind object;
  #L198630.  v2:= `@@okhttp3.CipherSuite.TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384` @type ^`okhttp3.CipherSuite` @kind object;
  #L198634.  v9:= 6I;
  #L198636.  v1[v9]:= v2 @kind object;
  #L19863a.  v2:= `@@okhttp3.CipherSuite.TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L19863e.  v10:= 7I;
  #L198640.  v1[v10]:= v2 @kind object;
  #L198644.  v2:= `@@okhttp3.CipherSuite.TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L198648.  v11:= 8I;
  #L19864c.  v1[v11]:= v2 @kind object;
  #L198650.  `@@okhttp3.ConnectionSpec.e` @type ^`okhttp3.CipherSuite`[] := v1 @kind object;
  #L198654.  v1:= 16I;
  #L198658.  v1:= new `okhttp3.CipherSuite`[v1];
  #L19865c.  v2:= `@@okhttp3.CipherSuite.TLS_AES_128_GCM_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L198660.  v1[v3]:= v2 @kind object;
  #L198664.  v2:= `@@okhttp3.CipherSuite.TLS_AES_256_GCM_SHA384` @type ^`okhttp3.CipherSuite` @kind object;
  #L198668.  v1[v4]:= v2 @kind object;
  #L19866c.  v2:= `@@okhttp3.CipherSuite.TLS_CHACHA20_POLY1305_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L198670.  v1[v5]:= v2 @kind object;
  #L198674.  v2:= `@@okhttp3.CipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L198678.  v1[v6]:= v2 @kind object;
  #L19867c.  v2:= `@@okhttp3.CipherSuite.TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L198680.  v1[v7]:= v2 @kind object;
  #L198684.  v2:= `@@okhttp3.CipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384` @type ^`okhttp3.CipherSuite` @kind object;
  #L198688.  v1[v8]:= v2 @kind object;
  #L19868c.  v2:= `@@okhttp3.CipherSuite.TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384` @type ^`okhttp3.CipherSuite` @kind object;
  #L198690.  v1[v9]:= v2 @kind object;
  #L198694.  v2:= `@@okhttp3.CipherSuite.TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L198698.  v1[v10]:= v2 @kind object;
  #L19869c.  v2:= `@@okhttp3.CipherSuite.TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L1986a0.  v1[v11]:= v2 @kind object;
  #L1986a4.  v2:= `@@okhttp3.CipherSuite.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA` @type ^`okhttp3.CipherSuite` @kind object;
  #L1986a8.  v1[v0]:= v2 @kind object;
  #L1986ac.  v0:= `@@okhttp3.CipherSuite.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA` @type ^`okhttp3.CipherSuite` @kind object;
  #L1986b0.  v2:= 10I;
  #L1986b4.  v1[v2]:= v0 @kind object;
  #L1986b8.  v0:= `@@okhttp3.CipherSuite.TLS_RSA_WITH_AES_128_GCM_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L1986bc.  v2:= 11I;
  #L1986c0.  v1[v2]:= v0 @kind object;
  #L1986c4.  v0:= `@@okhttp3.CipherSuite.TLS_RSA_WITH_AES_256_GCM_SHA384` @type ^`okhttp3.CipherSuite` @kind object;
  #L1986c8.  v2:= 12I;
  #L1986cc.  v1[v2]:= v0 @kind object;
  #L1986d0.  v0:= `@@okhttp3.CipherSuite.TLS_RSA_WITH_AES_128_CBC_SHA` @type ^`okhttp3.CipherSuite` @kind object;
  #L1986d4.  v2:= 13I;
  #L1986d8.  v1[v2]:= v0 @kind object;
  #L1986dc.  v0:= `@@okhttp3.CipherSuite.TLS_RSA_WITH_AES_256_CBC_SHA` @type ^`okhttp3.CipherSuite` @kind object;
  #L1986e0.  v2:= 14I;
  #L1986e4.  v1[v2]:= v0 @kind object;
  #L1986e8.  v0:= `@@okhttp3.CipherSuite.TLS_RSA_WITH_3DES_EDE_CBC_SHA` @type ^`okhttp3.CipherSuite` @kind object;
  #L1986ec.  v2:= 15I;
  #L1986f0.  v1[v2]:= v0 @kind object;
  #L1986f4.  `@@okhttp3.ConnectionSpec.f` @type ^`okhttp3.CipherSuite`[] := v1 @kind object;
  #L1986f8.  v0:= new `okhttp3.ConnectionSpec$Builder`;
  #L1986fc.  call `<init>`(v0, v4) @signature `Lokhttp3/ConnectionSpec$Builder;.<init>:(Z)V` @kind direct;
  #L198702.  v1:= `@@okhttp3.ConnectionSpec.e` @type ^`okhttp3.CipherSuite`[] @kind object;
  #L198706.  v2:= length @variable v1;
  #L198708.  call temp:= `copyOf`(v1, v2) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L19870e.  v1:= temp @kind object;
  #L198710.  v1:= (`okhttp3.CipherSuite`[]) v1 @kind object;
  #L198714.  call temp:= `cipherSuites`(v0, v1) @signature `Lokhttp3/ConnectionSpec$Builder;.cipherSuites:([Lokhttp3/CipherSuite;)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L19871a.  v0:= temp @kind object;
  #L19871c.  v1:= new `okhttp3.TlsVersion`[v5];
  #L198720.  v2:= `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` @kind object;
  #L198724.  v1[v3]:= v2 @kind object;
  #L198728.  v2:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L19872c.  v1[v4]:= v2 @kind object;
  #L198730.  call temp:= `tlsVersions`(v0, v1) @signature `Lokhttp3/ConnectionSpec$Builder;.tlsVersions:([Lokhttp3/TlsVersion;)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L198736.  v0:= temp @kind object;
  #L198738.  call temp:= `supportsTlsExtensions`(v0, v4) @signature `Lokhttp3/ConnectionSpec$Builder;.supportsTlsExtensions:(Z)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L19873e.  v0:= temp @kind object;
  #L198740.  call temp:= `build`(v0) @signature `Lokhttp3/ConnectionSpec$Builder;.build:()Lokhttp3/ConnectionSpec;` @kind virtual;
  #L198746.  v0:= temp @kind object;
  #L198748.  `@@okhttp3.ConnectionSpec.RESTRICTED_TLS` @type ^`okhttp3.ConnectionSpec` := v0 @kind object;
  #L19874c.  v0:= new `okhttp3.ConnectionSpec$Builder`;
  #L198750.  call `<init>`(v0, v4) @signature `Lokhttp3/ConnectionSpec$Builder;.<init>:(Z)V` @kind direct;
  #L198756.  v1:= `@@okhttp3.ConnectionSpec.f` @type ^`okhttp3.CipherSuite`[] @kind object;
  #L19875a.  v2:= length @variable v1;
  #L19875c.  call temp:= `copyOf`(v1, v2) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L198762.  v1:= temp @kind object;
  #L198764.  v1:= (`okhttp3.CipherSuite`[]) v1 @kind object;
  #L198768.  call temp:= `cipherSuites`(v0, v1) @signature `Lokhttp3/ConnectionSpec$Builder;.cipherSuites:([Lokhttp3/CipherSuite;)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L19876e.  v0:= temp @kind object;
  #L198770.  v1:= new `okhttp3.TlsVersion`[v5];
  #L198774.  v2:= `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` @kind object;
  #L198778.  v1[v3]:= v2 @kind object;
  #L19877c.  v2:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L198780.  v1[v4]:= v2 @kind object;
  #L198784.  call temp:= `tlsVersions`(v0, v1) @signature `Lokhttp3/ConnectionSpec$Builder;.tlsVersions:([Lokhttp3/TlsVersion;)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L19878a.  v0:= temp @kind object;
  #L19878c.  call temp:= `supportsTlsExtensions`(v0, v4) @signature `Lokhttp3/ConnectionSpec$Builder;.supportsTlsExtensions:(Z)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L198792.  v0:= temp @kind object;
  #L198794.  call temp:= `build`(v0) @signature `Lokhttp3/ConnectionSpec$Builder;.build:()Lokhttp3/ConnectionSpec;` @kind virtual;
  #L19879a.  v0:= temp @kind object;
  #L19879c.  `@@okhttp3.ConnectionSpec.MODERN_TLS` @type ^`okhttp3.ConnectionSpec` := v0 @kind object;
  #L1987a0.  v0:= new `okhttp3.ConnectionSpec$Builder`;
  #L1987a4.  call `<init>`(v0, v4) @signature `Lokhttp3/ConnectionSpec$Builder;.<init>:(Z)V` @kind direct;
  #L1987aa.  v1:= `@@okhttp3.ConnectionSpec.f` @type ^`okhttp3.CipherSuite`[] @kind object;
  #L1987ae.  v2:= length @variable v1;
  #L1987b0.  call temp:= `copyOf`(v1, v2) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L1987b6.  v1:= temp @kind object;
  #L1987b8.  v1:= (`okhttp3.CipherSuite`[]) v1 @kind object;
  #L1987bc.  call temp:= `cipherSuites`(v0, v1) @signature `Lokhttp3/ConnectionSpec$Builder;.cipherSuites:([Lokhttp3/CipherSuite;)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L1987c2.  v0:= temp @kind object;
  #L1987c4.  v1:= new `okhttp3.TlsVersion`[v7];
  #L1987c8.  v2:= `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` @kind object;
  #L1987cc.  v1[v3]:= v2 @kind object;
  #L1987d0.  v2:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L1987d4.  v1[v4]:= v2 @kind object;
  #L1987d8.  v2:= `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` @kind object;
  #L1987dc.  v1[v5]:= v2 @kind object;
  #L1987e0.  v2:= `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L1987e4.  v1[v6]:= v2 @kind object;
  #L1987e8.  call temp:= `tlsVersions`(v0, v1) @signature `Lokhttp3/ConnectionSpec$Builder;.tlsVersions:([Lokhttp3/TlsVersion;)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L1987ee.  v0:= temp @kind object;
  #L1987f0.  call temp:= `supportsTlsExtensions`(v0, v4) @signature `Lokhttp3/ConnectionSpec$Builder;.supportsTlsExtensions:(Z)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L1987f6.  v0:= temp @kind object;
  #L1987f8.  call temp:= `build`(v0) @signature `Lokhttp3/ConnectionSpec$Builder;.build:()Lokhttp3/ConnectionSpec;` @kind virtual;
  #L1987fe.  v0:= temp @kind object;
  #L198800.  `@@okhttp3.ConnectionSpec.COMPATIBLE_TLS` @type ^`okhttp3.ConnectionSpec` := v0 @kind object;
  #L198804.  v0:= new `okhttp3.ConnectionSpec$Builder`;
  #L198808.  call `<init>`(v0, v3) @signature `Lokhttp3/ConnectionSpec$Builder;.<init>:(Z)V` @kind direct;
  #L19880e.  call temp:= `build`(v0) @signature `Lokhttp3/ConnectionSpec$Builder;.build:()Lokhttp3/ConnectionSpec;` @kind virtual;
  #L198814.  v0:= temp @kind object;
  #L198816.  `@@okhttp3.ConnectionSpec.CLEARTEXT` @type ^`okhttp3.ConnectionSpec` := v0 @kind object;
  #L19881a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.ConnectionSpec` v0 @kind this, `boolean` v1 , `boolean` v2 , `java.lang.String`[] v3 @kind object, `java.lang.String`[] v4 @kind object) @signature `Lokhttp3/ConnectionSpec;.<init>:(ZZ[Ljava/lang/String;[Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L19882c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L198832.  v0.`okhttp3.ConnectionSpec.a` @type ^`boolean` := v1 @kind boolean;
  #L198836.  v0.`okhttp3.ConnectionSpec.b` @type ^`boolean` := v2 @kind boolean;
  #L19883a.  v0.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] := v3 @kind object;
  #L19883e.  v0.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] := v4 @kind object;
  #L198842.  return @kind void;
}
procedure `okhttp3.ConnectionSpec` `a`(`okhttp3.ConnectionSpec` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object, `boolean` v6 ) @signature `Lokhttp3/ConnectionSpec;.a:(Ljavax/net/ssl/SSLSocket;Z)Lokhttp3/ConnectionSpec;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1984b4.  v0:= v4.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] @kind object;
  #L1984b8.  if v0 == 0 then goto L1984e8;
  #L1984bc.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L1984c2.  v0:= temp @kind object;
  #L1984c4.  v1:= "sslSocket.enabledCipherSuites" @kind object;
  #L1984c8.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1984ce.  v1:= v4.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] @kind object;
  #L1984d2.  v2:= `@@okhttp3.CipherSuite.Companion` @type ^`okhttp3.CipherSuite$Companion` @kind object;
  #L1984d6.  call temp:= `getORDER_BY_NAME$okhttp`(v2) @signature `Lokhttp3/CipherSuite$Companion;.getORDER_BY_NAME$okhttp:()Ljava/util/Comparator;` @kind virtual;
  #L1984dc.  v2:= temp @kind object;
  #L1984de.  call temp:= `intersect`(v0, v1, v2) @signature `Lokhttp3/internal/Util;.intersect:([Ljava/lang/String;[Ljava/lang/String;Ljava/util/Comparator;)[Ljava/lang/String;` @kind static;
  #L1984e4.  v0:= temp @kind object;
  #L1984e6.  goto L1984f0;
  #L1984e8.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L1984ee.  v0:= temp @kind object;
  #L1984f0.  v1:= v4.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] @kind object;
  #L1984f4.  if v1 == 0 then goto L198520;
  #L1984f8.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L1984fe.  v1:= temp @kind object;
  #L198500.  v2:= "sslSocket.enabledProtocols" @kind object;
  #L198504.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19850a.  v2:= v4.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] @kind object;
  #L19850e.  call temp:= `naturalOrder`() @signature `Lkotlin/comparisons/ComparisonsKt;.naturalOrder:()Ljava/util/Comparator;` @kind static;
  #L198514.  v3:= temp @kind object;
  #L198516.  call temp:= `intersect`(v1, v2, v3) @signature `Lokhttp3/internal/Util;.intersect:([Ljava/lang/String;[Ljava/lang/String;Ljava/util/Comparator;)[Ljava/lang/String;` @kind static;
  #L19851c.  v1:= temp @kind object;
  #L19851e.  goto L198528;
  #L198520.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L198526.  v1:= temp @kind object;
  #L198528.  call temp:= `getSupportedCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getSupportedCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L19852e.  v5:= temp @kind object;
  #L198530.  v2:= "supportedCipherSuites" @kind object;
  #L198534.  call `checkNotNullExpressionValue`(v5, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19853a.  v2:= `@@okhttp3.CipherSuite.Companion` @type ^`okhttp3.CipherSuite$Companion` @kind object;
  #L19853e.  call temp:= `getORDER_BY_NAME$okhttp`(v2) @signature `Lokhttp3/CipherSuite$Companion;.getORDER_BY_NAME$okhttp:()Ljava/util/Comparator;` @kind virtual;
  #L198544.  v2:= temp @kind object;
  #L198546.  v3:= "TLS_FALLBACK_SCSV" @kind object;
  #L19854a.  call temp:= `indexOf`(v5, v3, v2) @signature `Lokhttp3/internal/Util;.indexOf:([Ljava/lang/String;Ljava/lang/String;Ljava/util/Comparator;)I` @kind static;
  #L198550.  v2:= temp;
  #L198552.  v3:= "cipherSuitesIntersection" @kind object;
  #L198556.  if v6 == 0 then goto L19857c;
  #L19855a.  v6:= -1I;
  #L19855c.  if v2 == v6 then goto L19857c;
  #L198560.  call `checkNotNullExpressionValue`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L198566.  v5:= v5[v2] @kind object;
  #L19856a.  v6:= "supportedCipherSuites[indexOfFallbackScsv]" @kind object;
  #L19856e.  call `checkNotNullExpressionValue`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L198574.  call temp:= `concat`(v0, v5) @signature `Lokhttp3/internal/Util;.concat:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L19857a.  v0:= temp @kind object;
  #L19857c.  v5:= new `okhttp3.ConnectionSpec$Builder`;
  #L198580.  call `<init>`(v5, v4) @signature `Lokhttp3/ConnectionSpec$Builder;.<init>:(Lokhttp3/ConnectionSpec;)V` @kind direct;
  #L198586.  call `checkNotNullExpressionValue`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19858c.  v6:= length @variable v0;
  #L19858e.  call temp:= `copyOf`(v0, v6) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L198594.  v6:= temp @kind object;
  #L198596.  v6:= (`java.lang.String`[]) v6 @kind object;
  #L19859a.  call temp:= `cipherSuites`(v5, v6) @signature `Lokhttp3/ConnectionSpec$Builder;.cipherSuites:([Ljava/lang/String;)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L1985a0.  v5:= temp @kind object;
  #L1985a2.  v6:= "tlsVersionsIntersection" @kind object;
  #L1985a6.  call `checkNotNullExpressionValue`(v1, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1985ac.  v6:= length @variable v1;
  #L1985ae.  call temp:= `copyOf`(v1, v6) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L1985b4.  v6:= temp @kind object;
  #L1985b6.  v6:= (`java.lang.String`[]) v6 @kind object;
  #L1985ba.  call temp:= `tlsVersions`(v5, v6) @signature `Lokhttp3/ConnectionSpec$Builder;.tlsVersions:([Ljava/lang/String;)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L1985c0.  v5:= temp @kind object;
  #L1985c2.  call temp:= `build`(v5) @signature `Lokhttp3/ConnectionSpec$Builder;.build:()Lokhttp3/ConnectionSpec;` @kind virtual;
  #L1985c8.  v5:= temp @kind object;
  #L1985ca.  return v5 @kind object;
}
procedure `java.lang.String`[] `access$getCipherSuitesAsString$p`(`okhttp3.ConnectionSpec` v0 @kind object) @signature `Lokhttp3/ConnectionSpec;.access$getCipherSuitesAsString$p:(Lokhttp3/ConnectionSpec;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L19839c.  v0:= v0.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] @kind object;
  #L1983a0.  return v0 @kind object;
}
procedure `java.lang.String`[] `access$getTlsVersionsAsString$p`(`okhttp3.ConnectionSpec` v0 @kind object) @signature `Lokhttp3/ConnectionSpec;.access$getTlsVersionsAsString$p:(Lokhttp3/ConnectionSpec;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1983b4.  v0:= v0.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] @kind object;
  #L1983b8.  return v0 @kind object;
}
procedure `java.util.List` `-deprecated_cipherSuites`(`okhttp3.ConnectionSpec` v1 @kind this) @signature `Lokhttp3/ConnectionSpec;.-deprecated_cipherSuites:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1983cc.  call temp:= `cipherSuites`(v1) @signature `Lokhttp3/ConnectionSpec;.cipherSuites:()Ljava/util/List;` @kind virtual;
  #L1983d2.  v0:= temp @kind object;
  #L1983d4.  return v0 @kind object;
}
procedure `boolean` `-deprecated_supportsTlsExtensions`(`okhttp3.ConnectionSpec` v1 @kind this) @signature `Lokhttp3/ConnectionSpec;.-deprecated_supportsTlsExtensions:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L198150.  v0:= v1.`okhttp3.ConnectionSpec.b` @type ^`boolean` @kind boolean;
  #L198154.  return v0;
}
procedure `java.util.List` `-deprecated_tlsVersions`(`okhttp3.ConnectionSpec` v1 @kind this) @signature `Lokhttp3/ConnectionSpec;.-deprecated_tlsVersions:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1983e8.  call temp:= `tlsVersions`(v1) @signature `Lokhttp3/ConnectionSpec;.tlsVersions:()Ljava/util/List;` @kind virtual;
  #L1983ee.  v0:= temp @kind object;
  #L1983f0.  return v0 @kind object;
}
procedure `void` `apply$okhttp`(`okhttp3.ConnectionSpec` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object, `boolean` v3 ) @signature `Lokhttp3/ConnectionSpec;.apply$okhttp:(Ljavax/net/ssl/SSLSocket;Z)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L198854.  v0:= "sslSocket" @kind object;
  #L198858.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19885e.  call temp:= `a`(v1, v2, v3) @signature `Lokhttp3/ConnectionSpec;.a:(Ljavax/net/ssl/SSLSocket;Z)Lokhttp3/ConnectionSpec;` @kind direct;
  #L198864.  v3:= temp @kind object;
  #L198866.  call temp:= `tlsVersions`(v3) @signature `Lokhttp3/ConnectionSpec;.tlsVersions:()Ljava/util/List;` @kind virtual;
  #L19886c.  v0:= temp @kind object;
  #L19886e.  if v0 == 0 then goto L19887c;
  #L198872.  v0:= v3.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] @kind object;
  #L198876.  call `setEnabledProtocols`(v2, v0) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L19887c.  call temp:= `cipherSuites`(v3) @signature `Lokhttp3/ConnectionSpec;.cipherSuites:()Ljava/util/List;` @kind virtual;
  #L198882.  v0:= temp @kind object;
  #L198884.  if v0 == 0 then goto L198892;
  #L198888.  v3:= v3.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] @kind object;
  #L19888c.  call `setEnabledCipherSuites`(v2, v3) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledCipherSuites:([Ljava/lang/String;)V` @kind virtual;
  #L198892.  return @kind void;
}
procedure `java.util.List` `cipherSuites`(`okhttp3.ConnectionSpec` v6 @kind this) @signature `Lokhttp3/ConnectionSpec;.cipherSuites:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L198404.  v0:= v6.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] @kind object;
  #L198408.  if v0 == 0 then goto L198446;
  #L19840c.  v1:= new `java.util.ArrayList`;
  #L198410.  v2:= length @variable v0;
  #L198412.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L198418.  v2:= length @variable v0;
  #L19841a.  v3:= 0I;
  #L19841c.  if v3 >= v2 then goto L19843c;
  #L198420.  v4:= v0[v3] @kind object;
  #L198424.  v5:= `@@okhttp3.CipherSuite.Companion` @type ^`okhttp3.CipherSuite$Companion` @kind object;
  #L198428.  call temp:= `forJavaName`(v5, v4) @signature `Lokhttp3/CipherSuite$Companion;.forJavaName:(Ljava/lang/String;)Lokhttp3/CipherSuite;` @kind virtual;
  #L19842e.  v4:= temp @kind object;
  #L198430.  call temp:= `add`(v1, v4) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L198436.  v3:= v3 + 1;
  #L19843a.  goto L19841c;
  #L19843c.  call temp:= `toList`(v1) @signature `Lkotlin/collections/CollectionsKt;.toList:(Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L198442.  v0:= temp @kind object;
  #L198444.  goto L198448;
  #L198446.  v0:= 0I;
  #L198448.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.ConnectionSpec` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lokhttp3/ConnectionSpec;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L198168.  v0:= instanceof @variable v5 @type ^`okhttp3.ConnectionSpec` @kind boolean;
  #L19816c.  v1:= 0I;
  #L19816e.  if v0 != 0 then goto L198174;
  #L198172.  return v1;
  #L198174.  v0:= 1I;
  #L198176.  if v5 != v4 then goto L19817c;
  #L19817a.  return v0;
  #L19817c.  v2:= v4.`okhttp3.ConnectionSpec.a` @type ^`boolean` @kind boolean;
  #L198180.  v5:= (`okhttp3.ConnectionSpec`) v5 @kind object;
  #L198184.  v3:= v5.`okhttp3.ConnectionSpec.a` @type ^`boolean` @kind boolean;
  #L198188.  if v2 == v3 then goto L19818e;
  #L19818c.  return v1;
  #L19818e.  if v2 == 0 then goto L1981cc;
  #L198192.  v2:= v4.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] @kind object;
  #L198196.  v3:= v5.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] @kind object;
  #L19819a.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L1981a0.  v2:= temp;
  #L1981a2.  if v2 != 0 then goto L1981a8;
  #L1981a6.  return v1;
  #L1981a8.  v2:= v4.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] @kind object;
  #L1981ac.  v3:= v5.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] @kind object;
  #L1981b0.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L1981b6.  v2:= temp;
  #L1981b8.  if v2 != 0 then goto L1981be;
  #L1981bc.  return v1;
  #L1981be.  v2:= v4.`okhttp3.ConnectionSpec.b` @type ^`boolean` @kind boolean;
  #L1981c2.  v5:= v5.`okhttp3.ConnectionSpec.b` @type ^`boolean` @kind boolean;
  #L1981c6.  if v2 == v5 then goto L1981cc;
  #L1981ca.  return v1;
  #L1981cc.  return v0;
}
procedure `int` `hashCode`(`okhttp3.ConnectionSpec` v3 @kind this) @signature `Lokhttp3/ConnectionSpec;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L19828c.  v0:= v3.`okhttp3.ConnectionSpec.a` @type ^`boolean` @kind boolean;
  #L198290.  if v0 == 0 then goto L1982d6;
  #L198294.  v0:= 527I;
  #L198298.  v1:= v3.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] @kind object;
  #L19829c.  v2:= 0I;
  #L19829e.  if v1 == 0 then goto L1982ac;
  #L1982a2.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L1982a8.  v1:= temp;
  #L1982aa.  goto L1982ae;
  #L1982ac.  v1:= 0I;
  #L1982ae.  v0:= v0 + v1 @kind int;
  #L1982b0.  v0:= v0 * 31;
  #L1982b4.  v1:= v3.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] @kind object;
  #L1982b8.  if v1 == 0 then goto L1982c4;
  #L1982bc.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L1982c2.  v2:= temp;
  #L1982c4.  v0:= v0 + v2 @kind int;
  #L1982c6.  v0:= v0 * 31;
  #L1982ca.  v1:= v3.`okhttp3.ConnectionSpec.b` @type ^`boolean` @kind boolean;
  #L1982ce.  v1:= v1 ^~ 1;
  #L1982d2.  v0:= v0 + v1 @kind int;
  #L1982d4.  goto L1982da;
  #L1982d6.  v0:= 17I;
  #L1982da.  return v0;
}
procedure `boolean` `isCompatible`(`okhttp3.ConnectionSpec` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object) @signature `Lokhttp3/ConnectionSpec;.isCompatible:(Ljavax/net/ssl/SSLSocket;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1981e0.  v0:= "socket" @kind object;
  #L1981e4.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1981ea.  v0:= v4.`okhttp3.ConnectionSpec.a` @type ^`boolean` @kind boolean;
  #L1981ee.  v1:= 0I;
  #L1981f0.  if v0 != 0 then goto L1981f6;
  #L1981f4.  return v1;
  #L1981f6.  v0:= v4.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] @kind object;
  #L1981fa.  if v0 == 0 then goto L19821c;
  #L1981fe.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L198204.  v2:= temp @kind object;
  #L198206.  call temp:= `naturalOrder`() @signature `Lkotlin/comparisons/ComparisonsKt;.naturalOrder:()Ljava/util/Comparator;` @kind static;
  #L19820c.  v3:= temp @kind object;
  #L19820e.  call temp:= `hasIntersection`(v0, v2, v3) @signature `Lokhttp3/internal/Util;.hasIntersection:([Ljava/lang/String;[Ljava/lang/String;Ljava/util/Comparator;)Z` @kind static;
  #L198214.  v0:= temp;
  #L198216.  if v0 != 0 then goto L19821c;
  #L19821a.  return v1;
  #L19821c.  v0:= v4.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] @kind object;
  #L198220.  if v0 == 0 then goto L198246;
  #L198224.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L19822a.  v5:= temp @kind object;
  #L19822c.  v2:= `@@okhttp3.CipherSuite.Companion` @type ^`okhttp3.CipherSuite$Companion` @kind object;
  #L198230.  call temp:= `getORDER_BY_NAME$okhttp`(v2) @signature `Lokhttp3/CipherSuite$Companion;.getORDER_BY_NAME$okhttp:()Ljava/util/Comparator;` @kind virtual;
  #L198236.  v2:= temp @kind object;
  #L198238.  call temp:= `hasIntersection`(v0, v5, v2) @signature `Lokhttp3/internal/Util;.hasIntersection:([Ljava/lang/String;[Ljava/lang/String;Ljava/util/Comparator;)Z` @kind static;
  #L19823e.  v5:= temp;
  #L198240.  if v5 != 0 then goto L198246;
  #L198244.  return v1;
  #L198246.  v5:= 1I;
  #L198248.  return v5;
}
procedure `boolean` `isTls`(`okhttp3.ConnectionSpec` v1 @kind this) @signature `Lokhttp3/ConnectionSpec;.isTls:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19825c.  v0:= v1.`okhttp3.ConnectionSpec.a` @type ^`boolean` @kind boolean;
  #L198260.  return v0;
}
procedure `boolean` `supportsTlsExtensions`(`okhttp3.ConnectionSpec` v1 @kind this) @signature `Lokhttp3/ConnectionSpec;.supportsTlsExtensions:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L198274.  v0:= v1.`okhttp3.ConnectionSpec.b` @type ^`boolean` @kind boolean;
  #L198278.  return v0;
}
procedure `java.util.List` `tlsVersions`(`okhttp3.ConnectionSpec` v6 @kind this) @signature `Lokhttp3/ConnectionSpec;.tlsVersions:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19845c.  v0:= v6.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] @kind object;
  #L198460.  if v0 == 0 then goto L19849e;
  #L198464.  v1:= new `java.util.ArrayList`;
  #L198468.  v2:= length @variable v0;
  #L19846a.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L198470.  v2:= length @variable v0;
  #L198472.  v3:= 0I;
  #L198474.  if v3 >= v2 then goto L198494;
  #L198478.  v4:= v0[v3] @kind object;
  #L19847c.  v5:= `@@okhttp3.TlsVersion.Companion` @type ^`okhttp3.TlsVersion$Companion` @kind object;
  #L198480.  call temp:= `forJavaName`(v5, v4) @signature `Lokhttp3/TlsVersion$Companion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind virtual;
  #L198486.  v4:= temp @kind object;
  #L198488.  call temp:= `add`(v1, v4) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19848e.  v3:= v3 + 1;
  #L198492.  goto L198474;
  #L198494.  call temp:= `toList`(v1) @signature `Lkotlin/collections/CollectionsKt;.toList:(Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L19849a.  v0:= temp @kind object;
  #L19849c.  goto L1984a0;
  #L19849e.  v0:= 0I;
  #L1984a0.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.ConnectionSpec` v4 @kind this) @signature `Lokhttp3/ConnectionSpec;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1982ec.  v0:= v4.`okhttp3.ConnectionSpec.a` @type ^`boolean` @kind boolean;
  #L1982f0.  if v0 != 0 then goto L1982fa;
  #L1982f4.  v0:= "ConnectionSpec()" @kind object;
  #L1982f8.  return v0 @kind object;
  #L1982fa.  v0:= new `java.lang.StringBuilder`;
  #L1982fe.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L198304.  v1:= "ConnectionSpec(" @kind object;
  #L198308.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19830e.  v1:= "cipherSuites=" @kind object;
  #L198312.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L198318.  call temp:= `cipherSuites`(v4) @signature `Lokhttp3/ConnectionSpec;.cipherSuites:()Ljava/util/List;` @kind virtual;
  #L19831e.  v1:= temp @kind object;
  #L198320.  v2:= "[all enabled]" @kind object;
  #L198324.  call temp:= `toString`(v1, v2) @signature `Ljava/util/Objects;.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L19832a.  v1:= temp @kind object;
  #L19832c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L198332.  v1:= ", " @kind object;
  #L198336.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19833c.  v3:= "tlsVersions=" @kind object;
  #L198340.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L198346.  call temp:= `tlsVersions`(v4) @signature `Lokhttp3/ConnectionSpec;.tlsVersions:()Ljava/util/List;` @kind virtual;
  #L19834c.  v3:= temp @kind object;
  #L19834e.  call temp:= `toString`(v3, v2) @signature `Ljava/util/Objects;.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L198354.  v2:= temp @kind object;
  #L198356.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19835c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L198362.  v1:= "supportsTlsExtensions=" @kind object;
  #L198366.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19836c.  v1:= v4.`okhttp3.ConnectionSpec.b` @type ^`boolean` @kind boolean;
  #L198370.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L198376.  v1:= 41I;
  #L19837a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L198380.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L198386.  v0:= temp @kind object;
  #L198388.  return v0 @kind object;
}
