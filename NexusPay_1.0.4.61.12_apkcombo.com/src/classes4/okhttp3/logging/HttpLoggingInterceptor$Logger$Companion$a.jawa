record `okhttp3.logging.HttpLoggingInterceptor$Logger$Companion$a` @kind class @AccessFlag FINAL extends `okhttp3.logging.HttpLoggingInterceptor$Logger` @kind interface {
}
procedure `void` `<init>`(`okhttp3.logging.HttpLoggingInterceptor$Logger$Companion$a` v0 @kind this) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger$Companion$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1c7538.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c753e.  return @kind void;
}
procedure `void` `log`(`okhttp3.logging.HttpLoggingInterceptor$Logger$Companion$a` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/logging/HttpLoggingInterceptor$Logger$Companion$a;.log:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1c7550.  v0:= "message" @kind object;
  #L1c7554.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1c755a.  v0:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L1c755e.  call temp:= `get`(v0) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L1c7564.  v1:= temp @kind object;
  #L1c7566.  v3:= 0I;
  #L1c7568.  v4:= 0I;
  #L1c756a.  v5:= 6I;
  #L1c756c.  v6:= 0I;
  #L1c756e.  v2:= v8 @kind object;
  #L1c7570.  call `log$default`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/platform/Platform;.log$default:(Lokhttp3/internal/platform/Platform;Ljava/lang/String;ILjava/lang/Throwable;ILjava/lang/Object;)V` @kind static;
  #L1c7576.  return @kind void;
}
