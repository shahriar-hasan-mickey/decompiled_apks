record `okhttp3.Cache` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface, `java.io.Flushable` @kind interface {
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.Cache.a` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.Cache.b` @AccessFlag PRIVATE;
  `int` `okhttp3.Cache.c` @AccessFlag PRIVATE;
  `int` `okhttp3.Cache.d` @AccessFlag PRIVATE;
  `int` `okhttp3.Cache.e` @AccessFlag PRIVATE;
  `int` `okhttp3.Cache.f` @AccessFlag PRIVATE;
}
global `okhttp3.Cache$Companion` `@@okhttp3.Cache.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Cache;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L195920.  v0:= new `okhttp3.Cache$Companion`;
  #L195924.  v1:= 0I;
  #L195926.  call `<init>`(v0, v1) @signature `Lokhttp3/Cache$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L19592c.  `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` := v0 @kind object;
  #L195930.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache` v1 @kind this, `java.io.File` v2 @kind object, `long` v3 ) @signature `Lokhttp3/Cache;.<init>:(Ljava/io/File;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L195944.  v0:= "directory" @kind object;
  #L195948.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19594e.  v0:= `@@okhttp3.internal.io.FileSystem.SYSTEM` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L195952.  call `<init>`(v1, v2, v3, v0) @signature `Lokhttp3/Cache;.<init>:(Ljava/io/File;JLokhttp3/internal/io/FileSystem;)V` @kind direct;
  #L195958.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache` v9 @kind this, `java.io.File` v10 @kind object, `long` v11 , `okhttp3.internal.io.FileSystem` v13 @kind object) @signature `Lokhttp3/Cache;.<init>:(Ljava/io/File;JLokhttp3/internal/io/FileSystem;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L19596c.  v0:= "directory" @kind object;
  #L195970.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L195976.  v0:= "fileSystem" @kind object;
  #L19597a.  call `checkNotNullParameter`(v13, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L195980.  call `<init>`(v9) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L195986.  v0:= new `okhttp3.internal.cache.DiskLruCache`;
  #L19598a.  v8:= `@@okhttp3.internal.concurrent.TaskRunner.INSTANCE` @type ^`okhttp3.internal.concurrent.TaskRunner` @kind object;
  #L19598e.  v4:= 201105I;
  #L195994.  v5:= 2I;
  #L195996.  v1:= v0 @kind object;
  #L195998.  v2:= v13 @kind object;
  #L19599a.  v3:= v10 @kind object;
  #L19599c.  v6:= v11 @kind wide;
  #L19599e.  call `<init>`(v1, v2, v3, v4, v5, v6, v8) @signature `Lokhttp3/internal/cache/DiskLruCache;.<init>:(Lokhttp3/internal/io/FileSystem;Ljava/io/File;IIJLokhttp3/internal/concurrent/TaskRunner;)V` @kind direct;
  #L1959a4.  v9.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` := v0 @kind object;
  #L1959a8.  return @kind void;
}
procedure `void` `a`(`okhttp3.Cache` v0 @kind this, `okhttp3.internal.cache.DiskLruCache$Editor` v1 @kind object) @signature `Lokhttp3/Cache;.a:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L1959bc.  if v1 == 0 then goto L1959c6;
  #L1959c0.  call `abort`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.abort:()V` @kind virtual;
  #L1959c6.  return @kind void;
  catch `java.io.IOException` @[L1959c0..L1959c6] goto L1959c6;
}
procedure `java.lang.String` `key`(`okhttp3.HttpUrl` v1 @kind object) @signature `Lokhttp3/Cache;.key:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1956e0.  v0:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L1956e4.  call temp:= `key`(v0, v1) @signature `Lokhttp3/Cache$Companion;.key:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind virtual;
  #L1956ea.  v1:= temp @kind object;
  #L1956ec.  return v1 @kind object;
}
procedure `java.io.File` `-deprecated_directory`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.-deprecated_directory:()Ljava/io/File;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1956a0.  v0:= v1.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1956a4.  call temp:= `getDirectory`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.getDirectory:()Ljava/io/File;` @kind virtual;
  #L1956aa.  v0:= temp @kind object;
  #L1956ac.  return v0 @kind object;
}
procedure `void` `close`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1959e8.  v0:= v1.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1959ec.  call `close`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.close:()V` @kind virtual;
  #L1959f2.  return @kind void;
}
procedure `void` `delete`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.delete:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L195a04.  v0:= v1.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L195a08.  call `delete`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.delete:()V` @kind virtual;
  #L195a0e.  return @kind void;
}
procedure `java.io.File` `directory`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.directory:()Ljava/io/File;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1956c0.  v0:= v1.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L1956c4.  call temp:= `getDirectory`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.getDirectory:()Ljava/io/File;` @kind virtual;
  #L1956ca.  v0:= temp @kind object;
  #L1956cc.  return v0 @kind object;
}
procedure `void` `evictAll`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.evictAll:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L195a20.  v0:= v1.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L195a24.  call `evictAll`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.evictAll:()V` @kind virtual;
  #L195a2a.  return @kind void;
}
procedure `void` `flush`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L195a3c.  v0:= v1.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L195a40.  call `flush`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.flush:()V` @kind virtual;
  #L195a46.  return @kind void;
}
procedure `okhttp3.Response` `get$okhttp`(`okhttp3.Cache` v4 @kind this, `okhttp3.Request` v5 @kind object) @signature `Lokhttp3/Cache;.get$okhttp:(Lokhttp3/Request;)Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19575c.  v0:= "request" @kind object;
  #L195760.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L195766.  v0:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L19576a.  call temp:= `url`(v5) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L195770.  v1:= temp @kind object;
  #L195772.  call temp:= `key`(v0, v1) @signature `Lokhttp3/Cache$Companion;.key:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind virtual;
  #L195778.  v0:= temp @kind object;
  #L19577a.  v1:= 0I;
  #L19577c.  v2:= v4.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L195780.  call temp:= `get`(v2, v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.get:(Ljava/lang/String;)Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @kind virtual;
  #L195786.  v0:= temp @kind object;
  #L195788.  if v0 == 0 then goto L1957d0;
  #L19578c.  v2:= new `okhttp3.Cache$Entry`;
  #L195790.  v3:= 0I;
  #L195792.  call temp:= `getSource`(v0, v3) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.getSource:(I)Lokio/Source;` @kind virtual;
  #L195798.  v3:= temp @kind object;
  #L19579a.  call `<init>`(v2, v3) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokio/Source;)V` @kind direct;
  #L1957a0.  call temp:= `d`(v2, v0) @signature `Lokhttp3/Cache$Entry;.d:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Lokhttp3/Response;` @kind virtual;
  #L1957a6.  v0:= temp @kind object;
  #L1957a8.  call temp:= `b`(v2, v5, v0) @signature `Lokhttp3/Cache$Entry;.b:(Lokhttp3/Request;Lokhttp3/Response;)Z` @kind virtual;
  #L1957ae.  v5:= temp;
  #L1957b0.  if v5 != 0 then goto L1957c8;
  #L1957b4.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L1957ba.  v5:= temp @kind object;
  #L1957bc.  if v5 == 0 then goto L1957c6;
  #L1957c0.  call `closeQuietly`(v5) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1957c6.  return v1 @kind object;
  #L1957c8.  return v0 @kind object;
  #L1957ca.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1957d0.  return v1 @kind object;
  catch `java.io.IOException` @[L19577c..L195788] goto L1957d0;
  catch `java.io.IOException` @[L19578c..L1957a0] goto L1957ca;
}
procedure `okhttp3.internal.cache.DiskLruCache` `getCache$okhttp`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.getCache$okhttp:()Lokhttp3/internal/cache/DiskLruCache;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L195908.  v0:= v1.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L19590c.  return v0 @kind object;
}
procedure `int` `getWriteAbortCount$okhttp`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.getWriteAbortCount$okhttp:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L195594.  v0:= v1.`okhttp3.Cache.c` @type ^`int`;
  #L195598.  return v0;
}
procedure `int` `getWriteSuccessCount$okhttp`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.getWriteSuccessCount$okhttp:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1955ac.  v0:= v1.`okhttp3.Cache.b` @type ^`int`;
  #L1955b0.  return v0;
}
procedure `int` `hitCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.hitCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1955c4.  @monitorenter v1
  #L1955c6.  v0:= v1.`okhttp3.Cache.e` @type ^`int`;
  #L1955ca.  @monitorexit v1
  #L1955cc.  return v0;
  #L1955ce.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1955d0.  @monitorexit v1
  #L1955d2.  throw v0;
  catch `java.lang.Throwable` @[L1955c6..L1955ca] goto L1955ce;
}
procedure `void` `initialize`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.initialize:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L195a58.  v0:= v1.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L195a5c.  call `initialize`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.initialize:()V` @kind virtual;
  #L195a62.  return @kind void;
}
procedure `boolean` `isClosed`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.isClosed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L195574.  v0:= v1.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L195578.  call temp:= `isClosed`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.isClosed:()Z` @kind virtual;
  #L19557e.  v0:= temp;
  #L195580.  return v0;
}
procedure `long` `maxSize`(`okhttp3.Cache` v2 @kind this) @signature `Lokhttp3/Cache;.maxSize:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L19571c.  v0:= v2.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L195720.  call temp:= `getMaxSize`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.getMaxSize:()J` @kind virtual;
  #L195726.  v0:= temp @kind wide;
  #L195728.  return v0 @kind wide;
}
procedure `int` `networkCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.networkCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1955f0.  @monitorenter v1
  #L1955f2.  v0:= v1.`okhttp3.Cache.d` @type ^`int`;
  #L1955f6.  @monitorexit v1
  #L1955f8.  return v0;
  #L1955fa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1955fc.  @monitorexit v1
  #L1955fe.  throw v0;
  catch `java.lang.Throwable` @[L1955f2..L1955f6] goto L1955fa;
}
procedure `okhttp3.internal.cache.CacheRequest` `put$okhttp`(`okhttp3.Cache` v9 @kind this, `okhttp3.Response` v10 @kind object) @signature `Lokhttp3/Cache;.put$okhttp:(Lokhttp3/Response;)Lokhttp3/internal/cache/CacheRequest;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L195800.  v0:= "response" @kind object;
  #L195804.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19580a.  call temp:= `request`(v10) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L195810.  v0:= temp @kind object;
  #L195812.  call temp:= `method`(v0) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L195818.  v0:= temp @kind object;
  #L19581a.  v1:= `@@okhttp3.internal.http.HttpMethod.INSTANCE` @type ^`okhttp3.internal.http.HttpMethod` @kind object;
  #L19581e.  call temp:= `request`(v10) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L195824.  v2:= temp @kind object;
  #L195826.  call temp:= `method`(v2) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L19582c.  v2:= temp @kind object;
  #L19582e.  call temp:= `invalidatesCache`(v1, v2) @signature `Lokhttp3/internal/http/HttpMethod;.invalidatesCache:(Ljava/lang/String;)Z` @kind virtual;
  #L195834.  v1:= temp;
  #L195836.  v2:= 0I;
  #L195838.  if v1 == 0 then goto L19584c;
  #L19583c.  call temp:= `request`(v10) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L195842.  v10:= temp @kind object;
  #L195844.  call `remove$okhttp`(v9, v10) @signature `Lokhttp3/Cache;.remove$okhttp:(Lokhttp3/Request;)V` @kind virtual;
  #L19584a.  return v2 @kind object;
  #L19584c.  v1:= "GET" @kind object;
  #L195850.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L195856.  v0:= temp;
  #L195858.  v0:= v0 ^~ 1;
  #L19585c.  if v0 == 0 then goto L195862;
  #L195860.  return v2 @kind object;
  #L195862.  v0:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L195866.  call temp:= `hasVaryAll`(v0, v10) @signature `Lokhttp3/Cache$Companion;.hasVaryAll:(Lokhttp3/Response;)Z` @kind virtual;
  #L19586c.  v0:= temp;
  #L19586e.  if v0 == 0 then goto L195874;
  #L195872.  return v2 @kind object;
  #L195874.  v0:= new `okhttp3.Cache$Entry`;
  #L195878.  call `<init>`(v0, v10) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @kind direct;
  #L19587e.  v3:= v9.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L195882.  v1:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L195886.  call temp:= `request`(v10) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L19588c.  v10:= temp @kind object;
  #L19588e.  call temp:= `url`(v10) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L195894.  v10:= temp @kind object;
  #L195896.  call temp:= `key`(v1, v10) @signature `Lokhttp3/Cache$Companion;.key:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind virtual;
  #L19589c.  v4:= temp @kind object;
  #L19589e.  v5:= 0L;
  #L1958a2.  v7:= 2I;
  #L1958a4.  v8:= 0I;
  #L1958a6.  call temp:= `edit$default`(v3, v4, v5, v7, v8) @signature `Lokhttp3/internal/cache/DiskLruCache;.edit$default:(Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;JILjava/lang/Object;)Lokhttp3/internal/cache/DiskLruCache$Editor;` @kind static;
  #L1958ac.  v10:= temp @kind object;
  #L1958ae.  if v10 == 0 then goto L1958c4;
  #L1958b2.  call `f`(v0, v10) @signature `Lokhttp3/Cache$Entry;.f:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @kind virtual;
  #L1958b8.  v0:= new `okhttp3.Cache$RealCacheRequest`;
  #L1958bc.  call `<init>`(v0, v9, v10) @signature `Lokhttp3/Cache$RealCacheRequest;.<init>:(Lokhttp3/Cache;Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @kind direct;
  #L1958c2.  return v0 @kind object;
  #L1958c4.  return v2 @kind object;
  #L1958c6.  v10:= v2 @kind object;
  #L1958c8.  call `a`(v9, v10) @signature `Lokhttp3/Cache;.a:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @kind direct;
  #L1958ce.  return v2 @kind object;
  catch `java.io.IOException` @[L19583c..L19584a] goto L19584a;
  catch `java.io.IOException` @[L19587e..L1958ae] goto L1958c6;
  catch `java.io.IOException` @[L1958b2..L1958c2] goto L1958c8;
}
procedure `void` `remove$okhttp`(`okhttp3.Cache` v2 @kind this, `okhttp3.Request` v3 @kind object) @signature `Lokhttp3/Cache;.remove$okhttp:(Lokhttp3/Request;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L195a74.  v0:= "request" @kind object;
  #L195a78.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L195a7e.  v0:= v2.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L195a82.  v1:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L195a86.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L195a8c.  v3:= temp @kind object;
  #L195a8e.  call temp:= `key`(v1, v3) @signature `Lokhttp3/Cache$Companion;.key:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind virtual;
  #L195a94.  v3:= temp @kind object;
  #L195a96.  call temp:= `remove`(v0, v3) @signature `Lokhttp3/internal/cache/DiskLruCache;.remove:(Ljava/lang/String;)Z` @kind virtual;
  #L195a9c.  return @kind void;
}
procedure `int` `requestCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.requestCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19561c.  @monitorenter v1
  #L19561e.  v0:= v1.`okhttp3.Cache.f` @type ^`int`;
  #L195622.  @monitorexit v1
  #L195624.  return v0;
  #L195626.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L195628.  @monitorexit v1
  #L19562a.  throw v0;
  catch `java.lang.Throwable` @[L19561e..L195622] goto L195626;
}
procedure `void` `setWriteAbortCount$okhttp`(`okhttp3.Cache` v0 @kind this, `int` v1 ) @signature `Lokhttp3/Cache;.setWriteAbortCount$okhttp:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L195ab0.  v0.`okhttp3.Cache.c` @type ^`int` := v1;
  #L195ab4.  return @kind void;
}
procedure `void` `setWriteSuccessCount$okhttp`(`okhttp3.Cache` v0 @kind this, `int` v1 ) @signature `Lokhttp3/Cache;.setWriteSuccessCount$okhttp:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L195ac8.  v0.`okhttp3.Cache.b` @type ^`int` := v1;
  #L195acc.  return @kind void;
}
procedure `long` `size`(`okhttp3.Cache` v2 @kind this) @signature `Lokhttp3/Cache;.size:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L19573c.  v0:= v2.`okhttp3.Cache.a` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L195740.  call temp:= `size`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.size:()J` @kind virtual;
  #L195746.  v0:= temp @kind wide;
  #L195748.  return v0 @kind wide;
}
procedure `void` `trackConditionalCacheHit$okhttp`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.trackConditionalCacheHit$okhttp:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L195ae0.  @monitorenter v1
  #L195ae2.  v0:= v1.`okhttp3.Cache.e` @type ^`int`;
  #L195ae6.  v0:= v0 + 1;
  #L195aea.  v1.`okhttp3.Cache.e` @type ^`int` := v0;
  #L195aee.  @monitorexit v1
  #L195af0.  return @kind void;
  #L195af2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L195af4.  @monitorexit v1
  #L195af6.  throw v0;
  catch `java.lang.Throwable` @[L195ae2..L195aee] goto L195af2;
}
procedure `void` `trackResponse$okhttp`(`okhttp3.Cache` v1 @kind this, `okhttp3.internal.cache.CacheStrategy` v2 @kind object) @signature `Lokhttp3/Cache;.trackResponse$okhttp:(Lokhttp3/internal/cache/CacheStrategy;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L195b14.  @monitorenter v1
  #L195b16.  v0:= "cacheStrategy" @kind object;
  #L195b1a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L195b20.  v0:= v1.`okhttp3.Cache.f` @type ^`int`;
  #L195b24.  v0:= v0 + 1;
  #L195b28.  v1.`okhttp3.Cache.f` @type ^`int` := v0;
  #L195b2c.  call temp:= `getNetworkRequest`(v2) @signature `Lokhttp3/internal/cache/CacheStrategy;.getNetworkRequest:()Lokhttp3/Request;` @kind virtual;
  #L195b32.  v0:= temp @kind object;
  #L195b34.  if v0 == 0 then goto L195b46;
  #L195b38.  v2:= v1.`okhttp3.Cache.d` @type ^`int`;
  #L195b3c.  v2:= v2 + 1;
  #L195b40.  v1.`okhttp3.Cache.d` @type ^`int` := v2;
  #L195b44.  goto L195b5e;
  #L195b46.  call temp:= `getCacheResponse`(v2) @signature `Lokhttp3/internal/cache/CacheStrategy;.getCacheResponse:()Lokhttp3/Response;` @kind virtual;
  #L195b4c.  v2:= temp @kind object;
  #L195b4e.  if v2 == 0 then goto L195b5e;
  #L195b52.  v2:= v1.`okhttp3.Cache.e` @type ^`int`;
  #L195b56.  v2:= v2 + 1;
  #L195b5a.  v1.`okhttp3.Cache.e` @type ^`int` := v2;
  #L195b5e.  @monitorexit v1
  #L195b60.  return @kind void;
  #L195b62.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L195b64.  @monitorexit v1
  #L195b66.  throw v2;
  catch `java.lang.Throwable` @[L195b16..L195b5e] goto L195b62;
}
procedure `void` `update$okhttp`(`okhttp3.Cache` v1 @kind this, `okhttp3.Response` v2 @kind object, `okhttp3.Response` v3 @kind object) @signature `Lokhttp3/Cache;.update$okhttp:(Lokhttp3/Response;Lokhttp3/Response;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L195b84.  v0:= "cached" @kind object;
  #L195b88.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L195b8e.  v0:= "network" @kind object;
  #L195b92.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L195b98.  v0:= new `okhttp3.Cache$Entry`;
  #L195b9c.  call `<init>`(v0, v3) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @kind direct;
  #L195ba2.  call temp:= `body`(v2) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L195ba8.  v2:= temp @kind object;
  #L195baa.  if v2 == 0 then goto L195be0;
  #L195bae.  v2:= (`okhttp3.Cache$CacheResponseBody`) v2 @kind object;
  #L195bb2.  call temp:= `a`(v2) @signature `Lokhttp3/Cache$CacheResponseBody;.a:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @kind virtual;
  #L195bb8.  v2:= temp @kind object;
  #L195bba.  v3:= 0I;
  #L195bbc.  call temp:= `edit`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.edit:()Lokhttp3/internal/cache/DiskLruCache$Editor;` @kind virtual;
  #L195bc2.  v3:= temp @kind object;
  #L195bc4.  if v3 == 0 then goto L195bd6;
  #L195bc8.  call `f`(v0, v3) @signature `Lokhttp3/Cache$Entry;.f:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @kind virtual;
  #L195bce.  call `commit`(v3) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.commit:()V` @kind virtual;
  #L195bd4.  goto L195bde;
  #L195bd6.  return @kind void;
  #L195bd8.  call `a`(v1, v3) @signature `Lokhttp3/Cache;.a:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @kind direct;
  #L195bde.  return @kind void;
  #L195be0.  v2:= new `java.lang.NullPointerException`;
  #L195be4.  v3:= "null cannot be cast to non-null type okhttp3.Cache.CacheResponseBody" @kind object;
  #L195be8.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L195bee.  throw v2;
  catch `java.io.IOException` @[L195bbc..L195bd4] goto L195bd8;
}
procedure `java.util.Iterator` `urls`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.urls:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L195700.  v0:= new `okhttp3.Cache$urls$1`;
  #L195704.  call `<init>`(v0, v1) @signature `Lokhttp3/Cache$urls$1;.<init>:(Lokhttp3/Cache;)V` @kind direct;
  #L19570a.  return v0 @kind object;
}
procedure `int` `writeAbortCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.writeAbortCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L195648.  @monitorenter v1
  #L19564a.  v0:= v1.`okhttp3.Cache.c` @type ^`int`;
  #L19564e.  @monitorexit v1
  #L195650.  return v0;
  #L195652.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L195654.  @monitorexit v1
  #L195656.  throw v0;
  catch `java.lang.Throwable` @[L19564a..L19564e] goto L195652;
}
procedure `int` `writeSuccessCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.writeSuccessCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L195674.  @monitorenter v1
  #L195676.  v0:= v1.`okhttp3.Cache.b` @type ^`int`;
  #L19567a.  @monitorexit v1
  #L19567c.  return v0;
  #L19567e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L195680.  @monitorexit v1
  #L195682.  throw v0;
  catch `java.lang.Throwable` @[L195676..L19567a] goto L19567e;
}
