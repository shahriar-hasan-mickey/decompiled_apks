record `okhttp3.ConnectionPool` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.internal.connection.RealConnectionPool` `okhttp3.ConnectionPool.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.ConnectionPool` v4 @kind this) @signature `Lokhttp3/ConnectionPool;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L197c1c.  v0:= `@@java.util.concurrent.TimeUnit.MINUTES` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L197c20.  v1:= 5I;
  #L197c22.  v2:= 5L;
  #L197c26.  call `<init>`(v4, v1, v2, v0) @signature `Lokhttp3/ConnectionPool;.<init>:(IJLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L197c2c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.ConnectionPool` v7 @kind this, `int` v8 , `long` v9 , `java.util.concurrent.TimeUnit` v11 @kind object) @signature `Lokhttp3/ConnectionPool;.<init>:(IJLjava/util/concurrent/TimeUnit;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L197c40.  v0:= "timeUnit" @kind object;
  #L197c44.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L197c4a.  v0:= new `okhttp3.internal.connection.RealConnectionPool`;
  #L197c4e.  v2:= `@@okhttp3.internal.concurrent.TaskRunner.INSTANCE` @type ^`okhttp3.internal.concurrent.TaskRunner` @kind object;
  #L197c52.  v1:= v0 @kind object;
  #L197c54.  v3:= v8;
  #L197c56.  v4:= v9 @kind wide;
  #L197c58.  v6:= v11 @kind object;
  #L197c5a.  call `<init>`(v1, v2, v3, v4, v6) @signature `Lokhttp3/internal/connection/RealConnectionPool;.<init>:(Lokhttp3/internal/concurrent/TaskRunner;IJLjava/util/concurrent/TimeUnit;)V` @kind direct;
  #L197c60.  call `<init>`(v7, v0) @signature `Lokhttp3/ConnectionPool;.<init>:(Lokhttp3/internal/connection/RealConnectionPool;)V` @kind direct;
  #L197c66.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.ConnectionPool` v1 @kind this, `okhttp3.internal.connection.RealConnectionPool` v2 @kind object) @signature `Lokhttp3/ConnectionPool;.<init>:(Lokhttp3/internal/connection/RealConnectionPool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L197c78.  v0:= "delegate" @kind object;
  #L197c7c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L197c82.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L197c88.  v1.`okhttp3.ConnectionPool.a` @type ^`okhttp3.internal.connection.RealConnectionPool` := v2 @kind object;
  #L197c8c.  return @kind void;
}
procedure `int` `connectionCount`(`okhttp3.ConnectionPool` v1 @kind this) @signature `Lokhttp3/ConnectionPool;.connectionCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L197bc4.  v0:= v1.`okhttp3.ConnectionPool.a` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L197bc8.  call temp:= `connectionCount`(v0) @signature `Lokhttp3/internal/connection/RealConnectionPool;.connectionCount:()I` @kind virtual;
  #L197bce.  v0:= temp;
  #L197bd0.  return v0;
}
procedure `void` `evictAll`(`okhttp3.ConnectionPool` v1 @kind this) @signature `Lokhttp3/ConnectionPool;.evictAll:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L197ca0.  v0:= v1.`okhttp3.ConnectionPool.a` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L197ca4.  call `evictAll`(v0) @signature `Lokhttp3/internal/connection/RealConnectionPool;.evictAll:()V` @kind virtual;
  #L197caa.  return @kind void;
}
procedure `okhttp3.internal.connection.RealConnectionPool` `getDelegate$okhttp`(`okhttp3.ConnectionPool` v1 @kind this) @signature `Lokhttp3/ConnectionPool;.getDelegate$okhttp:()Lokhttp3/internal/connection/RealConnectionPool;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L197c04.  v0:= v1.`okhttp3.ConnectionPool.a` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L197c08.  return v0 @kind object;
}
procedure `int` `idleConnectionCount`(`okhttp3.ConnectionPool` v1 @kind this) @signature `Lokhttp3/ConnectionPool;.idleConnectionCount:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L197be4.  v0:= v1.`okhttp3.ConnectionPool.a` @type ^`okhttp3.internal.connection.RealConnectionPool` @kind object;
  #L197be8.  call temp:= `idleConnectionCount`(v0) @signature `Lokhttp3/internal/connection/RealConnectionPool;.idleConnectionCount:()I` @kind virtual;
  #L197bee.  v0:= temp;
  #L197bf0.  return v0;
}
