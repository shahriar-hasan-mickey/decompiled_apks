record `okhttp3.CertificatePinner$Pin` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.CertificatePinner$Pin.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.CertificatePinner$Pin.b` @AccessFlag PRIVATE_FINAL;
  `okio.ByteString` `okhttp3.CertificatePinner$Pin.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.CertificatePinner$Pin` v11 @kind this, `java.lang.String` v12 @kind object, `java.lang.String` v13 @kind object) @signature `Lokhttp3/CertificatePinner$Pin;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L19611c.  v0:= "pattern" @kind object;
  #L196120.  call `checkNotNullParameter`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L196126.  v0:= "pin" @kind object;
  #L19612a.  call `checkNotNullParameter`(v13, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L196130.  call `<init>`(v11) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L196136.  v0:= "*." @kind object;
  #L19613a.  v1:= 0I;
  #L19613c.  v2:= 2I;
  #L19613e.  v3:= 0I;
  #L196140.  call temp:= `startsWith$default`(v12, v0, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L196146.  v0:= temp;
  #L196148.  v4:= -1I;
  #L19614a.  if v0 == 0 then goto L196168;
  #L19614e.  v7:= 1I;
  #L196150.  v8:= 0I;
  #L196152.  v9:= 4I;
  #L196154.  v10:= 0I;
  #L196156.  v6:= "*" @kind object;
  #L19615a.  v5:= v12 @kind object;
  #L19615c.  call temp:= `indexOf$default`(v5, v6, v7, v8, v9, v10) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;Ljava/lang/String;IZILjava/lang/Object;)I` @kind static;
  #L196162.  v0:= temp;
  #L196164.  if v0 == v4 then goto L1961ac;
  #L196168.  v0:= "**." @kind object;
  #L19616c.  call temp:= `startsWith$default`(v12, v0, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L196172.  v0:= temp;
  #L196174.  if v0 == 0 then goto L196192;
  #L196178.  v7:= 2I;
  #L19617a.  v8:= 0I;
  #L19617c.  v9:= 4I;
  #L19617e.  v10:= 0I;
  #L196180.  v6:= "*" @kind object;
  #L196184.  v5:= v12 @kind object;
  #L196186.  call temp:= `indexOf$default`(v5, v6, v7, v8, v9, v10) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;Ljava/lang/String;IZILjava/lang/Object;)I` @kind static;
  #L19618c.  v0:= temp;
  #L19618e.  if v0 == v4 then goto L1961ac;
  #L196192.  v7:= 0I;
  #L196194.  v8:= 0I;
  #L196196.  v9:= 6I;
  #L196198.  v10:= 0I;
  #L19619a.  v6:= "*" @kind object;
  #L19619e.  v5:= v12 @kind object;
  #L1961a0.  call temp:= `indexOf$default`(v5, v6, v7, v8, v9, v10) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;Ljava/lang/String;IZILjava/lang/Object;)I` @kind static;
  #L1961a6.  v0:= temp;
  #L1961a8.  if v0 != v4 then goto L1961b0;
  #L1961ac.  v0:= 1I;
  #L1961ae.  goto L1961b2;
  #L1961b0.  v0:= 0I;
  #L1961b2.  if v0 == 0 then goto L1962fa;
  #L1961b6.  call temp:= `toCanonicalHost`(v12) @signature `Lokhttp3/internal/HostnamesKt;.toCanonicalHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1961bc.  v0:= temp @kind object;
  #L1961be.  if v0 == 0 then goto L1962cc;
  #L1961c2.  v11.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` := v0 @kind object;
  #L1961c6.  v12:= "sha1/" @kind object;
  #L1961ca.  call temp:= `startsWith$default`(v13, v12, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1961d0.  v12:= temp;
  #L1961d2.  v0:= "Invalid pin hash: " @kind object;
  #L1961d6.  v4:= "(this as java.lang.String).substring(startIndex)" @kind object;
  #L1961da.  if v12 == 0 then goto L196236;
  #L1961de.  v12:= "sha1" @kind object;
  #L1961e2.  v11.`okhttp3.CertificatePinner$Pin.b` @type ^`java.lang.String` := v12 @kind object;
  #L1961e6.  v12:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1961ea.  v1:= 5I;
  #L1961ec.  call temp:= `substring`(v13, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1961f2.  v1:= temp @kind object;
  #L1961f4.  call `checkNotNullExpressionValue`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1961fa.  call temp:= `decodeBase64`(v12, v1) @signature `Lokio/ByteString$Companion;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L196200.  v12:= temp @kind object;
  #L196202.  if v12 == 0 then goto L19620c;
  #L196206.  v11.`okhttp3.CertificatePinner$Pin.c` @type ^`okio.ByteString` := v12 @kind object;
  #L19620a.  goto L196272;
  #L19620c.  v12:= new `java.lang.IllegalArgumentException`;
  #L196210.  v1:= new `java.lang.StringBuilder`;
  #L196214.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19621a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L196220.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L196226.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19622c.  v13:= temp @kind object;
  #L19622e.  call `<init>`(v12, v13) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L196234.  throw v12;
  #L196236.  v12:= "sha256/" @kind object;
  #L19623a.  call temp:= `startsWith$default`(v13, v12, v1, v2, v3) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L196240.  v12:= temp;
  #L196242.  if v12 == 0 then goto L19629e;
  #L196246.  v12:= "sha256" @kind object;
  #L19624a.  v11.`okhttp3.CertificatePinner$Pin.b` @type ^`java.lang.String` := v12 @kind object;
  #L19624e.  v12:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L196252.  v1:= 7I;
  #L196254.  call temp:= `substring`(v13, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L19625a.  v1:= temp @kind object;
  #L19625c.  call `checkNotNullExpressionValue`(v1, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L196262.  call temp:= `decodeBase64`(v12, v1) @signature `Lokio/ByteString$Companion;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L196268.  v12:= temp @kind object;
  #L19626a.  if v12 == 0 then goto L196274;
  #L19626e.  v11.`okhttp3.CertificatePinner$Pin.c` @type ^`okio.ByteString` := v12 @kind object;
  #L196272.  return @kind void;
  #L196274.  v12:= new `java.lang.IllegalArgumentException`;
  #L196278.  v1:= new `java.lang.StringBuilder`;
  #L19627c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L196282.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L196288.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19628e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L196294.  v13:= temp @kind object;
  #L196296.  call `<init>`(v12, v13) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19629c.  throw v12;
  #L19629e.  v12:= new `java.lang.IllegalArgumentException`;
  #L1962a2.  v0:= new `java.lang.StringBuilder`;
  #L1962a6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1962ac.  v1:= "pins must start with 'sha256/' or 'sha1/': " @kind object;
  #L1962b0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1962b6.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1962bc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1962c2.  v13:= temp @kind object;
  #L1962c4.  call `<init>`(v12, v13) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1962ca.  throw v12;
  #L1962cc.  v13:= new `java.lang.IllegalArgumentException`;
  #L1962d0.  v0:= new `java.lang.StringBuilder`;
  #L1962d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1962da.  v1:= "Invalid pattern: " @kind object;
  #L1962de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1962e4.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1962ea.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1962f0.  v12:= temp @kind object;
  #L1962f2.  call `<init>`(v13, v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1962f8.  throw v13;
  #L1962fa.  v13:= new `java.lang.StringBuilder`;
  #L1962fe.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L196304.  v0:= "Unexpected pattern: " @kind object;
  #L196308.  call temp:= `append`(v13, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19630e.  call temp:= `append`(v13, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L196314.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19631a.  v12:= temp @kind object;
  #L19631c.  v13:= new `java.lang.IllegalArgumentException`;
  #L196320.  call temp:= `toString`(v12) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L196326.  v12:= temp @kind object;
  #L196328.  call `<init>`(v13, v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19632e.  throw v13;
}
procedure `boolean` `equals`(`okhttp3.CertificatePinner$Pin` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lokhttp3/CertificatePinner$Pin;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L195e24.  v0:= 1I;
  #L195e26.  if v4 != v5 then goto L195e2c;
  #L195e2a.  return v0;
  #L195e2c.  v1:= instanceof @variable v5 @type ^`okhttp3.CertificatePinner$Pin` @kind boolean;
  #L195e30.  v2:= 0I;
  #L195e32.  if v1 != 0 then goto L195e38;
  #L195e36.  return v2;
  #L195e38.  v1:= v4.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L195e3c.  v5:= (`okhttp3.CertificatePinner$Pin`) v5 @kind object;
  #L195e40.  v3:= v5.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L195e44.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L195e4a.  v1:= temp;
  #L195e4c.  v1:= v1 ^~ v0 @kind int;
  #L195e4e.  if v1 == 0 then goto L195e54;
  #L195e52.  return v2;
  #L195e54.  v1:= v4.`okhttp3.CertificatePinner$Pin.b` @type ^`java.lang.String` @kind object;
  #L195e58.  v3:= v5.`okhttp3.CertificatePinner$Pin.b` @type ^`java.lang.String` @kind object;
  #L195e5c.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L195e62.  v1:= temp;
  #L195e64.  v1:= v1 ^~ v0 @kind int;
  #L195e66.  if v1 == 0 then goto L195e6c;
  #L195e6a.  return v2;
  #L195e6c.  v1:= v4.`okhttp3.CertificatePinner$Pin.c` @type ^`okio.ByteString` @kind object;
  #L195e70.  v5:= v5.`okhttp3.CertificatePinner$Pin.c` @type ^`okio.ByteString` @kind object;
  #L195e74.  call temp:= `areEqual`(v1, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L195e7a.  v5:= temp;
  #L195e7c.  v5:= v5 ^~ v0 @kind int;
  #L195e7e.  if v5 == 0 then goto L195e84;
  #L195e82.  return v2;
  #L195e84.  return v0;
}
procedure `okio.ByteString` `getHash`(`okhttp3.CertificatePinner$Pin` v1 @kind this) @signature `Lokhttp3/CertificatePinner$Pin;.getHash:()Lokio/ByteString;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L196104.  v0:= v1.`okhttp3.CertificatePinner$Pin.c` @type ^`okio.ByteString` @kind object;
  #L196108.  return v0 @kind object;
}
procedure `java.lang.String` `getHashAlgorithm`(`okhttp3.CertificatePinner$Pin` v1 @kind this) @signature `Lokhttp3/CertificatePinner$Pin;.getHashAlgorithm:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L196088.  v0:= v1.`okhttp3.CertificatePinner$Pin.b` @type ^`java.lang.String` @kind object;
  #L19608c.  return v0 @kind object;
}
procedure `java.lang.String` `getPattern`(`okhttp3.CertificatePinner$Pin` v1 @kind this) @signature `Lokhttp3/CertificatePinner$Pin;.getPattern:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1960a0.  v0:= v1.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L1960a4.  return v0 @kind object;
}
procedure `int` `hashCode`(`okhttp3.CertificatePinner$Pin` v2 @kind this) @signature `Lokhttp3/CertificatePinner$Pin;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L196044.  v0:= v2.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L196048.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L19604e.  v0:= temp;
  #L196050.  v0:= v0 * 31;
  #L196054.  v1:= v2.`okhttp3.CertificatePinner$Pin.b` @type ^`java.lang.String` @kind object;
  #L196058.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L19605e.  v1:= temp;
  #L196060.  v0:= v0 + v1 @kind int;
  #L196062.  v0:= v0 * 31;
  #L196066.  v1:= v2.`okhttp3.CertificatePinner$Pin.c` @type ^`okio.ByteString` @kind object;
  #L19606a.  call temp:= `hashCode`(v1) @signature `Lokio/ByteString;.hashCode:()I` @kind virtual;
  #L196070.  v1:= temp;
  #L196072.  v0:= v0 + v1 @kind int;
  #L196074.  return v0;
}
procedure `boolean` `matchesCertificate`(`okhttp3.CertificatePinner$Pin` v3 @kind this, `java.security.cert.X509Certificate` v4 @kind object) @signature `Lokhttp3/CertificatePinner$Pin;.matchesCertificate:(Ljava/security/cert/X509Certificate;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L195e98.  v0:= "certificate" @kind object;
  #L195e9c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L195ea2.  v0:= v3.`okhttp3.CertificatePinner$Pin.b` @type ^`java.lang.String` @kind object;
  #L195ea6.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L195eac.  v1:= temp;
  #L195eae.  v2:= -903629273I;
  #L195eb4.  if v1 == v2 then goto L195eee;
  #L195eb8.  v2:= 3528965I;
  #L195ebe.  if v1 == v2 then goto L195ec4;
  #L195ec2.  goto L195f18;
  #L195ec4.  v1:= "sha1" @kind object;
  #L195ec8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L195ece.  v0:= temp;
  #L195ed0.  if v0 == 0 then goto L195f18;
  #L195ed4.  v0:= v3.`okhttp3.CertificatePinner$Pin.c` @type ^`okio.ByteString` @kind object;
  #L195ed8.  v1:= `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` @kind object;
  #L195edc.  call temp:= `sha1Hash`(v1, v4) @signature `Lokhttp3/CertificatePinner$Companion;.sha1Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind virtual;
  #L195ee2.  v4:= temp @kind object;
  #L195ee4.  call temp:= `areEqual`(v0, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L195eea.  v4:= temp;
  #L195eec.  goto L195f1a;
  #L195eee.  v1:= "sha256" @kind object;
  #L195ef2.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L195ef8.  v0:= temp;
  #L195efa.  if v0 == 0 then goto L195f18;
  #L195efe.  v0:= v3.`okhttp3.CertificatePinner$Pin.c` @type ^`okio.ByteString` @kind object;
  #L195f02.  v1:= `@@okhttp3.CertificatePinner.Companion` @type ^`okhttp3.CertificatePinner$Companion` @kind object;
  #L195f06.  call temp:= `sha256Hash`(v1, v4) @signature `Lokhttp3/CertificatePinner$Companion;.sha256Hash:(Ljava/security/cert/X509Certificate;)Lokio/ByteString;` @kind virtual;
  #L195f0c.  v4:= temp @kind object;
  #L195f0e.  call temp:= `areEqual`(v0, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L195f14.  v4:= temp;
  #L195f16.  goto L195f1a;
  #L195f18.  v4:= 0I;
  #L195f1a.  return v4;
}
procedure `boolean` `matchesHostname`(`okhttp3.CertificatePinner$Pin` v11 @kind this, `java.lang.String` v12 @kind object) @signature `Lokhttp3/CertificatePinner$Pin;.matchesHostname:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L195f2c.  v0:= "hostname" @kind object;
  #L195f30.  call `checkNotNullParameter`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L195f36.  v0:= v11.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L195f3a.  v1:= "**." @kind object;
  #L195f3e.  v2:= 0I;
  #L195f40.  v3:= 2I;
  #L195f42.  v4:= 0I;
  #L195f44.  call temp:= `startsWith$default`(v0, v1, v2, v3, v4) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L195f4a.  v0:= temp;
  #L195f4c.  v1:= 1I;
  #L195f4e.  if v0 == 0 then goto L195fae;
  #L195f52.  v0:= v11.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L195f56.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L195f5c.  v0:= temp;
  #L195f5e.  v7:= v0 + -3;
  #L195f62.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L195f68.  v0:= temp;
  #L195f6a.  v0:= v0 - v7 @kind int;
  #L195f6c.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L195f72.  v3:= temp;
  #L195f74.  v4:= v3 - v7 @kind int;
  #L195f78.  v5:= v11.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L195f7c.  v6:= 3I;
  #L195f7e.  v8:= 0I;
  #L195f80.  v9:= 16I;
  #L195f84.  v10:= 0I;
  #L195f86.  v3:= v12 @kind object;
  #L195f88.  call temp:= `regionMatches$default`(v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lkotlin/text/StringsKt;.regionMatches$default:(Ljava/lang/String;ILjava/lang/String;IIZILjava/lang/Object;)Z` @kind static;
  #L195f8e.  v3:= temp;
  #L195f90.  if v3 == 0 then goto L196030;
  #L195f94.  if v0 == 0 then goto L195faa;
  #L195f98.  v0:= v0 - v1 @kind int;
  #L195f9a.  call temp:= `charAt`(v12, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L195fa0.  v12:= temp;
  #L195fa2.  v0:= 46I;
  #L195fa6.  if v12 != v0 then goto L196030;
  #L195faa.  v2:= 1I;
  #L195fac.  goto L196030;
  #L195fae.  v0:= v11.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L195fb2.  v5:= "*." @kind object;
  #L195fb6.  call temp:= `startsWith$default`(v0, v5, v2, v3, v4) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L195fbc.  v0:= temp;
  #L195fbe.  if v0 == 0 then goto L196024;
  #L195fc2.  v0:= v11.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L195fc6.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L195fcc.  v0:= temp;
  #L195fce.  v7:= v0 + -1;
  #L195fd2.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L195fd8.  v0:= temp;
  #L195fda.  v0:= v0 - v7 @kind int;
  #L195fdc.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L195fe2.  v3:= temp;
  #L195fe4.  v4:= v3 - v7 @kind int;
  #L195fe8.  v5:= v11.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L195fec.  v6:= 1I;
  #L195fee.  v8:= 0I;
  #L195ff0.  v9:= 16I;
  #L195ff4.  v10:= 0I;
  #L195ff6.  v3:= v12 @kind object;
  #L195ff8.  call temp:= `regionMatches$default`(v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lkotlin/text/StringsKt;.regionMatches$default:(Ljava/lang/String;ILjava/lang/String;IIZILjava/lang/Object;)Z` @kind static;
  #L195ffe.  v3:= temp;
  #L196000.  if v3 == 0 then goto L196030;
  #L196004.  v5:= 46I;
  #L196008.  v6:= v0 + -1;
  #L19600c.  v7:= 0I;
  #L19600e.  v8:= 4I;
  #L196010.  v9:= 0I;
  #L196012.  v4:= v12 @kind object;
  #L196014.  call temp:= `lastIndexOf$default`(v4, v5, v6, v7, v8, v9) @signature `Lkotlin/text/StringsKt;.lastIndexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L19601a.  v12:= temp;
  #L19601c.  v0:= -1I;
  #L19601e.  if v12 != v0 then goto L196030;
  #L196022.  goto L195faa;
  #L196024.  v0:= v11.`okhttp3.CertificatePinner$Pin.a` @type ^`java.lang.String` @kind object;
  #L196028.  call temp:= `areEqual`(v12, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L19602e.  v2:= temp;
  #L196030.  return v2;
}
procedure `java.lang.String` `toString`(`okhttp3.CertificatePinner$Pin` v2 @kind this) @signature `Lokhttp3/CertificatePinner$Pin;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1960b8.  v0:= new `java.lang.StringBuilder`;
  #L1960bc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1960c2.  v1:= v2.`okhttp3.CertificatePinner$Pin.b` @type ^`java.lang.String` @kind object;
  #L1960c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1960cc.  v1:= 47I;
  #L1960d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1960d6.  v1:= v2.`okhttp3.CertificatePinner$Pin.c` @type ^`okio.ByteString` @kind object;
  #L1960da.  call temp:= `base64`(v1) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L1960e0.  v1:= temp @kind object;
  #L1960e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1960e8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1960ee.  v0:= temp @kind object;
  #L1960f0.  return v0 @kind object;
}
