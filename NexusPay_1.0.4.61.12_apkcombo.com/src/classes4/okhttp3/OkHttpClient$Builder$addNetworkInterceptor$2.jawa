record `okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `kotlin.jvm.functions.Function1` `okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2` v0 @kind this, `kotlin.jvm.functions.Function1` v1 @kind object) @signature `Lokhttp3/OkHttpClient$Builder$addNetworkInterceptor$2;.<init>:(Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1a11a4.  v0.`okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2.a` @type ^`kotlin.jvm.functions.Function1` := v1 @kind object;
  #L1a11a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a11ae.  return @kind void;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2` v1 @kind this, `okhttp3.Interceptor$Chain` v2 @kind object) @signature `Lokhttp3/OkHttpClient$Builder$addNetworkInterceptor$2;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a1178.  v0:= "chain" @kind object;
  #L1a117c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a1182.  v0:= v1.`okhttp3.OkHttpClient$Builder$addNetworkInterceptor$2.a` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L1a1186.  call temp:= `invoke`(v0, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a118c.  v2:= temp @kind object;
  #L1a118e.  v2:= (`okhttp3.Response`) v2 @kind object;
  #L1a1192.  return v2 @kind object;
}
