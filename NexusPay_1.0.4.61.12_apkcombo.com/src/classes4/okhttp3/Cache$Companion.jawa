record `okhttp3.Cache$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.Cache$Companion` v0 @kind this) @signature `Lokhttp3/Cache$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L193df4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L193dfa.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/Cache$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L193e0c.  call `<init>`(v0) @signature `Lokhttp3/Cache$Companion;.<init>:()V` @kind direct;
  #L193e12.  return @kind void;
}
procedure `java.util.Set` `a`(`okhttp3.Cache$Companion` v13 @kind this, `okhttp3.Headers` v14 @kind object) @signature `Lokhttp3/Cache$Companion;.a:(Lokhttp3/Headers;)Ljava/util/Set;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L193c54.  call temp:= `size`(v14) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L193c5a.  v0:= temp;
  #L193c5c.  v1:= 0I;
  #L193c5e.  v2:= 0I;
  #L193c60.  v3:= 0I;
  #L193c62.  if v3 >= v0 then goto L193d12;
  #L193c66.  call temp:= `name`(v14, v3) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L193c6c.  v4:= temp @kind object;
  #L193c6e.  v5:= "Vary" @kind object;
  #L193c72.  v6:= 1I;
  #L193c74.  call temp:= `equals`(v5, v4, v6) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L193c7a.  v4:= temp;
  #L193c7c.  if v4 != 0 then goto L193c82;
  #L193c80.  goto L193d0c;
  #L193c82.  call temp:= `value`(v14, v3) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L193c88.  v7:= temp @kind object;
  #L193c8a.  if v2 != 0 then goto L193ca4;
  #L193c8e.  v2:= new `java.util.TreeSet`;
  #L193c92.  v4:= `@@kotlin.jvm.internal.StringCompanionObject.INSTANCE` @type ^`kotlin.jvm.internal.StringCompanionObject` @kind object;
  #L193c96.  call temp:= `getCASE_INSENSITIVE_ORDER`(v4) @signature `Lkotlin/text/StringsKt;.getCASE_INSENSITIVE_ORDER:(Lkotlin/jvm/internal/StringCompanionObject;)Ljava/util/Comparator;` @kind static;
  #L193c9c.  v4:= temp @kind object;
  #L193c9e.  call `<init>`(v2, v4) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L193ca4.  v8:= new `char`[v6];
  #L193ca8.  v4:= 44I;
  #L193cac.  v8[v1]:= v4 @kind char;
  #L193cb0.  v9:= 0I;
  #L193cb2.  v10:= 0I;
  #L193cb4.  v11:= 6I;
  #L193cb6.  v12:= 0I;
  #L193cb8.  call temp:= `split$default`(v7, v8, v9, v10, v11, v12) @signature `Lkotlin/text/StringsKt;.split$default:(Ljava/lang/CharSequence;[CZIILjava/lang/Object;)Ljava/util/List;` @kind static;
  #L193cbe.  v4:= temp @kind object;
  #L193cc0.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L193cc6.  v4:= temp @kind object;
  #L193cc8.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L193cce.  v5:= temp;
  #L193cd0.  if v5 == 0 then goto L193d0c;
  #L193cd4.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L193cda.  v5:= temp @kind object;
  #L193cdc.  v5:= (`java.lang.String`) v5 @kind object;
  #L193ce0.  if v5 == 0 then goto L193cfc;
  #L193ce4.  call temp:= `trim`(v5) @signature `Lkotlin/text/StringsKt;.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L193cea.  v5:= temp @kind object;
  #L193cec.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L193cf2.  v5:= temp @kind object;
  #L193cf4.  call temp:= `add`(v2, v5) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L193cfa.  goto L193cc8;
  #L193cfc.  v14:= new `java.lang.NullPointerException`;
  #L193d00.  v0:= "null cannot be cast to non-null type kotlin.CharSequence" @kind object;
  #L193d04.  call `<init>`(v14, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L193d0a.  throw v14;
  #L193d0c.  v3:= v3 + 1;
  #L193d10.  goto L193c62;
  #L193d12.  if v2 == 0 then goto L193d18;
  #L193d16.  goto L193d20;
  #L193d18.  call temp:= `emptySet`() @signature `Lkotlin/collections/SetsKt;.emptySet:()Ljava/util/Set;` @kind static;
  #L193d1e.  v2:= temp @kind object;
  #L193d20.  return v2 @kind object;
}
procedure `okhttp3.Headers` `b`(`okhttp3.Cache$Companion` v5 @kind this, `okhttp3.Headers` v6 @kind object, `okhttp3.Headers` v7 @kind object) @signature `Lokhttp3/Cache$Companion;.b:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L193d34.  call temp:= `a`(v5, v7) @signature `Lokhttp3/Cache$Companion;.a:(Lokhttp3/Headers;)Ljava/util/Set;` @kind direct;
  #L193d3a.  v7:= temp @kind object;
  #L193d3c.  call temp:= `isEmpty`(v7) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L193d42.  v0:= temp;
  #L193d44.  if v0 == 0 then goto L193d4e;
  #L193d48.  v6:= `@@okhttp3.internal.Util.EMPTY_HEADERS` @type ^`okhttp3.Headers` @kind object;
  #L193d4c.  return v6 @kind object;
  #L193d4e.  v0:= new `okhttp3.Headers$Builder`;
  #L193d52.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L193d58.  v1:= 0I;
  #L193d5a.  call temp:= `size`(v6) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L193d60.  v2:= temp;
  #L193d62.  if v1 >= v2 then goto L193d8e;
  #L193d66.  call temp:= `name`(v6, v1) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L193d6c.  v3:= temp @kind object;
  #L193d6e.  call temp:= `contains`(v7, v3) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L193d74.  v4:= temp;
  #L193d76.  if v4 == 0 then goto L193d88;
  #L193d7a.  call temp:= `value`(v6, v1) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L193d80.  v4:= temp @kind object;
  #L193d82.  call temp:= `add`(v0, v3, v4) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L193d88.  v1:= v1 + 1;
  #L193d8c.  goto L193d62;
  #L193d8e.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L193d94.  v6:= temp @kind object;
  #L193d96.  return v6 @kind object;
}
procedure `boolean` `hasVaryAll`(`okhttp3.Cache$Companion` v1 @kind this, `okhttp3.Response` v2 @kind object) @signature `Lokhttp3/Cache$Companion;.hasVaryAll:(Lokhttp3/Response;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L193a80.  v0:= "$this$hasVaryAll" @kind object;
  #L193a84.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L193a8a.  call temp:= `headers`(v2) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L193a90.  v2:= temp @kind object;
  #L193a92.  call temp:= `a`(v1, v2) @signature `Lokhttp3/Cache$Companion;.a:(Lokhttp3/Headers;)Ljava/util/Set;` @kind direct;
  #L193a98.  v2:= temp @kind object;
  #L193a9a.  v0:= "*" @kind object;
  #L193a9e.  call temp:= `contains`(v2, v0) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L193aa4.  v2:= temp;
  #L193aa6.  return v2;
}
procedure `java.lang.String` `key`(`okhttp3.Cache$Companion` v1 @kind this, `okhttp3.HttpUrl` v2 @kind object) @signature `Lokhttp3/Cache$Companion;.key:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L193c14.  v0:= "url" @kind object;
  #L193c18.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L193c1e.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L193c22.  call temp:= `toString`(v2) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L193c28.  v2:= temp @kind object;
  #L193c2a.  call temp:= `encodeUtf8`(v0, v2) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L193c30.  v2:= temp @kind object;
  #L193c32.  call temp:= `md5`(v2) @signature `Lokio/ByteString;.md5:()Lokio/ByteString;` @kind virtual;
  #L193c38.  v2:= temp @kind object;
  #L193c3a.  call temp:= `hex`(v2) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L193c40.  v2:= temp @kind object;
  #L193c42.  return v2 @kind object;
}
procedure `int` `readInt$okhttp`(`okhttp3.Cache$Companion` v5 @kind this, `okio.BufferedSource` v6 @kind object) @signature `Lokhttp3/Cache$Companion;.readInt$okhttp:(Lokio/BufferedSource;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L193b50.  v0:= "source" @kind object;
  #L193b54.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L193b5a.  call temp:= `readDecimalLong`(v6) @signature `Lokio/BufferedSource;.readDecimalLong:()J` @kind interface;
  #L193b60.  v0:= temp @kind wide;
  #L193b62.  call temp:= `readUtf8LineStrict`(v6) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L193b68.  v6:= temp @kind object;
  #L193b6a.  v2:= 0L;
  #L193b6e.  v4:= lcmp(v0, v2);
  #L193b72.  if v4 < 0 then goto L193ba0;
  #L193b76.  v2:= 2147483647I;
  #L193b7c.  v2:= (`long`) v2 @kind i2l;
  #L193b7e.  v4:= lcmp(v0, v2);
  #L193b82.  if v4 > 0 then goto L193ba0;
  #L193b86.  call temp:= `length`(v6) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L193b8c.  v2:= temp;
  #L193b8e.  if v2 <= 0 then goto L193b96;
  #L193b92.  v2:= 1I;
  #L193b94.  goto L193b98;
  #L193b96.  v2:= 0I;
  #L193b98.  if v2 != 0 then goto L193ba0;
  #L193b9c.  v6:= (`int`) v0 @kind l2i;
  #L193b9e.  return v6;
  #L193ba0.  v2:= new `java.io.IOException`;
  #L193ba4.  v3:= new `java.lang.StringBuilder`;
  #L193ba8.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L193bae.  v4:= "expected an int but was \"" @kind object;
  #L193bb2.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193bb8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L193bbe.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L193bc4.  v6:= 34I;
  #L193bc8.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L193bce.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L193bd4.  v6:= temp @kind object;
  #L193bd6.  call `<init>`(v2, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L193bdc.  throw v2;
  #L193bde.  v6:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L193be0.  v0:= new `java.io.IOException`;
  #L193be4.  call temp:= `getMessage`(v6) @signature `Ljava/lang/NumberFormatException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L193bea.  v6:= temp @kind object;
  #L193bec.  call `<init>`(v0, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L193bf2.  throw v0;
  catch `java.lang.NumberFormatException` @[L193b5a..L193bde] goto L193bde;
}
procedure `okhttp3.Headers` `varyHeaders`(`okhttp3.Cache$Companion` v1 @kind this, `okhttp3.Response` v2 @kind object) @signature `Lokhttp3/Cache$Companion;.varyHeaders:(Lokhttp3/Response;)Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L193da8.  v0:= "$this$varyHeaders" @kind object;
  #L193dac.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L193db2.  call temp:= `networkResponse`(v2) @signature `Lokhttp3/Response;.networkResponse:()Lokhttp3/Response;` @kind virtual;
  #L193db8.  v0:= temp @kind object;
  #L193dba.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L193dc0.  call temp:= `request`(v0) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L193dc6.  v0:= temp @kind object;
  #L193dc8.  call temp:= `headers`(v0) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L193dce.  v0:= temp @kind object;
  #L193dd0.  call temp:= `headers`(v2) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L193dd6.  v2:= temp @kind object;
  #L193dd8.  call temp:= `b`(v1, v0, v2) @signature `Lokhttp3/Cache$Companion;.b:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @kind direct;
  #L193dde.  v2:= temp @kind object;
  #L193de0.  return v2 @kind object;
}
procedure `boolean` `varyMatches`(`okhttp3.Cache$Companion` v3 @kind this, `okhttp3.Response` v4 @kind object, `okhttp3.Headers` v5 @kind object, `okhttp3.Request` v6 @kind object) @signature `Lokhttp3/Cache$Companion;.varyMatches:(Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L193ab8.  v0:= "cachedResponse" @kind object;
  #L193abc.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L193ac2.  v0:= "cachedRequest" @kind object;
  #L193ac6.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L193acc.  v0:= "newRequest" @kind object;
  #L193ad0.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L193ad6.  call temp:= `headers`(v4) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L193adc.  v4:= temp @kind object;
  #L193ade.  call temp:= `a`(v3, v4) @signature `Lokhttp3/Cache$Companion;.a:(Lokhttp3/Headers;)Ljava/util/Set;` @kind direct;
  #L193ae4.  v4:= temp @kind object;
  #L193ae6.  v0:= instanceof @variable v4 @type ^`java.util.Collection` @kind boolean;
  #L193aea.  v1:= 1I;
  #L193aec.  if v0 == 0 then goto L193afe;
  #L193af0.  call temp:= `isEmpty`(v4) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L193af6.  v0:= temp;
  #L193af8.  if v0 == 0 then goto L193afe;
  #L193afc.  goto L193b3e;
  #L193afe.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L193b04.  v4:= temp @kind object;
  #L193b06.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L193b0c.  v0:= temp;
  #L193b0e.  if v0 == 0 then goto L193b3e;
  #L193b12.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L193b18.  v0:= temp @kind object;
  #L193b1a.  v0:= (`java.lang.String`) v0 @kind object;
  #L193b1e.  call temp:= `values`(v5, v0) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L193b24.  v2:= temp @kind object;
  #L193b26.  call temp:= `headers`(v6, v0) @signature `Lokhttp3/Request;.headers:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L193b2c.  v0:= temp @kind object;
  #L193b2e.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L193b34.  v0:= temp;
  #L193b36.  v0:= v0 ^~ v1 @kind int;
  #L193b38.  if v0 == 0 then goto L193b06;
  #L193b3c.  v1:= 0I;
  #L193b3e.  return v1;
}
