record `okhttp3.CertificatePinner$a` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function0` @kind interface {
  `okhttp3.CertificatePinner` `okhttp3.CertificatePinner$a.a` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `okhttp3.CertificatePinner$a.b` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.String` `okhttp3.CertificatePinner$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.CertificatePinner$a` v0 @kind this, `okhttp3.CertificatePinner` v1 @kind object, `java.util.List` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/CertificatePinner$a;.<init>:(Lokhttp3/CertificatePinner;Ljava/util/List;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1963f0.  v0.`okhttp3.CertificatePinner$a.a` @type ^`okhttp3.CertificatePinner` := v1 @kind object;
  #L1963f4.  v0.`okhttp3.CertificatePinner$a.b` @type ^`java.util.List` := v2 @kind object;
  #L1963f8.  v0.`okhttp3.CertificatePinner$a.c` @type ^`java.lang.String` := v3 @kind object;
  #L1963fc.  v1:= 0I;
  #L1963fe.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L196404.  return @kind void;
}
procedure `java.util.List` `a`(`okhttp3.CertificatePinner$a` v3 @kind this) @signature `Lokhttp3/CertificatePinner$a;.a:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L19635c.  v0:= v3.`okhttp3.CertificatePinner$a.a` @type ^`okhttp3.CertificatePinner` @kind object;
  #L196360.  call temp:= `getCertificateChainCleaner$okhttp`(v0) @signature `Lokhttp3/CertificatePinner;.getCertificateChainCleaner$okhttp:()Lokhttp3/internal/tls/CertificateChainCleaner;` @kind virtual;
  #L196366.  v0:= temp @kind object;
  #L196368.  if v0 == 0 then goto L196382;
  #L19636c.  v1:= v3.`okhttp3.CertificatePinner$a.b` @type ^`java.util.List` @kind object;
  #L196370.  v2:= v3.`okhttp3.CertificatePinner$a.c` @type ^`java.lang.String` @kind object;
  #L196374.  call temp:= `clean`(v0, v1, v2) @signature `Lokhttp3/internal/tls/CertificateChainCleaner;.clean:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L19637a.  v0:= temp @kind object;
  #L19637c.  if v0 == 0 then goto L196382;
  #L196380.  goto L196386;
  #L196382.  v0:= v3.`okhttp3.CertificatePinner$a.b` @type ^`java.util.List` @kind object;
  #L196386.  v1:= new `java.util.ArrayList`;
  #L19638a.  v2:= 10I;
  #L19638e.  call temp:= `collectionSizeOrDefault`(v0, v2) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L196394.  v2:= temp;
  #L196396.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L19639c.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1963a2.  v0:= temp @kind object;
  #L1963a4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1963aa.  v2:= temp;
  #L1963ac.  if v2 == 0 then goto L1963dc;
  #L1963b0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1963b6.  v2:= temp @kind object;
  #L1963b8.  v2:= (`java.security.cert.Certificate`) v2 @kind object;
  #L1963bc.  if v2 == 0 then goto L1963cc;
  #L1963c0.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L1963c4.  call temp:= `add`(v1, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1963ca.  goto L1963a4;
  #L1963cc.  v0:= new `java.lang.NullPointerException`;
  #L1963d0.  v1:= "null cannot be cast to non-null type java.security.cert.X509Certificate" @kind object;
  #L1963d4.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1963da.  throw v0;
  #L1963dc.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`okhttp3.CertificatePinner$a` v1 @kind this) @signature `Lokhttp3/CertificatePinner$a;.invoke:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L196340.  call temp:= `a`(v1) @signature `Lokhttp3/CertificatePinner$a;.a:()Ljava/util/List;` @kind virtual;
  #L196346.  v0:= temp @kind object;
  #L196348.  return v0 @kind object;
}
