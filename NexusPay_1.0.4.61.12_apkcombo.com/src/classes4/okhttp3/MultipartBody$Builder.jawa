record `okhttp3.MultipartBody$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `okio.ByteString` `okhttp3.MultipartBody$Builder.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MediaType` `okhttp3.MultipartBody$Builder.b` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.MultipartBody$Builder.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Builder` v2 @kind this) @signature `Lokhttp3/MultipartBody$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1a0084.  v0:= 0I;
  #L1a0086.  v1:= 1I;
  #L1a0088.  call `<init>`(v2, v0, v1, v0) @signature `Lokhttp3/MultipartBody$Builder;.<init>:(Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1a008e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a00a0.  v0:= "boundary" @kind object;
  #L1a00a4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a00aa.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a00b0.  v0:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L1a00b4.  call temp:= `encodeUtf8`(v0, v2) @signature `Lokio/ByteString$Companion;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L1a00ba.  v2:= temp @kind object;
  #L1a00bc.  v1.`okhttp3.MultipartBody$Builder.a` @type ^`okio.ByteString` := v2 @kind object;
  #L1a00c0.  v2:= `@@okhttp3.MultipartBody.MIXED` @type ^`okhttp3.MediaType` @kind object;
  #L1a00c4.  v1.`okhttp3.MultipartBody$Builder.b` @type ^`okhttp3.MediaType` := v2 @kind object;
  #L1a00c8.  v2:= new `java.util.ArrayList`;
  #L1a00cc.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1a00d2.  v1.`okhttp3.MultipartBody$Builder.c` @type ^`java.util.List` := v2 @kind object;
  #L1a00d6.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `kotlin.jvm.internal.DefaultConstructorMarker` v3 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.<init>:(Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1a00e8.  v2:= v2 ^& 1;
  #L1a00ec.  if v2 == 0 then goto L1a010a;
  #L1a00f0.  call temp:= `randomUUID`() @signature `Ljava/util/UUID;.randomUUID:()Ljava/util/UUID;` @kind static;
  #L1a00f6.  v1:= temp @kind object;
  #L1a00f8.  call temp:= `toString`(v1) @signature `Ljava/util/UUID;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a00fe.  v1:= temp @kind object;
  #L1a0100.  v2:= "UUID.randomUUID().toString()" @kind object;
  #L1a0104.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a010a.  call `<init>`(v0, v1) @signature `Lokhttp3/MultipartBody$Builder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a0110.  return @kind void;
}
procedure `okhttp3.MultipartBody$Builder` `addFormDataPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addFormDataPart:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ff1c.  v0:= "name" @kind object;
  #L19ff20.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19ff26.  v0:= "value" @kind object;
  #L19ff2a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19ff30.  v0:= `@@okhttp3.MultipartBody$Part.Companion` @type ^`okhttp3.MultipartBody$Part$Companion` @kind object;
  #L19ff34.  call temp:= `createFormData`(v0, v2, v3) @signature `Lokhttp3/MultipartBody$Part$Companion;.createFormData:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;` @kind virtual;
  #L19ff3a.  v2:= temp @kind object;
  #L19ff3c.  call temp:= `addPart`(v1, v2) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L19ff42.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addFormDataPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `okhttp3.RequestBody` v4 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addFormDataPart:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ff54.  v0:= "name" @kind object;
  #L19ff58.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19ff5e.  v0:= "body" @kind object;
  #L19ff62.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19ff68.  v0:= `@@okhttp3.MultipartBody$Part.Companion` @type ^`okhttp3.MultipartBody$Part$Companion` @kind object;
  #L19ff6c.  call temp:= `createFormData`(v0, v2, v3, v4) @signature `Lokhttp3/MultipartBody$Part$Companion;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind virtual;
  #L19ff72.  v2:= temp @kind object;
  #L19ff74.  call temp:= `addPart`(v1, v2) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L19ff7a.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `okhttp3.Headers` v2 @kind object, `okhttp3.RequestBody` v3 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ff8c.  v0:= "body" @kind object;
  #L19ff90.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19ff96.  v0:= `@@okhttp3.MultipartBody$Part.Companion` @type ^`okhttp3.MultipartBody$Part$Companion` @kind object;
  #L19ff9a.  call temp:= `create`(v0, v2, v3) @signature `Lokhttp3/MultipartBody$Part$Companion;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind virtual;
  #L19ffa0.  v2:= temp @kind object;
  #L19ffa2.  call temp:= `addPart`(v1, v2) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L19ffa8.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `okhttp3.MultipartBody$Part` v2 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ffbc.  v0:= "part" @kind object;
  #L19ffc0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19ffc6.  v0:= v1.`okhttp3.MultipartBody$Builder.c` @type ^`java.util.List` @kind object;
  #L19ffca.  call temp:= `add`(v0, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19ffd0.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ffe4.  v0:= "body" @kind object;
  #L19ffe8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19ffee.  v0:= `@@okhttp3.MultipartBody$Part.Companion` @type ^`okhttp3.MultipartBody$Part$Companion` @kind object;
  #L19fff2.  call temp:= `create`(v0, v2) @signature `Lokhttp3/MultipartBody$Part$Companion;.create:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind virtual;
  #L19fff8.  v2:= temp @kind object;
  #L19fffa.  call temp:= `addPart`(v1, v2) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L1a0000.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody` `build`(`okhttp3.MultipartBody$Builder` v4 @kind this) @signature `Lokhttp3/MultipartBody$Builder;.build:()Lokhttp3/MultipartBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19fec0.  v0:= v4.`okhttp3.MultipartBody$Builder.c` @type ^`java.util.List` @kind object;
  #L19fec4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L19feca.  v0:= temp;
  #L19fecc.  v0:= v0 ^~ 1;
  #L19fed0.  if v0 == 0 then goto L19fef4;
  #L19fed4.  v0:= new `okhttp3.MultipartBody`;
  #L19fed8.  v1:= v4.`okhttp3.MultipartBody$Builder.a` @type ^`okio.ByteString` @kind object;
  #L19fedc.  v2:= v4.`okhttp3.MultipartBody$Builder.b` @type ^`okhttp3.MediaType` @kind object;
  #L19fee0.  v3:= v4.`okhttp3.MultipartBody$Builder.c` @type ^`java.util.List` @kind object;
  #L19fee4.  call temp:= `toImmutableList`(v3) @signature `Lokhttp3/internal/Util;.toImmutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19feea.  v3:= temp @kind object;
  #L19feec.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/MultipartBody;.<init>:(Lokio/ByteString;Lokhttp3/MediaType;Ljava/util/List;)V` @kind direct;
  #L19fef2.  return v0 @kind object;
  #L19fef4.  v0:= new `java.lang.IllegalStateException`;
  #L19fef8.  v1:= "Multipart body must have at least one part." @kind object;
  #L19fefc.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L19ff02.  v1:= temp @kind object;
  #L19ff04.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ff0a.  throw v0;
}
procedure `okhttp3.MultipartBody$Builder` `setType`(`okhttp3.MultipartBody$Builder` v2 @kind this, `okhttp3.MediaType` v3 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.setType:(Lokhttp3/MediaType;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1a0014.  v0:= "type" @kind object;
  #L1a0018.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a001e.  call temp:= `type`(v3) @signature `Lokhttp3/MediaType;.type:()Ljava/lang/String;` @kind virtual;
  #L1a0024.  v0:= temp @kind object;
  #L1a0026.  v1:= "multipart" @kind object;
  #L1a002a.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a0030.  v0:= temp;
  #L1a0032.  if v0 == 0 then goto L1a003c;
  #L1a0036.  v2.`okhttp3.MultipartBody$Builder.b` @type ^`okhttp3.MediaType` := v3 @kind object;
  #L1a003a.  return v2 @kind object;
  #L1a003c.  v0:= new `java.lang.StringBuilder`;
  #L1a0040.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a0046.  v1:= "multipart != " @kind object;
  #L1a004a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a0050.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a0056.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a005c.  v3:= temp @kind object;
  #L1a005e.  v0:= new `java.lang.IllegalArgumentException`;
  #L1a0062.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a0068.  v3:= temp @kind object;
  #L1a006a.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a0070.  throw v0;
}
