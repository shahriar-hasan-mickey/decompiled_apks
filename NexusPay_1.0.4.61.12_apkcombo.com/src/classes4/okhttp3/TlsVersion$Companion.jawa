record `okhttp3.TlsVersion$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.TlsVersion$Companion` v0 @kind this) @signature `Lokhttp3/TlsVersion$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1a5ee4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a5eea.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.TlsVersion$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/TlsVersion$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1a5efc.  call `<init>`(v0) @signature `Lokhttp3/TlsVersion$Companion;.<init>:()V` @kind direct;
  #L1a5f02.  return @kind void;
}
procedure `okhttp3.TlsVersion` `forJavaName`(`okhttp3.TlsVersion$Companion` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/TlsVersion$Companion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1a5df4.  v0:= "javaName" @kind object;
  #L1a5df8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a5dfe.  call temp:= `hashCode`(v4) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1a5e04.  v0:= temp;
  #L1a5e06.  v1:= 79201641I;
  #L1a5e0c.  if v0 == v1 then goto L1a5e7a;
  #L1a5e10.  v1:= 79923350I;
  #L1a5e16.  if v0 == v1 then goto L1a5e64;
  #L1a5e1a.  goto L1a5ec0;
  #L1a5e20.  goto L1a5e90;
  #L1a5e22.  v0:= "TLSv1.3" @kind object;
  #L1a5e26.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a5e2c.  v0:= temp;
  #L1a5e2e.  if v0 == 0 then goto L1a5e90;
  #L1a5e32.  v4:= `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` @kind object;
  #L1a5e36.  goto L1a5e8e;
  #L1a5e38.  v0:= "TLSv1.2" @kind object;
  #L1a5e3c.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a5e42.  v0:= temp;
  #L1a5e44.  if v0 == 0 then goto L1a5e90;
  #L1a5e48.  v4:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L1a5e4c.  goto L1a5e8e;
  #L1a5e4e.  v0:= "TLSv1.1" @kind object;
  #L1a5e52.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a5e58.  v0:= temp;
  #L1a5e5a.  if v0 == 0 then goto L1a5e90;
  #L1a5e5e.  v4:= `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` @kind object;
  #L1a5e62.  goto L1a5e8e;
  #L1a5e64.  v0:= "TLSv1" @kind object;
  #L1a5e68.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a5e6e.  v0:= temp;
  #L1a5e70.  if v0 == 0 then goto L1a5e90;
  #L1a5e74.  v4:= `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L1a5e78.  goto L1a5e8e;
  #L1a5e7a.  v0:= "SSLv3" @kind object;
  #L1a5e7e.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1a5e84.  v0:= temp;
  #L1a5e86.  if v0 == 0 then goto L1a5e90;
  #L1a5e8a.  v4:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L1a5e8e.  return v4 @kind object;
  #L1a5e90.  v0:= new `java.lang.IllegalArgumentException`;
  #L1a5e94.  v1:= new `java.lang.StringBuilder`;
  #L1a5e98.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a5e9e.  v2:= "Unexpected TLS version: " @kind object;
  #L1a5ea2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a5ea8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a5eae.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a5eb4.  v4:= temp @kind object;
  #L1a5eb6.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a5ebc.  throw v0;
  #L1a5ebe.  
  #L1a5ec0.  switch v0
                  | -503070503 => goto L1a5e4e
                  | -503070502 => goto L1a5e38
                  | -503070501 => goto L1a5e22
                  | else => goto L1a5e20;
}
