record `okhttp3.ResponseBody$BomAwareReader` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Reader` @kind class {
  `boolean` `okhttp3.ResponseBody$BomAwareReader.a` @AccessFlag PRIVATE;
  `java.io.Reader` `okhttp3.ResponseBody$BomAwareReader.b` @AccessFlag PRIVATE;
  `okio.BufferedSource` `okhttp3.ResponseBody$BomAwareReader.c` @AccessFlag PRIVATE_FINAL;
  `java.nio.charset.Charset` `okhttp3.ResponseBody$BomAwareReader.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.ResponseBody$BomAwareReader` v1 @kind this, `okio.BufferedSource` v2 @kind object, `java.nio.charset.Charset` v3 @kind object) @signature `Lokhttp3/ResponseBody$BomAwareReader;.<init>:(Lokio/BufferedSource;Ljava/nio/charset/Charset;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a4d00.  v0:= "source" @kind object;
  #L1a4d04.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a4d0a.  v0:= "charset" @kind object;
  #L1a4d0e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a4d14.  call `<init>`(v1) @signature `Ljava/io/Reader;.<init>:()V` @kind direct;
  #L1a4d1a.  v1.`okhttp3.ResponseBody$BomAwareReader.c` @type ^`okio.BufferedSource` := v2 @kind object;
  #L1a4d1e.  v1.`okhttp3.ResponseBody$BomAwareReader.d` @type ^`java.nio.charset.Charset` := v3 @kind object;
  #L1a4d22.  return @kind void;
}
procedure `void` `close`(`okhttp3.ResponseBody$BomAwareReader` v1 @kind this) @signature `Lokhttp3/ResponseBody$BomAwareReader;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a4d34.  v0:= 1I;
  #L1a4d36.  v1.`okhttp3.ResponseBody$BomAwareReader.a` @type ^`boolean` := v0 @kind boolean;
  #L1a4d3a.  v0:= v1.`okhttp3.ResponseBody$BomAwareReader.b` @type ^`java.io.Reader` @kind object;
  #L1a4d3e.  if v0 == 0 then goto L1a4d4a;
  #L1a4d42.  call `close`(v0) @signature `Ljava/io/Reader;.close:()V` @kind virtual;
  #L1a4d48.  goto L1a4d54;
  #L1a4d4a.  v0:= v1.`okhttp3.ResponseBody$BomAwareReader.c` @type ^`okio.BufferedSource` @kind object;
  #L1a4d4e.  call `close`(v0) @signature `Lokio/Source;.close:()V` @kind interface;
  #L1a4d54.  return @kind void;
}
procedure `int` `read`(`okhttp3.ResponseBody$BomAwareReader` v4 @kind this, `char`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lokhttp3/ResponseBody$BomAwareReader;.read:([CII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a4c90.  v0:= "cbuf" @kind object;
  #L1a4c94.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a4c9a.  v0:= v4.`okhttp3.ResponseBody$BomAwareReader.a` @type ^`boolean` @kind boolean;
  #L1a4c9e.  if v0 != 0 then goto L1a4ce0;
  #L1a4ca2.  v0:= v4.`okhttp3.ResponseBody$BomAwareReader.b` @type ^`java.io.Reader` @kind object;
  #L1a4ca6.  if v0 == 0 then goto L1a4cac;
  #L1a4caa.  goto L1a4cd6;
  #L1a4cac.  v0:= new `java.io.InputStreamReader`;
  #L1a4cb0.  v1:= v4.`okhttp3.ResponseBody$BomAwareReader.c` @type ^`okio.BufferedSource` @kind object;
  #L1a4cb4.  call temp:= `inputStream`(v1) @signature `Lokio/BufferedSource;.inputStream:()Ljava/io/InputStream;` @kind interface;
  #L1a4cba.  v1:= temp @kind object;
  #L1a4cbc.  v2:= v4.`okhttp3.ResponseBody$BomAwareReader.c` @type ^`okio.BufferedSource` @kind object;
  #L1a4cc0.  v3:= v4.`okhttp3.ResponseBody$BomAwareReader.d` @type ^`java.nio.charset.Charset` @kind object;
  #L1a4cc4.  call temp:= `readBomAsCharset`(v2, v3) @signature `Lokhttp3/internal/Util;.readBomAsCharset:(Lokio/BufferedSource;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind static;
  #L1a4cca.  v2:= temp @kind object;
  #L1a4ccc.  call `<init>`(v0, v1, v2) @signature `Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L1a4cd2.  v4.`okhttp3.ResponseBody$BomAwareReader.b` @type ^`java.io.Reader` := v0 @kind object;
  #L1a4cd6.  call temp:= `read`(v0, v5, v6, v7) @signature `Ljava/io/Reader;.read:([CII)I` @kind virtual;
  #L1a4cdc.  v5:= temp;
  #L1a4cde.  return v5;
  #L1a4ce0.  v5:= new `java.io.IOException`;
  #L1a4ce4.  v6:= "Stream closed" @kind object;
  #L1a4ce8.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a4cee.  throw v5;
}
