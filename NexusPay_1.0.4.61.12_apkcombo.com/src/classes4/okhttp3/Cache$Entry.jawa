record `okhttp3.Cache$Entry` @kind class @AccessFlag FINAL {
  `java.lang.String` `okhttp3.Cache$Entry.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.c` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Protocol` `okhttp3.Cache$Entry.d` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.Cache$Entry.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.f` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.g` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Handshake` `okhttp3.Cache$Entry.h` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.i` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.j` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@okhttp3.Cache$Entry.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.Cache$Entry.l` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Cache$Entry;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1940a0.  v0:= new `okhttp3.Cache$Entry$Companion`;
  #L1940a4.  v1:= 0I;
  #L1940a6.  call `<init>`(v0, v1) @signature `Lokhttp3/Cache$Entry$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1940ac.  v0:= new `java.lang.StringBuilder`;
  #L1940b0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1940b6.  v1:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L1940ba.  call temp:= `get`(v1) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L1940c0.  v1:= temp @kind object;
  #L1940c2.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L1940c8.  v1:= temp @kind object;
  #L1940ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1940d0.  v1:= "-Sent-Millis" @kind object;
  #L1940d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1940da.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1940e0.  v0:= temp @kind object;
  #L1940e2.  `@@okhttp3.Cache$Entry.k` @type ^`java.lang.String` := v0 @kind object;
  #L1940e6.  v0:= new `java.lang.StringBuilder`;
  #L1940ea.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1940f0.  v1:= `@@okhttp3.internal.platform.Platform.Companion` @type ^`okhttp3.internal.platform.Platform$Companion` @kind object;
  #L1940f4.  call temp:= `get`(v1) @signature `Lokhttp3/internal/platform/Platform$Companion;.get:()Lokhttp3/internal/platform/Platform;` @kind virtual;
  #L1940fa.  v1:= temp @kind object;
  #L1940fc.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L194102.  v1:= temp @kind object;
  #L194104.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19410a.  v1:= "-Received-Millis" @kind object;
  #L19410e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L194114.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19411a.  v0:= temp @kind object;
  #L19411c.  `@@okhttp3.Cache$Entry.l` @type ^`java.lang.String` := v0 @kind object;
  #L194120.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Response` v3 @kind object) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L194134.  v0:= "response" @kind object;
  #L194138.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19413e.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L194144.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L19414a.  v0:= temp @kind object;
  #L19414c.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L194152.  v0:= temp @kind object;
  #L194154.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L19415a.  v0:= temp @kind object;
  #L19415c.  v2.`okhttp3.Cache$Entry.a` @type ^`java.lang.String` := v0 @kind object;
  #L194160.  v0:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L194164.  call temp:= `varyHeaders`(v0, v3) @signature `Lokhttp3/Cache$Companion;.varyHeaders:(Lokhttp3/Response;)Lokhttp3/Headers;` @kind virtual;
  #L19416a.  v0:= temp @kind object;
  #L19416c.  v2.`okhttp3.Cache$Entry.b` @type ^`okhttp3.Headers` := v0 @kind object;
  #L194170.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L194176.  v0:= temp @kind object;
  #L194178.  call temp:= `method`(v0) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L19417e.  v0:= temp @kind object;
  #L194180.  v2.`okhttp3.Cache$Entry.c` @type ^`java.lang.String` := v0 @kind object;
  #L194184.  call temp:= `protocol`(v3) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @kind virtual;
  #L19418a.  v0:= temp @kind object;
  #L19418c.  v2.`okhttp3.Cache$Entry.d` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L194190.  call temp:= `code`(v3) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L194196.  v0:= temp;
  #L194198.  v2.`okhttp3.Cache$Entry.e` @type ^`int` := v0;
  #L19419c.  call temp:= `message`(v3) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L1941a2.  v0:= temp @kind object;
  #L1941a4.  v2.`okhttp3.Cache$Entry.f` @type ^`java.lang.String` := v0 @kind object;
  #L1941a8.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1941ae.  v0:= temp @kind object;
  #L1941b0.  v2.`okhttp3.Cache$Entry.g` @type ^`okhttp3.Headers` := v0 @kind object;
  #L1941b4.  call temp:= `handshake`(v3) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L1941ba.  v0:= temp @kind object;
  #L1941bc.  v2.`okhttp3.Cache$Entry.h` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L1941c0.  call temp:= `sentRequestAtMillis`(v3) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L1941c6.  v0:= temp @kind wide;
  #L1941c8.  v2.`okhttp3.Cache$Entry.i` @type ^`long` := v0 @kind wide;
  #L1941cc.  call temp:= `receivedResponseAtMillis`(v3) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L1941d2.  v0:= temp @kind wide;
  #L1941d4.  v2.`okhttp3.Cache$Entry.j` @type ^`long` := v0 @kind wide;
  #L1941d8.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v9 @kind this, `okio.Source` v10 @kind object) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokio/Source;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1941ec.  v0:= "rawSource" @kind object;
  #L1941f0.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1941f6.  call `<init>`(v9) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1941fc.  call temp:= `buffer`(v10) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L194202.  v0:= temp @kind object;
  #L194204.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L19420a.  v1:= temp @kind object;
  #L19420c.  v9.`okhttp3.Cache$Entry.a` @type ^`java.lang.String` := v1 @kind object;
  #L194210.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L194216.  v1:= temp @kind object;
  #L194218.  v9.`okhttp3.Cache$Entry.c` @type ^`java.lang.String` := v1 @kind object;
  #L19421c.  v1:= new `okhttp3.Headers$Builder`;
  #L194220.  call `<init>`(v1) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L194226.  v2:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L19422a.  call temp:= `readInt$okhttp`(v2, v0) @signature `Lokhttp3/Cache$Companion;.readInt$okhttp:(Lokio/BufferedSource;)I` @kind virtual;
  #L194230.  v2:= temp;
  #L194232.  v3:= 0I;
  #L194234.  v4:= 0I;
  #L194236.  if v4 >= v2 then goto L19424e;
  #L19423a.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L194240.  v5:= temp @kind object;
  #L194242.  call temp:= `addLenient$okhttp`(v1, v5) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L194248.  v4:= v4 + 1;
  #L19424c.  goto L194236;
  #L19424e.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L194254.  v1:= temp @kind object;
  #L194256.  v9.`okhttp3.Cache$Entry.b` @type ^`okhttp3.Headers` := v1 @kind object;
  #L19425a.  v1:= `@@okhttp3.internal.http.StatusLine.Companion` @type ^`okhttp3.internal.http.StatusLine$Companion` @kind object;
  #L19425e.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L194264.  v2:= temp @kind object;
  #L194266.  call temp:= `parse`(v1, v2) @signature `Lokhttp3/internal/http/StatusLine$Companion;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @kind virtual;
  #L19426c.  v1:= temp @kind object;
  #L19426e.  v2:= v1.`okhttp3.internal.http.StatusLine.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L194272.  v9.`okhttp3.Cache$Entry.d` @type ^`okhttp3.Protocol` := v2 @kind object;
  #L194276.  v2:= v1.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L19427a.  v9.`okhttp3.Cache$Entry.e` @type ^`int` := v2;
  #L19427e.  v1:= v1.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L194282.  v9.`okhttp3.Cache$Entry.f` @type ^`java.lang.String` := v1 @kind object;
  #L194286.  v1:= new `okhttp3.Headers$Builder`;
  #L19428a.  call `<init>`(v1) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L194290.  v2:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L194294.  call temp:= `readInt$okhttp`(v2, v0) @signature `Lokhttp3/Cache$Companion;.readInt$okhttp:(Lokio/BufferedSource;)I` @kind virtual;
  #L19429a.  v2:= temp;
  #L19429c.  v4:= 0I;
  #L19429e.  if v4 >= v2 then goto L1942b6;
  #L1942a2.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L1942a8.  v5:= temp @kind object;
  #L1942aa.  call temp:= `addLenient$okhttp`(v1, v5) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1942b0.  v4:= v4 + 1;
  #L1942b4.  goto L19429e;
  #L1942b6.  v2:= `@@okhttp3.Cache$Entry.k` @type ^`java.lang.String` @kind object;
  #L1942ba.  call temp:= `get`(v1, v2) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1942c0.  v2:= temp @kind object;
  #L1942c2.  v4:= `@@okhttp3.Cache$Entry.l` @type ^`java.lang.String` @kind object;
  #L1942c6.  call temp:= `get`(v1, v4) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1942cc.  v4:= temp @kind object;
  #L1942ce.  v5:= `@@okhttp3.Cache$Entry.k` @type ^`java.lang.String` @kind object;
  #L1942d2.  call temp:= `removeAll`(v1, v5) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1942d8.  v5:= `@@okhttp3.Cache$Entry.l` @type ^`java.lang.String` @kind object;
  #L1942dc.  call temp:= `removeAll`(v1, v5) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1942e2.  v5:= 0L;
  #L1942e6.  if v2 == 0 then goto L1942f4;
  #L1942ea.  call temp:= `parseLong`(v2) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L1942f0.  v7:= temp @kind wide;
  #L1942f2.  goto L1942f6;
  #L1942f4.  v7:= v5 @kind wide;
  #L1942f6.  v9.`okhttp3.Cache$Entry.i` @type ^`long` := v7 @kind wide;
  #L1942fa.  if v4 == 0 then goto L194306;
  #L1942fe.  call temp:= `parseLong`(v4) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L194304.  v5:= temp @kind wide;
  #L194306.  v9.`okhttp3.Cache$Entry.j` @type ^`long` := v5 @kind wide;
  #L19430a.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L194310.  v1:= temp @kind object;
  #L194312.  v9.`okhttp3.Cache$Entry.g` @type ^`okhttp3.Headers` := v1 @kind object;
  #L194316.  call temp:= `a`(v9) @signature `Lokhttp3/Cache$Entry;.a:()Z` @kind direct;
  #L19431c.  v1:= temp;
  #L19431e.  if v1 == 0 then goto L1943d0;
  #L194322.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L194328.  v1:= temp @kind object;
  #L19432a.  call temp:= `length`(v1) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L194330.  v2:= temp;
  #L194332.  if v2 <= 0 then goto L194338;
  #L194336.  v3:= 1I;
  #L194338.  if v3 != 0 then goto L194398;
  #L19433c.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L194342.  v1:= temp @kind object;
  #L194344.  v2:= `@@okhttp3.CipherSuite.Companion` @type ^`okhttp3.CipherSuite$Companion` @kind object;
  #L194348.  call temp:= `forJavaName`(v2, v1) @signature `Lokhttp3/CipherSuite$Companion;.forJavaName:(Ljava/lang/String;)Lokhttp3/CipherSuite;` @kind virtual;
  #L19434e.  v1:= temp @kind object;
  #L194350.  call temp:= `c`(v9, v0) @signature `Lokhttp3/Cache$Entry;.c:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L194356.  v2:= temp @kind object;
  #L194358.  call temp:= `c`(v9, v0) @signature `Lokhttp3/Cache$Entry;.c:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L19435e.  v3:= temp @kind object;
  #L194360.  call temp:= `exhausted`(v0) @signature `Lokio/BufferedSource;.exhausted:()Z` @kind interface;
  #L194366.  v4:= temp;
  #L194368.  if v4 != 0 then goto L194382;
  #L19436c.  v4:= `@@okhttp3.TlsVersion.Companion` @type ^`okhttp3.TlsVersion$Companion` @kind object;
  #L194370.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L194376.  v0:= temp @kind object;
  #L194378.  call temp:= `forJavaName`(v4, v0) @signature `Lokhttp3/TlsVersion$Companion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind virtual;
  #L19437e.  v0:= temp @kind object;
  #L194380.  goto L194386;
  #L194382.  v0:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L194386.  v4:= `@@okhttp3.Handshake.Companion` @type ^`okhttp3.Handshake$Companion` @kind object;
  #L19438a.  call temp:= `get`(v4, v0, v1, v2, v3) @signature `Lokhttp3/Handshake$Companion;.get:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;` @kind virtual;
  #L194390.  v0:= temp @kind object;
  #L194392.  v9.`okhttp3.Cache$Entry.h` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L194396.  goto L1943d6;
  #L194398.  v0:= new `java.io.IOException`;
  #L19439c.  v2:= new `java.lang.StringBuilder`;
  #L1943a0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1943a6.  v3:= "expected \"\" but was \"" @kind object;
  #L1943aa.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1943b0.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1943b6.  v1:= 34I;
  #L1943ba.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1943c0.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1943c6.  v1:= temp @kind object;
  #L1943c8.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1943ce.  throw v0;
  #L1943d0.  v0:= 0I;
  #L1943d2.  v9.`okhttp3.Cache$Entry.h` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L1943d6.  call `close`(v10) @signature `Lokio/Source;.close:()V` @kind interface;
  #L1943dc.  return @kind void;
  #L1943de.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1943e0.  call `close`(v10) @signature `Lokio/Source;.close:()V` @kind interface;
  #L1943e6.  throw v0;
  catch `java.lang.Throwable` @[L1941fc..L1943d6] goto L1943de;
}
procedure `boolean` `a`(`okhttp3.Cache$Entry` v5 @kind this) @signature `Lokhttp3/Cache$Entry;.a:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L193e54.  v0:= v5.`okhttp3.Cache$Entry.a` @type ^`java.lang.String` @kind object;
  #L193e58.  v1:= "https://" @kind object;
  #L193e5c.  v2:= 0I;
  #L193e5e.  v3:= 2I;
  #L193e60.  v4:= 0I;
  #L193e62.  call temp:= `startsWith$default`(v0, v1, v2, v3, v4) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L193e68.  v0:= temp;
  #L193e6a.  return v0;
}
procedure `java.util.List` `c`(`okhttp3.Cache$Entry` v7 @kind this, `okio.BufferedSource` v8 @kind object) @signature `Lokhttp3/Cache$Entry;.c:(Lokio/BufferedSource;)Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L193ef4.  v0:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L193ef8.  call temp:= `readInt$okhttp`(v0, v8) @signature `Lokhttp3/Cache$Companion;.readInt$okhttp:(Lokio/BufferedSource;)I` @kind virtual;
  #L193efe.  v0:= temp;
  #L193f00.  v1:= -1I;
  #L193f02.  if v0 != v1 then goto L193f10;
  #L193f06.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L193f0c.  v8:= temp @kind object;
  #L193f0e.  return v8 @kind object;
  #L193f10.  v1:= "X.509" @kind object;
  #L193f14.  call temp:= `getInstance`(v1) @signature `Ljava/security/cert/CertificateFactory;.getInstance:(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;` @kind static;
  #L193f1a.  v1:= temp @kind object;
  #L193f1c.  v2:= new `java.util.ArrayList`;
  #L193f20.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L193f26.  v3:= 0I;
  #L193f28.  if v3 >= v0 then goto L193f72;
  #L193f2c.  call temp:= `readUtf8LineStrict`(v8) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L193f32.  v4:= temp @kind object;
  #L193f34.  v5:= new `okio.Buffer`;
  #L193f38.  call `<init>`(v5) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L193f3e.  v6:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L193f42.  call temp:= `decodeBase64`(v6, v4) @signature `Lokio/ByteString$Companion;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @kind virtual;
  #L193f48.  v4:= temp @kind object;
  #L193f4a.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L193f50.  call temp:= `write`(v5, v4) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L193f56.  call temp:= `inputStream`(v5) @signature `Lokio/Buffer;.inputStream:()Ljava/io/InputStream;` @kind virtual;
  #L193f5c.  v4:= temp @kind object;
  #L193f5e.  call temp:= `generateCertificate`(v1, v4) @signature `Ljava/security/cert/CertificateFactory;.generateCertificate:(Ljava/io/InputStream;)Ljava/security/cert/Certificate;` @kind virtual;
  #L193f64.  v4:= temp @kind object;
  #L193f66.  call temp:= `add`(v2, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L193f6c.  v3:= v3 + 1;
  #L193f70.  goto L193f28;
  #L193f72.  return v2 @kind object;
  #L193f74.  v8:= Exception @type ^`java.security.cert.CertificateException` @kind object;
  #L193f76.  v0:= new `java.io.IOException`;
  #L193f7a.  call temp:= `getMessage`(v8) @signature `Ljava/security/cert/CertificateException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L193f80.  v8:= temp @kind object;
  #L193f82.  call `<init>`(v0, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L193f88.  throw v0;
  catch `java.security.cert.CertificateException` @[L193f10..L193f6c] goto L193f74;
}
procedure `void` `e`(`okhttp3.Cache$Entry` v10 @kind this, `okio.BufferedSink` v11 @kind object, `java.util.List` v12 @kind object) @signature `Lokhttp3/Cache$Entry;.e:(Lokio/BufferedSink;Ljava/util/List;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L194404.  call temp:= `size`(v12) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19440a.  v0:= temp;
  #L19440c.  v0:= (`long`) v0 @kind i2l;
  #L19440e.  call temp:= `writeDecimalLong`(v11, v0) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L194414.  v0:= temp @kind object;
  #L194416.  v1:= 10I;
  #L19441a.  call temp:= `writeByte`(v0, v1) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L194420.  v0:= 0I;
  #L194422.  call temp:= `size`(v12) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L194428.  v2:= temp;
  #L19442a.  if v0 >= v2 then goto L19447c;
  #L19442e.  call temp:= `get`(v12, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L194434.  v3:= temp @kind object;
  #L194436.  v3:= (`java.security.cert.Certificate`) v3 @kind object;
  #L19443a.  call temp:= `getEncoded`(v3) @signature `Ljava/security/cert/Certificate;.getEncoded:()[B` @kind virtual;
  #L194440.  v5:= temp @kind object;
  #L194442.  v4:= `@@okio.ByteString.Companion` @type ^`okio.ByteString$Companion` @kind object;
  #L194446.  v3:= "bytes" @kind object;
  #L19444a.  call `checkNotNullExpressionValue`(v5, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L194450.  v6:= 0I;
  #L194452.  v7:= 0I;
  #L194454.  v8:= 3I;
  #L194456.  v9:= 0I;
  #L194458.  call temp:= `of$default`(v4, v5, v6, v7, v8, v9) @signature `Lokio/ByteString$Companion;.of$default:(Lokio/ByteString$Companion;[BIIILjava/lang/Object;)Lokio/ByteString;` @kind static;
  #L19445e.  v3:= temp @kind object;
  #L194460.  call temp:= `base64`(v3) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L194466.  v3:= temp @kind object;
  #L194468.  call temp:= `writeUtf8`(v11, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L19446e.  v3:= temp @kind object;
  #L194470.  call temp:= `writeByte`(v3, v1) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L194476.  v0:= v0 + 1;
  #L19447a.  goto L19442a;
  #L19447c.  return @kind void;
  #L19447e.  v11:= Exception @type ^`java.security.cert.CertificateEncodingException` @kind object;
  #L194480.  v12:= new `java.io.IOException`;
  #L194484.  call temp:= `getMessage`(v11) @signature `Ljava/security/cert/CertificateEncodingException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L19448a.  v11:= temp @kind object;
  #L19448c.  call `<init>`(v12, v11) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L194492.  throw v12;
  catch `java.security.cert.CertificateEncodingException` @[L194404..L194476] goto L19447e;
}
procedure `boolean` `b`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Request` v3 @kind object, `okhttp3.Response` v4 @kind object) @signature `Lokhttp3/Cache$Entry;.b:(Lokhttp3/Request;Lokhttp3/Response;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L193e7c.  v0:= "request" @kind object;
  #L193e80.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L193e86.  v0:= "response" @kind object;
  #L193e8a.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L193e90.  v0:= v2.`okhttp3.Cache$Entry.a` @type ^`java.lang.String` @kind object;
  #L193e94.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L193e9a.  v1:= temp @kind object;
  #L193e9c.  call temp:= `toString`(v1) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L193ea2.  v1:= temp @kind object;
  #L193ea4.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L193eaa.  v0:= temp;
  #L193eac.  if v0 == 0 then goto L193ee0;
  #L193eb0.  v0:= v2.`okhttp3.Cache$Entry.c` @type ^`java.lang.String` @kind object;
  #L193eb4.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L193eba.  v1:= temp @kind object;
  #L193ebc.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L193ec2.  v0:= temp;
  #L193ec4.  if v0 == 0 then goto L193ee0;
  #L193ec8.  v0:= `@@okhttp3.Cache.Companion` @type ^`okhttp3.Cache$Companion` @kind object;
  #L193ecc.  v1:= v2.`okhttp3.Cache$Entry.b` @type ^`okhttp3.Headers` @kind object;
  #L193ed0.  call temp:= `varyMatches`(v0, v4, v1, v3) @signature `Lokhttp3/Cache$Companion;.varyMatches:(Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z` @kind virtual;
  #L193ed6.  v3:= temp;
  #L193ed8.  if v3 == 0 then goto L193ee0;
  #L193edc.  v3:= 1I;
  #L193ede.  goto L193ee2;
  #L193ee0.  v3:= 0I;
  #L193ee2.  return v3;
}
procedure `okhttp3.Response` `d`(`okhttp3.Cache$Entry` v5 @kind this, `okhttp3.internal.cache.DiskLruCache$Snapshot` v6 @kind object) @signature `Lokhttp3/Cache$Entry;.d:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L193fac.  v0:= "snapshot" @kind object;
  #L193fb0.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L193fb6.  v0:= v5.`okhttp3.Cache$Entry.g` @type ^`okhttp3.Headers` @kind object;
  #L193fba.  v1:= "Content-Type" @kind object;
  #L193fbe.  call temp:= `get`(v0, v1) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L193fc4.  v0:= temp @kind object;
  #L193fc6.  v1:= v5.`okhttp3.Cache$Entry.g` @type ^`okhttp3.Headers` @kind object;
  #L193fca.  v2:= "Content-Length" @kind object;
  #L193fce.  call temp:= `get`(v1, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L193fd4.  v1:= temp @kind object;
  #L193fd6.  v2:= new `okhttp3.Request$Builder`;
  #L193fda.  call `<init>`(v2) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L193fe0.  v3:= v5.`okhttp3.Cache$Entry.a` @type ^`java.lang.String` @kind object;
  #L193fe4.  call temp:= `url`(v2, v3) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L193fea.  v2:= temp @kind object;
  #L193fec.  v3:= v5.`okhttp3.Cache$Entry.c` @type ^`java.lang.String` @kind object;
  #L193ff0.  v4:= 0I;
  #L193ff2.  call temp:= `method`(v2, v3, v4) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L193ff8.  v2:= temp @kind object;
  #L193ffa.  v3:= v5.`okhttp3.Cache$Entry.b` @type ^`okhttp3.Headers` @kind object;
  #L193ffe.  call temp:= `headers`(v2, v3) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L194004.  v2:= temp @kind object;
  #L194006.  call temp:= `build`(v2) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L19400c.  v2:= temp @kind object;
  #L19400e.  v3:= new `okhttp3.Response$Builder`;
  #L194012.  call `<init>`(v3) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L194018.  call temp:= `request`(v3, v2) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L19401e.  v2:= temp @kind object;
  #L194020.  v3:= v5.`okhttp3.Cache$Entry.d` @type ^`okhttp3.Protocol` @kind object;
  #L194024.  call temp:= `protocol`(v2, v3) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L19402a.  v2:= temp @kind object;
  #L19402c.  v3:= v5.`okhttp3.Cache$Entry.e` @type ^`int`;
  #L194030.  call temp:= `code`(v2, v3) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L194036.  v2:= temp @kind object;
  #L194038.  v3:= v5.`okhttp3.Cache$Entry.f` @type ^`java.lang.String` @kind object;
  #L19403c.  call temp:= `message`(v2, v3) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L194042.  v2:= temp @kind object;
  #L194044.  v3:= v5.`okhttp3.Cache$Entry.g` @type ^`okhttp3.Headers` @kind object;
  #L194048.  call temp:= `headers`(v2, v3) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L19404e.  v2:= temp @kind object;
  #L194050.  v3:= new `okhttp3.Cache$CacheResponseBody`;
  #L194054.  call `<init>`(v3, v6, v0, v1) @signature `Lokhttp3/Cache$CacheResponseBody;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L19405a.  call temp:= `body`(v2, v3) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L194060.  v6:= temp @kind object;
  #L194062.  v0:= v5.`okhttp3.Cache$Entry.h` @type ^`okhttp3.Handshake` @kind object;
  #L194066.  call temp:= `handshake`(v6, v0) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @kind virtual;
  #L19406c.  v6:= temp @kind object;
  #L19406e.  v0:= v5.`okhttp3.Cache$Entry.i` @type ^`long` @kind wide;
  #L194072.  call temp:= `sentRequestAtMillis`(v6, v0) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L194078.  v6:= temp @kind object;
  #L19407a.  v0:= v5.`okhttp3.Cache$Entry.j` @type ^`long` @kind wide;
  #L19407e.  call temp:= `receivedResponseAtMillis`(v6, v0) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L194084.  v6:= temp @kind object;
  #L194086.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L19408c.  v6:= temp @kind object;
  #L19408e.  return v6 @kind object;
}
procedure `void` `f`(`okhttp3.Cache$Entry` v7 @kind this, `okhttp3.internal.cache.DiskLruCache$Editor` v8 @kind object) @signature `Lokhttp3/Cache$Entry;.f:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1944b4.  v0:= "editor" @kind object;
  #L1944b8.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1944be.  v0:= 0I;
  #L1944c0.  call temp:= `newSink`(v8, v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSink:(I)Lokio/Sink;` @kind virtual;
  #L1944c6.  v8:= temp @kind object;
  #L1944c8.  call temp:= `buffer`(v8) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L1944ce.  v8:= temp @kind object;
  #L1944d0.  v1:= v7.`okhttp3.Cache$Entry.a` @type ^`java.lang.String` @kind object;
  #L1944d4.  call temp:= `writeUtf8`(v8, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1944da.  v1:= temp @kind object;
  #L1944dc.  v2:= 10I;
  #L1944e0.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1944e6.  v1:= v7.`okhttp3.Cache$Entry.c` @type ^`java.lang.String` @kind object;
  #L1944ea.  call temp:= `writeUtf8`(v8, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1944f0.  v1:= temp @kind object;
  #L1944f2.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1944f8.  v1:= v7.`okhttp3.Cache$Entry.b` @type ^`okhttp3.Headers` @kind object;
  #L1944fc.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L194502.  v1:= temp;
  #L194504.  v3:= (`long`) v1 @kind i2l;
  #L194506.  call temp:= `writeDecimalLong`(v8, v3) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L19450c.  v1:= temp @kind object;
  #L19450e.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L194514.  v1:= v7.`okhttp3.Cache$Entry.b` @type ^`okhttp3.Headers` @kind object;
  #L194518.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L19451e.  v1:= temp;
  #L194520.  v3:= 0I;
  #L194522.  v4:= ": " @kind object;
  #L194526.  if v3 >= v1 then goto L194566;
  #L19452a.  v5:= v7.`okhttp3.Cache$Entry.b` @type ^`okhttp3.Headers` @kind object;
  #L19452e.  call temp:= `name`(v5, v3) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L194534.  v5:= temp @kind object;
  #L194536.  call temp:= `writeUtf8`(v8, v5) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L19453c.  v5:= temp @kind object;
  #L19453e.  call temp:= `writeUtf8`(v5, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194544.  v4:= temp @kind object;
  #L194546.  v5:= v7.`okhttp3.Cache$Entry.b` @type ^`okhttp3.Headers` @kind object;
  #L19454a.  call temp:= `value`(v5, v3) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L194550.  v5:= temp @kind object;
  #L194552.  call temp:= `writeUtf8`(v4, v5) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194558.  v4:= temp @kind object;
  #L19455a.  call temp:= `writeByte`(v4, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L194560.  v3:= v3 + 1;
  #L194564.  goto L194522;
  #L194566.  v1:= new `okhttp3.internal.http.StatusLine`;
  #L19456a.  v3:= v7.`okhttp3.Cache$Entry.d` @type ^`okhttp3.Protocol` @kind object;
  #L19456e.  v5:= v7.`okhttp3.Cache$Entry.e` @type ^`int`;
  #L194572.  v6:= v7.`okhttp3.Cache$Entry.f` @type ^`java.lang.String` @kind object;
  #L194576.  call `<init>`(v1, v3, v5, v6) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L19457c.  call temp:= `toString`(v1) @signature `Lokhttp3/internal/http/StatusLine;.toString:()Ljava/lang/String;` @kind virtual;
  #L194582.  v1:= temp @kind object;
  #L194584.  call temp:= `writeUtf8`(v8, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L19458a.  v1:= temp @kind object;
  #L19458c.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L194592.  v1:= v7.`okhttp3.Cache$Entry.g` @type ^`okhttp3.Headers` @kind object;
  #L194596.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L19459c.  v1:= temp;
  #L19459e.  v1:= v1 + 2;
  #L1945a2.  v5:= (`long`) v1 @kind i2l;
  #L1945a4.  call temp:= `writeDecimalLong`(v8, v5) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L1945aa.  v1:= temp @kind object;
  #L1945ac.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1945b2.  v1:= v7.`okhttp3.Cache$Entry.g` @type ^`okhttp3.Headers` @kind object;
  #L1945b6.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1945bc.  v1:= temp;
  #L1945be.  if v0 >= v1 then goto L1945fe;
  #L1945c2.  v3:= v7.`okhttp3.Cache$Entry.g` @type ^`okhttp3.Headers` @kind object;
  #L1945c6.  call temp:= `name`(v3, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1945cc.  v3:= temp @kind object;
  #L1945ce.  call temp:= `writeUtf8`(v8, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1945d4.  v3:= temp @kind object;
  #L1945d6.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1945dc.  v3:= temp @kind object;
  #L1945de.  v5:= v7.`okhttp3.Cache$Entry.g` @type ^`okhttp3.Headers` @kind object;
  #L1945e2.  call temp:= `value`(v5, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1945e8.  v5:= temp @kind object;
  #L1945ea.  call temp:= `writeUtf8`(v3, v5) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1945f0.  v3:= temp @kind object;
  #L1945f2.  call temp:= `writeByte`(v3, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1945f8.  v0:= v0 + 1;
  #L1945fc.  goto L1945be;
  #L1945fe.  v0:= `@@okhttp3.Cache$Entry.k` @type ^`java.lang.String` @kind object;
  #L194602.  call temp:= `writeUtf8`(v8, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194608.  v0:= temp @kind object;
  #L19460a.  call temp:= `writeUtf8`(v0, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194610.  v0:= temp @kind object;
  #L194612.  v5:= v7.`okhttp3.Cache$Entry.i` @type ^`long` @kind wide;
  #L194616.  call temp:= `writeDecimalLong`(v0, v5) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L19461c.  v0:= temp @kind object;
  #L19461e.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L194624.  v0:= `@@okhttp3.Cache$Entry.l` @type ^`java.lang.String` @kind object;
  #L194628.  call temp:= `writeUtf8`(v8, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L19462e.  v0:= temp @kind object;
  #L194630.  call temp:= `writeUtf8`(v0, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L194636.  v0:= temp @kind object;
  #L194638.  v3:= v7.`okhttp3.Cache$Entry.j` @type ^`long` @kind wide;
  #L19463c.  call temp:= `writeDecimalLong`(v0, v3) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L194642.  v0:= temp @kind object;
  #L194644.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L19464a.  call temp:= `a`(v7) @signature `Lokhttp3/Cache$Entry;.a:()Z` @kind direct;
  #L194650.  v0:= temp;
  #L194652.  if v0 == 0 then goto L1946ca;
  #L194656.  call temp:= `writeByte`(v8, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L19465c.  v0:= v7.`okhttp3.Cache$Entry.h` @type ^`okhttp3.Handshake` @kind object;
  #L194660.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L194666.  call temp:= `cipherSuite`(v0) @signature `Lokhttp3/Handshake;.cipherSuite:()Lokhttp3/CipherSuite;` @kind virtual;
  #L19466c.  v0:= temp @kind object;
  #L19466e.  call temp:= `javaName`(v0) @signature `Lokhttp3/CipherSuite;.javaName:()Ljava/lang/String;` @kind virtual;
  #L194674.  v0:= temp @kind object;
  #L194676.  call temp:= `writeUtf8`(v8, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L19467c.  v0:= temp @kind object;
  #L19467e.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L194684.  v0:= v7.`okhttp3.Cache$Entry.h` @type ^`okhttp3.Handshake` @kind object;
  #L194688.  call temp:= `peerCertificates`(v0) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L19468e.  v0:= temp @kind object;
  #L194690.  call `e`(v7, v8, v0) @signature `Lokhttp3/Cache$Entry;.e:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L194696.  v0:= v7.`okhttp3.Cache$Entry.h` @type ^`okhttp3.Handshake` @kind object;
  #L19469a.  call temp:= `localCertificates`(v0) @signature `Lokhttp3/Handshake;.localCertificates:()Ljava/util/List;` @kind virtual;
  #L1946a0.  v0:= temp @kind object;
  #L1946a2.  call `e`(v7, v8, v0) @signature `Lokhttp3/Cache$Entry;.e:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L1946a8.  v0:= v7.`okhttp3.Cache$Entry.h` @type ^`okhttp3.Handshake` @kind object;
  #L1946ac.  call temp:= `tlsVersion`(v0) @signature `Lokhttp3/Handshake;.tlsVersion:()Lokhttp3/TlsVersion;` @kind virtual;
  #L1946b2.  v0:= temp @kind object;
  #L1946b4.  call temp:= `javaName`(v0) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @kind virtual;
  #L1946ba.  v0:= temp @kind object;
  #L1946bc.  call temp:= `writeUtf8`(v8, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1946c2.  v0:= temp @kind object;
  #L1946c4.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L1946ca.  v0:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L1946ce.  v0:= 0I;
  #L1946d0.  call `closeFinally`(v8, v0) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L1946d6.  return @kind void;
  #L1946d8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1946da.  throw v0;
  #L1946dc.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1946de.  call `closeFinally`(v8, v0) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L1946e4.  throw v1;
  catch `java.lang.Throwable` @[L1944d0..L194520] goto L1946d8;
  catch `java.lang.Throwable` @[L19452a..L1946ce] goto L1946d8;
  catch `java.lang.Throwable` @[L1946da..L1946dc] goto L1946dc;
}
