record `okhttp3.Response` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `okhttp3.CacheControl` `okhttp3.Response.a` @AccessFlag PRIVATE;
  `okhttp3.Request` `okhttp3.Response.b` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Protocol` `okhttp3.Response.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Response.d` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.Response.e` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Handshake` `okhttp3.Response.f` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Response.g` @AccessFlag PRIVATE_FINAL;
  `okhttp3.ResponseBody` `okhttp3.Response.h` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Response` `okhttp3.Response.i` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Response` `okhttp3.Response.j` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Response` `okhttp3.Response.k` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Response.l` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Response.m` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.Exchange` `okhttp3.Response.n` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Response` v6 @kind this, `okhttp3.Request` v7 @kind object, `okhttp3.Protocol` v8 @kind object, `java.lang.String` v9 @kind object, `int` v10 , `okhttp3.Handshake` v11 @kind object, `okhttp3.Headers` v12 @kind object, `okhttp3.ResponseBody` v13 @kind object, `okhttp3.Response` v14 @kind object, `okhttp3.Response` v15 @kind object, `okhttp3.Response` v16 @kind object, `long` v17 , `long` v19 , `okhttp3.internal.connection.Exchange` v21 @kind object) @signature `Lokhttp3/Response;.<init>:(Lokhttp3/Request;Lokhttp3/Protocol;Ljava/lang/String;ILokhttp3/Handshake;Lokhttp3/Headers;Lokhttp3/ResponseBody;Lokhttp3/Response;Lokhttp3/Response;Lokhttp3/Response;JJLokhttp3/internal/connection/Exchange;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1a5b28.  v0:= v6 @kind object;
  #L1a5b2a.  v1:= v7 @kind object;
  #L1a5b2c.  v2:= v8 @kind object;
  #L1a5b2e.  v3:= v9 @kind object;
  #L1a5b30.  v4:= v12 @kind object;
  #L1a5b32.  v5:= "request" @kind object;
  #L1a5b36.  call `checkNotNullParameter`(v7, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a5b3c.  v5:= "protocol" @kind object;
  #L1a5b40.  call `checkNotNullParameter`(v8, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a5b46.  v5:= "message" @kind object;
  #L1a5b4a.  call `checkNotNullParameter`(v9, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a5b50.  v5:= "headers" @kind object;
  #L1a5b54.  call `checkNotNullParameter`(v12, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a5b5a.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a5b60.  v0.`okhttp3.Response.b` @type ^`okhttp3.Request` := v1 @kind object;
  #L1a5b64.  v0.`okhttp3.Response.c` @type ^`okhttp3.Protocol` := v2 @kind object;
  #L1a5b68.  v0.`okhttp3.Response.d` @type ^`java.lang.String` := v3 @kind object;
  #L1a5b6c.  v1:= v10;
  #L1a5b6e.  v0.`okhttp3.Response.e` @type ^`int` := v1;
  #L1a5b72.  v1:= v11 @kind object;
  #L1a5b74.  v0.`okhttp3.Response.f` @type ^`okhttp3.Handshake` := v1 @kind object;
  #L1a5b78.  v0.`okhttp3.Response.g` @type ^`okhttp3.Headers` := v4 @kind object;
  #L1a5b7c.  v1:= v13 @kind object;
  #L1a5b7e.  v0.`okhttp3.Response.h` @type ^`okhttp3.ResponseBody` := v1 @kind object;
  #L1a5b82.  v1:= v14 @kind object;
  #L1a5b84.  v0.`okhttp3.Response.i` @type ^`okhttp3.Response` := v1 @kind object;
  #L1a5b88.  v1:= v15 @kind object;
  #L1a5b8a.  v0.`okhttp3.Response.j` @type ^`okhttp3.Response` := v1 @kind object;
  #L1a5b8e.  v1:= v16 @kind object;
  #L1a5b92.  v0.`okhttp3.Response.k` @type ^`okhttp3.Response` := v1 @kind object;
  #L1a5b96.  v1:= v17 @kind wide;
  #L1a5b9a.  v0.`okhttp3.Response.l` @type ^`long` := v1 @kind wide;
  #L1a5b9e.  v1:= v19 @kind wide;
  #L1a5ba2.  v0.`okhttp3.Response.m` @type ^`long` := v1 @kind wide;
  #L1a5ba6.  v1:= v21 @kind object;
  #L1a5baa.  v0.`okhttp3.Response.n` @type ^`okhttp3.internal.connection.Exchange` := v1 @kind object;
  #L1a5bae.  return @kind void;
}
procedure `java.lang.String` `header$default`(`okhttp3.Response` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lokhttp3/Response;.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a568c.  v3:= v3 ^& 2;
  #L1a5690.  if v3 == 0 then goto L1a5696;
  #L1a5694.  v2:= 0I;
  #L1a5696.  call temp:= `header`(v0, v1, v2) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1a569c.  v0:= temp @kind object;
  #L1a569e.  return v0 @kind object;
}
procedure `okhttp3.ResponseBody` `-deprecated_body`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_body:()Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5a64.  v0:= v1.`okhttp3.Response.h` @type ^`okhttp3.ResponseBody` @kind object;
  #L1a5a68.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `-deprecated_cacheControl`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5870.  call temp:= `cacheControl`(v1) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L1a5876.  v0:= temp @kind object;
  #L1a5878.  return v0 @kind object;
}
procedure `okhttp3.Response` `-deprecated_cacheResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_cacheResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a59b8.  v0:= v1.`okhttp3.Response.j` @type ^`okhttp3.Response` @kind object;
  #L1a59bc.  return v0 @kind object;
}
procedure `int` `-deprecated_code`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_code:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5644.  v0:= v1.`okhttp3.Response.e` @type ^`int`;
  #L1a5648.  return v0;
}
procedure `okhttp3.Handshake` `-deprecated_handshake`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_handshake:()Lokhttp3/Handshake;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a58bc.  v0:= v1.`okhttp3.Response.f` @type ^`okhttp3.Handshake` @kind object;
  #L1a58c0.  return v0 @kind object;
}
procedure `okhttp3.Headers` `-deprecated_headers`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a58ec.  v0:= v1.`okhttp3.Response.g` @type ^`okhttp3.Headers` @kind object;
  #L1a58f0.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_message`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_message:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5674.  v0:= v1.`okhttp3.Response.d` @type ^`java.lang.String` @kind object;
  #L1a5678.  return v0 @kind object;
}
procedure `okhttp3.Response` `-deprecated_networkResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_networkResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a59d0.  v0:= v1.`okhttp3.Response.i` @type ^`okhttp3.Response` @kind object;
  #L1a59d4.  return v0 @kind object;
}
procedure `okhttp3.Response` `-deprecated_priorResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_priorResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a59e8.  v0:= v1.`okhttp3.Response.k` @type ^`okhttp3.Response` @kind object;
  #L1a59ec.  return v0 @kind object;
}
procedure `okhttp3.Protocol` `-deprecated_protocol`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_protocol:()Lokhttp3/Protocol;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5958.  v0:= v1.`okhttp3.Response.c` @type ^`okhttp3.Protocol` @kind object;
  #L1a595c.  return v0 @kind object;
}
procedure `long` `-deprecated_receivedResponseAtMillis`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.-deprecated_receivedResponseAtMillis:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1a5810.  v0:= v2.`okhttp3.Response.m` @type ^`long` @kind wide;
  #L1a5814.  return v0 @kind wide;
}
procedure `okhttp3.Request` `-deprecated_request`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.-deprecated_request:()Lokhttp3/Request;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5988.  v0:= v1.`okhttp3.Response.b` @type ^`okhttp3.Request` @kind object;
  #L1a598c.  return v0 @kind object;
}
procedure `long` `-deprecated_sentRequestAtMillis`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.-deprecated_sentRequestAtMillis:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1a5828.  v0:= v2.`okhttp3.Response.l` @type ^`long` @kind wide;
  #L1a582c.  return v0 @kind wide;
}
procedure `okhttp3.ResponseBody` `body`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5a7c.  v0:= v1.`okhttp3.Response.h` @type ^`okhttp3.ResponseBody` @kind object;
  #L1a5a80.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `cacheControl`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1a588c.  v0:= v2.`okhttp3.Response.a` @type ^`okhttp3.CacheControl` @kind object;
  #L1a5890.  if v0 != 0 then goto L1a58a8;
  #L1a5894.  v0:= `@@okhttp3.CacheControl.Companion` @type ^`okhttp3.CacheControl$Companion` @kind object;
  #L1a5898.  v1:= v2.`okhttp3.Response.g` @type ^`okhttp3.Headers` @kind object;
  #L1a589c.  call temp:= `parse`(v0, v1) @signature `Lokhttp3/CacheControl$Companion;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @kind virtual;
  #L1a58a2.  v0:= temp @kind object;
  #L1a58a4.  v2.`okhttp3.Response.a` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L1a58a8.  return v0 @kind object;
}
procedure `okhttp3.Response` `cacheResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.cacheResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5a00.  v0:= v1.`okhttp3.Response.j` @type ^`okhttp3.Response` @kind object;
  #L1a5a04.  return v0 @kind object;
}
procedure `java.util.List` `challenges`(`okhttp3.Response` v3 @kind this) @signature `Lokhttp3/Response;.challenges:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1a57a0.  v0:= v3.`okhttp3.Response.g` @type ^`okhttp3.Headers` @kind object;
  #L1a57a4.  v1:= v3.`okhttp3.Response.e` @type ^`int`;
  #L1a57a8.  v2:= 401I;
  #L1a57ac.  if v1 == v2 then goto L1a57c8;
  #L1a57b0.  v2:= 407I;
  #L1a57b4.  if v1 == v2 then goto L1a57c2;
  #L1a57b8.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L1a57be.  v0:= temp @kind object;
  #L1a57c0.  return v0 @kind object;
  #L1a57c2.  v1:= "Proxy-Authenticate" @kind object;
  #L1a57c6.  goto L1a57cc;
  #L1a57c8.  v1:= "WWW-Authenticate" @kind object;
  #L1a57cc.  call temp:= `parseChallenges`(v0, v1) @signature `Lokhttp3/internal/http/HttpHeaders;.parseChallenges:(Lokhttp3/Headers;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L1a57d2.  v0:= temp @kind object;
  #L1a57d4.  return v0 @kind object;
}
procedure `void` `close`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a5bc0.  v0:= v2.`okhttp3.Response.h` @type ^`okhttp3.ResponseBody` @kind object;
  #L1a5bc4.  if v0 == 0 then goto L1a5bd0;
  #L1a5bc8.  call `close`(v0) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L1a5bce.  return @kind void;
  #L1a5bd0.  v0:= new `java.lang.IllegalStateException`;
  #L1a5bd4.  v1:= "response is not eligible for a body and must not be closed" @kind object;
  #L1a5bd8.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a5bde.  v1:= temp @kind object;
  #L1a5be0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a5be6.  throw v0;
}
procedure `int` `code`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.code:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a565c.  v0:= v1.`okhttp3.Response.e` @type ^`int`;
  #L1a5660.  return v0;
}
procedure `okhttp3.internal.connection.Exchange` `exchange`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.exchange:()Lokhttp3/internal/connection/Exchange;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5b10.  v0:= v1.`okhttp3.Response.n` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L1a5b14.  return v0 @kind object;
}
procedure `okhttp3.Handshake` `handshake`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a58d4.  v0:= v1.`okhttp3.Response.f` @type ^`okhttp3.Handshake` @kind object;
  #L1a58d8.  return v0 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Response` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1a56b0.  v0:= 0I;
  #L1a56b2.  v1:= 2I;
  #L1a56b4.  call temp:= `header$default`(v2, v3, v0, v1, v0) @signature `Lokhttp3/Response;.header$default:(Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1a56ba.  v3:= temp @kind object;
  #L1a56bc.  return v3 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Response` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a56d0.  v0:= "name" @kind object;
  #L1a56d4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a56da.  v0:= v1.`okhttp3.Response.g` @type ^`okhttp3.Headers` @kind object;
  #L1a56de.  call temp:= `get`(v0, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1a56e4.  v2:= temp @kind object;
  #L1a56e6.  if v2 == 0 then goto L1a56ec;
  #L1a56ea.  v3:= v2 @kind object;
  #L1a56ec.  return v3 @kind object;
}
procedure `java.util.List` `headers`(`okhttp3.Response` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Response;.headers:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a57e8.  v0:= "name" @kind object;
  #L1a57ec.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a57f2.  v0:= v1.`okhttp3.Response.g` @type ^`okhttp3.Headers` @kind object;
  #L1a57f6.  call temp:= `values`(v0, v2) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L1a57fc.  v2:= temp @kind object;
  #L1a57fe.  return v2 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5904.  v0:= v1.`okhttp3.Response.g` @type ^`okhttp3.Headers` @kind object;
  #L1a5908.  return v0 @kind object;
}
procedure `boolean` `isRedirect`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.isRedirect:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1a55c8.  v0:= v2.`okhttp3.Response.e` @type ^`int`;
  #L1a55cc.  v1:= 307I;
  #L1a55d0.  if v0 == v1 then goto L1a55e6;
  #L1a55d4.  v1:= 308I;
  #L1a55d8.  if v0 == v1 then goto L1a55e6;
  #L1a55dc.  goto L1a55ec;
  #L1a55e2.  v0:= 0I;
  #L1a55e4.  goto L1a55e8;
  #L1a55e6.  v0:= 1I;
  #L1a55e8.  return v0;
  #L1a55ea.  
  #L1a55ec.  switch v0
                  | 300 => goto L1a55e6
                  | 301 => goto L1a55e6
                  | 302 => goto L1a55e6
                  | 303 => goto L1a55e6
                  | else => goto L1a55e2;
}
procedure `boolean` `isSuccessful`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.isSuccessful:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1a5614.  v0:= v2.`okhttp3.Response.e` @type ^`int`;
  #L1a5618.  v1:= 200I;
  #L1a561c.  if v1 <= v0 then goto L1a5622;
  #L1a5620.  goto L1a562e;
  #L1a5622.  v1:= 299I;
  #L1a5626.  if v1 < v0 then goto L1a562e;
  #L1a562a.  v0:= 1I;
  #L1a562c.  goto L1a5630;
  #L1a562e.  v0:= 0I;
  #L1a5630.  return v0;
}
procedure `java.lang.String` `message`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5700.  v0:= v1.`okhttp3.Response.d` @type ^`java.lang.String` @kind object;
  #L1a5704.  return v0 @kind object;
}
procedure `okhttp3.Response` `networkResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.networkResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5a18.  v0:= v1.`okhttp3.Response.i` @type ^`okhttp3.Response` @kind object;
  #L1a5a1c.  return v0 @kind object;
}
procedure `okhttp3.Response$Builder` `newBuilder`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5a48.  v0:= new `okhttp3.Response$Builder`;
  #L1a5a4c.  call `<init>`(v0, v1) @signature `Lokhttp3/Response$Builder;.<init>:(Lokhttp3/Response;)V` @kind direct;
  #L1a5a52.  return v0 @kind object;
}
procedure `okhttp3.ResponseBody` `peekBody`(`okhttp3.Response` v4 @kind this, `long` v5 ) @signature `Lokhttp3/Response;.peekBody:(J)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1a5a94.  v0:= v4.`okhttp3.Response.h` @type ^`okhttp3.ResponseBody` @kind object;
  #L1a5a98.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1a5a9e.  call temp:= `source`(v0) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L1a5aa4.  v0:= temp @kind object;
  #L1a5aa6.  call temp:= `peek`(v0) @signature `Lokio/BufferedSource;.peek:()Lokio/BufferedSource;` @kind interface;
  #L1a5aac.  v0:= temp @kind object;
  #L1a5aae.  v1:= new `okio.Buffer`;
  #L1a5ab2.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1a5ab8.  call temp:= `request`(v0, v5) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L1a5abe.  call temp:= `getBuffer`(v0) @signature `Lokio/BufferedSource;.getBuffer:()Lokio/Buffer;` @kind interface;
  #L1a5ac4.  v2:= temp @kind object;
  #L1a5ac6.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1a5acc.  v2:= temp @kind wide;
  #L1a5ace.  call temp:= `min`(v5, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1a5ad4.  v5:= temp @kind wide;
  #L1a5ad6.  call temp:= `write`(v1, v0, v5) @signature `Lokio/Buffer;.write:(Lokio/Source;J)Lokio/Buffer;` @kind virtual;
  #L1a5adc.  v5:= `@@okhttp3.ResponseBody.Companion` @type ^`okhttp3.ResponseBody$Companion` @kind object;
  #L1a5ae0.  v6:= v4.`okhttp3.Response.h` @type ^`okhttp3.ResponseBody` @kind object;
  #L1a5ae4.  call temp:= `contentType`(v6) @signature `Lokhttp3/ResponseBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L1a5aea.  v6:= temp @kind object;
  #L1a5aec.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1a5af2.  v2:= temp @kind wide;
  #L1a5af4.  call temp:= `create`(v5, v1, v6, v2) @signature `Lokhttp3/ResponseBody$Companion;.create:(Lokio/BufferedSource;Lokhttp3/MediaType;J)Lokhttp3/ResponseBody;` @kind virtual;
  #L1a5afa.  v5:= temp @kind object;
  #L1a5afc.  return v5 @kind object;
}
procedure `okhttp3.Response` `priorResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5a30.  v0:= v1.`okhttp3.Response.k` @type ^`okhttp3.Response` @kind object;
  #L1a5a34.  return v0 @kind object;
}
procedure `okhttp3.Protocol` `protocol`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5970.  v0:= v1.`okhttp3.Response.c` @type ^`okhttp3.Protocol` @kind object;
  #L1a5974.  return v0 @kind object;
}
procedure `long` `receivedResponseAtMillis`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1a5840.  v0:= v2.`okhttp3.Response.m` @type ^`long` @kind wide;
  #L1a5844.  return v0 @kind wide;
}
procedure `okhttp3.Request` `request`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a59a0.  v0:= v1.`okhttp3.Response.b` @type ^`okhttp3.Request` @kind object;
  #L1a59a4.  return v0 @kind object;
}
procedure `long` `sentRequestAtMillis`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1a5858.  v0:= v2.`okhttp3.Response.l` @type ^`long` @kind wide;
  #L1a585c.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a5718.  v0:= new `java.lang.StringBuilder`;
  #L1a571c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a5722.  v1:= "Response{protocol=" @kind object;
  #L1a5726.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a572c.  v1:= v2.`okhttp3.Response.c` @type ^`okhttp3.Protocol` @kind object;
  #L1a5730.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a5736.  v1:= ", code=" @kind object;
  #L1a573a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a5740.  v1:= v2.`okhttp3.Response.e` @type ^`int`;
  #L1a5744.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a574a.  v1:= ", message=" @kind object;
  #L1a574e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a5754.  v1:= v2.`okhttp3.Response.d` @type ^`java.lang.String` @kind object;
  #L1a5758.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a575e.  v1:= ", url=" @kind object;
  #L1a5762.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a5768.  v1:= v2.`okhttp3.Response.b` @type ^`okhttp3.Request` @kind object;
  #L1a576c.  call temp:= `url`(v1) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a5772.  v1:= temp @kind object;
  #L1a5774.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a577a.  v1:= 125I;
  #L1a577e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a5784.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a578a.  v0:= temp @kind object;
  #L1a578c.  return v0 @kind object;
}
procedure `okhttp3.Headers` `trailers`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.trailers:()Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1a591c.  v0:= v2.`okhttp3.Response.n` @type ^`okhttp3.internal.connection.Exchange` @kind object;
  #L1a5920.  if v0 == 0 then goto L1a592e;
  #L1a5924.  call temp:= `trailers`(v0) @signature `Lokhttp3/internal/connection/Exchange;.trailers:()Lokhttp3/Headers;` @kind virtual;
  #L1a592a.  v0:= temp @kind object;
  #L1a592c.  return v0 @kind object;
  #L1a592e.  v0:= new `java.lang.IllegalStateException`;
  #L1a5932.  v1:= "trailers not available" @kind object;
  #L1a5936.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a593c.  v1:= temp @kind object;
  #L1a593e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a5944.  throw v0;
}
