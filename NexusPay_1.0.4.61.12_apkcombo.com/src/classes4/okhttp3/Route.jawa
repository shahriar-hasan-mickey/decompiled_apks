record `okhttp3.Route` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Address` `okhttp3.Route.a` @AccessFlag PRIVATE_FINAL;
  `java.net.Proxy` `okhttp3.Route.b` @AccessFlag PRIVATE_FINAL;
  `java.net.InetSocketAddress` `okhttp3.Route.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Route` v1 @kind this, `okhttp3.Address` v2 @kind object, `java.net.Proxy` v3 @kind object, `java.net.InetSocketAddress` v4 @kind object) @signature `Lokhttp3/Route;.<init>:(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a5db0.  v0:= "address" @kind object;
  #L1a5db4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a5dba.  v0:= "proxy" @kind object;
  #L1a5dbe.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a5dc4.  v0:= "socketAddress" @kind object;
  #L1a5dc8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a5dce.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a5dd4.  v1.`okhttp3.Route.a` @type ^`okhttp3.Address` := v2 @kind object;
  #L1a5dd8.  v1.`okhttp3.Route.b` @type ^`java.net.Proxy` := v3 @kind object;
  #L1a5ddc.  v1.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` := v4 @kind object;
  #L1a5de0.  return @kind void;
}
procedure `okhttp3.Address` `-deprecated_address`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.-deprecated_address:()Lokhttp3/Address;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5d80.  v0:= v1.`okhttp3.Route.a` @type ^`okhttp3.Address` @kind object;
  #L1a5d84.  return v0 @kind object;
}
procedure `java.net.Proxy` `-deprecated_proxy`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.-deprecated_proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5d50.  v0:= v1.`okhttp3.Route.b` @type ^`java.net.Proxy` @kind object;
  #L1a5d54.  return v0 @kind object;
}
procedure `java.net.InetSocketAddress` `-deprecated_socketAddress`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.-deprecated_socketAddress:()Ljava/net/InetSocketAddress;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5d20.  v0:= v1.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L1a5d24.  return v0 @kind object;
}
procedure `okhttp3.Address` `address`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5d98.  v0:= v1.`okhttp3.Route.a` @type ^`okhttp3.Address` @kind object;
  #L1a5d9c.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Route` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/Route;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a5bf8.  v0:= instanceof @variable v3 @type ^`okhttp3.Route` @kind boolean;
  #L1a5bfc.  if v0 == 0 then goto L1a5c44;
  #L1a5c00.  v3:= (`okhttp3.Route`) v3 @kind object;
  #L1a5c04.  v0:= v3.`okhttp3.Route.a` @type ^`okhttp3.Address` @kind object;
  #L1a5c08.  v1:= v2.`okhttp3.Route.a` @type ^`okhttp3.Address` @kind object;
  #L1a5c0c.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a5c12.  v0:= temp;
  #L1a5c14.  if v0 == 0 then goto L1a5c44;
  #L1a5c18.  v0:= v3.`okhttp3.Route.b` @type ^`java.net.Proxy` @kind object;
  #L1a5c1c.  v1:= v2.`okhttp3.Route.b` @type ^`java.net.Proxy` @kind object;
  #L1a5c20.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a5c26.  v0:= temp;
  #L1a5c28.  if v0 == 0 then goto L1a5c44;
  #L1a5c2c.  v3:= v3.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L1a5c30.  v0:= v2.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L1a5c34.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1a5c3a.  v3:= temp;
  #L1a5c3c.  if v3 == 0 then goto L1a5c44;
  #L1a5c40.  v3:= 1I;
  #L1a5c42.  goto L1a5c46;
  #L1a5c44.  v3:= 0I;
  #L1a5c46.  return v3;
}
procedure `int` `hashCode`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a5c94.  v0:= v2.`okhttp3.Route.a` @type ^`okhttp3.Address` @kind object;
  #L1a5c98.  call temp:= `hashCode`(v0) @signature `Lokhttp3/Address;.hashCode:()I` @kind virtual;
  #L1a5c9e.  v0:= temp;
  #L1a5ca0.  v1:= 527I;
  #L1a5ca4.  v1:= v1 + v0 @kind int;
  #L1a5ca6.  v1:= v1 * 31;
  #L1a5caa.  v0:= v2.`okhttp3.Route.b` @type ^`java.net.Proxy` @kind object;
  #L1a5cae.  call temp:= `hashCode`(v0) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L1a5cb4.  v0:= temp;
  #L1a5cb6.  v1:= v1 + v0 @kind int;
  #L1a5cb8.  v1:= v1 * 31;
  #L1a5cbc.  v0:= v2.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L1a5cc0.  call temp:= `hashCode`(v0) @signature `Ljava/net/InetSocketAddress;.hashCode:()I` @kind virtual;
  #L1a5cc6.  v0:= temp;
  #L1a5cc8.  v1:= v1 + v0 @kind int;
  #L1a5cca.  return v1;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5d68.  v0:= v1.`okhttp3.Route.b` @type ^`java.net.Proxy` @kind object;
  #L1a5d6c.  return v0 @kind object;
}
procedure `boolean` `requiresTunnel`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1a5c58.  v0:= v2.`okhttp3.Route.a` @type ^`okhttp3.Address` @kind object;
  #L1a5c5c.  call temp:= `sslSocketFactory`(v0) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L1a5c62.  v0:= temp @kind object;
  #L1a5c64.  if v0 == 0 then goto L1a5c80;
  #L1a5c68.  v0:= v2.`okhttp3.Route.b` @type ^`java.net.Proxy` @kind object;
  #L1a5c6c.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L1a5c72.  v0:= temp @kind object;
  #L1a5c74.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L1a5c78.  if v0 != v1 then goto L1a5c80;
  #L1a5c7c.  v0:= 1I;
  #L1a5c7e.  goto L1a5c82;
  #L1a5c80.  v0:= 0I;
  #L1a5c82.  return v0;
}
procedure `java.net.InetSocketAddress` `socketAddress`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a5d38.  v0:= v1.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L1a5d3c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a5cdc.  v0:= new `java.lang.StringBuilder`;
  #L1a5ce0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a5ce6.  v1:= "Route{" @kind object;
  #L1a5cea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a5cf0.  v1:= v2.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L1a5cf4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a5cfa.  v1:= 125I;
  #L1a5cfe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a5d04.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a5d0a.  v0:= temp @kind object;
  #L1a5d0c.  return v0 @kind object;
}
