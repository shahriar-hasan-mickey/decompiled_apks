record `okhttp3.MultipartBody` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.RequestBody` @kind class {
  `okhttp3.MediaType` `okhttp3.MultipartBody.a` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.MultipartBody.b` @AccessFlag PRIVATE;
  `okio.ByteString` `okhttp3.MultipartBody.c` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MediaType` `okhttp3.MultipartBody.d` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.MultipartBody.e` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.ALTERNATIVE` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MultipartBody$Companion` `@@okhttp3.MultipartBody.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.DIGEST` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.FORM` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.MIXED` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.PARALLEL` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@okhttp3.MultipartBody.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okhttp3.MultipartBody.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okhttp3.MultipartBody.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/MultipartBody;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a07f0.  v0:= new `okhttp3.MultipartBody$Companion`;
  #L1a07f4.  v1:= 0I;
  #L1a07f6.  call `<init>`(v0, v1) @signature `Lokhttp3/MultipartBody$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1a07fc.  `@@okhttp3.MultipartBody.Companion` @type ^`okhttp3.MultipartBody$Companion` := v0 @kind object;
  #L1a0800.  v0:= `@@okhttp3.MediaType.Companion` @type ^`okhttp3.MediaType$Companion` @kind object;
  #L1a0804.  v1:= "multipart/mixed" @kind object;
  #L1a0808.  call temp:= `get`(v0, v1) @signature `Lokhttp3/MediaType$Companion;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L1a080e.  v0:= temp @kind object;
  #L1a0810.  `@@okhttp3.MultipartBody.MIXED` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L1a0814.  v0:= `@@okhttp3.MediaType.Companion` @type ^`okhttp3.MediaType$Companion` @kind object;
  #L1a0818.  v1:= "multipart/alternative" @kind object;
  #L1a081c.  call temp:= `get`(v0, v1) @signature `Lokhttp3/MediaType$Companion;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L1a0822.  v0:= temp @kind object;
  #L1a0824.  `@@okhttp3.MultipartBody.ALTERNATIVE` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L1a0828.  v0:= `@@okhttp3.MediaType.Companion` @type ^`okhttp3.MediaType$Companion` @kind object;
  #L1a082c.  v1:= "multipart/digest" @kind object;
  #L1a0830.  call temp:= `get`(v0, v1) @signature `Lokhttp3/MediaType$Companion;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L1a0836.  v0:= temp @kind object;
  #L1a0838.  `@@okhttp3.MultipartBody.DIGEST` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L1a083c.  v0:= `@@okhttp3.MediaType.Companion` @type ^`okhttp3.MediaType$Companion` @kind object;
  #L1a0840.  v1:= "multipart/parallel" @kind object;
  #L1a0844.  call temp:= `get`(v0, v1) @signature `Lokhttp3/MediaType$Companion;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L1a084a.  v0:= temp @kind object;
  #L1a084c.  `@@okhttp3.MultipartBody.PARALLEL` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L1a0850.  v0:= `@@okhttp3.MediaType.Companion` @type ^`okhttp3.MediaType$Companion` @kind object;
  #L1a0854.  v1:= "multipart/form-data" @kind object;
  #L1a0858.  call temp:= `get`(v0, v1) @signature `Lokhttp3/MediaType$Companion;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L1a085e.  v0:= temp @kind object;
  #L1a0860.  `@@okhttp3.MultipartBody.FORM` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L1a0864.  v0:= 2I;
  #L1a0866.  v1:= new `byte`[v0];
  #L1a086a.  v2:= 58I;
  #L1a086e.  v2:= (`byte`) v2 @kind i2b;
  #L1a0870.  v3:= 0I;
  #L1a0872.  v1[v3]:= v2 @kind byte;
  #L1a0876.  v2:= 32I;
  #L1a087a.  v2:= (`byte`) v2 @kind i2b;
  #L1a087c.  v4:= 1I;
  #L1a087e.  v1[v4]:= v2 @kind byte;
  #L1a0882.  `@@okhttp3.MultipartBody.f` @type ^`byte`[] := v1 @kind object;
  #L1a0886.  v1:= new `byte`[v0];
  #L1a088a.  v2:= 13I;
  #L1a088e.  v2:= (`byte`) v2 @kind i2b;
  #L1a0890.  v1[v3]:= v2 @kind byte;
  #L1a0894.  v2:= 10I;
  #L1a0898.  v2:= (`byte`) v2 @kind i2b;
  #L1a089a.  v1[v4]:= v2 @kind byte;
  #L1a089e.  `@@okhttp3.MultipartBody.g` @type ^`byte`[] := v1 @kind object;
  #L1a08a2.  v0:= new `byte`[v0];
  #L1a08a6.  v1:= 45I;
  #L1a08aa.  v1:= (`byte`) v1 @kind i2b;
  #L1a08ac.  v0[v3]:= v1 @kind byte;
  #L1a08b0.  v0[v4]:= v1 @kind byte;
  #L1a08b4.  `@@okhttp3.MultipartBody.h` @type ^`byte`[] := v0 @kind object;
  #L1a08b8.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MultipartBody` v1 @kind this, `okio.ByteString` v2 @kind object, `okhttp3.MediaType` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lokhttp3/MultipartBody;.<init>:(Lokio/ByteString;Lokhttp3/MediaType;Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a08cc.  v0:= "boundaryByteString" @kind object;
  #L1a08d0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a08d6.  v0:= "type" @kind object;
  #L1a08da.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a08e0.  v0:= "parts" @kind object;
  #L1a08e4.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a08ea.  call `<init>`(v1) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L1a08f0.  v1.`okhttp3.MultipartBody.c` @type ^`okio.ByteString` := v2 @kind object;
  #L1a08f4.  v1.`okhttp3.MultipartBody.d` @type ^`okhttp3.MediaType` := v3 @kind object;
  #L1a08f8.  v1.`okhttp3.MultipartBody.e` @type ^`java.util.List` := v4 @kind object;
  #L1a08fc.  v2:= `@@okhttp3.MediaType.Companion` @type ^`okhttp3.MediaType$Companion` @kind object;
  #L1a0900.  v3:= new `java.lang.StringBuilder`;
  #L1a0904.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a090a.  v4:= v1.`okhttp3.MultipartBody.d` @type ^`okhttp3.MediaType` @kind object;
  #L1a090e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a0914.  v4:= "; boundary=" @kind object;
  #L1a0918.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a091e.  call temp:= `boundary`(v1) @signature `Lokhttp3/MultipartBody;.boundary:()Ljava/lang/String;` @kind virtual;
  #L1a0924.  v4:= temp @kind object;
  #L1a0926.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a092c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a0932.  v3:= temp @kind object;
  #L1a0934.  call temp:= `get`(v2, v3) @signature `Lokhttp3/MediaType$Companion;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind virtual;
  #L1a093a.  v2:= temp @kind object;
  #L1a093c.  v1.`okhttp3.MultipartBody.a` @type ^`okhttp3.MediaType` := v2 @kind object;
  #L1a0940.  v2:= -1L;
  #L1a0944.  v1.`okhttp3.MultipartBody.b` @type ^`long` := v2 @kind wide;
  #L1a0948.  return @kind void;
}
procedure `long` `a`(`okhttp3.MultipartBody` v12 @kind this, `okio.BufferedSink` v13 @kind object, `boolean` v14 ) @signature `Lokhttp3/MultipartBody;.a:(Lokio/BufferedSink;Z)J` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1a05c8.  if v14 == 0 then goto L1a05da;
  #L1a05cc.  v13:= new `okio.Buffer`;
  #L1a05d0.  call `<init>`(v13) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L1a05d6.  v0:= v13 @kind object;
  #L1a05d8.  goto L1a05dc;
  #L1a05da.  v0:= 0I;
  #L1a05dc.  v1:= v12.`okhttp3.MultipartBody.e` @type ^`java.util.List` @kind object;
  #L1a05e0.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1a05e6.  v1:= temp;
  #L1a05e8.  v2:= 0I;
  #L1a05ea.  v3:= 0L;
  #L1a05ee.  v5:= 0I;
  #L1a05f0.  if v5 >= v1 then goto L1a0728;
  #L1a05f4.  v6:= v12.`okhttp3.MultipartBody.e` @type ^`java.util.List` @kind object;
  #L1a05f8.  call temp:= `get`(v6, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1a05fe.  v6:= temp @kind object;
  #L1a0600.  v6:= (`okhttp3.MultipartBody$Part`) v6 @kind object;
  #L1a0604.  call temp:= `headers`(v6) @signature `Lokhttp3/MultipartBody$Part;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1a060a.  v7:= temp @kind object;
  #L1a060c.  call temp:= `body`(v6) @signature `Lokhttp3/MultipartBody$Part;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L1a0612.  v6:= temp @kind object;
  #L1a0614.  call `checkNotNull`(v13) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1a061a.  v8:= `@@okhttp3.MultipartBody.h` @type ^`byte`[] @kind object;
  #L1a061e.  call temp:= `write`(v13, v8) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L1a0624.  v8:= v12.`okhttp3.MultipartBody.c` @type ^`okio.ByteString` @kind object;
  #L1a0628.  call temp:= `write`(v13, v8) @signature `Lokio/BufferedSink;.write:(Lokio/ByteString;)Lokio/BufferedSink;` @kind interface;
  #L1a062e.  v8:= `@@okhttp3.MultipartBody.g` @type ^`byte`[] @kind object;
  #L1a0632.  call temp:= `write`(v13, v8) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L1a0638.  if v7 == 0 then goto L1a0686;
  #L1a063c.  call temp:= `size`(v7) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L1a0642.  v8:= temp;
  #L1a0644.  v9:= 0I;
  #L1a0646.  if v9 >= v8 then goto L1a0686;
  #L1a064a.  call temp:= `name`(v7, v9) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1a0650.  v10:= temp @kind object;
  #L1a0652.  call temp:= `writeUtf8`(v13, v10) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1a0658.  v10:= temp @kind object;
  #L1a065a.  v11:= `@@okhttp3.MultipartBody.f` @type ^`byte`[] @kind object;
  #L1a065e.  call temp:= `write`(v10, v11) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L1a0664.  v10:= temp @kind object;
  #L1a0666.  call temp:= `value`(v7, v9) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1a066c.  v11:= temp @kind object;
  #L1a066e.  call temp:= `writeUtf8`(v10, v11) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1a0674.  v10:= temp @kind object;
  #L1a0676.  v11:= `@@okhttp3.MultipartBody.g` @type ^`byte`[] @kind object;
  #L1a067a.  call temp:= `write`(v10, v11) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L1a0680.  v9:= v9 + 1;
  #L1a0684.  goto L1a0646;
  #L1a0686.  call temp:= `contentType`(v6) @signature `Lokhttp3/RequestBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L1a068c.  v7:= temp @kind object;
  #L1a068e.  if v7 == 0 then goto L1a06b8;
  #L1a0692.  v8:= "Content-Type: " @kind object;
  #L1a0696.  call temp:= `writeUtf8`(v13, v8) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1a069c.  v8:= temp @kind object;
  #L1a069e.  call temp:= `toString`(v7) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a06a4.  v7:= temp @kind object;
  #L1a06a6.  call temp:= `writeUtf8`(v8, v7) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1a06ac.  v7:= temp @kind object;
  #L1a06ae.  v8:= `@@okhttp3.MultipartBody.g` @type ^`byte`[] @kind object;
  #L1a06b2.  call temp:= `write`(v7, v8) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L1a06b8.  call temp:= `contentLength`(v6) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L1a06be.  v7:= temp @kind wide;
  #L1a06c0.  v9:= -1L;
  #L1a06c4.  v11:= lcmp(v7, v9);
  #L1a06c8.  if v11 == 0 then goto L1a06ec;
  #L1a06cc.  v9:= "Content-Length: " @kind object;
  #L1a06d0.  call temp:= `writeUtf8`(v13, v9) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L1a06d6.  v9:= temp @kind object;
  #L1a06d8.  call temp:= `writeDecimalLong`(v9, v7) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L1a06de.  v9:= temp @kind object;
  #L1a06e0.  v10:= `@@okhttp3.MultipartBody.g` @type ^`byte`[] @kind object;
  #L1a06e4.  call temp:= `write`(v9, v10) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L1a06ea.  goto L1a06fe;
  #L1a06ec.  if v14 == 0 then goto L1a06fe;
  #L1a06f0.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1a06f6.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L1a06fc.  return v9 @kind wide;
  #L1a06fe.  v9:= `@@okhttp3.MultipartBody.g` @type ^`byte`[] @kind object;
  #L1a0702.  call temp:= `write`(v13, v9) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L1a0708.  if v14 == 0 then goto L1a0710;
  #L1a070c.  v3:= v3 + v7 @kind long;
  #L1a070e.  goto L1a0716;
  #L1a0710.  call `writeTo`(v6, v13) @signature `Lokhttp3/RequestBody;.writeTo:(Lokio/BufferedSink;)V` @kind virtual;
  #L1a0716.  v6:= `@@okhttp3.MultipartBody.g` @type ^`byte`[] @kind object;
  #L1a071a.  call temp:= `write`(v13, v6) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L1a0720.  v5:= v5 + 1;
  #L1a0724.  goto L1a05f0;
  #L1a0728.  call `checkNotNull`(v13) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1a072e.  v1:= `@@okhttp3.MultipartBody.h` @type ^`byte`[] @kind object;
  #L1a0732.  call temp:= `write`(v13, v1) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L1a0738.  v1:= v12.`okhttp3.MultipartBody.c` @type ^`okio.ByteString` @kind object;
  #L1a073c.  call temp:= `write`(v13, v1) @signature `Lokio/BufferedSink;.write:(Lokio/ByteString;)Lokio/BufferedSink;` @kind interface;
  #L1a0742.  v1:= `@@okhttp3.MultipartBody.h` @type ^`byte`[] @kind object;
  #L1a0746.  call temp:= `write`(v13, v1) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L1a074c.  v1:= `@@okhttp3.MultipartBody.g` @type ^`byte`[] @kind object;
  #L1a0750.  call temp:= `write`(v13, v1) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L1a0756.  if v14 == 0 then goto L1a0770;
  #L1a075a.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1a0760.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L1a0766.  v13:= temp @kind wide;
  #L1a0768.  v3:= v3 + v13 @kind long;
  #L1a076a.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L1a0770.  return v3 @kind wide;
}
procedure `java.lang.String` `-deprecated_boundary`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.-deprecated_boundary:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a0528.  call temp:= `boundary`(v1) @signature `Lokhttp3/MultipartBody;.boundary:()Ljava/lang/String;` @kind virtual;
  #L1a052e.  v0:= temp @kind object;
  #L1a0530.  return v0 @kind object;
}
procedure `java.util.List` `-deprecated_parts`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.-deprecated_parts:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a0564.  v0:= v1.`okhttp3.MultipartBody.e` @type ^`java.util.List` @kind object;
  #L1a0568.  return v0 @kind object;
}
procedure `int` `-deprecated_size`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.-deprecated_size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a04ec.  call temp:= `size`(v1) @signature `Lokhttp3/MultipartBody;.size:()I` @kind virtual;
  #L1a04f2.  v0:= temp;
  #L1a04f4.  return v0;
}
procedure `okhttp3.MediaType` `-deprecated_type`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.-deprecated_type:()Lokhttp3/MediaType;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a0784.  v0:= v1.`okhttp3.MultipartBody.d` @type ^`okhttp3.MediaType` @kind object;
  #L1a0788.  return v0 @kind object;
}
procedure `java.lang.String` `boundary`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.boundary:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a0544.  v0:= v1.`okhttp3.MultipartBody.c` @type ^`okio.ByteString` @kind object;
  #L1a0548.  call temp:= `utf8`(v0) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L1a054e.  v0:= temp @kind object;
  #L1a0550.  return v0 @kind object;
}
procedure `long` `contentLength`(`okhttp3.MultipartBody` v5 @kind this) @signature `Lokhttp3/MultipartBody;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a0594.  v0:= v5.`okhttp3.MultipartBody.b` @type ^`long` @kind wide;
  #L1a0598.  v2:= -1L;
  #L1a059c.  v4:= lcmp(v0, v2);
  #L1a05a0.  if v4 != 0 then goto L1a05b4;
  #L1a05a4.  v0:= 0I;
  #L1a05a6.  v1:= 1I;
  #L1a05a8.  call temp:= `a`(v5, v0, v1) @signature `Lokhttp3/MultipartBody;.a:(Lokio/BufferedSink;Z)J` @kind direct;
  #L1a05ae.  v0:= temp @kind wide;
  #L1a05b0.  v5.`okhttp3.MultipartBody.b` @type ^`long` := v0 @kind wide;
  #L1a05b4.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a079c.  v0:= v1.`okhttp3.MultipartBody.a` @type ^`okhttp3.MediaType` @kind object;
  #L1a07a0.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `part`(`okhttp3.MultipartBody` v1 @kind this, `int` v2 ) @signature `Lokhttp3/MultipartBody;.part:(I)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a07cc.  v0:= v1.`okhttp3.MultipartBody.e` @type ^`java.util.List` @kind object;
  #L1a07d0.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1a07d6.  v2:= temp @kind object;
  #L1a07d8.  v2:= (`okhttp3.MultipartBody$Part`) v2 @kind object;
  #L1a07dc.  return v2 @kind object;
}
procedure `java.util.List` `parts`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.parts:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a057c.  v0:= v1.`okhttp3.MultipartBody.e` @type ^`java.util.List` @kind object;
  #L1a0580.  return v0 @kind object;
}
procedure `int` `size`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a0508.  v0:= v1.`okhttp3.MultipartBody.e` @type ^`java.util.List` @kind object;
  #L1a050c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1a0512.  v0:= temp;
  #L1a0514.  return v0;
}
procedure `okhttp3.MediaType` `type`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.type:()Lokhttp3/MediaType;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a07b4.  v0:= v1.`okhttp3.MultipartBody.d` @type ^`okhttp3.MediaType` @kind object;
  #L1a07b8.  return v0 @kind object;
}
procedure `void` `writeTo`(`okhttp3.MultipartBody` v1 @kind this, `okio.BufferedSink` v2 @kind object) @signature `Lokhttp3/MultipartBody;.writeTo:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a095c.  v0:= "sink" @kind object;
  #L1a0960.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a0966.  v0:= 0I;
  #L1a0968.  call temp:= `a`(v1, v2, v0) @signature `Lokhttp3/MultipartBody;.a:(Lokio/BufferedSink;Z)J` @kind direct;
  #L1a096e.  return @kind void;
}
