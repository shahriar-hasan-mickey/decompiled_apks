record `okhttp3.Protocol` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `okhttp3.Protocol.protocol` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.Protocol`[] `@@okhttp3.Protocol.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.Protocol$Companion` `@@okhttp3.Protocol.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.Protocol` `@@okhttp3.Protocol.H2_PRIOR_KNOWLEDGE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.Protocol` `@@okhttp3.Protocol.HTTP_1_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.Protocol` `@@okhttp3.Protocol.HTTP_1_1` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.Protocol` `@@okhttp3.Protocol.HTTP_2` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.Protocol` `@@okhttp3.Protocol.QUIC` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.Protocol` `@@okhttp3.Protocol.SPDY_3` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/Protocol;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1a318c.  v0:= 6I;
  #L1a318e.  v0:= new `okhttp3.Protocol`[v0];
  #L1a3192.  v1:= new `okhttp3.Protocol`;
  #L1a3196.  v2:= "HTTP_1_0" @kind object;
  #L1a319a.  v3:= 0I;
  #L1a319c.  v4:= "http/1.0" @kind object;
  #L1a31a0.  call `<init>`(v1, v2, v3, v4) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L1a31a6.  `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L1a31aa.  v0[v3]:= v1 @kind object;
  #L1a31ae.  v1:= new `okhttp3.Protocol`;
  #L1a31b2.  v2:= "HTTP_1_1" @kind object;
  #L1a31b6.  v3:= 1I;
  #L1a31b8.  v4:= "http/1.1" @kind object;
  #L1a31bc.  call `<init>`(v1, v2, v3, v4) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L1a31c2.  `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L1a31c6.  v0[v3]:= v1 @kind object;
  #L1a31ca.  v1:= new `okhttp3.Protocol`;
  #L1a31ce.  v2:= "SPDY_3" @kind object;
  #L1a31d2.  v3:= 2I;
  #L1a31d4.  v4:= "spdy/3.1" @kind object;
  #L1a31d8.  call `<init>`(v1, v2, v3, v4) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L1a31de.  `@@okhttp3.Protocol.SPDY_3` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L1a31e2.  v0[v3]:= v1 @kind object;
  #L1a31e6.  v1:= new `okhttp3.Protocol`;
  #L1a31ea.  v2:= "HTTP_2" @kind object;
  #L1a31ee.  v3:= 3I;
  #L1a31f0.  v4:= "h2" @kind object;
  #L1a31f4.  call `<init>`(v1, v2, v3, v4) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L1a31fa.  `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L1a31fe.  v0[v3]:= v1 @kind object;
  #L1a3202.  v1:= new `okhttp3.Protocol`;
  #L1a3206.  v2:= "H2_PRIOR_KNOWLEDGE" @kind object;
  #L1a320a.  v3:= 4I;
  #L1a320c.  v4:= "h2_prior_knowledge" @kind object;
  #L1a3210.  call `<init>`(v1, v2, v3, v4) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L1a3216.  `@@okhttp3.Protocol.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L1a321a.  v0[v3]:= v1 @kind object;
  #L1a321e.  v1:= new `okhttp3.Protocol`;
  #L1a3222.  v2:= "QUIC" @kind object;
  #L1a3226.  v3:= 5I;
  #L1a3228.  v4:= "quic" @kind object;
  #L1a322c.  call `<init>`(v1, v2, v3, v4) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L1a3232.  `@@okhttp3.Protocol.QUIC` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L1a3236.  v0[v3]:= v1 @kind object;
  #L1a323a.  `@@okhttp3.Protocol.$VALUES` @type ^`okhttp3.Protocol`[] := v0 @kind object;
  #L1a323e.  v0:= new `okhttp3.Protocol$Companion`;
  #L1a3242.  v1:= 0I;
  #L1a3244.  call `<init>`(v0, v1) @signature `Lokhttp3/Protocol$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1a324a.  `@@okhttp3.Protocol.Companion` @type ^`okhttp3.Protocol$Companion` := v0 @kind object;
  #L1a324e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Protocol` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lokhttp3/Protocol;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1a3260.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1a3266.  v0.`okhttp3.Protocol.protocol` @type ^`java.lang.String` := v3 @kind object;
  #L1a326a.  return @kind void;
}
procedure `java.lang.String` `access$getProtocol$p`(`okhttp3.Protocol` v0 @kind object) @signature `Lokhttp3/Protocol;.access$getProtocol$p:(Lokhttp3/Protocol;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1a30f4.  v0:= v0.`okhttp3.Protocol.protocol` @type ^`java.lang.String` @kind object;
  #L1a30f8.  return v0 @kind object;
}
procedure `okhttp3.Protocol` `get`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/Protocol;.get:(Ljava/lang/String;)Lokhttp3/Protocol;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1a3124.  v0:= `@@okhttp3.Protocol.Companion` @type ^`okhttp3.Protocol$Companion` @kind object;
  #L1a3128.  call temp:= `get`(v0, v1) @signature `Lokhttp3/Protocol$Companion;.get:(Ljava/lang/String;)Lokhttp3/Protocol;` @kind virtual;
  #L1a312e.  v1:= temp @kind object;
  #L1a3130.  return v1 @kind object;
}
procedure `okhttp3.Protocol` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/Protocol;.valueOf:(Ljava/lang/String;)Lokhttp3/Protocol;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1a3144.  v0:= constclass @type ^`okhttp3.Protocol` @kind object;
  #L1a3148.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L1a314e.  v1:= temp @kind object;
  #L1a3150.  v1:= (`okhttp3.Protocol`) v1 @kind object;
  #L1a3154.  return v1 @kind object;
}
procedure `okhttp3.Protocol`[] `values`() @signature `Lokhttp3/Protocol;.values:()[Lokhttp3/Protocol;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1a3168.  v0:= `@@okhttp3.Protocol.$VALUES` @type ^`okhttp3.Protocol`[] @kind object;
  #L1a316c.  call temp:= `clone`(v0) @signature `[Lokhttp3/Protocol;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1a3172.  v0:= temp @kind object;
  #L1a3174.  v0:= (`okhttp3.Protocol`[]) v0 @kind object;
  #L1a3178.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Protocol` v1 @kind this) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a310c.  v0:= v1.`okhttp3.Protocol.protocol` @type ^`java.lang.String` @kind object;
  #L1a3110.  return v0 @kind object;
}
