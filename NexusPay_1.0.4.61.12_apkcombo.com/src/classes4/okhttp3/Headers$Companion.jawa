record `okhttp3.Headers$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.Headers$Companion` v0 @kind this) @signature `Lokhttp3/Headers$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L19bffc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19c002.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Headers$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/Headers$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L19c014.  call `<init>`(v0) @signature `Lokhttp3/Headers$Companion;.<init>:()V` @kind direct;
  #L19c01a.  return @kind void;
}
procedure `void` `a`(`okhttp3.Headers$Companion` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/Headers$Companion;.a:(Ljava/lang/String;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19c05c.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L19c062.  v0:= temp;
  #L19c064.  v1:= 1I;
  #L19c066.  v2:= 0I;
  #L19c068.  if v0 <= 0 then goto L19c070;
  #L19c06c.  v0:= 1I;
  #L19c06e.  goto L19c072;
  #L19c070.  v0:= 0I;
  #L19c072.  if v0 == 0 then goto L19c0f4;
  #L19c076.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L19c07c.  v0:= temp;
  #L19c07e.  v3:= 0I;
  #L19c080.  if v3 >= v0 then goto L19c0f2;
  #L19c084.  call temp:= `charAt`(v8, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19c08a.  v4:= temp;
  #L19c08c.  v5:= 126I;
  #L19c090.  v6:= 33I;
  #L19c094.  if v6 <= v4 then goto L19c09a;
  #L19c098.  goto L19c0a2;
  #L19c09a.  if v5 < v4 then goto L19c0a2;
  #L19c09e.  v5:= 1I;
  #L19c0a0.  goto L19c0a4;
  #L19c0a2.  v5:= 0I;
  #L19c0a4.  if v5 == 0 then goto L19c0ae;
  #L19c0a8.  v3:= v3 + 1;
  #L19c0ac.  goto L19c080;
  #L19c0ae.  v0:= 3I;
  #L19c0b0.  v0:= new `java.lang.Object`[v0];
  #L19c0b4.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L19c0ba.  v4:= temp @kind object;
  #L19c0bc.  v0[v2]:= v4 @kind object;
  #L19c0c0.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L19c0c6.  v2:= temp @kind object;
  #L19c0c8.  v0[v1]:= v2 @kind object;
  #L19c0cc.  v1:= 2I;
  #L19c0ce.  v0[v1]:= v8 @kind object;
  #L19c0d2.  v8:= "Unexpected char %#04x at %d in header name: %s" @kind object;
  #L19c0d6.  call temp:= `format`(v8, v0) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L19c0dc.  v8:= temp @kind object;
  #L19c0de.  v0:= new `java.lang.IllegalArgumentException`;
  #L19c0e2.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c0e8.  v8:= temp @kind object;
  #L19c0ea.  call `<init>`(v0, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c0f0.  throw v0;
  #L19c0f2.  return @kind void;
  #L19c0f4.  v8:= new `java.lang.IllegalArgumentException`;
  #L19c0f8.  v0:= "name is empty" @kind object;
  #L19c0fc.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c102.  v0:= temp @kind object;
  #L19c104.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c10a.  throw v8;
}
procedure `void` `access$checkName`(`okhttp3.Headers$Companion` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lokhttp3/Headers$Companion;.access$checkName:(Lokhttp3/Headers$Companion;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L19c02c.  call `a`(v0, v1) @signature `Lokhttp3/Headers$Companion;.a:(Ljava/lang/String;)V` @kind direct;
  #L19c032.  return @kind void;
}
procedure `void` `access$checkValue`(`okhttp3.Headers$Companion` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Headers$Companion;.access$checkValue:(Lokhttp3/Headers$Companion;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L19c044.  call `b`(v0, v1, v2) @signature `Lokhttp3/Headers$Companion;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L19c04a.  return @kind void;
}
procedure `java.lang.String` `access$get`(`okhttp3.Headers$Companion` v0 @kind object, `java.lang.String`[] v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Headers$Companion;.access$get:(Lokhttp3/Headers$Companion;[Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L19bd04.  call temp:= `c`(v0, v1, v2) @signature `Lokhttp3/Headers$Companion;.c:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L19bd0a.  v0:= temp @kind object;
  #L19bd0c.  return v0 @kind object;
}
procedure `void` `b`(`okhttp3.Headers$Companion` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lokhttp3/Headers$Companion;.b:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19c11c.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L19c122.  v0:= temp;
  #L19c124.  v1:= 0I;
  #L19c126.  v2:= 0I;
  #L19c128.  if v2 >= v0 then goto L19c1f8;
  #L19c12c.  call temp:= `charAt`(v8, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19c132.  v3:= temp;
  #L19c134.  v4:= 9I;
  #L19c138.  v5:= 1I;
  #L19c13a.  if v3 == v4 then goto L19c156;
  #L19c13e.  v4:= 126I;
  #L19c142.  v6:= 32I;
  #L19c146.  if v6 <= v3 then goto L19c14c;
  #L19c14a.  goto L19c152;
  #L19c14c.  if v4 < v3 then goto L19c152;
  #L19c150.  goto L19c156;
  #L19c152.  v4:= 0I;
  #L19c154.  goto L19c158;
  #L19c156.  v4:= 1I;
  #L19c158.  if v4 != 0 then goto L19c1f2;
  #L19c15c.  v0:= new `java.lang.StringBuilder`;
  #L19c160.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c166.  v4:= 3I;
  #L19c168.  v4:= new `java.lang.Object`[v4];
  #L19c16c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L19c172.  v3:= temp @kind object;
  #L19c174.  v4[v1]:= v3 @kind object;
  #L19c178.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L19c17e.  v1:= temp @kind object;
  #L19c180.  v4[v5]:= v1 @kind object;
  #L19c184.  v1:= 2I;
  #L19c186.  v4[v1]:= v9 @kind object;
  #L19c18a.  v1:= "Unexpected char %#04x at %d in %s value" @kind object;
  #L19c18e.  call temp:= `format`(v1, v4) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L19c194.  v1:= temp @kind object;
  #L19c196.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c19c.  call temp:= `isSensitiveHeader`(v9) @signature `Lokhttp3/internal/Util;.isSensitiveHeader:(Ljava/lang/String;)Z` @kind static;
  #L19c1a2.  v9:= temp;
  #L19c1a4.  if v9 == 0 then goto L19c1ae;
  #L19c1a8.  v8:= "" @kind object;
  #L19c1ac.  goto L19c1d0;
  #L19c1ae.  v9:= new `java.lang.StringBuilder`;
  #L19c1b2.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19c1b8.  v1:= ": " @kind object;
  #L19c1bc.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c1c2.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c1c8.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c1ce.  v8:= temp @kind object;
  #L19c1d0.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19c1d6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c1dc.  v8:= temp @kind object;
  #L19c1de.  v9:= new `java.lang.IllegalArgumentException`;
  #L19c1e2.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L19c1e8.  v8:= temp @kind object;
  #L19c1ea.  call `<init>`(v9, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19c1f0.  throw v9;
  #L19c1f2.  v2:= v2 + 1;
  #L19c1f6.  goto L19c128;
  #L19c1f8.  return @kind void;
}
procedure `java.lang.String` `c`(`okhttp3.Headers$Companion` v5 @kind this, `java.lang.String`[] v6 @kind object, `java.lang.String` v7 @kind object) @signature `Lokhttp3/Headers$Companion;.c:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19bd20.  v0:= length @variable v6;
  #L19bd22.  v1:= 2I;
  #L19bd24.  v0:= v0 - v1 @kind int;
  #L19bd26.  v2:= 0I;
  #L19bd28.  call temp:= `downTo`(v0, v2) @signature `Lkotlin/ranges/RangesKt;.downTo:(II)Lkotlin/ranges/IntProgression;` @kind static;
  #L19bd2e.  v0:= temp @kind object;
  #L19bd30.  call temp:= `step`(v0, v1) @signature `Lkotlin/ranges/RangesKt;.step:(Lkotlin/ranges/IntProgression;I)Lkotlin/ranges/IntProgression;` @kind static;
  #L19bd36.  v0:= temp @kind object;
  #L19bd38.  call temp:= `getFirst`(v0) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L19bd3e.  v1:= temp;
  #L19bd40.  call temp:= `getLast`(v0) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L19bd46.  v2:= temp;
  #L19bd48.  call temp:= `getStep`(v0) @signature `Lkotlin/ranges/IntProgression;.getStep:()I` @kind virtual;
  #L19bd4e.  v0:= temp;
  #L19bd50.  if v0 < 0 then goto L19bd5a;
  #L19bd54.  if v1 > v2 then goto L19bd80;
  #L19bd58.  goto L19bd5e;
  #L19bd5a.  if v1 < v2 then goto L19bd80;
  #L19bd5e.  v3:= v6[v1] @kind object;
  #L19bd62.  v4:= 1I;
  #L19bd64.  call temp:= `equals`(v7, v3, v4) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L19bd6a.  v3:= temp;
  #L19bd6c.  if v3 == 0 then goto L19bd78;
  #L19bd70.  v1:= v1 + v4 @kind int;
  #L19bd72.  v6:= v6[v1] @kind object;
  #L19bd76.  return v6 @kind object;
  #L19bd78.  if v1 == v2 then goto L19bd80;
  #L19bd7c.  v1:= v1 + v0 @kind int;
  #L19bd7e.  goto L19bd5e;
  #L19bd80.  v6:= 0I;
  #L19bd82.  return v6 @kind object;
}
procedure `okhttp3.Headers` `-deprecated_of`(`okhttp3.Headers$Companion` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lokhttp3/Headers$Companion;.-deprecated_of:(Ljava/util/Map;)Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19bdc8.  v0:= "headers" @kind object;
  #L19bdcc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19bdd2.  call temp:= `of`(v1, v2) @signature `Lokhttp3/Headers$Companion;.of:(Ljava/util/Map;)Lokhttp3/Headers;` @kind virtual;
  #L19bdd8.  v2:= temp @kind object;
  #L19bdda.  return v2 @kind object;
}
procedure `okhttp3.Headers` `-deprecated_of`(`okhttp3.Headers$Companion` v1 @kind this, `java.lang.String`[] v2 @kind object) @signature `Lokhttp3/Headers$Companion;.-deprecated_of:([Ljava/lang/String;)Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19bd94.  v0:= "namesAndValues" @kind object;
  #L19bd98.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19bd9e.  v0:= length @variable v2;
  #L19bda0.  call temp:= `copyOf`(v2, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L19bda6.  v2:= temp @kind object;
  #L19bda8.  v2:= (`java.lang.String`[]) v2 @kind object;
  #L19bdac.  call temp:= `of`(v1, v2) @signature `Lokhttp3/Headers$Companion;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind virtual;
  #L19bdb2.  v2:= temp @kind object;
  #L19bdb4.  return v2 @kind object;
}
procedure `okhttp3.Headers` `of`(`okhttp3.Headers$Companion` v5 @kind this, `java.util.Map` v6 @kind object) @signature `Lokhttp3/Headers$Companion;.of:(Ljava/util/Map;)Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19bf20.  v0:= "$this$toHeaders" @kind object;
  #L19bf24.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19bf2a.  call temp:= `size`(v6) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L19bf30.  v0:= temp;
  #L19bf32.  v0:= v0 * 2;
  #L19bf36.  v0:= new `java.lang.String`[v0];
  #L19bf3a.  call temp:= `entrySet`(v6) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L19bf40.  v6:= temp @kind object;
  #L19bf42.  call temp:= `iterator`(v6) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L19bf48.  v6:= temp @kind object;
  #L19bf4a.  v1:= 0I;
  #L19bf4c.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L19bf52.  v2:= temp;
  #L19bf54.  if v2 == 0 then goto L19bfde;
  #L19bf58.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L19bf5e.  v2:= temp @kind object;
  #L19bf60.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L19bf64.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L19bf6a.  v3:= temp @kind object;
  #L19bf6c.  v3:= (`java.lang.String`) v3 @kind object;
  #L19bf70.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L19bf76.  v2:= temp @kind object;
  #L19bf78.  v2:= (`java.lang.String`) v2 @kind object;
  #L19bf7c.  v4:= "null cannot be cast to non-null type kotlin.CharSequence" @kind object;
  #L19bf80.  if v3 == 0 then goto L19bfd2;
  #L19bf84.  call temp:= `trim`(v3) @signature `Lkotlin/text/StringsKt;.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L19bf8a.  v3:= temp @kind object;
  #L19bf8c.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L19bf92.  v3:= temp @kind object;
  #L19bf94.  if v2 == 0 then goto L19bfc6;
  #L19bf98.  call temp:= `trim`(v2) @signature `Lkotlin/text/StringsKt;.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L19bf9e.  v2:= temp @kind object;
  #L19bfa0.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L19bfa6.  v2:= temp @kind object;
  #L19bfa8.  call `a`(v5, v3) @signature `Lokhttp3/Headers$Companion;.a:(Ljava/lang/String;)V` @kind direct;
  #L19bfae.  call `b`(v5, v2, v3) @signature `Lokhttp3/Headers$Companion;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L19bfb4.  v0[v1]:= v3 @kind object;
  #L19bfb8.  v3:= v1 + 1;
  #L19bfbc.  v0[v3]:= v2 @kind object;
  #L19bfc0.  v1:= v1 + 2;
  #L19bfc4.  goto L19bf4c;
  #L19bfc6.  v6:= new `java.lang.NullPointerException`;
  #L19bfca.  call `<init>`(v6, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bfd0.  throw v6;
  #L19bfd2.  v6:= new `java.lang.NullPointerException`;
  #L19bfd6.  call `<init>`(v6, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bfdc.  throw v6;
  #L19bfde.  v6:= new `okhttp3.Headers`;
  #L19bfe2.  v1:= 0I;
  #L19bfe4.  call `<init>`(v6, v0, v1) @signature `Lokhttp3/Headers;.<init>:([Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L19bfea.  return v6 @kind object;
}
procedure `okhttp3.Headers` `of`(`okhttp3.Headers$Companion` v6 @kind this, `java.lang.String`[] v7 @kind object) @signature `Lokhttp3/Headers$Companion;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19bdec.  v0:= "namesAndValues" @kind object;
  #L19bdf0.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19bdf6.  v0:= length @variable v7;
  #L19bdf8.  v1:= 2I;
  #L19bdfa.  v0:= v0 %% v1 @kind int;
  #L19bdfc.  v2:= 0I;
  #L19bdfe.  v3:= 1I;
  #L19be00.  if v0 != 0 then goto L19be08;
  #L19be04.  v0:= 1I;
  #L19be06.  goto L19be0a;
  #L19be08.  v0:= 0I;
  #L19be0a.  if v0 == 0 then goto L19bef6;
  #L19be0e.  call temp:= `clone`(v7) @signature `Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L19be14.  v7:= temp @kind object;
  #L19be16.  if v7 == 0 then goto L19bee6;
  #L19be1a.  v7:= (`java.lang.String`[]) v7 @kind object;
  #L19be1e.  v0:= length @variable v7;
  #L19be20.  v4:= 0I;
  #L19be22.  if v4 >= v0 then goto L19be82;
  #L19be26.  v5:= v7[v4] @kind object;
  #L19be2a.  if v5 == 0 then goto L19be32;
  #L19be2e.  v5:= 1I;
  #L19be30.  goto L19be34;
  #L19be32.  v5:= 0I;
  #L19be34.  if v5 == 0 then goto L19be6a;
  #L19be38.  v5:= v7[v4] @kind object;
  #L19be3c.  if v5 == 0 then goto L19be5a;
  #L19be40.  call temp:= `trim`(v5) @signature `Lkotlin/text/StringsKt;.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L19be46.  v5:= temp @kind object;
  #L19be48.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L19be4e.  v5:= temp @kind object;
  #L19be50.  v7[v4]:= v5 @kind object;
  #L19be54.  v4:= v4 + 1;
  #L19be58.  goto L19be22;
  #L19be5a.  v7:= new `java.lang.NullPointerException`;
  #L19be5e.  v0:= "null cannot be cast to non-null type kotlin.CharSequence" @kind object;
  #L19be62.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19be68.  throw v7;
  #L19be6a.  v7:= new `java.lang.IllegalArgumentException`;
  #L19be6e.  v0:= "Headers cannot be null" @kind object;
  #L19be72.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L19be78.  v0:= temp @kind object;
  #L19be7a.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19be80.  throw v7;
  #L19be82.  call temp:= `getIndices`(v7) @signature `Lkotlin/collections/ArraysKt;.getIndices:([Ljava/lang/Object;)Lkotlin/ranges/IntRange;` @kind static;
  #L19be88.  v0:= temp @kind object;
  #L19be8a.  call temp:= `step`(v0, v1) @signature `Lkotlin/ranges/RangesKt;.step:(Lkotlin/ranges/IntProgression;I)Lkotlin/ranges/IntProgression;` @kind static;
  #L19be90.  v0:= temp @kind object;
  #L19be92.  call temp:= `getFirst`(v0) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L19be98.  v1:= temp;
  #L19be9a.  call temp:= `getLast`(v0) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L19bea0.  v2:= temp;
  #L19bea2.  call temp:= `getStep`(v0) @signature `Lkotlin/ranges/IntProgression;.getStep:()I` @kind virtual;
  #L19bea8.  v0:= temp;
  #L19beaa.  if v0 < 0 then goto L19beb4;
  #L19beae.  if v1 > v2 then goto L19bed8;
  #L19beb2.  goto L19beb8;
  #L19beb4.  if v1 < v2 then goto L19bed8;
  #L19beb8.  v3:= v7[v1] @kind object;
  #L19bebc.  v4:= v1 + 1;
  #L19bec0.  v4:= v7[v4] @kind object;
  #L19bec4.  call `a`(v6, v3) @signature `Lokhttp3/Headers$Companion;.a:(Ljava/lang/String;)V` @kind direct;
  #L19beca.  call `b`(v6, v4, v3) @signature `Lokhttp3/Headers$Companion;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L19bed0.  if v1 == v2 then goto L19bed8;
  #L19bed4.  v1:= v1 + v0 @kind int;
  #L19bed6.  goto L19beb8;
  #L19bed8.  v0:= new `okhttp3.Headers`;
  #L19bedc.  v1:= 0I;
  #L19bede.  call `<init>`(v0, v7, v1) @signature `Lokhttp3/Headers;.<init>:([Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L19bee4.  return v0 @kind object;
  #L19bee6.  v7:= new `java.lang.NullPointerException`;
  #L19beea.  v0:= "null cannot be cast to non-null type kotlin.Array<kotlin.String>" @kind object;
  #L19beee.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bef4.  throw v7;
  #L19bef6.  v7:= new `java.lang.IllegalArgumentException`;
  #L19befa.  v0:= "Expected alternating header names and values" @kind object;
  #L19befe.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L19bf04.  v0:= temp @kind object;
  #L19bf06.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19bf0c.  throw v7;
}
