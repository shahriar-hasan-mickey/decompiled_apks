record `okhttp3.RequestBody$Companion$asRequestBody$1` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.RequestBody` @kind class {
  `java.io.File` `okhttp3.RequestBody$Companion$asRequestBody$1.a` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.MediaType` `okhttp3.RequestBody$Companion$asRequestBody$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.RequestBody$Companion$asRequestBody$1` v0 @kind this, `java.io.File` v1 @kind object, `okhttp3.MediaType` v2 @kind object) @signature `Lokhttp3/RequestBody$Companion$asRequestBody$1;.<init>:(Ljava/io/File;Lokhttp3/MediaType;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1a39bc.  v0.`okhttp3.RequestBody$Companion$asRequestBody$1.a` @type ^`java.io.File` := v1 @kind object;
  #L1a39c0.  v0.`okhttp3.RequestBody$Companion$asRequestBody$1.b` @type ^`okhttp3.MediaType` := v2 @kind object;
  #L1a39c4.  call `<init>`(v0) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L1a39ca.  return @kind void;
}
procedure `long` `contentLength`(`okhttp3.RequestBody$Companion$asRequestBody$1` v2 @kind this) @signature `Lokhttp3/RequestBody$Companion$asRequestBody$1;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a3984.  v0:= v2.`okhttp3.RequestBody$Companion$asRequestBody$1.a` @type ^`java.io.File` @kind object;
  #L1a3988.  call temp:= `length`(v0) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L1a398e.  v0:= temp @kind wide;
  #L1a3990.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.RequestBody$Companion$asRequestBody$1` v1 @kind this) @signature `Lokhttp3/RequestBody$Companion$asRequestBody$1;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a39a4.  v0:= v1.`okhttp3.RequestBody$Companion$asRequestBody$1.b` @type ^`okhttp3.MediaType` @kind object;
  #L1a39a8.  return v0 @kind object;
}
procedure `void` `writeTo`(`okhttp3.RequestBody$Companion$asRequestBody$1` v2 @kind this, `okio.BufferedSink` v3 @kind object) @signature `Lokhttp3/RequestBody$Companion$asRequestBody$1;.writeTo:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a39dc.  v0:= "sink" @kind object;
  #L1a39e0.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a39e6.  v0:= v2.`okhttp3.RequestBody$Companion$asRequestBody$1.a` @type ^`java.io.File` @kind object;
  #L1a39ea.  call temp:= `source`(v0) @signature `Lokio/Okio;.source:(Ljava/io/File;)Lokio/Source;` @kind static;
  #L1a39f0.  v0:= temp @kind object;
  #L1a39f2.  call temp:= `writeAll`(v3, v0) @signature `Lokio/BufferedSink;.writeAll:(Lokio/Source;)J` @kind interface;
  #L1a39f8.  v3:= 0I;
  #L1a39fa.  call `closeFinally`(v0, v3) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L1a3a00.  return @kind void;
  #L1a3a02.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a3a04.  throw v3;
  #L1a3a06.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1a3a08.  call `closeFinally`(v0, v3) @signature `Lkotlin/io/CloseableKt;.closeFinally:(Ljava/io/Closeable;Ljava/lang/Throwable;)V` @kind static;
  #L1a3a0e.  throw v1;
  catch `java.lang.Throwable` @[L1a39f2..L1a39f8] goto L1a3a02;
  catch `java.lang.Throwable` @[L1a3a04..L1a3a06] goto L1a3a06;
}
