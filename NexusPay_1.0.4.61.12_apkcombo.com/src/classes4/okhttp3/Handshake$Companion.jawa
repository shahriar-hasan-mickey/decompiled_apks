record `okhttp3.Handshake$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.Handshake$Companion` v0 @kind this) @signature `Lokhttp3/Handshake$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L19b288.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19b28e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Handshake$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lokhttp3/Handshake$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L19b2a0.  call `<init>`(v0) @signature `Lokhttp3/Handshake$Companion;.<init>:()V` @kind direct;
  #L19b2a6.  return @kind void;
}
procedure `java.util.List` `a`(`okhttp3.Handshake$Companion` v1 @kind this, `java.security.cert.Certificate`[] v2 @kind object) @signature `Lokhttp3/Handshake$Companion;.a:([Ljava/security/cert/Certificate;)Ljava/util/List;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L19b074.  if v2 == 0 then goto L19b090;
  #L19b078.  v0:= length @variable v2;
  #L19b07a.  call temp:= `copyOf`(v2, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L19b080.  v2:= temp @kind object;
  #L19b082.  v2:= (`java.security.cert.Certificate`[]) v2 @kind object;
  #L19b086.  call temp:= `immutableListOf`(v2) @signature `Lokhttp3/internal/Util;.immutableListOf:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L19b08c.  v2:= temp @kind object;
  #L19b08e.  goto L19b098;
  #L19b090.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L19b096.  v2:= temp @kind object;
  #L19b098.  return v2 @kind object;
}
procedure `okhttp3.Handshake` `-deprecated_get`(`okhttp3.Handshake$Companion` v1 @kind this, `javax.net.ssl.SSLSession` v2 @kind object) @signature `Lokhttp3/Handshake$Companion;.-deprecated_get:(Ljavax/net/ssl/SSLSession;)Lokhttp3/Handshake;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19b0ac.  v0:= "sslSession" @kind object;
  #L19b0b0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19b0b6.  call temp:= `get`(v1, v2) @signature `Lokhttp3/Handshake$Companion;.get:(Ljavax/net/ssl/SSLSession;)Lokhttp3/Handshake;` @kind virtual;
  #L19b0bc.  v2:= temp @kind object;
  #L19b0be.  return v2 @kind object;
}
procedure `okhttp3.Handshake` `get`(`okhttp3.Handshake$Companion` v5 @kind this, `javax.net.ssl.SSLSession` v6 @kind object) @signature `Lokhttp3/Handshake$Companion;.get:(Ljavax/net/ssl/SSLSession;)Lokhttp3/Handshake;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19b0d0.  v0:= "$this$handshake" @kind object;
  #L19b0d4.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19b0da.  call temp:= `getCipherSuite`(v6) @signature `Ljavax/net/ssl/SSLSession;.getCipherSuite:()Ljava/lang/String;` @kind interface;
  #L19b0e0.  v0:= temp @kind object;
  #L19b0e2.  if v0 == 0 then goto L19b1f0;
  #L19b0e6.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L19b0ec.  v1:= temp;
  #L19b0ee.  v2:= 1019404634I;
  #L19b0f4.  if v1 == v2 then goto L19b116;
  #L19b0f8.  v2:= 1208658923I;
  #L19b0fe.  if v1 == v2 then goto L19b104;
  #L19b102.  goto L19b126;
  #L19b104.  v1:= "SSL_NULL_WITH_NULL_NULL" @kind object;
  #L19b108.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19b10e.  v1:= temp;
  #L19b110.  if v1 != 0 then goto L19b1c2;
  #L19b114.  goto L19b126;
  #L19b116.  v1:= "TLS_NULL_WITH_NULL_NULL" @kind object;
  #L19b11a.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L19b120.  v1:= temp;
  #L19b122.  if v1 != 0 then goto L19b1c2;
  #L19b126.  v1:= `@@okhttp3.CipherSuite.Companion` @type ^`okhttp3.CipherSuite$Companion` @kind object;
  #L19b12a.  call temp:= `forJavaName`(v1, v0) @signature `Lokhttp3/CipherSuite$Companion;.forJavaName:(Ljava/lang/String;)Lokhttp3/CipherSuite;` @kind virtual;
  #L19b130.  v0:= temp @kind object;
  #L19b132.  call temp:= `getProtocol`(v6) @signature `Ljavax/net/ssl/SSLSession;.getProtocol:()Ljava/lang/String;` @kind interface;
  #L19b138.  v1:= temp @kind object;
  #L19b13a.  if v1 == 0 then goto L19b1aa;
  #L19b13e.  v2:= "NONE" @kind object;
  #L19b142.  call temp:= `areEqual`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L19b148.  v2:= temp;
  #L19b14a.  if v2 != 0 then goto L19b19a;
  #L19b14e.  v2:= `@@okhttp3.TlsVersion.Companion` @type ^`okhttp3.TlsVersion$Companion` @kind object;
  #L19b152.  call temp:= `forJavaName`(v2, v1) @signature `Lokhttp3/TlsVersion$Companion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind virtual;
  #L19b158.  v1:= temp @kind object;
  #L19b15a.  call temp:= `getPeerCertificates`(v6) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L19b160.  v2:= temp @kind object;
  #L19b162.  call temp:= `a`(v5, v2) @signature `Lokhttp3/Handshake$Companion;.a:([Ljava/security/cert/Certificate;)Ljava/util/List;` @kind direct;
  #L19b168.  v2:= temp @kind object;
  #L19b16a.  goto L19b174;
  #L19b16c.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L19b172.  v2:= temp @kind object;
  #L19b174.  v3:= new `okhttp3.Handshake`;
  #L19b178.  call temp:= `getLocalCertificates`(v6) @signature `Ljavax/net/ssl/SSLSession;.getLocalCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L19b17e.  v6:= temp @kind object;
  #L19b180.  call temp:= `a`(v5, v6) @signature `Lokhttp3/Handshake$Companion;.a:([Ljava/security/cert/Certificate;)Ljava/util/List;` @kind direct;
  #L19b186.  v6:= temp @kind object;
  #L19b188.  v4:= new `okhttp3.Handshake$Companion$b`;
  #L19b18c.  call `<init>`(v4, v2) @signature `Lokhttp3/Handshake$Companion$b;.<init>:(Ljava/util/List;)V` @kind direct;
  #L19b192.  call `<init>`(v3, v1, v0, v6, v4) @signature `Lokhttp3/Handshake;.<init>:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Lkotlin/jvm/functions/Function0;)V` @kind direct;
  #L19b198.  return v3 @kind object;
  #L19b19a.  v6:= new `java.io.IOException`;
  #L19b19e.  v0:= "tlsVersion == NONE" @kind object;
  #L19b1a2.  call `<init>`(v6, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b1a8.  throw v6;
  #L19b1aa.  v6:= new `java.lang.IllegalStateException`;
  #L19b1ae.  v0:= "tlsVersion == null" @kind object;
  #L19b1b2.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b1b8.  v0:= temp @kind object;
  #L19b1ba.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b1c0.  throw v6;
  #L19b1c2.  v6:= new `java.io.IOException`;
  #L19b1c6.  v1:= new `java.lang.StringBuilder`;
  #L19b1ca.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19b1d0.  v2:= "cipherSuite == " @kind object;
  #L19b1d4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b1da.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b1e0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b1e6.  v0:= temp @kind object;
  #L19b1e8.  call `<init>`(v6, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b1ee.  throw v6;
  #L19b1f0.  v6:= new `java.lang.IllegalStateException`;
  #L19b1f4.  v0:= "cipherSuite == null" @kind object;
  #L19b1f8.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b1fe.  v0:= temp @kind object;
  #L19b200.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b206.  throw v6;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[L19b15a..L19b16a] goto L19b16c;
}
procedure `okhttp3.Handshake` `get`(`okhttp3.Handshake$Companion` v2 @kind this, `okhttp3.TlsVersion` v3 @kind object, `okhttp3.CipherSuite` v4 @kind object, `java.util.List` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lokhttp3/Handshake$Companion;.get:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L19b228.  v0:= "tlsVersion" @kind object;
  #L19b22c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19b232.  v0:= "cipherSuite" @kind object;
  #L19b236.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19b23c.  v0:= "peerCertificates" @kind object;
  #L19b240.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19b246.  v0:= "localCertificates" @kind object;
  #L19b24a.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19b250.  call temp:= `toImmutableList`(v5) @signature `Lokhttp3/internal/Util;.toImmutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19b256.  v5:= temp @kind object;
  #L19b258.  v0:= new `okhttp3.Handshake`;
  #L19b25c.  call temp:= `toImmutableList`(v6) @signature `Lokhttp3/internal/Util;.toImmutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19b262.  v6:= temp @kind object;
  #L19b264.  v1:= new `okhttp3.Handshake$Companion$a`;
  #L19b268.  call `<init>`(v1, v5) @signature `Lokhttp3/Handshake$Companion$a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L19b26e.  call `<init>`(v0, v3, v4, v6, v1) @signature `Lokhttp3/Handshake;.<init>:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Lkotlin/jvm/functions/Function0;)V` @kind direct;
  #L19b274.  return v0 @kind object;
}
