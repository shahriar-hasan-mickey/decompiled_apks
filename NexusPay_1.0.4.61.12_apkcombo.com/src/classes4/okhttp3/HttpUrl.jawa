record `okhttp3.HttpUrl` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `okhttp3.HttpUrl.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.e` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.HttpUrl.f` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.HttpUrl.g` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.HttpUrl.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.i` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.j` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.HttpUrl$Companion` `@@okhttp3.HttpUrl.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.FORM_ENCODE_SET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.FRAGMENT_ENCODE_SET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.FRAGMENT_ENCODE_SET_URI` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PASSWORD_ENCODE_SET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PATH_SEGMENT_ENCODE_SET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.PATH_SEGMENT_ENCODE_SET_URI` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_ENCODE_SET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_ENCODE_SET_URI` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_COMPONENT_REENCODE_SET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.QUERY_ENCODE_SET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.HttpUrl.USERNAME_ENCODE_SET` @AccessFlag PUBLIC_STATIC_FINAL;
global `char`[] `@@okhttp3.HttpUrl.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/HttpUrl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19f73c.  v0:= new `okhttp3.HttpUrl$Companion`;
  #L19f740.  v1:= 0I;
  #L19f742.  call `<init>`(v0, v1) @signature `Lokhttp3/HttpUrl$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L19f748.  `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` := v0 @kind object;
  #L19f74c.  v0:= 16I;
  #L19f750.  v0:= new `char`[v0];
  #L19f754.  goto L19f760;
  #L19f75a.  `@@okhttp3.HttpUrl.k` @type ^`char`[] := v0 @kind object;
  #L19f75e.  return @kind void;
  #L19f760.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L19f787.  goto L19f75a;
}
procedure `void` `<init>`(`okhttp3.HttpUrl` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `int` v6 , `java.util.List` v7 @kind object, `java.util.List` v8 @kind object, `java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object) @signature `Lokhttp3/HttpUrl;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L19f798.  v0:= "scheme" @kind object;
  #L19f79c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19f7a2.  v0:= "username" @kind object;
  #L19f7a6.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19f7ac.  v0:= "password" @kind object;
  #L19f7b0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19f7b6.  v0:= "host" @kind object;
  #L19f7ba.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19f7c0.  v0:= "pathSegments" @kind object;
  #L19f7c4.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19f7ca.  v0:= "url" @kind object;
  #L19f7ce.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19f7d4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19f7da.  v1.`okhttp3.HttpUrl.b` @type ^`java.lang.String` := v2 @kind object;
  #L19f7de.  v1.`okhttp3.HttpUrl.c` @type ^`java.lang.String` := v3 @kind object;
  #L19f7e2.  v1.`okhttp3.HttpUrl.d` @type ^`java.lang.String` := v4 @kind object;
  #L19f7e6.  v1.`okhttp3.HttpUrl.e` @type ^`java.lang.String` := v5 @kind object;
  #L19f7ea.  v1.`okhttp3.HttpUrl.f` @type ^`int` := v6;
  #L19f7ee.  v1.`okhttp3.HttpUrl.g` @type ^`java.util.List` := v7 @kind object;
  #L19f7f2.  v1.`okhttp3.HttpUrl.h` @type ^`java.util.List` := v8 @kind object;
  #L19f7f6.  v1.`okhttp3.HttpUrl.i` @type ^`java.lang.String` := v9 @kind object;
  #L19f7fa.  v1.`okhttp3.HttpUrl.j` @type ^`java.lang.String` := v10 @kind object;
  #L19f7fe.  v3:= "https" @kind object;
  #L19f802.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L19f808.  v2:= temp;
  #L19f80a.  v1.`okhttp3.HttpUrl.a` @type ^`boolean` := v2 @kind boolean;
  #L19f80e.  return @kind void;
}
procedure `char`[] `access$getHEX_DIGITS$cp`() @signature `Lokhttp3/HttpUrl;.access$getHEX_DIGITS$cp:()[C` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L19eae8.  v0:= `@@okhttp3.HttpUrl.k` @type ^`char`[] @kind object;
  #L19eaec.  return v0 @kind object;
}
procedure `int` `defaultPort`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L19eb50.  v0:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L19eb54.  call temp:= `defaultPort`(v0, v1) @signature `Lokhttp3/HttpUrl$Companion;.defaultPort:(Ljava/lang/String;)I` @kind virtual;
  #L19eb5a.  v1:= temp;
  #L19eb5c.  return v1;
}
procedure `okhttp3.HttpUrl` `get`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/HttpUrl;.get:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L19f590.  v0:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L19f594.  call temp:= `get`(v0, v1) @signature `Lokhttp3/HttpUrl$Companion;.get:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind virtual;
  #L19f59a.  v1:= temp @kind object;
  #L19f59c.  return v1 @kind object;
}
procedure `okhttp3.HttpUrl` `get`(`java.net.URI` v1 @kind object) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URI;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L19f5b0.  v0:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L19f5b4.  call temp:= `get`(v0, v1) @signature `Lokhttp3/HttpUrl$Companion;.get:(Ljava/net/URI;)Lokhttp3/HttpUrl;` @kind virtual;
  #L19f5ba.  v1:= temp @kind object;
  #L19f5bc.  return v1 @kind object;
}
procedure `okhttp3.HttpUrl` `get`(`java.net.URL` v1 @kind object) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URL;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L19f5d0.  v0:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L19f5d4.  call temp:= `get`(v0, v1) @signature `Lokhttp3/HttpUrl$Companion;.get:(Ljava/net/URL;)Lokhttp3/HttpUrl;` @kind virtual;
  #L19f5da.  v1:= temp @kind object;
  #L19f5dc.  return v1 @kind object;
}
procedure `okhttp3.HttpUrl` `parse`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L19f5f0.  v0:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L19f5f4.  call temp:= `parse`(v0, v1) @signature `Lokhttp3/HttpUrl$Companion;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind virtual;
  #L19f5fa.  v1:= temp @kind object;
  #L19f5fc.  return v1 @kind object;
}
procedure `java.lang.String` `-deprecated_encodedFragment`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_encodedFragment:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ebf4.  call temp:= `encodedFragment`(v1) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @kind virtual;
  #L19ebfa.  v0:= temp @kind object;
  #L19ebfc.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_encodedPassword`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_encodedPassword:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ec10.  call temp:= `encodedPassword`(v1) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L19ec16.  v0:= temp @kind object;
  #L19ec18.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_encodedPath`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_encodedPath:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ec2c.  call temp:= `encodedPath`(v1) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @kind virtual;
  #L19ec32.  v0:= temp @kind object;
  #L19ec34.  return v0 @kind object;
}
procedure `java.util.List` `-deprecated_encodedPathSegments`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_encodedPathSegments:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19f30c.  call temp:= `encodedPathSegments`(v1) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L19f312.  v0:= temp @kind object;
  #L19f314.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_encodedQuery`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_encodedQuery:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ec48.  call temp:= `encodedQuery`(v1) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L19ec4e.  v0:= temp @kind object;
  #L19ec50.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_encodedUsername`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_encodedUsername:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ec64.  call temp:= `encodedUsername`(v1) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L19ec6a.  v0:= temp @kind object;
  #L19ec6c.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_fragment`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_fragment:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ec80.  v0:= v1.`okhttp3.HttpUrl.i` @type ^`java.lang.String` @kind object;
  #L19ec84.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_host`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_host:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ec98.  v0:= v1.`okhttp3.HttpUrl.e` @type ^`java.lang.String` @kind object;
  #L19ec9c.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_password`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_password:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ecb0.  v0:= v1.`okhttp3.HttpUrl.d` @type ^`java.lang.String` @kind object;
  #L19ecb4.  return v0 @kind object;
}
procedure `java.util.List` `-deprecated_pathSegments`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_pathSegments:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19f328.  v0:= v1.`okhttp3.HttpUrl.g` @type ^`java.util.List` @kind object;
  #L19f32c.  return v0 @kind object;
}
procedure `int` `-deprecated_pathSize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_pathSize:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19eb00.  call temp:= `pathSize`(v1) @signature `Lokhttp3/HttpUrl;.pathSize:()I` @kind virtual;
  #L19eb06.  v0:= temp;
  #L19eb08.  return v0;
}
procedure `int` `-deprecated_port`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_port:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19eb1c.  v0:= v1.`okhttp3.HttpUrl.f` @type ^`int`;
  #L19eb20.  return v0;
}
procedure `java.lang.String` `-deprecated_query`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_query:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ecc8.  call temp:= `query`(v1) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @kind virtual;
  #L19ecce.  v0:= temp @kind object;
  #L19ecd0.  return v0 @kind object;
}
procedure `java.util.Set` `-deprecated_queryParameterNames`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_queryParameterNames:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19f4cc.  call temp:= `queryParameterNames`(v1) @signature `Lokhttp3/HttpUrl;.queryParameterNames:()Ljava/util/Set;` @kind virtual;
  #L19f4d2.  v0:= temp @kind object;
  #L19f4d4.  return v0 @kind object;
}
procedure `int` `-deprecated_querySize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_querySize:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19eb34.  call temp:= `querySize`(v1) @signature `Lokhttp3/HttpUrl;.querySize:()I` @kind virtual;
  #L19eb3a.  v0:= temp;
  #L19eb3c.  return v0;
}
procedure `java.lang.String` `-deprecated_scheme`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_scheme:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ece4.  v0:= v1.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L19ece8.  return v0 @kind object;
}
procedure `java.net.URI` `-deprecated_uri`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_uri:()Ljava/net/URI;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19f208.  call temp:= `uri`(v1) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @kind virtual;
  #L19f20e.  v0:= temp @kind object;
  #L19f210.  return v0 @kind object;
}
procedure `java.net.URL` `-deprecated_url`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_url:()Ljava/net/URL;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19f2b0.  call temp:= `url`(v1) @signature `Lokhttp3/HttpUrl;.url:()Ljava/net/URL;` @kind virtual;
  #L19f2b6.  v0:= temp @kind object;
  #L19f2b8.  return v0 @kind object;
}
procedure `java.lang.String` `-deprecated_username`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.-deprecated_username:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ecfc.  v0:= v1.`okhttp3.HttpUrl.c` @type ^`java.lang.String` @kind object;
  #L19ed00.  return v0 @kind object;
}
procedure `java.lang.String` `encodedFragment`(`okhttp3.HttpUrl` v7 @kind this) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19ed14.  v0:= v7.`okhttp3.HttpUrl.i` @type ^`java.lang.String` @kind object;
  #L19ed18.  if v0 != 0 then goto L19ed20;
  #L19ed1c.  v0:= 0I;
  #L19ed1e.  return v0 @kind object;
  #L19ed20.  v1:= v7.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19ed24.  v2:= 35I;
  #L19ed28.  v3:= 0I;
  #L19ed2a.  v4:= 0I;
  #L19ed2c.  v5:= 6I;
  #L19ed2e.  v6:= 0I;
  #L19ed30.  call temp:= `indexOf$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L19ed36.  v0:= temp;
  #L19ed38.  v0:= v0 + 1;
  #L19ed3c.  v1:= v7.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19ed40.  if v1 == 0 then goto L19ed58;
  #L19ed44.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L19ed4a.  v0:= temp @kind object;
  #L19ed4c.  v1:= "(this as java.lang.String).substring(startIndex)" @kind object;
  #L19ed50.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19ed56.  return v0 @kind object;
  #L19ed58.  v0:= new `java.lang.NullPointerException`;
  #L19ed5c.  v1:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L19ed60.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ed66.  throw v0;
}
procedure `java.lang.String` `encodedPassword`(`okhttp3.HttpUrl` v8 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L19ed78.  v0:= v8.`okhttp3.HttpUrl.d` @type ^`java.lang.String` @kind object;
  #L19ed7c.  call temp:= `length`(v0) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L19ed82.  v0:= temp;
  #L19ed84.  v1:= 1I;
  #L19ed86.  if v0 != 0 then goto L19ed8e;
  #L19ed8a.  v0:= 1I;
  #L19ed8c.  goto L19ed90;
  #L19ed8e.  v0:= 0I;
  #L19ed90.  if v0 == 0 then goto L19ed9a;
  #L19ed94.  v0:= "" @kind object;
  #L19ed98.  return v0 @kind object;
  #L19ed9a.  v2:= v8.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19ed9e.  v3:= 58I;
  #L19eda2.  v0:= v8.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L19eda6.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19edac.  v0:= temp;
  #L19edae.  v4:= v0 + 3;
  #L19edb2.  v5:= 0I;
  #L19edb4.  v6:= 4I;
  #L19edb6.  v7:= 0I;
  #L19edb8.  call temp:= `indexOf$default`(v2, v3, v4, v5, v6, v7) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L19edbe.  v0:= temp;
  #L19edc0.  v0:= v0 + v1 @kind int;
  #L19edc2.  v1:= v8.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19edc6.  v2:= 64I;
  #L19edca.  v3:= 0I;
  #L19edcc.  v4:= 0I;
  #L19edce.  v5:= 6I;
  #L19edd0.  v6:= 0I;
  #L19edd2.  call temp:= `indexOf$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L19edd8.  v1:= temp;
  #L19edda.  v2:= v8.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19edde.  if v2 == 0 then goto L19edf6;
  #L19ede2.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19ede8.  v0:= temp @kind object;
  #L19edea.  v1:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L19edee.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19edf4.  return v0 @kind object;
  #L19edf6.  v0:= new `java.lang.NullPointerException`;
  #L19edfa.  v1:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L19edfe.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ee04.  throw v0;
}
procedure `java.lang.String` `encodedPath`(`okhttp3.HttpUrl` v6 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19ee18.  v0:= v6.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19ee1c.  v1:= v6.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L19ee20.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19ee26.  v1:= temp;
  #L19ee28.  v2:= v1 + 3;
  #L19ee2c.  v1:= 47I;
  #L19ee30.  v3:= 0I;
  #L19ee32.  v4:= 4I;
  #L19ee34.  v5:= 0I;
  #L19ee36.  call temp:= `indexOf$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L19ee3c.  v0:= temp;
  #L19ee3e.  v1:= v6.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19ee42.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19ee48.  v2:= temp;
  #L19ee4a.  v3:= "?#" @kind object;
  #L19ee4e.  call temp:= `delimiterOffset`(v1, v3, v0, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;Ljava/lang/String;II)I` @kind static;
  #L19ee54.  v1:= temp;
  #L19ee56.  v2:= v6.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19ee5a.  if v2 == 0 then goto L19ee72;
  #L19ee5e.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19ee64.  v0:= temp @kind object;
  #L19ee66.  v1:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L19ee6a.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19ee70.  return v0 @kind object;
  #L19ee72.  v0:= new `java.lang.NullPointerException`;
  #L19ee76.  v1:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L19ee7a.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ee80.  throw v0;
}
procedure `java.util.List` `encodedPathSegments`(`okhttp3.HttpUrl` v6 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19f340.  v0:= v6.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19f344.  v1:= v6.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L19f348.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19f34e.  v1:= temp;
  #L19f350.  v2:= v1 + 3;
  #L19f354.  v1:= 47I;
  #L19f358.  v3:= 0I;
  #L19f35a.  v4:= 4I;
  #L19f35c.  v5:= 0I;
  #L19f35e.  call temp:= `indexOf$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L19f364.  v0:= temp;
  #L19f366.  v1:= v6.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19f36a.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19f370.  v2:= temp;
  #L19f372.  v3:= "?#" @kind object;
  #L19f376.  call temp:= `delimiterOffset`(v1, v3, v0, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;Ljava/lang/String;II)I` @kind static;
  #L19f37c.  v1:= temp;
  #L19f37e.  v2:= new `java.util.ArrayList`;
  #L19f382.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19f388.  if v0 >= v1 then goto L19f3d4;
  #L19f38c.  v0:= v0 + 1;
  #L19f390.  v3:= v6.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19f394.  v4:= 47I;
  #L19f398.  call temp:= `delimiterOffset`(v3, v4, v0, v1) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;CII)I` @kind static;
  #L19f39e.  v3:= temp;
  #L19f3a0.  v4:= v6.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19f3a4.  if v4 == 0 then goto L19f3c4;
  #L19f3a8.  call temp:= `substring`(v4, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19f3ae.  v0:= temp @kind object;
  #L19f3b0.  v4:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L19f3b4.  call `checkNotNullExpressionValue`(v0, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19f3ba.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19f3c0.  v0:= v3;
  #L19f3c2.  goto L19f388;
  #L19f3c4.  v0:= new `java.lang.NullPointerException`;
  #L19f3c8.  v1:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L19f3cc.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19f3d2.  throw v0;
  #L19f3d4.  return v2 @kind object;
}
procedure `java.lang.String` `encodedQuery`(`okhttp3.HttpUrl` v7 @kind this) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19ee94.  v0:= v7.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L19ee98.  if v0 != 0 then goto L19eea0;
  #L19ee9c.  v0:= 0I;
  #L19ee9e.  return v0 @kind object;
  #L19eea0.  v1:= v7.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19eea4.  v2:= 63I;
  #L19eea8.  v3:= 0I;
  #L19eeaa.  v4:= 0I;
  #L19eeac.  v5:= 6I;
  #L19eeae.  v6:= 0I;
  #L19eeb0.  call temp:= `indexOf$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L19eeb6.  v0:= temp;
  #L19eeb8.  v0:= v0 + 1;
  #L19eebc.  v1:= v7.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19eec0.  v2:= 35I;
  #L19eec4.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19eeca.  v3:= temp;
  #L19eecc.  call temp:= `delimiterOffset`(v1, v2, v0, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;CII)I` @kind static;
  #L19eed2.  v1:= temp;
  #L19eed4.  v2:= v7.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19eed8.  if v2 == 0 then goto L19eef0;
  #L19eedc.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19eee2.  v0:= temp @kind object;
  #L19eee4.  v1:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L19eee8.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19eeee.  return v0 @kind object;
  #L19eef0.  v0:= new `java.lang.NullPointerException`;
  #L19eef4.  v1:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L19eef8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19eefe.  throw v0;
}
procedure `java.lang.String` `encodedUsername`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19ef10.  v0:= v4.`okhttp3.HttpUrl.c` @type ^`java.lang.String` @kind object;
  #L19ef14.  call temp:= `length`(v0) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L19ef1a.  v0:= temp;
  #L19ef1c.  if v0 != 0 then goto L19ef24;
  #L19ef20.  v0:= 1I;
  #L19ef22.  goto L19ef26;
  #L19ef24.  v0:= 0I;
  #L19ef26.  if v0 == 0 then goto L19ef30;
  #L19ef2a.  v0:= "" @kind object;
  #L19ef2e.  return v0 @kind object;
  #L19ef30.  v0:= v4.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L19ef34.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19ef3a.  v0:= temp;
  #L19ef3c.  v0:= v0 + 3;
  #L19ef40.  v1:= v4.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19ef44.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L19ef4a.  v2:= temp;
  #L19ef4c.  v3:= ":@" @kind object;
  #L19ef50.  call temp:= `delimiterOffset`(v1, v3, v0, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;Ljava/lang/String;II)I` @kind static;
  #L19ef56.  v1:= temp;
  #L19ef58.  v2:= v4.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19ef5c.  if v2 == 0 then goto L19ef74;
  #L19ef60.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19ef66.  v0:= temp @kind object;
  #L19ef68.  v1:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L19ef6c.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19ef72.  return v0 @kind object;
  #L19ef74.  v0:= new `java.lang.NullPointerException`;
  #L19ef78.  v1:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L19ef7c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19ef82.  throw v0;
}
procedure `boolean` `equals`(`okhttp3.HttpUrl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/HttpUrl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19ea98.  v0:= instanceof @variable v2 @type ^`okhttp3.HttpUrl` @kind boolean;
  #L19ea9c.  if v0 == 0 then goto L19eabc;
  #L19eaa0.  v2:= (`okhttp3.HttpUrl`) v2 @kind object;
  #L19eaa4.  v2:= v2.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19eaa8.  v0:= v1.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19eaac.  call temp:= `areEqual`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L19eab2.  v2:= temp;
  #L19eab4.  if v2 == 0 then goto L19eabc;
  #L19eab8.  v2:= 1I;
  #L19eaba.  goto L19eabe;
  #L19eabc.  v2:= 0I;
  #L19eabe.  return v2;
}
procedure `java.lang.String` `fragment`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.fragment:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ef94.  v0:= v1.`okhttp3.HttpUrl.i` @type ^`java.lang.String` @kind object;
  #L19ef98.  return v0 @kind object;
}
procedure `int` `hashCode`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19eb70.  v0:= v1.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19eb74.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L19eb7a.  v0:= temp;
  #L19eb7c.  return v0;
}
procedure `java.lang.String` `host`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19efac.  v0:= v1.`okhttp3.HttpUrl.e` @type ^`java.lang.String` @kind object;
  #L19efb0.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ead0.  v0:= v1.`okhttp3.HttpUrl.a` @type ^`boolean` @kind boolean;
  #L19ead4.  return v0;
}
procedure `okhttp3.HttpUrl$Builder` `newBuilder`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.newBuilder:()Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19f644.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L19f648.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L19f64e.  v1:= v4.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L19f652.  call `setScheme$okhttp`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.setScheme$okhttp:(Ljava/lang/String;)V` @kind virtual;
  #L19f658.  call temp:= `encodedUsername`(v4) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L19f65e.  v1:= temp @kind object;
  #L19f660.  call `setEncodedUsername$okhttp`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedUsername$okhttp:(Ljava/lang/String;)V` @kind virtual;
  #L19f666.  call temp:= `encodedPassword`(v4) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L19f66c.  v1:= temp @kind object;
  #L19f66e.  call `setEncodedPassword$okhttp`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedPassword$okhttp:(Ljava/lang/String;)V` @kind virtual;
  #L19f674.  v1:= v4.`okhttp3.HttpUrl.e` @type ^`java.lang.String` @kind object;
  #L19f678.  call `setHost$okhttp`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.setHost$okhttp:(Ljava/lang/String;)V` @kind virtual;
  #L19f67e.  v1:= v4.`okhttp3.HttpUrl.f` @type ^`int`;
  #L19f682.  v2:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L19f686.  v3:= v4.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L19f68a.  call temp:= `defaultPort`(v2, v3) @signature `Lokhttp3/HttpUrl$Companion;.defaultPort:(Ljava/lang/String;)I` @kind virtual;
  #L19f690.  v2:= temp;
  #L19f692.  if v1 == v2 then goto L19f69c;
  #L19f696.  v1:= v4.`okhttp3.HttpUrl.f` @type ^`int`;
  #L19f69a.  goto L19f69e;
  #L19f69c.  v1:= -1I;
  #L19f69e.  call `setPort$okhttp`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.setPort$okhttp:(I)V` @kind virtual;
  #L19f6a4.  call temp:= `getEncodedPathSegments$okhttp`(v0) @signature `Lokhttp3/HttpUrl$Builder;.getEncodedPathSegments$okhttp:()Ljava/util/List;` @kind virtual;
  #L19f6aa.  v1:= temp @kind object;
  #L19f6ac.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L19f6b2.  call temp:= `getEncodedPathSegments$okhttp`(v0) @signature `Lokhttp3/HttpUrl$Builder;.getEncodedPathSegments$okhttp:()Ljava/util/List;` @kind virtual;
  #L19f6b8.  v1:= temp @kind object;
  #L19f6ba.  call temp:= `encodedPathSegments`(v4) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L19f6c0.  v2:= temp @kind object;
  #L19f6c2.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L19f6c8.  call temp:= `encodedQuery`(v4) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L19f6ce.  v1:= temp @kind object;
  #L19f6d0.  call temp:= `encodedQuery`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19f6d6.  call temp:= `encodedFragment`(v4) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @kind virtual;
  #L19f6dc.  v1:= temp @kind object;
  #L19f6de.  call `setEncodedFragment$okhttp`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedFragment$okhttp:(Ljava/lang/String;)V` @kind virtual;
  #L19f6e4.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `newBuilder`(`okhttp3.HttpUrl` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19f6f8.  v0:= "link" @kind object;
  #L19f6fc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19f702.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L19f706.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L19f70c.  call temp:= `parse$okhttp`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.parse$okhttp:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19f712.  v2:= temp @kind object;
  #L19f714.  goto L19f718;
  #L19f716.  v2:= 0I;
  #L19f718.  return v2 @kind object;
  catch `java.lang.IllegalArgumentException` @[L19f702..L19f714] goto L19f716;
}
procedure `java.lang.String` `password`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.password:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19efc4.  v0:= v1.`okhttp3.HttpUrl.d` @type ^`java.lang.String` @kind object;
  #L19efc8.  return v0 @kind object;
}
procedure `java.util.List` `pathSegments`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.pathSegments:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19f3e8.  v0:= v1.`okhttp3.HttpUrl.g` @type ^`java.util.List` @kind object;
  #L19f3ec.  return v0 @kind object;
}
procedure `int` `pathSize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.pathSize:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19eb90.  v0:= v1.`okhttp3.HttpUrl.g` @type ^`java.util.List` @kind object;
  #L19eb94.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19eb9a.  v0:= temp;
  #L19eb9c.  return v0;
}
procedure `int` `port`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.port:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ebb0.  v0:= v1.`okhttp3.HttpUrl.f` @type ^`int`;
  #L19ebb4.  return v0;
}
procedure `java.lang.String` `query`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L19efdc.  v0:= v3.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L19efe0.  if v0 != 0 then goto L19efe8;
  #L19efe4.  v0:= 0I;
  #L19efe6.  return v0 @kind object;
  #L19efe8.  v0:= new `java.lang.StringBuilder`;
  #L19efec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19eff2.  v1:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L19eff6.  v2:= v3.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L19effa.  call `toQueryString$okhttp`(v1, v2, v0) @signature `Lokhttp3/HttpUrl$Companion;.toQueryString$okhttp:(Ljava/util/List;Ljava/lang/StringBuilder;)V` @kind virtual;
  #L19f000.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19f006.  v0:= temp @kind object;
  #L19f008.  return v0 @kind object;
}
procedure `java.lang.String` `queryParameter`(`okhttp3.HttpUrl` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lokhttp3/HttpUrl;.queryParameter:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19f01c.  v0:= "name" @kind object;
  #L19f020.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19f026.  v0:= v5.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L19f02a.  v1:= 0I;
  #L19f02c.  if v0 != 0 then goto L19f032;
  #L19f030.  return v1 @kind object;
  #L19f032.  v2:= 0I;
  #L19f034.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19f03a.  v0:= temp;
  #L19f03c.  call temp:= `until`(v2, v0) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L19f042.  v0:= temp @kind object;
  #L19f044.  v2:= 2I;
  #L19f046.  call temp:= `step`(v0, v2) @signature `Lkotlin/ranges/RangesKt;.step:(Lkotlin/ranges/IntProgression;I)Lkotlin/ranges/IntProgression;` @kind static;
  #L19f04c.  v0:= temp @kind object;
  #L19f04e.  call temp:= `getFirst`(v0) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L19f054.  v2:= temp;
  #L19f056.  call temp:= `getLast`(v0) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L19f05c.  v3:= temp;
  #L19f05e.  call temp:= `getStep`(v0) @signature `Lkotlin/ranges/IntProgression;.getStep:()I` @kind virtual;
  #L19f064.  v0:= temp;
  #L19f066.  if v0 < 0 then goto L19f070;
  #L19f06a.  if v2 > v3 then goto L19f0ae;
  #L19f06e.  goto L19f074;
  #L19f070.  if v2 < v3 then goto L19f0ae;
  #L19f074.  v4:= v5.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L19f078.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19f07e.  v4:= temp @kind object;
  #L19f080.  v4:= (`java.lang.String`) v4 @kind object;
  #L19f084.  call temp:= `areEqual`(v6, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L19f08a.  v4:= temp;
  #L19f08c.  if v4 == 0 then goto L19f0a6;
  #L19f090.  v6:= v5.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L19f094.  v2:= v2 + 1;
  #L19f098.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19f09e.  v6:= temp @kind object;
  #L19f0a0.  v6:= (`java.lang.String`) v6 @kind object;
  #L19f0a4.  return v6 @kind object;
  #L19f0a6.  if v2 == v3 then goto L19f0ae;
  #L19f0aa.  v2:= v2 + v0 @kind int;
  #L19f0ac.  goto L19f074;
  #L19f0ae.  return v1 @kind object;
}
procedure `java.lang.String` `queryParameterName`(`okhttp3.HttpUrl` v1 @kind this, `int` v2 ) @signature `Lokhttp3/HttpUrl;.queryParameterName:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19f0c0.  v0:= v1.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L19f0c4.  if v0 == 0 then goto L19f0e0;
  #L19f0c8.  v2:= v2 * 2;
  #L19f0cc.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19f0d2.  v2:= temp @kind object;
  #L19f0d4.  call `checkNotNull`(v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L19f0da.  v2:= (`java.lang.String`) v2 @kind object;
  #L19f0de.  return v2 @kind object;
  #L19f0e0.  v2:= new `java.lang.IndexOutOfBoundsException`;
  #L19f0e4.  call `<init>`(v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L19f0ea.  throw v2;
}
procedure `java.util.Set` `queryParameterNames`(`okhttp3.HttpUrl` v5 @kind this) @signature `Lokhttp3/HttpUrl;.queryParameterNames:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19f4e8.  v0:= v5.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L19f4ec.  if v0 != 0 then goto L19f4fa;
  #L19f4f0.  call temp:= `emptySet`() @signature `Lkotlin/collections/SetsKt;.emptySet:()Ljava/util/Set;` @kind static;
  #L19f4f6.  v0:= temp @kind object;
  #L19f4f8.  return v0 @kind object;
  #L19f4fa.  v0:= new `java.util.LinkedHashSet`;
  #L19f4fe.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L19f504.  v1:= 0I;
  #L19f506.  v2:= v5.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L19f50a.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19f510.  v2:= temp;
  #L19f512.  call temp:= `until`(v1, v2) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L19f518.  v1:= temp @kind object;
  #L19f51a.  v2:= 2I;
  #L19f51c.  call temp:= `step`(v1, v2) @signature `Lkotlin/ranges/RangesKt;.step:(Lkotlin/ranges/IntProgression;I)Lkotlin/ranges/IntProgression;` @kind static;
  #L19f522.  v1:= temp @kind object;
  #L19f524.  call temp:= `getFirst`(v1) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L19f52a.  v2:= temp;
  #L19f52c.  call temp:= `getLast`(v1) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L19f532.  v3:= temp;
  #L19f534.  call temp:= `getStep`(v1) @signature `Lkotlin/ranges/IntProgression;.getStep:()I` @kind virtual;
  #L19f53a.  v1:= temp;
  #L19f53c.  if v1 < 0 then goto L19f546;
  #L19f540.  if v2 > v3 then goto L19f56a;
  #L19f544.  goto L19f54a;
  #L19f546.  if v2 < v3 then goto L19f56a;
  #L19f54a.  v4:= v5.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L19f54e.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19f554.  v4:= temp @kind object;
  #L19f556.  call `checkNotNull`(v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L19f55c.  call temp:= `add`(v0, v4) @signature `Ljava/util/LinkedHashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L19f562.  if v2 == v3 then goto L19f56a;
  #L19f566.  v2:= v2 + v1 @kind int;
  #L19f568.  goto L19f54a;
  #L19f56a.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L19f570.  v0:= temp @kind object;
  #L19f572.  v1:= "Collections.unmodifiableSet(result)" @kind object;
  #L19f576.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19f57c.  return v0 @kind object;
}
procedure `java.lang.String` `queryParameterValue`(`okhttp3.HttpUrl` v1 @kind this, `int` v2 ) @signature `Lokhttp3/HttpUrl;.queryParameterValue:(I)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19f0fc.  v0:= v1.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L19f100.  if v0 == 0 then goto L19f11a;
  #L19f104.  v2:= v2 * 2;
  #L19f108.  v2:= v2 + 1;
  #L19f10c.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19f112.  v2:= temp @kind object;
  #L19f114.  v2:= (`java.lang.String`) v2 @kind object;
  #L19f118.  return v2 @kind object;
  #L19f11a.  v2:= new `java.lang.IndexOutOfBoundsException`;
  #L19f11e.  call `<init>`(v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L19f124.  throw v2;
}
procedure `java.util.List` `queryParameterValues`(`okhttp3.HttpUrl` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl;.queryParameterValues:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L19f400.  v0:= "name" @kind object;
  #L19f404.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19f40a.  v0:= v6.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L19f40e.  if v0 != 0 then goto L19f41c;
  #L19f412.  call temp:= `emptyList`() @signature `Lkotlin/collections/CollectionsKt;.emptyList:()Ljava/util/List;` @kind static;
  #L19f418.  v7:= temp @kind object;
  #L19f41a.  return v7 @kind object;
  #L19f41c.  v0:= new `java.util.ArrayList`;
  #L19f420.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L19f426.  v1:= 0I;
  #L19f428.  v2:= v6.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L19f42c.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19f432.  v2:= temp;
  #L19f434.  call temp:= `until`(v1, v2) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L19f43a.  v1:= temp @kind object;
  #L19f43c.  v2:= 2I;
  #L19f43e.  call temp:= `step`(v1, v2) @signature `Lkotlin/ranges/RangesKt;.step:(Lkotlin/ranges/IntProgression;I)Lkotlin/ranges/IntProgression;` @kind static;
  #L19f444.  v1:= temp @kind object;
  #L19f446.  call temp:= `getFirst`(v1) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L19f44c.  v2:= temp;
  #L19f44e.  call temp:= `getLast`(v1) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L19f454.  v3:= temp;
  #L19f456.  call temp:= `getStep`(v1) @signature `Lkotlin/ranges/IntProgression;.getStep:()I` @kind virtual;
  #L19f45c.  v1:= temp;
  #L19f45e.  if v1 < 0 then goto L19f468;
  #L19f462.  if v2 > v3 then goto L19f4a6;
  #L19f466.  goto L19f46c;
  #L19f468.  if v2 < v3 then goto L19f4a6;
  #L19f46c.  v4:= v6.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L19f470.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19f476.  v4:= temp @kind object;
  #L19f478.  v4:= (`java.lang.String`) v4 @kind object;
  #L19f47c.  call temp:= `areEqual`(v7, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L19f482.  v4:= temp;
  #L19f484.  if v4 == 0 then goto L19f49e;
  #L19f488.  v4:= v6.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L19f48c.  v5:= v2 + 1;
  #L19f490.  call temp:= `get`(v4, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19f496.  v4:= temp @kind object;
  #L19f498.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19f49e.  if v2 == v3 then goto L19f4a6;
  #L19f4a2.  v2:= v2 + v1 @kind int;
  #L19f4a4.  goto L19f46c;
  #L19f4a6.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L19f4ac.  v7:= temp @kind object;
  #L19f4ae.  v0:= "Collections.unmodifiableList(result)" @kind object;
  #L19f4b2.  call `checkNotNullExpressionValue`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19f4b8.  return v7 @kind object;
}
procedure `int` `querySize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.querySize:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ebc8.  v0:= v1.`okhttp3.HttpUrl.h` @type ^`java.util.List` @kind object;
  #L19ebcc.  if v0 == 0 then goto L19ebde;
  #L19ebd0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19ebd6.  v0:= temp;
  #L19ebd8.  v0:= v0 / 2;
  #L19ebdc.  goto L19ebe0;
  #L19ebde.  v0:= 0I;
  #L19ebe0.  return v0;
}
procedure `java.lang.String` `redact`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.redact:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L19f138.  v0:= "/..." @kind object;
  #L19f13c.  call temp:= `newBuilder`(v2, v0) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19f142.  v0:= temp @kind object;
  #L19f144.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L19f14a.  v1:= "" @kind object;
  #L19f14e.  call temp:= `username`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.username:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19f154.  v0:= temp @kind object;
  #L19f156.  call temp:= `password`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.password:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19f15c.  v0:= temp @kind object;
  #L19f15e.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19f164.  v0:= temp @kind object;
  #L19f166.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L19f16c.  v0:= temp @kind object;
  #L19f16e.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `resolve`(`okhttp3.HttpUrl` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl;.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19f610.  v0:= "link" @kind object;
  #L19f614.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19f61a.  call temp:= `newBuilder`(v1, v2) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19f620.  v2:= temp @kind object;
  #L19f622.  if v2 == 0 then goto L19f630;
  #L19f626.  call temp:= `build`(v2) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L19f62c.  v2:= temp @kind object;
  #L19f62e.  goto L19f632;
  #L19f630.  v2:= 0I;
  #L19f632.  return v2 @kind object;
}
procedure `java.lang.String` `scheme`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19f180.  v0:= v1.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L19f184.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L19f198.  v0:= v1.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19f19c.  return v0 @kind object;
}
procedure `java.lang.String` `topPrivateDomain`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.topPrivateDomain:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L19f1b0.  v0:= v2.`okhttp3.HttpUrl.e` @type ^`java.lang.String` @kind object;
  #L19f1b4.  call temp:= `canParseAsIpAddress`(v0) @signature `Lokhttp3/internal/Util;.canParseAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L19f1ba.  v0:= temp;
  #L19f1bc.  if v0 == 0 then goto L19f1c4;
  #L19f1c0.  v0:= 0I;
  #L19f1c2.  goto L19f1dc;
  #L19f1c4.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.Companion` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion` @kind object;
  #L19f1c8.  call temp:= `get`(v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase$Companion;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @kind virtual;
  #L19f1ce.  v0:= temp @kind object;
  #L19f1d0.  v1:= v2.`okhttp3.HttpUrl.e` @type ^`java.lang.String` @kind object;
  #L19f1d4.  call temp:= `getEffectiveTldPlusOne`(v0, v1) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19f1da.  v0:= temp @kind object;
  #L19f1dc.  return v0 @kind object;
}
procedure `java.net.URI` `uri`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19f224.  call temp:= `newBuilder`(v4) @signature `Lokhttp3/HttpUrl;.newBuilder:()Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19f22a.  v0:= temp @kind object;
  #L19f22c.  call temp:= `reencodeForUri$okhttp`(v0) @signature `Lokhttp3/HttpUrl$Builder;.reencodeForUri$okhttp:()Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L19f232.  v0:= temp @kind object;
  #L19f234.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19f23a.  v0:= temp @kind object;
  #L19f23c.  v1:= new `java.net.URI`;
  #L19f240.  call `<init>`(v1, v0) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19f246.  goto L19f276;
  #L19f248.  v1:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #L19f24a.  v2:= new `kotlin.text.Regex`;
  #L19f24e.  v3:= "[\\u0000-\\u001F\\u007F-\\u009F\\p{javaWhitespace}]" @kind object;
  #L19f252.  call `<init>`(v2, v3) @signature `Lkotlin/text/Regex;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19f258.  v3:= "" @kind object;
  #L19f25c.  call temp:= `replace`(v2, v0, v3) @signature `Lkotlin/text/Regex;.replace:(Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L19f262.  v0:= temp @kind object;
  #L19f264.  call temp:= `create`(v0) @signature `Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;` @kind static;
  #L19f26a.  v1:= temp @kind object;
  #L19f26c.  v0:= "try {\n        val stripp…e) // Unexpected!\n      }" @kind object;
  #L19f270.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19f276.  return v1 @kind object;
  #L19f278.  v0:= new `java.lang.RuntimeException`;
  #L19f27c.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L19f282.  throw v0;
  catch `java.net.URISyntaxException` @[L19f23c..L19f246] goto L19f248;
  catch `java.lang.Exception` @[L19f24a..L19f26c] goto L19f278;
}
procedure `java.net.URL` `url`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.url:()Ljava/net/URL;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L19f2cc.  v0:= new `java.net.URL`;
  #L19f2d0.  v1:= v2.`okhttp3.HttpUrl.j` @type ^`java.lang.String` @kind object;
  #L19f2d4.  call `<init>`(v0, v1) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19f2da.  return v0 @kind object;
  #L19f2dc.  v0:= Exception @type ^`java.net.MalformedURLException` @kind object;
  #L19f2de.  v1:= new `java.lang.RuntimeException`;
  #L19f2e2.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L19f2e8.  throw v1;
  catch `java.net.MalformedURLException` @[L19f2cc..L19f2da] goto L19f2dc;
}
procedure `java.lang.String` `username`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.username:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19f1f0.  v0:= v1.`okhttp3.HttpUrl.c` @type ^`java.lang.String` @kind object;
  #L19f1f4.  return v0 @kind object;
}
