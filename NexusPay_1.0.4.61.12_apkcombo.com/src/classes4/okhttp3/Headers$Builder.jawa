record `okhttp3.Headers$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `okhttp3.Headers$Builder.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Headers$Builder` v2 @kind this) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L19bcd8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L19bcde.  v0:= new `java.util.ArrayList`;
  #L19bce2.  v1:= 20I;
  #L19bce6.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L19bcec.  v2.`okhttp3.Headers$Builder.a` @type ^`java.util.List` := v0 @kind object;
  #L19bcf0.  return @kind void;
}
procedure `okhttp3.Headers$Builder` `add`(`okhttp3.Headers$Builder` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19b8c8.  v0:= "line" @kind object;
  #L19b8cc.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19b8d2.  v2:= 58I;
  #L19b8d6.  v3:= 0I;
  #L19b8d8.  v4:= 0I;
  #L19b8da.  v5:= 6I;
  #L19b8dc.  v6:= 0I;
  #L19b8de.  v1:= v8 @kind object;
  #L19b8e0.  call temp:= `indexOf$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L19b8e6.  v0:= temp;
  #L19b8e8.  v1:= 1I;
  #L19b8ea.  v2:= 0I;
  #L19b8ec.  v3:= -1I;
  #L19b8ee.  if v0 == v3 then goto L19b8f6;
  #L19b8f2.  v3:= 1I;
  #L19b8f4.  goto L19b8f8;
  #L19b8f6.  v3:= 0I;
  #L19b8f8.  if v3 == 0 then goto L19b94e;
  #L19b8fc.  call temp:= `substring`(v8, v2, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19b902.  v2:= temp @kind object;
  #L19b904.  v3:= "(this as java.lang.Strinâ€¦ing(startIndex, endIndex)" @kind object;
  #L19b908.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19b90e.  if v2 == 0 then goto L19b93e;
  #L19b912.  call temp:= `trim`(v2) @signature `Lkotlin/text/StringsKt;.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L19b918.  v2:= temp @kind object;
  #L19b91a.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b920.  v2:= temp @kind object;
  #L19b922.  v0:= v0 + v1 @kind int;
  #L19b924.  call temp:= `substring`(v8, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L19b92a.  v8:= temp @kind object;
  #L19b92c.  v0:= "(this as java.lang.String).substring(startIndex)" @kind object;
  #L19b930.  call `checkNotNullExpressionValue`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19b936.  call temp:= `add`(v7, v2, v8) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19b93c.  return v7 @kind object;
  #L19b93e.  v8:= new `java.lang.NullPointerException`;
  #L19b942.  v0:= "null cannot be cast to non-null type kotlin.CharSequence" @kind object;
  #L19b946.  call `<init>`(v8, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b94c.  throw v8;
  #L19b94e.  v0:= new `java.lang.StringBuilder`;
  #L19b952.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L19b958.  v1:= "Unexpected header: " @kind object;
  #L19b95c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b962.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L19b968.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b96e.  v8:= temp @kind object;
  #L19b970.  v0:= new `java.lang.IllegalArgumentException`;
  #L19b974.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L19b97a.  v8:= temp @kind object;
  #L19b97c.  call `<init>`(v0, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b982.  throw v0;
}
procedure `okhttp3.Headers$Builder` `add`(`okhttp3.Headers$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19b994.  v0:= "name" @kind object;
  #L19b998.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19b99e.  v0:= "value" @kind object;
  #L19b9a2.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19b9a8.  v0:= `@@okhttp3.Headers.Companion` @type ^`okhttp3.Headers$Companion` @kind object;
  #L19b9ac.  call `access$checkName`(v0, v2) @signature `Lokhttp3/Headers$Companion;.access$checkName:(Lokhttp3/Headers$Companion;Ljava/lang/String;)V` @kind static;
  #L19b9b2.  v0:= `@@okhttp3.Headers.Companion` @type ^`okhttp3.Headers$Companion` @kind object;
  #L19b9b6.  call `access$checkValue`(v0, v3, v2) @signature `Lokhttp3/Headers$Companion;.access$checkValue:(Lokhttp3/Headers$Companion;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L19b9bc.  call temp:= `addLenient$okhttp`(v1, v2, v3) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19b9c2.  return v1 @kind object;
}
procedure `okhttp3.Headers$Builder` `add`(`okhttp3.Headers$Builder` v3 @kind this, `java.lang.String` v4 @kind object, `java.time.Instant` v5 @kind object) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/time/Instant;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L19b9d4.  v0:= "name" @kind object;
  #L19b9d8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19b9de.  v0:= "value" @kind object;
  #L19b9e2.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19b9e8.  v0:= new `java.util.Date`;
  #L19b9ec.  call temp:= `toEpochMilli`(v5) @signature `Ljava/time/Instant;.toEpochMilli:()J` @kind virtual;
  #L19b9f2.  v1:= temp @kind wide;
  #L19b9f4.  call `<init>`(v0, v1) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L19b9fa.  call temp:= `add`(v3, v4, v0) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/util/Date;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19ba00.  return v3 @kind object;
}
procedure `okhttp3.Headers$Builder` `add`(`okhttp3.Headers$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.util.Date` v3 @kind object) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/util/Date;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19ba14.  v0:= "name" @kind object;
  #L19ba18.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19ba1e.  v0:= "value" @kind object;
  #L19ba22.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19ba28.  call temp:= `toHttpDateString`(v3) @signature `Lokhttp3/internal/http/DatesKt;.toHttpDateString:(Ljava/util/Date;)Ljava/lang/String;` @kind static;
  #L19ba2e.  v3:= temp @kind object;
  #L19ba30.  call temp:= `add`(v1, v2, v3) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19ba36.  return v1 @kind object;
}
procedure `okhttp3.Headers$Builder` `addAll`(`okhttp3.Headers$Builder` v4 @kind this, `okhttp3.Headers` v5 @kind object) @signature `Lokhttp3/Headers$Builder;.addAll:(Lokhttp3/Headers;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L19ba48.  v0:= "headers" @kind object;
  #L19ba4c.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19ba52.  call temp:= `size`(v5) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L19ba58.  v0:= temp;
  #L19ba5a.  v1:= 0I;
  #L19ba5c.  if v1 >= v0 then goto L19ba7c;
  #L19ba60.  call temp:= `name`(v5, v1) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L19ba66.  v2:= temp @kind object;
  #L19ba68.  call temp:= `value`(v5, v1) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L19ba6e.  v3:= temp @kind object;
  #L19ba70.  call temp:= `addLenient$okhttp`(v4, v2, v3) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19ba76.  v1:= v1 + 1;
  #L19ba7a.  goto L19ba5c;
  #L19ba7c.  return v4 @kind object;
}
procedure `okhttp3.Headers$Builder` `addLenient$okhttp`(`okhttp3.Headers$Builder` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L19ba90.  v0:= "line" @kind object;
  #L19ba94.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19ba9a.  v2:= 58I;
  #L19ba9e.  v3:= 1I;
  #L19baa0.  v4:= 0I;
  #L19baa2.  v5:= 4I;
  #L19baa4.  v6:= 0I;
  #L19baa6.  v1:= v8 @kind object;
  #L19baa8.  call temp:= `indexOf$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L19baae.  v0:= temp;
  #L19bab0.  v1:= "(this as java.lang.String).substring(startIndex)" @kind object;
  #L19bab4.  v2:= 1I;
  #L19bab6.  v3:= 0I;
  #L19bab8.  v4:= -1I;
  #L19baba.  if v0 == v4 then goto L19bae8;
  #L19babe.  call temp:= `substring`(v8, v3, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L19bac4.  v3:= temp @kind object;
  #L19bac6.  v4:= "(this as java.lang.Strinâ€¦ing(startIndex, endIndex)" @kind object;
  #L19baca.  call `checkNotNullExpressionValue`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19bad0.  v0:= v0 + v2 @kind int;
  #L19bad2.  call temp:= `substring`(v8, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L19bad8.  v8:= temp @kind object;
  #L19bada.  call `checkNotNullExpressionValue`(v8, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19bae0.  call temp:= `addLenient$okhttp`(v7, v3, v8) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19bae6.  goto L19bb18;
  #L19bae8.  call temp:= `charAt`(v8, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L19baee.  v0:= temp;
  #L19baf0.  v3:= 58I;
  #L19baf4.  v4:= "" @kind object;
  #L19baf8.  if v0 != v3 then goto L19bb12;
  #L19bafc.  call temp:= `substring`(v8, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L19bb02.  v8:= temp @kind object;
  #L19bb04.  call `checkNotNullExpressionValue`(v8, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19bb0a.  call temp:= `addLenient$okhttp`(v7, v4, v8) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19bb10.  goto L19bb18;
  #L19bb12.  call temp:= `addLenient$okhttp`(v7, v4, v8) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19bb18.  return v7 @kind object;
}
procedure `okhttp3.Headers$Builder` `addLenient$okhttp`(`okhttp3.Headers$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19bb2c.  v0:= "name" @kind object;
  #L19bb30.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19bb36.  v0:= "value" @kind object;
  #L19bb3a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19bb40.  v0:= v1.`okhttp3.Headers$Builder.a` @type ^`java.util.List` @kind object;
  #L19bb44.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19bb4a.  v2:= v1.`okhttp3.Headers$Builder.a` @type ^`java.util.List` @kind object;
  #L19bb4e.  call temp:= `trim`(v3) @signature `Lkotlin/text/StringsKt;.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind static;
  #L19bb54.  v3:= temp @kind object;
  #L19bb56.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L19bb5c.  v3:= temp @kind object;
  #L19bb5e.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L19bb64.  return v1 @kind object;
}
procedure `okhttp3.Headers$Builder` `addUnsafeNonAscii`(`okhttp3.Headers$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Headers$Builder;.addUnsafeNonAscii:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19bb78.  v0:= "name" @kind object;
  #L19bb7c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19bb82.  v0:= "value" @kind object;
  #L19bb86.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19bb8c.  v0:= `@@okhttp3.Headers.Companion` @type ^`okhttp3.Headers$Companion` @kind object;
  #L19bb90.  call `access$checkName`(v0, v2) @signature `Lokhttp3/Headers$Companion;.access$checkName:(Lokhttp3/Headers$Companion;Ljava/lang/String;)V` @kind static;
  #L19bb96.  call temp:= `addLenient$okhttp`(v1, v2, v3) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19bb9c.  return v1 @kind object;
}
procedure `okhttp3.Headers` `build`(`okhttp3.Headers$Builder` v3 @kind this) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L19b880.  v0:= new `okhttp3.Headers`;
  #L19b884.  v1:= v3.`okhttp3.Headers$Builder.a` @type ^`java.util.List` @kind object;
  #L19b888.  v2:= 0I;
  #L19b88a.  v2:= new `java.lang.String`[v2];
  #L19b88e.  call temp:= `toArray`(v1, v2) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L19b894.  v1:= temp @kind object;
  #L19b896.  if v1 == 0 then goto L19b8a8;
  #L19b89a.  v1:= (`java.lang.String`[]) v1 @kind object;
  #L19b89e.  v2:= 0I;
  #L19b8a0.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/Headers;.<init>:([Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L19b8a6.  return v0 @kind object;
  #L19b8a8.  v0:= new `java.lang.NullPointerException`;
  #L19b8ac.  v1:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L19b8b0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L19b8b6.  throw v0;
}
procedure `java.lang.String` `get`(`okhttp3.Headers$Builder` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L19b7c8.  v0:= "name" @kind object;
  #L19b7cc.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19b7d2.  v0:= v5.`okhttp3.Headers$Builder.a` @type ^`java.util.List` @kind object;
  #L19b7d6.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19b7dc.  v0:= temp;
  #L19b7de.  v1:= 2I;
  #L19b7e0.  v0:= v0 - v1 @kind int;
  #L19b7e2.  v2:= 0I;
  #L19b7e4.  call temp:= `downTo`(v0, v2) @signature `Lkotlin/ranges/RangesKt;.downTo:(II)Lkotlin/ranges/IntProgression;` @kind static;
  #L19b7ea.  v0:= temp @kind object;
  #L19b7ec.  call temp:= `step`(v0, v1) @signature `Lkotlin/ranges/RangesKt;.step:(Lkotlin/ranges/IntProgression;I)Lkotlin/ranges/IntProgression;` @kind static;
  #L19b7f2.  v0:= temp @kind object;
  #L19b7f4.  call temp:= `getFirst`(v0) @signature `Lkotlin/ranges/IntProgression;.getFirst:()I` @kind virtual;
  #L19b7fa.  v1:= temp;
  #L19b7fc.  call temp:= `getLast`(v0) @signature `Lkotlin/ranges/IntProgression;.getLast:()I` @kind virtual;
  #L19b802.  v2:= temp;
  #L19b804.  call temp:= `getStep`(v0) @signature `Lkotlin/ranges/IntProgression;.getStep:()I` @kind virtual;
  #L19b80a.  v0:= temp;
  #L19b80c.  if v0 < 0 then goto L19b816;
  #L19b810.  if v1 > v2 then goto L19b854;
  #L19b814.  goto L19b81a;
  #L19b816.  if v1 < v2 then goto L19b854;
  #L19b81a.  v3:= v5.`okhttp3.Headers$Builder.a` @type ^`java.util.List` @kind object;
  #L19b81e.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19b824.  v3:= temp @kind object;
  #L19b826.  v3:= (`java.lang.String`) v3 @kind object;
  #L19b82a.  v4:= 1I;
  #L19b82c.  call temp:= `equals`(v6, v3, v4) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L19b832.  v3:= temp;
  #L19b834.  if v3 == 0 then goto L19b84c;
  #L19b838.  v6:= v5.`okhttp3.Headers$Builder.a` @type ^`java.util.List` @kind object;
  #L19b83c.  v1:= v1 + v4 @kind int;
  #L19b83e.  call temp:= `get`(v6, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19b844.  v6:= temp @kind object;
  #L19b846.  v6:= (`java.lang.String`) v6 @kind object;
  #L19b84a.  return v6 @kind object;
  #L19b84c.  if v1 == v2 then goto L19b854;
  #L19b850.  v1:= v1 + v0 @kind int;
  #L19b852.  goto L19b81a;
  #L19b854.  v6:= 0I;
  #L19b856.  return v6 @kind object;
}
procedure `java.util.List` `getNamesAndValues$okhttp`(`okhttp3.Headers$Builder` v1 @kind this) @signature `Lokhttp3/Headers$Builder;.getNamesAndValues$okhttp:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19b868.  v0:= v1.`okhttp3.Headers$Builder.a` @type ^`java.util.List` @kind object;
  #L19b86c.  return v0 @kind object;
}
procedure `okhttp3.Headers$Builder` `removeAll`(`okhttp3.Headers$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L19bbb0.  v0:= "name" @kind object;
  #L19bbb4.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19bbba.  v0:= 0I;
  #L19bbbc.  v1:= v3.`okhttp3.Headers$Builder.a` @type ^`java.util.List` @kind object;
  #L19bbc0.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L19bbc6.  v1:= temp;
  #L19bbc8.  if v0 >= v1 then goto L19bc08;
  #L19bbcc.  v1:= v3.`okhttp3.Headers$Builder.a` @type ^`java.util.List` @kind object;
  #L19bbd0.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L19bbd6.  v1:= temp @kind object;
  #L19bbd8.  v1:= (`java.lang.String`) v1 @kind object;
  #L19bbdc.  v2:= 1I;
  #L19bbde.  call temp:= `equals`(v4, v1, v2) @signature `Lkotlin/text/StringsKt;.equals:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L19bbe4.  v1:= temp;
  #L19bbe6.  if v1 == 0 then goto L19bc02;
  #L19bbea.  v1:= v3.`okhttp3.Headers$Builder.a` @type ^`java.util.List` @kind object;
  #L19bbee.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L19bbf4.  v1:= v3.`okhttp3.Headers$Builder.a` @type ^`java.util.List` @kind object;
  #L19bbf8.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L19bbfe.  v0:= v0 + -2;
  #L19bc02.  v0:= v0 + 2;
  #L19bc06.  goto L19bbbc;
  #L19bc08.  return v3 @kind object;
}
procedure `okhttp3.Headers$Builder` `set`(`okhttp3.Headers$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19bc1c.  v0:= "name" @kind object;
  #L19bc20.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19bc26.  v0:= "value" @kind object;
  #L19bc2a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19bc30.  v0:= `@@okhttp3.Headers.Companion` @type ^`okhttp3.Headers$Companion` @kind object;
  #L19bc34.  call `access$checkName`(v0, v2) @signature `Lokhttp3/Headers$Companion;.access$checkName:(Lokhttp3/Headers$Companion;Ljava/lang/String;)V` @kind static;
  #L19bc3a.  v0:= `@@okhttp3.Headers.Companion` @type ^`okhttp3.Headers$Companion` @kind object;
  #L19bc3e.  call `access$checkValue`(v0, v3, v2) @signature `Lokhttp3/Headers$Companion;.access$checkValue:(Lokhttp3/Headers$Companion;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L19bc44.  call temp:= `removeAll`(v1, v2) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19bc4a.  call temp:= `addLenient$okhttp`(v1, v2, v3) @signature `Lokhttp3/Headers$Builder;.addLenient$okhttp:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19bc50.  return v1 @kind object;
}
procedure `okhttp3.Headers$Builder` `set`(`okhttp3.Headers$Builder` v3 @kind this, `java.lang.String` v4 @kind object, `java.time.Instant` v5 @kind object) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/time/Instant;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L19bc64.  v0:= "name" @kind object;
  #L19bc68.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19bc6e.  v0:= "value" @kind object;
  #L19bc72.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19bc78.  v0:= new `java.util.Date`;
  #L19bc7c.  call temp:= `toEpochMilli`(v5) @signature `Ljava/time/Instant;.toEpochMilli:()J` @kind virtual;
  #L19bc82.  v1:= temp @kind wide;
  #L19bc84.  call `<init>`(v0, v1) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L19bc8a.  call temp:= `set`(v3, v4, v0) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/util/Date;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19bc90.  v4:= temp @kind object;
  #L19bc92.  return v4 @kind object;
}
procedure `okhttp3.Headers$Builder` `set`(`okhttp3.Headers$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.util.Date` v3 @kind object) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/util/Date;)Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L19bca4.  v0:= "name" @kind object;
  #L19bca8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19bcae.  v0:= "value" @kind object;
  #L19bcb2.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L19bcb8.  call temp:= `toHttpDateString`(v3) @signature `Lokhttp3/internal/http/DatesKt;.toHttpDateString:(Ljava/util/Date;)Ljava/lang/String;` @kind static;
  #L19bcbe.  v3:= temp @kind object;
  #L19bcc0.  call temp:= `set`(v1, v2, v3) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L19bcc6.  return v1 @kind object;
}
