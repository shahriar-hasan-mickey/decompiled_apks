record `okhttp3.Cache$RealCacheRequest$1` @kind class @AccessFlag PUBLIC_FINAL extends `okio.ForwardingSink` @kind class {
  `okhttp3.Cache$RealCacheRequest` `okhttp3.Cache$RealCacheRequest$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.Cache$RealCacheRequest$1` v0 @kind this, `okhttp3.Cache$RealCacheRequest` v1 @kind object, `okio.Sink` v2 @kind object) @signature `Lokhttp3/Cache$RealCacheRequest$1;.<init>:(Lokhttp3/Cache$RealCacheRequest;Lokio/Sink;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L194718.  v0.`okhttp3.Cache$RealCacheRequest$1.a` @type ^`okhttp3.Cache$RealCacheRequest` := v1 @kind object;
  #L19471c.  call `<init>`(v0, v2) @signature `Lokio/ForwardingSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L194722.  return @kind void;
}
procedure `void` `close`(`okhttp3.Cache$RealCacheRequest$1` v4 @kind this) @signature `Lokhttp3/Cache$RealCacheRequest$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L194734.  v0:= v4.`okhttp3.Cache$RealCacheRequest$1.a` @type ^`okhttp3.Cache$RealCacheRequest` @kind object;
  #L194738.  v0:= v0.`okhttp3.Cache$RealCacheRequest.e` @type ^`okhttp3.Cache` @kind object;
  #L19473c.  @monitorenter v0
  #L19473e.  v1:= v4.`okhttp3.Cache$RealCacheRequest$1.a` @type ^`okhttp3.Cache$RealCacheRequest` @kind object;
  #L194742.  call temp:= `b`(v1) @signature `Lokhttp3/Cache$RealCacheRequest;.b:()Z` @kind virtual;
  #L194748.  v1:= temp;
  #L19474a.  if v1 == 0 then goto L194752;
  #L19474e.  @monitorexit v0
  #L194750.  return @kind void;
  #L194752.  v1:= v4.`okhttp3.Cache$RealCacheRequest$1.a` @type ^`okhttp3.Cache$RealCacheRequest` @kind object;
  #L194756.  v2:= 1I;
  #L194758.  call `c`(v1, v2) @signature `Lokhttp3/Cache$RealCacheRequest;.c:(Z)V` @kind virtual;
  #L19475e.  v1:= v4.`okhttp3.Cache$RealCacheRequest$1.a` @type ^`okhttp3.Cache$RealCacheRequest` @kind object;
  #L194762.  v1:= v1.`okhttp3.Cache$RealCacheRequest.e` @type ^`okhttp3.Cache` @kind object;
  #L194766.  call temp:= `getWriteSuccessCount$okhttp`(v1) @signature `Lokhttp3/Cache;.getWriteSuccessCount$okhttp:()I` @kind virtual;
  #L19476c.  v3:= temp;
  #L19476e.  v3:= v3 + v2 @kind int;
  #L194770.  call `setWriteSuccessCount$okhttp`(v1, v3) @signature `Lokhttp3/Cache;.setWriteSuccessCount$okhttp:(I)V` @kind virtual;
  #L194776.  @monitorexit v0
  #L194778.  call `close`(v4) @signature `Lokio/ForwardingSink;.close:()V` @kind super;
  #L19477e.  v0:= v4.`okhttp3.Cache$RealCacheRequest$1.a` @type ^`okhttp3.Cache$RealCacheRequest` @kind object;
  #L194782.  call temp:= `a`(v0) @signature `Lokhttp3/Cache$RealCacheRequest;.a:(Lokhttp3/Cache$RealCacheRequest;)Lokhttp3/internal/cache/DiskLruCache$Editor;` @kind static;
  #L194788.  v0:= temp @kind object;
  #L19478a.  call `commit`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.commit:()V` @kind virtual;
  #L194790.  return @kind void;
  #L194792.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L194794.  @monitorexit v0
  #L194796.  throw v1;
  catch `java.lang.Throwable` @[L19473e..L19474a] goto L194792;
  catch `java.lang.Throwable` @[L194752..L194776] goto L194792;
}
