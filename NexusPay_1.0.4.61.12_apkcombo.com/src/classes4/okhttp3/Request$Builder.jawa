record `okhttp3.Request$Builder` @kind class @AccessFlag PUBLIC {
  `okhttp3.HttpUrl` `okhttp3.Request$Builder.a` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.Request$Builder.b` @AccessFlag PRIVATE;
  `okhttp3.Headers$Builder` `okhttp3.Request$Builder.c` @AccessFlag PRIVATE;
  `okhttp3.RequestBody` `okhttp3.Request$Builder.d` @AccessFlag PRIVATE;
  `java.util.Map` `okhttp3.Request$Builder.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a381c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a3822.  v0:= new `java.util.LinkedHashMap`;
  #L1a3826.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L1a382c.  v1.`okhttp3.Request$Builder.e` @type ^`java.util.Map` := v0 @kind object;
  #L1a3830.  v0:= "GET" @kind object;
  #L1a3834.  v1.`okhttp3.Request$Builder.b` @type ^`java.lang.String` := v0 @kind object;
  #L1a3838.  v0:= new `okhttp3.Headers$Builder`;
  #L1a383c.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L1a3842.  v1.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` := v0 @kind object;
  #L1a3846.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.Request` v2 @kind object) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1a3858.  v0:= "request" @kind object;
  #L1a385c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3862.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1a3868.  v0:= new `java.util.LinkedHashMap`;
  #L1a386c.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L1a3872.  v1.`okhttp3.Request$Builder.e` @type ^`java.util.Map` := v0 @kind object;
  #L1a3876.  call temp:= `url`(v2) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L1a387c.  v0:= temp @kind object;
  #L1a387e.  v1.`okhttp3.Request$Builder.a` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L1a3882.  call temp:= `method`(v2) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L1a3888.  v0:= temp @kind object;
  #L1a388a.  v1.`okhttp3.Request$Builder.b` @type ^`java.lang.String` := v0 @kind object;
  #L1a388e.  call temp:= `body`(v2) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L1a3894.  v0:= temp @kind object;
  #L1a3896.  v1.`okhttp3.Request$Builder.d` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L1a389a.  call temp:= `getTags$okhttp`(v2) @signature `Lokhttp3/Request;.getTags$okhttp:()Ljava/util/Map;` @kind virtual;
  #L1a38a0.  v0:= temp @kind object;
  #L1a38a2.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L1a38a8.  v0:= temp;
  #L1a38aa.  if v0 == 0 then goto L1a38ba;
  #L1a38ae.  v0:= new `java.util.LinkedHashMap`;
  #L1a38b2.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L1a38b8.  goto L1a38ca;
  #L1a38ba.  call temp:= `getTags$okhttp`(v2) @signature `Lokhttp3/Request;.getTags$okhttp:()Ljava/util/Map;` @kind virtual;
  #L1a38c0.  v0:= temp @kind object;
  #L1a38c2.  call temp:= `toMutableMap`(v0) @signature `Lkotlin/collections/MapsKt;.toMutableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L1a38c8.  v0:= temp @kind object;
  #L1a38ca.  v1.`okhttp3.Request$Builder.e` @type ^`java.util.Map` := v0 @kind object;
  #L1a38ce.  call temp:= `headers`(v2) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L1a38d4.  v2:= temp @kind object;
  #L1a38d6.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L1a38dc.  v2:= temp @kind object;
  #L1a38de.  v1.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` := v2 @kind object;
  #L1a38e2.  return @kind void;
}
procedure `okhttp3.Request$Builder` `delete$default`(`okhttp3.Request$Builder` v0 @kind object, `okhttp3.RequestBody` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lokhttp3/Request$Builder;.delete$default:(Lokhttp3/Request$Builder;Lokhttp3/RequestBody;ILjava/lang/Object;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1a33bc.  if v3 != 0 then goto L1a33d6;
  #L1a33c0.  v2:= v2 ^& 1;
  #L1a33c4.  if v2 == 0 then goto L1a33cc;
  #L1a33c8.  v1:= `@@okhttp3.internal.Util.EMPTY_REQUEST` @type ^`okhttp3.RequestBody` @kind object;
  #L1a33cc.  call temp:= `delete`(v0, v1) @signature `Lokhttp3/Request$Builder;.delete:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1a33d2.  v0:= temp @kind object;
  #L1a33d4.  return v0 @kind object;
  #L1a33d6.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1a33da.  v1:= "Super calls with default arguments not supported in this target, function: delete" @kind object;
  #L1a33de.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a33e4.  throw v0;
}
procedure `okhttp3.Request$Builder` `addHeader`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Request$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a333c.  v0:= "name" @kind object;
  #L1a3340.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3346.  v0:= "value" @kind object;
  #L1a334a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3350.  v0:= v1.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` @kind object;
  #L1a3354.  call temp:= `add`(v0, v2, v3) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1a335a.  return v1 @kind object;
}
procedure `okhttp3.Request` `build`(`okhttp3.Request$Builder` v7 @kind this) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1a32dc.  v1:= v7.`okhttp3.Request$Builder.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L1a32e0.  if v1 == 0 then goto L1a3312;
  #L1a32e4.  v2:= v7.`okhttp3.Request$Builder.b` @type ^`java.lang.String` @kind object;
  #L1a32e8.  v0:= v7.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` @kind object;
  #L1a32ec.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L1a32f2.  v3:= temp @kind object;
  #L1a32f4.  v4:= v7.`okhttp3.Request$Builder.d` @type ^`okhttp3.RequestBody` @kind object;
  #L1a32f8.  v0:= v7.`okhttp3.Request$Builder.e` @type ^`java.util.Map` @kind object;
  #L1a32fc.  call temp:= `toImmutableMap`(v0) @signature `Lokhttp3/internal/Util;.toImmutableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L1a3302.  v5:= temp @kind object;
  #L1a3304.  v6:= new `okhttp3.Request`;
  #L1a3308.  v0:= v6 @kind object;
  #L1a330a.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/HttpUrl;Ljava/lang/String;Lokhttp3/Headers;Lokhttp3/RequestBody;Ljava/util/Map;)V` @kind direct;
  #L1a3310.  return v6 @kind object;
  #L1a3312.  v0:= new `java.lang.IllegalStateException`;
  #L1a3316.  v1:= "url == null" @kind object;
  #L1a331a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a3320.  v1:= temp @kind object;
  #L1a3322.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a3328.  throw v0;
}
procedure `okhttp3.Request$Builder` `cacheControl`(`okhttp3.Request$Builder` v2 @kind this, `okhttp3.CacheControl` v3 @kind object) @signature `Lokhttp3/Request$Builder;.cacheControl:(Lokhttp3/CacheControl;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a336c.  v0:= "cacheControl" @kind object;
  #L1a3370.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3376.  call temp:= `toString`(v3) @signature `Lokhttp3/CacheControl;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a337c.  v3:= temp @kind object;
  #L1a337e.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1a3384.  v0:= temp;
  #L1a3386.  if v0 != 0 then goto L1a338e;
  #L1a338a.  v0:= 1I;
  #L1a338c.  goto L1a3390;
  #L1a338e.  v0:= 0I;
  #L1a3390.  v1:= "Cache-Control" @kind object;
  #L1a3394.  if v0 == 0 then goto L1a33a2;
  #L1a3398.  call temp:= `removeHeader`(v2, v1) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1a339e.  v3:= temp @kind object;
  #L1a33a0.  goto L1a33aa;
  #L1a33a2.  call temp:= `header`(v2, v1, v3) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1a33a8.  v3:= temp @kind object;
  #L1a33aa.  return v3 @kind object;
}
procedure `okhttp3.Request$Builder` `delete`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.delete:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1a33f8.  v0:= 0I;
  #L1a33fa.  v1:= 1I;
  #L1a33fc.  call temp:= `delete$default`(v2, v0, v1, v0) @signature `Lokhttp3/Request$Builder;.delete$default:(Lokhttp3/Request$Builder;Lokhttp3/RequestBody;ILjava/lang/Object;)Lokhttp3/Request$Builder;` @kind static;
  #L1a3402.  v0:= temp @kind object;
  #L1a3404.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `delete`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/Request$Builder;.delete:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a3418.  v0:= "DELETE" @kind object;
  #L1a341c.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1a3422.  v2:= temp @kind object;
  #L1a3424.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `get`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.get:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a3438.  v0:= "GET" @kind object;
  #L1a343c.  v1:= 0I;
  #L1a343e.  call temp:= `method`(v2, v0, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1a3444.  v0:= temp @kind object;
  #L1a3446.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `getBody$okhttp`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.getBody$okhttp:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a3804.  v0:= v1.`okhttp3.Request$Builder.d` @type ^`okhttp3.RequestBody` @kind object;
  #L1a3808.  return v0 @kind object;
}
procedure `okhttp3.Headers$Builder` `getHeaders$okhttp`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.getHeaders$okhttp:()Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a32ac.  v0:= v1.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` @kind object;
  #L1a32b0.  return v0 @kind object;
}
procedure `java.lang.String` `getMethod$okhttp`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.getMethod$okhttp:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a327c.  v0:= v1.`okhttp3.Request$Builder.b` @type ^`java.lang.String` @kind object;
  #L1a3280.  return v0 @kind object;
}
procedure `java.util.Map` `getTags$okhttp`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.getTags$okhttp:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a3294.  v0:= v1.`okhttp3.Request$Builder.e` @type ^`java.util.Map` @kind object;
  #L1a3298.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `getUrl$okhttp`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.getUrl$okhttp:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a32c4.  v0:= v1.`okhttp3.Request$Builder.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L1a32c8.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `head`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.head:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a3458.  v0:= "HEAD" @kind object;
  #L1a345c.  v1:= 0I;
  #L1a345e.  call temp:= `method`(v2, v0, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1a3464.  v0:= temp @kind object;
  #L1a3466.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `header`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a3478.  v0:= "name" @kind object;
  #L1a347c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3482.  v0:= "value" @kind object;
  #L1a3486.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a348c.  v0:= v1.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` @kind object;
  #L1a3490.  call temp:= `set`(v0, v2, v3) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1a3496.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `headers`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.Headers` v2 @kind object) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a34a8.  v0:= "headers" @kind object;
  #L1a34ac.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a34b2.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L1a34b8.  v2:= temp @kind object;
  #L1a34ba.  v1.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` := v2 @kind object;
  #L1a34be.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `method`(`okhttp3.Request$Builder` v3 @kind this, `java.lang.String` v4 @kind object, `okhttp3.RequestBody` v5 @kind object) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a34d0.  v0:= "method" @kind object;
  #L1a34d4.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a34da.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1a34e0.  v0:= temp;
  #L1a34e2.  v1:= 1I;
  #L1a34e4.  if v0 <= 0 then goto L1a34ec;
  #L1a34e8.  v0:= 1I;
  #L1a34ea.  goto L1a34ee;
  #L1a34ec.  v0:= 0I;
  #L1a34ee.  if v0 == 0 then goto L1a3598;
  #L1a34f2.  v0:= "method " @kind object;
  #L1a34f6.  if v5 != 0 then goto L1a3546;
  #L1a34fa.  call temp:= `requiresRequestBody`(v4) @signature `Lokhttp3/internal/http/HttpMethod;.requiresRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L1a3500.  v2:= temp;
  #L1a3502.  v1:= v1 ^~ v2 @kind int;
  #L1a3504.  if v1 == 0 then goto L1a350a;
  #L1a3508.  goto L1a3552;
  #L1a350a.  v5:= new `java.lang.StringBuilder`;
  #L1a350e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a3514.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a351a.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a3520.  v4:= " must have a request body." @kind object;
  #L1a3524.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a352a.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a3530.  v4:= temp @kind object;
  #L1a3532.  v5:= new `java.lang.IllegalArgumentException`;
  #L1a3536.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a353c.  v4:= temp @kind object;
  #L1a353e.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a3544.  throw v5;
  #L1a3546.  call temp:= `permitsRequestBody`(v4) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L1a354c.  v1:= temp;
  #L1a354e.  if v1 == 0 then goto L1a355c;
  #L1a3552.  v3.`okhttp3.Request$Builder.b` @type ^`java.lang.String` := v4 @kind object;
  #L1a3556.  v3.`okhttp3.Request$Builder.d` @type ^`okhttp3.RequestBody` := v5 @kind object;
  #L1a355a.  return v3 @kind object;
  #L1a355c.  v5:= new `java.lang.StringBuilder`;
  #L1a3560.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a3566.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a356c.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a3572.  v4:= " must not have a request body." @kind object;
  #L1a3576.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a357c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a3582.  v4:= temp @kind object;
  #L1a3584.  v5:= new `java.lang.IllegalArgumentException`;
  #L1a3588.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a358e.  v4:= temp @kind object;
  #L1a3590.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a3596.  throw v5;
  #L1a3598.  v4:= new `java.lang.IllegalArgumentException`;
  #L1a359c.  v5:= "method.isEmpty() == true" @kind object;
  #L1a35a0.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a35a6.  v5:= temp @kind object;
  #L1a35a8.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1a35ae.  throw v4;
}
procedure `okhttp3.Request$Builder` `patch`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/Request$Builder;.patch:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a35c0.  v0:= "body" @kind object;
  #L1a35c4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a35ca.  v0:= "PATCH" @kind object;
  #L1a35ce.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1a35d4.  v2:= temp @kind object;
  #L1a35d6.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `post`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/Request$Builder;.post:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a35e8.  v0:= "body" @kind object;
  #L1a35ec.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a35f2.  v0:= "POST" @kind object;
  #L1a35f6.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1a35fc.  v2:= temp @kind object;
  #L1a35fe.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `put`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/Request$Builder;.put:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a3610.  v0:= "body" @kind object;
  #L1a3614.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a361a.  v0:= "PUT" @kind object;
  #L1a361e.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1a3624.  v2:= temp @kind object;
  #L1a3626.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `removeHeader`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a3638.  v0:= "name" @kind object;
  #L1a363c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3642.  v0:= v1.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` @kind object;
  #L1a3646.  call temp:= `removeAll`(v0, v2) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L1a364c.  return v1 @kind object;
}
procedure `void` `setBody$okhttp`(`okhttp3.Request$Builder` v0 @kind this, `okhttp3.RequestBody` v1 @kind object) @signature `Lokhttp3/Request$Builder;.setBody$okhttp:(Lokhttp3/RequestBody;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1a38f4.  v0.`okhttp3.Request$Builder.d` @type ^`okhttp3.RequestBody` := v1 @kind object;
  #L1a38f8.  return @kind void;
}
procedure `void` `setHeaders$okhttp`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.Headers$Builder` v2 @kind object) @signature `Lokhttp3/Request$Builder;.setHeaders$okhttp:(Lokhttp3/Headers$Builder;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a390c.  v0:= "<set-?>" @kind object;
  #L1a3910.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3916.  v1.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` := v2 @kind object;
  #L1a391a.  return @kind void;
}
procedure `void` `setMethod$okhttp`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Request$Builder;.setMethod$okhttp:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a392c.  v0:= "<set-?>" @kind object;
  #L1a3930.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3936.  v1.`okhttp3.Request$Builder.b` @type ^`java.lang.String` := v2 @kind object;
  #L1a393a.  return @kind void;
}
procedure `void` `setTags$okhttp`(`okhttp3.Request$Builder` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lokhttp3/Request$Builder;.setTags$okhttp:(Ljava/util/Map;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1a394c.  v0:= "<set-?>" @kind object;
  #L1a3950.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3956.  v1.`okhttp3.Request$Builder.e` @type ^`java.util.Map` := v2 @kind object;
  #L1a395a.  return @kind void;
}
procedure `void` `setUrl$okhttp`(`okhttp3.Request$Builder` v0 @kind this, `okhttp3.HttpUrl` v1 @kind object) @signature `Lokhttp3/Request$Builder;.setUrl$okhttp:(Lokhttp3/HttpUrl;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1a396c.  v0.`okhttp3.Request$Builder.a` @type ^`okhttp3.HttpUrl` := v1 @kind object;
  #L1a3970.  return @kind void;
}
procedure `okhttp3.Request$Builder` `tag`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/Request$Builder;.tag:(Ljava/lang/Class;Ljava/lang/Object;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a3660.  v0:= "type" @kind object;
  #L1a3664.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a366a.  if v3 != 0 then goto L1a367a;
  #L1a366e.  v3:= v1.`okhttp3.Request$Builder.e` @type ^`java.util.Map` @kind object;
  #L1a3672.  call temp:= `remove`(v3, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a3678.  goto L1a36b0;
  #L1a367a.  v0:= v1.`okhttp3.Request$Builder.e` @type ^`java.util.Map` @kind object;
  #L1a367e.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L1a3684.  v0:= temp;
  #L1a3686.  if v0 == 0 then goto L1a3698;
  #L1a368a.  v0:= new `java.util.LinkedHashMap`;
  #L1a368e.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L1a3694.  v1.`okhttp3.Request$Builder.e` @type ^`java.util.Map` := v0 @kind object;
  #L1a3698.  v0:= v1.`okhttp3.Request$Builder.e` @type ^`java.util.Map` @kind object;
  #L1a369c.  call temp:= `cast`(v2, v3) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1a36a2.  v3:= temp @kind object;
  #L1a36a4.  call `checkNotNull`(v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1a36aa.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1a36b0.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `tag`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/Request$Builder;.tag:(Ljava/lang/Object;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a36c4.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L1a36c8.  call temp:= `tag`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.tag:(Ljava/lang/Class;Ljava/lang/Object;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1a36ce.  v2:= temp @kind object;
  #L1a36d0.  return v2 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1a36e4.  v0:= "url" @kind object;
  #L1a36e8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a36ee.  v0:= "ws:" @kind object;
  #L1a36f2.  v1:= 1I;
  #L1a36f4.  call temp:= `startsWith`(v4, v0, v1) @signature `Lkotlin/text/StringsKt;.startsWith:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a36fa.  v0:= temp;
  #L1a36fc.  v2:= "(this as java.lang.String).substring(startIndex)" @kind object;
  #L1a3700.  if v0 == 0 then goto L1a3738;
  #L1a3704.  v0:= new `java.lang.StringBuilder`;
  #L1a3708.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a370e.  v1:= "http:" @kind object;
  #L1a3712.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a3718.  v1:= 3I;
  #L1a371a.  call temp:= `substring`(v4, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1a3720.  v4:= temp @kind object;
  #L1a3722.  call `checkNotNullExpressionValue`(v4, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a3728.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a372e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a3734.  v4:= temp @kind object;
  #L1a3736.  goto L1a377a;
  #L1a3738.  v0:= "wss:" @kind object;
  #L1a373c.  call temp:= `startsWith`(v4, v0, v1) @signature `Lkotlin/text/StringsKt;.startsWith:(Ljava/lang/String;Ljava/lang/String;Z)Z` @kind static;
  #L1a3742.  v0:= temp;
  #L1a3744.  if v0 == 0 then goto L1a377a;
  #L1a3748.  v0:= new `java.lang.StringBuilder`;
  #L1a374c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1a3752.  v1:= "https:" @kind object;
  #L1a3756.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a375c.  v1:= 4I;
  #L1a375e.  call temp:= `substring`(v4, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1a3764.  v4:= temp @kind object;
  #L1a3766.  call `checkNotNullExpressionValue`(v4, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a376c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1a3772.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a3778.  v4:= temp @kind object;
  #L1a377a.  v0:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L1a377e.  call temp:= `get`(v0, v4) @signature `Lokhttp3/HttpUrl$Companion;.get:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind virtual;
  #L1a3784.  v4:= temp @kind object;
  #L1a3786.  call temp:= `url`(v3, v4) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1a378c.  v4:= temp @kind object;
  #L1a378e.  return v4 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v2 @kind this, `java.net.URL` v3 @kind object) @signature `Lokhttp3/Request$Builder;.url:(Ljava/net/URL;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1a37a0.  v0:= "url" @kind object;
  #L1a37a4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a37aa.  v0:= `@@okhttp3.HttpUrl.Companion` @type ^`okhttp3.HttpUrl$Companion` @kind object;
  #L1a37ae.  call temp:= `toString`(v3) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L1a37b4.  v3:= temp @kind object;
  #L1a37b6.  v1:= "url.toString()" @kind object;
  #L1a37ba.  call `checkNotNullExpressionValue`(v3, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a37c0.  call temp:= `get`(v0, v3) @signature `Lokhttp3/HttpUrl$Companion;.get:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind virtual;
  #L1a37c6.  v3:= temp @kind object;
  #L1a37c8.  call temp:= `url`(v2, v3) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L1a37ce.  v3:= temp @kind object;
  #L1a37d0.  return v3 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.HttpUrl` v2 @kind object) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1a37e4.  v0:= "url" @kind object;
  #L1a37e8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1a37ee.  v1.`okhttp3.Request$Builder.a` @type ^`okhttp3.HttpUrl` := v2 @kind object;
  #L1a37f2.  return v1 @kind object;
}
