record `retrofit.RestAdapter$Builder` @kind class @AccessFlag PUBLIC {
  `java.util.concurrent.Executor` `retrofit.RestAdapter$Builder.callbackExecutor` @AccessFlag PRIVATE;
  `retrofit.client.Client$Provider` `retrofit.RestAdapter$Builder.clientProvider` @AccessFlag PRIVATE;
  `retrofit.converter.Converter` `retrofit.RestAdapter$Builder.converter` @AccessFlag PRIVATE;
  `retrofit.Endpoint` `retrofit.RestAdapter$Builder.endpoint` @AccessFlag PRIVATE;
  `retrofit.ErrorHandler` `retrofit.RestAdapter$Builder.errorHandler` @AccessFlag PRIVATE;
  `java.util.concurrent.Executor` `retrofit.RestAdapter$Builder.httpExecutor` @AccessFlag PRIVATE;
  `retrofit.RestAdapter$Log` `retrofit.RestAdapter$Builder.log` @AccessFlag PRIVATE;
  `retrofit.RestAdapter$LogLevel` `retrofit.RestAdapter$Builder.logLevel` @AccessFlag PRIVATE;
  `retrofit.Profiler` `retrofit.RestAdapter$Builder.profiler` @AccessFlag PRIVATE;
  `retrofit.RequestInterceptor` `retrofit.RestAdapter$Builder.requestInterceptor` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`retrofit.RestAdapter$Builder` v1 @kind this) @signature `Lretrofit/RestAdapter$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L48d6fc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48d702.  v0:= `@@retrofit.RestAdapter$LogLevel.NONE` @type ^`retrofit.RestAdapter$LogLevel` @kind object;
  #L48d706.  v1.`retrofit.RestAdapter$Builder.logLevel` @type ^`retrofit.RestAdapter$LogLevel` := v0 @kind object;
  #L48d70a.  return @kind void;
}
procedure `void` `ensureSaneDefaults`(`retrofit.RestAdapter$Builder` v1 @kind this) @signature `Lretrofit/RestAdapter$Builder;.ensureSaneDefaults:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L48d71c.  v0:= v1.`retrofit.RestAdapter$Builder.converter` @type ^`retrofit.converter.Converter` @kind object;
  #L48d720.  if v0 != 0 then goto L48d738;
  #L48d724.  call temp:= `get`() @signature `Lretrofit/Platform;.get:()Lretrofit/Platform;` @kind static;
  #L48d72a.  v0:= temp @kind object;
  #L48d72c.  call temp:= `defaultConverter`(v0) @signature `Lretrofit/Platform;.defaultConverter:()Lretrofit/converter/Converter;` @kind virtual;
  #L48d732.  v0:= temp @kind object;
  #L48d734.  v1.`retrofit.RestAdapter$Builder.converter` @type ^`retrofit.converter.Converter` := v0 @kind object;
  #L48d738.  v0:= v1.`retrofit.RestAdapter$Builder.clientProvider` @type ^`retrofit.client.Client$Provider` @kind object;
  #L48d73c.  if v0 != 0 then goto L48d754;
  #L48d740.  call temp:= `get`() @signature `Lretrofit/Platform;.get:()Lretrofit/Platform;` @kind static;
  #L48d746.  v0:= temp @kind object;
  #L48d748.  call temp:= `defaultClient`(v0) @signature `Lretrofit/Platform;.defaultClient:()Lretrofit/client/Client$Provider;` @kind virtual;
  #L48d74e.  v0:= temp @kind object;
  #L48d750.  v1.`retrofit.RestAdapter$Builder.clientProvider` @type ^`retrofit.client.Client$Provider` := v0 @kind object;
  #L48d754.  v0:= v1.`retrofit.RestAdapter$Builder.httpExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L48d758.  if v0 != 0 then goto L48d770;
  #L48d75c.  call temp:= `get`() @signature `Lretrofit/Platform;.get:()Lretrofit/Platform;` @kind static;
  #L48d762.  v0:= temp @kind object;
  #L48d764.  call temp:= `defaultHttpExecutor`(v0) @signature `Lretrofit/Platform;.defaultHttpExecutor:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L48d76a.  v0:= temp @kind object;
  #L48d76c.  v1.`retrofit.RestAdapter$Builder.httpExecutor` @type ^`java.util.concurrent.Executor` := v0 @kind object;
  #L48d770.  v0:= v1.`retrofit.RestAdapter$Builder.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L48d774.  if v0 != 0 then goto L48d78c;
  #L48d778.  call temp:= `get`() @signature `Lretrofit/Platform;.get:()Lretrofit/Platform;` @kind static;
  #L48d77e.  v0:= temp @kind object;
  #L48d780.  call temp:= `defaultCallbackExecutor`(v0) @signature `Lretrofit/Platform;.defaultCallbackExecutor:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L48d786.  v0:= temp @kind object;
  #L48d788.  v1.`retrofit.RestAdapter$Builder.callbackExecutor` @type ^`java.util.concurrent.Executor` := v0 @kind object;
  #L48d78c.  v0:= v1.`retrofit.RestAdapter$Builder.errorHandler` @type ^`retrofit.ErrorHandler` @kind object;
  #L48d790.  if v0 != 0 then goto L48d79c;
  #L48d794.  v0:= `@@retrofit.ErrorHandler.DEFAULT` @type ^`retrofit.ErrorHandler` @kind object;
  #L48d798.  v1.`retrofit.RestAdapter$Builder.errorHandler` @type ^`retrofit.ErrorHandler` := v0 @kind object;
  #L48d79c.  v0:= v1.`retrofit.RestAdapter$Builder.log` @type ^`retrofit.RestAdapter$Log` @kind object;
  #L48d7a0.  if v0 != 0 then goto L48d7b8;
  #L48d7a4.  call temp:= `get`() @signature `Lretrofit/Platform;.get:()Lretrofit/Platform;` @kind static;
  #L48d7aa.  v0:= temp @kind object;
  #L48d7ac.  call temp:= `defaultLog`(v0) @signature `Lretrofit/Platform;.defaultLog:()Lretrofit/RestAdapter$Log;` @kind virtual;
  #L48d7b2.  v0:= temp @kind object;
  #L48d7b4.  v1.`retrofit.RestAdapter$Builder.log` @type ^`retrofit.RestAdapter$Log` := v0 @kind object;
  #L48d7b8.  v0:= v1.`retrofit.RestAdapter$Builder.requestInterceptor` @type ^`retrofit.RequestInterceptor` @kind object;
  #L48d7bc.  if v0 != 0 then goto L48d7c8;
  #L48d7c0.  v0:= `@@retrofit.RequestInterceptor.NONE` @type ^`retrofit.RequestInterceptor` @kind object;
  #L48d7c4.  v1.`retrofit.RestAdapter$Builder.requestInterceptor` @type ^`retrofit.RequestInterceptor` := v0 @kind object;
  #L48d7c8.  return @kind void;
}
procedure `retrofit.RestAdapter` `build`(`retrofit.RestAdapter$Builder` v13 @kind this) @signature `Lretrofit/RestAdapter$Builder;.build:()Lretrofit/RestAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L48d478.  v0:= v13.`retrofit.RestAdapter$Builder.endpoint` @type ^`retrofit.Endpoint` @kind object;
  #L48d47c.  if v0 == 0 then goto L48d4be;
  #L48d480.  call `ensureSaneDefaults`(v13) @signature `Lretrofit/RestAdapter$Builder;.ensureSaneDefaults:()V` @kind direct;
  #L48d486.  v0:= new `retrofit.RestAdapter`;
  #L48d48a.  v2:= v13.`retrofit.RestAdapter$Builder.endpoint` @type ^`retrofit.Endpoint` @kind object;
  #L48d48e.  v3:= v13.`retrofit.RestAdapter$Builder.clientProvider` @type ^`retrofit.client.Client$Provider` @kind object;
  #L48d492.  v4:= v13.`retrofit.RestAdapter$Builder.httpExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L48d496.  v5:= v13.`retrofit.RestAdapter$Builder.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L48d49a.  v6:= v13.`retrofit.RestAdapter$Builder.requestInterceptor` @type ^`retrofit.RequestInterceptor` @kind object;
  #L48d49e.  v7:= v13.`retrofit.RestAdapter$Builder.converter` @type ^`retrofit.converter.Converter` @kind object;
  #L48d4a2.  v8:= v13.`retrofit.RestAdapter$Builder.profiler` @type ^`retrofit.Profiler` @kind object;
  #L48d4a6.  v9:= v13.`retrofit.RestAdapter$Builder.errorHandler` @type ^`retrofit.ErrorHandler` @kind object;
  #L48d4aa.  v10:= v13.`retrofit.RestAdapter$Builder.log` @type ^`retrofit.RestAdapter$Log` @kind object;
  #L48d4ae.  v11:= v13.`retrofit.RestAdapter$Builder.logLevel` @type ^`retrofit.RestAdapter$LogLevel` @kind object;
  #L48d4b2.  v12:= 0I;
  #L48d4b4.  v1:= v0 @kind object;
  #L48d4b6.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `Lretrofit/RestAdapter;.<init>:(Lretrofit/Endpoint;Lretrofit/client/Client$Provider;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Lretrofit/RequestInterceptor;Lretrofit/converter/Converter;Lretrofit/Profiler;Lretrofit/ErrorHandler;Lretrofit/RestAdapter$Log;Lretrofit/RestAdapter$LogLevel;Lretrofit/RestAdapter$1;)V` @kind direct;
  #L48d4bc.  return v0 @kind object;
  #L48d4be.  v0:= new `java.lang.IllegalArgumentException`;
  #L48d4c2.  v1:= "Endpoint may not be null." @kind object;
  #L48d4c6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48d4cc.  throw v0;
}
procedure `retrofit.RestAdapter$Builder` `setClient`(`retrofit.RestAdapter$Builder` v1 @kind this, `retrofit.client.Client$Provider` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setClient:(Lretrofit/client/Client$Provider;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d4e0.  if v2 == 0 then goto L48d4ea;
  #L48d4e4.  v1.`retrofit.RestAdapter$Builder.clientProvider` @type ^`retrofit.client.Client$Provider` := v2 @kind object;
  #L48d4e8.  return v1 @kind object;
  #L48d4ea.  v2:= new `java.lang.NullPointerException`;
  #L48d4ee.  v0:= "Client provider may not be null." @kind object;
  #L48d4f2.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48d4f8.  throw v2;
}
procedure `retrofit.RestAdapter$Builder` `setClient`(`retrofit.RestAdapter$Builder` v1 @kind this, `retrofit.client.Client` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setClient:(Lretrofit/client/Client;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d50c.  if v2 == 0 then goto L48d524;
  #L48d510.  v0:= new `retrofit.RestAdapter$Builder$1`;
  #L48d514.  call `<init>`(v0, v1, v2) @signature `Lretrofit/RestAdapter$Builder$1;.<init>:(Lretrofit/RestAdapter$Builder;Lretrofit/client/Client;)V` @kind direct;
  #L48d51a.  call temp:= `setClient`(v1, v0) @signature `Lretrofit/RestAdapter$Builder;.setClient:(Lretrofit/client/Client$Provider;)Lretrofit/RestAdapter$Builder;` @kind virtual;
  #L48d520.  v2:= temp @kind object;
  #L48d522.  return v2 @kind object;
  #L48d524.  v2:= new `java.lang.NullPointerException`;
  #L48d528.  v0:= "Client may not be null." @kind object;
  #L48d52c.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48d532.  throw v2;
}
procedure `retrofit.RestAdapter$Builder` `setConverter`(`retrofit.RestAdapter$Builder` v1 @kind this, `retrofit.converter.Converter` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setConverter:(Lretrofit/converter/Converter;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d544.  if v2 == 0 then goto L48d54e;
  #L48d548.  v1.`retrofit.RestAdapter$Builder.converter` @type ^`retrofit.converter.Converter` := v2 @kind object;
  #L48d54c.  return v1 @kind object;
  #L48d54e.  v2:= new `java.lang.NullPointerException`;
  #L48d552.  v0:= "Converter may not be null." @kind object;
  #L48d556.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48d55c.  throw v2;
}
procedure `retrofit.RestAdapter$Builder` `setEndpoint`(`retrofit.RestAdapter$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setEndpoint:(Ljava/lang/String;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d570.  if v2 == 0 then goto L48d596;
  #L48d574.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L48d57a.  v0:= temp @kind object;
  #L48d57c.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L48d582.  v0:= temp;
  #L48d584.  if v0 == 0 then goto L48d596;
  #L48d588.  call temp:= `newFixedEndpoint`(v2) @signature `Lretrofit/Endpoints;.newFixedEndpoint:(Ljava/lang/String;)Lretrofit/Endpoint;` @kind static;
  #L48d58e.  v2:= temp @kind object;
  #L48d590.  v1.`retrofit.RestAdapter$Builder.endpoint` @type ^`retrofit.Endpoint` := v2 @kind object;
  #L48d594.  return v1 @kind object;
  #L48d596.  v2:= new `java.lang.NullPointerException`;
  #L48d59a.  v0:= "Endpoint may not be blank." @kind object;
  #L48d59e.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48d5a4.  throw v2;
}
procedure `retrofit.RestAdapter$Builder` `setEndpoint`(`retrofit.RestAdapter$Builder` v1 @kind this, `retrofit.Endpoint` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setEndpoint:(Lretrofit/Endpoint;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d5b8.  if v2 == 0 then goto L48d5c2;
  #L48d5bc.  v1.`retrofit.RestAdapter$Builder.endpoint` @type ^`retrofit.Endpoint` := v2 @kind object;
  #L48d5c0.  return v1 @kind object;
  #L48d5c2.  v2:= new `java.lang.NullPointerException`;
  #L48d5c6.  v0:= "Endpoint may not be null." @kind object;
  #L48d5ca.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48d5d0.  throw v2;
}
procedure `retrofit.RestAdapter$Builder` `setErrorHandler`(`retrofit.RestAdapter$Builder` v1 @kind this, `retrofit.ErrorHandler` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setErrorHandler:(Lretrofit/ErrorHandler;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d5e4.  if v2 == 0 then goto L48d5ee;
  #L48d5e8.  v1.`retrofit.RestAdapter$Builder.errorHandler` @type ^`retrofit.ErrorHandler` := v2 @kind object;
  #L48d5ec.  return v1 @kind object;
  #L48d5ee.  v2:= new `java.lang.NullPointerException`;
  #L48d5f2.  v0:= "Error handler may not be null." @kind object;
  #L48d5f6.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48d5fc.  throw v2;
}
procedure `retrofit.RestAdapter$Builder` `setExecutors`(`retrofit.RestAdapter$Builder` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `java.util.concurrent.Executor` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setExecutors:(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;

  #L48d610.  if v1 == 0 then goto L48d62c;
  #L48d614.  if v2 != 0 then goto L48d622;
  #L48d618.  v2:= new `retrofit.Utils$SynchronousExecutor`;
  #L48d61c.  call `<init>`(v2) @signature `Lretrofit/Utils$SynchronousExecutor;.<init>:()V` @kind direct;
  #L48d622.  v0.`retrofit.RestAdapter$Builder.httpExecutor` @type ^`java.util.concurrent.Executor` := v1 @kind object;
  #L48d626.  v0.`retrofit.RestAdapter$Builder.callbackExecutor` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L48d62a.  return v0 @kind object;
  #L48d62c.  v1:= new `java.lang.NullPointerException`;
  #L48d630.  v2:= "HTTP executor may not be null." @kind object;
  #L48d634.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48d63a.  throw v1;
}
procedure `retrofit.RestAdapter$Builder` `setLog`(`retrofit.RestAdapter$Builder` v1 @kind this, `retrofit.RestAdapter$Log` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setLog:(Lretrofit/RestAdapter$Log;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d64c.  if v2 == 0 then goto L48d656;
  #L48d650.  v1.`retrofit.RestAdapter$Builder.log` @type ^`retrofit.RestAdapter$Log` := v2 @kind object;
  #L48d654.  return v1 @kind object;
  #L48d656.  v2:= new `java.lang.NullPointerException`;
  #L48d65a.  v0:= "Log may not be null." @kind object;
  #L48d65e.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48d664.  throw v2;
}
procedure `retrofit.RestAdapter$Builder` `setLogLevel`(`retrofit.RestAdapter$Builder` v1 @kind this, `retrofit.RestAdapter$LogLevel` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setLogLevel:(Lretrofit/RestAdapter$LogLevel;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d678.  if v2 == 0 then goto L48d682;
  #L48d67c.  v1.`retrofit.RestAdapter$Builder.logLevel` @type ^`retrofit.RestAdapter$LogLevel` := v2 @kind object;
  #L48d680.  return v1 @kind object;
  #L48d682.  v2:= new `java.lang.NullPointerException`;
  #L48d686.  v0:= "Log level may not be null." @kind object;
  #L48d68a.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48d690.  throw v2;
}
procedure `retrofit.RestAdapter$Builder` `setProfiler`(`retrofit.RestAdapter$Builder` v1 @kind this, `retrofit.Profiler` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setProfiler:(Lretrofit/Profiler;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d6a4.  if v2 == 0 then goto L48d6ae;
  #L48d6a8.  v1.`retrofit.RestAdapter$Builder.profiler` @type ^`retrofit.Profiler` := v2 @kind object;
  #L48d6ac.  return v1 @kind object;
  #L48d6ae.  v2:= new `java.lang.NullPointerException`;
  #L48d6b2.  v0:= "Profiler may not be null." @kind object;
  #L48d6b6.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48d6bc.  throw v2;
}
procedure `retrofit.RestAdapter$Builder` `setRequestInterceptor`(`retrofit.RestAdapter$Builder` v1 @kind this, `retrofit.RequestInterceptor` v2 @kind object) @signature `Lretrofit/RestAdapter$Builder;.setRequestInterceptor:(Lretrofit/RequestInterceptor;)Lretrofit/RestAdapter$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d6d0.  if v2 == 0 then goto L48d6da;
  #L48d6d4.  v1.`retrofit.RestAdapter$Builder.requestInterceptor` @type ^`retrofit.RequestInterceptor` := v2 @kind object;
  #L48d6d8.  return v1 @kind object;
  #L48d6da.  v2:= new `java.lang.NullPointerException`;
  #L48d6de.  v0:= "Request interceptor may not be null." @kind object;
  #L48d6e2.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48d6e8.  throw v2;
}
