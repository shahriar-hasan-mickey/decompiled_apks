record `retrofit.ExceptionCatchingTypedInput` @kind class @AccessFlag  extends `retrofit.mime.TypedInput` @kind interface {
  `retrofit.mime.TypedInput` `retrofit.ExceptionCatchingTypedInput.delegate` @AccessFlag PRIVATE_FINAL;
  `retrofit.ExceptionCatchingTypedInput$ExceptionCatchingInputStream` `retrofit.ExceptionCatchingTypedInput.delegateStream` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit.ExceptionCatchingTypedInput` v1 @kind this, `retrofit.mime.TypedInput` v2 @kind object) @signature `Lretrofit/ExceptionCatchingTypedInput;.<init>:(Lretrofit/mime/TypedInput;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L48bbdc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48bbe2.  v1.`retrofit.ExceptionCatchingTypedInput.delegate` @type ^`retrofit.mime.TypedInput` := v2 @kind object;
  #L48bbe6.  v0:= new `retrofit.ExceptionCatchingTypedInput$ExceptionCatchingInputStream`;
  #L48bbea.  call temp:= `in`(v2) @signature `Lretrofit/mime/TypedInput;.in:()Ljava/io/InputStream;` @kind interface;
  #L48bbf0.  v2:= temp @kind object;
  #L48bbf2.  call `<init>`(v0, v2) @signature `Lretrofit/ExceptionCatchingTypedInput$ExceptionCatchingInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L48bbf8.  v1.`retrofit.ExceptionCatchingTypedInput.delegateStream` @type ^`retrofit.ExceptionCatchingTypedInput$ExceptionCatchingInputStream` := v0 @kind object;
  #L48bbfc.  return @kind void;
}
procedure `java.io.IOException` `getThrownException`(`retrofit.ExceptionCatchingTypedInput` v1 @kind this) @signature `Lretrofit/ExceptionCatchingTypedInput;.getThrownException:()Ljava/io/IOException;` @AccessFlag  {
    temp;
    v0;

  #L48bb64.  v0:= v1.`retrofit.ExceptionCatchingTypedInput.delegateStream` @type ^`retrofit.ExceptionCatchingTypedInput$ExceptionCatchingInputStream` @kind object;
  #L48bb68.  call temp:= `access$000`(v0) @signature `Lretrofit/ExceptionCatchingTypedInput$ExceptionCatchingInputStream;.access$000:(Lretrofit/ExceptionCatchingTypedInput$ExceptionCatchingInputStream;)Ljava/io/IOException;` @kind static;
  #L48bb6e.  v0:= temp @kind object;
  #L48bb70.  return v0 @kind object;
}
procedure `java.io.InputStream` `in`(`retrofit.ExceptionCatchingTypedInput` v1 @kind this) @signature `Lretrofit/ExceptionCatchingTypedInput;.in:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48bb84.  v0:= v1.`retrofit.ExceptionCatchingTypedInput.delegateStream` @type ^`retrofit.ExceptionCatchingTypedInput$ExceptionCatchingInputStream` @kind object;
  #L48bb88.  return v0 @kind object;
}
procedure `long` `length`(`retrofit.ExceptionCatchingTypedInput` v2 @kind this) @signature `Lretrofit/ExceptionCatchingTypedInput;.length:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48bbbc.  v0:= v2.`retrofit.ExceptionCatchingTypedInput.delegate` @type ^`retrofit.mime.TypedInput` @kind object;
  #L48bbc0.  call temp:= `length`(v0) @signature `Lretrofit/mime/TypedInput;.length:()J` @kind interface;
  #L48bbc6.  v0:= temp @kind wide;
  #L48bbc8.  return v0 @kind wide;
}
procedure `java.lang.String` `mimeType`(`retrofit.ExceptionCatchingTypedInput` v1 @kind this) @signature `Lretrofit/ExceptionCatchingTypedInput;.mimeType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48bb9c.  v0:= v1.`retrofit.ExceptionCatchingTypedInput.delegate` @type ^`retrofit.mime.TypedInput` @kind object;
  #L48bba0.  call temp:= `mimeType`(v0) @signature `Lretrofit/mime/TypedInput;.mimeType:()Ljava/lang/String;` @kind interface;
  #L48bba6.  v0:= temp @kind object;
  #L48bba8.  return v0 @kind object;
}
procedure `boolean` `threwException`(`retrofit.ExceptionCatchingTypedInput` v1 @kind this) @signature `Lretrofit/ExceptionCatchingTypedInput;.threwException:()Z` @AccessFlag  {
    temp;
    v0;

  #L48bb3c.  v0:= v1.`retrofit.ExceptionCatchingTypedInput.delegateStream` @type ^`retrofit.ExceptionCatchingTypedInput$ExceptionCatchingInputStream` @kind object;
  #L48bb40.  call temp:= `access$000`(v0) @signature `Lretrofit/ExceptionCatchingTypedInput$ExceptionCatchingInputStream;.access$000:(Lretrofit/ExceptionCatchingTypedInput$ExceptionCatchingInputStream;)Ljava/io/IOException;` @kind static;
  #L48bb46.  v0:= temp @kind object;
  #L48bb48.  if v0 == 0 then goto L48bb50;
  #L48bb4c.  v0:= 1I;
  #L48bb4e.  goto L48bb52;
  #L48bb50.  v0:= 0I;
  #L48bb52.  return v0;
}
