record `retrofit.mime.TypedByteArray` @kind class @AccessFlag PUBLIC extends `retrofit.mime.TypedInput` @kind interface, `retrofit.mime.TypedOutput` @kind interface {
  `byte`[] `retrofit.mime.TypedByteArray.bytes` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit.mime.TypedByteArray.mimeType` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit.mime.TypedByteArray` v0 @kind this, `java.lang.String` v1 @kind object, `byte`[] v2 @kind object) @signature `Lretrofit/mime/TypedByteArray;.<init>:(Ljava/lang/String;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L49243c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L492442.  if v1 != 0 then goto L49244a;
  #L492446.  v1:= "application/unknown" @kind object;
  #L49244a.  if v2 == 0 then goto L492458;
  #L49244e.  v0.`retrofit.mime.TypedByteArray.mimeType` @type ^`java.lang.String` := v1 @kind object;
  #L492452.  v0.`retrofit.mime.TypedByteArray.bytes` @type ^`byte`[] := v2 @kind object;
  #L492456.  return @kind void;
  #L492458.  v1:= new `java.lang.NullPointerException`;
  #L49245c.  v2:= "bytes" @kind object;
  #L492460.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L492466.  throw v1;
}
procedure `boolean` `equals`(`retrofit.mime.TypedByteArray` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lretrofit/mime/TypedByteArray;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4922dc.  v0:= 1I;
  #L4922de.  if v4 != v5 then goto L4922e4;
  #L4922e2.  return v0;
  #L4922e4.  v1:= 0I;
  #L4922e6.  if v5 == 0 then goto L492332;
  #L4922ea.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4922f0.  v2:= temp @kind object;
  #L4922f2.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4922f8.  v3:= temp @kind object;
  #L4922fa.  if v2 == v3 then goto L492300;
  #L4922fe.  goto L492332;
  #L492300.  v5:= (`retrofit.mime.TypedByteArray`) v5 @kind object;
  #L492304.  v2:= v4.`retrofit.mime.TypedByteArray.bytes` @type ^`byte`[] @kind object;
  #L492308.  v3:= v5.`retrofit.mime.TypedByteArray.bytes` @type ^`byte`[] @kind object;
  #L49230c.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L492312.  v2:= temp;
  #L492314.  if v2 != 0 then goto L49231a;
  #L492318.  return v1;
  #L49231a.  v2:= v4.`retrofit.mime.TypedByteArray.mimeType` @type ^`java.lang.String` @kind object;
  #L49231e.  v5:= v5.`retrofit.mime.TypedByteArray.mimeType` @type ^`java.lang.String` @kind object;
  #L492322.  call temp:= `equals`(v2, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L492328.  v5:= temp;
  #L49232a.  if v5 != 0 then goto L492330;
  #L49232e.  return v1;
  #L492330.  return v0;
  #L492332.  return v1;
}
procedure `java.lang.String` `fileName`(`retrofit.mime.TypedByteArray` v1 @kind this) @signature `Lretrofit/mime/TypedByteArray;.fileName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4923ac.  v0:= 0I;
  #L4923ae.  return v0 @kind object;
}
procedure `byte`[] `getBytes`(`retrofit.mime.TypedByteArray` v1 @kind this) @signature `Lretrofit/mime/TypedByteArray;.getBytes:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L492344.  v0:= v1.`retrofit.mime.TypedByteArray.bytes` @type ^`byte`[] @kind object;
  #L492348.  return v0 @kind object;
}
procedure `int` `hashCode`(`retrofit.mime.TypedByteArray` v2 @kind this) @signature `Lretrofit/mime/TypedByteArray;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49235c.  v0:= v2.`retrofit.mime.TypedByteArray.mimeType` @type ^`java.lang.String` @kind object;
  #L492360.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L492366.  v0:= temp;
  #L492368.  v0:= v0 * 31;
  #L49236c.  v1:= v2.`retrofit.mime.TypedByteArray.bytes` @type ^`byte`[] @kind object;
  #L492370.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([B)I` @kind static;
  #L492376.  v1:= temp;
  #L492378.  v0:= v0 + v1 @kind int;
  #L49237a.  return v0;
}
procedure `java.io.InputStream` `in`(`retrofit.mime.TypedByteArray` v2 @kind this) @signature `Lretrofit/mime/TypedByteArray;.in:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49238c.  v0:= new `java.io.ByteArrayInputStream`;
  #L492390.  v1:= v2.`retrofit.mime.TypedByteArray.bytes` @type ^`byte`[] @kind object;
  #L492394.  call `<init>`(v0, v1) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L49239a.  return v0 @kind object;
}
procedure `long` `length`(`retrofit.mime.TypedByteArray` v2 @kind this) @signature `Lretrofit/mime/TypedByteArray;.length:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L492420.  v0:= v2.`retrofit.mime.TypedByteArray.bytes` @type ^`byte`[] @kind object;
  #L492424.  v0:= length @variable v0;
  #L492426.  v0:= (`long`) v0 @kind i2l;
  #L492428.  return v0 @kind wide;
}
procedure `java.lang.String` `mimeType`(`retrofit.mime.TypedByteArray` v1 @kind this) @signature `Lretrofit/mime/TypedByteArray;.mimeType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4923c0.  v0:= v1.`retrofit.mime.TypedByteArray.mimeType` @type ^`java.lang.String` @kind object;
  #L4923c4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`retrofit.mime.TypedByteArray` v3 @kind this) @signature `Lretrofit/mime/TypedByteArray;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4923d8.  v0:= new `java.lang.StringBuilder`;
  #L4923dc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4923e2.  v1:= "TypedByteArray[length=" @kind object;
  #L4923e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4923ec.  call temp:= `length`(v3) @signature `Lretrofit/mime/TypedByteArray;.length:()J` @kind virtual;
  #L4923f2.  v1:= temp @kind wide;
  #L4923f4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L4923fa.  v1:= "]" @kind object;
  #L4923fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L492404.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L49240a.  v0:= temp @kind object;
  #L49240c.  return v0 @kind object;
}
procedure `void` `writeTo`(`retrofit.mime.TypedByteArray` v1 @kind this, `java.io.OutputStream` v2 @kind object) @signature `Lretrofit/mime/TypedByteArray;.writeTo:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L492478.  v0:= v1.`retrofit.mime.TypedByteArray.bytes` @type ^`byte`[] @kind object;
  #L49247c.  call `write`(v2, v0) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L492482.  return @kind void;
}
