record `retrofit.mime.TypedFile` @kind class @AccessFlag PUBLIC extends `retrofit.mime.TypedInput` @kind interface, `retrofit.mime.TypedOutput` @kind interface {
  `java.io.File` `retrofit.mime.TypedFile.file` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit.mime.TypedFile.mimeType` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@retrofit.mime.TypedFile.BUFFER_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`retrofit.mime.TypedFile` v0 @kind this, `java.lang.String` v1 @kind object, `java.io.File` v2 @kind object) @signature `Lretrofit/mime/TypedFile;.<init>:(Ljava/lang/String;Ljava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4925d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4925de.  if v1 == 0 then goto L492600;
  #L4925e2.  if v2 == 0 then goto L4925f0;
  #L4925e6.  v0.`retrofit.mime.TypedFile.mimeType` @type ^`java.lang.String` := v1 @kind object;
  #L4925ea.  v0.`retrofit.mime.TypedFile.file` @type ^`java.io.File` := v2 @kind object;
  #L4925ee.  return @kind void;
  #L4925f0.  v1:= new `java.lang.NullPointerException`;
  #L4925f4.  v2:= "file" @kind object;
  #L4925f8.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4925fe.  throw v1;
  #L492600.  v1:= new `java.lang.NullPointerException`;
  #L492604.  v2:= "mimeType" @kind object;
  #L492608.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49260e.  throw v1;
}
procedure `boolean` `equals`(`retrofit.mime.TypedFile` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lretrofit/mime/TypedFile;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L492494.  if v1 != v2 then goto L49249c;
  #L492498.  v2:= 1I;
  #L49249a.  return v2;
  #L49249c.  v0:= instanceof @variable v2 @type ^`retrofit.mime.TypedFile` @kind boolean;
  #L4924a0.  if v0 == 0 then goto L4924ba;
  #L4924a4.  v2:= (`retrofit.mime.TypedFile`) v2 @kind object;
  #L4924a8.  v0:= v1.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L4924ac.  v2:= v2.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L4924b0.  call temp:= `equals`(v0, v2) @signature `Ljava/io/File;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4924b6.  v2:= temp;
  #L4924b8.  return v2;
  #L4924ba.  v2:= 0I;
  #L4924bc.  return v2;
}
procedure `java.io.File` `file`(`retrofit.mime.TypedFile` v1 @kind this) @signature `Lretrofit/mime/TypedFile;.file:()Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4924f0.  v0:= v1.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L4924f4.  return v0 @kind object;
}
procedure `java.lang.String` `fileName`(`retrofit.mime.TypedFile` v1 @kind this) @signature `Lretrofit/mime/TypedFile;.fileName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L492528.  v0:= v1.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L49252c.  call temp:= `getName`(v0) @signature `Ljava/io/File;.getName:()Ljava/lang/String;` @kind virtual;
  #L492532.  v0:= temp @kind object;
  #L492534.  return v0 @kind object;
}
procedure `int` `hashCode`(`retrofit.mime.TypedFile` v1 @kind this) @signature `Lretrofit/mime/TypedFile;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4924d0.  v0:= v1.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L4924d4.  call temp:= `hashCode`(v0) @signature `Ljava/io/File;.hashCode:()I` @kind virtual;
  #L4924da.  v0:= temp;
  #L4924dc.  return v0;
}
procedure `java.io.InputStream` `in`(`retrofit.mime.TypedFile` v2 @kind this) @signature `Lretrofit/mime/TypedFile;.in:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L492508.  v0:= new `java.io.FileInputStream`;
  #L49250c.  v1:= v2.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L492510.  call `<init>`(v0, v1) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L492516.  return v0 @kind object;
}
procedure `long` `length`(`retrofit.mime.TypedFile` v2 @kind this) @signature `Lretrofit/mime/TypedFile;.length:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4925b8.  v0:= v2.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L4925bc.  call temp:= `length`(v0) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L4925c2.  v0:= temp @kind wide;
  #L4925c4.  return v0 @kind wide;
}
procedure `java.lang.String` `mimeType`(`retrofit.mime.TypedFile` v1 @kind this) @signature `Lretrofit/mime/TypedFile;.mimeType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L492548.  v0:= v1.`retrofit.mime.TypedFile.mimeType` @type ^`java.lang.String` @kind object;
  #L49254c.  return v0 @kind object;
}
procedure `void` `moveTo`(`retrofit.mime.TypedFile` v2 @kind this, `retrofit.mime.TypedFile` v3 @kind object) @signature `Lretrofit/mime/TypedFile;.moveTo:(Lretrofit/mime/TypedFile;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L492620.  call temp:= `mimeType`(v2) @signature `Lretrofit/mime/TypedFile;.mimeType:()Ljava/lang/String;` @kind virtual;
  #L492626.  v0:= temp @kind object;
  #L492628.  call temp:= `mimeType`(v3) @signature `Lretrofit/mime/TypedFile;.mimeType:()Ljava/lang/String;` @kind virtual;
  #L49262e.  v1:= temp @kind object;
  #L492630.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L492636.  v0:= temp;
  #L492638.  if v0 == 0 then goto L492666;
  #L49263c.  v0:= v2.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L492640.  call temp:= `file`(v3) @signature `Lretrofit/mime/TypedFile;.file:()Ljava/io/File;` @kind virtual;
  #L492646.  v3:= temp @kind object;
  #L492648.  call temp:= `renameTo`(v0, v3) @signature `Ljava/io/File;.renameTo:(Ljava/io/File;)Z` @kind virtual;
  #L49264e.  v3:= temp;
  #L492650.  if v3 == 0 then goto L492656;
  #L492654.  return @kind void;
  #L492656.  v3:= new `java.io.IOException`;
  #L49265a.  v0:= "Rename failed!" @kind object;
  #L49265e.  call `<init>`(v3, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L492664.  throw v3;
  #L492666.  v3:= new `java.io.IOException`;
  #L49266a.  v0:= "Type mismatch." @kind object;
  #L49266e.  call `<init>`(v3, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L492674.  throw v3;
}
procedure `java.lang.String` `toString`(`retrofit.mime.TypedFile` v2 @kind this) @signature `Lretrofit/mime/TypedFile;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L492560.  v0:= new `java.lang.StringBuilder`;
  #L492564.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L49256a.  v1:= v2.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L49256e.  call temp:= `getAbsolutePath`(v1) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L492574.  v1:= temp @kind object;
  #L492576.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49257c.  v1:= " (" @kind object;
  #L492580.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L492586.  call temp:= `mimeType`(v2) @signature `Lretrofit/mime/TypedFile;.mimeType:()Ljava/lang/String;` @kind virtual;
  #L49258c.  v1:= temp @kind object;
  #L49258e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L492594.  v1:= ")" @kind object;
  #L492598.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49259e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4925a4.  v0:= temp @kind object;
  #L4925a6.  return v0 @kind object;
}
procedure `void` `writeTo`(`retrofit.mime.TypedFile` v4 @kind this, `java.io.OutputStream` v5 @kind object) @signature `Lretrofit/mime/TypedFile;.writeTo:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L492688.  v0:= 4096I;
  #L49268c.  v0:= new `byte`[v0];
  #L492690.  v1:= new `java.io.FileInputStream`;
  #L492694.  v2:= v4.`retrofit.mime.TypedFile.file` @type ^`java.io.File` @kind object;
  #L492698.  call `<init>`(v1, v2) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L49269e.  call temp:= `read`(v1, v0) @signature `Ljava/io/FileInputStream;.read:([B)I` @kind virtual;
  #L4926a4.  v2:= temp;
  #L4926a6.  v3:= -1I;
  #L4926a8.  if v2 == v3 then goto L4926b6;
  #L4926ac.  v3:= 0I;
  #L4926ae.  call `write`(v5, v0, v3, v2) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L4926b4.  goto L49269e;
  #L4926b6.  call `close`(v1) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L4926bc.  return @kind void;
  #L4926be.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4926c0.  call `close`(v1) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L4926c6.  throw v5;
  catch `java.lang.Throwable` @[L49269e..L4926b4] goto L4926be;
}
