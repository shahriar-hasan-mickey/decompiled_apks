record `retrofit.mime.MultipartTypedOutput` @kind class @AccessFlag PUBLIC_FINAL extends `retrofit.mime.TypedOutput` @kind interface {
  `java.lang.String` `retrofit.mime.MultipartTypedOutput.boundary` @AccessFlag PRIVATE_FINAL;
  `byte`[] `retrofit.mime.MultipartTypedOutput.footer` @AccessFlag PRIVATE_FINAL;
  `long` `retrofit.mime.MultipartTypedOutput.length` @AccessFlag PRIVATE;
  `java.util.List` `retrofit.mime.MultipartTypedOutput.mimeParts` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@retrofit.mime.MultipartTypedOutput.DEFAULT_TRANSFER_ENCODING` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`retrofit.mime.MultipartTypedOutput` v1 @kind this) @signature `Lretrofit/mime/MultipartTypedOutput;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L492164.  call temp:= `randomUUID`() @signature `Ljava/util/UUID;.randomUUID:()Ljava/util/UUID;` @kind static;
  #L49216a.  v0:= temp @kind object;
  #L49216c.  call temp:= `toString`(v0) @signature `Ljava/util/UUID;.toString:()Ljava/lang/String;` @kind virtual;
  #L492172.  v0:= temp @kind object;
  #L492174.  call `<init>`(v1, v0) @signature `Lretrofit/mime/MultipartTypedOutput;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49217a.  return @kind void;
}
procedure `void` `<init>`(`retrofit.mime.MultipartTypedOutput` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lretrofit/mime/MultipartTypedOutput;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L49218c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L492192.  v0:= new `java.util.LinkedList`;
  #L492196.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L49219c.  v2.`retrofit.mime.MultipartTypedOutput.mimeParts` @type ^`java.util.List` := v0 @kind object;
  #L4921a0.  v2.`retrofit.mime.MultipartTypedOutput.boundary` @type ^`java.lang.String` := v3 @kind object;
  #L4921a4.  v0:= 0I;
  #L4921a6.  v1:= 1I;
  #L4921a8.  call temp:= `buildBoundary`(v3, v0, v1) @signature `Lretrofit/mime/MultipartTypedOutput;.buildBoundary:(Ljava/lang/String;ZZ)[B` @kind static;
  #L4921ae.  v3:= temp @kind object;
  #L4921b0.  v2.`retrofit.mime.MultipartTypedOutput.footer` @type ^`byte`[] := v3 @kind object;
  #L4921b4.  v3:= length @variable v3;
  #L4921b6.  v0:= (`long`) v3 @kind i2l;
  #L4921b8.  v2.`retrofit.mime.MultipartTypedOutput.length` @type ^`long` := v0 @kind wide;
  #L4921bc.  return @kind void;
}
procedure `byte`[] `access$000`(`java.lang.String` v0 @kind object, `boolean` v1 , `boolean` v2 ) @signature `Lretrofit/mime/MultipartTypedOutput;.access$000:(Ljava/lang/String;ZZ)[B` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L491ed0.  call temp:= `buildBoundary`(v0, v1, v2) @signature `Lretrofit/mime/MultipartTypedOutput;.buildBoundary:(Ljava/lang/String;ZZ)[B` @kind static;
  #L491ed6.  v0:= temp @kind object;
  #L491ed8.  return v0 @kind object;
}
procedure `byte`[] `access$100`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `retrofit.mime.TypedOutput` v2 @kind object) @signature `Lretrofit/mime/MultipartTypedOutput;.access$100:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)[B` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L491eec.  call temp:= `buildHeader`(v0, v1, v2) @signature `Lretrofit/mime/MultipartTypedOutput;.buildHeader:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)[B` @kind static;
  #L491ef2.  v0:= temp @kind object;
  #L491ef4.  return v0 @kind object;
}
procedure `byte`[] `buildBoundary`(`java.lang.String` v3 @kind object, `boolean` v4 , `boolean` v5 ) @signature `Lretrofit/mime/MultipartTypedOutput;.buildBoundary:(Ljava/lang/String;ZZ)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L491f08.  v0:= "--" @kind object;
  #L491f0c.  v1:= new `java.lang.StringBuilder`;
  #L491f10.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L491f16.  v2:= temp;
  #L491f18.  v2:= v2 + 8;
  #L491f1c.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L491f22.  v2:= "\r\n" @kind object;
  #L491f26.  if v4 != 0 then goto L491f30;
  #L491f2a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L491f30.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L491f36.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L491f3c.  if v5 == 0 then goto L491f46;
  #L491f40.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L491f46.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L491f4c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L491f52.  v3:= temp @kind object;
  #L491f54.  v4:= "UTF-8" @kind object;
  #L491f58.  call temp:= `getBytes`(v3, v4) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L491f5e.  v3:= temp @kind object;
  #L491f60.  return v3 @kind object;
  #L491f62.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L491f64.  v4:= new `java.lang.RuntimeException`;
  #L491f68.  v5:= "Unable to write multipart boundary" @kind object;
  #L491f6c.  call `<init>`(v4, v5, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L491f72.  throw v4;
  catch `java.io.IOException` @[L491f0c..L491f22] goto L491f62;
  catch `java.io.IOException` @[L491f2a..L491f60] goto L491f62;
}
procedure `byte`[] `buildHeader`(`java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object, `retrofit.mime.TypedOutput` v7 @kind object) @signature `Lretrofit/mime/MultipartTypedOutput;.buildHeader:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L491f9c.  v0:= new `java.lang.StringBuilder`;
  #L491fa0.  v1:= 128I;
  #L491fa4.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L491faa.  v1:= "Content-Disposition: form-data; name=\"" @kind object;
  #L491fae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L491fb4.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L491fba.  call temp:= `fileName`(v7) @signature `Lretrofit/mime/TypedOutput;.fileName:()Ljava/lang/String;` @kind interface;
  #L491fc0.  v5:= temp @kind object;
  #L491fc2.  if v5 == 0 then goto L491fd6;
  #L491fc6.  v1:= "\"; filename=\"" @kind object;
  #L491fca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L491fd0.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L491fd6.  v5:= "\"\r\nContent-Type: " @kind object;
  #L491fda.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L491fe0.  call temp:= `mimeType`(v7) @signature `Lretrofit/mime/TypedOutput;.mimeType:()Ljava/lang/String;` @kind interface;
  #L491fe6.  v5:= temp @kind object;
  #L491fe8.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L491fee.  call temp:= `length`(v7) @signature `Lretrofit/mime/TypedOutput;.length:()J` @kind interface;
  #L491ff4.  v1:= temp @kind wide;
  #L491ff6.  v3:= -1L;
  #L491ffa.  v5:= lcmp(v1, v3);
  #L491ffe.  if v5 == 0 then goto L492012;
  #L492002.  v5:= "\r\nContent-Length: " @kind object;
  #L492006.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49200c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L492012.  v5:= "\r\nContent-Transfer-Encoding: " @kind object;
  #L492016.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49201c.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L492022.  v5:= "\r\n\r\n" @kind object;
  #L492026.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49202c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L492032.  v5:= temp @kind object;
  #L492034.  v6:= "UTF-8" @kind object;
  #L492038.  call temp:= `getBytes`(v5, v6) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L49203e.  v5:= temp @kind object;
  #L492040.  return v5 @kind object;
  #L492042.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L492044.  v6:= new `java.lang.RuntimeException`;
  #L492048.  v7:= "Unable to write multipart header" @kind object;
  #L49204c.  call `<init>`(v6, v7, v5) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L492052.  throw v6;
  catch `java.io.IOException` @[L491f9c..L492040] goto L492042;
}
procedure `void` `addPart`(`retrofit.mime.MultipartTypedOutput` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object, `retrofit.mime.TypedOutput` v10 @kind object) @signature `Lretrofit/mime/MultipartTypedOutput;.addPart:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4921d0.  if v8 == 0 then goto L492256;
  #L4921d4.  if v9 == 0 then goto L492246;
  #L4921d8.  if v10 == 0 then goto L492236;
  #L4921dc.  v6:= new `retrofit.mime.MultipartTypedOutput$MimePart`;
  #L4921e0.  v4:= v7.`retrofit.mime.MultipartTypedOutput.boundary` @type ^`java.lang.String` @kind object;
  #L4921e4.  v0:= v7.`retrofit.mime.MultipartTypedOutput.mimeParts` @type ^`java.util.List` @kind object;
  #L4921e8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4921ee.  v5:= temp;
  #L4921f0.  v0:= v6 @kind object;
  #L4921f2.  v1:= v8 @kind object;
  #L4921f4.  v2:= v9 @kind object;
  #L4921f6.  v3:= v10 @kind object;
  #L4921f8.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lretrofit/mime/MultipartTypedOutput$MimePart;.<init>:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;Ljava/lang/String;Z)V` @kind direct;
  #L4921fe.  v8:= v7.`retrofit.mime.MultipartTypedOutput.mimeParts` @type ^`java.util.List` @kind object;
  #L492202.  call temp:= `add`(v8, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L492208.  call temp:= `size`(v6) @signature `Lretrofit/mime/MultipartTypedOutput$MimePart;.size:()J` @kind virtual;
  #L49220e.  v8:= temp @kind wide;
  #L492210.  v0:= -1L;
  #L492214.  v10:= lcmp(v8, v0);
  #L492218.  if v10 != 0 then goto L492222;
  #L49221c.  v7.`retrofit.mime.MultipartTypedOutput.length` @type ^`long` := v0 @kind wide;
  #L492220.  goto L492234;
  #L492222.  v2:= v7.`retrofit.mime.MultipartTypedOutput.length` @type ^`long` @kind wide;
  #L492226.  v10:= lcmp(v2, v0);
  #L49222a.  if v10 == 0 then goto L492234;
  #L49222e.  v2:= v2 + v8 @kind long;
  #L492230.  v7.`retrofit.mime.MultipartTypedOutput.length` @type ^`long` := v2 @kind wide;
  #L492234.  return @kind void;
  #L492236.  v8:= new `java.lang.NullPointerException`;
  #L49223a.  v9:= "Part body must not be null." @kind object;
  #L49223e.  call `<init>`(v8, v9) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L492244.  throw v8;
  #L492246.  v8:= new `java.lang.NullPointerException`;
  #L49224a.  v9:= "Transfer encoding must not be null." @kind object;
  #L49224e.  call `<init>`(v8, v9) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L492254.  throw v8;
  #L492256.  v8:= new `java.lang.NullPointerException`;
  #L49225a.  v9:= "Part name must not be null." @kind object;
  #L49225e.  call `<init>`(v8, v9) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L492264.  throw v8;
}
procedure `void` `addPart`(`retrofit.mime.MultipartTypedOutput` v1 @kind this, `java.lang.String` v2 @kind object, `retrofit.mime.TypedOutput` v3 @kind object) @signature `Lretrofit/mime/MultipartTypedOutput;.addPart:(Ljava/lang/String;Lretrofit/mime/TypedOutput;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L492278.  v0:= "binary" @kind object;
  #L49227c.  call `addPart`(v1, v2, v0, v3) @signature `Lretrofit/mime/MultipartTypedOutput;.addPart:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)V` @kind virtual;
  #L492282.  return @kind void;
}
procedure `java.lang.String` `fileName`(`retrofit.mime.MultipartTypedOutput` v1 @kind this) @signature `Lretrofit/mime/MultipartTypedOutput;.fileName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L492094.  v0:= 0I;
  #L492096.  return v0 @kind object;
}
procedure `int` `getPartCount`(`retrofit.mime.MultipartTypedOutput` v1 @kind this) @signature `Lretrofit/mime/MultipartTypedOutput;.getPartCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L492074.  v0:= v1.`retrofit.mime.MultipartTypedOutput.mimeParts` @type ^`java.util.List` @kind object;
  #L492078.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L49207e.  v0:= temp;
  #L492080.  return v0;
}
procedure `java.util.List` `getParts`(`retrofit.mime.MultipartTypedOutput` v4 @kind this) @signature `Lretrofit/mime/MultipartTypedOutput;.getParts:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4920e0.  v0:= new `java.util.ArrayList`;
  #L4920e4.  v1:= v4.`retrofit.mime.MultipartTypedOutput.mimeParts` @type ^`java.util.List` @kind object;
  #L4920e8.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4920ee.  v1:= temp;
  #L4920f0.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L4920f6.  v1:= v4.`retrofit.mime.MultipartTypedOutput.mimeParts` @type ^`java.util.List` @kind object;
  #L4920fa.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L492100.  v1:= temp @kind object;
  #L492102.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L492108.  v2:= temp;
  #L49210a.  if v2 == 0 then goto L49213a;
  #L49210e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L492114.  v2:= temp @kind object;
  #L492116.  v2:= (`retrofit.mime.MultipartTypedOutput$MimePart`) v2 @kind object;
  #L49211a.  v3:= new `java.io.ByteArrayOutputStream`;
  #L49211e.  call `<init>`(v3) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L492124.  call `writeTo`(v2, v3) @signature `Lretrofit/mime/MultipartTypedOutput$MimePart;.writeTo:(Ljava/io/OutputStream;)V` @kind virtual;
  #L49212a.  call temp:= `toByteArray`(v3) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L492130.  v2:= temp @kind object;
  #L492132.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L492138.  goto L492102;
  #L49213a.  return v0 @kind object;
}
procedure `long` `length`(`retrofit.mime.MultipartTypedOutput` v2 @kind this) @signature `Lretrofit/mime/MultipartTypedOutput;.length:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L49214c.  v0:= v2.`retrofit.mime.MultipartTypedOutput.length` @type ^`long` @kind wide;
  #L492150.  return v0 @kind wide;
}
procedure `java.lang.String` `mimeType`(`retrofit.mime.MultipartTypedOutput` v2 @kind this) @signature `Lretrofit/mime/MultipartTypedOutput;.mimeType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4920a8.  v0:= new `java.lang.StringBuilder`;
  #L4920ac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4920b2.  v1:= "multipart/form-data; boundary=" @kind object;
  #L4920b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4920bc.  v1:= v2.`retrofit.mime.MultipartTypedOutput.boundary` @type ^`java.lang.String` @kind object;
  #L4920c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4920c6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4920cc.  v0:= temp @kind object;
  #L4920ce.  return v0 @kind object;
}
procedure `void` `writeTo`(`retrofit.mime.MultipartTypedOutput` v2 @kind this, `java.io.OutputStream` v3 @kind object) @signature `Lretrofit/mime/MultipartTypedOutput;.writeTo:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L492294.  v0:= v2.`retrofit.mime.MultipartTypedOutput.mimeParts` @type ^`java.util.List` @kind object;
  #L492298.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L49229e.  v0:= temp @kind object;
  #L4922a0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4922a6.  v1:= temp;
  #L4922a8.  if v1 == 0 then goto L4922c0;
  #L4922ac.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4922b2.  v1:= temp @kind object;
  #L4922b4.  v1:= (`retrofit.mime.MultipartTypedOutput$MimePart`) v1 @kind object;
  #L4922b8.  call `writeTo`(v1, v3) @signature `Lretrofit/mime/MultipartTypedOutput$MimePart;.writeTo:(Ljava/io/OutputStream;)V` @kind virtual;
  #L4922be.  goto L4922a0;
  #L4922c0.  v0:= v2.`retrofit.mime.MultipartTypedOutput.footer` @type ^`byte`[] @kind object;
  #L4922c4.  call `write`(v3, v0) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L4922ca.  return @kind void;
}
