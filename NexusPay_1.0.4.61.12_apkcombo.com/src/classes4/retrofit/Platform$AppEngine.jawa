record `retrofit.Platform$AppEngine` @kind class @AccessFlag  extends `retrofit.Platform$Base` @kind class {
}
procedure `void` `<init>`(`retrofit.Platform$AppEngine` v1 @kind this) @signature `Lretrofit/Platform$AppEngine;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L48be44.  v0:= 0I;
  #L48be46.  call `<init>`(v1, v0) @signature `Lretrofit/Platform$Base;.<init>:(Lretrofit/Platform$1;)V` @kind direct;
  #L48be4c.  return @kind void;
}
procedure `void` `<init>`(`retrofit.Platform$AppEngine` v0 @kind this, `retrofit.Platform$1` v1 @kind object) @signature `Lretrofit/Platform$AppEngine;.<init>:(Lretrofit/Platform$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L48be60.  call `<init>`(v0) @signature `Lretrofit/Platform$AppEngine;.<init>:()V` @kind direct;
  #L48be66.  return @kind void;
}
procedure `retrofit.client.Client$Provider` `defaultClient`(`retrofit.Platform$AppEngine` v2 @kind this) @signature `Lretrofit/Platform$AppEngine;.defaultClient:()Lretrofit/client/Client$Provider;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L48be1c.  v0:= new `retrofit.appengine.UrlFetchClient`;
  #L48be20.  call `<init>`(v0) @signature `Lretrofit/appengine/UrlFetchClient;.<init>:()V` @kind direct;
  #L48be26.  v1:= new `retrofit.Platform$AppEngine$1`;
  #L48be2a.  call `<init>`(v1, v2, v0) @signature `Lretrofit/Platform$AppEngine$1;.<init>:(Lretrofit/Platform$AppEngine;Lretrofit/appengine/UrlFetchClient;)V` @kind direct;
  #L48be30.  return v1 @kind object;
}
