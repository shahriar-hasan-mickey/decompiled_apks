record `retrofit.RetrofitError` @kind class @AccessFlag PUBLIC extends `java.lang.RuntimeException` @kind class {
  `retrofit.converter.Converter` `retrofit.RetrofitError.converter` @AccessFlag PRIVATE_FINAL;
  `retrofit.RetrofitError$Kind` `retrofit.RetrofitError.kind` @AccessFlag PRIVATE_FINAL;
  `retrofit.client.Response` `retrofit.RetrofitError.response` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Type` `retrofit.RetrofitError.successType` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit.RetrofitError.url` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit.RetrofitError` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `retrofit.client.Response` v3 @kind object, `retrofit.converter.Converter` v4 @kind object, `java.lang.reflect.Type` v5 @kind object, `retrofit.RetrofitError$Kind` v6 @kind object, `java.lang.Throwable` v7 @kind object) @signature `Lretrofit/RetrofitError;.<init>:(Ljava/lang/String;Ljava/lang/String;Lretrofit/client/Response;Lretrofit/converter/Converter;Ljava/lang/reflect/Type;Lretrofit/RetrofitError$Kind;Ljava/lang/Throwable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48f760.  call `<init>`(v0, v1, v7) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L48f766.  v0.`retrofit.RetrofitError.url` @type ^`java.lang.String` := v2 @kind object;
  #L48f76a.  v0.`retrofit.RetrofitError.response` @type ^`retrofit.client.Response` := v3 @kind object;
  #L48f76e.  v0.`retrofit.RetrofitError.converter` @type ^`retrofit.converter.Converter` := v4 @kind object;
  #L48f772.  v0.`retrofit.RetrofitError.successType` @type ^`java.lang.reflect.Type` := v5 @kind object;
  #L48f776.  v0.`retrofit.RetrofitError.kind` @type ^`retrofit.RetrofitError$Kind` := v6 @kind object;
  #L48f77a.  return @kind void;
}
procedure `retrofit.RetrofitError` `conversionError`(`java.lang.String` v9 @kind object, `retrofit.client.Response` v10 @kind object, `retrofit.converter.Converter` v11 @kind object, `java.lang.reflect.Type` v12 @kind object, `retrofit.converter.ConversionException` v13 @kind object) @signature `Lretrofit/RetrofitError;.conversionError:(Ljava/lang/String;Lretrofit/client/Response;Lretrofit/converter/Converter;Ljava/lang/reflect/Type;Lretrofit/converter/ConversionException;)Lretrofit/RetrofitError;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L48f630.  v8:= new `retrofit.RetrofitError`;
  #L48f634.  call temp:= `getMessage`(v13) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L48f63a.  v1:= temp @kind object;
  #L48f63c.  v6:= `@@retrofit.RetrofitError$Kind.CONVERSION` @type ^`retrofit.RetrofitError$Kind` @kind object;
  #L48f640.  v0:= v8 @kind object;
  #L48f642.  v2:= v9 @kind object;
  #L48f644.  v3:= v10 @kind object;
  #L48f646.  v4:= v11 @kind object;
  #L48f648.  v5:= v12 @kind object;
  #L48f64a.  v7:= v13 @kind object;
  #L48f64c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lretrofit/RetrofitError;.<init>:(Ljava/lang/String;Ljava/lang/String;Lretrofit/client/Response;Lretrofit/converter/Converter;Ljava/lang/reflect/Type;Lretrofit/RetrofitError$Kind;Ljava/lang/Throwable;)V` @kind direct;
  #L48f652.  return v8 @kind object;
}
procedure `retrofit.RetrofitError` `httpError`(`java.lang.String` v10 @kind object, `retrofit.client.Response` v11 @kind object, `retrofit.converter.Converter` v12 @kind object, `java.lang.reflect.Type` v13 @kind object) @signature `Lretrofit/RetrofitError;.httpError:(Ljava/lang/String;Lretrofit/client/Response;Lretrofit/converter/Converter;Ljava/lang/reflect/Type;)Lretrofit/RetrofitError;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L48f664.  v0:= new `java.lang.StringBuilder`;
  #L48f668.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48f66e.  call temp:= `getStatus`(v11) @signature `Lretrofit/client/Response;.getStatus:()I` @kind virtual;
  #L48f674.  v1:= temp;
  #L48f676.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L48f67c.  v1:= " " @kind object;
  #L48f680.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48f686.  call temp:= `getReason`(v11) @signature `Lretrofit/client/Response;.getReason:()Ljava/lang/String;` @kind virtual;
  #L48f68c.  v1:= temp @kind object;
  #L48f68e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48f694.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48f69a.  v3:= temp @kind object;
  #L48f69c.  v0:= new `retrofit.RetrofitError`;
  #L48f6a0.  v8:= `@@retrofit.RetrofitError$Kind.HTTP` @type ^`retrofit.RetrofitError$Kind` @kind object;
  #L48f6a4.  v9:= 0I;
  #L48f6a6.  v2:= v0 @kind object;
  #L48f6a8.  v4:= v10 @kind object;
  #L48f6aa.  v5:= v11 @kind object;
  #L48f6ac.  v6:= v12 @kind object;
  #L48f6ae.  v7:= v13 @kind object;
  #L48f6b0.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lretrofit/RetrofitError;.<init>:(Ljava/lang/String;Ljava/lang/String;Lretrofit/client/Response;Lretrofit/converter/Converter;Ljava/lang/reflect/Type;Lretrofit/RetrofitError$Kind;Ljava/lang/Throwable;)V` @kind direct;
  #L48f6b6.  return v0 @kind object;
}
procedure `retrofit.RetrofitError` `networkError`(`java.lang.String` v9 @kind object, `java.io.IOException` v10 @kind object) @signature `Lretrofit/RetrofitError;.networkError:(Ljava/lang/String;Ljava/io/IOException;)Lretrofit/RetrofitError;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L48f6c8.  v8:= new `retrofit.RetrofitError`;
  #L48f6cc.  call temp:= `getMessage`(v10) @signature `Ljava/io/IOException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L48f6d2.  v1:= temp @kind object;
  #L48f6d4.  v6:= `@@retrofit.RetrofitError$Kind.NETWORK` @type ^`retrofit.RetrofitError$Kind` @kind object;
  #L48f6d8.  v3:= 0I;
  #L48f6da.  v4:= 0I;
  #L48f6dc.  v5:= 0I;
  #L48f6de.  v0:= v8 @kind object;
  #L48f6e0.  v2:= v9 @kind object;
  #L48f6e2.  v7:= v10 @kind object;
  #L48f6e4.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lretrofit/RetrofitError;.<init>:(Ljava/lang/String;Ljava/lang/String;Lretrofit/client/Response;Lretrofit/converter/Converter;Ljava/lang/reflect/Type;Lretrofit/RetrofitError$Kind;Ljava/lang/Throwable;)V` @kind direct;
  #L48f6ea.  return v8 @kind object;
}
procedure `retrofit.RetrofitError` `unexpectedError`(`java.lang.String` v9 @kind object, `java.lang.Throwable` v10 @kind object) @signature `Lretrofit/RetrofitError;.unexpectedError:(Ljava/lang/String;Ljava/lang/Throwable;)Lretrofit/RetrofitError;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L48f6fc.  v8:= new `retrofit.RetrofitError`;
  #L48f700.  call temp:= `getMessage`(v10) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L48f706.  v1:= temp @kind object;
  #L48f708.  v6:= `@@retrofit.RetrofitError$Kind.UNEXPECTED` @type ^`retrofit.RetrofitError$Kind` @kind object;
  #L48f70c.  v3:= 0I;
  #L48f70e.  v4:= 0I;
  #L48f710.  v5:= 0I;
  #L48f712.  v0:= v8 @kind object;
  #L48f714.  v2:= v9 @kind object;
  #L48f716.  v7:= v10 @kind object;
  #L48f718.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lretrofit/RetrofitError;.<init>:(Ljava/lang/String;Ljava/lang/String;Lretrofit/client/Response;Lretrofit/converter/Converter;Ljava/lang/reflect/Type;Lretrofit/RetrofitError$Kind;Ljava/lang/Throwable;)V` @kind direct;
  #L48f71e.  return v8 @kind object;
}
procedure `java.lang.Object` `getBody`(`retrofit.RetrofitError` v1 @kind this) @signature `Lretrofit/RetrofitError;.getBody:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48f588.  v0:= v1.`retrofit.RetrofitError.successType` @type ^`java.lang.reflect.Type` @kind object;
  #L48f58c.  call temp:= `getBodyAs`(v1, v0) @signature `Lretrofit/RetrofitError;.getBodyAs:(Ljava/lang/reflect/Type;)Ljava/lang/Object;` @kind virtual;
  #L48f592.  v0:= temp @kind object;
  #L48f594.  return v0 @kind object;
}
procedure `java.lang.Object` `getBodyAs`(`retrofit.RetrofitError` v2 @kind this, `java.lang.reflect.Type` v3 @kind object) @signature `Lretrofit/RetrofitError;.getBodyAs:(Ljava/lang/reflect/Type;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48f5a8.  v0:= v2.`retrofit.RetrofitError.response` @type ^`retrofit.client.Response` @kind object;
  #L48f5ac.  v1:= 0I;
  #L48f5ae.  if v0 != 0 then goto L48f5b4;
  #L48f5b2.  return v1 @kind object;
  #L48f5b4.  call temp:= `getBody`(v0) @signature `Lretrofit/client/Response;.getBody:()Lretrofit/mime/TypedInput;` @kind virtual;
  #L48f5ba.  v0:= temp @kind object;
  #L48f5bc.  if v0 != 0 then goto L48f5c2;
  #L48f5c0.  return v1 @kind object;
  #L48f5c2.  v1:= v2.`retrofit.RetrofitError.converter` @type ^`retrofit.converter.Converter` @kind object;
  #L48f5c6.  call temp:= `fromBody`(v1, v0, v3) @signature `Lretrofit/converter/Converter;.fromBody:(Lretrofit/mime/TypedInput;Ljava/lang/reflect/Type;)Ljava/lang/Object;` @kind interface;
  #L48f5cc.  v3:= temp @kind object;
  #L48f5ce.  return v3 @kind object;
  #L48f5d0.  v3:= Exception @type ^`retrofit.converter.ConversionException` @kind object;
  #L48f5d2.  v0:= new `java.lang.RuntimeException`;
  #L48f5d6.  call `<init>`(v0, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L48f5dc.  throw v0;
  catch `retrofit.converter.ConversionException` @[L48f5c2..L48f5ce] goto L48f5d0;
}
procedure `retrofit.RetrofitError$Kind` `getKind`(`retrofit.RetrofitError` v1 @kind this) @signature `Lretrofit/RetrofitError;.getKind:()Lretrofit/RetrofitError$Kind;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48f730.  v0:= v1.`retrofit.RetrofitError.kind` @type ^`retrofit.RetrofitError$Kind` @kind object;
  #L48f734.  return v0 @kind object;
}
procedure `retrofit.client.Response` `getResponse`(`retrofit.RetrofitError` v1 @kind this) @signature `Lretrofit/RetrofitError;.getResponse:()Lretrofit/client/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48f748.  v0:= v1.`retrofit.RetrofitError.response` @type ^`retrofit.client.Response` @kind object;
  #L48f74c.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `getSuccessType`(`retrofit.RetrofitError` v1 @kind this) @signature `Lretrofit/RetrofitError;.getSuccessType:()Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48f618.  v0:= v1.`retrofit.RetrofitError.successType` @type ^`java.lang.reflect.Type` @kind object;
  #L48f61c.  return v0 @kind object;
}
procedure `java.lang.String` `getUrl`(`retrofit.RetrofitError` v1 @kind this) @signature `Lretrofit/RetrofitError;.getUrl:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48f600.  v0:= v1.`retrofit.RetrofitError.url` @type ^`java.lang.String` @kind object;
  #L48f604.  return v0 @kind object;
}
procedure `boolean` `isNetworkError`(`retrofit.RetrofitError` v2 @kind this) @signature `Lretrofit/RetrofitError;.isNetworkError:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48f564.  v0:= v2.`retrofit.RetrofitError.kind` @type ^`retrofit.RetrofitError$Kind` @kind object;
  #L48f568.  v1:= `@@retrofit.RetrofitError$Kind.NETWORK` @type ^`retrofit.RetrofitError$Kind` @kind object;
  #L48f56c.  if v0 != v1 then goto L48f574;
  #L48f570.  v0:= 1I;
  #L48f572.  goto L48f576;
  #L48f574.  v0:= 0I;
  #L48f576.  return v0;
}
