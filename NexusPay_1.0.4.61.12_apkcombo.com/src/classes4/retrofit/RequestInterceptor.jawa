record `retrofit.RequestInterceptor` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `retrofit.RequestInterceptor` `@@retrofit.RequestInterceptor.NONE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit/RequestInterceptor;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L48d3b4.  v0:= new `retrofit.RequestInterceptor$1`;
  #L48d3b8.  call `<init>`(v0) @signature `Lretrofit/RequestInterceptor$1;.<init>:()V` @kind direct;
  #L48d3be.  `@@retrofit.RequestInterceptor.NONE` @type ^`retrofit.RequestInterceptor` := v0 @kind object;
  #L48d3c2.  return @kind void;
}
procedure `void` `intercept`(`retrofit.RequestInterceptor$RequestFacade` v0 @kind object) @signature `Lretrofit/RequestInterceptor;.intercept:(Lretrofit/RequestInterceptor$RequestFacade;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
