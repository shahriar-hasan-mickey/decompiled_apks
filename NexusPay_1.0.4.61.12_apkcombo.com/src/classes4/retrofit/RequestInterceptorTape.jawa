record `retrofit.RequestInterceptorTape` @kind class @AccessFlag FINAL extends `retrofit.RequestInterceptor$RequestFacade` @kind interface, `retrofit.RequestInterceptor` @kind interface {
  `java.util.List` `retrofit.RequestInterceptorTape.tape` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit.RequestInterceptorTape` v1 @kind this) @signature `Lretrofit/RequestInterceptorTape;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L48d264.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48d26a.  v0:= new `java.util.ArrayList`;
  #L48d26e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L48d274.  v1.`retrofit.RequestInterceptorTape.tape` @type ^`java.util.List` := v0 @kind object;
  #L48d278.  return @kind void;
}
procedure `void` `addEncodedPathParam`(`retrofit.RequestInterceptorTape` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lretrofit/RequestInterceptorTape;.addEncodedPathParam:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L48d28c.  v0:= v3.`retrofit.RequestInterceptorTape.tape` @type ^`java.util.List` @kind object;
  #L48d290.  v1:= new `retrofit.RequestInterceptorTape$CommandWithParams`;
  #L48d294.  v2:= `@@retrofit.RequestInterceptorTape$Command.ADD_ENCODED_PATH_PARAM` @type ^`retrofit.RequestInterceptorTape$Command` @kind object;
  #L48d298.  call `<init>`(v1, v2, v4, v5) @signature `Lretrofit/RequestInterceptorTape$CommandWithParams;.<init>:(Lretrofit/RequestInterceptorTape$Command;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L48d29e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L48d2a4.  return @kind void;
}
procedure `void` `addEncodedQueryParam`(`retrofit.RequestInterceptorTape` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lretrofit/RequestInterceptorTape;.addEncodedQueryParam:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L48d2b8.  v0:= v3.`retrofit.RequestInterceptorTape.tape` @type ^`java.util.List` @kind object;
  #L48d2bc.  v1:= new `retrofit.RequestInterceptorTape$CommandWithParams`;
  #L48d2c0.  v2:= `@@retrofit.RequestInterceptorTape$Command.ADD_ENCODED_QUERY_PARAM` @type ^`retrofit.RequestInterceptorTape$Command` @kind object;
  #L48d2c4.  call `<init>`(v1, v2, v4, v5) @signature `Lretrofit/RequestInterceptorTape$CommandWithParams;.<init>:(Lretrofit/RequestInterceptorTape$Command;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L48d2ca.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L48d2d0.  return @kind void;
}
procedure `void` `addHeader`(`retrofit.RequestInterceptorTape` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lretrofit/RequestInterceptorTape;.addHeader:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L48d2e4.  v0:= v3.`retrofit.RequestInterceptorTape.tape` @type ^`java.util.List` @kind object;
  #L48d2e8.  v1:= new `retrofit.RequestInterceptorTape$CommandWithParams`;
  #L48d2ec.  v2:= `@@retrofit.RequestInterceptorTape$Command.ADD_HEADER` @type ^`retrofit.RequestInterceptorTape$Command` @kind object;
  #L48d2f0.  call `<init>`(v1, v2, v4, v5) @signature `Lretrofit/RequestInterceptorTape$CommandWithParams;.<init>:(Lretrofit/RequestInterceptorTape$Command;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L48d2f6.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L48d2fc.  return @kind void;
}
procedure `void` `addPathParam`(`retrofit.RequestInterceptorTape` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lretrofit/RequestInterceptorTape;.addPathParam:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L48d310.  v0:= v3.`retrofit.RequestInterceptorTape.tape` @type ^`java.util.List` @kind object;
  #L48d314.  v1:= new `retrofit.RequestInterceptorTape$CommandWithParams`;
  #L48d318.  v2:= `@@retrofit.RequestInterceptorTape$Command.ADD_PATH_PARAM` @type ^`retrofit.RequestInterceptorTape$Command` @kind object;
  #L48d31c.  call `<init>`(v1, v2, v4, v5) @signature `Lretrofit/RequestInterceptorTape$CommandWithParams;.<init>:(Lretrofit/RequestInterceptorTape$Command;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L48d322.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L48d328.  return @kind void;
}
procedure `void` `addQueryParam`(`retrofit.RequestInterceptorTape` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lretrofit/RequestInterceptorTape;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L48d33c.  v0:= v3.`retrofit.RequestInterceptorTape.tape` @type ^`java.util.List` @kind object;
  #L48d340.  v1:= new `retrofit.RequestInterceptorTape$CommandWithParams`;
  #L48d344.  v2:= `@@retrofit.RequestInterceptorTape$Command.ADD_QUERY_PARAM` @type ^`retrofit.RequestInterceptorTape$Command` @kind object;
  #L48d348.  call `<init>`(v1, v2, v4, v5) @signature `Lretrofit/RequestInterceptorTape$CommandWithParams;.<init>:(Lretrofit/RequestInterceptorTape$Command;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L48d34e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L48d354.  return @kind void;
}
procedure `void` `intercept`(`retrofit.RequestInterceptorTape` v4 @kind this, `retrofit.RequestInterceptor$RequestFacade` v5 @kind object) @signature `Lretrofit/RequestInterceptorTape;.intercept:(Lretrofit/RequestInterceptor$RequestFacade;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48d368.  v0:= v4.`retrofit.RequestInterceptorTape.tape` @type ^`java.util.List` @kind object;
  #L48d36c.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L48d372.  v0:= temp @kind object;
  #L48d374.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L48d37a.  v1:= temp;
  #L48d37c.  if v1 == 0 then goto L48d3a0;
  #L48d380.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L48d386.  v1:= temp @kind object;
  #L48d388.  v1:= (`retrofit.RequestInterceptorTape$CommandWithParams`) v1 @kind object;
  #L48d38c.  v2:= v1.`retrofit.RequestInterceptorTape$CommandWithParams.command` @type ^`retrofit.RequestInterceptorTape$Command` @kind object;
  #L48d390.  v3:= v1.`retrofit.RequestInterceptorTape$CommandWithParams.name` @type ^`java.lang.String` @kind object;
  #L48d394.  v1:= v1.`retrofit.RequestInterceptorTape$CommandWithParams.value` @type ^`java.lang.String` @kind object;
  #L48d398.  call `intercept`(v2, v5, v3, v1) @signature `Lretrofit/RequestInterceptorTape$Command;.intercept:(Lretrofit/RequestInterceptor$RequestFacade;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L48d39e.  goto L48d374;
  #L48d3a0.  return @kind void;
}
