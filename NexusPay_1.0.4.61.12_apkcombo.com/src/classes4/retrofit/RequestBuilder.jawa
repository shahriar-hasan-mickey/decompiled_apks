record `retrofit.RequestBuilder` @kind class @AccessFlag FINAL extends `retrofit.RequestInterceptor$RequestFacade` @kind interface {
  `java.lang.String` `retrofit.RequestBuilder.apiUrl` @AccessFlag PRIVATE_FINAL;
  `retrofit.mime.TypedOutput` `retrofit.RequestBuilder.body` @AccessFlag PRIVATE;
  `java.lang.String` `retrofit.RequestBuilder.contentTypeHeader` @AccessFlag PRIVATE;
  `retrofit.converter.Converter` `retrofit.RequestBuilder.converter` @AccessFlag PRIVATE_FINAL;
  `retrofit.mime.FormUrlEncodedTypedOutput` `retrofit.RequestBuilder.formBody` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `retrofit.RequestBuilder.headers` @AccessFlag PRIVATE;
  `boolean` `retrofit.RequestBuilder.isObservable` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit.RequestBuilder.isSynchronous` @AccessFlag PRIVATE_FINAL;
  `retrofit.mime.MultipartTypedOutput` `retrofit.RequestBuilder.multipartBody` @AccessFlag PRIVATE_FINAL;
  `java.lang.annotation.Annotation`[] `retrofit.RequestBuilder.paramAnnotations` @AccessFlag PRIVATE_FINAL;
  `java.lang.StringBuilder` `retrofit.RequestBuilder.queryParams` @AccessFlag PRIVATE;
  `java.lang.String` `retrofit.RequestBuilder.relativeUrl` @AccessFlag PRIVATE;
  `java.lang.String` `retrofit.RequestBuilder.requestMethod` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit.RequestBuilder` v1 @kind this, `java.lang.String` v2 @kind object, `retrofit.RestMethodInfo` v3 @kind object, `retrofit.converter.Converter` v4 @kind object) @signature `Lretrofit/RequestBuilder;.<init>:(Ljava/lang/String;Lretrofit/RestMethodInfo;Lretrofit/converter/Converter;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L48c48c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48c492.  v1.`retrofit.RequestBuilder.apiUrl` @type ^`java.lang.String` := v2 @kind object;
  #L48c496.  v1.`retrofit.RequestBuilder.converter` @type ^`retrofit.converter.Converter` := v4 @kind object;
  #L48c49a.  v2:= v3.`retrofit.RestMethodInfo.requestParamAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L48c49e.  v1.`retrofit.RequestBuilder.paramAnnotations` @type ^`java.lang.annotation.Annotation`[] := v2 @kind object;
  #L48c4a2.  v2:= v3.`retrofit.RestMethodInfo.requestMethod` @type ^`java.lang.String` @kind object;
  #L48c4a6.  v1.`retrofit.RequestBuilder.requestMethod` @type ^`java.lang.String` := v2 @kind object;
  #L48c4aa.  v2:= v3.`retrofit.RestMethodInfo.isSynchronous` @type ^`boolean` @kind boolean;
  #L48c4ae.  v1.`retrofit.RequestBuilder.isSynchronous` @type ^`boolean` := v2 @kind boolean;
  #L48c4b2.  v2:= v3.`retrofit.RestMethodInfo.isObservable` @type ^`boolean` @kind boolean;
  #L48c4b6.  v1.`retrofit.RequestBuilder.isObservable` @type ^`boolean` := v2 @kind boolean;
  #L48c4ba.  v2:= v3.`retrofit.RestMethodInfo.headers` @type ^`java.util.List` @kind object;
  #L48c4be.  if v2 == 0 then goto L48c4d4;
  #L48c4c2.  v2:= new `java.util.ArrayList`;
  #L48c4c6.  v4:= v3.`retrofit.RestMethodInfo.headers` @type ^`java.util.List` @kind object;
  #L48c4ca.  call `<init>`(v2, v4) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L48c4d0.  v1.`retrofit.RequestBuilder.headers` @type ^`java.util.List` := v2 @kind object;
  #L48c4d4.  v2:= v3.`retrofit.RestMethodInfo.contentTypeHeader` @type ^`java.lang.String` @kind object;
  #L48c4d8.  v1.`retrofit.RequestBuilder.contentTypeHeader` @type ^`java.lang.String` := v2 @kind object;
  #L48c4dc.  v2:= v3.`retrofit.RestMethodInfo.requestUrl` @type ^`java.lang.String` @kind object;
  #L48c4e0.  v1.`retrofit.RequestBuilder.relativeUrl` @type ^`java.lang.String` := v2 @kind object;
  #L48c4e4.  v2:= v3.`retrofit.RestMethodInfo.requestQuery` @type ^`java.lang.String` @kind object;
  #L48c4e8.  if v2 == 0 then goto L48c50a;
  #L48c4ec.  v4:= new `java.lang.StringBuilder`;
  #L48c4f0.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48c4f6.  v0:= 63I;
  #L48c4fa.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c500.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c506.  v1.`retrofit.RequestBuilder.queryParams` @type ^`java.lang.StringBuilder` := v4 @kind object;
  #L48c50a.  v2:= `@@retrofit.RequestBuilder$1.$SwitchMap$retrofit$RestMethodInfo$RequestType` @type ^`int`[] @kind object;
  #L48c50e.  v4:= v3.`retrofit.RestMethodInfo.requestType` @type ^`retrofit.RestMethodInfo$RequestType` @kind object;
  #L48c512.  call temp:= `ordinal`(v4) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L48c518.  v4:= temp;
  #L48c51a.  v2:= v2[v4];
  #L48c51e.  v4:= 1I;
  #L48c520.  v0:= 0I;
  #L48c522.  if v2 == v4 then goto L48c586;
  #L48c526.  v4:= 2I;
  #L48c528.  if v2 == v4 then goto L48c56e;
  #L48c52c.  v4:= 3I;
  #L48c52e.  if v2 != v4 then goto L48c53c;
  #L48c532.  v1.`retrofit.RequestBuilder.formBody` @type ^`retrofit.mime.FormUrlEncodedTypedOutput` := v0 @kind object;
  #L48c536.  v1.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` := v0 @kind object;
  #L48c53a.  goto L48c59c;
  #L48c53c.  v2:= new `java.lang.IllegalArgumentException`;
  #L48c540.  v4:= new `java.lang.StringBuilder`;
  #L48c544.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48c54a.  v0:= "Unknown request type: " @kind object;
  #L48c54e.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c554.  v3:= v3.`retrofit.RestMethodInfo.requestType` @type ^`retrofit.RestMethodInfo$RequestType` @kind object;
  #L48c558.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c55e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48c564.  v3:= temp @kind object;
  #L48c566.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48c56c.  throw v2;
  #L48c56e.  v1.`retrofit.RequestBuilder.formBody` @type ^`retrofit.mime.FormUrlEncodedTypedOutput` := v0 @kind object;
  #L48c572.  v2:= new `retrofit.mime.MultipartTypedOutput`;
  #L48c576.  call `<init>`(v2) @signature `Lretrofit/mime/MultipartTypedOutput;.<init>:()V` @kind direct;
  #L48c57c.  v1.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` := v2 @kind object;
  #L48c580.  v1.`retrofit.RequestBuilder.body` @type ^`retrofit.mime.TypedOutput` := v2 @kind object;
  #L48c584.  goto L48c59c;
  #L48c586.  v2:= new `retrofit.mime.FormUrlEncodedTypedOutput`;
  #L48c58a.  call `<init>`(v2) @signature `Lretrofit/mime/FormUrlEncodedTypedOutput;.<init>:()V` @kind direct;
  #L48c590.  v1.`retrofit.RequestBuilder.formBody` @type ^`retrofit.mime.FormUrlEncodedTypedOutput` := v2 @kind object;
  #L48c594.  v1.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` := v0 @kind object;
  #L48c598.  v1.`retrofit.RequestBuilder.body` @type ^`retrofit.mime.TypedOutput` := v2 @kind object;
  #L48c59c.  return @kind void;
}
procedure `void` `addPathParam`(`retrofit.RequestBuilder` v4 @kind this, `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object, `boolean` v7 ) @signature `Lretrofit/RequestBuilder;.addPathParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48c668.  if v5 == 0 then goto L48c78c;
  #L48c66c.  if v6 == 0 then goto L48c754;
  #L48c670.  v0:= "}" @kind object;
  #L48c674.  v1:= "{" @kind object;
  #L48c678.  if v7 == 0 then goto L48c6d6;
  #L48c67c.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L48c682.  v7:= temp @kind object;
  #L48c684.  v2:= "UTF-8" @kind object;
  #L48c688.  call temp:= `encode`(v7, v2) @signature `Ljava/net/URLEncoder;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L48c68e.  v7:= temp @kind object;
  #L48c690.  v2:= "+" @kind object;
  #L48c694.  v3:= "%20" @kind object;
  #L48c698.  call temp:= `replace`(v7, v2, v3) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L48c69e.  v7:= temp @kind object;
  #L48c6a0.  v2:= v4.`retrofit.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L48c6a4.  v3:= new `java.lang.StringBuilder`;
  #L48c6a8.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48c6ae.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c6b4.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c6ba.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c6c0.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48c6c6.  v0:= temp @kind object;
  #L48c6c8.  call temp:= `replace`(v2, v0, v7) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L48c6ce.  v7:= temp @kind object;
  #L48c6d0.  v4.`retrofit.RequestBuilder.relativeUrl` @type ^`java.lang.String` := v7 @kind object;
  #L48c6d4.  goto L48c712;
  #L48c6d6.  v7:= v4.`retrofit.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L48c6da.  v2:= new `java.lang.StringBuilder`;
  #L48c6de.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48c6e4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c6ea.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c6f0.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c6f6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48c6fc.  v0:= temp @kind object;
  #L48c6fe.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L48c704.  v1:= temp @kind object;
  #L48c706.  call temp:= `replace`(v7, v0, v1) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L48c70c.  v7:= temp @kind object;
  #L48c70e.  v4.`retrofit.RequestBuilder.relativeUrl` @type ^`java.lang.String` := v7 @kind object;
  #L48c712.  return @kind void;
  #L48c714.  v7:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L48c716.  v0:= new `java.lang.RuntimeException`;
  #L48c71a.  v1:= new `java.lang.StringBuilder`;
  #L48c71e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48c724.  v2:= "Unable to convert path parameter \"" @kind object;
  #L48c728.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c72e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c734.  v5:= "\" value to UTF-8:" @kind object;
  #L48c738.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c73e.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c744.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48c74a.  v5:= temp @kind object;
  #L48c74c.  call `<init>`(v0, v5, v7) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L48c752.  throw v0;
  #L48c754.  v6:= new `java.lang.IllegalArgumentException`;
  #L48c758.  v7:= new `java.lang.StringBuilder`;
  #L48c75c.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48c762.  v0:= "Path replacement \"" @kind object;
  #L48c766.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c76c.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c772.  v5:= "\" value must not be null." @kind object;
  #L48c776.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c77c.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48c782.  v5:= temp @kind object;
  #L48c784.  call `<init>`(v6, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48c78a.  throw v6;
  #L48c78c.  v5:= new `java.lang.IllegalArgumentException`;
  #L48c790.  v6:= "Path replacement name must not be null." @kind object;
  #L48c794.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48c79a.  throw v5;
  catch `java.io.UnsupportedEncodingException` @[L48c67c..L48c712] goto L48c714;
}
procedure `void` `addQueryParam`(`retrofit.RequestBuilder` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Object` v5 @kind object, `boolean` v6 , `boolean` v7 ) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/Object;ZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L48c7bc.  v0:= instanceof @variable v5 @type ^`java.lang.Iterable` @kind boolean;
  #L48c7c0.  if v0 == 0 then goto L48c7f8;
  #L48c7c4.  v5:= (`java.lang.Iterable`) v5 @kind object;
  #L48c7c8.  call temp:= `iterator`(v5) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L48c7ce.  v5:= temp @kind object;
  #L48c7d0.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L48c7d6.  v0:= temp;
  #L48c7d8.  if v0 == 0 then goto L48c848;
  #L48c7dc.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L48c7e2.  v0:= temp @kind object;
  #L48c7e4.  if v0 == 0 then goto L48c7d0;
  #L48c7e8.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L48c7ee.  v0:= temp @kind object;
  #L48c7f0.  call `addQueryParam`(v3, v4, v0, v6, v7) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;ZZ)V` @kind direct;
  #L48c7f6.  goto L48c7d0;
  #L48c7f8.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L48c7fe.  v0:= temp @kind object;
  #L48c800.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L48c806.  v0:= temp;
  #L48c808.  if v0 == 0 then goto L48c83a;
  #L48c80c.  v0:= 0I;
  #L48c80e.  call temp:= `getLength`(v5) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L48c814.  v1:= temp;
  #L48c816.  if v0 >= v1 then goto L48c848;
  #L48c81a.  call temp:= `get`(v5, v0) @signature `Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L48c820.  v2:= temp @kind object;
  #L48c822.  if v2 == 0 then goto L48c834;
  #L48c826.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L48c82c.  v2:= temp @kind object;
  #L48c82e.  call `addQueryParam`(v3, v4, v2, v6, v7) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;ZZ)V` @kind direct;
  #L48c834.  v0:= v0 + 1;
  #L48c838.  goto L48c816;
  #L48c83a.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L48c840.  v5:= temp @kind object;
  #L48c842.  call `addQueryParam`(v3, v4, v5, v6, v7) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;ZZ)V` @kind direct;
  #L48c848.  return @kind void;
}
procedure `void` `addQueryParam`(`retrofit.RequestBuilder` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `boolean` v5 , `boolean` v6 ) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;ZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L48c878.  if v3 == 0 then goto L48c95e;
  #L48c87c.  if v4 == 0 then goto L48c926;
  #L48c880.  v0:= v2.`retrofit.RequestBuilder.queryParams` @type ^`java.lang.StringBuilder` @kind object;
  #L48c884.  if v0 != 0 then goto L48c896;
  #L48c888.  v0:= new `java.lang.StringBuilder`;
  #L48c88c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48c892.  v2.`retrofit.RequestBuilder.queryParams` @type ^`java.lang.StringBuilder` := v0 @kind object;
  #L48c896.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L48c89c.  v1:= temp;
  #L48c89e.  if v1 <= 0 then goto L48c8a8;
  #L48c8a2.  v1:= 38I;
  #L48c8a6.  goto L48c8ac;
  #L48c8a8.  v1:= 63I;
  #L48c8ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c8b2.  v1:= "UTF-8" @kind object;
  #L48c8b6.  if v5 == 0 then goto L48c8c2;
  #L48c8ba.  call temp:= `encode`(v3, v1) @signature `Ljava/net/URLEncoder;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L48c8c0.  v3:= temp @kind object;
  #L48c8c2.  if v6 == 0 then goto L48c8ce;
  #L48c8c6.  call temp:= `encode`(v4, v1) @signature `Ljava/net/URLEncoder;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L48c8cc.  v4:= temp @kind object;
  #L48c8ce.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c8d4.  v5:= 61I;
  #L48c8d8.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c8de.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c8e4.  return @kind void;
  #L48c8e6.  v5:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L48c8e8.  v6:= new `java.lang.RuntimeException`;
  #L48c8ec.  v0:= new `java.lang.StringBuilder`;
  #L48c8f0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48c8f6.  v1:= "Unable to convert query parameter \"" @kind object;
  #L48c8fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c900.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c906.  v3:= "\" value to UTF-8: " @kind object;
  #L48c90a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c910.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c916.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48c91c.  v3:= temp @kind object;
  #L48c91e.  call `<init>`(v6, v3, v5) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L48c924.  throw v6;
  #L48c926.  v4:= new `java.lang.IllegalArgumentException`;
  #L48c92a.  v5:= new `java.lang.StringBuilder`;
  #L48c92e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48c934.  v6:= "Query param \"" @kind object;
  #L48c938.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c93e.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c944.  v3:= "\" value must not be null." @kind object;
  #L48c948.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c94e.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48c954.  v3:= temp @kind object;
  #L48c956.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48c95c.  throw v4;
  #L48c95e.  v3:= new `java.lang.IllegalArgumentException`;
  #L48c962.  v4:= "Query param name must not be null." @kind object;
  #L48c966.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48c96c.  throw v3;
  catch `java.io.UnsupportedEncodingException` @[L48c880..L48c8b2] goto L48c8e6;
  catch `java.io.UnsupportedEncodingException` @[L48c8ba..L48c8e4] goto L48c8e6;
}
procedure `void` `addQueryParamMap`(`retrofit.RequestBuilder` v2 @kind this, `int` v3 , `java.util.Map` v4 @kind object, `boolean` v5 , `boolean` v6 ) @signature `Lretrofit/RequestBuilder;.addQueryParamMap:(ILjava/util/Map;ZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L48c998.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L48c99e.  v4:= temp @kind object;
  #L48c9a0.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L48c9a6.  v4:= temp @kind object;
  #L48c9a8.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L48c9ae.  v0:= temp;
  #L48c9b0.  if v0 == 0 then goto L48ca2c;
  #L48c9b4.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L48c9ba.  v0:= temp @kind object;
  #L48c9bc.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L48c9c0.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L48c9c6.  v1:= temp @kind object;
  #L48c9c8.  if v1 == 0 then goto L48c9f0;
  #L48c9cc.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L48c9d2.  v0:= temp @kind object;
  #L48c9d4.  if v0 == 0 then goto L48c9a8;
  #L48c9d8.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L48c9de.  v1:= temp @kind object;
  #L48c9e0.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L48c9e6.  v0:= temp @kind object;
  #L48c9e8.  call `addQueryParam`(v2, v1, v0, v5, v6) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;ZZ)V` @kind direct;
  #L48c9ee.  goto L48c9a8;
  #L48c9f0.  v4:= new `java.lang.IllegalArgumentException`;
  #L48c9f4.  v5:= new `java.lang.StringBuilder`;
  #L48c9f8.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48c9fe.  v6:= "Parameter #" @kind object;
  #L48ca02.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48ca08.  v3:= v3 + 1;
  #L48ca0c.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L48ca12.  v3:= " query map contained null key." @kind object;
  #L48ca16.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48ca1c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48ca22.  v3:= temp @kind object;
  #L48ca24.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48ca2a.  throw v4;
  #L48ca2c.  return @kind void;
}
procedure `void` `addEncodedPathParam`(`retrofit.RequestBuilder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lretrofit/RequestBuilder;.addEncodedPathParam:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48c5b0.  v0:= 0I;
  #L48c5b2.  call `addPathParam`(v1, v2, v3, v0) @signature `Lretrofit/RequestBuilder;.addPathParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L48c5b8.  return @kind void;
}
procedure `void` `addEncodedQueryParam`(`retrofit.RequestBuilder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lretrofit/RequestBuilder;.addEncodedQueryParam:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48c5cc.  v0:= 0I;
  #L48c5ce.  call `addQueryParam`(v1, v2, v3, v0, v0) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;ZZ)V` @kind direct;
  #L48c5d4.  return @kind void;
}
procedure `void` `addHeader`(`retrofit.RequestBuilder` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lretrofit/RequestBuilder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48c5e8.  if v3 == 0 then goto L48c62c;
  #L48c5ec.  v0:= "Content-Type" @kind object;
  #L48c5f0.  call temp:= `equalsIgnoreCase`(v0, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L48c5f6.  v0:= temp;
  #L48c5f8.  if v0 == 0 then goto L48c602;
  #L48c5fc.  v2.`retrofit.RequestBuilder.contentTypeHeader` @type ^`java.lang.String` := v4 @kind object;
  #L48c600.  return @kind void;
  #L48c602.  v0:= v2.`retrofit.RequestBuilder.headers` @type ^`java.util.List` @kind object;
  #L48c606.  if v0 != 0 then goto L48c61a;
  #L48c60a.  v0:= new `java.util.ArrayList`;
  #L48c60e.  v1:= 2I;
  #L48c610.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L48c616.  v2.`retrofit.RequestBuilder.headers` @type ^`java.util.List` := v0 @kind object;
  #L48c61a.  v1:= new `retrofit.client.Header`;
  #L48c61e.  call `<init>`(v1, v3, v4) @signature `Lretrofit/client/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L48c624.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L48c62a.  return @kind void;
  #L48c62c.  v3:= new `java.lang.IllegalArgumentException`;
  #L48c630.  v4:= "Header name must not be null." @kind object;
  #L48c634.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48c63a.  throw v3;
}
procedure `void` `addPathParam`(`retrofit.RequestBuilder` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lretrofit/RequestBuilder;.addPathParam:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48c64c.  v0:= 1I;
  #L48c64e.  call `addPathParam`(v1, v2, v3, v0) @signature `Lretrofit/RequestBuilder;.addPathParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L48c654.  return @kind void;
}
procedure `void` `addQueryParam`(`retrofit.RequestBuilder` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48c85c.  v0:= 0I;
  #L48c85e.  v1:= 1I;
  #L48c860.  call `addQueryParam`(v2, v3, v4, v0, v1) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;ZZ)V` @kind direct;
  #L48c866.  return @kind void;
}
procedure `retrofit.client.Request` `build`(`retrofit.RequestBuilder` v6 @kind this) @signature `Lretrofit/RequestBuilder;.build:()Lretrofit/client/Request;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L48c3b0.  v0:= v6.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` @kind object;
  #L48c3b4.  if v0 == 0 then goto L48c3d6;
  #L48c3b8.  call temp:= `getPartCount`(v0) @signature `Lretrofit/mime/MultipartTypedOutput;.getPartCount:()I` @kind virtual;
  #L48c3be.  v0:= temp;
  #L48c3c0.  if v0 == 0 then goto L48c3c6;
  #L48c3c4.  goto L48c3d6;
  #L48c3c6.  v0:= new `java.lang.IllegalStateException`;
  #L48c3ca.  v1:= "Multipart requests must contain at least one part." @kind object;
  #L48c3ce.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48c3d4.  throw v0;
  #L48c3d6.  v0:= v6.`retrofit.RequestBuilder.apiUrl` @type ^`java.lang.String` @kind object;
  #L48c3da.  v1:= new `java.lang.StringBuilder`;
  #L48c3de.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48c3e4.  v2:= "/" @kind object;
  #L48c3e8.  call temp:= `endsWith`(v0, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L48c3ee.  v0:= temp;
  #L48c3f0.  if v0 == 0 then goto L48c406;
  #L48c3f4.  call temp:= `length`(v1) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L48c3fa.  v0:= temp;
  #L48c3fc.  v0:= v0 + -1;
  #L48c400.  call temp:= `deleteCharAt`(v1, v0) @signature `Ljava/lang/StringBuilder;.deleteCharAt:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c406.  v0:= v6.`retrofit.RequestBuilder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L48c40a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c410.  v0:= v6.`retrofit.RequestBuilder.queryParams` @type ^`java.lang.StringBuilder` @kind object;
  #L48c414.  if v0 == 0 then goto L48c41e;
  #L48c418.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48c41e.  v0:= v6.`retrofit.RequestBuilder.body` @type ^`retrofit.mime.TypedOutput` @kind object;
  #L48c422.  v2:= v6.`retrofit.RequestBuilder.headers` @type ^`java.util.List` @kind object;
  #L48c426.  v3:= v6.`retrofit.RequestBuilder.contentTypeHeader` @type ^`java.lang.String` @kind object;
  #L48c42a.  if v3 == 0 then goto L48c462;
  #L48c42e.  if v0 == 0 then goto L48c440;
  #L48c432.  v4:= new `retrofit.RequestBuilder$MimeOverridingTypedOutput`;
  #L48c436.  call `<init>`(v4, v0, v3) @signature `Lretrofit/RequestBuilder$MimeOverridingTypedOutput;.<init>:(Lretrofit/mime/TypedOutput;Ljava/lang/String;)V` @kind direct;
  #L48c43c.  v0:= v4 @kind object;
  #L48c43e.  goto L48c462;
  #L48c440.  v4:= new `retrofit.client.Header`;
  #L48c444.  v5:= "Content-Type" @kind object;
  #L48c448.  call `<init>`(v4, v5, v3) @signature `Lretrofit/client/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L48c44e.  if v2 != 0 then goto L48c45c;
  #L48c452.  call temp:= `singletonList`(v4) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L48c458.  v2:= temp @kind object;
  #L48c45a.  goto L48c462;
  #L48c45c.  call temp:= `add`(v2, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L48c462.  v3:= new `retrofit.client.Request`;
  #L48c466.  v4:= v6.`retrofit.RequestBuilder.requestMethod` @type ^`java.lang.String` @kind object;
  #L48c46a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48c470.  v1:= temp @kind object;
  #L48c472.  call `<init>`(v3, v4, v1, v2, v0) @signature `Lretrofit/client/Request;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lretrofit/mime/TypedOutput;)V` @kind direct;
  #L48c478.  return v3 @kind object;
}
procedure `void` `setArguments`(`retrofit.RequestBuilder` v11 @kind this, `java.lang.Object`[] v12 @kind object) @signature `Lretrofit/RequestBuilder;.setArguments:([Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L48ca40.  if v12 != 0 then goto L48ca46;
  #L48ca44.  return @kind void;
  #L48ca46.  v0:= length @variable v12;
  #L48ca48.  v1:= v11.`retrofit.RequestBuilder.isSynchronous` @type ^`boolean` @kind boolean;
  #L48ca4c.  if v1 != 0 then goto L48ca5c;
  #L48ca50.  v1:= v11.`retrofit.RequestBuilder.isObservable` @type ^`boolean` @kind boolean;
  #L48ca54.  if v1 != 0 then goto L48ca5c;
  #L48ca58.  v0:= v0 + -1;
  #L48ca5c.  v1:= 0I;
  #L48ca5e.  v2:= 0I;
  #L48ca60.  if v2 >= v0 then goto L48cfe2;
  #L48ca64.  v3:= v12[v2] @kind object;
  #L48ca68.  v4:= v11.`retrofit.RequestBuilder.paramAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L48ca6c.  v4:= v4[v2] @kind object;
  #L48ca70.  call temp:= `annotationType`(v4) @signature `Ljava/lang/annotation/Annotation;.annotationType:()Ljava/lang/Class;` @kind interface;
  #L48ca76.  v5:= temp @kind object;
  #L48ca78.  v6:= constclass @type ^`retrofit.http.Path` @kind object;
  #L48ca7c.  v7:= "\" value must not be null." @kind object;
  #L48ca80.  v8:= "Path parameter \"" @kind object;
  #L48ca84.  if v5 != v6 then goto L48cae2;
  #L48ca88.  v4:= (`retrofit.http.Path`) v4 @kind object;
  #L48ca8c.  call temp:= `value`(v4) @signature `Lretrofit/http/Path;.value:()Ljava/lang/String;` @kind interface;
  #L48ca92.  v5:= temp @kind object;
  #L48ca94.  if v3 == 0 then goto L48cab2;
  #L48ca98.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L48ca9e.  v3:= temp @kind object;
  #L48caa0.  call temp:= `encode`(v4) @signature `Lretrofit/http/Path;.encode:()Z` @kind interface;
  #L48caa6.  v4:= temp;
  #L48caa8.  call `addPathParam`(v11, v5, v3, v4) @signature `Lretrofit/RequestBuilder;.addPathParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L48caae.  goto L48cf94;
  #L48cab2.  v12:= new `java.lang.IllegalArgumentException`;
  #L48cab6.  v0:= new `java.lang.StringBuilder`;
  #L48caba.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48cac0.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48cac6.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48cacc.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48cad2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48cad8.  v0:= temp @kind object;
  #L48cada.  call `<init>`(v12, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48cae0.  throw v12;
  #L48cae2.  v6:= constclass @type ^`retrofit.http.EncodedPath` @kind object;
  #L48cae6.  if v5 != v6 then goto L48cb3c;
  #L48caea.  v4:= (`retrofit.http.EncodedPath`) v4 @kind object;
  #L48caee.  call temp:= `value`(v4) @signature `Lretrofit/http/EncodedPath;.value:()Ljava/lang/String;` @kind interface;
  #L48caf4.  v4:= temp @kind object;
  #L48caf6.  if v3 == 0 then goto L48cb0c;
  #L48cafa.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L48cb00.  v3:= temp @kind object;
  #L48cb02.  call `addPathParam`(v11, v4, v3, v1) @signature `Lretrofit/RequestBuilder;.addPathParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L48cb08.  goto L48cf94;
  #L48cb0c.  v12:= new `java.lang.IllegalArgumentException`;
  #L48cb10.  v0:= new `java.lang.StringBuilder`;
  #L48cb14.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48cb1a.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48cb20.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48cb26.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48cb2c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48cb32.  v0:= temp @kind object;
  #L48cb34.  call `<init>`(v12, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48cb3a.  throw v12;
  #L48cb3c.  v6:= constclass @type ^`retrofit.http.Query` @kind object;
  #L48cb40.  if v5 != v6 then goto L48cb6e;
  #L48cb44.  if v3 == 0 then goto L48cf94;
  #L48cb48.  v4:= (`retrofit.http.Query`) v4 @kind object;
  #L48cb4c.  call temp:= `value`(v4) @signature `Lretrofit/http/Query;.value:()Ljava/lang/String;` @kind interface;
  #L48cb52.  v5:= temp @kind object;
  #L48cb54.  call temp:= `encodeName`(v4) @signature `Lretrofit/http/Query;.encodeName:()Z` @kind interface;
  #L48cb5a.  v6:= temp;
  #L48cb5c.  call temp:= `encodeValue`(v4) @signature `Lretrofit/http/Query;.encodeValue:()Z` @kind interface;
  #L48cb62.  v4:= temp;
  #L48cb64.  call `addQueryParam`(v11, v5, v3, v6, v4) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/Object;ZZ)V` @kind direct;
  #L48cb6a.  goto L48cf94;
  #L48cb6e.  v6:= constclass @type ^`retrofit.http.EncodedQuery` @kind object;
  #L48cb72.  if v5 != v6 then goto L48cb90;
  #L48cb76.  if v3 == 0 then goto L48cf94;
  #L48cb7a.  v4:= (`retrofit.http.EncodedQuery`) v4 @kind object;
  #L48cb7e.  call temp:= `value`(v4) @signature `Lretrofit/http/EncodedQuery;.value:()Ljava/lang/String;` @kind interface;
  #L48cb84.  v4:= temp @kind object;
  #L48cb86.  call `addQueryParam`(v11, v4, v3, v1, v1) @signature `Lretrofit/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/Object;ZZ)V` @kind direct;
  #L48cb8c.  goto L48cf94;
  #L48cb90.  v6:= constclass @type ^`retrofit.http.QueryMap` @kind object;
  #L48cb94.  if v5 != v6 then goto L48cbbe;
  #L48cb98.  if v3 == 0 then goto L48cf94;
  #L48cb9c.  v4:= (`retrofit.http.QueryMap`) v4 @kind object;
  #L48cba0.  v3:= (`java.util.Map`) v3 @kind object;
  #L48cba4.  call temp:= `encodeNames`(v4) @signature `Lretrofit/http/QueryMap;.encodeNames:()Z` @kind interface;
  #L48cbaa.  v5:= temp;
  #L48cbac.  call temp:= `encodeValues`(v4) @signature `Lretrofit/http/QueryMap;.encodeValues:()Z` @kind interface;
  #L48cbb2.  v4:= temp;
  #L48cbb4.  call `addQueryParamMap`(v11, v2, v3, v5, v4) @signature `Lretrofit/RequestBuilder;.addQueryParamMap:(ILjava/util/Map;ZZ)V` @kind direct;
  #L48cbba.  goto L48cf94;
  #L48cbbe.  v6:= constclass @type ^`retrofit.http.EncodedQueryMap` @kind object;
  #L48cbc2.  if v5 != v6 then goto L48cbd8;
  #L48cbc6.  if v3 == 0 then goto L48cf94;
  #L48cbca.  v3:= (`java.util.Map`) v3 @kind object;
  #L48cbce.  call `addQueryParamMap`(v11, v2, v3, v1, v1) @signature `Lretrofit/RequestBuilder;.addQueryParamMap:(ILjava/util/Map;ZZ)V` @kind direct;
  #L48cbd4.  goto L48cf94;
  #L48cbd8.  v6:= constclass @type ^`retrofit.http.Header` @kind object;
  #L48cbdc.  if v5 != v6 then goto L48cc80;
  #L48cbe0.  if v3 == 0 then goto L48cf94;
  #L48cbe4.  v4:= (`retrofit.http.Header`) v4 @kind object;
  #L48cbe8.  call temp:= `value`(v4) @signature `Lretrofit/http/Header;.value:()Ljava/lang/String;` @kind interface;
  #L48cbee.  v4:= temp @kind object;
  #L48cbf0.  v5:= instanceof @variable v3 @type ^`java.lang.Iterable` @kind boolean;
  #L48cbf4.  if v5 == 0 then goto L48cc2c;
  #L48cbf8.  v3:= (`java.lang.Iterable`) v3 @kind object;
  #L48cbfc.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L48cc02.  v3:= temp @kind object;
  #L48cc04.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L48cc0a.  v5:= temp;
  #L48cc0c.  if v5 == 0 then goto L48cf94;
  #L48cc10.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L48cc16.  v5:= temp @kind object;
  #L48cc18.  if v5 == 0 then goto L48cc04;
  #L48cc1c.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L48cc22.  v5:= temp @kind object;
  #L48cc24.  call `addHeader`(v11, v4, v5) @signature `Lretrofit/RequestBuilder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L48cc2a.  goto L48cc04;
  #L48cc2c.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L48cc32.  v5:= temp @kind object;
  #L48cc34.  call temp:= `isArray`(v5) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L48cc3a.  v5:= temp;
  #L48cc3c.  if v5 == 0 then goto L48cc6e;
  #L48cc40.  call temp:= `getLength`(v3) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L48cc46.  v5:= temp;
  #L48cc48.  v6:= 0I;
  #L48cc4a.  if v6 >= v5 then goto L48cf94;
  #L48cc4e.  call temp:= `get`(v3, v6) @signature `Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L48cc54.  v7:= temp @kind object;
  #L48cc56.  if v7 == 0 then goto L48cc68;
  #L48cc5a.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L48cc60.  v7:= temp @kind object;
  #L48cc62.  call `addHeader`(v11, v4, v7) @signature `Lretrofit/RequestBuilder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L48cc68.  v6:= v6 + 1;
  #L48cc6c.  goto L48cc4a;
  #L48cc6e.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L48cc74.  v3:= temp @kind object;
  #L48cc76.  call `addHeader`(v11, v4, v3) @signature `Lretrofit/RequestBuilder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L48cc7c.  goto L48cf94;
  #L48cc80.  v6:= constclass @type ^`retrofit.http.Field` @kind object;
  #L48cc84.  if v5 != v6 then goto L48cd44;
  #L48cc88.  if v3 == 0 then goto L48cf94;
  #L48cc8c.  v4:= (`retrofit.http.Field`) v4 @kind object;
  #L48cc90.  call temp:= `value`(v4) @signature `Lretrofit/http/Field;.value:()Ljava/lang/String;` @kind interface;
  #L48cc96.  v5:= temp @kind object;
  #L48cc98.  call temp:= `encodeName`(v4) @signature `Lretrofit/http/Field;.encodeName:()Z` @kind interface;
  #L48cc9e.  v6:= temp;
  #L48cca0.  call temp:= `encodeValue`(v4) @signature `Lretrofit/http/Field;.encodeValue:()Z` @kind interface;
  #L48cca6.  v4:= temp;
  #L48cca8.  v7:= instanceof @variable v3 @type ^`java.lang.Iterable` @kind boolean;
  #L48ccac.  if v7 == 0 then goto L48cce8;
  #L48ccb0.  v3:= (`java.lang.Iterable`) v3 @kind object;
  #L48ccb4.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L48ccba.  v3:= temp @kind object;
  #L48ccbc.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L48ccc2.  v7:= temp;
  #L48ccc4.  if v7 == 0 then goto L48cf94;
  #L48ccc8.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L48ccce.  v7:= temp @kind object;
  #L48ccd0.  if v7 == 0 then goto L48ccbc;
  #L48ccd4.  v8:= v11.`retrofit.RequestBuilder.formBody` @type ^`retrofit.mime.FormUrlEncodedTypedOutput` @kind object;
  #L48ccd8.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L48ccde.  v7:= temp @kind object;
  #L48cce0.  call `addField`(v8, v5, v6, v7, v4) @signature `Lretrofit/mime/FormUrlEncodedTypedOutput;.addField:(Ljava/lang/String;ZLjava/lang/String;Z)V` @kind virtual;
  #L48cce6.  goto L48ccbc;
  #L48cce8.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L48ccee.  v7:= temp @kind object;
  #L48ccf0.  call temp:= `isArray`(v7) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L48ccf6.  v7:= temp;
  #L48ccf8.  if v7 == 0 then goto L48cd2e;
  #L48ccfc.  call temp:= `getLength`(v3) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L48cd02.  v7:= temp;
  #L48cd04.  v8:= 0I;
  #L48cd06.  if v8 >= v7 then goto L48cf94;
  #L48cd0a.  call temp:= `get`(v3, v8) @signature `Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L48cd10.  v9:= temp @kind object;
  #L48cd12.  if v9 == 0 then goto L48cd28;
  #L48cd16.  v10:= v11.`retrofit.RequestBuilder.formBody` @type ^`retrofit.mime.FormUrlEncodedTypedOutput` @kind object;
  #L48cd1a.  call temp:= `toString`(v9) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L48cd20.  v9:= temp @kind object;
  #L48cd22.  call `addField`(v10, v5, v6, v9, v4) @signature `Lretrofit/mime/FormUrlEncodedTypedOutput;.addField:(Ljava/lang/String;ZLjava/lang/String;Z)V` @kind virtual;
  #L48cd28.  v8:= v8 + 1;
  #L48cd2c.  goto L48cd06;
  #L48cd2e.  v7:= v11.`retrofit.RequestBuilder.formBody` @type ^`retrofit.mime.FormUrlEncodedTypedOutput` @kind object;
  #L48cd32.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L48cd38.  v3:= temp @kind object;
  #L48cd3a.  call `addField`(v7, v5, v6, v3, v4) @signature `Lretrofit/mime/FormUrlEncodedTypedOutput;.addField:(Ljava/lang/String;ZLjava/lang/String;Z)V` @kind virtual;
  #L48cd40.  goto L48cf94;
  #L48cd44.  v6:= constclass @type ^`retrofit.http.FieldMap` @kind object;
  #L48cd48.  v7:= "Parameter #" @kind object;
  #L48cd4c.  if v5 != v6 then goto L48ce00;
  #L48cd50.  if v3 == 0 then goto L48cf94;
  #L48cd54.  v4:= (`retrofit.http.FieldMap`) v4 @kind object;
  #L48cd58.  call temp:= `encodeNames`(v4) @signature `Lretrofit/http/FieldMap;.encodeNames:()Z` @kind interface;
  #L48cd5e.  v5:= temp;
  #L48cd60.  call temp:= `encodeValues`(v4) @signature `Lretrofit/http/FieldMap;.encodeValues:()Z` @kind interface;
  #L48cd66.  v4:= temp;
  #L48cd68.  v3:= (`java.util.Map`) v3 @kind object;
  #L48cd6c.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L48cd72.  v3:= temp @kind object;
  #L48cd74.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L48cd7a.  v3:= temp @kind object;
  #L48cd7c.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L48cd82.  v6:= temp;
  #L48cd84.  if v6 == 0 then goto L48cf94;
  #L48cd88.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L48cd8e.  v6:= temp @kind object;
  #L48cd90.  v6:= (`java.util.Map$Entry`) v6 @kind object;
  #L48cd94.  call temp:= `getKey`(v6) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L48cd9a.  v8:= temp @kind object;
  #L48cd9c.  if v8 == 0 then goto L48cdc8;
  #L48cda0.  call temp:= `getValue`(v6) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L48cda6.  v6:= temp @kind object;
  #L48cda8.  if v6 == 0 then goto L48cd7c;
  #L48cdac.  v9:= v11.`retrofit.RequestBuilder.formBody` @type ^`retrofit.mime.FormUrlEncodedTypedOutput` @kind object;
  #L48cdb0.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L48cdb6.  v8:= temp @kind object;
  #L48cdb8.  call temp:= `toString`(v6) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L48cdbe.  v6:= temp @kind object;
  #L48cdc0.  call `addField`(v9, v8, v5, v6, v4) @signature `Lretrofit/mime/FormUrlEncodedTypedOutput;.addField:(Ljava/lang/String;ZLjava/lang/String;Z)V` @kind virtual;
  #L48cdc6.  goto L48cd7c;
  #L48cdc8.  v12:= new `java.lang.IllegalArgumentException`;
  #L48cdcc.  v0:= new `java.lang.StringBuilder`;
  #L48cdd0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48cdd6.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48cddc.  v2:= v2 + 1;
  #L48cde0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L48cde6.  v1:= " field map contained null key." @kind object;
  #L48cdea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48cdf0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48cdf6.  v0:= temp @kind object;
  #L48cdf8.  call `<init>`(v12, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48cdfe.  throw v12;
  #L48ce00.  v6:= constclass @type ^`retrofit.http.Part` @kind object;
  #L48ce04.  if v5 != v6 then goto L48ce78;
  #L48ce08.  if v3 == 0 then goto L48cf94;
  #L48ce0c.  v4:= (`retrofit.http.Part`) v4 @kind object;
  #L48ce10.  call temp:= `value`(v4) @signature `Lretrofit/http/Part;.value:()Ljava/lang/String;` @kind interface;
  #L48ce16.  v5:= temp @kind object;
  #L48ce18.  call temp:= `encoding`(v4) @signature `Lretrofit/http/Part;.encoding:()Ljava/lang/String;` @kind interface;
  #L48ce1e.  v4:= temp @kind object;
  #L48ce20.  v6:= instanceof @variable v3 @type ^`retrofit.mime.TypedOutput` @kind boolean;
  #L48ce24.  if v6 == 0 then goto L48ce3a;
  #L48ce28.  v6:= v11.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` @kind object;
  #L48ce2c.  v3:= (`retrofit.mime.TypedOutput`) v3 @kind object;
  #L48ce30.  call `addPart`(v6, v5, v4, v3) @signature `Lretrofit/mime/MultipartTypedOutput;.addPart:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)V` @kind virtual;
  #L48ce36.  goto L48cf94;
  #L48ce3a.  v6:= instanceof @variable v3 @type ^`java.lang.String` @kind boolean;
  #L48ce3e.  if v6 == 0 then goto L48ce5e;
  #L48ce42.  v6:= v11.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` @kind object;
  #L48ce46.  v7:= new `retrofit.mime.TypedString`;
  #L48ce4a.  v3:= (`java.lang.String`) v3 @kind object;
  #L48ce4e.  call `<init>`(v7, v3) @signature `Lretrofit/mime/TypedString;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48ce54.  call `addPart`(v6, v5, v4, v7) @signature `Lretrofit/mime/MultipartTypedOutput;.addPart:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)V` @kind virtual;
  #L48ce5a.  goto L48cf94;
  #L48ce5e.  v6:= v11.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` @kind object;
  #L48ce62.  v7:= v11.`retrofit.RequestBuilder.converter` @type ^`retrofit.converter.Converter` @kind object;
  #L48ce66.  call temp:= `toBody`(v7, v3) @signature `Lretrofit/converter/Converter;.toBody:(Ljava/lang/Object;)Lretrofit/mime/TypedOutput;` @kind interface;
  #L48ce6c.  v3:= temp @kind object;
  #L48ce6e.  call `addPart`(v6, v5, v4, v3) @signature `Lretrofit/mime/MultipartTypedOutput;.addPart:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)V` @kind virtual;
  #L48ce74.  goto L48cf94;
  #L48ce78.  v6:= constclass @type ^`retrofit.http.PartMap` @kind object;
  #L48ce7c.  if v5 != v6 then goto L48cf66;
  #L48ce80.  if v3 == 0 then goto L48cf94;
  #L48ce84.  v4:= (`retrofit.http.PartMap`) v4 @kind object;
  #L48ce88.  call temp:= `encoding`(v4) @signature `Lretrofit/http/PartMap;.encoding:()Ljava/lang/String;` @kind interface;
  #L48ce8e.  v4:= temp @kind object;
  #L48ce90.  v3:= (`java.util.Map`) v3 @kind object;
  #L48ce94.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L48ce9a.  v3:= temp @kind object;
  #L48ce9c.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L48cea2.  v3:= temp @kind object;
  #L48cea4.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L48ceaa.  v5:= temp;
  #L48ceac.  if v5 == 0 then goto L48cf94;
  #L48ceb0.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L48ceb6.  v5:= temp @kind object;
  #L48ceb8.  v5:= (`java.util.Map$Entry`) v5 @kind object;
  #L48cebc.  call temp:= `getKey`(v5) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L48cec2.  v6:= temp @kind object;
  #L48cec4.  if v6 == 0 then goto L48cf2e;
  #L48cec8.  call temp:= `toString`(v6) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L48cece.  v6:= temp @kind object;
  #L48ced0.  call temp:= `getValue`(v5) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L48ced6.  v5:= temp @kind object;
  #L48ced8.  if v5 == 0 then goto L48cea4;
  #L48cedc.  v8:= instanceof @variable v5 @type ^`retrofit.mime.TypedOutput` @kind boolean;
  #L48cee0.  if v8 == 0 then goto L48cef4;
  #L48cee4.  v8:= v11.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` @kind object;
  #L48cee8.  v5:= (`retrofit.mime.TypedOutput`) v5 @kind object;
  #L48ceec.  call `addPart`(v8, v6, v4, v5) @signature `Lretrofit/mime/MultipartTypedOutput;.addPart:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)V` @kind virtual;
  #L48cef2.  goto L48cea4;
  #L48cef4.  v8:= instanceof @variable v5 @type ^`java.lang.String` @kind boolean;
  #L48cef8.  if v8 == 0 then goto L48cf16;
  #L48cefc.  v8:= v11.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` @kind object;
  #L48cf00.  v9:= new `retrofit.mime.TypedString`;
  #L48cf04.  v5:= (`java.lang.String`) v5 @kind object;
  #L48cf08.  call `<init>`(v9, v5) @signature `Lretrofit/mime/TypedString;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48cf0e.  call `addPart`(v8, v6, v4, v9) @signature `Lretrofit/mime/MultipartTypedOutput;.addPart:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)V` @kind virtual;
  #L48cf14.  goto L48cea4;
  #L48cf16.  v8:= v11.`retrofit.RequestBuilder.multipartBody` @type ^`retrofit.mime.MultipartTypedOutput` @kind object;
  #L48cf1a.  v9:= v11.`retrofit.RequestBuilder.converter` @type ^`retrofit.converter.Converter` @kind object;
  #L48cf1e.  call temp:= `toBody`(v9, v5) @signature `Lretrofit/converter/Converter;.toBody:(Ljava/lang/Object;)Lretrofit/mime/TypedOutput;` @kind interface;
  #L48cf24.  v5:= temp @kind object;
  #L48cf26.  call `addPart`(v8, v6, v4, v5) @signature `Lretrofit/mime/MultipartTypedOutput;.addPart:(Ljava/lang/String;Ljava/lang/String;Lretrofit/mime/TypedOutput;)V` @kind virtual;
  #L48cf2c.  goto L48cea4;
  #L48cf2e.  v12:= new `java.lang.IllegalArgumentException`;
  #L48cf32.  v0:= new `java.lang.StringBuilder`;
  #L48cf36.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48cf3c.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48cf42.  v2:= v2 + 1;
  #L48cf46.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L48cf4c.  v1:= " part map contained null key." @kind object;
  #L48cf50.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48cf56.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48cf5c.  v0:= temp @kind object;
  #L48cf5e.  call `<init>`(v12, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48cf64.  throw v12;
  #L48cf66.  v4:= constclass @type ^`retrofit.http.Body` @kind object;
  #L48cf6a.  if v5 != v4 then goto L48cfac;
  #L48cf6e.  if v3 == 0 then goto L48cf9c;
  #L48cf72.  v4:= instanceof @variable v3 @type ^`retrofit.mime.TypedOutput` @kind boolean;
  #L48cf76.  if v4 == 0 then goto L48cf84;
  #L48cf7a.  v3:= (`retrofit.mime.TypedOutput`) v3 @kind object;
  #L48cf7e.  v11.`retrofit.RequestBuilder.body` @type ^`retrofit.mime.TypedOutput` := v3 @kind object;
  #L48cf82.  goto L48cf94;
  #L48cf84.  v4:= v11.`retrofit.RequestBuilder.converter` @type ^`retrofit.converter.Converter` @kind object;
  #L48cf88.  call temp:= `toBody`(v4, v3) @signature `Lretrofit/converter/Converter;.toBody:(Ljava/lang/Object;)Lretrofit/mime/TypedOutput;` @kind interface;
  #L48cf8e.  v3:= temp @kind object;
  #L48cf90.  v11.`retrofit.RequestBuilder.body` @type ^`retrofit.mime.TypedOutput` := v3 @kind object;
  #L48cf94.  v2:= v2 + 1;
  #L48cf98.  goto L48ca60;
  #L48cf9c.  v12:= new `java.lang.IllegalArgumentException`;
  #L48cfa0.  v0:= "Body parameter value must not be null." @kind object;
  #L48cfa4.  call `<init>`(v12, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48cfaa.  throw v12;
  #L48cfac.  v12:= new `java.lang.IllegalArgumentException`;
  #L48cfb0.  v0:= new `java.lang.StringBuilder`;
  #L48cfb4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L48cfba.  v1:= "Unknown annotation: " @kind object;
  #L48cfbe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48cfc4.  call temp:= `getCanonicalName`(v5) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L48cfca.  v1:= temp @kind object;
  #L48cfcc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L48cfd2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L48cfd8.  v0:= temp @kind object;
  #L48cfda.  call `<init>`(v12, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48cfe0.  throw v12;
  #L48cfe2.  return @kind void;
}
