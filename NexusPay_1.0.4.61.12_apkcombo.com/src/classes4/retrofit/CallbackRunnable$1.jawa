record `retrofit.CallbackRunnable$1` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `retrofit.CallbackRunnable` `retrofit.CallbackRunnable$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `retrofit.ResponseWrapper` `retrofit.CallbackRunnable$1.val$wrapper` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`retrofit.CallbackRunnable$1` v0 @kind this, `retrofit.CallbackRunnable` v1 @kind object, `retrofit.ResponseWrapper` v2 @kind object) @signature `Lretrofit/CallbackRunnable$1;.<init>:(Lretrofit/CallbackRunnable;Lretrofit/ResponseWrapper;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48b6e4.  v0.`retrofit.CallbackRunnable$1.this$0` @type ^`retrofit.CallbackRunnable` := v1 @kind object;
  #L48b6e8.  v0.`retrofit.CallbackRunnable$1.val$wrapper` @type ^`retrofit.ResponseWrapper` := v2 @kind object;
  #L48b6ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48b6f2.  return @kind void;
}
procedure `void` `run`(`retrofit.CallbackRunnable$1` v3 @kind this) @signature `Lretrofit/CallbackRunnable$1;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L48b704.  v0:= v3.`retrofit.CallbackRunnable$1.this$0` @type ^`retrofit.CallbackRunnable` @kind object;
  #L48b708.  call temp:= `access$000`(v0) @signature `Lretrofit/CallbackRunnable;.access$000:(Lretrofit/CallbackRunnable;)Lretrofit/Callback;` @kind static;
  #L48b70e.  v0:= temp @kind object;
  #L48b710.  v1:= v3.`retrofit.CallbackRunnable$1.val$wrapper` @type ^`retrofit.ResponseWrapper` @kind object;
  #L48b714.  v2:= v1.`retrofit.ResponseWrapper.responseBody` @type ^`java.lang.Object` @kind object;
  #L48b718.  v1:= v1.`retrofit.ResponseWrapper.response` @type ^`retrofit.client.Response` @kind object;
  #L48b71c.  call `success`(v0, v2, v1) @signature `Lretrofit/Callback;.success:(Ljava/lang/Object;Lretrofit/client/Response;)V` @kind interface;
  #L48b722.  return @kind void;
}
