record `retrofit.client.Header` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `retrofit.client.Header.name` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit.client.Header.value` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit.client.Header` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lretrofit/client/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4910d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4910d6.  v0.`retrofit.client.Header.name` @type ^`java.lang.String` := v1 @kind object;
  #L4910da.  v0.`retrofit.client.Header.value` @type ^`java.lang.String` := v2 @kind object;
  #L4910de.  return @kind void;
}
procedure `boolean` `equals`(`retrofit.client.Header` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lretrofit/client/Header;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L490f90.  v0:= 1I;
  #L490f92.  if v4 != v5 then goto L490f98;
  #L490f96.  return v0;
  #L490f98.  v1:= 0I;
  #L490f9a.  if v5 == 0 then goto L490ffa;
  #L490f9e.  v2:= constclass @type ^`retrofit.client.Header` @kind object;
  #L490fa2.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L490fa8.  v3:= temp @kind object;
  #L490faa.  if v2 == v3 then goto L490fb0;
  #L490fae.  goto L490ffa;
  #L490fb0.  v5:= (`retrofit.client.Header`) v5 @kind object;
  #L490fb4.  v2:= v4.`retrofit.client.Header.name` @type ^`java.lang.String` @kind object;
  #L490fb8.  if v2 == 0 then goto L490fce;
  #L490fbc.  v3:= v5.`retrofit.client.Header.name` @type ^`java.lang.String` @kind object;
  #L490fc0.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L490fc6.  v2:= temp;
  #L490fc8.  if v2 != 0 then goto L490fd8;
  #L490fcc.  goto L490fd6;
  #L490fce.  v2:= v5.`retrofit.client.Header.name` @type ^`java.lang.String` @kind object;
  #L490fd2.  if v2 == 0 then goto L490fd8;
  #L490fd6.  return v1;
  #L490fd8.  v2:= v4.`retrofit.client.Header.value` @type ^`java.lang.String` @kind object;
  #L490fdc.  v5:= v5.`retrofit.client.Header.value` @type ^`java.lang.String` @kind object;
  #L490fe0.  if v2 == 0 then goto L490ff2;
  #L490fe4.  call temp:= `equals`(v2, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L490fea.  v5:= temp;
  #L490fec.  if v5 != 0 then goto L490ff8;
  #L490ff0.  goto L490ff6;
  #L490ff2.  if v5 == 0 then goto L490ff8;
  #L490ff6.  return v1;
  #L490ff8.  return v0;
  #L490ffa.  return v1;
}
procedure `java.lang.String` `getName`(`retrofit.client.Header` v1 @kind this) @signature `Lretrofit/client/Header;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49104c.  v0:= v1.`retrofit.client.Header.name` @type ^`java.lang.String` @kind object;
  #L491050.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`retrofit.client.Header` v1 @kind this) @signature `Lretrofit/client/Header;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L491064.  v0:= v1.`retrofit.client.Header.value` @type ^`java.lang.String` @kind object;
  #L491068.  return v0 @kind object;
}
procedure `int` `hashCode`(`retrofit.client.Header` v3 @kind this) @signature `Lretrofit/client/Header;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L49100c.  v0:= v3.`retrofit.client.Header.name` @type ^`java.lang.String` @kind object;
  #L491010.  v1:= 0I;
  #L491012.  if v0 == 0 then goto L491020;
  #L491016.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L49101c.  v0:= temp;
  #L49101e.  goto L491022;
  #L491020.  v0:= 0I;
  #L491022.  v0:= v0 * 31;
  #L491026.  v2:= v3.`retrofit.client.Header.value` @type ^`java.lang.String` @kind object;
  #L49102a.  if v2 == 0 then goto L491036;
  #L49102e.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L491034.  v1:= temp;
  #L491036.  v0:= v0 + v1 @kind int;
  #L491038.  return v0;
}
procedure `java.lang.String` `toString`(`retrofit.client.Header` v3 @kind this) @signature `Lretrofit/client/Header;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L49107c.  v0:= new `java.lang.StringBuilder`;
  #L491080.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L491086.  v1:= v3.`retrofit.client.Header.name` @type ^`java.lang.String` @kind object;
  #L49108a.  v2:= "" @kind object;
  #L49108e.  if v1 == 0 then goto L491094;
  #L491092.  goto L491096;
  #L491094.  v1:= v2 @kind object;
  #L491096.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L49109c.  v1:= ": " @kind object;
  #L4910a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4910a6.  v1:= v3.`retrofit.client.Header.value` @type ^`java.lang.String` @kind object;
  #L4910aa.  if v1 == 0 then goto L4910b0;
  #L4910ae.  v2:= v1 @kind object;
  #L4910b0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4910b6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4910bc.  v0:= temp @kind object;
  #L4910be.  return v0 @kind object;
}
