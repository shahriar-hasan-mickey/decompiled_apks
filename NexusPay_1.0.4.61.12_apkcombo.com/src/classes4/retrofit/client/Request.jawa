record `retrofit.client.Request` @kind class @AccessFlag PUBLIC_FINAL {
  `retrofit.mime.TypedOutput` `retrofit.client.Request.body` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `retrofit.client.Request.headers` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit.client.Request.method` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit.client.Request.url` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit.client.Request` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object, `retrofit.mime.TypedOutput` v4 @kind object) @signature `Lretrofit/client/Request;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lretrofit/mime/TypedOutput;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4914cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4914d2.  if v1 == 0 then goto L491520;
  #L4914d6.  if v2 == 0 then goto L491510;
  #L4914da.  v0.`retrofit.client.Request.method` @type ^`java.lang.String` := v1 @kind object;
  #L4914de.  v0.`retrofit.client.Request.url` @type ^`java.lang.String` := v2 @kind object;
  #L4914e2.  if v3 != 0 then goto L4914f4;
  #L4914e6.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L4914ec.  v1:= temp @kind object;
  #L4914ee.  v0.`retrofit.client.Request.headers` @type ^`java.util.List` := v1 @kind object;
  #L4914f2.  goto L49150a;
  #L4914f4.  v1:= new `java.util.ArrayList`;
  #L4914f8.  call `<init>`(v1, v3) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L4914fe.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L491504.  v1:= temp @kind object;
  #L491506.  v0.`retrofit.client.Request.headers` @type ^`java.util.List` := v1 @kind object;
  #L49150a.  v0.`retrofit.client.Request.body` @type ^`retrofit.mime.TypedOutput` := v4 @kind object;
  #L49150e.  return @kind void;
  #L491510.  v1:= new `java.lang.NullPointerException`;
  #L491514.  v2:= "URL must not be null." @kind object;
  #L491518.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49151e.  throw v1;
  #L491520.  v1:= new `java.lang.NullPointerException`;
  #L491524.  v2:= "Method must not be null." @kind object;
  #L491528.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49152e.  throw v1;
}
procedure `retrofit.mime.TypedOutput` `getBody`(`retrofit.client.Request` v1 @kind this) @signature `Lretrofit/client/Request;.getBody:()Lretrofit/mime/TypedOutput;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4914b4.  v0:= v1.`retrofit.client.Request.body` @type ^`retrofit.mime.TypedOutput` @kind object;
  #L4914b8.  return v0 @kind object;
}
procedure `java.util.List` `getHeaders`(`retrofit.client.Request` v1 @kind this) @signature `Lretrofit/client/Request;.getHeaders:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49149c.  v0:= v1.`retrofit.client.Request.headers` @type ^`java.util.List` @kind object;
  #L4914a0.  return v0 @kind object;
}
procedure `java.lang.String` `getMethod`(`retrofit.client.Request` v1 @kind this) @signature `Lretrofit/client/Request;.getMethod:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L49146c.  v0:= v1.`retrofit.client.Request.method` @type ^`java.lang.String` @kind object;
  #L491470.  return v0 @kind object;
}
procedure `java.lang.String` `getUrl`(`retrofit.client.Request` v1 @kind this) @signature `Lretrofit/client/Request;.getUrl:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L491484.  v0:= v1.`retrofit.client.Request.url` @type ^`java.lang.String` @kind object;
  #L491488.  return v0 @kind object;
}
