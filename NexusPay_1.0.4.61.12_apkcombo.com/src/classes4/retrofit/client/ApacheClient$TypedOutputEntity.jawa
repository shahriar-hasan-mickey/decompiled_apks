record `retrofit.client.ApacheClient$TypedOutputEntity` @kind class @AccessFlag  extends `org.apache.http.entity.AbstractHttpEntity` @kind class {
  `retrofit.mime.TypedOutput` `retrofit.client.ApacheClient$TypedOutputEntity.typedOutput` @AccessFlag FINAL;
}
procedure `void` `<init>`(`retrofit.client.ApacheClient$TypedOutputEntity` v0 @kind this, `retrofit.mime.TypedOutput` v1 @kind object) @signature `Lretrofit/client/ApacheClient$TypedOutputEntity;.<init>:(Lretrofit/mime/TypedOutput;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L490d7c.  call `<init>`(v0) @signature `Lorg/apache/http/entity/AbstractHttpEntity;.<init>:()V` @kind direct;
  #L490d82.  v0.`retrofit.client.ApacheClient$TypedOutputEntity.typedOutput` @type ^`retrofit.mime.TypedOutput` := v1 @kind object;
  #L490d86.  call temp:= `mimeType`(v1) @signature `Lretrofit/mime/TypedOutput;.mimeType:()Ljava/lang/String;` @kind interface;
  #L490d8c.  v1:= temp @kind object;
  #L490d8e.  call `setContentType`(v0, v1) @signature `Lorg/apache/http/entity/AbstractHttpEntity;.setContentType:(Ljava/lang/String;)V` @kind virtual;
  #L490d94.  return @kind void;
}
procedure `java.io.InputStream` `getContent`(`retrofit.client.ApacheClient$TypedOutputEntity` v2 @kind this) @signature `Lretrofit/client/ApacheClient$TypedOutputEntity;.getContent:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L490d24.  v0:= new `java.io.ByteArrayOutputStream`;
  #L490d28.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L490d2e.  v1:= v2.`retrofit.client.ApacheClient$TypedOutputEntity.typedOutput` @type ^`retrofit.mime.TypedOutput` @kind object;
  #L490d32.  call `writeTo`(v1, v0) @signature `Lretrofit/mime/TypedOutput;.writeTo:(Ljava/io/OutputStream;)V` @kind interface;
  #L490d38.  v1:= new `java.io.ByteArrayInputStream`;
  #L490d3c.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L490d42.  v0:= temp @kind object;
  #L490d44.  call `<init>`(v1, v0) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L490d4a.  return v1 @kind object;
}
procedure `long` `getContentLength`(`retrofit.client.ApacheClient$TypedOutputEntity` v2 @kind this) @signature `Lretrofit/client/ApacheClient$TypedOutputEntity;.getContentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L490d5c.  v0:= v2.`retrofit.client.ApacheClient$TypedOutputEntity.typedOutput` @type ^`retrofit.mime.TypedOutput` @kind object;
  #L490d60.  call temp:= `length`(v0) @signature `Lretrofit/mime/TypedOutput;.length:()J` @kind interface;
  #L490d66.  v0:= temp @kind wide;
  #L490d68.  return v0 @kind wide;
}
procedure `boolean` `isRepeatable`(`retrofit.client.ApacheClient$TypedOutputEntity` v1 @kind this) @signature `Lretrofit/client/ApacheClient$TypedOutputEntity;.isRepeatable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L490cfc.  v0:= 1I;
  #L490cfe.  return v0;
}
procedure `boolean` `isStreaming`(`retrofit.client.ApacheClient$TypedOutputEntity` v1 @kind this) @signature `Lretrofit/client/ApacheClient$TypedOutputEntity;.isStreaming:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L490d10.  v0:= 0I;
  #L490d12.  return v0;
}
procedure `void` `writeTo`(`retrofit.client.ApacheClient$TypedOutputEntity` v1 @kind this, `java.io.OutputStream` v2 @kind object) @signature `Lretrofit/client/ApacheClient$TypedOutputEntity;.writeTo:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L490da8.  v0:= v1.`retrofit.client.ApacheClient$TypedOutputEntity.typedOutput` @type ^`retrofit.mime.TypedOutput` @kind object;
  #L490dac.  call `writeTo`(v0, v2) @signature `Lretrofit/mime/TypedOutput;.writeTo:(Ljava/io/OutputStream;)V` @kind interface;
  #L490db2.  return @kind void;
}
