record `retrofit.client.OkClient` @kind class @AccessFlag PUBLIC extends `retrofit.client.Client` @kind interface {
  `com.squareup.okhttp.OkHttpClient` `retrofit.client.OkClient.client` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit.client.OkClient` v1 @kind this) @signature `Lretrofit/client/OkClient;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L49141c.  call temp:= `generateDefaultOkHttp`() @signature `Lretrofit/client/OkClient;.generateDefaultOkHttp:()Lcom/squareup/okhttp/OkHttpClient;` @kind static;
  #L491422.  v0:= temp @kind object;
  #L491424.  call `<init>`(v1, v0) @signature `Lretrofit/client/OkClient;.<init>:(Lcom/squareup/okhttp/OkHttpClient;)V` @kind direct;
  #L49142a.  return @kind void;
}
procedure `void` `<init>`(`retrofit.client.OkClient` v1 @kind this, `com.squareup.okhttp.OkHttpClient` v2 @kind object) @signature `Lretrofit/client/OkClient;.<init>:(Lcom/squareup/okhttp/OkHttpClient;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L49143c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L491442.  if v2 == 0 then goto L49144c;
  #L491446.  v1.`retrofit.client.OkClient.client` @type ^`com.squareup.okhttp.OkHttpClient` := v2 @kind object;
  #L49144a.  return @kind void;
  #L49144c.  v2:= new `java.lang.NullPointerException`;
  #L491450.  v0:= "client == null" @kind object;
  #L491454.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L49145a.  throw v2;
}
procedure `java.util.List` `createHeaders`(`com.squareup.okhttp.Headers` v6 @kind object) @signature `Lretrofit/client/OkClient;.createHeaders:(Lcom/squareup/okhttp/Headers;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L491300.  call temp:= `size`(v6) @signature `Lcom/squareup/okhttp/Headers;.size:()I` @kind virtual;
  #L491306.  v0:= temp;
  #L491308.  v1:= new `java.util.ArrayList`;
  #L49130c.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L491312.  v2:= 0I;
  #L491314.  if v2 >= v0 then goto L49133e;
  #L491318.  v3:= new `retrofit.client.Header`;
  #L49131c.  call temp:= `name`(v6, v2) @signature `Lcom/squareup/okhttp/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L491322.  v4:= temp @kind object;
  #L491324.  call temp:= `value`(v6, v2) @signature `Lcom/squareup/okhttp/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L49132a.  v5:= temp @kind object;
  #L49132c.  call `<init>`(v3, v4, v5) @signature `Lretrofit/client/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L491332.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L491338.  v2:= v2 + 1;
  #L49133c.  goto L491314;
  #L49133e.  return v1 @kind object;
}
procedure `com.squareup.okhttp.Request` `createRequest`(`retrofit.client.Request` v5 @kind object) @signature `Lretrofit/client/OkClient;.createRequest:(Lretrofit/client/Request;)Lcom/squareup/okhttp/Request;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L491230.  v0:= new `com.squareup.okhttp.Request$Builder`;
  #L491234.  call `<init>`(v0) @signature `Lcom/squareup/okhttp/Request$Builder;.<init>:()V` @kind direct;
  #L49123a.  call temp:= `getUrl`(v5) @signature `Lretrofit/client/Request;.getUrl:()Ljava/lang/String;` @kind virtual;
  #L491240.  v1:= temp @kind object;
  #L491242.  call temp:= `url`(v0, v1) @signature `Lcom/squareup/okhttp/Request$Builder;.url:(Ljava/lang/String;)Lcom/squareup/okhttp/Request$Builder;` @kind virtual;
  #L491248.  v0:= temp @kind object;
  #L49124a.  call temp:= `getMethod`(v5) @signature `Lretrofit/client/Request;.getMethod:()Ljava/lang/String;` @kind virtual;
  #L491250.  v1:= temp @kind object;
  #L491252.  call temp:= `getBody`(v5) @signature `Lretrofit/client/Request;.getBody:()Lretrofit/mime/TypedOutput;` @kind virtual;
  #L491258.  v2:= temp @kind object;
  #L49125a.  call temp:= `createRequestBody`(v2) @signature `Lretrofit/client/OkClient;.createRequestBody:(Lretrofit/mime/TypedOutput;)Lcom/squareup/okhttp/RequestBody;` @kind static;
  #L491260.  v2:= temp @kind object;
  #L491262.  call temp:= `method`(v0, v1, v2) @signature `Lcom/squareup/okhttp/Request$Builder;.method:(Ljava/lang/String;Lcom/squareup/okhttp/RequestBody;)Lcom/squareup/okhttp/Request$Builder;` @kind virtual;
  #L491268.  v0:= temp @kind object;
  #L49126a.  call temp:= `getHeaders`(v5) @signature `Lretrofit/client/Request;.getHeaders:()Ljava/util/List;` @kind virtual;
  #L491270.  v5:= temp @kind object;
  #L491272.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L491278.  v1:= temp;
  #L49127a.  v2:= 0I;
  #L49127c.  if v2 >= v1 then goto L4912b0;
  #L491280.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L491286.  v3:= temp @kind object;
  #L491288.  v3:= (`retrofit.client.Header`) v3 @kind object;
  #L49128c.  call temp:= `getValue`(v3) @signature `Lretrofit/client/Header;.getValue:()Ljava/lang/String;` @kind virtual;
  #L491292.  v4:= temp @kind object;
  #L491294.  if v4 != 0 then goto L49129c;
  #L491298.  v4:= "" @kind object;
  #L49129c.  call temp:= `getName`(v3) @signature `Lretrofit/client/Header;.getName:()Ljava/lang/String;` @kind virtual;
  #L4912a2.  v3:= temp @kind object;
  #L4912a4.  call temp:= `addHeader`(v0, v3, v4) @signature `Lcom/squareup/okhttp/Request$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lcom/squareup/okhttp/Request$Builder;` @kind virtual;
  #L4912aa.  v2:= v2 + 1;
  #L4912ae.  goto L49127c;
  #L4912b0.  call temp:= `build`(v0) @signature `Lcom/squareup/okhttp/Request$Builder;.build:()Lcom/squareup/okhttp/Request;` @kind virtual;
  #L4912b6.  v5:= temp @kind object;
  #L4912b8.  return v5 @kind object;
}
procedure `com.squareup.okhttp.RequestBody` `createRequestBody`(`retrofit.mime.TypedOutput` v2 @kind object) @signature `Lretrofit/client/OkClient;.createRequestBody:(Lretrofit/mime/TypedOutput;)Lcom/squareup/okhttp/RequestBody;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4912cc.  if v2 != 0 then goto L4912d4;
  #L4912d0.  v2:= 0I;
  #L4912d2.  return v2 @kind object;
  #L4912d4.  call temp:= `mimeType`(v2) @signature `Lretrofit/mime/TypedOutput;.mimeType:()Ljava/lang/String;` @kind interface;
  #L4912da.  v0:= temp @kind object;
  #L4912dc.  call temp:= `parse`(v0) @signature `Lcom/squareup/okhttp/MediaType;.parse:(Ljava/lang/String;)Lcom/squareup/okhttp/MediaType;` @kind static;
  #L4912e2.  v0:= temp @kind object;
  #L4912e4.  v1:= new `retrofit.client.OkClient$1`;
  #L4912e8.  call `<init>`(v1, v0, v2) @signature `Lretrofit/client/OkClient$1;.<init>:(Lcom/squareup/okhttp/MediaType;Lretrofit/mime/TypedOutput;)V` @kind direct;
  #L4912ee.  return v1 @kind object;
}
procedure `retrofit.mime.TypedInput` `createResponseBody`(`com.squareup.okhttp.ResponseBody` v5 @kind object) @signature `Lretrofit/client/OkClient;.createResponseBody:(Lcom/squareup/okhttp/ResponseBody;)Lretrofit/mime/TypedInput;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4913e8.  call temp:= `contentLength`(v5) @signature `Lcom/squareup/okhttp/ResponseBody;.contentLength:()J` @kind virtual;
  #L4913ee.  v0:= temp @kind wide;
  #L4913f0.  v2:= 0L;
  #L4913f4.  v4:= lcmp(v0, v2);
  #L4913f8.  if v4 != 0 then goto L491400;
  #L4913fc.  v5:= 0I;
  #L4913fe.  return v5 @kind object;
  #L491400.  v0:= new `retrofit.client.OkClient$2`;
  #L491404.  call `<init>`(v0, v5) @signature `Lretrofit/client/OkClient$2;.<init>:(Lcom/squareup/okhttp/ResponseBody;)V` @kind direct;
  #L49140a.  return v0 @kind object;
}
procedure `com.squareup.okhttp.OkHttpClient` `generateDefaultOkHttp`() @signature `Lretrofit/client/OkClient;.generateDefaultOkHttp:()Lcom/squareup/okhttp/OkHttpClient;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4911f8.  v0:= new `com.squareup.okhttp.OkHttpClient`;
  #L4911fc.  call `<init>`(v0) @signature `Lcom/squareup/okhttp/OkHttpClient;.<init>:()V` @kind direct;
  #L491202.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L491206.  v2:= 15000L;
  #L49120a.  call `setConnectTimeout`(v0, v2, v1) @signature `Lcom/squareup/okhttp/OkHttpClient;.setConnectTimeout:(JLjava/util/concurrent/TimeUnit;)V` @kind virtual;
  #L491210.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L491214.  v2:= 20000L;
  #L491218.  call `setReadTimeout`(v0, v2, v1) @signature `Lcom/squareup/okhttp/OkHttpClient;.setReadTimeout:(JLjava/util/concurrent/TimeUnit;)V` @kind virtual;
  #L49121e.  return v0 @kind object;
}
procedure `retrofit.client.Response` `parseResponse`(`com.squareup.okhttp.Response` v7 @kind object) @signature `Lretrofit/client/OkClient;.parseResponse:(Lcom/squareup/okhttp/Response;)Lretrofit/client/Response;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L491388.  v6:= new `retrofit.client.Response`;
  #L49138c.  call temp:= `request`(v7) @signature `Lcom/squareup/okhttp/Response;.request:()Lcom/squareup/okhttp/Request;` @kind virtual;
  #L491392.  v0:= temp @kind object;
  #L491394.  call temp:= `urlString`(v0) @signature `Lcom/squareup/okhttp/Request;.urlString:()Ljava/lang/String;` @kind virtual;
  #L49139a.  v1:= temp @kind object;
  #L49139c.  call temp:= `code`(v7) @signature `Lcom/squareup/okhttp/Response;.code:()I` @kind virtual;
  #L4913a2.  v2:= temp;
  #L4913a4.  call temp:= `message`(v7) @signature `Lcom/squareup/okhttp/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L4913aa.  v3:= temp @kind object;
  #L4913ac.  call temp:= `headers`(v7) @signature `Lcom/squareup/okhttp/Response;.headers:()Lcom/squareup/okhttp/Headers;` @kind virtual;
  #L4913b2.  v0:= temp @kind object;
  #L4913b4.  call temp:= `createHeaders`(v0) @signature `Lretrofit/client/OkClient;.createHeaders:(Lcom/squareup/okhttp/Headers;)Ljava/util/List;` @kind static;
  #L4913ba.  v4:= temp @kind object;
  #L4913bc.  call temp:= `body`(v7) @signature `Lcom/squareup/okhttp/Response;.body:()Lcom/squareup/okhttp/ResponseBody;` @kind virtual;
  #L4913c2.  v7:= temp @kind object;
  #L4913c4.  call temp:= `createResponseBody`(v7) @signature `Lretrofit/client/OkClient;.createResponseBody:(Lcom/squareup/okhttp/ResponseBody;)Lretrofit/mime/TypedInput;` @kind static;
  #L4913ca.  v5:= temp @kind object;
  #L4913cc.  v0:= v6 @kind object;
  #L4913ce.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lretrofit/client/Response;.<init>:(Ljava/lang/String;ILjava/lang/String;Ljava/util/List;Lretrofit/mime/TypedInput;)V` @kind direct;
  #L4913d4.  return v6 @kind object;
}
procedure `retrofit.client.Response` `execute`(`retrofit.client.OkClient` v1 @kind this, `retrofit.client.Request` v2 @kind object) @signature `Lretrofit/client/OkClient;.execute:(Lretrofit/client/Request;)Lretrofit/client/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L491350.  v0:= v1.`retrofit.client.OkClient.client` @type ^`com.squareup.okhttp.OkHttpClient` @kind object;
  #L491354.  call temp:= `createRequest`(v2) @signature `Lretrofit/client/OkClient;.createRequest:(Lretrofit/client/Request;)Lcom/squareup/okhttp/Request;` @kind static;
  #L49135a.  v2:= temp @kind object;
  #L49135c.  call temp:= `newCall`(v0, v2) @signature `Lcom/squareup/okhttp/OkHttpClient;.newCall:(Lcom/squareup/okhttp/Request;)Lcom/squareup/okhttp/Call;` @kind virtual;
  #L491362.  v2:= temp @kind object;
  #L491364.  call temp:= `execute`(v2) @signature `Lcom/squareup/okhttp/Call;.execute:()Lcom/squareup/okhttp/Response;` @kind virtual;
  #L49136a.  v2:= temp @kind object;
  #L49136c.  call temp:= `parseResponse`(v2) @signature `Lretrofit/client/OkClient;.parseResponse:(Lcom/squareup/okhttp/Response;)Lretrofit/client/Response;` @kind static;
  #L491372.  v2:= temp @kind object;
  #L491374.  return v2 @kind object;
}
