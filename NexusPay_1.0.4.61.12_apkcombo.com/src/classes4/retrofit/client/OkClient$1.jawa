record `retrofit.client.OkClient$1` @kind class @AccessFlag FINAL extends `com.squareup.okhttp.RequestBody` @kind class {
  `retrofit.mime.TypedOutput` `retrofit.client.OkClient$1.val$body` @AccessFlag FINAL_SYNTHETIC;
  `com.squareup.okhttp.MediaType` `retrofit.client.OkClient$1.val$mediaType` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`retrofit.client.OkClient$1` v0 @kind this, `com.squareup.okhttp.MediaType` v1 @kind object, `retrofit.mime.TypedOutput` v2 @kind object) @signature `Lretrofit/client/OkClient$1;.<init>:(Lcom/squareup/okhttp/MediaType;Lretrofit/mime/TypedOutput;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L491128.  v0.`retrofit.client.OkClient$1.val$mediaType` @type ^`com.squareup.okhttp.MediaType` := v1 @kind object;
  #L49112c.  v0.`retrofit.client.OkClient$1.val$body` @type ^`retrofit.mime.TypedOutput` := v2 @kind object;
  #L491130.  call `<init>`(v0) @signature `Lcom/squareup/okhttp/RequestBody;.<init>:()V` @kind direct;
  #L491136.  return @kind void;
}
procedure `long` `contentLength`(`retrofit.client.OkClient$1` v2 @kind this) @signature `Lretrofit/client/OkClient$1;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L491108.  v0:= v2.`retrofit.client.OkClient$1.val$body` @type ^`retrofit.mime.TypedOutput` @kind object;
  #L49110c.  call temp:= `length`(v0) @signature `Lretrofit/mime/TypedOutput;.length:()J` @kind interface;
  #L491112.  v0:= temp @kind wide;
  #L491114.  return v0 @kind wide;
}
procedure `com.squareup.okhttp.MediaType` `contentType`(`retrofit.client.OkClient$1` v1 @kind this) @signature `Lretrofit/client/OkClient$1;.contentType:()Lcom/squareup/okhttp/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4910f0.  v0:= v1.`retrofit.client.OkClient$1.val$mediaType` @type ^`com.squareup.okhttp.MediaType` @kind object;
  #L4910f4.  return v0 @kind object;
}
procedure `void` `writeTo`(`retrofit.client.OkClient$1` v1 @kind this, `okio.BufferedSink` v2 @kind object) @signature `Lretrofit/client/OkClient$1;.writeTo:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L491148.  v0:= v1.`retrofit.client.OkClient$1.val$body` @type ^`retrofit.mime.TypedOutput` @kind object;
  #L49114c.  call temp:= `outputStream`(v2) @signature `Lokio/BufferedSink;.outputStream:()Ljava/io/OutputStream;` @kind interface;
  #L491152.  v2:= temp @kind object;
  #L491154.  call `writeTo`(v0, v2) @signature `Lretrofit/mime/TypedOutput;.writeTo:(Ljava/io/OutputStream;)V` @kind interface;
  #L49115a.  return @kind void;
}
