record `kotlin.ranges.UIntRange` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.ranges.UIntProgression` @kind class, `kotlin.ranges.ClosedRange` @kind interface {
}
global `kotlin.ranges.UIntRange$Companion` `@@kotlin.ranges.UIntRange.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `kotlin.ranges.UIntRange` `@@kotlin.ranges.UIntRange.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/ranges/UIntRange;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L138320.  v0:= new `kotlin.ranges.UIntRange$Companion`;
  #L138324.  v1:= 0I;
  #L138326.  call `<init>`(v0, v1) @signature `Lkotlin/ranges/UIntRange$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L13832c.  `@@kotlin.ranges.UIntRange.Companion` @type ^`kotlin.ranges.UIntRange$Companion` := v0 @kind object;
  #L138330.  v0:= new `kotlin.ranges.UIntRange`;
  #L138334.  v1:= -1I;
  #L138336.  v2:= 0I;
  #L138338.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/UIntRange;.<init>:(II)V` @kind direct;
  #L13833e.  `@@kotlin.ranges.UIntRange.d` @type ^`kotlin.ranges.UIntRange` := v0 @kind object;
  #L138342.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.UIntRange` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lkotlin/ranges/UIntRange;.<init>:(II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L138354.  v0:= 1I;
  #L138356.  v1:= 0I;
  #L138358.  call `<init>`(v2, v3, v4, v0, v1) @signature `Lkotlin/ranges/UIntProgression;.<init>:(IIILkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L13835e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.UIntRange` v0 @kind this, `int` v1 , `int` v2 , `kotlin.jvm.internal.DefaultConstructorMarker` v3 @kind object) @signature `Lkotlin/ranges/UIntRange;.<init>:(IILkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L138370.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/UIntRange;.<init>:(II)V` @kind direct;
  #L138376.  return @kind void;
}
procedure `kotlin.ranges.UIntRange` `access$getEMPTY$cp`() @signature `Lkotlin/ranges/UIntRange;.access$getEMPTY$cp:()Lkotlin/ranges/UIntRange;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L138308.  v0:= `@@kotlin.ranges.UIntRange.d` @type ^`kotlin.ranges.UIntRange` @kind object;
  #L13830c.  return v0 @kind object;
}
procedure `boolean` `contains`(`kotlin.ranges.UIntRange` v0 @kind this, `java.lang.Comparable` v1 @kind object) @signature `Lkotlin/ranges/UIntRange;.contains:(Ljava/lang/Comparable;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1380ec.  v1:= (`kotlin.UInt`) v1 @kind object;
  #L1380f0.  call temp:= `unbox-impl`(v1) @signature `Lkotlin/UInt;.unbox-impl:()I` @kind virtual;
  #L1380f6.  v1:= temp;
  #L1380f8.  call temp:= `contains-WZ4Q5Ns`(v0, v1) @signature `Lkotlin/ranges/UIntRange;.contains-WZ4Q5Ns:(I)Z` @kind virtual;
  #L1380fe.  v1:= temp;
  #L138100.  return v1;
}
procedure `boolean` `contains-WZ4Q5Ns`(`kotlin.ranges.UIntRange` v1 @kind this, `int` v2 ) @signature `Lkotlin/ranges/UIntRange;.contains-WZ4Q5Ns:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L138114.  call temp:= `getFirst-pVg5ArA`(v1) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L13811a.  v0:= temp;
  #L13811c.  call temp:= `uintCompare`(v0, v2) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L138122.  v0:= temp;
  #L138124.  if v0 > 0 then goto L138140;
  #L138128.  call temp:= `getLast-pVg5ArA`(v1) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L13812e.  v0:= temp;
  #L138130.  call temp:= `uintCompare`(v2, v0) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L138136.  v2:= temp;
  #L138138.  if v2 > 0 then goto L138140;
  #L13813c.  v2:= 1I;
  #L13813e.  goto L138142;
  #L138140.  v2:= 0I;
  #L138142.  return v2;
}
procedure `boolean` `equals`(`kotlin.ranges.UIntRange` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/ranges/UIntRange;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L138154.  v0:= instanceof @variable v3 @type ^`kotlin.ranges.UIntRange` @kind boolean;
  #L138158.  if v0 == 0 then goto L1381aa;
  #L13815c.  call temp:= `isEmpty`(v2) @signature `Lkotlin/ranges/UIntRange;.isEmpty:()Z` @kind virtual;
  #L138162.  v0:= temp;
  #L138164.  if v0 == 0 then goto L13817a;
  #L138168.  v0:= v3 @kind object;
  #L13816a.  v0:= (`kotlin.ranges.UIntRange`) v0 @kind object;
  #L13816e.  call temp:= `isEmpty`(v0) @signature `Lkotlin/ranges/UIntRange;.isEmpty:()Z` @kind virtual;
  #L138174.  v0:= temp;
  #L138176.  if v0 != 0 then goto L1381a6;
  #L13817a.  call temp:= `getFirst-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L138180.  v0:= temp;
  #L138182.  v3:= (`kotlin.ranges.UIntRange`) v3 @kind object;
  #L138186.  call temp:= `getFirst-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L13818c.  v1:= temp;
  #L13818e.  if v0 != v1 then goto L1381aa;
  #L138192.  call temp:= `getLast-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L138198.  v0:= temp;
  #L13819a.  call temp:= `getLast-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L1381a0.  v3:= temp;
  #L1381a2.  if v0 != v3 then goto L1381aa;
  #L1381a6.  v3:= 1I;
  #L1381a8.  goto L1381ac;
  #L1381aa.  v3:= 0I;
  #L1381ac.  return v3;
}
procedure `java.lang.Comparable` `getEndInclusive`(`kotlin.ranges.UIntRange` v1 @kind this) @signature `Lkotlin/ranges/UIntRange;.getEndInclusive:()Ljava/lang/Comparable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L138264.  call temp:= `getEndInclusive-pVg5ArA`(v1) @signature `Lkotlin/ranges/UIntRange;.getEndInclusive-pVg5ArA:()I` @kind virtual;
  #L13826a.  v0:= temp;
  #L13826c.  call temp:= `box-impl`(v0) @signature `Lkotlin/UInt;.box-impl:(I)Lkotlin/UInt;` @kind static;
  #L138272.  v0:= temp @kind object;
  #L138274.  return v0 @kind object;
}
procedure `int` `getEndInclusive-pVg5ArA`(`kotlin.ranges.UIntRange` v1 @kind this) @signature `Lkotlin/ranges/UIntRange;.getEndInclusive-pVg5ArA:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1381f4.  call temp:= `getLast-pVg5ArA`(v1) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L1381fa.  v0:= temp;
  #L1381fc.  return v0;
}
procedure `java.lang.Comparable` `getStart`(`kotlin.ranges.UIntRange` v1 @kind this) @signature `Lkotlin/ranges/UIntRange;.getStart:()Ljava/lang/Comparable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L138288.  call temp:= `getStart-pVg5ArA`(v1) @signature `Lkotlin/ranges/UIntRange;.getStart-pVg5ArA:()I` @kind virtual;
  #L13828e.  v0:= temp;
  #L138290.  call temp:= `box-impl`(v0) @signature `Lkotlin/UInt;.box-impl:(I)Lkotlin/UInt;` @kind static;
  #L138296.  v0:= temp @kind object;
  #L138298.  return v0 @kind object;
}
procedure `int` `getStart-pVg5ArA`(`kotlin.ranges.UIntRange` v1 @kind this) @signature `Lkotlin/ranges/UIntRange;.getStart-pVg5ArA:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L138210.  call temp:= `getFirst-pVg5ArA`(v1) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L138216.  v0:= temp;
  #L138218.  return v0;
}
procedure `int` `hashCode`(`kotlin.ranges.UIntRange` v2 @kind this) @signature `Lkotlin/ranges/UIntRange;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13822c.  call temp:= `isEmpty`(v2) @signature `Lkotlin/ranges/UIntRange;.isEmpty:()Z` @kind virtual;
  #L138232.  v0:= temp;
  #L138234.  if v0 == 0 then goto L13823c;
  #L138238.  v0:= -1I;
  #L13823a.  goto L138252;
  #L13823c.  call temp:= `getFirst-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L138242.  v0:= temp;
  #L138244.  v0:= v0 * 31;
  #L138248.  call temp:= `getLast-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L13824e.  v1:= temp;
  #L138250.  v0:= v0 + v1 @kind int;
  #L138252.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.ranges.UIntRange` v2 @kind this) @signature `Lkotlin/ranges/UIntRange;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1381c0.  call temp:= `getFirst-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L1381c6.  v0:= temp;
  #L1381c8.  call temp:= `getLast-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L1381ce.  v1:= temp;
  #L1381d0.  call temp:= `uintCompare`(v0, v1) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L1381d6.  v0:= temp;
  #L1381d8.  if v0 <= 0 then goto L1381e0;
  #L1381dc.  v0:= 1I;
  #L1381de.  goto L1381e2;
  #L1381e0.  v0:= 0I;
  #L1381e2.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.ranges.UIntRange` v2 @kind this) @signature `Lkotlin/ranges/UIntRange;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1382ac.  v0:= new `java.lang.StringBuilder`;
  #L1382b0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1382b6.  call temp:= `getFirst-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L1382bc.  v1:= temp;
  #L1382be.  call temp:= `toString-impl`(v1) @signature `Lkotlin/UInt;.toString-impl:(I)Ljava/lang/String;` @kind static;
  #L1382c4.  v1:= temp @kind object;
  #L1382c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1382cc.  v1:= ".." @kind object;
  #L1382d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1382d6.  call temp:= `getLast-pVg5ArA`(v2) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L1382dc.  v1:= temp;
  #L1382de.  call temp:= `toString-impl`(v1) @signature `Lkotlin/UInt;.toString-impl:(I)Ljava/lang/String;` @kind static;
  #L1382e4.  v1:= temp @kind object;
  #L1382e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1382ec.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1382f2.  v0:= temp @kind object;
  #L1382f4.  return v0 @kind object;
}
