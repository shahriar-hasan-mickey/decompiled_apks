record `kotlin.ranges.ULongRange` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.ranges.ULongProgression` @kind class, `kotlin.ranges.ClosedRange` @kind interface {
}
global `kotlin.ranges.ULongRange$Companion` `@@kotlin.ranges.ULongRange.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `kotlin.ranges.ULongRange` `@@kotlin.ranges.ULongRange.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/ranges/ULongRange;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L138a8c.  v0:= new `kotlin.ranges.ULongRange$Companion`;
  #L138a90.  v1:= 0I;
  #L138a92.  call `<init>`(v0, v1) @signature `Lkotlin/ranges/ULongRange$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L138a98.  `@@kotlin.ranges.ULongRange.Companion` @type ^`kotlin.ranges.ULongRange$Companion` := v0 @kind object;
  #L138a9c.  v0:= new `kotlin.ranges.ULongRange`;
  #L138aa0.  v1:= -1L;
  #L138aa4.  v3:= 0L;
  #L138aa8.  call `<init>`(v0, v1, v3) @signature `Lkotlin/ranges/ULongRange;.<init>:(JJ)V` @kind direct;
  #L138aae.  `@@kotlin.ranges.ULongRange.d` @type ^`kotlin.ranges.ULongRange` := v0 @kind object;
  #L138ab2.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.ULongRange` v8 @kind this, `long` v9 , `long` v11 ) @signature `Lkotlin/ranges/ULongRange;.<init>:(JJ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L138ac4.  v5:= 1L;
  #L138ac8.  v7:= 0I;
  #L138aca.  v0:= v8 @kind object;
  #L138acc.  v1:= v9 @kind wide;
  #L138ace.  v3:= v11 @kind wide;
  #L138ad0.  call `<init>`(v0, v1, v3, v5, v7) @signature `Lkotlin/ranges/ULongProgression;.<init>:(JJJLkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L138ad6.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.ULongRange` v0 @kind this, `long` v1 , `long` v3 , `kotlin.jvm.internal.DefaultConstructorMarker` v5 @kind object) @signature `Lkotlin/ranges/ULongRange;.<init>:(JJLkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L138ae8.  call `<init>`(v0, v1, v3) @signature `Lkotlin/ranges/ULongRange;.<init>:(JJ)V` @kind direct;
  #L138aee.  return @kind void;
}
procedure `kotlin.ranges.ULongRange` `access$getEMPTY$cp`() @signature `Lkotlin/ranges/ULongRange;.access$getEMPTY$cp:()Lkotlin/ranges/ULongRange;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L138a3c.  v0:= `@@kotlin.ranges.ULongRange.d` @type ^`kotlin.ranges.ULongRange` @kind object;
  #L138a40.  return v0 @kind object;
}
procedure `boolean` `contains`(`kotlin.ranges.ULongRange` v2 @kind this, `java.lang.Comparable` v3 @kind object) @signature `Lkotlin/ranges/ULongRange;.contains:(Ljava/lang/Comparable;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L13880c.  v3:= (`kotlin.ULong`) v3 @kind object;
  #L138810.  call temp:= `unbox-impl`(v3) @signature `Lkotlin/ULong;.unbox-impl:()J` @kind virtual;
  #L138816.  v0:= temp @kind wide;
  #L138818.  call temp:= `contains-VKZWuLQ`(v2, v0) @signature `Lkotlin/ranges/ULongRange;.contains-VKZWuLQ:(J)Z` @kind virtual;
  #L13881e.  v3:= temp;
  #L138820.  return v3;
}
procedure `boolean` `contains-VKZWuLQ`(`kotlin.ranges.ULongRange` v2 @kind this, `long` v3 ) @signature `Lkotlin/ranges/ULongRange;.contains-VKZWuLQ:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L138834.  call temp:= `getFirst-s-VKNKU`(v2) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L13883a.  v0:= temp @kind wide;
  #L13883c.  call temp:= `ulongCompare`(v0, v3) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L138842.  v0:= temp;
  #L138844.  if v0 > 0 then goto L138860;
  #L138848.  call temp:= `getLast-s-VKNKU`(v2) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L13884e.  v0:= temp @kind wide;
  #L138850.  call temp:= `ulongCompare`(v3, v0) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L138856.  v3:= temp;
  #L138858.  if v3 > 0 then goto L138860;
  #L13885c.  v3:= 1I;
  #L13885e.  goto L138862;
  #L138860.  v3:= 0I;
  #L138862.  return v3;
}
procedure `boolean` `equals`(`kotlin.ranges.ULongRange` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlin/ranges/ULongRange;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L138874.  v0:= instanceof @variable v6 @type ^`kotlin.ranges.ULongRange` @kind boolean;
  #L138878.  if v0 == 0 then goto L1388d2;
  #L13887c.  call temp:= `isEmpty`(v5) @signature `Lkotlin/ranges/ULongRange;.isEmpty:()Z` @kind virtual;
  #L138882.  v0:= temp;
  #L138884.  if v0 == 0 then goto L13889a;
  #L138888.  v0:= v6 @kind object;
  #L13888a.  v0:= (`kotlin.ranges.ULongRange`) v0 @kind object;
  #L13888e.  call temp:= `isEmpty`(v0) @signature `Lkotlin/ranges/ULongRange;.isEmpty:()Z` @kind virtual;
  #L138894.  v0:= temp;
  #L138896.  if v0 != 0 then goto L1388ce;
  #L13889a.  call temp:= `getFirst-s-VKNKU`(v5) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L1388a0.  v0:= temp @kind wide;
  #L1388a2.  v6:= (`kotlin.ranges.ULongRange`) v6 @kind object;
  #L1388a6.  call temp:= `getFirst-s-VKNKU`(v6) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L1388ac.  v2:= temp @kind wide;
  #L1388ae.  v4:= lcmp(v0, v2);
  #L1388b2.  if v4 != 0 then goto L1388d2;
  #L1388b6.  call temp:= `getLast-s-VKNKU`(v5) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L1388bc.  v0:= temp @kind wide;
  #L1388be.  call temp:= `getLast-s-VKNKU`(v6) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L1388c4.  v2:= temp @kind wide;
  #L1388c6.  v6:= lcmp(v0, v2);
  #L1388ca.  if v6 != 0 then goto L1388d2;
  #L1388ce.  v6:= 1I;
  #L1388d0.  goto L1388d4;
  #L1388d2.  v6:= 0I;
  #L1388d4.  return v6;
}
procedure `java.lang.Comparable` `getEndInclusive`(`kotlin.ranges.ULongRange` v2 @kind this) @signature `Lkotlin/ranges/ULongRange;.getEndInclusive:()Ljava/lang/Comparable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L138998.  call temp:= `getEndInclusive-s-VKNKU`(v2) @signature `Lkotlin/ranges/ULongRange;.getEndInclusive-s-VKNKU:()J` @kind virtual;
  #L13899e.  v0:= temp @kind wide;
  #L1389a0.  call temp:= `box-impl`(v0) @signature `Lkotlin/ULong;.box-impl:(J)Lkotlin/ULong;` @kind static;
  #L1389a6.  v0:= temp @kind object;
  #L1389a8.  return v0 @kind object;
}
procedure `long` `getEndInclusive-s-VKNKU`(`kotlin.ranges.ULongRange` v2 @kind this) @signature `Lkotlin/ranges/ULongRange;.getEndInclusive-s-VKNKU:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L138a54.  call temp:= `getLast-s-VKNKU`(v2) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L138a5a.  v0:= temp @kind wide;
  #L138a5c.  return v0 @kind wide;
}
procedure `java.lang.Comparable` `getStart`(`kotlin.ranges.ULongRange` v2 @kind this) @signature `Lkotlin/ranges/ULongRange;.getStart:()Ljava/lang/Comparable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L1389bc.  call temp:= `getStart-s-VKNKU`(v2) @signature `Lkotlin/ranges/ULongRange;.getStart-s-VKNKU:()J` @kind virtual;
  #L1389c2.  v0:= temp @kind wide;
  #L1389c4.  call temp:= `box-impl`(v0) @signature `Lkotlin/ULong;.box-impl:(J)Lkotlin/ULong;` @kind static;
  #L1389ca.  v0:= temp @kind object;
  #L1389cc.  return v0 @kind object;
}
procedure `long` `getStart-s-VKNKU`(`kotlin.ranges.ULongRange` v2 @kind this) @signature `Lkotlin/ranges/ULongRange;.getStart-s-VKNKU:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L138a70.  call temp:= `getFirst-s-VKNKU`(v2) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L138a76.  v0:= temp @kind wide;
  #L138a78.  return v0 @kind wide;
}
procedure `int` `hashCode`(`kotlin.ranges.ULongRange` v7 @kind this) @signature `Lkotlin/ranges/ULongRange;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L13891c.  call temp:= `isEmpty`(v7) @signature `Lkotlin/ranges/ULongRange;.isEmpty:()Z` @kind virtual;
  #L138922.  v0:= temp;
  #L138924.  if v0 == 0 then goto L13892c;
  #L138928.  v0:= -1I;
  #L13892a.  goto L138984;
  #L13892c.  call temp:= `getFirst-s-VKNKU`(v7) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L138932.  v0:= temp @kind wide;
  #L138934.  call temp:= `getFirst-s-VKNKU`(v7) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L13893a.  v2:= temp @kind wide;
  #L13893c.  v4:= 32I;
  #L138940.  v2:= v2 ^>> v4 @kind long;
  #L138942.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L138948.  v2:= temp @kind wide;
  #L13894a.  v0:= v0 ^~ v2 @kind long;
  #L13894c.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L138952.  v0:= temp @kind wide;
  #L138954.  v1:= (`int`) v0 @kind l2i;
  #L138956.  v1:= v1 * 31;
  #L13895a.  call temp:= `getLast-s-VKNKU`(v7) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L138960.  v2:= temp @kind wide;
  #L138962.  call temp:= `getLast-s-VKNKU`(v7) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L138968.  v5:= temp @kind wide;
  #L13896a.  v4:= v5 ^>> v4 @kind long;
  #L13896e.  call temp:= `constructor-impl`(v4) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L138974.  v4:= temp @kind wide;
  #L138976.  v2:= v2 ^~ v4 @kind long;
  #L138978.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L13897e.  v2:= temp @kind wide;
  #L138980.  v0:= (`int`) v2 @kind l2i;
  #L138982.  v0:= v0 + v1 @kind int;
  #L138984.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.ranges.ULongRange` v4 @kind this) @signature `Lkotlin/ranges/ULongRange;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1388e8.  call temp:= `getFirst-s-VKNKU`(v4) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L1388ee.  v0:= temp @kind wide;
  #L1388f0.  call temp:= `getLast-s-VKNKU`(v4) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L1388f6.  v2:= temp @kind wide;
  #L1388f8.  call temp:= `ulongCompare`(v0, v2) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L1388fe.  v0:= temp;
  #L138900.  if v0 <= 0 then goto L138908;
  #L138904.  v0:= 1I;
  #L138906.  goto L13890a;
  #L138908.  v0:= 0I;
  #L13890a.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.ranges.ULongRange` v3 @kind this) @signature `Lkotlin/ranges/ULongRange;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1389e0.  v0:= new `java.lang.StringBuilder`;
  #L1389e4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1389ea.  call temp:= `getFirst-s-VKNKU`(v3) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L1389f0.  v1:= temp @kind wide;
  #L1389f2.  call temp:= `toString-impl`(v1) @signature `Lkotlin/ULong;.toString-impl:(J)Ljava/lang/String;` @kind static;
  #L1389f8.  v1:= temp @kind object;
  #L1389fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138a00.  v1:= ".." @kind object;
  #L138a04.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138a0a.  call temp:= `getLast-s-VKNKU`(v3) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L138a10.  v1:= temp @kind wide;
  #L138a12.  call temp:= `toString-impl`(v1) @signature `Lkotlin/ULong;.toString-impl:(J)Ljava/lang/String;` @kind static;
  #L138a18.  v1:= temp @kind object;
  #L138a1a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138a20.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L138a26.  v0:= temp @kind object;
  #L138a28.  return v0 @kind object;
}
