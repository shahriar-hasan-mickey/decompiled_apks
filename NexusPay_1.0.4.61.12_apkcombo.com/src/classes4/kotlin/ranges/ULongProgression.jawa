record `kotlin.ranges.ULongProgression` @kind class @AccessFlag PUBLIC extends `java.lang.Iterable` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
  `long` `kotlin.ranges.ULongProgression.a` @AccessFlag PRIVATE_FINAL;
  `long` `kotlin.ranges.ULongProgression.b` @AccessFlag PRIVATE_FINAL;
  `long` `kotlin.ranges.ULongProgression.c` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.ranges.ULongProgression$Companion` `@@kotlin.ranges.ULongProgression.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/ranges/ULongProgression;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L138720.  v0:= new `kotlin.ranges.ULongProgression$Companion`;
  #L138724.  v1:= 0I;
  #L138726.  call `<init>`(v0, v1) @signature `Lkotlin/ranges/ULongProgression$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L13872c.  `@@kotlin.ranges.ULongProgression.Companion` @type ^`kotlin.ranges.ULongProgression$Companion` := v0 @kind object;
  #L138730.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.ULongProgression` v3 @kind this, `long` v4 , `long` v6 , `long` v8 ) @signature `Lkotlin/ranges/ULongProgression;.<init>:(JJJ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L138744.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13874a.  v0:= 0L;
  #L13874e.  v2:= lcmp(v8, v0);
  #L138752.  if v2 == 0 then goto L138788;
  #L138756.  v0:= -9223372036854775808L;
  #L13875a.  v2:= lcmp(v8, v0);
  #L13875e.  if v2 == 0 then goto L138778;
  #L138762.  v3.`kotlin.ranges.ULongProgression.a` @type ^`long` := v4 @kind wide;
  #L138766.  call temp:= `getProgressionLastElement-7ftBX0g`(v4, v6, v8) @signature `Lkotlin/internal/UProgressionUtilKt;.getProgressionLastElement-7ftBX0g:(JJJ)J` @kind static;
  #L13876c.  v4:= temp @kind wide;
  #L13876e.  v3.`kotlin.ranges.ULongProgression.b` @type ^`long` := v4 @kind wide;
  #L138772.  v3.`kotlin.ranges.ULongProgression.c` @type ^`long` := v8 @kind wide;
  #L138776.  return @kind void;
  #L138778.  v4:= new `java.lang.IllegalArgumentException`;
  #L13877c.  v5:= "Step must be greater than Long.MIN_VALUE to avoid overflow on negation." @kind object;
  #L138780.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L138786.  throw v4;
  #L138788.  v4:= new `java.lang.IllegalArgumentException`;
  #L13878c.  v5:= "Step must be non-zero." @kind object;
  #L138790.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L138796.  throw v4;
}
procedure `void` `<init>`(`kotlin.ranges.ULongProgression` v0 @kind this, `long` v1 , `long` v3 , `long` v5 , `kotlin.jvm.internal.DefaultConstructorMarker` v7 @kind object) @signature `Lkotlin/ranges/ULongProgression;.<init>:(JJJLkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1387a8.  call `<init>`(v0, v1, v3, v5) @signature `Lkotlin/ranges/ULongProgression;.<init>:(JJJ)V` @kind direct;
  #L1387ae.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.ranges.ULongProgression` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlin/ranges/ULongProgression;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1384c4.  v0:= instanceof @variable v6 @type ^`kotlin.ranges.ULongProgression` @kind boolean;
  #L1384c8.  if v0 == 0 then goto L138522;
  #L1384cc.  call temp:= `isEmpty`(v5) @signature `Lkotlin/ranges/ULongProgression;.isEmpty:()Z` @kind virtual;
  #L1384d2.  v0:= temp;
  #L1384d4.  if v0 == 0 then goto L1384ea;
  #L1384d8.  v0:= v6 @kind object;
  #L1384da.  v0:= (`kotlin.ranges.ULongProgression`) v0 @kind object;
  #L1384de.  call temp:= `isEmpty`(v0) @signature `Lkotlin/ranges/ULongProgression;.isEmpty:()Z` @kind virtual;
  #L1384e4.  v0:= temp;
  #L1384e6.  if v0 != 0 then goto L13851e;
  #L1384ea.  v0:= v5.`kotlin.ranges.ULongProgression.a` @type ^`long` @kind wide;
  #L1384ee.  v6:= (`kotlin.ranges.ULongProgression`) v6 @kind object;
  #L1384f2.  v2:= v6.`kotlin.ranges.ULongProgression.a` @type ^`long` @kind wide;
  #L1384f6.  v4:= lcmp(v0, v2);
  #L1384fa.  if v4 != 0 then goto L138522;
  #L1384fe.  v0:= v5.`kotlin.ranges.ULongProgression.b` @type ^`long` @kind wide;
  #L138502.  v2:= v6.`kotlin.ranges.ULongProgression.b` @type ^`long` @kind wide;
  #L138506.  v4:= lcmp(v0, v2);
  #L13850a.  if v4 != 0 then goto L138522;
  #L13850e.  v0:= v5.`kotlin.ranges.ULongProgression.c` @type ^`long` @kind wide;
  #L138512.  v2:= v6.`kotlin.ranges.ULongProgression.c` @type ^`long` @kind wide;
  #L138516.  v6:= lcmp(v0, v2);
  #L13851a.  if v6 != 0 then goto L138522;
  #L13851e.  v6:= 1I;
  #L138520.  goto L138524;
  #L138522.  v6:= 0I;
  #L138524.  return v6;
}
procedure `long` `getFirst-s-VKNKU`(`kotlin.ranges.ULongProgression` v2 @kind this) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1386d8.  v0:= v2.`kotlin.ranges.ULongProgression.a` @type ^`long` @kind wide;
  #L1386dc.  return v0 @kind wide;
}
procedure `long` `getLast-s-VKNKU`(`kotlin.ranges.ULongProgression` v2 @kind this) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1386f0.  v0:= v2.`kotlin.ranges.ULongProgression.b` @type ^`long` @kind wide;
  #L1386f4.  return v0 @kind wide;
}
procedure `long` `getStep`(`kotlin.ranges.ULongProgression` v2 @kind this) @signature `Lkotlin/ranges/ULongProgression;.getStep:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L138708.  v0:= v2.`kotlin.ranges.ULongProgression.c` @type ^`long` @kind wide;
  #L13870c.  return v0 @kind wide;
}
procedure `int` `hashCode`(`kotlin.ranges.ULongProgression` v7 @kind this) @signature `Lkotlin/ranges/ULongProgression;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L13857c.  call temp:= `isEmpty`(v7) @signature `Lkotlin/ranges/ULongProgression;.isEmpty:()Z` @kind virtual;
  #L138582.  v0:= temp;
  #L138584.  if v0 == 0 then goto L13858c;
  #L138588.  v0:= -1I;
  #L13858a.  goto L1385e2;
  #L13858c.  v0:= v7.`kotlin.ranges.ULongProgression.a` @type ^`long` @kind wide;
  #L138590.  v2:= 32I;
  #L138594.  v3:= v0 ^>> v2 @kind long;
  #L138598.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L13859e.  v3:= temp @kind wide;
  #L1385a0.  v0:= v0 ^~ v3 @kind long;
  #L1385a2.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L1385a8.  v0:= temp @kind wide;
  #L1385aa.  v1:= (`int`) v0 @kind l2i;
  #L1385ac.  v1:= v1 * 31;
  #L1385b0.  v3:= v7.`kotlin.ranges.ULongProgression.b` @type ^`long` @kind wide;
  #L1385b4.  v5:= v3 ^>> v2 @kind long;
  #L1385b8.  call temp:= `constructor-impl`(v5) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L1385be.  v5:= temp @kind wide;
  #L1385c0.  v3:= v3 ^~ v5 @kind long;
  #L1385c2.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L1385c8.  v3:= temp @kind wide;
  #L1385ca.  v0:= (`int`) v3 @kind l2i;
  #L1385cc.  v1:= v1 + v0 @kind int;
  #L1385ce.  v1:= v1 * 31;
  #L1385d2.  v3:= v7.`kotlin.ranges.ULongProgression.c` @type ^`long` @kind wide;
  #L1385d6.  v5:= v3 ^>> v2 @kind long;
  #L1385da.  v2:= v3 ^~ v5 @kind long;
  #L1385de.  v0:= (`int`) v2 @kind l2i;
  #L1385e0.  v0:= v0 + v1 @kind int;
  #L1385e2.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.ranges.ULongProgression` v7 @kind this) @signature `Lkotlin/ranges/ULongProgression;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L138538.  v0:= v7.`kotlin.ranges.ULongProgression.c` @type ^`long` @kind wide;
  #L13853c.  v2:= 1I;
  #L13853e.  v3:= 0I;
  #L138540.  v4:= 0L;
  #L138544.  v6:= lcmp(v0, v4);
  #L138548.  v0:= v7.`kotlin.ranges.ULongProgression.a` @type ^`long` @kind wide;
  #L13854c.  v4:= v7.`kotlin.ranges.ULongProgression.b` @type ^`long` @kind wide;
  #L138550.  call temp:= `ulongCompare`(v0, v4) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L138556.  v0:= temp;
  #L138558.  if v6 <= 0 then goto L138562;
  #L13855c.  if v0 <= 0 then goto L138568;
  #L138560.  goto L13856a;
  #L138562.  if v0 >= 0 then goto L138568;
  #L138566.  goto L13856a;
  #L138568.  v2:= 0I;
  #L13856a.  return v2;
}
procedure `java.util.Iterator` `iterator`(`kotlin.ranges.ULongProgression` v9 @kind this) @signature `Lkotlin/ranges/ULongProgression;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1386ac.  v8:= new `kotlin.ranges.g`;
  #L1386b0.  v1:= v9.`kotlin.ranges.ULongProgression.a` @type ^`long` @kind wide;
  #L1386b4.  v3:= v9.`kotlin.ranges.ULongProgression.b` @type ^`long` @kind wide;
  #L1386b8.  v5:= v9.`kotlin.ranges.ULongProgression.c` @type ^`long` @kind wide;
  #L1386bc.  v7:= 0I;
  #L1386be.  v0:= v8 @kind object;
  #L1386c0.  call `<init>`(v0, v1, v3, v5, v7) @signature `Lkotlin/ranges/g;.<init>:(JJJLkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1386c6.  return v8 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.ranges.ULongProgression` v6 @kind this) @signature `Lkotlin/ranges/ULongProgression;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1385f4.  v0:= v6.`kotlin.ranges.ULongProgression.c` @type ^`long` @kind wide;
  #L1385f8.  v2:= " step " @kind object;
  #L1385fc.  v3:= 0L;
  #L138600.  v5:= lcmp(v0, v3);
  #L138604.  v0:= new `java.lang.StringBuilder`;
  #L138608.  if v5 <= 0 then goto L13864c;
  #L13860c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L138612.  v3:= v6.`kotlin.ranges.ULongProgression.a` @type ^`long` @kind wide;
  #L138616.  call temp:= `toString-impl`(v3) @signature `Lkotlin/ULong;.toString-impl:(J)Ljava/lang/String;` @kind static;
  #L13861c.  v1:= temp @kind object;
  #L13861e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138624.  v1:= ".." @kind object;
  #L138628.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13862e.  v3:= v6.`kotlin.ranges.ULongProgression.b` @type ^`long` @kind wide;
  #L138632.  call temp:= `toString-impl`(v3) @signature `Lkotlin/ULong;.toString-impl:(J)Ljava/lang/String;` @kind static;
  #L138638.  v1:= temp @kind object;
  #L13863a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138640.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138646.  v1:= v6.`kotlin.ranges.ULongProgression.c` @type ^`long` @kind wide;
  #L13864a.  goto L13868c;
  #L13864c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L138652.  v3:= v6.`kotlin.ranges.ULongProgression.a` @type ^`long` @kind wide;
  #L138656.  call temp:= `toString-impl`(v3) @signature `Lkotlin/ULong;.toString-impl:(J)Ljava/lang/String;` @kind static;
  #L13865c.  v1:= temp @kind object;
  #L13865e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138664.  v1:= " downTo " @kind object;
  #L138668.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13866e.  v3:= v6.`kotlin.ranges.ULongProgression.b` @type ^`long` @kind wide;
  #L138672.  call temp:= `toString-impl`(v3) @signature `Lkotlin/ULong;.toString-impl:(J)Ljava/lang/String;` @kind static;
  #L138678.  v1:= temp @kind object;
  #L13867a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138680.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L138686.  v1:= v6.`kotlin.ranges.ULongProgression.c` @type ^`long` @kind wide;
  #L13868a.  v1:= -v1 @kind long;
  #L13868c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L138692.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L138698.  v0:= temp @kind object;
  #L13869a.  return v0 @kind object;
}
