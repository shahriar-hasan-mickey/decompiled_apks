record `kotlin.ranges.CharProgression` @kind class @AccessFlag PUBLIC extends `java.lang.Iterable` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
  `char` `kotlin.ranges.CharProgression.a` @AccessFlag PRIVATE_FINAL;
  `char` `kotlin.ranges.CharProgression.b` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.ranges.CharProgression.c` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.ranges.CharProgression$Companion` `@@kotlin.ranges.CharProgression.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/ranges/CharProgression;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1347e4.  v0:= new `kotlin.ranges.CharProgression$Companion`;
  #L1347e8.  v1:= 0I;
  #L1347ea.  call `<init>`(v0, v1) @signature `Lkotlin/ranges/CharProgression$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1347f0.  `@@kotlin.ranges.CharProgression.Companion` @type ^`kotlin.ranges.CharProgression$Companion` := v0 @kind object;
  #L1347f4.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.CharProgression` v1 @kind this, `char` v2 , `char` v3 , `int` v4 ) @signature `Lkotlin/ranges/CharProgression;.<init>:(CCI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L134808.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13480e.  if v4 == 0 then goto L134842;
  #L134812.  v0:= -2147483648I;
  #L134816.  if v4 == v0 then goto L134832;
  #L13481a.  v1.`kotlin.ranges.CharProgression.a` @type ^`char` := v2 @kind char;
  #L13481e.  call temp:= `getProgressionLastElement`(v2, v3, v4) @signature `Lkotlin/internal/ProgressionUtilKt;.getProgressionLastElement:(III)I` @kind static;
  #L134824.  v2:= temp;
  #L134826.  v2:= (`char`) v2 @kind i2c;
  #L134828.  v1.`kotlin.ranges.CharProgression.b` @type ^`char` := v2 @kind char;
  #L13482c.  v1.`kotlin.ranges.CharProgression.c` @type ^`int` := v4;
  #L134830.  return @kind void;
  #L134832.  v2:= new `java.lang.IllegalArgumentException`;
  #L134836.  v3:= "Step must be greater than Int.MIN_VALUE to avoid overflow on negation." @kind object;
  #L13483a.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L134840.  throw v2;
  #L134842.  v2:= new `java.lang.IllegalArgumentException`;
  #L134846.  v3:= "Step must be non-zero." @kind object;
  #L13484a.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L134850.  throw v2;
}
procedure `boolean` `equals`(`kotlin.ranges.CharProgression` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/ranges/CharProgression;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1345d4.  v0:= instanceof @variable v3 @type ^`kotlin.ranges.CharProgression` @kind boolean;
  #L1345d8.  if v0 == 0 then goto L134626;
  #L1345dc.  call temp:= `isEmpty`(v2) @signature `Lkotlin/ranges/CharProgression;.isEmpty:()Z` @kind virtual;
  #L1345e2.  v0:= temp;
  #L1345e4.  if v0 == 0 then goto L1345fa;
  #L1345e8.  v0:= v3 @kind object;
  #L1345ea.  v0:= (`kotlin.ranges.CharProgression`) v0 @kind object;
  #L1345ee.  call temp:= `isEmpty`(v0) @signature `Lkotlin/ranges/CharProgression;.isEmpty:()Z` @kind virtual;
  #L1345f4.  v0:= temp;
  #L1345f6.  if v0 != 0 then goto L134622;
  #L1345fa.  v0:= v2.`kotlin.ranges.CharProgression.a` @type ^`char` @kind char;
  #L1345fe.  v3:= (`kotlin.ranges.CharProgression`) v3 @kind object;
  #L134602.  v1:= v3.`kotlin.ranges.CharProgression.a` @type ^`char` @kind char;
  #L134606.  if v0 != v1 then goto L134626;
  #L13460a.  v0:= v2.`kotlin.ranges.CharProgression.b` @type ^`char` @kind char;
  #L13460e.  v1:= v3.`kotlin.ranges.CharProgression.b` @type ^`char` @kind char;
  #L134612.  if v0 != v1 then goto L134626;
  #L134616.  v0:= v2.`kotlin.ranges.CharProgression.c` @type ^`int`;
  #L13461a.  v3:= v3.`kotlin.ranges.CharProgression.c` @type ^`int`;
  #L13461e.  if v0 != v3 then goto L134626;
  #L134622.  v3:= 1I;
  #L134624.  goto L134628;
  #L134626.  v3:= 0I;
  #L134628.  return v3;
}
procedure `char` `getFirst`(`kotlin.ranges.CharProgression` v1 @kind this) @signature `Lkotlin/ranges/CharProgression;.getFirst:()C` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L134688.  v0:= v1.`kotlin.ranges.CharProgression.a` @type ^`char` @kind char;
  #L13468c.  return v0;
}
procedure `char` `getLast`(`kotlin.ranges.CharProgression` v1 @kind this) @signature `Lkotlin/ranges/CharProgression;.getLast:()C` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1346a0.  v0:= v1.`kotlin.ranges.CharProgression.b` @type ^`char` @kind char;
  #L1346a4.  return v0;
}
procedure `int` `getStep`(`kotlin.ranges.CharProgression` v1 @kind this) @signature `Lkotlin/ranges/CharProgression;.getStep:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1346b8.  v0:= v1.`kotlin.ranges.CharProgression.c` @type ^`int`;
  #L1346bc.  return v0;
}
procedure `int` `hashCode`(`kotlin.ranges.CharProgression` v2 @kind this) @signature `Lkotlin/ranges/CharProgression;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1346d0.  call temp:= `isEmpty`(v2) @signature `Lkotlin/ranges/CharProgression;.isEmpty:()Z` @kind virtual;
  #L1346d6.  v0:= temp;
  #L1346d8.  if v0 == 0 then goto L1346e0;
  #L1346dc.  v0:= -1I;
  #L1346de.  goto L1346f8;
  #L1346e0.  v0:= v2.`kotlin.ranges.CharProgression.a` @type ^`char` @kind char;
  #L1346e4.  v0:= v0 * 31;
  #L1346e8.  v1:= v2.`kotlin.ranges.CharProgression.b` @type ^`char` @kind char;
  #L1346ec.  v0:= v0 + v1 @kind int;
  #L1346ee.  v0:= v0 * 31;
  #L1346f2.  v1:= v2.`kotlin.ranges.CharProgression.c` @type ^`int`;
  #L1346f6.  v0:= v0 + v1 @kind int;
  #L1346f8.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.ranges.CharProgression` v4 @kind this) @signature `Lkotlin/ranges/CharProgression;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13463c.  v0:= v4.`kotlin.ranges.CharProgression.c` @type ^`int`;
  #L134640.  v1:= 1I;
  #L134642.  v2:= 0I;
  #L134644.  if v0 <= 0 then goto L13465e;
  #L134648.  v0:= v4.`kotlin.ranges.CharProgression.a` @type ^`char` @kind char;
  #L13464c.  v3:= v4.`kotlin.ranges.CharProgression.b` @type ^`char` @kind char;
  #L134650.  call temp:= `compare`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L134656.  v0:= temp;
  #L134658.  if v0 <= 0 then goto L134674;
  #L13465c.  goto L134676;
  #L13465e.  v0:= v4.`kotlin.ranges.CharProgression.a` @type ^`char` @kind char;
  #L134662.  v3:= v4.`kotlin.ranges.CharProgression.b` @type ^`char` @kind char;
  #L134666.  call temp:= `compare`(v0, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L13466c.  v0:= temp;
  #L13466e.  if v0 >= 0 then goto L134674;
  #L134672.  goto L134676;
  #L134674.  v1:= 0I;
  #L134676.  return v1;
}
procedure `java.util.Iterator` `iterator`(`kotlin.ranges.CharProgression` v1 @kind this) @signature `Lkotlin/ranges/CharProgression;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1347a0.  call temp:= `iterator`(v1) @signature `Lkotlin/ranges/CharProgression;.iterator:()Lkotlin/collections/CharIterator;` @kind virtual;
  #L1347a6.  v0:= temp @kind object;
  #L1347a8.  return v0 @kind object;
}
procedure `kotlin.collections.CharIterator` `iterator`(`kotlin.ranges.CharProgression` v4 @kind this) @signature `Lkotlin/ranges/CharProgression;.iterator:()Lkotlin/collections/CharIterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1347bc.  v0:= new `kotlin.ranges.CharProgressionIterator`;
  #L1347c0.  v1:= v4.`kotlin.ranges.CharProgression.a` @type ^`char` @kind char;
  #L1347c4.  v2:= v4.`kotlin.ranges.CharProgression.b` @type ^`char` @kind char;
  #L1347c8.  v3:= v4.`kotlin.ranges.CharProgression.c` @type ^`int`;
  #L1347cc.  call `<init>`(v0, v1, v2, v3) @signature `Lkotlin/ranges/CharProgressionIterator;.<init>:(CCI)V` @kind direct;
  #L1347d2.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.ranges.CharProgression` v3 @kind this) @signature `Lkotlin/ranges/CharProgression;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L13470c.  v0:= v3.`kotlin.ranges.CharProgression.c` @type ^`int`;
  #L134710.  v1:= " step " @kind object;
  #L134714.  if v0 <= 0 then goto L13474c;
  #L134718.  v0:= new `java.lang.StringBuilder`;
  #L13471c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L134722.  v2:= v3.`kotlin.ranges.CharProgression.a` @type ^`char` @kind char;
  #L134726.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L13472c.  v2:= ".." @kind object;
  #L134730.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L134736.  v2:= v3.`kotlin.ranges.CharProgression.b` @type ^`char` @kind char;
  #L13473a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L134740.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L134746.  v1:= v3.`kotlin.ranges.CharProgression.c` @type ^`int`;
  #L13474a.  goto L134780;
  #L13474c.  v0:= new `java.lang.StringBuilder`;
  #L134750.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L134756.  v2:= v3.`kotlin.ranges.CharProgression.a` @type ^`char` @kind char;
  #L13475a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L134760.  v2:= " downTo " @kind object;
  #L134764.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13476a.  v2:= v3.`kotlin.ranges.CharProgression.b` @type ^`char` @kind char;
  #L13476e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L134774.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13477a.  v1:= v3.`kotlin.ranges.CharProgression.c` @type ^`int`;
  #L13477e.  v1:= -v1 @kind int;
  #L134780.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L134786.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L13478c.  v0:= temp @kind object;
  #L13478e.  return v0 @kind object;
}
