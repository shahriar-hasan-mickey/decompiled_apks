record `kotlin.ranges.g` @kind class @AccessFlag FINAL extends `kotlin.collections.ULongIterator` @kind class {
  `long` `kotlin.ranges.g.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `kotlin.ranges.g.b` @AccessFlag PRIVATE;
  `long` `kotlin.ranges.g.c` @AccessFlag PRIVATE_FINAL;
  `long` `kotlin.ranges.g.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.ranges.g` v5 @kind this, `long` v6 , `long` v8 , `long` v10 ) @signature `Lkotlin/ranges/g;.<init>:(JJJ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L138448.  call `<init>`(v5) @signature `Lkotlin/collections/ULongIterator;.<init>:()V` @kind direct;
  #L13844e.  v5.`kotlin.ranges.g.a` @type ^`long` := v8 @kind wide;
  #L138452.  v0:= 1I;
  #L138454.  v1:= 0I;
  #L138456.  v2:= 0L;
  #L13845a.  v4:= lcmp(v10, v2);
  #L13845e.  call temp:= `ulongCompare`(v6, v8) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L138464.  v8:= temp;
  #L138466.  if v4 <= 0 then goto L138470;
  #L13846a.  if v8 > 0 then goto L138476;
  #L13846e.  goto L138478;
  #L138470.  if v8 < 0 then goto L138476;
  #L138474.  goto L138478;
  #L138476.  v0:= 0I;
  #L138478.  v5.`kotlin.ranges.g.b` @type ^`boolean` := v0 @kind boolean;
  #L13847c.  call temp:= `constructor-impl`(v10) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L138482.  v8:= temp @kind wide;
  #L138484.  v5.`kotlin.ranges.g.c` @type ^`long` := v8 @kind wide;
  #L138488.  v8:= v5.`kotlin.ranges.g.b` @type ^`boolean` @kind boolean;
  #L13848c.  if v8 == 0 then goto L138492;
  #L138490.  goto L138496;
  #L138492.  v6:= v5.`kotlin.ranges.g.a` @type ^`long` @kind wide;
  #L138496.  v5.`kotlin.ranges.g.d` @type ^`long` := v6 @kind wide;
  #L13849a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.g` v0 @kind this, `long` v1 , `long` v3 , `long` v5 , `kotlin.jvm.internal.DefaultConstructorMarker` v7 @kind object) @signature `Lkotlin/ranges/g;.<init>:(JJJLkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1384ac.  call `<init>`(v0, v1, v3, v5) @signature `Lkotlin/ranges/g;.<init>:(JJJ)V` @kind direct;
  #L1384b2.  return @kind void;
}
procedure `boolean` `hasNext`(`kotlin.ranges.g` v1 @kind this) @signature `Lkotlin/ranges/g;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1383e0.  v0:= v1.`kotlin.ranges.g.b` @type ^`boolean` @kind boolean;
  #L1383e4.  return v0;
}
procedure `long` `nextULong-s-VKNKU`(`kotlin.ranges.g` v5 @kind this) @signature `Lkotlin/ranges/g;.nextULong-s-VKNKU:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1383f8.  v0:= v5.`kotlin.ranges.g.d` @type ^`long` @kind wide;
  #L1383fc.  v2:= v5.`kotlin.ranges.g.a` @type ^`long` @kind wide;
  #L138400.  v4:= lcmp(v0, v2);
  #L138404.  if v4 != 0 then goto L138424;
  #L138408.  v2:= v5.`kotlin.ranges.g.b` @type ^`boolean` @kind boolean;
  #L13840c.  if v2 == 0 then goto L138418;
  #L138410.  v2:= 0I;
  #L138412.  v5.`kotlin.ranges.g.b` @type ^`boolean` := v2 @kind boolean;
  #L138416.  goto L138436;
  #L138418.  v0:= new `java.util.NoSuchElementException`;
  #L13841c.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L138422.  throw v0;
  #L138424.  v2:= v5.`kotlin.ranges.g.c` @type ^`long` @kind wide;
  #L138428.  v2:= v2 + v0 @kind long;
  #L13842a.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L138430.  v2:= temp @kind wide;
  #L138432.  v5.`kotlin.ranges.g.d` @type ^`long` := v2 @kind wide;
  #L138436.  return v0 @kind wide;
}
