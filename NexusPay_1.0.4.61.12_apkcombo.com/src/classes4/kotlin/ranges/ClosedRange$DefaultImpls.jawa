record `kotlin.ranges.ClosedRange$DefaultImpls` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `boolean` `contains`(`kotlin.ranges.ClosedRange` v1 @kind object, `java.lang.Comparable` v2 @kind object) @signature `Lkotlin/ranges/ClosedRange$DefaultImpls;.contains:(Lkotlin/ranges/ClosedRange;Ljava/lang/Comparable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L13506c.  v0:= "value" @kind object;
  #L135070.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L135076.  call temp:= `getStart`(v1) @signature `Lkotlin/ranges/ClosedRange;.getStart:()Ljava/lang/Comparable;` @kind interface;
  #L13507c.  v0:= temp @kind object;
  #L13507e.  call temp:= `compareTo`(v2, v0) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L135084.  v0:= temp;
  #L135086.  if v0 < 0 then goto L1350a2;
  #L13508a.  call temp:= `getEndInclusive`(v1) @signature `Lkotlin/ranges/ClosedRange;.getEndInclusive:()Ljava/lang/Comparable;` @kind interface;
  #L135090.  v1:= temp @kind object;
  #L135092.  call temp:= `compareTo`(v2, v1) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L135098.  v1:= temp;
  #L13509a.  if v1 > 0 then goto L1350a2;
  #L13509e.  v1:= 1I;
  #L1350a0.  goto L1350a4;
  #L1350a2.  v1:= 0I;
  #L1350a4.  return v1;
}
procedure `boolean` `isEmpty`(`kotlin.ranges.ClosedRange` v1 @kind object) @signature `Lkotlin/ranges/ClosedRange$DefaultImpls;.isEmpty:(Lkotlin/ranges/ClosedRange;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1350b8.  call temp:= `getStart`(v1) @signature `Lkotlin/ranges/ClosedRange;.getStart:()Ljava/lang/Comparable;` @kind interface;
  #L1350be.  v0:= temp @kind object;
  #L1350c0.  call temp:= `getEndInclusive`(v1) @signature `Lkotlin/ranges/ClosedRange;.getEndInclusive:()Ljava/lang/Comparable;` @kind interface;
  #L1350c6.  v1:= temp @kind object;
  #L1350c8.  call temp:= `compareTo`(v0, v1) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L1350ce.  v1:= temp;
  #L1350d0.  if v1 <= 0 then goto L1350d8;
  #L1350d4.  v1:= 1I;
  #L1350d6.  goto L1350da;
  #L1350d8.  v1:= 0I;
  #L1350da.  return v1;
}
