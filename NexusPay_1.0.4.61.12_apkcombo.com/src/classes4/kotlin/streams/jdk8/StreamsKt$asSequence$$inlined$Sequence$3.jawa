record `kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.sequences.Sequence` @kind interface {
  `java.util.stream.LongStream` `kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3` v0 @kind this, `java.util.stream.LongStream` v1 @kind object) @signature `Lkotlin/streams/jdk8/StreamsKt$asSequence$$inlined$Sequence$3;.<init>:(Ljava/util/stream/LongStream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1425f4.  v0.`kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3.a` @type ^`java.util.stream.LongStream` := v1 @kind object;
  #L1425f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1425fe.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3` v2 @kind this) @signature `Lkotlin/streams/jdk8/StreamsKt$asSequence$$inlined$Sequence$3;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1425cc.  v0:= v2.`kotlin.streams.jdk8.StreamsKt$asSequence$$inlined$Sequence$3.a` @type ^`java.util.stream.LongStream` @kind object;
  #L1425d0.  call temp:= `iterator`(v0) @signature `Ljava/util/stream/LongStream;.iterator:()Ljava/util/PrimitiveIterator$OfLong;` @kind interface;
  #L1425d6.  v0:= temp @kind object;
  #L1425d8.  v1:= "iterator()" @kind object;
  #L1425dc.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1425e2.  return v0 @kind object;
}
