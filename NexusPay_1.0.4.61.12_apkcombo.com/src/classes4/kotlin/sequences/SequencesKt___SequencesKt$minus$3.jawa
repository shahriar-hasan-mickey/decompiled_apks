record `kotlin.sequences.SequencesKt___SequencesKt$minus$3` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.sequences.Sequence` @kind interface {
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt___SequencesKt$minus$3.a` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Iterable` `kotlin.sequences.SequencesKt___SequencesKt$minus$3.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$minus$3` v0 @kind this, `kotlin.sequences.Sequence` v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$3;.<init>:(Lkotlin/sequences/Sequence;Ljava/lang/Iterable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L13d72c.  v0.`kotlin.sequences.SequencesKt___SequencesKt$minus$3.a` @type ^`kotlin.sequences.Sequence` := v1 @kind object;
  #L13d730.  v0.`kotlin.sequences.SequencesKt___SequencesKt$minus$3.b` @type ^`java.lang.Iterable` := v2 @kind object;
  #L13d734.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13d73a.  return @kind void;
}
procedure `java.util.Iterator` `iterator`(`kotlin.sequences.SequencesKt___SequencesKt$minus$3` v3 @kind this) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$3;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L13d6d4.  v0:= v3.`kotlin.sequences.SequencesKt___SequencesKt$minus$3.b` @type ^`java.lang.Iterable` @kind object;
  #L13d6d8.  call temp:= `convertToSetForSetOperation`(v0) @signature `Lkotlin/collections/CollectionsKt;.convertToSetForSetOperation:(Ljava/lang/Iterable;)Ljava/util/Collection;` @kind static;
  #L13d6de.  v0:= temp @kind object;
  #L13d6e0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L13d6e6.  v1:= temp;
  #L13d6e8.  if v1 == 0 then goto L13d6fa;
  #L13d6ec.  v0:= v3.`kotlin.sequences.SequencesKt___SequencesKt$minus$3.a` @type ^`kotlin.sequences.Sequence` @kind object;
  #L13d6f0.  call temp:= `iterator`(v0) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13d6f6.  v0:= temp @kind object;
  #L13d6f8.  return v0 @kind object;
  #L13d6fa.  v1:= v3.`kotlin.sequences.SequencesKt___SequencesKt$minus$3.a` @type ^`kotlin.sequences.Sequence` @kind object;
  #L13d6fe.  v2:= new `kotlin.sequences.SequencesKt___SequencesKt$minus$3$a`;
  #L13d702.  call `<init>`(v2, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$minus$3$a;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L13d708.  call temp:= `filterNot`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.filterNot:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L13d70e.  v0:= temp @kind object;
  #L13d710.  call temp:= `iterator`(v0) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13d716.  v0:= temp @kind object;
  #L13d718.  return v0 @kind object;
}
