record `kotlin.sequences.SequencesKt___SequencesKt$s` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$s.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$s.c` @AccessFlag ;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$s.d` @AccessFlag ;
  `int` `kotlin.sequences.SequencesKt___SequencesKt$s.e` @AccessFlag ;
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt___SequencesKt$s.f` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlin.sequences.SequencesKt___SequencesKt$s.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$s` v0 @kind this, `kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$s;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L13e258.  v0.`kotlin.sequences.SequencesKt___SequencesKt$s.f` @type ^`kotlin.sequences.Sequence` := v1 @kind object;
  #L13e25c.  v0.`kotlin.sequences.SequencesKt___SequencesKt$s.g` @type ^`kotlin.jvm.functions.Function2` := v2 @kind object;
  #L13e260.  v1:= 2I;
  #L13e262.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L13e268.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlin.sequences.SequencesKt___SequencesKt$s` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$s;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L13e224.  v0:= "completion" @kind object;
  #L13e228.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13e22e.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$s`;
  #L13e232.  v1:= v3.`kotlin.sequences.SequencesKt___SequencesKt$s.f` @type ^`kotlin.sequences.Sequence` @kind object;
  #L13e236.  v2:= v3.`kotlin.sequences.SequencesKt___SequencesKt$s.g` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L13e23a.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$s;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L13e240.  v0.`kotlin.sequences.SequencesKt___SequencesKt$s.b` @type ^`java.lang.Object` := v4 @kind object;
  #L13e244.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$s` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$s;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L13e11c.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L13e120.  call temp:= `create`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$s;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L13e126.  v1:= temp @kind object;
  #L13e128.  v1:= (`kotlin.sequences.SequencesKt___SequencesKt$s`) v1 @kind object;
  #L13e12c.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L13e130.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$s;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L13e136.  v1:= temp @kind object;
  #L13e138.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlin.sequences.SequencesKt___SequencesKt$s` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$s;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L13e14c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L13e152.  v0:= temp @kind object;
  #L13e154.  v1:= v7.`kotlin.sequences.SequencesKt___SequencesKt$s.e` @type ^`int`;
  #L13e158.  v2:= 1I;
  #L13e15a.  if v1 == 0 then goto L13e190;
  #L13e15e.  if v1 != v2 then goto L13e180;
  #L13e162.  v1:= v7.`kotlin.sequences.SequencesKt___SequencesKt$s.d` @type ^`java.lang.Object` @kind object;
  #L13e166.  v3:= v7.`kotlin.sequences.SequencesKt___SequencesKt$s.c` @type ^`java.lang.Object` @kind object;
  #L13e16a.  v3:= (`java.util.Iterator`) v3 @kind object;
  #L13e16e.  v4:= v7.`kotlin.sequences.SequencesKt___SequencesKt$s.b` @type ^`java.lang.Object` @kind object;
  #L13e172.  v4:= (`kotlin.sequences.SequenceScope`) v4 @kind object;
  #L13e176.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L13e17c.  v8:= v1 @kind object;
  #L13e17e.  goto L13e1ca;
  #L13e180.  v8:= new `java.lang.IllegalStateException`;
  #L13e184.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L13e188.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13e18e.  throw v8;
  #L13e190.  call `throwOnFailure`(v8) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L13e196.  v8:= v7.`kotlin.sequences.SequencesKt___SequencesKt$s.b` @type ^`java.lang.Object` @kind object;
  #L13e19a.  v8:= (`kotlin.sequences.SequenceScope`) v8 @kind object;
  #L13e19e.  v1:= v7.`kotlin.sequences.SequencesKt___SequencesKt$s.f` @type ^`kotlin.sequences.Sequence` @kind object;
  #L13e1a2.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13e1a8.  v1:= temp @kind object;
  #L13e1aa.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L13e1b0.  v3:= temp;
  #L13e1b2.  if v3 != 0 then goto L13e1bc;
  #L13e1b6.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L13e1ba.  return v8 @kind object;
  #L13e1bc.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L13e1c2.  v3:= temp @kind object;
  #L13e1c4.  v4:= v8 @kind object;
  #L13e1c6.  v8:= v3 @kind object;
  #L13e1c8.  v3:= v1 @kind object;
  #L13e1ca.  v1:= v7 @kind object;
  #L13e1cc.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L13e1d2.  v5:= temp;
  #L13e1d4.  if v5 == 0 then goto L13e20e;
  #L13e1d8.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L13e1de.  v5:= temp @kind object;
  #L13e1e0.  v6:= v1.`kotlin.sequences.SequencesKt___SequencesKt$s.g` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L13e1e4.  call temp:= `invoke`(v6, v8, v5) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13e1ea.  v8:= temp @kind object;
  #L13e1ec.  v1.`kotlin.sequences.SequencesKt___SequencesKt$s.b` @type ^`java.lang.Object` := v4 @kind object;
  #L13e1f0.  v1.`kotlin.sequences.SequencesKt___SequencesKt$s.c` @type ^`java.lang.Object` := v3 @kind object;
  #L13e1f4.  v1.`kotlin.sequences.SequencesKt___SequencesKt$s.d` @type ^`java.lang.Object` := v5 @kind object;
  #L13e1f8.  v1.`kotlin.sequences.SequencesKt___SequencesKt$s.e` @type ^`int` := v2;
  #L13e1fc.  call temp:= `yield`(v4, v8, v1) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L13e202.  v8:= temp @kind object;
  #L13e204.  if v8 != v0 then goto L13e20a;
  #L13e208.  return v0 @kind object;
  #L13e20a.  v8:= v5 @kind object;
  #L13e20c.  goto L13e1cc;
  #L13e20e.  v8:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L13e212.  return v8 @kind object;
}
