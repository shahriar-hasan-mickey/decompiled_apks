record `kotlin.sequences.SequencesKt___SequencesKt$p` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$p.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$p.c` @AccessFlag ;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$p.d` @AccessFlag ;
  `int` `kotlin.sequences.SequencesKt___SequencesKt$p.e` @AccessFlag ;
  `int` `kotlin.sequences.SequencesKt___SequencesKt$p.f` @AccessFlag ;
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt___SequencesKt$p.g` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlin.sequences.SequencesKt___SequencesKt$p.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$p` v0 @kind this, `kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function3` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$p;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L13df78.  v0.`kotlin.sequences.SequencesKt___SequencesKt$p.g` @type ^`kotlin.sequences.Sequence` := v1 @kind object;
  #L13df7c.  v0.`kotlin.sequences.SequencesKt___SequencesKt$p.h` @type ^`kotlin.jvm.functions.Function3` := v2 @kind object;
  #L13df80.  v1:= 2I;
  #L13df82.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L13df88.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlin.sequences.SequencesKt___SequencesKt$p` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$p;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L13df44.  v0:= "completion" @kind object;
  #L13df48.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13df4e.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$p`;
  #L13df52.  v1:= v3.`kotlin.sequences.SequencesKt___SequencesKt$p.g` @type ^`kotlin.sequences.Sequence` @kind object;
  #L13df56.  v2:= v3.`kotlin.sequences.SequencesKt___SequencesKt$p.h` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L13df5a.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$p;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L13df60.  v0.`kotlin.sequences.SequencesKt___SequencesKt$p.b` @type ^`java.lang.Object` := v4 @kind object;
  #L13df64.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$p` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$p;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L13dde0.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L13dde4.  call temp:= `create`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$p;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L13ddea.  v1:= temp @kind object;
  #L13ddec.  v1:= (`kotlin.sequences.SequencesKt___SequencesKt$p`) v1 @kind object;
  #L13ddf0.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L13ddf4.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$p;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L13ddfa.  v1:= temp @kind object;
  #L13ddfc.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlin.sequences.SequencesKt___SequencesKt$p` v10 @kind this, `java.lang.Object` v11 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$p;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L13de10.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L13de16.  v0:= temp @kind object;
  #L13de18.  v1:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.f` @type ^`int`;
  #L13de1c.  v2:= 2I;
  #L13de1e.  v3:= 1I;
  #L13de20.  if v1 == 0 then goto L13de80;
  #L13de24.  if v1 == v3 then goto L13de64;
  #L13de28.  if v1 != v2 then goto L13de54;
  #L13de2c.  v1:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.e` @type ^`int`;
  #L13de30.  v3:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.d` @type ^`java.lang.Object` @kind object;
  #L13de34.  v4:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.c` @type ^`java.lang.Object` @kind object;
  #L13de38.  v4:= (`java.util.Iterator`) v4 @kind object;
  #L13de3c.  v5:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.b` @type ^`java.lang.Object` @kind object;
  #L13de40.  v5:= (`kotlin.sequences.SequenceScope`) v5 @kind object;
  #L13de44.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L13de4a.  v11:= v10 @kind object;
  #L13de4c.  v9:= v3 @kind object;
  #L13de4e.  v3:= v1;
  #L13de50.  v1:= v9 @kind object;
  #L13de52.  goto L13ded0;
  #L13de54.  v11:= new `java.lang.IllegalStateException`;
  #L13de58.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L13de5c.  call `<init>`(v11, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13de62.  throw v11;
  #L13de64.  v1:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.d` @type ^`java.lang.Object` @kind object;
  #L13de68.  v4:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.c` @type ^`java.lang.Object` @kind object;
  #L13de6c.  v4:= (`java.util.Iterator`) v4 @kind object;
  #L13de70.  v5:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.b` @type ^`java.lang.Object` @kind object;
  #L13de74.  v5:= (`kotlin.sequences.SequenceScope`) v5 @kind object;
  #L13de78.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L13de7e.  goto L13dece;
  #L13de80.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L13de86.  v11:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.b` @type ^`java.lang.Object` @kind object;
  #L13de8a.  v5:= v11 @kind object;
  #L13de8c.  v5:= (`kotlin.sequences.SequenceScope`) v5 @kind object;
  #L13de90.  v11:= v10.`kotlin.sequences.SequencesKt___SequencesKt$p.g` @type ^`kotlin.sequences.Sequence` @kind object;
  #L13de94.  call temp:= `iterator`(v11) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13de9a.  v4:= temp @kind object;
  #L13de9c.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L13dea2.  v11:= temp;
  #L13dea4.  if v11 == 0 then goto L13df2e;
  #L13dea8.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L13deae.  v1:= temp @kind object;
  #L13deb0.  v10.`kotlin.sequences.SequencesKt___SequencesKt$p.b` @type ^`java.lang.Object` := v5 @kind object;
  #L13deb4.  v10.`kotlin.sequences.SequencesKt___SequencesKt$p.c` @type ^`java.lang.Object` := v4 @kind object;
  #L13deb8.  v10.`kotlin.sequences.SequencesKt___SequencesKt$p.d` @type ^`java.lang.Object` := v1 @kind object;
  #L13debc.  v10.`kotlin.sequences.SequencesKt___SequencesKt$p.f` @type ^`int` := v3;
  #L13dec0.  call temp:= `yield`(v5, v1, v10) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L13dec6.  v11:= temp @kind object;
  #L13dec8.  if v11 != v0 then goto L13dece;
  #L13decc.  return v0 @kind object;
  #L13dece.  v11:= v10 @kind object;
  #L13ded0.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L13ded6.  v6:= temp;
  #L13ded8.  if v6 == 0 then goto L13df2e;
  #L13dedc.  v6:= v11.`kotlin.sequences.SequencesKt___SequencesKt$p.h` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L13dee0.  v7:= v3 + 1;
  #L13dee4.  if v3 >= 0 then goto L13deee;
  #L13dee8.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L13deee.  call temp:= `boxInt`(v3) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxInt:(I)Ljava/lang/Integer;` @kind static;
  #L13def4.  v3:= temp @kind object;
  #L13def6.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L13defc.  v8:= temp @kind object;
  #L13defe.  call temp:= `invoke`(v6, v3, v1, v8) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13df04.  v3:= temp @kind object;
  #L13df06.  v11.`kotlin.sequences.SequencesKt___SequencesKt$p.b` @type ^`java.lang.Object` := v5 @kind object;
  #L13df0a.  v11.`kotlin.sequences.SequencesKt___SequencesKt$p.c` @type ^`java.lang.Object` := v4 @kind object;
  #L13df0e.  v11.`kotlin.sequences.SequencesKt___SequencesKt$p.d` @type ^`java.lang.Object` := v3 @kind object;
  #L13df12.  v11.`kotlin.sequences.SequencesKt___SequencesKt$p.e` @type ^`int` := v7;
  #L13df16.  v11.`kotlin.sequences.SequencesKt___SequencesKt$p.f` @type ^`int` := v2;
  #L13df1a.  call temp:= `yield`(v5, v3, v11) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L13df20.  v1:= temp @kind object;
  #L13df22.  if v1 != v0 then goto L13df28;
  #L13df26.  return v0 @kind object;
  #L13df28.  v1:= v3 @kind object;
  #L13df2a.  v3:= v7;
  #L13df2c.  goto L13ded0;
  #L13df2e.  v11:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L13df32.  return v11 @kind object;
}
