record `kotlin.sequences.SequencesKt__SequencesKt$g` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlin.sequences.SequencesKt__SequencesKt$g.b` @AccessFlag PRIVATE_SYNTHETIC;
  `int` `kotlin.sequences.SequencesKt__SequencesKt$g.c` @AccessFlag ;
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt__SequencesKt$g.d` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function0` `kotlin.sequences.SequencesKt__SequencesKt$g.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt__SequencesKt$g` v0 @kind this, `kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function0` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$g;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L13c888.  v0.`kotlin.sequences.SequencesKt__SequencesKt$g.d` @type ^`kotlin.sequences.Sequence` := v1 @kind object;
  #L13c88c.  v0.`kotlin.sequences.SequencesKt__SequencesKt$g.e` @type ^`kotlin.jvm.functions.Function0` := v2 @kind object;
  #L13c890.  v1:= 2I;
  #L13c892.  call `<init>`(v0, v1, v3) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L13c898.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlin.sequences.SequencesKt__SequencesKt$g` v3 @kind this, `java.lang.Object` v4 @kind object, `kotlin.coroutines.Continuation` v5 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$g;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L13c854.  v0:= "completion" @kind object;
  #L13c858.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13c85e.  v0:= new `kotlin.sequences.SequencesKt__SequencesKt$g`;
  #L13c862.  v1:= v3.`kotlin.sequences.SequencesKt__SequencesKt$g.d` @type ^`kotlin.sequences.Sequence` @kind object;
  #L13c866.  v2:= v3.`kotlin.sequences.SequencesKt__SequencesKt$g.e` @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L13c86a.  call `<init>`(v0, v1, v2, v5) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$g;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L13c870.  v0.`kotlin.sequences.SequencesKt__SequencesKt$g.b` @type ^`java.lang.Object` := v4 @kind object;
  #L13c874.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt__SequencesKt$g` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$g;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L13c77c.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L13c780.  call temp:= `create`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$g;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L13c786.  v1:= temp @kind object;
  #L13c788.  v1:= (`kotlin.sequences.SequencesKt__SequencesKt$g`) v1 @kind object;
  #L13c78c.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L13c790.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$g;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L13c796.  v1:= temp @kind object;
  #L13c798.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlin.sequences.SequencesKt__SequencesKt$g` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$g;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L13c7ac.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L13c7b2.  v0:= temp @kind object;
  #L13c7b4.  v1:= v5.`kotlin.sequences.SequencesKt__SequencesKt$g.c` @type ^`int`;
  #L13c7b8.  v2:= 2I;
  #L13c7ba.  v3:= 1I;
  #L13c7bc.  if v1 == 0 then goto L13c7e2;
  #L13c7c0.  if v1 == v3 then goto L13c7da;
  #L13c7c4.  if v1 != v2 then goto L13c7ca;
  #L13c7c8.  goto L13c7da;
  #L13c7ca.  v6:= new `java.lang.IllegalStateException`;
  #L13c7ce.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L13c7d2.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13c7d8.  throw v6;
  #L13c7da.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L13c7e0.  goto L13c83c;
  #L13c7e2.  call `throwOnFailure`(v6) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L13c7e8.  v6:= v5.`kotlin.sequences.SequencesKt__SequencesKt$g.b` @type ^`java.lang.Object` @kind object;
  #L13c7ec.  v6:= (`kotlin.sequences.SequenceScope`) v6 @kind object;
  #L13c7f0.  v1:= v5.`kotlin.sequences.SequencesKt__SequencesKt$g.d` @type ^`kotlin.sequences.Sequence` @kind object;
  #L13c7f4.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13c7fa.  v1:= temp @kind object;
  #L13c7fc.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L13c802.  v4:= temp;
  #L13c804.  if v4 == 0 then goto L13c81a;
  #L13c808.  v5.`kotlin.sequences.SequencesKt__SequencesKt$g.c` @type ^`int` := v3;
  #L13c80c.  call temp:= `yieldAll`(v6, v1, v5) @signature `Lkotlin/sequences/SequenceScope;.yieldAll:(Ljava/util/Iterator;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L13c812.  v6:= temp @kind object;
  #L13c814.  if v6 != v0 then goto L13c83c;
  #L13c818.  return v0 @kind object;
  #L13c81a.  v1:= v5.`kotlin.sequences.SequencesKt__SequencesKt$g.e` @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L13c81e.  call temp:= `invoke`(v1) @signature `Lkotlin/jvm/functions/Function0;.invoke:()Ljava/lang/Object;` @kind interface;
  #L13c824.  v1:= temp @kind object;
  #L13c826.  v1:= (`kotlin.sequences.Sequence`) v1 @kind object;
  #L13c82a.  v5.`kotlin.sequences.SequencesKt__SequencesKt$g.c` @type ^`int` := v2;
  #L13c82e.  call temp:= `yieldAll`(v6, v1, v5) @signature `Lkotlin/sequences/SequenceScope;.yieldAll:(Lkotlin/sequences/Sequence;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L13c834.  v6:= temp @kind object;
  #L13c836.  if v6 != v0 then goto L13c83c;
  #L13c83a.  return v0 @kind object;
  #L13c83c.  v6:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L13c840.  return v6 @kind object;
}
