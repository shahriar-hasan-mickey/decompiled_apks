record `kotlin.sequences.f` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.sequences.f` v0 @kind this) @signature `Lkotlin/sequences/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L142514.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14251a.  return @kind void;
}
procedure `int` `sumOfUByte`(`kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/f;.sumOfUByte:(Lkotlin/sequences/Sequence;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1423a8.  v0:= "$this$sum" @kind object;
  #L1423ac.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1423b2.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1423b8.  v2:= temp @kind object;
  #L1423ba.  v0:= 0I;
  #L1423bc.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1423c2.  v1:= temp;
  #L1423c4.  if v1 == 0 then goto L1423f4;
  #L1423c8.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1423ce.  v1:= temp @kind object;
  #L1423d0.  v1:= (`kotlin.UByte`) v1 @kind object;
  #L1423d4.  call temp:= `unbox-impl`(v1) @signature `Lkotlin/UByte;.unbox-impl:()B` @kind virtual;
  #L1423da.  v1:= temp;
  #L1423dc.  v1:= v1 ^& 255;
  #L1423e0.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L1423e6.  v1:= temp;
  #L1423e8.  v0:= v0 + v1 @kind int;
  #L1423ea.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L1423f0.  v0:= temp;
  #L1423f2.  goto L1423bc;
  #L1423f4.  return v0;
}
procedure `int` `sumOfUInt`(`kotlin.sequences.Sequence` v2 @kind object) @signature `Lkotlin/sequences/f;.sumOfUInt:(Lkotlin/sequences/Sequence;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L142408.  v0:= "$this$sum" @kind object;
  #L14240c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L142412.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L142418.  v2:= temp @kind object;
  #L14241a.  v0:= 0I;
  #L14241c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L142422.  v1:= temp;
  #L142424.  if v1 == 0 then goto L142448;
  #L142428.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L14242e.  v1:= temp @kind object;
  #L142430.  v1:= (`kotlin.UInt`) v1 @kind object;
  #L142434.  call temp:= `unbox-impl`(v1) @signature `Lkotlin/UInt;.unbox-impl:()I` @kind virtual;
  #L14243a.  v1:= temp;
  #L14243c.  v0:= v0 + v1 @kind int;
  #L14243e.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L142444.  v0:= temp;
  #L142446.  goto L14241c;
  #L142448.  return v0;
}
procedure `long` `sumOfULong`(`kotlin.sequences.Sequence` v4 @kind object) @signature `Lkotlin/sequences/f;.sumOfULong:(Lkotlin/sequences/Sequence;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1424c0.  v0:= "$this$sum" @kind object;
  #L1424c4.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1424ca.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1424d0.  v4:= temp @kind object;
  #L1424d2.  v0:= 0L;
  #L1424d6.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1424dc.  v2:= temp;
  #L1424de.  if v2 == 0 then goto L142502;
  #L1424e2.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1424e8.  v2:= temp @kind object;
  #L1424ea.  v2:= (`kotlin.ULong`) v2 @kind object;
  #L1424ee.  call temp:= `unbox-impl`(v2) @signature `Lkotlin/ULong;.unbox-impl:()J` @kind virtual;
  #L1424f4.  v2:= temp @kind wide;
  #L1424f6.  v0:= v0 + v2 @kind long;
  #L1424f8.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L1424fe.  v0:= temp @kind wide;
  #L142500.  goto L1424d6;
  #L142502.  return v0 @kind wide;
}
procedure `int` `sumOfUShort`(`kotlin.sequences.Sequence` v3 @kind object) @signature `Lkotlin/sequences/f;.sumOfUShort:(Lkotlin/sequences/Sequence;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L14245c.  v0:= "$this$sum" @kind object;
  #L142460.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L142466.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L14246c.  v3:= temp @kind object;
  #L14246e.  v0:= 0I;
  #L142470.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L142476.  v1:= temp;
  #L142478.  if v1 == 0 then goto L1424ac;
  #L14247c.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L142482.  v1:= temp @kind object;
  #L142484.  v1:= (`kotlin.UShort`) v1 @kind object;
  #L142488.  call temp:= `unbox-impl`(v1) @signature `Lkotlin/UShort;.unbox-impl:()S` @kind virtual;
  #L14248e.  v1:= temp;
  #L142490.  v2:= 65535I;
  #L142496.  v1:= v1 ^& v2 @kind int;
  #L142498.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L14249e.  v1:= temp;
  #L1424a0.  v0:= v0 + v1 @kind int;
  #L1424a2.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L1424a8.  v0:= temp;
  #L1424aa.  goto L142470;
  #L1424ac.  return v0;
}
