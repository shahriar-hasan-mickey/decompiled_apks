record `kotlin.sequences.SequenceScope` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`kotlin.sequences.SequenceScope` v0 @kind this) @signature `Lkotlin/sequences/SequenceScope;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L13c298.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13c29e.  return @kind void;
}
procedure `java.lang.Object` `yield`(`java.lang.Object` v0 @kind object, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `yieldAll`(`kotlin.sequences.SequenceScope` v1 @kind this, `java.lang.Iterable` v2 @kind object, `kotlin.coroutines.Continuation` v3 @kind object) @signature `Lkotlin/sequences/SequenceScope;.yieldAll:(Ljava/lang/Iterable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13c210.  v0:= instanceof @variable v2 @type ^`java.util.Collection` @kind boolean;
  #L13c214.  if v0 == 0 then goto L13c230;
  #L13c218.  v0:= v2 @kind object;
  #L13c21a.  v0:= (`java.util.Collection`) v0 @kind object;
  #L13c21e.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L13c224.  v0:= temp;
  #L13c226.  if v0 == 0 then goto L13c230;
  #L13c22a.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L13c22e.  return v2 @kind object;
  #L13c230.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13c236.  v2:= temp @kind object;
  #L13c238.  call temp:= `yieldAll`(v1, v2, v3) @signature `Lkotlin/sequences/SequenceScope;.yieldAll:(Ljava/util/Iterator;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L13c23e.  v2:= temp @kind object;
  #L13c240.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L13c246.  v3:= temp @kind object;
  #L13c248.  if v2 != v3 then goto L13c24e;
  #L13c24c.  return v2 @kind object;
  #L13c24e.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L13c252.  return v2 @kind object;
}
procedure `java.lang.Object` `yieldAll`(`java.util.Iterator` v0 @kind object, `kotlin.coroutines.Continuation` v1 @kind object) @signature `Lkotlin/sequences/SequenceScope;.yieldAll:(Ljava/util/Iterator;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `yieldAll`(`kotlin.sequences.SequenceScope` v0 @kind this, `kotlin.sequences.Sequence` v1 @kind object, `kotlin.coroutines.Continuation` v2 @kind object) @signature `Lkotlin/sequences/SequenceScope;.yieldAll:(Lkotlin/sequences/Sequence;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L13c264.  call temp:= `iterator`(v1) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13c26a.  v1:= temp @kind object;
  #L13c26c.  call temp:= `yieldAll`(v0, v1, v2) @signature `Lkotlin/sequences/SequenceScope;.yieldAll:(Ljava/util/Iterator;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L13c272.  v1:= temp @kind object;
  #L13c274.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L13c27a.  v2:= temp @kind object;
  #L13c27c.  if v1 != v2 then goto L13c282;
  #L13c280.  return v1 @kind object;
  #L13c282.  v1:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L13c286.  return v1 @kind object;
}
