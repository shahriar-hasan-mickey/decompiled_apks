record `kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
}
global `kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1` `@@kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/sequences/SequencesKt___SequencesKt$filterIsInstance$1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L13d170.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1`;
  #L13d174.  call `<init>`(v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$filterIsInstance$1;.<init>:()V` @kind direct;
  #L13d17a.  `@@kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1.INSTANCE` @type ^`kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1` := v0 @kind object;
  #L13d17e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1` v1 @kind this) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$filterIsInstance$1;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L13d190.  v0:= 1I;
  #L13d192.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L13d198.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$filterIsInstance$1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L13d14c.  call temp:= `invoke`(v0, v1) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$filterIsInstance$1;.invoke:(Ljava/lang/Object;)Z` @kind virtual;
  #L13d152.  v1:= temp;
  #L13d154.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L13d15a.  v1:= temp @kind object;
  #L13d15c.  return v1 @kind object;
}
procedure `boolean` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$filterIsInstance$1` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$filterIsInstance$1;.invoke:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L13d128.  v0:= 3I;
  #L13d12a.  v1:= "R" @kind object;
  #L13d12e.  call `reifiedOperationMarker`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.reifiedOperationMarker:(ILjava/lang/String;)V` @kind static;
  #L13d134.  v3:= instanceof @variable v3 @type ^`java.lang.Object` @kind boolean;
  #L13d138.  return v3;
}
