record `kotlin.sequences.GeneratorSequence` @kind class @AccessFlag FINAL extends `kotlin.sequences.Sequence` @kind interface {
  `kotlin.jvm.functions.Function0` `kotlin.sequences.GeneratorSequence.a` @AccessFlag PRIVATE_FINAL;
  `kotlin.jvm.functions.Function1` `kotlin.sequences.GeneratorSequence.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.sequences.GeneratorSequence` v1 @kind this, `kotlin.jvm.functions.Function0` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/sequences/GeneratorSequence;.<init>:(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L13bbec.  v0:= "getInitialValue" @kind object;
  #L13bbf0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13bbf6.  v0:= "getNextValue" @kind object;
  #L13bbfa.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13bc00.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13bc06.  v1.`kotlin.sequences.GeneratorSequence.a` @type ^`kotlin.jvm.functions.Function0` := v2 @kind object;
  #L13bc0a.  v1.`kotlin.sequences.GeneratorSequence.b` @type ^`kotlin.jvm.functions.Function1` := v3 @kind object;
  #L13bc0e.  return @kind void;
}
procedure `kotlin.jvm.functions.Function0` `a`(`kotlin.sequences.GeneratorSequence` v0 @kind object) @signature `Lkotlin/sequences/GeneratorSequence;.a:(Lkotlin/sequences/GeneratorSequence;)Lkotlin/jvm/functions/Function0;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L13bbbc.  v0:= v0.`kotlin.sequences.GeneratorSequence.a` @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L13bbc0.  return v0 @kind object;
}
procedure `kotlin.jvm.functions.Function1` `b`(`kotlin.sequences.GeneratorSequence` v0 @kind object) @signature `Lkotlin/sequences/GeneratorSequence;.b:(Lkotlin/sequences/GeneratorSequence;)Lkotlin/jvm/functions/Function1;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L13bbd4.  v0:= v0.`kotlin.sequences.GeneratorSequence.b` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L13bbd8.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`kotlin.sequences.GeneratorSequence` v1 @kind this) @signature `Lkotlin/sequences/GeneratorSequence;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L13bba0.  v0:= new `kotlin.sequences.GeneratorSequence$iterator$1`;
  #L13bba4.  call `<init>`(v0, v1) @signature `Lkotlin/sequences/GeneratorSequence$iterator$1;.<init>:(Lkotlin/sequences/GeneratorSequence;)V` @kind direct;
  #L13bbaa.  return v0 @kind object;
}
