record `kotlin.sequences.SequencesKt___SequencesKt$n` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$n.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$n.c` @AccessFlag ;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$n.d` @AccessFlag ;
  `int` `kotlin.sequences.SequencesKt___SequencesKt$n.e` @AccessFlag ;
  `int` `kotlin.sequences.SequencesKt___SequencesKt$n.f` @AccessFlag ;
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt___SequencesKt$n.g` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlin.sequences.SequencesKt___SequencesKt$n.h` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function3` `kotlin.sequences.SequencesKt___SequencesKt$n.i` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt___SequencesKt$n` v0 @kind this, `kotlin.sequences.Sequence` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function3` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$n;.<init>:(Lkotlin/sequences/Sequence;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L13dc40.  v0.`kotlin.sequences.SequencesKt___SequencesKt$n.g` @type ^`kotlin.sequences.Sequence` := v1 @kind object;
  #L13dc44.  v0.`kotlin.sequences.SequencesKt___SequencesKt$n.h` @type ^`java.lang.Object` := v2 @kind object;
  #L13dc48.  v0.`kotlin.sequences.SequencesKt___SequencesKt$n.i` @type ^`kotlin.jvm.functions.Function3` := v3 @kind object;
  #L13dc4c.  v1:= 2I;
  #L13dc4e.  call `<init>`(v0, v1, v4) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L13dc54.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlin.sequences.SequencesKt___SequencesKt$n` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$n;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13dc08.  v0:= "completion" @kind object;
  #L13dc0c.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13dc12.  v0:= new `kotlin.sequences.SequencesKt___SequencesKt$n`;
  #L13dc16.  v1:= v4.`kotlin.sequences.SequencesKt___SequencesKt$n.g` @type ^`kotlin.sequences.Sequence` @kind object;
  #L13dc1a.  v2:= v4.`kotlin.sequences.SequencesKt___SequencesKt$n.h` @type ^`java.lang.Object` @kind object;
  #L13dc1e.  v3:= v4.`kotlin.sequences.SequencesKt___SequencesKt$n.i` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L13dc22.  call `<init>`(v0, v1, v2, v3, v6) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$n;.<init>:(Lkotlin/sequences/Sequence;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L13dc28.  v0.`kotlin.sequences.SequencesKt___SequencesKt$n.b` @type ^`java.lang.Object` := v5 @kind object;
  #L13dc2c.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt___SequencesKt$n` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$n;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L13dac0.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L13dac4.  call temp:= `create`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$n;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L13daca.  v1:= temp @kind object;
  #L13dacc.  v1:= (`kotlin.sequences.SequencesKt___SequencesKt$n`) v1 @kind object;
  #L13dad0.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L13dad4.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$n;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L13dada.  v1:= temp @kind object;
  #L13dadc.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlin.sequences.SequencesKt___SequencesKt$n` v9 @kind this, `java.lang.Object` v10 @kind object) @signature `Lkotlin/sequences/SequencesKt___SequencesKt$n;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L13daf0.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L13daf6.  v0:= temp @kind object;
  #L13daf8.  v1:= v9.`kotlin.sequences.SequencesKt___SequencesKt$n.f` @type ^`int`;
  #L13dafc.  v2:= 2I;
  #L13dafe.  v3:= 1I;
  #L13db00.  if v1 == 0 then goto L13db50;
  #L13db04.  if v1 == v3 then goto L13db40;
  #L13db08.  if v1 != v2 then goto L13db30;
  #L13db0c.  v1:= v9.`kotlin.sequences.SequencesKt___SequencesKt$n.e` @type ^`int`;
  #L13db10.  v3:= v9.`kotlin.sequences.SequencesKt___SequencesKt$n.d` @type ^`java.lang.Object` @kind object;
  #L13db14.  v3:= (`java.util.Iterator`) v3 @kind object;
  #L13db18.  v4:= v9.`kotlin.sequences.SequencesKt___SequencesKt$n.c` @type ^`java.lang.Object` @kind object;
  #L13db1c.  v5:= v9.`kotlin.sequences.SequencesKt___SequencesKt$n.b` @type ^`java.lang.Object` @kind object;
  #L13db20.  v5:= (`kotlin.sequences.SequenceScope`) v5 @kind object;
  #L13db24.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L13db2a.  v10:= v1;
  #L13db2c.  v1:= v4 @kind object;
  #L13db2e.  goto L13db92;
  #L13db30.  v10:= new `java.lang.IllegalStateException`;
  #L13db34.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L13db38.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13db3e.  throw v10;
  #L13db40.  v1:= v9.`kotlin.sequences.SequencesKt___SequencesKt$n.b` @type ^`java.lang.Object` @kind object;
  #L13db44.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L13db48.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L13db4e.  goto L13db7a;
  #L13db50.  call `throwOnFailure`(v10) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L13db56.  v10:= v9.`kotlin.sequences.SequencesKt___SequencesKt$n.b` @type ^`java.lang.Object` @kind object;
  #L13db5a.  v1:= v10 @kind object;
  #L13db5c.  v1:= (`kotlin.sequences.SequenceScope`) v1 @kind object;
  #L13db60.  v10:= v9.`kotlin.sequences.SequencesKt___SequencesKt$n.h` @type ^`java.lang.Object` @kind object;
  #L13db64.  v9.`kotlin.sequences.SequencesKt___SequencesKt$n.b` @type ^`java.lang.Object` := v1 @kind object;
  #L13db68.  v9.`kotlin.sequences.SequencesKt___SequencesKt$n.f` @type ^`int` := v3;
  #L13db6c.  call temp:= `yield`(v1, v10, v9) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L13db72.  v10:= temp @kind object;
  #L13db74.  if v10 != v0 then goto L13db7a;
  #L13db78.  return v0 @kind object;
  #L13db7a.  v10:= 0I;
  #L13db7c.  v3:= v9.`kotlin.sequences.SequencesKt___SequencesKt$n.h` @type ^`java.lang.Object` @kind object;
  #L13db80.  v4:= v9.`kotlin.sequences.SequencesKt___SequencesKt$n.g` @type ^`kotlin.sequences.Sequence` @kind object;
  #L13db84.  call temp:= `iterator`(v4) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13db8a.  v4:= temp @kind object;
  #L13db8c.  v5:= v1 @kind object;
  #L13db8e.  v1:= v3 @kind object;
  #L13db90.  v3:= v4 @kind object;
  #L13db92.  v4:= v9 @kind object;
  #L13db94.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L13db9a.  v6:= temp;
  #L13db9c.  if v6 == 0 then goto L13dbf2;
  #L13dba0.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L13dba6.  v6:= temp @kind object;
  #L13dba8.  v7:= v4.`kotlin.sequences.SequencesKt___SequencesKt$n.i` @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L13dbac.  v8:= v10 + 1;
  #L13dbb0.  if v10 >= 0 then goto L13dbba;
  #L13dbb4.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L13dbba.  call temp:= `boxInt`(v10) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxInt:(I)Ljava/lang/Integer;` @kind static;
  #L13dbc0.  v10:= temp @kind object;
  #L13dbc2.  call temp:= `invoke`(v7, v10, v1, v6) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13dbc8.  v10:= temp @kind object;
  #L13dbca.  v4.`kotlin.sequences.SequencesKt___SequencesKt$n.b` @type ^`java.lang.Object` := v5 @kind object;
  #L13dbce.  v4.`kotlin.sequences.SequencesKt___SequencesKt$n.c` @type ^`java.lang.Object` := v10 @kind object;
  #L13dbd2.  v4.`kotlin.sequences.SequencesKt___SequencesKt$n.d` @type ^`java.lang.Object` := v3 @kind object;
  #L13dbd6.  v4.`kotlin.sequences.SequencesKt___SequencesKt$n.e` @type ^`int` := v8;
  #L13dbda.  v4.`kotlin.sequences.SequencesKt___SequencesKt$n.f` @type ^`int` := v2;
  #L13dbde.  call temp:= `yield`(v5, v10, v4) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L13dbe4.  v1:= temp @kind object;
  #L13dbe6.  if v1 != v0 then goto L13dbec;
  #L13dbea.  return v0 @kind object;
  #L13dbec.  v1:= v10 @kind object;
  #L13dbee.  v10:= v8;
  #L13dbf0.  goto L13db94;
  #L13dbf2.  v10:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L13dbf6.  return v10 @kind object;
}
