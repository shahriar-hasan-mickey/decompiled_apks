record `kotlin.sequences.SequencesKt__SequencesKt$a` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlin.sequences.SequencesKt__SequencesKt$a.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlin.sequences.SequencesKt__SequencesKt$a.c` @AccessFlag ;
  `int` `kotlin.sequences.SequencesKt__SequencesKt$a.d` @AccessFlag ;
  `int` `kotlin.sequences.SequencesKt__SequencesKt$a.e` @AccessFlag ;
  `kotlin.sequences.Sequence` `kotlin.sequences.SequencesKt__SequencesKt$a.f` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function2` `kotlin.sequences.SequencesKt__SequencesKt$a.g` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function1` `kotlin.sequences.SequencesKt__SequencesKt$a.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.SequencesKt__SequencesKt$a` v0 @kind this, `kotlin.sequences.Sequence` v1 @kind object, `kotlin.jvm.functions.Function2` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object, `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$a;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L13c584.  v0.`kotlin.sequences.SequencesKt__SequencesKt$a.f` @type ^`kotlin.sequences.Sequence` := v1 @kind object;
  #L13c588.  v0.`kotlin.sequences.SequencesKt__SequencesKt$a.g` @type ^`kotlin.jvm.functions.Function2` := v2 @kind object;
  #L13c58c.  v0.`kotlin.sequences.SequencesKt__SequencesKt$a.h` @type ^`kotlin.jvm.functions.Function1` := v3 @kind object;
  #L13c590.  v1:= 2I;
  #L13c592.  call `<init>`(v0, v1, v4) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L13c598.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlin.sequences.SequencesKt__SequencesKt$a` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13c54c.  v0:= "completion" @kind object;
  #L13c550.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13c556.  v0:= new `kotlin.sequences.SequencesKt__SequencesKt$a`;
  #L13c55a.  v1:= v4.`kotlin.sequences.SequencesKt__SequencesKt$a.f` @type ^`kotlin.sequences.Sequence` @kind object;
  #L13c55e.  v2:= v4.`kotlin.sequences.SequencesKt__SequencesKt$a.g` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L13c562.  v3:= v4.`kotlin.sequences.SequencesKt__SequencesKt$a.h` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L13c566.  call `<init>`(v0, v1, v2, v3, v6) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$a;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V` @kind direct;
  #L13c56c.  v0.`kotlin.sequences.SequencesKt__SequencesKt$a.b` @type ^`java.lang.Object` := v5 @kind object;
  #L13c570.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.SequencesKt__SequencesKt$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L13c43c.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L13c440.  call temp:= `create`(v0, v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$a;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L13c446.  v1:= temp @kind object;
  #L13c448.  v1:= (`kotlin.sequences.SequencesKt__SequencesKt$a`) v1 @kind object;
  #L13c44c.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L13c450.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L13c456.  v1:= temp @kind object;
  #L13c458.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlin.sequences.SequencesKt__SequencesKt$a` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lkotlin/sequences/SequencesKt__SequencesKt$a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L13c46c.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L13c472.  v0:= temp @kind object;
  #L13c474.  v1:= v8.`kotlin.sequences.SequencesKt__SequencesKt$a.e` @type ^`int`;
  #L13c478.  v2:= 1I;
  #L13c47a.  if v1 == 0 then goto L13c4ae;
  #L13c47e.  if v1 != v2 then goto L13c49e;
  #L13c482.  v1:= v8.`kotlin.sequences.SequencesKt__SequencesKt$a.d` @type ^`int`;
  #L13c486.  v3:= v8.`kotlin.sequences.SequencesKt__SequencesKt$a.c` @type ^`java.lang.Object` @kind object;
  #L13c48a.  v3:= (`java.util.Iterator`) v3 @kind object;
  #L13c48e.  v4:= v8.`kotlin.sequences.SequencesKt__SequencesKt$a.b` @type ^`java.lang.Object` @kind object;
  #L13c492.  v4:= (`kotlin.sequences.SequenceScope`) v4 @kind object;
  #L13c496.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L13c49c.  goto L13c4cc;
  #L13c49e.  v9:= new `java.lang.IllegalStateException`;
  #L13c4a2.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L13c4a6.  call `<init>`(v9, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13c4ac.  throw v9;
  #L13c4ae.  call `throwOnFailure`(v9) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L13c4b4.  v9:= v8.`kotlin.sequences.SequencesKt__SequencesKt$a.b` @type ^`java.lang.Object` @kind object;
  #L13c4b8.  v9:= (`kotlin.sequences.SequenceScope`) v9 @kind object;
  #L13c4bc.  v1:= 0I;
  #L13c4be.  v3:= v8.`kotlin.sequences.SequencesKt__SequencesKt$a.f` @type ^`kotlin.sequences.Sequence` @kind object;
  #L13c4c2.  call temp:= `iterator`(v3) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13c4c8.  v3:= temp @kind object;
  #L13c4ca.  v4:= v9 @kind object;
  #L13c4cc.  v9:= v8 @kind object;
  #L13c4ce.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L13c4d4.  v5:= temp;
  #L13c4d6.  if v5 == 0 then goto L13c536;
  #L13c4da.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L13c4e0.  v5:= temp @kind object;
  #L13c4e2.  v6:= v9.`kotlin.sequences.SequencesKt__SequencesKt$a.g` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L13c4e6.  v7:= v1 + 1;
  #L13c4ea.  if v1 >= 0 then goto L13c4f4;
  #L13c4ee.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L13c4f4.  call temp:= `boxInt`(v1) @signature `Lkotlin/coroutines/jvm/internal/Boxing;.boxInt:(I)Ljava/lang/Integer;` @kind static;
  #L13c4fa.  v1:= temp @kind object;
  #L13c4fc.  call temp:= `invoke`(v6, v1, v5) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13c502.  v1:= temp @kind object;
  #L13c504.  v5:= v9.`kotlin.sequences.SequencesKt__SequencesKt$a.h` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L13c508.  call temp:= `invoke`(v5, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L13c50e.  v1:= temp @kind object;
  #L13c510.  v1:= (`java.util.Iterator`) v1 @kind object;
  #L13c514.  v9.`kotlin.sequences.SequencesKt__SequencesKt$a.b` @type ^`java.lang.Object` := v4 @kind object;
  #L13c518.  v9.`kotlin.sequences.SequencesKt__SequencesKt$a.c` @type ^`java.lang.Object` := v3 @kind object;
  #L13c51c.  v9.`kotlin.sequences.SequencesKt__SequencesKt$a.d` @type ^`int` := v7;
  #L13c520.  v9.`kotlin.sequences.SequencesKt__SequencesKt$a.e` @type ^`int` := v2;
  #L13c524.  call temp:= `yieldAll`(v4, v1, v9) @signature `Lkotlin/sequences/SequenceScope;.yieldAll:(Ljava/util/Iterator;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L13c52a.  v1:= temp @kind object;
  #L13c52c.  if v1 != v0 then goto L13c532;
  #L13c530.  return v0 @kind object;
  #L13c532.  v1:= v7;
  #L13c534.  goto L13c4ce;
  #L13c536.  v9:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L13c53a.  return v9 @kind object;
}
