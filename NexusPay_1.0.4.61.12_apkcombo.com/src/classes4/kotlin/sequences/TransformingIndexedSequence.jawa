record `kotlin.sequences.TransformingIndexedSequence` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.sequences.Sequence` @kind interface {
  `kotlin.sequences.Sequence` `kotlin.sequences.TransformingIndexedSequence.a` @AccessFlag PRIVATE_FINAL;
  `kotlin.jvm.functions.Function2` `kotlin.sequences.TransformingIndexedSequence.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.sequences.TransformingIndexedSequence` v1 @kind this, `kotlin.sequences.Sequence` v2 @kind object, `kotlin.jvm.functions.Function2` v3 @kind object) @signature `Lkotlin/sequences/TransformingIndexedSequence;.<init>:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L142208.  v0:= "sequence" @kind object;
  #L14220c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L142212.  v0:= "transformer" @kind object;
  #L142216.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14221c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L142222.  v1.`kotlin.sequences.TransformingIndexedSequence.a` @type ^`kotlin.sequences.Sequence` := v2 @kind object;
  #L142226.  v1.`kotlin.sequences.TransformingIndexedSequence.b` @type ^`kotlin.jvm.functions.Function2` := v3 @kind object;
  #L14222a.  return @kind void;
}
procedure `kotlin.sequences.Sequence` `access$getSequence$p`(`kotlin.sequences.TransformingIndexedSequence` v0 @kind object) @signature `Lkotlin/sequences/TransformingIndexedSequence;.access$getSequence$p:(Lkotlin/sequences/TransformingIndexedSequence;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1421f0.  v0:= v0.`kotlin.sequences.TransformingIndexedSequence.a` @type ^`kotlin.sequences.Sequence` @kind object;
  #L1421f4.  return v0 @kind object;
}
procedure `kotlin.jvm.functions.Function2` `access$getTransformer$p`(`kotlin.sequences.TransformingIndexedSequence` v0 @kind object) @signature `Lkotlin/sequences/TransformingIndexedSequence;.access$getTransformer$p:(Lkotlin/sequences/TransformingIndexedSequence;)Lkotlin/jvm/functions/Function2;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1421d8.  v0:= v0.`kotlin.sequences.TransformingIndexedSequence.b` @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L1421dc.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`kotlin.sequences.TransformingIndexedSequence` v1 @kind this) @signature `Lkotlin/sequences/TransformingIndexedSequence;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1421bc.  v0:= new `kotlin.sequences.TransformingIndexedSequence$iterator$1`;
  #L1421c0.  call `<init>`(v0, v1) @signature `Lkotlin/sequences/TransformingIndexedSequence$iterator$1;.<init>:(Lkotlin/sequences/TransformingIndexedSequence;)V` @kind direct;
  #L1421c6.  return v0 @kind object;
}
