record `kotlin.sequences.e` @kind class @AccessFlag  extends `kotlin.sequences.SequencesKt__SequencesKt` @kind class {
}
procedure `void` `<init>`(`kotlin.sequences.e` v0 @kind this) @signature `Lkotlin/sequences/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L13cedc.  call `<init>`(v0) @signature `Lkotlin/sequences/SequencesKt__SequencesKt;.<init>:()V` @kind direct;
  #L13cee2.  return @kind void;
}
procedure `kotlin.sequences.Sequence` `filterIsInstance`(`kotlin.sequences.Sequence` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lkotlin/sequences/e;.filterIsInstance:(Lkotlin/sequences/Sequence;Ljava/lang/Class;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13ce90.  v0:= "$this$filterIsInstance" @kind object;
  #L13ce94.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ce9a.  v0:= "klass" @kind object;
  #L13ce9e.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13cea4.  v0:= new `kotlin.sequences.e$a`;
  #L13cea8.  call `<init>`(v0, v2) @signature `Lkotlin/sequences/e$a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L13ceae.  call temp:= `filter`(v1, v0) @signature `Lkotlin/sequences/SequencesKt;.filter:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L13ceb4.  v1:= temp @kind object;
  #L13ceb6.  if v1 == 0 then goto L13cebc;
  #L13ceba.  return v1 @kind object;
  #L13cebc.  v1:= new `java.lang.NullPointerException`;
  #L13cec0.  v2:= "null cannot be cast to non-null type kotlin.sequences.Sequence<R>" @kind object;
  #L13cec4.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13ceca.  throw v1;
}
procedure `java.util.Collection` `filterIsInstanceTo`(`kotlin.sequences.Sequence` v2 @kind object, `java.util.Collection` v3 @kind object, `java.lang.Class` v4 @kind object) @signature `Lkotlin/sequences/e;.filterIsInstanceTo:(Lkotlin/sequences/Sequence;Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L13cdc0.  v0:= "$this$filterIsInstanceTo" @kind object;
  #L13cdc4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13cdca.  v0:= "destination" @kind object;
  #L13cdce.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13cdd4.  v0:= "klass" @kind object;
  #L13cdd8.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13cdde.  call temp:= `iterator`(v2) @signature `Lkotlin/sequences/Sequence;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L13cde4.  v2:= temp @kind object;
  #L13cde6.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L13cdec.  v0:= temp;
  #L13cdee.  if v0 == 0 then goto L13ce0e;
  #L13cdf2.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L13cdf8.  v0:= temp @kind object;
  #L13cdfa.  call temp:= `isInstance`(v4, v0) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L13ce00.  v1:= temp;
  #L13ce02.  if v1 == 0 then goto L13cde6;
  #L13ce06.  call temp:= `add`(v3, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L13ce0c.  goto L13cde6;
  #L13ce0e.  return v3 @kind object;
}
procedure `java.util.SortedSet` `toSortedSet`(`kotlin.sequences.Sequence` v1 @kind object) @signature `Lkotlin/sequences/e;.toSortedSet:(Lkotlin/sequences/Sequence;)Ljava/util/SortedSet;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13ce20.  v0:= "$this$toSortedSet" @kind object;
  #L13ce24.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ce2a.  v0:= new `java.util.TreeSet`;
  #L13ce2e.  call `<init>`(v0) @signature `Ljava/util/TreeSet;.<init>:()V` @kind direct;
  #L13ce34.  call temp:= `toCollection`(v1, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.toCollection:(Lkotlin/sequences/Sequence;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L13ce3a.  v1:= temp @kind object;
  #L13ce3c.  v1:= (`java.util.SortedSet`) v1 @kind object;
  #L13ce40.  return v1 @kind object;
}
procedure `java.util.SortedSet` `toSortedSet`(`kotlin.sequences.Sequence` v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/sequences/e;.toSortedSet:(Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Ljava/util/SortedSet;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13ce54.  v0:= "$this$toSortedSet" @kind object;
  #L13ce58.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ce5e.  v0:= "comparator" @kind object;
  #L13ce62.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13ce68.  v0:= new `java.util.TreeSet`;
  #L13ce6c.  call `<init>`(v0, v2) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L13ce72.  call temp:= `toCollection`(v1, v0) @signature `Lkotlin/sequences/SequencesKt___SequencesKt;.toCollection:(Lkotlin/sequences/Sequence;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L13ce78.  v1:= temp @kind object;
  #L13ce7a.  v1:= (`java.util.SortedSet`) v1 @kind object;
  #L13ce7e.  return v1 @kind object;
}
