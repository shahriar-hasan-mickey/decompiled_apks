record `kotlin.sequences.e$a` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
  `java.lang.Class` `kotlin.sequences.e$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.sequences.e$a` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lkotlin/sequences/e$a;.<init>:(Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L13cda0.  v0.`kotlin.sequences.e$a.a` @type ^`java.lang.Class` := v1 @kind object;
  #L13cda4.  v1:= 1I;
  #L13cda6.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L13cdac.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlin.sequences.e$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/sequences/e$a;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L13cd7c.  call temp:= `invoke`(v0, v1) @signature `Lkotlin/sequences/e$a;.invoke:(Ljava/lang/Object;)Z` @kind virtual;
  #L13cd82.  v1:= temp;
  #L13cd84.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L13cd8a.  v1:= temp @kind object;
  #L13cd8c.  return v1 @kind object;
}
procedure `boolean` `invoke`(`kotlin.sequences.e$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/sequences/e$a;.invoke:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L13cd5c.  v0:= v1.`kotlin.sequences.e$a.a` @type ^`java.lang.Class` @kind object;
  #L13cd60.  call temp:= `isInstance`(v0, v2) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L13cd66.  v2:= temp;
  #L13cd68.  return v2;
}
