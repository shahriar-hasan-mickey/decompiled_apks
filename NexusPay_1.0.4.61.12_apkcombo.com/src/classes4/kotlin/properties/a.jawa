record `kotlin.properties.a` @kind class @AccessFlag FINAL extends `kotlin.properties.ReadWriteProperty` @kind interface {
  `java.lang.Object` `kotlin.properties.a.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.properties.a` v0 @kind this) @signature `Lkotlin/properties/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L132ce0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L132ce6.  return @kind void;
}
procedure `java.lang.Object` `getValue`(`kotlin.properties.a` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlin.reflect.KProperty` v4 @kind object) @signature `Lkotlin/properties/a;.getValue:(Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L132c7c.  v3:= "property" @kind object;
  #L132c80.  call `checkNotNullParameter`(v4, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L132c86.  v3:= v2.`kotlin.properties.a.a` @type ^`java.lang.Object` @kind object;
  #L132c8a.  if v3 == 0 then goto L132c90;
  #L132c8e.  return v3 @kind object;
  #L132c90.  v3:= new `java.lang.IllegalStateException`;
  #L132c94.  v0:= new `java.lang.StringBuilder`;
  #L132c98.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L132c9e.  v1:= "Property " @kind object;
  #L132ca2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L132ca8.  call temp:= `getName`(v4) @signature `Lkotlin/reflect/KCallable;.getName:()Ljava/lang/String;` @kind interface;
  #L132cae.  v4:= temp @kind object;
  #L132cb0.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L132cb6.  v4:= " should be initialized before get." @kind object;
  #L132cba.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L132cc0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L132cc6.  v4:= temp @kind object;
  #L132cc8.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L132cce.  throw v3;
}
procedure `void` `setValue`(`kotlin.properties.a` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.reflect.KProperty` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlin/properties/a;.setValue:(Ljava/lang/Object;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L132cf8.  v1:= "property" @kind object;
  #L132cfc.  call `checkNotNullParameter`(v2, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L132d02.  v1:= "value" @kind object;
  #L132d06.  call `checkNotNullParameter`(v3, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L132d0c.  v0.`kotlin.properties.a.a` @type ^`java.lang.Object` := v3 @kind object;
  #L132d10.  return @kind void;
}
