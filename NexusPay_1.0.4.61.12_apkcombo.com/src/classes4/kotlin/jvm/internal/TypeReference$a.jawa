record `kotlin.jvm.internal.TypeReference$a` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
  `kotlin.jvm.internal.TypeReference` `kotlin.jvm.internal.TypeReference$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.jvm.internal.TypeReference$a` v0 @kind this, `kotlin.jvm.internal.TypeReference` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeReference$a;.<init>:(Lkotlin/jvm/internal/TypeReference;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L132044.  v0.`kotlin.jvm.internal.TypeReference$a.a` @type ^`kotlin.jvm.internal.TypeReference` := v1 @kind object;
  #L132048.  v1:= 1I;
  #L13204a.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L132050.  return @kind void;
}
procedure `java.lang.CharSequence` `a`(`kotlin.jvm.internal.TypeReference$a` v1 @kind this, `kotlin.reflect.KTypeProjection` v2 @kind object) @signature `Lkotlin/jvm/internal/TypeReference$a;.a:(Lkotlin/reflect/KTypeProjection;)Ljava/lang/CharSequence;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L131ffc.  v0:= "it" @kind object;
  #L132000.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L132006.  v0:= v1.`kotlin.jvm.internal.TypeReference$a.a` @type ^`kotlin.jvm.internal.TypeReference` @kind object;
  #L13200a.  call temp:= `access$asString`(v0, v2) @signature `Lkotlin/jvm/internal/TypeReference;.access$asString:(Lkotlin/jvm/internal/TypeReference;Lkotlin/reflect/KTypeProjection;)Ljava/lang/String;` @kind static;
  #L132010.  v2:= temp @kind object;
  #L132012.  return v2 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.jvm.internal.TypeReference$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeReference$a;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L132024.  v1:= (`kotlin.reflect.KTypeProjection`) v1 @kind object;
  #L132028.  call temp:= `a`(v0, v1) @signature `Lkotlin/jvm/internal/TypeReference$a;.a:(Lkotlin/reflect/KTypeProjection;)Ljava/lang/CharSequence;` @kind virtual;
  #L13202e.  v1:= temp @kind object;
  #L132030.  return v1 @kind object;
}
