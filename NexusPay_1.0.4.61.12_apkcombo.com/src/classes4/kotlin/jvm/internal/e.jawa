record `kotlin.jvm.internal.e` @kind class @AccessFlag FINAL extends `kotlin.collections.FloatIterator` @kind class {
  `int` `kotlin.jvm.internal.e.a` @AccessFlag PRIVATE;
  `float`[] `kotlin.jvm.internal.e.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.jvm.internal.e` v1 @kind this, `float`[] v2 @kind object) @signature `Lkotlin/jvm/internal/e;.<init>:([F)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L12bc1c.  v0:= "array" @kind object;
  #L12bc20.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12bc26.  call `<init>`(v1) @signature `Lkotlin/collections/FloatIterator;.<init>:()V` @kind direct;
  #L12bc2c.  v1.`kotlin.jvm.internal.e.b` @type ^`float`[] := v2 @kind object;
  #L12bc30.  return @kind void;
}
procedure `boolean` `hasNext`(`kotlin.jvm.internal.e` v2 @kind this) @signature `Lkotlin/jvm/internal/e;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12bb9c.  v0:= v2.`kotlin.jvm.internal.e.a` @type ^`int`;
  #L12bba0.  v1:= v2.`kotlin.jvm.internal.e.b` @type ^`float`[] @kind object;
  #L12bba4.  v1:= length @variable v1;
  #L12bba6.  if v0 >= v1 then goto L12bbae;
  #L12bbaa.  v0:= 1I;
  #L12bbac.  goto L12bbb0;
  #L12bbae.  v0:= 0I;
  #L12bbb0.  return v0;
}
procedure `float` `nextFloat`(`kotlin.jvm.internal.e` v3 @kind this) @signature `Lkotlin/jvm/internal/e;.nextFloat:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L12bbc4.  v0:= v3.`kotlin.jvm.internal.e.b` @type ^`float`[] @kind object;
  #L12bbc8.  v1:= v3.`kotlin.jvm.internal.e.a` @type ^`int`;
  #L12bbcc.  v2:= v1 + 1;
  #L12bbd0.  v3.`kotlin.jvm.internal.e.a` @type ^`int` := v2;
  #L12bbd4.  v0:= v0[v1];
  #L12bbd8.  return v0;
  #L12bbda.  v0:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L12bbdc.  v1:= v3.`kotlin.jvm.internal.e.a` @type ^`int`;
  #L12bbe0.  v1:= v1 + -1;
  #L12bbe4.  v3.`kotlin.jvm.internal.e.a` @type ^`int` := v1;
  #L12bbe8.  v1:= new `java.util.NoSuchElementException`;
  #L12bbec.  call temp:= `getMessage`(v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L12bbf2.  v0:= temp @kind object;
  #L12bbf4.  call `<init>`(v1, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12bbfa.  throw v1;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L12bbc4..L12bbd8] goto L12bbda;
}
