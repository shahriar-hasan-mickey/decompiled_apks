record `kotlin.jvm.internal.PropertyReference` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.jvm.internal.CallableReference` @kind class, `kotlin.reflect.KProperty` @kind interface {
}
procedure `void` `<init>`(`kotlin.jvm.internal.PropertyReference` v0 @kind this) @signature `Lkotlin/jvm/internal/PropertyReference;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L130734.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/CallableReference;.<init>:()V` @kind direct;
  #L13073a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.PropertyReference` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/jvm/internal/PropertyReference;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L13074c.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/CallableReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L130752.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.PropertyReference` v7 @kind this, `java.lang.Object` v8 @kind object, `java.lang.Class` v9 @kind object, `java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object, `int` v12 ) @signature `Lkotlin/jvm/internal/PropertyReference;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L130764.  v0:= 1I;
  #L130766.  v12:= v12 ^& v0 @kind int;
  #L130768.  if v12 != v0 then goto L130770;
  #L13076c.  v6:= 1I;
  #L13076e.  goto L130774;
  #L130770.  v0:= 0I;
  #L130772.  v6:= 0I;
  #L130774.  v1:= v7 @kind object;
  #L130776.  v2:= v8 @kind object;
  #L130778.  v3:= v9 @kind object;
  #L13077a.  v4:= v10 @kind object;
  #L13077c.  v5:= v11 @kind object;
  #L13077e.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/jvm/internal/CallableReference;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L130784.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.jvm.internal.PropertyReference` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlin/jvm/internal/PropertyReference;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13054c.  v0:= 1I;
  #L13054e.  if v5 != v4 then goto L130554;
  #L130552.  return v0;
  #L130554.  v1:= instanceof @variable v5 @type ^`kotlin.jvm.internal.PropertyReference` @kind boolean;
  #L130558.  v2:= 0I;
  #L13055a.  if v1 == 0 then goto L1305d8;
  #L13055e.  v5:= (`kotlin.jvm.internal.PropertyReference`) v5 @kind object;
  #L130562.  call temp:= `getOwner`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L130568.  v1:= temp @kind object;
  #L13056a.  call temp:= `getOwner`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L130570.  v3:= temp @kind object;
  #L130572.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L130578.  v1:= temp;
  #L13057a.  if v1 == 0 then goto L1305d4;
  #L13057e.  call temp:= `getName`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L130584.  v1:= temp @kind object;
  #L130586.  call temp:= `getName`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L13058c.  v3:= temp @kind object;
  #L13058e.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L130594.  v1:= temp;
  #L130596.  if v1 == 0 then goto L1305d4;
  #L13059a.  call temp:= `getSignature`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L1305a0.  v1:= temp @kind object;
  #L1305a2.  call temp:= `getSignature`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L1305a8.  v3:= temp @kind object;
  #L1305aa.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1305b0.  v1:= temp;
  #L1305b2.  if v1 == 0 then goto L1305d4;
  #L1305b6.  call temp:= `getBoundReceiver`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getBoundReceiver:()Ljava/lang/Object;` @kind virtual;
  #L1305bc.  v1:= temp @kind object;
  #L1305be.  call temp:= `getBoundReceiver`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getBoundReceiver:()Ljava/lang/Object;` @kind virtual;
  #L1305c4.  v5:= temp @kind object;
  #L1305c6.  call temp:= `areEqual`(v1, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1305cc.  v5:= temp;
  #L1305ce.  if v5 == 0 then goto L1305d4;
  #L1305d2.  goto L1305d6;
  #L1305d4.  v0:= 0I;
  #L1305d6.  return v0;
  #L1305d8.  v0:= instanceof @variable v5 @type ^`kotlin.reflect.KProperty` @kind boolean;
  #L1305dc.  if v0 == 0 then goto L1305f2;
  #L1305e0.  call temp:= `compute`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.compute:()Lkotlin/reflect/KCallable;` @kind virtual;
  #L1305e6.  v0:= temp @kind object;
  #L1305e8.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1305ee.  v5:= temp;
  #L1305f0.  return v5;
  #L1305f2.  return v2;
}
procedure `kotlin.reflect.KCallable` `getReflected`(`kotlin.jvm.internal.PropertyReference` v1 @kind this) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KCallable;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L1306f8.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @kind virtual;
  #L1306fe.  v0:= temp @kind object;
  #L130700.  return v0 @kind object;
}
procedure `kotlin.reflect.KProperty` `getReflected`(`kotlin.jvm.internal.PropertyReference` v1 @kind this) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L130714.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/CallableReference;.getReflected:()Lkotlin/reflect/KCallable;` @kind super;
  #L13071a.  v0:= temp @kind object;
  #L13071c.  v0:= (`kotlin.reflect.KProperty`) v0 @kind object;
  #L130720.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.jvm.internal.PropertyReference` v2 @kind this) @signature `Lkotlin/jvm/internal/PropertyReference;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13064c.  call temp:= `getOwner`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L130652.  v0:= temp @kind object;
  #L130654.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L13065a.  v0:= temp;
  #L13065c.  v0:= v0 * 31;
  #L130660.  call temp:= `getName`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L130666.  v1:= temp @kind object;
  #L130668.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L13066e.  v1:= temp;
  #L130670.  v0:= v0 + v1 @kind int;
  #L130672.  v0:= v0 * 31;
  #L130676.  call temp:= `getSignature`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L13067c.  v1:= temp @kind object;
  #L13067e.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L130684.  v1:= temp;
  #L130686.  v0:= v0 + v1 @kind int;
  #L130688.  return v0;
}
procedure `boolean` `isConst`(`kotlin.jvm.internal.PropertyReference` v1 @kind this) @signature `Lkotlin/jvm/internal/PropertyReference;.isConst:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L130604.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @kind virtual;
  #L13060a.  v0:= temp @kind object;
  #L13060c.  call temp:= `isConst`(v0) @signature `Lkotlin/reflect/KProperty;.isConst:()Z` @kind interface;
  #L130612.  v0:= temp;
  #L130614.  return v0;
}
procedure `boolean` `isLateinit`(`kotlin.jvm.internal.PropertyReference` v1 @kind this) @signature `Lkotlin/jvm/internal/PropertyReference;.isLateinit:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L130628.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @kind virtual;
  #L13062e.  v0:= temp @kind object;
  #L130630.  call temp:= `isLateinit`(v0) @signature `Lkotlin/reflect/KProperty;.isLateinit:()Z` @kind interface;
  #L130636.  v0:= temp;
  #L130638.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.jvm.internal.PropertyReference` v2 @kind this) @signature `Lkotlin/jvm/internal/PropertyReference;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L13069c.  call temp:= `compute`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.compute:()Lkotlin/reflect/KCallable;` @kind virtual;
  #L1306a2.  v0:= temp @kind object;
  #L1306a4.  if v0 == v2 then goto L1306b2;
  #L1306a8.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1306ae.  v0:= temp @kind object;
  #L1306b0.  return v0 @kind object;
  #L1306b2.  v0:= new `java.lang.StringBuilder`;
  #L1306b6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1306bc.  v1:= "property " @kind object;
  #L1306c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1306c6.  call temp:= `getName`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L1306cc.  v1:= temp @kind object;
  #L1306ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1306d4.  v1:= " (Kotlin reflection is not available)" @kind object;
  #L1306d8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1306de.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1306e4.  v0:= temp @kind object;
  #L1306e6.  return v0 @kind object;
}
