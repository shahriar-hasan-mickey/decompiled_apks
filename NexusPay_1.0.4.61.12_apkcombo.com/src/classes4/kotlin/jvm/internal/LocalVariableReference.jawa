record `kotlin.jvm.internal.LocalVariableReference` @kind class @AccessFlag PUBLIC extends `kotlin.jvm.internal.PropertyReference0` @kind class {
}
procedure `void` `<init>`(`kotlin.jvm.internal.LocalVariableReference` v0 @kind this) @signature `Lkotlin/jvm/internal/LocalVariableReference;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L12f554.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/PropertyReference0;.<init>:()V` @kind direct;
  #L12f55a.  return @kind void;
}
procedure `java.lang.Object` `get`(`kotlin.jvm.internal.LocalVariableReference` v1 @kind this) @signature `Lkotlin/jvm/internal/LocalVariableReference;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12f4d0.  call temp:= `access$notSupportedError`() @signature `Lkotlin/jvm/internal/LocalVariableReferencesKt;.access$notSupportedError:()Ljava/lang/Void;` @kind static;
  #L12f4d6.  v0:= new `kotlin.KotlinNothingValueException`;
  #L12f4da.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L12f4e0.  throw v0;
}
procedure `kotlin.reflect.KDeclarationContainer` `getOwner`(`kotlin.jvm.internal.LocalVariableReference` v1 @kind this) @signature `Lkotlin/jvm/internal/LocalVariableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12f4f4.  call temp:= `access$notSupportedError`() @signature `Lkotlin/jvm/internal/LocalVariableReferencesKt;.access$notSupportedError:()Ljava/lang/Void;` @kind static;
  #L12f4fa.  v0:= new `kotlin.KotlinNothingValueException`;
  #L12f4fe.  call `<init>`(v0) @signature `Lkotlin/KotlinNothingValueException;.<init>:()V` @kind direct;
  #L12f504.  throw v0;
}
