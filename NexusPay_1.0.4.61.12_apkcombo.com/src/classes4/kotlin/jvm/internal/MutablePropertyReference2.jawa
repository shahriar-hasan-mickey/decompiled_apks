record `kotlin.jvm.internal.MutablePropertyReference2` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.jvm.internal.MutablePropertyReference` @kind class, `kotlin.reflect.KMutableProperty2` @kind interface {
}
procedure `void` `<init>`(`kotlin.jvm.internal.MutablePropertyReference2` v0 @kind this) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L12fde0.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/MutablePropertyReference;.<init>:()V` @kind direct;
  #L12fde6.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.MutablePropertyReference2` v6 @kind this, `java.lang.Class` v7 @kind object, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object, `int` v10 ) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.<init>:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L12fdf8.  v1:= `@@kotlin.jvm.internal.CallableReference.NO_RECEIVER` @type ^`java.lang.Object` @kind object;
  #L12fdfc.  v0:= v6 @kind object;
  #L12fdfe.  v2:= v7 @kind object;
  #L12fe00.  v3:= v8 @kind object;
  #L12fe02.  v4:= v9 @kind object;
  #L12fe04.  v5:= v10;
  #L12fe06.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/jvm/internal/MutablePropertyReference;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L12fe0c.  return @kind void;
}
procedure `kotlin.reflect.KCallable` `computeReflected`(`kotlin.jvm.internal.MutablePropertyReference2` v1 @kind this) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.computeReflected:()Lkotlin/reflect/KCallable;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L12fd3c.  call temp:= `mutableProperty2`(v1) @signature `Lkotlin/jvm/internal/Reflection;.mutableProperty2:(Lkotlin/jvm/internal/MutablePropertyReference2;)Lkotlin/reflect/KMutableProperty2;` @kind static;
  #L12fd42.  v0:= temp @kind object;
  #L12fd44.  return v0 @kind object;
}
procedure `java.lang.Object` `getDelegate`(`kotlin.jvm.internal.MutablePropertyReference2` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.getDelegate:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12fcf8.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @kind virtual;
  #L12fcfe.  v0:= temp @kind object;
  #L12fd00.  v0:= (`kotlin.reflect.KMutableProperty2`) v0 @kind object;
  #L12fd04.  call temp:= `getDelegate`(v0, v2, v3) @signature `Lkotlin/reflect/KProperty2;.getDelegate:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L12fd0a.  v2:= temp @kind object;
  #L12fd0c.  return v2 @kind object;
}
procedure `kotlin.reflect.KProperty$Getter` `getGetter`(`kotlin.jvm.internal.MutablePropertyReference2` v1 @kind this) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.getGetter:()Lkotlin/reflect/KProperty$Getter;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L12fd9c.  call temp:= `getGetter`(v1) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.getGetter:()Lkotlin/reflect/KProperty2$Getter;` @kind virtual;
  #L12fda2.  v0:= temp @kind object;
  #L12fda4.  return v0 @kind object;
}
procedure `kotlin.reflect.KProperty2$Getter` `getGetter`(`kotlin.jvm.internal.MutablePropertyReference2` v1 @kind this) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.getGetter:()Lkotlin/reflect/KProperty2$Getter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12fdb8.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @kind virtual;
  #L12fdbe.  v0:= temp @kind object;
  #L12fdc0.  v0:= (`kotlin.reflect.KMutableProperty2`) v0 @kind object;
  #L12fdc4.  call temp:= `getGetter`(v0) @signature `Lkotlin/reflect/KProperty2;.getGetter:()Lkotlin/reflect/KProperty2$Getter;` @kind interface;
  #L12fdca.  v0:= temp @kind object;
  #L12fdcc.  return v0 @kind object;
}
procedure `kotlin.reflect.KMutableProperty$Setter` `getSetter`(`kotlin.jvm.internal.MutablePropertyReference2` v1 @kind this) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.getSetter:()Lkotlin/reflect/KMutableProperty$Setter;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L12fd58.  call temp:= `getSetter`(v1) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.getSetter:()Lkotlin/reflect/KMutableProperty2$Setter;` @kind virtual;
  #L12fd5e.  v0:= temp @kind object;
  #L12fd60.  return v0 @kind object;
}
procedure `kotlin.reflect.KMutableProperty2$Setter` `getSetter`(`kotlin.jvm.internal.MutablePropertyReference2` v1 @kind this) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.getSetter:()Lkotlin/reflect/KMutableProperty2$Setter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12fd74.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/PropertyReference;.getReflected:()Lkotlin/reflect/KProperty;` @kind virtual;
  #L12fd7a.  v0:= temp @kind object;
  #L12fd7c.  v0:= (`kotlin.reflect.KMutableProperty2`) v0 @kind object;
  #L12fd80.  call temp:= `getSetter`(v0) @signature `Lkotlin/reflect/KMutableProperty2;.getSetter:()Lkotlin/reflect/KMutableProperty2$Setter;` @kind interface;
  #L12fd86.  v0:= temp @kind object;
  #L12fd88.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.jvm.internal.MutablePropertyReference2` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/jvm/internal/MutablePropertyReference2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L12fd20.  call temp:= `get`(v0, v1, v2) @signature `Lkotlin/reflect/KProperty2;.get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L12fd26.  v1:= temp @kind object;
  #L12fd28.  return v1 @kind object;
}
