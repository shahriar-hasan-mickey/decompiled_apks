record `kotlin.jvm.internal.CollectionToArray` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.Object`[] `@@kotlin.jvm.internal.CollectionToArray.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/jvm/internal/CollectionToArray;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L12d644.  v0:= 0I;
  #L12d646.  v0:= new `java.lang.Object`[v0];
  #L12d64a.  `@@kotlin.jvm.internal.CollectionToArray.a` @type ^`java.lang.Object`[] := v0 @kind object;
  #L12d64e.  return @kind void;
}
procedure `java.lang.Object`[] `toArray`(`java.util.Collection` v4 @kind object) @signature `Lkotlin/jvm/internal/CollectionToArray;.toArray:(Ljava/util/Collection;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L12d440.  v0:= "collection" @kind object;
  #L12d444.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12d44a.  call temp:= `size`(v4) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L12d450.  v0:= temp;
  #L12d452.  if v0 != 0 then goto L12d45c;
  #L12d456.  v4:= `@@kotlin.jvm.internal.CollectionToArray.a` @type ^`java.lang.Object`[] @kind object;
  #L12d45a.  goto L12d4fe;
  #L12d45c.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L12d462.  v4:= temp @kind object;
  #L12d464.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12d46a.  v1:= temp;
  #L12d46c.  if v1 != 0 then goto L12d472;
  #L12d470.  goto L12d456;
  #L12d472.  v0:= new `java.lang.Object`[v0];
  #L12d476.  v1:= 0I;
  #L12d478.  v2:= v1 + 1;
  #L12d47c.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L12d482.  v3:= temp @kind object;
  #L12d484.  v0[v1]:= v3 @kind object;
  #L12d488.  v1:= length @variable v0;
  #L12d48a.  if v2 < v1 then goto L12d4e0;
  #L12d48e.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12d494.  v1:= temp;
  #L12d496.  if v1 != 0 then goto L12d49e;
  #L12d49a.  v4:= v0 @kind object;
  #L12d49c.  goto L12d4fe;
  #L12d49e.  v1:= v2 * 3;
  #L12d4a2.  v1:= v1 + 1;
  #L12d4a6.  v1:= v1 ^>> 1;
  #L12d4aa.  v3:= 2147483645I;
  #L12d4b0.  if v1 > v2 then goto L12d4cc;
  #L12d4b4.  if v2 >= v3 then goto L12d4c0;
  #L12d4b8.  v1:= 2147483645I;
  #L12d4be.  goto L12d4cc;
  #L12d4c0.  v4:= new `java.lang.OutOfMemoryError`;
  #L12d4c4.  call `<init>`(v4) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L12d4ca.  throw v4;
  #L12d4cc.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L12d4d2.  v0:= temp @kind object;
  #L12d4d4.  v1:= "Arrays.copyOf(result, newSize)" @kind object;
  #L12d4d8.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12d4de.  goto L12d500;
  #L12d4e0.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12d4e6.  v1:= temp;
  #L12d4e8.  if v1 != 0 then goto L12d500;
  #L12d4ec.  call temp:= `copyOf`(v0, v2) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L12d4f2.  v4:= temp @kind object;
  #L12d4f4.  v0:= "Arrays.copyOf(result, size)" @kind object;
  #L12d4f8.  call `checkNotNullExpressionValue`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12d4fe.  return v4 @kind object;
  #L12d500.  v1:= v2;
  #L12d502.  goto L12d478;
}
procedure `java.lang.Object`[] `toArray`(`java.util.Collection` v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Lkotlin/jvm/internal/CollectionToArray;.toArray:(Ljava/util/Collection;[Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L12d514.  v0:= "collection" @kind object;
  #L12d518.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12d51e.  v0:= 0I;
  #L12d520.  if v6 == 0 then goto L12d630;
  #L12d524.  call temp:= `size`(v5) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L12d52a.  v1:= temp;
  #L12d52c.  v2:= 0I;
  #L12d52e.  if v1 != 0 then goto L12d540;
  #L12d532.  v5:= length @variable v6;
  #L12d534.  if v5 <= 0 then goto L12d61a;
  #L12d538.  v6[v2]:= v0 @kind object;
  #L12d53c.  goto L12d61a;
  #L12d540.  call temp:= `iterator`(v5) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L12d546.  v5:= temp @kind object;
  #L12d548.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12d54e.  v3:= temp;
  #L12d550.  if v3 != 0 then goto L12d560;
  #L12d554.  v5:= length @variable v6;
  #L12d556.  if v5 <= 0 then goto L12d61a;
  #L12d55a.  v6[v2]:= v0 @kind object;
  #L12d55e.  goto L12d61a;
  #L12d560.  v3:= length @variable v6;
  #L12d562.  if v1 > v3 then goto L12d56a;
  #L12d566.  v1:= v6 @kind object;
  #L12d568.  goto L12d58a;
  #L12d56a.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L12d570.  v3:= temp @kind object;
  #L12d572.  call temp:= `getComponentType`(v3) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L12d578.  v3:= temp @kind object;
  #L12d57a.  call temp:= `newInstance`(v3, v1) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L12d580.  v1:= temp @kind object;
  #L12d582.  if v1 == 0 then goto L12d620;
  #L12d586.  v1:= (`java.lang.Object`[]) v1 @kind object;
  #L12d58a.  v3:= v2 + 1;
  #L12d58e.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L12d594.  v4:= temp @kind object;
  #L12d596.  v1[v2]:= v4 @kind object;
  #L12d59a.  v2:= length @variable v1;
  #L12d59c.  if v3 < v2 then goto L12d5f2;
  #L12d5a0.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12d5a6.  v2:= temp;
  #L12d5a8.  if v2 != 0 then goto L12d5b0;
  #L12d5ac.  v6:= v1 @kind object;
  #L12d5ae.  goto L12d61a;
  #L12d5b0.  v2:= v3 * 3;
  #L12d5b4.  v2:= v2 + 1;
  #L12d5b8.  v2:= v2 ^>> 1;
  #L12d5bc.  v4:= 2147483645I;
  #L12d5c2.  if v2 > v3 then goto L12d5de;
  #L12d5c6.  if v3 >= v4 then goto L12d5d2;
  #L12d5ca.  v2:= 2147483645I;
  #L12d5d0.  goto L12d5de;
  #L12d5d2.  v5:= new `java.lang.OutOfMemoryError`;
  #L12d5d6.  call `<init>`(v5) @signature `Ljava/lang/OutOfMemoryError;.<init>:()V` @kind direct;
  #L12d5dc.  throw v5;
  #L12d5de.  call temp:= `copyOf`(v1, v2) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L12d5e4.  v1:= temp @kind object;
  #L12d5e6.  v2:= "Arrays.copyOf(result, newSize)" @kind object;
  #L12d5ea.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12d5f0.  goto L12d61c;
  #L12d5f2.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12d5f8.  v2:= temp;
  #L12d5fa.  if v2 != 0 then goto L12d61c;
  #L12d5fe.  if v1 != v6 then goto L12d608;
  #L12d602.  v6[v3]:= v0 @kind object;
  #L12d606.  goto L12d61a;
  #L12d608.  call temp:= `copyOf`(v1, v3) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L12d60e.  v6:= temp @kind object;
  #L12d610.  v5:= "Arrays.copyOf(result, size)" @kind object;
  #L12d614.  call `checkNotNullExpressionValue`(v6, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12d61a.  return v6 @kind object;
  #L12d61c.  v2:= v3;
  #L12d61e.  goto L12d58a;
  #L12d620.  v5:= new `java.lang.NullPointerException`;
  #L12d624.  v6:= "null cannot be cast to non-null type kotlin.Array<kotlin.Any?>" @kind object;
  #L12d628.  call `<init>`(v5, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12d62e.  throw v5;
  #L12d630.  throw v0;
}
