record `kotlin.jvm.internal.SpreadBuilder` @kind class @AccessFlag PUBLIC {
  `java.util.ArrayList` `kotlin.jvm.internal.SpreadBuilder.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.jvm.internal.SpreadBuilder` v1 @kind this, `int` v2 ) @signature `Lkotlin/jvm/internal/SpreadBuilder;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1311ec.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1311f2.  v0:= new `java.util.ArrayList`;
  #L1311f6.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1311fc.  v1.`kotlin.jvm.internal.SpreadBuilder.a` @type ^`java.util.ArrayList` := v0 @kind object;
  #L131200.  return @kind void;
}
procedure `void` `add`(`kotlin.jvm.internal.SpreadBuilder` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/jvm/internal/SpreadBuilder;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L131214.  v0:= v1.`kotlin.jvm.internal.SpreadBuilder.a` @type ^`java.util.ArrayList` @kind object;
  #L131218.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L13121e.  return @kind void;
}
procedure `void` `addSpread`(`kotlin.jvm.internal.SpreadBuilder` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlin/jvm/internal/SpreadBuilder;.addSpread:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L131230.  if v4 != 0 then goto L131236;
  #L131234.  return @kind void;
  #L131236.  v0:= instanceof @variable v4 @type ^`java.lang.Object`[] @kind boolean;
  #L13123a.  if v0 == 0 then goto L13126a;
  #L13123e.  v4:= (`java.lang.Object`[]) v4 @kind object;
  #L131242.  v0:= length @variable v4;
  #L131244.  if v0 <= 0 then goto L1312e2;
  #L131248.  v0:= v3.`kotlin.jvm.internal.SpreadBuilder.a` @type ^`java.util.ArrayList` @kind object;
  #L13124c.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L131252.  v1:= temp;
  #L131254.  v2:= length @variable v4;
  #L131256.  v1:= v1 + v2 @kind int;
  #L131258.  call `ensureCapacity`(v0, v1) @signature `Ljava/util/ArrayList;.ensureCapacity:(I)V` @kind virtual;
  #L13125e.  v0:= v3.`kotlin.jvm.internal.SpreadBuilder.a` @type ^`java.util.ArrayList` @kind object;
  #L131262.  call temp:= `addAll`(v0, v4) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L131268.  goto L1312e2;
  #L13126a.  v0:= instanceof @variable v4 @type ^`java.util.Collection` @kind boolean;
  #L13126e.  if v0 == 0 then goto L131282;
  #L131272.  v0:= v3.`kotlin.jvm.internal.SpreadBuilder.a` @type ^`java.util.ArrayList` @kind object;
  #L131276.  v4:= (`java.util.Collection`) v4 @kind object;
  #L13127a.  call temp:= `addAll`(v0, v4) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L131280.  goto L1312e2;
  #L131282.  v0:= instanceof @variable v4 @type ^`java.lang.Iterable` @kind boolean;
  #L131286.  if v0 == 0 then goto L1312b6;
  #L13128a.  v4:= (`java.lang.Iterable`) v4 @kind object;
  #L13128e.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L131294.  v4:= temp @kind object;
  #L131296.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L13129c.  v0:= temp;
  #L13129e.  if v0 == 0 then goto L1312e2;
  #L1312a2.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1312a8.  v0:= temp @kind object;
  #L1312aa.  v1:= v3.`kotlin.jvm.internal.SpreadBuilder.a` @type ^`java.util.ArrayList` @kind object;
  #L1312ae.  call temp:= `add`(v1, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1312b4.  goto L131296;
  #L1312b6.  v0:= instanceof @variable v4 @type ^`java.util.Iterator` @kind boolean;
  #L1312ba.  if v0 == 0 then goto L1312e4;
  #L1312be.  v4:= (`java.util.Iterator`) v4 @kind object;
  #L1312c2.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1312c8.  v0:= temp;
  #L1312ca.  if v0 == 0 then goto L1312e2;
  #L1312ce.  v0:= v3.`kotlin.jvm.internal.SpreadBuilder.a` @type ^`java.util.ArrayList` @kind object;
  #L1312d2.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1312d8.  v1:= temp @kind object;
  #L1312da.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1312e0.  goto L1312c2;
  #L1312e2.  return @kind void;
  #L1312e4.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1312e8.  v1:= new `java.lang.StringBuilder`;
  #L1312ec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1312f2.  v2:= "Don't know how to spread " @kind object;
  #L1312f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1312fc.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L131302.  v4:= temp @kind object;
  #L131304.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13130a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L131310.  v4:= temp @kind object;
  #L131312.  call `<init>`(v0, v4) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L131318.  throw v0;
}
procedure `int` `size`(`kotlin.jvm.internal.SpreadBuilder` v1 @kind this) @signature `Lkotlin/jvm/internal/SpreadBuilder;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1311ac.  v0:= v1.`kotlin.jvm.internal.SpreadBuilder.a` @type ^`java.util.ArrayList` @kind object;
  #L1311b0.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1311b6.  v0:= temp;
  #L1311b8.  return v0;
}
procedure `java.lang.Object`[] `toArray`(`kotlin.jvm.internal.SpreadBuilder` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lkotlin/jvm/internal/SpreadBuilder;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1311cc.  v0:= v1.`kotlin.jvm.internal.SpreadBuilder.a` @type ^`java.util.ArrayList` @kind object;
  #L1311d0.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L1311d6.  v2:= temp @kind object;
  #L1311d8.  return v2 @kind object;
}
