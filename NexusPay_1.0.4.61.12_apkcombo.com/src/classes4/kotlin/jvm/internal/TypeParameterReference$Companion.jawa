record `kotlin.jvm.internal.TypeParameterReference$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`kotlin.jvm.internal.TypeParameterReference$Companion` v0 @kind this) @signature `Lkotlin/jvm/internal/TypeParameterReference$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L131d60.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L131d66.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.TypeParameterReference$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lkotlin/jvm/internal/TypeParameterReference$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L131d78.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/TypeParameterReference$Companion;.<init>:()V` @kind direct;
  #L131d7e.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlin.jvm.internal.TypeParameterReference$Companion` v3 @kind this, `kotlin.reflect.KTypeParameter` v4 @kind object) @signature `Lkotlin/jvm/internal/TypeParameterReference$Companion;.toString:(Lkotlin/reflect/KTypeParameter;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L131cdc.  v0:= "typeParameter" @kind object;
  #L131ce0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L131ce6.  v0:= new `java.lang.StringBuilder`;
  #L131cea.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L131cf0.  call temp:= `getVariance`(v4) @signature `Lkotlin/reflect/KTypeParameter;.getVariance:()Lkotlin/reflect/KVariance;` @kind interface;
  #L131cf6.  v1:= temp @kind object;
  #L131cf8.  v2:= `@@kotlin.jvm.internal.TypeParameterReference$Companion$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L131cfc.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L131d02.  v1:= temp;
  #L131d04.  v1:= v2[v1];
  #L131d08.  v2:= 2I;
  #L131d0a.  if v1 == v2 then goto L131d22;
  #L131d0e.  v2:= 3I;
  #L131d10.  if v1 == v2 then goto L131d16;
  #L131d14.  goto L131d2c;
  #L131d16.  v1:= "out " @kind object;
  #L131d1a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L131d20.  goto L131d2c;
  #L131d22.  v1:= "in " @kind object;
  #L131d26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L131d2c.  call temp:= `getName`(v4) @signature `Lkotlin/reflect/KTypeParameter;.getName:()Ljava/lang/String;` @kind interface;
  #L131d32.  v4:= temp @kind object;
  #L131d34.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L131d3a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L131d40.  v4:= temp @kind object;
  #L131d42.  v0:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L131d46.  call `checkNotNullExpressionValue`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L131d4c.  return v4 @kind object;
}
