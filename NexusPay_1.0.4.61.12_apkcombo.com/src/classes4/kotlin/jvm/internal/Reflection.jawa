record `kotlin.jvm.internal.Reflection` @kind class @AccessFlag PUBLIC {
}
global `kotlin.jvm.internal.ReflectionFactory` `@@kotlin.jvm.internal.Reflection.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlin.reflect.KClass`[] `@@kotlin.jvm.internal.Reflection.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/jvm/internal/Reflection;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L130fb0.  v0:= 0I;
  #L130fb2.  v1:= "kotlin.reflect.jvm.internal.ReflectionFactoryImpl" @kind object;
  #L130fb6.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L130fbc.  v1:= temp @kind object;
  #L130fbe.  call temp:= `newInstance`(v1) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L130fc4.  v1:= temp @kind object;
  #L130fc6.  v1:= (`kotlin.jvm.internal.ReflectionFactory`) v1 @kind object;
  #L130fca.  v0:= v1 @kind object;
  #L130fcc.  goto L130fd0;
  #L130fce.  
  #L130fd0.  if v0 == 0 then goto L130fd6;
  #L130fd4.  goto L130fe0;
  #L130fd6.  v0:= new `kotlin.jvm.internal.ReflectionFactory`;
  #L130fda.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/ReflectionFactory;.<init>:()V` @kind direct;
  #L130fe0.  `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` := v0 @kind object;
  #L130fe4.  v0:= 0I;
  #L130fe6.  v0:= new `kotlin.reflect.KClass`[v0];
  #L130fea.  `@@kotlin.jvm.internal.Reflection.b` @type ^`kotlin.reflect.KClass`[] := v0 @kind object;
  #L130fee.  return @kind void;
  catch `java.lang.ClassCastException` @[L130fb2..L130fca] goto L130fce;
  catch `java.lang.ClassNotFoundException` @[L130fb2..L130fca] goto L130fce;
  catch `java.lang.InstantiationException` @[L130fb2..L130fca] goto L130fce;
  catch `java.lang.IllegalAccessException` @[L130fb2..L130fca] goto L130fce;
}
procedure `void` `<init>`(`kotlin.jvm.internal.Reflection` v0 @kind this) @signature `Lkotlin/jvm/internal/Reflection;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L131018.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L13101e.  return @kind void;
}
procedure `kotlin.reflect.KClass` `createKotlinClass`(`java.lang.Class` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.createKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L130bbc.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130bc0.  call temp:= `createKotlinClass`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.createKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind virtual;
  #L130bc6.  v1:= temp @kind object;
  #L130bc8.  return v1 @kind object;
}
procedure `kotlin.reflect.KClass` `createKotlinClass`(`java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.createKotlinClass:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KClass;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L130bdc.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130be0.  call temp:= `createKotlinClass`(v0, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.createKotlinClass:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KClass;` @kind virtual;
  #L130be6.  v1:= temp @kind object;
  #L130be8.  return v1 @kind object;
}
procedure `kotlin.reflect.KFunction` `function`(`kotlin.jvm.internal.FunctionReference` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.function:(Lkotlin/jvm/internal/FunctionReference;)Lkotlin/reflect/KFunction;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L130cc0.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130cc4.  call temp:= `function`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.function:(Lkotlin/jvm/internal/FunctionReference;)Lkotlin/reflect/KFunction;` @kind virtual;
  #L130cca.  v1:= temp @kind object;
  #L130ccc.  return v1 @kind object;
}
procedure `kotlin.reflect.KClass` `getOrCreateKotlinClass`(`java.lang.Class` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L130bfc.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130c00.  call temp:= `getOrCreateKotlinClass`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind virtual;
  #L130c06.  v1:= temp @kind object;
  #L130c08.  return v1 @kind object;
}
procedure `kotlin.reflect.KClass` `getOrCreateKotlinClass`(`java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KClass;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L130c1c.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130c20.  call temp:= `getOrCreateKotlinClass`(v0, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.getOrCreateKotlinClass:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KClass;` @kind virtual;
  #L130c26.  v1:= temp @kind object;
  #L130c28.  return v1 @kind object;
}
procedure `kotlin.reflect.KClass`[] `getOrCreateKotlinClasses`(`java.lang.Class`[] v4 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClasses:([Ljava/lang/Class;)[Lkotlin/reflect/KClass;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L130c3c.  v0:= length @variable v4;
  #L130c3e.  if v0 != 0 then goto L130c48;
  #L130c42.  v4:= `@@kotlin.jvm.internal.Reflection.b` @type ^`kotlin.reflect.KClass`[] @kind object;
  #L130c46.  return v4 @kind object;
  #L130c48.  v1:= new `kotlin.reflect.KClass`[v0];
  #L130c4c.  v2:= 0I;
  #L130c4e.  if v2 >= v0 then goto L130c68;
  #L130c52.  v3:= v4[v2] @kind object;
  #L130c56.  call temp:= `getOrCreateKotlinClass`(v3) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L130c5c.  v3:= temp @kind object;
  #L130c5e.  v1[v2]:= v3 @kind object;
  #L130c62.  v2:= v2 + 1;
  #L130c66.  goto L130c4e;
  #L130c68.  return v1 @kind object;
}
procedure `kotlin.reflect.KDeclarationContainer` `getOrCreateKotlinPackage`(`java.lang.Class` v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinPackage:(Ljava/lang/Class;)Lkotlin/reflect/KDeclarationContainer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L130c7c.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130c80.  v1:= "" @kind object;
  #L130c84.  call temp:= `getOrCreateKotlinPackage`(v0, v2, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.getOrCreateKotlinPackage:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L130c8a.  v2:= temp @kind object;
  #L130c8c.  return v2 @kind object;
}
procedure `kotlin.reflect.KDeclarationContainer` `getOrCreateKotlinPackage`(`java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinPackage:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KDeclarationContainer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L130ca0.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130ca4.  call temp:= `getOrCreateKotlinPackage`(v0, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.getOrCreateKotlinPackage:(Ljava/lang/Class;Ljava/lang/String;)Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L130caa.  v1:= temp @kind object;
  #L130cac.  return v1 @kind object;
}
procedure `kotlin.reflect.KMutableProperty0` `mutableProperty0`(`kotlin.jvm.internal.MutablePropertyReference0` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.mutableProperty0:(Lkotlin/jvm/internal/MutablePropertyReference0;)Lkotlin/reflect/KMutableProperty0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L130ce0.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130ce4.  call temp:= `mutableProperty0`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.mutableProperty0:(Lkotlin/jvm/internal/MutablePropertyReference0;)Lkotlin/reflect/KMutableProperty0;` @kind virtual;
  #L130cea.  v1:= temp @kind object;
  #L130cec.  return v1 @kind object;
}
procedure `kotlin.reflect.KMutableProperty1` `mutableProperty1`(`kotlin.jvm.internal.MutablePropertyReference1` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.mutableProperty1:(Lkotlin/jvm/internal/MutablePropertyReference1;)Lkotlin/reflect/KMutableProperty1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L130d00.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130d04.  call temp:= `mutableProperty1`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.mutableProperty1:(Lkotlin/jvm/internal/MutablePropertyReference1;)Lkotlin/reflect/KMutableProperty1;` @kind virtual;
  #L130d0a.  v1:= temp @kind object;
  #L130d0c.  return v1 @kind object;
}
procedure `kotlin.reflect.KMutableProperty2` `mutableProperty2`(`kotlin.jvm.internal.MutablePropertyReference2` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.mutableProperty2:(Lkotlin/jvm/internal/MutablePropertyReference2;)Lkotlin/reflect/KMutableProperty2;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L130d20.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130d24.  call temp:= `mutableProperty2`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.mutableProperty2:(Lkotlin/jvm/internal/MutablePropertyReference2;)Lkotlin/reflect/KMutableProperty2;` @kind virtual;
  #L130d2a.  v1:= temp @kind object;
  #L130d2c.  return v1 @kind object;
}
procedure `kotlin.reflect.KType` `nullableTypeOf`(`java.lang.Class` v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.nullableTypeOf:(Ljava/lang/Class;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L130da0.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130da4.  call temp:= `getOrCreateKotlinClass`(v3) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L130daa.  v3:= temp @kind object;
  #L130dac.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L130db2.  v1:= temp @kind object;
  #L130db4.  v2:= 1I;
  #L130db6.  call temp:= `typeOf`(v0, v3, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L130dbc.  v3:= temp @kind object;
  #L130dbe.  return v3 @kind object;
}
procedure `kotlin.reflect.KType` `nullableTypeOf`(`java.lang.Class` v2 @kind object, `kotlin.reflect.KTypeProjection` v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.nullableTypeOf:(Ljava/lang/Class;Lkotlin/reflect/KTypeProjection;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L130dd0.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130dd4.  call temp:= `getOrCreateKotlinClass`(v2) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L130dda.  v2:= temp @kind object;
  #L130ddc.  call temp:= `singletonList`(v3) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L130de2.  v3:= temp @kind object;
  #L130de4.  v1:= 1I;
  #L130de6.  call temp:= `typeOf`(v0, v2, v3, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L130dec.  v2:= temp @kind object;
  #L130dee.  return v2 @kind object;
}
procedure `kotlin.reflect.KType` `nullableTypeOf`(`java.lang.Class` v3 @kind object, `kotlin.reflect.KTypeProjection` v4 @kind object, `kotlin.reflect.KTypeProjection` v5 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.nullableTypeOf:(Ljava/lang/Class;Lkotlin/reflect/KTypeProjection;Lkotlin/reflect/KTypeProjection;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L130e00.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130e04.  call temp:= `getOrCreateKotlinClass`(v3) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L130e0a.  v3:= temp @kind object;
  #L130e0c.  v1:= 2I;
  #L130e0e.  v1:= new `kotlin.reflect.KTypeProjection`[v1];
  #L130e12.  v2:= 0I;
  #L130e14.  v1[v2]:= v4 @kind object;
  #L130e18.  v4:= 1I;
  #L130e1a.  v1[v4]:= v5 @kind object;
  #L130e1e.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L130e24.  v5:= temp @kind object;
  #L130e26.  call temp:= `typeOf`(v0, v3, v5, v4) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L130e2c.  v3:= temp @kind object;
  #L130e2e.  return v3 @kind object;
}
procedure `kotlin.reflect.KType` `nullableTypeOf`(`java.lang.Class` v2 @kind object, `kotlin.reflect.KTypeProjection`[] v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.nullableTypeOf:(Ljava/lang/Class;[Lkotlin/reflect/KTypeProjection;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L130e40.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130e44.  call temp:= `getOrCreateKotlinClass`(v2) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L130e4a.  v2:= temp @kind object;
  #L130e4c.  call temp:= `toList`(v3) @signature `Lkotlin/collections/ArraysKt;.toList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L130e52.  v3:= temp @kind object;
  #L130e54.  v1:= 1I;
  #L130e56.  call temp:= `typeOf`(v0, v2, v3, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L130e5c.  v2:= temp @kind object;
  #L130e5e.  return v2 @kind object;
}
procedure `kotlin.reflect.KType` `nullableTypeOf`(`kotlin.reflect.KClassifier` v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.nullableTypeOf:(Lkotlin/reflect/KClassifier;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L130e70.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130e74.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L130e7a.  v1:= temp @kind object;
  #L130e7c.  v2:= 1I;
  #L130e7e.  call temp:= `typeOf`(v0, v3, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L130e84.  v3:= temp @kind object;
  #L130e86.  return v3 @kind object;
}
procedure `kotlin.reflect.KProperty0` `property0`(`kotlin.jvm.internal.PropertyReference0` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.property0:(Lkotlin/jvm/internal/PropertyReference0;)Lkotlin/reflect/KProperty0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L130d40.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130d44.  call temp:= `property0`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.property0:(Lkotlin/jvm/internal/PropertyReference0;)Lkotlin/reflect/KProperty0;` @kind virtual;
  #L130d4a.  v1:= temp @kind object;
  #L130d4c.  return v1 @kind object;
}
procedure `kotlin.reflect.KProperty1` `property1`(`kotlin.jvm.internal.PropertyReference1` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.property1:(Lkotlin/jvm/internal/PropertyReference1;)Lkotlin/reflect/KProperty1;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L130d60.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130d64.  call temp:= `property1`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.property1:(Lkotlin/jvm/internal/PropertyReference1;)Lkotlin/reflect/KProperty1;` @kind virtual;
  #L130d6a.  v1:= temp @kind object;
  #L130d6c.  return v1 @kind object;
}
procedure `kotlin.reflect.KProperty2` `property2`(`kotlin.jvm.internal.PropertyReference2` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.property2:(Lkotlin/jvm/internal/PropertyReference2;)Lkotlin/reflect/KProperty2;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L130d80.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130d84.  call temp:= `property2`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.property2:(Lkotlin/jvm/internal/PropertyReference2;)Lkotlin/reflect/KProperty2;` @kind virtual;
  #L130d8a.  v1:= temp @kind object;
  #L130d8c.  return v1 @kind object;
}
procedure `java.lang.String` `renderLambdaToString`(`kotlin.jvm.internal.FunctionBase` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.renderLambdaToString:(Lkotlin/jvm/internal/FunctionBase;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L130b7c.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130b80.  call temp:= `renderLambdaToString`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.renderLambdaToString:(Lkotlin/jvm/internal/FunctionBase;)Ljava/lang/String;` @kind virtual;
  #L130b86.  v1:= temp @kind object;
  #L130b88.  return v1 @kind object;
}
procedure `java.lang.String` `renderLambdaToString`(`kotlin.jvm.internal.Lambda` v1 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.renderLambdaToString:(Lkotlin/jvm/internal/Lambda;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L130b9c.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130ba0.  call temp:= `renderLambdaToString`(v0, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.renderLambdaToString:(Lkotlin/jvm/internal/Lambda;)Ljava/lang/String;` @kind virtual;
  #L130ba6.  v1:= temp @kind object;
  #L130ba8.  return v1 @kind object;
}
procedure `void` `setUpperBounds`(`kotlin.reflect.KTypeParameter` v1 @kind object, `kotlin.reflect.KType` v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.setUpperBounds:(Lkotlin/reflect/KTypeParameter;Lkotlin/reflect/KType;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L131030.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L131034.  call temp:= `singletonList`(v2) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L13103a.  v2:= temp @kind object;
  #L13103c.  call `setUpperBounds`(v0, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.setUpperBounds:(Lkotlin/reflect/KTypeParameter;Ljava/util/List;)V` @kind virtual;
  #L131042.  return @kind void;
}
procedure `void` `setUpperBounds`(`kotlin.reflect.KTypeParameter` v1 @kind object, `kotlin.reflect.KType`[] v2 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.setUpperBounds:(Lkotlin/reflect/KTypeParameter;[Lkotlin/reflect/KType;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L131054.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L131058.  call temp:= `toList`(v2) @signature `Lkotlin/collections/ArraysKt;.toList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L13105e.  v2:= temp @kind object;
  #L131060.  call `setUpperBounds`(v0, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.setUpperBounds:(Lkotlin/reflect/KTypeParameter;Ljava/util/List;)V` @kind virtual;
  #L131066.  return @kind void;
}
procedure `kotlin.reflect.KType` `typeOf`(`java.lang.Class` v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.typeOf:(Ljava/lang/Class;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L130e98.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130e9c.  call temp:= `getOrCreateKotlinClass`(v3) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L130ea2.  v3:= temp @kind object;
  #L130ea4.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L130eaa.  v1:= temp @kind object;
  #L130eac.  v2:= 0I;
  #L130eae.  call temp:= `typeOf`(v0, v3, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L130eb4.  v3:= temp @kind object;
  #L130eb6.  return v3 @kind object;
}
procedure `kotlin.reflect.KType` `typeOf`(`java.lang.Class` v2 @kind object, `kotlin.reflect.KTypeProjection` v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.typeOf:(Ljava/lang/Class;Lkotlin/reflect/KTypeProjection;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L130ec8.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130ecc.  call temp:= `getOrCreateKotlinClass`(v2) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L130ed2.  v2:= temp @kind object;
  #L130ed4.  call temp:= `singletonList`(v3) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L130eda.  v3:= temp @kind object;
  #L130edc.  v1:= 0I;
  #L130ede.  call temp:= `typeOf`(v0, v2, v3, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L130ee4.  v2:= temp @kind object;
  #L130ee6.  return v2 @kind object;
}
procedure `kotlin.reflect.KType` `typeOf`(`java.lang.Class` v3 @kind object, `kotlin.reflect.KTypeProjection` v4 @kind object, `kotlin.reflect.KTypeProjection` v5 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.typeOf:(Ljava/lang/Class;Lkotlin/reflect/KTypeProjection;Lkotlin/reflect/KTypeProjection;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L130ef8.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130efc.  call temp:= `getOrCreateKotlinClass`(v3) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L130f02.  v3:= temp @kind object;
  #L130f04.  v1:= 2I;
  #L130f06.  v1:= new `kotlin.reflect.KTypeProjection`[v1];
  #L130f0a.  v2:= 0I;
  #L130f0c.  v1[v2]:= v4 @kind object;
  #L130f10.  v4:= 1I;
  #L130f12.  v1[v4]:= v5 @kind object;
  #L130f16.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L130f1c.  v4:= temp @kind object;
  #L130f1e.  call temp:= `typeOf`(v0, v3, v4, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L130f24.  v3:= temp @kind object;
  #L130f26.  return v3 @kind object;
}
procedure `kotlin.reflect.KType` `typeOf`(`java.lang.Class` v2 @kind object, `kotlin.reflect.KTypeProjection`[] v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.typeOf:(Ljava/lang/Class;[Lkotlin/reflect/KTypeProjection;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L130f38.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130f3c.  call temp:= `getOrCreateKotlinClass`(v2) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L130f42.  v2:= temp @kind object;
  #L130f44.  call temp:= `toList`(v3) @signature `Lkotlin/collections/ArraysKt;.toList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L130f4a.  v3:= temp @kind object;
  #L130f4c.  v1:= 0I;
  #L130f4e.  call temp:= `typeOf`(v0, v2, v3, v1) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L130f54.  v2:= temp @kind object;
  #L130f56.  return v2 @kind object;
}
procedure `kotlin.reflect.KType` `typeOf`(`kotlin.reflect.KClassifier` v3 @kind object) @signature `Lkotlin/jvm/internal/Reflection;.typeOf:(Lkotlin/reflect/KClassifier;)Lkotlin/reflect/KType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L130f68.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130f6c.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L130f72.  v1:= temp @kind object;
  #L130f74.  v2:= 0I;
  #L130f76.  call temp:= `typeOf`(v0, v3, v1, v2) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeOf:(Lkotlin/reflect/KClassifier;Ljava/util/List;Z)Lkotlin/reflect/KType;` @kind virtual;
  #L130f7c.  v3:= temp @kind object;
  #L130f7e.  return v3 @kind object;
}
procedure `kotlin.reflect.KTypeParameter` `typeParameter`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object, `kotlin.reflect.KVariance` v3 @kind object, `boolean` v4 ) @signature `Lkotlin/jvm/internal/Reflection;.typeParameter:(Ljava/lang/Object;Ljava/lang/String;Lkotlin/reflect/KVariance;Z)Lkotlin/reflect/KTypeParameter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L130f90.  v0:= `@@kotlin.jvm.internal.Reflection.a` @type ^`kotlin.jvm.internal.ReflectionFactory` @kind object;
  #L130f94.  call temp:= `typeParameter`(v0, v1, v2, v3, v4) @signature `Lkotlin/jvm/internal/ReflectionFactory;.typeParameter:(Ljava/lang/Object;Ljava/lang/String;Lkotlin/reflect/KVariance;Z)Lkotlin/reflect/KTypeParameter;` @kind virtual;
  #L130f9a.  v1:= temp @kind object;
  #L130f9c.  return v1 @kind object;
}
