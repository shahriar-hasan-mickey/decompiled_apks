record `kotlin.jvm.internal.d` @kind class @AccessFlag FINAL extends `kotlin.collections.DoubleIterator` @kind class {
  `int` `kotlin.jvm.internal.d.a` @AccessFlag PRIVATE;
  `double`[] `kotlin.jvm.internal.d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.jvm.internal.d` v1 @kind this, `double`[] v2 @kind object) @signature `Lkotlin/jvm/internal/d;.<init>:([D)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L12bb74.  v0:= "array" @kind object;
  #L12bb78.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12bb7e.  call `<init>`(v1) @signature `Lkotlin/collections/DoubleIterator;.<init>:()V` @kind direct;
  #L12bb84.  v1.`kotlin.jvm.internal.d.b` @type ^`double`[] := v2 @kind object;
  #L12bb88.  return @kind void;
}
procedure `boolean` `hasNext`(`kotlin.jvm.internal.d` v2 @kind this) @signature `Lkotlin/jvm/internal/d;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12baf4.  v0:= v2.`kotlin.jvm.internal.d.a` @type ^`int`;
  #L12baf8.  v1:= v2.`kotlin.jvm.internal.d.b` @type ^`double`[] @kind object;
  #L12bafc.  v1:= length @variable v1;
  #L12bafe.  if v0 >= v1 then goto L12bb06;
  #L12bb02.  v0:= 1I;
  #L12bb04.  goto L12bb08;
  #L12bb06.  v0:= 0I;
  #L12bb08.  return v0;
}
procedure `double` `nextDouble`(`kotlin.jvm.internal.d` v3 @kind this) @signature `Lkotlin/jvm/internal/d;.nextDouble:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L12bb1c.  v0:= v3.`kotlin.jvm.internal.d.b` @type ^`double`[] @kind object;
  #L12bb20.  v1:= v3.`kotlin.jvm.internal.d.a` @type ^`int`;
  #L12bb24.  v2:= v1 + 1;
  #L12bb28.  v3.`kotlin.jvm.internal.d.a` @type ^`int` := v2;
  #L12bb2c.  v1:= v0[v1] @kind wide;
  #L12bb30.  return v1 @kind wide;
  #L12bb32.  v0:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L12bb34.  v1:= v3.`kotlin.jvm.internal.d.a` @type ^`int`;
  #L12bb38.  v1:= v1 + -1;
  #L12bb3c.  v3.`kotlin.jvm.internal.d.a` @type ^`int` := v1;
  #L12bb40.  v1:= new `java.util.NoSuchElementException`;
  #L12bb44.  call temp:= `getMessage`(v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L12bb4a.  v0:= temp @kind object;
  #L12bb4c.  call `<init>`(v1, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12bb52.  throw v1;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L12bb1c..L12bb30] goto L12bb32;
}
