record `kotlin.jvm.internal.FunctionReference` @kind class @AccessFlag PUBLIC extends `kotlin.jvm.internal.CallableReference` @kind class, `kotlin.jvm.internal.FunctionBase` @kind interface, `kotlin.reflect.KFunction` @kind interface {
  `int` `kotlin.jvm.internal.FunctionReference.f` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.jvm.internal.FunctionReference.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.jvm.internal.FunctionReference` v7 @kind this, `int` v8 ) @signature `Lkotlin/jvm/internal/FunctionReference;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L12e914.  v2:= `@@kotlin.jvm.internal.CallableReference.NO_RECEIVER` @type ^`java.lang.Object` @kind object;
  #L12e918.  v3:= 0I;
  #L12e91a.  v4:= 0I;
  #L12e91c.  v5:= 0I;
  #L12e91e.  v6:= 0I;
  #L12e920.  v0:= v7 @kind object;
  #L12e922.  v1:= v8;
  #L12e924.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/jvm/internal/FunctionReference;.<init>:(ILjava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L12e92a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.FunctionReference` v7 @kind this, `int` v8 , `java.lang.Object` v9 @kind object) @signature `Lkotlin/jvm/internal/FunctionReference;.<init>:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L12e93c.  v3:= 0I;
  #L12e93e.  v4:= 0I;
  #L12e940.  v5:= 0I;
  #L12e942.  v6:= 0I;
  #L12e944.  v0:= v7 @kind object;
  #L12e946.  v1:= v8;
  #L12e948.  v2:= v9 @kind object;
  #L12e94a.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/jvm/internal/FunctionReference;.<init>:(ILjava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L12e950.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.FunctionReference` v8 @kind this, `int` v9 , `java.lang.Object` v10 @kind object, `java.lang.Class` v11 @kind object, `java.lang.String` v12 @kind object, `java.lang.String` v13 @kind object, `int` v14 ) @signature `Lkotlin/jvm/internal/FunctionReference;.<init>:(ILjava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L12e964.  v0:= v14 ^& 1;
  #L12e968.  v1:= 1I;
  #L12e96a.  if v0 != v1 then goto L12e972;
  #L12e96e.  v7:= 1I;
  #L12e970.  goto L12e976;
  #L12e972.  v0:= 0I;
  #L12e974.  v7:= 0I;
  #L12e976.  v2:= v8 @kind object;
  #L12e978.  v3:= v10 @kind object;
  #L12e97a.  v4:= v11 @kind object;
  #L12e97c.  v5:= v12 @kind object;
  #L12e97e.  v6:= v13 @kind object;
  #L12e980.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lkotlin/jvm/internal/CallableReference;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L12e986.  v8.`kotlin.jvm.internal.FunctionReference.f` @type ^`int` := v9;
  #L12e98a.  v9:= v14 ^> 1;
  #L12e98e.  v8.`kotlin.jvm.internal.FunctionReference.g` @type ^`int` := v9;
  #L12e992.  return @kind void;
}
procedure `kotlin.reflect.KCallable` `computeReflected`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.computeReflected:()Lkotlin/reflect/KCallable;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L12e8bc.  call temp:= `function`(v1) @signature `Lkotlin/jvm/internal/Reflection;.function:(Lkotlin/jvm/internal/FunctionReference;)Lkotlin/reflect/KFunction;` @kind static;
  #L12e8c2.  v0:= temp @kind object;
  #L12e8c4.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlin.jvm.internal.FunctionReference` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlin/jvm/internal/FunctionReference;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L12e644.  v0:= 1I;
  #L12e646.  if v5 != v4 then goto L12e64c;
  #L12e64a.  return v0;
  #L12e64c.  v1:= instanceof @variable v5 @type ^`kotlin.jvm.internal.FunctionReference` @kind boolean;
  #L12e650.  v2:= 0I;
  #L12e652.  if v1 == 0 then goto L12e6e8;
  #L12e656.  v5:= (`kotlin.jvm.internal.FunctionReference`) v5 @kind object;
  #L12e65a.  call temp:= `getOwner`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L12e660.  v1:= temp @kind object;
  #L12e662.  call temp:= `getOwner`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L12e668.  v3:= temp @kind object;
  #L12e66a.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12e670.  v1:= temp;
  #L12e672.  if v1 == 0 then goto L12e6e4;
  #L12e676.  call temp:= `getName`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L12e67c.  v1:= temp @kind object;
  #L12e67e.  call temp:= `getName`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L12e684.  v3:= temp @kind object;
  #L12e686.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L12e68c.  v1:= temp;
  #L12e68e.  if v1 == 0 then goto L12e6e4;
  #L12e692.  call temp:= `getSignature`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L12e698.  v1:= temp @kind object;
  #L12e69a.  call temp:= `getSignature`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L12e6a0.  v3:= temp @kind object;
  #L12e6a2.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L12e6a8.  v1:= temp;
  #L12e6aa.  if v1 == 0 then goto L12e6e4;
  #L12e6ae.  v1:= v4.`kotlin.jvm.internal.FunctionReference.g` @type ^`int`;
  #L12e6b2.  v3:= v5.`kotlin.jvm.internal.FunctionReference.g` @type ^`int`;
  #L12e6b6.  if v1 != v3 then goto L12e6e4;
  #L12e6ba.  v1:= v4.`kotlin.jvm.internal.FunctionReference.f` @type ^`int`;
  #L12e6be.  v3:= v5.`kotlin.jvm.internal.FunctionReference.f` @type ^`int`;
  #L12e6c2.  if v1 != v3 then goto L12e6e4;
  #L12e6c6.  call temp:= `getBoundReceiver`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.getBoundReceiver:()Ljava/lang/Object;` @kind virtual;
  #L12e6cc.  v1:= temp @kind object;
  #L12e6ce.  call temp:= `getBoundReceiver`(v5) @signature `Lkotlin/jvm/internal/CallableReference;.getBoundReceiver:()Ljava/lang/Object;` @kind virtual;
  #L12e6d4.  v5:= temp @kind object;
  #L12e6d6.  call temp:= `areEqual`(v1, v5) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12e6dc.  v5:= temp;
  #L12e6de.  if v5 == 0 then goto L12e6e4;
  #L12e6e2.  goto L12e6e6;
  #L12e6e4.  v0:= 0I;
  #L12e6e6.  return v0;
  #L12e6e8.  v0:= instanceof @variable v5 @type ^`kotlin.reflect.KFunction` @kind boolean;
  #L12e6ec.  if v0 == 0 then goto L12e702;
  #L12e6f0.  call temp:= `compute`(v4) @signature `Lkotlin/jvm/internal/CallableReference;.compute:()Lkotlin/reflect/KCallable;` @kind virtual;
  #L12e6f6.  v0:= temp @kind object;
  #L12e6f8.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L12e6fe.  v5:= temp;
  #L12e700.  return v5;
  #L12e702.  return v2;
}
procedure `int` `getArity`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.getArity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12e7c8.  v0:= v1.`kotlin.jvm.internal.FunctionReference.f` @type ^`int`;
  #L12e7cc.  return v0;
}
procedure `kotlin.reflect.KCallable` `getReflected`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KCallable;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;
    v0;

  #L12e8d8.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L12e8de.  v0:= temp @kind object;
  #L12e8e0.  return v0 @kind object;
}
procedure `kotlin.reflect.KFunction` `getReflected`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L12e8f4.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/CallableReference;.getReflected:()Lkotlin/reflect/KCallable;` @kind super;
  #L12e8fa.  v0:= temp @kind object;
  #L12e8fc.  v0:= (`kotlin.reflect.KFunction`) v0 @kind object;
  #L12e900.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.jvm.internal.FunctionReference` v2 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12e7e0.  call temp:= `getOwner`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L12e7e6.  v0:= temp @kind object;
  #L12e7e8.  if v0 != 0 then goto L12e7f0;
  #L12e7ec.  v0:= 0I;
  #L12e7ee.  goto L12e804;
  #L12e7f0.  call temp:= `getOwner`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @kind virtual;
  #L12e7f6.  v0:= temp @kind object;
  #L12e7f8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L12e7fe.  v0:= temp;
  #L12e800.  v0:= v0 * 31;
  #L12e804.  call temp:= `getName`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L12e80a.  v1:= temp @kind object;
  #L12e80c.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L12e812.  v1:= temp;
  #L12e814.  v0:= v0 + v1 @kind int;
  #L12e816.  v0:= v0 * 31;
  #L12e81a.  call temp:= `getSignature`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getSignature:()Ljava/lang/String;` @kind virtual;
  #L12e820.  v1:= temp @kind object;
  #L12e822.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L12e828.  v1:= temp;
  #L12e82a.  v0:= v0 + v1 @kind int;
  #L12e82c.  return v0;
}
procedure `boolean` `isExternal`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.isExternal:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12e714.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L12e71a.  v0:= temp @kind object;
  #L12e71c.  call temp:= `isExternal`(v0) @signature `Lkotlin/reflect/KFunction;.isExternal:()Z` @kind interface;
  #L12e722.  v0:= temp;
  #L12e724.  return v0;
}
procedure `boolean` `isInfix`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.isInfix:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12e738.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L12e73e.  v0:= temp @kind object;
  #L12e740.  call temp:= `isInfix`(v0) @signature `Lkotlin/reflect/KFunction;.isInfix:()Z` @kind interface;
  #L12e746.  v0:= temp;
  #L12e748.  return v0;
}
procedure `boolean` `isInline`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.isInline:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12e75c.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L12e762.  v0:= temp @kind object;
  #L12e764.  call temp:= `isInline`(v0) @signature `Lkotlin/reflect/KFunction;.isInline:()Z` @kind interface;
  #L12e76a.  v0:= temp;
  #L12e76c.  return v0;
}
procedure `boolean` `isOperator`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.isOperator:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12e780.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L12e786.  v0:= temp @kind object;
  #L12e788.  call temp:= `isOperator`(v0) @signature `Lkotlin/reflect/KFunction;.isOperator:()Z` @kind interface;
  #L12e78e.  v0:= temp;
  #L12e790.  return v0;
}
procedure `boolean` `isSuspend`(`kotlin.jvm.internal.FunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.isSuspend:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12e7a4.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/FunctionReference;.getReflected:()Lkotlin/reflect/KFunction;` @kind virtual;
  #L12e7aa.  v0:= temp @kind object;
  #L12e7ac.  call temp:= `isSuspend`(v0) @signature `Lkotlin/reflect/KFunction;.isSuspend:()Z` @kind interface;
  #L12e7b2.  v0:= temp;
  #L12e7b4.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.jvm.internal.FunctionReference` v2 @kind this) @signature `Lkotlin/jvm/internal/FunctionReference;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12e840.  call temp:= `compute`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.compute:()Lkotlin/reflect/KCallable;` @kind virtual;
  #L12e846.  v0:= temp @kind object;
  #L12e848.  if v0 == v2 then goto L12e856;
  #L12e84c.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L12e852.  v0:= temp @kind object;
  #L12e854.  return v0 @kind object;
  #L12e856.  call temp:= `getName`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L12e85c.  v0:= temp @kind object;
  #L12e85e.  v1:= "<init>" @kind object;
  #L12e862.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L12e868.  v0:= temp;
  #L12e86a.  if v0 == 0 then goto L12e874;
  #L12e86e.  v0:= "constructor (Kotlin reflection is not available)" @kind object;
  #L12e872.  goto L12e8a8;
  #L12e874.  v0:= new `java.lang.StringBuilder`;
  #L12e878.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12e87e.  v1:= "function " @kind object;
  #L12e882.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e888.  call temp:= `getName`(v2) @signature `Lkotlin/jvm/internal/CallableReference;.getName:()Ljava/lang/String;` @kind virtual;
  #L12e88e.  v1:= temp @kind object;
  #L12e890.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e896.  v1:= " (Kotlin reflection is not available)" @kind object;
  #L12e89a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12e8a0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12e8a6.  v0:= temp @kind object;
  #L12e8a8.  return v0 @kind object;
}
