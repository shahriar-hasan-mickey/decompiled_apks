record `kotlin.jvm.internal.ClassReference` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.reflect.KClass` @kind interface, `kotlin.jvm.internal.ClassBasedDeclarationContainer` @kind interface {
  `java.lang.Class` `kotlin.jvm.internal.ClassReference.a` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.jvm.internal.ClassReference$Companion` `@@kotlin.jvm.internal.ClassReference.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.Map` `@@kotlin.jvm.internal.ClassReference.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.HashMap` `@@kotlin.jvm.internal.ClassReference.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.HashMap` `@@kotlin.jvm.internal.ClassReference.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.HashMap` `@@kotlin.jvm.internal.ClassReference.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@kotlin.jvm.internal.ClassReference.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/jvm/internal/ClassReference;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L12cdcc.  v0:= new `kotlin.jvm.internal.ClassReference$Companion`;
  #L12cdd0.  v1:= 0I;
  #L12cdd2.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L12cdd8.  `@@kotlin.jvm.internal.ClassReference.Companion` @type ^`kotlin.jvm.internal.ClassReference$Companion` := v0 @kind object;
  #L12cddc.  v0:= 23I;
  #L12cde0.  v0:= new `java.lang.Class`[v0];
  #L12cde4.  v2:= constclass @type ^`kotlin.jvm.functions.Function0` @kind object;
  #L12cde8.  v3:= 0I;
  #L12cdea.  v0[v3]:= v2 @kind object;
  #L12cdee.  v2:= constclass @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L12cdf2.  v4:= 1I;
  #L12cdf4.  v0[v4]:= v2 @kind object;
  #L12cdf8.  v2:= constclass @type ^`kotlin.jvm.functions.Function2` @kind object;
  #L12cdfc.  v4:= 2I;
  #L12cdfe.  v0[v4]:= v2 @kind object;
  #L12ce02.  v2:= 3I;
  #L12ce04.  v5:= constclass @type ^`kotlin.jvm.functions.Function3` @kind object;
  #L12ce08.  v0[v2]:= v5 @kind object;
  #L12ce0c.  v2:= 4I;
  #L12ce0e.  v5:= constclass @type ^`kotlin.jvm.functions.Function4` @kind object;
  #L12ce12.  v0[v2]:= v5 @kind object;
  #L12ce16.  v2:= 5I;
  #L12ce18.  v5:= constclass @type ^`kotlin.jvm.functions.Function5` @kind object;
  #L12ce1c.  v0[v2]:= v5 @kind object;
  #L12ce20.  v2:= 6I;
  #L12ce22.  v5:= constclass @type ^`kotlin.jvm.functions.Function6` @kind object;
  #L12ce26.  v0[v2]:= v5 @kind object;
  #L12ce2a.  v2:= 7I;
  #L12ce2c.  v5:= constclass @type ^`kotlin.jvm.functions.Function7` @kind object;
  #L12ce30.  v0[v2]:= v5 @kind object;
  #L12ce34.  v2:= 8I;
  #L12ce38.  v5:= constclass @type ^`kotlin.jvm.functions.Function8` @kind object;
  #L12ce3c.  v0[v2]:= v5 @kind object;
  #L12ce40.  v2:= 9I;
  #L12ce44.  v5:= constclass @type ^`kotlin.jvm.functions.Function9` @kind object;
  #L12ce48.  v0[v2]:= v5 @kind object;
  #L12ce4c.  v2:= constclass @type ^`kotlin.jvm.functions.Function10` @kind object;
  #L12ce50.  v5:= 10I;
  #L12ce54.  v0[v5]:= v2 @kind object;
  #L12ce58.  v2:= 11I;
  #L12ce5c.  v6:= constclass @type ^`kotlin.jvm.functions.Function11` @kind object;
  #L12ce60.  v0[v2]:= v6 @kind object;
  #L12ce64.  v2:= 12I;
  #L12ce68.  v6:= constclass @type ^`kotlin.jvm.functions.Function12` @kind object;
  #L12ce6c.  v0[v2]:= v6 @kind object;
  #L12ce70.  v2:= 13I;
  #L12ce74.  v6:= constclass @type ^`kotlin.jvm.functions.Function13` @kind object;
  #L12ce78.  v0[v2]:= v6 @kind object;
  #L12ce7c.  v2:= 14I;
  #L12ce80.  v6:= constclass @type ^`kotlin.jvm.functions.Function14` @kind object;
  #L12ce84.  v0[v2]:= v6 @kind object;
  #L12ce88.  v2:= 15I;
  #L12ce8c.  v6:= constclass @type ^`kotlin.jvm.functions.Function15` @kind object;
  #L12ce90.  v0[v2]:= v6 @kind object;
  #L12ce94.  v2:= 16I;
  #L12ce98.  v6:= constclass @type ^`kotlin.jvm.functions.Function16` @kind object;
  #L12ce9c.  v0[v2]:= v6 @kind object;
  #L12cea0.  v2:= 17I;
  #L12cea4.  v6:= constclass @type ^`kotlin.jvm.functions.Function17` @kind object;
  #L12cea8.  v0[v2]:= v6 @kind object;
  #L12ceac.  v2:= 18I;
  #L12ceb0.  v6:= constclass @type ^`kotlin.jvm.functions.Function18` @kind object;
  #L12ceb4.  v0[v2]:= v6 @kind object;
  #L12ceb8.  v2:= 19I;
  #L12cebc.  v6:= constclass @type ^`kotlin.jvm.functions.Function19` @kind object;
  #L12cec0.  v0[v2]:= v6 @kind object;
  #L12cec4.  v2:= 20I;
  #L12cec8.  v6:= constclass @type ^`kotlin.jvm.functions.Function20` @kind object;
  #L12cecc.  v0[v2]:= v6 @kind object;
  #L12ced0.  v2:= 21I;
  #L12ced4.  v6:= constclass @type ^`kotlin.jvm.functions.Function21` @kind object;
  #L12ced8.  v0[v2]:= v6 @kind object;
  #L12cedc.  v2:= 22I;
  #L12cee0.  v6:= constclass @type ^`kotlin.jvm.functions.Function22` @kind object;
  #L12cee4.  v0[v2]:= v6 @kind object;
  #L12cee8.  call temp:= `listOf`(v0) @signature `Lkotlin/collections/CollectionsKt;.listOf:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L12ceee.  v0:= temp @kind object;
  #L12cef0.  v2:= new `java.util.ArrayList`;
  #L12cef4.  call temp:= `collectionSizeOrDefault`(v0, v5) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L12cefa.  v5:= temp;
  #L12cefc.  call `<init>`(v2, v5) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L12cf02.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L12cf08.  v0:= temp @kind object;
  #L12cf0a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12cf10.  v5:= temp;
  #L12cf12.  if v5 == 0 then goto L12cf4a;
  #L12cf16.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L12cf1c.  v5:= temp @kind object;
  #L12cf1e.  v6:= v3 + 1;
  #L12cf22.  if v3 >= 0 then goto L12cf2c;
  #L12cf26.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L12cf2c.  v5:= (`java.lang.Class`) v5 @kind object;
  #L12cf30.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L12cf36.  v3:= temp @kind object;
  #L12cf38.  call temp:= `to`(v5, v3) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L12cf3e.  v3:= temp @kind object;
  #L12cf40.  call temp:= `add`(v2, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L12cf46.  v3:= v6;
  #L12cf48.  goto L12cf0a;
  #L12cf4a.  call temp:= `toMap`(v2) @signature `Lkotlin/collections/MapsKt;.toMap:(Ljava/lang/Iterable;)Ljava/util/Map;` @kind static;
  #L12cf50.  v0:= temp @kind object;
  #L12cf52.  `@@kotlin.jvm.internal.ClassReference.b` @type ^`java.util.Map` := v0 @kind object;
  #L12cf56.  v0:= new `java.util.HashMap`;
  #L12cf5a.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L12cf60.  v2:= "boolean" @kind object;
  #L12cf64.  v3:= "kotlin.Boolean" @kind object;
  #L12cf68.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12cf6e.  v2:= "char" @kind object;
  #L12cf72.  v5:= "kotlin.Char" @kind object;
  #L12cf76.  call temp:= `put`(v0, v2, v5) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12cf7c.  v2:= "byte" @kind object;
  #L12cf80.  v6:= "kotlin.Byte" @kind object;
  #L12cf84.  call temp:= `put`(v0, v2, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12cf8a.  v2:= "short" @kind object;
  #L12cf8e.  v7:= "kotlin.Short" @kind object;
  #L12cf92.  call temp:= `put`(v0, v2, v7) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12cf98.  v2:= "int" @kind object;
  #L12cf9c.  v8:= "kotlin.Int" @kind object;
  #L12cfa0.  call temp:= `put`(v0, v2, v8) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12cfa6.  v2:= "float" @kind object;
  #L12cfaa.  v9:= "kotlin.Float" @kind object;
  #L12cfae.  call temp:= `put`(v0, v2, v9) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12cfb4.  v2:= "long" @kind object;
  #L12cfb8.  v10:= "kotlin.Long" @kind object;
  #L12cfbc.  call temp:= `put`(v0, v2, v10) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12cfc2.  v2:= "double" @kind object;
  #L12cfc6.  v11:= "kotlin.Double" @kind object;
  #L12cfca.  call temp:= `put`(v0, v2, v11) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12cfd0.  `@@kotlin.jvm.internal.ClassReference.c` @type ^`java.util.HashMap` := v0 @kind object;
  #L12cfd4.  v0:= new `java.util.HashMap`;
  #L12cfd8.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L12cfde.  v2:= "java.lang.Boolean" @kind object;
  #L12cfe2.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12cfe8.  v2:= "java.lang.Character" @kind object;
  #L12cfec.  call temp:= `put`(v0, v2, v5) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12cff2.  v2:= "java.lang.Byte" @kind object;
  #L12cff6.  call temp:= `put`(v0, v2, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12cffc.  v2:= "java.lang.Short" @kind object;
  #L12d000.  call temp:= `put`(v0, v2, v7) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d006.  v2:= "java.lang.Integer" @kind object;
  #L12d00a.  call temp:= `put`(v0, v2, v8) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d010.  v2:= "java.lang.Float" @kind object;
  #L12d014.  call temp:= `put`(v0, v2, v9) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d01a.  v2:= "java.lang.Long" @kind object;
  #L12d01e.  call temp:= `put`(v0, v2, v10) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d024.  v2:= "java.lang.Double" @kind object;
  #L12d028.  call temp:= `put`(v0, v2, v11) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d02e.  `@@kotlin.jvm.internal.ClassReference.d` @type ^`java.util.HashMap` := v0 @kind object;
  #L12d032.  v0:= new `java.util.HashMap`;
  #L12d036.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L12d03c.  v2:= "java.lang.Object" @kind object;
  #L12d040.  v3:= "kotlin.Any" @kind object;
  #L12d044.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d04a.  v2:= "java.lang.String" @kind object;
  #L12d04e.  v3:= "kotlin.String" @kind object;
  #L12d052.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d058.  v2:= "java.lang.CharSequence" @kind object;
  #L12d05c.  v3:= "kotlin.CharSequence" @kind object;
  #L12d060.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d066.  v2:= "java.lang.Throwable" @kind object;
  #L12d06a.  v3:= "kotlin.Throwable" @kind object;
  #L12d06e.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d074.  v2:= "java.lang.Cloneable" @kind object;
  #L12d078.  v3:= "kotlin.Cloneable" @kind object;
  #L12d07c.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d082.  v2:= "java.lang.Number" @kind object;
  #L12d086.  v3:= "kotlin.Number" @kind object;
  #L12d08a.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d090.  v2:= "java.lang.Comparable" @kind object;
  #L12d094.  v3:= "kotlin.Comparable" @kind object;
  #L12d098.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d09e.  v2:= "java.lang.Enum" @kind object;
  #L12d0a2.  v3:= "kotlin.Enum" @kind object;
  #L12d0a6.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d0ac.  v2:= "java.lang.annotation.Annotation" @kind object;
  #L12d0b0.  v3:= "kotlin.Annotation" @kind object;
  #L12d0b4.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d0ba.  v2:= "java.lang.Iterable" @kind object;
  #L12d0be.  v3:= "kotlin.collections.Iterable" @kind object;
  #L12d0c2.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d0c8.  v2:= "java.util.Iterator" @kind object;
  #L12d0cc.  v3:= "kotlin.collections.Iterator" @kind object;
  #L12d0d0.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d0d6.  v2:= "java.util.Collection" @kind object;
  #L12d0da.  v3:= "kotlin.collections.Collection" @kind object;
  #L12d0de.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d0e4.  v2:= "java.util.List" @kind object;
  #L12d0e8.  v3:= "kotlin.collections.List" @kind object;
  #L12d0ec.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d0f2.  v2:= "java.util.Set" @kind object;
  #L12d0f6.  v3:= "kotlin.collections.Set" @kind object;
  #L12d0fa.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d100.  v2:= "java.util.ListIterator" @kind object;
  #L12d104.  v3:= "kotlin.collections.ListIterator" @kind object;
  #L12d108.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d10e.  v2:= "java.util.Map" @kind object;
  #L12d112.  v3:= "kotlin.collections.Map" @kind object;
  #L12d116.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d11c.  v2:= "java.util.Map$Entry" @kind object;
  #L12d120.  v3:= "kotlin.collections.Map.Entry" @kind object;
  #L12d124.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d12a.  v2:= "kotlin.jvm.internal.StringCompanionObject" @kind object;
  #L12d12e.  v3:= "kotlin.String.Companion" @kind object;
  #L12d132.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d138.  v2:= "kotlin.jvm.internal.EnumCompanionObject" @kind object;
  #L12d13c.  v3:= "kotlin.Enum.Companion" @kind object;
  #L12d140.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d146.  v2:= `@@kotlin.jvm.internal.ClassReference.c` @type ^`java.util.HashMap` @kind object;
  #L12d14a.  call `putAll`(v0, v2) @signature `Ljava/util/HashMap;.putAll:(Ljava/util/Map;)V` @kind virtual;
  #L12d150.  v2:= `@@kotlin.jvm.internal.ClassReference.d` @type ^`java.util.HashMap` @kind object;
  #L12d154.  call `putAll`(v0, v2) @signature `Ljava/util/HashMap;.putAll:(Ljava/util/Map;)V` @kind virtual;
  #L12d15a.  v2:= `@@kotlin.jvm.internal.ClassReference.c` @type ^`java.util.HashMap` @kind object;
  #L12d15e.  call temp:= `values`(v2) @signature `Ljava/util/HashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L12d164.  v2:= temp @kind object;
  #L12d166.  v3:= "primitiveFqNames.values" @kind object;
  #L12d16a.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12d170.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L12d176.  v2:= temp @kind object;
  #L12d178.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12d17e.  v3:= temp;
  #L12d180.  v5:= 46I;
  #L12d184.  if v3 == 0 then goto L12d214;
  #L12d188.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L12d18e.  v3:= temp @kind object;
  #L12d190.  v3:= (`java.lang.String`) v3 @kind object;
  #L12d194.  v6:= new `java.lang.StringBuilder`;
  #L12d198.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12d19e.  v7:= "kotlin.jvm.internal." @kind object;
  #L12d1a2.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12d1a8.  v7:= "kotlinName" @kind object;
  #L12d1ac.  call `checkNotNullExpressionValue`(v3, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12d1b2.  call temp:= `substringAfterLast$default`(v3, v5, v1, v4, v1) @signature `Lkotlin/text/StringsKt;.substringAfterLast$default:(Ljava/lang/String;CLjava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L12d1b8.  v5:= temp @kind object;
  #L12d1ba.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12d1c0.  v5:= "CompanionObject" @kind object;
  #L12d1c4.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12d1ca.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12d1d0.  v5:= temp @kind object;
  #L12d1d2.  v6:= new `java.lang.StringBuilder`;
  #L12d1d6.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12d1dc.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12d1e2.  v3:= ".Companion" @kind object;
  #L12d1e6.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12d1ec.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12d1f2.  v3:= temp @kind object;
  #L12d1f4.  call temp:= `to`(v5, v3) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L12d1fa.  v3:= temp @kind object;
  #L12d1fc.  call temp:= `getFirst`(v3) @signature `Lkotlin/Pair;.getFirst:()Ljava/lang/Object;` @kind virtual;
  #L12d202.  v5:= temp @kind object;
  #L12d204.  call temp:= `getSecond`(v3) @signature `Lkotlin/Pair;.getSecond:()Ljava/lang/Object;` @kind virtual;
  #L12d20a.  v3:= temp @kind object;
  #L12d20c.  call temp:= `put`(v0, v5, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L12d212.  goto L12d178;
  #L12d214.  v2:= `@@kotlin.jvm.internal.ClassReference.b` @type ^`java.util.Map` @kind object;
  #L12d218.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L12d21e.  v2:= temp @kind object;
  #L12d220.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L12d226.  v2:= temp @kind object;
  #L12d228.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12d22e.  v3:= temp;
  #L12d230.  if v3 == 0 then goto L12d292;
  #L12d234.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L12d23a.  v3:= temp @kind object;
  #L12d23c.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L12d240.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L12d246.  v6:= temp @kind object;
  #L12d248.  v6:= (`java.lang.Class`) v6 @kind object;
  #L12d24c.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L12d252.  v3:= temp @kind object;
  #L12d254.  v3:= (`java.lang.Number`) v3 @kind object;
  #L12d258.  call temp:= `intValue`(v3) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L12d25e.  v3:= temp;
  #L12d260.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L12d266.  v6:= temp @kind object;
  #L12d268.  v7:= new `java.lang.StringBuilder`;
  #L12d26c.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12d272.  v8:= "kotlin.Function" @kind object;
  #L12d276.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12d27c.  call temp:= `append`(v7, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L12d282.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12d288.  v3:= temp @kind object;
  #L12d28a.  call temp:= `put`(v0, v6, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L12d290.  goto L12d228;
  #L12d292.  `@@kotlin.jvm.internal.ClassReference.e` @type ^`java.util.HashMap` := v0 @kind object;
  #L12d296.  v2:= new `java.util.LinkedHashMap`;
  #L12d29a.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L12d2a0.  v3:= temp;
  #L12d2a2.  call temp:= `mapCapacity`(v3) @signature `Lkotlin/collections/MapsKt;.mapCapacity:(I)I` @kind static;
  #L12d2a8.  v3:= temp;
  #L12d2aa.  call `<init>`(v2, v3) @signature `Ljava/util/LinkedHashMap;.<init>:(I)V` @kind direct;
  #L12d2b0.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L12d2b6.  v0:= temp @kind object;
  #L12d2b8.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L12d2be.  v0:= temp @kind object;
  #L12d2c0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L12d2c6.  v3:= temp;
  #L12d2c8.  if v3 == 0 then goto L12d2fc;
  #L12d2cc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L12d2d2.  v3:= temp @kind object;
  #L12d2d4.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L12d2d8.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L12d2de.  v6:= temp @kind object;
  #L12d2e0.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L12d2e6.  v3:= temp @kind object;
  #L12d2e8.  v3:= (`java.lang.String`) v3 @kind object;
  #L12d2ec.  call temp:= `substringAfterLast$default`(v3, v5, v1, v4, v1) @signature `Lkotlin/text/StringsKt;.substringAfterLast$default:(Ljava/lang/String;CLjava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L12d2f2.  v3:= temp @kind object;
  #L12d2f4.  call temp:= `put`(v2, v6, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L12d2fa.  goto L12d2c0;
  #L12d2fc.  `@@kotlin.jvm.internal.ClassReference.f` @type ^`java.util.Map` := v2 @kind object;
  #L12d300.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.ClassReference` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lkotlin/jvm/internal/ClassReference;.<init>:(Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L12d314.  v0:= "jClass" @kind object;
  #L12d318.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12d31e.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12d324.  v1.`kotlin.jvm.internal.ClassReference.a` @type ^`java.lang.Class` := v2 @kind object;
  #L12d328.  return @kind void;
}
procedure `java.lang.Void` `a`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L12cc88.  v0:= new `kotlin.jvm.KotlinReflectionNotSupportedError`;
  #L12cc8c.  call `<init>`(v0) @signature `Lkotlin/jvm/KotlinReflectionNotSupportedError;.<init>:()V` @kind direct;
  #L12cc92.  throw v0;
}
procedure `java.util.HashMap` `access$getClassFqNames$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getClassFqNames$cp:()Ljava/util/HashMap;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L12ccf8.  v0:= `@@kotlin.jvm.internal.ClassReference.e` @type ^`java.util.HashMap` @kind object;
  #L12ccfc.  return v0 @kind object;
}
procedure `java.util.Map` `access$getFUNCTION_CLASSES$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getFUNCTION_CLASSES$cp:()Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L12cd80.  v0:= `@@kotlin.jvm.internal.ClassReference.b` @type ^`java.util.Map` @kind object;
  #L12cd84.  return v0 @kind object;
}
procedure `java.util.Map` `access$getSimpleNames$cp`() @signature `Lkotlin/jvm/internal/ClassReference;.access$getSimpleNames$cp:()Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L12cd98.  v0:= `@@kotlin.jvm.internal.ClassReference.f` @type ^`java.util.Map` @kind object;
  #L12cd9c.  return v0 @kind object;
}
procedure `void` `getSealedSubclasses$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.getSealedSubclasses$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d33c.  return @kind void;
}
procedure `void` `getSupertypes$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.getSupertypes$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d350.  return @kind void;
}
procedure `void` `getTypeParameters$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.getTypeParameters$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d364.  return @kind void;
}
procedure `void` `getVisibility$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.getVisibility$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d378.  return @kind void;
}
procedure `void` `isAbstract$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isAbstract$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d38c.  return @kind void;
}
procedure `void` `isCompanion$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isCompanion$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d3a0.  return @kind void;
}
procedure `void` `isData$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isData$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d3b4.  return @kind void;
}
procedure `void` `isFinal$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isFinal$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d3c8.  return @kind void;
}
procedure `void` `isFun$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isFun$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d3dc.  return @kind void;
}
procedure `void` `isInner$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isInner$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d3f0.  return @kind void;
}
procedure `void` `isOpen$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isOpen$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d404.  return @kind void;
}
procedure `void` `isSealed$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isSealed$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d418.  return @kind void;
}
procedure `void` `isValue$annotations`() @signature `Lkotlin/jvm/internal/ClassReference;.isValue$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d42c.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.jvm.internal.ClassReference` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/jvm/internal/ClassReference;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12ca38.  v0:= instanceof @variable v2 @type ^`kotlin.jvm.internal.ClassReference` @kind boolean;
  #L12ca3c.  if v0 == 0 then goto L12ca64;
  #L12ca40.  call temp:= `getJavaObjectType`(v1) @signature `Lkotlin/jvm/JvmClassMappingKt;.getJavaObjectType:(Lkotlin/reflect/KClass;)Ljava/lang/Class;` @kind static;
  #L12ca46.  v0:= temp @kind object;
  #L12ca48.  v2:= (`kotlin.reflect.KClass`) v2 @kind object;
  #L12ca4c.  call temp:= `getJavaObjectType`(v2) @signature `Lkotlin/jvm/JvmClassMappingKt;.getJavaObjectType:(Lkotlin/reflect/KClass;)Ljava/lang/Class;` @kind static;
  #L12ca52.  v2:= temp @kind object;
  #L12ca54.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12ca5a.  v2:= temp;
  #L12ca5c.  if v2 == 0 then goto L12ca64;
  #L12ca60.  v2:= 1I;
  #L12ca62.  goto L12ca66;
  #L12ca64.  v2:= 0I;
  #L12ca66.  return v2;
}
procedure `java.util.List` `getAnnotations`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getAnnotations:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12cd10.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L12cd16.  v0:= 0I;
  #L12cd18.  throw v0;
}
procedure `java.util.Collection` `getConstructors`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getConstructors:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12cca4.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L12ccaa.  v0:= 0I;
  #L12ccac.  throw v0;
}
procedure `java.lang.Class` `getJClass`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getJClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12cbc0.  v0:= v1.`kotlin.jvm.internal.ClassReference.a` @type ^`java.lang.Class` @kind object;
  #L12cbc4.  return v0 @kind object;
}
procedure `java.util.Collection` `getMembers`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getMembers:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12ccc0.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L12ccc6.  v0:= 0I;
  #L12ccc8.  throw v0;
}
procedure `java.util.Collection` `getNestedClasses`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getNestedClasses:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12ccdc.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L12cce2.  v0:= 0I;
  #L12cce4.  throw v0;
}
procedure `java.lang.Object` `getObjectInstance`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getObjectInstance:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12cbd8.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L12cbde.  v0:= 0I;
  #L12cbe0.  throw v0;
}
procedure `java.lang.String` `getQualifiedName`(`kotlin.jvm.internal.ClassReference` v2 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getQualifiedName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12cbf4.  v0:= `@@kotlin.jvm.internal.ClassReference.Companion` @type ^`kotlin.jvm.internal.ClassReference$Companion` @kind object;
  #L12cbf8.  call temp:= `getJClass`(v2) @signature `Lkotlin/jvm/internal/ClassReference;.getJClass:()Ljava/lang/Class;` @kind virtual;
  #L12cbfe.  v1:= temp @kind object;
  #L12cc00.  call temp:= `getClassQualifiedName`(v0, v1) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.getClassQualifiedName:(Ljava/lang/Class;)Ljava/lang/String;` @kind virtual;
  #L12cc06.  v0:= temp @kind object;
  #L12cc08.  return v0 @kind object;
}
procedure `java.util.List` `getSealedSubclasses`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getSealedSubclasses:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12cd2c.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L12cd32.  v0:= 0I;
  #L12cd34.  throw v0;
}
procedure `java.lang.String` `getSimpleName`(`kotlin.jvm.internal.ClassReference` v2 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getSimpleName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12cc1c.  v0:= `@@kotlin.jvm.internal.ClassReference.Companion` @type ^`kotlin.jvm.internal.ClassReference$Companion` @kind object;
  #L12cc20.  call temp:= `getJClass`(v2) @signature `Lkotlin/jvm/internal/ClassReference;.getJClass:()Ljava/lang/Class;` @kind virtual;
  #L12cc26.  v1:= temp @kind object;
  #L12cc28.  call temp:= `getClassSimpleName`(v0, v1) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.getClassSimpleName:(Ljava/lang/Class;)Ljava/lang/String;` @kind virtual;
  #L12cc2e.  v0:= temp @kind object;
  #L12cc30.  return v0 @kind object;
}
procedure `java.util.List` `getSupertypes`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getSupertypes:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12cd48.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L12cd4e.  v0:= 0I;
  #L12cd50.  throw v0;
}
procedure `java.util.List` `getTypeParameters`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getTypeParameters:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12cd64.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L12cd6a.  v0:= 0I;
  #L12cd6c.  throw v0;
}
procedure `kotlin.reflect.KVisibility` `getVisibility`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.getVisibility:()Lkotlin/reflect/KVisibility;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12cdb0.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L12cdb6.  v0:= 0I;
  #L12cdb8.  throw v0;
}
procedure `int` `hashCode`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12cb9c.  call temp:= `getJavaObjectType`(v1) @signature `Lkotlin/jvm/JvmClassMappingKt;.getJavaObjectType:(Lkotlin/reflect/KClass;)Ljava/lang/Class;` @kind static;
  #L12cba2.  v0:= temp @kind object;
  #L12cba4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Class;.hashCode:()I` @kind virtual;
  #L12cbaa.  v0:= temp;
  #L12cbac.  return v0;
}
procedure `boolean` `isAbstract`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isAbstract:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12ca78.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L12ca7e.  v0:= 0I;
  #L12ca80.  throw v0;
}
procedure `boolean` `isCompanion`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isCompanion:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12ca94.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L12ca9a.  v0:= 0I;
  #L12ca9c.  throw v0;
}
procedure `boolean` `isData`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isData:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12cab0.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L12cab6.  v0:= 0I;
  #L12cab8.  throw v0;
}
procedure `boolean` `isFinal`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isFinal:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12cacc.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L12cad2.  v0:= 0I;
  #L12cad4.  throw v0;
}
procedure `boolean` `isFun`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isFun:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12cae8.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L12caee.  v0:= 0I;
  #L12caf0.  throw v0;
}
procedure `boolean` `isInner`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isInner:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12cb04.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L12cb0a.  v0:= 0I;
  #L12cb0c.  throw v0;
}
procedure `boolean` `isInstance`(`kotlin.jvm.internal.ClassReference` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/jvm/internal/ClassReference;.isInstance:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12cb20.  v0:= `@@kotlin.jvm.internal.ClassReference.Companion` @type ^`kotlin.jvm.internal.ClassReference$Companion` @kind object;
  #L12cb24.  call temp:= `getJClass`(v2) @signature `Lkotlin/jvm/internal/ClassReference;.getJClass:()Ljava/lang/Class;` @kind virtual;
  #L12cb2a.  v1:= temp @kind object;
  #L12cb2c.  call temp:= `isInstance`(v0, v3, v1) @signature `Lkotlin/jvm/internal/ClassReference$Companion;.isInstance:(Ljava/lang/Object;Ljava/lang/Class;)Z` @kind virtual;
  #L12cb32.  v3:= temp;
  #L12cb34.  return v3;
}
procedure `boolean` `isOpen`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12cb48.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L12cb4e.  v0:= 0I;
  #L12cb50.  throw v0;
}
procedure `boolean` `isSealed`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isSealed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12cb64.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L12cb6a.  v0:= 0I;
  #L12cb6c.  throw v0;
}
procedure `boolean` `isValue`(`kotlin.jvm.internal.ClassReference` v1 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.isValue:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12cb80.  call temp:= `a`(v1) @signature `Lkotlin/jvm/internal/ClassReference;.a:()Ljava/lang/Void;` @kind direct;
  #L12cb86.  v0:= 0I;
  #L12cb88.  throw v0;
}
procedure `java.lang.String` `toString`(`kotlin.jvm.internal.ClassReference` v2 @kind this) @signature `Lkotlin/jvm/internal/ClassReference;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12cc44.  v0:= new `java.lang.StringBuilder`;
  #L12cc48.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L12cc4e.  call temp:= `getJClass`(v2) @signature `Lkotlin/jvm/internal/ClassReference;.getJClass:()Ljava/lang/Class;` @kind virtual;
  #L12cc54.  v1:= temp @kind object;
  #L12cc56.  call temp:= `toString`(v1) @signature `Ljava/lang/Class;.toString:()Ljava/lang/String;` @kind virtual;
  #L12cc5c.  v1:= temp @kind object;
  #L12cc5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12cc64.  v1:= " (Kotlin reflection is not available)" @kind object;
  #L12cc68.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L12cc6e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L12cc74.  v0:= temp @kind object;
  #L12cc76.  return v0 @kind object;
}
