record `kotlin.jvm.internal.AdaptedFunctionReference` @kind class @AccessFlag PUBLIC extends `kotlin.jvm.internal.FunctionBase` @kind interface, `java.io.Serializable` @kind interface {
  `java.lang.Class` `kotlin.jvm.internal.AdaptedFunctionReference.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlin.jvm.internal.AdaptedFunctionReference.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlin.jvm.internal.AdaptedFunctionReference.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `kotlin.jvm.internal.AdaptedFunctionReference.d` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.jvm.internal.AdaptedFunctionReference.e` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.jvm.internal.AdaptedFunctionReference.f` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `kotlin.jvm.internal.AdaptedFunctionReference.receiver` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`kotlin.jvm.internal.AdaptedFunctionReference` v7 @kind this, `int` v8 , `java.lang.Class` v9 @kind object, `java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object, `int` v12 ) @signature `Lkotlin/jvm/internal/AdaptedFunctionReference;.<init>:(ILjava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L12b88c.  v2:= `@@kotlin.jvm.internal.CallableReference.NO_RECEIVER` @type ^`java.lang.Object` @kind object;
  #L12b890.  v0:= v7 @kind object;
  #L12b892.  v1:= v8;
  #L12b894.  v3:= v9 @kind object;
  #L12b896.  v4:= v10 @kind object;
  #L12b898.  v5:= v11 @kind object;
  #L12b89a.  v6:= v12;
  #L12b89c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/jvm/internal/AdaptedFunctionReference;.<init>:(ILjava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L12b8a2.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.AdaptedFunctionReference` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object, `java.lang.Class` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `int` v6 ) @signature `Lkotlin/jvm/internal/AdaptedFunctionReference;.<init>:(ILjava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L12b8b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12b8ba.  v0.`kotlin.jvm.internal.AdaptedFunctionReference.receiver` @type ^`java.lang.Object` := v2 @kind object;
  #L12b8be.  v0.`kotlin.jvm.internal.AdaptedFunctionReference.a` @type ^`java.lang.Class` := v3 @kind object;
  #L12b8c2.  v0.`kotlin.jvm.internal.AdaptedFunctionReference.b` @type ^`java.lang.String` := v4 @kind object;
  #L12b8c6.  v0.`kotlin.jvm.internal.AdaptedFunctionReference.c` @type ^`java.lang.String` := v5 @kind object;
  #L12b8ca.  v2:= v6 ^& 1;
  #L12b8ce.  v3:= 1I;
  #L12b8d0.  if v2 != v3 then goto L12b8d8;
  #L12b8d4.  v2:= 1I;
  #L12b8d6.  goto L12b8da;
  #L12b8d8.  v2:= 0I;
  #L12b8da.  v0.`kotlin.jvm.internal.AdaptedFunctionReference.d` @type ^`boolean` := v2 @kind boolean;
  #L12b8de.  v0.`kotlin.jvm.internal.AdaptedFunctionReference.e` @type ^`int` := v1;
  #L12b8e2.  v1:= v6 ^> 1;
  #L12b8e6.  v0.`kotlin.jvm.internal.AdaptedFunctionReference.f` @type ^`int` := v1;
  #L12b8ea.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.jvm.internal.AdaptedFunctionReference` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlin/jvm/internal/AdaptedFunctionReference;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L12b6ec.  v0:= 1I;
  #L12b6ee.  if v4 != v5 then goto L12b6f4;
  #L12b6f2.  return v0;
  #L12b6f4.  v1:= instanceof @variable v5 @type ^`kotlin.jvm.internal.AdaptedFunctionReference` @kind boolean;
  #L12b6f8.  v2:= 0I;
  #L12b6fa.  if v1 != 0 then goto L12b700;
  #L12b6fe.  return v2;
  #L12b700.  v5:= (`kotlin.jvm.internal.AdaptedFunctionReference`) v5 @kind object;
  #L12b704.  v1:= v4.`kotlin.jvm.internal.AdaptedFunctionReference.d` @type ^`boolean` @kind boolean;
  #L12b708.  v3:= v5.`kotlin.jvm.internal.AdaptedFunctionReference.d` @type ^`boolean` @kind boolean;
  #L12b70c.  if v1 != v3 then goto L12b77a;
  #L12b710.  v1:= v4.`kotlin.jvm.internal.AdaptedFunctionReference.e` @type ^`int`;
  #L12b714.  v3:= v5.`kotlin.jvm.internal.AdaptedFunctionReference.e` @type ^`int`;
  #L12b718.  if v1 != v3 then goto L12b77a;
  #L12b71c.  v1:= v4.`kotlin.jvm.internal.AdaptedFunctionReference.f` @type ^`int`;
  #L12b720.  v3:= v5.`kotlin.jvm.internal.AdaptedFunctionReference.f` @type ^`int`;
  #L12b724.  if v1 != v3 then goto L12b77a;
  #L12b728.  v1:= v4.`kotlin.jvm.internal.AdaptedFunctionReference.receiver` @type ^`java.lang.Object` @kind object;
  #L12b72c.  v3:= v5.`kotlin.jvm.internal.AdaptedFunctionReference.receiver` @type ^`java.lang.Object` @kind object;
  #L12b730.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12b736.  v1:= temp;
  #L12b738.  if v1 == 0 then goto L12b77a;
  #L12b73c.  v1:= v4.`kotlin.jvm.internal.AdaptedFunctionReference.a` @type ^`java.lang.Class` @kind object;
  #L12b740.  v3:= v5.`kotlin.jvm.internal.AdaptedFunctionReference.a` @type ^`java.lang.Class` @kind object;
  #L12b744.  call temp:= `areEqual`(v1, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L12b74a.  v1:= temp;
  #L12b74c.  if v1 == 0 then goto L12b77a;
  #L12b750.  v1:= v4.`kotlin.jvm.internal.AdaptedFunctionReference.b` @type ^`java.lang.String` @kind object;
  #L12b754.  v3:= v5.`kotlin.jvm.internal.AdaptedFunctionReference.b` @type ^`java.lang.String` @kind object;
  #L12b758.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L12b75e.  v1:= temp;
  #L12b760.  if v1 == 0 then goto L12b77a;
  #L12b764.  v1:= v4.`kotlin.jvm.internal.AdaptedFunctionReference.c` @type ^`java.lang.String` @kind object;
  #L12b768.  v5:= v5.`kotlin.jvm.internal.AdaptedFunctionReference.c` @type ^`java.lang.String` @kind object;
  #L12b76c.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L12b772.  v5:= temp;
  #L12b774.  if v5 == 0 then goto L12b77a;
  #L12b778.  goto L12b77c;
  #L12b77a.  v0:= 0I;
  #L12b77c.  return v0;
}
procedure `int` `getArity`(`kotlin.jvm.internal.AdaptedFunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/AdaptedFunctionReference;.getArity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12b790.  v0:= v1.`kotlin.jvm.internal.AdaptedFunctionReference.e` @type ^`int`;
  #L12b794.  return v0;
}
procedure `kotlin.reflect.KDeclarationContainer` `getOwner`(`kotlin.jvm.internal.AdaptedFunctionReference` v2 @kind this) @signature `Lkotlin/jvm/internal/AdaptedFunctionReference;.getOwner:()Lkotlin/reflect/KDeclarationContainer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12b854.  v0:= v2.`kotlin.jvm.internal.AdaptedFunctionReference.a` @type ^`java.lang.Class` @kind object;
  #L12b858.  if v0 != 0 then goto L12b860;
  #L12b85c.  v0:= 0I;
  #L12b85e.  goto L12b87a;
  #L12b860.  v1:= v2.`kotlin.jvm.internal.AdaptedFunctionReference.d` @type ^`boolean` @kind boolean;
  #L12b864.  if v1 == 0 then goto L12b872;
  #L12b868.  call temp:= `getOrCreateKotlinPackage`(v0) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinPackage:(Ljava/lang/Class;)Lkotlin/reflect/KDeclarationContainer;` @kind static;
  #L12b86e.  v0:= temp @kind object;
  #L12b870.  goto L12b87a;
  #L12b872.  call temp:= `getOrCreateKotlinClass`(v0) @signature `Lkotlin/jvm/internal/Reflection;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;` @kind static;
  #L12b878.  v0:= temp @kind object;
  #L12b87a.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.jvm.internal.AdaptedFunctionReference` v3 @kind this) @signature `Lkotlin/jvm/internal/AdaptedFunctionReference;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L12b7a8.  v0:= v3.`kotlin.jvm.internal.AdaptedFunctionReference.receiver` @type ^`java.lang.Object` @kind object;
  #L12b7ac.  v1:= 0I;
  #L12b7ae.  if v0 == 0 then goto L12b7bc;
  #L12b7b2.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L12b7b8.  v0:= temp;
  #L12b7ba.  goto L12b7be;
  #L12b7bc.  v0:= 0I;
  #L12b7be.  v0:= v0 * 31;
  #L12b7c2.  v2:= v3.`kotlin.jvm.internal.AdaptedFunctionReference.a` @type ^`java.lang.Class` @kind object;
  #L12b7c6.  if v2 == 0 then goto L12b7d2;
  #L12b7ca.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L12b7d0.  v1:= temp;
  #L12b7d2.  v0:= v0 + v1 @kind int;
  #L12b7d4.  v0:= v0 * 31;
  #L12b7d8.  v1:= v3.`kotlin.jvm.internal.AdaptedFunctionReference.b` @type ^`java.lang.String` @kind object;
  #L12b7dc.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L12b7e2.  v1:= temp;
  #L12b7e4.  v0:= v0 + v1 @kind int;
  #L12b7e6.  v0:= v0 * 31;
  #L12b7ea.  v1:= v3.`kotlin.jvm.internal.AdaptedFunctionReference.c` @type ^`java.lang.String` @kind object;
  #L12b7ee.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L12b7f4.  v1:= temp;
  #L12b7f6.  v0:= v0 + v1 @kind int;
  #L12b7f8.  v0:= v0 * 31;
  #L12b7fc.  v1:= v3.`kotlin.jvm.internal.AdaptedFunctionReference.d` @type ^`boolean` @kind boolean;
  #L12b800.  if v1 == 0 then goto L12b80a;
  #L12b804.  v1:= 1231I;
  #L12b808.  goto L12b80e;
  #L12b80a.  v1:= 1237I;
  #L12b80e.  v0:= v0 + v1 @kind int;
  #L12b810.  v0:= v0 * 31;
  #L12b814.  v1:= v3.`kotlin.jvm.internal.AdaptedFunctionReference.e` @type ^`int`;
  #L12b818.  v0:= v0 + v1 @kind int;
  #L12b81a.  v0:= v0 * 31;
  #L12b81e.  v1:= v3.`kotlin.jvm.internal.AdaptedFunctionReference.f` @type ^`int`;
  #L12b822.  v0:= v0 + v1 @kind int;
  #L12b824.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.jvm.internal.AdaptedFunctionReference` v1 @kind this) @signature `Lkotlin/jvm/internal/AdaptedFunctionReference;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L12b838.  call temp:= `renderLambdaToString`(v1) @signature `Lkotlin/jvm/internal/Reflection;.renderLambdaToString:(Lkotlin/jvm/internal/FunctionBase;)Ljava/lang/String;` @kind static;
  #L12b83e.  v0:= temp @kind object;
  #L12b840.  return v0 @kind object;
}
