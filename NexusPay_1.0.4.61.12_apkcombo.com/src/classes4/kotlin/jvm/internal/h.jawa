record `kotlin.jvm.internal.h` @kind class @AccessFlag FINAL extends `kotlin.collections.LongIterator` @kind class {
  `int` `kotlin.jvm.internal.h.a` @AccessFlag PRIVATE;
  `long`[] `kotlin.jvm.internal.h.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.jvm.internal.h` v1 @kind this, `long`[] v2 @kind object) @signature `Lkotlin/jvm/internal/h;.<init>:([J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L12bf9c.  v0:= "array" @kind object;
  #L12bfa0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12bfa6.  call `<init>`(v1) @signature `Lkotlin/collections/LongIterator;.<init>:()V` @kind direct;
  #L12bfac.  v1.`kotlin.jvm.internal.h.b` @type ^`long`[] := v2 @kind object;
  #L12bfb0.  return @kind void;
}
procedure `boolean` `hasNext`(`kotlin.jvm.internal.h` v2 @kind this) @signature `Lkotlin/jvm/internal/h;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12bf1c.  v0:= v2.`kotlin.jvm.internal.h.a` @type ^`int`;
  #L12bf20.  v1:= v2.`kotlin.jvm.internal.h.b` @type ^`long`[] @kind object;
  #L12bf24.  v1:= length @variable v1;
  #L12bf26.  if v0 >= v1 then goto L12bf2e;
  #L12bf2a.  v0:= 1I;
  #L12bf2c.  goto L12bf30;
  #L12bf2e.  v0:= 0I;
  #L12bf30.  return v0;
}
procedure `long` `nextLong`(`kotlin.jvm.internal.h` v3 @kind this) @signature `Lkotlin/jvm/internal/h;.nextLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L12bf44.  v0:= v3.`kotlin.jvm.internal.h.b` @type ^`long`[] @kind object;
  #L12bf48.  v1:= v3.`kotlin.jvm.internal.h.a` @type ^`int`;
  #L12bf4c.  v2:= v1 + 1;
  #L12bf50.  v3.`kotlin.jvm.internal.h.a` @type ^`int` := v2;
  #L12bf54.  v1:= v0[v1] @kind wide;
  #L12bf58.  return v1 @kind wide;
  #L12bf5a.  v0:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L12bf5c.  v1:= v3.`kotlin.jvm.internal.h.a` @type ^`int`;
  #L12bf60.  v1:= v1 + -1;
  #L12bf64.  v3.`kotlin.jvm.internal.h.a` @type ^`int` := v1;
  #L12bf68.  v1:= new `java.util.NoSuchElementException`;
  #L12bf6c.  call temp:= `getMessage`(v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L12bf72.  v0:= temp @kind object;
  #L12bf74.  call `<init>`(v1, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12bf7a.  throw v1;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L12bf44..L12bf58] goto L12bf5a;
}
