record `kotlin.jvm.internal.FloatCompanionObject` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlin.jvm.internal.FloatCompanionObject` `@@kotlin.jvm.internal.FloatCompanionObject.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `float` `@@kotlin.jvm.internal.FloatCompanionObject.MAX_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `float` `@@kotlin.jvm.internal.FloatCompanionObject.MIN_VALUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `float` `@@kotlin.jvm.internal.FloatCompanionObject.NEGATIVE_INFINITY` @AccessFlag PUBLIC_STATIC_FINAL;
global `float` `@@kotlin.jvm.internal.FloatCompanionObject.NaN` @AccessFlag PUBLIC_STATIC_FINAL;
global `float` `@@kotlin.jvm.internal.FloatCompanionObject.POSITIVE_INFINITY` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@kotlin.jvm.internal.FloatCompanionObject.SIZE_BITS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@kotlin.jvm.internal.FloatCompanionObject.SIZE_BYTES` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/jvm/internal/FloatCompanionObject;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L12d920.  v0:= new `kotlin.jvm.internal.FloatCompanionObject`;
  #L12d924.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/FloatCompanionObject;.<init>:()V` @kind direct;
  #L12d92a.  `@@kotlin.jvm.internal.FloatCompanionObject.INSTANCE` @type ^`kotlin.jvm.internal.FloatCompanionObject` := v0 @kind object;
  #L12d92e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.FloatCompanionObject` v0 @kind this) @signature `Lkotlin/jvm/internal/FloatCompanionObject;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L12d940.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12d946.  return @kind void;
}
procedure `void` `getMAX_VALUE$annotations`() @signature `Lkotlin/jvm/internal/FloatCompanionObject;.getMAX_VALUE$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d958.  return @kind void;
}
procedure `void` `getMIN_VALUE$annotations`() @signature `Lkotlin/jvm/internal/FloatCompanionObject;.getMIN_VALUE$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d96c.  return @kind void;
}
procedure `void` `getNEGATIVE_INFINITY$annotations`() @signature `Lkotlin/jvm/internal/FloatCompanionObject;.getNEGATIVE_INFINITY$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d980.  return @kind void;
}
procedure `void` `getNaN$annotations`() @signature `Lkotlin/jvm/internal/FloatCompanionObject;.getNaN$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d994.  return @kind void;
}
procedure `void` `getPOSITIVE_INFINITY$annotations`() @signature `Lkotlin/jvm/internal/FloatCompanionObject;.getPOSITIVE_INFINITY$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d9a8.  return @kind void;
}
procedure `void` `getSIZE_BITS$annotations`() @signature `Lkotlin/jvm/internal/FloatCompanionObject;.getSIZE_BITS$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d9bc.  return @kind void;
}
procedure `void` `getSIZE_BYTES$annotations`() @signature `Lkotlin/jvm/internal/FloatCompanionObject;.getSIZE_BYTES$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L12d9d0.  return @kind void;
}
procedure `float` `getMAX_VALUE`(`kotlin.jvm.internal.FloatCompanionObject` v1 @kind this) @signature `Lkotlin/jvm/internal/FloatCompanionObject;.getMAX_VALUE:()F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12d8ac.  v0:= 2139095039I;
  #L12d8b2.  return v0;
}
procedure `float` `getMIN_VALUE`(`kotlin.jvm.internal.FloatCompanionObject` v1 @kind this) @signature `Lkotlin/jvm/internal/FloatCompanionObject;.getMIN_VALUE:()F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12d8c4.  v0:= 1I;
  #L12d8c6.  return v0;
}
procedure `float` `getNEGATIVE_INFINITY`(`kotlin.jvm.internal.FloatCompanionObject` v1 @kind this) @signature `Lkotlin/jvm/internal/FloatCompanionObject;.getNEGATIVE_INFINITY:()F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12d8d8.  v0:= -InfinityF;
  #L12d8dc.  return v0;
}
procedure `float` `getNaN`(`kotlin.jvm.internal.FloatCompanionObject` v1 @kind this) @signature `Lkotlin/jvm/internal/FloatCompanionObject;.getNaN:()F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12d8f0.  v0:= NaNF;
  #L12d8f4.  return v0;
}
procedure `float` `getPOSITIVE_INFINITY`(`kotlin.jvm.internal.FloatCompanionObject` v1 @kind this) @signature `Lkotlin/jvm/internal/FloatCompanionObject;.getPOSITIVE_INFINITY:()F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L12d908.  v0:= InfinityF;
  #L12d90c.  return v0;
}
