record `kotlin.jvm.internal.CallableReference$a` @kind class @AccessFlag  extends `java.io.Serializable` @kind interface {
}
global `kotlin.jvm.internal.CallableReference$a` `@@kotlin.jvm.internal.CallableReference$a.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/jvm/internal/CallableReference$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L12c2ac.  v0:= new `kotlin.jvm.internal.CallableReference$a`;
  #L12c2b0.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/CallableReference$a;.<init>:()V` @kind direct;
  #L12c2b6.  `@@kotlin.jvm.internal.CallableReference$a.a` @type ^`kotlin.jvm.internal.CallableReference$a` := v0 @kind object;
  #L12c2ba.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.CallableReference$a` v0 @kind this) @signature `Lkotlin/jvm/internal/CallableReference$a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L12c2cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L12c2d2.  return @kind void;
}
procedure `kotlin.jvm.internal.CallableReference$a` `a`() @signature `Lkotlin/jvm/internal/CallableReference$a;.a:()Lkotlin/jvm/internal/CallableReference$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L12c294.  v0:= `@@kotlin.jvm.internal.CallableReference$a.a` @type ^`kotlin.jvm.internal.CallableReference$a` @kind object;
  #L12c298.  return v0 @kind object;
}
procedure `java.lang.Object` `readResolve`(`kotlin.jvm.internal.CallableReference$a` v1 @kind this) @signature `Lkotlin/jvm/internal/CallableReference$a;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L12c27c.  v0:= `@@kotlin.jvm.internal.CallableReference$a.a` @type ^`kotlin.jvm.internal.CallableReference$a` @kind object;
  #L12c280.  return v0 @kind object;
}
