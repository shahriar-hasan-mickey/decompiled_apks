record `kotlin.jvm.internal.a` @kind class @AccessFlag FINAL extends `kotlin.collections.BooleanIterator` @kind class {
  `int` `kotlin.jvm.internal.a.a` @AccessFlag PRIVATE;
  `boolean`[] `kotlin.jvm.internal.a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.jvm.internal.a` v1 @kind this, `boolean`[] v2 @kind object) @signature `Lkotlin/jvm/internal/a;.<init>:([Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L12b97c.  v0:= "array" @kind object;
  #L12b980.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12b986.  call `<init>`(v1) @signature `Lkotlin/collections/BooleanIterator;.<init>:()V` @kind direct;
  #L12b98c.  v1.`kotlin.jvm.internal.a.b` @type ^`boolean`[] := v2 @kind object;
  #L12b990.  return @kind void;
}
procedure `boolean` `hasNext`(`kotlin.jvm.internal.a` v2 @kind this) @signature `Lkotlin/jvm/internal/a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12b8fc.  v0:= v2.`kotlin.jvm.internal.a.a` @type ^`int`;
  #L12b900.  v1:= v2.`kotlin.jvm.internal.a.b` @type ^`boolean`[] @kind object;
  #L12b904.  v1:= length @variable v1;
  #L12b906.  if v0 >= v1 then goto L12b90e;
  #L12b90a.  v0:= 1I;
  #L12b90c.  goto L12b910;
  #L12b90e.  v0:= 0I;
  #L12b910.  return v0;
}
procedure `boolean` `nextBoolean`(`kotlin.jvm.internal.a` v3 @kind this) @signature `Lkotlin/jvm/internal/a;.nextBoolean:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L12b924.  v0:= v3.`kotlin.jvm.internal.a.b` @type ^`boolean`[] @kind object;
  #L12b928.  v1:= v3.`kotlin.jvm.internal.a.a` @type ^`int`;
  #L12b92c.  v2:= v1 + 1;
  #L12b930.  v3.`kotlin.jvm.internal.a.a` @type ^`int` := v2;
  #L12b934.  v0:= v0[v1] @kind boolean;
  #L12b938.  return v0;
  #L12b93a.  v0:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L12b93c.  v1:= v3.`kotlin.jvm.internal.a.a` @type ^`int`;
  #L12b940.  v1:= v1 + -1;
  #L12b944.  v3.`kotlin.jvm.internal.a.a` @type ^`int` := v1;
  #L12b948.  v1:= new `java.util.NoSuchElementException`;
  #L12b94c.  call temp:= `getMessage`(v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L12b952.  v0:= temp @kind object;
  #L12b954.  call `<init>`(v1, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12b95a.  throw v1;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L12b924..L12b938] goto L12b93a;
}
