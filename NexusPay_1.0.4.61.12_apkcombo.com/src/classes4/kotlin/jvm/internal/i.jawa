record `kotlin.jvm.internal.i` @kind class @AccessFlag FINAL extends `kotlin.collections.ShortIterator` @kind class {
  `int` `kotlin.jvm.internal.i.a` @AccessFlag PRIVATE;
  `short`[] `kotlin.jvm.internal.i.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.jvm.internal.i` v1 @kind this, `short`[] v2 @kind object) @signature `Lkotlin/jvm/internal/i;.<init>:([S)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L12c044.  v0:= "array" @kind object;
  #L12c048.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L12c04e.  call `<init>`(v1) @signature `Lkotlin/collections/ShortIterator;.<init>:()V` @kind direct;
  #L12c054.  v1.`kotlin.jvm.internal.i.b` @type ^`short`[] := v2 @kind object;
  #L12c058.  return @kind void;
}
procedure `boolean` `hasNext`(`kotlin.jvm.internal.i` v2 @kind this) @signature `Lkotlin/jvm/internal/i;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L12bfc4.  v0:= v2.`kotlin.jvm.internal.i.a` @type ^`int`;
  #L12bfc8.  v1:= v2.`kotlin.jvm.internal.i.b` @type ^`short`[] @kind object;
  #L12bfcc.  v1:= length @variable v1;
  #L12bfce.  if v0 >= v1 then goto L12bfd6;
  #L12bfd2.  v0:= 1I;
  #L12bfd4.  goto L12bfd8;
  #L12bfd6.  v0:= 0I;
  #L12bfd8.  return v0;
}
procedure `short` `nextShort`(`kotlin.jvm.internal.i` v3 @kind this) @signature `Lkotlin/jvm/internal/i;.nextShort:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L12bfec.  v0:= v3.`kotlin.jvm.internal.i.b` @type ^`short`[] @kind object;
  #L12bff0.  v1:= v3.`kotlin.jvm.internal.i.a` @type ^`int`;
  #L12bff4.  v2:= v1 + 1;
  #L12bff8.  v3.`kotlin.jvm.internal.i.a` @type ^`int` := v2;
  #L12bffc.  v0:= v0[v1] @kind short;
  #L12c000.  return v0;
  #L12c002.  v0:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L12c004.  v1:= v3.`kotlin.jvm.internal.i.a` @type ^`int`;
  #L12c008.  v1:= v1 + -1;
  #L12c00c.  v3.`kotlin.jvm.internal.i.a` @type ^`int` := v1;
  #L12c010.  v1:= new `java.util.NoSuchElementException`;
  #L12c014.  call temp:= `getMessage`(v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L12c01a.  v0:= temp @kind object;
  #L12c01c.  call `<init>`(v1, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L12c022.  throw v1;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L12bfec..L12c000] goto L12c002;
}
