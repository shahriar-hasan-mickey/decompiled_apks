record `kotlin.time.TimeMark` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`kotlin.time.TimeMark` v0 @kind this) @signature `Lkotlin/time/TimeMark;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L152960.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L152966.  return @kind void;
}
procedure `long` `elapsedNow-UwyO8pc`() @signature `Lkotlin/time/TimeMark;.elapsedNow-UwyO8pc:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `hasNotPassedNow`(`kotlin.time.TimeMark` v2 @kind this) @signature `Lkotlin/time/TimeMark;.hasNotPassedNow:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1528d0.  call temp:= `elapsedNow-UwyO8pc`(v2) @signature `Lkotlin/time/TimeMark;.elapsedNow-UwyO8pc:()J` @kind virtual;
  #L1528d6.  v0:= temp @kind wide;
  #L1528d8.  call temp:= `isNegative-impl`(v0) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @kind static;
  #L1528de.  v0:= temp;
  #L1528e0.  return v0;
}
procedure `boolean` `hasPassedNow`(`kotlin.time.TimeMark` v2 @kind this) @signature `Lkotlin/time/TimeMark;.hasPassedNow:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1528f4.  call temp:= `elapsedNow-UwyO8pc`(v2) @signature `Lkotlin/time/TimeMark;.elapsedNow-UwyO8pc:()J` @kind virtual;
  #L1528fa.  v0:= temp @kind wide;
  #L1528fc.  call temp:= `isNegative-impl`(v0) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @kind static;
  #L152902.  v0:= temp;
  #L152904.  v0:= v0 ^~ 1;
  #L152908.  return v0;
}
procedure `kotlin.time.TimeMark` `minus-LRDsOJo`(`kotlin.time.TimeMark` v0 @kind this, `long` v1 ) @signature `Lkotlin/time/TimeMark;.minus-LRDsOJo:(J)Lkotlin/time/TimeMark;` @AccessFlag PUBLIC {
    temp;

  #L15291c.  call temp:= `unaryMinus-UwyO8pc`(v1) @signature `Lkotlin/time/Duration;.unaryMinus-UwyO8pc:(J)J` @kind static;
  #L152922.  v1:= temp @kind wide;
  #L152924.  call temp:= `plus-LRDsOJo`(v0, v1) @signature `Lkotlin/time/TimeMark;.plus-LRDsOJo:(J)Lkotlin/time/TimeMark;` @kind virtual;
  #L15292a.  v1:= temp @kind object;
  #L15292c.  return v1 @kind object;
}
procedure `kotlin.time.TimeMark` `plus-LRDsOJo`(`kotlin.time.TimeMark` v2 @kind this, `long` v3 ) @signature `Lkotlin/time/TimeMark;.plus-LRDsOJo:(J)Lkotlin/time/TimeMark;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L152940.  v0:= new `kotlin.time.a`;
  #L152944.  v1:= 0I;
  #L152946.  call `<init>`(v0, v2, v3, v1) @signature `Lkotlin/time/a;.<init>:(Lkotlin/time/TimeMark;JLkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L15294c.  return v0 @kind object;
}
