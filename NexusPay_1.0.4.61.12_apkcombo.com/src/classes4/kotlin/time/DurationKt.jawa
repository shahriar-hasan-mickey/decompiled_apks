record `kotlin.time.DurationKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `long` `@@kotlin.time.DurationKt.MAX_MILLIS` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@kotlin.time.DurationKt.MAX_NANOS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@kotlin.time.DurationKt.NANOS_IN_MILLIS` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `long` `a`(`long` v2 , `int` v4 ) @signature `Lkotlin/time/DurationKt;.a:(JI)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L14fcbc.  v0:= 1I;
  #L14fcbe.  v2:= v2 ^< v0 @kind long;
  #L14fcc0.  v0:= (`long`) v4 @kind i2l;
  #L14fcc2.  v2:= v2 + v0 @kind long;
  #L14fcc4.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/time/Duration;.constructor-impl:(J)J` @kind static;
  #L14fcca.  v2:= temp @kind wide;
  #L14fccc.  return v2 @kind wide;
}
procedure `long` `access$durationOf`(`long` v0 , `int` v2 ) @signature `Lkotlin/time/DurationKt;.access$durationOf:(JI)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L14fbdc.  call temp:= `a`(v0, v2) @signature `Lkotlin/time/DurationKt;.a:(JI)J` @kind static;
  #L14fbe2.  v0:= temp @kind wide;
  #L14fbe4.  return v0 @kind wide;
}
procedure `long` `access$durationOfMillis`(`long` v0 ) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L14fbf8.  call temp:= `b`(v0) @signature `Lkotlin/time/DurationKt;.b:(J)J` @kind static;
  #L14fbfe.  v0:= temp @kind wide;
  #L14fc00.  return v0 @kind wide;
}
procedure `long` `access$durationOfMillisNormalized`(`long` v0 ) @signature `Lkotlin/time/DurationKt;.access$durationOfMillisNormalized:(J)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L14fc14.  call temp:= `c`(v0) @signature `Lkotlin/time/DurationKt;.c:(J)J` @kind static;
  #L14fc1a.  v0:= temp @kind wide;
  #L14fc1c.  return v0 @kind wide;
}
procedure `long` `access$durationOfNanos`(`long` v0 ) @signature `Lkotlin/time/DurationKt;.access$durationOfNanos:(J)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L14fc30.  call temp:= `d`(v0) @signature `Lkotlin/time/DurationKt;.d:(J)J` @kind static;
  #L14fc36.  v0:= temp @kind wide;
  #L14fc38.  return v0 @kind wide;
}
procedure `long` `access$durationOfNanosNormalized`(`long` v0 ) @signature `Lkotlin/time/DurationKt;.access$durationOfNanosNormalized:(J)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L14fc4c.  call temp:= `e`(v0) @signature `Lkotlin/time/DurationKt;.e:(J)J` @kind static;
  #L14fc52.  v0:= temp @kind wide;
  #L14fc54.  return v0 @kind wide;
}
procedure `long` `access$millisToNanos`(`long` v0 ) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L14fc68.  call temp:= `f`(v0) @signature `Lkotlin/time/DurationKt;.f:(J)J` @kind static;
  #L14fc6e.  v0:= temp @kind wide;
  #L14fc70.  return v0 @kind wide;
}
procedure `long` `access$nanosToMillis`(`long` v0 ) @signature `Lkotlin/time/DurationKt;.access$nanosToMillis:(J)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L14fc84.  call temp:= `g`(v0) @signature `Lkotlin/time/DurationKt;.g:(J)J` @kind static;
  #L14fc8a.  v0:= temp @kind wide;
  #L14fc8c.  return v0 @kind wide;
}
procedure `long` `access$parseDuration`(`java.lang.String` v0 @kind object, `boolean` v1 ) @signature `Lkotlin/time/DurationKt;.access$parseDuration:(Ljava/lang/String;Z)J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L14fca0.  call temp:= `h`(v0, v1) @signature `Lkotlin/time/DurationKt;.h:(Ljava/lang/String;Z)J` @kind static;
  #L14fca6.  v0:= temp @kind wide;
  #L14fca8.  return v0 @kind wide;
}
procedure `int` `access$skipWhile`(`java.lang.String` v0 @kind object, `int` v1 , `kotlin.jvm.functions.Function1` v2 @kind object) @signature `Lkotlin/time/DurationKt;.access$skipWhile:(Ljava/lang/String;ILkotlin/jvm/functions/Function1;)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L14fb74.  call temp:= `j`(v0, v1, v2) @signature `Lkotlin/time/DurationKt;.j:(Ljava/lang/String;ILkotlin/jvm/functions/Function1;)I` @kind static;
  #L14fb7a.  v0:= temp;
  #L14fb7c.  return v0;
}
procedure `long` `b`(`long` v2 ) @signature `Lkotlin/time/DurationKt;.b:(J)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L14fce0.  v0:= 1I;
  #L14fce2.  v2:= v2 ^< v0 @kind long;
  #L14fce4.  v0:= 1L;
  #L14fce8.  v2:= v2 + v0 @kind long;
  #L14fcea.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/time/Duration;.constructor-impl:(J)J` @kind static;
  #L14fcf0.  v2:= temp @kind wide;
  #L14fcf2.  return v2 @kind wide;
}
procedure `long` `c`(`long` v6 ) @signature `Lkotlin/time/DurationKt;.c:(J)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L14fd04.  v0:= -4611686018426L;
  #L14fd0e.  v2:= lcmp(v0, v6);
  #L14fd12.  if v2 <= 0 then goto L14fd18;
  #L14fd16.  goto L14fd3c;
  #L14fd18.  v0:= 4611686018426L;
  #L14fd22.  v2:= lcmp(v0, v6);
  #L14fd26.  if v2 < 0 then goto L14fd3c;
  #L14fd2a.  call temp:= `f`(v6) @signature `Lkotlin/time/DurationKt;.f:(J)J` @kind static;
  #L14fd30.  v6:= temp @kind wide;
  #L14fd32.  call temp:= `d`(v6) @signature `Lkotlin/time/DurationKt;.d:(J)J` @kind static;
  #L14fd38.  v6:= temp @kind wide;
  #L14fd3a.  goto L14fd62;
  #L14fd3c.  v2:= -2.0000000000000004D;
  #L14fd46.  v4:= 1.9999999999999998D;
  #L14fd50.  v0:= v6 @kind wide;
  #L14fd52.  call temp:= `coerceIn`(v0, v2, v4) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(JJJ)J` @kind static;
  #L14fd58.  v6:= temp @kind wide;
  #L14fd5a.  call temp:= `b`(v6) @signature `Lkotlin/time/DurationKt;.b:(J)J` @kind static;
  #L14fd60.  v6:= temp @kind wide;
  #L14fd62.  return v6 @kind wide;
}
procedure `long` `d`(`long` v1 ) @signature `Lkotlin/time/DurationKt;.d:(J)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L14fd74.  v0:= 1I;
  #L14fd76.  v1:= v1 ^< v0 @kind long;
  #L14fd78.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/time/Duration;.constructor-impl:(J)J` @kind static;
  #L14fd7e.  v1:= temp @kind wide;
  #L14fd80.  return v1 @kind wide;
}
procedure `long` `e`(`long` v3 ) @signature `Lkotlin/time/DurationKt;.e:(J)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L14fd94.  v0:= -2.0000000001722644D;
  #L14fd9e.  v2:= lcmp(v0, v3);
  #L14fda2.  if v2 <= 0 then goto L14fda8;
  #L14fda6.  goto L14fdc4;
  #L14fda8.  v0:= 1.9999999999138678D;
  #L14fdb2.  v2:= lcmp(v0, v3);
  #L14fdb6.  if v2 < 0 then goto L14fdc4;
  #L14fdba.  call temp:= `d`(v3) @signature `Lkotlin/time/DurationKt;.d:(J)J` @kind static;
  #L14fdc0.  v3:= temp @kind wide;
  #L14fdc2.  goto L14fdd4;
  #L14fdc4.  call temp:= `g`(v3) @signature `Lkotlin/time/DurationKt;.g:(J)J` @kind static;
  #L14fdca.  v3:= temp @kind wide;
  #L14fdcc.  call temp:= `b`(v3) @signature `Lkotlin/time/DurationKt;.b:(J)J` @kind static;
  #L14fdd2.  v3:= temp @kind wide;
  #L14fdd4.  return v3 @kind wide;
}
procedure `long` `f`(`long` v2 ) @signature `Lkotlin/time/DurationKt;.f:(J)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L150088.  v0:= 1000000I;
  #L15008e.  v0:= (`long`) v0 @kind i2l;
  #L150090.  v2:= v2 * v0 @kind long;
  #L150094.  return v2 @kind wide;
}
procedure `long` `g`(`long` v2 ) @signature `Lkotlin/time/DurationKt;.g:(J)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1500a8.  v0:= 1000000I;
  #L1500ae.  v0:= (`long`) v0 @kind i2l;
  #L1500b0.  v2:= v2 / v0 @kind long;
  #L1500b2.  return v2 @kind wide;
}
procedure `long` `getDays`(`double` v1 ) @signature `Lkotlin/time/DurationKt;.getDays:(D)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L14fde8.  v0:= `@@java.util.concurrent.TimeUnit.DAYS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14fdec.  call temp:= `toDuration`(v1, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(DLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L14fdf2.  v1:= temp @kind wide;
  #L14fdf4.  return v1 @kind wide;
}
procedure `long` `getDays`(`int` v2 ) @signature `Lkotlin/time/DurationKt;.getDays:(I)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L14fe08.  v0:= `@@java.util.concurrent.TimeUnit.DAYS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14fe0c.  call temp:= `toDuration`(v2, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(ILjava/util/concurrent/TimeUnit;)J` @kind static;
  #L14fe12.  v0:= temp @kind wide;
  #L14fe14.  return v0 @kind wide;
}
procedure `long` `getDays`(`long` v1 ) @signature `Lkotlin/time/DurationKt;.getDays:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L14fe28.  v0:= `@@java.util.concurrent.TimeUnit.DAYS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14fe2c.  call temp:= `toDuration`(v1, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L14fe32.  v1:= temp @kind wide;
  #L14fe34.  return v1 @kind wide;
}
procedure `void` `getDays$annotations`(`double` v0 ) @signature `Lkotlin/time/DurationKt;.getDays$annotations:(D)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L150954.  return @kind void;
}
procedure `void` `getDays$annotations`(`int` v0 ) @signature `Lkotlin/time/DurationKt;.getDays$annotations:(I)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L150968.  return @kind void;
}
procedure `void` `getDays$annotations`(`long` v0 ) @signature `Lkotlin/time/DurationKt;.getDays$annotations:(J)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15097c.  return @kind void;
}
procedure `long` `getHours`(`double` v1 ) @signature `Lkotlin/time/DurationKt;.getHours:(D)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L14fe48.  v0:= `@@java.util.concurrent.TimeUnit.HOURS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14fe4c.  call temp:= `toDuration`(v1, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(DLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L14fe52.  v1:= temp @kind wide;
  #L14fe54.  return v1 @kind wide;
}
procedure `long` `getHours`(`int` v2 ) @signature `Lkotlin/time/DurationKt;.getHours:(I)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L14fe68.  v0:= `@@java.util.concurrent.TimeUnit.HOURS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14fe6c.  call temp:= `toDuration`(v2, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(ILjava/util/concurrent/TimeUnit;)J` @kind static;
  #L14fe72.  v0:= temp @kind wide;
  #L14fe74.  return v0 @kind wide;
}
procedure `long` `getHours`(`long` v1 ) @signature `Lkotlin/time/DurationKt;.getHours:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L14fe88.  v0:= `@@java.util.concurrent.TimeUnit.HOURS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14fe8c.  call temp:= `toDuration`(v1, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L14fe92.  v1:= temp @kind wide;
  #L14fe94.  return v1 @kind wide;
}
procedure `void` `getHours$annotations`(`double` v0 ) @signature `Lkotlin/time/DurationKt;.getHours$annotations:(D)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L150990.  return @kind void;
}
procedure `void` `getHours$annotations`(`int` v0 ) @signature `Lkotlin/time/DurationKt;.getHours$annotations:(I)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1509a4.  return @kind void;
}
procedure `void` `getHours$annotations`(`long` v0 ) @signature `Lkotlin/time/DurationKt;.getHours$annotations:(J)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1509b8.  return @kind void;
}
procedure `long` `getMicroseconds`(`double` v1 ) @signature `Lkotlin/time/DurationKt;.getMicroseconds:(D)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L14fea8.  v0:= `@@java.util.concurrent.TimeUnit.MICROSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14feac.  call temp:= `toDuration`(v1, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(DLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L14feb2.  v1:= temp @kind wide;
  #L14feb4.  return v1 @kind wide;
}
procedure `long` `getMicroseconds`(`int` v2 ) @signature `Lkotlin/time/DurationKt;.getMicroseconds:(I)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L14fec8.  v0:= `@@java.util.concurrent.TimeUnit.MICROSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14fecc.  call temp:= `toDuration`(v2, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(ILjava/util/concurrent/TimeUnit;)J` @kind static;
  #L14fed2.  v0:= temp @kind wide;
  #L14fed4.  return v0 @kind wide;
}
procedure `long` `getMicroseconds`(`long` v1 ) @signature `Lkotlin/time/DurationKt;.getMicroseconds:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L14fee8.  v0:= `@@java.util.concurrent.TimeUnit.MICROSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14feec.  call temp:= `toDuration`(v1, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L14fef2.  v1:= temp @kind wide;
  #L14fef4.  return v1 @kind wide;
}
procedure `void` `getMicroseconds$annotations`(`double` v0 ) @signature `Lkotlin/time/DurationKt;.getMicroseconds$annotations:(D)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1509cc.  return @kind void;
}
procedure `void` `getMicroseconds$annotations`(`int` v0 ) @signature `Lkotlin/time/DurationKt;.getMicroseconds$annotations:(I)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1509e0.  return @kind void;
}
procedure `void` `getMicroseconds$annotations`(`long` v0 ) @signature `Lkotlin/time/DurationKt;.getMicroseconds$annotations:(J)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1509f4.  return @kind void;
}
procedure `long` `getMilliseconds`(`double` v1 ) @signature `Lkotlin/time/DurationKt;.getMilliseconds:(D)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L14ff08.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14ff0c.  call temp:= `toDuration`(v1, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(DLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L14ff12.  v1:= temp @kind wide;
  #L14ff14.  return v1 @kind wide;
}
procedure `long` `getMilliseconds`(`int` v2 ) @signature `Lkotlin/time/DurationKt;.getMilliseconds:(I)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L14ff28.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14ff2c.  call temp:= `toDuration`(v2, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(ILjava/util/concurrent/TimeUnit;)J` @kind static;
  #L14ff32.  v0:= temp @kind wide;
  #L14ff34.  return v0 @kind wide;
}
procedure `long` `getMilliseconds`(`long` v1 ) @signature `Lkotlin/time/DurationKt;.getMilliseconds:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L14ff48.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14ff4c.  call temp:= `toDuration`(v1, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L14ff52.  v1:= temp @kind wide;
  #L14ff54.  return v1 @kind wide;
}
procedure `void` `getMilliseconds$annotations`(`double` v0 ) @signature `Lkotlin/time/DurationKt;.getMilliseconds$annotations:(D)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L150a08.  return @kind void;
}
procedure `void` `getMilliseconds$annotations`(`int` v0 ) @signature `Lkotlin/time/DurationKt;.getMilliseconds$annotations:(I)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L150a1c.  return @kind void;
}
procedure `void` `getMilliseconds$annotations`(`long` v0 ) @signature `Lkotlin/time/DurationKt;.getMilliseconds$annotations:(J)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L150a30.  return @kind void;
}
procedure `long` `getMinutes`(`double` v1 ) @signature `Lkotlin/time/DurationKt;.getMinutes:(D)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L14ff68.  v0:= `@@java.util.concurrent.TimeUnit.MINUTES` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14ff6c.  call temp:= `toDuration`(v1, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(DLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L14ff72.  v1:= temp @kind wide;
  #L14ff74.  return v1 @kind wide;
}
procedure `long` `getMinutes`(`int` v2 ) @signature `Lkotlin/time/DurationKt;.getMinutes:(I)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L14ff88.  v0:= `@@java.util.concurrent.TimeUnit.MINUTES` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14ff8c.  call temp:= `toDuration`(v2, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(ILjava/util/concurrent/TimeUnit;)J` @kind static;
  #L14ff92.  v0:= temp @kind wide;
  #L14ff94.  return v0 @kind wide;
}
procedure `long` `getMinutes`(`long` v1 ) @signature `Lkotlin/time/DurationKt;.getMinutes:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L14ffa8.  v0:= `@@java.util.concurrent.TimeUnit.MINUTES` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14ffac.  call temp:= `toDuration`(v1, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L14ffb2.  v1:= temp @kind wide;
  #L14ffb4.  return v1 @kind wide;
}
procedure `void` `getMinutes$annotations`(`double` v0 ) @signature `Lkotlin/time/DurationKt;.getMinutes$annotations:(D)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L150a44.  return @kind void;
}
procedure `void` `getMinutes$annotations`(`int` v0 ) @signature `Lkotlin/time/DurationKt;.getMinutes$annotations:(I)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L150a58.  return @kind void;
}
procedure `void` `getMinutes$annotations`(`long` v0 ) @signature `Lkotlin/time/DurationKt;.getMinutes$annotations:(J)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L150a6c.  return @kind void;
}
procedure `long` `getNanoseconds`(`double` v1 ) @signature `Lkotlin/time/DurationKt;.getNanoseconds:(D)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L14ffc8.  v0:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14ffcc.  call temp:= `toDuration`(v1, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(DLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L14ffd2.  v1:= temp @kind wide;
  #L14ffd4.  return v1 @kind wide;
}
procedure `long` `getNanoseconds`(`int` v2 ) @signature `Lkotlin/time/DurationKt;.getNanoseconds:(I)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L14ffe8.  v0:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14ffec.  call temp:= `toDuration`(v2, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(ILjava/util/concurrent/TimeUnit;)J` @kind static;
  #L14fff2.  v0:= temp @kind wide;
  #L14fff4.  return v0 @kind wide;
}
procedure `long` `getNanoseconds`(`long` v1 ) @signature `Lkotlin/time/DurationKt;.getNanoseconds:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L150008.  v0:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L15000c.  call temp:= `toDuration`(v1, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L150012.  v1:= temp @kind wide;
  #L150014.  return v1 @kind wide;
}
procedure `void` `getNanoseconds$annotations`(`double` v0 ) @signature `Lkotlin/time/DurationKt;.getNanoseconds$annotations:(D)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L150a80.  return @kind void;
}
procedure `void` `getNanoseconds$annotations`(`int` v0 ) @signature `Lkotlin/time/DurationKt;.getNanoseconds$annotations:(I)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L150a94.  return @kind void;
}
procedure `void` `getNanoseconds$annotations`(`long` v0 ) @signature `Lkotlin/time/DurationKt;.getNanoseconds$annotations:(J)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L150aa8.  return @kind void;
}
procedure `long` `getSeconds`(`double` v1 ) @signature `Lkotlin/time/DurationKt;.getSeconds:(D)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L150028.  v0:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L15002c.  call temp:= `toDuration`(v1, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(DLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L150032.  v1:= temp @kind wide;
  #L150034.  return v1 @kind wide;
}
procedure `long` `getSeconds`(`int` v2 ) @signature `Lkotlin/time/DurationKt;.getSeconds:(I)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L150048.  v0:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L15004c.  call temp:= `toDuration`(v2, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(ILjava/util/concurrent/TimeUnit;)J` @kind static;
  #L150052.  v0:= temp @kind wide;
  #L150054.  return v0 @kind wide;
}
procedure `long` `getSeconds`(`long` v1 ) @signature `Lkotlin/time/DurationKt;.getSeconds:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L150068.  v0:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L15006c.  call temp:= `toDuration`(v1, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L150072.  v1:= temp @kind wide;
  #L150074.  return v1 @kind wide;
}
procedure `void` `getSeconds$annotations`(`double` v0 ) @signature `Lkotlin/time/DurationKt;.getSeconds$annotations:(D)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L150abc.  return @kind void;
}
procedure `void` `getSeconds$annotations`(`int` v0 ) @signature `Lkotlin/time/DurationKt;.getSeconds$annotations:(I)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L150ad0.  return @kind void;
}
procedure `void` `getSeconds$annotations`(`long` v0 ) @signature `Lkotlin/time/DurationKt;.getSeconds$annotations:(J)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L150ae4.  return @kind void;
}
procedure `long` `h`(`java.lang.String` v27 @kind object, `boolean` v28 ) @signature `Lkotlin/time/DurationKt;.h:(Ljava/lang/String;Z)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;

  #L1500c4.  v6:= v27 @kind object;
  #L1500c8.  call temp:= `length`(v27) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1500ce.  v7:= temp;
  #L1500d0.  if v7 == 0 then goto L1506a6;
  #L1500d4.  v0:= `@@kotlin.time.Duration.Companion` @type ^`kotlin.time.Duration$Companion` @kind object;
  #L1500d8.  call temp:= `getZERO-UwyO8pc`(v0) @signature `Lkotlin/time/Duration$Companion;.getZERO-UwyO8pc:()J` @kind virtual;
  #L1500de.  v8:= temp @kind wide;
  #L1500e0.  v10:= 0I;
  #L1500e2.  call temp:= `charAt`(v6, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1500e8.  v0:= temp;
  #L1500ea.  v1:= 43I;
  #L1500ee.  v2:= 45I;
  #L1500f2.  v11:= 1I;
  #L1500f4.  if v0 == v1 then goto L150100;
  #L1500f8.  if v0 == v2 then goto L150100;
  #L1500fc.  v12:= 0I;
  #L1500fe.  goto L150102;
  #L150100.  v12:= 1I;
  #L150102.  if v12 <= 0 then goto L15010a;
  #L150106.  v13:= 1I;
  #L150108.  goto L15010c;
  #L15010a.  v13:= 0I;
  #L15010c.  v0:= 2I;
  #L15010e.  v14:= 0I;
  #L150110.  if v13 == 0 then goto L150124;
  #L150114.  call temp:= `startsWith$default`(v6, v2, v10, v0, v14) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/CharSequence;CZILjava/lang/Object;)Z` @kind static;
  #L15011a.  v1:= temp;
  #L15011c.  if v1 == 0 then goto L150124;
  #L150120.  v15:= 1I;
  #L150122.  goto L150126;
  #L150124.  v15:= 0I;
  #L150126.  v5:= "No components" @kind object;
  #L15012a.  if v7 <= v12 then goto L150698;
  #L15012e.  call temp:= `charAt`(v6, v12) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L150134.  v1:= temp;
  #L150136.  v2:= 80I;
  #L15013a.  v4:= "(this as java.lang.String).substring(startIndex)" @kind object;
  #L15013e.  v3:= "Unexpected order of duration components" @kind object;
  #L150142.  v16:= v5 @kind object;
  #L150146.  v5:= 48I;
  #L15014a.  v0:= 57I;
  #L15014e.  v10:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L150152.  v14:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L150156.  if v1 != v2 then goto L1503ac;
  #L15015a.  v12:= v12 + v11 @kind int;
  #L15015c.  if v12 == v7 then goto L1503a0;
  #L150160.  v1:= 0I;
  #L150162.  v2:= 0I;
  #L150164.  if v12 >= v7 then goto L150398;
  #L150168.  call temp:= `charAt`(v6, v12) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L15016e.  v13:= temp;
  #L150170.  v11:= 84I;
  #L150174.  if v13 != v11 then goto L150196;
  #L150178.  if v1 != 0 then goto L15018a;
  #L15017c.  v12:= v12 + 1;
  #L150180.  if v12 == v7 then goto L15018a;
  #L150184.  v1:= 1I;
  #L150186.  v11:= 1I;
  #L150188.  goto L150164;
  #L15018a.  v0:= new `java.lang.IllegalArgumentException`;
  #L15018e.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L150194.  throw v0;
  #L150196.  v11:= v12;
  #L150198.  call temp:= `length`(v27) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15019e.  v13:= temp;
  #L1501a0.  if v11 >= v13 then goto L150202;
  #L1501a4.  call temp:= `charAt`(v6, v11) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1501aa.  v13:= temp;
  #L1501ac.  if v5 > v13 then goto L1501c4;
  #L1501b0.  if v0 >= v13 then goto L1501b6;
  #L1501b4.  goto L1501c4;
  #L1501b6.  v18:= v7;
  #L1501ba.  v17:= v15;
  #L1501be.  v5:= 2I;
  #L1501c0.  v15:= 0I;
  #L1501c2.  goto L1501e2;
  #L1501c4.  v0:= "+-." @kind object;
  #L1501c8.  v18:= v7;
  #L1501cc.  v17:= v15;
  #L1501d0.  v5:= 2I;
  #L1501d2.  v7:= 0I;
  #L1501d4.  v15:= 0I;
  #L1501d6.  call temp:= `contains$default`(v0, v13, v7, v5, v15) @signature `Lkotlin/text/StringsKt;.contains$default:(Ljava/lang/CharSequence;CZILjava/lang/Object;)Z` @kind static;
  #L1501dc.  v0:= temp;
  #L1501de.  if v0 == 0 then goto L1501e6;
  #L1501e2.  v0:= 1I;
  #L1501e4.  goto L1501e8;
  #L1501e6.  v0:= 0I;
  #L1501e8.  if v0 == 0 then goto L15020e;
  #L1501ec.  v11:= v11 + 1;
  #L1501f0.  v15:= v17;
  #L1501f4.  v7:= v18;
  #L1501f8.  v0:= 57I;
  #L1501fc.  v5:= 48I;
  #L150200.  goto L150198;
  #L150202.  v18:= v7;
  #L150206.  v17:= v15;
  #L15020a.  v5:= 2I;
  #L15020c.  v15:= 0I;
  #L15020e.  if v6 == 0 then goto L15038c;
  #L150212.  call temp:= `substring`(v6, v12, v11) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L150218.  v0:= temp @kind object;
  #L15021a.  call `checkNotNullExpressionValue`(v0, v10) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L150220.  call temp:= `length`(v0) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L150226.  v7:= temp;
  #L150228.  if v7 != 0 then goto L150230;
  #L15022c.  v7:= 1I;
  #L15022e.  goto L150232;
  #L150230.  v7:= 0I;
  #L150232.  if v7 != 0 then goto L150380;
  #L150236.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15023c.  v7:= temp;
  #L15023e.  v12:= v12 + v7 @kind int;
  #L150240.  if v12 < 0 then goto L150352;
  #L150244.  call temp:= `getLastIndex`(v27) @signature `Lkotlin/text/StringsKt;.getLastIndex:(Ljava/lang/CharSequence;)I` @kind static;
  #L15024a.  v7:= temp;
  #L15024c.  if v12 > v7 then goto L150352;
  #L150250.  call temp:= `charAt`(v6, v12) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L150256.  v7:= temp;
  #L150258.  v12:= v12 + 1;
  #L15025c.  call temp:= `durationUnitByIsoChar`(v7, v1) @signature `Lkotlin/time/c;.durationUnitByIsoChar:(CZ)Ljava/util/concurrent/TimeUnit;` @kind static;
  #L150262.  v7:= temp @kind object;
  #L150264.  if v2 == 0 then goto L150282;
  #L150268.  call temp:= `compareTo`(v2, v7) @signature `Ljava/util/concurrent/TimeUnit;.compareTo:(Ljava/lang/Enum;)I` @kind virtual;
  #L15026e.  v2:= temp;
  #L150270.  if v2 <= 0 then goto L150276;
  #L150274.  goto L150282;
  #L150276.  v0:= new `java.lang.IllegalArgumentException`;
  #L15027a.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L150280.  throw v0;
  #L150282.  v22:= 46I;
  #L150286.  v23:= 0I;
  #L15028a.  v24:= 0I;
  #L15028e.  v25:= 6I;
  #L150292.  v26:= 0I;
  #L150296.  v21:= v0 @kind object;
  #L15029a.  call temp:= `indexOf$default`(v21, v22, v23, v24, v25, v26) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L1502a0.  v2:= temp;
  #L1502a2.  v11:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1502a6.  if v7 != v11 then goto L15031e;
  #L1502aa.  if v2 <= 0 then goto L15031e;
  #L1502ae.  if v0 == 0 then goto L150312;
  #L1502b2.  v11:= 0I;
  #L1502b4.  call temp:= `substring`(v0, v11, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1502ba.  v13:= temp @kind object;
  #L1502bc.  call `checkNotNullExpressionValue`(v13, v10) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1502c2.  call temp:= `i`(v13) @signature `Lkotlin/time/DurationKt;.i:(Ljava/lang/String;)J` @kind static;
  #L1502c8.  v5:= temp @kind wide;
  #L1502ca.  call temp:= `toDuration`(v5, v7) @signature `Lkotlin/time/DurationKt;.toDuration:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L1502d0.  v5:= temp @kind wide;
  #L1502d2.  call temp:= `plus-LRDsOJo`(v8, v5) @signature `Lkotlin/time/Duration;.plus-LRDsOJo:(JJ)J` @kind static;
  #L1502d8.  v5:= temp @kind wide;
  #L1502da.  if v0 == 0 then goto L150306;
  #L1502de.  call temp:= `substring`(v0, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1502e4.  v0:= temp @kind object;
  #L1502e6.  call `checkNotNullExpressionValue`(v0, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1502ec.  call temp:= `parseDouble`(v0) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L1502f2.  v8:= temp @kind wide;
  #L1502f4.  call temp:= `toDuration`(v8, v7) @signature `Lkotlin/time/DurationKt;.toDuration:(DLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L1502fa.  v8:= temp @kind wide;
  #L1502fc.  call temp:= `plus-LRDsOJo`(v5, v8) @signature `Lkotlin/time/Duration;.plus-LRDsOJo:(JJ)J` @kind static;
  #L150302.  v5:= temp @kind wide;
  #L150304.  goto L150336;
  #L150306.  v0:= new `java.lang.NullPointerException`;
  #L15030a.  call `<init>`(v0, v14) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L150310.  throw v0;
  #L150312.  v0:= new `java.lang.NullPointerException`;
  #L150316.  call `<init>`(v0, v14) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15031c.  throw v0;
  #L15031e.  call temp:= `i`(v0) @signature `Lkotlin/time/DurationKt;.i:(Ljava/lang/String;)J` @kind static;
  #L150324.  v5:= temp @kind wide;
  #L150326.  call temp:= `toDuration`(v5, v7) @signature `Lkotlin/time/DurationKt;.toDuration:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L15032c.  v5:= temp @kind wide;
  #L15032e.  call temp:= `plus-LRDsOJo`(v8, v5) @signature `Lkotlin/time/Duration;.plus-LRDsOJo:(JJ)J` @kind static;
  #L150334.  v5:= temp @kind wide;
  #L150336.  v8:= v5 @kind wide;
  #L150338.  v6:= v27 @kind object;
  #L15033c.  v2:= v7 @kind object;
  #L15033e.  v15:= v17;
  #L150342.  v7:= v18;
  #L150346.  v0:= 57I;
  #L15034a.  v5:= 48I;
  #L15034e.  goto L150186;
  #L150352.  v1:= new `java.lang.IllegalArgumentException`;
  #L150356.  v2:= new `java.lang.StringBuilder`;
  #L15035a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L150360.  v3:= "Missing unit for value " @kind object;
  #L150364.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15036a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L150370.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L150376.  v0:= temp @kind object;
  #L150378.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15037e.  throw v1;
  #L150380.  v0:= new `java.lang.IllegalArgumentException`;
  #L150384.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L15038a.  throw v0;
  #L15038c.  v0:= new `java.lang.NullPointerException`;
  #L150390.  call `<init>`(v0, v14) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L150396.  throw v0;
  #L150398.  v17:= v15;
  #L15039c.  goto L15067e;
  #L1503a0.  v0:= new `java.lang.IllegalArgumentException`;
  #L1503a4.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L1503aa.  throw v0;
  #L1503ac.  v18:= v7;
  #L1503b0.  v17:= v15;
  #L1503b4.  v15:= 0I;
  #L1503b6.  if v28 != 0 then goto L15068c;
  #L1503ba.  v5:= 0I;
  #L1503bc.  v7:= v18 - v12 @kind int;
  #L1503c0.  v0:= 8I;
  #L1503c4.  call temp:= `max`(v7, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L1503ca.  v6:= temp;
  #L1503cc.  v7:= 1I;
  #L1503ce.  v2:= "Infinity" @kind object;
  #L1503d2.  v11:= 57I;
  #L1503d6.  v0:= v27 @kind object;
  #L1503da.  v1:= v12;
  #L1503dc.  v15:= v3 @kind object;
  #L1503de.  v3:= v5;
  #L1503e0.  v5:= v4 @kind object;
  #L1503e2.  v4:= v6;
  #L1503e4.  v6:= v5 @kind object;
  #L1503e6.  v11:= v16 @kind object;
  #L1503ea.  v5:= v7;
  #L1503ec.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/text/StringsKt;.regionMatches:(Ljava/lang/String;ILjava/lang/String;IIZ)Z` @kind static;
  #L1503f2.  v0:= temp;
  #L1503f4.  if v0 == 0 then goto L150408;
  #L1503f8.  v0:= `@@kotlin.time.Duration.Companion` @type ^`kotlin.time.Duration$Companion` @kind object;
  #L1503fc.  call temp:= `getINFINITE-UwyO8pc`(v0) @signature `Lkotlin/time/Duration$Companion;.getINFINITE-UwyO8pc:()J` @kind virtual;
  #L150402.  v8:= temp @kind wide;
  #L150404.  goto L15067e;
  #L150408.  v0:= v13 ^~ 1;
  #L15040c.  v1:= v27 @kind object;
  #L150410.  if v13 == 0 then goto L150450;
  #L150414.  call temp:= `charAt`(v1, v12) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L15041a.  v2:= temp;
  #L15041c.  v3:= 40I;
  #L150420.  if v2 != v3 then goto L150450;
  #L150424.  call temp:= `last`(v27) @signature `Lkotlin/text/StringsKt;.last:(Ljava/lang/CharSequence;)C` @kind static;
  #L15042a.  v2:= temp;
  #L15042c.  v3:= 41I;
  #L150430.  if v2 != v3 then goto L150450;
  #L150434.  v12:= v12 + 1;
  #L150438.  v7:= v18 + -1;
  #L15043c.  if v12 == v7 then goto L150444;
  #L150440.  v0:= 1I;
  #L150442.  goto L150454;
  #L150444.  v0:= new `java.lang.IllegalArgumentException`;
  #L150448.  call `<init>`(v0, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15044e.  throw v0;
  #L150450.  v7:= v18;
  #L150454.  v2:= 0I;
  #L150456.  v3:= 0I;
  #L150458.  if v12 >= v7 then goto L15067e;
  #L15045c.  if v2 == 0 then goto L150490;
  #L150460.  if v0 == 0 then goto L150490;
  #L150464.  call temp:= `length`(v27) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L15046a.  v2:= temp;
  #L15046c.  if v12 >= v2 then goto L150490;
  #L150470.  call temp:= `charAt`(v1, v12) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L150476.  v2:= temp;
  #L150478.  v4:= 32I;
  #L15047c.  if v2 != v4 then goto L150484;
  #L150480.  v2:= 1I;
  #L150482.  goto L150486;
  #L150484.  v2:= 0I;
  #L150486.  if v2 == 0 then goto L150490;
  #L15048a.  v12:= v12 + 1;
  #L15048e.  goto L150464;
  #L150490.  v2:= v12;
  #L150492.  call temp:= `length`(v27) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L150498.  v4:= temp;
  #L15049a.  if v2 >= v4 then goto L1504ce;
  #L15049e.  call temp:= `charAt`(v1, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1504a4.  v4:= temp;
  #L1504a6.  v5:= 48I;
  #L1504aa.  v11:= 57I;
  #L1504ae.  if v5 > v4 then goto L1504b6;
  #L1504b2.  if v11 >= v4 then goto L1504be;
  #L1504b6.  v13:= 46I;
  #L1504ba.  if v4 != v13 then goto L1504c2;
  #L1504be.  v4:= 1I;
  #L1504c0.  goto L1504c4;
  #L1504c2.  v4:= 0I;
  #L1504c4.  if v4 == 0 then goto L1504d6;
  #L1504c8.  v2:= v2 + 1;
  #L1504cc.  goto L150492;
  #L1504ce.  v5:= 48I;
  #L1504d2.  v11:= 57I;
  #L1504d6.  if v1 == 0 then goto L150672;
  #L1504da.  call temp:= `substring`(v1, v12, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1504e0.  v2:= temp @kind object;
  #L1504e2.  call `checkNotNullExpressionValue`(v2, v10) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1504e8.  call temp:= `length`(v2) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1504ee.  v4:= temp;
  #L1504f0.  if v4 != 0 then goto L1504f8;
  #L1504f4.  v4:= 1I;
  #L1504f6.  goto L1504fa;
  #L1504f8.  v4:= 0I;
  #L1504fa.  if v4 != 0 then goto L150666;
  #L1504fe.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L150504.  v4:= temp;
  #L150506.  v12:= v12 + v4 @kind int;
  #L150508.  v4:= v12;
  #L15050a.  call temp:= `length`(v27) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L150510.  v13:= temp;
  #L150512.  if v4 >= v13 then goto L150548;
  #L150516.  call temp:= `charAt`(v1, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L15051c.  v13:= temp;
  #L15051e.  v5:= 122I;
  #L150522.  v11:= 97I;
  #L150526.  if v11 <= v13 then goto L15052c;
  #L15052a.  goto L150534;
  #L15052c.  if v5 < v13 then goto L150534;
  #L150530.  v5:= 1I;
  #L150532.  goto L150536;
  #L150534.  v5:= 0I;
  #L150536.  if v5 == 0 then goto L150548;
  #L15053a.  v4:= v4 + 1;
  #L15053e.  v5:= 48I;
  #L150542.  v11:= 57I;
  #L150546.  goto L15050a;
  #L150548.  if v1 == 0 then goto L15065a;
  #L15054c.  call temp:= `substring`(v1, v12, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L150552.  v4:= temp @kind object;
  #L150554.  call `checkNotNullExpressionValue`(v4, v10) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15055a.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L150560.  v5:= temp;
  #L150562.  v12:= v12 + v5 @kind int;
  #L150564.  call temp:= `durationUnitByShortName`(v4) @signature `Lkotlin/time/c;.durationUnitByShortName:(Ljava/lang/String;)Ljava/util/concurrent/TimeUnit;` @kind static;
  #L15056a.  v4:= temp @kind object;
  #L15056c.  if v3 == 0 then goto L15058a;
  #L150570.  call temp:= `compareTo`(v3, v4) @signature `Ljava/util/concurrent/TimeUnit;.compareTo:(Ljava/lang/Enum;)I` @kind virtual;
  #L150576.  v3:= temp;
  #L150578.  if v3 <= 0 then goto L15057e;
  #L15057c.  goto L15058a;
  #L15057e.  v0:= new `java.lang.IllegalArgumentException`;
  #L150582.  call `<init>`(v0, v15) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L150588.  throw v0;
  #L15058a.  v20:= 46I;
  #L15058e.  v21:= 0I;
  #L150592.  v22:= 0I;
  #L150596.  v23:= 6I;
  #L15059a.  v24:= 0I;
  #L15059e.  v19:= v2 @kind object;
  #L1505a2.  call temp:= `indexOf$default`(v19, v20, v21, v22, v23, v24) @signature `Lkotlin/text/StringsKt;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L1505a8.  v3:= temp;
  #L1505aa.  if v3 <= 0 then goto L150634;
  #L1505ae.  if v2 == 0 then goto L150628;
  #L1505b2.  v5:= 0I;
  #L1505b4.  call temp:= `substring`(v2, v5, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1505ba.  v11:= temp @kind object;
  #L1505bc.  call `checkNotNullExpressionValue`(v11, v10) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1505c2.  v13:= v6 @kind object;
  #L1505c4.  call temp:= `parseLong`(v11) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L1505ca.  v5:= temp @kind wide;
  #L1505cc.  call temp:= `toDuration`(v5, v4) @signature `Lkotlin/time/DurationKt;.toDuration:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L1505d2.  v5:= temp @kind wide;
  #L1505d4.  call temp:= `plus-LRDsOJo`(v8, v5) @signature `Lkotlin/time/Duration;.plus-LRDsOJo:(JJ)J` @kind static;
  #L1505da.  v5:= temp @kind wide;
  #L1505dc.  if v2 == 0 then goto L15061c;
  #L1505e0.  call temp:= `substring`(v2, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1505e6.  v2:= temp @kind object;
  #L1505e8.  call `checkNotNullExpressionValue`(v2, v13) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1505ee.  call temp:= `parseDouble`(v2) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L1505f4.  v2:= temp @kind wide;
  #L1505f6.  call temp:= `toDuration`(v2, v4) @signature `Lkotlin/time/DurationKt;.toDuration:(DLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L1505fc.  v2:= temp @kind wide;
  #L1505fe.  call temp:= `plus-LRDsOJo`(v5, v2) @signature `Lkotlin/time/Duration;.plus-LRDsOJo:(JJ)J` @kind static;
  #L150604.  v2:= temp @kind wide;
  #L150606.  if v12 < v7 then goto L15060c;
  #L15060a.  goto L15064e;
  #L15060c.  v0:= new `java.lang.IllegalArgumentException`;
  #L150610.  v1:= "Fractional component must be last" @kind object;
  #L150614.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15061a.  throw v0;
  #L15061c.  v0:= new `java.lang.NullPointerException`;
  #L150620.  call `<init>`(v0, v14) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L150626.  throw v0;
  #L150628.  v0:= new `java.lang.NullPointerException`;
  #L15062c.  call `<init>`(v0, v14) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L150632.  throw v0;
  #L150634.  v13:= v6 @kind object;
  #L150636.  call temp:= `parseLong`(v2) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L15063c.  v2:= temp @kind wide;
  #L15063e.  call temp:= `toDuration`(v2, v4) @signature `Lkotlin/time/DurationKt;.toDuration:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L150644.  v2:= temp @kind wide;
  #L150646.  call temp:= `plus-LRDsOJo`(v8, v2) @signature `Lkotlin/time/Duration;.plus-LRDsOJo:(JJ)J` @kind static;
  #L15064c.  v2:= temp @kind wide;
  #L15064e.  v8:= v2 @kind wide;
  #L150650.  v3:= v4 @kind object;
  #L150652.  v6:= v13 @kind object;
  #L150654.  v2:= 1I;
  #L150656.  goto L150458;
  #L15065a.  v0:= new `java.lang.NullPointerException`;
  #L15065e.  call `<init>`(v0, v14) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L150664.  throw v0;
  #L150666.  v0:= new `java.lang.IllegalArgumentException`;
  #L15066a.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L150670.  throw v0;
  #L150672.  v0:= new `java.lang.NullPointerException`;
  #L150676.  call `<init>`(v0, v14) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15067c.  throw v0;
  #L15067e.  if v17 == 0 then goto L15068a;
  #L150682.  call temp:= `unaryMinus-UwyO8pc`(v8) @signature `Lkotlin/time/Duration;.unaryMinus-UwyO8pc:(J)J` @kind static;
  #L150688.  v8:= temp @kind wide;
  #L15068a.  return v8 @kind wide;
  #L15068c.  v0:= new `java.lang.IllegalArgumentException`;
  #L150690.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L150696.  throw v0;
  #L150698.  v11:= v5 @kind object;
  #L15069a.  v0:= new `java.lang.IllegalArgumentException`;
  #L15069e.  call `<init>`(v0, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1506a4.  throw v0;
  #L1506a6.  v0:= new `java.lang.IllegalArgumentException`;
  #L1506aa.  v1:= "The string is empty" @kind object;
  #L1506ae.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1506b4.  throw v0;
}
procedure `long` `i`(`java.lang.String` v8 @kind object) @signature `Lkotlin/time/DurationKt;.i:(Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1506c8.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1506ce.  v0:= temp;
  #L1506d0.  v1:= 0I;
  #L1506d2.  v2:= 2I;
  #L1506d4.  v3:= 1I;
  #L1506d6.  v4:= 0I;
  #L1506d8.  if v0 <= 0 then goto L1506f8;
  #L1506dc.  call temp:= `charAt`(v8, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1506e2.  v5:= temp;
  #L1506e4.  v6:= "+-" @kind object;
  #L1506e8.  call temp:= `contains$default`(v6, v5, v4, v2, v1) @signature `Lkotlin/text/StringsKt;.contains$default:(Ljava/lang/CharSequence;CZILjava/lang/Object;)Z` @kind static;
  #L1506ee.  v5:= temp;
  #L1506f0.  if v5 == 0 then goto L1506f8;
  #L1506f4.  v5:= 1I;
  #L1506f6.  goto L1506fa;
  #L1506f8.  v5:= 0I;
  #L1506fa.  v0:= v0 - v5 @kind int;
  #L1506fc.  v6:= 16I;
  #L150700.  if v0 <= v6 then goto L1507a2;
  #L150704.  v0:= new `kotlin.ranges.IntRange`;
  #L150708.  call temp:= `getLastIndex`(v8) @signature `Lkotlin/text/StringsKt;.getLastIndex:(Ljava/lang/CharSequence;)I` @kind static;
  #L15070e.  v6:= temp;
  #L150710.  call `<init>`(v0, v5, v6) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L150716.  v5:= instanceof @variable v0 @type ^`java.util.Collection` @kind boolean;
  #L15071a.  if v5 == 0 then goto L150734;
  #L15071e.  v5:= v0 @kind object;
  #L150720.  v5:= (`java.util.Collection`) v5 @kind object;
  #L150724.  call temp:= `isEmpty`(v5) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L15072a.  v5:= temp;
  #L15072c.  if v5 == 0 then goto L150734;
  #L150730.  v0:= 1I;
  #L150732.  goto L15077c;
  #L150734.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L15073a.  v0:= temp @kind object;
  #L15073c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L150742.  v5:= temp;
  #L150744.  if v5 == 0 then goto L150730;
  #L150748.  v5:= v0 @kind object;
  #L15074a.  v5:= (`kotlin.collections.IntIterator`) v5 @kind object;
  #L15074e.  call temp:= `nextInt`(v5) @signature `Lkotlin/collections/IntIterator;.nextInt:()I` @kind virtual;
  #L150754.  v5:= temp;
  #L150756.  v6:= 57I;
  #L15075a.  v7:= 48I;
  #L15075e.  call temp:= `charAt`(v8, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L150764.  v5:= temp;
  #L150766.  if v7 <= v5 then goto L15076c;
  #L15076a.  goto L150774;
  #L15076c.  if v6 < v5 then goto L150774;
  #L150770.  v5:= 1I;
  #L150772.  goto L150776;
  #L150774.  v5:= 0I;
  #L150776.  if v5 != 0 then goto L15073c;
  #L15077a.  v0:= 0I;
  #L15077c.  if v0 == 0 then goto L1507a2;
  #L150780.  call temp:= `charAt`(v8, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L150786.  v8:= temp;
  #L150788.  v0:= 45I;
  #L15078c.  if v8 != v0 then goto L150796;
  #L150790.  v0:= -9223372036854775808L;
  #L150794.  goto L1507a0;
  #L150796.  v0:= 9223372036854775807L;
  #L1507a0.  return v0 @kind wide;
  #L1507a2.  v0:= "+" @kind object;
  #L1507a6.  call temp:= `startsWith$default`(v8, v0, v4, v2, v1) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1507ac.  v0:= temp;
  #L1507ae.  if v0 == 0 then goto L1507ba;
  #L1507b2.  call temp:= `drop`(v8, v3) @signature `Lkotlin/text/StringsKt;.drop:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L1507b8.  v8:= temp @kind object;
  #L1507ba.  call temp:= `parseLong`(v8) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L1507c0.  v0:= temp @kind wide;
  #L1507c2.  return v0 @kind wide;
}
procedure `int` `j`(`java.lang.String` v1 @kind object, `int` v2 , `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/time/DurationKt;.j:(Ljava/lang/String;ILkotlin/jvm/functions/Function1;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L14fb90.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L14fb96.  v0:= temp;
  #L14fb98.  if v2 >= v0 then goto L14fbca;
  #L14fb9c.  call temp:= `charAt`(v1, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L14fba2.  v0:= temp;
  #L14fba4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L14fbaa.  v0:= temp @kind object;
  #L14fbac.  call temp:= `invoke`(v3, v0) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L14fbb2.  v0:= temp @kind object;
  #L14fbb4.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L14fbb8.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L14fbbe.  v0:= temp;
  #L14fbc0.  if v0 == 0 then goto L14fbca;
  #L14fbc4.  v2:= v2 + 1;
  #L14fbc8.  goto L14fb90;
  #L14fbca.  return v2;
}
procedure `long` `toDuration`(`double` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lkotlin/time/DurationKt;.toDuration:(DLjava/util/concurrent/TimeUnit;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1507d4.  v0:= "unit" @kind object;
  #L1507d8.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1507de.  v0:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1507e2.  call temp:= `convertDurationUnit`(v7, v9, v0) @signature `Lkotlin/time/b;.convertDurationUnit:(DLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)D` @kind static;
  #L1507e8.  v0:= temp @kind wide;
  #L1507ea.  call temp:= `isNaN`(v0) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L1507f0.  v2:= temp;
  #L1507f2.  v2:= v2 ^~ 1;
  #L1507f6.  if v2 == 0 then goto L150850;
  #L1507fa.  call temp:= `roundToLong`(v0) @signature `Lkotlin/math/MathKt;.roundToLong:(D)J` @kind static;
  #L150800.  v0:= temp @kind wide;
  #L150802.  v2:= 1.9999999999138678D;
  #L15080c.  v4:= -2.0000000001722644D;
  #L150816.  v6:= lcmp(v4, v0);
  #L15081a.  if v6 <= 0 then goto L150820;
  #L15081e.  goto L150832;
  #L150820.  v4:= lcmp(v2, v0);
  #L150824.  if v4 < 0 then goto L150832;
  #L150828.  call temp:= `d`(v0) @signature `Lkotlin/time/DurationKt;.d:(J)J` @kind static;
  #L15082e.  v7:= temp @kind wide;
  #L150830.  goto L15084e;
  #L150832.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L150836.  call temp:= `convertDurationUnit`(v7, v9, v0) @signature `Lkotlin/time/b;.convertDurationUnit:(DLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)D` @kind static;
  #L15083c.  v7:= temp @kind wide;
  #L15083e.  call temp:= `roundToLong`(v7) @signature `Lkotlin/math/MathKt;.roundToLong:(D)J` @kind static;
  #L150844.  v7:= temp @kind wide;
  #L150846.  call temp:= `c`(v7) @signature `Lkotlin/time/DurationKt;.c:(J)J` @kind static;
  #L15084c.  v7:= temp @kind wide;
  #L15084e.  return v7 @kind wide;
  #L150850.  v7:= new `java.lang.IllegalArgumentException`;
  #L150854.  v8:= "Duration value cannot be NaN." @kind object;
  #L150858.  call temp:= `toString`(v8) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L15085e.  v8:= temp @kind object;
  #L150860.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L150866.  throw v7;
}
procedure `long` `toDuration`(`int` v2 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lkotlin/time/DurationKt;.toDuration:(ILjava/util/concurrent/TimeUnit;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L150878.  v0:= "unit" @kind object;
  #L15087c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L150882.  v0:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L150886.  call temp:= `compareTo`(v3, v0) @signature `Ljava/util/concurrent/TimeUnit;.compareTo:(Ljava/lang/Enum;)I` @kind virtual;
  #L15088c.  v0:= temp;
  #L15088e.  if v0 > 0 then goto L1508aa;
  #L150892.  v0:= (`long`) v2 @kind i2l;
  #L150894.  v2:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L150898.  call temp:= `convertDurationUnitOverflow`(v0, v3, v2) @signature `Lkotlin/time/b;.convertDurationUnitOverflow:(JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)J` @kind static;
  #L15089e.  v2:= temp @kind wide;
  #L1508a0.  call temp:= `d`(v2) @signature `Lkotlin/time/DurationKt;.d:(J)J` @kind static;
  #L1508a6.  v2:= temp @kind wide;
  #L1508a8.  goto L1508b4;
  #L1508aa.  v0:= (`long`) v2 @kind i2l;
  #L1508ac.  call temp:= `toDuration`(v0, v3) @signature `Lkotlin/time/DurationKt;.toDuration:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L1508b2.  v2:= temp @kind wide;
  #L1508b4.  return v2 @kind wide;
}
procedure `long` `toDuration`(`long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lkotlin/time/DurationKt;.toDuration:(JLjava/util/concurrent/TimeUnit;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1508c8.  v0:= "unit" @kind object;
  #L1508cc.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1508d2.  v0:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1508d6.  v1:= 1.9999999999138678D;
  #L1508e0.  call temp:= `convertDurationUnitOverflow`(v1, v0, v9) @signature `Lkotlin/time/b;.convertDurationUnitOverflow:(JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)J` @kind static;
  #L1508e6.  v0:= temp @kind wide;
  #L1508e8.  v2:= -v0 @kind long;
  #L1508ea.  v4:= lcmp(v2, v7);
  #L1508ee.  if v4 <= 0 then goto L1508f4;
  #L1508f2.  goto L150912;
  #L1508f4.  v2:= lcmp(v0, v7);
  #L1508f8.  if v2 < 0 then goto L150912;
  #L1508fc.  v0:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L150900.  call temp:= `convertDurationUnitOverflow`(v7, v9, v0) @signature `Lkotlin/time/b;.convertDurationUnitOverflow:(JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)J` @kind static;
  #L150906.  v7:= temp @kind wide;
  #L150908.  call temp:= `d`(v7) @signature `Lkotlin/time/DurationKt;.d:(J)J` @kind static;
  #L15090e.  v7:= temp @kind wide;
  #L150910.  return v7 @kind wide;
  #L150912.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L150916.  call temp:= `convertDurationUnit`(v7, v9, v0) @signature `Lkotlin/time/b;.convertDurationUnit:(JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)J` @kind static;
  #L15091c.  v1:= temp @kind wide;
  #L15091e.  v3:= -2.0000000000000004D;
  #L150928.  v5:= 1.9999999999999998D;
  #L150932.  call temp:= `coerceIn`(v1, v3, v5) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(JJJ)J` @kind static;
  #L150938.  v7:= temp @kind wide;
  #L15093a.  call temp:= `b`(v7) @signature `Lkotlin/time/DurationKt;.b:(J)J` @kind static;
  #L150940.  v7:= temp @kind wide;
  #L150942.  return v7 @kind wide;
}
