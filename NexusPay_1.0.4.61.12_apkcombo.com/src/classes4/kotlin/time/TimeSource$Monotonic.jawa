record `kotlin.time.TimeSource$Monotonic` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.time.TimeSource` @kind interface {
  `kotlin.time.MonotonicTimeSource` `kotlin.time.TimeSource$Monotonic.a` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
}
global `kotlin.time.TimeSource$Monotonic` `@@kotlin.time.TimeSource$Monotonic.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/time/TimeSource$Monotonic;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1529f0.  v0:= new `kotlin.time.TimeSource$Monotonic`;
  #L1529f4.  call `<init>`(v0) @signature `Lkotlin/time/TimeSource$Monotonic;.<init>:()V` @kind direct;
  #L1529fa.  `@@kotlin.time.TimeSource$Monotonic.INSTANCE` @type ^`kotlin.time.TimeSource$Monotonic` := v0 @kind object;
  #L1529fe.  return @kind void;
}
procedure `void` `<init>`(`kotlin.time.TimeSource$Monotonic` v1 @kind this) @signature `Lkotlin/time/TimeSource$Monotonic;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L152a10.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L152a16.  v0:= `@@kotlin.time.MonotonicTimeSource.INSTANCE` @type ^`kotlin.time.MonotonicTimeSource` @kind object;
  #L152a1a.  v1.`kotlin.time.TimeSource$Monotonic.a` @type ^`kotlin.time.MonotonicTimeSource` := v0 @kind object;
  #L152a1e.  return @kind void;
}
procedure `kotlin.time.TimeMark` `markNow`(`kotlin.time.TimeSource$Monotonic` v1 @kind this) @signature `Lkotlin/time/TimeSource$Monotonic;.markNow:()Lkotlin/time/TimeMark;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1529d0.  v0:= v1.`kotlin.time.TimeSource$Monotonic.a` @type ^`kotlin.time.MonotonicTimeSource` @kind object;
  #L1529d4.  call temp:= `markNow`(v0) @signature `Lkotlin/time/AbstractLongTimeSource;.markNow:()Lkotlin/time/TimeMark;` @kind virtual;
  #L1529da.  v0:= temp @kind object;
  #L1529dc.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.time.TimeSource$Monotonic` v1 @kind this) @signature `Lkotlin/time/TimeSource$Monotonic;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1529b0.  v0:= `@@kotlin.time.MonotonicTimeSource.INSTANCE` @type ^`kotlin.time.MonotonicTimeSource` @kind object;
  #L1529b4.  call temp:= `toString`(v0) @signature `Lkotlin/time/MonotonicTimeSource;.toString:()Ljava/lang/String;` @kind virtual;
  #L1529ba.  v0:= temp @kind object;
  #L1529bc.  return v0 @kind object;
}
