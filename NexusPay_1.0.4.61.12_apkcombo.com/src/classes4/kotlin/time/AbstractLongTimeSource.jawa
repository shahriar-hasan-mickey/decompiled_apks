record `kotlin.time.AbstractLongTimeSource` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.time.TimeSource` @kind interface {
  `java.util.concurrent.TimeUnit` `kotlin.time.AbstractLongTimeSource.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.time.AbstractLongTimeSource` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lkotlin/time/AbstractLongTimeSource;.<init>:(Ljava/util/concurrent/TimeUnit;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L14f600.  v0:= "unit" @kind object;
  #L14f604.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14f60a.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14f610.  v1.`kotlin.time.AbstractLongTimeSource.a` @type ^`java.util.concurrent.TimeUnit` := v2 @kind object;
  #L14f614.  return @kind void;
}
procedure `java.util.concurrent.TimeUnit` `getUnit`(`kotlin.time.AbstractLongTimeSource` v1 @kind this) @signature `Lkotlin/time/AbstractLongTimeSource;.getUnit:()Ljava/util/concurrent/TimeUnit;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L14f5b0.  v0:= v1.`kotlin.time.AbstractLongTimeSource.a` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14f5b4.  return v0 @kind object;
}
procedure `kotlin.time.TimeMark` `markNow`(`kotlin.time.AbstractLongTimeSource` v8 @kind this) @signature `Lkotlin/time/AbstractLongTimeSource;.markNow:()Lkotlin/time/TimeMark;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L14f5c8.  v7:= new `kotlin.time.AbstractLongTimeSource$a`;
  #L14f5cc.  call temp:= `read`(v8) @signature `Lkotlin/time/AbstractLongTimeSource;.read:()J` @kind virtual;
  #L14f5d2.  v1:= temp @kind wide;
  #L14f5d4.  v0:= `@@kotlin.time.Duration.Companion` @type ^`kotlin.time.Duration$Companion` @kind object;
  #L14f5d8.  call temp:= `getZERO-UwyO8pc`(v0) @signature `Lkotlin/time/Duration$Companion;.getZERO-UwyO8pc:()J` @kind virtual;
  #L14f5de.  v4:= temp @kind wide;
  #L14f5e0.  v6:= 0I;
  #L14f5e2.  v0:= v7 @kind object;
  #L14f5e4.  v3:= v8 @kind object;
  #L14f5e6.  call `<init>`(v0, v1, v3, v4, v6) @signature `Lkotlin/time/AbstractLongTimeSource$a;.<init>:(JLkotlin/time/AbstractLongTimeSource;JLkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L14f5ec.  return v7 @kind object;
}
procedure `long` `read`() @signature `Lkotlin/time/AbstractLongTimeSource;.read:()J` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
