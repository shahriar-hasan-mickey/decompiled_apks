record `kotlin.time.AbstractDoubleTimeSource` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.time.TimeSource` @kind interface {
  `java.util.concurrent.TimeUnit` `kotlin.time.AbstractDoubleTimeSource.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.time.AbstractDoubleTimeSource` v1 @kind this, `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lkotlin/time/AbstractDoubleTimeSource;.<init>:(Ljava/util/concurrent/TimeUnit;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L14f4d4.  v0:= "unit" @kind object;
  #L14f4d8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14f4de.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14f4e4.  v1.`kotlin.time.AbstractDoubleTimeSource.a` @type ^`java.util.concurrent.TimeUnit` := v2 @kind object;
  #L14f4e8.  return @kind void;
}
procedure `java.util.concurrent.TimeUnit` `getUnit`(`kotlin.time.AbstractDoubleTimeSource` v1 @kind this) @signature `Lkotlin/time/AbstractDoubleTimeSource;.getUnit:()Ljava/util/concurrent/TimeUnit;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L14f484.  v0:= v1.`kotlin.time.AbstractDoubleTimeSource.a` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L14f488.  return v0 @kind object;
}
procedure `kotlin.time.TimeMark` `markNow`(`kotlin.time.AbstractDoubleTimeSource` v8 @kind this) @signature `Lkotlin/time/AbstractDoubleTimeSource;.markNow:()Lkotlin/time/TimeMark;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L14f49c.  v7:= new `kotlin.time.AbstractDoubleTimeSource$a`;
  #L14f4a0.  call temp:= `read`(v8) @signature `Lkotlin/time/AbstractDoubleTimeSource;.read:()D` @kind virtual;
  #L14f4a6.  v1:= temp @kind wide;
  #L14f4a8.  v0:= `@@kotlin.time.Duration.Companion` @type ^`kotlin.time.Duration$Companion` @kind object;
  #L14f4ac.  call temp:= `getZERO-UwyO8pc`(v0) @signature `Lkotlin/time/Duration$Companion;.getZERO-UwyO8pc:()J` @kind virtual;
  #L14f4b2.  v4:= temp @kind wide;
  #L14f4b4.  v6:= 0I;
  #L14f4b6.  v0:= v7 @kind object;
  #L14f4b8.  v3:= v8 @kind object;
  #L14f4ba.  call `<init>`(v0, v1, v3, v4, v6) @signature `Lkotlin/time/AbstractDoubleTimeSource$a;.<init>:(DLkotlin/time/AbstractDoubleTimeSource;JLkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L14f4c0.  return v7 @kind object;
}
procedure `double` `read`() @signature `Lkotlin/time/AbstractDoubleTimeSource;.read:()D` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
