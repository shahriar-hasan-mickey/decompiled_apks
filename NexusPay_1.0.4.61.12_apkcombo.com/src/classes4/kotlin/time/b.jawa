record `kotlin.time.b` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.time.b` v0 @kind this) @signature `Lkotlin/time/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L150c68.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L150c6e.  return @kind void;
}
procedure `void` `DurationUnit$annotations`() @signature `Lkotlin/time/b;.DurationUnit$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L150c80.  return @kind void;
}
procedure `double` `convertDurationUnit`(`double` v7 , `java.util.concurrent.TimeUnit` v9 @kind object, `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lkotlin/time/b;.convertDurationUnit:(DLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L150bb4.  v0:= "sourceUnit" @kind object;
  #L150bb8.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L150bbe.  v0:= "targetUnit" @kind object;
  #L150bc2.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L150bc8.  v0:= 1L;
  #L150bcc.  call temp:= `convert`(v10, v0, v9) @signature `Ljava/util/concurrent/TimeUnit;.convert:(JLjava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L150bd2.  v2:= temp @kind wide;
  #L150bd4.  v4:= 0L;
  #L150bd8.  v6:= lcmp(v2, v4);
  #L150bdc.  if v6 <= 0 then goto L150be8;
  #L150be0.  v9:= (`double`) v2 @kind l2d;
  #L150be2.  v7:= v7 * v9 @kind double;
  #L150be6.  return v7 @kind wide;
  #L150be8.  call temp:= `convert`(v9, v0, v10) @signature `Ljava/util/concurrent/TimeUnit;.convert:(JLjava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L150bee.  v9:= temp @kind wide;
  #L150bf0.  v9:= (`double`) v9 @kind l2d;
  #L150bf2.  v7:= v7 / v9 @kind double;
  #L150bf4.  return v7 @kind wide;
}
procedure `long` `convertDurationUnit`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lkotlin/time/b;.convertDurationUnit:(JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L150c08.  v0:= "sourceUnit" @kind object;
  #L150c0c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L150c12.  v0:= "targetUnit" @kind object;
  #L150c16.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L150c1c.  call temp:= `convert`(v4, v1, v3) @signature `Ljava/util/concurrent/TimeUnit;.convert:(JLjava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L150c22.  v1:= temp @kind wide;
  #L150c24.  return v1 @kind wide;
}
procedure `long` `convertDurationUnitOverflow`(`long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object, `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lkotlin/time/b;.convertDurationUnitOverflow:(JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L150c38.  v0:= "sourceUnit" @kind object;
  #L150c3c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L150c42.  v0:= "targetUnit" @kind object;
  #L150c46.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L150c4c.  call temp:= `convert`(v4, v1, v3) @signature `Ljava/util/concurrent/TimeUnit;.convert:(JLjava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L150c52.  v1:= temp @kind wide;
  #L150c54.  return v1 @kind wide;
}
