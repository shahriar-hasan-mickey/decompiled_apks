record `kotlin.time.FormatToDecimalsKt` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.ThreadLocal`[] `@@kotlin.time.FormatToDecimalsKt.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/time/FormatToDecimalsKt;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1525e4.  v0:= 4I;
  #L1525e6.  v1:= new `java.lang.ThreadLocal`[v0];
  #L1525ea.  v2:= 0I;
  #L1525ec.  if v2 >= v0 then goto L152604;
  #L1525f0.  v3:= new `java.lang.ThreadLocal`;
  #L1525f4.  call `<init>`(v3) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L1525fa.  v1[v2]:= v3 @kind object;
  #L1525fe.  v2:= v2 + 1;
  #L152602.  goto L1525ec;
  #L152604.  `@@kotlin.time.FormatToDecimalsKt.a` @type ^`java.lang.ThreadLocal`[] := v1 @kind object;
  #L152608.  return @kind void;
}
procedure `java.text.DecimalFormat` `a`(`int` v2 ) @signature `Lkotlin/time/FormatToDecimalsKt;.a:(I)Ljava/text/DecimalFormat;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1525b0.  v0:= new `java.text.DecimalFormat`;
  #L1525b4.  v1:= "0" @kind object;
  #L1525b8.  call `<init>`(v0, v1) @signature `Ljava/text/DecimalFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1525be.  if v2 <= 0 then goto L1525c8;
  #L1525c2.  call `setMinimumFractionDigits`(v0, v2) @signature `Ljava/text/DecimalFormat;.setMinimumFractionDigits:(I)V` @kind virtual;
  #L1525c8.  v2:= `@@java.math.RoundingMode.HALF_UP` @type ^`java.math.RoundingMode` @kind object;
  #L1525cc.  call `setRoundingMode`(v0, v2) @signature `Ljava/text/DecimalFormat;.setRoundingMode:(Ljava/math/RoundingMode;)V` @kind virtual;
  #L1525d2.  return v0 @kind object;
}
procedure `java.lang.String` `formatToExactDecimals`(`double` v2 , `int` v4 ) @signature `Lkotlin/time/FormatToDecimalsKt;.formatToExactDecimals:(DI)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L152520.  v0:= `@@kotlin.time.FormatToDecimalsKt.a` @type ^`java.lang.ThreadLocal`[] @kind object;
  #L152524.  v1:= length @variable v0;
  #L152526.  if v4 >= v1 then goto L152550;
  #L15252a.  v0:= v0[v4] @kind object;
  #L15252e.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L152534.  v1:= temp @kind object;
  #L152536.  if v1 == 0 then goto L15253c;
  #L15253a.  goto L15254a;
  #L15253c.  call temp:= `a`(v4) @signature `Lkotlin/time/FormatToDecimalsKt;.a:(I)Ljava/text/DecimalFormat;` @kind static;
  #L152542.  v1:= temp @kind object;
  #L152544.  call `set`(v0, v1) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L15254a.  v1:= (`java.text.DecimalFormat`) v1 @kind object;
  #L15254e.  goto L152558;
  #L152550.  call temp:= `a`(v4) @signature `Lkotlin/time/FormatToDecimalsKt;.a:(I)Ljava/text/DecimalFormat;` @kind static;
  #L152556.  v1:= temp @kind object;
  #L152558.  call temp:= `format`(v1, v2) @signature `Ljava/text/DecimalFormat;.format:(D)Ljava/lang/String;` @kind virtual;
  #L15255e.  v2:= temp @kind object;
  #L152560.  v3:= "format.format(value)" @kind object;
  #L152564.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15256a.  return v2 @kind object;
}
procedure `java.lang.String` `formatUpToDecimals`(`double` v1 , `int` v3 ) @signature `Lkotlin/time/FormatToDecimalsKt;.formatUpToDecimals:(DI)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L15257c.  v0:= 0I;
  #L15257e.  call temp:= `a`(v0) @signature `Lkotlin/time/FormatToDecimalsKt;.a:(I)Ljava/text/DecimalFormat;` @kind static;
  #L152584.  v0:= temp @kind object;
  #L152586.  call `setMaximumFractionDigits`(v0, v3) @signature `Ljava/text/DecimalFormat;.setMaximumFractionDigits:(I)V` @kind virtual;
  #L15258c.  call temp:= `format`(v0, v1) @signature `Ljava/text/DecimalFormat;.format:(D)Ljava/lang/String;` @kind virtual;
  #L152592.  v1:= temp @kind object;
  #L152594.  v2:= "createFormatForDecimals(â€¦ }\n        .format(value)" @kind object;
  #L152598.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15259e.  return v1 @kind object;
}
