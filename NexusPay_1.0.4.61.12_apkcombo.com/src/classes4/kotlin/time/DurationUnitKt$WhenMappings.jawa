record `kotlin.time.DurationUnitKt$WhenMappings` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
global `int`[] `@@kotlin.time.DurationUnitKt$WhenMappings.$EnumSwitchMapping$0` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlin/time/DurationUnitKt$WhenMappings;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L150af8.  call temp:= `values`() @signature `Ljava/util/concurrent/TimeUnit;.values:()[Ljava/util/concurrent/TimeUnit;` @kind static;
  #L150afe.  v0:= temp @kind object;
  #L150b00.  v0:= length @variable v0;
  #L150b02.  v0:= new `int`[v0];
  #L150b06.  `@@kotlin.time.DurationUnitKt$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] := v0 @kind object;
  #L150b0a.  v1:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L150b0e.  call temp:= `ordinal`(v1) @signature `Ljava/util/concurrent/TimeUnit;.ordinal:()I` @kind virtual;
  #L150b14.  v1:= temp;
  #L150b16.  v2:= 1I;
  #L150b18.  v0[v1]:= v2;
  #L150b1c.  v0:= `@@kotlin.time.DurationUnitKt$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L150b20.  v1:= `@@java.util.concurrent.TimeUnit.MICROSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L150b24.  call temp:= `ordinal`(v1) @signature `Ljava/util/concurrent/TimeUnit;.ordinal:()I` @kind virtual;
  #L150b2a.  v1:= temp;
  #L150b2c.  v2:= 2I;
  #L150b2e.  v0[v1]:= v2;
  #L150b32.  v0:= `@@kotlin.time.DurationUnitKt$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L150b36.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L150b3a.  call temp:= `ordinal`(v1) @signature `Ljava/util/concurrent/TimeUnit;.ordinal:()I` @kind virtual;
  #L150b40.  v1:= temp;
  #L150b42.  v2:= 3I;
  #L150b44.  v0[v1]:= v2;
  #L150b48.  v0:= `@@kotlin.time.DurationUnitKt$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L150b4c.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L150b50.  call temp:= `ordinal`(v1) @signature `Ljava/util/concurrent/TimeUnit;.ordinal:()I` @kind virtual;
  #L150b56.  v1:= temp;
  #L150b58.  v2:= 4I;
  #L150b5a.  v0[v1]:= v2;
  #L150b5e.  v0:= `@@kotlin.time.DurationUnitKt$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L150b62.  v1:= `@@java.util.concurrent.TimeUnit.MINUTES` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L150b66.  call temp:= `ordinal`(v1) @signature `Ljava/util/concurrent/TimeUnit;.ordinal:()I` @kind virtual;
  #L150b6c.  v1:= temp;
  #L150b6e.  v2:= 5I;
  #L150b70.  v0[v1]:= v2;
  #L150b74.  v0:= `@@kotlin.time.DurationUnitKt$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L150b78.  v1:= `@@java.util.concurrent.TimeUnit.HOURS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L150b7c.  call temp:= `ordinal`(v1) @signature `Ljava/util/concurrent/TimeUnit;.ordinal:()I` @kind virtual;
  #L150b82.  v1:= temp;
  #L150b84.  v2:= 6I;
  #L150b86.  v0[v1]:= v2;
  #L150b8a.  v0:= `@@kotlin.time.DurationUnitKt$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L150b8e.  v1:= `@@java.util.concurrent.TimeUnit.DAYS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L150b92.  call temp:= `ordinal`(v1) @signature `Ljava/util/concurrent/TimeUnit;.ordinal:()I` @kind virtual;
  #L150b98.  v1:= temp;
  #L150b9a.  v2:= 7I;
  #L150b9c.  v0[v1]:= v2;
  #L150ba0.  return @kind void;
}
