record `kotlin.time.Duration` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Comparable` @kind interface {
  `long` `kotlin.time.Duration.a` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.time.Duration$Companion` `@@kotlin.time.Duration.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@kotlin.time.Duration.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@kotlin.time.Duration.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@kotlin.time.Duration.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/time/Duration;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L152294.  v0:= new `kotlin.time.Duration$Companion`;
  #L152298.  v1:= 0I;
  #L15229a.  call `<init>`(v0, v1) @signature `Lkotlin/time/Duration$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L1522a0.  `@@kotlin.time.Duration.Companion` @type ^`kotlin.time.Duration$Companion` := v0 @kind object;
  #L1522a4.  v0:= 0L;
  #L1522a8.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/time/Duration;.constructor-impl:(J)J` @kind static;
  #L1522ae.  v0:= temp @kind wide;
  #L1522b0.  `@@kotlin.time.Duration.b` @type ^`long` := v0 @kind wide;
  #L1522b4.  v0:= 1.9999999999999998D;
  #L1522be.  call temp:= `access$durationOfMillis`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @kind static;
  #L1522c4.  v0:= temp @kind wide;
  #L1522c6.  `@@kotlin.time.Duration.c` @type ^`long` := v0 @kind wide;
  #L1522ca.  v0:= -2.0000000000000004D;
  #L1522d4.  call temp:= `access$durationOfMillis`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @kind static;
  #L1522da.  v0:= temp @kind wide;
  #L1522dc.  `@@kotlin.time.Duration.d` @type ^`long` := v0 @kind wide;
  #L1522e0.  return @kind void;
}
procedure `void` `<init>`(`kotlin.time.Duration` v0 @kind this, `long` v1 ) @signature `Lkotlin/time/Duration;.<init>:(J)V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1522f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1522fa.  v0.`kotlin.time.Duration.a` @type ^`long` := v1 @kind wide;
  #L1522fe.  return @kind void;
}
procedure `long` `a`(`long` v6 , `long` v8 , `long` v10 ) @signature `Lkotlin/time/Duration;.a:(JJJ)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L151a4c.  call temp:= `access$nanosToMillis`(v10) @signature `Lkotlin/time/DurationKt;.access$nanosToMillis:(J)J` @kind static;
  #L151a52.  v6:= temp @kind wide;
  #L151a54.  v0:= v8 + v6 @kind long;
  #L151a58.  v8:= -4611686018426L;
  #L151a62.  v2:= lcmp(v8, v0);
  #L151a66.  if v2 <= 0 then goto L151a6c;
  #L151a6a.  goto L151a9c;
  #L151a6c.  v8:= 4611686018426L;
  #L151a76.  v2:= lcmp(v8, v0);
  #L151a7a.  if v2 < 0 then goto L151a9c;
  #L151a7e.  call temp:= `access$millisToNanos`(v6) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L151a84.  v6:= temp @kind wide;
  #L151a86.  v10:= v10 - v6 @kind long;
  #L151a88.  call temp:= `access$millisToNanos`(v0) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L151a8e.  v6:= temp @kind wide;
  #L151a90.  v6:= v6 + v10 @kind long;
  #L151a92.  call temp:= `access$durationOfNanos`(v6) @signature `Lkotlin/time/DurationKt;.access$durationOfNanos:(J)J` @kind static;
  #L151a98.  v6:= temp @kind wide;
  #L151a9a.  goto L151ac0;
  #L151a9c.  v2:= -2.0000000000000004D;
  #L151aa6.  v4:= 1.9999999999999998D;
  #L151ab0.  call temp:= `coerceIn`(v0, v2, v4) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(JJJ)J` @kind static;
  #L151ab6.  v6:= temp @kind wide;
  #L151ab8.  call temp:= `access$durationOfMillis`(v6) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @kind static;
  #L151abe.  v6:= temp @kind wide;
  #L151ac0.  return v6 @kind wide;
}
procedure `long` `access$getINFINITE$cp-UwyO8pc`() @signature `Lkotlin/time/Duration;.access$getINFINITE$cp-UwyO8pc:()J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L151a04.  v0:= `@@kotlin.time.Duration.c` @type ^`long` @kind wide;
  #L151a08.  return v0 @kind wide;
}
procedure `long` `access$getNEG_INFINITE$cp-UwyO8pc`() @signature `Lkotlin/time/Duration;.access$getNEG_INFINITE$cp-UwyO8pc:()J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L151a1c.  v0:= `@@kotlin.time.Duration.d` @type ^`long` @kind wide;
  #L151a20.  return v0 @kind wide;
}
procedure `long` `access$getZERO$cp-UwyO8pc`() @signature `Lkotlin/time/Duration;.access$getZERO$cp-UwyO8pc:()J` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L151a34.  v0:= `@@kotlin.time.Duration.b` @type ^`long` @kind wide;
  #L151a38.  return v0 @kind wide;
}
procedure `void` `b`(`long` v2 , `java.lang.StringBuilder` v4 @kind object, `int` v5 , `int` v6 , `int` v7 , `java.lang.String` v8 @kind object, `boolean` v9 ) @signature `Lkotlin/time/Duration;.b:(JLjava/lang/StringBuilder;IIILjava/lang/String;Z)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L152310.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L152316.  if v6 == 0 then goto L1523a0;
  #L15231a.  v2:= 46I;
  #L15231e.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L152324.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L15232a.  v2:= temp @kind object;
  #L15232c.  v3:= 48I;
  #L152330.  call temp:= `padStart`(v2, v7, v3) @signature `Lkotlin/text/StringsKt;.padStart:(Ljava/lang/String;IC)Ljava/lang/String;` @kind static;
  #L152336.  v2:= temp @kind object;
  #L152338.  call temp:= `length`(v2) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L15233e.  v5:= temp;
  #L152340.  v6:= -1I;
  #L152342.  v5:= v5 + v6 @kind int;
  #L152344.  v7:= 1I;
  #L152346.  v0:= 0I;
  #L152348.  if v5 < 0 then goto L15236c;
  #L15234c.  call temp:= `charAt`(v2, v5) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L152352.  v1:= temp;
  #L152354.  if v1 == v3 then goto L15235c;
  #L152358.  v1:= 1I;
  #L15235a.  goto L15235e;
  #L15235c.  v1:= 0I;
  #L15235e.  if v1 == 0 then goto L152366;
  #L152362.  v6:= v5;
  #L152364.  goto L15236c;
  #L152366.  v5:= v5 + -1;
  #L15236a.  goto L152344;
  #L15236c.  v6:= v6 + v7 @kind int;
  #L15236e.  v3:= "this.append(value, startIndex, endIndex)" @kind object;
  #L152372.  v5:= 3I;
  #L152374.  if v9 != 0 then goto L15238a;
  #L152378.  if v6 >= v5 then goto L15238a;
  #L15237c.  call temp:= `append`(v4, v2, v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L152382.  call `checkNotNullExpressionValue`(v4, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L152388.  goto L1523a0;
  #L15238a.  v6:= v6 + 2;
  #L15238e.  v6:= v6 / v5 @kind int;
  #L152390.  v6:= v6 * 3;
  #L152394.  call temp:= `append`(v4, v2, v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L15239a.  call `checkNotNullExpressionValue`(v4, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1523a0.  call temp:= `append`(v4, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1523a6.  return @kind void;
}
procedure `kotlin.time.Duration` `box-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.box-impl:(J)Lkotlin/time/Duration;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L1519e8.  v0:= new `kotlin.time.Duration`;
  #L1519ec.  call `<init>`(v0, v1) @signature `Lkotlin/time/Duration;.<init>:(J)V` @kind direct;
  #L1519f2.  return v0 @kind object;
}
procedure `java.util.concurrent.TimeUnit` `c`(`long` v0 ) @signature `Lkotlin/time/Duration;.c:(J)Ljava/util/concurrent/TimeUnit;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L1519c0.  call temp:= `f`(v0) @signature `Lkotlin/time/Duration;.f:(J)Z` @kind static;
  #L1519c6.  v0:= temp;
  #L1519c8.  if v0 == 0 then goto L1519d2;
  #L1519cc.  v0:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1519d0.  goto L1519d6;
  #L1519d2.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1519d6.  return v0 @kind object;
}
procedure `int` `compareTo-LRDsOJo`(`long` v5 , `long` v7 ) @signature `Lkotlin/time/Duration;.compareTo-LRDsOJo:(JJ)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L151258.  v0:= v5 ^~ v7 @kind long;
  #L15125c.  v2:= 0L;
  #L151260.  v4:= lcmp(v0, v2);
  #L151264.  if v4 < 0 then goto L151292;
  #L151268.  v1:= (`int`) v0 @kind l2i;
  #L15126a.  v0:= v1 ^& 1;
  #L15126e.  if v0 != 0 then goto L151274;
  #L151272.  goto L151292;
  #L151274.  v0:= (`int`) v5 @kind l2i;
  #L151276.  v0:= v0 ^& 1;
  #L15127a.  v8:= (`int`) v7 @kind l2i;
  #L15127c.  v7:= v8 ^& 1;
  #L151280.  v0:= v0 - v7 @kind int;
  #L151282.  call temp:= `isNegative-impl`(v5) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @kind static;
  #L151288.  v5:= temp;
  #L15128a.  if v5 == 0 then goto L151290;
  #L15128e.  v0:= -v0 @kind int;
  #L151290.  return v0;
  #L151292.  v0:= lcmp(v5, v7);
  #L151296.  return v0;
}
procedure `long` `constructor-impl`(`long` v7 ) @signature `Lkotlin/time/Duration;.constructor-impl:(J)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L151ad4.  call temp:= `f`(v7) @signature `Lkotlin/time/Duration;.f:(J)Z` @kind static;
  #L151ada.  v0:= temp;
  #L151adc.  if v0 == 0 then goto L151b44;
  #L151ae0.  v0:= 1.9999999999138678D;
  #L151aea.  v2:= -2.0000000001722644D;
  #L151af4.  call temp:= `d`(v7) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L151afa.  v4:= temp @kind wide;
  #L151afc.  v6:= lcmp(v2, v4);
  #L151b00.  if v6 > 0 then goto L151b0e;
  #L151b04.  v2:= lcmp(v0, v4);
  #L151b08.  if v2 < 0 then goto L151b0e;
  #L151b0c.  goto L151b9e;
  #L151b0e.  v0:= new `java.lang.AssertionError`;
  #L151b12.  v1:= new `java.lang.StringBuilder`;
  #L151b16.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L151b1c.  call temp:= `d`(v7) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L151b22.  v7:= temp @kind wide;
  #L151b24.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L151b2a.  v7:= " ns is out of nanoseconds range" @kind object;
  #L151b2e.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151b34.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L151b3a.  v7:= temp @kind object;
  #L151b3c.  call `<init>`(v0, v7) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L151b42.  throw v0;
  #L151b44.  v0:= 1.9999999999999998D;
  #L151b4e.  v2:= -2.0000000000000004D;
  #L151b58.  call temp:= `d`(v7) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L151b5e.  v4:= temp @kind wide;
  #L151b60.  v6:= lcmp(v2, v4);
  #L151b64.  if v6 > 0 then goto L151bd6;
  #L151b68.  v2:= lcmp(v0, v4);
  #L151b6c.  if v2 < 0 then goto L151bd6;
  #L151b70.  v0:= 4611686018426L;
  #L151b7a.  v2:= -4611686018426L;
  #L151b84.  call temp:= `d`(v7) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L151b8a.  v4:= temp @kind wide;
  #L151b8c.  v6:= lcmp(v2, v4);
  #L151b90.  if v6 <= 0 then goto L151b96;
  #L151b94.  goto L151b9e;
  #L151b96.  v2:= lcmp(v0, v4);
  #L151b9a.  if v2 >= 0 then goto L151ba0;
  #L151b9e.  return v7 @kind wide;
  #L151ba0.  v0:= new `java.lang.AssertionError`;
  #L151ba4.  v1:= new `java.lang.StringBuilder`;
  #L151ba8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L151bae.  call temp:= `d`(v7) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L151bb4.  v7:= temp @kind wide;
  #L151bb6.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L151bbc.  v7:= " ms is denormalized" @kind object;
  #L151bc0.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151bc6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L151bcc.  v7:= temp @kind object;
  #L151bce.  call `<init>`(v0, v7) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L151bd4.  throw v0;
  #L151bd6.  v0:= new `java.lang.AssertionError`;
  #L151bda.  v1:= new `java.lang.StringBuilder`;
  #L151bde.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L151be4.  call temp:= `d`(v7) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L151bea.  v7:= temp @kind wide;
  #L151bec.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L151bf2.  v7:= " ms is out of milliseconds range" @kind object;
  #L151bf6.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151bfc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L151c02.  v7:= temp @kind object;
  #L151c04.  call `<init>`(v0, v7) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L151c0a.  throw v0;
}
procedure `long` `d`(`long` v1 ) @signature `Lkotlin/time/Duration;.d:(J)J` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L151ec8.  v0:= 1I;
  #L151eca.  v1:= v1 ^> v0 @kind long;
  #L151ecc.  return v1 @kind wide;
}
procedure `double` `div-LRDsOJo`(`long` v2 , `long` v4 ) @signature `Lkotlin/time/Duration;.div-LRDsOJo:(JJ)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L151094.  call temp:= `c`(v2) @signature `Lkotlin/time/Duration;.c:(J)Ljava/util/concurrent/TimeUnit;` @kind static;
  #L15109a.  v0:= temp @kind object;
  #L15109c.  call temp:= `c`(v4) @signature `Lkotlin/time/Duration;.c:(J)Ljava/util/concurrent/TimeUnit;` @kind static;
  #L1510a2.  v1:= temp @kind object;
  #L1510a4.  call temp:= `maxOf`(v0, v1) @signature `Lkotlin/comparisons/ComparisonsKt;.maxOf:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Ljava/lang/Comparable;` @kind static;
  #L1510aa.  v0:= temp @kind object;
  #L1510ac.  v0:= (`java.util.concurrent.TimeUnit`) v0 @kind object;
  #L1510b0.  call temp:= `toDouble-impl`(v2, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLjava/util/concurrent/TimeUnit;)D` @kind static;
  #L1510b6.  v2:= temp @kind wide;
  #L1510b8.  call temp:= `toDouble-impl`(v4, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLjava/util/concurrent/TimeUnit;)D` @kind static;
  #L1510be.  v4:= temp @kind wide;
  #L1510c0.  v2:= v2 / v4 @kind double;
  #L1510c2.  return v2 @kind wide;
}
procedure `long` `div-UwyO8pc`(`long` v4 , `double` v6 ) @signature `Lkotlin/time/Duration;.div-UwyO8pc:(JD)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L151c1c.  call temp:= `roundToInt`(v6) @signature `Lkotlin/math/MathKt;.roundToInt:(D)I` @kind static;
  #L151c22.  v0:= temp;
  #L151c24.  v1:= (`double`) v0 @kind i2d;
  #L151c26.  v3:= dcmpg(v1, v6);
  #L151c2a.  if v3 != 0 then goto L151c3c;
  #L151c2e.  if v0 == 0 then goto L151c3c;
  #L151c32.  call temp:= `div-UwyO8pc`(v4, v0) @signature `Lkotlin/time/Duration;.div-UwyO8pc:(JI)J` @kind static;
  #L151c38.  v4:= temp @kind wide;
  #L151c3a.  return v4 @kind wide;
  #L151c3c.  call temp:= `c`(v4) @signature `Lkotlin/time/Duration;.c:(J)Ljava/util/concurrent/TimeUnit;` @kind static;
  #L151c42.  v0:= temp @kind object;
  #L151c44.  call temp:= `toDouble-impl`(v4, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLjava/util/concurrent/TimeUnit;)D` @kind static;
  #L151c4a.  v4:= temp @kind wide;
  #L151c4c.  v4:= v4 / v6 @kind double;
  #L151c4e.  call temp:= `toDuration`(v4, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(DLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L151c54.  v4:= temp @kind wide;
  #L151c56.  return v4 @kind wide;
}
procedure `long` `div-UwyO8pc`(`long` v8 , `int` v10 ) @signature `Lkotlin/time/Duration;.div-UwyO8pc:(JI)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L151c68.  if v10 != 0 then goto L151ca0;
  #L151c6c.  call temp:= `isPositive-impl`(v8) @signature `Lkotlin/time/Duration;.isPositive-impl:(J)Z` @kind static;
  #L151c72.  v10:= temp;
  #L151c74.  if v10 == 0 then goto L151c7e;
  #L151c78.  v8:= `@@kotlin.time.Duration.c` @type ^`long` @kind wide;
  #L151c7c.  goto L151c8e;
  #L151c7e.  call temp:= `isNegative-impl`(v8) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @kind static;
  #L151c84.  v8:= temp;
  #L151c86.  if v8 == 0 then goto L151c90;
  #L151c8a.  v8:= `@@kotlin.time.Duration.d` @type ^`long` @kind wide;
  #L151c8e.  return v8 @kind wide;
  #L151c90.  v8:= new `java.lang.IllegalArgumentException`;
  #L151c94.  v9:= "Dividing zero duration by zero yields an undefined result." @kind object;
  #L151c98.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L151c9e.  throw v8;
  #L151ca0.  call temp:= `f`(v8) @signature `Lkotlin/time/Duration;.f:(J)Z` @kind static;
  #L151ca6.  v0:= temp;
  #L151ca8.  if v0 == 0 then goto L151cc2;
  #L151cac.  call temp:= `d`(v8) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L151cb2.  v8:= temp @kind wide;
  #L151cb4.  v0:= (`long`) v10 @kind i2l;
  #L151cb6.  v8:= v8 / v0 @kind long;
  #L151cb8.  call temp:= `access$durationOfNanos`(v8) @signature `Lkotlin/time/DurationKt;.access$durationOfNanos:(J)J` @kind static;
  #L151cbe.  v8:= temp @kind wide;
  #L151cc0.  return v8 @kind wide;
  #L151cc2.  call temp:= `isInfinite-impl`(v8) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L151cc8.  v0:= temp;
  #L151cca.  if v0 == 0 then goto L151ce0;
  #L151cce.  call temp:= `getSign`(v10) @signature `Lkotlin/math/MathKt;.getSign:(I)I` @kind static;
  #L151cd4.  v10:= temp;
  #L151cd6.  call temp:= `times-UwyO8pc`(v8, v10) @signature `Lkotlin/time/Duration;.times-UwyO8pc:(JI)J` @kind static;
  #L151cdc.  v8:= temp @kind wide;
  #L151cde.  return v8 @kind wide;
  #L151ce0.  call temp:= `d`(v8) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L151ce6.  v0:= temp @kind wide;
  #L151ce8.  v2:= (`long`) v10 @kind i2l;
  #L151cea.  v0:= v0 / v2 @kind long;
  #L151cec.  v4:= 4611686018426L;
  #L151cf6.  v6:= -4611686018426L;
  #L151d00.  v10:= lcmp(v6, v0);
  #L151d04.  if v10 <= 0 then goto L151d0a;
  #L151d08.  goto L151d3e;
  #L151d0a.  v10:= lcmp(v4, v0);
  #L151d0e.  if v10 < 0 then goto L151d3e;
  #L151d12.  call temp:= `d`(v8) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L151d18.  v8:= temp @kind wide;
  #L151d1a.  v4:= v0 * v2 @kind long;
  #L151d1e.  v8:= v8 - v4 @kind long;
  #L151d20.  call temp:= `access$millisToNanos`(v8) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L151d26.  v8:= temp @kind wide;
  #L151d28.  v8:= v8 / v2 @kind long;
  #L151d2a.  call temp:= `access$millisToNanos`(v0) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L151d30.  v0:= temp @kind wide;
  #L151d32.  v0:= v0 + v8 @kind long;
  #L151d34.  call temp:= `access$durationOfNanos`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfNanos:(J)J` @kind static;
  #L151d3a.  v8:= temp @kind wide;
  #L151d3c.  return v8 @kind wide;
  #L151d3e.  call temp:= `access$durationOfMillis`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @kind static;
  #L151d44.  v8:= temp @kind wide;
  #L151d46.  return v8 @kind wide;
}
procedure `boolean` `e`(`long` v0 ) @signature `Lkotlin/time/Duration;.e:(J)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L150fd8.  v1:= (`int`) v0 @kind l2i;
  #L150fda.  v0:= 1I;
  #L150fdc.  v1:= v1 ^& v0 @kind int;
  #L150fde.  if v1 != v0 then goto L150fe4;
  #L150fe2.  goto L150fe6;
  #L150fe4.  v0:= 0I;
  #L150fe6.  return v0;
}
procedure `boolean` `equals-impl`(`long` v2 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/time/Duration;.equals-impl:(JLjava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L150f64.  v0:= instanceof @variable v4 @type ^`kotlin.time.Duration` @kind boolean;
  #L150f68.  if v0 == 0 then goto L150f84;
  #L150f6c.  v4:= (`kotlin.time.Duration`) v4 @kind object;
  #L150f70.  call temp:= `unbox-impl`(v4) @signature `Lkotlin/time/Duration;.unbox-impl:()J` @kind virtual;
  #L150f76.  v0:= temp @kind wide;
  #L150f78.  v4:= lcmp(v2, v0);
  #L150f7c.  if v4 != 0 then goto L150f84;
  #L150f80.  v2:= 1I;
  #L150f82.  return v2;
  #L150f84.  v2:= 0I;
  #L150f86.  return v2;
}
procedure `boolean` `equals-impl0`(`long` v1 , `long` v3 ) @signature `Lkotlin/time/Duration;.equals-impl0:(JJ)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L150f98.  v0:= lcmp(v1, v3);
  #L150f9c.  if v0 != 0 then goto L150fa4;
  #L150fa0.  v1:= 1I;
  #L150fa2.  goto L150fa6;
  #L150fa4.  v1:= 0I;
  #L150fa6.  return v1;
}
procedure `boolean` `f`(`long` v0 ) @signature `Lkotlin/time/Duration;.f:(J)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L150ff8.  v1:= (`int`) v0 @kind l2i;
  #L150ffa.  v0:= 1I;
  #L150ffc.  v1:= v1 ^& v0 @kind int;
  #L150ffe.  if v1 != 0 then goto L151004;
  #L151002.  goto L151006;
  #L151004.  v0:= 0I;
  #L151006.  return v0;
}
procedure `long` `getAbsoluteValue-UwyO8pc`(`long` v1 ) @signature `Lkotlin/time/Duration;.getAbsoluteValue-UwyO8pc:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L151d58.  call temp:= `isNegative-impl`(v1) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @kind static;
  #L151d5e.  v0:= temp;
  #L151d60.  if v0 == 0 then goto L151d6c;
  #L151d64.  call temp:= `unaryMinus-UwyO8pc`(v1) @signature `Lkotlin/time/Duration;.unaryMinus-UwyO8pc:(J)J` @kind static;
  #L151d6a.  v1:= temp @kind wide;
  #L151d6c.  return v1 @kind wide;
}
procedure `void` `getHoursComponent$annotations`() @signature `Lkotlin/time/Duration;.getHoursComponent$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1523b8.  return @kind void;
}
procedure `int` `getHoursComponent-impl`(`long` v2 ) @signature `Lkotlin/time/Duration;.getHoursComponent-impl:(J)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1512a8.  call temp:= `isInfinite-impl`(v2) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L1512ae.  v0:= temp;
  #L1512b0.  if v0 == 0 then goto L1512b8;
  #L1512b4.  v2:= 0I;
  #L1512b6.  goto L1512ca;
  #L1512b8.  call temp:= `getInWholeHours-impl`(v2) @signature `Lkotlin/time/Duration;.getInWholeHours-impl:(J)J` @kind static;
  #L1512be.  v2:= temp @kind wide;
  #L1512c0.  v0:= 24I;
  #L1512c4.  v0:= (`long`) v0 @kind i2l;
  #L1512c6.  v2:= v2 %% v0 @kind long;
  #L1512c8.  v2:= (`int`) v2 @kind l2i;
  #L1512ca.  return v2;
}
procedure `void` `getInDays$annotations`() @signature `Lkotlin/time/Duration;.getInDays$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1523cc.  return @kind void;
}
procedure `double` `getInDays-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInDays-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1510d4.  v0:= `@@java.util.concurrent.TimeUnit.DAYS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1510d8.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLjava/util/concurrent/TimeUnit;)D` @kind static;
  #L1510de.  v1:= temp @kind wide;
  #L1510e0.  return v1 @kind wide;
}
procedure `void` `getInHours$annotations`() @signature `Lkotlin/time/Duration;.getInHours$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1523e0.  return @kind void;
}
procedure `double` `getInHours-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInHours-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1510f4.  v0:= `@@java.util.concurrent.TimeUnit.HOURS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1510f8.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLjava/util/concurrent/TimeUnit;)D` @kind static;
  #L1510fe.  v1:= temp @kind wide;
  #L151100.  return v1 @kind wide;
}
procedure `void` `getInMicroseconds$annotations`() @signature `Lkotlin/time/Duration;.getInMicroseconds$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1523f4.  return @kind void;
}
procedure `double` `getInMicroseconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInMicroseconds-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L151114.  v0:= `@@java.util.concurrent.TimeUnit.MICROSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L151118.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLjava/util/concurrent/TimeUnit;)D` @kind static;
  #L15111e.  v1:= temp @kind wide;
  #L151120.  return v1 @kind wide;
}
procedure `void` `getInMilliseconds$annotations`() @signature `Lkotlin/time/Duration;.getInMilliseconds$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L152408.  return @kind void;
}
procedure `double` `getInMilliseconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInMilliseconds-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L151134.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L151138.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLjava/util/concurrent/TimeUnit;)D` @kind static;
  #L15113e.  v1:= temp @kind wide;
  #L151140.  return v1 @kind wide;
}
procedure `void` `getInMinutes$annotations`() @signature `Lkotlin/time/Duration;.getInMinutes$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15241c.  return @kind void;
}
procedure `double` `getInMinutes-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInMinutes-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L151154.  v0:= `@@java.util.concurrent.TimeUnit.MINUTES` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L151158.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLjava/util/concurrent/TimeUnit;)D` @kind static;
  #L15115e.  v1:= temp @kind wide;
  #L151160.  return v1 @kind wide;
}
procedure `void` `getInNanoseconds$annotations`() @signature `Lkotlin/time/Duration;.getInNanoseconds$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L152430.  return @kind void;
}
procedure `double` `getInNanoseconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInNanoseconds-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L151174.  v0:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L151178.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLjava/util/concurrent/TimeUnit;)D` @kind static;
  #L15117e.  v1:= temp @kind wide;
  #L151180.  return v1 @kind wide;
}
procedure `void` `getInSeconds$annotations`() @signature `Lkotlin/time/Duration;.getInSeconds$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L152444.  return @kind void;
}
procedure `double` `getInSeconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInSeconds-impl:(J)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L151194.  v0:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L151198.  call temp:= `toDouble-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLjava/util/concurrent/TimeUnit;)D` @kind static;
  #L15119e.  v1:= temp @kind wide;
  #L1511a0.  return v1 @kind wide;
}
procedure `void` `getInWholeDays$annotations`() @signature `Lkotlin/time/Duration;.getInWholeDays$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L152458.  return @kind void;
}
procedure `long` `getInWholeDays-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInWholeDays-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L151d80.  v0:= `@@java.util.concurrent.TimeUnit.DAYS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L151d84.  call temp:= `toLong-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toLong-impl:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L151d8a.  v1:= temp @kind wide;
  #L151d8c.  return v1 @kind wide;
}
procedure `void` `getInWholeHours$annotations`() @signature `Lkotlin/time/Duration;.getInWholeHours$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15246c.  return @kind void;
}
procedure `long` `getInWholeHours-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInWholeHours-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L151da0.  v0:= `@@java.util.concurrent.TimeUnit.HOURS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L151da4.  call temp:= `toLong-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toLong-impl:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L151daa.  v1:= temp @kind wide;
  #L151dac.  return v1 @kind wide;
}
procedure `void` `getInWholeMicroseconds$annotations`() @signature `Lkotlin/time/Duration;.getInWholeMicroseconds$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L152480.  return @kind void;
}
procedure `long` `getInWholeMicroseconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInWholeMicroseconds-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L151dc0.  v0:= `@@java.util.concurrent.TimeUnit.MICROSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L151dc4.  call temp:= `toLong-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toLong-impl:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L151dca.  v1:= temp @kind wide;
  #L151dcc.  return v1 @kind wide;
}
procedure `void` `getInWholeMilliseconds$annotations`() @signature `Lkotlin/time/Duration;.getInWholeMilliseconds$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L152494.  return @kind void;
}
procedure `long` `getInWholeMilliseconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInWholeMilliseconds-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L151de0.  call temp:= `e`(v1) @signature `Lkotlin/time/Duration;.e:(J)Z` @kind static;
  #L151de6.  v0:= temp;
  #L151de8.  if v0 == 0 then goto L151e02;
  #L151dec.  call temp:= `isFinite-impl`(v1) @signature `Lkotlin/time/Duration;.isFinite-impl:(J)Z` @kind static;
  #L151df2.  v0:= temp;
  #L151df4.  if v0 == 0 then goto L151e02;
  #L151df8.  call temp:= `d`(v1) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L151dfe.  v1:= temp @kind wide;
  #L151e00.  goto L151e0e;
  #L151e02.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L151e06.  call temp:= `toLong-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toLong-impl:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L151e0c.  v1:= temp @kind wide;
  #L151e0e.  return v1 @kind wide;
}
procedure `void` `getInWholeMinutes$annotations`() @signature `Lkotlin/time/Duration;.getInWholeMinutes$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1524a8.  return @kind void;
}
procedure `long` `getInWholeMinutes-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInWholeMinutes-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L151e20.  v0:= `@@java.util.concurrent.TimeUnit.MINUTES` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L151e24.  call temp:= `toLong-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toLong-impl:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L151e2a.  v1:= temp @kind wide;
  #L151e2c.  return v1 @kind wide;
}
procedure `void` `getInWholeNanoseconds$annotations`() @signature `Lkotlin/time/Duration;.getInWholeNanoseconds$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1524bc.  return @kind void;
}
procedure `long` `getInWholeNanoseconds-impl`(`long` v3 ) @signature `Lkotlin/time/Duration;.getInWholeNanoseconds-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L151e40.  call temp:= `d`(v3) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L151e46.  v0:= temp @kind wide;
  #L151e48.  call temp:= `f`(v3) @signature `Lkotlin/time/Duration;.f:(J)Z` @kind static;
  #L151e4e.  v3:= temp;
  #L151e50.  if v3 == 0 then goto L151e56;
  #L151e54.  goto L151e94;
  #L151e56.  v3:= 9223372036854L;
  #L151e60.  v2:= lcmp(v0, v3);
  #L151e64.  if v2 <= 0 then goto L151e74;
  #L151e68.  v0:= 9223372036854775807L;
  #L151e72.  goto L151e94;
  #L151e74.  v3:= -9223372036854L;
  #L151e7e.  v2:= lcmp(v0, v3);
  #L151e82.  if v2 >= 0 then goto L151e8c;
  #L151e86.  v0:= -9223372036854775808L;
  #L151e8a.  goto L151e94;
  #L151e8c.  call temp:= `access$millisToNanos`(v0) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L151e92.  v0:= temp @kind wide;
  #L151e94.  return v0 @kind wide;
}
procedure `void` `getInWholeSeconds$annotations`() @signature `Lkotlin/time/Duration;.getInWholeSeconds$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1524d0.  return @kind void;
}
procedure `long` `getInWholeSeconds-impl`(`long` v1 ) @signature `Lkotlin/time/Duration;.getInWholeSeconds-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L151ea8.  v0:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L151eac.  call temp:= `toLong-impl`(v1, v0) @signature `Lkotlin/time/Duration;.toLong-impl:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L151eb2.  v1:= temp @kind wide;
  #L151eb4.  return v1 @kind wide;
}
procedure `void` `getMinutesComponent$annotations`() @signature `Lkotlin/time/Duration;.getMinutesComponent$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1524e4.  return @kind void;
}
procedure `int` `getMinutesComponent-impl`(`long` v2 ) @signature `Lkotlin/time/Duration;.getMinutesComponent-impl:(J)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1512dc.  call temp:= `isInfinite-impl`(v2) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L1512e2.  v0:= temp;
  #L1512e4.  if v0 == 0 then goto L1512ec;
  #L1512e8.  v2:= 0I;
  #L1512ea.  goto L1512fe;
  #L1512ec.  call temp:= `getInWholeMinutes-impl`(v2) @signature `Lkotlin/time/Duration;.getInWholeMinutes-impl:(J)J` @kind static;
  #L1512f2.  v2:= temp @kind wide;
  #L1512f4.  v0:= 60I;
  #L1512f8.  v0:= (`long`) v0 @kind i2l;
  #L1512fa.  v2:= v2 %% v0 @kind long;
  #L1512fc.  v2:= (`int`) v2 @kind l2i;
  #L1512fe.  return v2;
}
procedure `void` `getNanosecondsComponent$annotations`() @signature `Lkotlin/time/Duration;.getNanosecondsComponent$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1524f8.  return @kind void;
}
procedure `int` `getNanosecondsComponent-impl`(`long` v2 ) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L151310.  call temp:= `isInfinite-impl`(v2) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L151316.  v0:= temp;
  #L151318.  if v0 == 0 then goto L151320;
  #L15131c.  v2:= 0I;
  #L15131e.  goto L15135a;
  #L151320.  call temp:= `e`(v2) @signature `Lkotlin/time/Duration;.e:(J)Z` @kind static;
  #L151326.  v0:= temp;
  #L151328.  if v0 == 0 then goto L151346;
  #L15132c.  call temp:= `d`(v2) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L151332.  v2:= temp @kind wide;
  #L151334.  v0:= 1000I;
  #L151338.  v0:= (`long`) v0 @kind i2l;
  #L15133a.  v2:= v2 %% v0 @kind long;
  #L15133c.  call temp:= `access$millisToNanos`(v2) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L151342.  v2:= temp @kind wide;
  #L151344.  goto L151358;
  #L151346.  call temp:= `d`(v2) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L15134c.  v2:= temp @kind wide;
  #L15134e.  v0:= 1000000000I;
  #L151354.  v0:= (`long`) v0 @kind i2l;
  #L151356.  v2:= v2 %% v0 @kind long;
  #L151358.  v2:= (`int`) v2 @kind l2i;
  #L15135a.  return v2;
}
procedure `void` `getSecondsComponent$annotations`() @signature `Lkotlin/time/Duration;.getSecondsComponent$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L15250c.  return @kind void;
}
procedure `int` `getSecondsComponent-impl`(`long` v2 ) @signature `Lkotlin/time/Duration;.getSecondsComponent-impl:(J)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L15136c.  call temp:= `isInfinite-impl`(v2) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L151372.  v0:= temp;
  #L151374.  if v0 == 0 then goto L15137c;
  #L151378.  v2:= 0I;
  #L15137a.  goto L15138e;
  #L15137c.  call temp:= `getInWholeSeconds-impl`(v2) @signature `Lkotlin/time/Duration;.getInWholeSeconds-impl:(J)J` @kind static;
  #L151382.  v2:= temp @kind wide;
  #L151384.  v0:= 60I;
  #L151388.  v0:= (`long`) v0 @kind i2l;
  #L15138a.  v2:= v2 %% v0 @kind long;
  #L15138c.  v2:= (`int`) v2 @kind l2i;
  #L15138e.  return v2;
}
procedure `int` `hashCode-impl`(`long` v2 ) @signature `Lkotlin/time/Duration;.hashCode-impl:(J)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1513c0.  v0:= 32I;
  #L1513c4.  v0:= v2 ^>> v0 @kind long;
  #L1513c8.  v2:= v2 ^~ v0 @kind long;
  #L1513ca.  v3:= (`int`) v2 @kind l2i;
  #L1513cc.  return v3;
}
procedure `boolean` `isFinite-impl`(`long` v0 ) @signature `Lkotlin/time/Duration;.isFinite-impl:(J)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L150fb8.  call temp:= `isInfinite-impl`(v0) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L150fbe.  v0:= temp;
  #L150fc0.  v0:= v0 ^~ 1;
  #L150fc4.  return v0;
}
procedure `boolean` `isInfinite-impl`(`long` v3 ) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L151018.  v0:= `@@kotlin.time.Duration.c` @type ^`long` @kind wide;
  #L15101c.  v2:= lcmp(v3, v0);
  #L151020.  if v2 == 0 then goto L151036;
  #L151024.  v0:= `@@kotlin.time.Duration.d` @type ^`long` @kind wide;
  #L151028.  v2:= lcmp(v3, v0);
  #L15102c.  if v2 != 0 then goto L151032;
  #L151030.  goto L151036;
  #L151032.  v3:= 0I;
  #L151034.  goto L151038;
  #L151036.  v3:= 1I;
  #L151038.  return v3;
}
procedure `boolean` `isNegative-impl`(`long` v3 ) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L15104c.  v0:= 0L;
  #L151050.  v2:= lcmp(v3, v0);
  #L151054.  if v2 >= 0 then goto L15105c;
  #L151058.  v3:= 1I;
  #L15105a.  goto L15105e;
  #L15105c.  v3:= 0I;
  #L15105e.  return v3;
}
procedure `boolean` `isPositive-impl`(`long` v3 ) @signature `Lkotlin/time/Duration;.isPositive-impl:(J)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L151070.  v0:= 0L;
  #L151074.  v2:= lcmp(v3, v0);
  #L151078.  if v2 <= 0 then goto L151080;
  #L15107c.  v3:= 1I;
  #L15107e.  goto L151082;
  #L151080.  v3:= 0I;
  #L151082.  return v3;
}
procedure `long` `minus-LRDsOJo`(`long` v0 , `long` v2 ) @signature `Lkotlin/time/Duration;.minus-LRDsOJo:(JJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L151ee0.  call temp:= `unaryMinus-UwyO8pc`(v2) @signature `Lkotlin/time/Duration;.unaryMinus-UwyO8pc:(J)J` @kind static;
  #L151ee6.  v2:= temp @kind wide;
  #L151ee8.  call temp:= `plus-LRDsOJo`(v0, v2) @signature `Lkotlin/time/Duration;.plus-LRDsOJo:(JJ)J` @kind static;
  #L151eee.  v0:= temp @kind wide;
  #L151ef0.  return v0 @kind wide;
}
procedure `long` `plus-LRDsOJo`(`long` v7 , `long` v9 ) @signature `Lkotlin/time/Duration;.plus-LRDsOJo:(JJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L151f04.  call temp:= `isInfinite-impl`(v7) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L151f0a.  v0:= temp;
  #L151f0c.  if v0 == 0 then goto L151f3e;
  #L151f10.  call temp:= `isFinite-impl`(v9) @signature `Lkotlin/time/Duration;.isFinite-impl:(J)Z` @kind static;
  #L151f16.  v0:= temp;
  #L151f18.  if v0 != 0 then goto L151f3c;
  #L151f1c.  v9:= v9 ^~ v7 @kind long;
  #L151f1e.  v0:= 0L;
  #L151f22.  v2:= lcmp(v9, v0);
  #L151f26.  if v2 < 0 then goto L151f2c;
  #L151f2a.  goto L151f3c;
  #L151f2c.  v7:= new `java.lang.IllegalArgumentException`;
  #L151f30.  v8:= "Summing infinite durations of different signs yields an undefined result." @kind object;
  #L151f34.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L151f3a.  throw v7;
  #L151f3c.  return v7 @kind wide;
  #L151f3e.  call temp:= `isInfinite-impl`(v9) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L151f44.  v0:= temp;
  #L151f46.  if v0 == 0 then goto L151f4c;
  #L151f4a.  return v9 @kind wide;
  #L151f4c.  v0:= (`int`) v7 @kind l2i;
  #L151f4e.  v0:= v0 ^& 1;
  #L151f52.  v1:= (`int`) v9 @kind l2i;
  #L151f54.  v1:= v1 ^& 1;
  #L151f58.  if v0 != v1 then goto L151f8e;
  #L151f5c.  call temp:= `d`(v7) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L151f62.  v0:= temp @kind wide;
  #L151f64.  call temp:= `d`(v9) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L151f6a.  v9:= temp @kind wide;
  #L151f6c.  v0:= v0 + v9 @kind long;
  #L151f6e.  call temp:= `f`(v7) @signature `Lkotlin/time/Duration;.f:(J)Z` @kind static;
  #L151f74.  v7:= temp;
  #L151f76.  if v7 == 0 then goto L151f84;
  #L151f7a.  call temp:= `access$durationOfNanosNormalized`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfNanosNormalized:(J)J` @kind static;
  #L151f80.  v7:= temp @kind wide;
  #L151f82.  goto L151fd0;
  #L151f84.  call temp:= `access$durationOfMillisNormalized`(v0) @signature `Lkotlin/time/DurationKt;.access$durationOfMillisNormalized:(J)J` @kind static;
  #L151f8a.  v7:= temp @kind wide;
  #L151f8c.  goto L151fd0;
  #L151f8e.  call temp:= `e`(v7) @signature `Lkotlin/time/Duration;.e:(J)Z` @kind static;
  #L151f94.  v0:= temp;
  #L151f96.  if v0 == 0 then goto L151fb6;
  #L151f9a.  call temp:= `d`(v7) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L151fa0.  v3:= temp @kind wide;
  #L151fa2.  call temp:= `d`(v9) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L151fa8.  v5:= temp @kind wide;
  #L151faa.  v1:= v7 @kind wide;
  #L151fac.  call temp:= `a`(v1, v3, v5) @signature `Lkotlin/time/Duration;.a:(JJJ)J` @kind static;
  #L151fb2.  v7:= temp @kind wide;
  #L151fb4.  goto L151fd0;
  #L151fb6.  call temp:= `d`(v9) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L151fbc.  v2:= temp @kind wide;
  #L151fbe.  call temp:= `d`(v7) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L151fc4.  v4:= temp @kind wide;
  #L151fc6.  v0:= v7 @kind wide;
  #L151fc8.  call temp:= `a`(v0, v2, v4) @signature `Lkotlin/time/Duration;.a:(JJJ)J` @kind static;
  #L151fce.  v7:= temp @kind wide;
  #L151fd0.  return v7 @kind wide;
}
procedure `long` `times-UwyO8pc`(`long` v4 , `double` v6 ) @signature `Lkotlin/time/Duration;.times-UwyO8pc:(JD)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L151fe4.  call temp:= `roundToInt`(v6) @signature `Lkotlin/math/MathKt;.roundToInt:(D)I` @kind static;
  #L151fea.  v0:= temp;
  #L151fec.  v1:= (`double`) v0 @kind i2d;
  #L151fee.  v3:= dcmpg(v1, v6);
  #L151ff2.  if v3 != 0 then goto L152000;
  #L151ff6.  call temp:= `times-UwyO8pc`(v4, v0) @signature `Lkotlin/time/Duration;.times-UwyO8pc:(JI)J` @kind static;
  #L151ffc.  v4:= temp @kind wide;
  #L151ffe.  return v4 @kind wide;
  #L152000.  call temp:= `c`(v4) @signature `Lkotlin/time/Duration;.c:(J)Ljava/util/concurrent/TimeUnit;` @kind static;
  #L152006.  v0:= temp @kind object;
  #L152008.  call temp:= `toDouble-impl`(v4, v0) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLjava/util/concurrent/TimeUnit;)D` @kind static;
  #L15200e.  v4:= temp @kind wide;
  #L152010.  v4:= v4 * v6 @kind double;
  #L152014.  call temp:= `toDuration`(v4, v0) @signature `Lkotlin/time/DurationKt;.toDuration:(DLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L15201a.  v4:= temp @kind wide;
  #L15201c.  return v4 @kind wide;
}
procedure `long` `times-UwyO8pc`(`long` v13 , `int` v15 ) @signature `Lkotlin/time/Duration;.times-UwyO8pc:(JI)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L152030.  call temp:= `isInfinite-impl`(v13) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L152036.  v0:= temp;
  #L152038.  if v0 == 0 then goto L152060;
  #L15203c.  if v15 == 0 then goto L152050;
  #L152040.  if v15 <= 0 then goto L152046;
  #L152044.  goto L15204e;
  #L152046.  call temp:= `unaryMinus-UwyO8pc`(v13) @signature `Lkotlin/time/Duration;.unaryMinus-UwyO8pc:(J)J` @kind static;
  #L15204c.  v13:= temp @kind wide;
  #L15204e.  return v13 @kind wide;
  #L152050.  v13:= new `java.lang.IllegalArgumentException`;
  #L152054.  v14:= "Multiplying infinite duration by zero yields an undefined result." @kind object;
  #L152058.  call `<init>`(v13, v14) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15205e.  throw v13;
  #L152060.  if v15 != 0 then goto L15206a;
  #L152064.  v13:= `@@kotlin.time.Duration.b` @type ^`long` @kind wide;
  #L152068.  return v13 @kind wide;
  #L15206a.  call temp:= `d`(v13) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L152070.  v0:= temp @kind wide;
  #L152072.  v2:= (`long`) v15 @kind i2l;
  #L152074.  v4:= v0 * v2 @kind long;
  #L152078.  call temp:= `f`(v13) @signature `Lkotlin/time/Duration;.f:(J)Z` @kind static;
  #L15207e.  v13:= temp;
  #L152080.  v6:= 1.9999999999999998D;
  #L15208a.  v8:= -2.0000000000000004D;
  #L152094.  if v13 == 0 then goto L15215a;
  #L152098.  v13:= 2147483647L;
  #L15209e.  v10:= -2147483647L;
  #L1520a4.  v12:= lcmp(v10, v0);
  #L1520a8.  if v12 <= 0 then goto L1520ae;
  #L1520ac.  goto L1520c2;
  #L1520ae.  v10:= lcmp(v13, v0);
  #L1520b2.  if v10 < 0 then goto L1520c2;
  #L1520b6.  call temp:= `access$durationOfNanos`(v4) @signature `Lkotlin/time/DurationKt;.access$durationOfNanos:(J)J` @kind static;
  #L1520bc.  v13:= temp @kind wide;
  #L1520be.  goto L1521a4;
  #L1520c2.  v13:= v4 / v2 @kind long;
  #L1520c6.  v10:= lcmp(v13, v0);
  #L1520ca.  if v10 != 0 then goto L1520d8;
  #L1520ce.  call temp:= `access$durationOfNanosNormalized`(v4) @signature `Lkotlin/time/DurationKt;.access$durationOfNanosNormalized:(J)J` @kind static;
  #L1520d4.  v13:= temp @kind wide;
  #L1520d6.  goto L1521a4;
  #L1520d8.  call temp:= `access$nanosToMillis`(v0) @signature `Lkotlin/time/DurationKt;.access$nanosToMillis:(J)J` @kind static;
  #L1520de.  v13:= temp @kind wide;
  #L1520e0.  call temp:= `access$millisToNanos`(v13) @signature `Lkotlin/time/DurationKt;.access$millisToNanos:(J)J` @kind static;
  #L1520e6.  v4:= temp @kind wide;
  #L1520e8.  v4:= v0 - v4 @kind long;
  #L1520ec.  v10:= v13 * v2 @kind long;
  #L1520f0.  v4:= v4 * v2 @kind long;
  #L1520f4.  call temp:= `access$nanosToMillis`(v4) @signature `Lkotlin/time/DurationKt;.access$nanosToMillis:(J)J` @kind static;
  #L1520fa.  v4:= temp @kind wide;
  #L1520fc.  v4:= v4 + v10 @kind long;
  #L1520fe.  v2:= v10 / v2 @kind long;
  #L152102.  v12:= lcmp(v2, v13);
  #L152106.  if v12 != 0 then goto L152136;
  #L15210a.  v13:= v4 ^~ v10 @kind long;
  #L15210e.  v2:= 0L;
  #L152112.  v10:= lcmp(v13, v2);
  #L152116.  if v10 < 0 then goto L152136;
  #L15211a.  v13:= new `kotlin.ranges.LongRange`;
  #L15211e.  call `<init>`(v13, v8, v6) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L152124.  call temp:= `coerceIn`(v4, v13) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(JLkotlin/ranges/ClosedRange;)J` @kind static;
  #L15212a.  v13:= temp @kind wide;
  #L15212c.  call temp:= `access$durationOfMillis`(v13) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @kind static;
  #L152132.  v13:= temp @kind wide;
  #L152134.  goto L1521a4;
  #L152136.  call temp:= `getSign`(v0) @signature `Lkotlin/math/MathKt;.getSign:(J)I` @kind static;
  #L15213c.  v13:= temp;
  #L15213e.  call temp:= `getSign`(v15) @signature `Lkotlin/math/MathKt;.getSign:(I)I` @kind static;
  #L152144.  v14:= temp;
  #L152146.  v13:= v13 * v14 @kind int;
  #L15214a.  if v13 <= 0 then goto L152154;
  #L15214e.  v13:= `@@kotlin.time.Duration.c` @type ^`long` @kind wide;
  #L152152.  goto L1521a4;
  #L152154.  v13:= `@@kotlin.time.Duration.d` @type ^`long` @kind wide;
  #L152158.  goto L1521a4;
  #L15215a.  v13:= v4 / v2 @kind long;
  #L15215e.  v2:= lcmp(v13, v0);
  #L152162.  if v2 != 0 then goto L152182;
  #L152166.  v13:= new `kotlin.ranges.LongRange`;
  #L15216a.  call `<init>`(v13, v8, v6) @signature `Lkotlin/ranges/LongRange;.<init>:(JJ)V` @kind direct;
  #L152170.  call temp:= `coerceIn`(v4, v13) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(JLkotlin/ranges/ClosedRange;)J` @kind static;
  #L152176.  v13:= temp @kind wide;
  #L152178.  call temp:= `access$durationOfMillis`(v13) @signature `Lkotlin/time/DurationKt;.access$durationOfMillis:(J)J` @kind static;
  #L15217e.  v13:= temp @kind wide;
  #L152180.  goto L1521a4;
  #L152182.  call temp:= `getSign`(v0) @signature `Lkotlin/math/MathKt;.getSign:(J)I` @kind static;
  #L152188.  v13:= temp;
  #L15218a.  call temp:= `getSign`(v15) @signature `Lkotlin/math/MathKt;.getSign:(I)I` @kind static;
  #L152190.  v14:= temp;
  #L152192.  v13:= v13 * v14 @kind int;
  #L152196.  if v13 <= 0 then goto L1521a0;
  #L15219a.  v13:= `@@kotlin.time.Duration.c` @type ^`long` @kind wide;
  #L15219e.  goto L1521a4;
  #L1521a0.  v13:= `@@kotlin.time.Duration.d` @type ^`long` @kind wide;
  #L1521a4.  return v13 @kind wide;
}
procedure `java.lang.Object` `toComponents-impl`(`long` v2 , `kotlin.jvm.functions.Function2` v4 @kind object) @signature `Lkotlin/time/Duration;.toComponents-impl:(JLkotlin/jvm/functions/Function2;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L15141c.  v0:= "action" @kind object;
  #L151420.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L151426.  call temp:= `getInWholeSeconds-impl`(v2) @signature `Lkotlin/time/Duration;.getInWholeSeconds-impl:(J)J` @kind static;
  #L15142c.  v0:= temp @kind wide;
  #L15142e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L151434.  v0:= temp @kind object;
  #L151436.  call temp:= `getNanosecondsComponent-impl`(v2) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L15143c.  v2:= temp;
  #L15143e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L151444.  v2:= temp @kind object;
  #L151446.  call temp:= `invoke`(v4, v0, v2) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L15144c.  v2:= temp @kind object;
  #L15144e.  return v2 @kind object;
}
procedure `java.lang.Object` `toComponents-impl`(`long` v2 , `kotlin.jvm.functions.Function3` v4 @kind object) @signature `Lkotlin/time/Duration;.toComponents-impl:(JLkotlin/jvm/functions/Function3;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L151460.  v0:= "action" @kind object;
  #L151464.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15146a.  v0:= `@@java.util.concurrent.TimeUnit.MINUTES` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L15146e.  call temp:= `toInt-impl`(v2, v0) @signature `Lkotlin/time/Duration;.toInt-impl:(JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L151474.  v0:= temp;
  #L151476.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15147c.  v0:= temp @kind object;
  #L15147e.  call temp:= `getSecondsComponent-impl`(v2) @signature `Lkotlin/time/Duration;.getSecondsComponent-impl:(J)I` @kind static;
  #L151484.  v1:= temp;
  #L151486.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15148c.  v1:= temp @kind object;
  #L15148e.  call temp:= `getNanosecondsComponent-impl`(v2) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L151494.  v2:= temp;
  #L151496.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15149c.  v2:= temp @kind object;
  #L15149e.  call temp:= `invoke`(v4, v0, v1, v2) @signature `Lkotlin/jvm/functions/Function3;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1514a4.  v2:= temp @kind object;
  #L1514a6.  return v2 @kind object;
}
procedure `java.lang.Object` `toComponents-impl`(`long` v3 , `kotlin.jvm.functions.Function4` v5 @kind object) @signature `Lkotlin/time/Duration;.toComponents-impl:(JLkotlin/jvm/functions/Function4;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1514b8.  v0:= "action" @kind object;
  #L1514bc.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1514c2.  v0:= `@@java.util.concurrent.TimeUnit.HOURS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1514c6.  call temp:= `toInt-impl`(v3, v0) @signature `Lkotlin/time/Duration;.toInt-impl:(JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L1514cc.  v0:= temp;
  #L1514ce.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1514d4.  v0:= temp @kind object;
  #L1514d6.  call temp:= `getMinutesComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getMinutesComponent-impl:(J)I` @kind static;
  #L1514dc.  v1:= temp;
  #L1514de.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1514e4.  v1:= temp @kind object;
  #L1514e6.  call temp:= `getSecondsComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getSecondsComponent-impl:(J)I` @kind static;
  #L1514ec.  v2:= temp;
  #L1514ee.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1514f4.  v2:= temp @kind object;
  #L1514f6.  call temp:= `getNanosecondsComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L1514fc.  v3:= temp;
  #L1514fe.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L151504.  v3:= temp @kind object;
  #L151506.  call temp:= `invoke`(v5, v0, v1, v2, v3) @signature `Lkotlin/jvm/functions/Function4;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L15150c.  v3:= temp @kind object;
  #L15150e.  return v3 @kind object;
}
procedure `java.lang.Object` `toComponents-impl`(`long` v7 , `kotlin.jvm.functions.Function5` v9 @kind object) @signature `Lkotlin/time/Duration;.toComponents-impl:(JLkotlin/jvm/functions/Function5;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L151520.  v0:= "action" @kind object;
  #L151524.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15152a.  v0:= `@@java.util.concurrent.TimeUnit.DAYS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L15152e.  call temp:= `toInt-impl`(v7, v0) @signature `Lkotlin/time/Duration;.toInt-impl:(JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L151534.  v0:= temp;
  #L151536.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15153c.  v2:= temp @kind object;
  #L15153e.  call temp:= `getHoursComponent-impl`(v7) @signature `Lkotlin/time/Duration;.getHoursComponent-impl:(J)I` @kind static;
  #L151544.  v0:= temp;
  #L151546.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15154c.  v3:= temp @kind object;
  #L15154e.  call temp:= `getMinutesComponent-impl`(v7) @signature `Lkotlin/time/Duration;.getMinutesComponent-impl:(J)I` @kind static;
  #L151554.  v0:= temp;
  #L151556.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15155c.  v4:= temp @kind object;
  #L15155e.  call temp:= `getSecondsComponent-impl`(v7) @signature `Lkotlin/time/Duration;.getSecondsComponent-impl:(J)I` @kind static;
  #L151564.  v0:= temp;
  #L151566.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15156c.  v5:= temp @kind object;
  #L15156e.  call temp:= `getNanosecondsComponent-impl`(v7) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L151574.  v7:= temp;
  #L151576.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L15157c.  v6:= temp @kind object;
  #L15157e.  v1:= v9 @kind object;
  #L151580.  call temp:= `invoke`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/jvm/functions/Function5;.invoke:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L151586.  v7:= temp @kind object;
  #L151588.  return v7 @kind object;
}
procedure `double` `toDouble-impl`(`long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLjava/util/concurrent/TimeUnit;)D` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1511b4.  v0:= "unit" @kind object;
  #L1511b8.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1511be.  v0:= `@@kotlin.time.Duration.c` @type ^`long` @kind wide;
  #L1511c2.  v2:= lcmp(v3, v0);
  #L1511c6.  if v2 != 0 then goto L1511d0;
  #L1511ca.  v3:= InfinityD;
  #L1511ce.  goto L1511fc;
  #L1511d0.  v0:= `@@kotlin.time.Duration.d` @type ^`long` @kind wide;
  #L1511d4.  v2:= lcmp(v3, v0);
  #L1511d8.  if v2 != 0 then goto L1511e2;
  #L1511dc.  v3:= -InfinityD;
  #L1511e0.  goto L1511fc;
  #L1511e2.  call temp:= `d`(v3) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L1511e8.  v0:= temp @kind wide;
  #L1511ea.  v0:= (`double`) v0 @kind l2d;
  #L1511ec.  call temp:= `c`(v3) @signature `Lkotlin/time/Duration;.c:(J)Ljava/util/concurrent/TimeUnit;` @kind static;
  #L1511f2.  v3:= temp @kind object;
  #L1511f4.  call temp:= `convertDurationUnit`(v0, v3, v5) @signature `Lkotlin/time/b;.convertDurationUnit:(DLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)D` @kind static;
  #L1511fa.  v3:= temp @kind wide;
  #L1511fc.  return v3 @kind wide;
}
procedure `int` `toInt-impl`(`long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lkotlin/time/Duration;.toInt-impl:(JLjava/util/concurrent/TimeUnit;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1513e0.  v0:= "unit" @kind object;
  #L1513e4.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1513ea.  call temp:= `toLong-impl`(v7, v9) @signature `Lkotlin/time/Duration;.toLong-impl:(JLjava/util/concurrent/TimeUnit;)J` @kind static;
  #L1513f0.  v1:= temp @kind wide;
  #L1513f2.  v7:= -2147483648I;
  #L1513f6.  v3:= (`long`) v7 @kind i2l;
  #L1513f8.  v7:= 2147483647I;
  #L1513fe.  v5:= (`long`) v7 @kind i2l;
  #L151400.  call temp:= `coerceIn`(v1, v3, v5) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(JJJ)J` @kind static;
  #L151406.  v7:= temp @kind wide;
  #L151408.  v8:= (`int`) v7 @kind l2i;
  #L15140a.  return v8;
}
procedure `java.lang.String` `toIsoString-impl`(`long` v11 ) @signature `Lkotlin/time/Duration;.toIsoString-impl:(J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L15159c.  v8:= new `java.lang.StringBuilder`;
  #L1515a0.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1515a6.  call temp:= `isNegative-impl`(v11) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @kind static;
  #L1515ac.  v0:= temp;
  #L1515ae.  if v0 == 0 then goto L1515bc;
  #L1515b2.  v0:= 45I;
  #L1515b6.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1515bc.  v0:= "PT" @kind object;
  #L1515c0.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1515c6.  call temp:= `getAbsoluteValue-UwyO8pc`(v11) @signature `Lkotlin/time/Duration;.getAbsoluteValue-UwyO8pc:(J)J` @kind static;
  #L1515cc.  v0:= temp @kind wide;
  #L1515ce.  v2:= `@@java.util.concurrent.TimeUnit.HOURS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1515d2.  call temp:= `toInt-impl`(v0, v2) @signature `Lkotlin/time/Duration;.toInt-impl:(JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L1515d8.  call temp:= `getMinutesComponent-impl`(v0) @signature `Lkotlin/time/Duration;.getMinutesComponent-impl:(J)I` @kind static;
  #L1515de.  v2:= temp;
  #L1515e0.  call temp:= `getSecondsComponent-impl`(v0) @signature `Lkotlin/time/Duration;.getSecondsComponent-impl:(J)I` @kind static;
  #L1515e6.  v3:= temp;
  #L1515e8.  call temp:= `getNanosecondsComponent-impl`(v0) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L1515ee.  v4:= temp;
  #L1515f0.  call temp:= `getInWholeHours-impl`(v0) @signature `Lkotlin/time/Duration;.getInWholeHours-impl:(J)J` @kind static;
  #L1515f6.  v0:= temp @kind wide;
  #L1515f8.  call temp:= `isInfinite-impl`(v11) @signature `Lkotlin/time/Duration;.isInfinite-impl:(J)Z` @kind static;
  #L1515fe.  v5:= temp;
  #L151600.  if v5 == 0 then goto L15160e;
  #L151604.  v0:= 9999999999999L;
  #L15160e.  v5:= 0L;
  #L151612.  v7:= 1I;
  #L151614.  v9:= 0I;
  #L151616.  v10:= lcmp(v0, v5);
  #L15161a.  if v10 == 0 then goto L151622;
  #L15161e.  v5:= 1I;
  #L151620.  goto L151624;
  #L151622.  v5:= 0I;
  #L151624.  if v3 != 0 then goto L151632;
  #L151628.  if v4 == 0 then goto L15162e;
  #L15162c.  goto L151632;
  #L15162e.  v6:= 0I;
  #L151630.  goto L151634;
  #L151632.  v6:= 1I;
  #L151634.  if v2 != 0 then goto L151644;
  #L151638.  if v6 == 0 then goto L151642;
  #L15163c.  if v5 == 0 then goto L151642;
  #L151640.  goto L151644;
  #L151642.  v7:= 0I;
  #L151644.  if v5 == 0 then goto L151658;
  #L151648.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L15164e.  v0:= 72I;
  #L151652.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L151658.  if v7 == 0 then goto L15166c;
  #L15165c.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L151662.  v0:= 77I;
  #L151666.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15166c.  if v6 != 0 then goto L151678;
  #L151670.  if v5 != 0 then goto L15168c;
  #L151674.  if v7 != 0 then goto L15168c;
  #L151678.  v5:= 9I;
  #L15167c.  v7:= 1I;
  #L15167e.  v6:= "S" @kind object;
  #L151682.  v0:= v11 @kind wide;
  #L151684.  v2:= v8 @kind object;
  #L151686.  call `b`(v0, v2, v3, v4, v5, v6, v7) @signature `Lkotlin/time/Duration;.b:(JLjava/lang/StringBuilder;IIILjava/lang/String;Z)V` @kind static;
  #L15168c.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L151692.  v11:= temp @kind object;
  #L151694.  v12:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L151698.  call `checkNotNullExpressionValue`(v11, v12) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L15169e.  return v11 @kind object;
}
procedure `long` `toLong-impl`(`long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Lkotlin/time/Duration;.toLong-impl:(JLjava/util/concurrent/TimeUnit;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1521b8.  v0:= "unit" @kind object;
  #L1521bc.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1521c2.  v0:= `@@kotlin.time.Duration.c` @type ^`long` @kind wide;
  #L1521c6.  v2:= lcmp(v3, v0);
  #L1521ca.  if v2 != 0 then goto L1521da;
  #L1521ce.  v3:= 9223372036854775807L;
  #L1521d8.  goto L152204;
  #L1521da.  v0:= `@@kotlin.time.Duration.d` @type ^`long` @kind wide;
  #L1521de.  v2:= lcmp(v3, v0);
  #L1521e2.  if v2 != 0 then goto L1521ec;
  #L1521e6.  v3:= -9223372036854775808L;
  #L1521ea.  goto L152204;
  #L1521ec.  call temp:= `d`(v3) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L1521f2.  v0:= temp @kind wide;
  #L1521f4.  call temp:= `c`(v3) @signature `Lkotlin/time/Duration;.c:(J)Ljava/util/concurrent/TimeUnit;` @kind static;
  #L1521fa.  v3:= temp @kind object;
  #L1521fc.  call temp:= `convertDurationUnit`(v0, v3, v5) @signature `Lkotlin/time/b;.convertDurationUnit:(JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;)J` @kind static;
  #L152202.  v3:= temp @kind wide;
  #L152204.  return v3 @kind wide;
}
procedure `long` `toLongMilliseconds-impl`(`long` v0 ) @signature `Lkotlin/time/Duration;.toLongMilliseconds-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L152218.  call temp:= `getInWholeMilliseconds-impl`(v0) @signature `Lkotlin/time/Duration;.getInWholeMilliseconds-impl:(J)J` @kind static;
  #L15221e.  v0:= temp @kind wide;
  #L152220.  return v0 @kind wide;
}
procedure `long` `toLongNanoseconds-impl`(`long` v0 ) @signature `Lkotlin/time/Duration;.toLongNanoseconds-impl:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L152234.  call temp:= `getInWholeNanoseconds-impl`(v0) @signature `Lkotlin/time/Duration;.getInWholeNanoseconds-impl:(J)J` @kind static;
  #L15223a.  v0:= temp @kind wide;
  #L15223c.  return v0 @kind wide;
}
procedure `java.lang.String` `toString-impl`(`long` v14 ) @signature `Lkotlin/time/Duration;.toString-impl:(J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L1516f4.  v0:= 0L;
  #L1516f8.  v2:= lcmp(v14, v0);
  #L1516fc.  if v2 != 0 then goto L151708;
  #L151700.  v14:= "0s" @kind object;
  #L151704.  goto L1518f6;
  #L151708.  v2:= `@@kotlin.time.Duration.c` @type ^`long` @kind wide;
  #L15170c.  v4:= lcmp(v14, v2);
  #L151710.  if v4 != 0 then goto L15171c;
  #L151714.  v14:= "Infinity" @kind object;
  #L151718.  goto L1518f6;
  #L15171c.  v2:= `@@kotlin.time.Duration.d` @type ^`long` @kind wide;
  #L151720.  v4:= lcmp(v14, v2);
  #L151724.  if v4 != 0 then goto L151730;
  #L151728.  v14:= "-Infinity" @kind object;
  #L15172c.  goto L1518f6;
  #L151730.  call temp:= `isNegative-impl`(v14) @signature `Lkotlin/time/Duration;.isNegative-impl:(J)Z` @kind static;
  #L151736.  v2:= temp;
  #L151738.  v11:= new `java.lang.StringBuilder`;
  #L15173c.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L151742.  if v2 == 0 then goto L151750;
  #L151746.  v3:= 45I;
  #L15174a.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L151750.  call temp:= `getAbsoluteValue-UwyO8pc`(v14) @signature `Lkotlin/time/Duration;.getAbsoluteValue-UwyO8pc:(J)J` @kind static;
  #L151756.  v3:= temp @kind wide;
  #L151758.  v14:= `@@java.util.concurrent.TimeUnit.DAYS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L15175c.  call temp:= `toInt-impl`(v3, v14) @signature `Lkotlin/time/Duration;.toInt-impl:(JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L151762.  call temp:= `getHoursComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getHoursComponent-impl:(J)I` @kind static;
  #L151768.  v14:= temp;
  #L15176a.  call temp:= `getMinutesComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getMinutesComponent-impl:(J)I` @kind static;
  #L151770.  v15:= temp;
  #L151772.  call temp:= `getSecondsComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getSecondsComponent-impl:(J)I` @kind static;
  #L151778.  v6:= temp;
  #L15177a.  call temp:= `getNanosecondsComponent-impl`(v3) @signature `Lkotlin/time/Duration;.getNanosecondsComponent-impl:(J)I` @kind static;
  #L151780.  v7:= temp;
  #L151782.  call temp:= `getInWholeDays-impl`(v3) @signature `Lkotlin/time/Duration;.getInWholeDays-impl:(J)J` @kind static;
  #L151788.  v8:= temp @kind wide;
  #L15178a.  v5:= 0I;
  #L15178c.  v12:= 1I;
  #L15178e.  v10:= lcmp(v8, v0);
  #L151792.  if v10 == 0 then goto L15179a;
  #L151796.  v0:= 1I;
  #L151798.  goto L15179c;
  #L15179a.  v0:= 0I;
  #L15179c.  if v14 == 0 then goto L1517a4;
  #L1517a0.  v1:= 1I;
  #L1517a2.  goto L1517a6;
  #L1517a4.  v1:= 0I;
  #L1517a6.  if v15 == 0 then goto L1517ae;
  #L1517aa.  v10:= 1I;
  #L1517ac.  goto L1517b0;
  #L1517ae.  v10:= 0I;
  #L1517b0.  if v6 != 0 then goto L1517be;
  #L1517b4.  if v7 == 0 then goto L1517ba;
  #L1517b8.  goto L1517be;
  #L1517ba.  v13:= 0I;
  #L1517bc.  goto L1517c0;
  #L1517be.  v13:= 1I;
  #L1517c0.  if v0 == 0 then goto L1517d6;
  #L1517c4.  call temp:= `append`(v11, v8) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1517ca.  v5:= 100I;
  #L1517ce.  call temp:= `append`(v11, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1517d4.  v5:= 1I;
  #L1517d6.  v8:= 32I;
  #L1517da.  if v1 != 0 then goto L1517ea;
  #L1517de.  if v0 == 0 then goto L15180a;
  #L1517e2.  if v10 != 0 then goto L1517ea;
  #L1517e6.  if v13 == 0 then goto L15180a;
  #L1517ea.  v9:= v5 + 1;
  #L1517ee.  if v5 <= 0 then goto L1517f8;
  #L1517f2.  call temp:= `append`(v11, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1517f8.  call temp:= `append`(v11, v14) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1517fe.  v14:= 104I;
  #L151802.  call temp:= `append`(v11, v14) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L151808.  v5:= v9;
  #L15180a.  if v10 != 0 then goto L15181a;
  #L15180e.  if v13 == 0 then goto L15183a;
  #L151812.  if v1 != 0 then goto L15181a;
  #L151816.  if v0 == 0 then goto L15183a;
  #L15181a.  v14:= v5 + 1;
  #L15181e.  if v5 <= 0 then goto L151828;
  #L151822.  call temp:= `append`(v11, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L151828.  call temp:= `append`(v11, v15) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L15182e.  v15:= 109I;
  #L151832.  call temp:= `append`(v11, v15) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L151838.  v5:= v14;
  #L15183a.  if v13 == 0 then goto L1518c6;
  #L15183e.  v14:= v5 + 1;
  #L151842.  if v5 <= 0 then goto L15184c;
  #L151846.  call temp:= `append`(v11, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L15184c.  if v6 != 0 then goto L1518b2;
  #L151850.  if v0 != 0 then goto L1518b2;
  #L151854.  if v1 != 0 then goto L1518b2;
  #L151858.  if v10 == 0 then goto L15185e;
  #L15185c.  goto L1518b2;
  #L15185e.  v15:= 1000000I;
  #L151864.  if v7 < v15 then goto L151880;
  #L151868.  v6:= v7 / v15 @kind int;
  #L15186c.  v7:= v7 %% v15 @kind int;
  #L15186e.  v8:= 6I;
  #L151870.  v10:= 0I;
  #L151872.  v9:= "ms" @kind object;
  #L151876.  v5:= v11 @kind object;
  #L151878.  call `b`(v3, v5, v6, v7, v8, v9, v10) @signature `Lkotlin/time/Duration;.b:(JLjava/lang/StringBuilder;IIILjava/lang/String;Z)V` @kind static;
  #L15187e.  goto L1518c4;
  #L151880.  v15:= 1000I;
  #L151884.  if v7 < v15 then goto L1518a0;
  #L151888.  v6:= v7 / 1000;
  #L15188c.  v7:= v7 %% v15 @kind int;
  #L15188e.  v8:= 3I;
  #L151890.  v10:= 0I;
  #L151892.  v9:= "us" @kind object;
  #L151896.  v5:= v11 @kind object;
  #L151898.  call `b`(v3, v5, v6, v7, v8, v9, v10) @signature `Lkotlin/time/Duration;.b:(JLjava/lang/StringBuilder;IIILjava/lang/String;Z)V` @kind static;
  #L15189e.  goto L1518c4;
  #L1518a0.  call temp:= `append`(v11, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1518a6.  v15:= "ns" @kind object;
  #L1518aa.  call temp:= `append`(v11, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1518b0.  goto L1518c4;
  #L1518b2.  v8:= 9I;
  #L1518b6.  v10:= 0I;
  #L1518b8.  v9:= "s" @kind object;
  #L1518bc.  v5:= v11 @kind object;
  #L1518be.  call `b`(v3, v5, v6, v7, v8, v9, v10) @signature `Lkotlin/time/Duration;.b:(JLjava/lang/StringBuilder;IIILjava/lang/String;Z)V` @kind static;
  #L1518c4.  v5:= v14;
  #L1518c6.  if v2 == 0 then goto L1518e4;
  #L1518ca.  if v5 <= v12 then goto L1518e4;
  #L1518ce.  v14:= 40I;
  #L1518d2.  call temp:= `insert`(v11, v12, v14) @signature `Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;` @kind virtual;
  #L1518d8.  v14:= temp @kind object;
  #L1518da.  v15:= 41I;
  #L1518de.  call temp:= `append`(v14, v15) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1518e4.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1518ea.  v14:= temp @kind object;
  #L1518ec.  v15:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L1518f0.  call `checkNotNullExpressionValue`(v14, v15) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1518f6.  return v14 @kind object;
}
procedure `java.lang.String` `toString-impl`(`long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object, `int` v5 ) @signature `Lkotlin/time/Duration;.toString-impl:(JLjava/util/concurrent/TimeUnit;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L151908.  v0:= "unit" @kind object;
  #L15190c.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L151912.  if v5 < 0 then goto L15191a;
  #L151916.  v0:= 1I;
  #L151918.  goto L15191c;
  #L15191a.  v0:= 0I;
  #L15191c.  if v0 == 0 then goto L15197a;
  #L151920.  call temp:= `toDouble-impl`(v2, v4) @signature `Lkotlin/time/Duration;.toDouble-impl:(JLjava/util/concurrent/TimeUnit;)D` @kind static;
  #L151926.  v2:= temp @kind wide;
  #L151928.  call temp:= `isInfinite`(v2) @signature `Ljava/lang/Double;.isInfinite:(D)Z` @kind static;
  #L15192e.  v0:= temp;
  #L151930.  if v0 == 0 then goto L15193e;
  #L151934.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(D)Ljava/lang/String;` @kind static;
  #L15193a.  v2:= temp @kind object;
  #L15193c.  return v2 @kind object;
  #L15193e.  v0:= new `java.lang.StringBuilder`;
  #L151942.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L151948.  v1:= 12I;
  #L15194c.  call temp:= `coerceAtMost`(v5, v1) @signature `Lkotlin/ranges/RangesKt;.coerceAtMost:(II)I` @kind static;
  #L151952.  v5:= temp;
  #L151954.  call temp:= `formatToExactDecimals`(v2, v5) @signature `Lkotlin/time/FormatToDecimalsKt;.formatToExactDecimals:(DI)Ljava/lang/String;` @kind static;
  #L15195a.  v2:= temp @kind object;
  #L15195c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151962.  call temp:= `shortName`(v4) @signature `Lkotlin/time/c;.shortName:(Ljava/util/concurrent/TimeUnit;)Ljava/lang/String;` @kind static;
  #L151968.  v2:= temp @kind object;
  #L15196a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L151970.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L151976.  v2:= temp @kind object;
  #L151978.  return v2 @kind object;
  #L15197a.  v2:= new `java.lang.StringBuilder`;
  #L15197e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L151984.  v3:= "decimals must be not negative, but was " @kind object;
  #L151988.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15198e.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L151994.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15199a.  v2:= temp @kind object;
  #L15199c.  v3:= new `java.lang.IllegalArgumentException`;
  #L1519a0.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1519a6.  v2:= temp @kind object;
  #L1519a8.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1519ae.  throw v3;
}
procedure `java.lang.String` `toString-impl$default`(`long` v0 , `java.util.concurrent.TimeUnit` v2 @kind object, `int` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlin/time/Duration;.toString-impl$default:(JLjava/util/concurrent/TimeUnit;IILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1516d0.  v4:= v4 ^& 2;
  #L1516d4.  if v4 == 0 then goto L1516da;
  #L1516d8.  v3:= 0I;
  #L1516da.  call temp:= `toString-impl`(v0, v2, v3) @signature `Lkotlin/time/Duration;.toString-impl:(JLjava/util/concurrent/TimeUnit;I)Ljava/lang/String;` @kind static;
  #L1516e0.  v0:= temp @kind object;
  #L1516e2.  return v0 @kind object;
}
procedure `long` `unaryMinus-UwyO8pc`(`long` v2 ) @signature `Lkotlin/time/Duration;.unaryMinus-UwyO8pc:(J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L152250.  call temp:= `d`(v2) @signature `Lkotlin/time/Duration;.d:(J)J` @kind static;
  #L152256.  v0:= temp @kind wide;
  #L152258.  v0:= -v0 @kind long;
  #L15225a.  v3:= (`int`) v2 @kind l2i;
  #L15225c.  v2:= v3 ^& 1;
  #L152260.  call temp:= `access$durationOf`(v0, v2) @signature `Lkotlin/time/DurationKt;.access$durationOf:(JI)J` @kind static;
  #L152266.  v2:= temp @kind wide;
  #L152268.  return v2 @kind wide;
}
procedure `int` `compareTo`(`kotlin.time.Duration` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/time/Duration;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L151210.  v3:= (`kotlin.time.Duration`) v3 @kind object;
  #L151214.  call temp:= `unbox-impl`(v3) @signature `Lkotlin/time/Duration;.unbox-impl:()J` @kind virtual;
  #L15121a.  v0:= temp @kind wide;
  #L15121c.  call temp:= `compareTo-LRDsOJo`(v2, v0) @signature `Lkotlin/time/Duration;.compareTo-LRDsOJo:(J)I` @kind virtual;
  #L151222.  v3:= temp;
  #L151224.  return v3;
}
procedure `int` `compareTo-LRDsOJo`(`kotlin.time.Duration` v2 @kind this, `long` v3 ) @signature `Lkotlin/time/Duration;.compareTo-LRDsOJo:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L151238.  v0:= v2.`kotlin.time.Duration.a` @type ^`long` @kind wide;
  #L15123c.  call temp:= `compareTo-LRDsOJo`(v0, v3) @signature `Lkotlin/time/Duration;.compareTo-LRDsOJo:(JJ)I` @kind static;
  #L151242.  v3:= temp;
  #L151244.  return v3;
}
procedure `boolean` `equals`(`kotlin.time.Duration` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/time/Duration;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L150f44.  v0:= v2.`kotlin.time.Duration.a` @type ^`long` @kind wide;
  #L150f48.  call temp:= `equals-impl`(v0, v3) @signature `Lkotlin/time/Duration;.equals-impl:(JLjava/lang/Object;)Z` @kind static;
  #L150f4e.  v3:= temp;
  #L150f50.  return v3;
}
procedure `int` `hashCode`(`kotlin.time.Duration` v2 @kind this) @signature `Lkotlin/time/Duration;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1513a0.  v0:= v2.`kotlin.time.Duration.a` @type ^`long` @kind wide;
  #L1513a4.  call temp:= `hashCode-impl`(v0) @signature `Lkotlin/time/Duration;.hashCode-impl:(J)I` @kind static;
  #L1513aa.  v0:= temp;
  #L1513ac.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.time.Duration` v2 @kind this) @signature `Lkotlin/time/Duration;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1516b0.  v0:= v2.`kotlin.time.Duration.a` @type ^`long` @kind wide;
  #L1516b4.  call temp:= `toString-impl`(v0) @signature `Lkotlin/time/Duration;.toString-impl:(J)Ljava/lang/String;` @kind static;
  #L1516ba.  v0:= temp @kind object;
  #L1516bc.  return v0 @kind object;
}
procedure `long` `unbox-impl`(`kotlin.time.Duration` v2 @kind this) @signature `Lkotlin/time/Duration;.unbox-impl:()J` @AccessFlag PUBLIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L15227c.  v0:= v2.`kotlin.time.Duration.a` @type ^`long` @kind wide;
  #L152280.  return v0 @kind wide;
}
