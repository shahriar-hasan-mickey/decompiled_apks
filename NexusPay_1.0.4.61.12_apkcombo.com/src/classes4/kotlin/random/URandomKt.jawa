record `kotlin.random.URandomKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `checkUIntRangeBounds-J1ME1BU`(`int` v1 , `int` v2 ) @signature `Lkotlin/random/URandomKt;.checkUIntRangeBounds-J1ME1BU:(II)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L134210.  call temp:= `uintCompare`(v2, v1) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L134216.  v0:= temp;
  #L134218.  if v0 <= 0 then goto L134220;
  #L13421c.  v0:= 1I;
  #L13421e.  goto L134222;
  #L134220.  v0:= 0I;
  #L134222.  if v0 == 0 then goto L134228;
  #L134226.  return @kind void;
  #L134228.  call temp:= `box-impl`(v1) @signature `Lkotlin/UInt;.box-impl:(I)Lkotlin/UInt;` @kind static;
  #L13422e.  v1:= temp @kind object;
  #L134230.  call temp:= `box-impl`(v2) @signature `Lkotlin/UInt;.box-impl:(I)Lkotlin/UInt;` @kind static;
  #L134236.  v2:= temp @kind object;
  #L134238.  call temp:= `boundsErrorMessage`(v1, v2) @signature `Lkotlin/random/RandomKt;.boundsErrorMessage:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L13423e.  v1:= temp @kind object;
  #L134240.  v2:= new `java.lang.IllegalArgumentException`;
  #L134244.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L13424a.  v1:= temp @kind object;
  #L13424c.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L134252.  throw v2;
}
procedure `void` `checkULongRangeBounds-eb3DHEI`(`long` v1 , `long` v3 ) @signature `Lkotlin/random/URandomKt;.checkULongRangeBounds-eb3DHEI:(JJ)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L134264.  call temp:= `ulongCompare`(v3, v1) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L13426a.  v0:= temp;
  #L13426c.  if v0 <= 0 then goto L134274;
  #L134270.  v0:= 1I;
  #L134272.  goto L134276;
  #L134274.  v0:= 0I;
  #L134276.  if v0 == 0 then goto L13427c;
  #L13427a.  return @kind void;
  #L13427c.  call temp:= `box-impl`(v1) @signature `Lkotlin/ULong;.box-impl:(J)Lkotlin/ULong;` @kind static;
  #L134282.  v1:= temp @kind object;
  #L134284.  call temp:= `box-impl`(v3) @signature `Lkotlin/ULong;.box-impl:(J)Lkotlin/ULong;` @kind static;
  #L13428a.  v2:= temp @kind object;
  #L13428c.  call temp:= `boundsErrorMessage`(v1, v2) @signature `Lkotlin/random/RandomKt;.boundsErrorMessage:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L134292.  v1:= temp @kind object;
  #L134294.  v2:= new `java.lang.IllegalArgumentException`;
  #L134298.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L13429e.  v1:= temp @kind object;
  #L1342a0.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1342a6.  throw v2;
}
procedure `byte`[] `nextUBytes`(`kotlin.random.Random` v1 @kind object, `int` v2 ) @signature `Lkotlin/random/URandomKt;.nextUBytes:(Lkotlin/random/Random;I)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L133e30.  v0:= "$this$nextUBytes" @kind object;
  #L133e34.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L133e3a.  call temp:= `nextBytes`(v1, v2) @signature `Lkotlin/random/Random;.nextBytes:(I)[B` @kind virtual;
  #L133e40.  v1:= temp @kind object;
  #L133e42.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UByteArray;.constructor-impl:([B)[B` @kind static;
  #L133e48.  v1:= temp @kind object;
  #L133e4a.  return v1 @kind object;
}
procedure `byte`[] `nextUBytes-EVgfTAA`(`kotlin.random.Random` v1 @kind object, `byte`[] v2 @kind object) @signature `Lkotlin/random/URandomKt;.nextUBytes-EVgfTAA:(Lkotlin/random/Random;[B)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L133e5c.  v0:= "$this$nextUBytes" @kind object;
  #L133e60.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L133e66.  v0:= "array" @kind object;
  #L133e6a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L133e70.  call temp:= `nextBytes`(v1, v2) @signature `Lkotlin/random/Random;.nextBytes:([B)[B` @kind virtual;
  #L133e76.  return v2 @kind object;
}
procedure `byte`[] `nextUBytes-Wvrt4B4`(`kotlin.random.Random` v1 @kind object, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lkotlin/random/URandomKt;.nextUBytes-Wvrt4B4:(Lkotlin/random/Random;[BII)[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L133ebc.  v0:= "$this$nextUBytes" @kind object;
  #L133ec0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L133ec6.  v0:= "array" @kind object;
  #L133eca.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L133ed0.  call temp:= `nextBytes`(v1, v2, v3, v4) @signature `Lkotlin/random/Random;.nextBytes:([BII)[B` @kind virtual;
  #L133ed6.  return v2 @kind object;
}
procedure `byte`[] `nextUBytes-Wvrt4B4$default`(`kotlin.random.Random` v0 @kind object, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlin/random/URandomKt;.nextUBytes-Wvrt4B4$default:(Lkotlin/random/Random;[BIIILjava/lang/Object;)[B` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L133e88.  v5:= v4 ^& 2;
  #L133e8c.  if v5 == 0 then goto L133e92;
  #L133e90.  v2:= 0I;
  #L133e92.  v4:= v4 ^& 4;
  #L133e96.  if v4 == 0 then goto L133ea2;
  #L133e9a.  call temp:= `getSize-impl`(v1) @signature `Lkotlin/UByteArray;.getSize-impl:([B)I` @kind static;
  #L133ea0.  v3:= temp;
  #L133ea2.  call temp:= `nextUBytes-Wvrt4B4`(v0, v1, v2, v3) @signature `Lkotlin/random/URandomKt;.nextUBytes-Wvrt4B4:(Lkotlin/random/Random;[BII)[B` @kind static;
  #L133ea8.  v0:= temp @kind object;
  #L133eaa.  return v0 @kind object;
}
procedure `int` `nextUInt`(`kotlin.random.Random` v1 @kind object) @signature `Lkotlin/random/URandomKt;.nextUInt:(Lkotlin/random/Random;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L133ee8.  v0:= "$this$nextUInt" @kind object;
  #L133eec.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L133ef2.  call temp:= `nextInt`(v1) @signature `Lkotlin/random/Random;.nextInt:()I` @kind virtual;
  #L133ef8.  v1:= temp;
  #L133efa.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L133f00.  v1:= temp;
  #L133f02.  return v1;
}
procedure `int` `nextUInt`(`kotlin.random.Random` v2 @kind object, `kotlin.ranges.UIntRange` v3 @kind object) @signature `Lkotlin/random/URandomKt;.nextUInt:(Lkotlin/random/Random;Lkotlin/ranges/UIntRange;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L133f14.  v0:= "$this$nextUInt" @kind object;
  #L133f18.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L133f1e.  v0:= "range" @kind object;
  #L133f22.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L133f28.  call temp:= `isEmpty`(v3) @signature `Lkotlin/ranges/UIntRange;.isEmpty:()Z` @kind virtual;
  #L133f2e.  v0:= temp;
  #L133f30.  if v0 != 0 then goto L133fc2;
  #L133f34.  call temp:= `getLast-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L133f3a.  v0:= temp;
  #L133f3c.  v1:= -1I;
  #L133f3e.  call temp:= `uintCompare`(v0, v1) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L133f44.  v0:= temp;
  #L133f46.  if v0 >= 0 then goto L133f70;
  #L133f4a.  call temp:= `getFirst-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L133f50.  v0:= temp;
  #L133f52.  call temp:= `getLast-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L133f58.  v3:= temp;
  #L133f5a.  v3:= v3 + 1;
  #L133f5e.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L133f64.  v3:= temp;
  #L133f66.  call temp:= `nextUInt-a8DCA5k`(v2, v0, v3) @signature `Lkotlin/random/URandomKt;.nextUInt-a8DCA5k:(Lkotlin/random/Random;II)I` @kind static;
  #L133f6c.  v2:= temp;
  #L133f6e.  goto L133fc0;
  #L133f70.  call temp:= `getFirst-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L133f76.  v0:= temp;
  #L133f78.  v1:= 0I;
  #L133f7a.  call temp:= `uintCompare`(v0, v1) @signature `Lkotlin/UnsignedKt;.uintCompare:(II)I` @kind static;
  #L133f80.  v0:= temp;
  #L133f82.  if v0 <= 0 then goto L133fb8;
  #L133f86.  call temp:= `getFirst-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getFirst-pVg5ArA:()I` @kind virtual;
  #L133f8c.  v0:= temp;
  #L133f8e.  v0:= v0 + -1;
  #L133f92.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L133f98.  v0:= temp;
  #L133f9a.  call temp:= `getLast-pVg5ArA`(v3) @signature `Lkotlin/ranges/UIntProgression;.getLast-pVg5ArA:()I` @kind virtual;
  #L133fa0.  v3:= temp;
  #L133fa2.  call temp:= `nextUInt-a8DCA5k`(v2, v0, v3) @signature `Lkotlin/random/URandomKt;.nextUInt-a8DCA5k:(Lkotlin/random/Random;II)I` @kind static;
  #L133fa8.  v2:= temp;
  #L133faa.  v2:= v2 + 1;
  #L133fae.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L133fb4.  v2:= temp;
  #L133fb6.  goto L133fc0;
  #L133fb8.  call temp:= `nextUInt`(v2) @signature `Lkotlin/random/URandomKt;.nextUInt:(Lkotlin/random/Random;)I` @kind static;
  #L133fbe.  v2:= temp;
  #L133fc0.  return v2;
  #L133fc2.  v2:= new `java.lang.IllegalArgumentException`;
  #L133fc6.  v0:= new `java.lang.StringBuilder`;
  #L133fca.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L133fd0.  v1:= "Cannot get random in empty range: " @kind object;
  #L133fd4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L133fda.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L133fe0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L133fe6.  v3:= temp @kind object;
  #L133fe8.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L133fee.  throw v2;
}
procedure `int` `nextUInt-a8DCA5k`(`kotlin.random.Random` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lkotlin/random/URandomKt;.nextUInt-a8DCA5k:(Lkotlin/random/Random;II)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L134000.  v0:= "$this$nextUInt" @kind object;
  #L134004.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13400a.  call `checkUIntRangeBounds-J1ME1BU`(v2, v3) @signature `Lkotlin/random/URandomKt;.checkUIntRangeBounds-J1ME1BU:(II)V` @kind static;
  #L134010.  v0:= -2147483648I;
  #L134014.  v2:= v2 ^~ v0 @kind int;
  #L134016.  v3:= v3 ^~ v0 @kind int;
  #L134018.  call temp:= `nextInt`(v1, v2, v3) @signature `Lkotlin/random/Random;.nextInt:(II)I` @kind virtual;
  #L13401e.  v1:= temp;
  #L134020.  v1:= v1 ^~ v0 @kind int;
  #L134022.  call temp:= `constructor-impl`(v1) @signature `Lkotlin/UInt;.constructor-impl:(I)I` @kind static;
  #L134028.  v1:= temp;
  #L13402a.  return v1;
}
procedure `int` `nextUInt-qCasIEU`(`kotlin.random.Random` v1 @kind object, `int` v2 ) @signature `Lkotlin/random/URandomKt;.nextUInt-qCasIEU:(Lkotlin/random/Random;I)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L13403c.  v0:= "$this$nextUInt" @kind object;
  #L134040.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L134046.  v0:= 0I;
  #L134048.  call temp:= `nextUInt-a8DCA5k`(v1, v0, v2) @signature `Lkotlin/random/URandomKt;.nextUInt-a8DCA5k:(Lkotlin/random/Random;II)I` @kind static;
  #L13404e.  v1:= temp;
  #L134050.  return v1;
}
procedure `long` `nextULong`(`kotlin.random.Random` v2 @kind object) @signature `Lkotlin/random/URandomKt;.nextULong:(Lkotlin/random/Random;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L134064.  v0:= "$this$nextULong" @kind object;
  #L134068.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13406e.  call temp:= `nextLong`(v2) @signature `Lkotlin/random/Random;.nextLong:()J` @kind virtual;
  #L134074.  v0:= temp @kind wide;
  #L134076.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L13407c.  v0:= temp @kind wide;
  #L13407e.  return v0 @kind wide;
}
procedure `long` `nextULong`(`kotlin.random.Random` v10 @kind object, `kotlin.ranges.ULongRange` v11 @kind object) @signature `Lkotlin/random/URandomKt;.nextULong:(Lkotlin/random/Random;Lkotlin/ranges/ULongRange;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L134090.  v0:= "$this$nextULong" @kind object;
  #L134094.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13409a.  v0:= "range" @kind object;
  #L13409e.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1340a4.  call temp:= `isEmpty`(v11) @signature `Lkotlin/ranges/ULongRange;.isEmpty:()Z` @kind virtual;
  #L1340aa.  v0:= temp;
  #L1340ac.  if v0 != 0 then goto L13416c;
  #L1340b0.  call temp:= `getLast-s-VKNKU`(v11) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L1340b6.  v0:= temp @kind wide;
  #L1340b8.  v2:= -1L;
  #L1340bc.  call temp:= `ulongCompare`(v0, v2) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L1340c2.  v0:= temp;
  #L1340c4.  v1:= 4294967295L;
  #L1340ce.  v3:= 1I;
  #L1340d0.  if v0 >= 0 then goto L134106;
  #L1340d4.  call temp:= `getFirst-s-VKNKU`(v11) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L1340da.  v4:= temp @kind wide;
  #L1340dc.  call temp:= `getLast-s-VKNKU`(v11) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L1340e2.  v6:= temp @kind wide;
  #L1340e4.  v8:= (`long`) v3 @kind i2l;
  #L1340e6.  v0:= v8 ^& v1 @kind long;
  #L1340ea.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L1340f0.  v0:= temp @kind wide;
  #L1340f2.  v6:= v6 + v0 @kind long;
  #L1340f4.  call temp:= `constructor-impl`(v6) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L1340fa.  v0:= temp @kind wide;
  #L1340fc.  call temp:= `nextULong-jmpaW-c`(v10, v4, v0) @signature `Lkotlin/random/URandomKt;.nextULong-jmpaW-c:(Lkotlin/random/Random;JJ)J` @kind static;
  #L134102.  v10:= temp @kind wide;
  #L134104.  goto L13416a;
  #L134106.  call temp:= `getFirst-s-VKNKU`(v11) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L13410c.  v4:= temp @kind wide;
  #L13410e.  v6:= 0L;
  #L134112.  call temp:= `ulongCompare`(v4, v6) @signature `Lkotlin/UnsignedKt;.ulongCompare:(JJ)I` @kind static;
  #L134118.  v0:= temp;
  #L13411a.  if v0 <= 0 then goto L134162;
  #L13411e.  call temp:= `getFirst-s-VKNKU`(v11) @signature `Lkotlin/ranges/ULongProgression;.getFirst-s-VKNKU:()J` @kind virtual;
  #L134124.  v4:= temp @kind wide;
  #L134126.  v6:= (`long`) v3 @kind i2l;
  #L134128.  v0:= v6 ^& v1 @kind long;
  #L13412c.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L134132.  v2:= temp @kind wide;
  #L134134.  v4:= v4 - v2 @kind long;
  #L134136.  call temp:= `constructor-impl`(v4) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L13413c.  v2:= temp @kind wide;
  #L13413e.  call temp:= `getLast-s-VKNKU`(v11) @signature `Lkotlin/ranges/ULongProgression;.getLast-s-VKNKU:()J` @kind virtual;
  #L134144.  v4:= temp @kind wide;
  #L134146.  call temp:= `nextULong-jmpaW-c`(v10, v2, v4) @signature `Lkotlin/random/URandomKt;.nextULong-jmpaW-c:(Lkotlin/random/Random;JJ)J` @kind static;
  #L13414c.  v10:= temp @kind wide;
  #L13414e.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L134154.  v0:= temp @kind wide;
  #L134156.  v10:= v10 + v0 @kind long;
  #L134158.  call temp:= `constructor-impl`(v10) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L13415e.  v10:= temp @kind wide;
  #L134160.  goto L13416a;
  #L134162.  call temp:= `nextULong`(v10) @signature `Lkotlin/random/URandomKt;.nextULong:(Lkotlin/random/Random;)J` @kind static;
  #L134168.  v10:= temp @kind wide;
  #L13416a.  return v10 @kind wide;
  #L13416c.  v10:= new `java.lang.IllegalArgumentException`;
  #L134170.  v0:= new `java.lang.StringBuilder`;
  #L134174.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13417a.  v1:= "Cannot get random in empty range: " @kind object;
  #L13417e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L134184.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13418a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L134190.  v11:= temp @kind object;
  #L134192.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L134198.  throw v10;
}
procedure `long` `nextULong-V1Xi4fY`(`kotlin.random.Random` v2 @kind object, `long` v3 ) @signature `Lkotlin/random/URandomKt;.nextULong-V1Xi4fY:(Lkotlin/random/Random;J)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1341ac.  v0:= "$this$nextULong" @kind object;
  #L1341b0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1341b6.  v0:= 0L;
  #L1341ba.  call temp:= `nextULong-jmpaW-c`(v2, v0, v3) @signature `Lkotlin/random/URandomKt;.nextULong-jmpaW-c:(Lkotlin/random/Random;JJ)J` @kind static;
  #L1341c0.  v2:= temp @kind wide;
  #L1341c2.  return v2 @kind wide;
}
procedure `long` `nextULong-jmpaW-c`(`kotlin.random.Random` v2 @kind object, `long` v3 , `long` v5 ) @signature `Lkotlin/random/URandomKt;.nextULong-jmpaW-c:(Lkotlin/random/Random;JJ)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1341d4.  v0:= "$this$nextULong" @kind object;
  #L1341d8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1341de.  call `checkULongRangeBounds-eb3DHEI`(v3, v5) @signature `Lkotlin/random/URandomKt;.checkULongRangeBounds-eb3DHEI:(JJ)V` @kind static;
  #L1341e4.  v0:= -9223372036854775808L;
  #L1341e8.  v3:= v3 ^~ v0 @kind long;
  #L1341ea.  v5:= v5 ^~ v0 @kind long;
  #L1341ec.  call temp:= `nextLong`(v2, v3, v5) @signature `Lkotlin/random/Random;.nextLong:(JJ)J` @kind virtual;
  #L1341f2.  v2:= temp @kind wide;
  #L1341f4.  v2:= v2 ^~ v0 @kind long;
  #L1341f6.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/ULong;.constructor-impl:(J)J` @kind static;
  #L1341fc.  v2:= temp @kind wide;
  #L1341fe.  return v2 @kind wide;
}
