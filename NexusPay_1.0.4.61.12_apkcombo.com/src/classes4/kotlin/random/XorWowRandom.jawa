record `kotlin.random.XorWowRandom` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.random.Random` @kind class, `java.io.Serializable` @kind interface {
  `int` `kotlin.random.XorWowRandom.b` @AccessFlag PRIVATE;
  `int` `kotlin.random.XorWowRandom.c` @AccessFlag PRIVATE;
  `int` `kotlin.random.XorWowRandom.d` @AccessFlag PRIVATE;
  `int` `kotlin.random.XorWowRandom.e` @AccessFlag PRIVATE;
  `int` `kotlin.random.XorWowRandom.f` @AccessFlag PRIVATE;
  `int` `kotlin.random.XorWowRandom.g` @AccessFlag PRIVATE;
}
global `long` `@@kotlin.random.XorWowRandom.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/random/XorWowRandom;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L13433c.  return @kind void;
}
procedure `void` `<init>`(`kotlin.random.XorWowRandom` v7 @kind this, `int` v8 , `int` v9 ) @signature `Lkotlin/random/XorWowRandom;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L134350.  v5:= ~v8 @kind int;
  #L134352.  v0:= v8 ^< 10;
  #L134356.  v1:= v9 ^>> 4;
  #L13435a.  v6:= v0 ^~ v1 @kind int;
  #L13435e.  v3:= 0I;
  #L134360.  v4:= 0I;
  #L134362.  v0:= v7 @kind object;
  #L134364.  v1:= v8;
  #L134366.  v2:= v9;
  #L134368.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/random/XorWowRandom;.<init>:(IIIIII)V` @kind direct;
  #L13436e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.random.XorWowRandom` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lkotlin/random/XorWowRandom;.<init>:(IIIIII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L134380.  call `<init>`(v0) @signature `Lkotlin/random/Random;.<init>:()V` @kind direct;
  #L134386.  v0.`kotlin.random.XorWowRandom.b` @type ^`int` := v1;
  #L13438a.  v0.`kotlin.random.XorWowRandom.c` @type ^`int` := v2;
  #L13438e.  v0.`kotlin.random.XorWowRandom.d` @type ^`int` := v3;
  #L134392.  v0.`kotlin.random.XorWowRandom.e` @type ^`int` := v4;
  #L134396.  v0.`kotlin.random.XorWowRandom.f` @type ^`int` := v5;
  #L13439a.  v0.`kotlin.random.XorWowRandom.g` @type ^`int` := v6;
  #L13439e.  v1:= v1 ^| v2 @kind int;
  #L1343a0.  v1:= v1 ^| v3 @kind int;
  #L1343a2.  v1:= v1 ^| v4 @kind int;
  #L1343a4.  v1:= v1 ^| v5 @kind int;
  #L1343a6.  v2:= 0I;
  #L1343a8.  if v1 == 0 then goto L1343b0;
  #L1343ac.  v1:= 1I;
  #L1343ae.  goto L1343b2;
  #L1343b0.  v1:= 0I;
  #L1343b2.  if v1 == 0 then goto L1343cc;
  #L1343b6.  v1:= 64I;
  #L1343ba.  if v2 >= v1 then goto L1343ca;
  #L1343be.  call temp:= `nextInt`(v0) @signature `Lkotlin/random/XorWowRandom;.nextInt:()I` @kind virtual;
  #L1343c4.  v2:= v2 + 1;
  #L1343c8.  goto L1343ba;
  #L1343ca.  return @kind void;
  #L1343cc.  v1:= new `java.lang.IllegalArgumentException`;
  #L1343d0.  v2:= "Initial state must have at least one non-zero element." @kind object;
  #L1343d4.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1343da.  v2:= temp @kind object;
  #L1343dc.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1343e2.  throw v1;
}
procedure `int` `nextBits`(`kotlin.random.XorWowRandom` v1 @kind this, `int` v2 ) @signature `Lkotlin/random/XorWowRandom;.nextBits:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1342b8.  call temp:= `nextInt`(v1) @signature `Lkotlin/random/XorWowRandom;.nextInt:()I` @kind virtual;
  #L1342be.  v0:= temp;
  #L1342c0.  call temp:= `takeUpperBits`(v0, v2) @signature `Lkotlin/random/RandomKt;.takeUpperBits:(II)I` @kind static;
  #L1342c6.  v2:= temp;
  #L1342c8.  return v2;
}
procedure `int` `nextInt`(`kotlin.random.XorWowRandom` v3 @kind this) @signature `Lkotlin/random/XorWowRandom;.nextInt:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1342dc.  v0:= v3.`kotlin.random.XorWowRandom.b` @type ^`int`;
  #L1342e0.  v1:= v0 ^>> 2;
  #L1342e4.  v0:= v0 ^~ v1 @kind int;
  #L1342e6.  v1:= v3.`kotlin.random.XorWowRandom.c` @type ^`int`;
  #L1342ea.  v3.`kotlin.random.XorWowRandom.b` @type ^`int` := v1;
  #L1342ee.  v1:= v3.`kotlin.random.XorWowRandom.d` @type ^`int`;
  #L1342f2.  v3.`kotlin.random.XorWowRandom.c` @type ^`int` := v1;
  #L1342f6.  v1:= v3.`kotlin.random.XorWowRandom.e` @type ^`int`;
  #L1342fa.  v3.`kotlin.random.XorWowRandom.d` @type ^`int` := v1;
  #L1342fe.  v1:= v3.`kotlin.random.XorWowRandom.f` @type ^`int`;
  #L134302.  v3.`kotlin.random.XorWowRandom.e` @type ^`int` := v1;
  #L134306.  v2:= v0 ^< 1;
  #L13430a.  v0:= v0 ^~ v2 @kind int;
  #L13430c.  v0:= v0 ^~ v1 @kind int;
  #L13430e.  v1:= v1 ^< 4;
  #L134312.  v0:= v0 ^~ v1 @kind int;
  #L134314.  v3.`kotlin.random.XorWowRandom.f` @type ^`int` := v0;
  #L134318.  v1:= v3.`kotlin.random.XorWowRandom.g` @type ^`int`;
  #L13431c.  v2:= 362437I;
  #L134322.  v1:= v1 + v2 @kind int;
  #L134324.  v3.`kotlin.random.XorWowRandom.g` @type ^`int` := v1;
  #L134328.  v0:= v0 + v1 @kind int;
  #L13432a.  return v0;
}
