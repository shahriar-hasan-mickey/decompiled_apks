record `kotlin.text.DelimitedRangesSequence$iterator$1` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Iterator` @kind interface, `kotlin.jvm.internal.markers.KMappedMarker` @kind interface {
  `int` `kotlin.text.DelimitedRangesSequence$iterator$1.a` @AccessFlag PRIVATE;
  `int` `kotlin.text.DelimitedRangesSequence$iterator$1.b` @AccessFlag PRIVATE;
  `int` `kotlin.text.DelimitedRangesSequence$iterator$1.c` @AccessFlag PRIVATE;
  `kotlin.ranges.IntRange` `kotlin.text.DelimitedRangesSequence$iterator$1.d` @AccessFlag PRIVATE;
  `int` `kotlin.text.DelimitedRangesSequence$iterator$1.e` @AccessFlag PRIVATE;
  `kotlin.text.DelimitedRangesSequence` `kotlin.text.DelimitedRangesSequence$iterator$1.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.text.DelimitedRangesSequence$iterator$1` v2 @kind this, `kotlin.text.DelimitedRangesSequence` v3 @kind object) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.<init>:(Lkotlin/text/DelimitedRangesSequence;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L143b48.  v2.`kotlin.text.DelimitedRangesSequence$iterator$1.f` @type ^`kotlin.text.DelimitedRangesSequence` := v3 @kind object;
  #L143b4c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L143b52.  v0:= -1I;
  #L143b54.  v2.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int` := v0;
  #L143b58.  call temp:= `d`(v3) @signature `Lkotlin/text/DelimitedRangesSequence;.d:(Lkotlin/text/DelimitedRangesSequence;)I` @kind static;
  #L143b5e.  v0:= temp;
  #L143b60.  call temp:= `b`(v3) @signature `Lkotlin/text/DelimitedRangesSequence;.b:(Lkotlin/text/DelimitedRangesSequence;)Ljava/lang/CharSequence;` @kind static;
  #L143b66.  v3:= temp @kind object;
  #L143b68.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L143b6e.  v3:= temp;
  #L143b70.  v1:= 0I;
  #L143b72.  call temp:= `coerceIn`(v0, v1, v3) @signature `Lkotlin/ranges/RangesKt;.coerceIn:(III)I` @kind static;
  #L143b78.  v3:= temp;
  #L143b7a.  v2.`kotlin.text.DelimitedRangesSequence$iterator$1.b` @type ^`int` := v3;
  #L143b7e.  v2.`kotlin.text.DelimitedRangesSequence$iterator$1.c` @type ^`int` := v3;
  #L143b82.  return @kind void;
}
procedure `void` `b`(`kotlin.text.DelimitedRangesSequence$iterator$1` v6 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.b:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L143b94.  v0:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.c` @type ^`int`;
  #L143b98.  v1:= 0I;
  #L143b9a.  if v0 >= 0 then goto L143bac;
  #L143b9e.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int` := v1;
  #L143ba2.  v0:= 0I;
  #L143ba4.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.d` @type ^`kotlin.ranges.IntRange` := v0 @kind object;
  #L143ba8.  goto L143cd0;
  #L143bac.  v0:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.f` @type ^`kotlin.text.DelimitedRangesSequence` @kind object;
  #L143bb0.  call temp:= `c`(v0) @signature `Lkotlin/text/DelimitedRangesSequence;.c:(Lkotlin/text/DelimitedRangesSequence;)I` @kind static;
  #L143bb6.  v0:= temp;
  #L143bb8.  v2:= -1I;
  #L143bba.  v3:= 1I;
  #L143bbc.  if v0 <= 0 then goto L143bda;
  #L143bc0.  v0:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.e` @type ^`int`;
  #L143bc4.  v0:= v0 + v3 @kind int;
  #L143bc6.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.e` @type ^`int` := v0;
  #L143bca.  v4:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.f` @type ^`kotlin.text.DelimitedRangesSequence` @kind object;
  #L143bce.  call temp:= `c`(v4) @signature `Lkotlin/text/DelimitedRangesSequence;.c:(Lkotlin/text/DelimitedRangesSequence;)I` @kind static;
  #L143bd4.  v4:= temp;
  #L143bd6.  if v0 >= v4 then goto L143bf6;
  #L143bda.  v0:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.c` @type ^`int`;
  #L143bde.  v4:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.f` @type ^`kotlin.text.DelimitedRangesSequence` @kind object;
  #L143be2.  call temp:= `b`(v4) @signature `Lkotlin/text/DelimitedRangesSequence;.b:(Lkotlin/text/DelimitedRangesSequence;)Ljava/lang/CharSequence;` @kind static;
  #L143be8.  v4:= temp @kind object;
  #L143bea.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L143bf0.  v4:= temp;
  #L143bf2.  if v0 <= v4 then goto L143c22;
  #L143bf6.  v0:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.b` @type ^`int`;
  #L143bfa.  v1:= new `kotlin.ranges.IntRange`;
  #L143bfe.  v4:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.f` @type ^`kotlin.text.DelimitedRangesSequence` @kind object;
  #L143c02.  call temp:= `b`(v4) @signature `Lkotlin/text/DelimitedRangesSequence;.b:(Lkotlin/text/DelimitedRangesSequence;)Ljava/lang/CharSequence;` @kind static;
  #L143c08.  v4:= temp @kind object;
  #L143c0a.  call temp:= `getLastIndex`(v4) @signature `Lkotlin/text/StringsKt;.getLastIndex:(Ljava/lang/CharSequence;)I` @kind static;
  #L143c10.  v4:= temp;
  #L143c12.  call `<init>`(v1, v0, v4) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L143c18.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.d` @type ^`kotlin.ranges.IntRange` := v1 @kind object;
  #L143c1c.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.c` @type ^`int` := v2;
  #L143c20.  goto L143ccc;
  #L143c22.  v0:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.f` @type ^`kotlin.text.DelimitedRangesSequence` @kind object;
  #L143c26.  call temp:= `a`(v0) @signature `Lkotlin/text/DelimitedRangesSequence;.a:(Lkotlin/text/DelimitedRangesSequence;)Lkotlin/jvm/functions/Function2;` @kind static;
  #L143c2c.  v0:= temp @kind object;
  #L143c2e.  v4:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.f` @type ^`kotlin.text.DelimitedRangesSequence` @kind object;
  #L143c32.  call temp:= `b`(v4) @signature `Lkotlin/text/DelimitedRangesSequence;.b:(Lkotlin/text/DelimitedRangesSequence;)Ljava/lang/CharSequence;` @kind static;
  #L143c38.  v4:= temp @kind object;
  #L143c3a.  v5:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.c` @type ^`int`;
  #L143c3e.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L143c44.  v5:= temp @kind object;
  #L143c46.  call temp:= `invoke`(v0, v4, v5) @signature `Lkotlin/jvm/functions/Function2;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L143c4c.  v0:= temp @kind object;
  #L143c4e.  v0:= (`kotlin.Pair`) v0 @kind object;
  #L143c52.  if v0 != 0 then goto L143c82;
  #L143c56.  v0:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.b` @type ^`int`;
  #L143c5a.  v1:= new `kotlin.ranges.IntRange`;
  #L143c5e.  v4:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.f` @type ^`kotlin.text.DelimitedRangesSequence` @kind object;
  #L143c62.  call temp:= `b`(v4) @signature `Lkotlin/text/DelimitedRangesSequence;.b:(Lkotlin/text/DelimitedRangesSequence;)Ljava/lang/CharSequence;` @kind static;
  #L143c68.  v4:= temp @kind object;
  #L143c6a.  call temp:= `getLastIndex`(v4) @signature `Lkotlin/text/StringsKt;.getLastIndex:(Ljava/lang/CharSequence;)I` @kind static;
  #L143c70.  v4:= temp;
  #L143c72.  call `<init>`(v1, v0, v4) @signature `Lkotlin/ranges/IntRange;.<init>:(II)V` @kind direct;
  #L143c78.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.d` @type ^`kotlin.ranges.IntRange` := v1 @kind object;
  #L143c7c.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.c` @type ^`int` := v2;
  #L143c80.  goto L143ccc;
  #L143c82.  call temp:= `component1`(v0) @signature `Lkotlin/Pair;.component1:()Ljava/lang/Object;` @kind virtual;
  #L143c88.  v2:= temp @kind object;
  #L143c8a.  v2:= (`java.lang.Number`) v2 @kind object;
  #L143c8e.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L143c94.  v2:= temp;
  #L143c96.  call temp:= `component2`(v0) @signature `Lkotlin/Pair;.component2:()Ljava/lang/Object;` @kind virtual;
  #L143c9c.  v0:= temp @kind object;
  #L143c9e.  v0:= (`java.lang.Number`) v0 @kind object;
  #L143ca2.  call temp:= `intValue`(v0) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L143ca8.  v0:= temp;
  #L143caa.  v4:= v6.`kotlin.text.DelimitedRangesSequence$iterator$1.b` @type ^`int`;
  #L143cae.  call temp:= `until`(v4, v2) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L143cb4.  v4:= temp @kind object;
  #L143cb6.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.d` @type ^`kotlin.ranges.IntRange` := v4 @kind object;
  #L143cba.  v2:= v2 + v0 @kind int;
  #L143cbc.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.b` @type ^`int` := v2;
  #L143cc0.  if v0 != 0 then goto L143cc6;
  #L143cc4.  v1:= 1I;
  #L143cc6.  v2:= v2 + v1 @kind int;
  #L143cc8.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.c` @type ^`int` := v2;
  #L143ccc.  v6.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int` := v3;
  #L143cd0.  return @kind void;
}
procedure `int` `getCounter`(`kotlin.text.DelimitedRangesSequence$iterator$1` v1 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.getCounter:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L143a5c.  v0:= v1.`kotlin.text.DelimitedRangesSequence$iterator$1.e` @type ^`int`;
  #L143a60.  return v0;
}
procedure `int` `getCurrentStartIndex`(`kotlin.text.DelimitedRangesSequence$iterator$1` v1 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.getCurrentStartIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L143a74.  v0:= v1.`kotlin.text.DelimitedRangesSequence$iterator$1.b` @type ^`int`;
  #L143a78.  return v0;
}
procedure `kotlin.ranges.IntRange` `getNextItem`(`kotlin.text.DelimitedRangesSequence$iterator$1` v1 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.getNextItem:()Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L143ad8.  v0:= v1.`kotlin.text.DelimitedRangesSequence$iterator$1.d` @type ^`kotlin.ranges.IntRange` @kind object;
  #L143adc.  return v0 @kind object;
}
procedure `int` `getNextSearchIndex`(`kotlin.text.DelimitedRangesSequence$iterator$1` v1 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.getNextSearchIndex:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L143a8c.  v0:= v1.`kotlin.text.DelimitedRangesSequence$iterator$1.c` @type ^`int`;
  #L143a90.  return v0;
}
procedure `int` `getNextState`(`kotlin.text.DelimitedRangesSequence$iterator$1` v1 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.getNextState:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L143aa4.  v0:= v1.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int`;
  #L143aa8.  return v0;
}
procedure `boolean` `hasNext`(`kotlin.text.DelimitedRangesSequence$iterator$1` v2 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L143a2c.  v0:= v2.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int`;
  #L143a30.  v1:= -1I;
  #L143a32.  if v0 != v1 then goto L143a3c;
  #L143a36.  call `b`(v2) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.b:()V` @kind direct;
  #L143a3c.  v0:= v2.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int`;
  #L143a40.  v1:= 1I;
  #L143a42.  if v0 != v1 then goto L143a48;
  #L143a46.  goto L143a4a;
  #L143a48.  v1:= 0I;
  #L143a4a.  return v1;
}
procedure `java.lang.Object` `next`(`kotlin.text.DelimitedRangesSequence$iterator$1` v1 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L143abc.  call temp:= `next`(v1) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.next:()Lkotlin/ranges/IntRange;` @kind virtual;
  #L143ac2.  v0:= temp @kind object;
  #L143ac4.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `next`(`kotlin.text.DelimitedRangesSequence$iterator$1` v3 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.next:()Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L143af0.  v0:= v3.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int`;
  #L143af4.  v1:= -1I;
  #L143af6.  if v0 != v1 then goto L143b00;
  #L143afa.  call `b`(v3) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.b:()V` @kind direct;
  #L143b00.  v0:= v3.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int`;
  #L143b04.  if v0 == 0 then goto L143b2c;
  #L143b08.  v0:= v3.`kotlin.text.DelimitedRangesSequence$iterator$1.d` @type ^`kotlin.ranges.IntRange` @kind object;
  #L143b0c.  if v0 == 0 then goto L143b1c;
  #L143b10.  v2:= 0I;
  #L143b12.  v3.`kotlin.text.DelimitedRangesSequence$iterator$1.d` @type ^`kotlin.ranges.IntRange` := v2 @kind object;
  #L143b16.  v3.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int` := v1;
  #L143b1a.  return v0 @kind object;
  #L143b1c.  v0:= new `java.lang.NullPointerException`;
  #L143b20.  v1:= "null cannot be cast to non-null type kotlin.ranges.IntRange" @kind object;
  #L143b24.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L143b2a.  throw v0;
  #L143b2c.  v0:= new `java.util.NoSuchElementException`;
  #L143b30.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L143b36.  throw v0;
}
procedure `void` `remove`(`kotlin.text.DelimitedRangesSequence$iterator$1` v2 @kind this) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L143ce4.  v0:= new `java.lang.UnsupportedOperationException`;
  #L143ce8.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L143cec.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L143cf2.  throw v0;
}
procedure `void` `setCounter`(`kotlin.text.DelimitedRangesSequence$iterator$1` v0 @kind this, `int` v1 ) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.setCounter:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L143d04.  v0.`kotlin.text.DelimitedRangesSequence$iterator$1.e` @type ^`int` := v1;
  #L143d08.  return @kind void;
}
procedure `void` `setCurrentStartIndex`(`kotlin.text.DelimitedRangesSequence$iterator$1` v0 @kind this, `int` v1 ) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.setCurrentStartIndex:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L143d1c.  v0.`kotlin.text.DelimitedRangesSequence$iterator$1.b` @type ^`int` := v1;
  #L143d20.  return @kind void;
}
procedure `void` `setNextItem`(`kotlin.text.DelimitedRangesSequence$iterator$1` v0 @kind this, `kotlin.ranges.IntRange` v1 @kind object) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.setNextItem:(Lkotlin/ranges/IntRange;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L143d34.  v0.`kotlin.text.DelimitedRangesSequence$iterator$1.d` @type ^`kotlin.ranges.IntRange` := v1 @kind object;
  #L143d38.  return @kind void;
}
procedure `void` `setNextSearchIndex`(`kotlin.text.DelimitedRangesSequence$iterator$1` v0 @kind this, `int` v1 ) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.setNextSearchIndex:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L143d4c.  v0.`kotlin.text.DelimitedRangesSequence$iterator$1.c` @type ^`int` := v1;
  #L143d50.  return @kind void;
}
procedure `void` `setNextState`(`kotlin.text.DelimitedRangesSequence$iterator$1` v0 @kind this, `int` v1 ) @signature `Lkotlin/text/DelimitedRangesSequence$iterator$1;.setNextState:(I)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L143d64.  v0.`kotlin.text.DelimitedRangesSequence$iterator$1.a` @type ^`int` := v1;
  #L143d68.  return @kind void;
}
