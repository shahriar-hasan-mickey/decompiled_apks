record `kotlin.text.f$c` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
  `java.lang.String` `kotlin.text.f$c.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.text.f$c` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lkotlin/text/f$c;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L145a7c.  v0.`kotlin.text.f$c.a` @type ^`java.lang.String` := v1 @kind object;
  #L145a80.  v1:= 1I;
  #L145a82.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L145a88.  return @kind void;
}
procedure `java.lang.String` `a`(`kotlin.text.f$c` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lkotlin/text/f$c;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L145a14.  v0:= "it" @kind object;
  #L145a18.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145a1e.  call temp:= `isBlank`(v3) @signature `Lkotlin/text/StringsKt;.isBlank:(Ljava/lang/CharSequence;)Z` @kind static;
  #L145a24.  v0:= temp;
  #L145a26.  if v0 == 0 then goto L145a48;
  #L145a2a.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L145a30.  v0:= temp;
  #L145a32.  v1:= v2.`kotlin.text.f$c.a` @type ^`java.lang.String` @kind object;
  #L145a36.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L145a3c.  v1:= temp;
  #L145a3e.  if v0 >= v1 then goto L145a6a;
  #L145a42.  v3:= v2.`kotlin.text.f$c.a` @type ^`java.lang.String` @kind object;
  #L145a46.  goto L145a6a;
  #L145a48.  v0:= new `java.lang.StringBuilder`;
  #L145a4c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L145a52.  v1:= v2.`kotlin.text.f$c.a` @type ^`java.lang.String` @kind object;
  #L145a56.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L145a5c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L145a62.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L145a68.  v3:= temp @kind object;
  #L145a6a.  return v3 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.text.f$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/text/f$c;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1459f4.  v1:= (`java.lang.String`) v1 @kind object;
  #L1459f8.  call temp:= `a`(v0, v1) @signature `Lkotlin/text/f$c;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1459fe.  v1:= temp @kind object;
  #L145a00.  return v1 @kind object;
}
