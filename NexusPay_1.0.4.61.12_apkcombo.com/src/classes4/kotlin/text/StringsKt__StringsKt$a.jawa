record `kotlin.text.StringsKt__StringsKt$a` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `char`[] `kotlin.text.StringsKt__StringsKt$a.a` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `kotlin.text.StringsKt__StringsKt$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.text.StringsKt__StringsKt$a` v0 @kind this, `char`[] v1 @kind object, `boolean` v2 ) @signature `Lkotlin/text/StringsKt__StringsKt$a;.<init>:([CZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1476c4.  v0.`kotlin.text.StringsKt__StringsKt$a.a` @type ^`char`[] := v1 @kind object;
  #L1476c8.  v0.`kotlin.text.StringsKt__StringsKt$a.b` @type ^`boolean` := v2 @kind boolean;
  #L1476cc.  v1:= 2I;
  #L1476ce.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L1476d4.  return @kind void;
}
procedure `kotlin.Pair` `a`(`kotlin.text.StringsKt__StringsKt$a` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Lkotlin/text/StringsKt__StringsKt$a;.a:(Ljava/lang/CharSequence;I)Lkotlin/Pair;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L147674.  v0:= "$receiver" @kind object;
  #L147678.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14767e.  v0:= v2.`kotlin.text.StringsKt__StringsKt$a.a` @type ^`char`[] @kind object;
  #L147682.  v1:= v2.`kotlin.text.StringsKt__StringsKt$a.b` @type ^`boolean` @kind boolean;
  #L147686.  call temp:= `indexOfAny`(v3, v0, v4, v1) @signature `Lkotlin/text/StringsKt__StringsKt;.indexOfAny:(Ljava/lang/CharSequence;[CIZ)I` @kind static;
  #L14768c.  v3:= temp;
  #L14768e.  if v3 >= 0 then goto L147696;
  #L147692.  v3:= 0I;
  #L147694.  goto L1476b0;
  #L147696.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L14769c.  v3:= temp @kind object;
  #L14769e.  v4:= 1I;
  #L1476a0.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1476a6.  v4:= temp @kind object;
  #L1476a8.  call temp:= `to`(v3, v4) @signature `Lkotlin/TuplesKt;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;` @kind static;
  #L1476ae.  v3:= temp @kind object;
  #L1476b0.  return v3 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.text.StringsKt__StringsKt$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/text/StringsKt__StringsKt$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L147648.  v1:= (`java.lang.CharSequence`) v1 @kind object;
  #L14764c.  v2:= (`java.lang.Number`) v2 @kind object;
  #L147650.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L147656.  v2:= temp;
  #L147658.  call temp:= `a`(v0, v1, v2) @signature `Lkotlin/text/StringsKt__StringsKt$a;.a:(Ljava/lang/CharSequence;I)Lkotlin/Pair;` @kind virtual;
  #L14765e.  v1:= temp @kind object;
  #L147660.  return v1 @kind object;
}
