record `kotlin.text.Regex$Serialized` @kind class @AccessFlag FINAL extends `java.io.Serializable` @kind interface {
  `java.lang.String` `kotlin.text.Regex$Serialized.a` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.text.Regex$Serialized.b` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@kotlin.text.Regex$Serialized.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/text/Regex$Serialized;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L144728.  v0:= new `kotlin.text.Regex$Serialized$Companion`;
  #L14472c.  v1:= 0I;
  #L14472e.  call `<init>`(v0, v1) @signature `Lkotlin/text/Regex$Serialized$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L144734.  return @kind void;
}
procedure `void` `<init>`(`kotlin.text.Regex$Serialized` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lkotlin/text/Regex$Serialized;.<init>:(Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L144748.  v0:= "pattern" @kind object;
  #L14474c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L144752.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L144758.  v1.`kotlin.text.Regex$Serialized.a` @type ^`java.lang.String` := v2 @kind object;
  #L14475c.  v1.`kotlin.text.Regex$Serialized.b` @type ^`int` := v3;
  #L144760.  return @kind void;
}
procedure `java.lang.Object` `readResolve`(`kotlin.text.Regex$Serialized` v3 @kind this) @signature `Lkotlin/text/Regex$Serialized;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1446f0.  v0:= new `kotlin.text.Regex`;
  #L1446f4.  v1:= v3.`kotlin.text.Regex$Serialized.a` @type ^`java.lang.String` @kind object;
  #L1446f8.  v2:= v3.`kotlin.text.Regex$Serialized.b` @type ^`int`;
  #L1446fc.  call temp:= `compile`(v1, v2) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;` @kind static;
  #L144702.  v1:= temp @kind object;
  #L144704.  v2:= "Pattern.compile(pattern, flags)" @kind object;
  #L144708.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14470e.  call `<init>`(v0, v1) @signature `Lkotlin/text/Regex;.<init>:(Ljava/util/regex/Pattern;)V` @kind direct;
  #L144714.  return v0 @kind object;
}
