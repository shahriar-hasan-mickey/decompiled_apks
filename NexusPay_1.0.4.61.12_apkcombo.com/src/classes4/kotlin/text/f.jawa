record `kotlin.text.f` @kind class @AccessFlag  extends `kotlin.text.e` @kind class {
}
procedure `void` `<init>`(`kotlin.text.f` v0 @kind this) @signature `Lkotlin/text/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L146044.  call `<init>`(v0) @signature `Lkotlin/text/e;.<init>:()V` @kind direct;
  #L14604a.  return @kind void;
}
procedure `kotlin.jvm.functions.Function1` `a`(`java.lang.String` v1 @kind object) @signature `Lkotlin/text/f;.a:(Ljava/lang/String;)Lkotlin/jvm/functions/Function1;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L146008.  call temp:= `length`(v1) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L14600e.  v0:= temp;
  #L146010.  if v0 != 0 then goto L146018;
  #L146014.  v0:= 1I;
  #L146016.  goto L14601a;
  #L146018.  v0:= 0I;
  #L14601a.  if v0 == 0 then goto L146024;
  #L14601e.  v1:= `@@kotlin.text.f$a.a` @type ^`kotlin.text.f$a` @kind object;
  #L146022.  goto L146030;
  #L146024.  v0:= new `kotlin.text.f$b`;
  #L146028.  call `<init>`(v0, v1) @signature `Lkotlin/text/f$b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14602e.  v1:= v0 @kind object;
  #L146030.  return v1 @kind object;
}
procedure `int` `b`(`java.lang.String` v4 @kind object) @signature `Lkotlin/text/f;.b:(Ljava/lang/String;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L145a9c.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L145aa2.  v0:= temp;
  #L145aa4.  v1:= 0I;
  #L145aa6.  v2:= -1I;
  #L145aa8.  if v1 >= v0 then goto L145acc;
  #L145aac.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L145ab2.  v3:= temp;
  #L145ab4.  call temp:= `isWhitespace`(v3) @signature `Lkotlin/text/a;.isWhitespace:(C)Z` @kind static;
  #L145aba.  v3:= temp;
  #L145abc.  v3:= v3 ^~ 1;
  #L145ac0.  if v3 == 0 then goto L145ac6;
  #L145ac4.  goto L145ace;
  #L145ac6.  v1:= v1 + 1;
  #L145aca.  goto L145aa6;
  #L145acc.  v1:= -1I;
  #L145ace.  if v1 != v2 then goto L145ada;
  #L145ad2.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L145ad8.  v1:= temp;
  #L145ada.  return v1;
}
procedure `java.lang.String` `prependIndent`(`java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object) @signature `Lkotlin/text/f;.prependIndent:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L145b14.  v0:= "$this$prependIndent" @kind object;
  #L145b18.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145b1e.  v0:= "indent" @kind object;
  #L145b22.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145b28.  call temp:= `lineSequence`(v10) @signature `Lkotlin/text/StringsKt__StringsKt;.lineSequence:(Ljava/lang/CharSequence;)Lkotlin/sequences/Sequence;` @kind static;
  #L145b2e.  v10:= temp @kind object;
  #L145b30.  v0:= new `kotlin.text.f$c`;
  #L145b34.  call `<init>`(v0, v11) @signature `Lkotlin/text/f$c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L145b3a.  call temp:= `map`(v10, v0) @signature `Lkotlin/sequences/SequencesKt;.map:(Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L145b40.  v1:= temp @kind object;
  #L145b42.  v2:= "\n" @kind object;
  #L145b46.  v3:= 0I;
  #L145b48.  v4:= 0I;
  #L145b4a.  v5:= 0I;
  #L145b4c.  v6:= 0I;
  #L145b4e.  v7:= 0I;
  #L145b50.  v8:= 62I;
  #L145b54.  v9:= 0I;
  #L145b56.  call temp:= `joinToString$default`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lkotlin/sequences/SequencesKt;.joinToString$default:(Lkotlin/sequences/Sequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L145b5c.  v10:= temp @kind object;
  #L145b5e.  return v10 @kind object;
}
procedure `java.lang.String` `prependIndent$default`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlin/text/f;.prependIndent$default:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L145aec.  v2:= v2 ^& 1;
  #L145af0.  if v2 == 0 then goto L145af8;
  #L145af4.  v1:= "    " @kind object;
  #L145af8.  call temp:= `prependIndent`(v0, v1) @signature `Lkotlin/text/f;.prependIndent:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L145afe.  v0:= temp @kind object;
  #L145b00.  return v0 @kind object;
}
procedure `java.lang.String` `replaceIndent`(`java.lang.String` v14 @kind object, `java.lang.String` v15 @kind object) @signature `Lkotlin/text/f;.replaceIndent:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L145b98.  v0:= "$this$replaceIndent" @kind object;
  #L145b9c.  call `checkNotNullParameter`(v14, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145ba2.  v0:= "newIndent" @kind object;
  #L145ba6.  call `checkNotNullParameter`(v15, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145bac.  call temp:= `lines`(v14) @signature `Lkotlin/text/StringsKt__StringsKt;.lines:(Ljava/lang/CharSequence;)Ljava/util/List;` @kind static;
  #L145bb2.  v0:= temp @kind object;
  #L145bb4.  v1:= new `java.util.ArrayList`;
  #L145bb8.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L145bbe.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L145bc4.  v2:= temp @kind object;
  #L145bc6.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L145bcc.  v3:= temp;
  #L145bce.  if v3 == 0 then goto L145bf8;
  #L145bd2.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L145bd8.  v3:= temp @kind object;
  #L145bda.  v4:= v3 @kind object;
  #L145bdc.  v4:= (`java.lang.String`) v4 @kind object;
  #L145be0.  call temp:= `isBlank`(v4) @signature `Lkotlin/text/StringsKt;.isBlank:(Ljava/lang/CharSequence;)Z` @kind static;
  #L145be6.  v4:= temp;
  #L145be8.  v4:= v4 ^~ 1;
  #L145bec.  if v4 == 0 then goto L145bc6;
  #L145bf0.  call temp:= `add`(v1, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L145bf6.  goto L145bc6;
  #L145bf8.  v2:= new `java.util.ArrayList`;
  #L145bfc.  v3:= 10I;
  #L145c00.  call temp:= `collectionSizeOrDefault`(v1, v3) @signature `Lkotlin/collections/CollectionsKt;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L145c06.  v3:= temp;
  #L145c08.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L145c0e.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L145c14.  v1:= temp @kind object;
  #L145c16.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L145c1c.  v3:= temp;
  #L145c1e.  if v3 == 0 then goto L145c46;
  #L145c22.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L145c28.  v3:= temp @kind object;
  #L145c2a.  v3:= (`java.lang.String`) v3 @kind object;
  #L145c2e.  call temp:= `b`(v3) @signature `Lkotlin/text/f;.b:(Ljava/lang/String;)I` @kind static;
  #L145c34.  v3:= temp;
  #L145c36.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L145c3c.  v3:= temp @kind object;
  #L145c3e.  call temp:= `add`(v2, v3) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L145c44.  goto L145c16;
  #L145c46.  call temp:= `minOrNull`(v2) @signature `Lkotlin/collections/CollectionsKt;.minOrNull:(Ljava/lang/Iterable;)Ljava/lang/Comparable;` @kind static;
  #L145c4c.  v1:= temp @kind object;
  #L145c4e.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L145c52.  v2:= 0I;
  #L145c54.  if v1 == 0 then goto L145c62;
  #L145c58.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L145c5e.  v1:= temp;
  #L145c60.  goto L145c64;
  #L145c62.  v1:= 0I;
  #L145c64.  call temp:= `length`(v14) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L145c6a.  v14:= temp;
  #L145c6c.  call temp:= `length`(v15) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L145c72.  v3:= temp;
  #L145c74.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L145c7a.  v4:= temp;
  #L145c7c.  v3:= v3 * v4 @kind int;
  #L145c80.  v14:= v14 + v3 @kind int;
  #L145c82.  call temp:= `a`(v15) @signature `Lkotlin/text/f;.a:(Ljava/lang/String;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L145c88.  v15:= temp @kind object;
  #L145c8a.  call temp:= `getLastIndex`(v0) @signature `Lkotlin/collections/CollectionsKt;.getLastIndex:(Ljava/util/List;)I` @kind static;
  #L145c90.  v3:= temp;
  #L145c92.  v4:= new `java.util.ArrayList`;
  #L145c96.  call `<init>`(v4) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L145c9c.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L145ca2.  v0:= temp @kind object;
  #L145ca4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L145caa.  v5:= temp;
  #L145cac.  if v5 == 0 then goto L145d10;
  #L145cb0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L145cb6.  v5:= temp @kind object;
  #L145cb8.  v6:= v2 + 1;
  #L145cbc.  if v2 >= 0 then goto L145cc6;
  #L145cc0.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L145cc6.  v5:= (`java.lang.String`) v5 @kind object;
  #L145cca.  if v2 == 0 then goto L145cd2;
  #L145cce.  if v2 != v3 then goto L145ce2;
  #L145cd2.  call temp:= `isBlank`(v5) @signature `Lkotlin/text/StringsKt;.isBlank:(Ljava/lang/CharSequence;)Z` @kind static;
  #L145cd8.  v2:= temp;
  #L145cda.  if v2 == 0 then goto L145ce2;
  #L145cde.  v2:= 0I;
  #L145ce0.  goto L145d02;
  #L145ce2.  call temp:= `drop`(v5, v1) @signature `Lkotlin/text/StringsKt;.drop:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L145ce8.  v2:= temp @kind object;
  #L145cea.  if v2 == 0 then goto L145d00;
  #L145cee.  call temp:= `invoke`(v15, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L145cf4.  v2:= temp @kind object;
  #L145cf6.  v2:= (`java.lang.String`) v2 @kind object;
  #L145cfa.  if v2 == 0 then goto L145d00;
  #L145cfe.  v5:= v2 @kind object;
  #L145d00.  v2:= v5 @kind object;
  #L145d02.  if v2 == 0 then goto L145d0c;
  #L145d06.  call temp:= `add`(v4, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L145d0c.  v2:= v6;
  #L145d0e.  goto L145ca4;
  #L145d10.  v5:= new `java.lang.StringBuilder`;
  #L145d14.  call `<init>`(v5, v14) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L145d1a.  v7:= 0I;
  #L145d1c.  v8:= 0I;
  #L145d1e.  v9:= 0I;
  #L145d20.  v10:= 0I;
  #L145d22.  v11:= 0I;
  #L145d24.  v12:= 124I;
  #L145d28.  v13:= 0I;
  #L145d2a.  v6:= "\n" @kind object;
  #L145d2e.  call temp:= `joinTo$default`(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13) @signature `Lkotlin/collections/CollectionsKt;.joinTo$default:(Ljava/lang/Iterable;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Appendable;` @kind static;
  #L145d34.  v14:= temp @kind object;
  #L145d36.  v14:= (`java.lang.StringBuilder`) v14 @kind object;
  #L145d3a.  call temp:= `toString`(v14) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L145d40.  v14:= temp @kind object;
  #L145d42.  v15:= "mapIndexedNotNull { inde…\"\\n\")\n        .toString()" @kind object;
  #L145d46.  call `checkNotNullExpressionValue`(v14, v15) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145d4c.  return v14 @kind object;
}
procedure `java.lang.String` `replaceIndent$default`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlin/text/f;.replaceIndent$default:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L145b70.  v2:= v2 ^& 1;
  #L145b74.  if v2 == 0 then goto L145b7c;
  #L145b78.  v1:= "" @kind object;
  #L145b7c.  call temp:= `replaceIndent`(v0, v1) @signature `Lkotlin/text/f;.replaceIndent:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L145b82.  v0:= temp @kind object;
  #L145b84.  return v0 @kind object;
}
procedure `java.lang.String` `replaceIndentByMargin`(`java.lang.String` v21 @kind object, `java.lang.String` v22 @kind object, `java.lang.String` v23 @kind object) @signature `Lkotlin/text/f;.replaceIndentByMargin:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L145d94.  v0:= "$this$replaceIndentByMargin" @kind object;
  #L145d98.  v1:= v21 @kind object;
  #L145d9c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145da2.  v0:= "newIndent" @kind object;
  #L145da6.  v2:= v22 @kind object;
  #L145daa.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145db0.  v0:= "marginPrefix" @kind object;
  #L145db4.  v7:= v23 @kind object;
  #L145db8.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145dbe.  call temp:= `isBlank`(v23) @signature `Lkotlin/text/StringsKt;.isBlank:(Ljava/lang/CharSequence;)Z` @kind static;
  #L145dc4.  v0:= temp;
  #L145dc6.  v0:= v0 ^~ 1;
  #L145dca.  if v0 == 0 then goto L145f5a;
  #L145dce.  call temp:= `lines`(v21) @signature `Lkotlin/text/StringsKt__StringsKt;.lines:(Ljava/lang/CharSequence;)Ljava/util/List;` @kind static;
  #L145dd4.  v0:= temp @kind object;
  #L145dd6.  call temp:= `length`(v21) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L145ddc.  v1:= temp;
  #L145dde.  call temp:= `length`(v22) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L145de4.  v3:= temp;
  #L145de6.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L145dec.  v4:= temp;
  #L145dee.  v3:= v3 * v4 @kind int;
  #L145df2.  v8:= v1 + v3 @kind int;
  #L145df6.  call temp:= `a`(v22) @signature `Lkotlin/text/f;.a:(Ljava/lang/String;)Lkotlin/jvm/functions/Function1;` @kind static;
  #L145dfc.  v9:= temp @kind object;
  #L145dfe.  call temp:= `getLastIndex`(v0) @signature `Lkotlin/collections/CollectionsKt;.getLastIndex:(Ljava/util/List;)I` @kind static;
  #L145e04.  v10:= temp;
  #L145e06.  v11:= new `java.util.ArrayList`;
  #L145e0a.  call `<init>`(v11) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L145e10.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L145e16.  v0:= temp @kind object;
  #L145e18.  v12:= 0I;
  #L145e1a.  v1:= 0I;
  #L145e1c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L145e22.  v2:= temp;
  #L145e24.  if v2 == 0 then goto L145f14;
  #L145e28.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L145e2e.  v2:= temp @kind object;
  #L145e30.  v13:= v1 + 1;
  #L145e34.  if v1 >= 0 then goto L145e3e;
  #L145e38.  call `throwIndexOverflow`() @signature `Lkotlin/collections/CollectionsKt;.throwIndexOverflow:()V` @kind static;
  #L145e3e.  v14:= v2 @kind object;
  #L145e40.  v14:= (`java.lang.String`) v14 @kind object;
  #L145e44.  v15:= 0I;
  #L145e46.  if v1 == 0 then goto L145e4e;
  #L145e4a.  if v1 != v10 then goto L145e5c;
  #L145e4e.  call temp:= `isBlank`(v14) @signature `Lkotlin/text/StringsKt;.isBlank:(Ljava/lang/CharSequence;)Z` @kind static;
  #L145e54.  v1:= temp;
  #L145e56.  if v1 == 0 then goto L145e5c;
  #L145e5a.  goto L145f06;
  #L145e5c.  call temp:= `length`(v14) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L145e62.  v1:= temp;
  #L145e64.  v2:= 0I;
  #L145e66.  v3:= -1I;
  #L145e68.  if v2 >= v1 then goto L145e8e;
  #L145e6c.  call temp:= `charAt`(v14, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L145e72.  v4:= temp;
  #L145e74.  call temp:= `isWhitespace`(v4) @signature `Lkotlin/text/a;.isWhitespace:(C)Z` @kind static;
  #L145e7a.  v4:= temp;
  #L145e7c.  v4:= v4 ^~ 1;
  #L145e80.  if v4 == 0 then goto L145e88;
  #L145e84.  v6:= v2;
  #L145e86.  goto L145e90;
  #L145e88.  v2:= v2 + 1;
  #L145e8c.  goto L145e66;
  #L145e8e.  v6:= -1I;
  #L145e90.  if v6 != v3 then goto L145e96;
  #L145e94.  goto L145eee;
  #L145e96.  v4:= 0I;
  #L145e98.  v5:= 4I;
  #L145e9a.  v16:= 0I;
  #L145e9e.  v1:= v14 @kind object;
  #L145ea0.  v2:= v23 @kind object;
  #L145ea4.  v3:= v6;
  #L145ea6.  v17:= v6;
  #L145eaa.  v6:= v16 @kind object;
  #L145eae.  call temp:= `startsWith$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/StringsKt;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;IZILjava/lang/Object;)Z` @kind static;
  #L145eb4.  v1:= temp;
  #L145eb6.  if v1 == 0 then goto L145eee;
  #L145eba.  call temp:= `length`(v23) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L145ec0.  v1:= temp;
  #L145ec2.  v6:= v17 + v1 @kind int;
  #L145ec6.  if v14 == 0 then goto L145ede;
  #L145eca.  call temp:= `substring`(v14, v6) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L145ed0.  v15:= temp @kind object;
  #L145ed2.  v1:= "(this as java.lang.String).substring(startIndex)" @kind object;
  #L145ed6.  call `checkNotNullExpressionValue`(v15, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145edc.  goto L145eee;
  #L145ede.  v0:= new `java.lang.NullPointerException`;
  #L145ee2.  v1:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L145ee6.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L145eec.  throw v0;
  #L145eee.  if v15 == 0 then goto L145f04;
  #L145ef2.  call temp:= `invoke`(v9, v15) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L145ef8.  v1:= temp @kind object;
  #L145efa.  v1:= (`java.lang.String`) v1 @kind object;
  #L145efe.  if v1 == 0 then goto L145f04;
  #L145f02.  v14:= v1 @kind object;
  #L145f04.  v15:= v14 @kind object;
  #L145f06.  if v15 == 0 then goto L145f10;
  #L145f0a.  call temp:= `add`(v11, v15) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L145f10.  v1:= v13;
  #L145f12.  goto L145e1c;
  #L145f14.  v12:= new `java.lang.StringBuilder`;
  #L145f18.  call `<init>`(v12, v8) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L145f1e.  v14:= 0I;
  #L145f20.  v15:= 0I;
  #L145f22.  v16:= 0I;
  #L145f26.  v17:= 0I;
  #L145f2a.  v18:= 0I;
  #L145f2e.  v19:= 124I;
  #L145f32.  v20:= 0I;
  #L145f36.  v13:= "\n" @kind object;
  #L145f3a.  call temp:= `joinTo$default`(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20) @signature `Lkotlin/collections/CollectionsKt;.joinTo$default:(Ljava/lang/Iterable;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Appendable;` @kind static;
  #L145f40.  v0:= temp @kind object;
  #L145f42.  v0:= (`java.lang.StringBuilder`) v0 @kind object;
  #L145f46.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L145f4c.  v0:= temp @kind object;
  #L145f4e.  v1:= "mapIndexedNotNull { inde…\"\\n\")\n        .toString()" @kind object;
  #L145f52.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145f58.  return v0 @kind object;
  #L145f5a.  v0:= new `java.lang.IllegalArgumentException`;
  #L145f5e.  v1:= "marginPrefix must be non-blank string." @kind object;
  #L145f62.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L145f68.  v1:= temp @kind object;
  #L145f6a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L145f70.  throw v0;
}
procedure `java.lang.String` `replaceIndentByMargin$default`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/f;.replaceIndentByMargin$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L145d60.  v4:= v3 ^& 1;
  #L145d64.  if v4 == 0 then goto L145d6c;
  #L145d68.  v1:= "" @kind object;
  #L145d6c.  v3:= v3 ^& 2;
  #L145d70.  if v3 == 0 then goto L145d78;
  #L145d74.  v2:= "|" @kind object;
  #L145d78.  call temp:= `replaceIndentByMargin`(v0, v1, v2) @signature `Lkotlin/text/f;.replaceIndentByMargin:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L145d7e.  v0:= temp @kind object;
  #L145d80.  return v0 @kind object;
}
procedure `java.lang.String` `trimIndent`(`java.lang.String` v1 @kind object) @signature `Lkotlin/text/f;.trimIndent:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L145f84.  v0:= "$this$trimIndent" @kind object;
  #L145f88.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145f8e.  v0:= "" @kind object;
  #L145f92.  call temp:= `replaceIndent`(v1, v0) @signature `Lkotlin/text/f;.replaceIndent:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L145f98.  v1:= temp @kind object;
  #L145f9a.  return v1 @kind object;
}
procedure `java.lang.String` `trimMargin`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/text/f;.trimMargin:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L145fd4.  v0:= "$this$trimMargin" @kind object;
  #L145fd8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145fde.  v0:= "marginPrefix" @kind object;
  #L145fe2.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145fe8.  v0:= "" @kind object;
  #L145fec.  call temp:= `replaceIndentByMargin`(v1, v0, v2) @signature `Lkotlin/text/f;.replaceIndentByMargin:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L145ff2.  v1:= temp @kind object;
  #L145ff4.  return v1 @kind object;
}
procedure `java.lang.String` `trimMargin$default`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlin/text/f;.trimMargin$default:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L145fac.  v2:= v2 ^& 1;
  #L145fb0.  if v2 == 0 then goto L145fb8;
  #L145fb4.  v1:= "|" @kind object;
  #L145fb8.  call temp:= `trimMargin`(v0, v1) @signature `Lkotlin/text/f;.trimMargin:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L145fbe.  v0:= temp @kind object;
  #L145fc0.  return v0 @kind object;
}
