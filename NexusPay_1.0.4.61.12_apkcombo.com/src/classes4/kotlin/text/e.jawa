record `kotlin.text.e` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`kotlin.text.e` v0 @kind this) @signature `Lkotlin/text/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L14586c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L145872.  return @kind void;
}
procedure `java.lang.Appendable` `append`(`java.lang.Appendable` v3 @kind object, `java.lang.CharSequence`[] v4 @kind object) @signature `Lkotlin/text/e;.append:(Ljava/lang/Appendable;[Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1457e8.  v0:= "$this$append" @kind object;
  #L1457ec.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1457f2.  v0:= "value" @kind object;
  #L1457f6.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1457fc.  v0:= length @variable v4;
  #L1457fe.  v1:= 0I;
  #L145800.  if v1 >= v0 then goto L145814;
  #L145804.  v2:= v4[v1] @kind object;
  #L145808.  call temp:= `append`(v3, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L14580e.  v1:= v1 + 1;
  #L145812.  goto L145800;
  #L145814.  return v3 @kind object;
}
procedure `void` `appendElement`(`java.lang.Appendable` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/text/e;.appendElement:(Ljava/lang/Appendable;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L145884.  v0:= "$this$appendElement" @kind object;
  #L145888.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14588e.  if v3 == 0 then goto L1458a6;
  #L145892.  call temp:= `invoke`(v3, v2) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L145898.  v2:= temp @kind object;
  #L14589a.  v2:= (`java.lang.CharSequence`) v2 @kind object;
  #L14589e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L1458a4.  goto L1458ec;
  #L1458a6.  if v2 == 0 then goto L1458b0;
  #L1458aa.  v3:= instanceof @variable v2 @type ^`java.lang.CharSequence` @kind boolean;
  #L1458ae.  goto L1458b2;
  #L1458b0.  v3:= 1I;
  #L1458b2.  if v3 == 0 then goto L1458c2;
  #L1458b6.  v2:= (`java.lang.CharSequence`) v2 @kind object;
  #L1458ba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L1458c0.  goto L1458ec;
  #L1458c2.  v3:= instanceof @variable v2 @type ^`java.lang.Character` @kind boolean;
  #L1458c6.  if v3 == 0 then goto L1458de;
  #L1458ca.  v2:= (`java.lang.Character`) v2 @kind object;
  #L1458ce.  call temp:= `charValue`(v2) @signature `Ljava/lang/Character;.charValue:()C` @kind virtual;
  #L1458d4.  v2:= temp;
  #L1458d6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L1458dc.  goto L1458ec;
  #L1458de.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1458e4.  v2:= temp @kind object;
  #L1458e6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L1458ec.  return @kind void;
}
procedure `java.lang.Appendable` `appendRange`(`java.lang.Appendable` v1 @kind object, `java.lang.CharSequence` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lkotlin/text/e;.appendRange:(Ljava/lang/Appendable;Ljava/lang/CharSequence;II)Ljava/lang/Appendable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L145828.  v0:= "$this$appendRange" @kind object;
  #L14582c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145832.  v0:= "value" @kind object;
  #L145836.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14583c.  call temp:= `append`(v1, v2, v3, v4) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;` @kind interface;
  #L145842.  v1:= temp @kind object;
  #L145844.  if v1 == 0 then goto L14584a;
  #L145848.  return v1 @kind object;
  #L14584a.  v1:= new `java.lang.NullPointerException`;
  #L14584e.  v2:= "null cannot be cast to non-null type T" @kind object;
  #L145852.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L145858.  throw v1;
}
