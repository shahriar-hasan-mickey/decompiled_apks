record `kotlin.text.StringsKt___StringsKt$d` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
  `java.lang.CharSequence` `kotlin.text.StringsKt___StringsKt$d.a` @AccessFlag FINAL_SYNTHETIC;
  `int` `kotlin.text.StringsKt___StringsKt$d.b` @AccessFlag FINAL_SYNTHETIC;
  `kotlin.jvm.functions.Function1` `kotlin.text.StringsKt___StringsKt$d.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.text.StringsKt___StringsKt$d` v0 @kind this, `java.lang.CharSequence` v1 @kind object, `int` v2 , `kotlin.jvm.functions.Function1` v3 @kind object) @signature `Lkotlin/text/StringsKt___StringsKt$d;.<init>:(Ljava/lang/CharSequence;ILkotlin/jvm/functions/Function1;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L14aa38.  v0.`kotlin.text.StringsKt___StringsKt$d.a` @type ^`java.lang.CharSequence` := v1 @kind object;
  #L14aa3c.  v0.`kotlin.text.StringsKt___StringsKt$d.b` @type ^`int` := v2;
  #L14aa40.  v0.`kotlin.text.StringsKt___StringsKt$d.c` @type ^`kotlin.jvm.functions.Function1` := v3 @kind object;
  #L14aa44.  v1:= 1I;
  #L14aa46.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L14aa4c.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlin.text.StringsKt___StringsKt$d` v3 @kind this, `int` v4 ) @signature `Lkotlin/text/StringsKt___StringsKt$d;.a:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L14a9c0.  v0:= v3.`kotlin.text.StringsKt___StringsKt$d.b` @type ^`int`;
  #L14a9c4.  v0:= v0 + v4 @kind int;
  #L14a9c6.  if v0 < 0 then goto L14a9da;
  #L14a9ca.  v1:= v3.`kotlin.text.StringsKt___StringsKt$d.a` @type ^`java.lang.CharSequence` @kind object;
  #L14a9ce.  call temp:= `length`(v1) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L14a9d4.  v1:= temp;
  #L14a9d6.  if v0 <= v1 then goto L14a9e6;
  #L14a9da.  v0:= v3.`kotlin.text.StringsKt___StringsKt$d.a` @type ^`java.lang.CharSequence` @kind object;
  #L14a9de.  call temp:= `length`(v0) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L14a9e4.  v0:= temp;
  #L14a9e6.  v1:= v3.`kotlin.text.StringsKt___StringsKt$d.c` @type ^`kotlin.jvm.functions.Function1` @kind object;
  #L14a9ea.  v2:= v3.`kotlin.text.StringsKt___StringsKt$d.a` @type ^`java.lang.CharSequence` @kind object;
  #L14a9ee.  call temp:= `subSequence`(v2, v4, v0) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L14a9f4.  v4:= temp @kind object;
  #L14a9f6.  call temp:= `invoke`(v1, v4) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L14a9fc.  v4:= temp @kind object;
  #L14a9fe.  return v4 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.text.StringsKt___StringsKt$d` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/text/StringsKt___StringsKt$d;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L14aa10.  v1:= (`java.lang.Number`) v1 @kind object;
  #L14aa14.  call temp:= `intValue`(v1) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L14aa1a.  v1:= temp;
  #L14aa1c.  call temp:= `a`(v0, v1) @signature `Lkotlin/text/StringsKt___StringsKt$d;.a:(I)Ljava/lang/Object;` @kind virtual;
  #L14aa22.  v1:= temp @kind object;
  #L14aa24.  return v1 @kind object;
}
