record `kotlin.text.Regex` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Serializable` @kind interface {
  `java.util.Set` `kotlin.text.Regex.a` @AccessFlag PRIVATE;
  `java.util.regex.Pattern` `kotlin.text.Regex.b` @AccessFlag PRIVATE_FINAL;
}
global `kotlin.text.Regex$Companion` `@@kotlin.text.Regex.Companion` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/text/Regex;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L145560.  v0:= new `kotlin.text.Regex$Companion`;
  #L145564.  v1:= 0I;
  #L145566.  call `<init>`(v0, v1) @signature `Lkotlin/text/Regex$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @kind direct;
  #L14556c.  `@@kotlin.text.Regex.Companion` @type ^`kotlin.text.Regex$Companion` := v0 @kind object;
  #L145570.  return @kind void;
}
procedure `void` `<init>`(`kotlin.text.Regex` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lkotlin/text/Regex;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L145584.  v0:= "pattern" @kind object;
  #L145588.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14558e.  call temp:= `compile`(v2) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L145594.  v2:= temp @kind object;
  #L145596.  v0:= "Pattern.compile(pattern)" @kind object;
  #L14559a.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1455a0.  call `<init>`(v1, v2) @signature `Lkotlin/text/Regex;.<init>:(Ljava/util/regex/Pattern;)V` @kind direct;
  #L1455a6.  return @kind void;
}
procedure `void` `<init>`(`kotlin.text.Regex` v1 @kind this, `java.lang.String` v2 @kind object, `java.util.Set` v3 @kind object) @signature `Lkotlin/text/Regex;.<init>:(Ljava/lang/String;Ljava/util/Set;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1455b8.  v0:= "pattern" @kind object;
  #L1455bc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1455c2.  v0:= "options" @kind object;
  #L1455c6.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1455cc.  v0:= `@@kotlin.text.Regex.Companion` @type ^`kotlin.text.Regex$Companion` @kind object;
  #L1455d0.  call temp:= `access$toInt`(v3) @signature `Lkotlin/text/RegexKt;.access$toInt:(Ljava/lang/Iterable;)I` @kind static;
  #L1455d6.  v3:= temp;
  #L1455d8.  call temp:= `access$ensureUnicodeCase`(v0, v3) @signature `Lkotlin/text/Regex$Companion;.access$ensureUnicodeCase:(Lkotlin/text/Regex$Companion;I)I` @kind static;
  #L1455de.  v3:= temp;
  #L1455e0.  call temp:= `compile`(v2, v3) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;` @kind static;
  #L1455e6.  v2:= temp @kind object;
  #L1455e8.  v3:= "Pattern.compile(pattern,…odeCase(options.toInt()))" @kind object;
  #L1455ec.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1455f2.  call `<init>`(v1, v2) @signature `Lkotlin/text/Regex;.<init>:(Ljava/util/regex/Pattern;)V` @kind direct;
  #L1455f8.  return @kind void;
}
procedure `void` `<init>`(`kotlin.text.Regex` v1 @kind this, `java.lang.String` v2 @kind object, `kotlin.text.RegexOption` v3 @kind object) @signature `Lkotlin/text/Regex;.<init>:(Ljava/lang/String;Lkotlin/text/RegexOption;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L14560c.  v0:= "pattern" @kind object;
  #L145610.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145616.  v0:= "option" @kind object;
  #L14561a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145620.  v0:= `@@kotlin.text.Regex.Companion` @type ^`kotlin.text.Regex$Companion` @kind object;
  #L145624.  call temp:= `getValue`(v3) @signature `Lkotlin/text/RegexOption;.getValue:()I` @kind virtual;
  #L14562a.  v3:= temp;
  #L14562c.  call temp:= `access$ensureUnicodeCase`(v0, v3) @signature `Lkotlin/text/Regex$Companion;.access$ensureUnicodeCase:(Lkotlin/text/Regex$Companion;I)I` @kind static;
  #L145632.  v3:= temp;
  #L145634.  call temp:= `compile`(v2, v3) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;` @kind static;
  #L14563a.  v2:= temp @kind object;
  #L14563c.  v3:= "Pattern.compile(pattern,…nicodeCase(option.value))" @kind object;
  #L145640.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145646.  call `<init>`(v1, v2) @signature `Lkotlin/text/Regex;.<init>:(Ljava/util/regex/Pattern;)V` @kind direct;
  #L14564c.  return @kind void;
}
procedure `void` `<init>`(`kotlin.text.Regex` v1 @kind this, `java.util.regex.Pattern` v2 @kind object) @signature `Lkotlin/text/Regex;.<init>:(Ljava/util/regex/Pattern;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L145660.  v0:= "nativePattern" @kind object;
  #L145664.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14566a.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L145670.  v1.`kotlin.text.Regex.b` @type ^`java.util.regex.Pattern` := v2 @kind object;
  #L145674.  return @kind void;
}
procedure `java.util.regex.Pattern` `access$getNativePattern$p`(`kotlin.text.Regex` v0 @kind object) @signature `Lkotlin/text/Regex;.access$getNativePattern$p:(Lkotlin/text/Regex;)Ljava/util/regex/Pattern;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L14531c.  v0:= v0.`kotlin.text.Regex.b` @type ^`java.util.regex.Pattern` @kind object;
  #L145320.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult` `find$default`(`kotlin.text.Regex` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/Regex;.find$default:(Lkotlin/text/Regex;Ljava/lang/CharSequence;IILjava/lang/Object;)Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L145454.  v3:= v3 ^& 2;
  #L145458.  if v3 == 0 then goto L14545e;
  #L14545c.  v2:= 0I;
  #L14545e.  call temp:= `find`(v0, v1, v2) @signature `Lkotlin/text/Regex;.find:(Ljava/lang/CharSequence;I)Lkotlin/text/MatchResult;` @kind virtual;
  #L145464.  v0:= temp @kind object;
  #L145466.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `findAll$default`(`kotlin.text.Regex` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/Regex;.findAll$default:(Lkotlin/text/Regex;Ljava/lang/CharSequence;IILjava/lang/Object;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L14534c.  v3:= v3 ^& 2;
  #L145350.  if v3 == 0 then goto L145356;
  #L145354.  v2:= 0I;
  #L145356.  call temp:= `findAll`(v0, v1, v2) @signature `Lkotlin/text/Regex;.findAll:(Ljava/lang/CharSequence;I)Lkotlin/sequences/Sequence;` @kind virtual;
  #L14535c.  v0:= temp @kind object;
  #L14535e.  return v0 @kind object;
}
procedure `java.util.List` `split$default`(`kotlin.text.Regex` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/Regex;.split$default:(Lkotlin/text/Regex;Ljava/lang/CharSequence;IILjava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1451c8.  v3:= v3 ^& 2;
  #L1451cc.  if v3 == 0 then goto L1451d2;
  #L1451d0.  v2:= 0I;
  #L1451d2.  call temp:= `split`(v0, v1, v2) @signature `Lkotlin/text/Regex;.split:(Ljava/lang/CharSequence;I)Ljava/util/List;` @kind virtual;
  #L1451d8.  v0:= temp @kind object;
  #L1451da.  return v0 @kind object;
}
procedure `kotlin.sequences.Sequence` `splitToSequence$default`(`kotlin.text.Regex` v0 @kind object, `java.lang.CharSequence` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlin/text/Regex;.splitToSequence$default:(Lkotlin/text/Regex;Ljava/lang/CharSequence;IILjava/lang/Object;)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1453f8.  v3:= v3 ^& 2;
  #L1453fc.  if v3 == 0 then goto L145402;
  #L145400.  v2:= 0I;
  #L145402.  call temp:= `splitToSequence`(v0, v1, v2) @signature `Lkotlin/text/Regex;.splitToSequence:(Ljava/lang/CharSequence;I)Lkotlin/sequences/Sequence;` @kind virtual;
  #L145408.  v0:= temp @kind object;
  #L14540a.  return v0 @kind object;
}
procedure `java.lang.Object` `writeReplace`(`kotlin.text.Regex` v3 @kind this) @signature `Lkotlin/text/Regex;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L144fdc.  v0:= new `kotlin.text.Regex$Serialized`;
  #L144fe0.  v1:= v3.`kotlin.text.Regex.b` @type ^`java.util.regex.Pattern` @kind object;
  #L144fe4.  call temp:= `pattern`(v1) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L144fea.  v1:= temp @kind object;
  #L144fec.  v2:= "nativePattern.pattern()" @kind object;
  #L144ff0.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L144ff6.  v2:= v3.`kotlin.text.Regex.b` @type ^`java.util.regex.Pattern` @kind object;
  #L144ffa.  call temp:= `flags`(v2) @signature `Ljava/util/regex/Pattern;.flags:()I` @kind virtual;
  #L145000.  v2:= temp;
  #L145002.  call `<init>`(v0, v1, v2) @signature `Lkotlin/text/Regex$Serialized;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L145008.  return v0 @kind object;
}
procedure `boolean` `containsMatchIn`(`kotlin.text.Regex` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lkotlin/text/Regex;.containsMatchIn:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L144f28.  v0:= "input" @kind object;
  #L144f2c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L144f32.  v0:= v1.`kotlin.text.Regex.b` @type ^`java.util.regex.Pattern` @kind object;
  #L144f36.  call temp:= `matcher`(v0, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L144f3c.  v2:= temp @kind object;
  #L144f3e.  call temp:= `find`(v2) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L144f44.  v2:= temp;
  #L144f46.  return v2;
}
procedure `kotlin.text.MatchResult` `find`(`kotlin.text.Regex` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Lkotlin/text/Regex;.find:(Ljava/lang/CharSequence;I)Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L145478.  v0:= "input" @kind object;
  #L14547c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145482.  v0:= v2.`kotlin.text.Regex.b` @type ^`java.util.regex.Pattern` @kind object;
  #L145486.  call temp:= `matcher`(v0, v3) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L14548c.  v0:= temp @kind object;
  #L14548e.  v1:= "nativePattern.matcher(input)" @kind object;
  #L145492.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145498.  call temp:= `access$findNext`(v0, v4, v3) @signature `Lkotlin/text/RegexKt;.access$findNext:(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Lkotlin/text/MatchResult;` @kind static;
  #L14549e.  v3:= temp @kind object;
  #L1454a0.  return v3 @kind object;
}
procedure `kotlin.sequences.Sequence` `findAll`(`kotlin.text.Regex` v3 @kind this, `java.lang.CharSequence` v4 @kind object, `int` v5 ) @signature `Lkotlin/text/Regex;.findAll:(Ljava/lang/CharSequence;I)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L145370.  v0:= "input" @kind object;
  #L145374.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14537a.  if v5 < 0 then goto L1453a2;
  #L14537e.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L145384.  v0:= temp;
  #L145386.  if v5 > v0 then goto L1453a2;
  #L14538a.  v0:= new `kotlin.text.Regex$a`;
  #L14538e.  call `<init>`(v0, v3, v4, v5) @signature `Lkotlin/text/Regex$a;.<init>:(Lkotlin/text/Regex;Ljava/lang/CharSequence;I)V` @kind direct;
  #L145394.  v4:= `@@kotlin.text.Regex$b.h` @type ^`kotlin.text.Regex$b` @kind object;
  #L145398.  call temp:= `generateSequence`(v0, v4) @signature `Lkotlin/sequences/SequencesKt;.generateSequence:(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lkotlin/sequences/Sequence;` @kind static;
  #L14539e.  v4:= temp @kind object;
  #L1453a0.  return v4 @kind object;
  #L1453a2.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L1453a6.  v1:= new `java.lang.StringBuilder`;
  #L1453aa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1453b0.  v2:= "Start index out of bounds: " @kind object;
  #L1453b4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1453ba.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1453c0.  v5:= ", input length: " @kind object;
  #L1453c4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1453ca.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1453d0.  v4:= temp;
  #L1453d2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1453d8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1453de.  v4:= temp @kind object;
  #L1453e0.  call `<init>`(v0, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1453e6.  throw v0;
}
procedure `java.util.Set` `getOptions`(`kotlin.text.Regex` v3 @kind this) @signature `Lkotlin/text/Regex;.getOptions:()Ljava/util/Set;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1452c0.  v0:= v3.`kotlin.text.Regex.a` @type ^`java.util.Set` @kind object;
  #L1452c4.  if v0 == 0 then goto L1452ca;
  #L1452c8.  goto L145308;
  #L1452ca.  v0:= v3.`kotlin.text.Regex.b` @type ^`java.util.regex.Pattern` @kind object;
  #L1452ce.  call temp:= `flags`(v0) @signature `Ljava/util/regex/Pattern;.flags:()I` @kind virtual;
  #L1452d4.  v0:= temp;
  #L1452d6.  v1:= constclass @type ^`kotlin.text.RegexOption` @kind object;
  #L1452da.  call temp:= `allOf`(v1) @signature `Ljava/util/EnumSet;.allOf:(Ljava/lang/Class;)Ljava/util/EnumSet;` @kind static;
  #L1452e0.  v1:= temp @kind object;
  #L1452e2.  v2:= new `kotlin.text.Regex$fromInt$$inlined$apply$lambda$1`;
  #L1452e6.  call `<init>`(v2, v0) @signature `Lkotlin/text/Regex$fromInt$$inlined$apply$lambda$1;.<init>:(I)V` @kind direct;
  #L1452ec.  call temp:= `retainAll`(v1, v2) @signature `Lkotlin/collections/CollectionsKt;.retainAll:(Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;)Z` @kind static;
  #L1452f2.  call temp:= `unmodifiableSet`(v1) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L1452f8.  v0:= temp @kind object;
  #L1452fa.  v1:= "Collections.unmodifiable…mask == it.value }\n    })" @kind object;
  #L1452fe.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145304.  v3.`kotlin.text.Regex.a` @type ^`java.util.Set` := v0 @kind object;
  #L145308.  return v0 @kind object;
}
procedure `java.lang.String` `getPattern`(`kotlin.text.Regex` v2 @kind this) @signature `Lkotlin/text/Regex;.getPattern:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L14501c.  v0:= v2.`kotlin.text.Regex.b` @type ^`java.util.regex.Pattern` @kind object;
  #L145020.  call temp:= `pattern`(v0) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L145026.  v0:= temp @kind object;
  #L145028.  v1:= "nativePattern.pattern()" @kind object;
  #L14502c.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145032.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult` `matchAt`(`kotlin.text.Regex` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Lkotlin/text/Regex;.matchAt:(Ljava/lang/CharSequence;I)Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1454b4.  v0:= "input" @kind object;
  #L1454b8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1454be.  v0:= v2.`kotlin.text.Regex.b` @type ^`java.util.regex.Pattern` @kind object;
  #L1454c2.  call temp:= `matcher`(v0, v3) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L1454c8.  v0:= temp @kind object;
  #L1454ca.  v1:= 0I;
  #L1454cc.  call temp:= `useAnchoringBounds`(v0, v1) @signature `Ljava/util/regex/Matcher;.useAnchoringBounds:(Z)Ljava/util/regex/Matcher;` @kind virtual;
  #L1454d2.  v0:= temp @kind object;
  #L1454d4.  v1:= 1I;
  #L1454d6.  call temp:= `useTransparentBounds`(v0, v1) @signature `Ljava/util/regex/Matcher;.useTransparentBounds:(Z)Ljava/util/regex/Matcher;` @kind virtual;
  #L1454dc.  v0:= temp @kind object;
  #L1454de.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1454e4.  v1:= temp;
  #L1454e6.  call temp:= `region`(v0, v4, v1) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L1454ec.  v4:= temp @kind object;
  #L1454ee.  call temp:= `lookingAt`(v4) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L1454f4.  v0:= temp;
  #L1454f6.  if v0 == 0 then goto L145510;
  #L1454fa.  v0:= new `kotlin.text.MatcherMatchResult`;
  #L1454fe.  v1:= "this" @kind object;
  #L145502.  call `checkNotNullExpressionValue`(v4, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145508.  call `<init>`(v0, v4, v3) @signature `Lkotlin/text/MatcherMatchResult;.<init>:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)V` @kind direct;
  #L14550e.  goto L145512;
  #L145510.  v0:= 0I;
  #L145512.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult` `matchEntire`(`kotlin.text.Regex` v2 @kind this, `java.lang.CharSequence` v3 @kind object) @signature `Lkotlin/text/Regex;.matchEntire:(Ljava/lang/CharSequence;)Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L145524.  v0:= "input" @kind object;
  #L145528.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14552e.  v0:= v2.`kotlin.text.Regex.b` @type ^`java.util.regex.Pattern` @kind object;
  #L145532.  call temp:= `matcher`(v0, v3) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L145538.  v0:= temp @kind object;
  #L14553a.  v1:= "nativePattern.matcher(input)" @kind object;
  #L14553e.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145544.  call temp:= `access$matchEntire`(v0, v3) @signature `Lkotlin/text/RegexKt;.access$matchEntire:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)Lkotlin/text/MatchResult;` @kind static;
  #L14554a.  v3:= temp @kind object;
  #L14554c.  return v3 @kind object;
}
procedure `boolean` `matches`(`kotlin.text.Regex` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lkotlin/text/Regex;.matches:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L144f58.  v0:= "input" @kind object;
  #L144f5c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L144f62.  v0:= v1.`kotlin.text.Regex.b` @type ^`java.util.regex.Pattern` @kind object;
  #L144f66.  call temp:= `matcher`(v0, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L144f6c.  v2:= temp @kind object;
  #L144f6e.  call temp:= `matches`(v2) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L144f74.  v2:= temp;
  #L144f76.  return v2;
}
procedure `boolean` `matchesAt`(`kotlin.text.Regex` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Lkotlin/text/Regex;.matchesAt:(Ljava/lang/CharSequence;I)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L144f88.  v0:= "input" @kind object;
  #L144f8c.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L144f92.  v0:= v2.`kotlin.text.Regex.b` @type ^`java.util.regex.Pattern` @kind object;
  #L144f96.  call temp:= `matcher`(v0, v3) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L144f9c.  v0:= temp @kind object;
  #L144f9e.  v1:= 0I;
  #L144fa0.  call temp:= `useAnchoringBounds`(v0, v1) @signature `Ljava/util/regex/Matcher;.useAnchoringBounds:(Z)Ljava/util/regex/Matcher;` @kind virtual;
  #L144fa6.  v0:= temp @kind object;
  #L144fa8.  v1:= 1I;
  #L144faa.  call temp:= `useTransparentBounds`(v0, v1) @signature `Ljava/util/regex/Matcher;.useTransparentBounds:(Z)Ljava/util/regex/Matcher;` @kind virtual;
  #L144fb0.  v0:= temp @kind object;
  #L144fb2.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L144fb8.  v3:= temp;
  #L144fba.  call temp:= `region`(v0, v4, v3) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L144fc0.  v3:= temp @kind object;
  #L144fc2.  call temp:= `lookingAt`(v3) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L144fc8.  v3:= temp;
  #L144fca.  return v3;
}
procedure `java.lang.String` `replace`(`kotlin.text.Regex` v1 @kind this, `java.lang.CharSequence` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lkotlin/text/Regex;.replace:(Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L145044.  v0:= "input" @kind object;
  #L145048.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14504e.  v0:= "replacement" @kind object;
  #L145052.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145058.  v0:= v1.`kotlin.text.Regex.b` @type ^`java.util.regex.Pattern` @kind object;
  #L14505c.  call temp:= `matcher`(v0, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L145062.  v2:= temp @kind object;
  #L145064.  call temp:= `replaceAll`(v2, v3) @signature `Ljava/util/regex/Matcher;.replaceAll:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L14506a.  v2:= temp @kind object;
  #L14506c.  v3:= "nativePattern.matcher(in…).replaceAll(replacement)" @kind object;
  #L145070.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145076.  return v2 @kind object;
}
procedure `java.lang.String` `replace`(`kotlin.text.Regex` v5 @kind this, `java.lang.CharSequence` v6 @kind object, `kotlin.jvm.functions.Function1` v7 @kind object) @signature `Lkotlin/text/Regex;.replace:(Ljava/lang/CharSequence;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L145088.  v0:= "input" @kind object;
  #L14508c.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145092.  v0:= "transform" @kind object;
  #L145096.  call `checkNotNullParameter`(v7, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14509c.  v0:= 0I;
  #L14509e.  v1:= 2I;
  #L1450a0.  v2:= 0I;
  #L1450a2.  call temp:= `find$default`(v5, v6, v0, v1, v2) @signature `Lkotlin/text/Regex;.find$default:(Lkotlin/text/Regex;Ljava/lang/CharSequence;IILjava/lang/Object;)Lkotlin/text/MatchResult;` @kind static;
  #L1450a8.  v1:= temp @kind object;
  #L1450aa.  if v1 == 0 then goto L145140;
  #L1450ae.  call temp:= `length`(v6) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1450b4.  v2:= temp;
  #L1450b6.  v3:= new `java.lang.StringBuilder`;
  #L1450ba.  call `<init>`(v3, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L1450c0.  call `checkNotNull`(v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1450c6.  call temp:= `getRange`(v1) @signature `Lkotlin/text/MatchResult;.getRange:()Lkotlin/ranges/IntRange;` @kind interface;
  #L1450cc.  v4:= temp @kind object;
  #L1450ce.  call temp:= `getStart`(v4) @signature `Lkotlin/ranges/IntRange;.getStart:()Ljava/lang/Integer;` @kind virtual;
  #L1450d4.  v4:= temp @kind object;
  #L1450d6.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1450dc.  v4:= temp;
  #L1450de.  call temp:= `append`(v3, v6, v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L1450e4.  call temp:= `invoke`(v7, v1) @signature `Lkotlin/jvm/functions/Function1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1450ea.  v0:= temp @kind object;
  #L1450ec.  v0:= (`java.lang.CharSequence`) v0 @kind object;
  #L1450f0.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1450f6.  call temp:= `getRange`(v1) @signature `Lkotlin/text/MatchResult;.getRange:()Lkotlin/ranges/IntRange;` @kind interface;
  #L1450fc.  v0:= temp @kind object;
  #L1450fe.  call temp:= `getEndInclusive`(v0) @signature `Lkotlin/ranges/IntRange;.getEndInclusive:()Ljava/lang/Integer;` @kind virtual;
  #L145104.  v0:= temp @kind object;
  #L145106.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L14510c.  v0:= temp;
  #L14510e.  v0:= v0 + 1;
  #L145112.  call temp:= `next`(v1) @signature `Lkotlin/text/MatchResult;.next:()Lkotlin/text/MatchResult;` @kind interface;
  #L145118.  v1:= temp @kind object;
  #L14511a.  if v0 >= v2 then goto L145122;
  #L14511e.  if v1 != 0 then goto L1450c0;
  #L145122.  if v0 >= v2 then goto L14512c;
  #L145126.  call temp:= `append`(v3, v6, v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L14512c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L145132.  v6:= temp @kind object;
  #L145134.  v7:= "sb.toString()" @kind object;
  #L145138.  call `checkNotNullExpressionValue`(v6, v7) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14513e.  return v6 @kind object;
  #L145140.  call temp:= `toString`(v6) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L145146.  v6:= temp @kind object;
  #L145148.  return v6 @kind object;
}
procedure `java.lang.String` `replaceFirst`(`kotlin.text.Regex` v1 @kind this, `java.lang.CharSequence` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lkotlin/text/Regex;.replaceFirst:(Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L14515c.  v0:= "input" @kind object;
  #L145160.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145166.  v0:= "replacement" @kind object;
  #L14516a.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145170.  v0:= v1.`kotlin.text.Regex.b` @type ^`java.util.regex.Pattern` @kind object;
  #L145174.  call temp:= `matcher`(v0, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L14517a.  v2:= temp @kind object;
  #L14517c.  call temp:= `replaceFirst`(v2, v3) @signature `Ljava/util/regex/Matcher;.replaceFirst:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L145182.  v2:= temp @kind object;
  #L145184.  v3:= "nativePattern.matcher(in…replaceFirst(replacement)" @kind object;
  #L145188.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14518e.  return v2 @kind object;
}
procedure `java.util.List` `split`(`kotlin.text.Regex` v4 @kind this, `java.lang.CharSequence` v5 @kind object, `int` v6 ) @signature `Lkotlin/text/Regex;.split:(Ljava/lang/CharSequence;I)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1451ec.  v0:= "input" @kind object;
  #L1451f0.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1451f6.  call `requireNonNegativeLimit`(v6) @signature `Lkotlin/text/StringsKt__StringsKt;.requireNonNegativeLimit:(I)V` @kind static;
  #L1451fc.  v0:= v4.`kotlin.text.Regex.b` @type ^`java.util.regex.Pattern` @kind object;
  #L145200.  call temp:= `matcher`(v0, v5) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L145206.  v0:= temp @kind object;
  #L145208.  v1:= 1I;
  #L14520a.  if v6 == v1 then goto L14529e;
  #L14520e.  call temp:= `find`(v0) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L145214.  v2:= temp;
  #L145216.  if v2 != 0 then goto L14521c;
  #L14521a.  goto L14529e;
  #L14521c.  v2:= new `java.util.ArrayList`;
  #L145220.  v3:= 10I;
  #L145224.  if v6 <= 0 then goto L145230;
  #L145228.  call temp:= `coerceAtMost`(v6, v3) @signature `Lkotlin/ranges/RangesKt;.coerceAtMost:(II)I` @kind static;
  #L14522e.  v3:= temp;
  #L145230.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L145236.  v3:= 0I;
  #L145238.  v6:= v6 - v1 @kind int;
  #L14523a.  call temp:= `start`(v0) @signature `Ljava/util/regex/Matcher;.start:()I` @kind virtual;
  #L145240.  v1:= temp;
  #L145242.  call temp:= `subSequence`(v5, v3, v1) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L145248.  v1:= temp @kind object;
  #L14524a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L145250.  v1:= temp @kind object;
  #L145252.  call temp:= `add`(v2, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L145258.  call temp:= `end`(v0) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L14525e.  v3:= temp;
  #L145260.  if v6 < 0 then goto L145272;
  #L145264.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L14526a.  v1:= temp;
  #L14526c.  if v1 != v6 then goto L145272;
  #L145270.  goto L14527e;
  #L145272.  call temp:= `find`(v0) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L145278.  v1:= temp;
  #L14527a.  if v1 != 0 then goto L14523a;
  #L14527e.  call temp:= `length`(v5) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L145284.  v6:= temp;
  #L145286.  call temp:= `subSequence`(v5, v3, v6) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L14528c.  v5:= temp @kind object;
  #L14528e.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L145294.  v5:= temp @kind object;
  #L145296.  call temp:= `add`(v2, v5) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L14529c.  return v2 @kind object;
  #L14529e.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1452a4.  v5:= temp @kind object;
  #L1452a6.  call temp:= `listOf`(v5) @signature `Lkotlin/collections/CollectionsKt;.listOf:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1452ac.  v5:= temp @kind object;
  #L1452ae.  return v5 @kind object;
}
procedure `kotlin.sequences.Sequence` `splitToSequence`(`kotlin.text.Regex` v2 @kind this, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Lkotlin/text/Regex;.splitToSequence:(Ljava/lang/CharSequence;I)Lkotlin/sequences/Sequence;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L14541c.  v0:= "input" @kind object;
  #L145420.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L145426.  call `requireNonNegativeLimit`(v4) @signature `Lkotlin/text/StringsKt__StringsKt;.requireNonNegativeLimit:(I)V` @kind static;
  #L14542c.  v0:= new `kotlin.text.Regex$c`;
  #L145430.  v1:= 0I;
  #L145432.  call `<init>`(v0, v2, v3, v4, v1) @signature `Lkotlin/text/Regex$c;.<init>:(Lkotlin/text/Regex;Ljava/lang/CharSequence;ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L145438.  call temp:= `sequence`(v0) @signature `Lkotlin/sequences/SequencesKt;.sequence:(Lkotlin/jvm/functions/Function2;)Lkotlin/sequences/Sequence;` @kind static;
  #L14543e.  v3:= temp @kind object;
  #L145440.  return v3 @kind object;
}
procedure `java.util.regex.Pattern` `toPattern`(`kotlin.text.Regex` v1 @kind this) @signature `Lkotlin/text/Regex;.toPattern:()Ljava/util/regex/Pattern;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L145334.  v0:= v1.`kotlin.text.Regex.b` @type ^`java.util.regex.Pattern` @kind object;
  #L145338.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.text.Regex` v2 @kind this) @signature `Lkotlin/text/Regex;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1451a0.  v0:= v2.`kotlin.text.Regex.b` @type ^`java.util.regex.Pattern` @kind object;
  #L1451a4.  call temp:= `toString`(v0) @signature `Ljava/util/regex/Pattern;.toString:()Ljava/lang/String;` @kind virtual;
  #L1451aa.  v0:= temp @kind object;
  #L1451ac.  v1:= "nativePattern.toString()" @kind object;
  #L1451b0.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1451b6.  return v0 @kind object;
}
