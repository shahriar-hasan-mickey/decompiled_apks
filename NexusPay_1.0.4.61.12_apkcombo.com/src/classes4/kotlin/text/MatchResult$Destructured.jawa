record `kotlin.text.MatchResult$Destructured` @kind class @AccessFlag PUBLIC_FINAL {
  `kotlin.text.MatchResult` `kotlin.text.MatchResult$Destructured.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.text.MatchResult$Destructured` v1 @kind this, `kotlin.text.MatchResult` v2 @kind object) @signature `Lkotlin/text/MatchResult$Destructured;.<init>:(Lkotlin/text/MatchResult;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L144088.  v0:= "match" @kind object;
  #L14408c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L144092.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L144098.  v1.`kotlin.text.MatchResult$Destructured.a` @type ^`kotlin.text.MatchResult` := v2 @kind object;
  #L14409c.  return @kind void;
}
procedure `kotlin.text.MatchResult` `getMatch`(`kotlin.text.MatchResult$Destructured` v1 @kind this) @signature `Lkotlin/text/MatchResult$Destructured;.getMatch:()Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L144070.  v0:= v1.`kotlin.text.MatchResult$Destructured.a` @type ^`kotlin.text.MatchResult` @kind object;
  #L144074.  return v0 @kind object;
}
procedure `java.util.List` `toList`(`kotlin.text.MatchResult$Destructured` v3 @kind this) @signature `Lkotlin/text/MatchResult$Destructured;.toList:()Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L144034.  v0:= v3.`kotlin.text.MatchResult$Destructured.a` @type ^`kotlin.text.MatchResult` @kind object;
  #L144038.  call temp:= `getGroupValues`(v0) @signature `Lkotlin/text/MatchResult;.getGroupValues:()Ljava/util/List;` @kind interface;
  #L14403e.  v0:= temp @kind object;
  #L144040.  v1:= v3.`kotlin.text.MatchResult$Destructured.a` @type ^`kotlin.text.MatchResult` @kind object;
  #L144044.  call temp:= `getGroupValues`(v1) @signature `Lkotlin/text/MatchResult;.getGroupValues:()Ljava/util/List;` @kind interface;
  #L14404a.  v1:= temp @kind object;
  #L14404c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L144052.  v1:= temp;
  #L144054.  v2:= 1I;
  #L144056.  call temp:= `subList`(v0, v2, v1) @signature `Ljava/util/List;.subList:(II)Ljava/util/List;` @kind interface;
  #L14405c.  v0:= temp @kind object;
  #L14405e.  return v0 @kind object;
}
