record `kotlin.text.StringsKt__StringsKt$iterator$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.collections.CharIterator` @kind class {
  `int` `kotlin.text.StringsKt__StringsKt$iterator$1.a` @AccessFlag PRIVATE;
  `java.lang.CharSequence` `kotlin.text.StringsKt__StringsKt$iterator$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.text.StringsKt__StringsKt$iterator$1` v0 @kind this, `java.lang.CharSequence` v1 @kind object) @signature `Lkotlin/text/StringsKt__StringsKt$iterator$1;.<init>:(Ljava/lang/CharSequence;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L14762c.  v0.`kotlin.text.StringsKt__StringsKt$iterator$1.b` @type ^`java.lang.CharSequence` := v1 @kind object;
  #L147630.  call `<init>`(v0) @signature `Lkotlin/collections/CharIterator;.<init>:()V` @kind direct;
  #L147636.  return @kind void;
}
procedure `boolean` `hasNext`(`kotlin.text.StringsKt__StringsKt$iterator$1` v2 @kind this) @signature `Lkotlin/text/StringsKt__StringsKt$iterator$1;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1475d4.  v0:= v2.`kotlin.text.StringsKt__StringsKt$iterator$1.a` @type ^`int`;
  #L1475d8.  v1:= v2.`kotlin.text.StringsKt__StringsKt$iterator$1.b` @type ^`java.lang.CharSequence` @kind object;
  #L1475dc.  call temp:= `length`(v1) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1475e2.  v1:= temp;
  #L1475e4.  if v0 >= v1 then goto L1475ec;
  #L1475e8.  v0:= 1I;
  #L1475ea.  goto L1475ee;
  #L1475ec.  v0:= 0I;
  #L1475ee.  return v0;
}
procedure `char` `nextChar`(`kotlin.text.StringsKt__StringsKt$iterator$1` v3 @kind this) @signature `Lkotlin/text/StringsKt__StringsKt$iterator$1;.nextChar:()C` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L147600.  v0:= v3.`kotlin.text.StringsKt__StringsKt$iterator$1.b` @type ^`java.lang.CharSequence` @kind object;
  #L147604.  v1:= v3.`kotlin.text.StringsKt__StringsKt$iterator$1.a` @type ^`int`;
  #L147608.  v2:= v1 + 1;
  #L14760c.  v3.`kotlin.text.StringsKt__StringsKt$iterator$1.a` @type ^`int` := v2;
  #L147610.  call temp:= `charAt`(v0, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L147616.  v0:= temp;
  #L147618.  return v0;
}
