record `kotlin.text.l` @kind class @AccessFlag  extends `kotlin.text.k` @kind class {
}
procedure `void` `<init>`(`kotlin.text.l` v0 @kind this) @signature `Lkotlin/text/l;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L146760.  call `<init>`(v0) @signature `Lkotlin/text/k;.<init>:()V` @kind direct;
  #L146766.  return @kind void;
}
procedure `java.lang.Void` `numberFormatError`(`java.lang.String` v3 @kind object) @signature `Lkotlin/text/l;.numberFormatError:(Ljava/lang/String;)Ljava/lang/Void;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L14670c.  v0:= "input" @kind object;
  #L146710.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L146716.  v0:= new `java.lang.NumberFormatException`;
  #L14671a.  v1:= new `java.lang.StringBuilder`;
  #L14671e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L146724.  v2:= "Invalid number format: '" @kind object;
  #L146728.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L14672e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L146734.  v3:= 39I;
  #L146738.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L14673e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L146744.  v3:= temp @kind object;
  #L146746.  call `<init>`(v0, v3) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14674c.  throw v0;
}
procedure `java.lang.Byte` `toByteOrNull`(`java.lang.String` v1 @kind object) @signature `Lkotlin/text/l;.toByteOrNull:(Ljava/lang/String;)Ljava/lang/Byte;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1463d8.  v0:= "$this$toByteOrNull" @kind object;
  #L1463dc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1463e2.  v0:= 10I;
  #L1463e6.  call temp:= `toByteOrNull`(v1, v0) @signature `Lkotlin/text/l;.toByteOrNull:(Ljava/lang/String;I)Ljava/lang/Byte;` @kind static;
  #L1463ec.  v1:= temp @kind object;
  #L1463ee.  return v1 @kind object;
}
procedure `java.lang.Byte` `toByteOrNull`(`java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlin/text/l;.toByteOrNull:(Ljava/lang/String;I)Ljava/lang/Byte;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L146400.  v0:= "$this$toByteOrNull" @kind object;
  #L146404.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14640a.  call temp:= `toIntOrNull`(v1, v2) @signature `Lkotlin/text/l;.toIntOrNull:(Ljava/lang/String;I)Ljava/lang/Integer;` @kind static;
  #L146410.  v1:= temp @kind object;
  #L146412.  v2:= 0I;
  #L146414.  if v1 == 0 then goto L14643e;
  #L146418.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L14641e.  v1:= temp;
  #L146420.  v0:= -128I;
  #L146424.  if v1 < v0 then goto L14643e;
  #L146428.  v0:= 127I;
  #L14642c.  if v1 <= v0 then goto L146432;
  #L146430.  goto L14643e;
  #L146432.  v1:= (`byte`) v1 @kind i2b;
  #L146434.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L14643a.  v1:= temp @kind object;
  #L14643c.  return v1 @kind object;
  #L14643e.  return v2 @kind object;
}
procedure `java.lang.Integer` `toIntOrNull`(`java.lang.String` v1 @kind object) @signature `Lkotlin/text/l;.toIntOrNull:(Ljava/lang/String;)Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L146450.  v0:= "$this$toIntOrNull" @kind object;
  #L146454.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14645a.  v0:= 10I;
  #L14645e.  call temp:= `toIntOrNull`(v1, v0) @signature `Lkotlin/text/l;.toIntOrNull:(Ljava/lang/String;I)Ljava/lang/Integer;` @kind static;
  #L146464.  v1:= temp @kind object;
  #L146466.  return v1 @kind object;
}
procedure `java.lang.Integer` `toIntOrNull`(`java.lang.String` v10 @kind object, `int` v11 ) @signature `Lkotlin/text/l;.toIntOrNull:(Ljava/lang/String;I)Ljava/lang/Integer;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L146478.  v0:= "$this$toIntOrNull" @kind object;
  #L14647c.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L146482.  call temp:= `checkRadix`(v11) @signature `Lkotlin/text/CharsKt;.checkRadix:(I)I` @kind static;
  #L146488.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L14648e.  v0:= temp;
  #L146490.  v1:= 0I;
  #L146492.  if v0 != 0 then goto L146498;
  #L146496.  return v1 @kind object;
  #L146498.  v2:= 0I;
  #L14649a.  call temp:= `charAt`(v10, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1464a0.  v3:= temp;
  #L1464a2.  v4:= 48I;
  #L1464a6.  call temp:= `compare`(v3, v4) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L1464ac.  v4:= temp;
  #L1464ae.  v5:= -2147483647I;
  #L1464b4.  v6:= 1I;
  #L1464b6.  if v4 >= 0 then goto L1464de;
  #L1464ba.  if v0 != v6 then goto L1464c0;
  #L1464be.  return v1 @kind object;
  #L1464c0.  v4:= 45I;
  #L1464c4.  if v3 != v4 then goto L1464d0;
  #L1464c8.  v5:= -2147483648I;
  #L1464cc.  v3:= 1I;
  #L1464ce.  goto L1464e2;
  #L1464d0.  v4:= 43I;
  #L1464d4.  if v3 != v4 then goto L1464dc;
  #L1464d8.  v3:= 0I;
  #L1464da.  goto L1464e2;
  #L1464dc.  return v1 @kind object;
  #L1464de.  v3:= 0I;
  #L1464e0.  v6:= 0I;
  #L1464e2.  v4:= -59652323I;
  #L1464e8.  v7:= -59652323I;
  #L1464ee.  if v6 >= v0 then goto L146530;
  #L1464f2.  call temp:= `charAt`(v10, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1464f8.  v8:= temp;
  #L1464fa.  call temp:= `digitOf`(v8, v11) @signature `Lkotlin/text/a;.digitOf:(CI)I` @kind static;
  #L146500.  v8:= temp;
  #L146502.  if v8 >= 0 then goto L146508;
  #L146506.  return v1 @kind object;
  #L146508.  if v2 >= v7 then goto L14651a;
  #L14650c.  if v7 != v4 then goto L146518;
  #L146510.  v7:= v5 / v11 @kind int;
  #L146514.  if v2 >= v7 then goto L14651a;
  #L146518.  return v1 @kind object;
  #L14651a.  v2:= v2 * v11 @kind int;
  #L14651e.  v9:= v5 + v8 @kind int;
  #L146522.  if v2 >= v9 then goto L146528;
  #L146526.  return v1 @kind object;
  #L146528.  v2:= v2 - v8 @kind int;
  #L14652a.  v6:= v6 + 1;
  #L14652e.  goto L1464ee;
  #L146530.  if v3 == 0 then goto L14653e;
  #L146534.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L14653a.  v10:= temp @kind object;
  #L14653c.  goto L146548;
  #L14653e.  v10:= -v2 @kind int;
  #L146540.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L146546.  v10:= temp @kind object;
  #L146548.  return v10 @kind object;
}
procedure `java.lang.Long` `toLongOrNull`(`java.lang.String` v1 @kind object) @signature `Lkotlin/text/l;.toLongOrNull:(Ljava/lang/String;)Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L14655c.  v0:= "$this$toLongOrNull" @kind object;
  #L146560.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L146566.  v0:= 10I;
  #L14656a.  call temp:= `toLongOrNull`(v1, v0) @signature `Lkotlin/text/l;.toLongOrNull:(Ljava/lang/String;I)Ljava/lang/Long;` @kind static;
  #L146570.  v1:= temp @kind object;
  #L146572.  return v1 @kind object;
}
procedure `java.lang.Long` `toLongOrNull`(`java.lang.String` v18 @kind object, `int` v19 ) @signature `Lkotlin/text/l;.toLongOrNull:(Ljava/lang/String;I)Ljava/lang/Long;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L146584.  v0:= v18 @kind object;
  #L146588.  v1:= v19;
  #L14658c.  v2:= "$this$toLongOrNull" @kind object;
  #L146590.  call `checkNotNullParameter`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L146596.  call temp:= `checkRadix`(v19) @signature `Lkotlin/text/CharsKt;.checkRadix:(I)I` @kind static;
  #L14659c.  call temp:= `length`(v18) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1465a2.  v2:= temp;
  #L1465a4.  v3:= 0I;
  #L1465a6.  if v2 != 0 then goto L1465ac;
  #L1465aa.  return v3 @kind object;
  #L1465ac.  v4:= 0I;
  #L1465ae.  call temp:= `charAt`(v0, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1465b4.  v5:= temp;
  #L1465b6.  v6:= 48I;
  #L1465ba.  call temp:= `compare`(v5, v6) @signature `Lkotlin/jvm/internal/Intrinsics;.compare:(II)I` @kind static;
  #L1465c0.  v6:= temp;
  #L1465c2.  v7:= -4.9E-324D;
  #L1465cc.  v9:= 1I;
  #L1465ce.  if v6 >= 0 then goto L1465f6;
  #L1465d2.  if v2 != v9 then goto L1465d8;
  #L1465d6.  return v3 @kind object;
  #L1465d8.  v6:= 45I;
  #L1465dc.  if v5 != v6 then goto L1465e8;
  #L1465e0.  v7:= -9223372036854775808L;
  #L1465e4.  v4:= 1I;
  #L1465e6.  goto L1465f8;
  #L1465e8.  v6:= 43I;
  #L1465ec.  if v5 != v6 then goto L1465f4;
  #L1465f0.  v4:= 1I;
  #L1465f2.  goto L1465f6;
  #L1465f4.  return v3 @kind object;
  #L1465f6.  v9:= 0I;
  #L1465f8.  v5:= -2.772000429909333E291D;
  #L146602.  v10:= 0L;
  #L146606.  v12:= v5 @kind wide;
  #L146608.  if v4 >= v2 then goto L14666a;
  #L14660c.  call temp:= `charAt`(v0, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L146612.  v14:= temp;
  #L146614.  call temp:= `digitOf`(v14, v1) @signature `Lkotlin/text/a;.digitOf:(CI)I` @kind static;
  #L14661a.  v14:= temp;
  #L14661c.  if v14 >= 0 then goto L146622;
  #L146620.  return v3 @kind object;
  #L146622.  v15:= lcmp(v10, v12);
  #L146626.  if v15 >= 0 then goto L146642;
  #L14662a.  v15:= lcmp(v12, v5);
  #L14662e.  if v15 != 0 then goto L146640;
  #L146632.  v12:= (`long`) v1 @kind i2l;
  #L146634.  v12:= v7 / v12 @kind long;
  #L146638.  v15:= lcmp(v10, v12);
  #L14663c.  if v15 >= 0 then goto L146642;
  #L146640.  return v3 @kind object;
  #L146642.  v5:= (`long`) v1 @kind i2l;
  #L146644.  v10:= v10 * v5 @kind long;
  #L146648.  v5:= (`long`) v14 @kind i2l;
  #L14664a.  v16:= v7 + v5 @kind long;
  #L14664e.  v14:= lcmp(v10, v16);
  #L146652.  if v14 >= 0 then goto L146658;
  #L146656.  return v3 @kind object;
  #L146658.  v10:= v10 - v5 @kind long;
  #L14665a.  v4:= v4 + 1;
  #L14665e.  v5:= -2.772000429909333E291D;
  #L146668.  goto L146608;
  #L14666a.  if v9 == 0 then goto L146678;
  #L14666e.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L146674.  v0:= temp @kind object;
  #L146676.  goto L146682;
  #L146678.  v0:= -v10 @kind long;
  #L14667a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L146680.  v0:= temp @kind object;
  #L146682.  return v0 @kind object;
}
procedure `java.lang.Short` `toShortOrNull`(`java.lang.String` v1 @kind object) @signature `Lkotlin/text/l;.toShortOrNull:(Ljava/lang/String;)Ljava/lang/Short;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L146694.  v0:= "$this$toShortOrNull" @kind object;
  #L146698.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14669e.  v0:= 10I;
  #L1466a2.  call temp:= `toShortOrNull`(v1, v0) @signature `Lkotlin/text/l;.toShortOrNull:(Ljava/lang/String;I)Ljava/lang/Short;` @kind static;
  #L1466a8.  v1:= temp @kind object;
  #L1466aa.  return v1 @kind object;
}
procedure `java.lang.Short` `toShortOrNull`(`java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlin/text/l;.toShortOrNull:(Ljava/lang/String;I)Ljava/lang/Short;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1466bc.  v0:= "$this$toShortOrNull" @kind object;
  #L1466c0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1466c6.  call temp:= `toIntOrNull`(v1, v2) @signature `Lkotlin/text/l;.toIntOrNull:(Ljava/lang/String;I)Ljava/lang/Integer;` @kind static;
  #L1466cc.  v1:= temp @kind object;
  #L1466ce.  v2:= 0I;
  #L1466d0.  if v1 == 0 then goto L1466fa;
  #L1466d4.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1466da.  v1:= temp;
  #L1466dc.  v0:= -32768I;
  #L1466e0.  if v1 < v0 then goto L1466fa;
  #L1466e4.  v0:= 32767I;
  #L1466e8.  if v1 <= v0 then goto L1466ee;
  #L1466ec.  goto L1466fa;
  #L1466ee.  v1:= (`short`) v1 @kind i2s;
  #L1466f0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L1466f6.  v1:= temp @kind object;
  #L1466f8.  return v1 @kind object;
  #L1466fa.  return v2 @kind object;
}
