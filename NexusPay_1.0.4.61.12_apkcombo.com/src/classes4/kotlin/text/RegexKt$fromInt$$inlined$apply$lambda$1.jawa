record `kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.jvm.internal.Lambda` @kind class, `kotlin.jvm.functions.Function1` @kind interface {
  `int` `kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1` v0 @kind this, `int` v1 ) @signature `Lkotlin/text/RegexKt$fromInt$$inlined$apply$lambda$1;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L144b58.  v0.`kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1.a` @type ^`int` := v1;
  #L144b5c.  v1:= 1I;
  #L144b5e.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/Lambda;.<init>:(I)V` @kind direct;
  #L144b64.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/text/RegexKt$fromInt$$inlined$apply$lambda$1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L144b30.  v1:= (`java.lang.Enum`) v1 @kind object;
  #L144b34.  call temp:= `invoke`(v0, v1) @signature `Lkotlin/text/RegexKt$fromInt$$inlined$apply$lambda$1;.invoke:(Ljava/lang/Enum;)Z` @kind virtual;
  #L144b3a.  v1:= temp;
  #L144b3c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L144b42.  v1:= temp @kind object;
  #L144b44.  return v1 @kind object;
}
procedure `boolean` `invoke`(`kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1` v2 @kind this, `java.lang.Enum` v3 @kind object) @signature `Lkotlin/text/RegexKt$fromInt$$inlined$apply$lambda$1;.invoke:(Ljava/lang/Enum;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L144af8.  v0:= v2.`kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1.a` @type ^`int`;
  #L144afc.  v3:= (`kotlin.text.c`) v3 @kind object;
  #L144b00.  call temp:= `getMask`(v3) @signature `Lkotlin/text/c;.getMask:()I` @kind interface;
  #L144b06.  v1:= temp;
  #L144b08.  v0:= v0 ^& v1 @kind int;
  #L144b0a.  call temp:= `getValue`(v3) @signature `Lkotlin/text/c;.getValue:()I` @kind interface;
  #L144b10.  v3:= temp;
  #L144b12.  if v0 != v3 then goto L144b1a;
  #L144b16.  v3:= 1I;
  #L144b18.  goto L144b1c;
  #L144b1a.  v3:= 0I;
  #L144b1c.  return v3;
}
