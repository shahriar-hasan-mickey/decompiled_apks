record `kotlin.text.RegexKt` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlin.text.MatchResult` `a`(`java.util.regex.Matcher` v0 @kind object, `int` v1 , `java.lang.CharSequence` v2 @kind object) @signature `Lkotlin/text/RegexKt;.a:(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Lkotlin/text/MatchResult;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L144d04.  call temp:= `find`(v0, v1) @signature `Ljava/util/regex/Matcher;.find:(I)Z` @kind virtual;
  #L144d0a.  v1:= temp;
  #L144d0c.  if v1 != 0 then goto L144d14;
  #L144d10.  v0:= 0I;
  #L144d12.  goto L144d20;
  #L144d14.  v1:= new `kotlin.text.MatcherMatchResult`;
  #L144d18.  call `<init>`(v1, v0, v2) @signature `Lkotlin/text/MatcherMatchResult;.<init>:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)V` @kind direct;
  #L144d1e.  v0:= v1 @kind object;
  #L144d20.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult` `access$findNext`(`java.util.regex.Matcher` v0 @kind object, `int` v1 , `java.lang.CharSequence` v2 @kind object) @signature `Lkotlin/text/RegexKt;.access$findNext:(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L144ccc.  call temp:= `a`(v0, v1, v2) @signature `Lkotlin/text/RegexKt;.a:(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Lkotlin/text/MatchResult;` @kind static;
  #L144cd2.  v0:= temp @kind object;
  #L144cd4.  return v0 @kind object;
}
procedure `java.util.Set` `access$fromInt`(`int` v0 ) @signature `Lkotlin/text/RegexKt;.access$fromInt:(I)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L144bd4.  call temp:= `b`(v0) @signature `Lkotlin/text/RegexKt;.b:(I)Ljava/util/Set;` @kind static;
  #L144bda.  v0:= temp @kind object;
  #L144bdc.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult` `access$matchEntire`(`java.util.regex.Matcher` v0 @kind object, `java.lang.CharSequence` v1 @kind object) @signature `Lkotlin/text/RegexKt;.access$matchEntire:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)Lkotlin/text/MatchResult;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L144ce8.  call temp:= `c`(v0, v1) @signature `Lkotlin/text/RegexKt;.c:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)Lkotlin/text/MatchResult;` @kind static;
  #L144cee.  v0:= temp @kind object;
  #L144cf0.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `access$range`(`java.util.regex.MatchResult` v0 @kind object) @signature `Lkotlin/text/RegexKt;.access$range:(Ljava/util/regex/MatchResult;)Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L144c3c.  call temp:= `d`(v0) @signature `Lkotlin/text/RegexKt;.d:(Ljava/util/regex/MatchResult;)Lkotlin/ranges/IntRange;` @kind static;
  #L144c42.  v0:= temp @kind object;
  #L144c44.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `access$range`(`java.util.regex.MatchResult` v0 @kind object, `int` v1 ) @signature `Lkotlin/text/RegexKt;.access$range:(Ljava/util/regex/MatchResult;I)Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L144c58.  call temp:= `e`(v0, v1) @signature `Lkotlin/text/RegexKt;.e:(Ljava/util/regex/MatchResult;I)Lkotlin/ranges/IntRange;` @kind static;
  #L144c5e.  v0:= temp @kind object;
  #L144c60.  return v0 @kind object;
}
procedure `int` `access$toInt`(`java.lang.Iterable` v0 @kind object) @signature `Lkotlin/text/RegexKt;.access$toInt:(Ljava/lang/Iterable;)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L144b78.  call temp:= `f`(v0) @signature `Lkotlin/text/RegexKt;.f:(Ljava/lang/Iterable;)I` @kind static;
  #L144b7e.  v0:= temp;
  #L144b80.  return v0;
}
procedure `java.util.Set` `b`(`int` v2 ) @signature `Lkotlin/text/RegexKt;.b:(I)Ljava/util/Set;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;

  #L144bf0.  v0:= 4I;
  #L144bf2.  v1:= "T" @kind object;
  #L144bf6.  call `reifiedOperationMarker`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.reifiedOperationMarker:(ILjava/lang/String;)V` @kind static;
  #L144bfc.  v0:= constclass @type ^`java.lang.Enum` @kind object;
  #L144c00.  call temp:= `allOf`(v0) @signature `Ljava/util/EnumSet;.allOf:(Ljava/lang/Class;)Ljava/util/EnumSet;` @kind static;
  #L144c06.  v0:= temp @kind object;
  #L144c08.  v1:= new `kotlin.text.RegexKt$fromInt$$inlined$apply$lambda$1`;
  #L144c0c.  call `<init>`(v1, v2) @signature `Lkotlin/text/RegexKt$fromInt$$inlined$apply$lambda$1;.<init>:(I)V` @kind direct;
  #L144c12.  call temp:= `retainAll`(v0, v1) @signature `Lkotlin/collections/CollectionsKt;.retainAll:(Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;)Z` @kind static;
  #L144c18.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L144c1e.  v2:= temp @kind object;
  #L144c20.  v0:= "Collections.unmodifiableâ€¦mask == it.value }\n    })" @kind object;
  #L144c24.  call `checkNotNullExpressionValue`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L144c2a.  return v2 @kind object;
}
procedure `kotlin.text.MatchResult` `c`(`java.util.regex.Matcher` v1 @kind object, `java.lang.CharSequence` v2 @kind object) @signature `Lkotlin/text/RegexKt;.c:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)Lkotlin/text/MatchResult;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L144d34.  call temp:= `matches`(v1) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L144d3a.  v0:= temp;
  #L144d3c.  if v0 != 0 then goto L144d44;
  #L144d40.  v1:= 0I;
  #L144d42.  goto L144d50;
  #L144d44.  v0:= new `kotlin.text.MatcherMatchResult`;
  #L144d48.  call `<init>`(v0, v1, v2) @signature `Lkotlin/text/MatcherMatchResult;.<init>:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)V` @kind direct;
  #L144d4e.  v1:= v0 @kind object;
  #L144d50.  return v1 @kind object;
}
procedure `kotlin.ranges.IntRange` `d`(`java.util.regex.MatchResult` v1 @kind object) @signature `Lkotlin/text/RegexKt;.d:(Ljava/util/regex/MatchResult;)Lkotlin/ranges/IntRange;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L144c74.  call temp:= `start`(v1) @signature `Ljava/util/regex/MatchResult;.start:()I` @kind interface;
  #L144c7a.  v0:= temp;
  #L144c7c.  call temp:= `end`(v1) @signature `Ljava/util/regex/MatchResult;.end:()I` @kind interface;
  #L144c82.  v1:= temp;
  #L144c84.  call temp:= `until`(v0, v1) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L144c8a.  v1:= temp @kind object;
  #L144c8c.  return v1 @kind object;
}
procedure `kotlin.ranges.IntRange` `e`(`java.util.regex.MatchResult` v1 @kind object, `int` v2 ) @signature `Lkotlin/text/RegexKt;.e:(Ljava/util/regex/MatchResult;I)Lkotlin/ranges/IntRange;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L144ca0.  call temp:= `start`(v1, v2) @signature `Ljava/util/regex/MatchResult;.start:(I)I` @kind interface;
  #L144ca6.  v0:= temp;
  #L144ca8.  call temp:= `end`(v1, v2) @signature `Ljava/util/regex/MatchResult;.end:(I)I` @kind interface;
  #L144cae.  v1:= temp;
  #L144cb0.  call temp:= `until`(v0, v1) @signature `Lkotlin/ranges/RangesKt;.until:(II)Lkotlin/ranges/IntRange;` @kind static;
  #L144cb6.  v1:= temp @kind object;
  #L144cb8.  return v1 @kind object;
}
procedure `int` `f`(`java.lang.Iterable` v2 @kind object) @signature `Lkotlin/text/RegexKt;.f:(Ljava/lang/Iterable;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L144b94.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L144b9a.  v2:= temp @kind object;
  #L144b9c.  v0:= 0I;
  #L144b9e.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L144ba4.  v1:= temp;
  #L144ba6.  if v1 == 0 then goto L144bc2;
  #L144baa.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L144bb0.  v1:= temp @kind object;
  #L144bb2.  v1:= (`kotlin.text.c`) v1 @kind object;
  #L144bb6.  call temp:= `getValue`(v1) @signature `Lkotlin/text/c;.getValue:()I` @kind interface;
  #L144bbc.  v1:= temp;
  #L144bbe.  v0:= v0 ^| v1 @kind int;
  #L144bc0.  goto L144b9e;
  #L144bc2.  return v0;
}
