record `kotlin.text.MatcherMatchResult` @kind class @AccessFlag FINAL extends `kotlin.text.MatchResult` @kind interface {
  `kotlin.text.MatchGroupCollection` `kotlin.text.MatcherMatchResult.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `kotlin.text.MatcherMatchResult.b` @AccessFlag PRIVATE;
  `java.util.regex.Matcher` `kotlin.text.MatcherMatchResult.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.CharSequence` `kotlin.text.MatcherMatchResult.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.text.MatcherMatchResult` v1 @kind this, `java.util.regex.Matcher` v2 @kind object, `java.lang.CharSequence` v3 @kind object) @signature `Lkotlin/text/MatcherMatchResult;.<init>:(Ljava/util/regex/Matcher;Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L144584.  v0:= "matcher" @kind object;
  #L144588.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L14458e.  v0:= "input" @kind object;
  #L144592.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L144598.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L14459e.  v1.`kotlin.text.MatcherMatchResult.c` @type ^`java.util.regex.Matcher` := v2 @kind object;
  #L1445a2.  v1.`kotlin.text.MatcherMatchResult.d` @type ^`java.lang.CharSequence` := v3 @kind object;
  #L1445a6.  v2:= new `kotlin.text.MatcherMatchResult$groups$1`;
  #L1445aa.  call `<init>`(v2, v1) @signature `Lkotlin/text/MatcherMatchResult$groups$1;.<init>:(Lkotlin/text/MatcherMatchResult;)V` @kind direct;
  #L1445b0.  v1.`kotlin.text.MatcherMatchResult.a` @type ^`kotlin.text.MatchGroupCollection` := v2 @kind object;
  #L1445b4.  return @kind void;
}
procedure `java.util.regex.MatchResult` `a`(`kotlin.text.MatcherMatchResult` v0 @kind object) @signature `Lkotlin/text/MatcherMatchResult;.a:(Lkotlin/text/MatcherMatchResult;)Ljava/util/regex/MatchResult;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L144468.  call temp:= `b`(v0) @signature `Lkotlin/text/MatcherMatchResult;.b:()Ljava/util/regex/MatchResult;` @kind direct;
  #L14446e.  v0:= temp @kind object;
  #L144470.  return v0 @kind object;
}
procedure `java.util.regex.MatchResult` `b`(`kotlin.text.MatcherMatchResult` v1 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.b:()Ljava/util/regex/MatchResult;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L144484.  v0:= v1.`kotlin.text.MatcherMatchResult.c` @type ^`java.util.regex.Matcher` @kind object;
  #L144488.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult$Destructured` `getDestructured`(`kotlin.text.MatcherMatchResult` v1 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.getDestructured:()Lkotlin/text/MatchResult$Destructured;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L144568.  call temp:= `getDestructured`(v1) @signature `Lkotlin/text/MatchResult$DefaultImpls;.getDestructured:(Lkotlin/text/MatchResult;)Lkotlin/text/MatchResult$Destructured;` @kind static;
  #L14456e.  v0:= temp @kind object;
  #L144570.  return v0 @kind object;
}
procedure `java.util.List` `getGroupValues`(`kotlin.text.MatcherMatchResult` v1 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.getGroupValues:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L144434.  v0:= v1.`kotlin.text.MatcherMatchResult.b` @type ^`java.util.List` @kind object;
  #L144438.  if v0 != 0 then goto L14444a;
  #L14443c.  v0:= new `kotlin.text.MatcherMatchResult$groupValues$1`;
  #L144440.  call `<init>`(v0, v1) @signature `Lkotlin/text/MatcherMatchResult$groupValues$1;.<init>:(Lkotlin/text/MatcherMatchResult;)V` @kind direct;
  #L144446.  v1.`kotlin.text.MatcherMatchResult.b` @type ^`java.util.List` := v0 @kind object;
  #L14444a.  v0:= v1.`kotlin.text.MatcherMatchResult.b` @type ^`java.util.List` @kind object;
  #L14444e.  call `checkNotNull`(v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L144454.  return v0 @kind object;
}
procedure `kotlin.text.MatchGroupCollection` `getGroups`(`kotlin.text.MatcherMatchResult` v1 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.getGroups:()Lkotlin/text/MatchGroupCollection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1444c0.  v0:= v1.`kotlin.text.MatcherMatchResult.a` @type ^`kotlin.text.MatchGroupCollection` @kind object;
  #L1444c4.  return v0 @kind object;
}
procedure `kotlin.ranges.IntRange` `getRange`(`kotlin.text.MatcherMatchResult` v1 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.getRange:()Lkotlin/ranges/IntRange;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L14449c.  call temp:= `b`(v1) @signature `Lkotlin/text/MatcherMatchResult;.b:()Ljava/util/regex/MatchResult;` @kind direct;
  #L1444a2.  v0:= temp @kind object;
  #L1444a4.  call temp:= `access$range`(v0) @signature `Lkotlin/text/RegexKt;.access$range:(Ljava/util/regex/MatchResult;)Lkotlin/ranges/IntRange;` @kind static;
  #L1444aa.  v0:= temp @kind object;
  #L1444ac.  return v0 @kind object;
}
procedure `java.lang.String` `getValue`(`kotlin.text.MatcherMatchResult` v2 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.getValue:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L144408.  call temp:= `b`(v2) @signature `Lkotlin/text/MatcherMatchResult;.b:()Ljava/util/regex/MatchResult;` @kind direct;
  #L14440e.  v0:= temp @kind object;
  #L144410.  call temp:= `group`(v0) @signature `Ljava/util/regex/MatchResult;.group:()Ljava/lang/String;` @kind interface;
  #L144416.  v0:= temp @kind object;
  #L144418.  v1:= "matchResult.group()" @kind object;
  #L14441c.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L144422.  return v0 @kind object;
}
procedure `kotlin.text.MatchResult` `next`(`kotlin.text.MatcherMatchResult` v3 @kind this) @signature `Lkotlin/text/MatcherMatchResult;.next:()Lkotlin/text/MatchResult;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1444d8.  call temp:= `b`(v3) @signature `Lkotlin/text/MatcherMatchResult;.b:()Ljava/util/regex/MatchResult;` @kind direct;
  #L1444de.  v0:= temp @kind object;
  #L1444e0.  call temp:= `end`(v0) @signature `Ljava/util/regex/MatchResult;.end:()I` @kind interface;
  #L1444e6.  v0:= temp;
  #L1444e8.  call temp:= `b`(v3) @signature `Lkotlin/text/MatcherMatchResult;.b:()Ljava/util/regex/MatchResult;` @kind direct;
  #L1444ee.  v1:= temp @kind object;
  #L1444f0.  call temp:= `end`(v1) @signature `Ljava/util/regex/MatchResult;.end:()I` @kind interface;
  #L1444f6.  v1:= temp;
  #L1444f8.  call temp:= `b`(v3) @signature `Lkotlin/text/MatcherMatchResult;.b:()Ljava/util/regex/MatchResult;` @kind direct;
  #L1444fe.  v2:= temp @kind object;
  #L144500.  call temp:= `start`(v2) @signature `Ljava/util/regex/MatchResult;.start:()I` @kind interface;
  #L144506.  v2:= temp;
  #L144508.  if v1 != v2 then goto L144510;
  #L14450c.  v1:= 1I;
  #L14450e.  goto L144512;
  #L144510.  v1:= 0I;
  #L144512.  v0:= v0 + v1 @kind int;
  #L144514.  v1:= v3.`kotlin.text.MatcherMatchResult.d` @type ^`java.lang.CharSequence` @kind object;
  #L144518.  call temp:= `length`(v1) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L14451e.  v1:= temp;
  #L144520.  if v0 > v1 then goto L144554;
  #L144524.  v1:= v3.`kotlin.text.MatcherMatchResult.c` @type ^`java.util.regex.Matcher` @kind object;
  #L144528.  call temp:= `pattern`(v1) @signature `Ljava/util/regex/Matcher;.pattern:()Ljava/util/regex/Pattern;` @kind virtual;
  #L14452e.  v1:= temp @kind object;
  #L144530.  v2:= v3.`kotlin.text.MatcherMatchResult.d` @type ^`java.lang.CharSequence` @kind object;
  #L144534.  call temp:= `matcher`(v1, v2) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L14453a.  v1:= temp @kind object;
  #L14453c.  v2:= "matcher.pattern().matcher(input)" @kind object;
  #L144540.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L144546.  v2:= v3.`kotlin.text.MatcherMatchResult.d` @type ^`java.lang.CharSequence` @kind object;
  #L14454a.  call temp:= `access$findNext`(v1, v0, v2) @signature `Lkotlin/text/RegexKt;.access$findNext:(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Lkotlin/text/MatchResult;` @kind static;
  #L144550.  v0:= temp @kind object;
  #L144552.  goto L144556;
  #L144554.  v0:= 0I;
  #L144556.  return v0 @kind object;
}
