record `kotlin.text.Regex$c` @kind class @AccessFlag FINAL extends `kotlin.coroutines.jvm.internal.RestrictedSuspendLambda` @kind class, `kotlin.jvm.functions.Function2` @kind interface {
  `java.lang.Object` `kotlin.text.Regex$c.b` @AccessFlag PRIVATE_SYNTHETIC;
  `java.lang.Object` `kotlin.text.Regex$c.c` @AccessFlag ;
  `int` `kotlin.text.Regex$c.d` @AccessFlag ;
  `int` `kotlin.text.Regex$c.e` @AccessFlag ;
  `kotlin.text.Regex` `kotlin.text.Regex$c.f` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.CharSequence` `kotlin.text.Regex$c.g` @AccessFlag FINAL_SYNTHETIC;
  `int` `kotlin.text.Regex$c.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.text.Regex$c` v0 @kind this, `kotlin.text.Regex` v1 @kind object, `java.lang.CharSequence` v2 @kind object, `int` v3 , `kotlin.coroutines.Continuation` v4 @kind object) @signature `Lkotlin/text/Regex$c;.<init>:(Lkotlin/text/Regex;Ljava/lang/CharSequence;ILkotlin/coroutines/Continuation;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L144ad0.  v0.`kotlin.text.Regex$c.f` @type ^`kotlin.text.Regex` := v1 @kind object;
  #L144ad4.  v0.`kotlin.text.Regex$c.g` @type ^`java.lang.CharSequence` := v2 @kind object;
  #L144ad8.  v0.`kotlin.text.Regex$c.h` @type ^`int` := v3;
  #L144adc.  v1:= 2I;
  #L144ade.  call `<init>`(v0, v1, v4) @signature `Lkotlin/coroutines/jvm/internal/RestrictedSuspendLambda;.<init>:(ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L144ae4.  return @kind void;
}
procedure `kotlin.coroutines.Continuation` `create`(`kotlin.text.Regex$c` v4 @kind this, `java.lang.Object` v5 @kind object, `kotlin.coroutines.Continuation` v6 @kind object) @signature `Lkotlin/text/Regex$c;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L144a98.  v0:= "completion" @kind object;
  #L144a9c.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L144aa2.  v0:= new `kotlin.text.Regex$c`;
  #L144aa6.  v1:= v4.`kotlin.text.Regex$c.f` @type ^`kotlin.text.Regex` @kind object;
  #L144aaa.  v2:= v4.`kotlin.text.Regex$c.g` @type ^`java.lang.CharSequence` @kind object;
  #L144aae.  v3:= v4.`kotlin.text.Regex$c.h` @type ^`int`;
  #L144ab2.  call `<init>`(v0, v1, v2, v3, v6) @signature `Lkotlin/text/Regex$c;.<init>:(Lkotlin/text/Regex;Ljava/lang/CharSequence;ILkotlin/coroutines/Continuation;)V` @kind direct;
  #L144ab8.  v0.`kotlin.text.Regex$c.b` @type ^`java.lang.Object` := v5 @kind object;
  #L144abc.  return v0 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlin.text.Regex$c` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/text/Regex$c;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1448f0.  v2:= (`kotlin.coroutines.Continuation`) v2 @kind object;
  #L1448f4.  call temp:= `create`(v0, v1, v2) @signature `Lkotlin/text/Regex$c;.create:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;` @kind virtual;
  #L1448fa.  v1:= temp @kind object;
  #L1448fc.  v1:= (`kotlin.text.Regex$c`) v1 @kind object;
  #L144900.  v2:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L144904.  call temp:= `invokeSuspend`(v1, v2) @signature `Lkotlin/text/Regex$c;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L14490a.  v1:= temp @kind object;
  #L14490c.  return v1 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`kotlin.text.Regex$c` v10 @kind this, `java.lang.Object` v11 @kind object) @signature `Lkotlin/text/Regex$c;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L144920.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/coroutines/intrinsics/IntrinsicsKt;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L144926.  v0:= temp @kind object;
  #L144928.  v1:= v10.`kotlin.text.Regex$c.e` @type ^`int`;
  #L14492c.  v2:= 0I;
  #L14492e.  v3:= 3I;
  #L144930.  v4:= 2I;
  #L144932.  v5:= 1I;
  #L144934.  if v1 == 0 then goto L144986;
  #L144938.  if v1 == v5 then goto L14497c;
  #L14493c.  if v1 == v4 then goto L14495e;
  #L144940.  if v1 != v3 then goto L14494e;
  #L144944.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L14494a.  goto L144a5e;
  #L14494e.  v11:= new `java.lang.IllegalStateException`;
  #L144952.  v0:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L144956.  call `<init>`(v11, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L14495c.  throw v11;
  #L14495e.  v1:= v10.`kotlin.text.Regex$c.d` @type ^`int`;
  #L144962.  v2:= v10.`kotlin.text.Regex$c.c` @type ^`java.lang.Object` @kind object;
  #L144966.  v2:= (`java.util.regex.Matcher`) v2 @kind object;
  #L14496a.  v6:= v10.`kotlin.text.Regex$c.b` @type ^`java.lang.Object` @kind object;
  #L14496e.  v6:= (`kotlin.sequences.SequenceScope`) v6 @kind object;
  #L144972.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L144978.  v7:= v10 @kind object;
  #L14497a.  goto L144a06;
  #L14497c.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L144982.  goto L144a82;
  #L144986.  call `throwOnFailure`(v11) @signature `Lkotlin/ResultKt;.throwOnFailure:(Ljava/lang/Object;)V` @kind static;
  #L14498c.  v11:= v10.`kotlin.text.Regex$c.b` @type ^`java.lang.Object` @kind object;
  #L144990.  v11:= (`kotlin.sequences.SequenceScope`) v11 @kind object;
  #L144994.  v1:= v10.`kotlin.text.Regex$c.f` @type ^`kotlin.text.Regex` @kind object;
  #L144998.  call temp:= `access$getNativePattern$p`(v1) @signature `Lkotlin/text/Regex;.access$getNativePattern$p:(Lkotlin/text/Regex;)Ljava/util/regex/Pattern;` @kind static;
  #L14499e.  v1:= temp @kind object;
  #L1449a0.  v6:= v10.`kotlin.text.Regex$c.g` @type ^`java.lang.CharSequence` @kind object;
  #L1449a4.  call temp:= `matcher`(v1, v6) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L1449aa.  v1:= temp @kind object;
  #L1449ac.  v6:= v10.`kotlin.text.Regex$c.h` @type ^`int`;
  #L1449b0.  if v6 == v5 then goto L144a64;
  #L1449b4.  call temp:= `find`(v1) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L1449ba.  v6:= temp;
  #L1449bc.  if v6 != 0 then goto L1449c2;
  #L1449c0.  goto L144a64;
  #L1449c2.  v7:= v10 @kind object;
  #L1449c4.  v6:= v11 @kind object;
  #L1449c6.  v2:= v1 @kind object;
  #L1449c8.  v11:= 0I;
  #L1449ca.  v1:= 0I;
  #L1449cc.  v8:= v7.`kotlin.text.Regex$c.g` @type ^`java.lang.CharSequence` @kind object;
  #L1449d0.  call temp:= `start`(v2) @signature `Ljava/util/regex/Matcher;.start:()I` @kind virtual;
  #L1449d6.  v9:= temp;
  #L1449d8.  call temp:= `subSequence`(v8, v11, v9) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L1449de.  v11:= temp @kind object;
  #L1449e0.  call temp:= `toString`(v11) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1449e6.  v11:= temp @kind object;
  #L1449e8.  v7.`kotlin.text.Regex$c.b` @type ^`java.lang.Object` := v6 @kind object;
  #L1449ec.  v7.`kotlin.text.Regex$c.c` @type ^`java.lang.Object` := v2 @kind object;
  #L1449f0.  v7.`kotlin.text.Regex$c.d` @type ^`int` := v1;
  #L1449f4.  v7.`kotlin.text.Regex$c.e` @type ^`int` := v4;
  #L1449f8.  call temp:= `yield`(v6, v11, v7) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L1449fe.  v11:= temp @kind object;
  #L144a00.  if v11 != v0 then goto L144a06;
  #L144a04.  return v0 @kind object;
  #L144a06.  call temp:= `end`(v2) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L144a0c.  v11:= temp;
  #L144a0e.  v1:= v1 + v5 @kind int;
  #L144a10.  v8:= v7.`kotlin.text.Regex$c.h` @type ^`int`;
  #L144a14.  v8:= v8 - v5 @kind int;
  #L144a16.  if v1 == v8 then goto L144a26;
  #L144a1a.  call temp:= `find`(v2) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L144a20.  v8:= temp;
  #L144a22.  if v8 != 0 then goto L1449cc;
  #L144a26.  v1:= v7.`kotlin.text.Regex$c.g` @type ^`java.lang.CharSequence` @kind object;
  #L144a2a.  call temp:= `length`(v1) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L144a30.  v2:= temp;
  #L144a32.  call temp:= `subSequence`(v1, v11, v2) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L144a38.  v11:= temp @kind object;
  #L144a3a.  call temp:= `toString`(v11) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L144a40.  v11:= temp @kind object;
  #L144a42.  v1:= 0I;
  #L144a44.  v7.`kotlin.text.Regex$c.b` @type ^`java.lang.Object` := v1 @kind object;
  #L144a48.  v7.`kotlin.text.Regex$c.c` @type ^`java.lang.Object` := v1 @kind object;
  #L144a4c.  v7.`kotlin.text.Regex$c.e` @type ^`int` := v3;
  #L144a50.  call temp:= `yield`(v6, v11, v7) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L144a56.  v11:= temp @kind object;
  #L144a58.  if v11 != v0 then goto L144a5e;
  #L144a5c.  return v0 @kind object;
  #L144a5e.  v11:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L144a62.  return v11 @kind object;
  #L144a64.  v1:= v10.`kotlin.text.Regex$c.g` @type ^`java.lang.CharSequence` @kind object;
  #L144a68.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L144a6e.  v1:= temp @kind object;
  #L144a70.  v10.`kotlin.text.Regex$c.e` @type ^`int` := v5;
  #L144a74.  call temp:= `yield`(v11, v1, v10) @signature `Lkotlin/sequences/SequenceScope;.yield:(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;` @kind virtual;
  #L144a7a.  v11:= temp @kind object;
  #L144a7c.  if v11 != v0 then goto L144a82;
  #L144a80.  return v0 @kind object;
  #L144a82.  v11:= `@@kotlin.Unit.INSTANCE` @type ^`kotlin.Unit` @kind object;
  #L144a86.  return v11 @kind object;
}
