record `kotlin.reflect.TypesJVMKt$WhenMappings` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC {
}
global `int`[] `@@kotlin.reflect.TypesJVMKt$WhenMappings.$EnumSwitchMapping$0` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
global `int`[] `@@kotlin.reflect.TypesJVMKt$WhenMappings.$EnumSwitchMapping$1` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlin/reflect/TypesJVMKt$WhenMappings;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L13a660.  call temp:= `values`() @signature `Lkotlin/reflect/KVariance;.values:()[Lkotlin/reflect/KVariance;` @kind static;
  #L13a666.  v0:= temp @kind object;
  #L13a668.  v0:= length @variable v0;
  #L13a66a.  v0:= new `int`[v0];
  #L13a66e.  `@@kotlin.reflect.TypesJVMKt$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] := v0 @kind object;
  #L13a672.  v1:= `@@kotlin.reflect.KVariance.IN` @type ^`kotlin.reflect.KVariance` @kind object;
  #L13a676.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L13a67c.  v1:= temp;
  #L13a67e.  v2:= 1I;
  #L13a680.  v0[v1]:= v2;
  #L13a684.  v0:= `@@kotlin.reflect.TypesJVMKt$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L13a688.  v1:= `@@kotlin.reflect.KVariance.INVARIANT` @type ^`kotlin.reflect.KVariance` @kind object;
  #L13a68c.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L13a692.  v1:= temp;
  #L13a694.  v3:= 2I;
  #L13a696.  v0[v1]:= v3;
  #L13a69a.  v0:= `@@kotlin.reflect.TypesJVMKt$WhenMappings.$EnumSwitchMapping$0` @type ^`int`[] @kind object;
  #L13a69e.  v1:= `@@kotlin.reflect.KVariance.OUT` @type ^`kotlin.reflect.KVariance` @kind object;
  #L13a6a2.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L13a6a8.  v1:= temp;
  #L13a6aa.  v4:= 3I;
  #L13a6ac.  v0[v1]:= v4;
  #L13a6b0.  call temp:= `values`() @signature `Lkotlin/reflect/KVariance;.values:()[Lkotlin/reflect/KVariance;` @kind static;
  #L13a6b6.  v0:= temp @kind object;
  #L13a6b8.  v0:= length @variable v0;
  #L13a6ba.  v0:= new `int`[v0];
  #L13a6be.  `@@kotlin.reflect.TypesJVMKt$WhenMappings.$EnumSwitchMapping$1` @type ^`int`[] := v0 @kind object;
  #L13a6c2.  v1:= `@@kotlin.reflect.KVariance.INVARIANT` @type ^`kotlin.reflect.KVariance` @kind object;
  #L13a6c6.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L13a6cc.  v1:= temp;
  #L13a6ce.  v0[v1]:= v2;
  #L13a6d2.  v0:= `@@kotlin.reflect.TypesJVMKt$WhenMappings.$EnumSwitchMapping$1` @type ^`int`[] @kind object;
  #L13a6d6.  v1:= `@@kotlin.reflect.KVariance.IN` @type ^`kotlin.reflect.KVariance` @kind object;
  #L13a6da.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L13a6e0.  v1:= temp;
  #L13a6e2.  v0[v1]:= v3;
  #L13a6e6.  v0:= `@@kotlin.reflect.TypesJVMKt$WhenMappings.$EnumSwitchMapping$1` @type ^`int`[] @kind object;
  #L13a6ea.  v1:= `@@kotlin.reflect.KVariance.OUT` @type ^`kotlin.reflect.KVariance` @kind object;
  #L13a6ee.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L13a6f4.  v1:= temp;
  #L13a6f6.  v0[v1]:= v4;
  #L13a6fa.  return @kind void;
}
