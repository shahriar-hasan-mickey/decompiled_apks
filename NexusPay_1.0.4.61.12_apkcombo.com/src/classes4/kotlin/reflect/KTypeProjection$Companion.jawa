record `kotlin.reflect.KTypeProjection$Companion` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`kotlin.reflect.KTypeProjection$Companion` v0 @kind this) @signature `Lkotlin/reflect/KTypeProjection$Companion;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L139c40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L139c46.  return @kind void;
}
procedure `void` `<init>`(`kotlin.reflect.KTypeProjection$Companion` v0 @kind this, `kotlin.jvm.internal.DefaultConstructorMarker` v1 @kind object) @signature `Lkotlin/reflect/KTypeProjection$Companion;.<init>:(Lkotlin/jvm/internal/DefaultConstructorMarker;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L139c58.  call `<init>`(v0) @signature `Lkotlin/reflect/KTypeProjection$Companion;.<init>:()V` @kind direct;
  #L139c5e.  return @kind void;
}
procedure `void` `getStar$annotations`() @signature `Lkotlin/reflect/KTypeProjection$Companion;.getStar$annotations:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L139c70.  return @kind void;
}
procedure `kotlin.reflect.KTypeProjection` `contravariant`(`kotlin.reflect.KTypeProjection$Companion` v2 @kind this, `kotlin.reflect.KType` v3 @kind object) @signature `Lkotlin/reflect/KTypeProjection$Companion;.contravariant:(Lkotlin/reflect/KType;)Lkotlin/reflect/KTypeProjection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L139ba4.  v0:= "type" @kind object;
  #L139ba8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L139bae.  v0:= new `kotlin.reflect.KTypeProjection`;
  #L139bb2.  v1:= `@@kotlin.reflect.KVariance.IN` @type ^`kotlin.reflect.KVariance` @kind object;
  #L139bb6.  call `<init>`(v0, v1, v3) @signature `Lkotlin/reflect/KTypeProjection;.<init>:(Lkotlin/reflect/KVariance;Lkotlin/reflect/KType;)V` @kind direct;
  #L139bbc.  return v0 @kind object;
}
procedure `kotlin.reflect.KTypeProjection` `covariant`(`kotlin.reflect.KTypeProjection$Companion` v2 @kind this, `kotlin.reflect.KType` v3 @kind object) @signature `Lkotlin/reflect/KTypeProjection$Companion;.covariant:(Lkotlin/reflect/KType;)Lkotlin/reflect/KTypeProjection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L139bd0.  v0:= "type" @kind object;
  #L139bd4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L139bda.  v0:= new `kotlin.reflect.KTypeProjection`;
  #L139bde.  v1:= `@@kotlin.reflect.KVariance.OUT` @type ^`kotlin.reflect.KVariance` @kind object;
  #L139be2.  call `<init>`(v0, v1, v3) @signature `Lkotlin/reflect/KTypeProjection;.<init>:(Lkotlin/reflect/KVariance;Lkotlin/reflect/KType;)V` @kind direct;
  #L139be8.  return v0 @kind object;
}
procedure `kotlin.reflect.KTypeProjection` `getSTAR`(`kotlin.reflect.KTypeProjection$Companion` v1 @kind this) @signature `Lkotlin/reflect/KTypeProjection$Companion;.getSTAR:()Lkotlin/reflect/KTypeProjection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L139bfc.  v0:= `@@kotlin.reflect.KTypeProjection.star` @type ^`kotlin.reflect.KTypeProjection` @kind object;
  #L139c00.  return v0 @kind object;
}
procedure `kotlin.reflect.KTypeProjection` `invariant`(`kotlin.reflect.KTypeProjection$Companion` v2 @kind this, `kotlin.reflect.KType` v3 @kind object) @signature `Lkotlin/reflect/KTypeProjection$Companion;.invariant:(Lkotlin/reflect/KType;)Lkotlin/reflect/KTypeProjection;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L139c14.  v0:= "type" @kind object;
  #L139c18.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L139c1e.  v0:= new `kotlin.reflect.KTypeProjection`;
  #L139c22.  v1:= `@@kotlin.reflect.KVariance.INVARIANT` @type ^`kotlin.reflect.KVariance` @kind object;
  #L139c26.  call `<init>`(v0, v1, v3) @signature `Lkotlin/reflect/KTypeProjection;.<init>:(Lkotlin/reflect/KVariance;Lkotlin/reflect/KType;)V` @kind direct;
  #L139c2c.  return v0 @kind object;
}
