record `kotlin.reflect.KClasses` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `cast`(`kotlin.reflect.KClass` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlin/reflect/KClasses;.cast:(Lkotlin/reflect/KClass;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L139964.  v0:= "$this$cast" @kind object;
  #L139968.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L13996e.  call temp:= `isInstance`(v2, v3) @signature `Lkotlin/reflect/KClass;.isInstance:(Ljava/lang/Object;)Z` @kind interface;
  #L139974.  v0:= temp;
  #L139976.  if v0 == 0 then goto L139990;
  #L13997a.  if v3 == 0 then goto L139980;
  #L13997e.  return v3 @kind object;
  #L139980.  v2:= new `java.lang.NullPointerException`;
  #L139984.  v3:= "null cannot be cast to non-null type T" @kind object;
  #L139988.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L13998e.  throw v2;
  #L139990.  v3:= new `java.lang.ClassCastException`;
  #L139994.  v0:= new `java.lang.StringBuilder`;
  #L139998.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L13999e.  v1:= "Value cannot be cast to " @kind object;
  #L1399a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1399a8.  call temp:= `getQualifiedName`(v2) @signature `Lkotlin/reflect/KClass;.getQualifiedName:()Ljava/lang/String;` @kind interface;
  #L1399ae.  v2:= temp @kind object;
  #L1399b0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1399b6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1399bc.  v2:= temp @kind object;
  #L1399be.  call `<init>`(v3, v2) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1399c4.  throw v3;
}
procedure `java.lang.Object` `safeCast`(`kotlin.reflect.KClass` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/reflect/KClasses;.safeCast:(Lkotlin/reflect/KClass;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1399d8.  v0:= "$this$safeCast" @kind object;
  #L1399dc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1399e2.  call temp:= `isInstance`(v1, v2) @signature `Lkotlin/reflect/KClass;.isInstance:(Ljava/lang/Object;)Z` @kind interface;
  #L1399e8.  v1:= temp;
  #L1399ea.  if v1 == 0 then goto L139a04;
  #L1399ee.  if v2 == 0 then goto L1399f4;
  #L1399f2.  goto L139a06;
  #L1399f4.  v1:= new `java.lang.NullPointerException`;
  #L1399f8.  v2:= "null cannot be cast to non-null type T" @kind object;
  #L1399fc.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L139a02.  throw v1;
  #L139a04.  v2:= 0I;
  #L139a06.  return v2 @kind object;
}
