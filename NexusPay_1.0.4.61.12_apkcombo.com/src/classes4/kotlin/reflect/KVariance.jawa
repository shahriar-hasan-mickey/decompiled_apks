record `kotlin.reflect.KVariance` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlin.reflect.KVariance`[] `@@kotlin.reflect.KVariance.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlin.reflect.KVariance` `@@kotlin.reflect.KVariance.IN` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.reflect.KVariance` `@@kotlin.reflect.KVariance.INVARIANT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.reflect.KVariance` `@@kotlin.reflect.KVariance.OUT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lkotlin/reflect/KVariance;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L13a04c.  v0:= 3I;
  #L13a04e.  v0:= new `kotlin.reflect.KVariance`[v0];
  #L13a052.  v1:= new `kotlin.reflect.KVariance`;
  #L13a056.  v2:= "INVARIANT" @kind object;
  #L13a05a.  v3:= 0I;
  #L13a05c.  call `<init>`(v1, v2, v3) @signature `Lkotlin/reflect/KVariance;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L13a062.  `@@kotlin.reflect.KVariance.INVARIANT` @type ^`kotlin.reflect.KVariance` := v1 @kind object;
  #L13a066.  v0[v3]:= v1 @kind object;
  #L13a06a.  v1:= new `kotlin.reflect.KVariance`;
  #L13a06e.  v2:= "IN" @kind object;
  #L13a072.  v3:= 1I;
  #L13a074.  call `<init>`(v1, v2, v3) @signature `Lkotlin/reflect/KVariance;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L13a07a.  `@@kotlin.reflect.KVariance.IN` @type ^`kotlin.reflect.KVariance` := v1 @kind object;
  #L13a07e.  v0[v3]:= v1 @kind object;
  #L13a082.  v1:= new `kotlin.reflect.KVariance`;
  #L13a086.  v2:= "OUT" @kind object;
  #L13a08a.  v3:= 2I;
  #L13a08c.  call `<init>`(v1, v2, v3) @signature `Lkotlin/reflect/KVariance;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L13a092.  `@@kotlin.reflect.KVariance.OUT` @type ^`kotlin.reflect.KVariance` := v1 @kind object;
  #L13a096.  v0[v3]:= v1 @kind object;
  #L13a09a.  `@@kotlin.reflect.KVariance.$VALUES` @type ^`kotlin.reflect.KVariance`[] := v0 @kind object;
  #L13a09e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.reflect.KVariance` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlin/reflect/KVariance;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L13a0b0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L13a0b6.  return @kind void;
}
procedure `kotlin.reflect.KVariance` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlin/reflect/KVariance;.valueOf:(Ljava/lang/String;)Lkotlin/reflect/KVariance;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L13a004.  v0:= constclass @type ^`kotlin.reflect.KVariance` @kind object;
  #L13a008.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L13a00e.  v1:= temp @kind object;
  #L13a010.  v1:= (`kotlin.reflect.KVariance`) v1 @kind object;
  #L13a014.  return v1 @kind object;
}
procedure `kotlin.reflect.KVariance`[] `values`() @signature `Lkotlin/reflect/KVariance;.values:()[Lkotlin/reflect/KVariance;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L13a028.  v0:= `@@kotlin.reflect.KVariance.$VALUES` @type ^`kotlin.reflect.KVariance`[] @kind object;
  #L13a02c.  call temp:= `clone`(v0) @signature `[Lkotlin/reflect/KVariance;.clone:()Ljava/lang/Object;` @kind virtual;
  #L13a032.  v0:= temp @kind object;
  #L13a034.  v0:= (`kotlin.reflect.KVariance`[]) v0 @kind object;
  #L13a038.  return v0 @kind object;
}
