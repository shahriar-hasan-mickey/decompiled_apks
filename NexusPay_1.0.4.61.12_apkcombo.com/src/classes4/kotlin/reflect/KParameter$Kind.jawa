record `kotlin.reflect.KParameter$Kind` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlin.reflect.KParameter$Kind`[] `@@kotlin.reflect.KParameter$Kind.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlin.reflect.KParameter$Kind` `@@kotlin.reflect.KParameter$Kind.EXTENSION_RECEIVER` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.reflect.KParameter$Kind` `@@kotlin.reflect.KParameter$Kind.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.reflect.KParameter$Kind` `@@kotlin.reflect.KParameter$Kind.VALUE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lkotlin/reflect/KParameter$Kind;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L139ad8.  v0:= 3I;
  #L139ada.  v0:= new `kotlin.reflect.KParameter$Kind`[v0];
  #L139ade.  v1:= new `kotlin.reflect.KParameter$Kind`;
  #L139ae2.  v2:= "INSTANCE" @kind object;
  #L139ae6.  v3:= 0I;
  #L139ae8.  call `<init>`(v1, v2, v3) @signature `Lkotlin/reflect/KParameter$Kind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L139aee.  `@@kotlin.reflect.KParameter$Kind.INSTANCE` @type ^`kotlin.reflect.KParameter$Kind` := v1 @kind object;
  #L139af2.  v0[v3]:= v1 @kind object;
  #L139af6.  v1:= new `kotlin.reflect.KParameter$Kind`;
  #L139afa.  v2:= "EXTENSION_RECEIVER" @kind object;
  #L139afe.  v3:= 1I;
  #L139b00.  call `<init>`(v1, v2, v3) @signature `Lkotlin/reflect/KParameter$Kind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L139b06.  `@@kotlin.reflect.KParameter$Kind.EXTENSION_RECEIVER` @type ^`kotlin.reflect.KParameter$Kind` := v1 @kind object;
  #L139b0a.  v0[v3]:= v1 @kind object;
  #L139b0e.  v1:= new `kotlin.reflect.KParameter$Kind`;
  #L139b12.  v2:= "VALUE" @kind object;
  #L139b16.  v3:= 2I;
  #L139b18.  call `<init>`(v1, v2, v3) @signature `Lkotlin/reflect/KParameter$Kind;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L139b1e.  `@@kotlin.reflect.KParameter$Kind.VALUE` @type ^`kotlin.reflect.KParameter$Kind` := v1 @kind object;
  #L139b22.  v0[v3]:= v1 @kind object;
  #L139b26.  `@@kotlin.reflect.KParameter$Kind.$VALUES` @type ^`kotlin.reflect.KParameter$Kind`[] := v0 @kind object;
  #L139b2a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.reflect.KParameter$Kind` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlin/reflect/KParameter$Kind;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L139b3c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L139b42.  return @kind void;
}
procedure `kotlin.reflect.KParameter$Kind` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlin/reflect/KParameter$Kind;.valueOf:(Ljava/lang/String;)Lkotlin/reflect/KParameter$Kind;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L139a90.  v0:= constclass @type ^`kotlin.reflect.KParameter$Kind` @kind object;
  #L139a94.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L139a9a.  v1:= temp @kind object;
  #L139a9c.  v1:= (`kotlin.reflect.KParameter$Kind`) v1 @kind object;
  #L139aa0.  return v1 @kind object;
}
procedure `kotlin.reflect.KParameter$Kind`[] `values`() @signature `Lkotlin/reflect/KParameter$Kind;.values:()[Lkotlin/reflect/KParameter$Kind;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L139ab4.  v0:= `@@kotlin.reflect.KParameter$Kind.$VALUES` @type ^`kotlin.reflect.KParameter$Kind`[] @kind object;
  #L139ab8.  call temp:= `clone`(v0) @signature `[Lkotlin/reflect/KParameter$Kind;.clone:()Ljava/lang/Object;` @kind virtual;
  #L139abe.  v0:= temp @kind object;
  #L139ac0.  v0:= (`kotlin.reflect.KParameter$Kind`[]) v0 @kind object;
  #L139ac4.  return v0 @kind object;
}
