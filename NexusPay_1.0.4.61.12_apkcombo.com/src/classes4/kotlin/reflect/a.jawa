record `kotlin.reflect.a` @kind class @AccessFlag FINAL extends `java.lang.reflect.GenericArrayType` @kind interface, `java.lang.reflect.Type` @kind interface {
  `java.lang.reflect.Type` `kotlin.reflect.a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.reflect.a` v1 @kind this, `java.lang.reflect.Type` v2 @kind object) @signature `Lkotlin/reflect/a;.<init>:(Ljava/lang/reflect/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L13979c.  v0:= "elementType" @kind object;
  #L1397a0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/jvm/internal/Intrinsics;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1397a6.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1397ac.  v1.`kotlin.reflect.a.a` @type ^`java.lang.reflect.Type` := v2 @kind object;
  #L1397b0.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.reflect.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/reflect/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1396c4.  v0:= instanceof @variable v2 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L1396c8.  if v0 == 0 then goto L1396f0;
  #L1396cc.  call temp:= `getGenericComponentType`(v1) @signature `Lkotlin/reflect/a;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L1396d2.  v0:= temp @kind object;
  #L1396d4.  v2:= (`java.lang.reflect.GenericArrayType`) v2 @kind object;
  #L1396d8.  call temp:= `getGenericComponentType`(v2) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L1396de.  v2:= temp @kind object;
  #L1396e0.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/jvm/internal/Intrinsics;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1396e6.  v2:= temp;
  #L1396e8.  if v2 == 0 then goto L1396f0;
  #L1396ec.  v2:= 1I;
  #L1396ee.  goto L1396f2;
  #L1396f0.  v2:= 0I;
  #L1396f2.  return v2;
}
procedure `java.lang.reflect.Type` `getGenericComponentType`(`kotlin.reflect.a` v1 @kind this) @signature `Lkotlin/reflect/a;.getGenericComponentType:()Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L139784.  v0:= v1.`kotlin.reflect.a.a` @type ^`java.lang.reflect.Type` @kind object;
  #L139788.  return v0 @kind object;
}
procedure `java.lang.String` `getTypeName`(`kotlin.reflect.a` v2 @kind this) @signature `Lkotlin/reflect/a;.getTypeName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L139728.  v0:= new `java.lang.StringBuilder`;
  #L13972c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L139732.  v1:= v2.`kotlin.reflect.a.a` @type ^`java.lang.reflect.Type` @kind object;
  #L139736.  call temp:= `access$typeToString`(v1) @signature `Lkotlin/reflect/TypesJVMKt;.access$typeToString:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L13973c.  v1:= temp @kind object;
  #L13973e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L139744.  v1:= "[]" @kind object;
  #L139748.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L13974e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L139754.  v0:= temp @kind object;
  #L139756.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.reflect.a` v1 @kind this) @signature `Lkotlin/reflect/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L139704.  call temp:= `getGenericComponentType`(v1) @signature `Lkotlin/reflect/a;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L13970a.  v0:= temp @kind object;
  #L13970c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L139712.  v0:= temp;
  #L139714.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.reflect.a` v1 @kind this) @signature `Lkotlin/reflect/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L139768.  call temp:= `getTypeName`(v1) @signature `Lkotlin/reflect/a;.getTypeName:()Ljava/lang/String;` @kind virtual;
  #L13976e.  v0:= temp @kind object;
  #L139770.  return v0 @kind object;
}
