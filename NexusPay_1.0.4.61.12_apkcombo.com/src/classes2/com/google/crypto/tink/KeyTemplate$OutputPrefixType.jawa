record `com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.google.crypto.tink.KeyTemplate$OutputPrefixType`[] `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.google.crypto.tink.KeyTemplate$OutputPrefixType` `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.CRUNCHY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.KeyTemplate$OutputPrefixType` `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.LEGACY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.KeyTemplate$OutputPrefixType` `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.RAW` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.google.crypto.tink.KeyTemplate$OutputPrefixType` `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.TINK` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L42577c.  v0:= new `com.google.crypto.tink.KeyTemplate$OutputPrefixType`;
  #L425780.  v1:= "TINK" @kind object;
  #L425784.  v2:= 0I;
  #L425786.  call `<init>`(v0, v1, v2) @signature `Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L42578c.  `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.TINK` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` := v0 @kind object;
  #L425790.  v0:= new `com.google.crypto.tink.KeyTemplate$OutputPrefixType`;
  #L425794.  v1:= "LEGACY" @kind object;
  #L425798.  v3:= 1I;
  #L42579a.  call `<init>`(v0, v1, v3) @signature `Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4257a0.  `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.LEGACY` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` := v0 @kind object;
  #L4257a4.  v0:= new `com.google.crypto.tink.KeyTemplate$OutputPrefixType`;
  #L4257a8.  v1:= "RAW" @kind object;
  #L4257ac.  v4:= 2I;
  #L4257ae.  call `<init>`(v0, v1, v4) @signature `Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4257b4.  `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.RAW` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` := v0 @kind object;
  #L4257b8.  v0:= new `com.google.crypto.tink.KeyTemplate$OutputPrefixType`;
  #L4257bc.  v1:= "CRUNCHY" @kind object;
  #L4257c0.  v5:= 3I;
  #L4257c2.  call `<init>`(v0, v1, v5) @signature `Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4257c8.  `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.CRUNCHY` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` := v0 @kind object;
  #L4257cc.  v1:= 4I;
  #L4257ce.  v1:= new `com.google.crypto.tink.KeyTemplate$OutputPrefixType`[v1];
  #L4257d2.  v6:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.TINK` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L4257d6.  v1[v2]:= v6 @kind object;
  #L4257da.  v2:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.LEGACY` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L4257de.  v1[v3]:= v2 @kind object;
  #L4257e2.  v2:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.RAW` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L4257e6.  v1[v4]:= v2 @kind object;
  #L4257ea.  v1[v5]:= v0 @kind object;
  #L4257ee.  `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.$VALUES` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType`[] := v1 @kind object;
  #L4257f2.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.KeyTemplate$OutputPrefixType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L425804.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L42580a.  return @kind void;
}
procedure `com.google.crypto.tink.KeyTemplate$OutputPrefixType` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;.valueOf:(Ljava/lang/String;)Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L425734.  v0:= constclass @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L425738.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L42573e.  v1:= temp @kind object;
  #L425740.  v1:= (`com.google.crypto.tink.KeyTemplate$OutputPrefixType`) v1 @kind object;
  #L425744.  return v1 @kind object;
}
procedure `com.google.crypto.tink.KeyTemplate$OutputPrefixType`[] `values`() @signature `Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;.values:()[Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L425758.  v0:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.$VALUES` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType`[] @kind object;
  #L42575c.  call temp:= `clone`(v0) @signature `[Lcom/google/crypto/tink/KeyTemplate$OutputPrefixType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L425762.  v0:= temp @kind object;
  #L425764.  v0:= (`com.google.crypto.tink.KeyTemplate$OutputPrefixType`[]) v0 @kind object;
  #L425768.  return v0 @kind object;
}
