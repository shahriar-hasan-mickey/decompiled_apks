record `com.google.crypto.tink.KeyManagerImpl` @kind class @AccessFlag PUBLIC extends `com.google.crypto.tink.KeyManager` @kind interface {
  `com.google.crypto.tink.KeyTypeManager` `com.google.crypto.tink.KeyManagerImpl.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.google.crypto.tink.KeyManagerImpl.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.KeyManagerImpl` v3 @kind this, `com.google.crypto.tink.KeyTypeManager` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.<init>:(Lcom/google/crypto/tink/KeyTypeManager;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L425578.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42557e.  call temp:= `supportedPrimitives`(v4) @signature `Lcom/google/crypto/tink/KeyTypeManager;.supportedPrimitives:()Ljava/util/Set;` @kind virtual;
  #L425584.  v0:= temp @kind object;
  #L425586.  call temp:= `contains`(v0, v5) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L42558c.  v0:= temp;
  #L42558e.  if v0 != 0 then goto L4255de;
  #L425592.  v0:= constclass @type ^`java.lang.Void` @kind object;
  #L425596.  call temp:= `equals`(v0, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L42559c.  v0:= temp;
  #L42559e.  if v0 == 0 then goto L4255a4;
  #L4255a2.  goto L4255de;
  #L4255a4.  v0:= new `java.lang.IllegalArgumentException`;
  #L4255a8.  v1:= 2I;
  #L4255aa.  v1:= new `java.lang.Object`[v1];
  #L4255ae.  v2:= 0I;
  #L4255b0.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L4255b6.  v4:= temp @kind object;
  #L4255b8.  v1[v2]:= v4 @kind object;
  #L4255bc.  v4:= 1I;
  #L4255be.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L4255c4.  v5:= temp @kind object;
  #L4255c6.  v1[v4]:= v5 @kind object;
  #L4255ca.  v4:= "Given internalKeyMananger %s does not support primitive class %s" @kind object;
  #L4255ce.  call temp:= `format`(v4, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4255d4.  v4:= temp @kind object;
  #L4255d6.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4255dc.  throw v0;
  #L4255de.  v3.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` := v4 @kind object;
  #L4255e2.  v3.`com.google.crypto.tink.KeyManagerImpl.b` @type ^`java.lang.Class` := v5 @kind object;
  #L4255e6.  return @kind void;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.a:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4253e0.  call temp:= `b`(v0, v1, v2) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.b:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @kind static;
  #L4253e6.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.b:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L4253f8.  call temp:= `isInstance`(v2, v0) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L4253fe.  v2:= temp;
  #L425400.  if v2 == 0 then goto L425406;
  #L425404.  return v0 @kind object;
  #L425406.  v0:= new `java.security.GeneralSecurityException`;
  #L42540a.  call `<init>`(v0, v1) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L425410.  throw v0;
}
procedure `com.google.crypto.tink.KeyManagerImpl$a` `c`(`com.google.crypto.tink.KeyManagerImpl` v2 @kind this) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.c:()Lcom/google/crypto/tink/KeyManagerImpl$a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L425250.  v0:= new `com.google.crypto.tink.KeyManagerImpl$a`;
  #L425254.  v1:= v2.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L425258.  call temp:= `keyFactory`(v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.keyFactory:()Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;` @kind virtual;
  #L42525e.  v1:= temp @kind object;
  #L425260.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/KeyManagerImpl$a;.<init>:(Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;)V` @kind direct;
  #L425266.  return v0 @kind object;
}
procedure `java.lang.Object` `d`(`com.google.crypto.tink.KeyManagerImpl` v2 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v3 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.d:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L425508.  v0:= constclass @type ^`java.lang.Void` @kind object;
  #L42550c.  v1:= v2.`com.google.crypto.tink.KeyManagerImpl.b` @type ^`java.lang.Class` @kind object;
  #L425510.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L425516.  v0:= temp;
  #L425518.  if v0 != 0 then goto L425538;
  #L42551c.  v0:= v2.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L425520.  call `validateKey`(v0, v3) @signature `Lcom/google/crypto/tink/KeyTypeManager;.validateKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @kind virtual;
  #L425526.  v0:= v2.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L42552a.  v1:= v2.`com.google.crypto.tink.KeyManagerImpl.b` @type ^`java.lang.Class` @kind object;
  #L42552e.  call temp:= `getPrimitive`(v0, v3, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.getPrimitive:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L425534.  v3:= temp @kind object;
  #L425536.  return v3 @kind object;
  #L425538.  v3:= new `java.security.GeneralSecurityException`;
  #L42553c.  v0:= "Cannot create a primitive for Void" @kind object;
  #L425540.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L425546.  throw v3;
}
procedure `boolean` `doesSupport`(`com.google.crypto.tink.KeyManagerImpl` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.doesSupport:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L42522c.  call temp:= `getKeyType`(v1) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L425232.  v0:= temp @kind object;
  #L425234.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L42523a.  v2:= temp;
  #L42523c.  return v2;
}
procedure `java.lang.String` `getKeyType`(`com.google.crypto.tink.KeyManagerImpl` v1 @kind this) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.getKeyType:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425558.  v0:= v1.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L42555c.  call temp:= `getKeyType`(v0) @signature `Lcom/google/crypto/tink/KeyTypeManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L425562.  v0:= temp @kind object;
  #L425564.  return v0 @kind object;
}
procedure `java.lang.Object` `getPrimitive`(`com.google.crypto.tink.KeyManagerImpl` v3 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v4 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.getPrimitive:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L425424.  v0:= v3.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L425428.  call temp:= `parseKey`(v0, v4) @signature `Lcom/google/crypto/tink/KeyTypeManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @kind virtual;
  #L42542e.  v4:= temp @kind object;
  #L425430.  call temp:= `d`(v3, v4) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.d:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @kind direct;
  #L425436.  v4:= temp @kind object;
  #L425438.  return v4 @kind object;
  #L42543a.  v4:= Exception @type ^`com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @kind object;
  #L42543c.  v0:= new `java.security.GeneralSecurityException`;
  #L425440.  v1:= new `java.lang.StringBuilder`;
  #L425444.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42544a.  v2:= "Failures parsing proto of type " @kind object;
  #L42544e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L425454.  v2:= v3.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L425458.  call temp:= `getKeyClass`(v2) @signature `Lcom/google/crypto/tink/KeyTypeManager;.getKeyClass:()Ljava/lang/Class;` @kind virtual;
  #L42545e.  v2:= temp @kind object;
  #L425460.  call temp:= `getName`(v2) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L425466.  v2:= temp @kind object;
  #L425468.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42546e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L425474.  v1:= temp @kind object;
  #L425476.  call `<init>`(v0, v1, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L42547c.  throw v0;
  catch `com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @[L425424..L425438] goto L42543a;
}
procedure `java.lang.Object` `getPrimitive`(`com.google.crypto.tink.KeyManagerImpl` v2 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v3 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.getPrimitive:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L4254a0.  v0:= new `java.lang.StringBuilder`;
  #L4254a4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4254aa.  v1:= "Expected proto of type " @kind object;
  #L4254ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4254b4.  v1:= v2.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L4254b8.  call temp:= `getKeyClass`(v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.getKeyClass:()Ljava/lang/Class;` @kind virtual;
  #L4254be.  v1:= temp @kind object;
  #L4254c0.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L4254c6.  v1:= temp @kind object;
  #L4254c8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4254ce.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4254d4.  v0:= temp @kind object;
  #L4254d6.  v1:= v2.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L4254da.  call temp:= `getKeyClass`(v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.getKeyClass:()Ljava/lang/Class;` @kind virtual;
  #L4254e0.  v1:= temp @kind object;
  #L4254e2.  call temp:= `b`(v3, v0, v1) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.b:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @kind static;
  #L4254e8.  v3:= (`com.google.crypto.tink.shaded.protobuf.MessageLite`) v3 @kind object;
  #L4254ec.  call temp:= `d`(v2, v3) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.d:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @kind direct;
  #L4254f2.  v3:= temp @kind object;
  #L4254f4.  return v3 @kind object;
}
procedure `java.lang.Class` `getPrimitiveClass`(`com.google.crypto.tink.KeyManagerImpl` v1 @kind this) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.getPrimitiveClass:()Ljava/lang/Class;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4253c8.  v0:= v1.`com.google.crypto.tink.KeyManagerImpl.b` @type ^`java.lang.Class` @kind object;
  #L4253cc.  return v0 @kind object;
}
procedure `int` `getVersion`(`com.google.crypto.tink.KeyManagerImpl` v1 @kind this) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.getVersion:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4253a8.  v0:= v1.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L4253ac.  call temp:= `getVersion`(v0) @signature `Lcom/google/crypto/tink/KeyTypeManager;.getVersion:()I` @kind virtual;
  #L4253b2.  v0:= temp;
  #L4253b4.  return v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `newKey`(`com.google.crypto.tink.KeyManagerImpl` v3 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v4 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.newKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L425304.  call temp:= `c`(v3) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.c:()Lcom/google/crypto/tink/KeyManagerImpl$a;` @kind direct;
  #L42530a.  v0:= temp @kind object;
  #L42530c.  call temp:= `b`(v0, v4) @signature `Lcom/google/crypto/tink/KeyManagerImpl$a;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @kind virtual;
  #L425312.  v4:= temp @kind object;
  #L425314.  return v4 @kind object;
  #L425316.  v4:= Exception @type ^`com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @kind object;
  #L425318.  v0:= new `java.security.GeneralSecurityException`;
  #L42531c.  v1:= new `java.lang.StringBuilder`;
  #L425320.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L425326.  v2:= "Failures parsing proto of type " @kind object;
  #L42532a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L425330.  v2:= v3.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L425334.  call temp:= `keyFactory`(v2) @signature `Lcom/google/crypto/tink/KeyTypeManager;.keyFactory:()Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;` @kind virtual;
  #L42533a.  v2:= temp @kind object;
  #L42533c.  call temp:= `getKeyFormatClass`(v2) @signature `Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;.getKeyFormatClass:()Ljava/lang/Class;` @kind virtual;
  #L425342.  v2:= temp @kind object;
  #L425344.  call temp:= `getName`(v2) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L42534a.  v2:= temp @kind object;
  #L42534c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L425352.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L425358.  v1:= temp @kind object;
  #L42535a.  call `<init>`(v0, v1, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L425360.  throw v0;
  catch `com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @[L425304..L425314] goto L425316;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `newKey`(`com.google.crypto.tink.KeyManagerImpl` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v2 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.newKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L425384.  call temp:= `c`(v1) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.c:()Lcom/google/crypto/tink/KeyManagerImpl$a;` @kind direct;
  #L42538a.  v0:= temp @kind object;
  #L42538c.  call temp:= `a`(v0, v2) @signature `Lcom/google/crypto/tink/KeyManagerImpl$a;.a:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @kind virtual;
  #L425392.  v2:= temp @kind object;
  #L425394.  return v2 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyData` `newKeyData`(`com.google.crypto.tink.KeyManagerImpl` v2 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v3 @kind object) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.newKeyData:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyData;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L425278.  call temp:= `c`(v2) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.c:()Lcom/google/crypto/tink/KeyManagerImpl$a;` @kind direct;
  #L42527e.  v0:= temp @kind object;
  #L425280.  call temp:= `b`(v0, v3) @signature `Lcom/google/crypto/tink/KeyManagerImpl$a;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @kind virtual;
  #L425286.  v3:= temp @kind object;
  #L425288.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyData;.newBuilder:()Lcom/google/crypto/tink/proto/KeyData$Builder;` @kind static;
  #L42528e.  v0:= temp @kind object;
  #L425290.  call temp:= `getKeyType`(v2) @signature `Lcom/google/crypto/tink/KeyManagerImpl;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L425296.  v1:= temp @kind object;
  #L425298.  call temp:= `setTypeUrl`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeyData$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyData$Builder;` @kind virtual;
  #L42529e.  v0:= temp @kind object;
  #L4252a0.  call temp:= `toByteString`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/MessageLite;.toByteString:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind interface;
  #L4252a6.  v3:= temp @kind object;
  #L4252a8.  call temp:= `setValue`(v0, v3) @signature `Lcom/google/crypto/tink/proto/KeyData$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyData$Builder;` @kind virtual;
  #L4252ae.  v3:= temp @kind object;
  #L4252b0.  v0:= v2.`com.google.crypto.tink.KeyManagerImpl.a` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L4252b4.  call temp:= `keyMaterialType`(v0) @signature `Lcom/google/crypto/tink/KeyTypeManager;.keyMaterialType:()Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @kind virtual;
  #L4252ba.  v0:= temp @kind object;
  #L4252bc.  call temp:= `setKeyMaterialType`(v3, v0) @signature `Lcom/google/crypto/tink/proto/KeyData$Builder;.setKeyMaterialType:(Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;)Lcom/google/crypto/tink/proto/KeyData$Builder;` @kind virtual;
  #L4252c2.  v3:= temp @kind object;
  #L4252c4.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4252ca.  v3:= temp @kind object;
  #L4252cc.  v3:= (`com.google.crypto.tink.proto.KeyData`) v3 @kind object;
  #L4252d0.  return v3 @kind object;
  #L4252d2.  v3:= Exception @type ^`com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @kind object;
  #L4252d4.  v0:= new `java.security.GeneralSecurityException`;
  #L4252d8.  v1:= "Unexpected proto" @kind object;
  #L4252dc.  call `<init>`(v0, v1, v3) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L4252e2.  throw v0;
  catch `com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @[L425278..L4252d0] goto L4252d2;
}
