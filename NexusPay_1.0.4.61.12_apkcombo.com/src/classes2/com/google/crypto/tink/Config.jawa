record `com.google.crypto.tink.Config` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`com.google.crypto.tink.Config` v0 @kind this) @signature `Lcom/google/crypto/tink/Config;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L423f7c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L423f82.  return @kind void;
}
procedure `void` `a`(`com.google.crypto.tink.proto.KeyTypeEntry` v1 @kind object) @signature `Lcom/google/crypto/tink/Config;.a:(Lcom/google/crypto/tink/proto/KeyTypeEntry;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L424100.  call temp:= `getTypeUrl`(v1) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getTypeUrl:()Ljava/lang/String;` @kind virtual;
  #L424106.  v0:= temp @kind object;
  #L424108.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L42410e.  v0:= temp;
  #L424110.  if v0 != 0 then goto L42415e;
  #L424114.  call temp:= `getPrimitiveName`(v1) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getPrimitiveName:()Ljava/lang/String;` @kind virtual;
  #L42411a.  v0:= temp @kind object;
  #L42411c.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L424122.  v0:= temp;
  #L424124.  if v0 != 0 then goto L42414e;
  #L424128.  call temp:= `getCatalogueName`(v1) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L42412e.  v1:= temp @kind object;
  #L424130.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L424136.  v1:= temp;
  #L424138.  if v1 != 0 then goto L42413e;
  #L42413c.  return @kind void;
  #L42413e.  v1:= new `java.security.GeneralSecurityException`;
  #L424142.  v0:= "Missing catalogue_name." @kind object;
  #L424146.  call `<init>`(v1, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42414c.  throw v1;
  #L42414e.  v1:= new `java.security.GeneralSecurityException`;
  #L424152.  v0:= "Missing primitive_name." @kind object;
  #L424156.  call `<init>`(v1, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42415c.  throw v1;
  #L42415e.  v1:= new `java.security.GeneralSecurityException`;
  #L424162.  v0:= "Missing type_url." @kind object;
  #L424166.  call `<init>`(v1, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42416c.  throw v1;
}
procedure `com.google.crypto.tink.proto.KeyTypeEntry` `getTinkKeyTypeEntry`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `boolean` v6 ) @signature `Lcom/google/crypto/tink/Config;.getTinkKeyTypeEntry:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZ)Lcom/google/crypto/tink/proto/KeyTypeEntry;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L423f0c.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;` @kind static;
  #L423f12.  v0:= temp @kind object;
  #L423f14.  call temp:= `setPrimitiveName`(v0, v3) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;.setPrimitiveName:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;` @kind virtual;
  #L423f1a.  v3:= temp @kind object;
  #L423f1c.  v0:= new `java.lang.StringBuilder`;
  #L423f20.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L423f26.  v1:= "type.googleapis.com/google.crypto.tink." @kind object;
  #L423f2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L423f30.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L423f36.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L423f3c.  v4:= temp @kind object;
  #L423f3e.  call temp:= `setTypeUrl`(v3, v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;` @kind virtual;
  #L423f44.  v3:= temp @kind object;
  #L423f46.  call temp:= `setKeyManagerVersion`(v3, v5) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;.setKeyManagerVersion:(I)Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;` @kind virtual;
  #L423f4c.  v3:= temp @kind object;
  #L423f4e.  call temp:= `setNewKeyAllowed`(v3, v6) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;.setNewKeyAllowed:(Z)Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;` @kind virtual;
  #L423f54.  v3:= temp @kind object;
  #L423f56.  call temp:= `setCatalogueName`(v3, v2) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;.setCatalogueName:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTypeEntry$Builder;` @kind virtual;
  #L423f5c.  v2:= temp @kind object;
  #L423f5e.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L423f64.  v2:= temp @kind object;
  #L423f66.  v2:= (`com.google.crypto.tink.proto.KeyTypeEntry`) v2 @kind object;
  #L423f6a.  return v2 @kind object;
}
procedure `void` `register`(`com.google.crypto.tink.proto.RegistryConfig` v1 @kind object) @signature `Lcom/google/crypto/tink/Config;.register:(Lcom/google/crypto/tink/proto/RegistryConfig;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L423f94.  call temp:= `getEntryList`(v1) @signature `Lcom/google/crypto/tink/proto/RegistryConfig;.getEntryList:()Ljava/util/List;` @kind virtual;
  #L423f9a.  v1:= temp @kind object;
  #L423f9c.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L423fa2.  v1:= temp @kind object;
  #L423fa4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L423faa.  v0:= temp;
  #L423fac.  if v0 == 0 then goto L423fc4;
  #L423fb0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L423fb6.  v0:= temp @kind object;
  #L423fb8.  v0:= (`com.google.crypto.tink.proto.KeyTypeEntry`) v0 @kind object;
  #L423fbc.  call `registerKeyType`(v0) @signature `Lcom/google/crypto/tink/Config;.registerKeyType:(Lcom/google/crypto/tink/proto/KeyTypeEntry;)V` @kind static;
  #L423fc2.  goto L423fa4;
  #L423fc4.  return @kind void;
}
procedure `void` `registerKeyType`(`com.google.crypto.tink.proto.KeyTypeEntry` v4 @kind object) @signature `Lcom/google/crypto/tink/Config;.registerKeyType:(Lcom/google/crypto/tink/proto/KeyTypeEntry;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L423fd8.  call `a`(v4) @signature `Lcom/google/crypto/tink/Config;.a:(Lcom/google/crypto/tink/proto/KeyTypeEntry;)V` @kind static;
  #L423fde.  call temp:= `getCatalogueName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L423fe4.  v0:= temp @kind object;
  #L423fe6.  v1:= "TinkAead" @kind object;
  #L423fea.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L423ff0.  v0:= temp;
  #L423ff2.  if v0 != 0 then goto L4240ec;
  #L423ff6.  call temp:= `getCatalogueName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L423ffc.  v0:= temp @kind object;
  #L423ffe.  v1:= "TinkMac" @kind object;
  #L424002.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L424008.  v0:= temp;
  #L42400a.  if v0 != 0 then goto L4240ec;
  #L42400e.  call temp:= `getCatalogueName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L424014.  v0:= temp @kind object;
  #L424016.  v1:= "TinkHybridDecrypt" @kind object;
  #L42401a.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L424020.  v0:= temp;
  #L424022.  if v0 != 0 then goto L4240ec;
  #L424026.  call temp:= `getCatalogueName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L42402c.  v0:= temp @kind object;
  #L42402e.  v1:= "TinkHybridEncrypt" @kind object;
  #L424032.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L424038.  v0:= temp;
  #L42403a.  if v0 != 0 then goto L4240ec;
  #L42403e.  call temp:= `getCatalogueName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L424044.  v0:= temp @kind object;
  #L424046.  v1:= "TinkPublicKeySign" @kind object;
  #L42404a.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L424050.  v0:= temp;
  #L424052.  if v0 != 0 then goto L4240ec;
  #L424056.  call temp:= `getCatalogueName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L42405c.  v0:= temp @kind object;
  #L42405e.  v1:= "TinkPublicKeyVerify" @kind object;
  #L424062.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L424068.  v0:= temp;
  #L42406a.  if v0 != 0 then goto L4240ec;
  #L42406e.  call temp:= `getCatalogueName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L424074.  v0:= temp @kind object;
  #L424076.  v1:= "TinkStreamingAead" @kind object;
  #L42407a.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L424080.  v0:= temp;
  #L424082.  if v0 != 0 then goto L4240ec;
  #L424086.  call temp:= `getCatalogueName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L42408c.  v0:= temp @kind object;
  #L42408e.  v1:= "TinkDeterministicAead" @kind object;
  #L424092.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L424098.  v0:= temp;
  #L42409a.  if v0 == 0 then goto L4240a0;
  #L42409e.  goto L4240ec;
  #L4240a0.  call temp:= `getCatalogueName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getCatalogueName:()Ljava/lang/String;` @kind virtual;
  #L4240a6.  v0:= temp @kind object;
  #L4240a8.  call temp:= `getCatalogue`(v0) @signature `Lcom/google/crypto/tink/Registry;.getCatalogue:(Ljava/lang/String;)Lcom/google/crypto/tink/Catalogue;` @kind static;
  #L4240ae.  v0:= temp @kind object;
  #L4240b0.  call temp:= `getPrimitiveWrapper`(v0) @signature `Lcom/google/crypto/tink/Catalogue;.getPrimitiveWrapper:()Lcom/google/crypto/tink/PrimitiveWrapper;` @kind interface;
  #L4240b6.  v1:= temp @kind object;
  #L4240b8.  call `registerPrimitiveWrapper`(v1) @signature `Lcom/google/crypto/tink/Registry;.registerPrimitiveWrapper:(Lcom/google/crypto/tink/PrimitiveWrapper;)V` @kind static;
  #L4240be.  call temp:= `getTypeUrl`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getTypeUrl:()Ljava/lang/String;` @kind virtual;
  #L4240c4.  v1:= temp @kind object;
  #L4240c6.  call temp:= `getPrimitiveName`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getPrimitiveName:()Ljava/lang/String;` @kind virtual;
  #L4240cc.  v2:= temp @kind object;
  #L4240ce.  call temp:= `getKeyManagerVersion`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getKeyManagerVersion:()I` @kind virtual;
  #L4240d4.  v3:= temp;
  #L4240d6.  call temp:= `getKeyManager`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/Catalogue;.getKeyManager:(Ljava/lang/String;Ljava/lang/String;I)Lcom/google/crypto/tink/KeyManager;` @kind interface;
  #L4240dc.  v0:= temp @kind object;
  #L4240de.  call temp:= `getNewKeyAllowed`(v4) @signature `Lcom/google/crypto/tink/proto/KeyTypeEntry;.getNewKeyAllowed:()Z` @kind virtual;
  #L4240e4.  v4:= temp;
  #L4240e6.  call `registerKeyManager`(v0, v4) @signature `Lcom/google/crypto/tink/Registry;.registerKeyManager:(Lcom/google/crypto/tink/KeyManager;Z)V` @kind static;
  #L4240ec.  return @kind void;
}
