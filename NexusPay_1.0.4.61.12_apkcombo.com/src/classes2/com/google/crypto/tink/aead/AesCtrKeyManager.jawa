record `com.google.crypto.tink.aead.AesCtrKeyManager` @kind class @AccessFlag PUBLIC extends `com.google.crypto.tink.KeyTypeManager` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.aead.AesCtrKeyManager` v4 @kind this) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L429c58.  v0:= constclass @type ^`com.google.crypto.tink.proto.AesCtrKey` @kind object;
  #L429c5c.  v1:= 1I;
  #L429c5e.  v1:= new `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory`[v1];
  #L429c62.  v2:= new `com.google.crypto.tink.aead.AesCtrKeyManager$a`;
  #L429c66.  v3:= constclass @type ^`com.google.crypto.tink.subtle.IndCpaCipher` @kind object;
  #L429c6a.  call `<init>`(v2, v3) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager$a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L429c70.  v3:= 0I;
  #L429c72.  v1[v3]:= v2 @kind object;
  #L429c76.  call `<init>`(v4, v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.<init>:(Ljava/lang/Class;[Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;)V` @kind direct;
  #L429c7c.  return @kind void;
}
procedure `void` `b`(`com.google.crypto.tink.aead.AesCtrKeyManager` v0 @kind object, `com.google.crypto.tink.proto.AesCtrParams` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.b:(Lcom/google/crypto/tink/aead/AesCtrKeyManager;Lcom/google/crypto/tink/proto/AesCtrParams;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L429c90.  call `c`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.c:(Lcom/google/crypto/tink/proto/AesCtrParams;)V` @kind direct;
  #L429c96.  return @kind void;
}
procedure `void` `c`(`com.google.crypto.tink.aead.AesCtrKeyManager` v2 @kind this, `com.google.crypto.tink.proto.AesCtrParams` v3 @kind object) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.c:(Lcom/google/crypto/tink/proto/AesCtrParams;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L429d34.  call temp:= `getIvSize`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrParams;.getIvSize:()I` @kind virtual;
  #L429d3a.  v0:= temp;
  #L429d3c.  v1:= 12I;
  #L429d40.  if v0 < v1 then goto L429d56;
  #L429d44.  call temp:= `getIvSize`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrParams;.getIvSize:()I` @kind virtual;
  #L429d4a.  v3:= temp;
  #L429d4c.  v0:= 16I;
  #L429d50.  if v3 > v0 then goto L429d56;
  #L429d54.  return @kind void;
  #L429d56.  v3:= new `java.security.GeneralSecurityException`;
  #L429d5a.  v0:= "invalid IV size" @kind object;
  #L429d5e.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L429d64.  throw v3;
}
procedure `void` `register`(`boolean` v1 ) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.register:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L429ca8.  v0:= new `com.google.crypto.tink.aead.AesCtrKeyManager`;
  #L429cac.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.<init>:()V` @kind direct;
  #L429cb2.  call `registerKeyManager`(v0, v1) @signature `Lcom/google/crypto/tink/Registry;.registerKeyManager:(Lcom/google/crypto/tink/KeyTypeManager;Z)V` @kind static;
  #L429cb8.  return @kind void;
}
procedure `java.lang.String` `getKeyType`(`com.google.crypto.tink.aead.AesCtrKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.getKeyType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429c40.  v0:= "type.googleapis.com/google.crypto.tink.AesCtrKey" @kind object;
  #L429c44.  return v0 @kind object;
}
procedure `int` `getVersion`(`com.google.crypto.tink.aead.AesCtrKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.getVersion:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429c2c.  v0:= 0I;
  #L429c2e.  return v0;
}
procedure `com.google.crypto.tink.KeyTypeManager$KeyFactory` `keyFactory`(`com.google.crypto.tink.aead.AesCtrKeyManager` v2 @kind this) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.keyFactory:()Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L429bb4.  v0:= new `com.google.crypto.tink.aead.AesCtrKeyManager$b`;
  #L429bb8.  v1:= constclass @type ^`com.google.crypto.tink.proto.AesCtrKeyFormat` @kind object;
  #L429bbc.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager$b;.<init>:(Lcom/google/crypto/tink/aead/AesCtrKeyManager;Ljava/lang/Class;)V` @kind direct;
  #L429bc2.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyData$KeyMaterialType` `keyMaterialType`(`com.google.crypto.tink.aead.AesCtrKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.keyMaterialType:()Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429bf8.  v0:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.SYMMETRIC` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L429bfc.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.AesCtrKey` `parseKey`(`com.google.crypto.tink.aead.AesCtrKeyManager` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesCtrKey;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429bd4.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L429bda.  v0:= temp @kind object;
  #L429bdc.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/AesCtrKey;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/AesCtrKey;` @kind static;
  #L429be2.  v2:= temp @kind object;
  #L429be4.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKey`(`com.google.crypto.tink.aead.AesCtrKeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L429c10.  call temp:= `parseKey`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesCtrKey;` @kind virtual;
  #L429c16.  v1:= temp @kind object;
  #L429c18.  return v1 @kind object;
}
procedure `void` `validateKey`(`com.google.crypto.tink.aead.AesCtrKeyManager` v2 @kind this, `com.google.crypto.tink.proto.AesCtrKey` v3 @kind object) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.validateKey:(Lcom/google/crypto/tink/proto/AesCtrKey;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L429ccc.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrKey;.getVersion:()I` @kind virtual;
  #L429cd2.  v0:= temp;
  #L429cd4.  call temp:= `getVersion`(v2) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.getVersion:()I` @kind virtual;
  #L429cda.  v1:= temp;
  #L429cdc.  call `validateVersion`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateVersion:(II)V` @kind static;
  #L429ce2.  call temp:= `getKeyValue`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrKey;.getKeyValue:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L429ce8.  v0:= temp @kind object;
  #L429cea.  call temp:= `size`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L429cf0.  v0:= temp;
  #L429cf2.  call `validateAesKeySize`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateAesKeySize:(I)V` @kind static;
  #L429cf8.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrKey;.getParams:()Lcom/google/crypto/tink/proto/AesCtrParams;` @kind virtual;
  #L429cfe.  v3:= temp @kind object;
  #L429d00.  call `c`(v2, v3) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.c:(Lcom/google/crypto/tink/proto/AesCtrParams;)V` @kind direct;
  #L429d06.  return @kind void;
}
procedure `void` `validateKey`(`com.google.crypto.tink.aead.AesCtrKeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.validateKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L429d18.  v1:= (`com.google.crypto.tink.proto.AesCtrKey`) v1 @kind object;
  #L429d1c.  call `validateKey`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.validateKey:(Lcom/google/crypto/tink/proto/AesCtrKey;)V` @kind virtual;
  #L429d22.  return @kind void;
}
