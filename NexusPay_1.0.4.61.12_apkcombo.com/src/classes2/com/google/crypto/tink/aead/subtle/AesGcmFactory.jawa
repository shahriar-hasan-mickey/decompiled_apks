record `com.google.crypto.tink.aead.subtle.AesGcmFactory` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.aead.subtle.AeadFactory` @kind interface {
  `int` `com.google.crypto.tink.aead.subtle.AesGcmFactory.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.aead.subtle.AesGcmFactory` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/aead/subtle/AesGcmFactory;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L42b9d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42b9de.  call temp:= `a`(v1) @signature `Lcom/google/crypto/tink/aead/subtle/AesGcmFactory;.a:(I)I` @kind static;
  #L42b9e4.  v0.`com.google.crypto.tink.aead.subtle.AesGcmFactory.a` @type ^`int` := v1;
  #L42b9e8.  return @kind void;
}
procedure `int` `a`(`int` v3 ) @signature `Lcom/google/crypto/tink/aead/subtle/AesGcmFactory;.a:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L42b988.  v0:= 16I;
  #L42b98c.  if v3 == v0 then goto L42b9c6;
  #L42b990.  v0:= 32I;
  #L42b994.  if v3 != v0 then goto L42b99a;
  #L42b998.  goto L42b9c6;
  #L42b99a.  v0:= new `java.security.InvalidAlgorithmParameterException`;
  #L42b99e.  v1:= 1I;
  #L42b9a0.  v1:= new `java.lang.Object`[v1];
  #L42b9a4.  v2:= 0I;
  #L42b9a6.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42b9ac.  v3:= temp @kind object;
  #L42b9ae.  v1[v2]:= v3 @kind object;
  #L42b9b2.  v3:= "Invalid AES key size, expected 16 or 32, but got %d" @kind object;
  #L42b9b6.  call temp:= `format`(v3, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L42b9bc.  v3:= temp @kind object;
  #L42b9be.  call `<init>`(v0, v3) @signature `Ljava/security/InvalidAlgorithmParameterException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42b9c4.  throw v0;
  #L42b9c6.  return v3;
}
procedure `com.google.crypto.tink.Aead` `createAead`(`com.google.crypto.tink.aead.subtle.AesGcmFactory` v4 @kind this, `byte`[] v5 @kind object) @signature `Lcom/google/crypto/tink/aead/subtle/AesGcmFactory;.createAead:([B)Lcom/google/crypto/tink/Aead;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L42b900.  v0:= length @variable v5;
  #L42b902.  call temp:= `getKeySizeInBytes`(v4) @signature `Lcom/google/crypto/tink/aead/subtle/AesGcmFactory;.getKeySizeInBytes:()I` @kind virtual;
  #L42b908.  v1:= temp;
  #L42b90a.  if v0 != v1 then goto L42b91a;
  #L42b90e.  v0:= new `com.google.crypto.tink.subtle.AesGcmJce`;
  #L42b912.  call `<init>`(v0, v5) @signature `Lcom/google/crypto/tink/subtle/AesGcmJce;.<init>:([B)V` @kind direct;
  #L42b918.  return v0 @kind object;
  #L42b91a.  v0:= new `java.security.GeneralSecurityException`;
  #L42b91e.  v1:= 2I;
  #L42b920.  v1:= new `java.lang.Object`[v1];
  #L42b924.  v2:= 0I;
  #L42b926.  call temp:= `getKeySizeInBytes`(v4) @signature `Lcom/google/crypto/tink/aead/subtle/AesGcmFactory;.getKeySizeInBytes:()I` @kind virtual;
  #L42b92c.  v3:= temp;
  #L42b92e.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42b934.  v3:= temp @kind object;
  #L42b936.  v1[v2]:= v3 @kind object;
  #L42b93a.  v2:= 1I;
  #L42b93c.  v5:= length @variable v5;
  #L42b93e.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L42b944.  v5:= temp @kind object;
  #L42b946.  v1[v2]:= v5 @kind object;
  #L42b94a.  v5:= "Symmetric key has incorrect length; expected %s, but got %s" @kind object;
  #L42b94e.  call temp:= `format`(v5, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L42b954.  v5:= temp @kind object;
  #L42b956.  call `<init>`(v0, v5) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42b95c.  throw v0;
}
procedure `int` `getKeySizeInBytes`(`com.google.crypto.tink.aead.subtle.AesGcmFactory` v1 @kind this) @signature `Lcom/google/crypto/tink/aead/subtle/AesGcmFactory;.getKeySizeInBytes:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42b970.  v0:= v1.`com.google.crypto.tink.aead.subtle.AesGcmFactory.a` @type ^`int`;
  #L42b974.  return v0;
}
