record `com.google.crypto.tink.aead.AesGcmSivKeyManager$b` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$KeyFactory` @kind class {
  `com.google.crypto.tink.aead.AesGcmSivKeyManager` `com.google.crypto.tink.aead.AesGcmSivKeyManager$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.aead.AesGcmSivKeyManager$b` v0 @kind this, `com.google.crypto.tink.aead.AesGcmSivKeyManager` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.<init>:(Lcom/google/crypto/tink/aead/AesGcmSivKeyManager;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42a880.  v0.`com.google.crypto.tink.aead.AesGcmSivKeyManager$b.b` @type ^`com.google.crypto.tink.aead.AesGcmSivKeyManager` := v1 @kind object;
  #L42a884.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L42a88a.  return @kind void;
}
procedure `com.google.crypto.tink.proto.AesGcmSivKey` `a`(`com.google.crypto.tink.aead.AesGcmSivKeyManager$b` v1 @kind this, `com.google.crypto.tink.proto.AesGcmSivKeyFormat` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.a:(Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;)Lcom/google/crypto/tink/proto/AesGcmSivKey;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42a6ec.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesGcmSivKey;.newBuilder:()Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;` @kind static;
  #L42a6f2.  v0:= temp @kind object;
  #L42a6f4.  call temp:= `getKeySize`(v2) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;.getKeySize:()I` @kind virtual;
  #L42a6fa.  v2:= temp;
  #L42a6fc.  call temp:= `randBytes`(v2) @signature `Lcom/google/crypto/tink/subtle/Random;.randBytes:(I)[B` @kind static;
  #L42a702.  v2:= temp @kind object;
  #L42a704.  call temp:= `copyFrom`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L42a70a.  v2:= temp @kind object;
  #L42a70c.  call temp:= `setKeyValue`(v0, v2) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;.setKeyValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;` @kind virtual;
  #L42a712.  v2:= temp @kind object;
  #L42a714.  v0:= v1.`com.google.crypto.tink.aead.AesGcmSivKeyManager$b.b` @type ^`com.google.crypto.tink.aead.AesGcmSivKeyManager` @kind object;
  #L42a718.  call temp:= `getVersion`(v0) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager;.getVersion:()I` @kind virtual;
  #L42a71e.  v0:= temp;
  #L42a720.  call temp:= `setVersion`(v2, v0) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;` @kind virtual;
  #L42a726.  v2:= temp @kind object;
  #L42a728.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L42a72e.  v2:= temp @kind object;
  #L42a730.  v2:= (`com.google.crypto.tink.proto.AesGcmSivKey`) v2 @kind object;
  #L42a734.  return v2 @kind object;
}
procedure `com.google.crypto.tink.proto.AesGcmSivKey` `b`(`com.google.crypto.tink.aead.AesGcmSivKeyManager$b` v2 @kind this, `com.google.crypto.tink.proto.AesGcmSivKeyFormat` v3 @kind object, `java.io.InputStream` v4 @kind object) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.b:(Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;Ljava/io/InputStream;)Lcom/google/crypto/tink/proto/AesGcmSivKey;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L42a748.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;.getVersion:()I` @kind virtual;
  #L42a74e.  v0:= temp;
  #L42a750.  v1:= v2.`com.google.crypto.tink.aead.AesGcmSivKeyManager$b.b` @type ^`com.google.crypto.tink.aead.AesGcmSivKeyManager` @kind object;
  #L42a754.  call temp:= `getVersion`(v1) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager;.getVersion:()I` @kind virtual;
  #L42a75a.  v1:= temp;
  #L42a75c.  call `validateVersion`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateVersion:(II)V` @kind static;
  #L42a762.  call temp:= `getKeySize`(v3) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;.getKeySize:()I` @kind virtual;
  #L42a768.  v0:= temp;
  #L42a76a.  v0:= new `byte`[v0];
  #L42a76e.  call temp:= `read`(v4, v0) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L42a774.  v4:= temp;
  #L42a776.  call temp:= `getKeySize`(v3) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;.getKeySize:()I` @kind virtual;
  #L42a77c.  v3:= temp;
  #L42a77e.  if v4 != v3 then goto L42a7bc;
  #L42a782.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesGcmSivKey;.newBuilder:()Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;` @kind static;
  #L42a788.  v3:= temp @kind object;
  #L42a78a.  call temp:= `copyFrom`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L42a790.  v4:= temp @kind object;
  #L42a792.  call temp:= `setKeyValue`(v3, v4) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;.setKeyValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;` @kind virtual;
  #L42a798.  v3:= temp @kind object;
  #L42a79a.  v4:= v2.`com.google.crypto.tink.aead.AesGcmSivKeyManager$b.b` @type ^`com.google.crypto.tink.aead.AesGcmSivKeyManager` @kind object;
  #L42a79e.  call temp:= `getVersion`(v4) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager;.getVersion:()I` @kind virtual;
  #L42a7a4.  v4:= temp;
  #L42a7a6.  call temp:= `setVersion`(v3, v4) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/AesGcmSivKey$Builder;` @kind virtual;
  #L42a7ac.  v3:= temp @kind object;
  #L42a7ae.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L42a7b4.  v3:= temp @kind object;
  #L42a7b6.  v3:= (`com.google.crypto.tink.proto.AesGcmSivKey`) v3 @kind object;
  #L42a7ba.  return v3 @kind object;
  #L42a7bc.  v3:= new `java.security.GeneralSecurityException`;
  #L42a7c0.  v4:= "Not enough pseudorandomness given" @kind object;
  #L42a7c4.  call `<init>`(v3, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42a7ca.  throw v3;
  #L42a7cc.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L42a7ce.  v4:= new `java.security.GeneralSecurityException`;
  #L42a7d2.  v0:= "Reading pseudorandomness failed" @kind object;
  #L42a7d6.  call `<init>`(v4, v0, v3) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L42a7dc.  throw v4;
  catch `java.io.IOException` @[L42a76e..L42a7cc] goto L42a7cc;
}
procedure `com.google.crypto.tink.proto.AesGcmSivKeyFormat` `c`(`com.google.crypto.tink.aead.AesGcmSivKeyManager$b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.c:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42a800.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L42a806.  v0:= temp @kind object;
  #L42a808.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;` @kind static;
  #L42a80e.  v2:= temp @kind object;
  #L42a810.  return v2 @kind object;
}
procedure `java.lang.Object` `createKey`(`com.google.crypto.tink.aead.AesGcmSivKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.createKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L42a840.  v1:= (`com.google.crypto.tink.proto.AesGcmSivKeyFormat`) v1 @kind object;
  #L42a844.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.a:(Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;)Lcom/google/crypto/tink/proto/AesGcmSivKey;` @kind virtual;
  #L42a84a.  v1:= temp @kind object;
  #L42a84c.  return v1 @kind object;
}
procedure `void` `d`(`com.google.crypto.tink.aead.AesGcmSivKeyManager$b` v0 @kind this, `com.google.crypto.tink.proto.AesGcmSivKeyFormat` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.d:(Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;)V` @AccessFlag PUBLIC {
    temp;

  #L42a89c.  call temp:= `getKeySize`(v1) @signature `Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;.getKeySize:()I` @kind virtual;
  #L42a8a2.  v1:= temp;
  #L42a8a4.  call `validateAesKeySize`(v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateAesKeySize:(I)V` @kind static;
  #L42a8aa.  return @kind void;
}
procedure `java.lang.Object` `deriveKey`(`com.google.crypto.tink.aead.AesGcmSivKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object, `java.io.InputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.deriveKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;Ljava/io/InputStream;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L42a860.  v1:= (`com.google.crypto.tink.proto.AesGcmSivKeyFormat`) v1 @kind object;
  #L42a864.  call temp:= `b`(v0, v1, v2) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.b:(Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;Ljava/io/InputStream;)Lcom/google/crypto/tink/proto/AesGcmSivKey;` @kind virtual;
  #L42a86a.  v1:= temp @kind object;
  #L42a86c.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKeyFormat`(`com.google.crypto.tink.aead.AesGcmSivKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.parseKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L42a824.  call temp:= `c`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.c:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;` @kind virtual;
  #L42a82a.  v1:= temp @kind object;
  #L42a82c.  return v1 @kind object;
}
procedure `void` `validateKeyFormat`(`com.google.crypto.tink.aead.AesGcmSivKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.validateKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L42a8bc.  v1:= (`com.google.crypto.tink.proto.AesGcmSivKeyFormat`) v1 @kind object;
  #L42a8c0.  call `d`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AesGcmSivKeyManager$b;.d:(Lcom/google/crypto/tink/proto/AesGcmSivKeyFormat;)V` @kind virtual;
  #L42a8c6.  return @kind void;
}
