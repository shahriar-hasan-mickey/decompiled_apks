record `com.google.crypto.tink.aead.AesCtrHmacAeadKeyManager` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.KeyTypeManager` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.aead.AesCtrHmacAeadKeyManager` v4 @kind this) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L429938.  v0:= constclass @type ^`com.google.crypto.tink.proto.AesCtrHmacAeadKey` @kind object;
  #L42993c.  v1:= 1I;
  #L42993e.  v1:= new `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory`[v1];
  #L429942.  v2:= new `com.google.crypto.tink.aead.AesCtrHmacAeadKeyManager$a`;
  #L429946.  v3:= constclass @type ^`com.google.crypto.tink.Aead` @kind object;
  #L42994a.  call `<init>`(v2, v3) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager$a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L429950.  v3:= 0I;
  #L429952.  v1[v3]:= v2 @kind object;
  #L429956.  call `<init>`(v4, v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.<init>:(Ljava/lang/Class;[Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;)V` @kind direct;
  #L42995c.  return @kind void;
}
procedure `com.google.crypto.tink.KeyTemplate` `aes128CtrHmacSha256Template`() @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.aes128CtrHmacSha256Template:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L429760.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L429764.  v1:= 16I;
  #L429768.  v2:= 32I;
  #L42976c.  call temp:= `b`(v1, v1, v2, v1, v0) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.b:(IIIILcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L429772.  v0:= temp @kind object;
  #L429774.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeyTemplate` `aes256CtrHmacSha256Template`() @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.aes256CtrHmacSha256Template:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L429788.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L42978c.  v1:= 32I;
  #L429790.  v2:= 16I;
  #L429794.  call temp:= `b`(v1, v2, v1, v1, v0) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.b:(IIIILcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L42979a.  v0:= temp @kind object;
  #L42979c.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeyTemplate` `b`(`int` v2 , `int` v3 , `int` v4 , `int` v5 , `com.google.crypto.tink.proto.HashType` v6 @kind object) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.b:(IIIILcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4297b0.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesCtrKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/AesCtrKeyFormat$Builder;` @kind static;
  #L4297b6.  v0:= temp @kind object;
  #L4297b8.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesCtrParams;.newBuilder:()Lcom/google/crypto/tink/proto/AesCtrParams$Builder;` @kind static;
  #L4297be.  v1:= temp @kind object;
  #L4297c0.  call temp:= `setIvSize`(v1, v3) @signature `Lcom/google/crypto/tink/proto/AesCtrParams$Builder;.setIvSize:(I)Lcom/google/crypto/tink/proto/AesCtrParams$Builder;` @kind virtual;
  #L4297c6.  v3:= temp @kind object;
  #L4297c8.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4297ce.  v3:= temp @kind object;
  #L4297d0.  v3:= (`com.google.crypto.tink.proto.AesCtrParams`) v3 @kind object;
  #L4297d4.  call temp:= `setParams`(v0, v3) @signature `Lcom/google/crypto/tink/proto/AesCtrKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/AesCtrParams;)Lcom/google/crypto/tink/proto/AesCtrKeyFormat$Builder;` @kind virtual;
  #L4297da.  v3:= temp @kind object;
  #L4297dc.  call temp:= `setKeySize`(v3, v2) @signature `Lcom/google/crypto/tink/proto/AesCtrKeyFormat$Builder;.setKeySize:(I)Lcom/google/crypto/tink/proto/AesCtrKeyFormat$Builder;` @kind virtual;
  #L4297e2.  v2:= temp @kind object;
  #L4297e4.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4297ea.  v2:= temp @kind object;
  #L4297ec.  v2:= (`com.google.crypto.tink.proto.AesCtrKeyFormat`) v2 @kind object;
  #L4297f0.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/HmacKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/HmacKeyFormat$Builder;` @kind static;
  #L4297f6.  v3:= temp @kind object;
  #L4297f8.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/HmacParams;.newBuilder:()Lcom/google/crypto/tink/proto/HmacParams$Builder;` @kind static;
  #L4297fe.  v0:= temp @kind object;
  #L429800.  call temp:= `setHash`(v0, v6) @signature `Lcom/google/crypto/tink/proto/HmacParams$Builder;.setHash:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/HmacParams$Builder;` @kind virtual;
  #L429806.  v6:= temp @kind object;
  #L429808.  call temp:= `setTagSize`(v6, v5) @signature `Lcom/google/crypto/tink/proto/HmacParams$Builder;.setTagSize:(I)Lcom/google/crypto/tink/proto/HmacParams$Builder;` @kind virtual;
  #L42980e.  v5:= temp @kind object;
  #L429810.  call temp:= `build`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L429816.  v5:= temp @kind object;
  #L429818.  v5:= (`com.google.crypto.tink.proto.HmacParams`) v5 @kind object;
  #L42981c.  call temp:= `setParams`(v3, v5) @signature `Lcom/google/crypto/tink/proto/HmacKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/HmacParams;)Lcom/google/crypto/tink/proto/HmacKeyFormat$Builder;` @kind virtual;
  #L429822.  v3:= temp @kind object;
  #L429824.  call temp:= `setKeySize`(v3, v4) @signature `Lcom/google/crypto/tink/proto/HmacKeyFormat$Builder;.setKeySize:(I)Lcom/google/crypto/tink/proto/HmacKeyFormat$Builder;` @kind virtual;
  #L42982a.  v3:= temp @kind object;
  #L42982c.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L429832.  v3:= temp @kind object;
  #L429834.  v3:= (`com.google.crypto.tink.proto.HmacKeyFormat`) v3 @kind object;
  #L429838.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/AesCtrHmacAeadKeyFormat$Builder;` @kind static;
  #L42983e.  v4:= temp @kind object;
  #L429840.  call temp:= `setAesCtrKeyFormat`(v4, v2) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKeyFormat$Builder;.setAesCtrKeyFormat:(Lcom/google/crypto/tink/proto/AesCtrKeyFormat;)Lcom/google/crypto/tink/proto/AesCtrHmacAeadKeyFormat$Builder;` @kind virtual;
  #L429846.  v2:= temp @kind object;
  #L429848.  call temp:= `setHmacKeyFormat`(v2, v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKeyFormat$Builder;.setHmacKeyFormat:(Lcom/google/crypto/tink/proto/HmacKeyFormat;)Lcom/google/crypto/tink/proto/AesCtrHmacAeadKeyFormat$Builder;` @kind virtual;
  #L42984e.  v2:= temp @kind object;
  #L429850.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L429856.  v2:= temp @kind object;
  #L429858.  v2:= (`com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat`) v2 @kind object;
  #L42985c.  v3:= new `com.google.crypto.tink.aead.AesCtrHmacAeadKeyManager`;
  #L429860.  call `<init>`(v3) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.<init>:()V` @kind direct;
  #L429866.  call temp:= `getKeyType`(v3) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L42986c.  v3:= temp @kind object;
  #L42986e.  call temp:= `toByteArray`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteArray:()[B` @kind virtual;
  #L429874.  v2:= temp @kind object;
  #L429876.  v4:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.TINK` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L42987a.  call temp:= `create`(v3, v2, v4) @signature `Lcom/google/crypto/tink/KeyTemplate;.create:(Ljava/lang/String;[BLcom/google/crypto/tink/KeyTemplate$OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L429880.  v2:= temp @kind object;
  #L429882.  return v2 @kind object;
}
procedure `void` `register`(`boolean` v1 ) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.register:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L429970.  v0:= new `com.google.crypto.tink.aead.AesCtrHmacAeadKeyManager`;
  #L429974.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.<init>:()V` @kind direct;
  #L42997a.  call `registerKeyManager`(v0, v1) @signature `Lcom/google/crypto/tink/Registry;.registerKeyManager:(Lcom/google/crypto/tink/KeyTypeManager;Z)V` @kind static;
  #L429980.  return @kind void;
}
procedure `java.lang.String` `getKeyType`(`com.google.crypto.tink.aead.AesCtrHmacAeadKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.getKeyType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429920.  v0:= "type.googleapis.com/google.crypto.tink.AesCtrHmacAeadKey" @kind object;
  #L429924.  return v0 @kind object;
}
procedure `int` `getVersion`(`com.google.crypto.tink.aead.AesCtrHmacAeadKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.getVersion:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L42990c.  v0:= 0I;
  #L42990e.  return v0;
}
procedure `com.google.crypto.tink.KeyTypeManager$KeyFactory` `keyFactory`(`com.google.crypto.tink.aead.AesCtrHmacAeadKeyManager` v2 @kind this) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.keyFactory:()Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L429894.  v0:= new `com.google.crypto.tink.aead.AesCtrHmacAeadKeyManager$b`;
  #L429898.  v1:= constclass @type ^`com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat` @kind object;
  #L42989c.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager$b;.<init>:(Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;Ljava/lang/Class;)V` @kind direct;
  #L4298a2.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyData$KeyMaterialType` `keyMaterialType`(`com.google.crypto.tink.aead.AesCtrHmacAeadKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.keyMaterialType:()Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4298d8.  v0:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.SYMMETRIC` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L4298dc.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.AesCtrHmacAeadKey` `parseKey`(`com.google.crypto.tink.aead.AesCtrHmacAeadKeyManager` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4298b4.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L4298ba.  v0:= temp @kind object;
  #L4298bc.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey;` @kind static;
  #L4298c2.  v2:= temp @kind object;
  #L4298c4.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKey`(`com.google.crypto.tink.aead.AesCtrHmacAeadKeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4298f0.  call temp:= `parseKey`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey;` @kind virtual;
  #L4298f6.  v1:= temp @kind object;
  #L4298f8.  return v1 @kind object;
}
procedure `void` `validateKey`(`com.google.crypto.tink.aead.AesCtrHmacAeadKeyManager` v2 @kind this, `com.google.crypto.tink.proto.AesCtrHmacAeadKey` v3 @kind object) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.validateKey:(Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L429994.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey;.getVersion:()I` @kind virtual;
  #L42999a.  v0:= temp;
  #L42999c.  call temp:= `getVersion`(v2) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.getVersion:()I` @kind virtual;
  #L4299a2.  v1:= temp;
  #L4299a4.  call `validateVersion`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateVersion:(II)V` @kind static;
  #L4299aa.  v0:= new `com.google.crypto.tink.aead.AesCtrKeyManager`;
  #L4299ae.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.<init>:()V` @kind direct;
  #L4299b4.  call temp:= `getAesCtrKey`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey;.getAesCtrKey:()Lcom/google/crypto/tink/proto/AesCtrKey;` @kind virtual;
  #L4299ba.  v1:= temp @kind object;
  #L4299bc.  call `validateKey`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AesCtrKeyManager;.validateKey:(Lcom/google/crypto/tink/proto/AesCtrKey;)V` @kind virtual;
  #L4299c2.  v0:= new `com.google.crypto.tink.mac.HmacKeyManager`;
  #L4299c6.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/mac/HmacKeyManager;.<init>:()V` @kind direct;
  #L4299cc.  call temp:= `getHmacKey`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey;.getHmacKey:()Lcom/google/crypto/tink/proto/HmacKey;` @kind virtual;
  #L4299d2.  v3:= temp @kind object;
  #L4299d4.  call `validateKey`(v0, v3) @signature `Lcom/google/crypto/tink/mac/HmacKeyManager;.validateKey:(Lcom/google/crypto/tink/proto/HmacKey;)V` @kind virtual;
  #L4299da.  return @kind void;
}
procedure `void` `validateKey`(`com.google.crypto.tink.aead.AesCtrHmacAeadKeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.validateKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4299ec.  v1:= (`com.google.crypto.tink.proto.AesCtrHmacAeadKey`) v1 @kind object;
  #L4299f0.  call `validateKey`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AesCtrHmacAeadKeyManager;.validateKey:(Lcom/google/crypto/tink/proto/AesCtrHmacAeadKey;)V` @kind virtual;
  #L4299f6.  return @kind void;
}
