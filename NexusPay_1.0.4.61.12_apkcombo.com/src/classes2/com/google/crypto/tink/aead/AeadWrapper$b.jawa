record `com.google.crypto.tink.aead.AeadWrapper$b` @kind class @AccessFlag  extends `com.google.crypto.tink.Aead` @kind interface {
  `com.google.crypto.tink.PrimitiveSet` `com.google.crypto.tink.aead.AeadWrapper$b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.crypto.tink.aead.AeadWrapper$b` v0 @kind this, `com.google.crypto.tink.PrimitiveSet` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AeadWrapper$b;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4293f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4293fe.  v0.`com.google.crypto.tink.aead.AeadWrapper$b.a` @type ^`com.google.crypto.tink.PrimitiveSet` := v1 @kind object;
  #L429402.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.aead.AeadWrapper$b` v0 @kind this, `com.google.crypto.tink.PrimitiveSet` v1 @kind object, `com.google.crypto.tink.aead.AeadWrapper$a` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/AeadWrapper$b;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;Lcom/google/crypto/tink/aead/AeadWrapper$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L429414.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AeadWrapper$b;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;)V` @kind direct;
  #L42941a.  return @kind void;
}
procedure `byte`[] `decrypt`(`com.google.crypto.tink.aead.AeadWrapper$b` v6 @kind this, `byte`[] v7 @kind object, `byte`[] v8 @kind object) @signature `Lcom/google/crypto/tink/aead/AeadWrapper$b;.decrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L42927c.  v0:= length @variable v7;
  #L42927e.  v1:= 5I;
  #L429280.  if v0 <= v1 then goto L429316;
  #L429284.  v0:= 0I;
  #L429286.  call temp:= `copyOfRange`(v7, v0, v1) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L42928c.  v0:= temp @kind object;
  #L42928e.  v2:= length @variable v7;
  #L429290.  call temp:= `copyOfRange`(v7, v1, v2) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L429296.  v1:= temp @kind object;
  #L429298.  v2:= v6.`com.google.crypto.tink.aead.AeadWrapper$b.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L42929c.  call temp:= `getPrimitive`(v2, v0) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimitive:([B)Ljava/util/List;` @kind virtual;
  #L4292a2.  v0:= temp @kind object;
  #L4292a4.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4292aa.  v0:= temp @kind object;
  #L4292ac.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4292b2.  v2:= temp;
  #L4292b4.  if v2 == 0 then goto L429316;
  #L4292b8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4292be.  v2:= temp @kind object;
  #L4292c0.  v2:= (`com.google.crypto.tink.PrimitiveSet$Entry`) v2 @kind object;
  #L4292c4.  call temp:= `getPrimitive`(v2) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L4292ca.  v2:= temp @kind object;
  #L4292cc.  v2:= (`com.google.crypto.tink.Aead`) v2 @kind object;
  #L4292d0.  call temp:= `decrypt`(v2, v1, v8) @signature `Lcom/google/crypto/tink/Aead;.decrypt:([B[B)[B` @kind interface;
  #L4292d6.  v7:= temp @kind object;
  #L4292d8.  return v7 @kind object;
  #L4292da.  v2:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L4292dc.  call temp:= `a`() @signature `Lcom/google/crypto/tink/aead/AeadWrapper;.a:()Ljava/util/logging/Logger;` @kind static;
  #L4292e2.  v3:= temp @kind object;
  #L4292e4.  v4:= new `java.lang.StringBuilder`;
  #L4292e8.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4292ee.  v5:= "ciphertext prefix matches a key, but cannot decrypt: " @kind object;
  #L4292f2.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4292f8.  call temp:= `toString`(v2) @signature `Ljava/security/GeneralSecurityException;.toString:()Ljava/lang/String;` @kind virtual;
  #L4292fe.  v2:= temp @kind object;
  #L429300.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L429306.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42930c.  v2:= temp @kind object;
  #L42930e.  call `info`(v3, v2) @signature `Ljava/util/logging/Logger;.info:(Ljava/lang/String;)V` @kind virtual;
  #L429314.  goto L4292ac;
  #L429316.  v0:= v6.`com.google.crypto.tink.aead.AeadWrapper$b.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L42931a.  call temp:= `getRawPrimitives`(v0) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getRawPrimitives:()Ljava/util/List;` @kind virtual;
  #L429320.  v0:= temp @kind object;
  #L429322.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L429328.  v0:= temp @kind object;
  #L42932a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L429330.  v1:= temp;
  #L429332.  if v1 == 0 then goto L42935c;
  #L429336.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L42933c.  v1:= temp @kind object;
  #L42933e.  v1:= (`com.google.crypto.tink.PrimitiveSet$Entry`) v1 @kind object;
  #L429342.  call temp:= `getPrimitive`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L429348.  v1:= temp @kind object;
  #L42934a.  v1:= (`com.google.crypto.tink.Aead`) v1 @kind object;
  #L42934e.  call temp:= `decrypt`(v1, v7, v8) @signature `Lcom/google/crypto/tink/Aead;.decrypt:([B[B)[B` @kind interface;
  #L429354.  v7:= temp @kind object;
  #L429356.  return v7 @kind object;
  #L429358.  
  #L42935a.  goto L42932a;
  #L42935c.  v7:= new `java.security.GeneralSecurityException`;
  #L429360.  v8:= "decryption failed" @kind object;
  #L429364.  call `<init>`(v7, v8) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42936a.  throw v7;
  catch `java.security.GeneralSecurityException` @[L4292c4..L4292d8] goto L4292da;
  catch `java.security.GeneralSecurityException` @[L429342..L429356] goto L429358;
}
procedure `byte`[] `encrypt`(`com.google.crypto.tink.aead.AeadWrapper$b` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lcom/google/crypto/tink/aead/AeadWrapper$b;.encrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L429398.  v0:= 2I;
  #L42939a.  v0:= new `byte`[][v0];
  #L42939e.  v1:= v3.`com.google.crypto.tink.aead.AeadWrapper$b.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L4293a2.  call temp:= `getPrimary`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimary:()Lcom/google/crypto/tink/PrimitiveSet$Entry;` @kind virtual;
  #L4293a8.  v1:= temp @kind object;
  #L4293aa.  call temp:= `getIdentifier`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getIdentifier:()[B` @kind virtual;
  #L4293b0.  v1:= temp @kind object;
  #L4293b2.  v2:= 0I;
  #L4293b4.  v0[v2]:= v1 @kind object;
  #L4293b8.  v1:= v3.`com.google.crypto.tink.aead.AeadWrapper$b.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L4293bc.  call temp:= `getPrimary`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimary:()Lcom/google/crypto/tink/PrimitiveSet$Entry;` @kind virtual;
  #L4293c2.  v1:= temp @kind object;
  #L4293c4.  call temp:= `getPrimitive`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L4293ca.  v1:= temp @kind object;
  #L4293cc.  v1:= (`com.google.crypto.tink.Aead`) v1 @kind object;
  #L4293d0.  call temp:= `encrypt`(v1, v4, v5) @signature `Lcom/google/crypto/tink/Aead;.encrypt:([B[B)[B` @kind interface;
  #L4293d6.  v4:= temp @kind object;
  #L4293d8.  v5:= 1I;
  #L4293da.  v0[v5]:= v4 @kind object;
  #L4293de.  call temp:= `concat`(v0) @signature `Lcom/google/crypto/tink/subtle/Bytes;.concat:([[B)[B` @kind static;
  #L4293e4.  v4:= temp @kind object;
  #L4293e6.  return v4 @kind object;
}
