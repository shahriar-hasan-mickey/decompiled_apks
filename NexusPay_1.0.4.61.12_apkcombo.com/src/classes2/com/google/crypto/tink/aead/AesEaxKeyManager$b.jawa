record `com.google.crypto.tink.aead.AesEaxKeyManager$b` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$KeyFactory` @kind class {
  `com.google.crypto.tink.aead.AesEaxKeyManager` `com.google.crypto.tink.aead.AesEaxKeyManager$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.aead.AesEaxKeyManager$b` v0 @kind this, `com.google.crypto.tink.aead.AesEaxKeyManager` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/AesEaxKeyManager$b;.<init>:(Lcom/google/crypto/tink/aead/AesEaxKeyManager;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L429eb8.  v0.`com.google.crypto.tink.aead.AesEaxKeyManager$b.b` @type ^`com.google.crypto.tink.aead.AesEaxKeyManager` := v1 @kind object;
  #L429ebc.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L429ec2.  return @kind void;
}
procedure `com.google.crypto.tink.proto.AesEaxKey` `a`(`com.google.crypto.tink.aead.AesEaxKeyManager$b` v2 @kind this, `com.google.crypto.tink.proto.AesEaxKeyFormat` v3 @kind object) @signature `Lcom/google/crypto/tink/aead/AesEaxKeyManager$b;.a:(Lcom/google/crypto/tink/proto/AesEaxKeyFormat;)Lcom/google/crypto/tink/proto/AesEaxKey;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L429dec.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesEaxKey;.newBuilder:()Lcom/google/crypto/tink/proto/AesEaxKey$Builder;` @kind static;
  #L429df2.  v0:= temp @kind object;
  #L429df4.  call temp:= `getKeySize`(v3) @signature `Lcom/google/crypto/tink/proto/AesEaxKeyFormat;.getKeySize:()I` @kind virtual;
  #L429dfa.  v1:= temp;
  #L429dfc.  call temp:= `randBytes`(v1) @signature `Lcom/google/crypto/tink/subtle/Random;.randBytes:(I)[B` @kind static;
  #L429e02.  v1:= temp @kind object;
  #L429e04.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L429e0a.  v1:= temp @kind object;
  #L429e0c.  call temp:= `setKeyValue`(v0, v1) @signature `Lcom/google/crypto/tink/proto/AesEaxKey$Builder;.setKeyValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesEaxKey$Builder;` @kind virtual;
  #L429e12.  v0:= temp @kind object;
  #L429e14.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/AesEaxKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/AesEaxParams;` @kind virtual;
  #L429e1a.  v3:= temp @kind object;
  #L429e1c.  call temp:= `setParams`(v0, v3) @signature `Lcom/google/crypto/tink/proto/AesEaxKey$Builder;.setParams:(Lcom/google/crypto/tink/proto/AesEaxParams;)Lcom/google/crypto/tink/proto/AesEaxKey$Builder;` @kind virtual;
  #L429e22.  v3:= temp @kind object;
  #L429e24.  v0:= v2.`com.google.crypto.tink.aead.AesEaxKeyManager$b.b` @type ^`com.google.crypto.tink.aead.AesEaxKeyManager` @kind object;
  #L429e28.  call temp:= `getVersion`(v0) @signature `Lcom/google/crypto/tink/aead/AesEaxKeyManager;.getVersion:()I` @kind virtual;
  #L429e2e.  v0:= temp;
  #L429e30.  call temp:= `setVersion`(v3, v0) @signature `Lcom/google/crypto/tink/proto/AesEaxKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/AesEaxKey$Builder;` @kind virtual;
  #L429e36.  v3:= temp @kind object;
  #L429e38.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L429e3e.  v3:= temp @kind object;
  #L429e40.  v3:= (`com.google.crypto.tink.proto.AesEaxKey`) v3 @kind object;
  #L429e44.  return v3 @kind object;
}
procedure `com.google.crypto.tink.proto.AesEaxKeyFormat` `b`(`com.google.crypto.tink.aead.AesEaxKeyManager$b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/aead/AesEaxKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesEaxKeyFormat;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L429e58.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L429e5e.  v0:= temp @kind object;
  #L429e60.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/AesEaxKeyFormat;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/AesEaxKeyFormat;` @kind static;
  #L429e66.  v2:= temp @kind object;
  #L429e68.  return v2 @kind object;
}
procedure `void` `c`(`com.google.crypto.tink.aead.AesEaxKeyManager$b` v2 @kind this, `com.google.crypto.tink.proto.AesEaxKeyFormat` v3 @kind object) @signature `Lcom/google/crypto/tink/aead/AesEaxKeyManager$b;.c:(Lcom/google/crypto/tink/proto/AesEaxKeyFormat;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L429ed4.  call temp:= `getKeySize`(v3) @signature `Lcom/google/crypto/tink/proto/AesEaxKeyFormat;.getKeySize:()I` @kind virtual;
  #L429eda.  v0:= temp;
  #L429edc.  call `validateAesKeySize`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateAesKeySize:(I)V` @kind static;
  #L429ee2.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/AesEaxKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/AesEaxParams;` @kind virtual;
  #L429ee8.  v0:= temp @kind object;
  #L429eea.  call temp:= `getIvSize`(v0) @signature `Lcom/google/crypto/tink/proto/AesEaxParams;.getIvSize:()I` @kind virtual;
  #L429ef0.  v0:= temp;
  #L429ef2.  v1:= 12I;
  #L429ef6.  if v0 == v1 then goto L429f24;
  #L429efa.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/AesEaxKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/AesEaxParams;` @kind virtual;
  #L429f00.  v3:= temp @kind object;
  #L429f02.  call temp:= `getIvSize`(v3) @signature `Lcom/google/crypto/tink/proto/AesEaxParams;.getIvSize:()I` @kind virtual;
  #L429f08.  v3:= temp;
  #L429f0a.  v0:= 16I;
  #L429f0e.  if v3 != v0 then goto L429f14;
  #L429f12.  goto L429f24;
  #L429f14.  v3:= new `java.security.GeneralSecurityException`;
  #L429f18.  v0:= "invalid IV size; acceptable values have 12 or 16 bytes" @kind object;
  #L429f1c.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L429f22.  throw v3;
  #L429f24.  return @kind void;
}
procedure `java.lang.Object` `createKey`(`com.google.crypto.tink.aead.AesEaxKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesEaxKeyManager$b;.createKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L429e98.  v1:= (`com.google.crypto.tink.proto.AesEaxKeyFormat`) v1 @kind object;
  #L429e9c.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AesEaxKeyManager$b;.a:(Lcom/google/crypto/tink/proto/AesEaxKeyFormat;)Lcom/google/crypto/tink/proto/AesEaxKey;` @kind virtual;
  #L429ea2.  v1:= temp @kind object;
  #L429ea4.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKeyFormat`(`com.google.crypto.tink.aead.AesEaxKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesEaxKeyManager$b;.parseKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L429e7c.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AesEaxKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesEaxKeyFormat;` @kind virtual;
  #L429e82.  v1:= temp @kind object;
  #L429e84.  return v1 @kind object;
}
procedure `void` `validateKeyFormat`(`com.google.crypto.tink.aead.AesEaxKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/aead/AesEaxKeyManager$b;.validateKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L429f38.  v1:= (`com.google.crypto.tink.proto.AesEaxKeyFormat`) v1 @kind object;
  #L429f3c.  call `c`(v0, v1) @signature `Lcom/google/crypto/tink/aead/AesEaxKeyManager$b;.c:(Lcom/google/crypto/tink/proto/AesEaxKeyFormat;)V` @kind virtual;
  #L429f42.  return @kind void;
}
