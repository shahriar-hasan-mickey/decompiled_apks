record `com.google.crypto.tink.prf.HmacPrfKeyManager` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.KeyTypeManager` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.prf.HmacPrfKeyManager` v4 @kind this) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4315c0.  v0:= constclass @type ^`com.google.crypto.tink.proto.HmacPrfKey` @kind object;
  #L4315c4.  v1:= 1I;
  #L4315c6.  v1:= new `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory`[v1];
  #L4315ca.  v2:= new `com.google.crypto.tink.prf.HmacPrfKeyManager$a`;
  #L4315ce.  v3:= constclass @type ^`com.google.crypto.tink.prf.Prf` @kind object;
  #L4315d2.  call `<init>`(v2, v3) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L4315d8.  v3:= 0I;
  #L4315da.  v1[v3]:= v2 @kind object;
  #L4315de.  call `<init>`(v4, v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.<init>:(Ljava/lang/Class;[Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;)V` @kind direct;
  #L4315e4.  return @kind void;
}
procedure `void` `b`(`com.google.crypto.tink.proto.HmacPrfParams` v0 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.b:(Lcom/google/crypto/tink/proto/HmacPrfParams;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4315f8.  call `d`(v0) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.d:(Lcom/google/crypto/tink/proto/HmacPrfParams;)V` @kind static;
  #L4315fe.  return @kind void;
}
procedure `com.google.crypto.tink.KeyTemplate` `c`(`int` v1 , `com.google.crypto.tink.proto.HashType` v2 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.c:(ILcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L43145c.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/HmacPrfParams;.newBuilder:()Lcom/google/crypto/tink/proto/HmacPrfParams$Builder;` @kind static;
  #L431462.  v0:= temp @kind object;
  #L431464.  call temp:= `setHash`(v0, v2) @signature `Lcom/google/crypto/tink/proto/HmacPrfParams$Builder;.setHash:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/HmacPrfParams$Builder;` @kind virtual;
  #L43146a.  v2:= temp @kind object;
  #L43146c.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L431472.  v2:= temp @kind object;
  #L431474.  v2:= (`com.google.crypto.tink.proto.HmacPrfParams`) v2 @kind object;
  #L431478.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/HmacPrfKeyFormat$Builder;` @kind static;
  #L43147e.  v0:= temp @kind object;
  #L431480.  call temp:= `setParams`(v0, v2) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/HmacPrfParams;)Lcom/google/crypto/tink/proto/HmacPrfKeyFormat$Builder;` @kind virtual;
  #L431486.  v2:= temp @kind object;
  #L431488.  call temp:= `setKeySize`(v2, v1) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat$Builder;.setKeySize:(I)Lcom/google/crypto/tink/proto/HmacPrfKeyFormat$Builder;` @kind virtual;
  #L43148e.  v1:= temp @kind object;
  #L431490.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L431496.  v1:= temp @kind object;
  #L431498.  v1:= (`com.google.crypto.tink.proto.HmacPrfKeyFormat`) v1 @kind object;
  #L43149c.  v2:= new `com.google.crypto.tink.prf.HmacPrfKeyManager`;
  #L4314a0.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.<init>:()V` @kind direct;
  #L4314a6.  call temp:= `getKeyType`(v2) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L4314ac.  v2:= temp @kind object;
  #L4314ae.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteArray:()[B` @kind virtual;
  #L4314b4.  v1:= temp @kind object;
  #L4314b6.  v0:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.RAW` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L4314ba.  call temp:= `create`(v2, v1, v0) @signature `Lcom/google/crypto/tink/KeyTemplate;.create:(Ljava/lang/String;[BLcom/google/crypto/tink/KeyTemplate$OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L4314c0.  v1:= temp @kind object;
  #L4314c2.  return v1 @kind object;
}
procedure `void` `d`(`com.google.crypto.tink.proto.HmacPrfParams` v2 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.d:(Lcom/google/crypto/tink/proto/HmacPrfParams;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4316b0.  call temp:= `getHash`(v2) @signature `Lcom/google/crypto/tink/proto/HmacPrfParams;.getHash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L4316b6.  v0:= temp @kind object;
  #L4316b8.  v1:= `@@com.google.crypto.tink.proto.HashType.SHA1` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L4316bc.  if v0 == v1 then goto L4316f2;
  #L4316c0.  call temp:= `getHash`(v2) @signature `Lcom/google/crypto/tink/proto/HmacPrfParams;.getHash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L4316c6.  v0:= temp @kind object;
  #L4316c8.  v1:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L4316cc.  if v0 == v1 then goto L4316f2;
  #L4316d0.  call temp:= `getHash`(v2) @signature `Lcom/google/crypto/tink/proto/HmacPrfParams;.getHash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L4316d6.  v2:= temp @kind object;
  #L4316d8.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA512` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L4316dc.  if v2 != v0 then goto L4316e2;
  #L4316e0.  goto L4316f2;
  #L4316e2.  v2:= new `java.security.GeneralSecurityException`;
  #L4316e6.  v0:= "unknown hash type" @kind object;
  #L4316ea.  call `<init>`(v2, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4316f0.  throw v2;
  #L4316f2.  return @kind void;
}
procedure `com.google.crypto.tink.KeyTemplate` `hmacSha256Template`() @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.hmacSha256Template:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L4314d4.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L4314d8.  v1:= 32I;
  #L4314dc.  call temp:= `c`(v1, v0) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.c:(ILcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L4314e2.  v0:= temp @kind object;
  #L4314e4.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeyTemplate` `hmacSha512Template`() @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.hmacSha512Template:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L4314f8.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA512` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L4314fc.  v1:= 64I;
  #L431500.  call temp:= `c`(v1, v0) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.c:(ILcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L431506.  v0:= temp @kind object;
  #L431508.  return v0 @kind object;
}
procedure `void` `register`(`boolean` v1 ) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.register:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L431610.  v0:= new `com.google.crypto.tink.prf.HmacPrfKeyManager`;
  #L431614.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.<init>:()V` @kind direct;
  #L43161a.  call `registerKeyManager`(v0, v1) @signature `Lcom/google/crypto/tink/Registry;.registerKeyManager:(Lcom/google/crypto/tink/KeyTypeManager;Z)V` @kind static;
  #L431620.  return @kind void;
}
procedure `java.lang.String` `getKeyType`(`com.google.crypto.tink.prf.HmacPrfKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.getKeyType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4315a8.  v0:= "type.googleapis.com/google.crypto.tink.HmacPrfKey" @kind object;
  #L4315ac.  return v0 @kind object;
}
procedure `int` `getVersion`(`com.google.crypto.tink.prf.HmacPrfKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.getVersion:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L431594.  v0:= 0I;
  #L431596.  return v0;
}
procedure `com.google.crypto.tink.KeyTypeManager$KeyFactory` `keyFactory`(`com.google.crypto.tink.prf.HmacPrfKeyManager` v2 @kind this) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.keyFactory:()Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L43151c.  v0:= new `com.google.crypto.tink.prf.HmacPrfKeyManager$b`;
  #L431520.  v1:= constclass @type ^`com.google.crypto.tink.proto.HmacPrfKeyFormat` @kind object;
  #L431524.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.<init>:(Lcom/google/crypto/tink/prf/HmacPrfKeyManager;Ljava/lang/Class;)V` @kind direct;
  #L43152a.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyData$KeyMaterialType` `keyMaterialType`(`com.google.crypto.tink.prf.HmacPrfKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.keyMaterialType:()Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L431560.  v0:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.SYMMETRIC` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L431564.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.HmacPrfKey` `parseKey`(`com.google.crypto.tink.prf.HmacPrfKeyManager` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/HmacPrfKey;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43153c.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L431542.  v0:= temp @kind object;
  #L431544.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/HmacPrfKey;` @kind static;
  #L43154a.  v2:= temp @kind object;
  #L43154c.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKey`(`com.google.crypto.tink.prf.HmacPrfKeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L431578.  call temp:= `parseKey`(v0, v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/HmacPrfKey;` @kind virtual;
  #L43157e.  v1:= temp @kind object;
  #L431580.  return v1 @kind object;
}
procedure `void` `validateKey`(`com.google.crypto.tink.prf.HmacPrfKeyManager` v2 @kind this, `com.google.crypto.tink.proto.HmacPrfKey` v3 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.validateKey:(Lcom/google/crypto/tink/proto/HmacPrfKey;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L431634.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey;.getVersion:()I` @kind virtual;
  #L43163a.  v0:= temp;
  #L43163c.  call temp:= `getVersion`(v2) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.getVersion:()I` @kind virtual;
  #L431642.  v1:= temp;
  #L431644.  call `validateVersion`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateVersion:(II)V` @kind static;
  #L43164a.  call temp:= `getKeyValue`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey;.getKeyValue:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L431650.  v0:= temp @kind object;
  #L431652.  call temp:= `size`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L431658.  v0:= temp;
  #L43165a.  v1:= 16I;
  #L43165e.  if v0 < v1 then goto L431672;
  #L431662.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey;.getParams:()Lcom/google/crypto/tink/proto/HmacPrfParams;` @kind virtual;
  #L431668.  v3:= temp @kind object;
  #L43166a.  call `d`(v3) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.d:(Lcom/google/crypto/tink/proto/HmacPrfParams;)V` @kind static;
  #L431670.  return @kind void;
  #L431672.  v3:= new `java.security.GeneralSecurityException`;
  #L431676.  v0:= "key too short" @kind object;
  #L43167a.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L431680.  throw v3;
}
procedure `void` `validateKey`(`com.google.crypto.tink.prf.HmacPrfKeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.validateKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L431694.  v1:= (`com.google.crypto.tink.proto.HmacPrfKey`) v1 @kind object;
  #L431698.  call `validateKey`(v0, v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.validateKey:(Lcom/google/crypto/tink/proto/HmacPrfKey;)V` @kind virtual;
  #L43169e.  return @kind void;
}
