record `com.google.crypto.tink.prf.HmacPrfKeyManager$b` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$KeyFactory` @kind class {
  `com.google.crypto.tink.prf.HmacPrfKeyManager` `com.google.crypto.tink.prf.HmacPrfKeyManager$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.prf.HmacPrfKeyManager$b` v0 @kind this, `com.google.crypto.tink.prf.HmacPrfKeyManager` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.<init>:(Lcom/google/crypto/tink/prf/HmacPrfKeyManager;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L431358.  v0.`com.google.crypto.tink.prf.HmacPrfKeyManager$b.b` @type ^`com.google.crypto.tink.prf.HmacPrfKeyManager` := v1 @kind object;
  #L43135c.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L431362.  return @kind void;
}
procedure `com.google.crypto.tink.proto.HmacPrfKey` `a`(`com.google.crypto.tink.prf.HmacPrfKeyManager$b` v2 @kind this, `com.google.crypto.tink.proto.HmacPrfKeyFormat` v3 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.a:(Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;)Lcom/google/crypto/tink/proto/HmacPrfKey;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4311a4.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/HmacPrfKey;.newBuilder:()Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;` @kind static;
  #L4311aa.  v0:= temp @kind object;
  #L4311ac.  v1:= v2.`com.google.crypto.tink.prf.HmacPrfKeyManager$b.b` @type ^`com.google.crypto.tink.prf.HmacPrfKeyManager` @kind object;
  #L4311b0.  call temp:= `getVersion`(v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.getVersion:()I` @kind virtual;
  #L4311b6.  v1:= temp;
  #L4311b8.  call temp:= `setVersion`(v0, v1) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;` @kind virtual;
  #L4311be.  v0:= temp @kind object;
  #L4311c0.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/HmacPrfParams;` @kind virtual;
  #L4311c6.  v1:= temp @kind object;
  #L4311c8.  call temp:= `setParams`(v0, v1) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;.setParams:(Lcom/google/crypto/tink/proto/HmacPrfParams;)Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;` @kind virtual;
  #L4311ce.  v0:= temp @kind object;
  #L4311d0.  call temp:= `getKeySize`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.getKeySize:()I` @kind virtual;
  #L4311d6.  v3:= temp;
  #L4311d8.  call temp:= `randBytes`(v3) @signature `Lcom/google/crypto/tink/subtle/Random;.randBytes:(I)[B` @kind static;
  #L4311de.  v3:= temp @kind object;
  #L4311e0.  call temp:= `copyFrom`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L4311e6.  v3:= temp @kind object;
  #L4311e8.  call temp:= `setKeyValue`(v0, v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;.setKeyValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;` @kind virtual;
  #L4311ee.  v3:= temp @kind object;
  #L4311f0.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4311f6.  v3:= temp @kind object;
  #L4311f8.  v3:= (`com.google.crypto.tink.proto.HmacPrfKey`) v3 @kind object;
  #L4311fc.  return v3 @kind object;
}
procedure `com.google.crypto.tink.proto.HmacPrfKey` `b`(`com.google.crypto.tink.prf.HmacPrfKeyManager$b` v2 @kind this, `com.google.crypto.tink.proto.HmacPrfKeyFormat` v3 @kind object, `java.io.InputStream` v4 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.b:(Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;Ljava/io/InputStream;)Lcom/google/crypto/tink/proto/HmacPrfKey;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L431210.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.getVersion:()I` @kind virtual;
  #L431216.  v0:= temp;
  #L431218.  v1:= v2.`com.google.crypto.tink.prf.HmacPrfKeyManager$b.b` @type ^`com.google.crypto.tink.prf.HmacPrfKeyManager` @kind object;
  #L43121c.  call temp:= `getVersion`(v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.getVersion:()I` @kind virtual;
  #L431222.  v1:= temp;
  #L431224.  call `validateVersion`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateVersion:(II)V` @kind static;
  #L43122a.  call temp:= `getKeySize`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.getKeySize:()I` @kind virtual;
  #L431230.  v0:= temp;
  #L431232.  v0:= new `byte`[v0];
  #L431236.  call temp:= `read`(v4, v0) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L43123c.  v4:= temp;
  #L43123e.  call temp:= `getKeySize`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.getKeySize:()I` @kind virtual;
  #L431244.  v1:= temp;
  #L431246.  if v4 != v1 then goto L431294;
  #L43124a.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/HmacPrfKey;.newBuilder:()Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;` @kind static;
  #L431250.  v4:= temp @kind object;
  #L431252.  v1:= v2.`com.google.crypto.tink.prf.HmacPrfKeyManager$b.b` @type ^`com.google.crypto.tink.prf.HmacPrfKeyManager` @kind object;
  #L431256.  call temp:= `getVersion`(v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.getVersion:()I` @kind virtual;
  #L43125c.  v1:= temp;
  #L43125e.  call temp:= `setVersion`(v4, v1) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;` @kind virtual;
  #L431264.  v4:= temp @kind object;
  #L431266.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/HmacPrfParams;` @kind virtual;
  #L43126c.  v3:= temp @kind object;
  #L43126e.  call temp:= `setParams`(v4, v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;.setParams:(Lcom/google/crypto/tink/proto/HmacPrfParams;)Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;` @kind virtual;
  #L431274.  v3:= temp @kind object;
  #L431276.  call temp:= `copyFrom`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L43127c.  v4:= temp @kind object;
  #L43127e.  call temp:= `setKeyValue`(v3, v4) @signature `Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;.setKeyValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/HmacPrfKey$Builder;` @kind virtual;
  #L431284.  v3:= temp @kind object;
  #L431286.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L43128c.  v3:= temp @kind object;
  #L43128e.  v3:= (`com.google.crypto.tink.proto.HmacPrfKey`) v3 @kind object;
  #L431292.  return v3 @kind object;
  #L431294.  v3:= new `java.security.GeneralSecurityException`;
  #L431298.  v4:= "Not enough pseudorandomness given" @kind object;
  #L43129c.  call `<init>`(v3, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4312a2.  throw v3;
  #L4312a4.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L4312a6.  v4:= new `java.security.GeneralSecurityException`;
  #L4312aa.  v0:= "Reading pseudorandomness failed" @kind object;
  #L4312ae.  call `<init>`(v4, v0, v3) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L4312b4.  throw v4;
  catch `java.io.IOException` @[L431236..L4312a4] goto L4312a4;
}
procedure `com.google.crypto.tink.proto.HmacPrfKeyFormat` `c`(`com.google.crypto.tink.prf.HmacPrfKeyManager$b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.c:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4312d8.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L4312de.  v0:= temp @kind object;
  #L4312e0.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;` @kind static;
  #L4312e6.  v2:= temp @kind object;
  #L4312e8.  return v2 @kind object;
}
procedure `java.lang.Object` `createKey`(`com.google.crypto.tink.prf.HmacPrfKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.createKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L431318.  v1:= (`com.google.crypto.tink.proto.HmacPrfKeyFormat`) v1 @kind object;
  #L43131c.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.a:(Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;)Lcom/google/crypto/tink/proto/HmacPrfKey;` @kind virtual;
  #L431322.  v1:= temp @kind object;
  #L431324.  return v1 @kind object;
}
procedure `void` `d`(`com.google.crypto.tink.prf.HmacPrfKeyManager$b` v2 @kind this, `com.google.crypto.tink.proto.HmacPrfKeyFormat` v3 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.d:(Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L431374.  call temp:= `getKeySize`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.getKeySize:()I` @kind virtual;
  #L43137a.  v0:= temp;
  #L43137c.  v1:= 16I;
  #L431380.  if v0 < v1 then goto L431394;
  #L431384.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/HmacPrfParams;` @kind virtual;
  #L43138a.  v3:= temp @kind object;
  #L43138c.  call `b`(v3) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager;.b:(Lcom/google/crypto/tink/proto/HmacPrfParams;)V` @kind static;
  #L431392.  return @kind void;
  #L431394.  v3:= new `java.security.GeneralSecurityException`;
  #L431398.  v0:= "key too short" @kind object;
  #L43139c.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4313a2.  throw v3;
}
procedure `java.lang.Object` `deriveKey`(`com.google.crypto.tink.prf.HmacPrfKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object, `java.io.InputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.deriveKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;Ljava/io/InputStream;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L431338.  v1:= (`com.google.crypto.tink.proto.HmacPrfKeyFormat`) v1 @kind object;
  #L43133c.  call temp:= `b`(v0, v1, v2) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.b:(Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;Ljava/io/InputStream;)Lcom/google/crypto/tink/proto/HmacPrfKey;` @kind virtual;
  #L431342.  v1:= temp @kind object;
  #L431344.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKeyFormat`(`com.google.crypto.tink.prf.HmacPrfKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.parseKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4312fc.  call temp:= `c`(v0, v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.c:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;` @kind virtual;
  #L431302.  v1:= temp @kind object;
  #L431304.  return v1 @kind object;
}
procedure `void` `validateKeyFormat`(`com.google.crypto.tink.prf.HmacPrfKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.validateKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4313b4.  v1:= (`com.google.crypto.tink.proto.HmacPrfKeyFormat`) v1 @kind object;
  #L4313b8.  call `d`(v0, v1) @signature `Lcom/google/crypto/tink/prf/HmacPrfKeyManager$b;.d:(Lcom/google/crypto/tink/proto/HmacPrfKeyFormat;)V` @kind virtual;
  #L4313be.  return @kind void;
}
