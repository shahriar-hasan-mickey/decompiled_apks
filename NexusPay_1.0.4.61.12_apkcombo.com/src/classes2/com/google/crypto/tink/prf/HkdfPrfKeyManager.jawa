record `com.google.crypto.tink.prf.HkdfPrfKeyManager` @kind class @AccessFlag PUBLIC extends `com.google.crypto.tink.KeyTypeManager` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.prf.HkdfPrfKeyManager` v4 @kind this) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L430f54.  v0:= constclass @type ^`com.google.crypto.tink.proto.HkdfPrfKey` @kind object;
  #L430f58.  v1:= 2I;
  #L430f5a.  v1:= new `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory`[v1];
  #L430f5e.  v2:= new `com.google.crypto.tink.prf.HkdfPrfKeyManager$a`;
  #L430f62.  v3:= constclass @type ^`com.google.crypto.tink.subtle.prf.StreamingPrf` @kind object;
  #L430f66.  call `<init>`(v2, v3) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager$a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L430f6c.  v3:= 0I;
  #L430f6e.  v1[v3]:= v2 @kind object;
  #L430f72.  v2:= new `com.google.crypto.tink.prf.HkdfPrfKeyManager$b`;
  #L430f76.  v3:= constclass @type ^`com.google.crypto.tink.prf.Prf` @kind object;
  #L430f7a.  call `<init>`(v2, v3) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager$b;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L430f80.  v3:= 1I;
  #L430f82.  v1[v3]:= v2 @kind object;
  #L430f86.  call `<init>`(v4, v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.<init>:(Ljava/lang/Class;[Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;)V` @kind direct;
  #L430f8c.  return @kind void;
}
procedure `com.google.crypto.tink.subtle.Enums$HashType` `b`(`com.google.crypto.tink.proto.HashType` v0 @kind object) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.b:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L430e58.  call temp:= `e`(v0) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.e:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L430e5e.  v0:= temp @kind object;
  #L430e60.  return v0 @kind object;
}
procedure `void` `c`(`int` v0 ) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.c:(I)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L430fa0.  call `f`(v0) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.f:(I)V` @kind static;
  #L430fa6.  return @kind void;
}
procedure `void` `d`(`com.google.crypto.tink.proto.HkdfPrfParams` v0 @kind object) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.d:(Lcom/google/crypto/tink/proto/HkdfPrfParams;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L430fb8.  call `g`(v0) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.g:(Lcom/google/crypto/tink/proto/HkdfPrfParams;)V` @kind static;
  #L430fbe.  return @kind void;
}
procedure `com.google.crypto.tink.subtle.Enums$HashType` `e`(`com.google.crypto.tink.proto.HashType` v3 @kind object) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.e:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L430e74.  v0:= `@@com.google.crypto.tink.prf.HkdfPrfKeyManager$d.a` @type ^`int`[] @kind object;
  #L430e78.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L430e7e.  v1:= temp;
  #L430e80.  v0:= v0[v1];
  #L430e84.  v1:= 1I;
  #L430e86.  if v0 == v1 then goto L430eee;
  #L430e8a.  v1:= 2I;
  #L430e8c.  if v0 == v1 then goto L430ee8;
  #L430e90.  v1:= 3I;
  #L430e92.  if v0 == v1 then goto L430ee2;
  #L430e96.  v1:= 4I;
  #L430e98.  if v0 != v1 then goto L430ea2;
  #L430e9c.  v3:= `@@com.google.crypto.tink.subtle.Enums$HashType.SHA512` @type ^`com.google.crypto.tink.subtle.Enums$HashType` @kind object;
  #L430ea0.  return v3 @kind object;
  #L430ea2.  v0:= new `java.security.GeneralSecurityException`;
  #L430ea6.  v1:= new `java.lang.StringBuilder`;
  #L430eaa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L430eb0.  v2:= "HashType " @kind object;
  #L430eb4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430eba.  call temp:= `name`(v3) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L430ec0.  v3:= temp @kind object;
  #L430ec2.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430ec8.  v3:= " not known in" @kind object;
  #L430ecc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L430ed2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L430ed8.  v3:= temp @kind object;
  #L430eda.  call `<init>`(v0, v3) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L430ee0.  throw v0;
  #L430ee2.  v3:= `@@com.google.crypto.tink.subtle.Enums$HashType.SHA384` @type ^`com.google.crypto.tink.subtle.Enums$HashType` @kind object;
  #L430ee6.  return v3 @kind object;
  #L430ee8.  v3:= `@@com.google.crypto.tink.subtle.Enums$HashType.SHA256` @type ^`com.google.crypto.tink.subtle.Enums$HashType` @kind object;
  #L430eec.  return v3 @kind object;
  #L430eee.  v3:= `@@com.google.crypto.tink.subtle.Enums$HashType.SHA1` @type ^`com.google.crypto.tink.subtle.Enums$HashType` @kind object;
  #L430ef2.  return v3 @kind object;
}
procedure `void` `f`(`int` v1 ) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.f:(I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L43105c.  v0:= 32I;
  #L431060.  if v1 < v0 then goto L431066;
  #L431064.  return @kind void;
  #L431066.  v1:= new `java.security.GeneralSecurityException`;
  #L43106a.  v0:= "Invalid HkdfPrfKey/HkdfPrfKeyFormat: Key size too short" @kind object;
  #L43106e.  call `<init>`(v1, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L431074.  throw v1;
}
procedure `void` `g`(`com.google.crypto.tink.proto.HkdfPrfParams` v2 @kind object) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.g:(Lcom/google/crypto/tink/proto/HkdfPrfParams;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L431088.  call temp:= `getHash`(v2) @signature `Lcom/google/crypto/tink/proto/HkdfPrfParams;.getHash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L43108e.  v0:= temp @kind object;
  #L431090.  v1:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L431094.  if v0 == v1 then goto L4310ba;
  #L431098.  call temp:= `getHash`(v2) @signature `Lcom/google/crypto/tink/proto/HkdfPrfParams;.getHash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L43109e.  v2:= temp @kind object;
  #L4310a0.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA512` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L4310a4.  if v2 != v0 then goto L4310aa;
  #L4310a8.  goto L4310ba;
  #L4310aa.  v2:= new `java.security.GeneralSecurityException`;
  #L4310ae.  v0:= "Invalid HkdfPrfKey/HkdfPrfKeyFormat: Unsupported hash" @kind object;
  #L4310b2.  call `<init>`(v2, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4310b8.  throw v2;
  #L4310ba.  return @kind void;
}
procedure `com.google.crypto.tink.KeyTemplate` `hkdfSha256Template`() @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.hkdfSha256Template:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L430d74.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/HkdfPrfKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/HkdfPrfKeyFormat$Builder;` @kind static;
  #L430d7a.  v0:= temp @kind object;
  #L430d7c.  v1:= 32I;
  #L430d80.  call temp:= `setKeySize`(v0, v1) @signature `Lcom/google/crypto/tink/proto/HkdfPrfKeyFormat$Builder;.setKeySize:(I)Lcom/google/crypto/tink/proto/HkdfPrfKeyFormat$Builder;` @kind virtual;
  #L430d86.  v0:= temp @kind object;
  #L430d88.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/HkdfPrfParams;.newBuilder:()Lcom/google/crypto/tink/proto/HkdfPrfParams$Builder;` @kind static;
  #L430d8e.  v1:= temp @kind object;
  #L430d90.  v2:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L430d94.  call temp:= `setHash`(v1, v2) @signature `Lcom/google/crypto/tink/proto/HkdfPrfParams$Builder;.setHash:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/HkdfPrfParams$Builder;` @kind virtual;
  #L430d9a.  v1:= temp @kind object;
  #L430d9c.  call temp:= `setParams`(v0, v1) @signature `Lcom/google/crypto/tink/proto/HkdfPrfKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/HkdfPrfParams$Builder;)Lcom/google/crypto/tink/proto/HkdfPrfKeyFormat$Builder;` @kind virtual;
  #L430da2.  v0:= temp @kind object;
  #L430da4.  call temp:= `build`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L430daa.  v0:= temp @kind object;
  #L430dac.  v0:= (`com.google.crypto.tink.proto.HkdfPrfKeyFormat`) v0 @kind object;
  #L430db0.  call temp:= `staticKeyType`() @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.staticKeyType:()Ljava/lang/String;` @kind static;
  #L430db6.  v1:= temp @kind object;
  #L430db8.  call temp:= `toByteArray`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteArray:()[B` @kind virtual;
  #L430dbe.  v0:= temp @kind object;
  #L430dc0.  v2:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.RAW` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L430dc4.  call temp:= `create`(v1, v0, v2) @signature `Lcom/google/crypto/tink/KeyTemplate;.create:(Ljava/lang/String;[BLcom/google/crypto/tink/KeyTemplate$OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L430dca.  v0:= temp @kind object;
  #L430dcc.  return v0 @kind object;
}
procedure `void` `register`(`boolean` v1 ) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.register:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L430fd0.  v0:= new `com.google.crypto.tink.prf.HkdfPrfKeyManager`;
  #L430fd4.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.<init>:()V` @kind direct;
  #L430fda.  call `registerKeyManager`(v0, v1) @signature `Lcom/google/crypto/tink/Registry;.registerKeyManager:(Lcom/google/crypto/tink/KeyTypeManager;Z)V` @kind static;
  #L430fe0.  return @kind void;
}
procedure `java.lang.String` `staticKeyType`() @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.staticKeyType:()Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L430f30.  v0:= new `com.google.crypto.tink.prf.HkdfPrfKeyManager`;
  #L430f34.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.<init>:()V` @kind direct;
  #L430f3a.  call temp:= `getKeyType`(v0) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L430f40.  v0:= temp @kind object;
  #L430f42.  return v0 @kind object;
}
procedure `java.lang.String` `getKeyType`(`com.google.crypto.tink.prf.HkdfPrfKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.getKeyType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L430f18.  v0:= "type.googleapis.com/google.crypto.tink.HkdfPrfKey" @kind object;
  #L430f1c.  return v0 @kind object;
}
procedure `int` `getVersion`(`com.google.crypto.tink.prf.HkdfPrfKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.getVersion:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L430f04.  v0:= 0I;
  #L430f06.  return v0;
}
procedure `com.google.crypto.tink.KeyTypeManager$KeyFactory` `keyFactory`(`com.google.crypto.tink.prf.HkdfPrfKeyManager` v2 @kind this) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.keyFactory:()Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L430de0.  v0:= new `com.google.crypto.tink.prf.HkdfPrfKeyManager$c`;
  #L430de4.  v1:= constclass @type ^`com.google.crypto.tink.proto.HkdfPrfKeyFormat` @kind object;
  #L430de8.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager$c;.<init>:(Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;Ljava/lang/Class;)V` @kind direct;
  #L430dee.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyData$KeyMaterialType` `keyMaterialType`(`com.google.crypto.tink.prf.HkdfPrfKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.keyMaterialType:()Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L430e24.  v0:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.SYMMETRIC` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L430e28.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.HkdfPrfKey` `parseKey`(`com.google.crypto.tink.prf.HkdfPrfKeyManager` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/HkdfPrfKey;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L430e00.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L430e06.  v0:= temp @kind object;
  #L430e08.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/HkdfPrfKey;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/HkdfPrfKey;` @kind static;
  #L430e0e.  v2:= temp @kind object;
  #L430e10.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKey`(`com.google.crypto.tink.prf.HkdfPrfKeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L430e3c.  call temp:= `parseKey`(v0, v1) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/HkdfPrfKey;` @kind virtual;
  #L430e42.  v1:= temp @kind object;
  #L430e44.  return v1 @kind object;
}
procedure `void` `validateKey`(`com.google.crypto.tink.prf.HkdfPrfKeyManager` v2 @kind this, `com.google.crypto.tink.proto.HkdfPrfKey` v3 @kind object) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.validateKey:(Lcom/google/crypto/tink/proto/HkdfPrfKey;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L430ff4.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/proto/HkdfPrfKey;.getVersion:()I` @kind virtual;
  #L430ffa.  v0:= temp;
  #L430ffc.  call temp:= `getVersion`(v2) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.getVersion:()I` @kind virtual;
  #L431002.  v1:= temp;
  #L431004.  call `validateVersion`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateVersion:(II)V` @kind static;
  #L43100a.  call temp:= `getKeyValue`(v3) @signature `Lcom/google/crypto/tink/proto/HkdfPrfKey;.getKeyValue:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L431010.  v0:= temp @kind object;
  #L431012.  call temp:= `size`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L431018.  v0:= temp;
  #L43101a.  call `f`(v0) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.f:(I)V` @kind static;
  #L431020.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/HkdfPrfKey;.getParams:()Lcom/google/crypto/tink/proto/HkdfPrfParams;` @kind virtual;
  #L431026.  v3:= temp @kind object;
  #L431028.  call `g`(v3) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.g:(Lcom/google/crypto/tink/proto/HkdfPrfParams;)V` @kind static;
  #L43102e.  return @kind void;
}
procedure `void` `validateKey`(`com.google.crypto.tink.prf.HkdfPrfKeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.validateKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L431040.  v1:= (`com.google.crypto.tink.proto.HkdfPrfKey`) v1 @kind object;
  #L431044.  call `validateKey`(v0, v1) @signature `Lcom/google/crypto/tink/prf/HkdfPrfKeyManager;.validateKey:(Lcom/google/crypto/tink/proto/HkdfPrfKey;)V` @kind virtual;
  #L43104a.  return @kind void;
}
