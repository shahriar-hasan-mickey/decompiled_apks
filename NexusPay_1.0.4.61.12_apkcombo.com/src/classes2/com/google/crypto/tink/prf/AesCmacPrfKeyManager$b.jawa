record `com.google.crypto.tink.prf.AesCmacPrfKeyManager$b` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$KeyFactory` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.prf.AesCmacPrfKeyManager$b` v0 @kind this, `com.google.crypto.tink.prf.AesCmacPrfKeyManager` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/crypto/tink/prf/AesCmacPrfKeyManager$b;.<init>:(Lcom/google/crypto/tink/prf/AesCmacPrfKeyManager;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L430818.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L43081e.  return @kind void;
}
procedure `com.google.crypto.tink.proto.AesCmacPrfKey` `a`(`com.google.crypto.tink.prf.AesCmacPrfKeyManager$b` v2 @kind this, `com.google.crypto.tink.proto.AesCmacPrfKeyFormat` v3 @kind object) @signature `Lcom/google/crypto/tink/prf/AesCmacPrfKeyManager$b;.a:(Lcom/google/crypto/tink/proto/AesCmacPrfKeyFormat;)Lcom/google/crypto/tink/proto/AesCmacPrfKey;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L430768.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesCmacPrfKey;.newBuilder:()Lcom/google/crypto/tink/proto/AesCmacPrfKey$Builder;` @kind static;
  #L43076e.  v0:= temp @kind object;
  #L430770.  v1:= 0I;
  #L430772.  call temp:= `setVersion`(v0, v1) @signature `Lcom/google/crypto/tink/proto/AesCmacPrfKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/AesCmacPrfKey$Builder;` @kind virtual;
  #L430778.  v0:= temp @kind object;
  #L43077a.  call temp:= `getKeySize`(v3) @signature `Lcom/google/crypto/tink/proto/AesCmacPrfKeyFormat;.getKeySize:()I` @kind virtual;
  #L430780.  v3:= temp;
  #L430782.  call temp:= `randBytes`(v3) @signature `Lcom/google/crypto/tink/subtle/Random;.randBytes:(I)[B` @kind static;
  #L430788.  v3:= temp @kind object;
  #L43078a.  call temp:= `copyFrom`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L430790.  v3:= temp @kind object;
  #L430792.  call temp:= `setKeyValue`(v0, v3) @signature `Lcom/google/crypto/tink/proto/AesCmacPrfKey$Builder;.setKeyValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesCmacPrfKey$Builder;` @kind virtual;
  #L430798.  v3:= temp @kind object;
  #L43079a.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4307a0.  v3:= temp @kind object;
  #L4307a2.  v3:= (`com.google.crypto.tink.proto.AesCmacPrfKey`) v3 @kind object;
  #L4307a6.  return v3 @kind object;
}
procedure `com.google.crypto.tink.proto.AesCmacPrfKeyFormat` `b`(`com.google.crypto.tink.prf.AesCmacPrfKeyManager$b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/prf/AesCmacPrfKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesCmacPrfKeyFormat;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4307b8.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L4307be.  v0:= temp @kind object;
  #L4307c0.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/AesCmacPrfKeyFormat;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/AesCmacPrfKeyFormat;` @kind static;
  #L4307c6.  v2:= temp @kind object;
  #L4307c8.  return v2 @kind object;
}
procedure `void` `c`(`com.google.crypto.tink.prf.AesCmacPrfKeyManager$b` v0 @kind this, `com.google.crypto.tink.proto.AesCmacPrfKeyFormat` v1 @kind object) @signature `Lcom/google/crypto/tink/prf/AesCmacPrfKeyManager$b;.c:(Lcom/google/crypto/tink/proto/AesCmacPrfKeyFormat;)V` @AccessFlag PUBLIC {
    temp;

  #L430830.  call temp:= `getKeySize`(v1) @signature `Lcom/google/crypto/tink/proto/AesCmacPrfKeyFormat;.getKeySize:()I` @kind virtual;
  #L430836.  v1:= temp;
  #L430838.  call `b`(v1) @signature `Lcom/google/crypto/tink/prf/AesCmacPrfKeyManager;.b:(I)V` @kind static;
  #L43083e.  return @kind void;
}
procedure `java.lang.Object` `createKey`(`com.google.crypto.tink.prf.AesCmacPrfKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/prf/AesCmacPrfKeyManager$b;.createKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4307f8.  v1:= (`com.google.crypto.tink.proto.AesCmacPrfKeyFormat`) v1 @kind object;
  #L4307fc.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/prf/AesCmacPrfKeyManager$b;.a:(Lcom/google/crypto/tink/proto/AesCmacPrfKeyFormat;)Lcom/google/crypto/tink/proto/AesCmacPrfKey;` @kind virtual;
  #L430802.  v1:= temp @kind object;
  #L430804.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKeyFormat`(`com.google.crypto.tink.prf.AesCmacPrfKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/prf/AesCmacPrfKeyManager$b;.parseKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4307dc.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/prf/AesCmacPrfKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesCmacPrfKeyFormat;` @kind virtual;
  #L4307e2.  v1:= temp @kind object;
  #L4307e4.  return v1 @kind object;
}
procedure `void` `validateKeyFormat`(`com.google.crypto.tink.prf.AesCmacPrfKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/prf/AesCmacPrfKeyManager$b;.validateKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L430850.  v1:= (`com.google.crypto.tink.proto.AesCmacPrfKeyFormat`) v1 @kind object;
  #L430854.  call `c`(v0, v1) @signature `Lcom/google/crypto/tink/prf/AesCmacPrfKeyManager$b;.c:(Lcom/google/crypto/tink/proto/AesCmacPrfKeyFormat;)V` @kind virtual;
  #L43085a.  return @kind void;
}
