record `com.google.crypto.tink.Registry$c` @kind class @AccessFlag  extends `com.google.crypto.tink.Registry$f` @kind interface {
  `com.google.crypto.tink.PrivateKeyTypeManager` `com.google.crypto.tink.Registry$c.a` @AccessFlag FINAL_SYNTHETIC;
  `com.google.crypto.tink.KeyTypeManager` `com.google.crypto.tink.Registry$c.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.Registry$c` v0 @kind this, `com.google.crypto.tink.PrivateKeyTypeManager` v1 @kind object, `com.google.crypto.tink.KeyTypeManager` v2 @kind object) @signature `Lcom/google/crypto/tink/Registry$c;.<init>:(Lcom/google/crypto/tink/PrivateKeyTypeManager;Lcom/google/crypto/tink/KeyTypeManager;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L42760c.  v0.`com.google.crypto.tink.Registry$c.a` @type ^`com.google.crypto.tink.PrivateKeyTypeManager` := v1 @kind object;
  #L427610.  v0.`com.google.crypto.tink.Registry$c.b` @type ^`com.google.crypto.tink.KeyTypeManager` := v2 @kind object;
  #L427614.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42761a.  return @kind void;
}
procedure `java.lang.Class` `a`(`com.google.crypto.tink.Registry$c` v1 @kind this) @signature `Lcom/google/crypto/tink/Registry$c;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4275cc.  v0:= v1.`com.google.crypto.tink.Registry$c.b` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L4275d0.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4275d6.  v0:= temp @kind object;
  #L4275d8.  return v0 @kind object;
}
procedure `java.lang.Class` `b`(`com.google.crypto.tink.Registry$c` v1 @kind this) @signature `Lcom/google/crypto/tink/Registry$c;.b:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4275ac.  v0:= v1.`com.google.crypto.tink.Registry$c.a` @type ^`com.google.crypto.tink.PrivateKeyTypeManager` @kind object;
  #L4275b0.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4275b6.  v0:= temp @kind object;
  #L4275b8.  return v0 @kind object;
}
procedure `java.util.Set` `c`(`com.google.crypto.tink.Registry$c` v1 @kind this) @signature `Lcom/google/crypto/tink/Registry$c;.c:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4275ec.  v0:= v1.`com.google.crypto.tink.Registry$c.a` @type ^`com.google.crypto.tink.PrivateKeyTypeManager` @kind object;
  #L4275f0.  call temp:= `supportedPrimitives`(v0) @signature `Lcom/google/crypto/tink/KeyTypeManager;.supportedPrimitives:()Ljava/util/Set;` @kind virtual;
  #L4275f6.  v0:= temp @kind object;
  #L4275f8.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeyManager` `d`(`com.google.crypto.tink.Registry$c` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lcom/google/crypto/tink/Registry$c;.d:(Ljava/lang/Class;)Lcom/google/crypto/tink/KeyManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L427538.  v0:= new `com.google.crypto.tink.PrivateKeyManagerImpl`;
  #L42753c.  v1:= v3.`com.google.crypto.tink.Registry$c.a` @type ^`com.google.crypto.tink.PrivateKeyTypeManager` @kind object;
  #L427540.  v2:= v3.`com.google.crypto.tink.Registry$c.b` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L427544.  call `<init>`(v0, v1, v2, v4) @signature `Lcom/google/crypto/tink/PrivateKeyManagerImpl;.<init>:(Lcom/google/crypto/tink/PrivateKeyTypeManager;Lcom/google/crypto/tink/KeyTypeManager;Ljava/lang/Class;)V` @kind direct;
  #L42754a.  return v0 @kind object;
  #L42754c.  v4:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L42754e.  v0:= new `java.security.GeneralSecurityException`;
  #L427552.  v1:= "Primitive type not supported" @kind object;
  #L427556.  call `<init>`(v0, v1, v4) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L42755c.  throw v0;
  catch `java.lang.IllegalArgumentException` @[L427538..L42754a] goto L42754c;
}
procedure `com.google.crypto.tink.KeyManager` `e`(`com.google.crypto.tink.Registry$c` v4 @kind this) @signature `Lcom/google/crypto/tink/Registry$c;.e:()Lcom/google/crypto/tink/KeyManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L427580.  v0:= new `com.google.crypto.tink.PrivateKeyManagerImpl`;
  #L427584.  v1:= v4.`com.google.crypto.tink.Registry$c.a` @type ^`com.google.crypto.tink.PrivateKeyTypeManager` @kind object;
  #L427588.  v2:= v4.`com.google.crypto.tink.Registry$c.b` @type ^`com.google.crypto.tink.KeyTypeManager` @kind object;
  #L42758c.  call temp:= `a`(v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.a:()Ljava/lang/Class;` @kind virtual;
  #L427592.  v3:= temp @kind object;
  #L427594.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/PrivateKeyManagerImpl;.<init>:(Lcom/google/crypto/tink/PrivateKeyTypeManager;Lcom/google/crypto/tink/KeyTypeManager;Ljava/lang/Class;)V` @kind direct;
  #L42759a.  return v0 @kind object;
}
