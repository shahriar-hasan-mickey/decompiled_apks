record `com.google.crypto.tink.signature.SignaturePemKeysetReader$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `com.google.crypto.tink.signature.SignaturePemKeysetReader$Builder.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.SignaturePemKeysetReader$Builder` v1 @kind this) @signature `Lcom/google/crypto/tink/signature/SignaturePemKeysetReader$Builder;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L48dfa4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48dfaa.  v0:= new `java.util.ArrayList`;
  #L48dfae.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L48dfb4.  v1.`com.google.crypto.tink.signature.SignaturePemKeysetReader$Builder.a` @type ^`java.util.List` := v0 @kind object;
  #L48dfb8.  return @kind void;
}
procedure `com.google.crypto.tink.signature.SignaturePemKeysetReader$Builder` `addPem`(`com.google.crypto.tink.signature.SignaturePemKeysetReader$Builder` v3 @kind this, `java.lang.String` v4 @kind object, `com.google.crypto.tink.subtle.PemKeyType` v5 @kind object) @signature `Lcom/google/crypto/tink/signature/SignaturePemKeysetReader$Builder;.addPem:(Ljava/lang/String;Lcom/google/crypto/tink/subtle/PemKeyType;)Lcom/google/crypto/tink/signature/SignaturePemKeysetReader$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L48df60.  v0:= new `com.google.crypto.tink.signature.SignaturePemKeysetReader$b`;
  #L48df64.  v1:= 0I;
  #L48df66.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/signature/SignaturePemKeysetReader$b;.<init>:(Lcom/google/crypto/tink/signature/SignaturePemKeysetReader$a;)V` @kind direct;
  #L48df6c.  v1:= new `java.io.BufferedReader`;
  #L48df70.  v2:= new `java.io.StringReader`;
  #L48df74.  call `<init>`(v2, v4) @signature `Ljava/io/StringReader;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48df7a.  call `<init>`(v1, v2) @signature `Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L48df80.  v0.`com.google.crypto.tink.signature.SignaturePemKeysetReader$b.a` @type ^`java.io.BufferedReader` := v1 @kind object;
  #L48df84.  v0.`com.google.crypto.tink.signature.SignaturePemKeysetReader$b.b` @type ^`com.google.crypto.tink.subtle.PemKeyType` := v5 @kind object;
  #L48df88.  v4:= v3.`com.google.crypto.tink.signature.SignaturePemKeysetReader$Builder.a` @type ^`java.util.List` @kind object;
  #L48df8c.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L48df92.  return v3 @kind object;
}
procedure `com.google.crypto.tink.KeysetReader` `build`(`com.google.crypto.tink.signature.SignaturePemKeysetReader$Builder` v2 @kind this) @signature `Lcom/google/crypto/tink/signature/SignaturePemKeysetReader$Builder;.build:()Lcom/google/crypto/tink/KeysetReader;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48df40.  v0:= new `com.google.crypto.tink.signature.SignaturePemKeysetReader`;
  #L48df44.  v1:= v2.`com.google.crypto.tink.signature.SignaturePemKeysetReader$Builder.a` @type ^`java.util.List` @kind object;
  #L48df48.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/signature/SignaturePemKeysetReader;.<init>:(Ljava/util/List;)V` @kind direct;
  #L48df4e.  return v0 @kind object;
}
