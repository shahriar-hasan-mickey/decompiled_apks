record `com.google.crypto.tink.signature.b$a` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.b$a` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/b$a;.<init>:(Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48b904.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L48b90a.  return @kind void;
}
procedure `com.google.crypto.tink.PublicKeyVerify` `b`(`com.google.crypto.tink.signature.b$a` v1 @kind this, `com.google.crypto.tink.proto.Ed25519PublicKey` v2 @kind object) @signature `Lcom/google/crypto/tink/signature/b$a;.b:(Lcom/google/crypto/tink/proto/Ed25519PublicKey;)Lcom/google/crypto/tink/PublicKeyVerify;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b8b8.  v0:= new `com.google.crypto.tink.subtle.Ed25519Verify`;
  #L48b8bc.  call temp:= `getKeyValue`(v2) @signature `Lcom/google/crypto/tink/proto/Ed25519PublicKey;.getKeyValue:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L48b8c2.  v2:= temp @kind object;
  #L48b8c4.  call temp:= `toByteArray`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L48b8ca.  v2:= temp @kind object;
  #L48b8cc.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/subtle/Ed25519Verify;.<init>:([B)V` @kind direct;
  #L48b8d2.  return v0 @kind object;
}
procedure `java.lang.Object` `getPrimitive`(`com.google.crypto.tink.signature.b$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/b$a;.getPrimitive:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48b8e4.  v1:= (`com.google.crypto.tink.proto.Ed25519PublicKey`) v1 @kind object;
  #L48b8e8.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/signature/b$a;.b:(Lcom/google/crypto/tink/proto/Ed25519PublicKey;)Lcom/google/crypto/tink/PublicKeyVerify;` @kind virtual;
  #L48b8ee.  v1:= temp @kind object;
  #L48b8f0.  return v1 @kind object;
}
