record `com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$KeyFactory` @kind class {
  `com.google.crypto.tink.signature.RsaSsaPssSignKeyManager` `com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b` v0 @kind this, `com.google.crypto.tink.signature.RsaSsaPssSignKeyManager` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.<init>:(Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48cf08.  v0.`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b.b` @type ^`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager` := v1 @kind object;
  #L48cf0c.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L48cf12.  return @kind void;
}
procedure `com.google.crypto.tink.proto.RsaSsaPssPrivateKey` `a`(`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b` v6 @kind this, `com.google.crypto.tink.proto.RsaSsaPssKeyFormat` v7 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.a:(Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L48ccc4.  call temp:= `getParams`(v7) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/RsaSsaPssParams;` @kind virtual;
  #L48ccca.  v0:= temp @kind object;
  #L48cccc.  call temp:= `getModulusSizeInBits`(v7) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;.getModulusSizeInBits:()I` @kind virtual;
  #L48ccd2.  v1:= temp;
  #L48ccd4.  call `validateRsaModulusSize`(v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateRsaModulusSize:(I)V` @kind static;
  #L48ccda.  call temp:= `getSigHash`(v0) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams;.getSigHash:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L48cce0.  v1:= temp @kind object;
  #L48cce2.  call temp:= `c`(v1) @signature `Lcom/google/crypto/tink/signature/f;.c:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L48cce8.  v1:= temp @kind object;
  #L48ccea.  call `validateSignatureHash`(v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateSignatureHash:(Lcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind static;
  #L48ccf0.  v1:= `@@com.google.crypto.tink.subtle.EngineFactory.KEY_PAIR_GENERATOR` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L48ccf4.  v2:= "RSA" @kind object;
  #L48ccf8.  call temp:= `getInstance`(v1, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L48ccfe.  v1:= temp @kind object;
  #L48cd00.  v1:= (`java.security.KeyPairGenerator`) v1 @kind object;
  #L48cd04.  v2:= new `java.security.spec.RSAKeyGenParameterSpec`;
  #L48cd08.  call temp:= `getModulusSizeInBits`(v7) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;.getModulusSizeInBits:()I` @kind virtual;
  #L48cd0e.  v3:= temp;
  #L48cd10.  v4:= new `java.math.BigInteger`;
  #L48cd14.  call temp:= `getPublicExponent`(v7) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;.getPublicExponent:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L48cd1a.  v7:= temp @kind object;
  #L48cd1c.  call temp:= `toByteArray`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L48cd22.  v7:= temp @kind object;
  #L48cd24.  v5:= 1I;
  #L48cd26.  call `<init>`(v4, v5, v7) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L48cd2c.  call `<init>`(v2, v3, v4) @signature `Ljava/security/spec/RSAKeyGenParameterSpec;.<init>:(ILjava/math/BigInteger;)V` @kind direct;
  #L48cd32.  call `initialize`(v1, v2) @signature `Ljava/security/KeyPairGenerator;.initialize:(Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L48cd38.  call temp:= `generateKeyPair`(v1) @signature `Ljava/security/KeyPairGenerator;.generateKeyPair:()Ljava/security/KeyPair;` @kind virtual;
  #L48cd3e.  v7:= temp @kind object;
  #L48cd40.  call temp:= `getPublic`(v7) @signature `Ljava/security/KeyPair;.getPublic:()Ljava/security/PublicKey;` @kind virtual;
  #L48cd46.  v1:= temp @kind object;
  #L48cd48.  v1:= (`java.security.interfaces.RSAPublicKey`) v1 @kind object;
  #L48cd4c.  call temp:= `getPrivate`(v7) @signature `Ljava/security/KeyPair;.getPrivate:()Ljava/security/PrivateKey;` @kind virtual;
  #L48cd52.  v7:= temp @kind object;
  #L48cd54.  v7:= (`java.security.interfaces.RSAPrivateCrtKey`) v7 @kind object;
  #L48cd58.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;.newBuilder:()Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey$Builder;` @kind static;
  #L48cd5e.  v2:= temp @kind object;
  #L48cd60.  v3:= v6.`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b.b` @type ^`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager` @kind object;
  #L48cd64.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager;.getVersion:()I` @kind virtual;
  #L48cd6a.  v3:= temp;
  #L48cd6c.  call temp:= `setVersion`(v2, v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey$Builder;` @kind virtual;
  #L48cd72.  v2:= temp @kind object;
  #L48cd74.  call temp:= `setParams`(v2, v0) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey$Builder;.setParams:(Lcom/google/crypto/tink/proto/RsaSsaPssParams;)Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey$Builder;` @kind virtual;
  #L48cd7a.  v0:= temp @kind object;
  #L48cd7c.  call temp:= `getPublicExponent`(v1) @signature `Ljava/security/interfaces/RSAPublicKey;.getPublicExponent:()Ljava/math/BigInteger;` @kind interface;
  #L48cd82.  v2:= temp @kind object;
  #L48cd84.  call temp:= `toByteArray`(v2) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L48cd8a.  v2:= temp @kind object;
  #L48cd8c.  call temp:= `copyFrom`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48cd92.  v2:= temp @kind object;
  #L48cd94.  call temp:= `setE`(v0, v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey$Builder;.setE:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey$Builder;` @kind virtual;
  #L48cd9a.  v0:= temp @kind object;
  #L48cd9c.  call temp:= `getModulus`(v1) @signature `Ljava/security/interfaces/RSAPublicKey;.getModulus:()Ljava/math/BigInteger;` @kind interface;
  #L48cda2.  v1:= temp @kind object;
  #L48cda4.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L48cdaa.  v1:= temp @kind object;
  #L48cdac.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48cdb2.  v1:= temp @kind object;
  #L48cdb4.  call temp:= `setN`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey$Builder;.setN:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey$Builder;` @kind virtual;
  #L48cdba.  v0:= temp @kind object;
  #L48cdbc.  call temp:= `build`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L48cdc2.  v0:= temp @kind object;
  #L48cdc4.  v0:= (`com.google.crypto.tink.proto.RsaSsaPssPublicKey`) v0 @kind object;
  #L48cdc8.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;.newBuilder:()Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;` @kind static;
  #L48cdce.  v1:= temp @kind object;
  #L48cdd0.  v2:= v6.`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b.b` @type ^`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager` @kind object;
  #L48cdd4.  call temp:= `getVersion`(v2) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager;.getVersion:()I` @kind virtual;
  #L48cdda.  v2:= temp;
  #L48cddc.  call temp:= `setVersion`(v1, v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;` @kind virtual;
  #L48cde2.  v1:= temp @kind object;
  #L48cde4.  call temp:= `setPublicKey`(v1, v0) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;.setPublicKey:(Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;` @kind virtual;
  #L48cdea.  v0:= temp @kind object;
  #L48cdec.  call temp:= `getPrivateExponent`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrivateExponent:()Ljava/math/BigInteger;` @kind interface;
  #L48cdf2.  v1:= temp @kind object;
  #L48cdf4.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L48cdfa.  v1:= temp @kind object;
  #L48cdfc.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48ce02.  v1:= temp @kind object;
  #L48ce04.  call temp:= `setD`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;.setD:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;` @kind virtual;
  #L48ce0a.  v0:= temp @kind object;
  #L48ce0c.  call temp:= `getPrimeP`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeP:()Ljava/math/BigInteger;` @kind interface;
  #L48ce12.  v1:= temp @kind object;
  #L48ce14.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L48ce1a.  v1:= temp @kind object;
  #L48ce1c.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48ce22.  v1:= temp @kind object;
  #L48ce24.  call temp:= `setP`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;.setP:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;` @kind virtual;
  #L48ce2a.  v0:= temp @kind object;
  #L48ce2c.  call temp:= `getPrimeQ`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeQ:()Ljava/math/BigInteger;` @kind interface;
  #L48ce32.  v1:= temp @kind object;
  #L48ce34.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L48ce3a.  v1:= temp @kind object;
  #L48ce3c.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48ce42.  v1:= temp @kind object;
  #L48ce44.  call temp:= `setQ`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;.setQ:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;` @kind virtual;
  #L48ce4a.  v0:= temp @kind object;
  #L48ce4c.  call temp:= `getPrimeExponentP`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeExponentP:()Ljava/math/BigInteger;` @kind interface;
  #L48ce52.  v1:= temp @kind object;
  #L48ce54.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L48ce5a.  v1:= temp @kind object;
  #L48ce5c.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48ce62.  v1:= temp @kind object;
  #L48ce64.  call temp:= `setDp`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;.setDp:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;` @kind virtual;
  #L48ce6a.  v0:= temp @kind object;
  #L48ce6c.  call temp:= `getPrimeExponentQ`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeExponentQ:()Ljava/math/BigInteger;` @kind interface;
  #L48ce72.  v1:= temp @kind object;
  #L48ce74.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L48ce7a.  v1:= temp @kind object;
  #L48ce7c.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48ce82.  v1:= temp @kind object;
  #L48ce84.  call temp:= `setDq`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;.setDq:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;` @kind virtual;
  #L48ce8a.  v0:= temp @kind object;
  #L48ce8c.  call temp:= `getCrtCoefficient`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getCrtCoefficient:()Ljava/math/BigInteger;` @kind interface;
  #L48ce92.  v7:= temp @kind object;
  #L48ce94.  call temp:= `toByteArray`(v7) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L48ce9a.  v7:= temp @kind object;
  #L48ce9c.  call temp:= `copyFrom`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48cea2.  v7:= temp @kind object;
  #L48cea4.  call temp:= `setCrt`(v0, v7) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;.setCrt:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey$Builder;` @kind virtual;
  #L48ceaa.  v7:= temp @kind object;
  #L48ceac.  call temp:= `build`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L48ceb2.  v7:= temp @kind object;
  #L48ceb4.  v7:= (`com.google.crypto.tink.proto.RsaSsaPssPrivateKey`) v7 @kind object;
  #L48ceb8.  return v7 @kind object;
}
procedure `com.google.crypto.tink.proto.RsaSsaPssKeyFormat` `b`(`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48cca0.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L48cca6.  v0:= temp @kind object;
  #L48cca8.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;` @kind static;
  #L48ccae.  v2:= temp @kind object;
  #L48ccb0.  return v2 @kind object;
}
procedure `void` `c`(`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b` v2 @kind this, `com.google.crypto.tink.proto.RsaSsaPssKeyFormat` v3 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.c:(Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48cf24.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/RsaSsaPssParams;` @kind virtual;
  #L48cf2a.  v0:= temp @kind object;
  #L48cf2c.  call `f`(v0) @signature `Lcom/google/crypto/tink/signature/f;.f:(Lcom/google/crypto/tink/proto/RsaSsaPssParams;)V` @kind static;
  #L48cf32.  call temp:= `getModulusSizeInBits`(v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;.getModulusSizeInBits:()I` @kind virtual;
  #L48cf38.  v0:= temp;
  #L48cf3a.  call `validateRsaModulusSize`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateRsaModulusSize:(I)V` @kind static;
  #L48cf40.  v0:= new `java.math.BigInteger`;
  #L48cf44.  call temp:= `getPublicExponent`(v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;.getPublicExponent:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L48cf4a.  v3:= temp @kind object;
  #L48cf4c.  call temp:= `toByteArray`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L48cf52.  v3:= temp @kind object;
  #L48cf54.  v1:= 1I;
  #L48cf56.  call `<init>`(v0, v1, v3) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L48cf5c.  call `validateRsaPublicExponent`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateRsaPublicExponent:(Ljava/math/BigInteger;)V` @kind static;
  #L48cf62.  return @kind void;
}
procedure `java.lang.Object` `createKey`(`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.createKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48cee8.  v1:= (`com.google.crypto.tink.proto.RsaSsaPssKeyFormat`) v1 @kind object;
  #L48ceec.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.a:(Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;)Lcom/google/crypto/tink/proto/RsaSsaPssPrivateKey;` @kind virtual;
  #L48cef2.  v1:= temp @kind object;
  #L48cef4.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKeyFormat`(`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.parseKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48cecc.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;` @kind virtual;
  #L48ced2.  v1:= temp @kind object;
  #L48ced4.  return v1 @kind object;
}
procedure `void` `validateKeyFormat`(`com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.validateKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48cf74.  v1:= (`com.google.crypto.tink.proto.RsaSsaPssKeyFormat`) v1 @kind object;
  #L48cf78.  call `c`(v0, v1) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager$b;.c:(Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;)V` @kind virtual;
  #L48cf7e.  return @kind void;
}
