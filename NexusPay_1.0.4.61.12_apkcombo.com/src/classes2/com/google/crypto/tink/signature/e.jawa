record `com.google.crypto.tink.signature.e` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.e` v4 @kind this) @signature `Lcom/google/crypto/tink/signature/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48d498.  v0:= constclass @type ^`com.google.crypto.tink.proto.RsaSsaPssPublicKey` @kind object;
  #L48d49c.  v1:= 1I;
  #L48d49e.  v1:= new `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory`[v1];
  #L48d4a2.  v2:= new `com.google.crypto.tink.signature.e$a`;
  #L48d4a6.  v3:= constclass @type ^`com.google.crypto.tink.PublicKeyVerify` @kind object;
  #L48d4aa.  call `<init>`(v2, v3) @signature `Lcom/google/crypto/tink/signature/e$a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L48d4b0.  v3:= 0I;
  #L48d4b2.  v1[v3]:= v2 @kind object;
  #L48d4b6.  call `<init>`(v4, v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager;.<init>:(Ljava/lang/Class;[Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;)V` @kind direct;
  #L48d4bc.  return @kind void;
}
procedure `com.google.crypto.tink.proto.RsaSsaPssPublicKey` `b`(`com.google.crypto.tink.signature.e` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/signature/e;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d42c.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L48d432.  v0:= temp @kind object;
  #L48d434.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;` @kind static;
  #L48d43a.  v2:= temp @kind object;
  #L48d43c.  return v2 @kind object;
}
procedure `void` `c`(`com.google.crypto.tink.signature.e` v3 @kind this, `com.google.crypto.tink.proto.RsaSsaPssPublicKey` v4 @kind object) @signature `Lcom/google/crypto/tink/signature/e;.c:(Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L48d4d0.  call temp:= `getVersion`(v4) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;.getVersion:()I` @kind virtual;
  #L48d4d6.  v0:= temp;
  #L48d4d8.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/signature/e;.getVersion:()I` @kind virtual;
  #L48d4de.  v1:= temp;
  #L48d4e0.  call `validateVersion`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateVersion:(II)V` @kind static;
  #L48d4e6.  v0:= new `java.math.BigInteger`;
  #L48d4ea.  call temp:= `getN`(v4) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;.getN:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L48d4f0.  v1:= temp @kind object;
  #L48d4f2.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L48d4f8.  v1:= temp @kind object;
  #L48d4fa.  v2:= 1I;
  #L48d4fc.  call `<init>`(v0, v2, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L48d502.  call temp:= `bitLength`(v0) @signature `Ljava/math/BigInteger;.bitLength:()I` @kind virtual;
  #L48d508.  v0:= temp;
  #L48d50a.  call `validateRsaModulusSize`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateRsaModulusSize:(I)V` @kind static;
  #L48d510.  v0:= new `java.math.BigInteger`;
  #L48d514.  call temp:= `getE`(v4) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;.getE:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L48d51a.  v1:= temp @kind object;
  #L48d51c.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L48d522.  v1:= temp @kind object;
  #L48d524.  call `<init>`(v0, v2, v1) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L48d52a.  call `validateRsaPublicExponent`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateRsaPublicExponent:(Ljava/math/BigInteger;)V` @kind static;
  #L48d530.  call temp:= `getParams`(v4) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;.getParams:()Lcom/google/crypto/tink/proto/RsaSsaPssParams;` @kind virtual;
  #L48d536.  v4:= temp @kind object;
  #L48d538.  call `f`(v4) @signature `Lcom/google/crypto/tink/signature/f;.f:(Lcom/google/crypto/tink/proto/RsaSsaPssParams;)V` @kind static;
  #L48d53e.  return @kind void;
}
procedure `java.lang.String` `getKeyType`(`com.google.crypto.tink.signature.e` v1 @kind this) @signature `Lcom/google/crypto/tink/signature/e;.getKeyType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d480.  v0:= "type.googleapis.com/google.crypto.tink.RsaSsaPssPublicKey" @kind object;
  #L48d484.  return v0 @kind object;
}
procedure `int` `getVersion`(`com.google.crypto.tink.signature.e` v1 @kind this) @signature `Lcom/google/crypto/tink/signature/e;.getVersion:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d46c.  v0:= 0I;
  #L48d46e.  return v0;
}
procedure `com.google.crypto.tink.proto.KeyData$KeyMaterialType` `keyMaterialType`(`com.google.crypto.tink.signature.e` v1 @kind this) @signature `Lcom/google/crypto/tink/signature/e;.keyMaterialType:()Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48d414.  v0:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.ASYMMETRIC_PUBLIC` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L48d418.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKey`(`com.google.crypto.tink.signature.e` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/e;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48d450.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/signature/e;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;` @kind virtual;
  #L48d456.  v1:= temp @kind object;
  #L48d458.  return v1 @kind object;
}
procedure `void` `validateKey`(`com.google.crypto.tink.signature.e` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/e;.validateKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48d550.  v1:= (`com.google.crypto.tink.proto.RsaSsaPssPublicKey`) v1 @kind object;
  #L48d554.  call `c`(v0, v1) @signature `Lcom/google/crypto/tink/signature/e;.c:(Lcom/google/crypto/tink/proto/RsaSsaPssPublicKey;)V` @kind virtual;
  #L48d55a.  return @kind void;
}
