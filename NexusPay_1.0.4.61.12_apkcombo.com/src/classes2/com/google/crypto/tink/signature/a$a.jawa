record `com.google.crypto.tink.signature.a$a` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.a$a` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/a$a;.<init>:(Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48b3a0.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L48b3a6.  return @kind void;
}
procedure `com.google.crypto.tink.PublicKeyVerify` `b`(`com.google.crypto.tink.signature.a$a` v3 @kind this, `com.google.crypto.tink.proto.EcdsaPublicKey` v4 @kind object) @signature `Lcom/google/crypto/tink/signature/a$a;.b:(Lcom/google/crypto/tink/proto/EcdsaPublicKey;)Lcom/google/crypto/tink/PublicKeyVerify;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L48b2f4.  call temp:= `getParams`(v4) @signature `Lcom/google/crypto/tink/proto/EcdsaPublicKey;.getParams:()Lcom/google/crypto/tink/proto/EcdsaParams;` @kind virtual;
  #L48b2fa.  v0:= temp @kind object;
  #L48b2fc.  call temp:= `getCurve`(v0) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.getCurve:()Lcom/google/crypto/tink/proto/EllipticCurveType;` @kind virtual;
  #L48b302.  v0:= temp @kind object;
  #L48b304.  call temp:= `a`(v0) @signature `Lcom/google/crypto/tink/signature/f;.a:(Lcom/google/crypto/tink/proto/EllipticCurveType;)Lcom/google/crypto/tink/subtle/EllipticCurves$CurveType;` @kind static;
  #L48b30a.  v0:= temp @kind object;
  #L48b30c.  call temp:= `getX`(v4) @signature `Lcom/google/crypto/tink/proto/EcdsaPublicKey;.getX:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L48b312.  v1:= temp @kind object;
  #L48b314.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L48b31a.  v1:= temp @kind object;
  #L48b31c.  call temp:= `getY`(v4) @signature `Lcom/google/crypto/tink/proto/EcdsaPublicKey;.getY:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L48b322.  v2:= temp @kind object;
  #L48b324.  call temp:= `toByteArray`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L48b32a.  v2:= temp @kind object;
  #L48b32c.  call temp:= `getEcPublicKey`(v0, v1, v2) @signature `Lcom/google/crypto/tink/subtle/EllipticCurves;.getEcPublicKey:(Lcom/google/crypto/tink/subtle/EllipticCurves$CurveType;[B[B)Ljava/security/interfaces/ECPublicKey;` @kind static;
  #L48b332.  v0:= temp @kind object;
  #L48b334.  v1:= new `com.google.crypto.tink.subtle.EcdsaVerifyJce`;
  #L48b338.  call temp:= `getParams`(v4) @signature `Lcom/google/crypto/tink/proto/EcdsaPublicKey;.getParams:()Lcom/google/crypto/tink/proto/EcdsaParams;` @kind virtual;
  #L48b33e.  v2:= temp @kind object;
  #L48b340.  call temp:= `getHashType`(v2) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.getHashType:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L48b346.  v2:= temp @kind object;
  #L48b348.  call temp:= `c`(v2) @signature `Lcom/google/crypto/tink/signature/f;.c:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L48b34e.  v2:= temp @kind object;
  #L48b350.  call temp:= `getParams`(v4) @signature `Lcom/google/crypto/tink/proto/EcdsaPublicKey;.getParams:()Lcom/google/crypto/tink/proto/EcdsaParams;` @kind virtual;
  #L48b356.  v4:= temp @kind object;
  #L48b358.  call temp:= `getEncoding`(v4) @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.getEncoding:()Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;` @kind virtual;
  #L48b35e.  v4:= temp @kind object;
  #L48b360.  call temp:= `b`(v4) @signature `Lcom/google/crypto/tink/signature/f;.b:(Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;)Lcom/google/crypto/tink/subtle/EllipticCurves$EcdsaEncoding;` @kind static;
  #L48b366.  v4:= temp @kind object;
  #L48b368.  call `<init>`(v1, v0, v2, v4) @signature `Lcom/google/crypto/tink/subtle/EcdsaVerifyJce;.<init>:(Ljava/security/interfaces/ECPublicKey;Lcom/google/crypto/tink/subtle/Enums$HashType;Lcom/google/crypto/tink/subtle/EllipticCurves$EcdsaEncoding;)V` @kind direct;
  #L48b36e.  return v1 @kind object;
}
procedure `java.lang.Object` `getPrimitive`(`com.google.crypto.tink.signature.a$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/a$a;.getPrimitive:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48b380.  v1:= (`com.google.crypto.tink.proto.EcdsaPublicKey`) v1 @kind object;
  #L48b384.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/signature/a$a;.b:(Lcom/google/crypto/tink/proto/EcdsaPublicKey;)Lcom/google/crypto/tink/PublicKeyVerify;` @kind virtual;
  #L48b38a.  v1:= temp @kind object;
  #L48b38c.  return v1 @kind object;
}
