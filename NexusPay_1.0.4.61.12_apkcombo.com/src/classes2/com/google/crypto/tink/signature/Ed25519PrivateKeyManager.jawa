record `com.google.crypto.tink.signature.Ed25519PrivateKeyManager` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.PrivateKeyTypeManager` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.Ed25519PrivateKeyManager` v5 @kind this) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L48b7cc.  v0:= constclass @type ^`com.google.crypto.tink.proto.Ed25519PrivateKey` @kind object;
  #L48b7d0.  v1:= constclass @type ^`com.google.crypto.tink.proto.Ed25519PublicKey` @kind object;
  #L48b7d4.  v2:= 1I;
  #L48b7d6.  v2:= new `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory`[v2];
  #L48b7da.  v3:= new `com.google.crypto.tink.signature.Ed25519PrivateKeyManager$a`;
  #L48b7de.  v4:= constclass @type ^`com.google.crypto.tink.PublicKeySign` @kind object;
  #L48b7e2.  call `<init>`(v3, v4) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager$a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L48b7e8.  v4:= 0I;
  #L48b7ea.  v2[v4]:= v3 @kind object;
  #L48b7ee.  call `<init>`(v5, v0, v1, v2) @signature `Lcom/google/crypto/tink/PrivateKeyTypeManager;.<init>:(Ljava/lang/Class;Ljava/lang/Class;[Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;)V` @kind direct;
  #L48b7f4.  return @kind void;
}
procedure `com.google.crypto.tink.KeyTemplate` `ed25519Template`() @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.ed25519Template:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L48b67c.  v0:= new `com.google.crypto.tink.signature.Ed25519PrivateKeyManager`;
  #L48b680.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.<init>:()V` @kind direct;
  #L48b686.  call temp:= `getKeyType`(v0) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L48b68c.  v0:= temp @kind object;
  #L48b68e.  v1:= 0I;
  #L48b690.  v1:= new `byte`[v1];
  #L48b694.  v2:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.TINK` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L48b698.  call temp:= `create`(v0, v1, v2) @signature `Lcom/google/crypto/tink/KeyTemplate;.create:(Ljava/lang/String;[BLcom/google/crypto/tink/KeyTemplate$OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L48b69e.  v0:= temp @kind object;
  #L48b6a0.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeyTemplate` `rawEd25519Template`() @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.rawEd25519Template:()Lcom/google/crypto/tink/KeyTemplate;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L48b6b4.  v0:= new `com.google.crypto.tink.signature.Ed25519PrivateKeyManager`;
  #L48b6b8.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.<init>:()V` @kind direct;
  #L48b6be.  call temp:= `getKeyType`(v0) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L48b6c4.  v0:= temp @kind object;
  #L48b6c6.  v1:= 0I;
  #L48b6c8.  v1:= new `byte`[v1];
  #L48b6cc.  v2:= `@@com.google.crypto.tink.KeyTemplate$OutputPrefixType.RAW` @type ^`com.google.crypto.tink.KeyTemplate$OutputPrefixType` @kind object;
  #L48b6d0.  call temp:= `create`(v0, v1, v2) @signature `Lcom/google/crypto/tink/KeyTemplate;.create:(Ljava/lang/String;[BLcom/google/crypto/tink/KeyTemplate$OutputPrefixType;)Lcom/google/crypto/tink/KeyTemplate;` @kind static;
  #L48b6d6.  v0:= temp @kind object;
  #L48b6d8.  return v0 @kind object;
}
procedure `void` `registerPair`(`boolean` v2 ) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.registerPair:(Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L48b808.  v0:= new `com.google.crypto.tink.signature.Ed25519PrivateKeyManager`;
  #L48b80c.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.<init>:()V` @kind direct;
  #L48b812.  v1:= new `com.google.crypto.tink.signature.b`;
  #L48b816.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/signature/b;.<init>:()V` @kind direct;
  #L48b81c.  call `registerAsymmetricKeyManagers`(v0, v1, v2) @signature `Lcom/google/crypto/tink/Registry;.registerAsymmetricKeyManagers:(Lcom/google/crypto/tink/PrivateKeyTypeManager;Lcom/google/crypto/tink/KeyTypeManager;Z)V` @kind static;
  #L48b822.  return @kind void;
}
procedure `java.lang.String` `getKeyType`(`com.google.crypto.tink.signature.Ed25519PrivateKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.getKeyType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b7b4.  v0:= "type.googleapis.com/google.crypto.tink.Ed25519PrivateKey" @kind object;
  #L48b7b8.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.Ed25519PublicKey` `getPublicKey`(`com.google.crypto.tink.signature.Ed25519PrivateKeyManager` v0 @kind this, `com.google.crypto.tink.proto.Ed25519PrivateKey` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.getPublicKey:(Lcom/google/crypto/tink/proto/Ed25519PrivateKey;)Lcom/google/crypto/tink/proto/Ed25519PublicKey;` @AccessFlag PUBLIC {
    temp;

  #L48b730.  call temp:= `getPublicKey`(v1) @signature `Lcom/google/crypto/tink/proto/Ed25519PrivateKey;.getPublicKey:()Lcom/google/crypto/tink/proto/Ed25519PublicKey;` @kind virtual;
  #L48b736.  v1:= temp @kind object;
  #L48b738.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `getPublicKey`(`com.google.crypto.tink.signature.Ed25519PrivateKeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.getPublicKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48b764.  v1:= (`com.google.crypto.tink.proto.Ed25519PrivateKey`) v1 @kind object;
  #L48b768.  call temp:= `getPublicKey`(v0, v1) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.getPublicKey:(Lcom/google/crypto/tink/proto/Ed25519PrivateKey;)Lcom/google/crypto/tink/proto/Ed25519PublicKey;` @kind virtual;
  #L48b76e.  v1:= temp @kind object;
  #L48b770.  return v1 @kind object;
}
procedure `int` `getVersion`(`com.google.crypto.tink.signature.Ed25519PrivateKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.getVersion:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b7a0.  v0:= 0I;
  #L48b7a2.  return v0;
}
procedure `com.google.crypto.tink.KeyTypeManager$KeyFactory` `keyFactory`(`com.google.crypto.tink.signature.Ed25519PrivateKeyManager` v2 @kind this) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.keyFactory:()Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48b6ec.  v0:= new `com.google.crypto.tink.signature.Ed25519PrivateKeyManager$b`;
  #L48b6f0.  v1:= constclass @type ^`com.google.crypto.tink.proto.Ed25519KeyFormat` @kind object;
  #L48b6f4.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager$b;.<init>:(Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;Ljava/lang/Class;)V` @kind direct;
  #L48b6fa.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyData$KeyMaterialType` `keyMaterialType`(`com.google.crypto.tink.signature.Ed25519PrivateKeyManager` v1 @kind this) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.keyMaterialType:()Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b74c.  v0:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.ASYMMETRIC_PRIVATE` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L48b750.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.Ed25519PrivateKey` `parseKey`(`com.google.crypto.tink.signature.Ed25519PrivateKeyManager` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/Ed25519PrivateKey;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48b70c.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L48b712.  v0:= temp @kind object;
  #L48b714.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/Ed25519PrivateKey;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/Ed25519PrivateKey;` @kind static;
  #L48b71a.  v2:= temp @kind object;
  #L48b71c.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKey`(`com.google.crypto.tink.signature.Ed25519PrivateKeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48b784.  call temp:= `parseKey`(v0, v1) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.parseKey:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/Ed25519PrivateKey;` @kind virtual;
  #L48b78a.  v1:= temp @kind object;
  #L48b78c.  return v1 @kind object;
}
procedure `void` `validateKey`(`com.google.crypto.tink.signature.Ed25519PrivateKeyManager` v2 @kind this, `com.google.crypto.tink.proto.Ed25519PrivateKey` v3 @kind object) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.validateKey:(Lcom/google/crypto/tink/proto/Ed25519PrivateKey;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48b834.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/proto/Ed25519PrivateKey;.getVersion:()I` @kind virtual;
  #L48b83a.  v0:= temp;
  #L48b83c.  call temp:= `getVersion`(v2) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.getVersion:()I` @kind virtual;
  #L48b842.  v1:= temp;
  #L48b844.  call `validateVersion`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateVersion:(II)V` @kind static;
  #L48b84a.  v0:= new `com.google.crypto.tink.signature.b`;
  #L48b84e.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/signature/b;.<init>:()V` @kind direct;
  #L48b854.  call temp:= `getPublicKey`(v3) @signature `Lcom/google/crypto/tink/proto/Ed25519PrivateKey;.getPublicKey:()Lcom/google/crypto/tink/proto/Ed25519PublicKey;` @kind virtual;
  #L48b85a.  v1:= temp @kind object;
  #L48b85c.  call `c`(v0, v1) @signature `Lcom/google/crypto/tink/signature/b;.c:(Lcom/google/crypto/tink/proto/Ed25519PublicKey;)V` @kind virtual;
  #L48b862.  call temp:= `getKeyValue`(v3) @signature `Lcom/google/crypto/tink/proto/Ed25519PrivateKey;.getKeyValue:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L48b868.  v3:= temp @kind object;
  #L48b86a.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L48b870.  v3:= temp;
  #L48b872.  v0:= 32I;
  #L48b876.  if v3 != v0 then goto L48b87c;
  #L48b87a.  return @kind void;
  #L48b87c.  v3:= new `java.security.GeneralSecurityException`;
  #L48b880.  v0:= "invalid Ed25519 private key: incorrect key length" @kind object;
  #L48b884.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48b88a.  throw v3;
}
procedure `void` `validateKey`(`com.google.crypto.tink.signature.Ed25519PrivateKeyManager` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.validateKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48b89c.  v1:= (`com.google.crypto.tink.proto.Ed25519PrivateKey`) v1 @kind object;
  #L48b8a0.  call `validateKey`(v0, v1) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.validateKey:(Lcom/google/crypto/tink/proto/Ed25519PrivateKey;)V` @kind virtual;
  #L48b8a6.  return @kind void;
}
