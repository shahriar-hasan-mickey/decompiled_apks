record `com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$KeyFactory` @kind class {
  `com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` `com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b` v0 @kind this, `com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.<init>:(Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48c3f0.  v0.`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b.b` @type ^`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` := v1 @kind object;
  #L48c3f4.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L48c3fa.  return @kind void;
}
procedure `com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey` `a`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b` v6 @kind this, `com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat` v7 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.a:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L48c1d0.  call temp:= `getParams`(v7) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;.getParams:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;` @kind virtual;
  #L48c1d6.  v0:= temp @kind object;
  #L48c1d8.  v1:= `@@com.google.crypto.tink.subtle.EngineFactory.KEY_PAIR_GENERATOR` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L48c1dc.  v2:= "RSA" @kind object;
  #L48c1e0.  call temp:= `getInstance`(v1, v2) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L48c1e6.  v1:= temp @kind object;
  #L48c1e8.  v1:= (`java.security.KeyPairGenerator`) v1 @kind object;
  #L48c1ec.  v2:= new `java.security.spec.RSAKeyGenParameterSpec`;
  #L48c1f0.  call temp:= `getModulusSizeInBits`(v7) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;.getModulusSizeInBits:()I` @kind virtual;
  #L48c1f6.  v3:= temp;
  #L48c1f8.  v4:= new `java.math.BigInteger`;
  #L48c1fc.  call temp:= `getPublicExponent`(v7) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;.getPublicExponent:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L48c202.  v7:= temp @kind object;
  #L48c204.  call temp:= `toByteArray`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L48c20a.  v7:= temp @kind object;
  #L48c20c.  v5:= 1I;
  #L48c20e.  call `<init>`(v4, v5, v7) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L48c214.  call `<init>`(v2, v3, v4) @signature `Ljava/security/spec/RSAKeyGenParameterSpec;.<init>:(ILjava/math/BigInteger;)V` @kind direct;
  #L48c21a.  call `initialize`(v1, v2) @signature `Ljava/security/KeyPairGenerator;.initialize:(Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L48c220.  call temp:= `generateKeyPair`(v1) @signature `Ljava/security/KeyPairGenerator;.generateKeyPair:()Ljava/security/KeyPair;` @kind virtual;
  #L48c226.  v7:= temp @kind object;
  #L48c228.  call temp:= `getPublic`(v7) @signature `Ljava/security/KeyPair;.getPublic:()Ljava/security/PublicKey;` @kind virtual;
  #L48c22e.  v1:= temp @kind object;
  #L48c230.  v1:= (`java.security.interfaces.RSAPublicKey`) v1 @kind object;
  #L48c234.  call temp:= `getPrivate`(v7) @signature `Ljava/security/KeyPair;.getPrivate:()Ljava/security/PrivateKey;` @kind virtual;
  #L48c23a.  v7:= temp @kind object;
  #L48c23c.  v7:= (`java.security.interfaces.RSAPrivateCrtKey`) v7 @kind object;
  #L48c240.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.newBuilder:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey$Builder;` @kind static;
  #L48c246.  v2:= temp @kind object;
  #L48c248.  v3:= v6.`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b.b` @type ^`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` @kind object;
  #L48c24c.  call temp:= `getVersion`(v3) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.getVersion:()I` @kind virtual;
  #L48c252.  v3:= temp;
  #L48c254.  call temp:= `setVersion`(v2, v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey$Builder;` @kind virtual;
  #L48c25a.  v2:= temp @kind object;
  #L48c25c.  call temp:= `setParams`(v2, v0) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey$Builder;.setParams:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey$Builder;` @kind virtual;
  #L48c262.  v0:= temp @kind object;
  #L48c264.  call temp:= `getPublicExponent`(v1) @signature `Ljava/security/interfaces/RSAPublicKey;.getPublicExponent:()Ljava/math/BigInteger;` @kind interface;
  #L48c26a.  v2:= temp @kind object;
  #L48c26c.  call temp:= `toByteArray`(v2) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L48c272.  v2:= temp @kind object;
  #L48c274.  call temp:= `copyFrom`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48c27a.  v2:= temp @kind object;
  #L48c27c.  call temp:= `setE`(v0, v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey$Builder;.setE:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey$Builder;` @kind virtual;
  #L48c282.  v0:= temp @kind object;
  #L48c284.  call temp:= `getModulus`(v1) @signature `Ljava/security/interfaces/RSAPublicKey;.getModulus:()Ljava/math/BigInteger;` @kind interface;
  #L48c28a.  v1:= temp @kind object;
  #L48c28c.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L48c292.  v1:= temp @kind object;
  #L48c294.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48c29a.  v1:= temp @kind object;
  #L48c29c.  call temp:= `setN`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey$Builder;.setN:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey$Builder;` @kind virtual;
  #L48c2a2.  v0:= temp @kind object;
  #L48c2a4.  call temp:= `build`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L48c2aa.  v0:= temp @kind object;
  #L48c2ac.  v0:= (`com.google.crypto.tink.proto.RsaSsaPkcs1PublicKey`) v0 @kind object;
  #L48c2b0.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;.newBuilder:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;` @kind static;
  #L48c2b6.  v1:= temp @kind object;
  #L48c2b8.  v2:= v6.`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b.b` @type ^`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager` @kind object;
  #L48c2bc.  call temp:= `getVersion`(v2) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.getVersion:()I` @kind virtual;
  #L48c2c2.  v2:= temp;
  #L48c2c4.  call temp:= `setVersion`(v1, v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;` @kind virtual;
  #L48c2ca.  v1:= temp @kind object;
  #L48c2cc.  call temp:= `setPublicKey`(v1, v0) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;.setPublicKey:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;` @kind virtual;
  #L48c2d2.  v0:= temp @kind object;
  #L48c2d4.  call temp:= `getPrivateExponent`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrivateExponent:()Ljava/math/BigInteger;` @kind interface;
  #L48c2da.  v1:= temp @kind object;
  #L48c2dc.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L48c2e2.  v1:= temp @kind object;
  #L48c2e4.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48c2ea.  v1:= temp @kind object;
  #L48c2ec.  call temp:= `setD`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;.setD:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;` @kind virtual;
  #L48c2f2.  v0:= temp @kind object;
  #L48c2f4.  call temp:= `getPrimeP`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeP:()Ljava/math/BigInteger;` @kind interface;
  #L48c2fa.  v1:= temp @kind object;
  #L48c2fc.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L48c302.  v1:= temp @kind object;
  #L48c304.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48c30a.  v1:= temp @kind object;
  #L48c30c.  call temp:= `setP`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;.setP:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;` @kind virtual;
  #L48c312.  v0:= temp @kind object;
  #L48c314.  call temp:= `getPrimeQ`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeQ:()Ljava/math/BigInteger;` @kind interface;
  #L48c31a.  v1:= temp @kind object;
  #L48c31c.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L48c322.  v1:= temp @kind object;
  #L48c324.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48c32a.  v1:= temp @kind object;
  #L48c32c.  call temp:= `setQ`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;.setQ:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;` @kind virtual;
  #L48c332.  v0:= temp @kind object;
  #L48c334.  call temp:= `getPrimeExponentP`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeExponentP:()Ljava/math/BigInteger;` @kind interface;
  #L48c33a.  v1:= temp @kind object;
  #L48c33c.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L48c342.  v1:= temp @kind object;
  #L48c344.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48c34a.  v1:= temp @kind object;
  #L48c34c.  call temp:= `setDp`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;.setDp:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;` @kind virtual;
  #L48c352.  v0:= temp @kind object;
  #L48c354.  call temp:= `getPrimeExponentQ`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getPrimeExponentQ:()Ljava/math/BigInteger;` @kind interface;
  #L48c35a.  v1:= temp @kind object;
  #L48c35c.  call temp:= `toByteArray`(v1) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L48c362.  v1:= temp @kind object;
  #L48c364.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48c36a.  v1:= temp @kind object;
  #L48c36c.  call temp:= `setDq`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;.setDq:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;` @kind virtual;
  #L48c372.  v0:= temp @kind object;
  #L48c374.  call temp:= `getCrtCoefficient`(v7) @signature `Ljava/security/interfaces/RSAPrivateCrtKey;.getCrtCoefficient:()Ljava/math/BigInteger;` @kind interface;
  #L48c37a.  v7:= temp @kind object;
  #L48c37c.  call temp:= `toByteArray`(v7) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L48c382.  v7:= temp @kind object;
  #L48c384.  call temp:= `copyFrom`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48c38a.  v7:= temp @kind object;
  #L48c38c.  call temp:= `setCrt`(v0, v7) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;.setCrt:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey$Builder;` @kind virtual;
  #L48c392.  v7:= temp @kind object;
  #L48c394.  call temp:= `build`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L48c39a.  v7:= temp @kind object;
  #L48c39c.  v7:= (`com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey`) v7 @kind object;
  #L48c3a0.  return v7 @kind object;
}
procedure `com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat` `b`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48c1ac.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L48c1b2.  v0:= temp @kind object;
  #L48c1b4.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;` @kind static;
  #L48c1ba.  v2:= temp @kind object;
  #L48c1bc.  return v2 @kind object;
}
procedure `void` `c`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b` v2 @kind this, `com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat` v3 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.c:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48c40c.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;.getParams:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;` @kind virtual;
  #L48c412.  v0:= temp @kind object;
  #L48c414.  call `e`(v0) @signature `Lcom/google/crypto/tink/signature/f;.e:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;)V` @kind static;
  #L48c41a.  call temp:= `getModulusSizeInBits`(v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;.getModulusSizeInBits:()I` @kind virtual;
  #L48c420.  v0:= temp;
  #L48c422.  call `validateRsaModulusSize`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateRsaModulusSize:(I)V` @kind static;
  #L48c428.  v0:= new `java.math.BigInteger`;
  #L48c42c.  call temp:= `getPublicExponent`(v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;.getPublicExponent:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L48c432.  v3:= temp @kind object;
  #L48c434.  call temp:= `toByteArray`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L48c43a.  v3:= temp @kind object;
  #L48c43c.  v1:= 1I;
  #L48c43e.  call `<init>`(v0, v1, v3) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L48c444.  call `validateRsaPublicExponent`(v0) @signature `Lcom/google/crypto/tink/subtle/Validators;.validateRsaPublicExponent:(Ljava/math/BigInteger;)V` @kind static;
  #L48c44a.  return @kind void;
}
procedure `java.lang.Object` `createKey`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.createKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48c3d0.  v1:= (`com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat`) v1 @kind object;
  #L48c3d4.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.a:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1PrivateKey;` @kind virtual;
  #L48c3da.  v1:= temp @kind object;
  #L48c3dc.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKeyFormat`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.parseKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48c3b4.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;` @kind virtual;
  #L48c3ba.  v1:= temp @kind object;
  #L48c3bc.  return v1 @kind object;
}
procedure `void` `validateKeyFormat`(`com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.validateKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48c45c.  v1:= (`com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat`) v1 @kind object;
  #L48c460.  call `c`(v0, v1) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager$b;.c:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;)V` @kind virtual;
  #L48c466.  return @kind void;
}
