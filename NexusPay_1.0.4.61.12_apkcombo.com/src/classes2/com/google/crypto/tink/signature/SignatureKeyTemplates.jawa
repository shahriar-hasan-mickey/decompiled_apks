record `com.google.crypto.tink.signature.SignatureKeyTemplates` @kind class @AccessFlag PUBLIC_FINAL {
}
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P256` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P256_IEEE_P1363` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P256_IEEE_P1363_WITHOUT_PREFIX` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P384` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P384_IEEE_P1363` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P521` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P521_IEEE_P1363` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ED25519` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ED25519WithRawOutput` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PKCS1_3072_SHA256_F4` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PKCS1_3072_SHA256_F4_WITHOUT_PREFIX` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PKCS1_4096_SHA512_F4` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PSS_3072_SHA256_SHA256_32_F4` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.KeyTemplate` `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PSS_4096_SHA512_SHA512_64_F4` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L48dcc8.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L48dccc.  v1:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P256` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L48dcd0.  v2:= `@@com.google.crypto.tink.proto.EcdsaSignatureEncoding.DER` @type ^`com.google.crypto.tink.proto.EcdsaSignatureEncoding` @kind object;
  #L48dcd4.  v3:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L48dcd8.  call temp:= `createEcdsaKeyTemplate`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createEcdsaKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L48dcde.  v0:= temp @kind object;
  #L48dce0.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P256` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L48dce4.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA512` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L48dce8.  v1:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P384` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L48dcec.  v2:= `@@com.google.crypto.tink.proto.EcdsaSignatureEncoding.DER` @type ^`com.google.crypto.tink.proto.EcdsaSignatureEncoding` @kind object;
  #L48dcf0.  v3:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L48dcf4.  call temp:= `createEcdsaKeyTemplate`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createEcdsaKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L48dcfa.  v0:= temp @kind object;
  #L48dcfc.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P384` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L48dd00.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA512` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L48dd04.  v1:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P521` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L48dd08.  v2:= `@@com.google.crypto.tink.proto.EcdsaSignatureEncoding.DER` @type ^`com.google.crypto.tink.proto.EcdsaSignatureEncoding` @kind object;
  #L48dd0c.  v3:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L48dd10.  call temp:= `createEcdsaKeyTemplate`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createEcdsaKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L48dd16.  v0:= temp @kind object;
  #L48dd18.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P521` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L48dd1c.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L48dd20.  v1:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P256` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L48dd24.  v2:= `@@com.google.crypto.tink.proto.EcdsaSignatureEncoding.IEEE_P1363` @type ^`com.google.crypto.tink.proto.EcdsaSignatureEncoding` @kind object;
  #L48dd28.  v3:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L48dd2c.  call temp:= `createEcdsaKeyTemplate`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createEcdsaKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L48dd32.  v0:= temp @kind object;
  #L48dd34.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P256_IEEE_P1363` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L48dd38.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA512` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L48dd3c.  v1:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P384` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L48dd40.  v2:= `@@com.google.crypto.tink.proto.EcdsaSignatureEncoding.IEEE_P1363` @type ^`com.google.crypto.tink.proto.EcdsaSignatureEncoding` @kind object;
  #L48dd44.  v3:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L48dd48.  call temp:= `createEcdsaKeyTemplate`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createEcdsaKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L48dd4e.  v0:= temp @kind object;
  #L48dd50.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P384_IEEE_P1363` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L48dd54.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L48dd58.  v1:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P256` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L48dd5c.  v2:= `@@com.google.crypto.tink.proto.EcdsaSignatureEncoding.IEEE_P1363` @type ^`com.google.crypto.tink.proto.EcdsaSignatureEncoding` @kind object;
  #L48dd60.  v3:= `@@com.google.crypto.tink.proto.OutputPrefixType.RAW` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L48dd64.  call temp:= `createEcdsaKeyTemplate`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createEcdsaKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L48dd6a.  v0:= temp @kind object;
  #L48dd6c.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P256_IEEE_P1363_WITHOUT_PREFIX` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L48dd70.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA512` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L48dd74.  v1:= `@@com.google.crypto.tink.proto.EllipticCurveType.NIST_P521` @type ^`com.google.crypto.tink.proto.EllipticCurveType` @kind object;
  #L48dd78.  v2:= `@@com.google.crypto.tink.proto.EcdsaSignatureEncoding.IEEE_P1363` @type ^`com.google.crypto.tink.proto.EcdsaSignatureEncoding` @kind object;
  #L48dd7c.  v3:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L48dd80.  call temp:= `createEcdsaKeyTemplate`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createEcdsaKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L48dd86.  v0:= temp @kind object;
  #L48dd88.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ECDSA_P521_IEEE_P1363` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L48dd8c.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L48dd92.  v0:= temp @kind object;
  #L48dd94.  v1:= new `com.google.crypto.tink.signature.Ed25519PrivateKeyManager`;
  #L48dd98.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.<init>:()V` @kind direct;
  #L48dd9e.  call temp:= `getKeyType`(v1) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L48dda4.  v1:= temp @kind object;
  #L48dda6.  call temp:= `setTypeUrl`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L48ddac.  v0:= temp @kind object;
  #L48ddae.  v1:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L48ddb2.  call temp:= `setOutputPrefixType`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L48ddb8.  v0:= temp @kind object;
  #L48ddba.  call temp:= `build`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L48ddc0.  v0:= temp @kind object;
  #L48ddc2.  v0:= (`com.google.crypto.tink.proto.KeyTemplate`) v0 @kind object;
  #L48ddc6.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ED25519` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L48ddca.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L48ddd0.  v0:= temp @kind object;
  #L48ddd2.  v1:= new `com.google.crypto.tink.signature.Ed25519PrivateKeyManager`;
  #L48ddd6.  call `<init>`(v1) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.<init>:()V` @kind direct;
  #L48dddc.  call temp:= `getKeyType`(v1) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L48dde2.  v1:= temp @kind object;
  #L48dde4.  call temp:= `setTypeUrl`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L48ddea.  v0:= temp @kind object;
  #L48ddec.  v1:= `@@com.google.crypto.tink.proto.OutputPrefixType.RAW` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L48ddf0.  call temp:= `setOutputPrefixType`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L48ddf6.  v0:= temp @kind object;
  #L48ddf8.  call temp:= `build`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L48ddfe.  v0:= temp @kind object;
  #L48de00.  v0:= (`com.google.crypto.tink.proto.KeyTemplate`) v0 @kind object;
  #L48de04.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.ED25519WithRawOutput` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L48de08.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L48de0c.  v1:= `@@java.security.spec.RSAKeyGenParameterSpec.F4` @type ^`java.math.BigInteger` @kind object;
  #L48de10.  v2:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L48de14.  v3:= 3072I;
  #L48de18.  call temp:= `createRsaSsaPkcs1KeyTemplate`(v0, v3, v1, v2) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createRsaSsaPkcs1KeyTemplate:(Lcom/google/crypto/tink/proto/HashType;ILjava/math/BigInteger;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L48de1e.  v0:= temp @kind object;
  #L48de20.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PKCS1_3072_SHA256_F4` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L48de24.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L48de28.  v1:= `@@java.security.spec.RSAKeyGenParameterSpec.F4` @type ^`java.math.BigInteger` @kind object;
  #L48de2c.  v2:= `@@com.google.crypto.tink.proto.OutputPrefixType.RAW` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L48de30.  call temp:= `createRsaSsaPkcs1KeyTemplate`(v0, v3, v1, v2) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createRsaSsaPkcs1KeyTemplate:(Lcom/google/crypto/tink/proto/HashType;ILjava/math/BigInteger;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L48de36.  v0:= temp @kind object;
  #L48de38.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PKCS1_3072_SHA256_F4_WITHOUT_PREFIX` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L48de3c.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA512` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L48de40.  v1:= `@@java.security.spec.RSAKeyGenParameterSpec.F4` @type ^`java.math.BigInteger` @kind object;
  #L48de44.  v2:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L48de48.  v4:= 4096I;
  #L48de4c.  call temp:= `createRsaSsaPkcs1KeyTemplate`(v0, v4, v1, v2) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createRsaSsaPkcs1KeyTemplate:(Lcom/google/crypto/tink/proto/HashType;ILjava/math/BigInteger;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L48de52.  v0:= temp @kind object;
  #L48de54.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PKCS1_4096_SHA512_F4` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L48de58.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA256` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L48de5c.  v1:= `@@java.security.spec.RSAKeyGenParameterSpec.F4` @type ^`java.math.BigInteger` @kind object;
  #L48de60.  v2:= 32I;
  #L48de64.  call temp:= `createRsaSsaPssKeyTemplate`(v0, v0, v2, v3, v1) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createRsaSsaPssKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/HashType;IILjava/math/BigInteger;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L48de6a.  v0:= temp @kind object;
  #L48de6c.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PSS_3072_SHA256_SHA256_32_F4` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L48de70.  v0:= `@@com.google.crypto.tink.proto.HashType.SHA512` @type ^`com.google.crypto.tink.proto.HashType` @kind object;
  #L48de74.  v1:= `@@java.security.spec.RSAKeyGenParameterSpec.F4` @type ^`java.math.BigInteger` @kind object;
  #L48de78.  v2:= 64I;
  #L48de7c.  call temp:= `createRsaSsaPssKeyTemplate`(v0, v0, v2, v4, v1) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createRsaSsaPssKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/HashType;IILjava/math/BigInteger;)Lcom/google/crypto/tink/proto/KeyTemplate;` @kind static;
  #L48de82.  v0:= temp @kind object;
  #L48de84.  `@@com.google.crypto.tink.signature.SignatureKeyTemplates.RSA_SSA_PSS_4096_SHA512_SHA512_64_F4` @type ^`com.google.crypto.tink.proto.KeyTemplate` := v0 @kind object;
  #L48de88.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.SignatureKeyTemplates` v0 @kind this) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L48de9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48dea2.  return @kind void;
}
procedure `com.google.crypto.tink.proto.KeyTemplate` `createEcdsaKeyTemplate`(`com.google.crypto.tink.proto.HashType` v1 @kind object, `com.google.crypto.tink.proto.EllipticCurveType` v2 @kind object, `com.google.crypto.tink.proto.EcdsaSignatureEncoding` v3 @kind object, `com.google.crypto.tink.proto.OutputPrefixType` v4 @kind object) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createEcdsaKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/EllipticCurveType;Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48dab4.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/EcdsaParams;.newBuilder:()Lcom/google/crypto/tink/proto/EcdsaParams$Builder;` @kind static;
  #L48daba.  v0:= temp @kind object;
  #L48dabc.  call temp:= `setHashType`(v0, v1) @signature `Lcom/google/crypto/tink/proto/EcdsaParams$Builder;.setHashType:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/EcdsaParams$Builder;` @kind virtual;
  #L48dac2.  v1:= temp @kind object;
  #L48dac4.  call temp:= `setCurve`(v1, v2) @signature `Lcom/google/crypto/tink/proto/EcdsaParams$Builder;.setCurve:(Lcom/google/crypto/tink/proto/EllipticCurveType;)Lcom/google/crypto/tink/proto/EcdsaParams$Builder;` @kind virtual;
  #L48daca.  v1:= temp @kind object;
  #L48dacc.  call temp:= `setEncoding`(v1, v3) @signature `Lcom/google/crypto/tink/proto/EcdsaParams$Builder;.setEncoding:(Lcom/google/crypto/tink/proto/EcdsaSignatureEncoding;)Lcom/google/crypto/tink/proto/EcdsaParams$Builder;` @kind virtual;
  #L48dad2.  v1:= temp @kind object;
  #L48dad4.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L48dada.  v1:= temp @kind object;
  #L48dadc.  v1:= (`com.google.crypto.tink.proto.EcdsaParams`) v1 @kind object;
  #L48dae0.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;` @kind static;
  #L48dae6.  v2:= temp @kind object;
  #L48dae8.  call temp:= `setParams`(v2, v1) @signature `Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/EcdsaParams;)Lcom/google/crypto/tink/proto/EcdsaKeyFormat$Builder;` @kind virtual;
  #L48daee.  v1:= temp @kind object;
  #L48daf0.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L48daf6.  v1:= temp @kind object;
  #L48daf8.  v1:= (`com.google.crypto.tink.proto.EcdsaKeyFormat`) v1 @kind object;
  #L48dafc.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L48db02.  v2:= temp @kind object;
  #L48db04.  call temp:= `toByteString`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteString:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L48db0a.  v1:= temp @kind object;
  #L48db0c.  call temp:= `setValue`(v2, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L48db12.  v1:= temp @kind object;
  #L48db14.  v2:= new `com.google.crypto.tink.signature.EcdsaSignKeyManager`;
  #L48db18.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/signature/EcdsaSignKeyManager;.<init>:()V` @kind direct;
  #L48db1e.  call temp:= `getKeyType`(v2) @signature `Lcom/google/crypto/tink/signature/EcdsaSignKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L48db24.  v2:= temp @kind object;
  #L48db26.  call temp:= `setTypeUrl`(v1, v2) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L48db2c.  v1:= temp @kind object;
  #L48db2e.  call temp:= `setOutputPrefixType`(v1, v4) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L48db34.  v1:= temp @kind object;
  #L48db36.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L48db3c.  v1:= temp @kind object;
  #L48db3e.  v1:= (`com.google.crypto.tink.proto.KeyTemplate`) v1 @kind object;
  #L48db42.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyTemplate` `createRsaSsaPkcs1KeyTemplate`(`com.google.crypto.tink.proto.HashType` v1 @kind object, `int` v2 , `java.math.BigInteger` v3 @kind object, `com.google.crypto.tink.proto.OutputPrefixType` v4 @kind object) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createRsaSsaPkcs1KeyTemplate:(Lcom/google/crypto/tink/proto/HashType;ILjava/math/BigInteger;Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48db54.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;.newBuilder:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params$Builder;` @kind static;
  #L48db5a.  v0:= temp @kind object;
  #L48db5c.  call temp:= `setHashType`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params$Builder;.setHashType:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params$Builder;` @kind virtual;
  #L48db62.  v1:= temp @kind object;
  #L48db64.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L48db6a.  v1:= temp @kind object;
  #L48db6c.  v1:= (`com.google.crypto.tink.proto.RsaSsaPkcs1Params`) v1 @kind object;
  #L48db70.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;` @kind static;
  #L48db76.  v0:= temp @kind object;
  #L48db78.  call temp:= `setParams`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;` @kind virtual;
  #L48db7e.  v1:= temp @kind object;
  #L48db80.  call temp:= `setModulusSizeInBits`(v1, v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;.setModulusSizeInBits:(I)Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;` @kind virtual;
  #L48db86.  v1:= temp @kind object;
  #L48db88.  call temp:= `toByteArray`(v3) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L48db8e.  v2:= temp @kind object;
  #L48db90.  call temp:= `copyFrom`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48db96.  v2:= temp @kind object;
  #L48db98.  call temp:= `setPublicExponent`(v1, v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;.setPublicExponent:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPkcs1KeyFormat$Builder;` @kind virtual;
  #L48db9e.  v1:= temp @kind object;
  #L48dba0.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L48dba6.  v1:= temp @kind object;
  #L48dba8.  v1:= (`com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat`) v1 @kind object;
  #L48dbac.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L48dbb2.  v2:= temp @kind object;
  #L48dbb4.  call temp:= `toByteString`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteString:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L48dbba.  v1:= temp @kind object;
  #L48dbbc.  call temp:= `setValue`(v2, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L48dbc2.  v1:= temp @kind object;
  #L48dbc4.  v2:= new `com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager`;
  #L48dbc8.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.<init>:()V` @kind direct;
  #L48dbce.  call temp:= `getKeyType`(v2) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L48dbd4.  v2:= temp @kind object;
  #L48dbd6.  call temp:= `setTypeUrl`(v1, v2) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L48dbdc.  v1:= temp @kind object;
  #L48dbde.  call temp:= `setOutputPrefixType`(v1, v4) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L48dbe4.  v1:= temp @kind object;
  #L48dbe6.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L48dbec.  v1:= temp @kind object;
  #L48dbee.  v1:= (`com.google.crypto.tink.proto.KeyTemplate`) v1 @kind object;
  #L48dbf2.  return v1 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyTemplate` `createRsaSsaPssKeyTemplate`(`com.google.crypto.tink.proto.HashType` v1 @kind object, `com.google.crypto.tink.proto.HashType` v2 @kind object, `int` v3 , `int` v4 , `java.math.BigInteger` v5 @kind object) @signature `Lcom/google/crypto/tink/signature/SignatureKeyTemplates;.createRsaSsaPssKeyTemplate:(Lcom/google/crypto/tink/proto/HashType;Lcom/google/crypto/tink/proto/HashType;IILjava/math/BigInteger;)Lcom/google/crypto/tink/proto/KeyTemplate;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48dc04.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams;.newBuilder:()Lcom/google/crypto/tink/proto/RsaSsaPssParams$Builder;` @kind static;
  #L48dc0a.  v0:= temp @kind object;
  #L48dc0c.  call temp:= `setSigHash`(v0, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams$Builder;.setSigHash:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/RsaSsaPssParams$Builder;` @kind virtual;
  #L48dc12.  v1:= temp @kind object;
  #L48dc14.  call temp:= `setMgf1Hash`(v1, v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams$Builder;.setMgf1Hash:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/proto/RsaSsaPssParams$Builder;` @kind virtual;
  #L48dc1a.  v1:= temp @kind object;
  #L48dc1c.  call temp:= `setSaltLength`(v1, v3) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssParams$Builder;.setSaltLength:(I)Lcom/google/crypto/tink/proto/RsaSsaPssParams$Builder;` @kind virtual;
  #L48dc22.  v1:= temp @kind object;
  #L48dc24.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L48dc2a.  v1:= temp @kind object;
  #L48dc2c.  v1:= (`com.google.crypto.tink.proto.RsaSsaPssParams`) v1 @kind object;
  #L48dc30.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat;.newBuilder:()Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat$Builder;` @kind static;
  #L48dc36.  v2:= temp @kind object;
  #L48dc38.  call temp:= `setParams`(v2, v1) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat$Builder;.setParams:(Lcom/google/crypto/tink/proto/RsaSsaPssParams;)Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat$Builder;` @kind virtual;
  #L48dc3e.  v1:= temp @kind object;
  #L48dc40.  call temp:= `setModulusSizeInBits`(v1, v4) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat$Builder;.setModulusSizeInBits:(I)Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat$Builder;` @kind virtual;
  #L48dc46.  v1:= temp @kind object;
  #L48dc48.  call temp:= `toByteArray`(v5) @signature `Ljava/math/BigInteger;.toByteArray:()[B` @kind virtual;
  #L48dc4e.  v2:= temp @kind object;
  #L48dc50.  call temp:= `copyFrom`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48dc56.  v2:= temp @kind object;
  #L48dc58.  call temp:= `setPublicExponent`(v1, v2) @signature `Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat$Builder;.setPublicExponent:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/RsaSsaPssKeyFormat$Builder;` @kind virtual;
  #L48dc5e.  v1:= temp @kind object;
  #L48dc60.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L48dc66.  v1:= temp @kind object;
  #L48dc68.  v1:= (`com.google.crypto.tink.proto.RsaSsaPssKeyFormat`) v1 @kind object;
  #L48dc6c.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyTemplate;.newBuilder:()Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind static;
  #L48dc72.  v2:= temp @kind object;
  #L48dc74.  call temp:= `toByteString`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/AbstractMessageLite;.toByteString:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L48dc7a.  v1:= temp @kind object;
  #L48dc7c.  call temp:= `setValue`(v2, v1) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L48dc82.  v1:= temp @kind object;
  #L48dc84.  v2:= new `com.google.crypto.tink.signature.RsaSsaPssSignKeyManager`;
  #L48dc88.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager;.<init>:()V` @kind direct;
  #L48dc8e.  call temp:= `getKeyType`(v2) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L48dc94.  v2:= temp @kind object;
  #L48dc96.  call temp:= `setTypeUrl`(v1, v2) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L48dc9c.  v1:= temp @kind object;
  #L48dc9e.  v2:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L48dca2.  call temp:= `setOutputPrefixType`(v1, v2) @signature `Lcom/google/crypto/tink/proto/KeyTemplate$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeyTemplate$Builder;` @kind virtual;
  #L48dca8.  v1:= temp @kind object;
  #L48dcaa.  call temp:= `build`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L48dcb0.  v1:= temp @kind object;
  #L48dcb2.  v1:= (`com.google.crypto.tink.proto.KeyTemplate`) v1 @kind object;
  #L48dcb6.  return v1 @kind object;
}
