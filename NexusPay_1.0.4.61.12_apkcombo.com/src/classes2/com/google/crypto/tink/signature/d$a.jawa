record `com.google.crypto.tink.signature.d$a` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$PrimitiveFactory` @kind class {
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.d$a` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/d$a;.<init>:(Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48c8ac.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/KeyTypeManager$PrimitiveFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L48c8b2.  return @kind void;
}
procedure `com.google.crypto.tink.PublicKeyVerify` `b`(`com.google.crypto.tink.signature.d$a` v5 @kind this, `com.google.crypto.tink.proto.RsaSsaPkcs1PublicKey` v6 @kind object) @signature `Lcom/google/crypto/tink/signature/d$a;.b:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;)Lcom/google/crypto/tink/PublicKeyVerify;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L48c7f8.  v0:= `@@com.google.crypto.tink.subtle.EngineFactory.KEY_FACTORY` @type ^`com.google.crypto.tink.subtle.EngineFactory` @kind object;
  #L48c7fc.  v1:= "RSA" @kind object;
  #L48c800.  call temp:= `getInstance`(v0, v1) @signature `Lcom/google/crypto/tink/subtle/EngineFactory;.getInstance:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L48c806.  v0:= temp @kind object;
  #L48c808.  v0:= (`java.security.KeyFactory`) v0 @kind object;
  #L48c80c.  v1:= new `java.math.BigInteger`;
  #L48c810.  call temp:= `getN`(v6) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.getN:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L48c816.  v2:= temp @kind object;
  #L48c818.  call temp:= `toByteArray`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L48c81e.  v2:= temp @kind object;
  #L48c820.  v3:= 1I;
  #L48c822.  call `<init>`(v1, v3, v2) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L48c828.  v2:= new `java.math.BigInteger`;
  #L48c82c.  call temp:= `getE`(v6) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.getE:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L48c832.  v4:= temp @kind object;
  #L48c834.  call temp:= `toByteArray`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L48c83a.  v4:= temp @kind object;
  #L48c83c.  call `<init>`(v2, v3, v4) @signature `Ljava/math/BigInteger;.<init>:(I[B)V` @kind direct;
  #L48c842.  v3:= new `java.security.spec.RSAPublicKeySpec`;
  #L48c846.  call `<init>`(v3, v1, v2) @signature `Ljava/security/spec/RSAPublicKeySpec;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;)V` @kind direct;
  #L48c84c.  call temp:= `generatePublic`(v0, v3) @signature `Ljava/security/KeyFactory;.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;` @kind virtual;
  #L48c852.  v0:= temp @kind object;
  #L48c854.  v0:= (`java.security.interfaces.RSAPublicKey`) v0 @kind object;
  #L48c858.  v1:= new `com.google.crypto.tink.subtle.RsaSsaPkcs1VerifyJce`;
  #L48c85c.  call temp:= `getParams`(v6) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;.getParams:()Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;` @kind virtual;
  #L48c862.  v6:= temp @kind object;
  #L48c864.  call temp:= `getHashType`(v6) @signature `Lcom/google/crypto/tink/proto/RsaSsaPkcs1Params;.getHashType:()Lcom/google/crypto/tink/proto/HashType;` @kind virtual;
  #L48c86a.  v6:= temp @kind object;
  #L48c86c.  call temp:= `c`(v6) @signature `Lcom/google/crypto/tink/signature/f;.c:(Lcom/google/crypto/tink/proto/HashType;)Lcom/google/crypto/tink/subtle/Enums$HashType;` @kind static;
  #L48c872.  v6:= temp @kind object;
  #L48c874.  call `<init>`(v1, v0, v6) @signature `Lcom/google/crypto/tink/subtle/RsaSsaPkcs1VerifyJce;.<init>:(Ljava/security/interfaces/RSAPublicKey;Lcom/google/crypto/tink/subtle/Enums$HashType;)V` @kind direct;
  #L48c87a.  return v1 @kind object;
}
procedure `java.lang.Object` `getPrimitive`(`com.google.crypto.tink.signature.d$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/crypto/tink/signature/d$a;.getPrimitive:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48c88c.  v1:= (`com.google.crypto.tink.proto.RsaSsaPkcs1PublicKey`) v1 @kind object;
  #L48c890.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/signature/d$a;.b:(Lcom/google/crypto/tink/proto/RsaSsaPkcs1PublicKey;)Lcom/google/crypto/tink/PublicKeyVerify;` @kind virtual;
  #L48c896.  v1:= temp @kind object;
  #L48c898.  return v1 @kind object;
}
