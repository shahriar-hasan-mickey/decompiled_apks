record `com.google.crypto.tink.signature.SignatureConfig` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@com.google.crypto.tink.signature.SignatureConfig.ECDSA_PRIVATE_KEY_TYPE_URL` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.google.crypto.tink.signature.SignatureConfig.ECDSA_PUBLIC_KEY_TYPE_URL` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.google.crypto.tink.signature.SignatureConfig.ED25519_PRIVATE_KEY_TYPE_URL` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.google.crypto.tink.signature.SignatureConfig.ED25519_PUBLIC_KEY_TYPE_URL` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.RegistryConfig` `@@com.google.crypto.tink.signature.SignatureConfig.LATEST` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.google.crypto.tink.signature.SignatureConfig.RSA_PKCS1_PRIVATE_KEY_TYPE_URL` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.google.crypto.tink.signature.SignatureConfig.RSA_PKCS1_PUBLIC_KEY_TYPE_URL` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.RegistryConfig` `@@com.google.crypto.tink.signature.SignatureConfig.TINK_1_0_0` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.crypto.tink.proto.RegistryConfig` `@@com.google.crypto.tink.signature.SignatureConfig.TINK_1_1_0` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/signature/SignatureConfig;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L48d96c.  v0:= new `com.google.crypto.tink.signature.a`;
  #L48d970.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/signature/a;.<init>:()V` @kind direct;
  #L48d976.  call temp:= `getKeyType`(v0) @signature `Lcom/google/crypto/tink/signature/a;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L48d97c.  v0:= temp @kind object;
  #L48d97e.  `@@com.google.crypto.tink.signature.SignatureConfig.ECDSA_PUBLIC_KEY_TYPE_URL` @type ^`java.lang.String` := v0 @kind object;
  #L48d982.  v0:= new `com.google.crypto.tink.signature.EcdsaSignKeyManager`;
  #L48d986.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/signature/EcdsaSignKeyManager;.<init>:()V` @kind direct;
  #L48d98c.  call temp:= `getKeyType`(v0) @signature `Lcom/google/crypto/tink/signature/EcdsaSignKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L48d992.  v0:= temp @kind object;
  #L48d994.  `@@com.google.crypto.tink.signature.SignatureConfig.ECDSA_PRIVATE_KEY_TYPE_URL` @type ^`java.lang.String` := v0 @kind object;
  #L48d998.  v0:= new `com.google.crypto.tink.signature.b`;
  #L48d99c.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/signature/b;.<init>:()V` @kind direct;
  #L48d9a2.  call temp:= `getKeyType`(v0) @signature `Lcom/google/crypto/tink/signature/b;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L48d9a8.  v0:= temp @kind object;
  #L48d9aa.  `@@com.google.crypto.tink.signature.SignatureConfig.ED25519_PUBLIC_KEY_TYPE_URL` @type ^`java.lang.String` := v0 @kind object;
  #L48d9ae.  v0:= new `com.google.crypto.tink.signature.Ed25519PrivateKeyManager`;
  #L48d9b2.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.<init>:()V` @kind direct;
  #L48d9b8.  call temp:= `getKeyType`(v0) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L48d9be.  v0:= temp @kind object;
  #L48d9c0.  `@@com.google.crypto.tink.signature.SignatureConfig.ED25519_PRIVATE_KEY_TYPE_URL` @type ^`java.lang.String` := v0 @kind object;
  #L48d9c4.  v0:= new `com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager`;
  #L48d9c8.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.<init>:()V` @kind direct;
  #L48d9ce.  call temp:= `getKeyType`(v0) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L48d9d4.  v0:= temp @kind object;
  #L48d9d6.  `@@com.google.crypto.tink.signature.SignatureConfig.RSA_PKCS1_PRIVATE_KEY_TYPE_URL` @type ^`java.lang.String` := v0 @kind object;
  #L48d9da.  v0:= new `com.google.crypto.tink.signature.d`;
  #L48d9de.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/signature/d;.<init>:()V` @kind direct;
  #L48d9e4.  call temp:= `getKeyType`(v0) @signature `Lcom/google/crypto/tink/signature/d;.getKeyType:()Ljava/lang/String;` @kind virtual;
  #L48d9ea.  v0:= temp @kind object;
  #L48d9ec.  `@@com.google.crypto.tink.signature.SignatureConfig.RSA_PKCS1_PUBLIC_KEY_TYPE_URL` @type ^`java.lang.String` := v0 @kind object;
  #L48d9f0.  call temp:= `getDefaultInstance`() @signature `Lcom/google/crypto/tink/proto/RegistryConfig;.getDefaultInstance:()Lcom/google/crypto/tink/proto/RegistryConfig;` @kind static;
  #L48d9f6.  v0:= temp @kind object;
  #L48d9f8.  `@@com.google.crypto.tink.signature.SignatureConfig.TINK_1_0_0` @type ^`com.google.crypto.tink.proto.RegistryConfig` := v0 @kind object;
  #L48d9fc.  call temp:= `getDefaultInstance`() @signature `Lcom/google/crypto/tink/proto/RegistryConfig;.getDefaultInstance:()Lcom/google/crypto/tink/proto/RegistryConfig;` @kind static;
  #L48da02.  v0:= temp @kind object;
  #L48da04.  `@@com.google.crypto.tink.signature.SignatureConfig.TINK_1_1_0` @type ^`com.google.crypto.tink.proto.RegistryConfig` := v0 @kind object;
  #L48da08.  call temp:= `getDefaultInstance`() @signature `Lcom/google/crypto/tink/proto/RegistryConfig;.getDefaultInstance:()Lcom/google/crypto/tink/proto/RegistryConfig;` @kind static;
  #L48da0e.  v0:= temp @kind object;
  #L48da10.  `@@com.google.crypto.tink.signature.SignatureConfig.LATEST` @type ^`com.google.crypto.tink.proto.RegistryConfig` := v0 @kind object;
  #L48da14.  call `init`() @signature `Lcom/google/crypto/tink/signature/SignatureConfig;.init:()V` @kind static;
  #L48da1a.  return @kind void;
  #L48da1c.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L48da1e.  v1:= new `java.lang.ExceptionInInitializerError`;
  #L48da22.  call `<init>`(v1, v0) @signature `Ljava/lang/ExceptionInInitializerError;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L48da28.  throw v1;
  catch `java.security.GeneralSecurityException` @[L48da14..L48da1a] goto L48da1c;
}
procedure `void` `<init>`(`com.google.crypto.tink.signature.SignatureConfig` v0 @kind this) @signature `Lcom/google/crypto/tink/signature/SignatureConfig;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L48da4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48da52.  return @kind void;
}
procedure `void` `init`() @signature `Lcom/google/crypto/tink/signature/SignatureConfig;.init:()V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L48da64.  call `register`() @signature `Lcom/google/crypto/tink/signature/SignatureConfig;.register:()V` @kind static;
  #L48da6a.  return @kind void;
}
procedure `void` `register`() @signature `Lcom/google/crypto/tink/signature/SignatureConfig;.register:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L48da7c.  v0:= 1I;
  #L48da7e.  call `registerPair`(v0) @signature `Lcom/google/crypto/tink/signature/EcdsaSignKeyManager;.registerPair:(Z)V` @kind static;
  #L48da84.  call `registerPair`(v0) @signature `Lcom/google/crypto/tink/signature/Ed25519PrivateKeyManager;.registerPair:(Z)V` @kind static;
  #L48da8a.  call `registerPair`(v0) @signature `Lcom/google/crypto/tink/signature/RsaSsaPkcs1SignKeyManager;.registerPair:(Z)V` @kind static;
  #L48da90.  call `registerPair`(v0) @signature `Lcom/google/crypto/tink/signature/RsaSsaPssSignKeyManager;.registerPair:(Z)V` @kind static;
  #L48da96.  call `register`() @signature `Lcom/google/crypto/tink/signature/PublicKeySignWrapper;.register:()V` @kind static;
  #L48da9c.  call `b`() @signature `Lcom/google/crypto/tink/signature/c;.b:()V` @kind static;
  #L48daa2.  return @kind void;
}
