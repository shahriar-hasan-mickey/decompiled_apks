record `com.google.crypto.tink.streamingaead.a` @kind class @AccessFlag FINAL extends `java.io.InputStream` @kind class {
  `boolean` `com.google.crypto.tink.streamingaead.a.a` @AccessFlag ;
  `java.io.InputStream` `com.google.crypto.tink.streamingaead.a.b` @AccessFlag ;
  `java.io.InputStream` `com.google.crypto.tink.streamingaead.a.c` @AccessFlag ;
  `com.google.crypto.tink.PrimitiveSet` `com.google.crypto.tink.streamingaead.a.d` @AccessFlag ;
  `byte`[] `com.google.crypto.tink.streamingaead.a.e` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.crypto.tink.streamingaead.a` v1 @kind this, `com.google.crypto.tink.PrimitiveSet` v2 @kind object, `java.io.InputStream` v3 @kind object, `byte`[] v4 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/a;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;Ljava/io/InputStream;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L48f5f4.  call `<init>`(v1) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L48f5fa.  v0:= 0I;
  #L48f5fc.  v1.`com.google.crypto.tink.streamingaead.a.a` @type ^`boolean` := v0 @kind boolean;
  #L48f600.  v0:= 0I;
  #L48f602.  v1.`com.google.crypto.tink.streamingaead.a.b` @type ^`java.io.InputStream` := v0 @kind object;
  #L48f606.  v1.`com.google.crypto.tink.streamingaead.a.d` @type ^`com.google.crypto.tink.PrimitiveSet` := v2 @kind object;
  #L48f60a.  call temp:= `markSupported`(v3) @signature `Ljava/io/InputStream;.markSupported:()Z` @kind virtual;
  #L48f610.  v2:= temp;
  #L48f612.  if v2 == 0 then goto L48f61c;
  #L48f616.  v1.`com.google.crypto.tink.streamingaead.a.c` @type ^`java.io.InputStream` := v3 @kind object;
  #L48f61a.  goto L48f62a;
  #L48f61c.  v2:= new `java.io.BufferedInputStream`;
  #L48f620.  call `<init>`(v2, v3) @signature `Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L48f626.  v1.`com.google.crypto.tink.streamingaead.a.c` @type ^`java.io.InputStream` := v2 @kind object;
  #L48f62a.  v2:= v1.`com.google.crypto.tink.streamingaead.a.c` @type ^`java.io.InputStream` @kind object;
  #L48f62e.  v3:= 2147483647I;
  #L48f634.  call `mark`(v2, v3) @signature `Ljava/io/InputStream;.mark:(I)V` @kind virtual;
  #L48f63a.  call temp:= `clone`(v4) @signature `[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L48f640.  v2:= temp @kind object;
  #L48f642.  v2:= (`byte`[]) v2 @kind object;
  #L48f646.  v1.`com.google.crypto.tink.streamingaead.a.e` @type ^`byte`[] := v2 @kind object;
  #L48f64a.  return @kind void;
}
procedure `void` `a`(`com.google.crypto.tink.streamingaead.a` v2 @kind this) @signature `Lcom/google/crypto/tink/streamingaead/a;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L48f690.  v0:= v2.`com.google.crypto.tink.streamingaead.a.c` @type ^`java.io.InputStream` @kind object;
  #L48f694.  v1:= 0I;
  #L48f696.  call `mark`(v0, v1) @signature `Ljava/io/InputStream;.mark:(I)V` @kind virtual;
  #L48f69c.  return @kind void;
}
procedure `void` `b`(`com.google.crypto.tink.streamingaead.a` v1 @kind this) @signature `Lcom/google/crypto/tink/streamingaead/a;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L48f6b0.  v0:= v1.`com.google.crypto.tink.streamingaead.a.c` @type ^`java.io.InputStream` @kind object;
  #L48f6b4.  call `reset`(v0) @signature `Ljava/io/InputStream;.reset:()V` @kind virtual;
  #L48f6ba.  return @kind void;
}
procedure `int` `available`(`com.google.crypto.tink.streamingaead.a` v1 @kind this) @signature `Lcom/google/crypto/tink/streamingaead/a;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48f40c.  @monitorenter v1
  #L48f40e.  v0:= v1.`com.google.crypto.tink.streamingaead.a.b` @type ^`java.io.InputStream` @kind object;
  #L48f412.  if v0 != 0 then goto L48f41c;
  #L48f416.  v0:= 0I;
  #L48f418.  @monitorexit v1
  #L48f41a.  return v0;
  #L48f41c.  v0:= v1.`com.google.crypto.tink.streamingaead.a.b` @type ^`java.io.InputStream` @kind object;
  #L48f420.  call temp:= `available`(v0) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L48f426.  v0:= temp;
  #L48f428.  @monitorexit v1
  #L48f42a.  return v0;
  #L48f42c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48f42e.  @monitorexit v1
  #L48f430.  throw v0;
  catch `java.lang.Throwable` @[L48f40e..L48f412] goto L48f42c;
  catch `java.lang.Throwable` @[L48f41c..L48f428] goto L48f42c;
}
procedure `void` `close`(`com.google.crypto.tink.streamingaead.a` v1 @kind this) @signature `Lcom/google/crypto/tink/streamingaead/a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48f65c.  @monitorenter v1
  #L48f65e.  v0:= v1.`com.google.crypto.tink.streamingaead.a.c` @type ^`java.io.InputStream` @kind object;
  #L48f662.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L48f668.  @monitorexit v1
  #L48f66a.  return @kind void;
  #L48f66c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48f66e.  @monitorexit v1
  #L48f670.  throw v0;
  catch `java.lang.Throwable` @[L48f65e..L48f668] goto L48f66c;
}
procedure `boolean` `markSupported`(`com.google.crypto.tink.streamingaead.a` v1 @kind this) @signature `Lcom/google/crypto/tink/streamingaead/a;.markSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48f3f8.  v0:= 0I;
  #L48f3fa.  return v0;
}
procedure `int` `read`(`com.google.crypto.tink.streamingaead.a` v3 @kind this) @signature `Lcom/google/crypto/tink/streamingaead/a;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L48f458.  @monitorenter v3
  #L48f45a.  v0:= 1I;
  #L48f45c.  v1:= new `byte`[v0];
  #L48f460.  call temp:= `read`(v3, v1) @signature `Lcom/google/crypto/tink/streamingaead/a;.read:([B)I` @kind virtual;
  #L48f466.  v2:= temp;
  #L48f468.  if v2 != v0 then goto L48f476;
  #L48f46c.  v0:= 0I;
  #L48f46e.  v0:= v1[v0] @kind byte;
  #L48f472.  @monitorexit v3
  #L48f474.  return v0;
  #L48f476.  v0:= -1I;
  #L48f478.  @monitorexit v3
  #L48f47a.  return v0;
  #L48f47c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48f47e.  @monitorexit v3
  #L48f480.  throw v0;
  catch `java.lang.Throwable` @[L48f45c..L48f472] goto L48f47c;
}
procedure `int` `read`(`com.google.crypto.tink.streamingaead.a` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/a;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48f4a0.  @monitorenter v2
  #L48f4a2.  v0:= 0I;
  #L48f4a4.  v1:= length @variable v3;
  #L48f4a6.  call temp:= `read`(v2, v3, v0, v1) @signature `Lcom/google/crypto/tink/streamingaead/a;.read:([BII)I` @kind virtual;
  #L48f4ac.  v3:= temp;
  #L48f4ae.  @monitorexit v2
  #L48f4b0.  return v3;
  #L48f4b2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48f4b4.  @monitorexit v2
  #L48f4b6.  throw v3;
  catch `java.lang.Throwable` @[L48f4a4..L48f4ae] goto L48f4b2;
}
procedure `int` `read`(`com.google.crypto.tink.streamingaead.a` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lcom/google/crypto/tink/streamingaead/a;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L48f4d4.  @monitorenter v4
  #L48f4d6.  if v7 != 0 then goto L48f4e0;
  #L48f4da.  v5:= 0I;
  #L48f4dc.  @monitorexit v4
  #L48f4de.  return v5;
  #L48f4e0.  v0:= v4.`com.google.crypto.tink.streamingaead.a.b` @type ^`java.io.InputStream` @kind object;
  #L48f4e4.  if v0 == 0 then goto L48f4f8;
  #L48f4e8.  v0:= v4.`com.google.crypto.tink.streamingaead.a.b` @type ^`java.io.InputStream` @kind object;
  #L48f4ec.  call temp:= `read`(v0, v5, v6, v7) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L48f4f2.  v5:= temp;
  #L48f4f4.  @monitorexit v4
  #L48f4f6.  return v5;
  #L48f4f8.  v0:= v4.`com.google.crypto.tink.streamingaead.a.a` @type ^`boolean` @kind boolean;
  #L48f4fc.  if v0 != 0 then goto L48f598;
  #L48f500.  v0:= 1I;
  #L48f502.  v4.`com.google.crypto.tink.streamingaead.a.a` @type ^`boolean` := v0 @kind boolean;
  #L48f506.  v0:= v4.`com.google.crypto.tink.streamingaead.a.d` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L48f50a.  call temp:= `getRawPrimitives`(v0) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getRawPrimitives:()Ljava/util/List;` @kind virtual;
  #L48f510.  v0:= temp @kind object;
  #L48f512.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L48f518.  v0:= temp @kind object;
  #L48f51a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L48f520.  v1:= temp;
  #L48f522.  if v1 == 0 then goto L48f588;
  #L48f526.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L48f52c.  v1:= temp @kind object;
  #L48f52e.  v1:= (`com.google.crypto.tink.PrimitiveSet$Entry`) v1 @kind object;
  #L48f532.  call temp:= `getPrimitive`(v1) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L48f538.  v1:= temp @kind object;
  #L48f53a.  v1:= (`com.google.crypto.tink.StreamingAead`) v1 @kind object;
  #L48f53e.  v2:= v4.`com.google.crypto.tink.streamingaead.a.c` @type ^`java.io.InputStream` @kind object;
  #L48f542.  v3:= v4.`com.google.crypto.tink.streamingaead.a.e` @type ^`byte`[] @kind object;
  #L48f546.  call temp:= `newDecryptingStream`(v1, v2, v3) @signature `Lcom/google/crypto/tink/StreamingAead;.newDecryptingStream:(Ljava/io/InputStream;[B)Ljava/io/InputStream;` @kind interface;
  #L48f54c.  v1:= temp @kind object;
  #L48f54e.  call temp:= `read`(v1, v5, v6, v7) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L48f554.  v2:= temp;
  #L48f556.  if v2 == 0 then goto L48f568;
  #L48f55a.  v4.`com.google.crypto.tink.streamingaead.a.b` @type ^`java.io.InputStream` := v1 @kind object;
  #L48f55e.  call `a`(v4) @signature `Lcom/google/crypto/tink/streamingaead/a;.a:()V` @kind direct;
  #L48f564.  @monitorexit v4
  #L48f566.  return v2;
  #L48f568.  v1:= new `java.io.IOException`;
  #L48f56c.  v2:= "Could not read bytes from the ciphertext stream" @kind object;
  #L48f570.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48f576.  throw v1;
  #L48f578.  call `b`(v4) @signature `Lcom/google/crypto/tink/streamingaead/a;.b:()V` @kind direct;
  #L48f57e.  goto L48f51a;
  #L48f580.  call `b`(v4) @signature `Lcom/google/crypto/tink/streamingaead/a;.b:()V` @kind direct;
  #L48f586.  goto L48f51a;
  #L48f588.  v5:= new `java.io.IOException`;
  #L48f58c.  v6:= "No matching key found for the ciphertext in the stream." @kind object;
  #L48f590.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48f596.  throw v5;
  #L48f598.  v5:= new `java.io.IOException`;
  #L48f59c.  v6:= "No matching key found for the ciphertext in the stream." @kind object;
  #L48f5a0.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48f5a6.  throw v5;
  #L48f5a8.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L48f5aa.  @monitorexit v4
  #L48f5ac.  throw v5;
  catch `java.lang.Throwable` @[L48f4e0..L48f4f4] goto L48f5a8;
  catch `java.lang.Throwable` @[L48f4f8..L48f532] goto L48f5a8;
  catch `java.io.IOException` @[L48f532..L48f564] goto L48f580;
  catch `java.security.GeneralSecurityException` @[L48f532..L48f564] goto L48f578;
  catch `java.lang.Throwable` @[L48f532..L48f564] goto L48f5a8;
  catch `java.io.IOException` @[L48f568..L48f578] goto L48f580;
  catch `java.security.GeneralSecurityException` @[L48f568..L48f578] goto L48f578;
  catch `java.lang.Throwable` @[L48f568..L48f578] goto L48f5a8;
  catch `java.lang.Throwable` @[L48f578..L48f5a8] goto L48f5a8;
}
