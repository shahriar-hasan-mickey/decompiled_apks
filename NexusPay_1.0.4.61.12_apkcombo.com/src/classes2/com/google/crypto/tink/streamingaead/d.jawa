record `com.google.crypto.tink.streamingaead.d` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.StreamingAead` @kind interface {
  `com.google.crypto.tink.PrimitiveSet` `com.google.crypto.tink.streamingaead.d.a` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.crypto.tink.streamingaead.d` v1 @kind this, `com.google.crypto.tink.PrimitiveSet` v2 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/d;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L48fee8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48feee.  call temp:= `getPrimary`(v2) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimary:()Lcom/google/crypto/tink/PrimitiveSet$Entry;` @kind virtual;
  #L48fef4.  v0:= temp @kind object;
  #L48fef6.  if v0 == 0 then goto L48ff00;
  #L48fefa.  v1.`com.google.crypto.tink.streamingaead.d.a` @type ^`com.google.crypto.tink.PrimitiveSet` := v2 @kind object;
  #L48fefe.  return @kind void;
  #L48ff00.  v2:= new `java.security.GeneralSecurityException`;
  #L48ff04.  v0:= "Missing primary primitive." @kind object;
  #L48ff08.  call `<init>`(v2, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48ff0e.  throw v2;
}
procedure `java.nio.channels.ReadableByteChannel` `newDecryptingChannel`(`com.google.crypto.tink.streamingaead.d` v2 @kind this, `java.nio.channels.ReadableByteChannel` v3 @kind object, `byte`[] v4 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/d;.newDecryptingChannel:(Ljava/nio/channels/ReadableByteChannel;[B)Ljava/nio/channels/ReadableByteChannel;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48fe74.  v0:= new `com.google.crypto.tink.streamingaead.b`;
  #L48fe78.  v1:= v2.`com.google.crypto.tink.streamingaead.d.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L48fe7c.  call `<init>`(v0, v1, v3, v4) @signature `Lcom/google/crypto/tink/streamingaead/b;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;Ljava/nio/channels/ReadableByteChannel;[B)V` @kind direct;
  #L48fe82.  return v0 @kind object;
}
procedure `java.io.InputStream` `newDecryptingStream`(`com.google.crypto.tink.streamingaead.d` v2 @kind this, `java.io.InputStream` v3 @kind object, `byte`[] v4 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/d;.newDecryptingStream:(Ljava/io/InputStream;[B)Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48fe20.  v0:= new `com.google.crypto.tink.streamingaead.a`;
  #L48fe24.  v1:= v2.`com.google.crypto.tink.streamingaead.d.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L48fe28.  call `<init>`(v0, v1, v3, v4) @signature `Lcom/google/crypto/tink/streamingaead/a;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;Ljava/io/InputStream;[B)V` @kind direct;
  #L48fe2e.  return v0 @kind object;
}
procedure `java.nio.channels.WritableByteChannel` `newEncryptingChannel`(`com.google.crypto.tink.streamingaead.d` v1 @kind this, `java.nio.channels.WritableByteChannel` v2 @kind object, `byte`[] v3 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/d;.newEncryptingChannel:(Ljava/nio/channels/WritableByteChannel;[B)Ljava/nio/channels/WritableByteChannel;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48feb4.  v0:= v1.`com.google.crypto.tink.streamingaead.d.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L48feb8.  call temp:= `getPrimary`(v0) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimary:()Lcom/google/crypto/tink/PrimitiveSet$Entry;` @kind virtual;
  #L48febe.  v0:= temp @kind object;
  #L48fec0.  call temp:= `getPrimitive`(v0) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L48fec6.  v0:= temp @kind object;
  #L48fec8.  v0:= (`com.google.crypto.tink.StreamingAead`) v0 @kind object;
  #L48fecc.  call temp:= `newEncryptingChannel`(v0, v2, v3) @signature `Lcom/google/crypto/tink/StreamingAead;.newEncryptingChannel:(Ljava/nio/channels/WritableByteChannel;[B)Ljava/nio/channels/WritableByteChannel;` @kind interface;
  #L48fed2.  v2:= temp @kind object;
  #L48fed4.  return v2 @kind object;
}
procedure `java.io.OutputStream` `newEncryptingStream`(`com.google.crypto.tink.streamingaead.d` v1 @kind this, `java.io.OutputStream` v2 @kind object, `byte`[] v3 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/d;.newEncryptingStream:(Ljava/io/OutputStream;[B)Ljava/io/OutputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48fe40.  v0:= v1.`com.google.crypto.tink.streamingaead.d.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L48fe44.  call temp:= `getPrimary`(v0) @signature `Lcom/google/crypto/tink/PrimitiveSet;.getPrimary:()Lcom/google/crypto/tink/PrimitiveSet$Entry;` @kind virtual;
  #L48fe4a.  v0:= temp @kind object;
  #L48fe4c.  call temp:= `getPrimitive`(v0) @signature `Lcom/google/crypto/tink/PrimitiveSet$Entry;.getPrimitive:()Ljava/lang/Object;` @kind virtual;
  #L48fe52.  v0:= temp @kind object;
  #L48fe54.  v0:= (`com.google.crypto.tink.StreamingAead`) v0 @kind object;
  #L48fe58.  call temp:= `newEncryptingStream`(v0, v2, v3) @signature `Lcom/google/crypto/tink/StreamingAead;.newEncryptingStream:(Ljava/io/OutputStream;[B)Ljava/io/OutputStream;` @kind interface;
  #L48fe5e.  v2:= temp @kind object;
  #L48fe60.  return v2 @kind object;
}
procedure `java.nio.channels.SeekableByteChannel` `newSeekableDecryptingChannel`(`com.google.crypto.tink.streamingaead.d` v2 @kind this, `java.nio.channels.SeekableByteChannel` v3 @kind object, `byte`[] v4 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/d;.newSeekableDecryptingChannel:(Ljava/nio/channels/SeekableByteChannel;[B)Ljava/nio/channels/SeekableByteChannel;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48fe94.  v0:= new `com.google.crypto.tink.streamingaead.c`;
  #L48fe98.  v1:= v2.`com.google.crypto.tink.streamingaead.d.a` @type ^`com.google.crypto.tink.PrimitiveSet` @kind object;
  #L48fe9c.  call `<init>`(v0, v1, v3, v4) @signature `Lcom/google/crypto/tink/streamingaead/c;.<init>:(Lcom/google/crypto/tink/PrimitiveSet;Ljava/nio/channels/SeekableByteChannel;[B)V` @kind direct;
  #L48fea2.  return v0 @kind object;
}
