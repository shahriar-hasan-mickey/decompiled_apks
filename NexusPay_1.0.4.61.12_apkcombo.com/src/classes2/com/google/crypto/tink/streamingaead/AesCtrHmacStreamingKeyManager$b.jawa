record `com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager$b` @kind class @AccessFlag  extends `com.google.crypto.tink.KeyTypeManager$KeyFactory` @kind class {
  `com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager` `com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager$b` v0 @kind this, `com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager$b;.<init>:(Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L48e86c.  v0.`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager$b.b` @type ^`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager` := v1 @kind object;
  #L48e870.  call `<init>`(v0, v2) @signature `Lcom/google/crypto/tink/KeyTypeManager$KeyFactory;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L48e876.  return @kind void;
}
procedure `com.google.crypto.tink.proto.AesCtrHmacStreamingKey` `a`(`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager$b` v2 @kind this, `com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat` v3 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager$b;.a:(Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKeyFormat;)Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48e7a0.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey;.newBuilder:()Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey$Builder;` @kind static;
  #L48e7a6.  v0:= temp @kind object;
  #L48e7a8.  call temp:= `getKeySize`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKeyFormat;.getKeySize:()I` @kind virtual;
  #L48e7ae.  v1:= temp;
  #L48e7b0.  call temp:= `randBytes`(v1) @signature `Lcom/google/crypto/tink/subtle/Random;.randBytes:(I)[B` @kind static;
  #L48e7b6.  v1:= temp @kind object;
  #L48e7b8.  call temp:= `copyFrom`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48e7be.  v1:= temp @kind object;
  #L48e7c0.  call temp:= `setKeyValue`(v0, v1) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey$Builder;.setKeyValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey$Builder;` @kind virtual;
  #L48e7c6.  v0:= temp @kind object;
  #L48e7c8.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;` @kind virtual;
  #L48e7ce.  v3:= temp @kind object;
  #L48e7d0.  call temp:= `setParams`(v0, v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey$Builder;.setParams:(Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;)Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey$Builder;` @kind virtual;
  #L48e7d6.  v3:= temp @kind object;
  #L48e7d8.  v0:= v2.`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager$b.b` @type ^`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager` @kind object;
  #L48e7dc.  call temp:= `getVersion`(v0) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.getVersion:()I` @kind virtual;
  #L48e7e2.  v0:= temp;
  #L48e7e4.  call temp:= `setVersion`(v3, v0) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey$Builder;.setVersion:(I)Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey$Builder;` @kind virtual;
  #L48e7ea.  v3:= temp @kind object;
  #L48e7ec.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L48e7f2.  v3:= temp @kind object;
  #L48e7f4.  v3:= (`com.google.crypto.tink.proto.AesCtrHmacStreamingKey`) v3 @kind object;
  #L48e7f8.  return v3 @kind object;
}
procedure `com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat` `b`(`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager$b` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKeyFormat;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L48e80c.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L48e812.  v0:= temp @kind object;
  #L48e814.  call temp:= `parseFrom`(v2, v0) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKeyFormat;.parseFrom:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKeyFormat;` @kind static;
  #L48e81a.  v2:= temp @kind object;
  #L48e81c.  return v2 @kind object;
}
procedure `void` `c`(`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager$b` v2 @kind this, `com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat` v3 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager$b;.c:(Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKeyFormat;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L48e888.  call temp:= `getKeySize`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKeyFormat;.getKeySize:()I` @kind virtual;
  #L48e88e.  v0:= temp;
  #L48e890.  v1:= 16I;
  #L48e894.  if v0 < v1 then goto L48e8a8;
  #L48e898.  call temp:= `getParams`(v3) @signature `Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKeyFormat;.getParams:()Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;` @kind virtual;
  #L48e89e.  v3:= temp @kind object;
  #L48e8a0.  call `b`(v3) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager;.b:(Lcom/google/crypto/tink/proto/AesCtrHmacStreamingParams;)V` @kind static;
  #L48e8a6.  return @kind void;
  #L48e8a8.  v3:= new `java.security.GeneralSecurityException`;
  #L48e8ac.  v0:= "key_size must be at least 16 bytes" @kind object;
  #L48e8b0.  call `<init>`(v3, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48e8b6.  throw v3;
}
procedure `java.lang.Object` `createKey`(`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager$b;.createKey:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48e84c.  v1:= (`com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat`) v1 @kind object;
  #L48e850.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager$b;.a:(Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKeyFormat;)Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKey;` @kind virtual;
  #L48e856.  v1:= temp @kind object;
  #L48e858.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `parseKeyFormat`(`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager$b;.parseKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48e830.  call temp:= `b`(v0, v1) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager$b;.b:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKeyFormat;` @kind virtual;
  #L48e836.  v1:= temp @kind object;
  #L48e838.  return v1 @kind object;
}
procedure `void` `validateKeyFormat`(`com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager$b` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite` v1 @kind object) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager$b;.validateKeyFormat:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L48e8c8.  v1:= (`com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat`) v1 @kind object;
  #L48e8cc.  call `c`(v0, v1) @signature `Lcom/google/crypto/tink/streamingaead/AesCtrHmacStreamingKeyManager$b;.c:(Lcom/google/crypto/tink/proto/AesCtrHmacStreamingKeyFormat;)V` @kind virtual;
  #L48e8d2.  return @kind void;
}
