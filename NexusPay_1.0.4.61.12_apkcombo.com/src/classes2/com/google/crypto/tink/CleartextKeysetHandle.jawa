record `com.google.crypto.tink.CleartextKeysetHandle` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`com.google.crypto.tink.CleartextKeysetHandle` v0 @kind this) @signature `Lcom/google/crypto/tink/CleartextKeysetHandle;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L423ed4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L423eda.  return @kind void;
}
procedure `com.google.crypto.tink.KeysetHandle` `fromKeyset`(`com.google.crypto.tink.proto.Keyset` v0 @kind object) @signature `Lcom/google/crypto/tink/CleartextKeysetHandle;.fromKeyset:(Lcom/google/crypto/tink/proto/Keyset;)Lcom/google/crypto/tink/KeysetHandle;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L423e2c.  call temp:= `e`(v0) @signature `Lcom/google/crypto/tink/KeysetHandle;.e:(Lcom/google/crypto/tink/proto/Keyset;)Lcom/google/crypto/tink/KeysetHandle;` @kind static;
  #L423e32.  v0:= temp @kind object;
  #L423e34.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.Keyset` `getKeyset`(`com.google.crypto.tink.KeysetHandle` v0 @kind object) @signature `Lcom/google/crypto/tink/CleartextKeysetHandle;.getKeyset:(Lcom/google/crypto/tink/KeysetHandle;)Lcom/google/crypto/tink/proto/Keyset;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L423eb8.  call temp:= `f`(v0) @signature `Lcom/google/crypto/tink/KeysetHandle;.f:()Lcom/google/crypto/tink/proto/Keyset;` @kind virtual;
  #L423ebe.  v0:= temp @kind object;
  #L423ec0.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeysetHandle` `parseFrom`(`byte`[] v1 @kind object) @signature `Lcom/google/crypto/tink/CleartextKeysetHandle;.parseFrom:([B)Lcom/google/crypto/tink/KeysetHandle;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L423e48.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L423e4e.  v0:= temp @kind object;
  #L423e50.  call temp:= `parseFrom`(v1, v0) @signature `Lcom/google/crypto/tink/proto/Keyset;.parseFrom:([BLcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/proto/Keyset;` @kind static;
  #L423e56.  v1:= temp @kind object;
  #L423e58.  call temp:= `e`(v1) @signature `Lcom/google/crypto/tink/KeysetHandle;.e:(Lcom/google/crypto/tink/proto/Keyset;)Lcom/google/crypto/tink/KeysetHandle;` @kind static;
  #L423e5e.  v1:= temp @kind object;
  #L423e60.  return v1 @kind object;
  #L423e62.  v1:= new `java.security.GeneralSecurityException`;
  #L423e66.  v0:= "invalid keyset" @kind object;
  #L423e6a.  call `<init>`(v1, v0) @signature `Ljava/security/GeneralSecurityException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L423e70.  throw v1;
  catch `com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @[L423e48..L423e60] goto L423e62;
}
procedure `com.google.crypto.tink.KeysetHandle` `read`(`com.google.crypto.tink.KeysetReader` v0 @kind object) @signature `Lcom/google/crypto/tink/CleartextKeysetHandle;.read:(Lcom/google/crypto/tink/KeysetReader;)Lcom/google/crypto/tink/KeysetHandle;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L423e94.  call temp:= `read`(v0) @signature `Lcom/google/crypto/tink/KeysetReader;.read:()Lcom/google/crypto/tink/proto/Keyset;` @kind interface;
  #L423e9a.  v0:= temp @kind object;
  #L423e9c.  call temp:= `e`(v0) @signature `Lcom/google/crypto/tink/KeysetHandle;.e:(Lcom/google/crypto/tink/proto/Keyset;)Lcom/google/crypto/tink/KeysetHandle;` @kind static;
  #L423ea2.  v0:= temp @kind object;
  #L423ea4.  return v0 @kind object;
}
procedure `void` `write`(`com.google.crypto.tink.KeysetHandle` v0 @kind object, `com.google.crypto.tink.KeysetWriter` v1 @kind object) @signature `Lcom/google/crypto/tink/CleartextKeysetHandle;.write:(Lcom/google/crypto/tink/KeysetHandle;Lcom/google/crypto/tink/KeysetWriter;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L423eec.  call temp:= `f`(v0) @signature `Lcom/google/crypto/tink/KeysetHandle;.f:()Lcom/google/crypto/tink/proto/Keyset;` @kind virtual;
  #L423ef2.  v0:= temp @kind object;
  #L423ef4.  call `write`(v1, v0) @signature `Lcom/google/crypto/tink/KeysetWriter;.write:(Lcom/google/crypto/tink/proto/Keyset;)V` @kind interface;
  #L423efa.  return @kind void;
}
