record `com.google.crypto.tink.JsonKeysetReader` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.crypto.tink.KeysetReader` @kind interface {
  `java.io.InputStream` `com.google.crypto.tink.JsonKeysetReader.a` @AccessFlag PRIVATE_FINAL;
  `org.json.JSONObject` `com.google.crypto.tink.JsonKeysetReader.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.crypto.tink.JsonKeysetReader.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.crypto.tink.JsonKeysetReader.d` @AccessFlag PRIVATE;
}
global `java.nio.charset.Charset` `@@com.google.crypto.tink.JsonKeysetReader.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/JsonKeysetReader;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L424aac.  v0:= "UTF-8" @kind object;
  #L424ab0.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L424ab6.  v0:= temp @kind object;
  #L424ab8.  `@@com.google.crypto.tink.JsonKeysetReader.e` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L424abc.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.JsonKeysetReader` v1 @kind this, `java.io.InputStream` v2 @kind object, `boolean` v3 ) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.<init>:(Ljava/io/InputStream;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L424ad0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L424ad6.  v0:= 0I;
  #L424ad8.  v1.`com.google.crypto.tink.JsonKeysetReader.d` @type ^`boolean` := v0 @kind boolean;
  #L424adc.  v1.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` := v2 @kind object;
  #L424ae0.  v1.`com.google.crypto.tink.JsonKeysetReader.c` @type ^`boolean` := v3 @kind boolean;
  #L424ae4.  v2:= 0I;
  #L424ae6.  v1.`com.google.crypto.tink.JsonKeysetReader.b` @type ^`org.json.JSONObject` := v2 @kind object;
  #L424aea.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.JsonKeysetReader` v1 @kind this, `org.json.JSONObject` v2 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.<init>:(Lorg/json/JSONObject;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L424afc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L424b02.  v0:= 0I;
  #L424b04.  v1.`com.google.crypto.tink.JsonKeysetReader.d` @type ^`boolean` := v0 @kind boolean;
  #L424b08.  v1.`com.google.crypto.tink.JsonKeysetReader.b` @type ^`org.json.JSONObject` := v2 @kind object;
  #L424b0c.  v2:= 0I;
  #L424b0e.  v1.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` := v2 @kind object;
  #L424b12.  v1.`com.google.crypto.tink.JsonKeysetReader.c` @type ^`boolean` := v0 @kind boolean;
  #L424b16.  return @kind void;
}
procedure `com.google.crypto.tink.proto.EncryptedKeyset` `a`(`com.google.crypto.tink.JsonKeysetReader` v2 @kind this, `org.json.JSONObject` v3 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.a:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/EncryptedKeyset;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L424430.  call `j`(v3) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.j:(Lorg/json/JSONObject;)V` @kind static;
  #L424436.  v0:= v2.`com.google.crypto.tink.JsonKeysetReader.d` @type ^`boolean` @kind boolean;
  #L42443a.  v1:= "encryptedKeyset" @kind object;
  #L42443e.  if v0 == 0 then goto L424454;
  #L424442.  call temp:= `getString`(v3, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L424448.  v0:= temp @kind object;
  #L42444a.  call temp:= `urlSafeDecode`(v0) @signature `Lcom/google/crypto/tink/subtle/Base64;.urlSafeDecode:(Ljava/lang/String;)[B` @kind static;
  #L424450.  v0:= temp @kind object;
  #L424452.  goto L424464;
  #L424454.  call temp:= `getString`(v3, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L42445a.  v0:= temp @kind object;
  #L42445c.  call temp:= `decode`(v0) @signature `Lcom/google/crypto/tink/subtle/Base64;.decode:(Ljava/lang/String;)[B` @kind static;
  #L424462.  v0:= temp @kind object;
  #L424464.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/EncryptedKeyset;.newBuilder:()Lcom/google/crypto/tink/proto/EncryptedKeyset$Builder;` @kind static;
  #L42446a.  v1:= temp @kind object;
  #L42446c.  call temp:= `copyFrom`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L424472.  v0:= temp @kind object;
  #L424474.  call temp:= `setEncryptedKeyset`(v1, v0) @signature `Lcom/google/crypto/tink/proto/EncryptedKeyset$Builder;.setEncryptedKeyset:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/EncryptedKeyset$Builder;` @kind virtual;
  #L42447a.  v0:= temp @kind object;
  #L42447c.  v1:= "keysetInfo" @kind object;
  #L424480.  call temp:= `getJSONObject`(v3, v1) @signature `Lorg/json/JSONObject;.getJSONObject:(Ljava/lang/String;)Lorg/json/JSONObject;` @kind virtual;
  #L424486.  v3:= temp @kind object;
  #L424488.  call temp:= `i`(v3) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.i:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/KeysetInfo;` @kind static;
  #L42448e.  v3:= temp @kind object;
  #L424490.  call temp:= `setKeysetInfo`(v0, v3) @signature `Lcom/google/crypto/tink/proto/EncryptedKeyset$Builder;.setKeysetInfo:(Lcom/google/crypto/tink/proto/KeysetInfo;)Lcom/google/crypto/tink/proto/EncryptedKeyset$Builder;` @kind virtual;
  #L424496.  v3:= temp @kind object;
  #L424498.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L42449e.  v3:= temp @kind object;
  #L4244a0.  v3:= (`com.google.crypto.tink.proto.EncryptedKeyset`) v3 @kind object;
  #L4244a4.  return v3 @kind object;
}
procedure `com.google.crypto.tink.proto.KeyData$KeyMaterialType` `b`(`java.lang.String` v3 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.b:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L424620.  v0:= "SYMMETRIC" @kind object;
  #L424624.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L42462a.  v0:= temp;
  #L42462c.  if v0 == 0 then goto L424636;
  #L424630.  v3:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.SYMMETRIC` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L424634.  return v3 @kind object;
  #L424636.  v0:= "ASYMMETRIC_PRIVATE" @kind object;
  #L42463a.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L424640.  v0:= temp;
  #L424642.  if v0 == 0 then goto L42464c;
  #L424646.  v3:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.ASYMMETRIC_PRIVATE` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L42464a.  return v3 @kind object;
  #L42464c.  v0:= "ASYMMETRIC_PUBLIC" @kind object;
  #L424650.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L424656.  v0:= temp;
  #L424658.  if v0 == 0 then goto L424662;
  #L42465c.  v3:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.ASYMMETRIC_PUBLIC` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L424660.  return v3 @kind object;
  #L424662.  v0:= "REMOTE" @kind object;
  #L424666.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L42466c.  v0:= temp;
  #L42466e.  if v0 == 0 then goto L424678;
  #L424672.  v3:= `@@com.google.crypto.tink.proto.KeyData$KeyMaterialType.REMOTE` @type ^`com.google.crypto.tink.proto.KeyData$KeyMaterialType` @kind object;
  #L424676.  return v3 @kind object;
  #L424678.  v0:= new `org.json.JSONException`;
  #L42467c.  v1:= new `java.lang.StringBuilder`;
  #L424680.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L424686.  v2:= "unknown key material type: " @kind object;
  #L42468a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L424690.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L424696.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42469c.  v3:= temp @kind object;
  #L42469e.  call `<init>`(v0, v3) @signature `Lorg/json/JSONException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4246a4.  throw v0;
}
procedure `com.google.crypto.tink.proto.OutputPrefixType` `c`(`java.lang.String` v3 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.c:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/OutputPrefixType;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L424a14.  v0:= "TINK" @kind object;
  #L424a18.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L424a1e.  v0:= temp;
  #L424a20.  if v0 == 0 then goto L424a2a;
  #L424a24.  v3:= `@@com.google.crypto.tink.proto.OutputPrefixType.TINK` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L424a28.  return v3 @kind object;
  #L424a2a.  v0:= "RAW" @kind object;
  #L424a2e.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L424a34.  v0:= temp;
  #L424a36.  if v0 == 0 then goto L424a40;
  #L424a3a.  v3:= `@@com.google.crypto.tink.proto.OutputPrefixType.RAW` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L424a3e.  return v3 @kind object;
  #L424a40.  v0:= "LEGACY" @kind object;
  #L424a44.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L424a4a.  v0:= temp;
  #L424a4c.  if v0 == 0 then goto L424a56;
  #L424a50.  v3:= `@@com.google.crypto.tink.proto.OutputPrefixType.LEGACY` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L424a54.  return v3 @kind object;
  #L424a56.  v0:= "CRUNCHY" @kind object;
  #L424a5a.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L424a60.  v0:= temp;
  #L424a62.  if v0 == 0 then goto L424a6c;
  #L424a66.  v3:= `@@com.google.crypto.tink.proto.OutputPrefixType.CRUNCHY` @type ^`com.google.crypto.tink.proto.OutputPrefixType` @kind object;
  #L424a6a.  return v3 @kind object;
  #L424a6c.  v0:= new `org.json.JSONException`;
  #L424a70.  v1:= new `java.lang.StringBuilder`;
  #L424a74.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L424a7a.  v2:= "unknown output prefix type: " @kind object;
  #L424a7e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L424a84.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L424a8a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L424a90.  v3:= temp @kind object;
  #L424a92.  call `<init>`(v0, v3) @signature `Lorg/json/JSONException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L424a98.  throw v0;
}
procedure `com.google.crypto.tink.proto.KeyStatusType` `d`(`java.lang.String` v3 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.d:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyStatusType;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4246b8.  v0:= "ENABLED" @kind object;
  #L4246bc.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4246c2.  v0:= temp;
  #L4246c4.  if v0 == 0 then goto L4246ce;
  #L4246c8.  v3:= `@@com.google.crypto.tink.proto.KeyStatusType.ENABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L4246cc.  return v3 @kind object;
  #L4246ce.  v0:= "DISABLED" @kind object;
  #L4246d2.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4246d8.  v0:= temp;
  #L4246da.  if v0 == 0 then goto L4246e4;
  #L4246de.  v3:= `@@com.google.crypto.tink.proto.KeyStatusType.DISABLED` @type ^`com.google.crypto.tink.proto.KeyStatusType` @kind object;
  #L4246e2.  return v3 @kind object;
  #L4246e4.  v0:= new `org.json.JSONException`;
  #L4246e8.  v1:= new `java.lang.StringBuilder`;
  #L4246ec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4246f2.  v2:= "unknown status: " @kind object;
  #L4246f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4246fc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L424702.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L424708.  v3:= temp @kind object;
  #L42470a.  call `<init>`(v0, v3) @signature `Lorg/json/JSONException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L424710.  throw v0;
}
procedure `com.google.crypto.tink.proto.KeyData` `e`(`com.google.crypto.tink.JsonKeysetReader` v3 @kind this, `org.json.JSONObject` v4 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.e:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/KeyData;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L424584.  call `l`(v4) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.l:(Lorg/json/JSONObject;)V` @kind static;
  #L42458a.  v0:= v3.`com.google.crypto.tink.JsonKeysetReader.d` @type ^`boolean` @kind boolean;
  #L42458e.  v1:= "value" @kind object;
  #L424592.  if v0 == 0 then goto L4245a8;
  #L424596.  call temp:= `getString`(v4, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L42459c.  v0:= temp @kind object;
  #L42459e.  call temp:= `urlSafeDecode`(v0) @signature `Lcom/google/crypto/tink/subtle/Base64;.urlSafeDecode:(Ljava/lang/String;)[B` @kind static;
  #L4245a4.  v0:= temp @kind object;
  #L4245a6.  goto L4245b8;
  #L4245a8.  call temp:= `getString`(v4, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4245ae.  v0:= temp @kind object;
  #L4245b0.  call temp:= `decode`(v0) @signature `Lcom/google/crypto/tink/subtle/Base64;.decode:(Ljava/lang/String;)[B` @kind static;
  #L4245b6.  v0:= temp @kind object;
  #L4245b8.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeyData;.newBuilder:()Lcom/google/crypto/tink/proto/KeyData$Builder;` @kind static;
  #L4245be.  v1:= temp @kind object;
  #L4245c0.  v2:= "typeUrl" @kind object;
  #L4245c4.  call temp:= `getString`(v4, v2) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4245ca.  v2:= temp @kind object;
  #L4245cc.  call temp:= `setTypeUrl`(v1, v2) @signature `Lcom/google/crypto/tink/proto/KeyData$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyData$Builder;` @kind virtual;
  #L4245d2.  v1:= temp @kind object;
  #L4245d4.  call temp:= `copyFrom`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyFrom:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L4245da.  v0:= temp @kind object;
  #L4245dc.  call temp:= `setValue`(v1, v0) @signature `Lcom/google/crypto/tink/proto/KeyData$Builder;.setValue:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/proto/KeyData$Builder;` @kind virtual;
  #L4245e2.  v0:= temp @kind object;
  #L4245e4.  v1:= "keyMaterialType" @kind object;
  #L4245e8.  call temp:= `getString`(v4, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4245ee.  v4:= temp @kind object;
  #L4245f0.  call temp:= `b`(v4) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.b:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;` @kind static;
  #L4245f6.  v4:= temp @kind object;
  #L4245f8.  call temp:= `setKeyMaterialType`(v0, v4) @signature `Lcom/google/crypto/tink/proto/KeyData$Builder;.setKeyMaterialType:(Lcom/google/crypto/tink/proto/KeyData$KeyMaterialType;)Lcom/google/crypto/tink/proto/KeyData$Builder;` @kind virtual;
  #L4245fe.  v4:= temp @kind object;
  #L424600.  call temp:= `build`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L424606.  v4:= temp @kind object;
  #L424608.  v4:= (`com.google.crypto.tink.proto.KeyData`) v4 @kind object;
  #L42460c.  return v4 @kind object;
}
procedure `com.google.crypto.tink.proto.Keyset$Key` `f`(`com.google.crypto.tink.JsonKeysetReader` v2 @kind this, `org.json.JSONObject` v3 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.f:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/Keyset$Key;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L424870.  call `k`(v3) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.k:(Lorg/json/JSONObject;)V` @kind static;
  #L424876.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/Keyset$Key;.newBuilder:()Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind static;
  #L42487c.  v0:= temp @kind object;
  #L42487e.  v1:= "status" @kind object;
  #L424882.  call temp:= `getString`(v3, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L424888.  v1:= temp @kind object;
  #L42488a.  call temp:= `d`(v1) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.d:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyStatusType;` @kind static;
  #L424890.  v1:= temp @kind object;
  #L424892.  call temp:= `setStatus`(v0, v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setStatus:(Lcom/google/crypto/tink/proto/KeyStatusType;)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L424898.  v0:= temp @kind object;
  #L42489a.  v1:= "keyId" @kind object;
  #L42489e.  call temp:= `getInt`(v3, v1) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L4248a4.  v1:= temp;
  #L4248a6.  call temp:= `setKeyId`(v0, v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setKeyId:(I)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L4248ac.  v0:= temp @kind object;
  #L4248ae.  v1:= "outputPrefixType" @kind object;
  #L4248b2.  call temp:= `getString`(v3, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4248b8.  v1:= temp @kind object;
  #L4248ba.  call temp:= `c`(v1) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.c:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/OutputPrefixType;` @kind static;
  #L4248c0.  v1:= temp @kind object;
  #L4248c2.  call temp:= `setOutputPrefixType`(v0, v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L4248c8.  v0:= temp @kind object;
  #L4248ca.  v1:= "keyData" @kind object;
  #L4248ce.  call temp:= `getJSONObject`(v3, v1) @signature `Lorg/json/JSONObject;.getJSONObject:(Ljava/lang/String;)Lorg/json/JSONObject;` @kind virtual;
  #L4248d4.  v3:= temp @kind object;
  #L4248d6.  call temp:= `e`(v2, v3) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.e:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/KeyData;` @kind direct;
  #L4248dc.  v3:= temp @kind object;
  #L4248de.  call temp:= `setKeyData`(v0, v3) @signature `Lcom/google/crypto/tink/proto/Keyset$Key$Builder;.setKeyData:(Lcom/google/crypto/tink/proto/KeyData;)Lcom/google/crypto/tink/proto/Keyset$Key$Builder;` @kind virtual;
  #L4248e4.  v3:= temp @kind object;
  #L4248e6.  call temp:= `build`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4248ec.  v3:= temp @kind object;
  #L4248ee.  v3:= (`com.google.crypto.tink.proto.Keyset$Key`) v3 @kind object;
  #L4248f2.  return v3 @kind object;
}
procedure `com.google.crypto.tink.proto.KeysetInfo$KeyInfo` `g`(`org.json.JSONObject` v2 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.g:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L42498c.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;.newBuilder:()Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo$Builder;` @kind static;
  #L424992.  v0:= temp @kind object;
  #L424994.  v1:= "status" @kind object;
  #L424998.  call temp:= `getString`(v2, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L42499e.  v1:= temp @kind object;
  #L4249a0.  call temp:= `d`(v1) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.d:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeyStatusType;` @kind static;
  #L4249a6.  v1:= temp @kind object;
  #L4249a8.  call temp:= `setStatus`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo$Builder;.setStatus:(Lcom/google/crypto/tink/proto/KeyStatusType;)Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo$Builder;` @kind virtual;
  #L4249ae.  v0:= temp @kind object;
  #L4249b0.  v1:= "keyId" @kind object;
  #L4249b4.  call temp:= `getInt`(v2, v1) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L4249ba.  v1:= temp;
  #L4249bc.  call temp:= `setKeyId`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo$Builder;.setKeyId:(I)Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo$Builder;` @kind virtual;
  #L4249c2.  v0:= temp @kind object;
  #L4249c4.  v1:= "outputPrefixType" @kind object;
  #L4249c8.  call temp:= `getString`(v2, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4249ce.  v1:= temp @kind object;
  #L4249d0.  call temp:= `c`(v1) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.c:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/OutputPrefixType;` @kind static;
  #L4249d6.  v1:= temp @kind object;
  #L4249d8.  call temp:= `setOutputPrefixType`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo$Builder;.setOutputPrefixType:(Lcom/google/crypto/tink/proto/OutputPrefixType;)Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo$Builder;` @kind virtual;
  #L4249de.  v0:= temp @kind object;
  #L4249e0.  v1:= "typeUrl" @kind object;
  #L4249e4.  call temp:= `getString`(v2, v1) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4249ea.  v2:= temp @kind object;
  #L4249ec.  call temp:= `setTypeUrl`(v0, v2) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo$Builder;.setTypeUrl:(Ljava/lang/String;)Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo$Builder;` @kind virtual;
  #L4249f2.  v2:= temp @kind object;
  #L4249f4.  call temp:= `build`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L4249fa.  v2:= temp @kind object;
  #L4249fc.  v2:= (`com.google.crypto.tink.proto.KeysetInfo$KeyInfo`) v2 @kind object;
  #L424a00.  return v2 @kind object;
}
procedure `com.google.crypto.tink.proto.Keyset` `h`(`com.google.crypto.tink.JsonKeysetReader` v3 @kind this, `org.json.JSONObject` v4 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.h:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/Keyset;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L424724.  call `m`(v4) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.m:(Lorg/json/JSONObject;)V` @kind static;
  #L42472a.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/Keyset;.newBuilder:()Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind static;
  #L424730.  v0:= temp @kind object;
  #L424732.  v1:= "primaryKeyId" @kind object;
  #L424736.  call temp:= `has`(v4, v1) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L42473c.  v2:= temp;
  #L42473e.  if v2 == 0 then goto L424750;
  #L424742.  call temp:= `getInt`(v4, v1) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L424748.  v1:= temp;
  #L42474a.  call temp:= `setPrimaryKeyId`(v0, v1) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.setPrimaryKeyId:(I)Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind virtual;
  #L424750.  v1:= "key" @kind object;
  #L424754.  call temp:= `getJSONArray`(v4, v1) @signature `Lorg/json/JSONObject;.getJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;` @kind virtual;
  #L42475a.  v4:= temp @kind object;
  #L42475c.  v1:= 0I;
  #L42475e.  call temp:= `length`(v4) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L424764.  v2:= temp;
  #L424766.  if v1 >= v2 then goto L424786;
  #L42476a.  call temp:= `getJSONObject`(v4, v1) @signature `Lorg/json/JSONArray;.getJSONObject:(I)Lorg/json/JSONObject;` @kind virtual;
  #L424770.  v2:= temp @kind object;
  #L424772.  call temp:= `f`(v3, v2) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.f:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/Keyset$Key;` @kind direct;
  #L424778.  v2:= temp @kind object;
  #L42477a.  call temp:= `addKey`(v0, v2) @signature `Lcom/google/crypto/tink/proto/Keyset$Builder;.addKey:(Lcom/google/crypto/tink/proto/Keyset$Key;)Lcom/google/crypto/tink/proto/Keyset$Builder;` @kind virtual;
  #L424780.  v1:= v1 + 1;
  #L424784.  goto L42475e;
  #L424786.  call temp:= `build`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L42478c.  v4:= temp @kind object;
  #L42478e.  v4:= (`com.google.crypto.tink.proto.Keyset`) v4 @kind object;
  #L424792.  return v4 @kind object;
}
procedure `com.google.crypto.tink.proto.KeysetInfo` `i`(`org.json.JSONObject` v3 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.i:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/KeysetInfo;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L424904.  call temp:= `newBuilder`() @signature `Lcom/google/crypto/tink/proto/KeysetInfo;.newBuilder:()Lcom/google/crypto/tink/proto/KeysetInfo$Builder;` @kind static;
  #L42490a.  v0:= temp @kind object;
  #L42490c.  v1:= "primaryKeyId" @kind object;
  #L424910.  call temp:= `has`(v3, v1) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L424916.  v2:= temp;
  #L424918.  if v2 == 0 then goto L42492a;
  #L42491c.  call temp:= `getInt`(v3, v1) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L424922.  v1:= temp;
  #L424924.  call temp:= `setPrimaryKeyId`(v0, v1) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$Builder;.setPrimaryKeyId:(I)Lcom/google/crypto/tink/proto/KeysetInfo$Builder;` @kind virtual;
  #L42492a.  v1:= "keyInfo" @kind object;
  #L42492e.  call temp:= `has`(v3, v1) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L424934.  v2:= temp;
  #L424936.  if v2 == 0 then goto L42496c;
  #L42493a.  call temp:= `getJSONArray`(v3, v1) @signature `Lorg/json/JSONObject;.getJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;` @kind virtual;
  #L424940.  v3:= temp @kind object;
  #L424942.  v1:= 0I;
  #L424944.  call temp:= `length`(v3) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L42494a.  v2:= temp;
  #L42494c.  if v1 >= v2 then goto L42496c;
  #L424950.  call temp:= `getJSONObject`(v3, v1) @signature `Lorg/json/JSONArray;.getJSONObject:(I)Lorg/json/JSONObject;` @kind virtual;
  #L424956.  v2:= temp @kind object;
  #L424958.  call temp:= `g`(v2) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.g:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;` @kind static;
  #L42495e.  v2:= temp @kind object;
  #L424960.  call temp:= `addKeyInfo`(v0, v2) @signature `Lcom/google/crypto/tink/proto/KeysetInfo$Builder;.addKeyInfo:(Lcom/google/crypto/tink/proto/KeysetInfo$KeyInfo;)Lcom/google/crypto/tink/proto/KeysetInfo$Builder;` @kind virtual;
  #L424966.  v1:= v1 + 1;
  #L42496a.  goto L424944;
  #L42496c.  call temp:= `build`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite$Builder;.build:()Lcom/google/crypto/tink/shaded/protobuf/GeneratedMessageLite;` @kind virtual;
  #L424972.  v3:= temp @kind object;
  #L424974.  v3:= (`com.google.crypto.tink.proto.KeysetInfo`) v3 @kind object;
  #L424978.  return v3 @kind object;
}
procedure `void` `j`(`org.json.JSONObject` v1 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.j:(Lorg/json/JSONObject;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L424b28.  v0:= "encryptedKeyset" @kind object;
  #L424b2c.  call temp:= `has`(v1, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L424b32.  v1:= temp;
  #L424b34.  if v1 == 0 then goto L424b3a;
  #L424b38.  return @kind void;
  #L424b3a.  v1:= new `org.json.JSONException`;
  #L424b3e.  v0:= "invalid encrypted keyset" @kind object;
  #L424b42.  call `<init>`(v1, v0) @signature `Lorg/json/JSONException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L424b48.  throw v1;
}
procedure `void` `k`(`org.json.JSONObject` v1 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.k:(Lorg/json/JSONObject;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L424b5c.  v0:= "keyData" @kind object;
  #L424b60.  call temp:= `has`(v1, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L424b66.  v0:= temp;
  #L424b68.  if v0 == 0 then goto L424b9e;
  #L424b6c.  v0:= "status" @kind object;
  #L424b70.  call temp:= `has`(v1, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L424b76.  v0:= temp;
  #L424b78.  if v0 == 0 then goto L424b9e;
  #L424b7c.  v0:= "keyId" @kind object;
  #L424b80.  call temp:= `has`(v1, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L424b86.  v0:= temp;
  #L424b88.  if v0 == 0 then goto L424b9e;
  #L424b8c.  v0:= "outputPrefixType" @kind object;
  #L424b90.  call temp:= `has`(v1, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L424b96.  v1:= temp;
  #L424b98.  if v1 == 0 then goto L424b9e;
  #L424b9c.  return @kind void;
  #L424b9e.  v1:= new `org.json.JSONException`;
  #L424ba2.  v0:= "invalid key" @kind object;
  #L424ba6.  call `<init>`(v1, v0) @signature `Lorg/json/JSONException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L424bac.  throw v1;
}
procedure `void` `l`(`org.json.JSONObject` v1 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.l:(Lorg/json/JSONObject;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L424bc0.  v0:= "typeUrl" @kind object;
  #L424bc4.  call temp:= `has`(v1, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L424bca.  v0:= temp;
  #L424bcc.  if v0 == 0 then goto L424bf2;
  #L424bd0.  v0:= "value" @kind object;
  #L424bd4.  call temp:= `has`(v1, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L424bda.  v0:= temp;
  #L424bdc.  if v0 == 0 then goto L424bf2;
  #L424be0.  v0:= "keyMaterialType" @kind object;
  #L424be4.  call temp:= `has`(v1, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L424bea.  v1:= temp;
  #L424bec.  if v1 == 0 then goto L424bf2;
  #L424bf0.  return @kind void;
  #L424bf2.  v1:= new `org.json.JSONException`;
  #L424bf6.  v0:= "invalid keyData" @kind object;
  #L424bfa.  call `<init>`(v1, v0) @signature `Lorg/json/JSONException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L424c00.  throw v1;
}
procedure `void` `m`(`org.json.JSONObject` v2 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.m:(Lorg/json/JSONObject;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L424c14.  v0:= "key" @kind object;
  #L424c18.  call temp:= `has`(v2, v0) @signature `Lorg/json/JSONObject;.has:(Ljava/lang/String;)Z` @kind virtual;
  #L424c1e.  v1:= temp;
  #L424c20.  if v1 == 0 then goto L424c3a;
  #L424c24.  call temp:= `getJSONArray`(v2, v0) @signature `Lorg/json/JSONObject;.getJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;` @kind virtual;
  #L424c2a.  v2:= temp @kind object;
  #L424c2c.  call temp:= `length`(v2) @signature `Lorg/json/JSONArray;.length:()I` @kind virtual;
  #L424c32.  v2:= temp;
  #L424c34.  if v2 == 0 then goto L424c3a;
  #L424c38.  return @kind void;
  #L424c3a.  v2:= new `org.json.JSONException`;
  #L424c3e.  v0:= "invalid keyset" @kind object;
  #L424c42.  call `<init>`(v2, v0) @signature `Lorg/json/JSONException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L424c48.  throw v2;
}
procedure `com.google.crypto.tink.JsonKeysetReader` `withBytes`(`byte`[] v2 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withBytes:([B)Lcom/google/crypto/tink/JsonKeysetReader;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L424310.  v0:= new `com.google.crypto.tink.JsonKeysetReader`;
  #L424314.  v1:= new `java.io.ByteArrayInputStream`;
  #L424318.  call `<init>`(v1, v2) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L42431e.  v2:= 1I;
  #L424320.  call `<init>`(v0, v1, v2) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.<init>:(Ljava/io/InputStream;Z)V` @kind direct;
  #L424326.  return v0 @kind object;
}
procedure `com.google.crypto.tink.JsonKeysetReader` `withFile`(`java.io.File` v2 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withFile:(Ljava/io/File;)Lcom/google/crypto/tink/JsonKeysetReader;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L424338.  v0:= new `com.google.crypto.tink.JsonKeysetReader`;
  #L42433c.  v1:= new `java.io.FileInputStream`;
  #L424340.  call `<init>`(v1, v2) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L424346.  v2:= 1I;
  #L424348.  call `<init>`(v0, v1, v2) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.<init>:(Ljava/io/InputStream;Z)V` @kind direct;
  #L42434e.  return v0 @kind object;
}
procedure `com.google.crypto.tink.KeysetReader` `withInputStream`(`java.io.InputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withInputStream:(Ljava/io/InputStream;)Lcom/google/crypto/tink/KeysetReader;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L424410.  v0:= new `com.google.crypto.tink.JsonKeysetReader`;
  #L424414.  v1:= 0I;
  #L424416.  call `<init>`(v0, v2, v1) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.<init>:(Ljava/io/InputStream;Z)V` @kind direct;
  #L42441c.  return v0 @kind object;
}
procedure `com.google.crypto.tink.JsonKeysetReader` `withJsonObject`(`org.json.JSONObject` v1 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withJsonObject:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/JsonKeysetReader;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L424360.  v0:= new `com.google.crypto.tink.JsonKeysetReader`;
  #L424364.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.<init>:(Lorg/json/JSONObject;)V` @kind direct;
  #L42436a.  return v0 @kind object;
}
procedure `com.google.crypto.tink.JsonKeysetReader` `withPath`(`java.lang.String` v1 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withPath:(Ljava/lang/String;)Lcom/google/crypto/tink/JsonKeysetReader;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L42437c.  v0:= new `java.io.File`;
  #L424380.  call `<init>`(v0, v1) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L424386.  call temp:= `withFile`(v0) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withFile:(Ljava/io/File;)Lcom/google/crypto/tink/JsonKeysetReader;` @kind static;
  #L42438c.  v1:= temp @kind object;
  #L42438e.  return v1 @kind object;
}
procedure `com.google.crypto.tink.JsonKeysetReader` `withPath`(`java.nio.file.Path` v0 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withPath:(Ljava/nio/file/Path;)Lcom/google/crypto/tink/JsonKeysetReader;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4243a0.  call temp:= `toFile`(v0) @signature `Ljava/nio/file/Path;.toFile:()Ljava/io/File;` @kind interface;
  #L4243a6.  v0:= temp @kind object;
  #L4243a8.  call temp:= `withFile`(v0) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withFile:(Ljava/io/File;)Lcom/google/crypto/tink/JsonKeysetReader;` @kind static;
  #L4243ae.  v0:= temp @kind object;
  #L4243b0.  return v0 @kind object;
}
procedure `com.google.crypto.tink.JsonKeysetReader` `withString`(`java.lang.String` v3 @kind object) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withString:(Ljava/lang/String;)Lcom/google/crypto/tink/JsonKeysetReader;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4243c4.  v0:= new `com.google.crypto.tink.JsonKeysetReader`;
  #L4243c8.  v1:= new `java.io.ByteArrayInputStream`;
  #L4243cc.  v2:= `@@com.google.crypto.tink.JsonKeysetReader.e` @type ^`java.nio.charset.Charset` @kind object;
  #L4243d0.  call temp:= `getBytes`(v3, v2) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L4243d6.  v3:= temp @kind object;
  #L4243d8.  call `<init>`(v1, v3) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L4243de.  v3:= 1I;
  #L4243e0.  call `<init>`(v0, v1, v3) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.<init>:(Ljava/io/InputStream;Z)V` @kind direct;
  #L4243e6.  return v0 @kind object;
}
procedure `com.google.crypto.tink.proto.Keyset` `read`(`com.google.crypto.tink.JsonKeysetReader` v4 @kind this) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.read:()Lcom/google/crypto/tink/proto/Keyset;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4247a4.  v0:= v4.`com.google.crypto.tink.JsonKeysetReader.b` @type ^`org.json.JSONObject` @kind object;
  #L4247a8.  if v0 == 0 then goto L4247d0;
  #L4247ac.  v0:= v4.`com.google.crypto.tink.JsonKeysetReader.b` @type ^`org.json.JSONObject` @kind object;
  #L4247b0.  call temp:= `h`(v4, v0) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.h:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/Keyset;` @kind direct;
  #L4247b6.  v0:= temp @kind object;
  #L4247b8.  v1:= v4.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` @kind object;
  #L4247bc.  if v1 == 0 then goto L4247ce;
  #L4247c0.  v2:= v4.`com.google.crypto.tink.JsonKeysetReader.c` @type ^`boolean` @kind boolean;
  #L4247c4.  if v2 == 0 then goto L4247ce;
  #L4247c8.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L4247ce.  return v0 @kind object;
  #L4247d0.  v0:= new `org.json.JSONObject`;
  #L4247d4.  v1:= new `java.lang.String`;
  #L4247d8.  v2:= v4.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` @kind object;
  #L4247dc.  call temp:= `c`(v2) @signature `Lcom/google/crypto/tink/a;.c:(Ljava/io/InputStream;)[B` @kind static;
  #L4247e2.  v2:= temp @kind object;
  #L4247e4.  v3:= `@@com.google.crypto.tink.JsonKeysetReader.e` @type ^`java.nio.charset.Charset` @kind object;
  #L4247e8.  call `<init>`(v1, v2, v3) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L4247ee.  call `<init>`(v0, v1) @signature `Lorg/json/JSONObject;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4247f4.  call temp:= `h`(v4, v0) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.h:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/Keyset;` @kind direct;
  #L4247fa.  v0:= temp @kind object;
  #L4247fc.  v1:= v4.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` @kind object;
  #L424800.  if v1 == 0 then goto L424812;
  #L424804.  v2:= v4.`com.google.crypto.tink.JsonKeysetReader.c` @type ^`boolean` @kind boolean;
  #L424808.  if v2 == 0 then goto L424812;
  #L42480c.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L424812.  return v0 @kind object;
  #L424814.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L424816.  goto L424826;
  #L424818.  v0:= Exception @type ^`org.json.JSONException` @kind object;
  #L42481a.  v1:= new `java.io.IOException`;
  #L42481e.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L424824.  throw v1;
  #L424826.  v1:= v4.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` @kind object;
  #L42482a.  if v1 == 0 then goto L42483c;
  #L42482e.  v2:= v4.`com.google.crypto.tink.JsonKeysetReader.c` @type ^`boolean` @kind boolean;
  #L424832.  if v2 == 0 then goto L42483c;
  #L424836.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L42483c.  throw v0;
  catch `org.json.JSONException` @[L4247a4..L4247b8] goto L424818;
  catch `java.lang.Throwable` @[L4247a4..L4247b8] goto L424814;
  catch `org.json.JSONException` @[L4247d0..L4247fc] goto L424818;
  catch `java.lang.Throwable` @[L4247d0..L4247fc] goto L424814;
  catch `java.lang.Throwable` @[L42481a..L424826] goto L424814;
}
procedure `com.google.crypto.tink.proto.EncryptedKeyset` `readEncrypted`(`com.google.crypto.tink.JsonKeysetReader` v4 @kind this) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.readEncrypted:()Lcom/google/crypto/tink/proto/EncryptedKeyset;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4244b8.  v0:= v4.`com.google.crypto.tink.JsonKeysetReader.b` @type ^`org.json.JSONObject` @kind object;
  #L4244bc.  if v0 == 0 then goto L4244e4;
  #L4244c0.  v0:= v4.`com.google.crypto.tink.JsonKeysetReader.b` @type ^`org.json.JSONObject` @kind object;
  #L4244c4.  call temp:= `a`(v4, v0) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.a:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/EncryptedKeyset;` @kind direct;
  #L4244ca.  v0:= temp @kind object;
  #L4244cc.  v1:= v4.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` @kind object;
  #L4244d0.  if v1 == 0 then goto L4244e2;
  #L4244d4.  v2:= v4.`com.google.crypto.tink.JsonKeysetReader.c` @type ^`boolean` @kind boolean;
  #L4244d8.  if v2 == 0 then goto L4244e2;
  #L4244dc.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L4244e2.  return v0 @kind object;
  #L4244e4.  v0:= new `org.json.JSONObject`;
  #L4244e8.  v1:= new `java.lang.String`;
  #L4244ec.  v2:= v4.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` @kind object;
  #L4244f0.  call temp:= `c`(v2) @signature `Lcom/google/crypto/tink/a;.c:(Ljava/io/InputStream;)[B` @kind static;
  #L4244f6.  v2:= temp @kind object;
  #L4244f8.  v3:= `@@com.google.crypto.tink.JsonKeysetReader.e` @type ^`java.nio.charset.Charset` @kind object;
  #L4244fc.  call `<init>`(v1, v2, v3) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L424502.  call `<init>`(v0, v1) @signature `Lorg/json/JSONObject;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L424508.  call temp:= `a`(v4, v0) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.a:(Lorg/json/JSONObject;)Lcom/google/crypto/tink/proto/EncryptedKeyset;` @kind direct;
  #L42450e.  v0:= temp @kind object;
  #L424510.  v1:= v4.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` @kind object;
  #L424514.  if v1 == 0 then goto L424526;
  #L424518.  v2:= v4.`com.google.crypto.tink.JsonKeysetReader.c` @type ^`boolean` @kind boolean;
  #L42451c.  if v2 == 0 then goto L424526;
  #L424520.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L424526.  return v0 @kind object;
  #L424528.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L42452a.  goto L42453a;
  #L42452c.  v0:= Exception @type ^`org.json.JSONException` @kind object;
  #L42452e.  v1:= new `java.io.IOException`;
  #L424532.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L424538.  throw v1;
  #L42453a.  v1:= v4.`com.google.crypto.tink.JsonKeysetReader.a` @type ^`java.io.InputStream` @kind object;
  #L42453e.  if v1 == 0 then goto L424550;
  #L424542.  v2:= v4.`com.google.crypto.tink.JsonKeysetReader.c` @type ^`boolean` @kind boolean;
  #L424546.  if v2 == 0 then goto L424550;
  #L42454a.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L424550.  throw v0;
  catch `org.json.JSONException` @[L4244b8..L4244cc] goto L42452c;
  catch `java.lang.Throwable` @[L4244b8..L4244cc] goto L424528;
  catch `org.json.JSONException` @[L4244e4..L424510] goto L42452c;
  catch `java.lang.Throwable` @[L4244e4..L424510] goto L424528;
  catch `java.lang.Throwable` @[L42452e..L42453a] goto L424528;
}
procedure `com.google.crypto.tink.JsonKeysetReader` `withUrlSafeBase64`(`com.google.crypto.tink.JsonKeysetReader` v1 @kind this) @signature `Lcom/google/crypto/tink/JsonKeysetReader;.withUrlSafeBase64:()Lcom/google/crypto/tink/JsonKeysetReader;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4243f8.  v0:= 1I;
  #L4243fa.  v1.`com.google.crypto.tink.JsonKeysetReader.d` @type ^`boolean` := v0 @kind boolean;
  #L4243fe.  return v1 @kind object;
}
