record `com.google.crypto.tink.shaded.protobuf.u0$a` @kind class @AccessFlag  {
}
procedure `void` `a`(`byte` v0 , `byte` v1 , `byte` v2 , `byte` v3 , `char`[] v4 @kind object, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.a:(BBBB[CI)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4879c8.  call `h`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.h:(BBBB[CI)V` @kind static;
  #L4879ce.  return @kind void;
}
procedure `boolean` `b`(`byte` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.b:(B)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4878a0.  call temp:= `n`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.n:(B)Z` @kind static;
  #L4878a6.  v0:= temp;
  #L4878a8.  return v0;
}
procedure `void` `c`(`byte` v0 , `char`[] v1 @kind object, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.c:(B[CI)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4879e0.  call `i`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.i:(B[CI)V` @kind static;
  #L4879e6.  return @kind void;
}
procedure `boolean` `d`(`byte` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.d:(B)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4878bc.  call temp:= `p`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.p:(B)Z` @kind static;
  #L4878c2.  v0:= temp;
  #L4878c4.  return v0;
}
procedure `void` `e`(`byte` v0 , `byte` v1 , `char`[] v2 @kind object, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.e:(BB[CI)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4879f8.  call `k`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.k:(BB[CI)V` @kind static;
  #L4879fe.  return @kind void;
}
procedure `boolean` `f`(`byte` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.f:(B)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4878d8.  call temp:= `o`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.o:(B)Z` @kind static;
  #L4878de.  v0:= temp;
  #L4878e0.  return v0;
}
procedure `void` `g`(`byte` v0 , `byte` v1 , `byte` v2 , `char`[] v3 @kind object, `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.g:(BBB[CI)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L487a10.  call `j`(v0, v1, v2, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.j:(BBB[CI)V` @kind static;
  #L487a16.  return @kind void;
}
procedure `void` `h`(`byte` v2 , `byte` v3 , `byte` v4 , `byte` v5 , `char`[] v6 @kind object, `int` v7 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.h:(BBBB[CI)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L487a28.  call temp:= `m`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.m:(B)Z` @kind static;
  #L487a2e.  v0:= temp;
  #L487a30.  if v0 != 0 then goto L487aaa;
  #L487a34.  v0:= v2 ^< 28;
  #L487a38.  v1:= v3 + 112;
  #L487a3c.  v0:= v0 + v1 @kind int;
  #L487a3e.  v0:= v0 ^> 30;
  #L487a42.  if v0 != 0 then goto L487aaa;
  #L487a46.  call temp:= `m`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.m:(B)Z` @kind static;
  #L487a4c.  v0:= temp;
  #L487a4e.  if v0 != 0 then goto L487aaa;
  #L487a52.  call temp:= `m`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.m:(B)Z` @kind static;
  #L487a58.  v0:= temp;
  #L487a5a.  if v0 != 0 then goto L487aaa;
  #L487a5e.  v2:= v2 ^& 7;
  #L487a62.  v2:= v2 ^< 18;
  #L487a66.  call temp:= `r`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.r:(B)I` @kind static;
  #L487a6c.  v3:= temp;
  #L487a6e.  v3:= v3 ^< 12;
  #L487a72.  v2:= v2 ^| v3 @kind int;
  #L487a74.  call temp:= `r`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.r:(B)I` @kind static;
  #L487a7a.  v3:= temp;
  #L487a7c.  v3:= v3 ^< 6;
  #L487a80.  v2:= v2 ^| v3 @kind int;
  #L487a82.  call temp:= `r`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.r:(B)I` @kind static;
  #L487a88.  v3:= temp;
  #L487a8a.  v2:= v2 ^| v3 @kind int;
  #L487a8c.  call temp:= `l`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.l:(I)C` @kind static;
  #L487a92.  v3:= temp;
  #L487a94.  v6[v7]:= v3 @kind char;
  #L487a98.  v7:= v7 + 1;
  #L487a9c.  call temp:= `q`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.q:(I)C` @kind static;
  #L487aa2.  v2:= temp;
  #L487aa4.  v6[v7]:= v2 @kind char;
  #L487aa8.  return @kind void;
  #L487aaa.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.c:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L487ab0.  v2:= temp @kind object;
  #L487ab2.  throw v2;
}
procedure `void` `i`(`byte` v0 , `char`[] v1 @kind object, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.i:(B[CI)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L487ac4.  v0:= (`char`) v0 @kind i2c;
  #L487ac6.  v1[v2]:= v0 @kind char;
  #L487aca.  return @kind void;
}
procedure `void` `j`(`byte` v2 , `byte` v3 , `byte` v4 , `char`[] v5 @kind object, `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.j:(BBB[CI)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L487adc.  call temp:= `m`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.m:(B)Z` @kind static;
  #L487ae2.  v0:= temp;
  #L487ae4.  if v0 != 0 then goto L487b38;
  #L487ae8.  v0:= -32I;
  #L487aec.  v1:= -96I;
  #L487af0.  if v2 != v0 then goto L487af8;
  #L487af4.  if v3 < v1 then goto L487b38;
  #L487af8.  v0:= -19I;
  #L487afc.  if v2 != v0 then goto L487b04;
  #L487b00.  if v3 >= v1 then goto L487b38;
  #L487b04.  call temp:= `m`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.m:(B)Z` @kind static;
  #L487b0a.  v0:= temp;
  #L487b0c.  if v0 != 0 then goto L487b38;
  #L487b10.  v2:= v2 ^& 15;
  #L487b14.  v2:= v2 ^< 12;
  #L487b18.  call temp:= `r`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.r:(B)I` @kind static;
  #L487b1e.  v3:= temp;
  #L487b20.  v3:= v3 ^< 6;
  #L487b24.  v2:= v2 ^| v3 @kind int;
  #L487b26.  call temp:= `r`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.r:(B)I` @kind static;
  #L487b2c.  v3:= temp;
  #L487b2e.  v2:= v2 ^| v3 @kind int;
  #L487b30.  v2:= (`char`) v2 @kind i2c;
  #L487b32.  v5[v6]:= v2 @kind char;
  #L487b36.  return @kind void;
  #L487b38.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.c:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L487b3e.  v2:= temp @kind object;
  #L487b40.  throw v2;
}
procedure `void` `k`(`byte` v1 , `byte` v2 , `char`[] v3 @kind object, `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.k:(BB[CI)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L487b54.  v0:= -62I;
  #L487b58.  if v1 < v0 then goto L487b82;
  #L487b5c.  call temp:= `m`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.m:(B)Z` @kind static;
  #L487b62.  v0:= temp;
  #L487b64.  if v0 != 0 then goto L487b82;
  #L487b68.  v1:= v1 ^& 31;
  #L487b6c.  v1:= v1 ^< 6;
  #L487b70.  call temp:= `r`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.r:(B)I` @kind static;
  #L487b76.  v2:= temp;
  #L487b78.  v1:= v1 ^| v2 @kind int;
  #L487b7a.  v1:= (`char`) v1 @kind i2c;
  #L487b7c.  v3[v4]:= v1 @kind char;
  #L487b80.  return @kind void;
  #L487b82.  call temp:= `c`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.c:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L487b88.  v1:= temp @kind object;
  #L487b8a.  throw v1;
}
procedure `char` `l`(`int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.l:(I)C` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L487970.  v1:= v1 ^>> 10;
  #L487974.  v0:= 55232I;
  #L48797a.  v1:= v1 + v0 @kind int;
  #L48797c.  v1:= (`char`) v1 @kind i2c;
  #L48797e.  return v1;
}
procedure `boolean` `m`(`byte` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.m:(B)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4878f4.  v0:= -65I;
  #L4878f8.  if v1 <= v0 then goto L487900;
  #L4878fc.  v1:= 1I;
  #L4878fe.  goto L487902;
  #L487900.  v1:= 0I;
  #L487902.  return v1;
}
procedure `boolean` `n`(`byte` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.n:(B)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L487914.  if v0 < 0 then goto L48791c;
  #L487918.  v0:= 1I;
  #L48791a.  goto L48791e;
  #L48791c.  v0:= 0I;
  #L48791e.  return v0;
}
procedure `boolean` `o`(`byte` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.o:(B)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L487930.  v0:= -16I;
  #L487934.  if v1 >= v0 then goto L48793c;
  #L487938.  v1:= 1I;
  #L48793a.  goto L48793e;
  #L48793c.  v1:= 0I;
  #L48793e.  return v1;
}
procedure `boolean` `p`(`byte` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.p:(B)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L487950.  v0:= -32I;
  #L487954.  if v1 >= v0 then goto L48795c;
  #L487958.  v1:= 1I;
  #L48795a.  goto L48795e;
  #L48795c.  v1:= 0I;
  #L48795e.  return v1;
}
procedure `char` `q`(`int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.q:(I)C` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L487990.  v1:= v1 ^& 1023;
  #L487994.  v0:= 56320I;
  #L48799a.  v1:= v1 + v0 @kind int;
  #L48799c.  v1:= (`char`) v1 @kind i2c;
  #L48799e.  return v1;
}
procedure `int` `r`(`byte` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0$a;.r:(B)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L4879b0.  v0:= v0 ^& 63;
  #L4879b4.  return v0;
}
