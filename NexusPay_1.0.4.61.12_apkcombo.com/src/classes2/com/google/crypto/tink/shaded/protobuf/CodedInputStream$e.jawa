record `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.CodedInputStream` @kind class {
  `java.nio.ByteBuffer` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.f` @AccessFlag PRIVATE_FINAL;
  `long` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.g` @AccessFlag PRIVATE_FINAL;
  `long` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.h` @AccessFlag PRIVATE;
  `long` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @AccessFlag PRIVATE;
  `long` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.k` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.l` @AccessFlag PRIVATE;
  `boolean` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.m` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.n` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v4 @kind this, `java.nio.ByteBuffer` v5 @kind object, `boolean` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.<init>:(Ljava/nio/ByteBuffer;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L463b30.  v0:= 0I;
  #L463b32.  call `<init>`(v4, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$a;)V` @kind direct;
  #L463b38.  v0:= 2147483647I;
  #L463b3e.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.n` @type ^`int` := v0;
  #L463b42.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.e` @type ^`java.nio.ByteBuffer` := v5 @kind object;
  #L463b46.  call temp:= `i`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.i:(Ljava/nio/ByteBuffer;)J` @kind static;
  #L463b4c.  v0:= temp @kind wide;
  #L463b4e.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.g` @type ^`long` := v0 @kind wide;
  #L463b52.  call temp:= `limit`(v5) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L463b58.  v2:= temp;
  #L463b5a.  v2:= (`long`) v2 @kind i2l;
  #L463b5c.  v0:= v0 + v2 @kind long;
  #L463b5e.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.h` @type ^`long` := v0 @kind wide;
  #L463b62.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.g` @type ^`long` @kind wide;
  #L463b66.  call temp:= `position`(v5) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L463b6c.  v5:= temp;
  #L463b6e.  v2:= (`long`) v5 @kind i2l;
  #L463b70.  v0:= v0 + v2 @kind long;
  #L463b72.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v0 @kind wide;
  #L463b76.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v0 @kind wide;
  #L463b7a.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.f` @type ^`boolean` := v6 @kind boolean;
  #L463b7e.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object, `boolean` v2 , `com.google.crypto.tink.shaded.protobuf.CodedInputStream$a` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.<init>:(Ljava/nio/ByteBuffer;ZLcom/google/crypto/tink/shaded/protobuf/CodedInputStream$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L463b90.  call `<init>`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.<init>:(Ljava/nio/ByteBuffer;Z)V` @kind direct;
  #L463b96.  return @kind void;
}
procedure `int` `d`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this, `long` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.d:(J)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4631bc.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.g` @type ^`long` @kind wide;
  #L4631c0.  v3:= v3 - v0 @kind long;
  #L4631c2.  v4:= (`int`) v3 @kind l2i;
  #L4631c4.  return v4;
}
procedure `boolean` `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.e:()Z` @AccessFlag STATIC {
    temp;
    v0;

  #L462d8c.  call temp:= `I`() @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.I:()Z` @kind static;
  #L462d92.  v0:= temp;
  #L462d94.  return v0;
}
procedure `void` `g`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.g:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L463cd8.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.h` @type ^`long` @kind wide;
  #L463cdc.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.k` @type ^`int`;
  #L463ce0.  v2:= (`long`) v2 @kind i2l;
  #L463ce2.  v0:= v0 + v2 @kind long;
  #L463ce4.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.h` @type ^`long` := v0 @kind wide;
  #L463ce8.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L463cec.  v2:= v0 - v2 @kind long;
  #L463cf0.  v3:= (`int`) v2 @kind l2i;
  #L463cf2.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.n` @type ^`int`;
  #L463cf6.  if v3 <= v2 then goto L463d0a;
  #L463cfa.  v3:= v3 - v2 @kind int;
  #L463cfc.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.k` @type ^`int` := v3;
  #L463d00.  v2:= (`long`) v3 @kind i2l;
  #L463d02.  v0:= v0 - v2 @kind long;
  #L463d04.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.h` @type ^`long` := v0 @kind wide;
  #L463d08.  goto L463d10;
  #L463d0a.  v0:= 0I;
  #L463d0c.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.k` @type ^`int` := v0;
  #L463d10.  return @kind void;
}
procedure `int` `h`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.h:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L46353c.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.h` @type ^`long` @kind wide;
  #L463540.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L463544.  v0:= v0 - v2 @kind long;
  #L463546.  v1:= (`int`) v0 @kind l2i;
  #L463548.  return v1;
}
procedure `void` `i`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.i:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L463de0.  call temp:= `h`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.h:()I` @kind direct;
  #L463de6.  v0:= temp;
  #L463de8.  v1:= 10I;
  #L463dec.  if v0 < v1 then goto L463df8;
  #L463df0.  call `j`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.j:()V` @kind direct;
  #L463df6.  goto L463dfe;
  #L463df8.  call `k`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.k:()V` @kind direct;
  #L463dfe.  return @kind void;
}
procedure `void` `j`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v5 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.j:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L463e10.  v0:= 0I;
  #L463e12.  v1:= 10I;
  #L463e16.  if v0 >= v1 then goto L463e3c;
  #L463e1a.  v1:= v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L463e1e.  v3:= 1L;
  #L463e22.  v3:= v3 + v1 @kind long;
  #L463e24.  v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v3 @kind wide;
  #L463e28.  call temp:= `v`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L463e2e.  v1:= temp;
  #L463e30.  if v1 < 0 then goto L463e36;
  #L463e34.  return @kind void;
  #L463e36.  v0:= v0 + 1;
  #L463e3a.  goto L463e12;
  #L463e3c.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.e:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L463e42.  v0:= temp @kind object;
  #L463e44.  throw v0;
}
procedure `void` `k`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.k:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L463e58.  v0:= 0I;
  #L463e5a.  v1:= 10I;
  #L463e5e.  if v0 >= v1 then goto L463e76;
  #L463e62.  call temp:= `readRawByte`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawByte:()B` @kind virtual;
  #L463e68.  v1:= temp;
  #L463e6a.  if v1 < 0 then goto L463e70;
  #L463e6e.  return @kind void;
  #L463e70.  v0:= v0 + 1;
  #L463e74.  goto L463e5a;
  #L463e76.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.e:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L463e7c.  v0:= temp @kind object;
  #L463e7e.  throw v0;
}
procedure `java.nio.ByteBuffer` `l`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v3 @kind this, `long` v4 , `long` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.l:(JJ)Ljava/nio/ByteBuffer;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4636ec.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L4636f0.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L4636f6.  v0:= temp;
  #L4636f8.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L4636fc.  call temp:= `limit`(v1) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L463702.  v1:= temp;
  #L463704.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L463708.  call temp:= `d`(v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.d:(J)I` @kind direct;
  #L46370e.  v4:= temp;
  #L463710.  call temp:= `position`(v2, v4) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L463716.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L46371a.  call temp:= `d`(v3, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.d:(J)I` @kind direct;
  #L463720.  v5:= temp;
  #L463722.  call temp:= `limit`(v4, v5) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L463728.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L46372c.  call temp:= `slice`(v4) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L463732.  v4:= temp @kind object;
  #L463734.  v5:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L463738.  call temp:= `position`(v5, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L46373e.  v5:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L463742.  call temp:= `limit`(v5, v1) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L463748.  return v4 @kind object;
  #L46374a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L46374c.  goto L463758;
  #L46374e.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L463754.  v4:= temp @kind object;
  #L463756.  throw v4;
  #L463758.  v5:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L46375c.  call temp:= `position`(v5, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L463762.  v5:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L463766.  call temp:= `limit`(v5, v1) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L46376c.  throw v4;
  catch `java.lang.IllegalArgumentException` @[L463704..L463734] goto L46374e;
  catch `java.lang.Throwable` @[L463704..L463734] goto L46374a;
  catch `java.lang.Throwable` @[L46374e..L463758] goto L46374a;
}
procedure `void` `checkLastTagWas`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.checkLastTagWas:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L463ba8.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.l` @type ^`int`;
  #L463bac.  if v0 != v2 then goto L463bb2;
  #L463bb0.  return @kind void;
  #L463bb2.  call temp:= `a`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.a:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L463bb8.  v2:= temp @kind object;
  #L463bba.  throw v2;
}
procedure `void` `enableAliasing`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.enableAliasing:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L463bcc.  v0.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.m` @type ^`boolean` := v1 @kind boolean;
  #L463bd0.  return @kind void;
}
procedure `long` `f`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v6 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.f:()J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L463a88.  v0:= 0L;
  #L463a8c.  v2:= 0I;
  #L463a8e.  v3:= 64I;
  #L463a92.  if v2 >= v3 then goto L463ab8;
  #L463a96.  call temp:= `readRawByte`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawByte:()B` @kind virtual;
  #L463a9c.  v3:= temp;
  #L463a9e.  v4:= v3 ^& 127;
  #L463aa2.  v4:= (`long`) v4 @kind i2l;
  #L463aa4.  v4:= v4 ^< v2 @kind long;
  #L463aa6.  v0:= v0 ^| v4 @kind long;
  #L463aa8.  v3:= v3 ^& 128;
  #L463aac.  if v3 != 0 then goto L463ab2;
  #L463ab0.  return v0 @kind wide;
  #L463ab2.  v2:= v2 + 7;
  #L463ab6.  goto L463a8e;
  #L463ab8.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.e:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L463abe.  v0:= temp @kind object;
  #L463ac0.  throw v0;
}
procedure `int` `getBytesUntilLimit`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.getBytesUntilLimit:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4631d8.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.n` @type ^`int`;
  #L4631dc.  v1:= 2147483647I;
  #L4631e2.  if v0 != v1 then goto L4631ea;
  #L4631e6.  v0:= -1I;
  #L4631e8.  return v0;
  #L4631ea.  call temp:= `getTotalBytesRead`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.getTotalBytesRead:()I` @kind virtual;
  #L4631f0.  v1:= temp;
  #L4631f2.  v0:= v0 - v1 @kind int;
  #L4631f4.  return v0;
}
procedure `int` `getLastTag`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.getLastTag:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L463208.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.l` @type ^`int`;
  #L46320c.  return v0;
}
procedure `int` `getTotalBytesRead`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.getTotalBytesRead:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L463220.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L463224.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` @kind wide;
  #L463228.  v0:= v0 - v2 @kind long;
  #L46322a.  v1:= (`int`) v0 @kind l2i;
  #L46322c.  return v1;
}
procedure `boolean` `isAtEnd`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v5 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.isAtEnd:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L462d64.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L462d68.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.h` @type ^`long` @kind wide;
  #L462d6c.  v4:= lcmp(v0, v2);
  #L462d70.  if v4 != 0 then goto L462d78;
  #L462d74.  v0:= 1I;
  #L462d76.  goto L462d7a;
  #L462d78.  v0:= 0I;
  #L462d7a.  return v0;
}
procedure `void` `popLimit`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.popLimit:(I)V` @AccessFlag PUBLIC {
    temp;

  #L463be4.  v0.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.n` @type ^`int` := v1;
  #L463be8.  call `g`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.g:()V` @kind direct;
  #L463bee.  return @kind void;
}
procedure `int` `pushLimit`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.pushLimit:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L463240.  if v2 < 0 then goto L46326c;
  #L463244.  call temp:= `getTotalBytesRead`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.getTotalBytesRead:()I` @kind virtual;
  #L46324a.  v0:= temp;
  #L46324c.  v2:= v2 + v0 @kind int;
  #L46324e.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.n` @type ^`int`;
  #L463252.  if v2 > v0 then goto L463262;
  #L463256.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.n` @type ^`int` := v2;
  #L46325a.  call `g`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.g:()V` @kind direct;
  #L463260.  return v0;
  #L463262.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L463268.  v2:= temp @kind object;
  #L46326a.  throw v2;
  #L46326c.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L463272.  v2:= temp @kind object;
  #L463274.  throw v2;
}
procedure `boolean` `readBool`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v5 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readBool:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L462da8.  call temp:= `readRawVarint64`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint64:()J` @kind virtual;
  #L462dae.  v0:= temp @kind wide;
  #L462db0.  v2:= 0L;
  #L462db4.  v4:= lcmp(v0, v2);
  #L462db8.  if v4 == 0 then goto L462dc0;
  #L462dbc.  v0:= 1I;
  #L462dbe.  goto L462dc2;
  #L462dc0.  v0:= 0I;
  #L462dc2.  return v0;
}
procedure `byte`[] `readByteArray`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readByteArray:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L462f74.  call temp:= `readRawVarint32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L462f7a.  v0:= temp;
  #L462f7c.  call temp:= `readRawBytes`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawBytes:(I)[B` @kind virtual;
  #L462f82.  v0:= temp @kind object;
  #L462f84.  return v0 @kind object;
}
procedure `java.nio.ByteBuffer` `readByteBuffer`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v12 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L463648.  call temp:= `readRawVarint32`(v12) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L46364e.  v0:= temp;
  #L463650.  if v0 <= 0 then goto L4636ba;
  #L463654.  call temp:= `h`(v12) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.h:()I` @kind direct;
  #L46365a.  v1:= temp;
  #L46365c.  if v0 > v1 then goto L4636ba;
  #L463660.  v1:= v12.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.f` @type ^`boolean` @kind boolean;
  #L463664.  if v1 != 0 then goto L46368e;
  #L463668.  v1:= v12.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.m` @type ^`boolean` @kind boolean;
  #L46366c.  if v1 == 0 then goto L46368e;
  #L463670.  v1:= v12.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L463674.  v3:= (`long`) v0 @kind i2l;
  #L463676.  v5:= v1 + v3 @kind long;
  #L46367a.  call temp:= `l`(v12, v1, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.l:(JJ)Ljava/nio/ByteBuffer;` @kind direct;
  #L463680.  v0:= temp @kind object;
  #L463682.  v1:= v12.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L463686.  v1:= v1 + v3 @kind long;
  #L463688.  v12.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v1 @kind wide;
  #L46368c.  return v0 @kind object;
  #L46368e.  v1:= new `byte`[v0];
  #L463692.  v3:= v12.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L463696.  v6:= 0L;
  #L46369a.  v10:= (`long`) v0 @kind i2l;
  #L46369c.  v5:= v1 @kind object;
  #L46369e.  v8:= v10 @kind wide;
  #L4636a0.  call `n`(v3, v5, v6, v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.n:(J[BJJ)V` @kind static;
  #L4636a6.  v2:= v12.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L4636aa.  v2:= v2 + v10 @kind long;
  #L4636ac.  v12.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v2 @kind wide;
  #L4636b0.  call temp:= `wrap`(v1) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L4636b6.  v0:= temp @kind object;
  #L4636b8.  return v0 @kind object;
  #L4636ba.  if v0 != 0 then goto L4636c4;
  #L4636be.  v0:= `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_BUFFER` @type ^`java.nio.ByteBuffer` @kind object;
  #L4636c2.  return v0 @kind object;
  #L4636c4.  if v0 >= 0 then goto L4636d2;
  #L4636c8.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L4636ce.  v0:= temp @kind object;
  #L4636d0.  throw v0;
  #L4636d2.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L4636d8.  v0:= temp @kind object;
  #L4636da.  throw v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `readBytes`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v11 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readBytes:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L463004.  call temp:= `readRawVarint32`(v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L46300a.  v0:= temp;
  #L46300c.  if v0 <= 0 then goto L46307e;
  #L463010.  call temp:= `h`(v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.h:()I` @kind direct;
  #L463016.  v1:= temp;
  #L463018.  if v0 > v1 then goto L46307e;
  #L46301c.  v1:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.f` @type ^`boolean` @kind boolean;
  #L463020.  if v1 == 0 then goto L463052;
  #L463024.  v1:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.m` @type ^`boolean` @kind boolean;
  #L463028.  if v1 == 0 then goto L463052;
  #L46302c.  v1:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L463030.  v3:= (`long`) v0 @kind i2l;
  #L463032.  v5:= v1 + v3 @kind long;
  #L463036.  call temp:= `l`(v11, v1, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.l:(JJ)Ljava/nio/ByteBuffer;` @kind direct;
  #L46303c.  v0:= temp @kind object;
  #L46303e.  v1:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L463042.  v1:= v1 + v3 @kind long;
  #L463044.  v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v1 @kind wide;
  #L463048.  call temp:= `j`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.j:(Ljava/nio/ByteBuffer;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L46304e.  v0:= temp @kind object;
  #L463050.  return v0 @kind object;
  #L463052.  v8:= new `byte`[v0];
  #L463056.  v1:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L46305a.  v4:= 0L;
  #L46305e.  v9:= (`long`) v0 @kind i2l;
  #L463060.  v3:= v8 @kind object;
  #L463062.  v6:= v9 @kind wide;
  #L463064.  call `n`(v1, v3, v4, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.n:(J[BJJ)V` @kind static;
  #L46306a.  v0:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L46306e.  v0:= v0 + v9 @kind long;
  #L463070.  v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v0 @kind wide;
  #L463074.  call temp:= `k`(v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.k:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L46307a.  v0:= temp @kind object;
  #L46307c.  return v0 @kind object;
  #L46307e.  if v0 != 0 then goto L463088;
  #L463082.  v0:= `@@com.google.crypto.tink.shaded.protobuf.ByteString.EMPTY` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L463086.  return v0 @kind object;
  #L463088.  if v0 >= 0 then goto L463096;
  #L46308c.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L463092.  v0:= temp @kind object;
  #L463094.  throw v0;
  #L463096.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L46309c.  v0:= temp @kind object;
  #L46309e.  throw v0;
}
procedure `double` `readDouble`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readDouble:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L463174.  call temp:= `readRawLittleEndian64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian64:()J` @kind virtual;
  #L46317a.  v0:= temp @kind wide;
  #L46317c.  call temp:= `longBitsToDouble`(v0) @signature `Ljava/lang/Double;.longBitsToDouble:(J)D` @kind static;
  #L463182.  v0:= temp @kind wide;
  #L463184.  return v0 @kind wide;
}
procedure `int` `readEnum`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readEnum:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L463288.  call temp:= `readRawVarint32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L46328e.  v0:= temp;
  #L463290.  return v0;
}
procedure `int` `readFixed32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readFixed32:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4632a4.  call temp:= `readRawLittleEndian32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian32:()I` @kind virtual;
  #L4632aa.  v0:= temp;
  #L4632ac.  return v0;
}
procedure `long` `readFixed64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readFixed64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L463798.  call temp:= `readRawLittleEndian64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian64:()J` @kind virtual;
  #L46379e.  v0:= temp @kind wide;
  #L4637a0.  return v0 @kind wide;
}
procedure `float` `readFloat`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readFloat:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L463198.  call temp:= `readRawLittleEndian32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian32:()I` @kind virtual;
  #L46319e.  v0:= temp;
  #L4631a0.  call temp:= `intBitsToFloat`(v0) @signature `Ljava/lang/Float;.intBitsToFloat:(I)F` @kind static;
  #L4631a6.  v0:= temp;
  #L4631a8.  return v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `readGroup`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this, `int` v3 , `com.google.crypto.tink.shaded.protobuf.Parser` v4 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readGroup:(ILcom/google/crypto/tink/shaded/protobuf/Parser;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4630b0.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L4630b4.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @type ^`int`;
  #L4630b8.  if v0 >= v1 then goto L4630ee;
  #L4630bc.  v0:= v0 + 1;
  #L4630c0.  v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v0;
  #L4630c4.  call temp:= `parsePartialFrom`(v4, v2, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/Parser;.parsePartialFrom:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @kind interface;
  #L4630ca.  v4:= temp @kind object;
  #L4630cc.  v4:= (`com.google.crypto.tink.shaded.protobuf.MessageLite`) v4 @kind object;
  #L4630d0.  v5:= 4I;
  #L4630d2.  call temp:= `a`(v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L4630d8.  v3:= temp;
  #L4630da.  call `checkLastTagWas`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.checkLastTagWas:(I)V` @kind virtual;
  #L4630e0.  v3:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L4630e4.  v3:= v3 + -1;
  #L4630e8.  v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v3;
  #L4630ec.  return v4 @kind object;
  #L4630ee.  call temp:= `h`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.h:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L4630f4.  v3:= temp @kind object;
  #L4630f6.  throw v3;
}
procedure `void` `readGroup`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this, `int` v3 , `com.google.crypto.tink.shaded.protobuf.MessageLite$Builder` v4 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readGroup:(ILcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L463c00.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L463c04.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @type ^`int`;
  #L463c08.  if v0 >= v1 then goto L463c38;
  #L463c0c.  v0:= v0 + 1;
  #L463c10.  v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v0;
  #L463c14.  call temp:= `mergeFrom`(v4, v2, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;.mergeFrom:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;` @kind interface;
  #L463c1a.  v4:= 4I;
  #L463c1c.  call temp:= `a`(v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L463c22.  v3:= temp;
  #L463c24.  call `checkLastTagWas`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.checkLastTagWas:(I)V` @kind virtual;
  #L463c2a.  v3:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L463c2e.  v3:= v3 + -1;
  #L463c32.  v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v3;
  #L463c36.  return @kind void;
  #L463c38.  call temp:= `h`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.h:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L463c3e.  v3:= temp @kind object;
  #L463c40.  throw v3;
}
procedure `int` `readInt32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readInt32:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4632c0.  call temp:= `readRawVarint32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L4632c6.  v0:= temp;
  #L4632c8.  return v0;
}
procedure `long` `readInt64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readInt64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4637b4.  call temp:= `readRawVarint64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint64:()J` @kind virtual;
  #L4637ba.  v0:= temp @kind wide;
  #L4637bc.  return v0 @kind wide;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `readMessage`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v3 @kind this, `com.google.crypto.tink.shaded.protobuf.Parser` v4 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readMessage:(Lcom/google/crypto/tink/shaded/protobuf/Parser;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L463108.  call temp:= `readRawVarint32`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L46310e.  v0:= temp;
  #L463110.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L463114.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @type ^`int`;
  #L463118.  if v1 >= v2 then goto L463158;
  #L46311c.  call temp:= `pushLimit`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.pushLimit:(I)I` @kind virtual;
  #L463122.  v0:= temp;
  #L463124.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L463128.  v1:= v1 + 1;
  #L46312c.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v1;
  #L463130.  call temp:= `parsePartialFrom`(v4, v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/Parser;.parsePartialFrom:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @kind interface;
  #L463136.  v4:= temp @kind object;
  #L463138.  v4:= (`com.google.crypto.tink.shaded.protobuf.MessageLite`) v4 @kind object;
  #L46313c.  v5:= 0I;
  #L46313e.  call `checkLastTagWas`(v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.checkLastTagWas:(I)V` @kind virtual;
  #L463144.  v5:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L463148.  v5:= v5 + -1;
  #L46314c.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v5;
  #L463150.  call `popLimit`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.popLimit:(I)V` @kind virtual;
  #L463156.  return v4 @kind object;
  #L463158.  call temp:= `h`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.h:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L46315e.  v4:= temp @kind object;
  #L463160.  throw v4;
}
procedure `void` `readMessage`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v3 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite$Builder` v4 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readMessage:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L463c54.  call temp:= `readRawVarint32`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L463c5a.  v0:= temp;
  #L463c5c.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L463c60.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @type ^`int`;
  #L463c64.  if v1 >= v2 then goto L463c9e;
  #L463c68.  call temp:= `pushLimit`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.pushLimit:(I)I` @kind virtual;
  #L463c6e.  v0:= temp;
  #L463c70.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L463c74.  v1:= v1 + 1;
  #L463c78.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v1;
  #L463c7c.  call temp:= `mergeFrom`(v4, v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;.mergeFrom:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;` @kind interface;
  #L463c82.  v4:= 0I;
  #L463c84.  call `checkLastTagWas`(v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.checkLastTagWas:(I)V` @kind virtual;
  #L463c8a.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L463c8e.  v4:= v4 + -1;
  #L463c92.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v4;
  #L463c96.  call `popLimit`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.popLimit:(I)V` @kind virtual;
  #L463c9c.  return @kind void;
  #L463c9e.  call temp:= `h`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.h:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L463ca4.  v4:= temp @kind object;
  #L463ca6.  throw v4;
}
procedure `byte` `readRawByte`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v5 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawByte:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L462f34.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L462f38.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.h` @type ^`long` @kind wide;
  #L462f3c.  v4:= lcmp(v0, v2);
  #L462f40.  if v4 == 0 then goto L462f58;
  #L462f44.  v2:= 1L;
  #L462f48.  v2:= v2 + v0 @kind long;
  #L462f4a.  v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v2 @kind wide;
  #L462f4e.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L462f54.  v0:= temp;
  #L462f56.  return v0;
  #L462f58.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L462f5e.  v0:= temp @kind object;
  #L462f60.  throw v0;
}
procedure `byte`[] `readRawBytes`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v7 @kind this, `int` v8 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawBytes:(I)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L462f98.  if v8 < 0 then goto L462fd0;
  #L462f9c.  call temp:= `h`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.h:()I` @kind direct;
  #L462fa2.  v0:= temp;
  #L462fa4.  if v8 > v0 then goto L462fd0;
  #L462fa8.  v0:= new `byte`[v8];
  #L462fac.  v1:= v7.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L462fb0.  v3:= (`long`) v8 @kind i2l;
  #L462fb2.  v5:= v1 + v3 @kind long;
  #L462fb6.  call temp:= `l`(v7, v1, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.l:(JJ)Ljava/nio/ByteBuffer;` @kind direct;
  #L462fbc.  v8:= temp @kind object;
  #L462fbe.  call temp:= `get`(v8, v0) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L462fc4.  v1:= v7.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L462fc8.  v1:= v1 + v3 @kind long;
  #L462fca.  v7.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v1 @kind wide;
  #L462fce.  return v0 @kind object;
  #L462fd0.  if v8 > 0 then goto L462fe8;
  #L462fd4.  if v8 != 0 then goto L462fde;
  #L462fd8.  v8:= `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L462fdc.  return v8 @kind object;
  #L462fde.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L462fe4.  v8:= temp @kind object;
  #L462fe6.  throw v8;
  #L462fe8.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L462fee.  v8:= temp @kind object;
  #L462ff0.  throw v8;
}
procedure `int` `readRawLittleEndian32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v7 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian32:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4632dc.  v0:= v7.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L4632e0.  v2:= v7.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.h` @type ^`long` @kind wide;
  #L4632e4.  v2:= v2 - v0 @kind long;
  #L4632e6.  v4:= 4L;
  #L4632ea.  v6:= lcmp(v2, v4);
  #L4632ee.  if v6 < 0 then goto L46334e;
  #L4632f2.  v4:= v4 + v0 @kind long;
  #L4632f4.  v7.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v4 @kind wide;
  #L4632f8.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L4632fe.  v2:= temp;
  #L463300.  v2:= v2 ^& 255;
  #L463304.  v3:= 1L;
  #L463308.  v3:= v3 + v0 @kind long;
  #L46330a.  call temp:= `v`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L463310.  v3:= temp;
  #L463312.  v3:= v3 ^& 255;
  #L463316.  v3:= v3 ^< 8;
  #L46331a.  v2:= v2 ^| v3 @kind int;
  #L46331c.  v3:= 2L;
  #L463320.  v3:= v3 + v0 @kind long;
  #L463322.  call temp:= `v`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L463328.  v3:= temp;
  #L46332a.  v3:= v3 ^& 255;
  #L46332e.  v3:= v3 ^< 16;
  #L463332.  v2:= v2 ^| v3 @kind int;
  #L463334.  v3:= 3L;
  #L463338.  v0:= v0 + v3 @kind long;
  #L46333a.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L463340.  v0:= temp;
  #L463342.  v0:= v0 ^& 255;
  #L463346.  v0:= v0 ^< 24;
  #L46334a.  v0:= v0 ^| v2 @kind int;
  #L46334c.  return v0;
  #L46334e.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L463354.  v0:= temp @kind object;
  #L463356.  throw v0;
}
procedure `long` `readRawLittleEndian64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v9 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4637d0.  v0:= v9.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L4637d4.  v2:= v9.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.h` @type ^`long` @kind wide;
  #L4637d8.  v2:= v2 - v0 @kind long;
  #L4637da.  v4:= 8L;
  #L4637de.  v6:= lcmp(v2, v4);
  #L4637e2.  if v6 < 0 then goto L4638b4;
  #L4637e6.  v4:= v4 + v0 @kind long;
  #L4637e8.  v9.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v4 @kind wide;
  #L4637ec.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L4637f2.  v2:= temp;
  #L4637f4.  v2:= (`long`) v2 @kind i2l;
  #L4637f6.  v4:= 255L;
  #L4637fa.  v2:= v2 ^& v4 @kind long;
  #L4637fc.  v6:= 1L;
  #L463800.  v6:= v6 + v0 @kind long;
  #L463802.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L463808.  v6:= temp;
  #L46380a.  v6:= (`long`) v6 @kind i2l;
  #L46380c.  v6:= v6 ^& v4 @kind long;
  #L46380e.  v8:= 8I;
  #L463812.  v6:= v6 ^< v8 @kind long;
  #L463814.  v2:= v2 ^| v6 @kind long;
  #L463816.  v6:= 2L;
  #L46381a.  v6:= v6 + v0 @kind long;
  #L46381c.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L463822.  v6:= temp;
  #L463824.  v6:= (`long`) v6 @kind i2l;
  #L463826.  v6:= v6 ^& v4 @kind long;
  #L463828.  v8:= 16I;
  #L46382c.  v6:= v6 ^< v8 @kind long;
  #L46382e.  v2:= v2 ^| v6 @kind long;
  #L463830.  v6:= 3L;
  #L463834.  v6:= v6 + v0 @kind long;
  #L463836.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L46383c.  v6:= temp;
  #L46383e.  v6:= (`long`) v6 @kind i2l;
  #L463840.  v6:= v6 ^& v4 @kind long;
  #L463842.  v8:= 24I;
  #L463846.  v6:= v6 ^< v8 @kind long;
  #L463848.  v2:= v2 ^| v6 @kind long;
  #L46384a.  v6:= 4L;
  #L46384e.  v6:= v6 + v0 @kind long;
  #L463850.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L463856.  v6:= temp;
  #L463858.  v6:= (`long`) v6 @kind i2l;
  #L46385a.  v6:= v6 ^& v4 @kind long;
  #L46385c.  v8:= 32I;
  #L463860.  v6:= v6 ^< v8 @kind long;
  #L463862.  v2:= v2 ^| v6 @kind long;
  #L463864.  v6:= 5L;
  #L463868.  v6:= v6 + v0 @kind long;
  #L46386a.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L463870.  v6:= temp;
  #L463872.  v6:= (`long`) v6 @kind i2l;
  #L463874.  v6:= v6 ^& v4 @kind long;
  #L463876.  v8:= 40I;
  #L46387a.  v6:= v6 ^< v8 @kind long;
  #L46387c.  v2:= v2 ^| v6 @kind long;
  #L46387e.  v6:= 6L;
  #L463882.  v6:= v6 + v0 @kind long;
  #L463884.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L46388a.  v6:= temp;
  #L46388c.  v6:= (`long`) v6 @kind i2l;
  #L46388e.  v6:= v6 ^& v4 @kind long;
  #L463890.  v8:= 48I;
  #L463894.  v6:= v6 ^< v8 @kind long;
  #L463896.  v2:= v2 ^| v6 @kind long;
  #L463898.  v6:= 7L;
  #L46389c.  v0:= v0 + v6 @kind long;
  #L46389e.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L4638a4.  v0:= temp;
  #L4638a6.  v0:= (`long`) v0 @kind i2l;
  #L4638a8.  v0:= v0 ^& v4 @kind long;
  #L4638aa.  v4:= 56I;
  #L4638ae.  v0:= v0 ^< v4 @kind long;
  #L4638b0.  v0:= v0 ^| v2 @kind long;
  #L4638b2.  return v0 @kind wide;
  #L4638b4.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L4638ba.  v0:= temp @kind object;
  #L4638bc.  throw v0;
}
procedure `int` `readRawVarint32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v10 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L463368.  v0:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L46336c.  v2:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.h` @type ^`long` @kind wide;
  #L463370.  v4:= lcmp(v2, v0);
  #L463374.  if v4 != 0 then goto L46337c;
  #L463378.  goto L463472;
  #L46337c.  v2:= 1L;
  #L463380.  v4:= v0 + v2 @kind long;
  #L463384.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L46338a.  v0:= temp;
  #L46338c.  if v0 < 0 then goto L463396;
  #L463390.  v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v4 @kind wide;
  #L463394.  return v0;
  #L463396.  v6:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.h` @type ^`long` @kind wide;
  #L46339a.  v6:= v6 - v4 @kind long;
  #L46339c.  v8:= 9L;
  #L4633a0.  v1:= lcmp(v6, v8);
  #L4633a4.  if v1 >= 0 then goto L4633aa;
  #L4633a8.  goto L463472;
  #L4633aa.  v6:= v4 + v2 @kind long;
  #L4633ae.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L4633b4.  v1:= temp;
  #L4633b6.  v1:= v1 ^< 7;
  #L4633ba.  v0:= v0 ^~ v1 @kind int;
  #L4633bc.  if v0 >= 0 then goto L4633c6;
  #L4633c0.  v0:= v0 ^~ -128;
  #L4633c4.  goto L46347e;
  #L4633c6.  v4:= v6 + v2 @kind long;
  #L4633ca.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L4633d0.  v1:= temp;
  #L4633d2.  v1:= v1 ^< 14;
  #L4633d6.  v0:= v0 ^~ v1 @kind int;
  #L4633d8.  if v0 < 0 then goto L4633e4;
  #L4633dc.  v0:= v0 ^~ 16256;
  #L4633e0.  v6:= v4 @kind wide;
  #L4633e2.  goto L46347e;
  #L4633e4.  v6:= v4 + v2 @kind long;
  #L4633e8.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L4633ee.  v1:= temp;
  #L4633f0.  v1:= v1 ^< 21;
  #L4633f4.  v0:= v0 ^~ v1 @kind int;
  #L4633f6.  if v0 >= 0 then goto L463404;
  #L4633fa.  v1:= -2080896I;
  #L463400.  v0:= v0 ^~ v1 @kind int;
  #L463402.  goto L46347e;
  #L463404.  v4:= v6 + v2 @kind long;
  #L463408.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L46340e.  v1:= temp;
  #L463410.  v6:= v1 ^< 28;
  #L463414.  v0:= v0 ^~ v6 @kind int;
  #L463416.  v6:= 266354560I;
  #L46341c.  v0:= v0 ^~ v6 @kind int;
  #L46341e.  if v1 >= 0 then goto L4633e0;
  #L463422.  v6:= v4 + v2 @kind long;
  #L463426.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L46342c.  v1:= temp;
  #L46342e.  if v1 >= 0 then goto L46347e;
  #L463432.  v4:= v6 + v2 @kind long;
  #L463436.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L46343c.  v1:= temp;
  #L46343e.  if v1 >= 0 then goto L4633e0;
  #L463442.  v6:= v4 + v2 @kind long;
  #L463446.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L46344c.  v1:= temp;
  #L46344e.  if v1 >= 0 then goto L46347e;
  #L463452.  v4:= v6 + v2 @kind long;
  #L463456.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L46345c.  v1:= temp;
  #L46345e.  if v1 >= 0 then goto L4633e0;
  #L463462.  v6:= v4 + v2 @kind long;
  #L463466.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L46346c.  v1:= temp;
  #L46346e.  if v1 >= 0 then goto L46347e;
  #L463472.  call temp:= `f`(v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.f:()J` @kind virtual;
  #L463478.  v0:= temp @kind wide;
  #L46347a.  v1:= (`int`) v0 @kind l2i;
  #L46347c.  return v1;
  #L46347e.  v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v6 @kind wide;
  #L463482.  return v0;
}
procedure `long` `readRawVarint64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v11 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4638d0.  v0:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L4638d4.  v2:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.h` @type ^`long` @kind wide;
  #L4638d8.  v4:= lcmp(v2, v0);
  #L4638dc.  if v4 != 0 then goto L4638e4;
  #L4638e0.  goto L463a66;
  #L4638e4.  v2:= 1L;
  #L4638e8.  v4:= v0 + v2 @kind long;
  #L4638ec.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L4638f2.  v0:= temp;
  #L4638f4.  if v0 < 0 then goto L463900;
  #L4638f8.  v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v4 @kind wide;
  #L4638fc.  v0:= (`long`) v0 @kind i2l;
  #L4638fe.  return v0 @kind wide;
  #L463900.  v6:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.h` @type ^`long` @kind wide;
  #L463904.  v6:= v6 - v4 @kind long;
  #L463906.  v8:= 9L;
  #L46390a.  v1:= lcmp(v6, v8);
  #L46390e.  if v1 >= 0 then goto L463916;
  #L463912.  goto L463a66;
  #L463916.  v6:= v4 + v2 @kind long;
  #L46391a.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L463920.  v1:= temp;
  #L463922.  v1:= v1 ^< 7;
  #L463926.  v0:= v0 ^~ v1 @kind int;
  #L463928.  if v0 >= 0 then goto L463936;
  #L46392c.  v0:= v0 ^~ -128;
  #L463930.  v0:= (`long`) v0 @kind i2l;
  #L463932.  goto L463a72;
  #L463936.  v4:= v6 + v2 @kind long;
  #L46393a.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L463940.  v1:= temp;
  #L463942.  v1:= v1 ^< 14;
  #L463946.  v0:= v0 ^~ v1 @kind int;
  #L463948.  if v0 < 0 then goto L463958;
  #L46394c.  v0:= v0 ^~ 16256;
  #L463950.  v0:= (`long`) v0 @kind i2l;
  #L463952.  v6:= v4 @kind wide;
  #L463954.  goto L463a72;
  #L463958.  v6:= v4 + v2 @kind long;
  #L46395c.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L463962.  v1:= temp;
  #L463964.  v1:= v1 ^< 21;
  #L463968.  v0:= v0 ^~ v1 @kind int;
  #L46396a.  if v0 >= 0 then goto L463978;
  #L46396e.  v1:= -2080896I;
  #L463974.  v0:= v0 ^~ v1 @kind int;
  #L463976.  goto L463930;
  #L463978.  v0:= (`long`) v0 @kind i2l;
  #L46397a.  v4:= v6 + v2 @kind long;
  #L46397e.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L463984.  v6:= temp;
  #L463986.  v6:= (`long`) v6 @kind i2l;
  #L463988.  v8:= 28I;
  #L46398c.  v6:= v6 ^< v8 @kind long;
  #L46398e.  v0:= v0 ^~ v6 @kind long;
  #L463990.  v6:= 0L;
  #L463994.  v8:= lcmp(v0, v6);
  #L463998.  if v8 < 0 then goto L4639a6;
  #L46399c.  v2:= 266354560L;
  #L4639a2.  v0:= v0 ^~ v2 @kind long;
  #L4639a4.  goto L463952;
  #L4639a6.  v8:= v4 + v2 @kind long;
  #L4639aa.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L4639b0.  v4:= temp;
  #L4639b2.  v4:= (`long`) v4 @kind i2l;
  #L4639b4.  v10:= 35I;
  #L4639b8.  v4:= v4 ^< v10 @kind long;
  #L4639ba.  v0:= v0 ^~ v4 @kind long;
  #L4639bc.  v4:= lcmp(v0, v6);
  #L4639c0.  if v4 >= 0 then goto L4639d4;
  #L4639c4.  v2:= -34093383808L;
  #L4639ce.  v0:= v0 ^~ v2 @kind long;
  #L4639d0.  v6:= v8 @kind wide;
  #L4639d2.  goto L463a72;
  #L4639d4.  v4:= v8 + v2 @kind long;
  #L4639d8.  call temp:= `v`(v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L4639de.  v8:= temp;
  #L4639e0.  v8:= (`long`) v8 @kind i2l;
  #L4639e2.  v10:= 42I;
  #L4639e6.  v8:= v8 ^< v10 @kind long;
  #L4639e8.  v0:= v0 ^~ v8 @kind long;
  #L4639ea.  v8:= lcmp(v0, v6);
  #L4639ee.  if v8 < 0 then goto L4639fe;
  #L4639f2.  v2:= 4363953127296L;
  #L4639fc.  goto L4639a2;
  #L4639fe.  v8:= v4 + v2 @kind long;
  #L463a02.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L463a08.  v4:= temp;
  #L463a0a.  v4:= (`long`) v4 @kind i2l;
  #L463a0c.  v10:= 49I;
  #L463a10.  v4:= v4 ^< v10 @kind long;
  #L463a12.  v0:= v0 ^~ v4 @kind long;
  #L463a14.  v4:= lcmp(v0, v6);
  #L463a18.  if v4 >= 0 then goto L463a28;
  #L463a1c.  v2:= -558586000294016L;
  #L463a26.  goto L4639ce;
  #L463a28.  v4:= v8 + v2 @kind long;
  #L463a2c.  call temp:= `v`(v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L463a32.  v8:= temp;
  #L463a34.  v8:= (`long`) v8 @kind i2l;
  #L463a36.  v10:= 56I;
  #L463a3a.  v8:= v8 ^< v10 @kind long;
  #L463a3c.  v0:= v0 ^~ v8 @kind long;
  #L463a3e.  v8:= 71499008037633920L;
  #L463a48.  v0:= v0 ^~ v8 @kind long;
  #L463a4a.  v8:= lcmp(v0, v6);
  #L463a4e.  if v8 >= 0 then goto L463952;
  #L463a52.  v2:= v2 + v4 @kind long;
  #L463a54.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L463a5a.  v4:= temp;
  #L463a5c.  v4:= (`long`) v4 @kind i2l;
  #L463a5e.  v8:= lcmp(v4, v6);
  #L463a62.  if v8 >= 0 then goto L463a70;
  #L463a66.  call temp:= `f`(v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.f:()J` @kind virtual;
  #L463a6c.  v0:= temp @kind wide;
  #L463a6e.  return v0 @kind wide;
  #L463a70.  v6:= v2 @kind wide;
  #L463a72.  v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v6 @kind wide;
  #L463a76.  return v0 @kind wide;
}
procedure `int` `readSFixed32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readSFixed32:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L463494.  call temp:= `readRawLittleEndian32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian32:()I` @kind virtual;
  #L46349a.  v0:= temp;
  #L46349c.  return v0;
}
procedure `long` `readSFixed64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readSFixed64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L463ad4.  call temp:= `readRawLittleEndian64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian64:()J` @kind virtual;
  #L463ada.  v0:= temp @kind wide;
  #L463adc.  return v0 @kind wide;
}
procedure `int` `readSInt32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readSInt32:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4634b0.  call temp:= `readRawVarint32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L4634b6.  v0:= temp;
  #L4634b8.  call temp:= `decodeZigZag32`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.decodeZigZag32:(I)I` @kind static;
  #L4634be.  v0:= temp;
  #L4634c0.  return v0;
}
procedure `long` `readSInt64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readSInt64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L463af0.  call temp:= `readRawVarint64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint64:()J` @kind virtual;
  #L463af6.  v0:= temp @kind wide;
  #L463af8.  call temp:= `decodeZigZag64`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.decodeZigZag64:(J)J` @kind static;
  #L463afe.  v0:= temp @kind wide;
  #L463b00.  return v0 @kind wide;
}
procedure `java.lang.String` `readString`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v11 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L46355c.  call temp:= `readRawVarint32`(v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L463562.  v0:= temp;
  #L463564.  if v0 <= 0 then goto L4635a6;
  #L463568.  call temp:= `h`(v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.h:()I` @kind direct;
  #L46356e.  v1:= temp;
  #L463570.  if v0 > v1 then goto L4635a6;
  #L463574.  v1:= new `byte`[v0];
  #L463578.  v2:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L46357c.  v5:= 0L;
  #L463580.  v9:= (`long`) v0 @kind i2l;
  #L463582.  v4:= v1 @kind object;
  #L463584.  v7:= v9 @kind wide;
  #L463586.  call `n`(v2, v4, v5, v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.n:(J[BJJ)V` @kind static;
  #L46358c.  v0:= new `java.lang.String`;
  #L463590.  v2:= `@@com.google.crypto.tink.shaded.protobuf.Internal.a` @type ^`java.nio.charset.Charset` @kind object;
  #L463594.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L46359a.  v1:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L46359e.  v1:= v1 + v9 @kind long;
  #L4635a0.  v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v1 @kind wide;
  #L4635a4.  return v0 @kind object;
  #L4635a6.  if v0 != 0 then goto L4635b0;
  #L4635aa.  v0:= "" @kind object;
  #L4635ae.  return v0 @kind object;
  #L4635b0.  if v0 >= 0 then goto L4635be;
  #L4635b4.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L4635ba.  v0:= temp @kind object;
  #L4635bc.  throw v0;
  #L4635be.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L4635c4.  v0:= temp @kind object;
  #L4635c6.  throw v0;
}
procedure `java.lang.String` `readStringRequireUtf8`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v6 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readStringRequireUtf8:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4635d8.  call temp:= `readRawVarint32`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L4635de.  v0:= temp;
  #L4635e0.  if v0 <= 0 then goto L463616;
  #L4635e4.  call temp:= `h`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.h:()I` @kind direct;
  #L4635ea.  v1:= temp;
  #L4635ec.  if v0 > v1 then goto L463616;
  #L4635f0.  v1:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L4635f4.  call temp:= `d`(v6, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.d:(J)I` @kind direct;
  #L4635fa.  v1:= temp;
  #L4635fc.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.e` @type ^`java.nio.ByteBuffer` @kind object;
  #L463600.  call temp:= `g`(v2, v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.g:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;` @kind static;
  #L463606.  v1:= temp @kind object;
  #L463608.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L46360c.  v4:= (`long`) v0 @kind i2l;
  #L46360e.  v2:= v2 + v4 @kind long;
  #L463610.  v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v2 @kind wide;
  #L463614.  return v1 @kind object;
  #L463616.  if v0 != 0 then goto L463620;
  #L46361a.  v0:= "" @kind object;
  #L46361e.  return v0 @kind object;
  #L463620.  if v0 > 0 then goto L46362e;
  #L463624.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L46362a.  v0:= temp @kind object;
  #L46362c.  throw v0;
  #L46362e.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L463634.  v0:= temp @kind object;
  #L463636.  throw v0;
}
procedure `int` `readTag`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readTag:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4634d4.  call temp:= `isAtEnd`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.isAtEnd:()Z` @kind virtual;
  #L4634da.  v0:= temp;
  #L4634dc.  if v0 == 0 then goto L4634e8;
  #L4634e0.  v0:= 0I;
  #L4634e2.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.l` @type ^`int` := v0;
  #L4634e6.  return v0;
  #L4634e8.  call temp:= `readRawVarint32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L4634ee.  v0:= temp;
  #L4634f0.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.l` @type ^`int` := v0;
  #L4634f4.  call temp:= `getTagFieldNumber`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagFieldNumber:(I)I` @kind static;
  #L4634fa.  v0:= temp;
  #L4634fc.  if v0 == 0 then goto L463506;
  #L463500.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.l` @type ^`int`;
  #L463504.  return v0;
  #L463506.  call temp:= `b`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.b:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L46350c.  v0:= temp @kind object;
  #L46350e.  throw v0;
}
procedure `int` `readUInt32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readUInt32:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L463520.  call temp:= `readRawVarint32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L463526.  v0:= temp;
  #L463528.  return v0;
}
procedure `long` `readUInt64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readUInt64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L463b14.  call temp:= `readRawVarint64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint64:()J` @kind virtual;
  #L463b1a.  v0:= temp @kind wide;
  #L463b1c.  return v0 @kind wide;
}
procedure `void` `readUnknownGroup`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this, `int` v2 , `com.google.crypto.tink.shaded.protobuf.MessageLite$Builder` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readUnknownGroup:(ILcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L463cb8.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L463cbe.  v0:= temp @kind object;
  #L463cc0.  call `readGroup`(v1, v2, v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readGroup:(ILcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)V` @kind virtual;
  #L463cc6.  return @kind void;
}
procedure `void` `resetSizeCounter`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.resetSizeCounter:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L463d24.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L463d28.  v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.j` @type ^`long` := v0 @kind wide;
  #L463d2c.  return @kind void;
}
procedure `boolean` `skipField`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipField:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L462dd4.  call temp:= `getTagWireType`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L462dda.  v0:= temp;
  #L462ddc.  v1:= 1I;
  #L462dde.  if v0 == 0 then goto L462e4e;
  #L462de2.  if v0 == v1 then goto L462e42;
  #L462de6.  v2:= 2I;
  #L462de8.  if v0 == v2 then goto L462e32;
  #L462dec.  v2:= 3I;
  #L462dee.  v3:= 4I;
  #L462df0.  if v0 == v2 then goto L462e14;
  #L462df4.  if v0 == v3 then goto L462e10;
  #L462df8.  v5:= 5I;
  #L462dfa.  if v0 != v5 then goto L462e06;
  #L462dfe.  call `skipRawBytes`(v4, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipRawBytes:(I)V` @kind virtual;
  #L462e04.  return v1;
  #L462e06.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L462e0c.  v5:= temp @kind object;
  #L462e0e.  throw v5;
  #L462e10.  v5:= 0I;
  #L462e12.  return v5;
  #L462e14.  call `skipMessage`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipMessage:()V` @kind virtual;
  #L462e1a.  call temp:= `getTagFieldNumber`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagFieldNumber:(I)I` @kind static;
  #L462e20.  v5:= temp;
  #L462e22.  call temp:= `a`(v5, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L462e28.  v5:= temp;
  #L462e2a.  call `checkLastTagWas`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.checkLastTagWas:(I)V` @kind virtual;
  #L462e30.  return v1;
  #L462e32.  call temp:= `readRawVarint32`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawVarint32:()I` @kind virtual;
  #L462e38.  v5:= temp;
  #L462e3a.  call `skipRawBytes`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipRawBytes:(I)V` @kind virtual;
  #L462e40.  return v1;
  #L462e42.  v5:= 8I;
  #L462e46.  call `skipRawBytes`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipRawBytes:(I)V` @kind virtual;
  #L462e4c.  return v1;
  #L462e4e.  call `i`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.i:()V` @kind direct;
  #L462e54.  return v1;
}
procedure `boolean` `skipField`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v4 @kind this, `int` v5 , `com.google.crypto.tink.shaded.protobuf.CodedOutputStream` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipField:(ILcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L462e68.  call temp:= `getTagWireType`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L462e6e.  v0:= temp;
  #L462e70.  v1:= 1I;
  #L462e72.  if v0 == 0 then goto L462f0c;
  #L462e76.  if v0 == v1 then goto L462ef6;
  #L462e7a.  v2:= 2I;
  #L462e7c.  if v0 == v2 then goto L462ee0;
  #L462e80.  v2:= 3I;
  #L462e82.  v3:= 4I;
  #L462e84.  if v0 == v2 then goto L462eb6;
  #L462e88.  if v0 == v3 then goto L462eb2;
  #L462e8c.  v2:= 5I;
  #L462e8e.  if v0 != v2 then goto L462ea8;
  #L462e92.  call temp:= `readRawLittleEndian32`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian32:()I` @kind virtual;
  #L462e98.  v0:= temp;
  #L462e9a.  call `writeRawVarint32`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeRawVarint32:(I)V` @kind virtual;
  #L462ea0.  call `writeFixed32NoTag`(v6, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeFixed32NoTag:(I)V` @kind virtual;
  #L462ea6.  return v1;
  #L462ea8.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L462eae.  v5:= temp @kind object;
  #L462eb0.  throw v5;
  #L462eb2.  v5:= 0I;
  #L462eb4.  return v5;
  #L462eb6.  call `writeRawVarint32`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeRawVarint32:(I)V` @kind virtual;
  #L462ebc.  call `skipMessage`(v4, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipMessage:(Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;)V` @kind virtual;
  #L462ec2.  call temp:= `getTagFieldNumber`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagFieldNumber:(I)I` @kind static;
  #L462ec8.  v5:= temp;
  #L462eca.  call temp:= `a`(v5, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L462ed0.  v5:= temp;
  #L462ed2.  call `checkLastTagWas`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.checkLastTagWas:(I)V` @kind virtual;
  #L462ed8.  call `writeRawVarint32`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeRawVarint32:(I)V` @kind virtual;
  #L462ede.  return v1;
  #L462ee0.  call temp:= `readBytes`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readBytes:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L462ee6.  v0:= temp @kind object;
  #L462ee8.  call `writeRawVarint32`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeRawVarint32:(I)V` @kind virtual;
  #L462eee.  call `writeBytesNoTag`(v6, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeBytesNoTag:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)V` @kind virtual;
  #L462ef4.  return v1;
  #L462ef6.  call temp:= `readRawLittleEndian64`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readRawLittleEndian64:()J` @kind virtual;
  #L462efc.  v2:= temp @kind wide;
  #L462efe.  call `writeRawVarint32`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeRawVarint32:(I)V` @kind virtual;
  #L462f04.  call `writeFixed64NoTag`(v6, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeFixed64NoTag:(J)V` @kind virtual;
  #L462f0a.  return v1;
  #L462f0c.  call temp:= `readInt64`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readInt64:()J` @kind virtual;
  #L462f12.  v2:= temp @kind wide;
  #L462f14.  call `writeRawVarint32`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeRawVarint32:(I)V` @kind virtual;
  #L462f1a.  call `writeUInt64NoTag`(v6, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeUInt64NoTag:(J)V` @kind virtual;
  #L462f20.  return v1;
}
procedure `void` `skipMessage`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipMessage:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L463d40.  call temp:= `readTag`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readTag:()I` @kind virtual;
  #L463d46.  v0:= temp;
  #L463d48.  if v0 == 0 then goto L463d58;
  #L463d4c.  call temp:= `skipField`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipField:(I)Z` @kind virtual;
  #L463d52.  v0:= temp;
  #L463d54.  if v0 != 0 then goto L463d40;
  #L463d58.  return @kind void;
}
procedure `void` `skipMessage`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.CodedOutputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipMessage:(Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L463d6c.  call temp:= `readTag`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.readTag:()I` @kind virtual;
  #L463d72.  v0:= temp;
  #L463d74.  if v0 == 0 then goto L463d84;
  #L463d78.  call temp:= `skipField`(v1, v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipField:(ILcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;)Z` @kind virtual;
  #L463d7e.  v0:= temp;
  #L463d80.  if v0 != 0 then goto L463d6c;
  #L463d84.  return @kind void;
}
procedure `void` `skipRawBytes`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.skipRawBytes:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L463d98.  if v5 < 0 then goto L463db6;
  #L463d9c.  call temp:= `h`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.h:()I` @kind direct;
  #L463da2.  v0:= temp;
  #L463da4.  if v5 > v0 then goto L463db6;
  #L463da8.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` @kind wide;
  #L463dac.  v2:= (`long`) v5 @kind i2l;
  #L463dae.  v0:= v0 + v2 @kind long;
  #L463db0.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$e.i` @type ^`long` := v0 @kind wide;
  #L463db4.  return @kind void;
  #L463db6.  if v5 >= 0 then goto L463dc4;
  #L463dba.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L463dc0.  v5:= temp @kind object;
  #L463dc2.  throw v5;
  #L463dc4.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L463dca.  v5:= temp @kind object;
  #L463dcc.  throw v5;
}
