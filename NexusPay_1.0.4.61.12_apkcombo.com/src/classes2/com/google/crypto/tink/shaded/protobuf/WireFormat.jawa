record `com.google.crypto.tink.shaded.protobuf.WireFormat` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.WIRETYPE_END_GROUP` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.WIRETYPE_FIXED32` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.WIRETYPE_FIXED64` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.WIRETYPE_LENGTH_DELIMITED` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.WIRETYPE_START_GROUP` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.WIRETYPE_VARINT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.a` @AccessFlag STATIC_FINAL;
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.b` @AccessFlag STATIC_FINAL;
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.c` @AccessFlag STATIC_FINAL;
global `int` `@@com.google.crypto.tink.shaded.protobuf.WireFormat.d` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L48acd0.  v0:= 1I;
  #L48acd2.  v1:= 3I;
  #L48acd4.  call temp:= `a`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L48acda.  v2:= temp;
  #L48acdc.  `@@com.google.crypto.tink.shaded.protobuf.WireFormat.a` @type ^`int` := v2;
  #L48ace0.  v2:= 4I;
  #L48ace2.  call temp:= `a`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L48ace8.  v0:= temp;
  #L48acea.  `@@com.google.crypto.tink.shaded.protobuf.WireFormat.b` @type ^`int` := v0;
  #L48acee.  v0:= 2I;
  #L48acf0.  v2:= 0I;
  #L48acf2.  call temp:= `a`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L48acf8.  v2:= temp;
  #L48acfa.  `@@com.google.crypto.tink.shaded.protobuf.WireFormat.c` @type ^`int` := v2;
  #L48acfe.  call temp:= `a`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L48ad04.  v0:= temp;
  #L48ad06.  `@@com.google.crypto.tink.shaded.protobuf.WireFormat.d` @type ^`int` := v0;
  #L48ad0a.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.WireFormat` v0 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L48ad1c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L48ad22.  return @kind void;
}
procedure `int` `a`(`int` v0 , `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @AccessFlag STATIC {
    temp;

  #L48ab04.  v0:= v0 ^< 3;
  #L48ab08.  v0:= v0 ^| v1 @kind int;
  #L48ab0a.  return v0;
}
procedure `java.lang.Object` `b`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType` v2 @kind object, `com.google.crypto.tink.shaded.protobuf.WireFormat$b` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.b:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;Lcom/google/crypto/tink/shaded/protobuf/WireFormat$FieldType;Lcom/google/crypto/tink/shaded/protobuf/WireFormat$b;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;

  #L48ab1c.  v0:= `@@com.google.crypto.tink.shaded.protobuf.WireFormat$a.a` @type ^`int`[] @kind object;
  #L48ab20.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L48ab26.  v2:= temp;
  #L48ab28.  v2:= v0[v2];
  #L48ab2c.  goto L48ac70;
  #L48ab32.  v1:= new `java.lang.RuntimeException`;
  #L48ab36.  v2:= "There is no way to get here, but the compiler thinks otherwise." @kind object;
  #L48ab3a.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48ab40.  throw v1;
  #L48ab42.  v1:= new `java.lang.IllegalArgumentException`;
  #L48ab46.  v2:= "readPrimitiveField() cannot handle enums." @kind object;
  #L48ab4a.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48ab50.  throw v1;
  #L48ab52.  v1:= new `java.lang.IllegalArgumentException`;
  #L48ab56.  v2:= "readPrimitiveField() cannot handle embedded messages." @kind object;
  #L48ab5a.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48ab60.  throw v1;
  #L48ab62.  v1:= new `java.lang.IllegalArgumentException`;
  #L48ab66.  v2:= "readPrimitiveField() cannot handle nested groups." @kind object;
  #L48ab6a.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L48ab70.  throw v1;
  #L48ab72.  call temp:= `readString`(v3, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat$b;.readString:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;)Ljava/lang/Object;` @kind virtual;
  #L48ab78.  v1:= temp @kind object;
  #L48ab7a.  return v1 @kind object;
  #L48ab7c.  call temp:= `readSInt64`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readSInt64:()J` @kind virtual;
  #L48ab82.  v1:= temp @kind wide;
  #L48ab84.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L48ab8a.  v1:= temp @kind object;
  #L48ab8c.  return v1 @kind object;
  #L48ab8e.  call temp:= `readSInt32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readSInt32:()I` @kind virtual;
  #L48ab94.  v1:= temp;
  #L48ab96.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L48ab9c.  v1:= temp @kind object;
  #L48ab9e.  return v1 @kind object;
  #L48aba0.  call temp:= `readSFixed64`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readSFixed64:()J` @kind virtual;
  #L48aba6.  v1:= temp @kind wide;
  #L48aba8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L48abae.  v1:= temp @kind object;
  #L48abb0.  return v1 @kind object;
  #L48abb2.  call temp:= `readSFixed32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readSFixed32:()I` @kind virtual;
  #L48abb8.  v1:= temp;
  #L48abba.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L48abc0.  v1:= temp @kind object;
  #L48abc2.  return v1 @kind object;
  #L48abc4.  call temp:= `readUInt32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readUInt32:()I` @kind virtual;
  #L48abca.  v1:= temp;
  #L48abcc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L48abd2.  v1:= temp @kind object;
  #L48abd4.  return v1 @kind object;
  #L48abd6.  call temp:= `readBytes`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readBytes:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L48abdc.  v1:= temp @kind object;
  #L48abde.  return v1 @kind object;
  #L48abe0.  call temp:= `readBool`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readBool:()Z` @kind virtual;
  #L48abe6.  v1:= temp;
  #L48abe8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L48abee.  v1:= temp @kind object;
  #L48abf0.  return v1 @kind object;
  #L48abf2.  call temp:= `readFixed32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readFixed32:()I` @kind virtual;
  #L48abf8.  v1:= temp;
  #L48abfa.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L48ac00.  v1:= temp @kind object;
  #L48ac02.  return v1 @kind object;
  #L48ac04.  call temp:= `readFixed64`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readFixed64:()J` @kind virtual;
  #L48ac0a.  v1:= temp @kind wide;
  #L48ac0c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L48ac12.  v1:= temp @kind object;
  #L48ac14.  return v1 @kind object;
  #L48ac16.  call temp:= `readInt32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readInt32:()I` @kind virtual;
  #L48ac1c.  v1:= temp;
  #L48ac1e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L48ac24.  v1:= temp @kind object;
  #L48ac26.  return v1 @kind object;
  #L48ac28.  call temp:= `readUInt64`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readUInt64:()J` @kind virtual;
  #L48ac2e.  v1:= temp @kind wide;
  #L48ac30.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L48ac36.  v1:= temp @kind object;
  #L48ac38.  return v1 @kind object;
  #L48ac3a.  call temp:= `readInt64`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readInt64:()J` @kind virtual;
  #L48ac40.  v1:= temp @kind wide;
  #L48ac42.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L48ac48.  v1:= temp @kind object;
  #L48ac4a.  return v1 @kind object;
  #L48ac4c.  call temp:= `readFloat`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readFloat:()F` @kind virtual;
  #L48ac52.  v1:= temp;
  #L48ac54.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L48ac5a.  v1:= temp @kind object;
  #L48ac5c.  return v1 @kind object;
  #L48ac5e.  call temp:= `readDouble`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readDouble:()D` @kind virtual;
  #L48ac64.  v1:= temp @kind wide;
  #L48ac66.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L48ac6c.  v1:= temp @kind object;
  #L48ac6e.  return v1 @kind object;
  #L48ac70.  switch v2
                  | 1 => goto L48ac5e
                  | 2 => goto L48ac4c
                  | 3 => goto L48ac3a
                  | 4 => goto L48ac28
                  | 5 => goto L48ac16
                  | 6 => goto L48ac04
                  | 7 => goto L48abf2
                  | 8 => goto L48abe0
                  | 9 => goto L48abd6
                  | 10 => goto L48abc4
                  | 11 => goto L48abb2
                  | 12 => goto L48aba0
                  | 13 => goto L48ab8e
                  | 14 => goto L48ab7c
                  | 15 => goto L48ab72
                  | 16 => goto L48ab62
                  | 17 => goto L48ab52
                  | 18 => goto L48ab42
                  | else => goto L48ab32;
}
procedure `int` `getTagFieldNumber`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagFieldNumber:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L48aad4.  v0:= v0 ^>> 3;
  #L48aad8.  return v0;
}
procedure `int` `getTagWireType`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L48aaec.  v0:= v0 ^& 7;
  #L48aaf0.  return v0;
}
