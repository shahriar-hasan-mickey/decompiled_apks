record `com.google.crypto.tink.shaded.protobuf.ByteString$a` @kind class @AccessFlag  extends `com.google.crypto.tink.shaded.protobuf.ByteString$c` @kind class {
  `int` `com.google.crypto.tink.shaded.protobuf.ByteString$a.a` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.ByteString$a.b` @AccessFlag PRIVATE_FINAL;
  `com.google.crypto.tink.shaded.protobuf.ByteString` `com.google.crypto.tink.shaded.protobuf.ByteString$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.ByteString$a` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$a;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L45dfcc.  v0.`com.google.crypto.tink.shaded.protobuf.ByteString$a.c` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` := v1 @kind object;
  #L45dfd0.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$c;.<init>:()V` @kind direct;
  #L45dfd6.  v1:= 0I;
  #L45dfd8.  v0.`com.google.crypto.tink.shaded.protobuf.ByteString$a.a` @type ^`int` := v1;
  #L45dfdc.  v1:= v0.`com.google.crypto.tink.shaded.protobuf.ByteString$a.c` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L45dfe0.  call temp:= `size`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L45dfe6.  v1:= temp;
  #L45dfe8.  v0.`com.google.crypto.tink.shaded.protobuf.ByteString$a.b` @type ^`int` := v1;
  #L45dfec.  return @kind void;
}
procedure `boolean` `hasNext`(`com.google.crypto.tink.shaded.protobuf.ByteString$a` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45df68.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.ByteString$a.a` @type ^`int`;
  #L45df6c.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.ByteString$a.b` @type ^`int`;
  #L45df70.  if v0 >= v1 then goto L45df78;
  #L45df74.  v0:= 1I;
  #L45df76.  goto L45df7a;
  #L45df78.  v0:= 0I;
  #L45df7a.  return v0;
}
procedure `byte` `nextByte`(`com.google.crypto.tink.shaded.protobuf.ByteString$a` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$a;.nextByte:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L45df8c.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.ByteString$a.a` @type ^`int`;
  #L45df90.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.ByteString$a.b` @type ^`int`;
  #L45df94.  if v0 >= v1 then goto L45dfae;
  #L45df98.  v1:= v0 + 1;
  #L45df9c.  v2.`com.google.crypto.tink.shaded.protobuf.ByteString$a.a` @type ^`int` := v1;
  #L45dfa0.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.ByteString$a.c` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L45dfa4.  call temp:= `e`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.e:(I)B` @kind virtual;
  #L45dfaa.  v0:= temp;
  #L45dfac.  return v0;
  #L45dfae.  v0:= new `java.util.NoSuchElementException`;
  #L45dfb2.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L45dfb8.  throw v0;
}
