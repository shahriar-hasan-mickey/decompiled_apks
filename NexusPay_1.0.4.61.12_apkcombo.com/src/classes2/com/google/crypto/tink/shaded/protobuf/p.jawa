record `com.google.crypto.tink.shaded.protobuf.p` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `java.util.Iterator` `com.google.crypto.tink.shaded.protobuf.p.a` @AccessFlag PRIVATE;
  `java.nio.ByteBuffer` `com.google.crypto.tink.shaded.protobuf.p.b` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.p.c` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.p.d` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.p.e` @AccessFlag PRIVATE;
  `boolean` `com.google.crypto.tink.shaded.protobuf.p.f` @AccessFlag PRIVATE;
  `byte`[] `com.google.crypto.tink.shaded.protobuf.p.g` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.p.h` @AccessFlag PRIVATE;
  `long` `com.google.crypto.tink.shaded.protobuf.p.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.p` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.<init>:(Ljava/lang/Iterable;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L473d5c.  call `<init>`(v2) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L473d62.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L473d68.  v0:= temp @kind object;
  #L473d6a.  v2.`com.google.crypto.tink.shaded.protobuf.p.a` @type ^`java.util.Iterator` := v0 @kind object;
  #L473d6e.  v0:= 0I;
  #L473d70.  v2.`com.google.crypto.tink.shaded.protobuf.p.c` @type ^`int` := v0;
  #L473d74.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L473d7a.  v3:= temp @kind object;
  #L473d7c.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L473d82.  v1:= temp;
  #L473d84.  if v1 == 0 then goto L473da2;
  #L473d88.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L473d8e.  v1:= temp @kind object;
  #L473d90.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L473d94.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.p.c` @type ^`int`;
  #L473d98.  v1:= v1 + 1;
  #L473d9c.  v2.`com.google.crypto.tink.shaded.protobuf.p.c` @type ^`int` := v1;
  #L473da0.  goto L473d7c;
  #L473da2.  v3:= -1I;
  #L473da4.  v2.`com.google.crypto.tink.shaded.protobuf.p.d` @type ^`int` := v3;
  #L473da8.  call temp:= `a`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.a:()Z` @kind direct;
  #L473dae.  v3:= temp;
  #L473db0.  if v3 != 0 then goto L473dcc;
  #L473db4.  v3:= `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_BUFFER` @type ^`java.nio.ByteBuffer` @kind object;
  #L473db8.  v2.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` := v3 @kind object;
  #L473dbc.  v2.`com.google.crypto.tink.shaded.protobuf.p.d` @type ^`int` := v0;
  #L473dc0.  v2.`com.google.crypto.tink.shaded.protobuf.p.e` @type ^`int` := v0;
  #L473dc4.  v0:= 0L;
  #L473dc8.  v2.`com.google.crypto.tink.shaded.protobuf.p.i` @type ^`long` := v0 @kind wide;
  #L473dcc.  return @kind void;
}
procedure `boolean` `a`(`com.google.crypto.tink.shaded.protobuf.p` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.a:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L473bbc.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.p.d` @type ^`int`;
  #L473bc0.  v1:= 1I;
  #L473bc2.  v0:= v0 + v1 @kind int;
  #L473bc4.  v4.`com.google.crypto.tink.shaded.protobuf.p.d` @type ^`int` := v0;
  #L473bc8.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.p.a` @type ^`java.util.Iterator` @kind object;
  #L473bcc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L473bd2.  v0:= temp;
  #L473bd4.  v2:= 0I;
  #L473bd6.  if v0 != 0 then goto L473bdc;
  #L473bda.  return v2;
  #L473bdc.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.p.a` @type ^`java.util.Iterator` @kind object;
  #L473be0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L473be6.  v0:= temp @kind object;
  #L473be8.  v0:= (`java.nio.ByteBuffer`) v0 @kind object;
  #L473bec.  v4.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` := v0 @kind object;
  #L473bf0.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L473bf6.  v0:= temp;
  #L473bf8.  v4.`com.google.crypto.tink.shaded.protobuf.p.e` @type ^`int` := v0;
  #L473bfc.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L473c00.  call temp:= `hasArray`(v0) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L473c06.  v0:= temp;
  #L473c08.  if v0 == 0 then goto L473c32;
  #L473c0c.  v4.`com.google.crypto.tink.shaded.protobuf.p.f` @type ^`boolean` := v1 @kind boolean;
  #L473c10.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L473c14.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L473c1a.  v0:= temp @kind object;
  #L473c1c.  v4.`com.google.crypto.tink.shaded.protobuf.p.g` @type ^`byte`[] := v0 @kind object;
  #L473c20.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L473c24.  call temp:= `arrayOffset`(v0) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L473c2a.  v0:= temp;
  #L473c2c.  v4.`com.google.crypto.tink.shaded.protobuf.p.h` @type ^`int` := v0;
  #L473c30.  goto L473c4c;
  #L473c32.  v4.`com.google.crypto.tink.shaded.protobuf.p.f` @type ^`boolean` := v2 @kind boolean;
  #L473c36.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L473c3a.  call temp:= `i`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.i:(Ljava/nio/ByteBuffer;)J` @kind static;
  #L473c40.  v2:= temp @kind wide;
  #L473c42.  v4.`com.google.crypto.tink.shaded.protobuf.p.i` @type ^`long` := v2 @kind wide;
  #L473c46.  v0:= 0I;
  #L473c48.  v4.`com.google.crypto.tink.shaded.protobuf.p.g` @type ^`byte`[] := v0 @kind object;
  #L473c4c.  return v1;
}
procedure `void` `b`(`com.google.crypto.tink.shaded.protobuf.p` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.b:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L473de0.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.p.e` @type ^`int`;
  #L473de4.  v0:= v0 + v2 @kind int;
  #L473de6.  v1.`com.google.crypto.tink.shaded.protobuf.p.e` @type ^`int` := v0;
  #L473dea.  v2:= v1.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L473dee.  call temp:= `limit`(v2) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L473df4.  v2:= temp;
  #L473df6.  if v0 != v2 then goto L473e00;
  #L473dfa.  call temp:= `a`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.a:()Z` @kind direct;
  #L473e00.  return @kind void;
}
procedure `int` `read`(`com.google.crypto.tink.shaded.protobuf.p` v6 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L473c60.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.p.d` @type ^`int`;
  #L473c64.  v1:= v6.`com.google.crypto.tink.shaded.protobuf.p.c` @type ^`int`;
  #L473c68.  if v0 != v1 then goto L473c70;
  #L473c6c.  v0:= -1I;
  #L473c6e.  return v0;
  #L473c70.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.p.f` @type ^`boolean` @kind boolean;
  #L473c74.  v1:= 1I;
  #L473c76.  if v0 == 0 then goto L473c98;
  #L473c7a.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.p.g` @type ^`byte`[] @kind object;
  #L473c7e.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.p.e` @type ^`int`;
  #L473c82.  v3:= v6.`com.google.crypto.tink.shaded.protobuf.p.h` @type ^`int`;
  #L473c86.  v2:= v2 + v3 @kind int;
  #L473c88.  v0:= v0[v2] @kind byte;
  #L473c8c.  v0:= v0 ^& 255;
  #L473c90.  call `b`(v6, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.b:(I)V` @kind direct;
  #L473c96.  return v0;
  #L473c98.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.p.e` @type ^`int`;
  #L473c9c.  v2:= (`long`) v0 @kind i2l;
  #L473c9e.  v4:= v6.`com.google.crypto.tink.shaded.protobuf.p.i` @type ^`long` @kind wide;
  #L473ca2.  v2:= v2 + v4 @kind long;
  #L473ca4.  call temp:= `v`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L473caa.  v0:= temp;
  #L473cac.  v0:= v0 ^& 255;
  #L473cb0.  call `b`(v6, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.b:(I)V` @kind direct;
  #L473cb6.  return v0;
}
procedure `int` `read`(`com.google.crypto.tink.shaded.protobuf.p` v3 @kind this, `byte`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L473cc8.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.p.d` @type ^`int`;
  #L473ccc.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.p.c` @type ^`int`;
  #L473cd0.  if v0 != v1 then goto L473cd8;
  #L473cd4.  v4:= -1I;
  #L473cd6.  return v4;
  #L473cd8.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L473cdc.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L473ce2.  v0:= temp;
  #L473ce4.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.p.e` @type ^`int`;
  #L473ce8.  v0:= v0 - v1 @kind int;
  #L473cea.  if v6 <= v0 then goto L473cf0;
  #L473cee.  v6:= v0;
  #L473cf0.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.p.f` @type ^`boolean` @kind boolean;
  #L473cf4.  if v0 == 0 then goto L473d14;
  #L473cf8.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.p.g` @type ^`byte`[] @kind object;
  #L473cfc.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.p.e` @type ^`int`;
  #L473d00.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.p.h` @type ^`int`;
  #L473d04.  v1:= v1 + v2 @kind int;
  #L473d06.  call `arraycopy`(v0, v1, v4, v5, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L473d0c.  call `b`(v3, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.b:(I)V` @kind direct;
  #L473d12.  goto L473d48;
  #L473d14.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L473d18.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L473d1e.  v0:= temp;
  #L473d20.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L473d24.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.p.e` @type ^`int`;
  #L473d28.  call temp:= `position`(v1, v2) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L473d2e.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L473d32.  call temp:= `get`(v1, v4, v5, v6) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L473d38.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.p.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L473d3c.  call temp:= `position`(v4, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L473d42.  call `b`(v3, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.b:(I)V` @kind direct;
  #L473d48.  return v6;
}
