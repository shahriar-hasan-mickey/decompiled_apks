record `com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.CodedInputStream` @kind class {
  `java.lang.Iterable` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.e` @AccessFlag PRIVATE;
  `java.util.Iterator` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.f` @AccessFlag PRIVATE;
  `java.nio.ByteBuffer` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.g` @AccessFlag PRIVATE;
  `boolean` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.h` @AccessFlag PRIVATE;
  `boolean` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.i` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.j` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.k` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.l` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.m` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.n` @AccessFlag PRIVATE;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.o` @AccessFlag PRIVATE;
  `long` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @AccessFlag PRIVATE;
  `long` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.q` @AccessFlag PRIVATE;
  `long` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.r` @AccessFlag PRIVATE;
  `long` `com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.s` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v1 @kind this, `java.lang.Iterable` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.<init>:(Ljava/lang/Iterable;IZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L461424.  v0:= 0I;
  #L461426.  call `<init>`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$a;)V` @kind direct;
  #L46142c.  v0:= 2147483647I;
  #L461432.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.l` @type ^`int` := v0;
  #L461436.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.j` @type ^`int` := v3;
  #L46143a.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.e` @type ^`java.lang.Iterable` := v2 @kind object;
  #L46143e.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L461444.  v2:= temp @kind object;
  #L461446.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.f` @type ^`java.util.Iterator` := v2 @kind object;
  #L46144a.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.h` @type ^`boolean` := v4 @kind boolean;
  #L46144e.  v2:= 0I;
  #L461450.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.n` @type ^`int` := v2;
  #L461454.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.o` @type ^`int` := v2;
  #L461458.  if v3 != 0 then goto L46147a;
  #L46145c.  v2:= `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_BUFFER` @type ^`java.nio.ByteBuffer` @kind object;
  #L461460.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.g` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L461464.  v2:= 0L;
  #L461468.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v2 @kind wide;
  #L46146c.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.q` @type ^`long` := v2 @kind wide;
  #L461470.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.s` @type ^`long` := v2 @kind wide;
  #L461474.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.r` @type ^`long` := v2 @kind wide;
  #L461478.  goto L461480;
  #L46147a.  call `l`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.l:()V` @kind direct;
  #L461480.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v0 @kind this, `java.lang.Iterable` v1 @kind object, `int` v2 , `boolean` v3 , `com.google.crypto.tink.shaded.protobuf.CodedInputStream$a` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.<init>:(Ljava/lang/Iterable;IZLcom/google/crypto/tink/shaded/protobuf/CodedInputStream$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L461494.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.<init>:(Ljava/lang/Iterable;IZ)V` @kind direct;
  #L46149a.  return @kind void;
}
procedure `long` `d`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.d:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L460fd4.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.s` @type ^`long` @kind wide;
  #L460fd8.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L460fdc.  v0:= v0 - v2 @kind long;
  #L460fde.  return v0 @kind wide;
}
procedure `void` `e`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4614e8.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.f` @type ^`java.util.Iterator` @kind object;
  #L4614ec.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4614f2.  v0:= temp;
  #L4614f4.  if v0 == 0 then goto L461500;
  #L4614f8.  call `l`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.l:()V` @kind direct;
  #L4614fe.  return @kind void;
  #L461500.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L461506.  v0:= temp @kind object;
  #L461508.  throw v0;
}
procedure `void` `f`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v11 @kind this, `byte`[] v12 @kind object, `int` v13 , `int` v14 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.f:([BII)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4615f0.  if v14 < 0 then goto L46165a;
  #L4615f4.  call temp:= `i`(v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.i:()I` @kind direct;
  #L4615fa.  v0:= temp;
  #L4615fc.  if v14 > v0 then goto L46165a;
  #L461600.  v0:= v14;
  #L461602.  if v0 <= 0 then goto L461658;
  #L461606.  call temp:= `d`(v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.d:()J` @kind direct;
  #L46160c.  v1:= temp @kind wide;
  #L46160e.  v3:= 0L;
  #L461612.  v5:= lcmp(v1, v3);
  #L461616.  if v5 != 0 then goto L461620;
  #L46161a.  call `e`(v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.e:()V` @kind direct;
  #L461620.  call temp:= `d`(v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.d:()J` @kind direct;
  #L461626.  v1:= temp @kind wide;
  #L461628.  v2:= (`int`) v1 @kind l2i;
  #L46162a.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L461630.  v1:= temp;
  #L461632.  v2:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L461636.  v4:= v14 - v0 @kind int;
  #L46163a.  v4:= v4 + v13 @kind int;
  #L46163c.  v5:= (`long`) v4 @kind i2l;
  #L46163e.  v9:= (`long`) v1 @kind i2l;
  #L461640.  v4:= v12 @kind object;
  #L461642.  v7:= v9 @kind wide;
  #L461644.  call `n`(v2, v4, v5, v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.n:(J[BJJ)V` @kind static;
  #L46164a.  v0:= v0 - v1 @kind int;
  #L46164c.  v1:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L461650.  v1:= v1 + v9 @kind long;
  #L461652.  v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v1 @kind wide;
  #L461656.  goto L461602;
  #L461658.  return @kind void;
  #L46165a.  if v14 > 0 then goto L46166e;
  #L46165e.  if v14 != 0 then goto L461664;
  #L461662.  return @kind void;
  #L461664.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L46166a.  v12:= temp @kind object;
  #L46166c.  throw v12;
  #L46166e.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L461674.  v12:= temp @kind object;
  #L461676.  throw v12;
}
procedure `void` `h`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.h:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4616a8.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.j` @type ^`int`;
  #L4616ac.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.k` @type ^`int`;
  #L4616b0.  v0:= v0 + v1 @kind int;
  #L4616b2.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.j` @type ^`int` := v0;
  #L4616b6.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.o` @type ^`int`;
  #L4616ba.  v1:= v0 - v1 @kind int;
  #L4616be.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.l` @type ^`int`;
  #L4616c2.  if v1 <= v2 then goto L4616d4;
  #L4616c6.  v1:= v1 - v2 @kind int;
  #L4616c8.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.k` @type ^`int` := v1;
  #L4616cc.  v0:= v0 - v1 @kind int;
  #L4616ce.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.j` @type ^`int` := v0;
  #L4616d2.  goto L4616da;
  #L4616d4.  v0:= 0I;
  #L4616d6.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.k` @type ^`int` := v0;
  #L4616da.  return @kind void;
}
procedure `int` `i`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.i:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L460cf0.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.j` @type ^`int`;
  #L460cf4.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.n` @type ^`int`;
  #L460cf8.  v0:= v0 - v1 @kind int;
  #L460cfa.  v0:= (`long`) v0 @kind i2l;
  #L460cfc.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L460d00.  v0:= v0 - v2 @kind long;
  #L460d02.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.q` @type ^`long` @kind wide;
  #L460d06.  v0:= v0 + v2 @kind long;
  #L460d08.  v1:= (`int`) v0 @kind l2i;
  #L460d0a.  return v1;
}
procedure `void` `j`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.j:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L461800.  v0:= 0I;
  #L461802.  v1:= 10I;
  #L461806.  if v0 >= v1 then goto L46181e;
  #L46180a.  call temp:= `readRawByte`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawByte:()B` @kind virtual;
  #L461810.  v1:= temp;
  #L461812.  if v1 < 0 then goto L461818;
  #L461816.  return @kind void;
  #L461818.  v0:= v0 + 1;
  #L46181c.  goto L461802;
  #L46181e.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.e:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L461824.  v0:= temp @kind object;
  #L461826.  throw v0;
}
procedure `java.nio.ByteBuffer` `k`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.k:(II)Ljava/nio/ByteBuffer;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L460f38.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.g` @type ^`java.nio.ByteBuffer` @kind object;
  #L460f3c.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L460f42.  v0:= temp;
  #L460f44.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.g` @type ^`java.nio.ByteBuffer` @kind object;
  #L460f48.  call temp:= `limit`(v1) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L460f4e.  v1:= temp;
  #L460f50.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.g` @type ^`java.nio.ByteBuffer` @kind object;
  #L460f54.  call temp:= `position`(v2, v4) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L460f5a.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.g` @type ^`java.nio.ByteBuffer` @kind object;
  #L460f5e.  call temp:= `limit`(v4, v5) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L460f64.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.g` @type ^`java.nio.ByteBuffer` @kind object;
  #L460f68.  call temp:= `slice`(v4) @signature `Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L460f6e.  v4:= temp @kind object;
  #L460f70.  v5:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.g` @type ^`java.nio.ByteBuffer` @kind object;
  #L460f74.  call temp:= `position`(v5, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L460f7a.  v5:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.g` @type ^`java.nio.ByteBuffer` @kind object;
  #L460f7e.  call temp:= `limit`(v5, v1) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L460f84.  return v4 @kind object;
  #L460f86.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L460f88.  goto L460f94;
  #L460f8a.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L460f90.  v4:= temp @kind object;
  #L460f92.  throw v4;
  #L460f94.  v5:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.g` @type ^`java.nio.ByteBuffer` @kind object;
  #L460f98.  call temp:= `position`(v5, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L460f9e.  v5:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.g` @type ^`java.nio.ByteBuffer` @kind object;
  #L460fa2.  call temp:= `limit`(v5, v1) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L460fa8.  throw v4;
  catch `java.lang.IllegalArgumentException` @[L460f50..L460f70] goto L460f8a;
  catch `java.lang.Throwable` @[L460f50..L460f70] goto L460f86;
  catch `java.lang.Throwable` @[L460f8a..L460f94] goto L460f86;
}
procedure `void` `l`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v6 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.l:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L461838.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.f` @type ^`java.util.Iterator` @kind object;
  #L46183c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L461842.  v0:= temp @kind object;
  #L461844.  v0:= (`java.nio.ByteBuffer`) v0 @kind object;
  #L461848.  v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.g` @type ^`java.nio.ByteBuffer` := v0 @kind object;
  #L46184c.  v1:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.n` @type ^`int`;
  #L461850.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L461854.  v4:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.q` @type ^`long` @kind wide;
  #L461858.  v2:= v2 - v4 @kind long;
  #L46185a.  v3:= (`int`) v2 @kind l2i;
  #L46185c.  v1:= v1 + v3 @kind int;
  #L46185e.  v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.n` @type ^`int` := v1;
  #L461862.  call temp:= `position`(v0) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L461868.  v0:= temp;
  #L46186a.  v0:= (`long`) v0 @kind i2l;
  #L46186c.  v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v0 @kind wide;
  #L461870.  v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.q` @type ^`long` := v0 @kind wide;
  #L461874.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.g` @type ^`java.nio.ByteBuffer` @kind object;
  #L461878.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L46187e.  v0:= temp;
  #L461880.  v0:= (`long`) v0 @kind i2l;
  #L461882.  v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.s` @type ^`long` := v0 @kind wide;
  #L461886.  v0:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.g` @type ^`java.nio.ByteBuffer` @kind object;
  #L46188a.  call temp:= `i`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.i:(Ljava/nio/ByteBuffer;)J` @kind static;
  #L461890.  v0:= temp @kind wide;
  #L461892.  v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.r` @type ^`long` := v0 @kind wide;
  #L461896.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L46189a.  v2:= v2 + v0 @kind long;
  #L46189c.  v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v2 @kind wide;
  #L4618a0.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.q` @type ^`long` @kind wide;
  #L4618a4.  v2:= v2 + v0 @kind long;
  #L4618a6.  v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.q` @type ^`long` := v2 @kind wide;
  #L4618aa.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.s` @type ^`long` @kind wide;
  #L4618ae.  v2:= v2 + v0 @kind long;
  #L4618b0.  v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.s` @type ^`long` := v2 @kind wide;
  #L4618b4.  return @kind void;
}
procedure `void` `checkLastTagWas`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.checkLastTagWas:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4614ac.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.m` @type ^`int`;
  #L4614b0.  if v0 != v2 then goto L4614b6;
  #L4614b4.  return @kind void;
  #L4614b6.  call temp:= `a`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.a:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L4614bc.  v2:= temp @kind object;
  #L4614be.  throw v2;
}
procedure `void` `enableAliasing`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.enableAliasing:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L4614d0.  v0.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.i` @type ^`boolean` := v1 @kind boolean;
  #L4614d4.  return @kind void;
}
procedure `long` `g`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v6 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.g:()J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L46137c.  v0:= 0L;
  #L461380.  v2:= 0I;
  #L461382.  v3:= 64I;
  #L461386.  if v2 >= v3 then goto L4613ac;
  #L46138a.  call temp:= `readRawByte`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawByte:()B` @kind virtual;
  #L461390.  v3:= temp;
  #L461392.  v4:= v3 ^& 127;
  #L461396.  v4:= (`long`) v4 @kind i2l;
  #L461398.  v4:= v4 ^< v2 @kind long;
  #L46139a.  v0:= v0 ^| v4 @kind long;
  #L46139c.  v3:= v3 ^& 128;
  #L4613a0.  if v3 != 0 then goto L4613a6;
  #L4613a4.  return v0 @kind wide;
  #L4613a6.  v2:= v2 + 7;
  #L4613aa.  goto L461382;
  #L4613ac.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.e:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L4613b2.  v0:= temp @kind object;
  #L4613b4.  throw v0;
}
procedure `int` `getBytesUntilLimit`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.getBytesUntilLimit:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L460938.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.l` @type ^`int`;
  #L46093c.  v1:= 2147483647I;
  #L460942.  if v0 != v1 then goto L46094a;
  #L460946.  v0:= -1I;
  #L460948.  return v0;
  #L46094a.  call temp:= `getTotalBytesRead`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.getTotalBytesRead:()I` @kind virtual;
  #L460950.  v1:= temp;
  #L460952.  v0:= v0 - v1 @kind int;
  #L460954.  return v0;
}
procedure `int` `getLastTag`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.getLastTag:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460968.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.m` @type ^`int`;
  #L46096c.  return v0;
}
procedure `int` `getTotalBytesRead`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.getTotalBytesRead:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L460980.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.n` @type ^`int`;
  #L460984.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.o` @type ^`int`;
  #L460988.  v0:= v0 - v1 @kind int;
  #L46098a.  v0:= (`long`) v0 @kind i2l;
  #L46098c.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L460990.  v0:= v0 + v2 @kind long;
  #L460992.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.q` @type ^`long` @kind wide;
  #L460996.  v0:= v0 - v2 @kind long;
  #L460998.  v1:= (`int`) v0 @kind l2i;
  #L46099a.  return v1;
}
procedure `boolean` `isAtEnd`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v5 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.isAtEnd:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4604a0.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.n` @type ^`int`;
  #L4604a4.  v0:= (`long`) v0 @kind i2l;
  #L4604a6.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L4604aa.  v0:= v0 + v2 @kind long;
  #L4604ac.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.q` @type ^`long` @kind wide;
  #L4604b0.  v0:= v0 - v2 @kind long;
  #L4604b2.  v2:= v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.j` @type ^`int`;
  #L4604b6.  v2:= (`long`) v2 @kind i2l;
  #L4604b8.  v4:= lcmp(v0, v2);
  #L4604bc.  if v4 != 0 then goto L4604c4;
  #L4604c0.  v0:= 1I;
  #L4604c2.  goto L4604c6;
  #L4604c4.  v0:= 0I;
  #L4604c6.  return v0;
}
procedure `void` `popLimit`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v0 @kind this, `int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.popLimit:(I)V` @AccessFlag PUBLIC {
    temp;

  #L46151c.  v0.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.l` @type ^`int` := v1;
  #L461520.  call `h`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.h:()V` @kind direct;
  #L461526.  return @kind void;
}
procedure `int` `pushLimit`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.pushLimit:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4609ac.  if v2 < 0 then goto L4609d8;
  #L4609b0.  call temp:= `getTotalBytesRead`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.getTotalBytesRead:()I` @kind virtual;
  #L4609b6.  v0:= temp;
  #L4609b8.  v2:= v2 + v0 @kind int;
  #L4609ba.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.l` @type ^`int`;
  #L4609be.  if v2 > v0 then goto L4609ce;
  #L4609c2.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.l` @type ^`int` := v2;
  #L4609c6.  call `h`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.h:()V` @kind direct;
  #L4609cc.  return v0;
  #L4609ce.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L4609d4.  v2:= temp @kind object;
  #L4609d6.  throw v2;
  #L4609d8.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L4609de.  v2:= temp @kind object;
  #L4609e0.  throw v2;
}
procedure `boolean` `readBool`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v5 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readBool:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4604d8.  call temp:= `readRawVarint64`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint64:()J` @kind virtual;
  #L4604de.  v0:= temp @kind wide;
  #L4604e0.  v2:= 0L;
  #L4604e4.  v4:= lcmp(v0, v2);
  #L4604e8.  if v4 == 0 then goto L4604f0;
  #L4604ec.  v0:= 1I;
  #L4604ee.  goto L4604f2;
  #L4604f0.  v0:= 0I;
  #L4604f2.  return v0;
}
procedure `byte`[] `readByteArray`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readByteArray:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4606a8.  call temp:= `readRawVarint32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint32:()I` @kind virtual;
  #L4606ae.  v0:= temp;
  #L4606b0.  call temp:= `readRawBytes`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawBytes:(I)[B` @kind virtual;
  #L4606b6.  v0:= temp @kind object;
  #L4606b8.  return v0 @kind object;
}
procedure `java.nio.ByteBuffer` `readByteBuffer`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v10 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L460e64.  call temp:= `readRawVarint32`(v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint32:()I` @kind virtual;
  #L460e6a.  v0:= temp;
  #L460e6c.  if v0 <= 0 then goto L460ee0;
  #L460e70.  v8:= (`long`) v0 @kind i2l;
  #L460e72.  call temp:= `d`(v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.d:()J` @kind direct;
  #L460e78.  v1:= temp @kind wide;
  #L460e7a.  v3:= lcmp(v8, v1);
  #L460e7e.  if v3 > 0 then goto L460ee0;
  #L460e82.  v1:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.h` @type ^`boolean` @kind boolean;
  #L460e86.  if v1 != 0 then goto L460eb6;
  #L460e8a.  v1:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.i` @type ^`boolean` @kind boolean;
  #L460e8e.  if v1 == 0 then goto L460eb6;
  #L460e92.  v0:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L460e96.  v0:= v0 + v8 @kind long;
  #L460e98.  v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v0 @kind wide;
  #L460e9c.  v2:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.r` @type ^`long` @kind wide;
  #L460ea0.  v4:= v0 - v2 @kind long;
  #L460ea4.  v4:= v4 - v8 @kind long;
  #L460ea6.  v5:= (`int`) v4 @kind l2i;
  #L460ea8.  v0:= v0 - v2 @kind long;
  #L460eaa.  v1:= (`int`) v0 @kind l2i;
  #L460eac.  call temp:= `k`(v10, v5, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.k:(II)Ljava/nio/ByteBuffer;` @kind direct;
  #L460eb2.  v0:= temp @kind object;
  #L460eb4.  return v0 @kind object;
  #L460eb6.  v0:= new `byte`[v0];
  #L460eba.  v1:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L460ebe.  v4:= 0L;
  #L460ec2.  v3:= v0 @kind object;
  #L460ec4.  v6:= v8 @kind wide;
  #L460ec6.  call `n`(v1, v3, v4, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.n:(J[BJJ)V` @kind static;
  #L460ecc.  v1:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L460ed0.  v1:= v1 + v8 @kind long;
  #L460ed2.  v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v1 @kind wide;
  #L460ed6.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L460edc.  v0:= temp @kind object;
  #L460ede.  return v0 @kind object;
  #L460ee0.  if v0 <= 0 then goto L460f06;
  #L460ee4.  call temp:= `i`(v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.i:()I` @kind direct;
  #L460eea.  v1:= temp;
  #L460eec.  if v0 > v1 then goto L460f06;
  #L460ef0.  v1:= new `byte`[v0];
  #L460ef4.  v2:= 0I;
  #L460ef6.  call `f`(v10, v1, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.f:([BII)V` @kind direct;
  #L460efc.  call temp:= `wrap`(v1) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L460f02.  v0:= temp @kind object;
  #L460f04.  return v0 @kind object;
  #L460f06.  if v0 != 0 then goto L460f10;
  #L460f0a.  v0:= `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_BUFFER` @type ^`java.nio.ByteBuffer` @kind object;
  #L460f0e.  return v0 @kind object;
  #L460f10.  if v0 >= 0 then goto L460f1e;
  #L460f14.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L460f1a.  v0:= temp @kind object;
  #L460f1c.  throw v0;
  #L460f1e.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L460f24.  v0:= temp @kind object;
  #L460f26.  throw v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `readBytes`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v10 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readBytes:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L460754.  call temp:= `readRawVarint32`(v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint32:()I` @kind virtual;
  #L46075a.  v0:= temp;
  #L46075c.  if v0 <= 0 then goto L4607d4;
  #L460760.  v8:= (`long`) v0 @kind i2l;
  #L460762.  v1:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.s` @type ^`long` @kind wide;
  #L460766.  v3:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L46076a.  v1:= v1 - v3 @kind long;
  #L46076c.  v5:= lcmp(v8, v1);
  #L460770.  if v5 > 0 then goto L4607d4;
  #L460774.  v1:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.h` @type ^`boolean` @kind boolean;
  #L460778.  if v1 == 0 then goto L4607aa;
  #L46077c.  v1:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.i` @type ^`boolean` @kind boolean;
  #L460780.  if v1 == 0 then goto L4607aa;
  #L460784.  v1:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.r` @type ^`long` @kind wide;
  #L460788.  v3:= v3 - v1 @kind long;
  #L46078a.  v1:= (`int`) v3 @kind l2i;
  #L46078c.  v0:= v0 + v1 @kind int;
  #L46078e.  call temp:= `k`(v10, v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.k:(II)Ljava/nio/ByteBuffer;` @kind direct;
  #L460794.  v0:= temp @kind object;
  #L460796.  call temp:= `j`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.j:(Ljava/nio/ByteBuffer;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L46079c.  v0:= temp @kind object;
  #L46079e.  v1:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L4607a2.  v1:= v1 + v8 @kind long;
  #L4607a4.  v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v1 @kind wide;
  #L4607a8.  return v0 @kind object;
  #L4607aa.  v0:= new `byte`[v0];
  #L4607ae.  v1:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L4607b2.  v4:= 0L;
  #L4607b6.  v3:= v0 @kind object;
  #L4607b8.  v6:= v8 @kind wide;
  #L4607ba.  call `n`(v1, v3, v4, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.n:(J[BJJ)V` @kind static;
  #L4607c0.  v1:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L4607c4.  v1:= v1 + v8 @kind long;
  #L4607c6.  v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v1 @kind wide;
  #L4607ca.  call temp:= `k`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.k:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L4607d0.  v0:= temp @kind object;
  #L4607d2.  return v0 @kind object;
  #L4607d4.  if v0 <= 0 then goto L4607fa;
  #L4607d8.  call temp:= `i`(v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.i:()I` @kind direct;
  #L4607de.  v1:= temp;
  #L4607e0.  if v0 > v1 then goto L4607fa;
  #L4607e4.  v1:= new `byte`[v0];
  #L4607e8.  v2:= 0I;
  #L4607ea.  call `f`(v10, v1, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.f:([BII)V` @kind direct;
  #L4607f0.  call temp:= `k`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.k:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L4607f6.  v0:= temp @kind object;
  #L4607f8.  return v0 @kind object;
  #L4607fa.  if v0 != 0 then goto L460804;
  #L4607fe.  v0:= `@@com.google.crypto.tink.shaded.protobuf.ByteString.EMPTY` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L460802.  return v0 @kind object;
  #L460804.  if v0 >= 0 then goto L460812;
  #L460808.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L46080e.  v0:= temp @kind object;
  #L460810.  throw v0;
  #L460812.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L460818.  v0:= temp @kind object;
  #L46081a.  throw v0;
}
procedure `double` `readDouble`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readDouble:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4608f0.  call temp:= `readRawLittleEndian64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawLittleEndian64:()J` @kind virtual;
  #L4608f6.  v0:= temp @kind wide;
  #L4608f8.  call temp:= `longBitsToDouble`(v0) @signature `Ljava/lang/Double;.longBitsToDouble:(J)D` @kind static;
  #L4608fe.  v0:= temp @kind wide;
  #L460900.  return v0 @kind wide;
}
procedure `int` `readEnum`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readEnum:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4609f4.  call temp:= `readRawVarint32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint32:()I` @kind virtual;
  #L4609fa.  v0:= temp;
  #L4609fc.  return v0;
}
procedure `int` `readFixed32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readFixed32:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460a10.  call temp:= `readRawLittleEndian32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawLittleEndian32:()I` @kind virtual;
  #L460a16.  v0:= temp;
  #L460a18.  return v0;
}
procedure `long` `readFixed64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readFixed64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L460ff0.  call temp:= `readRawLittleEndian64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawLittleEndian64:()J` @kind virtual;
  #L460ff6.  v0:= temp @kind wide;
  #L460ff8.  return v0 @kind wide;
}
procedure `float` `readFloat`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readFloat:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460914.  call temp:= `readRawLittleEndian32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawLittleEndian32:()I` @kind virtual;
  #L46091a.  v0:= temp;
  #L46091c.  call temp:= `intBitsToFloat`(v0) @signature `Ljava/lang/Float;.intBitsToFloat:(I)F` @kind static;
  #L460922.  v0:= temp;
  #L460924.  return v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `readGroup`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v2 @kind this, `int` v3 , `com.google.crypto.tink.shaded.protobuf.Parser` v4 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readGroup:(ILcom/google/crypto/tink/shaded/protobuf/Parser;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46082c.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L460830.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @type ^`int`;
  #L460834.  if v0 >= v1 then goto L46086a;
  #L460838.  v0:= v0 + 1;
  #L46083c.  v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v0;
  #L460840.  call temp:= `parsePartialFrom`(v4, v2, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/Parser;.parsePartialFrom:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @kind interface;
  #L460846.  v4:= temp @kind object;
  #L460848.  v4:= (`com.google.crypto.tink.shaded.protobuf.MessageLite`) v4 @kind object;
  #L46084c.  v5:= 4I;
  #L46084e.  call temp:= `a`(v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L460854.  v3:= temp;
  #L460856.  call `checkLastTagWas`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.checkLastTagWas:(I)V` @kind virtual;
  #L46085c.  v3:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L460860.  v3:= v3 + -1;
  #L460864.  v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v3;
  #L460868.  return v4 @kind object;
  #L46086a.  call temp:= `h`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.h:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L460870.  v3:= temp @kind object;
  #L460872.  throw v3;
}
procedure `void` `readGroup`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v2 @kind this, `int` v3 , `com.google.crypto.tink.shaded.protobuf.MessageLite$Builder` v4 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readGroup:(ILcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L461538.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L46153c.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @type ^`int`;
  #L461540.  if v0 >= v1 then goto L461570;
  #L461544.  v0:= v0 + 1;
  #L461548.  v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v0;
  #L46154c.  call temp:= `mergeFrom`(v4, v2, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;.mergeFrom:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;` @kind interface;
  #L461552.  v4:= 4I;
  #L461554.  call temp:= `a`(v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L46155a.  v3:= temp;
  #L46155c.  call `checkLastTagWas`(v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.checkLastTagWas:(I)V` @kind virtual;
  #L461562.  v3:= v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L461566.  v3:= v3 + -1;
  #L46156a.  v2.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v3;
  #L46156e.  return @kind void;
  #L461570.  call temp:= `h`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.h:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L461576.  v3:= temp @kind object;
  #L461578.  throw v3;
}
procedure `int` `readInt32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readInt32:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460a2c.  call temp:= `readRawVarint32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint32:()I` @kind virtual;
  #L460a32.  v0:= temp;
  #L460a34.  return v0;
}
procedure `long` `readInt64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readInt64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L46100c.  call temp:= `readRawVarint64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint64:()J` @kind virtual;
  #L461012.  v0:= temp @kind wide;
  #L461014.  return v0 @kind wide;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `readMessage`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v3 @kind this, `com.google.crypto.tink.shaded.protobuf.Parser` v4 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readMessage:(Lcom/google/crypto/tink/shaded/protobuf/Parser;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L460884.  call temp:= `readRawVarint32`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint32:()I` @kind virtual;
  #L46088a.  v0:= temp;
  #L46088c.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L460890.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @type ^`int`;
  #L460894.  if v1 >= v2 then goto L4608d4;
  #L460898.  call temp:= `pushLimit`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.pushLimit:(I)I` @kind virtual;
  #L46089e.  v0:= temp;
  #L4608a0.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L4608a4.  v1:= v1 + 1;
  #L4608a8.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v1;
  #L4608ac.  call temp:= `parsePartialFrom`(v4, v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/Parser;.parsePartialFrom:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;` @kind interface;
  #L4608b2.  v4:= temp @kind object;
  #L4608b4.  v4:= (`com.google.crypto.tink.shaded.protobuf.MessageLite`) v4 @kind object;
  #L4608b8.  v5:= 0I;
  #L4608ba.  call `checkLastTagWas`(v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.checkLastTagWas:(I)V` @kind virtual;
  #L4608c0.  v5:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L4608c4.  v5:= v5 + -1;
  #L4608c8.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v5;
  #L4608cc.  call `popLimit`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.popLimit:(I)V` @kind virtual;
  #L4608d2.  return v4 @kind object;
  #L4608d4.  call temp:= `h`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.h:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L4608da.  v4:= temp @kind object;
  #L4608dc.  throw v4;
}
procedure `void` `readMessage`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v3 @kind this, `com.google.crypto.tink.shaded.protobuf.MessageLite$Builder` v4 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readMessage:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L46158c.  call temp:= `readRawVarint32`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint32:()I` @kind virtual;
  #L461592.  v0:= temp;
  #L461594.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L461598.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @type ^`int`;
  #L46159c.  if v1 >= v2 then goto L4615d6;
  #L4615a0.  call temp:= `pushLimit`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.pushLimit:(I)I` @kind virtual;
  #L4615a6.  v0:= temp;
  #L4615a8.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L4615ac.  v1:= v1 + 1;
  #L4615b0.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v1;
  #L4615b4.  call temp:= `mergeFrom`(v4, v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;.mergeFrom:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;` @kind interface;
  #L4615ba.  v4:= 0I;
  #L4615bc.  call `checkLastTagWas`(v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.checkLastTagWas:(I)V` @kind virtual;
  #L4615c2.  v4:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int`;
  #L4615c6.  v4:= v4 + -1;
  #L4615ca.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @type ^`int` := v4;
  #L4615ce.  call `popLimit`(v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.popLimit:(I)V` @kind virtual;
  #L4615d4.  return @kind void;
  #L4615d6.  call temp:= `h`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.h:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L4615dc.  v4:= temp @kind object;
  #L4615de.  throw v4;
}
procedure `byte` `readRawByte`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v5 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawByte:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L460664.  call temp:= `d`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.d:()J` @kind direct;
  #L46066a.  v0:= temp @kind wide;
  #L46066c.  v2:= 0L;
  #L460670.  v4:= lcmp(v0, v2);
  #L460674.  if v4 != 0 then goto L46067e;
  #L460678.  call `e`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.e:()V` @kind direct;
  #L46067e.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L460682.  v2:= 1L;
  #L460686.  v2:= v2 + v0 @kind long;
  #L460688.  v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v2 @kind wide;
  #L46068c.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L460692.  v0:= temp;
  #L460694.  return v0;
}
procedure `byte`[] `readRawBytes`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v9 @kind this, `int` v10 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawBytes:(I)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4606cc.  if v10 < 0 then goto L460704;
  #L4606d0.  v7:= (`long`) v10 @kind i2l;
  #L4606d2.  call temp:= `d`(v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.d:()J` @kind direct;
  #L4606d8.  v0:= temp @kind wide;
  #L4606da.  v2:= lcmp(v7, v0);
  #L4606de.  if v2 > 0 then goto L460704;
  #L4606e2.  v10:= new `byte`[v10];
  #L4606e6.  v0:= v9.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L4606ea.  v3:= 0L;
  #L4606ee.  v2:= v10 @kind object;
  #L4606f0.  v5:= v7 @kind wide;
  #L4606f2.  call `n`(v0, v2, v3, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.n:(J[BJJ)V` @kind static;
  #L4606f8.  v0:= v9.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L4606fc.  v0:= v0 + v7 @kind long;
  #L4606fe.  v9.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v0 @kind wide;
  #L460702.  return v10 @kind object;
  #L460704.  if v10 < 0 then goto L460722;
  #L460708.  call temp:= `i`(v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.i:()I` @kind direct;
  #L46070e.  v0:= temp;
  #L460710.  if v10 > v0 then goto L460722;
  #L460714.  v0:= new `byte`[v10];
  #L460718.  v1:= 0I;
  #L46071a.  call `f`(v9, v0, v1, v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.f:([BII)V` @kind direct;
  #L460720.  return v0 @kind object;
  #L460722.  if v10 > 0 then goto L46073a;
  #L460726.  if v10 != 0 then goto L460730;
  #L46072a.  v10:= `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L46072e.  return v10 @kind object;
  #L460730.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L460736.  v10:= temp @kind object;
  #L460738.  throw v10;
  #L46073a.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L460740.  v10:= temp @kind object;
  #L460742.  throw v10;
}
procedure `int` `readRawLittleEndian32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v5 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawLittleEndian32:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L460a48.  call temp:= `d`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.d:()J` @kind direct;
  #L460a4e.  v0:= temp @kind wide;
  #L460a50.  v2:= 4L;
  #L460a54.  v4:= lcmp(v0, v2);
  #L460a58.  if v4 < 0 then goto L460abc;
  #L460a5c.  v0:= v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L460a60.  v2:= v2 + v0 @kind long;
  #L460a62.  v5.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v2 @kind wide;
  #L460a66.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L460a6c.  v2:= temp;
  #L460a6e.  v2:= v2 ^& 255;
  #L460a72.  v3:= 1L;
  #L460a76.  v3:= v3 + v0 @kind long;
  #L460a78.  call temp:= `v`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L460a7e.  v3:= temp;
  #L460a80.  v3:= v3 ^& 255;
  #L460a84.  v3:= v3 ^< 8;
  #L460a88.  v2:= v2 ^| v3 @kind int;
  #L460a8a.  v3:= 2L;
  #L460a8e.  v3:= v3 + v0 @kind long;
  #L460a90.  call temp:= `v`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L460a96.  v3:= temp;
  #L460a98.  v3:= v3 ^& 255;
  #L460a9c.  v3:= v3 ^< 16;
  #L460aa0.  v2:= v2 ^| v3 @kind int;
  #L460aa2.  v3:= 3L;
  #L460aa6.  v0:= v0 + v3 @kind long;
  #L460aa8.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L460aae.  v0:= temp;
  #L460ab0.  v0:= v0 ^& 255;
  #L460ab4.  v0:= v0 ^< 24;
  #L460ab8.  v0:= v0 ^| v2 @kind int;
  #L460aba.  return v0;
  #L460abc.  call temp:= `readRawByte`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawByte:()B` @kind virtual;
  #L460ac2.  v0:= temp;
  #L460ac4.  v0:= v0 ^& 255;
  #L460ac8.  call temp:= `readRawByte`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawByte:()B` @kind virtual;
  #L460ace.  v1:= temp;
  #L460ad0.  v1:= v1 ^& 255;
  #L460ad4.  v1:= v1 ^< 8;
  #L460ad8.  v0:= v0 ^| v1 @kind int;
  #L460ada.  call temp:= `readRawByte`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawByte:()B` @kind virtual;
  #L460ae0.  v1:= temp;
  #L460ae2.  v1:= v1 ^& 255;
  #L460ae6.  v1:= v1 ^< 16;
  #L460aea.  v0:= v0 ^| v1 @kind int;
  #L460aec.  call temp:= `readRawByte`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawByte:()B` @kind virtual;
  #L460af2.  v1:= temp;
  #L460af4.  v1:= v1 ^& 255;
  #L460af8.  v1:= v1 ^< 24;
  #L460afc.  v0:= v0 ^| v1 @kind int;
  #L460afe.  return v0;
}
procedure `long` `readRawLittleEndian64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v15 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawLittleEndian64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L461028.  call temp:= `d`(v15) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.d:()J` @kind direct;
  #L46102e.  v0:= temp @kind wide;
  #L461030.  v2:= 56I;
  #L461034.  v3:= 48I;
  #L461038.  v4:= 40I;
  #L46103c.  v5:= 32I;
  #L461040.  v6:= 24I;
  #L461044.  v7:= 16I;
  #L461048.  v8:= 8I;
  #L46104c.  v9:= 8L;
  #L461050.  v11:= 255L;
  #L461054.  v13:= lcmp(v0, v9);
  #L461058.  if v13 < 0 then goto L46111a;
  #L46105c.  v0:= v15.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L461060.  v9:= v9 + v0 @kind long;
  #L461062.  v15.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v9 @kind wide;
  #L461066.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L46106c.  v9:= temp;
  #L46106e.  v9:= (`long`) v9 @kind i2l;
  #L461070.  v9:= v9 ^& v11 @kind long;
  #L461072.  v13:= 1L;
  #L461076.  v13:= v13 + v0 @kind long;
  #L461078.  call temp:= `v`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L46107e.  v13:= temp;
  #L461080.  v13:= (`long`) v13 @kind i2l;
  #L461082.  v13:= v13 ^& v11 @kind long;
  #L461084.  v13:= v13 ^< v8 @kind long;
  #L461086.  v8:= v9 ^| v13 @kind long;
  #L46108a.  v13:= 2L;
  #L46108e.  v13:= v13 + v0 @kind long;
  #L461090.  call temp:= `v`(v13) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L461096.  v10:= temp;
  #L461098.  v13:= (`long`) v10 @kind i2l;
  #L46109a.  v13:= v13 ^& v11 @kind long;
  #L46109c.  v13:= v13 ^< v7 @kind long;
  #L46109e.  v7:= v8 ^| v13 @kind long;
  #L4610a2.  v9:= 3L;
  #L4610a6.  v9:= v9 + v0 @kind long;
  #L4610a8.  call temp:= `v`(v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L4610ae.  v9:= temp;
  #L4610b0.  v9:= (`long`) v9 @kind i2l;
  #L4610b2.  v9:= v9 ^& v11 @kind long;
  #L4610b4.  v9:= v9 ^< v6 @kind long;
  #L4610b6.  v6:= v7 ^| v9 @kind long;
  #L4610ba.  v8:= 4L;
  #L4610be.  v8:= v8 + v0 @kind long;
  #L4610c0.  call temp:= `v`(v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L4610c6.  v8:= temp;
  #L4610c8.  v8:= (`long`) v8 @kind i2l;
  #L4610ca.  v8:= v8 ^& v11 @kind long;
  #L4610cc.  v8:= v8 ^< v5 @kind long;
  #L4610ce.  v5:= v6 ^| v8 @kind long;
  #L4610d2.  v7:= 5L;
  #L4610d6.  v7:= v7 + v0 @kind long;
  #L4610d8.  call temp:= `v`(v7) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L4610de.  v7:= temp;
  #L4610e0.  v7:= (`long`) v7 @kind i2l;
  #L4610e2.  v7:= v7 ^& v11 @kind long;
  #L4610e4.  v7:= v7 ^< v4 @kind long;
  #L4610e6.  v4:= v5 ^| v7 @kind long;
  #L4610ea.  v6:= 6L;
  #L4610ee.  v6:= v6 + v0 @kind long;
  #L4610f0.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L4610f6.  v6:= temp;
  #L4610f8.  v6:= (`long`) v6 @kind i2l;
  #L4610fa.  v6:= v6 ^& v11 @kind long;
  #L4610fc.  v6:= v6 ^< v3 @kind long;
  #L4610fe.  v3:= v4 ^| v6 @kind long;
  #L461102.  v5:= 7L;
  #L461106.  v0:= v0 + v5 @kind long;
  #L461108.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L46110e.  v0:= temp;
  #L461110.  v0:= (`long`) v0 @kind i2l;
  #L461112.  v0:= v0 ^& v11 @kind long;
  #L461114.  v0:= v0 ^< v2 @kind long;
  #L461116.  v0:= v0 ^| v3 @kind long;
  #L461118.  return v0 @kind wide;
  #L46111a.  call temp:= `readRawByte`(v15) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawByte:()B` @kind virtual;
  #L461120.  v0:= temp;
  #L461122.  v0:= (`long`) v0 @kind i2l;
  #L461124.  v0:= v0 ^& v11 @kind long;
  #L461126.  call temp:= `readRawByte`(v15) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawByte:()B` @kind virtual;
  #L46112c.  v9:= temp;
  #L46112e.  v9:= (`long`) v9 @kind i2l;
  #L461130.  v9:= v9 ^& v11 @kind long;
  #L461132.  v8:= v9 ^< v8 @kind long;
  #L461136.  v0:= v0 ^| v8 @kind long;
  #L461138.  call temp:= `readRawByte`(v15) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawByte:()B` @kind virtual;
  #L46113e.  v8:= temp;
  #L461140.  v8:= (`long`) v8 @kind i2l;
  #L461142.  v8:= v8 ^& v11 @kind long;
  #L461144.  v7:= v8 ^< v7 @kind long;
  #L461148.  v0:= v0 ^| v7 @kind long;
  #L46114a.  call temp:= `readRawByte`(v15) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawByte:()B` @kind virtual;
  #L461150.  v7:= temp;
  #L461152.  v7:= (`long`) v7 @kind i2l;
  #L461154.  v7:= v7 ^& v11 @kind long;
  #L461156.  v6:= v7 ^< v6 @kind long;
  #L46115a.  v0:= v0 ^| v6 @kind long;
  #L46115c.  call temp:= `readRawByte`(v15) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawByte:()B` @kind virtual;
  #L461162.  v6:= temp;
  #L461164.  v6:= (`long`) v6 @kind i2l;
  #L461166.  v6:= v6 ^& v11 @kind long;
  #L461168.  v5:= v6 ^< v5 @kind long;
  #L46116c.  v0:= v0 ^| v5 @kind long;
  #L46116e.  call temp:= `readRawByte`(v15) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawByte:()B` @kind virtual;
  #L461174.  v5:= temp;
  #L461176.  v5:= (`long`) v5 @kind i2l;
  #L461178.  v5:= v5 ^& v11 @kind long;
  #L46117a.  v4:= v5 ^< v4 @kind long;
  #L46117e.  v0:= v0 ^| v4 @kind long;
  #L461180.  call temp:= `readRawByte`(v15) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawByte:()B` @kind virtual;
  #L461186.  v4:= temp;
  #L461188.  v4:= (`long`) v4 @kind i2l;
  #L46118a.  v4:= v4 ^& v11 @kind long;
  #L46118c.  v3:= v4 ^< v3 @kind long;
  #L461190.  v0:= v0 ^| v3 @kind long;
  #L461192.  call temp:= `readRawByte`(v15) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawByte:()B` @kind virtual;
  #L461198.  v3:= temp;
  #L46119a.  v3:= (`long`) v3 @kind i2l;
  #L46119c.  v3:= v3 ^& v11 @kind long;
  #L46119e.  v2:= v3 ^< v2 @kind long;
  #L4611a2.  v0:= v0 ^| v2 @kind long;
  #L4611a4.  return v0 @kind wide;
}
procedure `int` `readRawVarint32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v10 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint32:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L460b10.  v0:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L460b14.  v2:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.s` @type ^`long` @kind wide;
  #L460b18.  v4:= lcmp(v2, v0);
  #L460b1c.  if v4 != 0 then goto L460b24;
  #L460b20.  goto L460c24;
  #L460b24.  v2:= 1L;
  #L460b28.  v4:= v0 + v2 @kind long;
  #L460b2c.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L460b32.  v0:= temp;
  #L460b34.  if v0 < 0 then goto L460b44;
  #L460b38.  v4:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L460b3c.  v4:= v4 + v2 @kind long;
  #L460b3e.  v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v4 @kind wide;
  #L460b42.  return v0;
  #L460b44.  v6:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.s` @type ^`long` @kind wide;
  #L460b48.  v8:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L460b4c.  v6:= v6 - v8 @kind long;
  #L460b4e.  v8:= 10L;
  #L460b52.  v1:= lcmp(v6, v8);
  #L460b56.  if v1 >= 0 then goto L460b5c;
  #L460b5a.  goto L460c24;
  #L460b5c.  v6:= v4 + v2 @kind long;
  #L460b60.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L460b66.  v1:= temp;
  #L460b68.  v1:= v1 ^< 7;
  #L460b6c.  v0:= v0 ^~ v1 @kind int;
  #L460b6e.  if v0 >= 0 then goto L460b78;
  #L460b72.  v0:= v0 ^~ -128;
  #L460b76.  goto L460c30;
  #L460b78.  v4:= v6 + v2 @kind long;
  #L460b7c.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L460b82.  v1:= temp;
  #L460b84.  v1:= v1 ^< 14;
  #L460b88.  v0:= v0 ^~ v1 @kind int;
  #L460b8a.  if v0 < 0 then goto L460b96;
  #L460b8e.  v0:= v0 ^~ 16256;
  #L460b92.  v6:= v4 @kind wide;
  #L460b94.  goto L460c30;
  #L460b96.  v6:= v4 + v2 @kind long;
  #L460b9a.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L460ba0.  v1:= temp;
  #L460ba2.  v1:= v1 ^< 21;
  #L460ba6.  v0:= v0 ^~ v1 @kind int;
  #L460ba8.  if v0 >= 0 then goto L460bb6;
  #L460bac.  v1:= -2080896I;
  #L460bb2.  v0:= v0 ^~ v1 @kind int;
  #L460bb4.  goto L460c30;
  #L460bb6.  v4:= v6 + v2 @kind long;
  #L460bba.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L460bc0.  v1:= temp;
  #L460bc2.  v6:= v1 ^< 28;
  #L460bc6.  v0:= v0 ^~ v6 @kind int;
  #L460bc8.  v6:= 266354560I;
  #L460bce.  v0:= v0 ^~ v6 @kind int;
  #L460bd0.  if v1 >= 0 then goto L460b92;
  #L460bd4.  v6:= v4 + v2 @kind long;
  #L460bd8.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L460bde.  v1:= temp;
  #L460be0.  if v1 >= 0 then goto L460c30;
  #L460be4.  v4:= v6 + v2 @kind long;
  #L460be8.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L460bee.  v1:= temp;
  #L460bf0.  if v1 >= 0 then goto L460b92;
  #L460bf4.  v6:= v4 + v2 @kind long;
  #L460bf8.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L460bfe.  v1:= temp;
  #L460c00.  if v1 >= 0 then goto L460c30;
  #L460c04.  v4:= v6 + v2 @kind long;
  #L460c08.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L460c0e.  v1:= temp;
  #L460c10.  if v1 >= 0 then goto L460b92;
  #L460c14.  v6:= v4 + v2 @kind long;
  #L460c18.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L460c1e.  v1:= temp;
  #L460c20.  if v1 >= 0 then goto L460c30;
  #L460c24.  call temp:= `g`(v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.g:()J` @kind virtual;
  #L460c2a.  v0:= temp @kind wide;
  #L460c2c.  v1:= (`int`) v0 @kind l2i;
  #L460c2e.  return v1;
  #L460c30.  v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v6 @kind wide;
  #L460c34.  return v0;
}
procedure `long` `readRawVarint64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v11 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4611b8.  v0:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L4611bc.  v2:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.s` @type ^`long` @kind wide;
  #L4611c0.  v4:= lcmp(v2, v0);
  #L4611c4.  if v4 != 0 then goto L4611cc;
  #L4611c8.  goto L461358;
  #L4611cc.  v2:= 1L;
  #L4611d0.  v4:= v0 + v2 @kind long;
  #L4611d4.  call temp:= `v`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L4611da.  v0:= temp;
  #L4611dc.  if v0 < 0 then goto L4611ee;
  #L4611e0.  v4:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L4611e4.  v4:= v4 + v2 @kind long;
  #L4611e6.  v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v4 @kind wide;
  #L4611ea.  v0:= (`long`) v0 @kind i2l;
  #L4611ec.  return v0 @kind wide;
  #L4611ee.  v6:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.s` @type ^`long` @kind wide;
  #L4611f2.  v8:= v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L4611f6.  v6:= v6 - v8 @kind long;
  #L4611f8.  v8:= 10L;
  #L4611fc.  v1:= lcmp(v6, v8);
  #L461200.  if v1 >= 0 then goto L461208;
  #L461204.  goto L461358;
  #L461208.  v6:= v4 + v2 @kind long;
  #L46120c.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L461212.  v1:= temp;
  #L461214.  v1:= v1 ^< 7;
  #L461218.  v0:= v0 ^~ v1 @kind int;
  #L46121a.  if v0 >= 0 then goto L461228;
  #L46121e.  v0:= v0 ^~ -128;
  #L461222.  v0:= (`long`) v0 @kind i2l;
  #L461224.  goto L461364;
  #L461228.  v4:= v6 + v2 @kind long;
  #L46122c.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L461232.  v1:= temp;
  #L461234.  v1:= v1 ^< 14;
  #L461238.  v0:= v0 ^~ v1 @kind int;
  #L46123a.  if v0 < 0 then goto L46124a;
  #L46123e.  v0:= v0 ^~ 16256;
  #L461242.  v0:= (`long`) v0 @kind i2l;
  #L461244.  v6:= v4 @kind wide;
  #L461246.  goto L461364;
  #L46124a.  v6:= v4 + v2 @kind long;
  #L46124e.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L461254.  v1:= temp;
  #L461256.  v1:= v1 ^< 21;
  #L46125a.  v0:= v0 ^~ v1 @kind int;
  #L46125c.  if v0 >= 0 then goto L46126a;
  #L461260.  v1:= -2080896I;
  #L461266.  v0:= v0 ^~ v1 @kind int;
  #L461268.  goto L461222;
  #L46126a.  v0:= (`long`) v0 @kind i2l;
  #L46126c.  v4:= v6 + v2 @kind long;
  #L461270.  call temp:= `v`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L461276.  v6:= temp;
  #L461278.  v6:= (`long`) v6 @kind i2l;
  #L46127a.  v8:= 28I;
  #L46127e.  v6:= v6 ^< v8 @kind long;
  #L461280.  v0:= v0 ^~ v6 @kind long;
  #L461282.  v6:= 0L;
  #L461286.  v8:= lcmp(v0, v6);
  #L46128a.  if v8 < 0 then goto L461298;
  #L46128e.  v2:= 266354560L;
  #L461294.  v0:= v0 ^~ v2 @kind long;
  #L461296.  goto L461244;
  #L461298.  v8:= v4 + v2 @kind long;
  #L46129c.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L4612a2.  v4:= temp;
  #L4612a4.  v4:= (`long`) v4 @kind i2l;
  #L4612a6.  v10:= 35I;
  #L4612aa.  v4:= v4 ^< v10 @kind long;
  #L4612ac.  v0:= v0 ^~ v4 @kind long;
  #L4612ae.  v4:= lcmp(v0, v6);
  #L4612b2.  if v4 >= 0 then goto L4612c6;
  #L4612b6.  v2:= -34093383808L;
  #L4612c0.  v0:= v0 ^~ v2 @kind long;
  #L4612c2.  v6:= v8 @kind wide;
  #L4612c4.  goto L461364;
  #L4612c6.  v4:= v8 + v2 @kind long;
  #L4612ca.  call temp:= `v`(v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L4612d0.  v8:= temp;
  #L4612d2.  v8:= (`long`) v8 @kind i2l;
  #L4612d4.  v10:= 42I;
  #L4612d8.  v8:= v8 ^< v10 @kind long;
  #L4612da.  v0:= v0 ^~ v8 @kind long;
  #L4612dc.  v8:= lcmp(v0, v6);
  #L4612e0.  if v8 < 0 then goto L4612f0;
  #L4612e4.  v2:= 4363953127296L;
  #L4612ee.  goto L461294;
  #L4612f0.  v8:= v4 + v2 @kind long;
  #L4612f4.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L4612fa.  v4:= temp;
  #L4612fc.  v4:= (`long`) v4 @kind i2l;
  #L4612fe.  v10:= 49I;
  #L461302.  v4:= v4 ^< v10 @kind long;
  #L461304.  v0:= v0 ^~ v4 @kind long;
  #L461306.  v4:= lcmp(v0, v6);
  #L46130a.  if v4 >= 0 then goto L46131a;
  #L46130e.  v2:= -558586000294016L;
  #L461318.  goto L4612c0;
  #L46131a.  v4:= v8 + v2 @kind long;
  #L46131e.  call temp:= `v`(v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L461324.  v8:= temp;
  #L461326.  v8:= (`long`) v8 @kind i2l;
  #L461328.  v10:= 56I;
  #L46132c.  v8:= v8 ^< v10 @kind long;
  #L46132e.  v0:= v0 ^~ v8 @kind long;
  #L461330.  v8:= 71499008037633920L;
  #L46133a.  v0:= v0 ^~ v8 @kind long;
  #L46133c.  v8:= lcmp(v0, v6);
  #L461340.  if v8 >= 0 then goto L461244;
  #L461344.  v2:= v2 + v4 @kind long;
  #L461346.  call temp:= `v`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.v:(J)B` @kind static;
  #L46134c.  v4:= temp;
  #L46134e.  v4:= (`long`) v4 @kind i2l;
  #L461350.  v8:= lcmp(v4, v6);
  #L461354.  if v8 >= 0 then goto L461362;
  #L461358.  call temp:= `g`(v11) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.g:()J` @kind virtual;
  #L46135e.  v0:= temp @kind wide;
  #L461360.  return v0 @kind wide;
  #L461362.  v6:= v2 @kind wide;
  #L461364.  v11.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v6 @kind wide;
  #L461368.  return v0 @kind wide;
}
procedure `int` `readSFixed32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readSFixed32:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460c48.  call temp:= `readRawLittleEndian32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawLittleEndian32:()I` @kind virtual;
  #L460c4e.  v0:= temp;
  #L460c50.  return v0;
}
procedure `long` `readSFixed64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readSFixed64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4613c8.  call temp:= `readRawLittleEndian64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawLittleEndian64:()J` @kind virtual;
  #L4613ce.  v0:= temp @kind wide;
  #L4613d0.  return v0 @kind wide;
}
procedure `int` `readSInt32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readSInt32:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460c64.  call temp:= `readRawVarint32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint32:()I` @kind virtual;
  #L460c6a.  v0:= temp;
  #L460c6c.  call temp:= `decodeZigZag32`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.decodeZigZag32:(I)I` @kind static;
  #L460c72.  v0:= temp;
  #L460c74.  return v0;
}
procedure `long` `readSInt64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readSInt64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4613e4.  call temp:= `readRawVarint64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint64:()J` @kind virtual;
  #L4613ea.  v0:= temp @kind wide;
  #L4613ec.  call temp:= `decodeZigZag64`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.decodeZigZag64:(J)J` @kind static;
  #L4613f2.  v0:= temp @kind wide;
  #L4613f4.  return v0 @kind wide;
}
procedure `java.lang.String` `readString`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v10 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L460d1c.  call temp:= `readRawVarint32`(v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint32:()I` @kind virtual;
  #L460d22.  v0:= temp;
  #L460d24.  if v0 <= 0 then goto L460d6c;
  #L460d28.  v8:= (`long`) v0 @kind i2l;
  #L460d2a.  v1:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.s` @type ^`long` @kind wide;
  #L460d2e.  v3:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L460d32.  v1:= v1 - v3 @kind long;
  #L460d34.  v5:= lcmp(v8, v1);
  #L460d38.  if v5 > 0 then goto L460d6c;
  #L460d3c.  v0:= new `byte`[v0];
  #L460d40.  v5:= 0L;
  #L460d44.  v1:= v3 @kind wide;
  #L460d46.  v3:= v0 @kind object;
  #L460d48.  v4:= v5 @kind wide;
  #L460d4a.  v6:= v8 @kind wide;
  #L460d4c.  call `n`(v1, v3, v4, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/t0;.n:(J[BJJ)V` @kind static;
  #L460d52.  v1:= new `java.lang.String`;
  #L460d56.  v2:= `@@com.google.crypto.tink.shaded.protobuf.Internal.a` @type ^`java.nio.charset.Charset` @kind object;
  #L460d5a.  call `<init>`(v1, v0, v2) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L460d60.  v2:= v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L460d64.  v2:= v2 + v8 @kind long;
  #L460d66.  v10.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v2 @kind wide;
  #L460d6a.  return v1 @kind object;
  #L460d6c.  if v0 <= 0 then goto L460d98;
  #L460d70.  call temp:= `i`(v10) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.i:()I` @kind direct;
  #L460d76.  v1:= temp;
  #L460d78.  if v0 > v1 then goto L460d98;
  #L460d7c.  v1:= new `byte`[v0];
  #L460d80.  v2:= 0I;
  #L460d82.  call `f`(v10, v1, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.f:([BII)V` @kind direct;
  #L460d88.  v0:= new `java.lang.String`;
  #L460d8c.  v2:= `@@com.google.crypto.tink.shaded.protobuf.Internal.a` @type ^`java.nio.charset.Charset` @kind object;
  #L460d90.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L460d96.  return v0 @kind object;
  #L460d98.  if v0 != 0 then goto L460da2;
  #L460d9c.  v0:= "" @kind object;
  #L460da0.  return v0 @kind object;
  #L460da2.  if v0 >= 0 then goto L460db0;
  #L460da6.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L460dac.  v0:= temp @kind object;
  #L460dae.  throw v0;
  #L460db0.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L460db6.  v0:= temp @kind object;
  #L460db8.  throw v0;
}
procedure `java.lang.String` `readStringRequireUtf8`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v8 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readStringRequireUtf8:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L460dcc.  call temp:= `readRawVarint32`(v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint32:()I` @kind virtual;
  #L460dd2.  v0:= temp;
  #L460dd4.  if v0 <= 0 then goto L460e0c;
  #L460dd8.  v1:= (`long`) v0 @kind i2l;
  #L460dda.  v3:= v8.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.s` @type ^`long` @kind wide;
  #L460dde.  v5:= v8.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L460de2.  v3:= v3 - v5 @kind long;
  #L460de4.  v7:= lcmp(v1, v3);
  #L460de8.  if v7 > 0 then goto L460e0c;
  #L460dec.  v3:= v8.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.q` @type ^`long` @kind wide;
  #L460df0.  v5:= v5 - v3 @kind long;
  #L460df2.  v3:= (`int`) v5 @kind l2i;
  #L460df4.  v4:= v8.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.g` @type ^`java.nio.ByteBuffer` @kind object;
  #L460df8.  call temp:= `g`(v4, v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.g:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;` @kind static;
  #L460dfe.  v0:= temp @kind object;
  #L460e00.  v3:= v8.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L460e04.  v3:= v3 + v1 @kind long;
  #L460e06.  v8.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v3 @kind wide;
  #L460e0a.  return v0 @kind object;
  #L460e0c.  if v0 < 0 then goto L460e32;
  #L460e10.  call temp:= `i`(v8) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.i:()I` @kind direct;
  #L460e16.  v1:= temp;
  #L460e18.  if v0 > v1 then goto L460e32;
  #L460e1c.  v1:= new `byte`[v0];
  #L460e20.  v2:= 0I;
  #L460e22.  call `f`(v8, v1, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.f:([BII)V` @kind direct;
  #L460e28.  call temp:= `h`(v1, v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/u0;.h:([BII)Ljava/lang/String;` @kind static;
  #L460e2e.  v0:= temp @kind object;
  #L460e30.  return v0 @kind object;
  #L460e32.  if v0 != 0 then goto L460e3c;
  #L460e36.  v0:= "" @kind object;
  #L460e3a.  return v0 @kind object;
  #L460e3c.  if v0 > 0 then goto L460e4a;
  #L460e40.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L460e46.  v0:= temp @kind object;
  #L460e48.  throw v0;
  #L460e4a.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L460e50.  v0:= temp @kind object;
  #L460e52.  throw v0;
}
procedure `int` `readTag`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readTag:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460c88.  call temp:= `isAtEnd`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.isAtEnd:()Z` @kind virtual;
  #L460c8e.  v0:= temp;
  #L460c90.  if v0 == 0 then goto L460c9c;
  #L460c94.  v0:= 0I;
  #L460c96.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.m` @type ^`int` := v0;
  #L460c9a.  return v0;
  #L460c9c.  call temp:= `readRawVarint32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint32:()I` @kind virtual;
  #L460ca2.  v0:= temp;
  #L460ca4.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.m` @type ^`int` := v0;
  #L460ca8.  call temp:= `getTagFieldNumber`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagFieldNumber:(I)I` @kind static;
  #L460cae.  v0:= temp;
  #L460cb0.  if v0 == 0 then goto L460cba;
  #L460cb4.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.m` @type ^`int`;
  #L460cb8.  return v0;
  #L460cba.  call temp:= `b`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.b:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L460cc0.  v0:= temp @kind object;
  #L460cc2.  throw v0;
}
procedure `int` `readUInt32`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readUInt32:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L460cd4.  call temp:= `readRawVarint32`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint32:()I` @kind virtual;
  #L460cda.  v0:= temp;
  #L460cdc.  return v0;
}
procedure `long` `readUInt64`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readUInt64:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L461408.  call temp:= `readRawVarint64`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint64:()J` @kind virtual;
  #L46140e.  v0:= temp @kind wide;
  #L461410.  return v0 @kind wide;
}
procedure `void` `readUnknownGroup`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v1 @kind this, `int` v2 , `com.google.crypto.tink.shaded.protobuf.MessageLite$Builder` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readUnknownGroup:(ILcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L461688.  call temp:= `getEmptyRegistry`() @signature `Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;.getEmptyRegistry:()Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;` @kind static;
  #L46168e.  v0:= temp @kind object;
  #L461690.  call `readGroup`(v1, v2, v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readGroup:(ILcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)V` @kind virtual;
  #L461696.  return @kind void;
}
procedure `void` `resetSizeCounter`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.resetSizeCounter:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4616ec.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.n` @type ^`int`;
  #L4616f0.  v0:= (`long`) v0 @kind i2l;
  #L4616f2.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L4616f6.  v0:= v0 + v2 @kind long;
  #L4616f8.  v2:= v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.q` @type ^`long` @kind wide;
  #L4616fc.  v0:= v0 - v2 @kind long;
  #L4616fe.  v1:= (`int`) v0 @kind l2i;
  #L461700.  v4.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.o` @type ^`int` := v1;
  #L461704.  return @kind void;
}
procedure `boolean` `skipField`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v4 @kind this, `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.skipField:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L460504.  call temp:= `getTagWireType`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L46050a.  v0:= temp;
  #L46050c.  v1:= 1I;
  #L46050e.  if v0 == 0 then goto L46057e;
  #L460512.  if v0 == v1 then goto L460572;
  #L460516.  v2:= 2I;
  #L460518.  if v0 == v2 then goto L460562;
  #L46051c.  v2:= 3I;
  #L46051e.  v3:= 4I;
  #L460520.  if v0 == v2 then goto L460544;
  #L460524.  if v0 == v3 then goto L460540;
  #L460528.  v5:= 5I;
  #L46052a.  if v0 != v5 then goto L460536;
  #L46052e.  call `skipRawBytes`(v4, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.skipRawBytes:(I)V` @kind virtual;
  #L460534.  return v1;
  #L460536.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L46053c.  v5:= temp @kind object;
  #L46053e.  throw v5;
  #L460540.  v5:= 0I;
  #L460542.  return v5;
  #L460544.  call `skipMessage`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.skipMessage:()V` @kind virtual;
  #L46054a.  call temp:= `getTagFieldNumber`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagFieldNumber:(I)I` @kind static;
  #L460550.  v5:= temp;
  #L460552.  call temp:= `a`(v5, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L460558.  v5:= temp;
  #L46055a.  call `checkLastTagWas`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.checkLastTagWas:(I)V` @kind virtual;
  #L460560.  return v1;
  #L460562.  call temp:= `readRawVarint32`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawVarint32:()I` @kind virtual;
  #L460568.  v5:= temp;
  #L46056a.  call `skipRawBytes`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.skipRawBytes:(I)V` @kind virtual;
  #L460570.  return v1;
  #L460572.  v5:= 8I;
  #L460576.  call `skipRawBytes`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.skipRawBytes:(I)V` @kind virtual;
  #L46057c.  return v1;
  #L46057e.  call `j`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.j:()V` @kind direct;
  #L460584.  return v1;
}
procedure `boolean` `skipField`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v4 @kind this, `int` v5 , `com.google.crypto.tink.shaded.protobuf.CodedOutputStream` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.skipField:(ILcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L460598.  call temp:= `getTagWireType`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagWireType:(I)I` @kind static;
  #L46059e.  v0:= temp;
  #L4605a0.  v1:= 1I;
  #L4605a2.  if v0 == 0 then goto L46063c;
  #L4605a6.  if v0 == v1 then goto L460626;
  #L4605aa.  v2:= 2I;
  #L4605ac.  if v0 == v2 then goto L460610;
  #L4605b0.  v2:= 3I;
  #L4605b2.  v3:= 4I;
  #L4605b4.  if v0 == v2 then goto L4605e6;
  #L4605b8.  if v0 == v3 then goto L4605e2;
  #L4605bc.  v2:= 5I;
  #L4605be.  if v0 != v2 then goto L4605d8;
  #L4605c2.  call temp:= `readRawLittleEndian32`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawLittleEndian32:()I` @kind virtual;
  #L4605c8.  v0:= temp;
  #L4605ca.  call `writeRawVarint32`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeRawVarint32:(I)V` @kind virtual;
  #L4605d0.  call `writeFixed32NoTag`(v6, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeFixed32NoTag:(I)V` @kind virtual;
  #L4605d6.  return v1;
  #L4605d8.  call temp:= `d`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.d:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;` @kind static;
  #L4605de.  v5:= temp @kind object;
  #L4605e0.  throw v5;
  #L4605e2.  v5:= 0I;
  #L4605e4.  return v5;
  #L4605e6.  call `writeRawVarint32`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeRawVarint32:(I)V` @kind virtual;
  #L4605ec.  call `skipMessage`(v4, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.skipMessage:(Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;)V` @kind virtual;
  #L4605f2.  call temp:= `getTagFieldNumber`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.getTagFieldNumber:(I)I` @kind static;
  #L4605f8.  v5:= temp;
  #L4605fa.  call temp:= `a`(v5, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/WireFormat;.a:(II)I` @kind static;
  #L460600.  v5:= temp;
  #L460602.  call `checkLastTagWas`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.checkLastTagWas:(I)V` @kind virtual;
  #L460608.  call `writeRawVarint32`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeRawVarint32:(I)V` @kind virtual;
  #L46060e.  return v1;
  #L460610.  call temp:= `readBytes`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readBytes:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L460616.  v0:= temp @kind object;
  #L460618.  call `writeRawVarint32`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeRawVarint32:(I)V` @kind virtual;
  #L46061e.  call `writeBytesNoTag`(v6, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeBytesNoTag:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)V` @kind virtual;
  #L460624.  return v1;
  #L460626.  call temp:= `readRawLittleEndian64`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readRawLittleEndian64:()J` @kind virtual;
  #L46062c.  v2:= temp @kind wide;
  #L46062e.  call `writeRawVarint32`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeRawVarint32:(I)V` @kind virtual;
  #L460634.  call `writeFixed64NoTag`(v6, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeFixed64NoTag:(J)V` @kind virtual;
  #L46063a.  return v1;
  #L46063c.  call temp:= `readInt64`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readInt64:()J` @kind virtual;
  #L460642.  v2:= temp @kind wide;
  #L460644.  call `writeRawVarint32`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeRawVarint32:(I)V` @kind virtual;
  #L46064a.  call `writeUInt64NoTag`(v6, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;.writeUInt64NoTag:(J)V` @kind virtual;
  #L460650.  return v1;
}
procedure `void` `skipMessage`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.skipMessage:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L461718.  call temp:= `readTag`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readTag:()I` @kind virtual;
  #L46171e.  v0:= temp;
  #L461720.  if v0 == 0 then goto L461730;
  #L461724.  call temp:= `skipField`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.skipField:(I)Z` @kind virtual;
  #L46172a.  v0:= temp;
  #L46172c.  if v0 != 0 then goto L461718;
  #L461730.  return @kind void;
}
procedure `void` `skipMessage`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.CodedOutputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.skipMessage:(Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L461744.  call temp:= `readTag`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.readTag:()I` @kind virtual;
  #L46174a.  v0:= temp;
  #L46174c.  if v0 == 0 then goto L46175c;
  #L461750.  call temp:= `skipField`(v1, v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.skipField:(ILcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;)Z` @kind virtual;
  #L461756.  v0:= temp;
  #L461758.  if v0 != 0 then goto L461744;
  #L46175c.  return @kind void;
}
procedure `void` `skipRawBytes`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c` v6 @kind this, `int` v7 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.skipRawBytes:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L461770.  if v7 < 0 then goto L4617d8;
  #L461774.  v0:= (`long`) v7 @kind i2l;
  #L461776.  v2:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.j` @type ^`int`;
  #L46177a.  v3:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.n` @type ^`int`;
  #L46177e.  v2:= v2 - v3 @kind int;
  #L461780.  v2:= (`long`) v2 @kind i2l;
  #L461782.  v4:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L461786.  v2:= v2 - v4 @kind long;
  #L461788.  v4:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.q` @type ^`long` @kind wide;
  #L46178c.  v2:= v2 + v4 @kind long;
  #L46178e.  v4:= lcmp(v0, v2);
  #L461792.  if v4 > 0 then goto L4617d8;
  #L461796.  if v7 <= 0 then goto L4617d6;
  #L46179a.  call temp:= `d`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.d:()J` @kind direct;
  #L4617a0.  v0:= temp @kind wide;
  #L4617a2.  v2:= 0L;
  #L4617a6.  v4:= lcmp(v0, v2);
  #L4617aa.  if v4 != 0 then goto L4617b4;
  #L4617ae.  call `e`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.e:()V` @kind direct;
  #L4617b4.  call temp:= `d`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.d:()J` @kind direct;
  #L4617ba.  v0:= temp @kind wide;
  #L4617bc.  v1:= (`int`) v0 @kind l2i;
  #L4617be.  call temp:= `min`(v7, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L4617c4.  v0:= temp;
  #L4617c6.  v7:= v7 - v0 @kind int;
  #L4617c8.  v1:= v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` @kind wide;
  #L4617cc.  v3:= (`long`) v0 @kind i2l;
  #L4617ce.  v1:= v1 + v3 @kind long;
  #L4617d0.  v6.`com.google.crypto.tink.shaded.protobuf.CodedInputStream$c.p` @type ^`long` := v1 @kind wide;
  #L4617d4.  goto L461796;
  #L4617d6.  return @kind void;
  #L4617d8.  if v7 >= 0 then goto L4617e6;
  #L4617dc.  call temp:= `f`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.f:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L4617e2.  v7:= temp @kind object;
  #L4617e4.  throw v7;
  #L4617e6.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L4617ec.  v7:= temp @kind object;
  #L4617ee.  throw v7;
}
