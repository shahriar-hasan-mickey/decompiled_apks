record `com.google.crypto.tink.shaded.protobuf.l0` @kind class @AccessFlag FINAL extends `com.google.crypto.tink.shaded.protobuf.ByteString` @kind class {
  `int` `com.google.crypto.tink.shaded.protobuf.l0.d` @AccessFlag PRIVATE_FINAL;
  `com.google.crypto.tink.shaded.protobuf.ByteString` `com.google.crypto.tink.shaded.protobuf.l0.e` @AccessFlag PRIVATE_FINAL;
  `com.google.crypto.tink.shaded.protobuf.ByteString` `com.google.crypto.tink.shaded.protobuf.l0.f` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.crypto.tink.shaded.protobuf.l0.g` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.crypto.tink.shaded.protobuf.l0.h` @AccessFlag PRIVATE_FINAL;
}
global `int`[] `@@com.google.crypto.tink.shaded.protobuf.l0.i` @AccessFlag STATIC_FINAL;
global `long` `@@com.google.crypto.tink.shaded.protobuf.l0.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4827f8.  v0:= 47I;
  #L4827fc.  v0:= new `int`[v0];
  #L482800.  goto L48280c;
  #L482806.  `@@com.google.crypto.tink.shaded.protobuf.l0.i` @type ^`int`[] := v0 @kind object;
  #L48280a.  return @kind void;
  #L48280c.  v0:= (1I, 1I, 2I, 3I, 5I, 8I, 13I, 21I, 34I, 55I, 89I, 144I, 233I, 377I, 610I, 987I, 1597I, 2584I, 4181I, 6765I, 10946I, 17711I, 28657I, 46368I, 75025I, 121393I, 196418I, 317811I, 514229I, 832040I, 1346269I, 2178309I, 3524578I, 5702887I, 9227465I, 14930352I, 24157817I, 39088169I, 63245986I, 102334155I, 165580141I, 267914296I, 433494437I, 701408733I, 1134903170I, 1836311903I, 2147483647I) @kind object;
  #L4828cf.  goto L482806;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.l0` v2 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v3 @kind object, `com.google.crypto.tink.shaded.protobuf.ByteString` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ByteString;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4828e0.  call `<init>`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.<init>:()V` @kind direct;
  #L4828e6.  v2.`com.google.crypto.tink.shaded.protobuf.l0.e` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` := v3 @kind object;
  #L4828ea.  v2.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` := v4 @kind object;
  #L4828ee.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L4828f4.  v0:= temp;
  #L4828f6.  v2.`com.google.crypto.tink.shaded.protobuf.l0.g` @type ^`int` := v0;
  #L4828fa.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L482900.  v1:= temp;
  #L482902.  v0:= v0 + v1 @kind int;
  #L482904.  v2.`com.google.crypto.tink.shaded.protobuf.l0.d` @type ^`int` := v0;
  #L482908.  call temp:= `getTreeDepth`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.getTreeDepth:()I` @kind virtual;
  #L48290e.  v3:= temp;
  #L482910.  call temp:= `getTreeDepth`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.getTreeDepth:()I` @kind virtual;
  #L482916.  v4:= temp;
  #L482918.  call temp:= `max`(v3, v4) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L48291e.  v3:= temp;
  #L482920.  v3:= v3 + 1;
  #L482924.  v2.`com.google.crypto.tink.shaded.protobuf.l0.h` @type ^`int` := v3;
  #L482928.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.l0` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.ByteString` v2 @kind object, `com.google.crypto.tink.shaded.protobuf.l0$a` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/l0$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L48293c.  call `<init>`(v0, v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ByteString;)V` @kind direct;
  #L482942.  return @kind void;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `n`(`com.google.crypto.tink.shaded.protobuf.l0` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.n:(Lcom/google/crypto/tink/shaded/protobuf/l0;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L482384.  v0:= v0.`com.google.crypto.tink.shaded.protobuf.l0.e` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L482388.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `o`(`com.google.crypto.tink.shaded.protobuf.l0` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.o:(Lcom/google/crypto/tink/shaded/protobuf/l0;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L48239c.  v0:= v0.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L4823a0.  return v0 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `p`(`com.google.crypto.tink.shaded.protobuf.ByteString` v5 @kind object, `com.google.crypto.tink.shaded.protobuf.ByteString` v6 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.p:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4823b4.  call temp:= `size`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L4823ba.  v0:= temp;
  #L4823bc.  if v0 != 0 then goto L4823c2;
  #L4823c0.  return v5 @kind object;
  #L4823c2.  call temp:= `size`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L4823c8.  v0:= temp;
  #L4823ca.  if v0 != 0 then goto L4823d0;
  #L4823ce.  return v6 @kind object;
  #L4823d0.  call temp:= `size`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L4823d6.  v0:= temp;
  #L4823d8.  call temp:= `size`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L4823de.  v1:= temp;
  #L4823e0.  v0:= v0 + v1 @kind int;
  #L4823e2.  v1:= 128I;
  #L4823e6.  if v0 >= v1 then goto L4823f4;
  #L4823ea.  call temp:= `q`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.q:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L4823f0.  v5:= temp @kind object;
  #L4823f2.  return v5 @kind object;
  #L4823f4.  v2:= instanceof @variable v5 @type ^`com.google.crypto.tink.shaded.protobuf.l0` @kind boolean;
  #L4823f8.  if v2 == 0 then goto L482486;
  #L4823fc.  v2:= v5 @kind object;
  #L4823fe.  v2:= (`com.google.crypto.tink.shaded.protobuf.l0`) v2 @kind object;
  #L482402.  v3:= v2.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L482406.  call temp:= `size`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L48240c.  v3:= temp;
  #L48240e.  call temp:= `size`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L482414.  v4:= temp;
  #L482416.  v3:= v3 + v4 @kind int;
  #L482418.  if v3 >= v1 then goto L482438;
  #L48241c.  v5:= v2.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L482420.  call temp:= `q`(v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.q:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L482426.  v5:= temp @kind object;
  #L482428.  v6:= new `com.google.crypto.tink.shaded.protobuf.l0`;
  #L48242c.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0.e` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L482430.  call `<init>`(v6, v0, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ByteString;)V` @kind direct;
  #L482436.  return v6 @kind object;
  #L482438.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.l0.e` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L48243c.  call temp:= `getTreeDepth`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.getTreeDepth:()I` @kind virtual;
  #L482442.  v1:= temp;
  #L482444.  v3:= v2.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L482448.  call temp:= `getTreeDepth`(v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.getTreeDepth:()I` @kind virtual;
  #L48244e.  v3:= temp;
  #L482450.  if v1 <= v3 then goto L482486;
  #L482454.  call temp:= `getTreeDepth`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.getTreeDepth:()I` @kind virtual;
  #L48245a.  v1:= temp;
  #L48245c.  call temp:= `getTreeDepth`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.getTreeDepth:()I` @kind virtual;
  #L482462.  v3:= temp;
  #L482464.  if v1 <= v3 then goto L482486;
  #L482468.  v5:= new `com.google.crypto.tink.shaded.protobuf.l0`;
  #L48246c.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L482470.  call `<init>`(v5, v0, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ByteString;)V` @kind direct;
  #L482476.  v6:= new `com.google.crypto.tink.shaded.protobuf.l0`;
  #L48247a.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0.e` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L48247e.  call `<init>`(v6, v0, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ByteString;)V` @kind direct;
  #L482484.  return v6 @kind object;
  #L482486.  call temp:= `getTreeDepth`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.getTreeDepth:()I` @kind virtual;
  #L48248c.  v1:= temp;
  #L48248e.  call temp:= `getTreeDepth`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.getTreeDepth:()I` @kind virtual;
  #L482494.  v2:= temp;
  #L482496.  call temp:= `max`(v1, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L48249c.  v1:= temp;
  #L48249e.  v1:= v1 + 1;
  #L4824a2.  call temp:= `s`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.s:(I)I` @kind static;
  #L4824a8.  v1:= temp;
  #L4824aa.  if v0 < v1 then goto L4824ba;
  #L4824ae.  v0:= new `com.google.crypto.tink.shaded.protobuf.l0`;
  #L4824b2.  call `<init>`(v0, v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ByteString;)V` @kind direct;
  #L4824b8.  return v0 @kind object;
  #L4824ba.  v0:= new `com.google.crypto.tink.shaded.protobuf.l0$b`;
  #L4824be.  v1:= 0I;
  #L4824c0.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$b;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/l0$a;)V` @kind direct;
  #L4824c6.  call temp:= `a`(v0, v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$b;.a:(Lcom/google/crypto/tink/shaded/protobuf/l0$b;Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L4824cc.  v5:= temp @kind object;
  #L4824ce.  return v5 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `q`(`com.google.crypto.tink.shaded.protobuf.ByteString` v4 @kind object, `com.google.crypto.tink.shaded.protobuf.ByteString` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.q:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4824e0.  call temp:= `size`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L4824e6.  v0:= temp;
  #L4824e8.  call temp:= `size`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L4824ee.  v1:= temp;
  #L4824f0.  v2:= v0 + v1 @kind int;
  #L4824f4.  v2:= new `byte`[v2];
  #L4824f8.  v3:= 0I;
  #L4824fa.  call `copyTo`(v4, v2, v3, v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyTo:([BIII)V` @kind virtual;
  #L482500.  call `copyTo`(v5, v2, v3, v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyTo:([BIII)V` @kind virtual;
  #L482506.  call temp:= `k`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.k:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48250c.  v4:= temp @kind object;
  #L48250e.  return v4 @kind object;
}
procedure `boolean` `r`(`com.google.crypto.tink.shaded.protobuf.l0` v11 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteString` v12 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.r:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4821f0.  v0:= new `com.google.crypto.tink.shaded.protobuf.l0$c`;
  #L4821f4.  v1:= 0I;
  #L4821f6.  call `<init>`(v0, v11, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$c;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/l0$a;)V` @kind direct;
  #L4821fc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L482202.  v2:= temp @kind object;
  #L482204.  v2:= (`com.google.crypto.tink.shaded.protobuf.ByteString$h`) v2 @kind object;
  #L482208.  v3:= new `com.google.crypto.tink.shaded.protobuf.l0$c`;
  #L48220c.  call `<init>`(v3, v12, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$c;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/l0$a;)V` @kind direct;
  #L482212.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L482218.  v12:= temp @kind object;
  #L48221a.  v12:= (`com.google.crypto.tink.shaded.protobuf.ByteString$h`) v12 @kind object;
  #L48221e.  v1:= 0I;
  #L482220.  v4:= 0I;
  #L482222.  v5:= 0I;
  #L482224.  v6:= 0I;
  #L482226.  call temp:= `size`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L48222c.  v7:= temp;
  #L48222e.  v7:= v7 - v4 @kind int;
  #L482230.  call temp:= `size`(v12) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L482236.  v8:= temp;
  #L482238.  v8:= v8 - v5 @kind int;
  #L48223a.  call temp:= `min`(v7, v8) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L482240.  v9:= temp;
  #L482242.  if v4 != 0 then goto L482250;
  #L482246.  call temp:= `n`(v2, v12, v5, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$h;.n:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;II)Z` @kind virtual;
  #L48224c.  v10:= temp;
  #L48224e.  goto L482258;
  #L482250.  call temp:= `n`(v12, v2, v4, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString$h;.n:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;II)Z` @kind virtual;
  #L482256.  v10:= temp;
  #L482258.  if v10 != 0 then goto L48225e;
  #L48225c.  return v1;
  #L48225e.  v6:= v6 + v9 @kind int;
  #L482260.  v10:= v11.`com.google.crypto.tink.shaded.protobuf.l0.d` @type ^`int`;
  #L482264.  if v6 < v10 then goto L48227c;
  #L482268.  if v6 != v10 then goto L482270;
  #L48226c.  v12:= 1I;
  #L48226e.  return v12;
  #L482270.  v12:= new `java.lang.IllegalStateException`;
  #L482274.  call `<init>`(v12) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L48227a.  throw v12;
  #L48227c.  if v9 != v7 then goto L482290;
  #L482280.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L482286.  v2:= temp @kind object;
  #L482288.  v2:= (`com.google.crypto.tink.shaded.protobuf.ByteString$h`) v2 @kind object;
  #L48228c.  v4:= 0I;
  #L48228e.  goto L482292;
  #L482290.  v4:= v4 + v9 @kind int;
  #L482292.  if v9 != v8 then goto L4822a6;
  #L482296.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L48229c.  v12:= temp @kind object;
  #L48229e.  v12:= (`com.google.crypto.tink.shaded.protobuf.ByteString$h`) v12 @kind object;
  #L4822a2.  v5:= 0I;
  #L4822a4.  goto L482226;
  #L4822a6.  v5:= v5 + v9 @kind int;
  #L4822a8.  goto L482226;
}
procedure `void` `readObject`(`com.google.crypto.tink.shaded.protobuf.l0` v1 @kind this, `java.io.ObjectInputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4829d4.  v2:= new `java.io.InvalidObjectException`;
  #L4829d8.  v0:= "RopeByteStream instances are not to be serialized directly" @kind object;
  #L4829dc.  call `<init>`(v2, v0) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4829e2.  throw v2;
}
procedure `int` `s`(`int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.s:(I)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L482600.  v0:= `@@com.google.crypto.tink.shaded.protobuf.l0.i` @type ^`int`[] @kind object;
  #L482604.  v1:= length @variable v0;
  #L482606.  if v2 < v1 then goto L482612;
  #L48260a.  v2:= 2147483647I;
  #L482610.  return v2;
  #L482612.  v2:= v0[v2];
  #L482616.  return v2;
}
procedure `java.nio.ByteBuffer` `asReadOnlyByteBuffer`(`com.google.crypto.tink.shaded.protobuf.l0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.asReadOnlyByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L482764.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L48276a.  v0:= temp @kind object;
  #L48276c.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L482772.  v0:= temp @kind object;
  #L482774.  call temp:= `asReadOnlyBuffer`(v0) @signature `Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L48277a.  v0:= temp @kind object;
  #L48277c.  return v0 @kind object;
}
procedure `java.util.List` `asReadOnlyByteBufferList`(`com.google.crypto.tink.shaded.protobuf.l0` v3 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.asReadOnlyByteBufferList:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4827ac.  v0:= new `java.util.ArrayList`;
  #L4827b0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4827b6.  v1:= new `com.google.crypto.tink.shaded.protobuf.l0$c`;
  #L4827ba.  v2:= 0I;
  #L4827bc.  call `<init>`(v1, v3, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$c;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/l0$a;)V` @kind direct;
  #L4827c2.  call temp:= `hasNext`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$c;.hasNext:()Z` @kind virtual;
  #L4827c8.  v2:= temp;
  #L4827ca.  if v2 == 0 then goto L4827e6;
  #L4827ce.  call temp:= `c`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$c;.c:()Lcom/google/crypto/tink/shaded/protobuf/ByteString$h;` @kind virtual;
  #L4827d4.  v2:= temp @kind object;
  #L4827d6.  call temp:= `asReadOnlyByteBuffer`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.asReadOnlyByteBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L4827dc.  v2:= temp @kind object;
  #L4827de.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4827e4.  goto L4827c2;
  #L4827e6.  return v0 @kind object;
}
procedure `byte` `byteAt`(`com.google.crypto.tink.shaded.protobuf.l0` v1 @kind this, `int` v2 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.byteAt:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L482328.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.l0.d` @type ^`int`;
  #L48232c.  call `c`(v2, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.c:(II)V` @kind static;
  #L482332.  call temp:= `e`(v1, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.e:(I)B` @kind virtual;
  #L482338.  v2:= temp;
  #L48233a.  return v2;
}
procedure `void` `copyTo`(`com.google.crypto.tink.shaded.protobuf.l0` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.copyTo:(Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L482954.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.l0.e` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L482958.  call `copyTo`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyTo:(Ljava/nio/ByteBuffer;)V` @kind virtual;
  #L48295e.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L482962.  call `copyTo`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyTo:(Ljava/nio/ByteBuffer;)V` @kind virtual;
  #L482968.  return @kind void;
}
procedure `void` `copyToInternal`(`com.google.crypto.tink.shaded.protobuf.l0` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.copyToInternal:([BIII)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L48297c.  v0:= v4 + v6 @kind int;
  #L482980.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.l0.g` @type ^`int`;
  #L482984.  if v0 > v1 then goto L482994;
  #L482988.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0.e` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L48298c.  call `copyToInternal`(v0, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyToInternal:([BIII)V` @kind virtual;
  #L482992.  goto L4829c2;
  #L482994.  if v4 < v1 then goto L4829a6;
  #L482998.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L48299c.  v4:= v4 - v1 @kind int;
  #L48299e.  call `copyToInternal`(v0, v3, v4, v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyToInternal:([BIII)V` @kind virtual;
  #L4829a4.  goto L4829c2;
  #L4829a6.  v1:= v1 - v4 @kind int;
  #L4829a8.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0.e` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L4829ac.  call `copyToInternal`(v0, v3, v4, v5, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyToInternal:([BIII)V` @kind virtual;
  #L4829b2.  v4:= v2.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L4829b6.  v0:= 0I;
  #L4829b8.  v5:= v5 + v1 @kind int;
  #L4829ba.  v6:= v6 - v1 @kind int;
  #L4829bc.  call `copyToInternal`(v4, v3, v0, v5, v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.copyToInternal:([BIII)V` @kind virtual;
  #L4829c2.  return @kind void;
}
procedure `byte` `e`(`com.google.crypto.tink.shaded.protobuf.l0` v2 @kind this, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.e:(I)B` @AccessFlag  {
    temp;
    v0;
    v1;

  #L48234c.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0.g` @type ^`int`;
  #L482350.  if v3 >= v0 then goto L482362;
  #L482354.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0.e` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L482358.  call temp:= `e`(v0, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.e:(I)B` @kind virtual;
  #L48235e.  v3:= temp;
  #L482360.  return v3;
  #L482362.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L482366.  v3:= v3 - v0 @kind int;
  #L482368.  call temp:= `e`(v1, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.e:(I)B` @kind virtual;
  #L48236e.  v3:= temp;
  #L482370.  return v3;
}
procedure `boolean` `equals`(`com.google.crypto.tink.shaded.protobuf.l0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L482184.  v0:= 1I;
  #L482186.  if v5 != v4 then goto L48218c;
  #L48218a.  return v0;
  #L48218c.  v1:= instanceof @variable v5 @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind boolean;
  #L482190.  v2:= 0I;
  #L482192.  if v1 != 0 then goto L482198;
  #L482196.  return v2;
  #L482198.  v5:= (`com.google.crypto.tink.shaded.protobuf.ByteString`) v5 @kind object;
  #L48219c.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.l0.d` @type ^`int`;
  #L4821a0.  call temp:= `size`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L4821a6.  v3:= temp;
  #L4821a8.  if v1 == v3 then goto L4821ae;
  #L4821ac.  return v2;
  #L4821ae.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.l0.d` @type ^`int`;
  #L4821b2.  if v1 != 0 then goto L4821b8;
  #L4821b6.  return v0;
  #L4821b8.  call temp:= `peekCachedHashCode`(v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.peekCachedHashCode:()I` @kind virtual;
  #L4821be.  v0:= temp;
  #L4821c0.  call temp:= `peekCachedHashCode`(v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.peekCachedHashCode:()I` @kind virtual;
  #L4821c6.  v1:= temp;
  #L4821c8.  if v0 == 0 then goto L4821d6;
  #L4821cc.  if v1 == 0 then goto L4821d6;
  #L4821d0.  if v0 == v1 then goto L4821d6;
  #L4821d4.  return v2;
  #L4821d6.  call temp:= `r`(v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.r:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;)Z` @kind direct;
  #L4821dc.  v5:= temp;
  #L4821de.  return v5;
}
procedure `int` `getTreeDepth`(`com.google.crypto.tink.shaded.protobuf.l0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.getTreeDepth:()I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L4825e8.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.l0.h` @type ^`int`;
  #L4825ec.  return v0;
}
procedure `boolean` `isBalanced`(`com.google.crypto.tink.shaded.protobuf.l0` v2 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.isBalanced:()Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4822bc.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0.d` @type ^`int`;
  #L4822c0.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.l0.h` @type ^`int`;
  #L4822c4.  call temp:= `s`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.s:(I)I` @kind static;
  #L4822ca.  v1:= temp;
  #L4822cc.  if v0 < v1 then goto L4822d4;
  #L4822d0.  v0:= 1I;
  #L4822d2.  goto L4822d6;
  #L4822d4.  v0:= 0I;
  #L4822d6.  return v0;
}
procedure `boolean` `isValidUtf8`(`com.google.crypto.tink.shaded.protobuf.l0` v4 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.isValidUtf8:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4822e8.  v0:= v4.`com.google.crypto.tink.shaded.protobuf.l0.e` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L4822ec.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.l0.g` @type ^`int`;
  #L4822f0.  v2:= 0I;
  #L4822f2.  call temp:= `partialIsValidUtf8`(v0, v2, v2, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.partialIsValidUtf8:(III)I` @kind virtual;
  #L4822f8.  v0:= temp;
  #L4822fa.  v1:= v4.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L4822fe.  call temp:= `size`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.size:()I` @kind virtual;
  #L482304.  v3:= temp;
  #L482306.  call temp:= `partialIsValidUtf8`(v1, v0, v2, v3) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.partialIsValidUtf8:(III)I` @kind virtual;
  #L48230c.  v0:= temp;
  #L48230e.  if v0 != 0 then goto L482314;
  #L482312.  v2:= 1I;
  #L482314.  return v2;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString$ByteIterator` `iterator`(`com.google.crypto.tink.shaded.protobuf.l0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.iterator:()Lcom/google/crypto/tink/shaded/protobuf/ByteString$ByteIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4825a8.  v0:= new `com.google.crypto.tink.shaded.protobuf.l0$a`;
  #L4825ac.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$a;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/l0;)V` @kind direct;
  #L4825b2.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`com.google.crypto.tink.shaded.protobuf.l0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L482790.  call temp:= `iterator`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.iterator:()Lcom/google/crypto/tink/shaded/protobuf/ByteString$ByteIterator;` @kind virtual;
  #L482796.  v0:= temp @kind object;
  #L482798.  return v0 @kind object;
}
procedure `void` `m`(`com.google.crypto.tink.shaded.protobuf.l0` v1 @kind this, `com.google.crypto.tink.shaded.protobuf.ByteOutput` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.m:(Lcom/google/crypto/tink/shaded/protobuf/ByteOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L4829f4.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.l0.e` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L4829f8.  call `m`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.m:(Lcom/google/crypto/tink/shaded/protobuf/ByteOutput;)V` @kind virtual;
  #L4829fe.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L482a02.  call `m`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.m:(Lcom/google/crypto/tink/shaded/protobuf/ByteOutput;)V` @kind virtual;
  #L482a08.  return @kind void;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newCodedInput`(`com.google.crypto.tink.shaded.protobuf.l0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.newCodedInput:()Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4825c4.  v0:= new `com.google.crypto.tink.shaded.protobuf.l0$d`;
  #L4825c8.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/l0;)V` @kind direct;
  #L4825ce.  call temp:= `newInstance`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:(Ljava/io/InputStream;)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L4825d4.  v0:= temp @kind object;
  #L4825d6.  return v0 @kind object;
}
procedure `java.io.InputStream` `newInput`(`com.google.crypto.tink.shaded.protobuf.l0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.newInput:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L482700.  v0:= new `com.google.crypto.tink.shaded.protobuf.l0$d`;
  #L482704.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0$d;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/l0;)V` @kind direct;
  #L48270a.  return v0 @kind object;
}
procedure `int` `partialHash`(`com.google.crypto.tink.shaded.protobuf.l0` v2 @kind this, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.partialHash:(III)I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L482628.  v0:= v4 + v5 @kind int;
  #L48262c.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.l0.g` @type ^`int`;
  #L482630.  if v0 > v1 then goto L482642;
  #L482634.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0.e` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L482638.  call temp:= `partialHash`(v0, v3, v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.partialHash:(III)I` @kind virtual;
  #L48263e.  v3:= temp;
  #L482640.  return v3;
  #L482642.  if v4 < v1 then goto L482656;
  #L482646.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L48264a.  v4:= v4 - v1 @kind int;
  #L48264c.  call temp:= `partialHash`(v0, v3, v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.partialHash:(III)I` @kind virtual;
  #L482652.  v3:= temp;
  #L482654.  return v3;
  #L482656.  v1:= v1 - v4 @kind int;
  #L482658.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0.e` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L48265c.  call temp:= `partialHash`(v0, v3, v4, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.partialHash:(III)I` @kind virtual;
  #L482662.  v3:= temp;
  #L482664.  v4:= v2.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L482668.  v0:= 0I;
  #L48266a.  v5:= v5 - v1 @kind int;
  #L48266c.  call temp:= `partialHash`(v4, v3, v0, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.partialHash:(III)I` @kind virtual;
  #L482672.  v3:= temp;
  #L482674.  return v3;
}
procedure `int` `partialIsValidUtf8`(`com.google.crypto.tink.shaded.protobuf.l0` v2 @kind this, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.partialIsValidUtf8:(III)I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L482688.  v0:= v4 + v5 @kind int;
  #L48268c.  v1:= v2.`com.google.crypto.tink.shaded.protobuf.l0.g` @type ^`int`;
  #L482690.  if v0 > v1 then goto L4826a2;
  #L482694.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0.e` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L482698.  call temp:= `partialIsValidUtf8`(v0, v3, v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.partialIsValidUtf8:(III)I` @kind virtual;
  #L48269e.  v3:= temp;
  #L4826a0.  return v3;
  #L4826a2.  if v4 < v1 then goto L4826b6;
  #L4826a6.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L4826aa.  v4:= v4 - v1 @kind int;
  #L4826ac.  call temp:= `partialIsValidUtf8`(v0, v3, v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.partialIsValidUtf8:(III)I` @kind virtual;
  #L4826b2.  v3:= temp;
  #L4826b4.  return v3;
  #L4826b6.  v1:= v1 - v4 @kind int;
  #L4826b8.  v0:= v2.`com.google.crypto.tink.shaded.protobuf.l0.e` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L4826bc.  call temp:= `partialIsValidUtf8`(v0, v3, v4, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.partialIsValidUtf8:(III)I` @kind virtual;
  #L4826c2.  v3:= temp;
  #L4826c4.  v4:= v2.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L4826c8.  v0:= 0I;
  #L4826ca.  v5:= v5 - v1 @kind int;
  #L4826cc.  call temp:= `partialIsValidUtf8`(v4, v3, v0, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.partialIsValidUtf8:(III)I` @kind virtual;
  #L4826d2.  v3:= temp;
  #L4826d4.  return v3;
}
procedure `int` `size`(`com.google.crypto.tink.shaded.protobuf.l0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4826e8.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.l0.d` @type ^`int`;
  #L4826ec.  return v0;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `substring`(`com.google.crypto.tink.shaded.protobuf.l0` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L482520.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.l0.d` @type ^`int`;
  #L482524.  call temp:= `d`(v4, v5, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.d:(III)I` @kind static;
  #L48252a.  v0:= temp;
  #L48252c.  if v0 != 0 then goto L482536;
  #L482530.  v4:= `@@com.google.crypto.tink.shaded.protobuf.ByteString.EMPTY` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L482534.  return v4 @kind object;
  #L482536.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.l0.d` @type ^`int`;
  #L48253a.  if v0 != v1 then goto L482540;
  #L48253e.  return v3 @kind object;
  #L482540.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.l0.g` @type ^`int`;
  #L482544.  if v5 > v0 then goto L482556;
  #L482548.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.l0.e` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L48254c.  call temp:= `substring`(v0, v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L482552.  v4:= temp @kind object;
  #L482554.  return v4 @kind object;
  #L482556.  if v4 < v0 then goto L48256c;
  #L48255a.  v1:= v3.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L48255e.  v4:= v4 - v0 @kind int;
  #L482560.  v5:= v5 - v0 @kind int;
  #L482562.  call temp:= `substring`(v1, v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L482568.  v4:= temp @kind object;
  #L48256a.  return v4 @kind object;
  #L48256c.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.l0.e` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L482570.  call temp:= `substring`(v0, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(I)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L482576.  v4:= temp @kind object;
  #L482578.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L48257c.  v1:= 0I;
  #L48257e.  v2:= v3.`com.google.crypto.tink.shaded.protobuf.l0.g` @type ^`int`;
  #L482582.  v5:= v5 - v2 @kind int;
  #L482584.  call temp:= `substring`(v0, v1, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.substring:(II)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind virtual;
  #L48258a.  v5:= temp @kind object;
  #L48258c.  v0:= new `com.google.crypto.tink.shaded.protobuf.l0`;
  #L482590.  call `<init>`(v0, v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/ByteString;Lcom/google/crypto/tink/shaded/protobuf/ByteString;)V` @kind direct;
  #L482596.  return v0 @kind object;
}
procedure `java.lang.String` `toStringInternal`(`com.google.crypto.tink.shaded.protobuf.l0` v2 @kind this, `java.nio.charset.Charset` v3 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.toStringInternal:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L482740.  v0:= new `java.lang.String`;
  #L482744.  call temp:= `toByteArray`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L48274a.  v1:= temp @kind object;
  #L48274c.  call `<init>`(v0, v1, v3) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L482752.  return v0 @kind object;
}
procedure `java.lang.Object` `writeReplace`(`com.google.crypto.tink.shaded.protobuf.l0` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.writeReplace:()Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;

  #L48271c.  call temp:= `toByteArray`(v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.toByteArray:()[B` @kind virtual;
  #L482722.  v0:= temp @kind object;
  #L482724.  call temp:= `k`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.k:([B)Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @kind static;
  #L48272a.  v0:= temp @kind object;
  #L48272c.  return v0 @kind object;
}
procedure `void` `writeTo`(`com.google.crypto.tink.shaded.protobuf.l0` v1 @kind this, `java.io.OutputStream` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/l0;.writeTo:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L482a1c.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.l0.e` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L482a20.  call `writeTo`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.writeTo:(Ljava/io/OutputStream;)V` @kind virtual;
  #L482a26.  v0:= v1.`com.google.crypto.tink.shaded.protobuf.l0.f` @type ^`com.google.crypto.tink.shaded.protobuf.ByteString` @kind object;
  #L482a2a.  call `writeTo`(v0, v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/ByteString;.writeTo:(Ljava/io/OutputStream;)V` @kind virtual;
  #L482a30.  return @kind void;
}
