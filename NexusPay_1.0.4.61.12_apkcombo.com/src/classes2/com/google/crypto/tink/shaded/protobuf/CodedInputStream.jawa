record `com.google.crypto.tink.shaded.protobuf.CodedInputStream` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `int` `com.google.crypto.tink.shaded.protobuf.CodedInputStream.a` @AccessFlag ;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @AccessFlag ;
  `int` `com.google.crypto.tink.shaded.protobuf.CodedInputStream.c` @AccessFlag ;
  `com.google.crypto.tink.shaded.protobuf.f` `com.google.crypto.tink.shaded.protobuf.CodedInputStream.d` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream` v1 @kind this) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L46640c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L466412.  v0:= 100I;
  #L466416.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @type ^`int` := v0;
  #L46641a.  v0:= 2147483647I;
  #L466420.  v1.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.c` @type ^`int` := v0;
  #L466424.  return @kind void;
}
procedure `void` `<init>`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream` v0 @kind this, `com.google.crypto.tink.shaded.protobuf.CodedInputStream$a` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.<init>:(Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L466438.  call `<init>`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.<init>:()V` @kind direct;
  #L46643e.  return @kind void;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `a`(`java.lang.Iterable` v5 @kind object, `boolean` v6 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.a:(Ljava/lang/Iterable;Z)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L46615c.  call temp:= `iterator`(v5) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L466162.  v0:= temp @kind object;
  #L466164.  v1:= 0I;
  #L466166.  v2:= 0I;
  #L466168.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L46616e.  v3:= temp;
  #L466170.  if v3 == 0 then goto L4661b4;
  #L466174.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L46617a.  v3:= temp @kind object;
  #L46617c.  v3:= (`java.nio.ByteBuffer`) v3 @kind object;
  #L466180.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L466186.  v4:= temp;
  #L466188.  v2:= v2 + v4 @kind int;
  #L46618a.  call temp:= `hasArray`(v3) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L466190.  v4:= temp;
  #L466192.  if v4 == 0 then goto L46619c;
  #L466196.  v1:= v1 ^| 1;
  #L46619a.  goto L466168;
  #L46619c.  call temp:= `isDirect`(v3) @signature `Ljava/nio/ByteBuffer;.isDirect:()Z` @kind virtual;
  #L4661a2.  v3:= temp;
  #L4661a4.  if v3 == 0 then goto L4661ae;
  #L4661a8.  v1:= v1 ^| 2;
  #L4661ac.  goto L466168;
  #L4661ae.  v1:= v1 ^| 4;
  #L4661b2.  goto L466168;
  #L4661b4.  v0:= 2I;
  #L4661b6.  if v1 != v0 then goto L4661c8;
  #L4661ba.  v0:= new `com.google.crypto.tink.shaded.protobuf.CodedInputStream$c`;
  #L4661be.  v1:= 0I;
  #L4661c0.  call `<init>`(v0, v5, v2, v6, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$c;.<init>:(Ljava/lang/Iterable;IZLcom/google/crypto/tink/shaded/protobuf/CodedInputStream$a;)V` @kind direct;
  #L4661c6.  return v0 @kind object;
  #L4661c8.  v6:= new `com.google.crypto.tink.shaded.protobuf.p`;
  #L4661cc.  call `<init>`(v6, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L4661d2.  call temp:= `newInstance`(v6) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:(Ljava/io/InputStream;)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L4661d8.  v5:= temp @kind object;
  #L4661da.  return v5 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `b`(`java.nio.ByteBuffer` v3 @kind object, `boolean` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.b:(Ljava/nio/ByteBuffer;Z)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L466208.  call temp:= `hasArray`(v3) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L46620e.  v0:= temp;
  #L466210.  if v0 == 0 then goto L466240;
  #L466214.  call temp:= `array`(v3) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L46621a.  v0:= temp @kind object;
  #L46621c.  call temp:= `arrayOffset`(v3) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L466222.  v1:= temp;
  #L466224.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L46622a.  v2:= temp;
  #L46622c.  v1:= v1 + v2 @kind int;
  #L46622e.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L466234.  v3:= temp;
  #L466236.  call temp:= `c`(v0, v1, v3, v4) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.c:([BIIZ)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L46623c.  v3:= temp @kind object;
  #L46623e.  return v3 @kind object;
  #L466240.  call temp:= `isDirect`(v3) @signature `Ljava/nio/ByteBuffer;.isDirect:()Z` @kind virtual;
  #L466246.  v0:= temp;
  #L466248.  if v0 == 0 then goto L466266;
  #L46624c.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.e:()Z` @kind static;
  #L466252.  v0:= temp;
  #L466254.  if v0 == 0 then goto L466266;
  #L466258.  v0:= new `com.google.crypto.tink.shaded.protobuf.CodedInputStream$e`;
  #L46625c.  v1:= 0I;
  #L46625e.  call `<init>`(v0, v3, v4, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.<init>:(Ljava/nio/ByteBuffer;ZLcom/google/crypto/tink/shaded/protobuf/CodedInputStream$a;)V` @kind direct;
  #L466264.  return v0 @kind object;
  #L466266.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L46626c.  v4:= temp;
  #L46626e.  v0:= new `byte`[v4];
  #L466272.  call temp:= `duplicate`(v3) @signature `Ljava/nio/ByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L466278.  v3:= temp @kind object;
  #L46627a.  call temp:= `get`(v3, v0) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L466280.  v3:= 0I;
  #L466282.  v1:= 1I;
  #L466284.  call temp:= `c`(v0, v3, v4, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.c:([BIIZ)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L46628a.  v3:= temp @kind object;
  #L46628c.  return v3 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `c`(`byte`[] v7 @kind object, `int` v8 , `int` v9 , `boolean` v10 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.c:([BIIZ)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L466070.  v6:= new `com.google.crypto.tink.shaded.protobuf.CodedInputStream$b`;
  #L466074.  v5:= 0I;
  #L466076.  v0:= v6 @kind object;
  #L466078.  v1:= v7 @kind object;
  #L46607a.  v2:= v8;
  #L46607c.  v3:= v9;
  #L46607e.  v4:= v10;
  #L466080.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$b;.<init>:([BIIZLcom/google/crypto/tink/shaded/protobuf/CodedInputStream$a;)V` @kind direct;
  #L466086.  call temp:= `pushLimit`(v6, v9) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$b;.pushLimit:(I)I` @kind virtual;
  #L46608c.  return v6 @kind object;
  #L46608e.  v7:= Exception @type ^`com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @kind object;
  #L466090.  v8:= new `java.lang.IllegalArgumentException`;
  #L466094.  call `<init>`(v8, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L46609a.  throw v8;
  catch `com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException` @[L466086..L46608c] goto L46608e;
}
procedure `int` `decodeZigZag32`(`int` v1 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.decodeZigZag32:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4662a0.  v0:= v1 ^>> 1;
  #L4662a4.  v1:= v1 ^& 1;
  #L4662a8.  v1:= -v1 @kind int;
  #L4662aa.  v1:= v1 ^~ v0 @kind int;
  #L4662ac.  return v1;
}
procedure `long` `decodeZigZag64`(`long` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.decodeZigZag64:(J)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4663e8.  v0:= 1I;
  #L4663ea.  v0:= v4 ^>> v0 @kind long;
  #L4663ee.  v2:= 1L;
  #L4663f2.  v4:= v4 ^& v2 @kind long;
  #L4663f4.  v4:= -v4 @kind long;
  #L4663f6.  v4:= v4 ^~ v0 @kind long;
  #L4663f8.  return v4 @kind wide;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newInstance`(`java.io.InputStream` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:(Ljava/io/InputStream;)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4660bc.  v0:= 4096I;
  #L4660c0.  call temp:= `newInstance`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:(Ljava/io/InputStream;I)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L4660c6.  v1:= temp @kind object;
  #L4660c8.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newInstance`(`java.io.InputStream` v2 @kind object, `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:(Ljava/io/InputStream;I)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4660dc.  if v3 <= 0 then goto L466100;
  #L4660e0.  if v2 != 0 then goto L4660f2;
  #L4660e4.  v2:= `@@com.google.crypto.tink.shaded.protobuf.Internal.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L4660e8.  call temp:= `newInstance`(v2) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:([B)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L4660ee.  v2:= temp @kind object;
  #L4660f0.  return v2 @kind object;
  #L4660f2.  v0:= new `com.google.crypto.tink.shaded.protobuf.CodedInputStream$d`;
  #L4660f6.  v1:= 0I;
  #L4660f8.  call `<init>`(v0, v2, v3, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$d;.<init>:(Ljava/io/InputStream;ILcom/google/crypto/tink/shaded/protobuf/CodedInputStream$a;)V` @kind direct;
  #L4660fe.  return v0 @kind object;
  #L466100.  v2:= new `java.lang.IllegalArgumentException`;
  #L466104.  v3:= "bufferSize must be > 0" @kind object;
  #L466108.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46610e.  throw v2;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newInstance`(`java.lang.Iterable` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:(Ljava/lang/Iterable;)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L466120.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream$e;.e:()Z` @kind static;
  #L466126.  v0:= temp;
  #L466128.  if v0 != 0 then goto L466140;
  #L46612c.  v0:= new `com.google.crypto.tink.shaded.protobuf.p`;
  #L466130.  call `<init>`(v0, v1) @signature `Lcom/google/crypto/tink/shaded/protobuf/p;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L466136.  call temp:= `newInstance`(v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:(Ljava/io/InputStream;)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L46613c.  v1:= temp @kind object;
  #L46613e.  return v1 @kind object;
  #L466140.  v0:= 0I;
  #L466142.  call temp:= `a`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.a:(Ljava/lang/Iterable;Z)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L466148.  v1:= temp @kind object;
  #L46614a.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newInstance`(`java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:(Ljava/nio/ByteBuffer;)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4661ec.  v0:= 0I;
  #L4661ee.  call temp:= `b`(v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.b:(Ljava/nio/ByteBuffer;Z)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L4661f4.  v1:= temp @kind object;
  #L4661f6.  return v1 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newInstance`(`byte`[] v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:([B)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L466034.  v0:= length @variable v2;
  #L466036.  v1:= 0I;
  #L466038.  call temp:= `newInstance`(v2, v1, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:([BII)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L46603e.  v2:= temp @kind object;
  #L466040.  return v2 @kind object;
}
procedure `com.google.crypto.tink.shaded.protobuf.CodedInputStream` `newInstance`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.newInstance:([BII)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L466054.  v0:= 0I;
  #L466056.  call temp:= `c`(v1, v2, v3, v0) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.c:([BIIZ)Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;` @kind static;
  #L46605c.  v1:= temp @kind object;
  #L46605e.  return v1 @kind object;
}
procedure `int` `readRawVarint32`(`int` v3 , `java.io.InputStream` v4 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readRawVarint32:(ILjava/io/InputStream;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4662c0.  v0:= v3 ^& 128;
  #L4662c4.  if v0 != 0 then goto L4662ca;
  #L4662c8.  return v3;
  #L4662ca.  v3:= v3 ^& 127;
  #L4662ce.  v0:= 7I;
  #L4662d0.  v1:= 32I;
  #L4662d4.  v2:= -1I;
  #L4662d6.  if v0 >= v1 then goto L466308;
  #L4662da.  call temp:= `read`(v4) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L4662e0.  v1:= temp;
  #L4662e2.  if v1 == v2 then goto L4662fe;
  #L4662e6.  v2:= v1 ^& 127;
  #L4662ea.  v2:= v2 ^< v0 @kind int;
  #L4662ec.  v3:= v3 ^| v2 @kind int;
  #L4662ee.  v1:= v1 ^& 128;
  #L4662f2.  if v1 != 0 then goto L4662f8;
  #L4662f6.  return v3;
  #L4662f8.  v0:= v0 + 7;
  #L4662fc.  goto L4662d0;
  #L4662fe.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L466304.  v3:= temp @kind object;
  #L466306.  throw v3;
  #L466308.  v1:= 64I;
  #L46630c.  if v0 >= v1 then goto L466336;
  #L466310.  call temp:= `read`(v4) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L466316.  v1:= temp;
  #L466318.  if v1 == v2 then goto L46632c;
  #L46631c.  v1:= v1 ^& 128;
  #L466320.  if v1 != 0 then goto L466326;
  #L466324.  return v3;
  #L466326.  v0:= v0 + 7;
  #L46632a.  goto L466308;
  #L46632c.  call temp:= `j`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.j:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L466332.  v3:= temp @kind object;
  #L466334.  throw v3;
  #L466336.  call temp:= `e`() @signature `Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;.e:()Lcom/google/crypto/tink/shaded/protobuf/InvalidProtocolBufferException;` @kind static;
  #L46633c.  v3:= temp @kind object;
  #L46633e.  throw v3;
}
procedure `void` `checkLastTagWas`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.checkLastTagWas:(I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `enableAliasing`(`boolean` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.enableAliasing:(Z)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getBytesUntilLimit`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.getBytesUntilLimit:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getLastTag`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.getLastTag:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getTotalBytesRead`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.getTotalBytesRead:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isAtEnd`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.isAtEnd:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `popLimit`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.popLimit:(I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `pushLimit`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.pushLimit:(I)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `readBool`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readBool:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `readByteArray`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readByteArray:()[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.nio.ByteBuffer` `readByteBuffer`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.crypto.tink.shaded.protobuf.ByteString` `readBytes`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readBytes:()Lcom/google/crypto/tink/shaded/protobuf/ByteString;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `double` `readDouble`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readDouble:()D` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readEnum`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readEnum:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readFixed32`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readFixed32:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `readFixed64`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readFixed64:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `float` `readFloat`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readFloat:()F` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `readGroup`(`int` v0 , `com.google.crypto.tink.shaded.protobuf.Parser` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readGroup:(ILcom/google/crypto/tink/shaded/protobuf/Parser;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `readGroup`(`int` v0 , `com.google.crypto.tink.shaded.protobuf.MessageLite$Builder` v1 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v2 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readGroup:(ILcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readInt32`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readInt32:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `readInt64`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readInt64:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.crypto.tink.shaded.protobuf.MessageLite` `readMessage`(`com.google.crypto.tink.shaded.protobuf.Parser` v0 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readMessage:(Lcom/google/crypto/tink/shaded/protobuf/Parser;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)Lcom/google/crypto/tink/shaded/protobuf/MessageLite;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `readMessage`(`com.google.crypto.tink.shaded.protobuf.MessageLite$Builder` v0 @kind object, `com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readMessage:(Lcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;Lcom/google/crypto/tink/shaded/protobuf/ExtensionRegistryLite;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte` `readRawByte`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readRawByte:()B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `readRawBytes`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readRawBytes:(I)[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readRawLittleEndian32`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readRawLittleEndian32:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `readRawLittleEndian64`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readRawLittleEndian64:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readRawVarint32`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readRawVarint32:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `readRawVarint64`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readRawVarint64:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readSFixed32`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readSFixed32:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `readSFixed64`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readSFixed64:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readSInt32`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readSInt32:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `readSInt64`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readSInt64:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `readString`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readString:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `readStringRequireUtf8`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readStringRequireUtf8:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readTag`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readTag:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `readUInt32`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readUInt32:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `readUInt64`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readUInt64:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `readUnknownGroup`(`int` v0 , `com.google.crypto.tink.shaded.protobuf.MessageLite$Builder` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.readUnknownGroup:(ILcom/google/crypto/tink/shaded/protobuf/MessageLite$Builder;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `resetSizeCounter`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.resetSizeCounter:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `setRecursionLimit`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream` v3 @kind this, `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.setRecursionLimit:(I)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L466350.  if v4 < 0 then goto L46635e;
  #L466354.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @type ^`int`;
  #L466358.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.b` @type ^`int` := v4;
  #L46635c.  return v0;
  #L46635e.  v0:= new `java.lang.IllegalArgumentException`;
  #L466362.  v1:= new `java.lang.StringBuilder`;
  #L466366.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L46636c.  v2:= "Recursion limit cannot be negative: " @kind object;
  #L466370.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L466376.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L46637c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L466382.  v4:= temp @kind object;
  #L466384.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L46638a.  throw v0;
}
procedure `int` `setSizeLimit`(`com.google.crypto.tink.shaded.protobuf.CodedInputStream` v3 @kind this, `int` v4 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.setSizeLimit:(I)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L46639c.  if v4 < 0 then goto L4663aa;
  #L4663a0.  v0:= v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.c` @type ^`int`;
  #L4663a4.  v3.`com.google.crypto.tink.shaded.protobuf.CodedInputStream.c` @type ^`int` := v4;
  #L4663a8.  return v0;
  #L4663aa.  v0:= new `java.lang.IllegalArgumentException`;
  #L4663ae.  v1:= new `java.lang.StringBuilder`;
  #L4663b2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4663b8.  v2:= "Size limit cannot be negative: " @kind object;
  #L4663bc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4663c2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4663c8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4663ce.  v4:= temp @kind object;
  #L4663d0.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4663d6.  throw v0;
}
procedure `boolean` `skipField`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.skipField:(I)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `skipField`(`int` v0 , `com.google.crypto.tink.shaded.protobuf.CodedOutputStream` v1 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.skipField:(ILcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `skipMessage`() @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.skipMessage:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `skipMessage`(`com.google.crypto.tink.shaded.protobuf.CodedOutputStream` v0 @kind object) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.skipMessage:(Lcom/google/crypto/tink/shaded/protobuf/CodedOutputStream;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `skipRawBytes`(`int` v0 ) @signature `Lcom/google/crypto/tink/shaded/protobuf/CodedInputStream;.skipRawBytes:(I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
